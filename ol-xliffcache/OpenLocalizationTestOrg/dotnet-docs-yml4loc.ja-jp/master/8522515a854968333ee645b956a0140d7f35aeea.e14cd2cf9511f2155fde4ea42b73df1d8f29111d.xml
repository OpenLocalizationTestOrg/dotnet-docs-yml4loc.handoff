{"nodes":[{"content":"Represents a window or dialog box that makes up an application's user interface.","nodes":[{"pos":[0,80],"content":"Represents a window or dialog box that makes up an application's user interface.","nodes":[{"content":"Represents a window or dialog box that makes up an application's user interface.","pos":[0,80]}]}],"pos":[9058,9139],"yaml":true},{"content":"A <xref:System.Windows.Forms.Form> is a representation of any window displayed in your application. The <xref:System.Windows.Forms.Form> class can be used to create standard, tool, borderless, and floating windows. You can also use the <xref:System.Windows.Forms.Form> class to create modal windows such as a dialog box. A special kind of form, the multiple-document interface (MDI) form, can contain other forms called MDI child forms. An MDI form is created by setting the <xref:System.Windows.Forms.Form.IsMdiContainer%2A> property to `true`. MDI child forms are created by setting the <xref:System.Windows.Forms.Form.MdiParent%2A> property to the MDI parent form that will contain the child form.  \n  \n Using the properties available in the <xref:System.Windows.Forms.Form> class, you can determine the appearance, size, color, and window management features of the window or dialog box you are creating. The <xref:System.Windows.Forms.Control.Text%2A> property allows you to specify the caption of the window in the title bar. The <xref:System.Windows.Forms.Form.Size%2A> and <xref:System.Windows.Forms.Form.DesktopLocation%2A> properties allow you to define the size and position of the window when it is displayed. You can use the <xref:System.Windows.Forms.Control.ForeColor%2A> color property to change the default foreground color of all controls placed on the form. The <xref:System.Windows.Forms.Form.FormBorderStyle%2A>, <xref:System.Windows.Forms.Form.MinimizeBox%2A>, and <xref:System.Windows.Forms.Form.MaximizeBox%2A> properties allow you to control whether the form can be minimized, maximized, or resized at run time.  \n  \n In addition to properties, you can use the methods of the class to manipulate a form. For example, you can use the <xref:System.Windows.Forms.Form.ShowDialog%2A> method to show a form as a modal dialog box. You can use the <xref:System.Windows.Forms.Form.SetDesktopLocation%2A> method to position the form on the desktop.  \n  \n The events of the <xref:System.Windows.Forms.Form> class allow you to respond to actions performed on the form. You can use the <xref:System.Windows.Forms.Form.Activated> event to perform operations such as updating the data displayed in the controls of the form when the form is activated.  \n  \n You can use a form as the starting class in your application by placing a method called `Main` in the class. In the `Main` method add code to create and show the form. You will also need to add the `STAThread` attribute to the `Main` method in order for the form to run. When the starting form is closed, the application is also closed.  \n  \n If you set the <xref:System.Windows.Forms.Control.Enabled%2A> property to `false` before the <xref:System.Windows.Forms.Form> is visible (for example, setting <xref:System.Windows.Forms.Control.Enabled%2A> to false in the [!INCLUDE[TLA#tla_visualstu](~/includes/tlasharptla-visualstu-md.md)] designer), the minimize, maximize, close, and system buttons remain enabled. If you set <xref:System.Windows.Forms.Control.Enabled%2A> to `false` after the <xref:System.Windows.Forms.Form> is visible (for example, when the Load event occurs), the buttons are disabled.","nodes":[{"pos":[0,700],"content":"A <xref:System.Windows.Forms.Form> is a representation of any window displayed in your application. The <xref:System.Windows.Forms.Form> class can be used to create standard, tool, borderless, and floating windows. You can also use the <xref:System.Windows.Forms.Form> class to create modal windows such as a dialog box. A special kind of form, the multiple-document interface (MDI) form, can contain other forms called MDI child forms. An MDI form is created by setting the <xref:System.Windows.Forms.Form.IsMdiContainer%2A> property to `true`. MDI child forms are created by setting the <xref:System.Windows.Forms.Form.MdiParent%2A> property to the MDI parent form that will contain the child form.","nodes":[{"content":"A <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Form&gt;</ph> is a representation of any window displayed in your application.","pos":[0,99],"source":"A <xref:System.Windows.Forms.Form> is a representation of any window displayed in your application."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Form&gt;</ph> class can be used to create standard, tool, borderless, and floating windows.","pos":[100,214],"source":" The <xref:System.Windows.Forms.Form> class can be used to create standard, tool, borderless, and floating windows."},{"content":"You can also use the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Form&gt;</ph> class to create modal windows such as a dialog box.","pos":[215,320],"source":" You can also use the <xref:System.Windows.Forms.Form> class to create modal windows such as a dialog box."},{"content":"A special kind of form, the multiple-document interface (MDI) form, can contain other forms called MDI child forms.","pos":[321,436]},{"content":"An MDI form is created by setting the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Form.IsMdiContainer%2A&gt;</ph> property to <ph id=\"ph2\">`true`</ph>.","pos":[437,545],"source":" An MDI form is created by setting the <xref:System.Windows.Forms.Form.IsMdiContainer%2A> property to `true`."},{"content":"MDI child forms are created by setting the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Form.MdiParent%2A&gt;</ph> property to the MDI parent form that will contain the child form.","pos":[546,700],"source":" MDI child forms are created by setting the <xref:System.Windows.Forms.Form.MdiParent%2A> property to the MDI parent form that will contain the child form."}]},{"pos":[707,1636],"content":"Using the properties available in the <xref:System.Windows.Forms.Form> class, you can determine the appearance, size, color, and window management features of the window or dialog box you are creating. The <xref:System.Windows.Forms.Control.Text%2A> property allows you to specify the caption of the window in the title bar. The <xref:System.Windows.Forms.Form.Size%2A> and <xref:System.Windows.Forms.Form.DesktopLocation%2A> properties allow you to define the size and position of the window when it is displayed. You can use the <xref:System.Windows.Forms.Control.ForeColor%2A> color property to change the default foreground color of all controls placed on the form. The <xref:System.Windows.Forms.Form.FormBorderStyle%2A>, <xref:System.Windows.Forms.Form.MinimizeBox%2A>, and <xref:System.Windows.Forms.Form.MaximizeBox%2A> properties allow you to control whether the form can be minimized, maximized, or resized at run time.","nodes":[{"content":"Using the properties available in the <xref:System.Windows.Forms.Form> class, you can determine the appearance, size, color, and window management features of the window or dialog box you are creating. The <xref:System.Windows.Forms.Control.Text%2A> property allows you to specify the caption of the window in the title bar. The <xref:System.Windows.Forms.Form.Size%2A> and <xref:System.Windows.Forms.Form.DesktopLocation%2A> properties allow you to define the size and position of the window when it is displayed. You can use the <xref:System.Windows.Forms.Control.ForeColor%2A> color property to change the default foreground color of all controls placed on the form. The <xref:System.Windows.Forms.Form.FormBorderStyle%2A>, <xref:System.Windows.Forms.Form.MinimizeBox%2A>, and <xref:System.Windows.Forms.Form.MaximizeBox%2A> properties allow you to control whether the form can be minimized, maximized, or resized at run time.","pos":[0,929],"nodes":[{"content":"Using the properties available in the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Form&gt;</ph> class, you can determine the appearance, size, color, and window management features of the window or dialog box you are creating.","pos":[0,201],"source":"Using the properties available in the <xref:System.Windows.Forms.Form> class, you can determine the appearance, size, color, and window management features of the window or dialog box you are creating."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.Text%2A&gt;</ph> property allows you to specify the caption of the window in the title bar.","pos":[202,324],"source":" The <xref:System.Windows.Forms.Control.Text%2A> property allows you to specify the caption of the window in the title bar."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Form.Size%2A&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Form.DesktopLocation%2A&gt;</ph> properties allow you to define the size and position of the window when it is displayed.","pos":[325,514],"source":" The <xref:System.Windows.Forms.Form.Size%2A> and <xref:System.Windows.Forms.Form.DesktopLocation%2A> properties allow you to define the size and position of the window when it is displayed."},{"content":"You can use the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.ForeColor%2A&gt;</ph> color property to change the default foreground color of all controls placed on the form.","pos":[515,669],"source":" You can use the <xref:System.Windows.Forms.Control.ForeColor%2A> color property to change the default foreground color of all controls placed on the form."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Form.FormBorderStyle%2A&gt;</ph>, <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Form.MinimizeBox%2A&gt;</ph>, and <ph id=\"ph3\">&lt;xref:System.Windows.Forms.Form.MaximizeBox%2A&gt;</ph> properties allow you to control whether the form can be minimized, maximized, or resized at run time.","pos":[670,929],"source":" The <xref:System.Windows.Forms.Form.FormBorderStyle%2A>, <xref:System.Windows.Forms.Form.MinimizeBox%2A>, and <xref:System.Windows.Forms.Form.MaximizeBox%2A> properties allow you to control whether the form can be minimized, maximized, or resized at run time."}]}]},{"pos":[1643,1964],"content":"In addition to properties, you can use the methods of the class to manipulate a form. For example, you can use the <xref:System.Windows.Forms.Form.ShowDialog%2A> method to show a form as a modal dialog box. You can use the <xref:System.Windows.Forms.Form.SetDesktopLocation%2A> method to position the form on the desktop.","nodes":[{"content":"In addition to properties, you can use the methods of the class to manipulate a form. For example, you can use the <xref:System.Windows.Forms.Form.ShowDialog%2A> method to show a form as a modal dialog box. You can use the <xref:System.Windows.Forms.Form.SetDesktopLocation%2A> method to position the form on the desktop.","pos":[0,321],"nodes":[{"content":"In addition to properties, you can use the methods of the class to manipulate a form.","pos":[0,85]},{"content":"For example, you can use the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Form.ShowDialog%2A&gt;</ph> method to show a form as a modal dialog box.","pos":[86,206],"source":" For example, you can use the <xref:System.Windows.Forms.Form.ShowDialog%2A> method to show a form as a modal dialog box."},{"content":"You can use the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Form.SetDesktopLocation%2A&gt;</ph> method to position the form on the desktop.","pos":[207,321],"source":" You can use the <xref:System.Windows.Forms.Form.SetDesktopLocation%2A> method to position the form on the desktop."}]}]},{"pos":[1971,2261],"content":"The events of the <xref:System.Windows.Forms.Form> class allow you to respond to actions performed on the form. You can use the <xref:System.Windows.Forms.Form.Activated> event to perform operations such as updating the data displayed in the controls of the form when the form is activated.","nodes":[{"content":"The events of the <xref:System.Windows.Forms.Form> class allow you to respond to actions performed on the form. You can use the <xref:System.Windows.Forms.Form.Activated> event to perform operations such as updating the data displayed in the controls of the form when the form is activated.","pos":[0,290],"nodes":[{"content":"The events of the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Form&gt;</ph> class allow you to respond to actions performed on the form.","pos":[0,111],"source":"The events of the <xref:System.Windows.Forms.Form> class allow you to respond to actions performed on the form."},{"content":"You can use the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Form.Activated&gt;</ph> event to perform operations such as updating the data displayed in the controls of the form when the form is activated.","pos":[112,290],"source":" You can use the <xref:System.Windows.Forms.Form.Activated> event to perform operations such as updating the data displayed in the controls of the form when the form is activated."}]}]},{"pos":[2268,2604],"content":"You can use a form as the starting class in your application by placing a method called `Main` in the class. In the `Main` method add code to create and show the form. You will also need to add the `STAThread` attribute to the `Main` method in order for the form to run. When the starting form is closed, the application is also closed.","nodes":[{"content":"You can use a form as the starting class in your application by placing a method called <ph id=\"ph1\">`Main`</ph> in the class.","pos":[0,108],"source":"You can use a form as the starting class in your application by placing a method called `Main` in the class."},{"content":"In the <ph id=\"ph1\">`Main`</ph> method add code to create and show the form.","pos":[109,167],"source":" In the `Main` method add code to create and show the form."},{"content":"You will also need to add the <ph id=\"ph1\">`STAThread`</ph> attribute to the <ph id=\"ph2\">`Main`</ph> method in order for the form to run.","pos":[168,270],"source":" You will also need to add the `STAThread` attribute to the `Main` method in order for the form to run."},{"content":"When the starting form is closed, the application is also closed.","pos":[271,336]}]},{"pos":[2611,3171],"content":"If you set the <xref:System.Windows.Forms.Control.Enabled%2A> property to `false` before the <xref:System.Windows.Forms.Form> is visible (for example, setting <xref:System.Windows.Forms.Control.Enabled%2A> to false in the [!INCLUDE[TLA#tla_visualstu](~/includes/tlasharptla-visualstu-md.md)] designer), the minimize, maximize, close, and system buttons remain enabled. If you set <xref:System.Windows.Forms.Control.Enabled%2A> to `false` after the <xref:System.Windows.Forms.Form> is visible (for example, when the Load event occurs), the buttons are disabled.","nodes":[{"content":"If you set the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.Enabled%2A&gt;</ph> property to <ph id=\"ph2\">`false`</ph> before the <ph id=\"ph3\">&lt;xref:System.Windows.Forms.Form&gt;</ph> is visible (for example, setting <ph id=\"ph4\">&lt;xref:System.Windows.Forms.Control.Enabled%2A&gt;</ph> to false in the <ph id=\"ph5\">[!INCLUDE[TLA#tla_visualstu](~/includes/tlasharptla-visualstu-md.md)]</ph> designer), the minimize, maximize, close, and system buttons remain enabled.","pos":[0,368],"source":"If you set the <xref:System.Windows.Forms.Control.Enabled%2A> property to `false` before the <xref:System.Windows.Forms.Form> is visible (for example, setting <xref:System.Windows.Forms.Control.Enabled%2A> to false in the [!INCLUDE[TLA#tla_visualstu](~/includes/tlasharptla-visualstu-md.md)] designer), the minimize, maximize, close, and system buttons remain enabled."},{"content":"If you set <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.Enabled%2A&gt;</ph> to <ph id=\"ph2\">`false`</ph> after the <ph id=\"ph3\">&lt;xref:System.Windows.Forms.Form&gt;</ph> is visible (for example, when the Load event occurs), the buttons are disabled.","pos":[369,560],"source":" If you set <xref:System.Windows.Forms.Control.Enabled%2A> to `false` after the <xref:System.Windows.Forms.Form> is visible (for example, when the Load event occurs), the buttons are disabled."}]}],"pos":[9150,12334],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.Windows.Forms.Form\"></xref> class.","nodes":[{"pos":[0,87],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.Form\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.Windows.Forms.Form\"></xref> class."}],"pos":[38993,39081],"yaml":true},{"content":"The default size of a form is 300 pixels in height and 300 pixels in width.","nodes":[{"pos":[0,75],"content":"The default size of a form is 300 pixels in height and 300 pixels in width.","nodes":[{"content":"The default size of a form is 300 pixels in height and 300 pixels in width.","pos":[0,75]}]}],"pos":[39092,39168],"yaml":true,"extradata":"MT"},{"content":"Gets or sets the button on the form that is clicked when the user presses the ENTER key.","nodes":[{"pos":[0,88],"content":"Gets or sets the button on the form that is clicked when the user presses the ENTER key.","nodes":[{"content":"Gets or sets the button on the form that is clicked when the user presses the ENTER key.","pos":[0,88]}]}],"pos":[41614,41703],"yaml":true},{"content":"This property enables you to designate a default action to occur when the user presses the ENTER key in your application. The button assigned to this property must be an <xref:System.Windows.Forms.IButtonControl> that is on the current form or located within a container on the current form.  \n  \n You can use this property to allow the user to quickly navigate a simple form by allowing them to simply press the ENTER key when they are finished instead of manually clicking the accept button with their mouse.  \n  \n The accept button might not be activated if the currently selected control on the form intercepts the ENTER key and processes it. For example, a multiline text box control allows the ENTER key to be pressed when it is selected to insert a new line character in the control.","nodes":[{"pos":[0,291],"content":"This property enables you to designate a default action to occur when the user presses the ENTER key in your application. The button assigned to this property must be an <xref:System.Windows.Forms.IButtonControl> that is on the current form or located within a container on the current form.","nodes":[{"content":"This property enables you to designate a default action to occur when the user presses the ENTER key in your application. The button assigned to this property must be an <xref:System.Windows.Forms.IButtonControl> that is on the current form or located within a container on the current form.","pos":[0,291],"nodes":[{"content":"This property enables you to designate a default action to occur when the user presses the ENTER key in your application.","pos":[0,121]},{"content":"The button assigned to this property must be an <ph id=\"ph1\">&lt;xref:System.Windows.Forms.IButtonControl&gt;</ph> that is on the current form or located within a container on the current form.","pos":[122,291],"source":" The button assigned to this property must be an <xref:System.Windows.Forms.IButtonControl> that is on the current form or located within a container on the current form."}]}]},{"pos":[298,510],"content":"You can use this property to allow the user to quickly navigate a simple form by allowing them to simply press the ENTER key when they are finished instead of manually clicking the accept button with their mouse.","nodes":[{"content":"You can use this property to allow the user to quickly navigate a simple form by allowing them to simply press the ENTER key when they are finished instead of manually clicking the accept button with their mouse.","pos":[0,212]}]},{"pos":[517,790],"content":"The accept button might not be activated if the currently selected control on the form intercepts the ENTER key and processes it. For example, a multiline text box control allows the ENTER key to be pressed when it is selected to insert a new line character in the control.","nodes":[{"content":"The accept button might not be activated if the currently selected control on the form intercepts the ENTER key and processes it. For example, a multiline text box control allows the ENTER key to be pressed when it is selected to insert a new line character in the control.","pos":[0,273],"nodes":[{"content":"The accept button might not be activated if the currently selected control on the form intercepts the ENTER key and processes it.","pos":[0,129]},{"content":"For example, a multiline text box control allows the ENTER key to be pressed when it is selected to insert a new line character in the control.","pos":[130,273]}]}]}],"pos":[41714,42511],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.Windows.Forms.IButtonControl\"></xref> that represents the button to use as the accept button for the form.","nodes":[{"pos":[0,128],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.IButtonControl\"&gt;&lt;/xref&gt;</ph> that represents the button to use as the accept button for the form.","source":"An <xref href=\"System.Windows.Forms.IButtonControl\"></xref> that represents the button to use as the accept button for the form."}],"pos":[44118,44247],"yaml":true},{"content":"Activates the form and gives it focus.","nodes":[{"pos":[0,38],"content":"Activates the form and gives it focus.","nodes":[{"content":"Activates the form and gives it focus.","pos":[0,38]}]}],"pos":[45199,45238],"yaml":true},{"content":"Activating a form brings it to the front if this is the active application, or it flashes the window caption if this is not the active application. The form must be visible for this method to have any effect. To determine the active form in an application, use the <xref:System.Windows.Forms.Form.ActiveForm%2A> property or the <xref:System.Windows.Forms.Form.ActiveMdiChild%2A> property if your forms are in a Multiple-document interface (MDI) application.","nodes":[{"pos":[0,457],"content":"Activating a form brings it to the front if this is the active application, or it flashes the window caption if this is not the active application. The form must be visible for this method to have any effect. To determine the active form in an application, use the <xref:System.Windows.Forms.Form.ActiveForm%2A> property or the <xref:System.Windows.Forms.Form.ActiveMdiChild%2A> property if your forms are in a Multiple-document interface (MDI) application.","nodes":[{"content":"Activating a form brings it to the front if this is the active application, or it flashes the window caption if this is not the active application. The form must be visible for this method to have any effect. To determine the active form in an application, use the <xref:System.Windows.Forms.Form.ActiveForm%2A> property or the <xref:System.Windows.Forms.Form.ActiveMdiChild%2A> property if your forms are in a Multiple-document interface (MDI) application.","pos":[0,457],"nodes":[{"content":"Activating a form brings it to the front if this is the active application, or it flashes the window caption if this is not the active application.","pos":[0,147]},{"content":"The form must be visible for this method to have any effect.","pos":[148,208]},{"content":"To determine the active form in an application, use the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Form.ActiveForm%2A&gt;</ph> property or the <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Form.ActiveMdiChild%2A&gt;</ph> property if your forms are in a Multiple-document interface (MDI) application.","pos":[209,457],"source":" To determine the active form in an application, use the <xref:System.Windows.Forms.Form.ActiveForm%2A> property or the <xref:System.Windows.Forms.Form.ActiveMdiChild%2A> property if your forms are in a Multiple-document interface (MDI) application."}]}]}],"pos":[45249,45707],"yaml":true,"extradata":"MT"},{"content":"Occurs when the form is activated in code or by the user.","nodes":[{"pos":[0,57],"content":"Occurs when the form is activated in code or by the user.","nodes":[{"content":"Occurs when the form is activated in code or by the user.","pos":[0,57]}]}],"pos":[47549,47607],"yaml":true},{"content":"> [!NOTE]\n>  When the application is active and has multiple forms, the active form is the form with the input focus. A form that is not visible cannot be the active form. The simplest way to activate a visible form is to click it or use an appropriate keyboard combination.  \n  \n To activate a form at run time using code, call the <xref:System.Windows.Forms.Form.Activate%2A> method. You can use this event for tasks such as updating the contents of the form based on changes made to the form's data when the form was not activated.  \n  \n For more information about handling events, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).","nodes":[{"pos":[2,274],"content":"[!NOTE]\n When the application is active and has multiple forms, the active form is the form with the input focus. A form that is not visible cannot be the active form. The simplest way to activate a visible form is to click it or use an appropriate keyboard combination.","leadings":["","> "],"nodes":[{"content":" When the application is active and has multiple forms, the active form is the form with the input focus. A form that is not visible cannot be the active form. The simplest way to activate a visible form is to click it or use an appropriate keyboard combination.","pos":[8,270],"nodes":[{"content":"When the application is active and has multiple forms, the active form is the form with the input focus.","pos":[1,105]},{"content":"A form that is not visible cannot be the active form.","pos":[106,159]},{"content":"The simplest way to activate a visible form is to click it or use an appropriate keyboard combination.","pos":[160,262]}]}]},{"pos":[281,534],"content":"To activate a form at run time using code, call the <xref:System.Windows.Forms.Form.Activate%2A> method. You can use this event for tasks such as updating the contents of the form based on changes made to the form's data when the form was not activated.","nodes":[{"content":"To activate a form at run time using code, call the <xref:System.Windows.Forms.Form.Activate%2A> method. You can use this event for tasks such as updating the contents of the form based on changes made to the form's data when the form was not activated.","pos":[0,253],"nodes":[{"content":"To activate a form at run time using code, call the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Form.Activate%2A&gt;</ph> method.","pos":[0,104],"source":"To activate a form at run time using code, call the <xref:System.Windows.Forms.Form.Activate%2A> method."},{"content":"You can use this event for tasks such as updating the contents of the form based on changes made to the form's data when the form was not activated.","pos":[105,253]}]}]},{"pos":[541,691],"content":"For more information about handling events, see <bpt id=\"p1\">[</bpt>Handling and Raising Events<ept id=\"p1\">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.","source":"For more information about handling events, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)."}],"pos":[47618,48317],"yaml":true,"extradata":"MT"},{"content":"Activates the MDI child of a form.","nodes":[{"pos":[0,34],"content":"Activates the MDI child of a form.","nodes":[{"content":"Activates the MDI child of a form.","pos":[0,34]}]}],"pos":[50450,50485],"yaml":true},{"content":"If the `form` parameter is already the active MDI child form, then the <xref:System.Windows.Forms.Form.ActivateMdiChild%2A> method simply returns. If `form` is not `null`, then it is set to be the active MDI child form.  \n  \n Whether the `form` parameter is `null` or not, <xref:System.Windows.Forms.Form.ActivateMdiChild%2A> raises the <xref:System.Windows.Forms.Form.MdiChildActivate> event.","nodes":[{"pos":[0,219],"content":"If the `form` parameter is already the active MDI child form, then the <xref:System.Windows.Forms.Form.ActivateMdiChild%2A> method simply returns. If `form` is not `null`, then it is set to be the active MDI child form.","nodes":[{"content":"If the <ph id=\"ph1\">`form`</ph> parameter is already the active MDI child form, then the <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Form.ActivateMdiChild%2A&gt;</ph> method simply returns.","pos":[0,146],"source":"If the `form` parameter is already the active MDI child form, then the <xref:System.Windows.Forms.Form.ActivateMdiChild%2A> method simply returns."},{"content":"If <ph id=\"ph1\">`form`</ph> is not <ph id=\"ph2\">`null`</ph>, then it is set to be the active MDI child form.","pos":[147,219],"source":" If `form` is not `null`, then it is set to be the active MDI child form."}]},{"pos":[226,393],"content":"Whether the <ph id=\"ph1\">`form`</ph> parameter is <ph id=\"ph2\">`null`</ph> or not, <ph id=\"ph3\">&lt;xref:System.Windows.Forms.Form.ActivateMdiChild%2A&gt;</ph> raises the <ph id=\"ph4\">&lt;xref:System.Windows.Forms.Form.MdiChildActivate&gt;</ph> event.","source":"Whether the `form` parameter is `null` or not, <xref:System.Windows.Forms.Form.ActivateMdiChild%2A> raises the <xref:System.Windows.Forms.Form.MdiChildActivate> event."}],"pos":[50496,50894],"yaml":true,"extradata":"MT"},{"content":"The child form to activate.","nodes":[{"pos":[0,27],"content":"The child form to activate.","nodes":[{"content":"The child form to activate.","pos":[0,27]}]}],"pos":[51071,51099],"yaml":true},{"content":"Gets the currently active form for this application.","nodes":[{"pos":[0,52],"content":"Gets the currently active form for this application.","nodes":[{"content":"Gets the currently active form for this application.","pos":[0,52]}]}],"pos":[52046,52099],"yaml":true},{"content":"You can use this method to obtain a reference to the currently active form to perform actions on the form or its controls.  \n  \n If your application is a multiple-document interface (MDI) application, use the <xref:System.Windows.Forms.Form.ActiveMdiChild%2A> property to obtain the currently active MDI child form.","nodes":[{"pos":[0,122],"content":"You can use this method to obtain a reference to the currently active form to perform actions on the form or its controls.","nodes":[{"content":"You can use this method to obtain a reference to the currently active form to perform actions on the form or its controls.","pos":[0,122]}]},{"pos":[129,315],"content":"If your application is a multiple-document interface (MDI) application, use the <xref:System.Windows.Forms.Form.ActiveMdiChild%2A> property to obtain the currently active MDI child form.","nodes":[{"content":"If your application is a multiple-document interface (MDI) application, use the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Form.ActiveMdiChild%2A&gt;</ph> property to obtain the currently active MDI child form.","pos":[0,186],"source":"If your application is a multiple-document interface (MDI) application, use the <xref:System.Windows.Forms.Form.ActiveMdiChild%2A> property to obtain the currently active MDI child form."}]}],"pos":[52110,52430],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Windows.Forms.Form\"></xref> that represents the currently active form, or `null` if there is no active form.","nodes":[{"pos":[0,129],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.Form\"&gt;&lt;/xref&gt;</ph> that represents the currently active form, or <ph id=\"ph2\">`null`</ph> if there is no active form.","source":"A <xref href=\"System.Windows.Forms.Form\"></xref> that represents the currently active form, or `null` if there is no active form."}],"pos":[53296,53426],"yaml":true},{"content":"Gets the currently active multiple-document interface (MDI) child window.","nodes":[{"pos":[0,73],"content":"Gets the currently active multiple-document interface (MDI) child window.","nodes":[{"content":"Gets the currently active multiple-document interface (MDI) child window.","pos":[0,73]}]}],"pos":[54369,54443],"yaml":true},{"content":"You can use this method to determine whether there are any MDI child forms open in your MDI application. You can also use this method to perform operations on an MDI child window from its MDI parent form or from another form that is displayed in your application.  \n  \n If the currently active form is not an MDI child form, you can use the <xref:System.Windows.Forms.Form.ActiveForm%2A> property to obtain a reference to it.","nodes":[{"pos":[0,263],"content":"You can use this method to determine whether there are any MDI child forms open in your MDI application. You can also use this method to perform operations on an MDI child window from its MDI parent form or from another form that is displayed in your application.","nodes":[{"content":"You can use this method to determine whether there are any MDI child forms open in your MDI application. You can also use this method to perform operations on an MDI child window from its MDI parent form or from another form that is displayed in your application.","pos":[0,263],"nodes":[{"content":"You can use this method to determine whether there are any MDI child forms open in your MDI application.","pos":[0,104]},{"content":"You can also use this method to perform operations on an MDI child window from its MDI parent form or from another form that is displayed in your application.","pos":[105,263]}]}]},{"pos":[270,425],"content":"If the currently active form is not an MDI child form, you can use the <xref:System.Windows.Forms.Form.ActiveForm%2A> property to obtain a reference to it.","nodes":[{"content":"If the currently active form is not an MDI child form, you can use the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Form.ActiveForm%2A&gt;</ph> property to obtain a reference to it.","pos":[0,155],"source":"If the currently active form is not an MDI child form, you can use the <xref:System.Windows.Forms.Form.ActiveForm%2A> property to obtain a reference to it."}]}],"pos":[54454,54884],"yaml":true,"extradata":"MT"},{"content":"Returns a <xref href=\"System.Windows.Forms.Form\"></xref> that represents the currently active MDI child window, or `null` if there are currently no child windows present.","nodes":[{"pos":[0,170],"content":"Returns a <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.Form\"&gt;&lt;/xref&gt;</ph> that represents the currently active MDI child window, or <ph id=\"ph2\">`null`</ph> if there are currently no child windows present.","source":"Returns a <xref href=\"System.Windows.Forms.Form\"></xref> that represents the currently active MDI child window, or `null` if there are currently no child windows present."}],"pos":[55936,56107],"yaml":true},{"content":"Adds an owned form to this form.","nodes":[{"pos":[0,32],"content":"Adds an owned form to this form.","nodes":[{"content":"Adds an owned form to this form.","pos":[0,32]}]}],"pos":[57226,57259],"yaml":true},{"content":"The form assigned to the owner form remains owned until the <xref:System.Windows.Forms.Form.RemoveOwnedForm%2A> method is called. You can also make a form owned by another by setting the <xref:System.Windows.Forms.Form.Owner%2A> property with a reference to its owner form.  \n  \n When a form is owned by another form, it is closed or hidden with the owner form. For example, consider a form named `Form2` that is owned by a form named `Form1`. If `Form1` is closed or minimized, `Form2` is also closed or hidden. Owned forms are also never displayed behind their owner form. You can use owned forms for windows such as find and replace windows, which should not be displayed behind the owner form when the owner form is selected.  \n  \n> [!NOTE]\n>  If the form is a multiple-document interface (MDI) parent form, this property returns all forms that are displayed with the exception of any MDI child forms that are currently open. To obtain the MDI child forms opened in an MDI parent form, use the <xref:System.Windows.Forms.Form.MdiChildren%2A> property.","nodes":[{"pos":[0,273],"content":"The form assigned to the owner form remains owned until the <xref:System.Windows.Forms.Form.RemoveOwnedForm%2A> method is called. You can also make a form owned by another by setting the <xref:System.Windows.Forms.Form.Owner%2A> property with a reference to its owner form.","nodes":[{"content":"The form assigned to the owner form remains owned until the <xref:System.Windows.Forms.Form.RemoveOwnedForm%2A> method is called. You can also make a form owned by another by setting the <xref:System.Windows.Forms.Form.Owner%2A> property with a reference to its owner form.","pos":[0,273],"nodes":[{"content":"The form assigned to the owner form remains owned until the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Form.RemoveOwnedForm%2A&gt;</ph> method is called.","pos":[0,129],"source":"The form assigned to the owner form remains owned until the <xref:System.Windows.Forms.Form.RemoveOwnedForm%2A> method is called."},{"content":"You can also make a form owned by another by setting the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Form.Owner%2A&gt;</ph> property with a reference to its owner form.","pos":[130,273],"source":" You can also make a form owned by another by setting the <xref:System.Windows.Forms.Form.Owner%2A> property with a reference to its owner form."}]}]},{"pos":[280,729],"content":"When a form is owned by another form, it is closed or hidden with the owner form. For example, consider a form named `Form2` that is owned by a form named `Form1`. If `Form1` is closed or minimized, `Form2` is also closed or hidden. Owned forms are also never displayed behind their owner form. You can use owned forms for windows such as find and replace windows, which should not be displayed behind the owner form when the owner form is selected.","nodes":[{"content":"When a form is owned by another form, it is closed or hidden with the owner form.","pos":[0,81]},{"content":"For example, consider a form named <ph id=\"ph1\">`Form2`</ph> that is owned by a form named <ph id=\"ph2\">`Form1`</ph>.","pos":[82,163],"source":" For example, consider a form named `Form2` that is owned by a form named `Form1`."},{"content":"If <ph id=\"ph1\">`Form1`</ph> is closed or minimized, <ph id=\"ph2\">`Form2`</ph> is also closed or hidden.","pos":[164,232],"source":" If `Form1` is closed or minimized, `Form2` is also closed or hidden."},{"content":"Owned forms are also never displayed behind their owner form.","pos":[233,294]},{"content":"You can use owned forms for windows such as find and replace windows, which should not be displayed behind the owner form when the owner form is selected.","pos":[295,449]}]},{"pos":[737,1055],"content":"[!NOTE]\n If the form is a multiple-document interface (MDI) parent form, this property returns all forms that are displayed with the exception of any MDI child forms that are currently open. To obtain the MDI child forms opened in an MDI parent form, use the <xref:System.Windows.Forms.Form.MdiChildren%2A> property.","leadings":["","> "],"nodes":[{"content":" If the form is a multiple-document interface (MDI) parent form, this property returns all forms that are displayed with the exception of any MDI child forms that are currently open. To obtain the MDI child forms opened in an MDI parent form, use the <xref:System.Windows.Forms.Form.MdiChildren%2A> property.","pos":[8,316],"nodes":[{"content":"If the form is a multiple-document interface (MDI) parent form, this property returns all forms that are displayed with the exception of any MDI child forms that are currently open.","pos":[1,182]},{"content":"To obtain the MDI child forms opened in an MDI parent form, use the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Form.MdiChildren%2A&gt;</ph> property.","pos":[183,308],"source":" To obtain the MDI child forms opened in an MDI parent form, use the <xref:System.Windows.Forms.Form.MdiChildren%2A> property."}]}]}],"pos":[57270,58333],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.Windows.Forms.Form\"></xref> that this form will own.","nodes":[{"pos":[0,75],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.Form\"&gt;&lt;/xref&gt;</ph> that this form will own.","source":"The <xref href=\"System.Windows.Forms.Form\"></xref> that this form will own."}],"pos":[59254,59330],"yaml":true},{"content":"Adjusts the scroll bars on the container based on the current control positions and the control currently selected.","nodes":[{"pos":[0,115],"content":"Adjusts the scroll bars on the container based on the current control positions and the control currently selected.","nodes":[{"content":"Adjusts the scroll bars on the container based on the current control positions and the control currently selected.","pos":[0,115]}]}],"pos":[60406,60522],"yaml":true},{"content":"`true` to show the scroll bars; otherwise, `false`.","nodes":[{"pos":[0,51],"content":"<ph id=\"ph1\">`true`</ph> to show the scroll bars; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` to show the scroll bars; otherwise, `false`."}],"pos":[60706,60760],"yaml":true},{"content":"Gets or sets a value indicating whether the opacity of the form can be adjusted.","nodes":[{"pos":[0,80],"content":"Gets or sets a value indicating whether the opacity of the form can be adjusted.","nodes":[{"content":"Gets or sets a value indicating whether the opacity of the form can be adjusted.","pos":[0,80]}]}],"pos":[61770,61851],"yaml":true},{"content":"This property is automatically set to `true` if the `Opacity` is changed. When the opacity of a form is set using the `Opacity` property, the form will layer objects on the form. If you set the <xref:System.Windows.Forms.Form.AllowTransparency%2A> property to `false` the form will not be in layered mode which will improve the display performance of the form.","nodes":[{"pos":[0,360],"content":"This property is automatically set to `true` if the `Opacity` is changed. When the opacity of a form is set using the `Opacity` property, the form will layer objects on the form. If you set the <xref:System.Windows.Forms.Form.AllowTransparency%2A> property to `false` the form will not be in layered mode which will improve the display performance of the form.","nodes":[{"content":"This property is automatically set to <ph id=\"ph1\">`true`</ph> if the <ph id=\"ph2\">`Opacity`</ph> is changed.","pos":[0,73],"source":"This property is automatically set to `true` if the `Opacity` is changed."},{"content":"When the opacity of a form is set using the <ph id=\"ph1\">`Opacity`</ph> property, the form will layer objects on the form.","pos":[74,178],"source":" When the opacity of a form is set using the `Opacity` property, the form will layer objects on the form."},{"content":"If you set the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Form.AllowTransparency%2A&gt;</ph> property to <ph id=\"ph2\">`false`</ph> the form will not be in layered mode which will improve the display performance of the form.","pos":[179,360],"source":" If you set the <xref:System.Windows.Forms.Form.AllowTransparency%2A> property to `false` the form will not be in layered mode which will improve the display performance of the form."}]}],"pos":[61862,62223],"yaml":true,"extradata":"MT"},{"content":"`true` if the opacity of the form can be changed; otherwise, `false`.","nodes":[{"pos":[0,69],"content":"<ph id=\"ph1\">`true`</ph> if the opacity of the form can be changed; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the opacity of the form can be changed; otherwise, `false`."}],"pos":[62405,62477],"yaml":true},{"content":"Resizes the form according to the current value of the <xref href=\"System.Windows.Forms.Form.AutoScaleBaseSize\"></xref> property and the size of the current font.","nodes":[{"pos":[0,162],"content":"Resizes the form according to the current value of the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.Form.AutoScaleBaseSize\"&gt;&lt;/xref&gt;</ph> property and the size of the current font.","source":"Resizes the form according to the current value of the <xref href=\"System.Windows.Forms.Form.AutoScaleBaseSize\"></xref> property and the size of the current font."}],"pos":[63530,63693],"yaml":true},{"content":"This method determines the form size using the value of the <xref:System.Windows.Forms.Form.AutoScaleBaseSize%2A> property and the <xref:System.Windows.Forms.Form.Size%2A> value returned by the <xref:System.Windows.Forms.Form.GetAutoScaleSize%2A> method.","nodes":[{"pos":[0,254],"content":"This method determines the form size using the value of the <xref:System.Windows.Forms.Form.AutoScaleBaseSize%2A> property and the <xref:System.Windows.Forms.Form.Size%2A> value returned by the <xref:System.Windows.Forms.Form.GetAutoScaleSize%2A> method.","nodes":[{"content":"This method determines the form size using the value of the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Form.AutoScaleBaseSize%2A&gt;</ph> property and the <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Form.Size%2A&gt;</ph> value returned by the <ph id=\"ph3\">&lt;xref:System.Windows.Forms.Form.GetAutoScaleSize%2A&gt;</ph> method.","pos":[0,254],"source":"This method determines the form size using the value of the <xref:System.Windows.Forms.Form.AutoScaleBaseSize%2A> property and the <xref:System.Windows.Forms.Form.Size%2A> value returned by the <xref:System.Windows.Forms.Form.GetAutoScaleSize%2A> method."}]}],"pos":[63704,63959],"yaml":true,"extradata":"MT"},{"content":"Gets or sets a value indicating whether the form adjusts its size to fit the height of the font used on the form and scales its controls.","nodes":[{"pos":[0,137],"content":"Gets or sets a value indicating whether the form adjusts its size to fit the height of the font used on the form and scales its controls.","nodes":[{"content":"Gets or sets a value indicating whether the form adjusts its size to fit the height of the font used on the form and scales its controls.","pos":[0,137]}]}],"pos":[65184,65322],"yaml":true},{"content":"> [!IMPORTANT]\n>  The <xref:System.Windows.Forms.Form.AutoScale%2A> is obsolete and has been retained for backward compatibility. The non-obsolete alternative is <xref:System.Windows.Forms.ContainerControl.AutoScaleMode%2A?displayProperty=fullName>. For more information about automatic scaling, see [Automatic Scaling in Windows Forms](~/docs/framework/winforms/automatic-scaling-in-windows-forms.md).  \n  \n You can use this property to allow your form and its controls to automatically adjust based on changes in the font. This can be useful in applications where the font might increase or decrease based on the language specified for use by Windows.  \n  \n To obtain the size the form will auto scale to, use the <xref:System.Windows.Forms.Form.AutoScaleBaseSize%2A> property. If you want to determine the size the form will auto scale to based on a specific font, use the <xref:System.Windows.Forms.Form.GetAutoScaleSize%2A> method.","nodes":[{"pos":[2,402],"content":"[!IMPORTANT]\n The <xref:System.Windows.Forms.Form.AutoScale%2A> is obsolete and has been retained for backward compatibility. The non-obsolete alternative is <xref:System.Windows.Forms.ContainerControl.AutoScaleMode%2A?displayProperty=fullName>. For more information about automatic scaling, see [Automatic Scaling in Windows Forms](~/docs/framework/winforms/automatic-scaling-in-windows-forms.md).","leadings":["","> "],"nodes":[{"content":" The <xref:System.Windows.Forms.Form.AutoScale%2A> is obsolete and has been retained for backward compatibility. The non-obsolete alternative is <xref:System.Windows.Forms.ContainerControl.AutoScaleMode%2A?displayProperty=fullName>. For more information about automatic scaling, see [Automatic Scaling in Windows Forms](~/docs/framework/winforms/automatic-scaling-in-windows-forms.md).","pos":[13,398],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Form.AutoScale%2A&gt;</ph> is obsolete and has been retained for backward compatibility.","pos":[1,112],"source":" The <xref:System.Windows.Forms.Form.AutoScale%2A> is obsolete and has been retained for backward compatibility."},{"content":"The non-obsolete alternative is <ph id=\"ph1\">&lt;xref:System.Windows.Forms.ContainerControl.AutoScaleMode%2A?displayProperty=fullName&gt;</ph>.","pos":[113,232],"source":" The non-obsolete alternative is <xref:System.Windows.Forms.ContainerControl.AutoScaleMode%2A?displayProperty=fullName>."},{"content":"For more information about automatic scaling, see <bpt id=\"p1\">[</bpt>Automatic Scaling in Windows Forms<ept id=\"p1\">](~/docs/framework/winforms/automatic-scaling-in-windows-forms.md)</ept>.","pos":[233,385],"source":" For more information about automatic scaling, see [Automatic Scaling in Windows Forms](~/docs/framework/winforms/automatic-scaling-in-windows-forms.md)."}]}]},{"pos":[409,653],"content":"You can use this property to allow your form and its controls to automatically adjust based on changes in the font. This can be useful in applications where the font might increase or decrease based on the language specified for use by Windows.","nodes":[{"content":"You can use this property to allow your form and its controls to automatically adjust based on changes in the font. This can be useful in applications where the font might increase or decrease based on the language specified for use by Windows.","pos":[0,244],"nodes":[{"content":"You can use this property to allow your form and its controls to automatically adjust based on changes in the font.","pos":[0,115]},{"content":"This can be useful in applications where the font might increase or decrease based on the language specified for use by Windows.","pos":[116,244]}]}]},{"pos":[660,936],"content":"To obtain the size the form will auto scale to, use the <xref:System.Windows.Forms.Form.AutoScaleBaseSize%2A> property. If you want to determine the size the form will auto scale to based on a specific font, use the <xref:System.Windows.Forms.Form.GetAutoScaleSize%2A> method.","nodes":[{"content":"To obtain the size the form will auto scale to, use the <xref:System.Windows.Forms.Form.AutoScaleBaseSize%2A> property. If you want to determine the size the form will auto scale to based on a specific font, use the <xref:System.Windows.Forms.Form.GetAutoScaleSize%2A> method.","pos":[0,276],"nodes":[{"content":"To obtain the size the form will auto scale to, use the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Form.AutoScaleBaseSize%2A&gt;</ph> property.","pos":[0,119],"source":"To obtain the size the form will auto scale to, use the <xref:System.Windows.Forms.Form.AutoScaleBaseSize%2A> property."},{"content":"If you want to determine the size the form will auto scale to based on a specific font, use the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Form.GetAutoScaleSize%2A&gt;</ph> method.","pos":[120,276],"source":" If you want to determine the size the form will auto scale to based on a specific font, use the <xref:System.Windows.Forms.Form.GetAutoScaleSize%2A> method."}]}]}],"pos":[65333,66277],"yaml":true,"extradata":"MT"},{"content":"`true` if the form will automatically scale itself and its controls based on the current font assigned to the form; otherwise, `false`. The default is `true`.","nodes":[{"pos":[0,158],"content":"`true` if the form will automatically scale itself and its controls based on the current font assigned to the form; otherwise, `false`. The default is `true`.","nodes":[{"content":"<ph id=\"ph1\">`true`</ph> if the form will automatically scale itself and its controls based on the current font assigned to the form; otherwise, <ph id=\"ph2\">`false`</ph>.","pos":[0,135],"source":"`true` if the form will automatically scale itself and its controls based on the current font assigned to the form; otherwise, `false`."},{"content":"The default is <ph id=\"ph1\">`true`</ph>.","pos":[136,158],"source":" The default is `true`."}]}],"pos":[66600,66761],"yaml":true},{"content":"Gets or sets the base size used for autoscaling of the form.","nodes":[{"pos":[0,60],"content":"Gets or sets the base size used for autoscaling of the form.","nodes":[{"content":"Gets or sets the base size used for autoscaling of the form.","pos":[0,60]}]}],"pos":[67843,67904],"yaml":true},{"content":"> [!IMPORTANT]\n>  This member has been retained for backward compatibility. For more information about automatic scaling, see [Automatic Scaling in Windows Forms](~/docs/framework/winforms/automatic-scaling-in-windows-forms.md).  \n  \n The value of the <xref:System.Windows.Forms.Form.AutoScaleBaseSize%2A> property is used at form-display time to compute the scaling factor for the form. The autoscaling base size is used by the form as a baseline for comparison to the system's font size to determine how much to scale the form when autoscaling is used. If you want to determine the size a form will auto scale to based on a specific font, use the <xref:System.Windows.Forms.Form.GetAutoScaleSize%2A> method.  \n  \n> [!NOTE]\n>  The value of this property is used when the form is initially created. Once the property is set, it cannot be changed.","nodes":[{"pos":[2,228],"content":"[!IMPORTANT]\n This member has been retained for backward compatibility. For more information about automatic scaling, see [Automatic Scaling in Windows Forms](~/docs/framework/winforms/automatic-scaling-in-windows-forms.md).","leadings":["","> "],"nodes":[{"content":" This member has been retained for backward compatibility. For more information about automatic scaling, see [Automatic Scaling in Windows Forms](~/docs/framework/winforms/automatic-scaling-in-windows-forms.md).","pos":[13,224],"nodes":[{"content":"This member has been retained for backward compatibility.","pos":[1,58]},{"content":"For more information about automatic scaling, see <bpt id=\"p1\">[</bpt>Automatic Scaling in Windows Forms<ept id=\"p1\">](~/docs/framework/winforms/automatic-scaling-in-windows-forms.md)</ept>.","pos":[59,211],"source":" For more information about automatic scaling, see [Automatic Scaling in Windows Forms](~/docs/framework/winforms/automatic-scaling-in-windows-forms.md)."}]}]},{"pos":[235,709],"content":"The value of the <xref:System.Windows.Forms.Form.AutoScaleBaseSize%2A> property is used at form-display time to compute the scaling factor for the form. The autoscaling base size is used by the form as a baseline for comparison to the system's font size to determine how much to scale the form when autoscaling is used. If you want to determine the size a form will auto scale to based on a specific font, use the <xref:System.Windows.Forms.Form.GetAutoScaleSize%2A> method.","nodes":[{"content":"The value of the <xref:System.Windows.Forms.Form.AutoScaleBaseSize%2A> property is used at form-display time to compute the scaling factor for the form. The autoscaling base size is used by the form as a baseline for comparison to the system's font size to determine how much to scale the form when autoscaling is used. If you want to determine the size a form will auto scale to based on a specific font, use the <xref:System.Windows.Forms.Form.GetAutoScaleSize%2A> method.","pos":[0,474],"nodes":[{"content":"The value of the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Form.AutoScaleBaseSize%2A&gt;</ph> property is used at form-display time to compute the scaling factor for the form.","pos":[0,152],"source":"The value of the <xref:System.Windows.Forms.Form.AutoScaleBaseSize%2A> property is used at form-display time to compute the scaling factor for the form."},{"content":"The autoscaling base size is used by the form as a baseline for comparison to the system's font size to determine how much to scale the form when autoscaling is used.","pos":[153,319]},{"content":"If you want to determine the size a form will auto scale to based on a specific font, use the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Form.GetAutoScaleSize%2A&gt;</ph> method.","pos":[320,474],"source":" If you want to determine the size a form will auto scale to based on a specific font, use the <xref:System.Windows.Forms.Form.GetAutoScaleSize%2A> method."}]}]},{"pos":[717,846],"content":"[!NOTE]\n The value of this property is used when the form is initially created. Once the property is set, it cannot be changed.","leadings":["","> "],"nodes":[{"content":" The value of this property is used when the form is initially created. Once the property is set, it cannot be changed.","pos":[8,127],"nodes":[{"content":"The value of this property is used when the form is initially created.","pos":[1,71]},{"content":"Once the property is set, it cannot be changed.","pos":[72,119]}]}]}],"pos":[67915,68770],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Drawing.Size\"></xref> that represents the base size that this form uses for autoscaling.","nodes":[{"pos":[0,109],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Drawing.Size\"&gt;&lt;/xref&gt;</ph> that represents the base size that this form uses for autoscaling.","source":"A <xref href=\"System.Drawing.Size\"></xref> that represents the base size that this form uses for autoscaling."}],"pos":[68980,69090],"yaml":true},{"content":"Gets or sets a value indicating whether the form enables autoscrolling.","nodes":[{"pos":[0,71],"content":"Gets or sets a value indicating whether the form enables autoscrolling.","nodes":[{"content":"Gets or sets a value indicating whether the form enables autoscrolling.","pos":[0,71]}]}],"pos":[70103,70175],"yaml":true},{"content":"If this property is set to `true`, scroll bars are displayed on the form if any controls are located outside the form's client region. Additionally, when autoscrolling is on, the client area of the form automatically scrolls to make the control with input focus visible.  \n  \n You can use this property to prevent users from losing the ability to view controls when their video resolution settings are set to a low resolution.","nodes":[{"pos":[0,270],"content":"If this property is set to `true`, scroll bars are displayed on the form if any controls are located outside the form's client region. Additionally, when autoscrolling is on, the client area of the form automatically scrolls to make the control with input focus visible.","nodes":[{"content":"If this property is set to <ph id=\"ph1\">`true`</ph>, scroll bars are displayed on the form if any controls are located outside the form's client region.","pos":[0,134],"source":"If this property is set to `true`, scroll bars are displayed on the form if any controls are located outside the form's client region."},{"content":"Additionally, when autoscrolling is on, the client area of the form automatically scrolls to make the control with input focus visible.","pos":[135,270]}]},{"pos":[277,426],"content":"You can use this property to prevent users from losing the ability to view controls when their video resolution settings are set to a low resolution.","nodes":[{"content":"You can use this property to prevent users from losing the ability to view controls when their video resolution settings are set to a low resolution.","pos":[0,149]}]}],"pos":[70186,70617],"yaml":true,"extradata":"MT"},{"content":"`true` to enable autoscrolling on the form; otherwise, `false`. The default is `false`.","nodes":[{"pos":[0,87],"content":"`true` to enable autoscrolling on the form; otherwise, `false`. The default is `false`.","nodes":[{"content":"<ph id=\"ph1\">`true`</ph> to enable autoscrolling on the form; otherwise, <ph id=\"ph2\">`false`</ph>.","pos":[0,63],"source":"`true` to enable autoscrolling on the form; otherwise, `false`."},{"content":"The default is <ph id=\"ph1\">`false`</ph>.","pos":[64,87],"source":" The default is `false`."}]}],"pos":[71777,71867],"yaml":true},{"content":"Resize the form according to the setting of <xref href=\"System.Windows.Forms.Form.AutoSizeMode\"></xref>.","nodes":[{"pos":[0,104],"content":"Resize the form according to the setting of <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.Form.AutoSizeMode\"&gt;&lt;/xref&gt;</ph>.","source":"Resize the form according to the setting of <xref href=\"System.Windows.Forms.Form.AutoSizeMode\"></xref>."}],"pos":[72813,72918],"yaml":true},{"content":"Use <xref:System.Windows.Forms.Form.AutoSize%2A> to force a form to resize to fit its contents.  \n  \n A form does not automatically resize in the Visual Studio forms designer, regardless of the values of the <xref:System.Windows.Forms.Form.AutoSize%2A> and <xref:System.Windows.Forms.Form.AutoSizeMode%2A> properties. The form correctly resizes itself at run time according to the values of these two properties. By contrast, a custom <xref:System.Windows.Forms.UserControl> automatically resizes itself both at design time and at run time.  \n  \n When using <xref:System.Windows.Forms.Form.AutoSize%2A>, the <xref:System.Windows.Forms.Control.MinimumSize%2A> and <xref:System.Windows.Forms.Control.MaximumSize%2A> properties are respected, but the current value of the <xref:System.Windows.Forms.Control.Size%2A> property is ignored. Using <xref:System.Windows.Forms.Form.AutoSize%2A> and <xref:System.Windows.Forms.Form.AutoSizeMode%2A> also renders the <xref:System.Windows.Forms.Form.AutoScroll%2A> property superfluous, as there is no way to shrink the form to hide its contained controls from view.  \n  \n See the <xref:System.Windows.Forms.AutoSizeMode> enumeration for information on how a form behaves when <xref:System.Windows.Forms.Form.AutoSize%2A> is `true`.","nodes":[{"pos":[0,95],"content":"Use <xref:System.Windows.Forms.Form.AutoSize%2A> to force a form to resize to fit its contents.","nodes":[{"content":"Use <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Form.AutoSize%2A&gt;</ph> to force a form to resize to fit its contents.","pos":[0,95],"source":"Use <xref:System.Windows.Forms.Form.AutoSize%2A> to force a form to resize to fit its contents."}]},{"pos":[102,540],"content":"A form does not automatically resize in the Visual Studio forms designer, regardless of the values of the <xref:System.Windows.Forms.Form.AutoSize%2A> and <xref:System.Windows.Forms.Form.AutoSizeMode%2A> properties. The form correctly resizes itself at run time according to the values of these two properties. By contrast, a custom <xref:System.Windows.Forms.UserControl> automatically resizes itself both at design time and at run time.","nodes":[{"content":"A form does not automatically resize in the Visual Studio forms designer, regardless of the values of the <xref:System.Windows.Forms.Form.AutoSize%2A> and <xref:System.Windows.Forms.Form.AutoSizeMode%2A> properties. The form correctly resizes itself at run time according to the values of these two properties. By contrast, a custom <xref:System.Windows.Forms.UserControl> automatically resizes itself both at design time and at run time.","pos":[0,438],"nodes":[{"content":"A form does not automatically resize in the Visual Studio forms designer, regardless of the values of the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Form.AutoSize%2A&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Form.AutoSizeMode%2A&gt;</ph> properties.","pos":[0,215],"source":"A form does not automatically resize in the Visual Studio forms designer, regardless of the values of the <xref:System.Windows.Forms.Form.AutoSize%2A> and <xref:System.Windows.Forms.Form.AutoSizeMode%2A> properties."},{"content":"The form correctly resizes itself at run time according to the values of these two properties.","pos":[216,310]},{"content":"By contrast, a custom <ph id=\"ph1\">&lt;xref:System.Windows.Forms.UserControl&gt;</ph> automatically resizes itself both at design time and at run time.","pos":[311,438],"source":" By contrast, a custom <xref:System.Windows.Forms.UserControl> automatically resizes itself both at design time and at run time."}]}]},{"pos":[547,1103],"content":"When using <xref:System.Windows.Forms.Form.AutoSize%2A>, the <xref:System.Windows.Forms.Control.MinimumSize%2A> and <xref:System.Windows.Forms.Control.MaximumSize%2A> properties are respected, but the current value of the <xref:System.Windows.Forms.Control.Size%2A> property is ignored. Using <xref:System.Windows.Forms.Form.AutoSize%2A> and <xref:System.Windows.Forms.Form.AutoSizeMode%2A> also renders the <xref:System.Windows.Forms.Form.AutoScroll%2A> property superfluous, as there is no way to shrink the form to hide its contained controls from view.","nodes":[{"content":"When using <xref:System.Windows.Forms.Form.AutoSize%2A>, the <xref:System.Windows.Forms.Control.MinimumSize%2A> and <xref:System.Windows.Forms.Control.MaximumSize%2A> properties are respected, but the current value of the <xref:System.Windows.Forms.Control.Size%2A> property is ignored. Using <xref:System.Windows.Forms.Form.AutoSize%2A> and <xref:System.Windows.Forms.Form.AutoSizeMode%2A> also renders the <xref:System.Windows.Forms.Form.AutoScroll%2A> property superfluous, as there is no way to shrink the form to hide its contained controls from view.","pos":[0,556],"nodes":[{"content":"When using <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Form.AutoSize%2A&gt;</ph>, the <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Control.MinimumSize%2A&gt;</ph> and <ph id=\"ph3\">&lt;xref:System.Windows.Forms.Control.MaximumSize%2A&gt;</ph> properties are respected, but the current value of the <ph id=\"ph4\">&lt;xref:System.Windows.Forms.Control.Size%2A&gt;</ph> property is ignored.","pos":[0,286],"source":"When using <xref:System.Windows.Forms.Form.AutoSize%2A>, the <xref:System.Windows.Forms.Control.MinimumSize%2A> and <xref:System.Windows.Forms.Control.MaximumSize%2A> properties are respected, but the current value of the <xref:System.Windows.Forms.Control.Size%2A> property is ignored."},{"content":"Using <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Form.AutoSize%2A&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Form.AutoSizeMode%2A&gt;</ph> also renders the <ph id=\"ph3\">&lt;xref:System.Windows.Forms.Form.AutoScroll%2A&gt;</ph> property superfluous, as there is no way to shrink the form to hide its contained controls from view.","pos":[287,556],"source":" Using <xref:System.Windows.Forms.Form.AutoSize%2A> and <xref:System.Windows.Forms.Form.AutoSizeMode%2A> also renders the <xref:System.Windows.Forms.Form.AutoScroll%2A> property superfluous, as there is no way to shrink the form to hide its contained controls from view."}]}]},{"pos":[1110,1269],"content":"See the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.AutoSizeMode&gt;</ph> enumeration for information on how a form behaves when <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Form.AutoSize%2A&gt;</ph> is <ph id=\"ph3\">`true`</ph>.","source":"See the <xref:System.Windows.Forms.AutoSizeMode> enumeration for information on how a form behaves when <xref:System.Windows.Forms.Form.AutoSize%2A> is `true`."}],"pos":[72929,74207],"yaml":true,"extradata":"MT"},{"content":"`true` if the form will automatically resize; `false` if it must be manually resized.","nodes":[{"pos":[0,85],"content":"<ph id=\"ph1\">`true`</ph> if the form will automatically resize; <ph id=\"ph2\">`false`</ph> if it must be manually resized.","source":"`true` if the form will automatically resize; `false` if it must be manually resized."}],"pos":[75254,75342],"yaml":true},{"content":"Occurs when the <xref href=\"System.Windows.Forms.Form.AutoSize\"></xref> property changes.","nodes":[{"pos":[0,89],"content":"Occurs when the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.Form.AutoSize\"&gt;&lt;/xref&gt;</ph> property changes.","source":"Occurs when the <xref href=\"System.Windows.Forms.Form.AutoSize\"></xref> property changes."}],"pos":[76373,76463],"yaml":true},{"content":"Gets or sets the mode by which the form automatically resizes itself.","nodes":[{"pos":[0,69],"content":"Gets or sets the mode by which the form automatically resizes itself.","nodes":[{"content":"Gets or sets the mode by which the form automatically resizes itself.","pos":[0,69]}]}],"pos":[77619,77689],"yaml":true},{"content":"Setting the <xref:System.Windows.Forms.Form.AutoSizeMode%2A> property to a new value causes the form to be laid out again.  \n  \n A form does not automatically resize in the Visual Studio forms designer, regardless of the values of the <xref:System.Windows.Forms.Form.AutoSize%2A> and <xref:System.Windows.Forms.Form.AutoSizeMode%2A> properties. The form correctly resizes itself at run time according to the values of these two properties. By contrast, a custom <xref:System.Windows.Forms.UserControl> automatically resizes itself both at design time and at run time.","nodes":[{"pos":[0,122],"content":"Setting the <xref:System.Windows.Forms.Form.AutoSizeMode%2A> property to a new value causes the form to be laid out again.","nodes":[{"content":"Setting the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Form.AutoSizeMode%2A&gt;</ph> property to a new value causes the form to be laid out again.","pos":[0,122],"source":"Setting the <xref:System.Windows.Forms.Form.AutoSizeMode%2A> property to a new value causes the form to be laid out again."}]},{"pos":[129,567],"content":"A form does not automatically resize in the Visual Studio forms designer, regardless of the values of the <xref:System.Windows.Forms.Form.AutoSize%2A> and <xref:System.Windows.Forms.Form.AutoSizeMode%2A> properties. The form correctly resizes itself at run time according to the values of these two properties. By contrast, a custom <xref:System.Windows.Forms.UserControl> automatically resizes itself both at design time and at run time.","nodes":[{"content":"A form does not automatically resize in the Visual Studio forms designer, regardless of the values of the <xref:System.Windows.Forms.Form.AutoSize%2A> and <xref:System.Windows.Forms.Form.AutoSizeMode%2A> properties. The form correctly resizes itself at run time according to the values of these two properties. By contrast, a custom <xref:System.Windows.Forms.UserControl> automatically resizes itself both at design time and at run time.","pos":[0,438],"nodes":[{"content":"A form does not automatically resize in the Visual Studio forms designer, regardless of the values of the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Form.AutoSize%2A&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Form.AutoSizeMode%2A&gt;</ph> properties.","pos":[0,215],"source":"A form does not automatically resize in the Visual Studio forms designer, regardless of the values of the <xref:System.Windows.Forms.Form.AutoSize%2A> and <xref:System.Windows.Forms.Form.AutoSizeMode%2A> properties."},{"content":"The form correctly resizes itself at run time according to the values of these two properties.","pos":[216,310]},{"content":"By contrast, a custom <ph id=\"ph1\">&lt;xref:System.Windows.Forms.UserControl&gt;</ph> automatically resizes itself both at design time and at run time.","pos":[311,438],"source":" By contrast, a custom <xref:System.Windows.Forms.UserControl> automatically resizes itself both at design time and at run time."}]}]}],"pos":[77700,78272],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.Windows.Forms.AutoSizeMode\"></xref> enumerated value. The default is <xref href=\"System.Windows.Forms.AutoSizeMode.GrowOnly\"></xref>.","nodes":[{"pos":[0,155],"content":"An <xref href=\"System.Windows.Forms.AutoSizeMode\"></xref> enumerated value. The default is <xref href=\"System.Windows.Forms.AutoSizeMode.GrowOnly\"></xref>.","nodes":[{"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.AutoSizeMode\"&gt;&lt;/xref&gt;</ph> enumerated value.","pos":[0,75],"source":"An <xref href=\"System.Windows.Forms.AutoSizeMode\"></xref> enumerated value."},{"content":"The default is <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.AutoSizeMode.GrowOnly\"&gt;&lt;/xref&gt;</ph>.","pos":[76,155],"source":" The default is <xref href=\"System.Windows.Forms.AutoSizeMode.GrowOnly\"></xref>."}]}],"pos":[79362,79518],"yaml":true},{"content":"The value is not a valid <xref href=\"System.Windows.Forms.AutoSizeMode\"></xref> value.","nodes":[{"pos":[0,86],"content":"The value is not a valid <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.AutoSizeMode\"&gt;&lt;/xref&gt;</ph> value.","source":"The value is not a valid <xref href=\"System.Windows.Forms.AutoSizeMode\"></xref> value."}],"pos":[79730,79817],"yaml":true},{"content":"Gets or sets a value that indicates whether controls in this container will be automatically validated when the focus changes.","nodes":[{"pos":[0,126],"content":"Gets or sets a value that indicates whether controls in this container will be automatically validated when the focus changes.","nodes":[{"content":"Gets or sets a value that indicates whether controls in this container will be automatically validated when the focus changes.","pos":[0,126]}]}],"pos":[80768,80895],"yaml":true},{"content":"An <xref href=\"System.Windows.Forms.AutoValidate\"></xref> enumerated value that indicates whether contained controls are implicitly validated on focus change. The default is Inherit.","nodes":[{"pos":[0,182],"content":"An <xref href=\"System.Windows.Forms.AutoValidate\"></xref> enumerated value that indicates whether contained controls are implicitly validated on focus change. The default is Inherit.","nodes":[{"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.AutoValidate\"&gt;&lt;/xref&gt;</ph> enumerated value that indicates whether contained controls are implicitly validated on focus change.","pos":[0,158],"source":"An <xref href=\"System.Windows.Forms.AutoValidate\"></xref> enumerated value that indicates whether contained controls are implicitly validated on focus change."},{"content":"The default is Inherit.","pos":[159,182]}]}],"pos":[81128,81311],"yaml":true},{"content":"Occurs when the <xref href=\"System.Windows.Forms.Form.AutoValidate\"></xref> property changes.","nodes":[{"pos":[0,93],"content":"Occurs when the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.Form.AutoValidate\"&gt;&lt;/xref&gt;</ph> property changes.","source":"Occurs when the <xref href=\"System.Windows.Forms.Form.AutoValidate\"></xref> property changes."}],"pos":[82370,82464],"yaml":true},{"content":"Gets or sets the background color for the control.","nodes":[{"pos":[0,50],"content":"Gets or sets the background color for the control.","nodes":[{"content":"Gets or sets the background color for the control.","pos":[0,50]}]}],"pos":[83606,83657],"yaml":true},{"content":"A <xref href=\"System.Drawing.Color\"></xref> that represents the background color of the control. The default is the value of the <xref href=\"System.Windows.Forms.Control.DefaultBackColor\"></xref> property.","nodes":[{"pos":[0,205],"content":"A <xref href=\"System.Drawing.Color\"></xref> that represents the background color of the control. The default is the value of the <xref href=\"System.Windows.Forms.Control.DefaultBackColor\"></xref> property.","nodes":[{"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Drawing.Color\"&gt;&lt;/xref&gt;</ph> that represents the background color of the control.","pos":[0,96],"source":"A <xref href=\"System.Drawing.Color\"></xref> that represents the background color of the control."},{"content":"The default is the value of the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.Control.DefaultBackColor\"&gt;&lt;/xref&gt;</ph> property.","pos":[97,205],"source":" The default is the value of the <xref href=\"System.Windows.Forms.Control.DefaultBackColor\"></xref> property."}]}],"pos":[83805,84011],"yaml":true},{"content":"Gets or sets the button control that is clicked when the user presses the ESC key.","nodes":[{"pos":[0,82],"content":"Gets or sets the button control that is clicked when the user presses the ESC key.","nodes":[{"content":"Gets or sets the button control that is clicked when the user presses the ESC key.","pos":[0,82]}]}],"pos":[84963,85046],"yaml":true},{"content":"The cancel button for a form is the button control that is clicked whenever the user presses the ESC key. The button assigned to this property must be an <xref:System.Windows.Forms.IButtonControl> that is on the current form or located within a container on the current form.  \n  \n This property allows you to designate a default action to occur when the user presses the ESC key in your application. You can use this property to allow the user to quickly navigate a simple form by allowing them to simply press the ESC key to close a window without committing changes instead of manually clicking the cancel button with their mouse.  \n  \n <xref:System.Windows.Forms.Form.CancelButton%2A> may not work if another control on the form intercepts the ESC key. For example, if you have a <xref:System.Windows.Forms.ComboBox> open on your form, ESC will close the <xref:System.Windows.Forms.ComboBox> instead of closing the Form.  \n  \n The <xref:System.Windows.Forms.IButtonControl> object assigned to <xref:System.Windows.Forms.Form.CancelButton%2A> must be visible on the form, or else pressing the ESC key will have no effect.","nodes":[{"pos":[0,275],"content":"The cancel button for a form is the button control that is clicked whenever the user presses the ESC key. The button assigned to this property must be an <xref:System.Windows.Forms.IButtonControl> that is on the current form or located within a container on the current form.","nodes":[{"content":"The cancel button for a form is the button control that is clicked whenever the user presses the ESC key. The button assigned to this property must be an <xref:System.Windows.Forms.IButtonControl> that is on the current form or located within a container on the current form.","pos":[0,275],"nodes":[{"content":"The cancel button for a form is the button control that is clicked whenever the user presses the ESC key.","pos":[0,105]},{"content":"The button assigned to this property must be an <ph id=\"ph1\">&lt;xref:System.Windows.Forms.IButtonControl&gt;</ph> that is on the current form or located within a container on the current form.","pos":[106,275],"source":" The button assigned to this property must be an <xref:System.Windows.Forms.IButtonControl> that is on the current form or located within a container on the current form."}]}]},{"pos":[282,633],"content":"This property allows you to designate a default action to occur when the user presses the ESC key in your application. You can use this property to allow the user to quickly navigate a simple form by allowing them to simply press the ESC key to close a window without committing changes instead of manually clicking the cancel button with their mouse.","nodes":[{"content":"This property allows you to designate a default action to occur when the user presses the ESC key in your application. You can use this property to allow the user to quickly navigate a simple form by allowing them to simply press the ESC key to close a window without committing changes instead of manually clicking the cancel button with their mouse.","pos":[0,351],"nodes":[{"content":"This property allows you to designate a default action to occur when the user presses the ESC key in your application.","pos":[0,118]},{"content":"You can use this property to allow the user to quickly navigate a simple form by allowing them to simply press the ESC key to close a window without committing changes instead of manually clicking the cancel button with their mouse.","pos":[119,351]}]}]},{"pos":[640,924],"content":"<xref:System.Windows.Forms.Form.CancelButton%2A> may not work if another control on the form intercepts the ESC key. For example, if you have a <xref:System.Windows.Forms.ComboBox> open on your form, ESC will close the <xref:System.Windows.Forms.ComboBox> instead of closing the Form.","nodes":[{"content":"<xref:System.Windows.Forms.Form.CancelButton%2A> may not work if another control on the form intercepts the ESC key. For example, if you have a <xref:System.Windows.Forms.ComboBox> open on your form, ESC will close the <xref:System.Windows.Forms.ComboBox> instead of closing the Form.","pos":[0,284],"nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Windows.Forms.Form.CancelButton%2A&gt;</ph> may not work if another control on the form intercepts the ESC key.","pos":[0,116],"source":"<xref:System.Windows.Forms.Form.CancelButton%2A> may not work if another control on the form intercepts the ESC key."},{"content":"For example, if you have a <ph id=\"ph1\">&lt;xref:System.Windows.Forms.ComboBox&gt;</ph> open on your form, ESC will close the <ph id=\"ph2\">&lt;xref:System.Windows.Forms.ComboBox&gt;</ph> instead of closing the Form.","pos":[117,284],"source":" For example, if you have a <xref:System.Windows.Forms.ComboBox> open on your form, ESC will close the <xref:System.Windows.Forms.ComboBox> instead of closing the Form."}]}]},{"pos":[931,1124],"content":"The <xref:System.Windows.Forms.IButtonControl> object assigned to <xref:System.Windows.Forms.Form.CancelButton%2A> must be visible on the form, or else pressing the ESC key will have no effect.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.IButtonControl&gt;</ph> object assigned to <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Form.CancelButton%2A&gt;</ph> must be visible on the form, or else pressing the ESC key will have no effect.","pos":[0,193],"source":"The <xref:System.Windows.Forms.IButtonControl> object assigned to <xref:System.Windows.Forms.Form.CancelButton%2A> must be visible on the form, or else pressing the ESC key will have no effect."}]}],"pos":[85057,86190],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.Windows.Forms.IButtonControl\"></xref> that represents the cancel button for the form.","nodes":[{"pos":[0,107],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.IButtonControl\"&gt;&lt;/xref&gt;</ph> that represents the cancel button for the form.","source":"An <xref href=\"System.Windows.Forms.IButtonControl\"></xref> that represents the cancel button for the form."}],"pos":[87797,87905],"yaml":true},{"content":"Centers the position of the form within the bounds of the parent form.","nodes":[{"pos":[0,70],"content":"Centers the position of the form within the bounds of the parent form.","nodes":[{"content":"Centers the position of the form within the bounds of the parent form.","pos":[0,70]}]}],"pos":[88871,88942],"yaml":true},{"content":"Do not call the <xref:System.Windows.Forms.Form.CenterToParent%2A> method directly from your code. Instead, set the <xref:System.Windows.Forms.Form.StartPosition%2A> property to <xref:System.Windows.Forms.FormStartPosition.CenterParent>.  \n  \n If the form or dialog is top-level, then <xref:System.Windows.Forms.Form.CenterToParent%2A> centers the form with respect to the screen or desktop.","nodes":[{"pos":[0,237],"content":"Do not call the <xref:System.Windows.Forms.Form.CenterToParent%2A> method directly from your code. Instead, set the <xref:System.Windows.Forms.Form.StartPosition%2A> property to <xref:System.Windows.Forms.FormStartPosition.CenterParent>.","nodes":[{"content":"Do not call the <xref:System.Windows.Forms.Form.CenterToParent%2A> method directly from your code. Instead, set the <xref:System.Windows.Forms.Form.StartPosition%2A> property to <xref:System.Windows.Forms.FormStartPosition.CenterParent>.","pos":[0,237],"nodes":[{"content":"Do not call the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Form.CenterToParent%2A&gt;</ph> method directly from your code.","pos":[0,98],"source":"Do not call the <xref:System.Windows.Forms.Form.CenterToParent%2A> method directly from your code."},{"content":"Instead, set the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Form.StartPosition%2A&gt;</ph> property to <ph id=\"ph2\">&lt;xref:System.Windows.Forms.FormStartPosition.CenterParent&gt;</ph>.","pos":[99,237],"source":" Instead, set the <xref:System.Windows.Forms.Form.StartPosition%2A> property to <xref:System.Windows.Forms.FormStartPosition.CenterParent>."}]}]},{"pos":[244,391],"content":"If the form or dialog is top-level, then <xref:System.Windows.Forms.Form.CenterToParent%2A> centers the form with respect to the screen or desktop.","nodes":[{"content":"If the form or dialog is top-level, then <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Form.CenterToParent%2A&gt;</ph> centers the form with respect to the screen or desktop.","pos":[0,147],"source":"If the form or dialog is top-level, then <xref:System.Windows.Forms.Form.CenterToParent%2A> centers the form with respect to the screen or desktop."}]}],"pos":[88953,89349],"yaml":true,"extradata":"MT"},{"content":"Centers the form on the current screen.","nodes":[{"pos":[0,39],"content":"Centers the form on the current screen.","nodes":[{"content":"Centers the form on the current screen.","pos":[0,39]}]}],"pos":[90398,90438],"yaml":true},{"content":"Do not call this directly from your code. Instead, set the <xref:System.Windows.Forms.Form.StartPosition%2A> property to <xref:System.Windows.Forms.FormStartPosition.CenterScreen>.  \n  \n The <xref:System.Windows.Forms.Form.CenterToScreen%2A> method uses the following priority list to determine the screen used to center the form:  \n  \n1.  The <xref:System.Windows.Forms.Form.Owner%2A> property of the form.  \n  \n2.  The HWND owner of the form.  \n  \n3.  The screen that currently has the mouse cursor.","nodes":[{"pos":[0,180],"content":"Do not call this directly from your code. Instead, set the <xref:System.Windows.Forms.Form.StartPosition%2A> property to <xref:System.Windows.Forms.FormStartPosition.CenterScreen>.","nodes":[{"content":"Do not call this directly from your code. Instead, set the <xref:System.Windows.Forms.Form.StartPosition%2A> property to <xref:System.Windows.Forms.FormStartPosition.CenterScreen>.","pos":[0,180],"nodes":[{"content":"Do not call this directly from your code.","pos":[0,41]},{"content":"Instead, set the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Form.StartPosition%2A&gt;</ph> property to <ph id=\"ph2\">&lt;xref:System.Windows.Forms.FormStartPosition.CenterScreen&gt;</ph>.","pos":[42,180],"source":" Instead, set the <xref:System.Windows.Forms.Form.StartPosition%2A> property to <xref:System.Windows.Forms.FormStartPosition.CenterScreen>."}]}]},{"pos":[187,330],"content":"The <xref:System.Windows.Forms.Form.CenterToScreen%2A> method uses the following priority list to determine the screen used to center the form:","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Form.CenterToScreen%2A&gt;</ph> method uses the following priority list to determine the screen used to center the form:","pos":[0,143],"source":"The <xref:System.Windows.Forms.Form.CenterToScreen%2A> method uses the following priority list to determine the screen used to center the form:"}]},{"pos":[340,407],"content":"The <xref:System.Windows.Forms.Form.Owner%2A> property of the form.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Form.Owner%2A&gt;</ph> property of the form.","pos":[0,67],"source":"The <xref:System.Windows.Forms.Form.Owner%2A> property of the form."}]},{"pos":[417,444],"content":"The HWND owner of the form.","nodes":[{"content":"The HWND owner of the form.","pos":[0,27]}]},{"pos":[454,501],"content":"The screen that currently has the mouse cursor.","nodes":[{"content":"The screen that currently has the mouse cursor.","pos":[0,47]}]}],"pos":[90449,90961],"yaml":true,"extradata":"MT"},{"content":"Gets or sets the size of the client area of the form.","nodes":[{"pos":[0,53],"content":"Gets or sets the size of the client area of the form.","nodes":[{"content":"Gets or sets the size of the client area of the form.","pos":[0,53]}]}],"pos":[91982,92036],"yaml":true},{"content":"The size of the client area of the form is the size of the form excluding the borders and the title bar. The client area of a form is the area within a form where controls can be placed. You can use this property to get the proper dimensions when performing graphics operations or when sizing and positioning controls on the form. To get the size of the entire form, use the <xref:System.Windows.Forms.Form.Size%2A> property or use the individual properties <xref:System.Windows.Forms.Control.Height%2A> and <xref:System.Windows.Forms.Control.Width%2A>.  \n  \n> [!NOTE]\n>  You cannot currently bind to this property using application settings. For more information on application settings, see [Application Settings Overview](~/docs/framework/winforms/advanced/application-settings-overview.md).","nodes":[{"pos":[0,553],"content":"The size of the client area of the form is the size of the form excluding the borders and the title bar. The client area of a form is the area within a form where controls can be placed. You can use this property to get the proper dimensions when performing graphics operations or when sizing and positioning controls on the form. To get the size of the entire form, use the <xref:System.Windows.Forms.Form.Size%2A> property or use the individual properties <xref:System.Windows.Forms.Control.Height%2A> and <xref:System.Windows.Forms.Control.Width%2A>.","nodes":[{"content":"The size of the client area of the form is the size of the form excluding the borders and the title bar. The client area of a form is the area within a form where controls can be placed. You can use this property to get the proper dimensions when performing graphics operations or when sizing and positioning controls on the form. To get the size of the entire form, use the <xref:System.Windows.Forms.Form.Size%2A> property or use the individual properties <xref:System.Windows.Forms.Control.Height%2A> and <xref:System.Windows.Forms.Control.Width%2A>.","pos":[0,553],"nodes":[{"content":"The size of the client area of the form is the size of the form excluding the borders and the title bar.","pos":[0,104]},{"content":"The client area of a form is the area within a form where controls can be placed.","pos":[105,186]},{"content":"You can use this property to get the proper dimensions when performing graphics operations or when sizing and positioning controls on the form.","pos":[187,330]},{"content":"To get the size of the entire form, use the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Form.Size%2A&gt;</ph> property or use the individual properties <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Control.Height%2A&gt;</ph> and <ph id=\"ph3\">&lt;xref:System.Windows.Forms.Control.Width%2A&gt;</ph>.","pos":[331,553],"source":" To get the size of the entire form, use the <xref:System.Windows.Forms.Form.Size%2A> property or use the individual properties <xref:System.Windows.Forms.Control.Height%2A> and <xref:System.Windows.Forms.Control.Width%2A>."}]}]},{"pos":[561,794],"content":"[!NOTE]\n You cannot currently bind to this property using application settings. For more information on application settings, see [Application Settings Overview](~/docs/framework/winforms/advanced/application-settings-overview.md).","leadings":["","> "],"nodes":[{"content":" You cannot currently bind to this property using application settings. For more information on application settings, see [Application Settings Overview](~/docs/framework/winforms/advanced/application-settings-overview.md).","pos":[8,231],"nodes":[{"content":"You cannot currently bind to this property using application settings.","pos":[1,71]},{"content":"For more information on application settings, see <bpt id=\"p1\">[</bpt>Application Settings Overview<ept id=\"p1\">](~/docs/framework/winforms/advanced/application-settings-overview.md)</ept>.","pos":[72,223],"source":" For more information on application settings, see [Application Settings Overview](~/docs/framework/winforms/advanced/application-settings-overview.md)."}]}]}],"pos":[92047,92847],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Drawing.Size\"></xref> that represents the size of the form's client area.","nodes":[{"pos":[0,94],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Drawing.Size\"&gt;&lt;/xref&gt;</ph> that represents the size of the form's client area.","source":"A <xref href=\"System.Drawing.Size\"></xref> that represents the size of the form's client area."}],"pos":[93771,93866],"yaml":true},{"content":"Closes the form.","nodes":[{"pos":[0,16],"content":"Closes the form.","nodes":[{"content":"Closes the form.","pos":[0,16]}]}],"pos":[94798,94815],"yaml":true},{"content":"When a form is closed, all resources created within the object are closed and the form is disposed. You can prevent the closing of a form at run time by handling the <xref:System.Windows.Forms.Form.Closing> event and setting the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> property of the <xref:System.ComponentModel.CancelEventArgs> passed as a parameter to your event handler. If the form you are closing is the startup form of your application, your application ends.  \n  \n The two conditions when a form is not disposed on `Close` is when (1) it is part of a multiple-document interface (MDI) application, and the form is not visible; and (2) you have displayed the form using <xref:System.Windows.Forms.Form.ShowDialog%2A>. In these cases, you will need to call <xref:System.Windows.Forms.Form.Dispose%2A> manually to mark all of the form's controls for garbage collection.  \n  \n> [!NOTE]\n>  When the <xref:System.Windows.Forms.Form.Close%2A> method is called on a <xref:System.Windows.Forms.Form> displayed as a modeless window, you cannot call the <xref:System.Windows.Forms.Control.Show%2A> method to make the form visible, because the form's resources have already been released. To hide a form and then make it visible, use the <xref:System.Windows.Forms.Control.Hide%2A?displayProperty=fullName> method.  \n  \n> [!CAUTION]\n>  Prior to the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 2.0, the <xref:System.Windows.Forms.Form.Closed?displayProperty=fullName> and <xref:System.Windows.Forms.Form.Closing?displayProperty=fullName> events are not raised when the <xref:System.Windows.Forms.Application.Exit%2A?displayProperty=fullName> method is called to exit your application. If you have validation code in either of these events that must be executed, you should call the <xref:System.Windows.Forms.Form.Close%2A?displayProperty=fullName> method for each open form individually before calling the <xref:System.Windows.Forms.Application.Exit%2A> method.","nodes":[{"pos":[0,481],"content":"When a form is closed, all resources created within the object are closed and the form is disposed. You can prevent the closing of a form at run time by handling the <xref:System.Windows.Forms.Form.Closing> event and setting the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> property of the <xref:System.ComponentModel.CancelEventArgs> passed as a parameter to your event handler. If the form you are closing is the startup form of your application, your application ends.","nodes":[{"content":"When a form is closed, all resources created within the object are closed and the form is disposed. You can prevent the closing of a form at run time by handling the <xref:System.Windows.Forms.Form.Closing> event and setting the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> property of the <xref:System.ComponentModel.CancelEventArgs> passed as a parameter to your event handler. If the form you are closing is the startup form of your application, your application ends.","pos":[0,481],"nodes":[{"content":"When a form is closed, all resources created within the object are closed and the form is disposed.","pos":[0,99]},{"content":"You can prevent the closing of a form at run time by handling the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Form.Closing&gt;</ph> event and setting the <ph id=\"ph2\">&lt;xref:System.ComponentModel.CancelEventArgs.Cancel%2A&gt;</ph> property of the <ph id=\"ph3\">&lt;xref:System.ComponentModel.CancelEventArgs&gt;</ph> passed as a parameter to your event handler.","pos":[100,389],"source":" You can prevent the closing of a form at run time by handling the <xref:System.Windows.Forms.Form.Closing> event and setting the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> property of the <xref:System.ComponentModel.CancelEventArgs> passed as a parameter to your event handler."},{"content":"If the form you are closing is the startup form of your application, your application ends.","pos":[390,481]}]}]},{"pos":[488,889],"content":"The two conditions when a form is not disposed on `Close` is when (1) it is part of a multiple-document interface (MDI) application, and the form is not visible; and (2) you have displayed the form using <xref:System.Windows.Forms.Form.ShowDialog%2A>. In these cases, you will need to call <xref:System.Windows.Forms.Form.Dispose%2A> manually to mark all of the form's controls for garbage collection.","nodes":[{"content":"The two conditions when a form is not disposed on <ph id=\"ph1\">`Close`</ph> is when (1) it is part of a multiple-document interface (MDI) application, and the form is not visible; and (2) you have displayed the form using <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Form.ShowDialog%2A&gt;</ph>.","pos":[0,251],"source":"The two conditions when a form is not disposed on `Close` is when (1) it is part of a multiple-document interface (MDI) application, and the form is not visible; and (2) you have displayed the form using <xref:System.Windows.Forms.Form.ShowDialog%2A>."},{"content":"In these cases, you will need to call <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Form.Dispose%2A&gt;</ph> manually to mark all of the form's controls for garbage collection.","pos":[252,401],"source":" In these cases, you will need to call <xref:System.Windows.Forms.Form.Dispose%2A> manually to mark all of the form's controls for garbage collection."}]},{"pos":[897,1325],"content":"[!NOTE]\n When the <xref:System.Windows.Forms.Form.Close%2A> method is called on a <xref:System.Windows.Forms.Form> displayed as a modeless window, you cannot call the <xref:System.Windows.Forms.Control.Show%2A> method to make the form visible, because the form's resources have already been released. To hide a form and then make it visible, use the <xref:System.Windows.Forms.Control.Hide%2A?displayProperty=fullName> method.","leadings":["","> "],"nodes":[{"content":" When the <xref:System.Windows.Forms.Form.Close%2A> method is called on a <xref:System.Windows.Forms.Form> displayed as a modeless window, you cannot call the <xref:System.Windows.Forms.Control.Show%2A> method to make the form visible, because the form's resources have already been released. To hide a form and then make it visible, use the <xref:System.Windows.Forms.Control.Hide%2A?displayProperty=fullName> method.","pos":[8,426],"nodes":[{"content":"When the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Form.Close%2A&gt;</ph> method is called on a <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Form&gt;</ph> displayed as a modeless window, you cannot call the <ph id=\"ph3\">&lt;xref:System.Windows.Forms.Control.Show%2A&gt;</ph> method to make the form visible, because the form's resources have already been released.","pos":[1,292],"source":" When the <xref:System.Windows.Forms.Form.Close%2A> method is called on a <xref:System.Windows.Forms.Form> displayed as a modeless window, you cannot call the <xref:System.Windows.Forms.Control.Show%2A> method to make the form visible, because the form's resources have already been released."},{"content":"To hide a form and then make it visible, use the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.Hide%2A?displayProperty=fullName&gt;</ph> method.","pos":[293,418],"source":" To hide a form and then make it visible, use the <xref:System.Windows.Forms.Control.Hide%2A?displayProperty=fullName> method."}]}]},{"pos":[1333,1982],"content":"[!CAUTION]\n Prior to the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 2.0, the <xref:System.Windows.Forms.Form.Closed?displayProperty=fullName> and <xref:System.Windows.Forms.Form.Closing?displayProperty=fullName> events are not raised when the <xref:System.Windows.Forms.Application.Exit%2A?displayProperty=fullName> method is called to exit your application. If you have validation code in either of these events that must be executed, you should call the <xref:System.Windows.Forms.Form.Close%2A?displayProperty=fullName> method for each open form individually before calling the <xref:System.Windows.Forms.Application.Exit%2A> method.","leadings":["","> "],"nodes":[{"content":" Prior to the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 2.0, the <xref:System.Windows.Forms.Form.Closed?displayProperty=fullName> and <xref:System.Windows.Forms.Form.Closing?displayProperty=fullName> events are not raised when the <xref:System.Windows.Forms.Application.Exit%2A?displayProperty=fullName> method is called to exit your application. If you have validation code in either of these events that must be executed, you should call the <xref:System.Windows.Forms.Form.Close%2A?displayProperty=fullName> method for each open form individually before calling the <xref:System.Windows.Forms.Application.Exit%2A> method.","pos":[11,647],"nodes":[{"content":"Prior to the <ph id=\"ph1\">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph> 2.0, the <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Form.Closed?displayProperty=fullName&gt;</ph> and <ph id=\"ph3\">&lt;xref:System.Windows.Forms.Form.Closing?displayProperty=fullName&gt;</ph> events are not raised when the <ph id=\"ph4\">&lt;xref:System.Windows.Forms.Application.Exit%2A?displayProperty=fullName&gt;</ph> method is called to exit your application.","pos":[1,358],"source":" Prior to the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 2.0, the <xref:System.Windows.Forms.Form.Closed?displayProperty=fullName> and <xref:System.Windows.Forms.Form.Closing?displayProperty=fullName> events are not raised when the <xref:System.Windows.Forms.Application.Exit%2A?displayProperty=fullName> method is called to exit your application."},{"content":"If you have validation code in either of these events that must be executed, you should call the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Form.Close%2A?displayProperty=fullName&gt;</ph> method for each open form individually before calling the <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Application.Exit%2A&gt;</ph> method.","pos":[359,636],"source":" If you have validation code in either of these events that must be executed, you should call the <xref:System.Windows.Forms.Form.Close%2A?displayProperty=fullName> method for each open form individually before calling the <xref:System.Windows.Forms.Application.Exit%2A> method."}]}]}],"pos":[94826,96819],"yaml":true,"extradata":"MT"},{"content":"The form was closed while a handle was being created.","nodes":[{"pos":[0,53],"content":"The form was closed while a handle was being created.","nodes":[{"content":"The form was closed while a handle was being created.","pos":[0,53]}]}],"pos":[97052,97106],"yaml":true},{"content":"You cannot call this method from the <xref href=\"System.Windows.Forms.Form.Activated\"></xref> event when <xref href=\"System.Windows.Forms.Form.WindowState\"></xref> is set to <xref href=\"System.Windows.Forms.FormWindowState.Maximized\"></xref>.","nodes":[{"pos":[0,242],"content":"You cannot call this method from the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.Form.Activated\"&gt;&lt;/xref&gt;</ph> event when <ph id=\"ph2\">&lt;xref href=\"System.Windows.Forms.Form.WindowState\"&gt;&lt;/xref&gt;</ph> is set to <ph id=\"ph3\">&lt;xref href=\"System.Windows.Forms.FormWindowState.Maximized\"&gt;&lt;/xref&gt;</ph>.","source":"You cannot call this method from the <xref href=\"System.Windows.Forms.Form.Activated\"></xref> event when <xref href=\"System.Windows.Forms.Form.WindowState\"></xref> is set to <xref href=\"System.Windows.Forms.FormWindowState.Maximized\"></xref>."}],"pos":[97212,97455],"yaml":true},{"content":"Occurs when the form is closed.","nodes":[{"pos":[0,31],"content":"Occurs when the form is closed.","nodes":[{"content":"Occurs when the form is closed.","pos":[0,31]}]}],"pos":[98302,98334],"yaml":true},{"content":"> [!CAUTION]\n>  The <xref:System.Windows.Forms.Form.Closed> event is obsolete in the .NET Framework version 2.0; use the <xref:System.Windows.Forms.Form.FormClosed> event instead.  \n  \n This event occurs after the form has been closed by the user or by the <xref:System.Windows.Forms.Form.Close%2A> method of the form. To prevent a form from closing, handle the <xref:System.Windows.Forms.Form.Closing> event and set the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> property of the <xref:System.ComponentModel.CancelEventArgs> passed to your event handler to `true`.  \n  \n You can use this event to perform tasks such as freeing resources used by the form and to save information entered in the form or to update its parent form.  \n  \n> [!CAUTION]\n>  The <xref:System.Windows.Forms.Form.Closed?displayProperty=fullName> and <xref:System.Windows.Forms.Form.Closing?displayProperty=fullName> events are not raised when the <xref:System.Windows.Forms.Application.Exit%2A?displayProperty=fullName> method is called to exit your application. If you have validation code in either of these events that must be executed, you should call the <xref:System.Windows.Forms.Form.Close%2A?displayProperty=fullName> method for each open form individually before calling the <xref:System.Windows.Forms.Application.Exit%2A> method.  \n  \n If the form is an MDI parent form, the <xref:System.Windows.Forms.Form.Closing> events of all MDI child forms are raised before the MDI parent form's <xref:System.Windows.Forms.Form.Closing> event is raised. In addition, the <xref:System.Windows.Forms.Form.Closed> events of all MDI child forms are raised before the <xref:System.Windows.Forms.Form.Closed> event of the MDI parent form is raised.  \n  \n For more information about handling events, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).","nodes":[{"pos":[2,179],"content":"[!CAUTION]\n The <xref:System.Windows.Forms.Form.Closed> event is obsolete in the .NET Framework version 2.0; use the <xref:System.Windows.Forms.Form.FormClosed> event instead.","leadings":["","> "],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Form.Closed&gt;</ph> event is obsolete in the .NET Framework version 2.0; use the <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Form.FormClosed&gt;</ph> event instead.","pos":[12,175],"source":" The <xref:System.Windows.Forms.Form.Closed> event is obsolete in the .NET Framework version 2.0; use the <xref:System.Windows.Forms.Form.FormClosed> event instead."}]},{"pos":[186,576],"content":"This event occurs after the form has been closed by the user or by the <xref:System.Windows.Forms.Form.Close%2A> method of the form. To prevent a form from closing, handle the <xref:System.Windows.Forms.Form.Closing> event and set the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> property of the <xref:System.ComponentModel.CancelEventArgs> passed to your event handler to `true`.","nodes":[{"content":"This event occurs after the form has been closed by the user or by the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Form.Close%2A&gt;</ph> method of the form.","pos":[0,132],"source":"This event occurs after the form has been closed by the user or by the <xref:System.Windows.Forms.Form.Close%2A> method of the form."},{"content":"To prevent a form from closing, handle the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Form.Closing&gt;</ph> event and set the <ph id=\"ph2\">&lt;xref:System.ComponentModel.CancelEventArgs.Cancel%2A&gt;</ph> property of the <ph id=\"ph3\">&lt;xref:System.ComponentModel.CancelEventArgs&gt;</ph> passed to your event handler to <ph id=\"ph4\">`true`</ph>.","pos":[133,390],"source":" To prevent a form from closing, handle the <xref:System.Windows.Forms.Form.Closing> event and set the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> property of the <xref:System.ComponentModel.CancelEventArgs> passed to your event handler to `true`."}]},{"pos":[583,739],"content":"You can use this event to perform tasks such as freeing resources used by the form and to save information entered in the form or to update its parent form.","nodes":[{"content":"You can use this event to perform tasks such as freeing resources used by the form and to save information entered in the form or to update its parent form.","pos":[0,156]}]},{"pos":[747,1324],"content":"[!CAUTION]\n The <xref:System.Windows.Forms.Form.Closed?displayProperty=fullName> and <xref:System.Windows.Forms.Form.Closing?displayProperty=fullName> events are not raised when the <xref:System.Windows.Forms.Application.Exit%2A?displayProperty=fullName> method is called to exit your application. If you have validation code in either of these events that must be executed, you should call the <xref:System.Windows.Forms.Form.Close%2A?displayProperty=fullName> method for each open form individually before calling the <xref:System.Windows.Forms.Application.Exit%2A> method.","leadings":["","> "],"nodes":[{"content":" The <xref:System.Windows.Forms.Form.Closed?displayProperty=fullName> and <xref:System.Windows.Forms.Form.Closing?displayProperty=fullName> events are not raised when the <xref:System.Windows.Forms.Application.Exit%2A?displayProperty=fullName> method is called to exit your application. If you have validation code in either of these events that must be executed, you should call the <xref:System.Windows.Forms.Form.Close%2A?displayProperty=fullName> method for each open form individually before calling the <xref:System.Windows.Forms.Application.Exit%2A> method.","pos":[11,575],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Form.Closed?displayProperty=fullName&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Form.Closing?displayProperty=fullName&gt;</ph> events are not raised when the <ph id=\"ph3\">&lt;xref:System.Windows.Forms.Application.Exit%2A?displayProperty=fullName&gt;</ph> method is called to exit your application.","pos":[1,286],"source":" The <xref:System.Windows.Forms.Form.Closed?displayProperty=fullName> and <xref:System.Windows.Forms.Form.Closing?displayProperty=fullName> events are not raised when the <xref:System.Windows.Forms.Application.Exit%2A?displayProperty=fullName> method is called to exit your application."},{"content":"If you have validation code in either of these events that must be executed, you should call the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Form.Close%2A?displayProperty=fullName&gt;</ph> method for each open form individually before calling the <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Application.Exit%2A&gt;</ph> method.","pos":[287,564],"source":" If you have validation code in either of these events that must be executed, you should call the <xref:System.Windows.Forms.Form.Close%2A?displayProperty=fullName> method for each open form individually before calling the <xref:System.Windows.Forms.Application.Exit%2A> method."}]}]},{"pos":[1331,1727],"content":"If the form is an MDI parent form, the <xref:System.Windows.Forms.Form.Closing> events of all MDI child forms are raised before the MDI parent form's <xref:System.Windows.Forms.Form.Closing> event is raised. In addition, the <xref:System.Windows.Forms.Form.Closed> events of all MDI child forms are raised before the <xref:System.Windows.Forms.Form.Closed> event of the MDI parent form is raised.","nodes":[{"content":"If the form is an MDI parent form, the <xref:System.Windows.Forms.Form.Closing> events of all MDI child forms are raised before the MDI parent form's <xref:System.Windows.Forms.Form.Closing> event is raised. In addition, the <xref:System.Windows.Forms.Form.Closed> events of all MDI child forms are raised before the <xref:System.Windows.Forms.Form.Closed> event of the MDI parent form is raised.","pos":[0,396],"nodes":[{"content":"If the form is an MDI parent form, the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Form.Closing&gt;</ph> events of all MDI child forms are raised before the MDI parent form's <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Form.Closing&gt;</ph> event is raised.","pos":[0,207],"source":"If the form is an MDI parent form, the <xref:System.Windows.Forms.Form.Closing> events of all MDI child forms are raised before the MDI parent form's <xref:System.Windows.Forms.Form.Closing> event is raised."},{"content":"In addition, the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Form.Closed&gt;</ph> events of all MDI child forms are raised before the <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Form.Closed&gt;</ph> event of the MDI parent form is raised.","pos":[208,396],"source":" In addition, the <xref:System.Windows.Forms.Form.Closed> events of all MDI child forms are raised before the <xref:System.Windows.Forms.Form.Closed> event of the MDI parent form is raised."}]}]},{"pos":[1734,1884],"content":"For more information about handling events, see <bpt id=\"p1\">[</bpt>Handling and Raising Events<ept id=\"p1\">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.","source":"For more information about handling events, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)."}],"pos":[98345,100244],"yaml":true,"extradata":"MT"},{"content":"Occurs when the form is closing.","nodes":[{"pos":[0,32],"content":"Occurs when the form is closing.","nodes":[{"content":"Occurs when the form is closing.","pos":[0,32]}]}],"pos":[102322,102355],"yaml":true},{"content":"> [!CAUTION]\n>  The <xref:System.Windows.Forms.Form.Closing> event is obsolete in the .NET Framework version 2.0; use the <xref:System.Windows.Forms.Form.FormClosing> event instead.  \n  \n The <xref:System.Windows.Forms.Form.Closing> event occurs as the form is being closed. When a form is closed, all resources created within the object are released and the form is disposed. If you cancel this event, the form remains opened. To cancel the closure of a form, set the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> property of the <xref:System.ComponentModel.CancelEventArgs> passed to your event handler to `true`.  \n  \n When a form is displayed as a modal dialog box, clicking the **Close** button (the button with an X at the upper-right corner of the form) causes the form to be hidden and the <xref:System.Windows.Forms.Form.DialogResult%2A> property to be set to `DialogResult.Cancel`. You can override the value assigned to the <xref:System.Windows.Forms.Form.DialogResult%2A> property when the user clicks the **Close** button by setting the <xref:System.Windows.Forms.Form.DialogResult%2A> property in an event handler for the <xref:System.Windows.Forms.Form.Closing> event of the form.  \n  \n> [!NOTE]\n>  When the <xref:System.Windows.Forms.Form.Close%2A> method is called on a <xref:System.Windows.Forms.Form> displayed as a modeless window, you cannot call the <xref:System.Windows.Forms.Control.Show%2A> method to make the form visible, because the form's resources have already been released. To hide a form and then make it visible, use the <xref:System.Windows.Forms.Control.Hide%2A?displayProperty=fullName> method.  \n  \n> [!CAUTION]\n>  The <xref:System.Windows.Forms.Form.Closed?displayProperty=fullName> and <xref:System.Windows.Forms.Form.Closing?displayProperty=fullName> events are not raised when the <xref:System.Windows.Forms.Application.Exit%2A?displayProperty=fullName> method is called to exit your application. If you have validation code in either of these events that must be executed, you should call the <xref:System.Windows.Forms.Form.Close%2A?displayProperty=fullName> method for each open form individually before calling the <xref:System.Windows.Forms.Application.Exit%2A> method.  \n  \n If the form is an MDI parent form, the <xref:System.Windows.Forms.Form.Closing> events of all MDI child forms are raised before the MDI parent form's <xref:System.Windows.Forms.Form.Closing> event is raised. In addition, the <xref:System.Windows.Forms.Form.Closed> events of all MDI child forms are raised before the <xref:System.Windows.Forms.Form.Closed> event of the MDI parent form is raised. Canceling the <xref:System.Windows.Forms.Form.Closing> event of an MDI child form does not prevent the <xref:System.Windows.Forms.Form.Closing> event of the MDI parent form from being raised. However, canceling the event will set to `true` the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> property of the <xref:System.ComponentModel.CancelEventArgs> that is passed as a parameter to the parent form. To force all MDI parent and child forms to close, set the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> property to `false` in the MDI parent form.  \n  \n For more information about handling events, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).","nodes":[{"pos":[2,181],"content":"[!CAUTION]\n The <xref:System.Windows.Forms.Form.Closing> event is obsolete in the .NET Framework version 2.0; use the <xref:System.Windows.Forms.Form.FormClosing> event instead.","leadings":["","> "],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Form.Closing&gt;</ph> event is obsolete in the .NET Framework version 2.0; use the <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Form.FormClosing&gt;</ph> event instead.","pos":[12,177],"source":" The <xref:System.Windows.Forms.Form.Closing> event is obsolete in the .NET Framework version 2.0; use the <xref:System.Windows.Forms.Form.FormClosing> event instead."}]},{"pos":[188,624],"content":"The <xref:System.Windows.Forms.Form.Closing> event occurs as the form is being closed. When a form is closed, all resources created within the object are released and the form is disposed. If you cancel this event, the form remains opened. To cancel the closure of a form, set the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> property of the <xref:System.ComponentModel.CancelEventArgs> passed to your event handler to `true`.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Form.Closing&gt;</ph> event occurs as the form is being closed.","pos":[0,86],"source":"The <xref:System.Windows.Forms.Form.Closing> event occurs as the form is being closed."},{"content":"When a form is closed, all resources created within the object are released and the form is disposed.","pos":[87,188]},{"content":"If you cancel this event, the form remains opened.","pos":[189,239]},{"content":"To cancel the closure of a form, set the <ph id=\"ph1\">&lt;xref:System.ComponentModel.CancelEventArgs.Cancel%2A&gt;</ph> property of the <ph id=\"ph2\">&lt;xref:System.ComponentModel.CancelEventArgs&gt;</ph> passed to your event handler to <ph id=\"ph3\">`true`</ph>.","pos":[240,436],"source":" To cancel the closure of a form, set the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> property of the <xref:System.ComponentModel.CancelEventArgs> passed to your event handler to `true`."}]},{"pos":[631,1204],"content":"When a form is displayed as a modal dialog box, clicking the **Close** button (the button with an X at the upper-right corner of the form) causes the form to be hidden and the <xref:System.Windows.Forms.Form.DialogResult%2A> property to be set to `DialogResult.Cancel`. You can override the value assigned to the <xref:System.Windows.Forms.Form.DialogResult%2A> property when the user clicks the **Close** button by setting the <xref:System.Windows.Forms.Form.DialogResult%2A> property in an event handler for the <xref:System.Windows.Forms.Form.Closing> event of the form.","nodes":[{"content":"When a form is displayed as a modal dialog box, clicking the <bpt id=\"p1\">**</bpt>Close<ept id=\"p1\">**</ept> button (the button with an X at the upper-right corner of the form) causes the form to be hidden and the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Form.DialogResult%2A&gt;</ph> property to be set to <ph id=\"ph2\">`DialogResult.Cancel`</ph>.","pos":[0,269],"source":"When a form is displayed as a modal dialog box, clicking the **Close** button (the button with an X at the upper-right corner of the form) causes the form to be hidden and the <xref:System.Windows.Forms.Form.DialogResult%2A> property to be set to `DialogResult.Cancel`."},{"content":"You can override the value assigned to the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Form.DialogResult%2A&gt;</ph> property when the user clicks the <bpt id=\"p1\">**</bpt>Close<ept id=\"p1\">**</ept> button by setting the <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Form.DialogResult%2A&gt;</ph> property in an event handler for the <ph id=\"ph3\">&lt;xref:System.Windows.Forms.Form.Closing&gt;</ph> event of the form.","pos":[270,573],"source":" You can override the value assigned to the <xref:System.Windows.Forms.Form.DialogResult%2A> property when the user clicks the **Close** button by setting the <xref:System.Windows.Forms.Form.DialogResult%2A> property in an event handler for the <xref:System.Windows.Forms.Form.Closing> event of the form."}]},{"pos":[1212,1640],"content":"[!NOTE]\n When the <xref:System.Windows.Forms.Form.Close%2A> method is called on a <xref:System.Windows.Forms.Form> displayed as a modeless window, you cannot call the <xref:System.Windows.Forms.Control.Show%2A> method to make the form visible, because the form's resources have already been released. To hide a form and then make it visible, use the <xref:System.Windows.Forms.Control.Hide%2A?displayProperty=fullName> method.","leadings":["","> "],"nodes":[{"content":" When the <xref:System.Windows.Forms.Form.Close%2A> method is called on a <xref:System.Windows.Forms.Form> displayed as a modeless window, you cannot call the <xref:System.Windows.Forms.Control.Show%2A> method to make the form visible, because the form's resources have already been released. To hide a form and then make it visible, use the <xref:System.Windows.Forms.Control.Hide%2A?displayProperty=fullName> method.","pos":[8,426],"nodes":[{"content":"When the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Form.Close%2A&gt;</ph> method is called on a <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Form&gt;</ph> displayed as a modeless window, you cannot call the <ph id=\"ph3\">&lt;xref:System.Windows.Forms.Control.Show%2A&gt;</ph> method to make the form visible, because the form's resources have already been released.","pos":[1,292],"source":" When the <xref:System.Windows.Forms.Form.Close%2A> method is called on a <xref:System.Windows.Forms.Form> displayed as a modeless window, you cannot call the <xref:System.Windows.Forms.Control.Show%2A> method to make the form visible, because the form's resources have already been released."},{"content":"To hide a form and then make it visible, use the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.Hide%2A?displayProperty=fullName&gt;</ph> method.","pos":[293,418],"source":" To hide a form and then make it visible, use the <xref:System.Windows.Forms.Control.Hide%2A?displayProperty=fullName> method."}]}]},{"pos":[1648,2225],"content":"[!CAUTION]\n The <xref:System.Windows.Forms.Form.Closed?displayProperty=fullName> and <xref:System.Windows.Forms.Form.Closing?displayProperty=fullName> events are not raised when the <xref:System.Windows.Forms.Application.Exit%2A?displayProperty=fullName> method is called to exit your application. If you have validation code in either of these events that must be executed, you should call the <xref:System.Windows.Forms.Form.Close%2A?displayProperty=fullName> method for each open form individually before calling the <xref:System.Windows.Forms.Application.Exit%2A> method.","leadings":["","> "],"nodes":[{"content":" The <xref:System.Windows.Forms.Form.Closed?displayProperty=fullName> and <xref:System.Windows.Forms.Form.Closing?displayProperty=fullName> events are not raised when the <xref:System.Windows.Forms.Application.Exit%2A?displayProperty=fullName> method is called to exit your application. If you have validation code in either of these events that must be executed, you should call the <xref:System.Windows.Forms.Form.Close%2A?displayProperty=fullName> method for each open form individually before calling the <xref:System.Windows.Forms.Application.Exit%2A> method.","pos":[11,575],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Form.Closed?displayProperty=fullName&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Form.Closing?displayProperty=fullName&gt;</ph> events are not raised when the <ph id=\"ph3\">&lt;xref:System.Windows.Forms.Application.Exit%2A?displayProperty=fullName&gt;</ph> method is called to exit your application.","pos":[1,286],"source":" The <xref:System.Windows.Forms.Form.Closed?displayProperty=fullName> and <xref:System.Windows.Forms.Form.Closing?displayProperty=fullName> events are not raised when the <xref:System.Windows.Forms.Application.Exit%2A?displayProperty=fullName> method is called to exit your application."},{"content":"If you have validation code in either of these events that must be executed, you should call the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Form.Close%2A?displayProperty=fullName&gt;</ph> method for each open form individually before calling the <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Application.Exit%2A&gt;</ph> method.","pos":[287,564],"source":" If you have validation code in either of these events that must be executed, you should call the <xref:System.Windows.Forms.Form.Close%2A?displayProperty=fullName> method for each open form individually before calling the <xref:System.Windows.Forms.Application.Exit%2A> method."}]}]},{"pos":[2232,3195],"content":"If the form is an MDI parent form, the <xref:System.Windows.Forms.Form.Closing> events of all MDI child forms are raised before the MDI parent form's <xref:System.Windows.Forms.Form.Closing> event is raised. In addition, the <xref:System.Windows.Forms.Form.Closed> events of all MDI child forms are raised before the <xref:System.Windows.Forms.Form.Closed> event of the MDI parent form is raised. Canceling the <xref:System.Windows.Forms.Form.Closing> event of an MDI child form does not prevent the <xref:System.Windows.Forms.Form.Closing> event of the MDI parent form from being raised. However, canceling the event will set to `true` the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> property of the <xref:System.ComponentModel.CancelEventArgs> that is passed as a parameter to the parent form. To force all MDI parent and child forms to close, set the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> property to `false` in the MDI parent form.","nodes":[{"content":"If the form is an MDI parent form, the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Form.Closing&gt;</ph> events of all MDI child forms are raised before the MDI parent form's <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Form.Closing&gt;</ph> event is raised.","pos":[0,207],"source":"If the form is an MDI parent form, the <xref:System.Windows.Forms.Form.Closing> events of all MDI child forms are raised before the MDI parent form's <xref:System.Windows.Forms.Form.Closing> event is raised."},{"content":"In addition, the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Form.Closed&gt;</ph> events of all MDI child forms are raised before the <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Form.Closed&gt;</ph> event of the MDI parent form is raised.","pos":[208,396],"source":" In addition, the <xref:System.Windows.Forms.Form.Closed> events of all MDI child forms are raised before the <xref:System.Windows.Forms.Form.Closed> event of the MDI parent form is raised."},{"content":"Canceling the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Form.Closing&gt;</ph> event of an MDI child form does not prevent the <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Form.Closing&gt;</ph> event of the MDI parent form from being raised.","pos":[397,588],"source":" Canceling the <xref:System.Windows.Forms.Form.Closing> event of an MDI child form does not prevent the <xref:System.Windows.Forms.Form.Closing> event of the MDI parent form from being raised."},{"content":"However, canceling the event will set to <ph id=\"ph1\">`true`</ph> the <ph id=\"ph2\">&lt;xref:System.ComponentModel.CancelEventArgs.Cancel%2A&gt;</ph> property of the <ph id=\"ph3\">&lt;xref:System.ComponentModel.CancelEventArgs&gt;</ph> that is passed as a parameter to the parent form.","pos":[589,806],"source":" However, canceling the event will set to `true` the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> property of the <xref:System.ComponentModel.CancelEventArgs> that is passed as a parameter to the parent form."},{"content":"To force all MDI parent and child forms to close, set the <ph id=\"ph1\">&lt;xref:System.ComponentModel.CancelEventArgs.Cancel%2A&gt;</ph> property to <ph id=\"ph2\">`false`</ph> in the MDI parent form.","pos":[807,963],"source":" To force all MDI parent and child forms to close, set the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> property to `false` in the MDI parent form."}]},{"pos":[3202,3352],"content":"For more information about handling events, see <bpt id=\"p1\">[</bpt>Handling and Raising Events<ept id=\"p1\">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.","source":"For more information about handling events, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)."}],"pos":[102366,105736],"yaml":true,"extradata":"MT"},{"content":"Gets or sets a value indicating whether a control box is displayed in the caption bar of the form.","nodes":[{"pos":[0,98],"content":"Gets or sets a value indicating whether a control box is displayed in the caption bar of the form.","nodes":[{"content":"Gets or sets a value indicating whether a control box is displayed in the caption bar of the form.","pos":[0,98]}]}],"pos":[107481,107580],"yaml":true},{"content":"If the <xref:System.Windows.Forms.Form.ControlBox%2A> property is set to `true`, the control box is displayed in the upper-left corner of the caption bar. The control box is where the user can click to access the system menu.  \n  \n If you set <xref:System.Windows.Forms.Form.ControlBox%2A> to `false`, and also set the <xref:System.Windows.Forms.Form.Location%2A> property, the <xref:System.Windows.Forms.Form.Size%2A> property of Form will not update to reflect that the non-client area of the form has been hidden. To fix this problem, put the code which alters the <xref:System.Windows.Forms.Form.Location%2A> property to the <xref:System.Windows.Forms.Control.HandleCreated> event.  \n  \n> [!NOTE]\n>  When set to `false`, the <xref:System.Windows.Forms.Form.ControlBox%2A> property has no effect on a Multiple-document interface (MDI) child form that is displayed maximized at time of creation.","nodes":[{"pos":[0,225],"content":"If the <xref:System.Windows.Forms.Form.ControlBox%2A> property is set to `true`, the control box is displayed in the upper-left corner of the caption bar. The control box is where the user can click to access the system menu.","nodes":[{"content":"If the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Form.ControlBox%2A&gt;</ph> property is set to <ph id=\"ph2\">`true`</ph>, the control box is displayed in the upper-left corner of the caption bar.","pos":[0,154],"source":"If the <xref:System.Windows.Forms.Form.ControlBox%2A> property is set to `true`, the control box is displayed in the upper-left corner of the caption bar."},{"content":"The control box is where the user can click to access the system menu.","pos":[155,225]}]},{"pos":[232,685],"content":"If you set <xref:System.Windows.Forms.Form.ControlBox%2A> to `false`, and also set the <xref:System.Windows.Forms.Form.Location%2A> property, the <xref:System.Windows.Forms.Form.Size%2A> property of Form will not update to reflect that the non-client area of the form has been hidden. To fix this problem, put the code which alters the <xref:System.Windows.Forms.Form.Location%2A> property to the <xref:System.Windows.Forms.Control.HandleCreated> event.","nodes":[{"content":"If you set <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Form.ControlBox%2A&gt;</ph> to <ph id=\"ph2\">`false`</ph>, and also set the <ph id=\"ph3\">&lt;xref:System.Windows.Forms.Form.Location%2A&gt;</ph> property, the <ph id=\"ph4\">&lt;xref:System.Windows.Forms.Form.Size%2A&gt;</ph> property of Form will not update to reflect that the non-client area of the form has been hidden.","pos":[0,284],"source":"If you set <xref:System.Windows.Forms.Form.ControlBox%2A> to `false`, and also set the <xref:System.Windows.Forms.Form.Location%2A> property, the <xref:System.Windows.Forms.Form.Size%2A> property of Form will not update to reflect that the non-client area of the form has been hidden."},{"content":"To fix this problem, put the code which alters the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Form.Location%2A&gt;</ph> property to the <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Control.HandleCreated&gt;</ph> event.","pos":[285,453],"source":" To fix this problem, put the code which alters the <xref:System.Windows.Forms.Form.Location%2A> property to the <xref:System.Windows.Forms.Control.HandleCreated> event."}]},{"pos":[693,897],"content":"[!NOTE]\n When set to `false`, the <xref:System.Windows.Forms.Form.ControlBox%2A> property has no effect on a Multiple-document interface (MDI) child form that is displayed maximized at time of creation.","leadings":["","> "],"nodes":[{"content":"When set to <ph id=\"ph1\">`false`</ph>, the <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Form.ControlBox%2A&gt;</ph> property has no effect on a Multiple-document interface (MDI) child form that is displayed maximized at time of creation.","pos":[9,202],"source":" When set to `false`, the <xref:System.Windows.Forms.Form.ControlBox%2A> property has no effect on a Multiple-document interface (MDI) child form that is displayed maximized at time of creation."}]}],"pos":[107591,108496],"yaml":true,"extradata":"MT"},{"content":"`true` if the form displays a control box in the upper left corner of the form; otherwise, `false`. The default is `true`.","nodes":[{"pos":[0,122],"content":"`true` if the form displays a control box in the upper left corner of the form; otherwise, `false`. The default is `true`.","nodes":[{"content":"<ph id=\"ph1\">`true`</ph> if the form displays a control box in the upper left corner of the form; otherwise, <ph id=\"ph2\">`false`</ph>.","pos":[0,99],"source":"`true` if the form displays a control box in the upper left corner of the form; otherwise, `false`."},{"content":"The default is <ph id=\"ph1\">`true`</ph>.","pos":[100,122],"source":" The default is `true`."}]}],"pos":[109652,109777],"yaml":true},{"content":"Creates a new instance of the control collection for the control.","nodes":[{"pos":[0,65],"content":"Creates a new instance of the control collection for the control.","nodes":[{"content":"Creates a new instance of the control collection for the control.","pos":[0,65]}]}],"pos":[110789,110855],"yaml":true},{"content":"A new instance of <xref href=\"System.Windows.Forms.Control.ControlCollection\"></xref> assigned to the control.","nodes":[{"pos":[0,110],"content":"A new instance of <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.Control.ControlCollection\"&gt;&lt;/xref&gt;</ph> assigned to the control.","source":"A new instance of <xref href=\"System.Windows.Forms.Control.ControlCollection\"></xref> assigned to the control."}],"pos":[111080,111191],"yaml":true},{"content":"Creates the handle for the form. If a derived class overrides this function, it must call the base implementation.","nodes":[{"pos":[0,114],"content":"Creates the handle for the form. If a derived class overrides this function, it must call the base implementation.","nodes":[{"content":"Creates the handle for the form. If a derived class overrides this function, it must call the base implementation.","pos":[0,114],"nodes":[{"content":"Creates the handle for the form.","pos":[0,32]},{"content":"If a derived class overrides this function, it must call the base implementation.","pos":[33,114]}]}]}],"pos":[112177,112292],"yaml":true},{"content":"A handle for this <xref href=\"System.Windows.Forms.Form\"></xref> has already been created.","nodes":[{"pos":[0,90],"content":"A handle for this <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.Form\"&gt;&lt;/xref&gt;</ph> has already been created.","source":"A handle for this <xref href=\"System.Windows.Forms.Form\"></xref> has already been created."}],"pos":[112551,112642],"yaml":true},{"content":"Gets the required creation parameters when the control handle is created.","nodes":[{"pos":[0,73],"content":"Gets the required creation parameters when the control handle is created.","nodes":[{"content":"Gets the required creation parameters when the control handle is created.","pos":[0,73]}]}],"pos":[113523,113597],"yaml":true},{"content":"A <xref href=\"System.Windows.Forms.CreateParams\"></xref> that contains the required creation parameters when the handle to the control is created.","nodes":[{"pos":[0,146],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.CreateParams\"&gt;&lt;/xref&gt;</ph> that contains the required creation parameters when the handle to the control is created.","source":"A <xref href=\"System.Windows.Forms.CreateParams\"></xref> that contains the required creation parameters when the handle to the control is created."}],"pos":[113772,113919],"yaml":true},{"content":"Occurs when the form loses focus and is no longer the active form.","nodes":[{"pos":[0,66],"content":"Occurs when the form loses focus and is no longer the active form.","nodes":[{"content":"Occurs when the form loses focus and is no longer the active form.","pos":[0,66]}]}],"pos":[114837,114904],"yaml":true},{"content":"You can use this event to perform tasks such as updating another window in your application with data from the deactivated form.  \n  \n For more information about handling events, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).","nodes":[{"pos":[0,128],"content":"You can use this event to perform tasks such as updating another window in your application with data from the deactivated form.","nodes":[{"content":"You can use this event to perform tasks such as updating another window in your application with data from the deactivated form.","pos":[0,128]}]},{"pos":[135,285],"content":"For more information about handling events, see <bpt id=\"p1\">[</bpt>Handling and Raising Events<ept id=\"p1\">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.","source":"For more information about handling events, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)."}],"pos":[114915,115205],"yaml":true,"extradata":"MT"},{"content":"Gets the default Input Method Editor (IME) mode supported by the control.","nodes":[{"pos":[0,73],"content":"Gets the default Input Method Editor (IME) mode supported by the control.","nodes":[{"content":"Gets the default Input Method Editor (IME) mode supported by the control.","pos":[0,73]}]}],"pos":[117412,117486],"yaml":true},{"content":"An input method editor (IME) is a program that allows users to enter complex characters and symbols, such as Japanese Kanji characters, by using a standard keyboard.  \n  \n As implemented in the <xref:System.Windows.Forms.Form> class, this property always returns the <xref:System.Windows.Forms.ImeMode?displayProperty=fullName> value. The value of this property is assigned to the <xref:System.Windows.Forms.Control.ImeMode%2A?displayProperty=fullName> property.","nodes":[{"pos":[0,165],"content":"An input method editor (IME) is a program that allows users to enter complex characters and symbols, such as Japanese Kanji characters, by using a standard keyboard.","nodes":[{"content":"An input method editor (IME) is a program that allows users to enter complex characters and symbols, such as Japanese Kanji characters, by using a standard keyboard.","pos":[0,165]}]},{"pos":[172,462],"content":"As implemented in the <xref:System.Windows.Forms.Form> class, this property always returns the <xref:System.Windows.Forms.ImeMode?displayProperty=fullName> value. The value of this property is assigned to the <xref:System.Windows.Forms.Control.ImeMode%2A?displayProperty=fullName> property.","nodes":[{"content":"As implemented in the <xref:System.Windows.Forms.Form> class, this property always returns the <xref:System.Windows.Forms.ImeMode?displayProperty=fullName> value. The value of this property is assigned to the <xref:System.Windows.Forms.Control.ImeMode%2A?displayProperty=fullName> property.","pos":[0,290],"nodes":[{"content":"As implemented in the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Form&gt;</ph> class, this property always returns the <ph id=\"ph2\">&lt;xref:System.Windows.Forms.ImeMode?displayProperty=fullName&gt;</ph> value.","pos":[0,162],"source":"As implemented in the <xref:System.Windows.Forms.Form> class, this property always returns the <xref:System.Windows.Forms.ImeMode?displayProperty=fullName> value."},{"content":"The value of this property is assigned to the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.ImeMode%2A?displayProperty=fullName&gt;</ph> property.","pos":[163,290],"source":" The value of this property is assigned to the <xref:System.Windows.Forms.Control.ImeMode%2A?displayProperty=fullName> property."}]}]}],"pos":[117497,117964],"yaml":true,"extradata":"MT"},{"content":"One of the <xref href=\"System.Windows.Forms.ImeMode\"></xref> values.","nodes":[{"pos":[0,68],"content":"One of the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.ImeMode\"&gt;&lt;/xref&gt;</ph> values.","source":"One of the <xref href=\"System.Windows.Forms.ImeMode\"></xref> values."}],"pos":[118131,118200],"yaml":true},{"content":"Gets the default size of the control.","nodes":[{"pos":[0,37],"content":"Gets the default size of the control.","nodes":[{"content":"Gets the default size of the control.","pos":[0,37]}]}],"pos":[119151,119189],"yaml":true},{"content":"The default <xref href=\"System.Drawing.Size\"></xref> of the control.","nodes":[{"pos":[0,68],"content":"The default <ph id=\"ph1\">&lt;xref href=\"System.Drawing.Size\"&gt;&lt;/xref&gt;</ph> of the control.","source":"The default <xref href=\"System.Drawing.Size\"></xref> of the control."}],"pos":[119335,119404],"yaml":true},{"content":"Sends the specified message to the default window procedure.","nodes":[{"pos":[0,60],"content":"Sends the specified message to the default window procedure.","nodes":[{"content":"Sends the specified message to the default window procedure.","pos":[0,60]}]}],"pos":[120464,120525],"yaml":true},{"content":"The Windows <xref href=\"System.Windows.Forms.Message\"></xref> to process.","nodes":[{"pos":[0,73],"content":"The Windows <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.Message\"&gt;&lt;/xref&gt;</ph> to process.","source":"The Windows <xref href=\"System.Windows.Forms.Message\"></xref> to process."}],"pos":[120709,120783],"yaml":true},{"content":"Gets or sets the size and location of the form on the Windows desktop.","nodes":[{"pos":[0,70],"content":"Gets or sets the size and location of the form on the Windows desktop.","nodes":[{"content":"Gets or sets the size and location of the form on the Windows desktop.","pos":[0,70]}]}],"pos":[121759,121830],"yaml":true},{"content":"Desktop coordinates are based on the working area of the screen, which excludes the taskbar. The coordinate system of the desktop is pixel-based. If your application is running on a multiple monitor system, the coordinates of the form are the coordinates for the combined desktop.  \n  \n You can use this property to size and position a form relative to other forms or applications on the Windows desktop.","nodes":[{"pos":[0,280],"content":"Desktop coordinates are based on the working area of the screen, which excludes the taskbar. The coordinate system of the desktop is pixel-based. If your application is running on a multiple monitor system, the coordinates of the form are the coordinates for the combined desktop.","nodes":[{"content":"Desktop coordinates are based on the working area of the screen, which excludes the taskbar. The coordinate system of the desktop is pixel-based. If your application is running on a multiple monitor system, the coordinates of the form are the coordinates for the combined desktop.","pos":[0,280],"nodes":[{"content":"Desktop coordinates are based on the working area of the screen, which excludes the taskbar.","pos":[0,92]},{"content":"The coordinate system of the desktop is pixel-based.","pos":[93,145]},{"content":"If your application is running on a multiple monitor system, the coordinates of the form are the coordinates for the combined desktop.","pos":[146,280]}]}]},{"pos":[287,404],"content":"You can use this property to size and position a form relative to other forms or applications on the Windows desktop.","nodes":[{"content":"You can use this property to size and position a form relative to other forms or applications on the Windows desktop.","pos":[0,117]}]}],"pos":[121841,122250],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Drawing.Rectangle\"></xref> that represents the bounds of the form on the Windows desktop using desktop coordinates.","nodes":[{"pos":[0,136],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Drawing.Rectangle\"&gt;&lt;/xref&gt;</ph> that represents the bounds of the form on the Windows desktop using desktop coordinates.","source":"A <xref href=\"System.Drawing.Rectangle\"></xref> that represents the bounds of the form on the Windows desktop using desktop coordinates."}],"pos":[123191,123328],"yaml":true},{"content":"Gets or sets the location of the form on the Windows desktop.","nodes":[{"pos":[0,61],"content":"Gets or sets the location of the form on the Windows desktop.","nodes":[{"content":"Gets or sets the location of the form on the Windows desktop.","pos":[0,61]}]}],"pos":[124367,124429],"yaml":true},{"content":"Desktop coordinates are based on the working area of the screen, which excludes the taskbar. The coordinate system of the desktop is pixel based. If your application is running on a multimonitor system, the coordinates of the form are the coordinates for the combined desktop.  \n  \n You can use this property to position your form relative to other forms and applications on the Windows desktop.  \n  \n If you call the <xref:System.Windows.Forms.Form.SetDesktopLocation%2A> method before calling the <xref:System.Windows.Forms.Form.Show%2A> method, your form will be positioned at its default location, which is determined by the operating system. For more information about window positioning, see the \"Window Size and Position\" section of the \"Window Features\" document in the MSDN library at http://msdn.microsoft.com/library.  \n  \n If you call <xref:System.Windows.Forms.Form.SetDesktopLocation%2A> after calling <xref:System.Windows.Forms.Form.Show%2A>, your form will be positioned at the location you specified.","nodes":[{"pos":[0,276],"content":"Desktop coordinates are based on the working area of the screen, which excludes the taskbar. The coordinate system of the desktop is pixel based. If your application is running on a multimonitor system, the coordinates of the form are the coordinates for the combined desktop.","nodes":[{"content":"Desktop coordinates are based on the working area of the screen, which excludes the taskbar. The coordinate system of the desktop is pixel based. If your application is running on a multimonitor system, the coordinates of the form are the coordinates for the combined desktop.","pos":[0,276],"nodes":[{"content":"Desktop coordinates are based on the working area of the screen, which excludes the taskbar.","pos":[0,92]},{"content":"The coordinate system of the desktop is pixel based.","pos":[93,145]},{"content":"If your application is running on a multimonitor system, the coordinates of the form are the coordinates for the combined desktop.","pos":[146,276]}]}]},{"pos":[283,395],"content":"You can use this property to position your form relative to other forms and applications on the Windows desktop.","nodes":[{"content":"You can use this property to position your form relative to other forms and applications on the Windows desktop.","pos":[0,112]}]},{"pos":[402,828],"content":"If you call the <xref:System.Windows.Forms.Form.SetDesktopLocation%2A> method before calling the <xref:System.Windows.Forms.Form.Show%2A> method, your form will be positioned at its default location, which is determined by the operating system. For more information about window positioning, see the \"Window Size and Position\" section of the \"Window Features\" document in the MSDN library at http://msdn.microsoft.com/library.","nodes":[{"content":"If you call the <xref:System.Windows.Forms.Form.SetDesktopLocation%2A> method before calling the <xref:System.Windows.Forms.Form.Show%2A> method, your form will be positioned at its default location, which is determined by the operating system. For more information about window positioning, see the \"Window Size and Position\" section of the \"Window Features\" document in the MSDN library at http://msdn.microsoft.com/library.","pos":[0,426],"nodes":[{"content":"If you call the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Form.SetDesktopLocation%2A&gt;</ph> method before calling the <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Form.Show%2A&gt;</ph> method, your form will be positioned at its default location, which is determined by the operating system.","pos":[0,244],"source":"If you call the <xref:System.Windows.Forms.Form.SetDesktopLocation%2A> method before calling the <xref:System.Windows.Forms.Form.Show%2A> method, your form will be positioned at its default location, which is determined by the operating system."},{"content":"For more information about window positioning, see the \"Window Size and Position\" section of the \"Window Features\" document in the MSDN library at http://msdn.microsoft.com/library.","pos":[245,426]}]}]},{"pos":[835,1017],"content":"If you call <xref:System.Windows.Forms.Form.SetDesktopLocation%2A> after calling <xref:System.Windows.Forms.Form.Show%2A>, your form will be positioned at the location you specified.","nodes":[{"content":"If you call <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Form.SetDesktopLocation%2A&gt;</ph> after calling <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Form.Show%2A&gt;</ph>, your form will be positioned at the location you specified.","pos":[0,182],"source":"If you call <xref:System.Windows.Forms.Form.SetDesktopLocation%2A> after calling <xref:System.Windows.Forms.Form.Show%2A>, your form will be positioned at the location you specified."}]}],"pos":[124440,125470],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Drawing.Point\"></xref> that represents the location of the form on the desktop.","nodes":[{"pos":[0,100],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Drawing.Point\"&gt;&lt;/xref&gt;</ph> that represents the location of the form on the desktop.","source":"A <xref href=\"System.Drawing.Point\"></xref> that represents the location of the form on the desktop."}],"pos":[126412,126513],"yaml":true},{"content":"Gets or sets the dialog result for the form.","nodes":[{"pos":[0,44],"content":"Gets or sets the dialog result for the form.","nodes":[{"content":"Gets or sets the dialog result for the form.","pos":[0,44]}]}],"pos":[127514,127559],"yaml":true},{"content":"The dialog result of a form is the value that is returned from the form when it is displayed as a modal dialog box. If the form is displayed as a dialog box, setting this property with a value from the <xref:System.Windows.Forms.DialogResult> enumeration sets the value of the dialog box result for the form, hides the modal dialog box, and returns control to the calling form. This property is typically set by the <xref:System.Windows.Forms.Button.DialogResult%2A> property of a <xref:System.Windows.Forms.Button> control on the form. When the user clicks the <xref:System.Windows.Forms.Button> control, the value assigned to the <xref:System.Windows.Forms.Button.DialogResult%2A> property of the <xref:System.Windows.Forms.Button> is assigned to the <xref:System.Windows.Forms.Form.DialogResult%2A> property of the form.  \n  \n When a form is displayed as a modal dialog box, clicking the **Close** button (the button with an X in the top-right corner of the form) causes the form to be hidden and the <xref:System.Windows.Forms.Form.DialogResult%2A> property to be set to `DialogResult.Cancel`. The <xref:System.Windows.Forms.Form.Close%2A> method is not automatically called when the user clicks the **Close** button of a dialog box or sets the value of the <xref:System.Windows.Forms.Form.DialogResult%2A> property. Instead, the form is hidden and can be shown again without creating a new instance of the dialog box. Because of this behavior, you must call the <xref:System.Windows.Forms.Control.Dispose%2A> method of the form when the form is no longer needed by your application.  \n  \n You can use this property to determine how a dialog box is closed in order to properly process the actions performed in the dialog box.  \n  \n> [!NOTE]\n>  You can override the value assigned to the <xref:System.Windows.Forms.Form.DialogResult%2A> property when the user clicks the **Close** button by setting the <xref:System.Windows.Forms.Form.DialogResult%2A> property in an event handler for the <xref:System.Windows.Forms.Form.Closing> event of the form.  \n  \n> [!NOTE]\n>  If a <xref:System.Windows.Forms.Form> is displayed as a modeless window, the value returned by the <xref:System.Windows.Forms.Form.DialogResult%2A> property might not return a value assigned to the form because the form's resources are automatically released when the form is closed.","nodes":[{"pos":[0,823],"content":"The dialog result of a form is the value that is returned from the form when it is displayed as a modal dialog box. If the form is displayed as a dialog box, setting this property with a value from the <xref:System.Windows.Forms.DialogResult> enumeration sets the value of the dialog box result for the form, hides the modal dialog box, and returns control to the calling form. This property is typically set by the <xref:System.Windows.Forms.Button.DialogResult%2A> property of a <xref:System.Windows.Forms.Button> control on the form. When the user clicks the <xref:System.Windows.Forms.Button> control, the value assigned to the <xref:System.Windows.Forms.Button.DialogResult%2A> property of the <xref:System.Windows.Forms.Button> is assigned to the <xref:System.Windows.Forms.Form.DialogResult%2A> property of the form.","nodes":[{"content":"The dialog result of a form is the value that is returned from the form when it is displayed as a modal dialog box. If the form is displayed as a dialog box, setting this property with a value from the <xref:System.Windows.Forms.DialogResult> enumeration sets the value of the dialog box result for the form, hides the modal dialog box, and returns control to the calling form. This property is typically set by the <xref:System.Windows.Forms.Button.DialogResult%2A> property of a <xref:System.Windows.Forms.Button> control on the form. When the user clicks the <xref:System.Windows.Forms.Button> control, the value assigned to the <xref:System.Windows.Forms.Button.DialogResult%2A> property of the <xref:System.Windows.Forms.Button> is assigned to the <xref:System.Windows.Forms.Form.DialogResult%2A> property of the form.","pos":[0,823],"nodes":[{"content":"The dialog result of a form is the value that is returned from the form when it is displayed as a modal dialog box.","pos":[0,115]},{"content":"If the form is displayed as a dialog box, setting this property with a value from the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.DialogResult&gt;</ph> enumeration sets the value of the dialog box result for the form, hides the modal dialog box, and returns control to the calling form.","pos":[116,377],"source":" If the form is displayed as a dialog box, setting this property with a value from the <xref:System.Windows.Forms.DialogResult> enumeration sets the value of the dialog box result for the form, hides the modal dialog box, and returns control to the calling form."},{"content":"This property is typically set by the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Button.DialogResult%2A&gt;</ph> property of a <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Button&gt;</ph> control on the form.","pos":[378,536],"source":" This property is typically set by the <xref:System.Windows.Forms.Button.DialogResult%2A> property of a <xref:System.Windows.Forms.Button> control on the form."},{"content":"When the user clicks the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Button&gt;</ph> control, the value assigned to the <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Button.DialogResult%2A&gt;</ph> property of the <ph id=\"ph3\">&lt;xref:System.Windows.Forms.Button&gt;</ph> is assigned to the <ph id=\"ph4\">&lt;xref:System.Windows.Forms.Form.DialogResult%2A&gt;</ph> property of the form.","pos":[537,823],"source":" When the user clicks the <xref:System.Windows.Forms.Button> control, the value assigned to the <xref:System.Windows.Forms.Button.DialogResult%2A> property of the <xref:System.Windows.Forms.Button> is assigned to the <xref:System.Windows.Forms.Form.DialogResult%2A> property of the form."}]}]},{"pos":[830,1587],"content":"When a form is displayed as a modal dialog box, clicking the **Close** button (the button with an X in the top-right corner of the form) causes the form to be hidden and the <xref:System.Windows.Forms.Form.DialogResult%2A> property to be set to `DialogResult.Cancel`. The <xref:System.Windows.Forms.Form.Close%2A> method is not automatically called when the user clicks the **Close** button of a dialog box or sets the value of the <xref:System.Windows.Forms.Form.DialogResult%2A> property. Instead, the form is hidden and can be shown again without creating a new instance of the dialog box. Because of this behavior, you must call the <xref:System.Windows.Forms.Control.Dispose%2A> method of the form when the form is no longer needed by your application.","nodes":[{"content":"When a form is displayed as a modal dialog box, clicking the <bpt id=\"p1\">**</bpt>Close<ept id=\"p1\">**</ept> button (the button with an X in the top-right corner of the form) causes the form to be hidden and the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Form.DialogResult%2A&gt;</ph> property to be set to <ph id=\"ph2\">`DialogResult.Cancel`</ph>.","pos":[0,267],"source":"When a form is displayed as a modal dialog box, clicking the **Close** button (the button with an X in the top-right corner of the form) causes the form to be hidden and the <xref:System.Windows.Forms.Form.DialogResult%2A> property to be set to `DialogResult.Cancel`."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Form.Close%2A&gt;</ph> method is not automatically called when the user clicks the <bpt id=\"p1\">**</bpt>Close<ept id=\"p1\">**</ept> button of a dialog box or sets the value of the <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Form.DialogResult%2A&gt;</ph> property.","pos":[268,490],"source":" The <xref:System.Windows.Forms.Form.Close%2A> method is not automatically called when the user clicks the **Close** button of a dialog box or sets the value of the <xref:System.Windows.Forms.Form.DialogResult%2A> property."},{"content":"Instead, the form is hidden and can be shown again without creating a new instance of the dialog box.","pos":[491,592]},{"content":"Because of this behavior, you must call the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.Dispose%2A&gt;</ph> method of the form when the form is no longer needed by your application.","pos":[593,757],"source":" Because of this behavior, you must call the <xref:System.Windows.Forms.Control.Dispose%2A> method of the form when the form is no longer needed by your application."}]},{"pos":[1594,1729],"content":"You can use this property to determine how a dialog box is closed in order to properly process the actions performed in the dialog box.","nodes":[{"content":"You can use this property to determine how a dialog box is closed in order to properly process the actions performed in the dialog box.","pos":[0,135]}]},{"pos":[1737,2051],"content":"[!NOTE]\n You can override the value assigned to the <xref:System.Windows.Forms.Form.DialogResult%2A> property when the user clicks the **Close** button by setting the <xref:System.Windows.Forms.Form.DialogResult%2A> property in an event handler for the <xref:System.Windows.Forms.Form.Closing> event of the form.","leadings":["","> "],"nodes":[{"content":"You can override the value assigned to the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Form.DialogResult%2A&gt;</ph> property when the user clicks the <bpt id=\"p1\">**</bpt>Close<ept id=\"p1\">**</ept> button by setting the <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Form.DialogResult%2A&gt;</ph> property in an event handler for the <ph id=\"ph3\">&lt;xref:System.Windows.Forms.Form.Closing&gt;</ph> event of the form.","pos":[9,312],"source":" You can override the value assigned to the <xref:System.Windows.Forms.Form.DialogResult%2A> property when the user clicks the **Close** button by setting the <xref:System.Windows.Forms.Form.DialogResult%2A> property in an event handler for the <xref:System.Windows.Forms.Form.Closing> event of the form."}]},{"pos":[2059,2353],"content":"[!NOTE]\n If a <xref:System.Windows.Forms.Form> is displayed as a modeless window, the value returned by the <xref:System.Windows.Forms.Form.DialogResult%2A> property might not return a value assigned to the form because the form's resources are automatically released when the form is closed.","leadings":["","> "],"nodes":[{"content":"If a <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Form&gt;</ph> is displayed as a modeless window, the value returned by the <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Form.DialogResult%2A&gt;</ph> property might not return a value assigned to the form because the form's resources are automatically released when the form is closed.","pos":[9,292],"source":" If a <xref:System.Windows.Forms.Form> is displayed as a modeless window, the value returned by the <xref:System.Windows.Forms.Form.DialogResult%2A> property might not return a value assigned to the form because the form's resources are automatically released when the form is closed."}]}],"pos":[127570,129936],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Windows.Forms.DialogResult\"></xref> that represents the result of the form when used as a dialog box.","nodes":[{"pos":[0,122],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.DialogResult\"&gt;&lt;/xref&gt;</ph> that represents the result of the form when used as a dialog box.","source":"A <xref href=\"System.Windows.Forms.DialogResult\"></xref> that represents the result of the form when used as a dialog box."}],"pos":[130877,131000],"yaml":true},{"content":"The value specified is outside the range of valid values.","nodes":[{"pos":[0,57],"content":"The value specified is outside the range of valid values.","nodes":[{"content":"The value specified is outside the range of valid values.","pos":[0,57]}]}],"pos":[131212,131270],"yaml":true},{"content":"Disposes of the resources (other than memory) used by the <xref href=\"System.Windows.Forms.Form\"></xref>.","nodes":[{"pos":[0,105],"content":"Disposes of the resources (other than memory) used by the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.Form\"&gt;&lt;/xref&gt;</ph>.","source":"Disposes of the resources (other than memory) used by the <xref href=\"System.Windows.Forms.Form\"></xref>."}],"pos":[132264,132370],"yaml":true},{"content":"This method is called by the public `Dispose` method and the <xref:System.Object.Finalize%2A> method. `Dispose` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`. <xref:System.Object.Finalize%2A> invokes `Dispose` with `disposing` set to `false`.  \n  \n When the `disposing` parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.Windows.Forms.Form> references. This method invokes the `Dispose` method of each referenced object.  \n  \n <xref:System.Windows.Forms.Form.Dispose%2A> will be called automatically if the form is shown using the <xref:System.Windows.Forms.Form.Show%2A> method. If another method such as <xref:System.Windows.Forms.Form.ShowDialog%2A> is used, or the form is never shown at all, you must call <xref:System.Windows.Forms.Form.Dispose%2A> yourself within your application.","nodes":[{"pos":[0,289],"content":"This method is called by the public `Dispose` method and the <xref:System.Object.Finalize%2A> method. `Dispose` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`. <xref:System.Object.Finalize%2A> invokes `Dispose` with `disposing` set to `false`.","nodes":[{"content":"This method is called by the public <ph id=\"ph1\">`Dispose`</ph> method and the <ph id=\"ph2\">&lt;xref:System.Object.Finalize%2A&gt;</ph> method.","pos":[0,101],"source":"This method is called by the public `Dispose` method and the <xref:System.Object.Finalize%2A> method."},{"content":"<ph id=\"ph1\">`Dispose`</ph> invokes the protected <ph id=\"ph2\">`Dispose(Boolean)`</ph> method with the <ph id=\"ph3\">`disposing`</ph> parameter set to <ph id=\"ph4\">`true`</ph>.","pos":[102,205],"source":"`Dispose` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`."},{"content":"<ph id=\"ph1\">&lt;xref:System.Object.Finalize%2A&gt;</ph> invokes <ph id=\"ph2\">`Dispose`</ph> with <ph id=\"ph3\">`disposing`</ph> set to <ph id=\"ph4\">`false`</ph>.","pos":[206,289],"source":" <xref:System.Object.Finalize%2A> invokes `Dispose` with `disposing` set to `false`."}]},{"pos":[296,523],"content":"When the `disposing` parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.Windows.Forms.Form> references. This method invokes the `Dispose` method of each referenced object.","nodes":[{"content":"When the <ph id=\"ph1\">`disposing`</ph> parameter is <ph id=\"ph2\">`true`</ph>, this method releases all resources held by any managed objects that this <ph id=\"ph3\">&lt;xref:System.Windows.Forms.Form&gt;</ph> references.","pos":[0,159],"source":"When the `disposing` parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.Windows.Forms.Form> references."},{"content":"This method invokes the <ph id=\"ph1\">`Dispose`</ph> method of each referenced object.","pos":[160,227],"source":" This method invokes the `Dispose` method of each referenced object."}]},{"pos":[530,891],"content":"<xref:System.Windows.Forms.Form.Dispose%2A> will be called automatically if the form is shown using the <xref:System.Windows.Forms.Form.Show%2A> method. If another method such as <xref:System.Windows.Forms.Form.ShowDialog%2A> is used, or the form is never shown at all, you must call <xref:System.Windows.Forms.Form.Dispose%2A> yourself within your application.","nodes":[{"content":"<xref:System.Windows.Forms.Form.Dispose%2A> will be called automatically if the form is shown using the <xref:System.Windows.Forms.Form.Show%2A> method. If another method such as <xref:System.Windows.Forms.Form.ShowDialog%2A> is used, or the form is never shown at all, you must call <xref:System.Windows.Forms.Form.Dispose%2A> yourself within your application.","pos":[0,361],"nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Windows.Forms.Form.Dispose%2A&gt;</ph> will be called automatically if the form is shown using the <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Form.Show%2A&gt;</ph> method.","pos":[0,152],"source":"<xref:System.Windows.Forms.Form.Dispose%2A> will be called automatically if the form is shown using the <xref:System.Windows.Forms.Form.Show%2A> method."},{"content":"If another method such as <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Form.ShowDialog%2A&gt;</ph> is used, or the form is never shown at all, you must call <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Form.Dispose%2A&gt;</ph> yourself within your application.","pos":[153,361],"source":" If another method such as <xref:System.Windows.Forms.Form.ShowDialog%2A> is used, or the form is never shown at all, you must call <xref:System.Windows.Forms.Form.Dispose%2A> yourself within your application."}]}]}],"pos":[132381,133279],"yaml":true,"extradata":"MT"},{"content":"`true` to release both managed and unmanaged resources; `false` to release only unmanaged resources.","nodes":[{"pos":[0,100],"content":"<ph id=\"ph1\">`true`</ph> to release both managed and unmanaged resources; <ph id=\"ph2\">`false`</ph> to release only unmanaged resources.","source":"`true` to release both managed and unmanaged resources; `false` to release only unmanaged resources."}],"pos":[133434,133537],"yaml":true},{"content":"Occurs when the DPI setting changes on the display device where the form is currently displayed.","nodes":[{"pos":[0,96],"content":"Occurs when the DPI setting changes on the display device where the form is currently displayed.","nodes":[{"content":"Occurs when the DPI setting changes on the display device where the form is currently displayed.","pos":[0,96]}]}],"pos":[134472,134569],"yaml":true},{"content":"Gets or sets the border style of the form.","nodes":[{"pos":[0,42],"content":"Gets or sets the border style of the form.","nodes":[{"content":"Gets or sets the border style of the form.","pos":[0,42]}]}],"pos":[135367,135410],"yaml":true},{"content":"The border style of the form determines how the outer edge of the form appears. In addition to changing the border display for a form, certain border styles prevent the form from being sized. For example, the `FormBorderStyle.FixedDialog` border style changes the border of the form to that of a dialog box and prevents the form from being resized. The border style can also affect the size or availability of the caption bar section of a form.  \n  \n> [!NOTE]\n>  With the <xref:System.Windows.Forms.FormBorderStyle.Sizable> style, it is impossible to resize the window below a certain minimum value, even if you have set <xref:System.Windows.Forms.Form.ControlBox%2A> to `false` and assigned a zero-length string to <xref:System.Windows.Forms.Form.Text%2A>. Consider working around this by using the <xref:System.Windows.Forms.FormBorderStyle.SizableToolWindow> style instead.","nodes":[{"pos":[0,444],"content":"The border style of the form determines how the outer edge of the form appears. In addition to changing the border display for a form, certain border styles prevent the form from being sized. For example, the `FormBorderStyle.FixedDialog` border style changes the border of the form to that of a dialog box and prevents the form from being resized. The border style can also affect the size or availability of the caption bar section of a form.","nodes":[{"content":"The border style of the form determines how the outer edge of the form appears.","pos":[0,79]},{"content":"In addition to changing the border display for a form, certain border styles prevent the form from being sized.","pos":[80,191]},{"content":"For example, the <ph id=\"ph1\">`FormBorderStyle.FixedDialog`</ph> border style changes the border of the form to that of a dialog box and prevents the form from being resized.","pos":[192,348],"source":" For example, the `FormBorderStyle.FixedDialog` border style changes the border of the form to that of a dialog box and prevents the form from being resized."},{"content":"The border style can also affect the size or availability of the caption bar section of a form.","pos":[349,444]}]},{"pos":[452,876],"content":"[!NOTE]\n With the <xref:System.Windows.Forms.FormBorderStyle.Sizable> style, it is impossible to resize the window below a certain minimum value, even if you have set <xref:System.Windows.Forms.Form.ControlBox%2A> to `false` and assigned a zero-length string to <xref:System.Windows.Forms.Form.Text%2A>. Consider working around this by using the <xref:System.Windows.Forms.FormBorderStyle.SizableToolWindow> style instead.","leadings":["","> "],"nodes":[{"content":" With the <xref:System.Windows.Forms.FormBorderStyle.Sizable> style, it is impossible to resize the window below a certain minimum value, even if you have set <xref:System.Windows.Forms.Form.ControlBox%2A> to `false` and assigned a zero-length string to <xref:System.Windows.Forms.Form.Text%2A>. Consider working around this by using the <xref:System.Windows.Forms.FormBorderStyle.SizableToolWindow> style instead.","pos":[8,422],"nodes":[{"content":"With the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.FormBorderStyle.Sizable&gt;</ph> style, it is impossible to resize the window below a certain minimum value, even if you have set <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Form.ControlBox%2A&gt;</ph> to <ph id=\"ph3\">`false`</ph> and assigned a zero-length string to <ph id=\"ph4\">&lt;xref:System.Windows.Forms.Form.Text%2A&gt;</ph>.","pos":[1,295],"source":" With the <xref:System.Windows.Forms.FormBorderStyle.Sizable> style, it is impossible to resize the window below a certain minimum value, even if you have set <xref:System.Windows.Forms.Form.ControlBox%2A> to `false` and assigned a zero-length string to <xref:System.Windows.Forms.Form.Text%2A>."},{"content":"Consider working around this by using the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.FormBorderStyle.SizableToolWindow&gt;</ph> style instead.","pos":[296,414],"source":" Consider working around this by using the <xref:System.Windows.Forms.FormBorderStyle.SizableToolWindow> style instead."}]}]}],"pos":[135421,136303],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Windows.Forms.FormBorderStyle\"></xref> that represents the style of border to display for the form. The default is `FormBorderStyle.Sizable`.","nodes":[{"pos":[0,162],"content":"A <xref href=\"System.Windows.Forms.FormBorderStyle\"></xref> that represents the style of border to display for the form. The default is `FormBorderStyle.Sizable`.","nodes":[{"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.FormBorderStyle\"&gt;&lt;/xref&gt;</ph> that represents the style of border to display for the form.","pos":[0,120],"source":"A <xref href=\"System.Windows.Forms.FormBorderStyle\"></xref> that represents the style of border to display for the form."},{"content":"The default is <ph id=\"ph1\">`FormBorderStyle.Sizable`</ph>.","pos":[121,162],"source":" The default is `FormBorderStyle.Sizable`."}]}],"pos":[137915,138078],"yaml":true},{"content":"The value specified is outside the range of valid values.","nodes":[{"pos":[0,57],"content":"The value specified is outside the range of valid values.","nodes":[{"content":"The value specified is outside the range of valid values.","pos":[0,57]}]}],"pos":[138293,138351],"yaml":true},{"content":"Occurs after the form is closed.","nodes":[{"pos":[0,32],"content":"Occurs after the form is closed.","nodes":[{"content":"Occurs after the form is closed.","pos":[0,32]}]}],"pos":[139217,139250],"yaml":true},{"content":"The <xref:System.Windows.Forms.Form.FormClosed> event occurs after the form has been closed by the user or by the <xref:System.Windows.Forms.Form.Close%2A> method or the <xref:System.Windows.Forms.Application.Exit%2A> method of the <xref:System.Windows.Forms.Application> class. To prevent a form from closing, handle the <xref:System.Windows.Forms.Form.FormClosing> event and set the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> property of the <xref:System.ComponentModel.CancelEventArgs> passed to your event handler to `true`.  \n  \n You can use this event to perform tasks such as freeing resources used by the form and to save information entered in the form or to update its parent form.  \n  \n If the form is a multiple-document interface (MDI) parent form, the <xref:System.Windows.Forms.Form.FormClosing> events of all MDI child forms are raised before the MDI parent form's <xref:System.Windows.Forms.Form.FormClosing> event is raised. Likewise, the <xref:System.Windows.Forms.Form.FormClosed> events of all MDI child forms are raised before the <xref:System.Windows.Forms.Form.FormClosed> event of the MDI parent form is raised.  \n  \n For more information about handling events, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).","nodes":[{"pos":[0,540],"content":"The <xref:System.Windows.Forms.Form.FormClosed> event occurs after the form has been closed by the user or by the <xref:System.Windows.Forms.Form.Close%2A> method or the <xref:System.Windows.Forms.Application.Exit%2A> method of the <xref:System.Windows.Forms.Application> class. To prevent a form from closing, handle the <xref:System.Windows.Forms.Form.FormClosing> event and set the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> property of the <xref:System.ComponentModel.CancelEventArgs> passed to your event handler to `true`.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Form.FormClosed&gt;</ph> event occurs after the form has been closed by the user or by the <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Form.Close%2A&gt;</ph> method or the <ph id=\"ph3\">&lt;xref:System.Windows.Forms.Application.Exit%2A&gt;</ph> method of the <ph id=\"ph4\">&lt;xref:System.Windows.Forms.Application&gt;</ph> class.","pos":[0,278],"source":"The <xref:System.Windows.Forms.Form.FormClosed> event occurs after the form has been closed by the user or by the <xref:System.Windows.Forms.Form.Close%2A> method or the <xref:System.Windows.Forms.Application.Exit%2A> method of the <xref:System.Windows.Forms.Application> class."},{"content":"To prevent a form from closing, handle the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Form.FormClosing&gt;</ph> event and set the <ph id=\"ph2\">&lt;xref:System.ComponentModel.CancelEventArgs.Cancel%2A&gt;</ph> property of the <ph id=\"ph3\">&lt;xref:System.ComponentModel.CancelEventArgs&gt;</ph> passed to your event handler to <ph id=\"ph4\">`true`</ph>.","pos":[279,540],"source":" To prevent a form from closing, handle the <xref:System.Windows.Forms.Form.FormClosing> event and set the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> property of the <xref:System.ComponentModel.CancelEventArgs> passed to your event handler to `true`."}]},{"pos":[547,703],"content":"You can use this event to perform tasks such as freeing resources used by the form and to save information entered in the form or to update its parent form.","nodes":[{"content":"You can use this event to perform tasks such as freeing resources used by the form and to save information entered in the form or to update its parent form.","pos":[0,156]}]},{"pos":[710,1148],"content":"If the form is a multiple-document interface (MDI) parent form, the <xref:System.Windows.Forms.Form.FormClosing> events of all MDI child forms are raised before the MDI parent form's <xref:System.Windows.Forms.Form.FormClosing> event is raised. Likewise, the <xref:System.Windows.Forms.Form.FormClosed> events of all MDI child forms are raised before the <xref:System.Windows.Forms.Form.FormClosed> event of the MDI parent form is raised.","nodes":[{"content":"If the form is a multiple-document interface (MDI) parent form, the <xref:System.Windows.Forms.Form.FormClosing> events of all MDI child forms are raised before the MDI parent form's <xref:System.Windows.Forms.Form.FormClosing> event is raised. Likewise, the <xref:System.Windows.Forms.Form.FormClosed> events of all MDI child forms are raised before the <xref:System.Windows.Forms.Form.FormClosed> event of the MDI parent form is raised.","pos":[0,438],"nodes":[{"content":"If the form is a multiple-document interface (MDI) parent form, the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Form.FormClosing&gt;</ph> events of all MDI child forms are raised before the MDI parent form's <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Form.FormClosing&gt;</ph> event is raised.","pos":[0,244],"source":"If the form is a multiple-document interface (MDI) parent form, the <xref:System.Windows.Forms.Form.FormClosing> events of all MDI child forms are raised before the MDI parent form's <xref:System.Windows.Forms.Form.FormClosing> event is raised."},{"content":"Likewise, the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Form.FormClosed&gt;</ph> events of all MDI child forms are raised before the <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Form.FormClosed&gt;</ph> event of the MDI parent form is raised.","pos":[245,438],"source":" Likewise, the <xref:System.Windows.Forms.Form.FormClosed> events of all MDI child forms are raised before the <xref:System.Windows.Forms.Form.FormClosed> event of the MDI parent form is raised."}]}]},{"pos":[1155,1305],"content":"For more information about handling events, see <bpt id=\"p1\">[</bpt>Handling and Raising Events<ept id=\"p1\">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.","source":"For more information about handling events, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)."}],"pos":[139261,140575],"yaml":true,"extradata":"MT"},{"content":"Occurs before the form is closed.","nodes":[{"pos":[0,33],"content":"Occurs before the form is closed.","nodes":[{"content":"Occurs before the form is closed.","pos":[0,33]}]}],"pos":[142816,142850],"yaml":true},{"content":"The <xref:System.Windows.Forms.Form.FormClosing> event occurs as the form is being closed. When a form is closed, it is disposed, releasing all resources associated with the form. If you cancel this event, the form remains opened. To cancel the closure of a form, set the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> property of the <xref:System.Windows.Forms.FormClosingEventArgs> passed to your event handler to `true`.  \n  \n When a form is displayed as a modal dialog box, clicking the **Close** button (the button with an X at the upper-right corner of the form) causes the form to be hidden and the <xref:System.Windows.Forms.Form.DialogResult%2A> property to be set to `DialogResult.Cancel`. You can override the value assigned to the <xref:System.Windows.Forms.Form.DialogResult%2A> property when the user clicks the **Close** button by setting the <xref:System.Windows.Forms.Form.DialogResult%2A> property in an event handler for the <xref:System.Windows.Forms.Form.FormClosing> event of the form.  \n  \n> [!NOTE]\n>  When the <xref:System.Windows.Forms.Form.Close%2A> method is called on a <xref:System.Windows.Forms.Form> displayed as a modeless window, you cannot call the <xref:System.Windows.Forms.Control.Show%2A> method to make the form visible, because the form's resources have already been released. To hide a form and then make it visible, use the <xref:System.Windows.Forms.Control.Hide%2A> method.  \n  \n If the form is a multiple-document interface (MDI) parent form, the <xref:System.Windows.Forms.Form.FormClosing> events of all MDI child forms are raised before the MDI parent form's <xref:System.Windows.Forms.Form.FormClosing> event is raised. Likewise, the <xref:System.Windows.Forms.Form.FormClosed> events of all MDI child forms are raised before the <xref:System.Windows.Forms.Form.FormClosed> event of the MDI parent form is raised. Canceling the <xref:System.Windows.Forms.Form.FormClosing> event of an MDI child form does not prevent the <xref:System.Windows.Forms.Form.FormClosing> event of the MDI parent form from being raised. However, canceling the event will set to `true` the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> property of the <xref:System.Windows.Forms.FormClosingEventArgs> class that is passed as a parameter to the parent form. To force all MDI parent and child forms to close, set the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> property to `false` in the MDI parent form.  \n  \n For more information about handling events, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).","nodes":[{"pos":[0,431],"content":"The <xref:System.Windows.Forms.Form.FormClosing> event occurs as the form is being closed. When a form is closed, it is disposed, releasing all resources associated with the form. If you cancel this event, the form remains opened. To cancel the closure of a form, set the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> property of the <xref:System.Windows.Forms.FormClosingEventArgs> passed to your event handler to `true`.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Form.FormClosing&gt;</ph> event occurs as the form is being closed.","pos":[0,90],"source":"The <xref:System.Windows.Forms.Form.FormClosing> event occurs as the form is being closed."},{"content":"When a form is closed, it is disposed, releasing all resources associated with the form.","pos":[91,179]},{"content":"If you cancel this event, the form remains opened.","pos":[180,230]},{"content":"To cancel the closure of a form, set the <ph id=\"ph1\">&lt;xref:System.ComponentModel.CancelEventArgs.Cancel%2A&gt;</ph> property of the <ph id=\"ph2\">&lt;xref:System.Windows.Forms.FormClosingEventArgs&gt;</ph> passed to your event handler to <ph id=\"ph3\">`true`</ph>.","pos":[231,431],"source":" To cancel the closure of a form, set the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> property of the <xref:System.Windows.Forms.FormClosingEventArgs> passed to your event handler to `true`."}]},{"pos":[438,1015],"content":"When a form is displayed as a modal dialog box, clicking the **Close** button (the button with an X at the upper-right corner of the form) causes the form to be hidden and the <xref:System.Windows.Forms.Form.DialogResult%2A> property to be set to `DialogResult.Cancel`. You can override the value assigned to the <xref:System.Windows.Forms.Form.DialogResult%2A> property when the user clicks the **Close** button by setting the <xref:System.Windows.Forms.Form.DialogResult%2A> property in an event handler for the <xref:System.Windows.Forms.Form.FormClosing> event of the form.","nodes":[{"content":"When a form is displayed as a modal dialog box, clicking the <bpt id=\"p1\">**</bpt>Close<ept id=\"p1\">**</ept> button (the button with an X at the upper-right corner of the form) causes the form to be hidden and the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Form.DialogResult%2A&gt;</ph> property to be set to <ph id=\"ph2\">`DialogResult.Cancel`</ph>.","pos":[0,269],"source":"When a form is displayed as a modal dialog box, clicking the **Close** button (the button with an X at the upper-right corner of the form) causes the form to be hidden and the <xref:System.Windows.Forms.Form.DialogResult%2A> property to be set to `DialogResult.Cancel`."},{"content":"You can override the value assigned to the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Form.DialogResult%2A&gt;</ph> property when the user clicks the <bpt id=\"p1\">**</bpt>Close<ept id=\"p1\">**</ept> button by setting the <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Form.DialogResult%2A&gt;</ph> property in an event handler for the <ph id=\"ph3\">&lt;xref:System.Windows.Forms.Form.FormClosing&gt;</ph> event of the form.","pos":[270,577],"source":" You can override the value assigned to the <xref:System.Windows.Forms.Form.DialogResult%2A> property when the user clicks the **Close** button by setting the <xref:System.Windows.Forms.Form.DialogResult%2A> property in an event handler for the <xref:System.Windows.Forms.Form.FormClosing> event of the form."}]},{"pos":[1023,1426],"content":"[!NOTE]\n When the <xref:System.Windows.Forms.Form.Close%2A> method is called on a <xref:System.Windows.Forms.Form> displayed as a modeless window, you cannot call the <xref:System.Windows.Forms.Control.Show%2A> method to make the form visible, because the form's resources have already been released. To hide a form and then make it visible, use the <xref:System.Windows.Forms.Control.Hide%2A> method.","leadings":["","> "],"nodes":[{"content":" When the <xref:System.Windows.Forms.Form.Close%2A> method is called on a <xref:System.Windows.Forms.Form> displayed as a modeless window, you cannot call the <xref:System.Windows.Forms.Control.Show%2A> method to make the form visible, because the form's resources have already been released. To hide a form and then make it visible, use the <xref:System.Windows.Forms.Control.Hide%2A> method.","pos":[8,401],"nodes":[{"content":"When the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Form.Close%2A&gt;</ph> method is called on a <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Form&gt;</ph> displayed as a modeless window, you cannot call the <ph id=\"ph3\">&lt;xref:System.Windows.Forms.Control.Show%2A&gt;</ph> method to make the form visible, because the form's resources have already been released.","pos":[1,292],"source":" When the <xref:System.Windows.Forms.Form.Close%2A> method is called on a <xref:System.Windows.Forms.Form> displayed as a modeless window, you cannot call the <xref:System.Windows.Forms.Control.Show%2A> method to make the form visible, because the form's resources have already been released."},{"content":"To hide a form and then make it visible, use the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.Hide%2A&gt;</ph> method.","pos":[293,393],"source":" To hide a form and then make it visible, use the <xref:System.Windows.Forms.Control.Hide%2A> method."}]}]},{"pos":[1433,2456],"content":"If the form is a multiple-document interface (MDI) parent form, the <xref:System.Windows.Forms.Form.FormClosing> events of all MDI child forms are raised before the MDI parent form's <xref:System.Windows.Forms.Form.FormClosing> event is raised. Likewise, the <xref:System.Windows.Forms.Form.FormClosed> events of all MDI child forms are raised before the <xref:System.Windows.Forms.Form.FormClosed> event of the MDI parent form is raised. Canceling the <xref:System.Windows.Forms.Form.FormClosing> event of an MDI child form does not prevent the <xref:System.Windows.Forms.Form.FormClosing> event of the MDI parent form from being raised. However, canceling the event will set to `true` the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> property of the <xref:System.Windows.Forms.FormClosingEventArgs> class that is passed as a parameter to the parent form. To force all MDI parent and child forms to close, set the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> property to `false` in the MDI parent form.","nodes":[{"content":"If the form is a multiple-document interface (MDI) parent form, the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Form.FormClosing&gt;</ph> events of all MDI child forms are raised before the MDI parent form's <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Form.FormClosing&gt;</ph> event is raised.","pos":[0,244],"source":"If the form is a multiple-document interface (MDI) parent form, the <xref:System.Windows.Forms.Form.FormClosing> events of all MDI child forms are raised before the MDI parent form's <xref:System.Windows.Forms.Form.FormClosing> event is raised."},{"content":"Likewise, the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Form.FormClosed&gt;</ph> events of all MDI child forms are raised before the <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Form.FormClosed&gt;</ph> event of the MDI parent form is raised.","pos":[245,438],"source":" Likewise, the <xref:System.Windows.Forms.Form.FormClosed> events of all MDI child forms are raised before the <xref:System.Windows.Forms.Form.FormClosed> event of the MDI parent form is raised."},{"content":"Canceling the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Form.FormClosing&gt;</ph> event of an MDI child form does not prevent the <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Form.FormClosing&gt;</ph> event of the MDI parent form from being raised.","pos":[439,638],"source":" Canceling the <xref:System.Windows.Forms.Form.FormClosing> event of an MDI child form does not prevent the <xref:System.Windows.Forms.Form.FormClosing> event of the MDI parent form from being raised."},{"content":"However, canceling the event will set to <ph id=\"ph1\">`true`</ph> the <ph id=\"ph2\">&lt;xref:System.ComponentModel.CancelEventArgs.Cancel%2A&gt;</ph> property of the <ph id=\"ph3\">&lt;xref:System.Windows.Forms.FormClosingEventArgs&gt;</ph> class that is passed as a parameter to the parent form.","pos":[639,866],"source":" However, canceling the event will set to `true` the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> property of the <xref:System.Windows.Forms.FormClosingEventArgs> class that is passed as a parameter to the parent form."},{"content":"To force all MDI parent and child forms to close, set the <ph id=\"ph1\">&lt;xref:System.ComponentModel.CancelEventArgs.Cancel%2A&gt;</ph> property to <ph id=\"ph2\">`false`</ph> in the MDI parent form.","pos":[867,1023],"source":" To force all MDI parent and child forms to close, set the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> property to `false` in the MDI parent form."}]},{"pos":[2463,2613],"content":"For more information about handling events, see <bpt id=\"p1\">[</bpt>Handling and Raising Events<ept id=\"p1\">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.","source":"For more information about handling events, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)."}],"pos":[142861,145486],"yaml":true,"extradata":"MT"},{"content":"Gets the size when autoscaling the form based on a specified font.","nodes":[{"pos":[0,66],"content":"Gets the size when autoscaling the form based on a specified font.","nodes":[{"content":"Gets the size when autoscaling the form based on a specified font.","pos":[0,66]}]}],"pos":[147844,147911],"yaml":true},{"content":"> [!IMPORTANT]\n>  The <xref:System.Windows.Forms.Form.GetAutoScaleSize%2A> method is obsolete in.NET Framework version 2.0. This member has been retained for backward compatibility. For more information about automatic scaling, see [Automatic Scaling in Windows Forms](~/docs/framework/winforms/automatic-scaling-in-windows-forms.md).  \n  \n You can use this method to determine the size a form would autoscale to for a specific font before applying the font to the form. If you want to determine the size a form is autoscaled to based on the font currently assigned to the form, use the <xref:System.Windows.Forms.Form.AutoScaleBaseSize%2A> property.","nodes":[{"pos":[2,334],"content":"[!IMPORTANT]\n The <xref:System.Windows.Forms.Form.GetAutoScaleSize%2A> method is obsolete in.NET Framework version 2.0. This member has been retained for backward compatibility. For more information about automatic scaling, see [Automatic Scaling in Windows Forms](~/docs/framework/winforms/automatic-scaling-in-windows-forms.md).","leadings":["","> "],"nodes":[{"content":" The <xref:System.Windows.Forms.Form.GetAutoScaleSize%2A> method is obsolete in.NET Framework version 2.0. This member has been retained for backward compatibility. For more information about automatic scaling, see [Automatic Scaling in Windows Forms](~/docs/framework/winforms/automatic-scaling-in-windows-forms.md).","pos":[13,330],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Form.GetAutoScaleSize%2A&gt;</ph> method is obsolete in.NET Framework version 2.0.","pos":[1,106],"source":" The <xref:System.Windows.Forms.Form.GetAutoScaleSize%2A> method is obsolete in.NET Framework version 2.0."},{"content":"This member has been retained for backward compatibility.","pos":[107,164]},{"content":"For more information about automatic scaling, see <bpt id=\"p1\">[</bpt>Automatic Scaling in Windows Forms<ept id=\"p1\">](~/docs/framework/winforms/automatic-scaling-in-windows-forms.md)</ept>.","pos":[165,317],"source":" For more information about automatic scaling, see [Automatic Scaling in Windows Forms](~/docs/framework/winforms/automatic-scaling-in-windows-forms.md)."}]}]},{"pos":[341,650],"content":"You can use this method to determine the size a form would autoscale to for a specific font before applying the font to the form. If you want to determine the size a form is autoscaled to based on the font currently assigned to the form, use the <xref:System.Windows.Forms.Form.AutoScaleBaseSize%2A> property.","nodes":[{"content":"You can use this method to determine the size a form would autoscale to for a specific font before applying the font to the form. If you want to determine the size a form is autoscaled to based on the font currently assigned to the form, use the <xref:System.Windows.Forms.Form.AutoScaleBaseSize%2A> property.","pos":[0,309],"nodes":[{"content":"You can use this method to determine the size a form would autoscale to for a specific font before applying the font to the form.","pos":[0,129]},{"content":"If you want to determine the size a form is autoscaled to based on the font currently assigned to the form, use the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Form.AutoScaleBaseSize%2A&gt;</ph> property.","pos":[130,309],"source":" If you want to determine the size a form is autoscaled to based on the font currently assigned to the form, use the <xref:System.Windows.Forms.Form.AutoScaleBaseSize%2A> property."}]}]}],"pos":[147922,148578],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Drawing.Font\"></xref> representing the font to determine the autoscaled base size of the form.","nodes":[{"pos":[0,115],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Drawing.Font\"&gt;&lt;/xref&gt;</ph> representing the font to determine the autoscaled base size of the form.","source":"A <xref href=\"System.Drawing.Font\"></xref> representing the font to determine the autoscaled base size of the form."}],"pos":[148925,149041],"yaml":true},{"content":"A <xref href=\"System.Drawing.SizeF\"></xref> representing the autoscaled size of the form.","nodes":[{"pos":[0,89],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Drawing.SizeF\"&gt;&lt;/xref&gt;</ph> representing the autoscaled size of the form.","source":"A <xref href=\"System.Drawing.SizeF\"></xref> representing the autoscaled size of the form."}],"pos":[149105,149195],"yaml":true},{"content":"Retrieves the bounds within which the control is scaled.","nodes":[{"pos":[0,56],"content":"Retrieves the bounds within which the control is scaled.","nodes":[{"content":"Retrieves the bounds within which the control is scaled.","pos":[0,56]}]}],"pos":[150576,150633],"yaml":true},{"content":"A <xref href=\"System.Drawing.Rectangle\"></xref> that specifies the area for which to retrieve the display bounds.","nodes":[{"pos":[0,113],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Drawing.Rectangle\"&gt;&lt;/xref&gt;</ph> that specifies the area for which to retrieve the display bounds.","source":"A <xref href=\"System.Drawing.Rectangle\"></xref> that specifies the area for which to retrieve the display bounds."}],"pos":[150917,151031],"yaml":true},{"content":"The height and width of the control's bounds.","nodes":[{"pos":[0,45],"content":"The height and width of the control's bounds.","nodes":[{"content":"The height and width of the control's bounds.","pos":[0,45]}]}],"pos":[151100,151146],"yaml":true},{"content":"One of the values of <xref href=\"System.Windows.Forms.BoundsSpecified\"></xref> that specifies the bounds of the control to use when defining its size and position.","nodes":[{"pos":[0,163],"content":"One of the values of <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.BoundsSpecified\"&gt;&lt;/xref&gt;</ph> that specifies the bounds of the control to use when defining its size and position.","source":"One of the values of <xref href=\"System.Windows.Forms.BoundsSpecified\"></xref> that specifies the bounds of the control to use when defining its size and position."}],"pos":[151234,151398],"yaml":true},{"content":"A <xref href=\"System.Drawing.Rectangle\"></xref> representing the bounds within which the control is scaled.","nodes":[{"pos":[0,107],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Drawing.Rectangle\"&gt;&lt;/xref&gt;</ph> representing the bounds within which the control is scaled.","source":"A <xref href=\"System.Drawing.Rectangle\"></xref> representing the bounds within which the control is scaled."}],"pos":[151466,151574],"yaml":true},{"content":"Gets or sets a value indicating whether a Help button should be displayed in the caption box of the form.","nodes":[{"pos":[0,105],"content":"Gets or sets a value indicating whether a Help button should be displayed in the caption box of the form.","nodes":[{"content":"Gets or sets a value indicating whether a Help button should be displayed in the caption box of the form.","pos":[0,105]}]}],"pos":[152537,152643],"yaml":true},{"content":"When this property is set to `true`, a small button with a question mark appears in the caption bar to the left of the **Close** button. You can use this button to display help for your application. You can create an event handler for the <xref:System.Windows.Forms.Control.HelpRequested> event of the <xref:System.Windows.Forms.Control> class to display Help information to the user when the Help button of the form is clicked.  \n  \n> [!IMPORTANT]\n>  The value of the <xref:System.Windows.Forms.Form.HelpButton%2A> property is ignored if the **Maximize** or **Minimize** buttons are shown.","nodes":[{"pos":[0,428],"content":"When this property is set to `true`, a small button with a question mark appears in the caption bar to the left of the **Close** button. You can use this button to display help for your application. You can create an event handler for the <xref:System.Windows.Forms.Control.HelpRequested> event of the <xref:System.Windows.Forms.Control> class to display Help information to the user when the Help button of the form is clicked.","nodes":[{"content":"When this property is set to <ph id=\"ph1\">`true`</ph>, a small button with a question mark appears in the caption bar to the left of the <bpt id=\"p1\">**</bpt>Close<ept id=\"p1\">**</ept> button.","pos":[0,136],"source":"When this property is set to `true`, a small button with a question mark appears in the caption bar to the left of the **Close** button."},{"content":"You can use this button to display help for your application.","pos":[137,198]},{"content":"You can create an event handler for the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.HelpRequested&gt;</ph> event of the <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Control&gt;</ph> class to display Help information to the user when the Help button of the form is clicked.","pos":[199,428],"source":" You can create an event handler for the <xref:System.Windows.Forms.Control.HelpRequested> event of the <xref:System.Windows.Forms.Control> class to display Help information to the user when the Help button of the form is clicked."}]},{"pos":[436,590],"content":"[!IMPORTANT]\n The value of the <xref:System.Windows.Forms.Form.HelpButton%2A> property is ignored if the **Maximize** or **Minimize** buttons are shown.","leadings":["","> "],"nodes":[{"content":"The value of the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Form.HelpButton%2A&gt;</ph> property is ignored if the <bpt id=\"p1\">**</bpt>Maximize<ept id=\"p1\">**</ept> or <bpt id=\"p2\">**</bpt>Minimize<ept id=\"p2\">**</ept> buttons are shown.","pos":[14,152],"source":" The value of the <xref:System.Windows.Forms.Form.HelpButton%2A> property is ignored if the **Maximize** or **Minimize** buttons are shown."}]}],"pos":[152654,153250],"yaml":true,"extradata":"MT"},{"content":"`true` to display a Help button in the form's caption bar; otherwise, `false`. The default is `false`.","nodes":[{"pos":[0,102],"content":"`true` to display a Help button in the form's caption bar; otherwise, `false`. The default is `false`.","nodes":[{"content":"<ph id=\"ph1\">`true`</ph> to display a Help button in the form's caption bar; otherwise, <ph id=\"ph2\">`false`</ph>.","pos":[0,78],"source":"`true` to display a Help button in the form's caption bar; otherwise, `false`."},{"content":"The default is <ph id=\"ph1\">`false`</ph>.","pos":[79,102],"source":" The default is `false`."}]}],"pos":[154803,154908],"yaml":true},{"content":"Occurs when the **Help** button is clicked.","nodes":[{"pos":[0,43],"content":"Occurs when the <bpt id=\"p1\">**</bpt>Help<ept id=\"p1\">**</ept> button is clicked.","source":"Occurs when the **Help** button is clicked."}],"pos":[155905,155949],"yaml":true},{"content":"The <xref:System.Windows.Forms.Form.HelpButtonClicked> event occurs when the **Help** button in the form's caption bar is clicked. The **Help** button is displayed when the <xref:System.Windows.Forms.Form.HelpButton%2A> property is set to `true`. <xref:System.Windows.Forms.Form.HelpButtonClicked> can be canceled.  \n  \n For more information about handling events, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).","nodes":[{"pos":[0,314],"content":"The <xref:System.Windows.Forms.Form.HelpButtonClicked> event occurs when the **Help** button in the form's caption bar is clicked. The **Help** button is displayed when the <xref:System.Windows.Forms.Form.HelpButton%2A> property is set to `true`. <xref:System.Windows.Forms.Form.HelpButtonClicked> can be canceled.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Form.HelpButtonClicked&gt;</ph> event occurs when the <bpt id=\"p1\">**</bpt>Help<ept id=\"p1\">**</ept> button in the form's caption bar is clicked.","pos":[0,130],"source":"The <xref:System.Windows.Forms.Form.HelpButtonClicked> event occurs when the **Help** button in the form's caption bar is clicked."},{"content":"The <bpt id=\"p1\">**</bpt>Help<ept id=\"p1\">**</ept> button is displayed when the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Form.HelpButton%2A&gt;</ph> property is set to <ph id=\"ph2\">`true`</ph>.","pos":[131,246],"source":" The **Help** button is displayed when the <xref:System.Windows.Forms.Form.HelpButton%2A> property is set to `true`."},{"content":"<ph id=\"ph1\">&lt;xref:System.Windows.Forms.Form.HelpButtonClicked&gt;</ph> can be canceled.","pos":[247,314],"source":" <xref:System.Windows.Forms.Form.HelpButtonClicked> can be canceled."}]},{"pos":[321,471],"content":"For more information about handling events, see <bpt id=\"p1\">[</bpt>Handling and Raising Events<ept id=\"p1\">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.","source":"For more information about handling events, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)."}],"pos":[155960,156436],"yaml":true,"extradata":"MT"},{"content":"Gets or sets the icon for the form.","nodes":[{"pos":[0,35],"content":"Gets or sets the icon for the form.","nodes":[{"content":"Gets or sets the icon for the form.","pos":[0,35]}]}],"pos":[158774,158810],"yaml":true},{"content":"A form's icon designates the picture that represents the form in the taskbar as well as the icon that is displayed for the control box of the form.  \n  \n This property will have no effect if <xref:System.Windows.Forms.Form.FormBorderStyle%2A> is set to <xref:System.Windows.Forms.FormBorderStyle.FixedDialog>. In that case, the form will not display an icon.","nodes":[{"pos":[0,147],"content":"A form's icon designates the picture that represents the form in the taskbar as well as the icon that is displayed for the control box of the form.","nodes":[{"content":"A form's icon designates the picture that represents the form in the taskbar as well as the icon that is displayed for the control box of the form.","pos":[0,147]}]},{"pos":[154,358],"content":"This property will have no effect if <xref:System.Windows.Forms.Form.FormBorderStyle%2A> is set to <xref:System.Windows.Forms.FormBorderStyle.FixedDialog>. In that case, the form will not display an icon.","nodes":[{"content":"This property will have no effect if <xref:System.Windows.Forms.Form.FormBorderStyle%2A> is set to <xref:System.Windows.Forms.FormBorderStyle.FixedDialog>. In that case, the form will not display an icon.","pos":[0,204],"nodes":[{"content":"This property will have no effect if <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Form.FormBorderStyle%2A&gt;</ph> is set to <ph id=\"ph2\">&lt;xref:System.Windows.Forms.FormBorderStyle.FixedDialog&gt;</ph>.","pos":[0,155],"source":"This property will have no effect if <xref:System.Windows.Forms.Form.FormBorderStyle%2A> is set to <xref:System.Windows.Forms.FormBorderStyle.FixedDialog>."},{"content":"In that case, the form will not display an icon.","pos":[156,204]}]}]}],"pos":[158821,159184],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.Drawing.Icon\"></xref> that represents the icon for the form.","nodes":[{"pos":[0,82],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Drawing.Icon\"&gt;&lt;/xref&gt;</ph> that represents the icon for the form.","source":"An <xref href=\"System.Drawing.Icon\"></xref> that represents the icon for the form."}],"pos":[159316,159399],"yaml":true},{"content":"Occurs after the input language of the form has changed.","nodes":[{"pos":[0,56],"content":"Occurs after the input language of the form has changed.","nodes":[{"content":"Occurs after the input language of the form has changed.","pos":[0,56]}]}],"pos":[160408,160465],"yaml":true},{"content":"You can use this event to make changes to your form's appearance and text based on changes made to the input language of the form.  \n  \n For more information about handling events, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).","nodes":[{"pos":[0,130],"content":"You can use this event to make changes to your form's appearance and text based on changes made to the input language of the form.","nodes":[{"content":"You can use this event to make changes to your form's appearance and text based on changes made to the input language of the form.","pos":[0,130]}]},{"pos":[137,287],"content":"For more information about handling events, see <bpt id=\"p1\">[</bpt>Handling and Raising Events<ept id=\"p1\">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.","source":"For more information about handling events, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)."}],"pos":[160476,160768],"yaml":true,"extradata":"MT"},{"content":"Occurs when the user attempts to change the input language for the form.","nodes":[{"pos":[0,72],"content":"Occurs when the user attempts to change the input language for the form.","nodes":[{"content":"Occurs when the user attempts to change the input language for the form.","pos":[0,72]}]}],"pos":[163119,163192],"yaml":true},{"content":"This event occurs before the change of input language is made for the form. You can cancel the language change by setting the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> property of the <xref:System.Windows.Forms.InputLanguageChangingEventArgs> passed to your event handler to `false`. If the event is canceled, the input language is not changed. You can use this event to determine whether the requested input language change is appropriate for your application.  \n  \n For more information about handling events, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).","nodes":[{"pos":[0,474],"content":"This event occurs before the change of input language is made for the form. You can cancel the language change by setting the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> property of the <xref:System.Windows.Forms.InputLanguageChangingEventArgs> passed to your event handler to `false`. If the event is canceled, the input language is not changed. You can use this event to determine whether the requested input language change is appropriate for your application.","nodes":[{"content":"This event occurs before the change of input language is made for the form.","pos":[0,75]},{"content":"You can cancel the language change by setting the <ph id=\"ph1\">&lt;xref:System.ComponentModel.CancelEventArgs.Cancel%2A&gt;</ph> property of the <ph id=\"ph2\">&lt;xref:System.Windows.Forms.InputLanguageChangingEventArgs&gt;</ph> passed to your event handler to <ph id=\"ph3\">`false`</ph>.","pos":[76,296],"source":" You can cancel the language change by setting the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> property of the <xref:System.Windows.Forms.InputLanguageChangingEventArgs> passed to your event handler to `false`."},{"content":"If the event is canceled, the input language is not changed.","pos":[297,357]},{"content":"You can use this event to determine whether the requested input language change is appropriate for your application.","pos":[358,474]}]},{"pos":[481,631],"content":"For more information about handling events, see <bpt id=\"p1\">[</bpt>Handling and Raising Events<ept id=\"p1\">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.","source":"For more information about handling events, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)."}],"pos":[163203,163839],"yaml":true,"extradata":"MT"},{"content":"Gets a value indicating whether the form is a multiple-document interface (MDI) child form.","nodes":[{"pos":[0,91],"content":"Gets a value indicating whether the form is a multiple-document interface (MDI) child form.","nodes":[{"content":"Gets a value indicating whether the form is a multiple-document interface (MDI) child form.","pos":[0,91]}]}],"pos":[166132,166224],"yaml":true},{"content":"At run time, MDI child forms are displayed inside the client area of an MDI parent form. An MDI child form can be maximized, minimized, and moved within the MDI parent form. To create an MDI child form, assign the <xref:System.Windows.Forms.Form> that will be the MDI parent form to the <xref:System.Windows.Forms.Form.MdiParent%2A> property of the child form. You can use the <xref:System.Windows.Forms.Form.IsMdiContainer%2A> property to determine whether a form is an MDI parent form.  \n  \n You can use the <xref:System.Windows.Forms.Form.IsMdiChild%2A> property to determine whether a form returned by a method or property is an MDI child form or a standard form in your application such as a dialog box.  \n  \n> [!NOTE]\n>  All MDI child forms have sizable borders, a control-menu box, and Minimize and **Maximize** buttons, regardless of the settings of the <xref:System.Windows.Forms.Form.FormBorderStyle%2A>, <xref:System.Windows.Forms.Form.ControlBox%2A>, <xref:System.Windows.Forms.Form.MinimizeBox%2A>, and <xref:System.Windows.Forms.Form.MaximizeBox%2A> properties.","nodes":[{"pos":[0,487],"content":"At run time, MDI child forms are displayed inside the client area of an MDI parent form. An MDI child form can be maximized, minimized, and moved within the MDI parent form. To create an MDI child form, assign the <xref:System.Windows.Forms.Form> that will be the MDI parent form to the <xref:System.Windows.Forms.Form.MdiParent%2A> property of the child form. You can use the <xref:System.Windows.Forms.Form.IsMdiContainer%2A> property to determine whether a form is an MDI parent form.","nodes":[{"content":"At run time, MDI child forms are displayed inside the client area of an MDI parent form. An MDI child form can be maximized, minimized, and moved within the MDI parent form. To create an MDI child form, assign the <xref:System.Windows.Forms.Form> that will be the MDI parent form to the <xref:System.Windows.Forms.Form.MdiParent%2A> property of the child form. You can use the <xref:System.Windows.Forms.Form.IsMdiContainer%2A> property to determine whether a form is an MDI parent form.","pos":[0,487],"nodes":[{"content":"At run time, MDI child forms are displayed inside the client area of an MDI parent form.","pos":[0,88]},{"content":"An MDI child form can be maximized, minimized, and moved within the MDI parent form.","pos":[89,173]},{"content":"To create an MDI child form, assign the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Form&gt;</ph> that will be the MDI parent form to the <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Form.MdiParent%2A&gt;</ph> property of the child form.","pos":[174,360],"source":" To create an MDI child form, assign the <xref:System.Windows.Forms.Form> that will be the MDI parent form to the <xref:System.Windows.Forms.Form.MdiParent%2A> property of the child form."},{"content":"You can use the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Form.IsMdiContainer%2A&gt;</ph> property to determine whether a form is an MDI parent form.","pos":[361,487],"source":" You can use the <xref:System.Windows.Forms.Form.IsMdiContainer%2A> property to determine whether a form is an MDI parent form."}]}]},{"pos":[494,708],"content":"You can use the <xref:System.Windows.Forms.Form.IsMdiChild%2A> property to determine whether a form returned by a method or property is an MDI child form or a standard form in your application such as a dialog box.","nodes":[{"content":"You can use the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Form.IsMdiChild%2A&gt;</ph> property to determine whether a form returned by a method or property is an MDI child form or a standard form in your application such as a dialog box.","pos":[0,214],"source":"You can use the <xref:System.Windows.Forms.Form.IsMdiChild%2A> property to determine whether a form returned by a method or property is an MDI child form or a standard form in your application such as a dialog box."}]},{"pos":[716,1075],"content":"[!NOTE]\n All MDI child forms have sizable borders, a control-menu box, and Minimize and **Maximize** buttons, regardless of the settings of the <xref:System.Windows.Forms.Form.FormBorderStyle%2A>, <xref:System.Windows.Forms.Form.ControlBox%2A>, <xref:System.Windows.Forms.Form.MinimizeBox%2A>, and <xref:System.Windows.Forms.Form.MaximizeBox%2A> properties.","leadings":["","> "],"nodes":[{"content":"All MDI child forms have sizable borders, a control-menu box, and Minimize and <bpt id=\"p1\">**</bpt>Maximize<ept id=\"p1\">**</ept> buttons, regardless of the settings of the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Form.FormBorderStyle%2A&gt;</ph>, <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Form.ControlBox%2A&gt;</ph>, <ph id=\"ph3\">&lt;xref:System.Windows.Forms.Form.MinimizeBox%2A&gt;</ph>, and <ph id=\"ph4\">&lt;xref:System.Windows.Forms.Form.MaximizeBox%2A&gt;</ph> properties.","pos":[9,357],"source":" All MDI child forms have sizable borders, a control-menu box, and Minimize and **Maximize** buttons, regardless of the settings of the <xref:System.Windows.Forms.Form.FormBorderStyle%2A>, <xref:System.Windows.Forms.Form.ControlBox%2A>, <xref:System.Windows.Forms.Form.MinimizeBox%2A>, and <xref:System.Windows.Forms.Form.MaximizeBox%2A> properties."}]}],"pos":[166235,167318],"yaml":true,"extradata":"MT"},{"content":"`true` if the form is an MDI child form; otherwise, `false`.","nodes":[{"pos":[0,60],"content":"<ph id=\"ph1\">`true`</ph> if the form is an MDI child form; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the form is an MDI child form; otherwise, `false`."}],"pos":[167488,167551],"yaml":true},{"content":"Gets or sets a value indicating whether the form is a container for multiple-document interface (MDI) child forms.","nodes":[{"pos":[0,114],"content":"Gets or sets a value indicating whether the form is a container for multiple-document interface (MDI) child forms.","nodes":[{"content":"Gets or sets a value indicating whether the form is a container for multiple-document interface (MDI) child forms.","pos":[0,114]}]}],"pos":[168581,168696],"yaml":true},{"content":"This property changes the display and behavior of the form to an MDI parent form. When this property is set to `true`, the form displays a sunken client area with a raised border. All MDI child forms assigned to the parent form are displayed within its client area.  \n  \n When an MDI parent form is closed, the <xref:System.Windows.Forms.Form.Closing> events of all MDI child forms are raised before the MDI parent form's <xref:System.Windows.Forms.Form.Closing> event is raised. In addition, the <xref:System.Windows.Forms.Form.Closed> events of all MDI child forms are raised before the <xref:System.Windows.Forms.Form.Closed> event of the MDI parent form is raised.  \n  \n> [!NOTE]\n>  If there are two <xref:System.Windows.Forms.MenuStrip> controls on an MDI child form, setting <xref:System.Windows.Forms.Form.IsMdiContainer%2A> to `true` for the parent form merges the contents of only one of the <xref:System.Windows.Forms.MenuStrip> controls. Use <xref:System.Windows.Forms.ToolStripManager.Merge%2A> to merge the contents of additional child <xref:System.Windows.Forms.MenuStrip> controls on the MDI parent form.","nodes":[{"pos":[0,265],"content":"This property changes the display and behavior of the form to an MDI parent form. When this property is set to `true`, the form displays a sunken client area with a raised border. All MDI child forms assigned to the parent form are displayed within its client area.","nodes":[{"content":"This property changes the display and behavior of the form to an MDI parent form.","pos":[0,81]},{"content":"When this property is set to <ph id=\"ph1\">`true`</ph>, the form displays a sunken client area with a raised border.","pos":[82,179],"source":" When this property is set to `true`, the form displays a sunken client area with a raised border."},{"content":"All MDI child forms assigned to the parent form are displayed within its client area.","pos":[180,265]}]},{"pos":[272,668],"content":"When an MDI parent form is closed, the <xref:System.Windows.Forms.Form.Closing> events of all MDI child forms are raised before the MDI parent form's <xref:System.Windows.Forms.Form.Closing> event is raised. In addition, the <xref:System.Windows.Forms.Form.Closed> events of all MDI child forms are raised before the <xref:System.Windows.Forms.Form.Closed> event of the MDI parent form is raised.","nodes":[{"content":"When an MDI parent form is closed, the <xref:System.Windows.Forms.Form.Closing> events of all MDI child forms are raised before the MDI parent form's <xref:System.Windows.Forms.Form.Closing> event is raised. In addition, the <xref:System.Windows.Forms.Form.Closed> events of all MDI child forms are raised before the <xref:System.Windows.Forms.Form.Closed> event of the MDI parent form is raised.","pos":[0,396],"nodes":[{"content":"When an MDI parent form is closed, the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Form.Closing&gt;</ph> events of all MDI child forms are raised before the MDI parent form's <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Form.Closing&gt;</ph> event is raised.","pos":[0,207],"source":"When an MDI parent form is closed, the <xref:System.Windows.Forms.Form.Closing> events of all MDI child forms are raised before the MDI parent form's <xref:System.Windows.Forms.Form.Closing> event is raised."},{"content":"In addition, the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Form.Closed&gt;</ph> events of all MDI child forms are raised before the <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Form.Closed&gt;</ph> event of the MDI parent form is raised.","pos":[208,396],"source":" In addition, the <xref:System.Windows.Forms.Form.Closed> events of all MDI child forms are raised before the <xref:System.Windows.Forms.Form.Closed> event of the MDI parent form is raised."}]}]},{"pos":[676,1119],"content":"[!NOTE]\n If there are two <xref:System.Windows.Forms.MenuStrip> controls on an MDI child form, setting <xref:System.Windows.Forms.Form.IsMdiContainer%2A> to `true` for the parent form merges the contents of only one of the <xref:System.Windows.Forms.MenuStrip> controls. Use <xref:System.Windows.Forms.ToolStripManager.Merge%2A> to merge the contents of additional child <xref:System.Windows.Forms.MenuStrip> controls on the MDI parent form.","leadings":["","> "],"nodes":[{"content":" If there are two <xref:System.Windows.Forms.MenuStrip> controls on an MDI child form, setting <xref:System.Windows.Forms.Form.IsMdiContainer%2A> to `true` for the parent form merges the contents of only one of the <xref:System.Windows.Forms.MenuStrip> controls. Use <xref:System.Windows.Forms.ToolStripManager.Merge%2A> to merge the contents of additional child <xref:System.Windows.Forms.MenuStrip> controls on the MDI parent form.","pos":[8,441],"nodes":[{"content":"If there are two <ph id=\"ph1\">&lt;xref:System.Windows.Forms.MenuStrip&gt;</ph> controls on an MDI child form, setting <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Form.IsMdiContainer%2A&gt;</ph> to <ph id=\"ph3\">`true`</ph> for the parent form merges the contents of only one of the <ph id=\"ph4\">&lt;xref:System.Windows.Forms.MenuStrip&gt;</ph> controls.","pos":[1,262],"source":" If there are two <xref:System.Windows.Forms.MenuStrip> controls on an MDI child form, setting <xref:System.Windows.Forms.Form.IsMdiContainer%2A> to `true` for the parent form merges the contents of only one of the <xref:System.Windows.Forms.MenuStrip> controls."},{"content":"Use <ph id=\"ph1\">&lt;xref:System.Windows.Forms.ToolStripManager.Merge%2A&gt;</ph> to merge the contents of additional child <ph id=\"ph2\">&lt;xref:System.Windows.Forms.MenuStrip&gt;</ph> controls on the MDI parent form.","pos":[263,433],"source":" Use <xref:System.Windows.Forms.ToolStripManager.Merge%2A> to merge the contents of additional child <xref:System.Windows.Forms.MenuStrip> controls on the MDI parent form."}]}]}],"pos":[168707,169834],"yaml":true,"extradata":"MT"},{"content":"`true` if the form is a container for MDI child forms; otherwise, `false`. The default is `false`.","nodes":[{"pos":[0,98],"content":"`true` if the form is a container for MDI child forms; otherwise, `false`. The default is `false`.","nodes":[{"content":"<ph id=\"ph1\">`true`</ph> if the form is a container for MDI child forms; otherwise, <ph id=\"ph2\">`false`</ph>.","pos":[0,74],"source":"`true` if the form is a container for MDI child forms; otherwise, `false`."},{"content":"The default is <ph id=\"ph1\">`false`</ph>.","pos":[75,98],"source":" The default is `false`."}]}],"pos":[170528,170629],"yaml":true},{"content":"Gets a value indicating whether the form can use all windows and user input events without restriction.","nodes":[{"pos":[0,103],"content":"Gets a value indicating whether the form can use all windows and user input events without restriction.","nodes":[{"content":"Gets a value indicating whether the form can use all windows and user input events without restriction.","pos":[0,103]}]}],"pos":[171639,171743],"yaml":true},{"content":"The <xref:System.Windows.Forms.Form.IsRestrictedWindow%2A> property determines whether the <xref:System.Security.Permissions.UIPermissionWindow.AllWindows> permission is granted. This property is set at run time in the form's constructor, and is cached for the lifetime of the form. Windows Forms applications running in partial trust cannot circumvent this check, as the common language runtime ensures that the parent constructor is always called in partial trust.","nodes":[{"pos":[0,466],"content":"The <xref:System.Windows.Forms.Form.IsRestrictedWindow%2A> property determines whether the <xref:System.Security.Permissions.UIPermissionWindow.AllWindows> permission is granted. This property is set at run time in the form's constructor, and is cached for the lifetime of the form. Windows Forms applications running in partial trust cannot circumvent this check, as the common language runtime ensures that the parent constructor is always called in partial trust.","nodes":[{"content":"The <xref:System.Windows.Forms.Form.IsRestrictedWindow%2A> property determines whether the <xref:System.Security.Permissions.UIPermissionWindow.AllWindows> permission is granted. This property is set at run time in the form's constructor, and is cached for the lifetime of the form. Windows Forms applications running in partial trust cannot circumvent this check, as the common language runtime ensures that the parent constructor is always called in partial trust.","pos":[0,466],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Form.IsRestrictedWindow%2A&gt;</ph> property determines whether the <ph id=\"ph2\">&lt;xref:System.Security.Permissions.UIPermissionWindow.AllWindows&gt;</ph> permission is granted.","pos":[0,178],"source":"The <xref:System.Windows.Forms.Form.IsRestrictedWindow%2A> property determines whether the <xref:System.Security.Permissions.UIPermissionWindow.AllWindows> permission is granted."},{"content":"This property is set at run time in the form's constructor, and is cached for the lifetime of the form.","pos":[179,282]},{"content":"Windows Forms applications running in partial trust cannot circumvent this check, as the common language runtime ensures that the parent constructor is always called in partial trust.","pos":[283,466]}]}]}],"pos":[171754,172221],"yaml":true,"extradata":"MT"},{"content":"`true` if the form has restrictions; otherwise, `false`. The default is `true`.","nodes":[{"pos":[0,79],"content":"`true` if the form has restrictions; otherwise, `false`. The default is `true`.","nodes":[{"content":"<ph id=\"ph1\">`true`</ph> if the form has restrictions; otherwise, <ph id=\"ph2\">`false`</ph>.","pos":[0,56],"source":"`true` if the form has restrictions; otherwise, `false`."},{"content":"The default is <ph id=\"ph1\">`true`</ph>.","pos":[57,79],"source":" The default is `true`."}]}],"pos":[172399,172481],"yaml":true},{"content":"Gets or sets a value indicating whether the form will receive key events before the event is passed to the control that has focus.","nodes":[{"pos":[0,130],"content":"Gets or sets a value indicating whether the form will receive key events before the event is passed to the control that has focus.","nodes":[{"content":"Gets or sets a value indicating whether the form will receive key events before the event is passed to the control that has focus.","pos":[0,130]}]}],"pos":[173495,173626],"yaml":true},{"content":"When this property is set to `true`, the form will receive all <xref:System.Windows.Forms.Control.KeyPress>, <xref:System.Windows.Forms.Control.KeyDown>, and <xref:System.Windows.Forms.Control.KeyUp> events. After the form's event handlers have completed processing the keystroke, the keystroke is then assigned to the control with focus. For example, if the <xref:System.Windows.Forms.Form.KeyPreview%2A> property is set to `true` and the currently selected control is a <xref:System.Windows.Forms.TextBox>, after the keystroke is handled by the event handlers of the form the <xref:System.Windows.Forms.TextBox> control will receive the key that was pressed. To handle keyboard events only at the form level and not allow controls to receive keyboard events, set the <xref:System.Windows.Forms.KeyPressEventArgs.Handled%2A?displayProperty=fullName> property in your form's <xref:System.Windows.Forms.Control.KeyPress> event handler to `true`.  \n  \n You can use this property to process most keystrokes in your application and either handle the keystroke or call the appropriate control to handle the keystroke. For example, when an application uses function keys, you might want to process the keystrokes at the form level rather than writing code for each control that might receive keystroke events.  \n  \n> [!NOTE]\n>  If a form has no visible or enabled controls, it automatically receives all keyboard events.  \n  \n> [!NOTE]\n>  A control on a form may be programmed to cancel any keystrokes it receives. Since the control never sends these keystrokes to the form, the form will never see them regardless of the setting of <xref:System.Windows.Forms.Form.KeyPreview%2A>.","nodes":[{"pos":[0,944],"content":"When this property is set to `true`, the form will receive all <xref:System.Windows.Forms.Control.KeyPress>, <xref:System.Windows.Forms.Control.KeyDown>, and <xref:System.Windows.Forms.Control.KeyUp> events. After the form's event handlers have completed processing the keystroke, the keystroke is then assigned to the control with focus. For example, if the <xref:System.Windows.Forms.Form.KeyPreview%2A> property is set to `true` and the currently selected control is a <xref:System.Windows.Forms.TextBox>, after the keystroke is handled by the event handlers of the form the <xref:System.Windows.Forms.TextBox> control will receive the key that was pressed. To handle keyboard events only at the form level and not allow controls to receive keyboard events, set the <xref:System.Windows.Forms.KeyPressEventArgs.Handled%2A?displayProperty=fullName> property in your form's <xref:System.Windows.Forms.Control.KeyPress> event handler to `true`.","nodes":[{"content":"When this property is set to <ph id=\"ph1\">`true`</ph>, the form will receive all <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Control.KeyPress&gt;</ph>, <ph id=\"ph3\">&lt;xref:System.Windows.Forms.Control.KeyDown&gt;</ph>, and <ph id=\"ph4\">&lt;xref:System.Windows.Forms.Control.KeyUp&gt;</ph> events.","pos":[0,207],"source":"When this property is set to `true`, the form will receive all <xref:System.Windows.Forms.Control.KeyPress>, <xref:System.Windows.Forms.Control.KeyDown>, and <xref:System.Windows.Forms.Control.KeyUp> events."},{"content":"After the form's event handlers have completed processing the keystroke, the keystroke is then assigned to the control with focus.","pos":[208,338]},{"content":"For example, if the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Form.KeyPreview%2A&gt;</ph> property is set to <ph id=\"ph2\">`true`</ph> and the currently selected control is a <ph id=\"ph3\">&lt;xref:System.Windows.Forms.TextBox&gt;</ph>, after the keystroke is handled by the event handlers of the form the <ph id=\"ph4\">&lt;xref:System.Windows.Forms.TextBox&gt;</ph> control will receive the key that was pressed.","pos":[339,660],"source":" For example, if the <xref:System.Windows.Forms.Form.KeyPreview%2A> property is set to `true` and the currently selected control is a <xref:System.Windows.Forms.TextBox>, after the keystroke is handled by the event handlers of the form the <xref:System.Windows.Forms.TextBox> control will receive the key that was pressed."},{"content":"To handle keyboard events only at the form level and not allow controls to receive keyboard events, set the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.KeyPressEventArgs.Handled%2A?displayProperty=fullName&gt;</ph> property in your form's <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Control.KeyPress&gt;</ph> event handler to <ph id=\"ph3\">`true`</ph>.","pos":[661,944],"source":" To handle keyboard events only at the form level and not allow controls to receive keyboard events, set the <xref:System.Windows.Forms.KeyPressEventArgs.Handled%2A?displayProperty=fullName> property in your form's <xref:System.Windows.Forms.Control.KeyPress> event handler to `true`."}]},{"pos":[951,1303],"content":"You can use this property to process most keystrokes in your application and either handle the keystroke or call the appropriate control to handle the keystroke. For example, when an application uses function keys, you might want to process the keystrokes at the form level rather than writing code for each control that might receive keystroke events.","nodes":[{"content":"You can use this property to process most keystrokes in your application and either handle the keystroke or call the appropriate control to handle the keystroke. For example, when an application uses function keys, you might want to process the keystrokes at the form level rather than writing code for each control that might receive keystroke events.","pos":[0,352],"nodes":[{"content":"You can use this property to process most keystrokes in your application and either handle the keystroke or call the appropriate control to handle the keystroke.","pos":[0,161]},{"content":"For example, when an application uses function keys, you might want to process the keystrokes at the form level rather than writing code for each control that might receive keystroke events.","pos":[162,352]}]}]},{"pos":[1311,1414],"content":"[!NOTE]\n If a form has no visible or enabled controls, it automatically receives all keyboard events.","leadings":["","> "],"nodes":[{"content":"If a form has no visible or enabled controls, it automatically receives all keyboard events.","pos":[9,101]}]},{"pos":[1422,1674],"content":"[!NOTE]\n A control on a form may be programmed to cancel any keystrokes it receives. Since the control never sends these keystrokes to the form, the form will never see them regardless of the setting of <xref:System.Windows.Forms.Form.KeyPreview%2A>.","leadings":["","> "],"nodes":[{"content":" A control on a form may be programmed to cancel any keystrokes it receives. Since the control never sends these keystrokes to the form, the form will never see them regardless of the setting of <xref:System.Windows.Forms.Form.KeyPreview%2A>.","pos":[8,250],"nodes":[{"content":"A control on a form may be programmed to cancel any keystrokes it receives.","pos":[1,76]},{"content":"Since the control never sends these keystrokes to the form, the form will never see them regardless of the setting of <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Form.KeyPreview%2A&gt;</ph>.","pos":[77,242],"source":" Since the control never sends these keystrokes to the form, the form will never see them regardless of the setting of <xref:System.Windows.Forms.Form.KeyPreview%2A>."}]}]}],"pos":[173637,175322],"yaml":true,"extradata":"MT"},{"content":"`true` if the form will receive all key events; `false` if the currently selected control on the form receives key events. The default is `false`.","nodes":[{"pos":[0,146],"content":"`true` if the form will receive all key events; `false` if the currently selected control on the form receives key events. The default is `false`.","nodes":[{"content":"<ph id=\"ph1\">`true`</ph> if the form will receive all key events; <ph id=\"ph2\">`false`</ph> if the currently selected control on the form receives key events.","pos":[0,122],"source":"`true` if the form will receive all key events; `false` if the currently selected control on the form receives key events."},{"content":"The default is <ph id=\"ph1\">`false`</ph>.","pos":[123,146],"source":" The default is `false`."}]}],"pos":[176158,176307],"yaml":true},{"content":"Arranges the multiple-document interface (MDI) child forms within the MDI parent form.","nodes":[{"pos":[0,86],"content":"Arranges the multiple-document interface (MDI) child forms within the MDI parent form.","nodes":[{"content":"Arranges the multiple-document interface (MDI) child forms within the MDI parent form.","pos":[0,86]}]}],"pos":[177386,177473],"yaml":true},{"content":"You can use this method to arrange the MDI child forms in your MDI parent form to allow for easier navigation and manipulation of MDI child forms. MDI child forms can be tiled horizontally and vertically, cascaded, or as icons within the MDI parent form.","nodes":[{"pos":[0,254],"content":"You can use this method to arrange the MDI child forms in your MDI parent form to allow for easier navigation and manipulation of MDI child forms. MDI child forms can be tiled horizontally and vertically, cascaded, or as icons within the MDI parent form.","nodes":[{"content":"You can use this method to arrange the MDI child forms in your MDI parent form to allow for easier navigation and manipulation of MDI child forms. MDI child forms can be tiled horizontally and vertically, cascaded, or as icons within the MDI parent form.","pos":[0,254],"nodes":[{"content":"You can use this method to arrange the MDI child forms in your MDI parent form to allow for easier navigation and manipulation of MDI child forms.","pos":[0,146]},{"content":"MDI child forms can be tiled horizontally and vertically, cascaded, or as icons within the MDI parent form.","pos":[147,254]}]}]}],"pos":[177484,177739],"yaml":true,"extradata":"MT"},{"content":"One of the <xref href=\"System.Windows.Forms.MdiLayout\"></xref> values that defines the layout of MDI child forms.","nodes":[{"pos":[0,113],"content":"One of the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.MdiLayout\"&gt;&lt;/xref&gt;</ph> values that defines the layout of MDI child forms.","source":"One of the <xref href=\"System.Windows.Forms.MdiLayout\"></xref> values that defines the layout of MDI child forms."}],"pos":[178660,178774],"yaml":true},{"content":"Occurs before a form is displayed for the first time.","nodes":[{"pos":[0,53],"content":"Occurs before a form is displayed for the first time.","nodes":[{"content":"Occurs before a form is displayed for the first time.","pos":[0,53]}]}],"pos":[179653,179707],"yaml":true},{"content":"You can use this event to perform tasks such as allocating resources used by the form.  \n  \n For more information about handling events, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).","nodes":[{"pos":[0,86],"content":"You can use this event to perform tasks such as allocating resources used by the form.","nodes":[{"content":"You can use this event to perform tasks such as allocating resources used by the form.","pos":[0,86]}]},{"pos":[93,243],"content":"For more information about handling events, see <bpt id=\"p1\">[</bpt>Handling and Raising Events<ept id=\"p1\">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.","source":"For more information about handling events, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)."}],"pos":[179718,179966],"yaml":true,"extradata":"MT"},{"content":"Gets or sets the <xref href=\"System.Drawing.Point\"></xref> that represents the upper-left corner of the <xref href=\"System.Windows.Forms.Form\"></xref> in screen coordinates.","nodes":[{"pos":[0,173],"content":"Gets or sets the <ph id=\"ph1\">&lt;xref href=\"System.Drawing.Point\"&gt;&lt;/xref&gt;</ph> that represents the upper-left corner of the <ph id=\"ph2\">&lt;xref href=\"System.Windows.Forms.Form\"&gt;&lt;/xref&gt;</ph> in screen coordinates.","source":"Gets or sets the <xref href=\"System.Drawing.Point\"></xref> that represents the upper-left corner of the <xref href=\"System.Windows.Forms.Form\"></xref> in screen coordinates."}],"pos":[181888,182062],"yaml":true},{"content":"<xref:System.Drawing.Point> is a structure, which means that it is a value type. If you access a property in <xref:System.Drawing.Point>, a copy of the property is returned. Therefore, changing the <xref:System.Drawing.Point.X%2A> or <xref:System.Drawing.Point.Y%2A> properties of the <xref:System.Drawing.Point> returned from the <xref:System.Windows.Forms.Control.Location%2A> property will not affect the <xref:System.Windows.Forms.Control.Left%2A>, <xref:System.Windows.Forms.Control.Right%2A>, <xref:System.Windows.Forms.Control.Top%2A>, or <xref:System.Windows.Forms.Control.Bottom%2A> property values of the <xref:System.Windows.Forms.Form>. To adjust these properties, set each property value individually, or set the <xref:System.Windows.Forms.Form.Location%2A> property with a new <xref:System.Drawing.Point>.  \n  \n The <xref:System.Windows.Forms.Form.Location%2A> property gets or sets the <xref:System.Windows.Forms.Control.Location%2A> property of the <xref:System.Windows.Forms.Control> base class, and sets the <xref:System.ComponentModel.SettingsBindableAttribute.Bindable%2A> property to `true`.","nodes":[{"pos":[0,819],"content":"<xref:System.Drawing.Point> is a structure, which means that it is a value type. If you access a property in <xref:System.Drawing.Point>, a copy of the property is returned. Therefore, changing the <xref:System.Drawing.Point.X%2A> or <xref:System.Drawing.Point.Y%2A> properties of the <xref:System.Drawing.Point> returned from the <xref:System.Windows.Forms.Control.Location%2A> property will not affect the <xref:System.Windows.Forms.Control.Left%2A>, <xref:System.Windows.Forms.Control.Right%2A>, <xref:System.Windows.Forms.Control.Top%2A>, or <xref:System.Windows.Forms.Control.Bottom%2A> property values of the <xref:System.Windows.Forms.Form>. To adjust these properties, set each property value individually, or set the <xref:System.Windows.Forms.Form.Location%2A> property with a new <xref:System.Drawing.Point>.","nodes":[{"content":"<xref:System.Drawing.Point> is a structure, which means that it is a value type. If you access a property in <xref:System.Drawing.Point>, a copy of the property is returned. Therefore, changing the <xref:System.Drawing.Point.X%2A> or <xref:System.Drawing.Point.Y%2A> properties of the <xref:System.Drawing.Point> returned from the <xref:System.Windows.Forms.Control.Location%2A> property will not affect the <xref:System.Windows.Forms.Control.Left%2A>, <xref:System.Windows.Forms.Control.Right%2A>, <xref:System.Windows.Forms.Control.Top%2A>, or <xref:System.Windows.Forms.Control.Bottom%2A> property values of the <xref:System.Windows.Forms.Form>. To adjust these properties, set each property value individually, or set the <xref:System.Windows.Forms.Form.Location%2A> property with a new <xref:System.Drawing.Point>.","pos":[0,819],"nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Drawing.Point&gt;</ph> is a structure, which means that it is a value type.","pos":[0,80],"source":"<xref:System.Drawing.Point> is a structure, which means that it is a value type."},{"content":"If you access a property in <ph id=\"ph1\">&lt;xref:System.Drawing.Point&gt;</ph>, a copy of the property is returned.","pos":[81,173],"source":" If you access a property in <xref:System.Drawing.Point>, a copy of the property is returned."},{"content":"Therefore, changing the <ph id=\"ph1\">&lt;xref:System.Drawing.Point.X%2A&gt;</ph> or <ph id=\"ph2\">&lt;xref:System.Drawing.Point.Y%2A&gt;</ph> properties of the <ph id=\"ph3\">&lt;xref:System.Drawing.Point&gt;</ph> returned from the <ph id=\"ph4\">&lt;xref:System.Windows.Forms.Control.Location%2A&gt;</ph> property will not affect the <ph id=\"ph5\">&lt;xref:System.Windows.Forms.Control.Left%2A&gt;</ph>, <ph id=\"ph6\">&lt;xref:System.Windows.Forms.Control.Right%2A&gt;</ph>, <ph id=\"ph7\">&lt;xref:System.Windows.Forms.Control.Top%2A&gt;</ph>, or <ph id=\"ph8\">&lt;xref:System.Windows.Forms.Control.Bottom%2A&gt;</ph> property values of the <ph id=\"ph9\">&lt;xref:System.Windows.Forms.Form&gt;</ph>.","pos":[174,648],"source":" Therefore, changing the <xref:System.Drawing.Point.X%2A> or <xref:System.Drawing.Point.Y%2A> properties of the <xref:System.Drawing.Point> returned from the <xref:System.Windows.Forms.Control.Location%2A> property will not affect the <xref:System.Windows.Forms.Control.Left%2A>, <xref:System.Windows.Forms.Control.Right%2A>, <xref:System.Windows.Forms.Control.Top%2A>, or <xref:System.Windows.Forms.Control.Bottom%2A> property values of the <xref:System.Windows.Forms.Form>."},{"content":"To adjust these properties, set each property value individually, or set the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Form.Location%2A&gt;</ph> property with a new <ph id=\"ph2\">&lt;xref:System.Drawing.Point&gt;</ph>.","pos":[649,819],"source":" To adjust these properties, set each property value individually, or set the <xref:System.Windows.Forms.Form.Location%2A> property with a new <xref:System.Drawing.Point>."}]}]},{"pos":[826,1112],"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Form.Location%2A&gt;</ph> property gets or sets the <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Control.Location%2A&gt;</ph> property of the <ph id=\"ph3\">&lt;xref:System.Windows.Forms.Control&gt;</ph> base class, and sets the <ph id=\"ph4\">&lt;xref:System.ComponentModel.SettingsBindableAttribute.Bindable%2A&gt;</ph> property to <ph id=\"ph5\">`true`</ph>.","source":"The <xref:System.Windows.Forms.Form.Location%2A> property gets or sets the <xref:System.Windows.Forms.Control.Location%2A> property of the <xref:System.Windows.Forms.Control> base class, and sets the <xref:System.ComponentModel.SettingsBindableAttribute.Bindable%2A> property to `true`."}],"pos":[182073,183190],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.Drawing.Point\"></xref> that represents the upper-left corner of the <xref href=\"System.Windows.Forms.Form\"></xref> in screen coordinates.","nodes":[{"pos":[0,160],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Drawing.Point\"&gt;&lt;/xref&gt;</ph> that represents the upper-left corner of the <ph id=\"ph2\">&lt;xref href=\"System.Windows.Forms.Form\"&gt;&lt;/xref&gt;</ph> in screen coordinates.","source":"The <xref href=\"System.Drawing.Point\"></xref> that represents the upper-left corner of the <xref href=\"System.Windows.Forms.Form\"></xref> in screen coordinates."}],"pos":[183391,183552],"yaml":true},{"content":"Gets or sets the primary menu container for the form.","nodes":[{"pos":[0,53],"content":"Gets or sets the primary menu container for the form.","nodes":[{"content":"Gets or sets the primary menu container for the form.","pos":[0,53]}]}],"pos":[184581,184635],"yaml":true},{"content":"In addition to setting the <xref:System.Windows.Forms.Form.MainMenuStrip%2A> property, you must <xref:System.Windows.Forms.Control.ControlCollection.Add%2A> the <xref:System.Windows.Forms.MenuStrip> control to the <xref:System.Windows.Forms.Control.Controls%2A> collection of the form.  \n  \n The <xref:System.Windows.Forms.MenuStrip> class supersedes the <xref:System.Windows.Forms.MainMenu> class in previous versions of the .NET Framework.","nodes":[{"pos":[0,285],"content":"In addition to setting the <xref:System.Windows.Forms.Form.MainMenuStrip%2A> property, you must <xref:System.Windows.Forms.Control.ControlCollection.Add%2A> the <xref:System.Windows.Forms.MenuStrip> control to the <xref:System.Windows.Forms.Control.Controls%2A> collection of the form.","nodes":[{"content":"In addition to setting the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Form.MainMenuStrip%2A&gt;</ph> property, you must <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Control.ControlCollection.Add%2A&gt;</ph> the <ph id=\"ph3\">&lt;xref:System.Windows.Forms.MenuStrip&gt;</ph> control to the <ph id=\"ph4\">&lt;xref:System.Windows.Forms.Control.Controls%2A&gt;</ph> collection of the form.","pos":[0,285],"source":"In addition to setting the <xref:System.Windows.Forms.Form.MainMenuStrip%2A> property, you must <xref:System.Windows.Forms.Control.ControlCollection.Add%2A> the <xref:System.Windows.Forms.MenuStrip> control to the <xref:System.Windows.Forms.Control.Controls%2A> collection of the form."}]},{"pos":[292,441],"content":"The <xref:System.Windows.Forms.MenuStrip> class supersedes the <xref:System.Windows.Forms.MainMenu> class in previous versions of the .NET Framework.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.MenuStrip&gt;</ph> class supersedes the <ph id=\"ph2\">&lt;xref:System.Windows.Forms.MainMenu&gt;</ph> class in previous versions of the .NET Framework.","pos":[0,149],"source":"The <xref:System.Windows.Forms.MenuStrip> class supersedes the <xref:System.Windows.Forms.MainMenu> class in previous versions of the .NET Framework."}]}],"pos":[184646,185092],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Windows.Forms.MenuStrip\"></xref> that represents the container for the menu structure of the form. The default is `null`.","nodes":[{"pos":[0,142],"content":"A <xref href=\"System.Windows.Forms.MenuStrip\"></xref> that represents the container for the menu structure of the form. The default is `null`.","nodes":[{"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.MenuStrip\"&gt;&lt;/xref&gt;</ph> that represents the container for the menu structure of the form.","pos":[0,119],"source":"A <xref href=\"System.Windows.Forms.MenuStrip\"></xref> that represents the container for the menu structure of the form."},{"content":"The default is <ph id=\"ph1\">`null`</ph>.","pos":[120,142],"source":" The default is `null`."}]}],"pos":[185359,185502],"yaml":true},{"content":"Gets or sets the space between controls.","nodes":[{"pos":[0,40],"content":"Gets or sets the space between controls.","nodes":[{"content":"Gets or sets the space between controls.","pos":[0,40]}]}],"pos":[186469,186510],"yaml":true},{"content":"A value that represents the space between controls.","nodes":[{"pos":[0,51],"content":"A value that represents the space between controls.","nodes":[{"content":"A value that represents the space between controls.","pos":[0,51]}]}],"pos":[186719,186771],"yaml":true},{"content":"Occurs when the <xref href=\"System.Windows.Forms.Form.Margin\"></xref> property changes.","nodes":[{"pos":[0,87],"content":"Occurs when the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.Form.Margin\"&gt;&lt;/xref&gt;</ph> property changes.","source":"Occurs when the <xref href=\"System.Windows.Forms.Form.Margin\"></xref> property changes."}],"pos":[187788,187876],"yaml":true},{"content":"Gets or sets a value indicating whether the **Maximize** button is displayed in the caption bar of the form.","nodes":[{"pos":[0,108],"content":"Gets or sets a value indicating whether the <bpt id=\"p1\">**</bpt>Maximize<ept id=\"p1\">**</ept> button is displayed in the caption bar of the form.","source":"Gets or sets a value indicating whether the **Maximize** button is displayed in the caption bar of the form."}],"pos":[189003,189112],"yaml":true},{"content":"A **Maximize** button enables users to enlarge a window to full-screen size. To display a **Maximize** button, you must also set the form's <xref:System.Windows.Forms.Form.FormBorderStyle%2A> property to `FormBorderStyle.FixedSingle`, `FormBorderStyle.Sizable`, `FormBorderStyle.Fixed3D`, or `FormBorderStyle.FixedDialog`.  \n  \n A **Maximize** button automatically becomes a restore button when a window is maximized. Minimizing or restoring a window automatically changes the restore button back to a **Maximize** button.  \n  \n> [!NOTE]\n>  Maximizing a form at run time generates a <xref:System.Windows.Forms.Control.Resize> event. The <xref:System.Windows.Forms.Form.WindowState%2A> property reflects the current state of the window. If you set the <xref:System.Windows.Forms.Form.WindowState%2A> property to `FormWindowState.Maximized`, the form is maximized independently of whatever settings are in effect for the <xref:System.Windows.Forms.Form.MaximizeBox%2A> and <xref:System.Windows.Forms.Form.FormBorderStyle%2A> properties.","nodes":[{"pos":[0,322],"content":"A **Maximize** button enables users to enlarge a window to full-screen size. To display a **Maximize** button, you must also set the form's <xref:System.Windows.Forms.Form.FormBorderStyle%2A> property to `FormBorderStyle.FixedSingle`, `FormBorderStyle.Sizable`, `FormBorderStyle.Fixed3D`, or `FormBorderStyle.FixedDialog`.","nodes":[{"content":"A <bpt id=\"p1\">**</bpt>Maximize<ept id=\"p1\">**</ept> button enables users to enlarge a window to full-screen size.","pos":[0,76],"source":"A **Maximize** button enables users to enlarge a window to full-screen size."},{"content":"To display a <bpt id=\"p1\">**</bpt>Maximize<ept id=\"p1\">**</ept> button, you must also set the form's <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Form.FormBorderStyle%2A&gt;</ph> property to <ph id=\"ph2\">`FormBorderStyle.FixedSingle`</ph>, <ph id=\"ph3\">`FormBorderStyle.Sizable`</ph>, <ph id=\"ph4\">`FormBorderStyle.Fixed3D`</ph>, or <ph id=\"ph5\">`FormBorderStyle.FixedDialog`</ph>.","pos":[77,322],"source":" To display a **Maximize** button, you must also set the form's <xref:System.Windows.Forms.Form.FormBorderStyle%2A> property to `FormBorderStyle.FixedSingle`, `FormBorderStyle.Sizable`, `FormBorderStyle.Fixed3D`, or `FormBorderStyle.FixedDialog`."}]},{"pos":[329,522],"content":"A **Maximize** button automatically becomes a restore button when a window is maximized. Minimizing or restoring a window automatically changes the restore button back to a **Maximize** button.","nodes":[{"content":"A <bpt id=\"p1\">**</bpt>Maximize<ept id=\"p1\">**</ept> button automatically becomes a restore button when a window is maximized.","pos":[0,88],"source":"A **Maximize** button automatically becomes a restore button when a window is maximized."},{"content":"Minimizing or restoring a window automatically changes the restore button back to a <bpt id=\"p1\">**</bpt>Maximize<ept id=\"p1\">**</ept> button.","pos":[89,193],"source":" Minimizing or restoring a window automatically changes the restore button back to a **Maximize** button."}]},{"pos":[530,1034],"content":"[!NOTE]\n Maximizing a form at run time generates a <xref:System.Windows.Forms.Control.Resize> event. The <xref:System.Windows.Forms.Form.WindowState%2A> property reflects the current state of the window. If you set the <xref:System.Windows.Forms.Form.WindowState%2A> property to `FormWindowState.Maximized`, the form is maximized independently of whatever settings are in effect for the <xref:System.Windows.Forms.Form.MaximizeBox%2A> and <xref:System.Windows.Forms.Form.FormBorderStyle%2A> properties.","leadings":["","> "],"nodes":[{"content":" Maximizing a form at run time generates a <xref:System.Windows.Forms.Control.Resize> event. The <xref:System.Windows.Forms.Form.WindowState%2A> property reflects the current state of the window. If you set the <xref:System.Windows.Forms.Form.WindowState%2A> property to `FormWindowState.Maximized`, the form is maximized independently of whatever settings are in effect for the <xref:System.Windows.Forms.Form.MaximizeBox%2A> and <xref:System.Windows.Forms.Form.FormBorderStyle%2A> properties.","pos":[8,502],"nodes":[{"content":"Maximizing a form at run time generates a <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.Resize&gt;</ph> event.","pos":[1,92],"source":" Maximizing a form at run time generates a <xref:System.Windows.Forms.Control.Resize> event."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Form.WindowState%2A&gt;</ph> property reflects the current state of the window.","pos":[93,195],"source":" The <xref:System.Windows.Forms.Form.WindowState%2A> property reflects the current state of the window."},{"content":"If you set the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Form.WindowState%2A&gt;</ph> property to <ph id=\"ph2\">`FormWindowState.Maximized`</ph>, the form is maximized independently of whatever settings are in effect for the <ph id=\"ph3\">&lt;xref:System.Windows.Forms.Form.MaximizeBox%2A&gt;</ph> and <ph id=\"ph4\">&lt;xref:System.Windows.Forms.Form.FormBorderStyle%2A&gt;</ph> properties.","pos":[196,494],"source":" If you set the <xref:System.Windows.Forms.Form.WindowState%2A> property to `FormWindowState.Maximized`, the form is maximized independently of whatever settings are in effect for the <xref:System.Windows.Forms.Form.MaximizeBox%2A> and <xref:System.Windows.Forms.Form.FormBorderStyle%2A> properties."}]}]}],"pos":[189123,190165],"yaml":true,"extradata":"MT"},{"content":"`true` to display a **Maximize** button for the form; otherwise, `false`. The default is `true`.","nodes":[{"pos":[0,96],"content":"`true` to display a **Maximize** button for the form; otherwise, `false`. The default is `true`.","nodes":[{"content":"<ph id=\"ph1\">`true`</ph> to display a <bpt id=\"p1\">**</bpt>Maximize<ept id=\"p1\">**</ept> button for the form; otherwise, <ph id=\"ph2\">`false`</ph>.","pos":[0,73],"source":"`true` to display a **Maximize** button for the form; otherwise, `false`."},{"content":"The default is <ph id=\"ph1\">`true`</ph>.","pos":[74,96],"source":" The default is `true`."}]}],"pos":[191719,191818],"yaml":true},{"content":"Gets and sets the size of the form when it is maximized.","nodes":[{"pos":[0,56],"content":"Gets and sets the size of the form when it is maximized.","nodes":[{"content":"Gets and sets the size of the form when it is maximized.","pos":[0,56]}]}],"pos":[192807,192864],"yaml":true},{"content":"A <xref href=\"System.Drawing.Rectangle\"></xref> that represents the bounds of the form when it is maximized.","nodes":[{"pos":[0,108],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Drawing.Rectangle\"&gt;&lt;/xref&gt;</ph> that represents the bounds of the form when it is maximized.","source":"A <xref href=\"System.Drawing.Rectangle\"></xref> that represents the bounds of the form when it is maximized."}],"pos":[193020,193129],"yaml":true},{"content":"The value of the <xref href=\"System.Drawing.Rectangle.Top\"></xref> property is greater than the height of the form.  \n  \n -or-  \n  \n The value of the <xref href=\"System.Drawing.Rectangle.Left\"></xref> property is greater than the width of the form.","nodes":[{"pos":[0,115],"content":"The value of the <ph id=\"ph1\">&lt;xref href=\"System.Drawing.Rectangle.Top\"&gt;&lt;/xref&gt;</ph> property is greater than the height of the form.","source":"The value of the <xref href=\"System.Drawing.Rectangle.Top\"></xref> property is greater than the height of the form."},{"pos":[122,126],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[133,248],"content":"The value of the <ph id=\"ph1\">&lt;xref href=\"System.Drawing.Rectangle.Left\"&gt;&lt;/xref&gt;</ph> property is greater than the width of the form.","source":"The value of the <xref href=\"System.Drawing.Rectangle.Left\"></xref> property is greater than the width of the form."}],"pos":[193312,193571],"yaml":true},{"content":"Occurs when the value of the <xref href=\"System.Windows.Forms.Form.MaximizedBounds\"></xref> property has changed.","nodes":[{"pos":[0,113],"content":"Occurs when the value of the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.Form.MaximizedBounds\"&gt;&lt;/xref&gt;</ph> property has changed.","source":"Occurs when the value of the <xref href=\"System.Windows.Forms.Form.MaximizedBounds\"></xref> property has changed."}],"pos":[194514,194628],"yaml":true},{"content":"For more information about handling events, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).","nodes":[{"pos":[0,150],"content":"For more information about handling events, see <bpt id=\"p1\">[</bpt>Handling and Raising Events<ept id=\"p1\">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.","source":"For more information about handling events, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)."}],"pos":[194639,194790],"yaml":true,"extradata":"MT"},{"content":"Gets the maximum size the form can be resized to.","nodes":[{"pos":[0,49],"content":"Gets the maximum size the form can be resized to.","nodes":[{"content":"Gets the maximum size the form can be resized to.","pos":[0,49]}]}],"pos":[197015,197065],"yaml":true},{"content":"This property enables you to limit the size of a form to a specified maximum size. You can use this feature when displaying multiple windows at the same time, to ensure that a single window does not cause other windows to be hidden. If this property is set to a <xref:System.Drawing.Size> object that is 0 in height and 0 in width, the form will have no maximum size beyond the limits set by Windows.","nodes":[{"pos":[0,400],"content":"This property enables you to limit the size of a form to a specified maximum size. You can use this feature when displaying multiple windows at the same time, to ensure that a single window does not cause other windows to be hidden. If this property is set to a <xref:System.Drawing.Size> object that is 0 in height and 0 in width, the form will have no maximum size beyond the limits set by Windows.","nodes":[{"content":"This property enables you to limit the size of a form to a specified maximum size. You can use this feature when displaying multiple windows at the same time, to ensure that a single window does not cause other windows to be hidden. If this property is set to a <xref:System.Drawing.Size> object that is 0 in height and 0 in width, the form will have no maximum size beyond the limits set by Windows.","pos":[0,400],"nodes":[{"content":"This property enables you to limit the size of a form to a specified maximum size.","pos":[0,82]},{"content":"You can use this feature when displaying multiple windows at the same time, to ensure that a single window does not cause other windows to be hidden.","pos":[83,232]},{"content":"If this property is set to a <ph id=\"ph1\">&lt;xref:System.Drawing.Size&gt;</ph> object that is 0 in height and 0 in width, the form will have no maximum size beyond the limits set by Windows.","pos":[233,400],"source":" If this property is set to a <xref:System.Drawing.Size> object that is 0 in height and 0 in width, the form will have no maximum size beyond the limits set by Windows."}]}]}],"pos":[197076,197477],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Drawing.Size\"></xref> that represents the maximum size for the form.","nodes":[{"pos":[0,89],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Drawing.Size\"&gt;&lt;/xref&gt;</ph> that represents the maximum size for the form.","source":"A <xref href=\"System.Drawing.Size\"></xref> that represents the maximum size for the form."}],"pos":[198199,198289],"yaml":true},{"content":"The values of the height or width within the <xref href=\"System.Drawing.Size\"></xref> object are less than zero.","nodes":[{"pos":[0,112],"content":"The values of the height or width within the <ph id=\"ph1\">&lt;xref href=\"System.Drawing.Size\"&gt;&lt;/xref&gt;</ph> object are less than zero.","source":"The values of the height or width within the <xref href=\"System.Drawing.Size\"></xref> object are less than zero."}],"pos":[198468,198581],"yaml":true},{"content":"Occurs when the value of the <xref href=\"System.Windows.Forms.Form.MaximumSize\"></xref> property has changed.","nodes":[{"pos":[0,109],"content":"Occurs when the value of the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.Form.MaximumSize\"&gt;&lt;/xref&gt;</ph> property has changed.","source":"Occurs when the value of the <xref href=\"System.Windows.Forms.Form.MaximumSize\"></xref> property has changed."}],"pos":[199517,199627],"yaml":true},{"content":"For more information about handling events, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).","nodes":[{"pos":[0,150],"content":"For more information about handling events, see <bpt id=\"p1\">[</bpt>Handling and Raising Events<ept id=\"p1\">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.","source":"For more information about handling events, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)."}],"pos":[199638,199789],"yaml":true,"extradata":"MT"},{"content":"Occurs when a multiple-document interface (MDI) child form is activated or closed within an MDI application.","nodes":[{"pos":[0,108],"content":"Occurs when a multiple-document interface (MDI) child form is activated or closed within an MDI application.","nodes":[{"content":"Occurs when a multiple-document interface (MDI) child form is activated or closed within an MDI application.","pos":[0,108]}]}],"pos":[202029,202138],"yaml":true},{"content":"You can use this event to perform tasks such as updating the contents of the MDI child form and changing the menu options available in the MDI parent form based on the status of the MDI child form that is activated.  \n  \n For more information about handling events, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).","nodes":[{"pos":[0,215],"content":"You can use this event to perform tasks such as updating the contents of the MDI child form and changing the menu options available in the MDI parent form based on the status of the MDI child form that is activated.","nodes":[{"content":"You can use this event to perform tasks such as updating the contents of the MDI child form and changing the menu options available in the MDI parent form based on the status of the MDI child form that is activated.","pos":[0,215]}]},{"pos":[222,372],"content":"For more information about handling events, see <bpt id=\"p1\">[</bpt>Handling and Raising Events<ept id=\"p1\">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.","source":"For more information about handling events, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)."}],"pos":[202149,202526],"yaml":true,"extradata":"MT"},{"content":"Gets an array of forms that represent the multiple-document interface (MDI) child forms that are parented to this form.","nodes":[{"pos":[0,119],"content":"Gets an array of forms that represent the multiple-document interface (MDI) child forms that are parented to this form.","nodes":[{"content":"Gets an array of forms that represent the multiple-document interface (MDI) child forms that are parented to this form.","pos":[0,119]}]}],"pos":[204733,204853],"yaml":true},{"content":"This property allows you to obtain references to all the MDI child forms currently opened in an MDI parent form. To create an MDI child form, assign the <xref:System.Windows.Forms.Form> that will be the MDI parent form to the <xref:System.Windows.Forms.Form.MdiParent%2A> property of the child form.  \n  \n You can use this property to loop through all the MDI child forms to perform operations such as saving data to a database when the MDI parent form closes or to update fields on the child forms based on actions performed in your application.","nodes":[{"pos":[0,299],"content":"This property allows you to obtain references to all the MDI child forms currently opened in an MDI parent form. To create an MDI child form, assign the <xref:System.Windows.Forms.Form> that will be the MDI parent form to the <xref:System.Windows.Forms.Form.MdiParent%2A> property of the child form.","nodes":[{"content":"This property allows you to obtain references to all the MDI child forms currently opened in an MDI parent form. To create an MDI child form, assign the <xref:System.Windows.Forms.Form> that will be the MDI parent form to the <xref:System.Windows.Forms.Form.MdiParent%2A> property of the child form.","pos":[0,299],"nodes":[{"content":"This property allows you to obtain references to all the MDI child forms currently opened in an MDI parent form.","pos":[0,112]},{"content":"To create an MDI child form, assign the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Form&gt;</ph> that will be the MDI parent form to the <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Form.MdiParent%2A&gt;</ph> property of the child form.","pos":[113,299],"source":" To create an MDI child form, assign the <xref:System.Windows.Forms.Form> that will be the MDI parent form to the <xref:System.Windows.Forms.Form.MdiParent%2A> property of the child form."}]}]},{"pos":[306,546],"content":"You can use this property to loop through all the MDI child forms to perform operations such as saving data to a database when the MDI parent form closes or to update fields on the child forms based on actions performed in your application.","nodes":[{"content":"You can use this property to loop through all the MDI child forms to perform operations such as saving data to a database when the MDI parent form closes or to update fields on the child forms based on actions performed in your application.","pos":[0,240]}]}],"pos":[204864,205415],"yaml":true,"extradata":"MT"},{"content":"An array of <xref href=\"System.Windows.Forms.Form\"></xref> objects, each of which identifies one of this form's MDI child forms.","nodes":[{"pos":[0,128],"content":"An array of <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.Form\"&gt;&lt;/xref&gt;</ph> objects, each of which identifies one of this form's MDI child forms.","source":"An array of <xref href=\"System.Windows.Forms.Form\"></xref> objects, each of which identifies one of this form's MDI child forms."}],"pos":[206211,206340],"yaml":true},{"content":"Gets or sets the current multiple-document interface (MDI) parent form of this form.","nodes":[{"pos":[0,84],"content":"Gets or sets the current multiple-document interface (MDI) parent form of this form.","nodes":[{"content":"Gets or sets the current multiple-document interface (MDI) parent form of this form.","pos":[0,84]}]}],"pos":[207319,207404],"yaml":true},{"content":"To create an MDI child form, assign the <xref:System.Windows.Forms.Form> that will be the MDI parent form to the <xref:System.Windows.Forms.Form.MdiParent%2A> property of the child form. You can use this property from an MDI child form to obtain global information that all child forms need or to invoke methods that perform actions to all child forms.  \n  \n> [!NOTE]\n>  If there are two <xref:System.Windows.Forms.MenuStrip> controls on an MDI child form, setting <xref:System.Windows.Forms.Form.IsMdiContainer%2A> to `true` for the parent form merges the contents of only one of the <xref:System.Windows.Forms.MenuStrip> controls. Use <xref:System.Windows.Forms.ToolStripManager.Merge%2A> to merge the contents of additional child <xref:System.Windows.Forms.MenuStrip> controls on the MDI parent form.","nodes":[{"pos":[0,352],"content":"To create an MDI child form, assign the <xref:System.Windows.Forms.Form> that will be the MDI parent form to the <xref:System.Windows.Forms.Form.MdiParent%2A> property of the child form. You can use this property from an MDI child form to obtain global information that all child forms need or to invoke methods that perform actions to all child forms.","nodes":[{"content":"To create an MDI child form, assign the <xref:System.Windows.Forms.Form> that will be the MDI parent form to the <xref:System.Windows.Forms.Form.MdiParent%2A> property of the child form. You can use this property from an MDI child form to obtain global information that all child forms need or to invoke methods that perform actions to all child forms.","pos":[0,352],"nodes":[{"content":"To create an MDI child form, assign the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Form&gt;</ph> that will be the MDI parent form to the <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Form.MdiParent%2A&gt;</ph> property of the child form.","pos":[0,186],"source":"To create an MDI child form, assign the <xref:System.Windows.Forms.Form> that will be the MDI parent form to the <xref:System.Windows.Forms.Form.MdiParent%2A> property of the child form."},{"content":"You can use this property from an MDI child form to obtain global information that all child forms need or to invoke methods that perform actions to all child forms.","pos":[187,352]}]}]},{"pos":[360,803],"content":"[!NOTE]\n If there are two <xref:System.Windows.Forms.MenuStrip> controls on an MDI child form, setting <xref:System.Windows.Forms.Form.IsMdiContainer%2A> to `true` for the parent form merges the contents of only one of the <xref:System.Windows.Forms.MenuStrip> controls. Use <xref:System.Windows.Forms.ToolStripManager.Merge%2A> to merge the contents of additional child <xref:System.Windows.Forms.MenuStrip> controls on the MDI parent form.","leadings":["","> "],"nodes":[{"content":" If there are two <xref:System.Windows.Forms.MenuStrip> controls on an MDI child form, setting <xref:System.Windows.Forms.Form.IsMdiContainer%2A> to `true` for the parent form merges the contents of only one of the <xref:System.Windows.Forms.MenuStrip> controls. Use <xref:System.Windows.Forms.ToolStripManager.Merge%2A> to merge the contents of additional child <xref:System.Windows.Forms.MenuStrip> controls on the MDI parent form.","pos":[8,441],"nodes":[{"content":"If there are two <ph id=\"ph1\">&lt;xref:System.Windows.Forms.MenuStrip&gt;</ph> controls on an MDI child form, setting <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Form.IsMdiContainer%2A&gt;</ph> to <ph id=\"ph3\">`true`</ph> for the parent form merges the contents of only one of the <ph id=\"ph4\">&lt;xref:System.Windows.Forms.MenuStrip&gt;</ph> controls.","pos":[1,262],"source":" If there are two <xref:System.Windows.Forms.MenuStrip> controls on an MDI child form, setting <xref:System.Windows.Forms.Form.IsMdiContainer%2A> to `true` for the parent form merges the contents of only one of the <xref:System.Windows.Forms.MenuStrip> controls."},{"content":"Use <ph id=\"ph1\">&lt;xref:System.Windows.Forms.ToolStripManager.Merge%2A&gt;</ph> to merge the contents of additional child <ph id=\"ph2\">&lt;xref:System.Windows.Forms.MenuStrip&gt;</ph> controls on the MDI parent form.","pos":[263,433],"source":" Use <xref:System.Windows.Forms.ToolStripManager.Merge%2A> to merge the contents of additional child <xref:System.Windows.Forms.MenuStrip> controls on the MDI parent form."}]}]}],"pos":[207415,208224],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Windows.Forms.Form\"></xref> that represents the MDI parent form.","nodes":[{"pos":[0,85],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.Form\"&gt;&lt;/xref&gt;</ph> that represents the MDI parent form.","source":"A <xref href=\"System.Windows.Forms.Form\"></xref> that represents the MDI parent form."}],"pos":[209309,209395],"yaml":true},{"content":"The <xref href=\"System.Windows.Forms.Form\"></xref> assigned to this property is not marked as an MDI container.  \n  \n -or-  \n  \n The <xref href=\"System.Windows.Forms.Form\"></xref> assigned to this property is both a child and an MDI container form.  \n  \n -or-  \n  \n The <xref href=\"System.Windows.Forms.Form\"></xref> assigned to this property is located on a different thread.","nodes":[{"pos":[0,111],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.Form\"&gt;&lt;/xref&gt;</ph> assigned to this property is not marked as an MDI container.","source":"The <xref href=\"System.Windows.Forms.Form\"></xref> assigned to this property is not marked as an MDI container."},{"pos":[118,122],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[129,248],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.Form\"&gt;&lt;/xref&gt;</ph> assigned to this property is both a child and an MDI container form.","source":"The <xref href=\"System.Windows.Forms.Form\"></xref> assigned to this property is both a child and an MDI container form."},{"pos":[255,259],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[266,376],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.Form\"&gt;&lt;/xref&gt;</ph> assigned to this property is located on a different thread.","source":"The <xref href=\"System.Windows.Forms.Form\"></xref> assigned to this property is located on a different thread."}],"pos":[209536,209929],"yaml":true},{"content":"Gets or sets the <xref href=\"System.Windows.Forms.MainMenu\"></xref> that is displayed in the form.","nodes":[{"pos":[0,98],"content":"Gets or sets the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.MainMenu\"&gt;&lt;/xref&gt;</ph> that is displayed in the form.","source":"Gets or sets the <xref href=\"System.Windows.Forms.MainMenu\"></xref> that is displayed in the form."}],"pos":[210810,210909],"yaml":true},{"content":"You can use this property to switch between complete menu sets at run time. For example, you can define one <xref:System.Windows.Forms.MainMenu> to be displayed when your multiple-document interface (MDI) form has no active MDI child forms and another <xref:System.Windows.Forms.MainMenu> to display when a child window is displayed. You can also use a different <xref:System.Windows.Forms.MainMenu> when specific conditions exist in your application that require displaying a different menu set.","nodes":[{"pos":[0,496],"content":"You can use this property to switch between complete menu sets at run time. For example, you can define one <xref:System.Windows.Forms.MainMenu> to be displayed when your multiple-document interface (MDI) form has no active MDI child forms and another <xref:System.Windows.Forms.MainMenu> to display when a child window is displayed. You can also use a different <xref:System.Windows.Forms.MainMenu> when specific conditions exist in your application that require displaying a different menu set.","nodes":[{"content":"You can use this property to switch between complete menu sets at run time. For example, you can define one <xref:System.Windows.Forms.MainMenu> to be displayed when your multiple-document interface (MDI) form has no active MDI child forms and another <xref:System.Windows.Forms.MainMenu> to display when a child window is displayed. You can also use a different <xref:System.Windows.Forms.MainMenu> when specific conditions exist in your application that require displaying a different menu set.","pos":[0,496],"nodes":[{"content":"You can use this property to switch between complete menu sets at run time.","pos":[0,75]},{"content":"For example, you can define one <ph id=\"ph1\">&lt;xref:System.Windows.Forms.MainMenu&gt;</ph> to be displayed when your multiple-document interface (MDI) form has no active MDI child forms and another <ph id=\"ph2\">&lt;xref:System.Windows.Forms.MainMenu&gt;</ph> to display when a child window is displayed.","pos":[76,333],"source":" For example, you can define one <xref:System.Windows.Forms.MainMenu> to be displayed when your multiple-document interface (MDI) form has no active MDI child forms and another <xref:System.Windows.Forms.MainMenu> to display when a child window is displayed."},{"content":"You can also use a different <ph id=\"ph1\">&lt;xref:System.Windows.Forms.MainMenu&gt;</ph> when specific conditions exist in your application that require displaying a different menu set.","pos":[334,496],"source":" You can also use a different <xref:System.Windows.Forms.MainMenu> when specific conditions exist in your application that require displaying a different menu set."}]}]}],"pos":[210920,211417],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Windows.Forms.MainMenu\"></xref> that represents the menu to display in the form.","nodes":[{"pos":[0,101],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.MainMenu\"&gt;&lt;/xref&gt;</ph> that represents the menu to display in the form.","source":"A <xref href=\"System.Windows.Forms.MainMenu\"></xref> that represents the menu to display in the form."}],"pos":[212496,212598],"yaml":true},{"content":"Occurs when the menu of a form loses focus.","nodes":[{"pos":[0,43],"content":"Occurs when the menu of a form loses focus.","nodes":[{"content":"Occurs when the menu of a form loses focus.","pos":[0,43]}]}],"pos":[213640,213684],"yaml":true},{"content":"This event is raised when you click on any menu item in a menu that results in a command being performed and the menu losing focus. You can use this event to perform tasks such as updating the text of a <xref:System.Windows.Forms.StatusBar> control or enabling and disabling buttons on a <xref:System.Windows.Forms.ToolBar>.  \n  \n For more information about handling events, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).","nodes":[{"pos":[0,324],"content":"This event is raised when you click on any menu item in a menu that results in a command being performed and the menu losing focus. You can use this event to perform tasks such as updating the text of a <xref:System.Windows.Forms.StatusBar> control or enabling and disabling buttons on a <xref:System.Windows.Forms.ToolBar>.","nodes":[{"content":"This event is raised when you click on any menu item in a menu that results in a command being performed and the menu losing focus. You can use this event to perform tasks such as updating the text of a <xref:System.Windows.Forms.StatusBar> control or enabling and disabling buttons on a <xref:System.Windows.Forms.ToolBar>.","pos":[0,324],"nodes":[{"content":"This event is raised when you click on any menu item in a menu that results in a command being performed and the menu losing focus.","pos":[0,131]},{"content":"You can use this event to perform tasks such as updating the text of a <ph id=\"ph1\">&lt;xref:System.Windows.Forms.StatusBar&gt;</ph> control or enabling and disabling buttons on a <ph id=\"ph2\">&lt;xref:System.Windows.Forms.ToolBar&gt;</ph>.","pos":[132,324],"source":" You can use this event to perform tasks such as updating the text of a <xref:System.Windows.Forms.StatusBar> control or enabling and disabling buttons on a <xref:System.Windows.Forms.ToolBar>."}]}]},{"pos":[331,481],"content":"For more information about handling events, see <bpt id=\"p1\">[</bpt>Handling and Raising Events<ept id=\"p1\">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.","source":"For more information about handling events, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)."}],"pos":[213695,214181],"yaml":true,"extradata":"MT"},{"content":"Occurs when the menu of a form receives focus.","nodes":[{"pos":[0,46],"content":"Occurs when the menu of a form receives focus.","nodes":[{"content":"Occurs when the menu of a form receives focus.","pos":[0,46]}]}],"pos":[216483,216530],"yaml":true},{"content":"This event is raised when any menu item in the menu is clicked by the user. You can use this event to perform tasks such as enabling and disabling controls on the form that should not be accessed by the user when the menus are being accessed.  \n  \n For more information about handling events, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).","nodes":[{"pos":[0,242],"content":"This event is raised when any menu item in the menu is clicked by the user. You can use this event to perform tasks such as enabling and disabling controls on the form that should not be accessed by the user when the menus are being accessed.","nodes":[{"content":"This event is raised when any menu item in the menu is clicked by the user. You can use this event to perform tasks such as enabling and disabling controls on the form that should not be accessed by the user when the menus are being accessed.","pos":[0,242],"nodes":[{"content":"This event is raised when any menu item in the menu is clicked by the user.","pos":[0,75]},{"content":"You can use this event to perform tasks such as enabling and disabling controls on the form that should not be accessed by the user when the menus are being accessed.","pos":[76,242]}]}]},{"pos":[249,399],"content":"For more information about handling events, see <bpt id=\"p1\">[</bpt>Handling and Raising Events<ept id=\"p1\">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.","source":"For more information about handling events, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)."}],"pos":[216541,216945],"yaml":true,"extradata":"MT"},{"content":"Gets the merged menu for the form.","nodes":[{"pos":[0,34],"content":"Gets the merged menu for the form.","nodes":[{"content":"Gets the merged menu for the form.","pos":[0,34]}]}],"pos":[219247,219282],"yaml":true},{"content":"This property is primarily used when the form is a multiple-document interface (MDI) child form that merges its menu with its parent form's menu. You can use this property to obtain the current menu structure in an MDI application to make changes or additions to the menu structure. To obtain the nonmerged <xref:System.Windows.Forms.MainMenu> assigned to a form, use the <xref:System.Windows.Forms.Form.Menu%2A> property.","nodes":[{"pos":[0,422],"content":"This property is primarily used when the form is a multiple-document interface (MDI) child form that merges its menu with its parent form's menu. You can use this property to obtain the current menu structure in an MDI application to make changes or additions to the menu structure. To obtain the nonmerged <xref:System.Windows.Forms.MainMenu> assigned to a form, use the <xref:System.Windows.Forms.Form.Menu%2A> property.","nodes":[{"content":"This property is primarily used when the form is a multiple-document interface (MDI) child form that merges its menu with its parent form's menu. You can use this property to obtain the current menu structure in an MDI application to make changes or additions to the menu structure. To obtain the nonmerged <xref:System.Windows.Forms.MainMenu> assigned to a form, use the <xref:System.Windows.Forms.Form.Menu%2A> property.","pos":[0,422],"nodes":[{"content":"This property is primarily used when the form is a multiple-document interface (MDI) child form that merges its menu with its parent form's menu.","pos":[0,145]},{"content":"You can use this property to obtain the current menu structure in an MDI application to make changes or additions to the menu structure.","pos":[146,282]},{"content":"To obtain the nonmerged <ph id=\"ph1\">&lt;xref:System.Windows.Forms.MainMenu&gt;</ph> assigned to a form, use the <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Form.Menu%2A&gt;</ph> property.","pos":[283,422],"source":" To obtain the nonmerged <xref:System.Windows.Forms.MainMenu> assigned to a form, use the <xref:System.Windows.Forms.Form.Menu%2A> property."}]}]}],"pos":[219293,219716],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Windows.Forms.MainMenu\"></xref> that represents the merged menu of the form.","nodes":[{"pos":[0,97],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.MainMenu\"&gt;&lt;/xref&gt;</ph> that represents the merged menu of the form.","source":"A <xref href=\"System.Windows.Forms.MainMenu\"></xref> that represents the merged menu of the form."}],"pos":[219926,220024],"yaml":true},{"content":"Gets or sets a value indicating whether the **Minimize** button is displayed in the caption bar of the form.","nodes":[{"pos":[0,108],"content":"Gets or sets a value indicating whether the <bpt id=\"p1\">**</bpt>Minimize<ept id=\"p1\">**</ept> button is displayed in the caption bar of the form.","source":"Gets or sets a value indicating whether the **Minimize** button is displayed in the caption bar of the form."}],"pos":[221036,221145],"yaml":true},{"content":"A **Minimize** button enables users to minimize a window to an icon. To display a **Minimize** button, you must also set the form's <xref:System.Windows.Forms.Form.FormBorderStyle%2A> property to `FormBorderStyle.FixedSingle`, `FormBorderStyle.Sizable`, `FormBorderStyle.Fixed3D`, or `FormBorderStyle.FixedDialog`.  \n  \n> [!NOTE]\n>  Minimizing a form at run time generates a <xref:System.Windows.Forms.Control.Resize> event. The <xref:System.Windows.Forms.Form.WindowState%2A> property reflects the current state of the window. If you set the <xref:System.Windows.Forms.Form.WindowState%2A> property to `FormWindowState.Minimized`, the form is minimized independently of whatever settings are in effect for the <xref:System.Windows.Forms.Form.MinimizeBox%2A> and <xref:System.Windows.Forms.Form.FormBorderStyle%2A> properties.","nodes":[{"pos":[0,314],"content":"A **Minimize** button enables users to minimize a window to an icon. To display a **Minimize** button, you must also set the form's <xref:System.Windows.Forms.Form.FormBorderStyle%2A> property to `FormBorderStyle.FixedSingle`, `FormBorderStyle.Sizable`, `FormBorderStyle.Fixed3D`, or `FormBorderStyle.FixedDialog`.","nodes":[{"content":"A <bpt id=\"p1\">**</bpt>Minimize<ept id=\"p1\">**</ept> button enables users to minimize a window to an icon.","pos":[0,68],"source":"A **Minimize** button enables users to minimize a window to an icon."},{"content":"To display a <bpt id=\"p1\">**</bpt>Minimize<ept id=\"p1\">**</ept> button, you must also set the form's <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Form.FormBorderStyle%2A&gt;</ph> property to <ph id=\"ph2\">`FormBorderStyle.FixedSingle`</ph>, <ph id=\"ph3\">`FormBorderStyle.Sizable`</ph>, <ph id=\"ph4\">`FormBorderStyle.Fixed3D`</ph>, or <ph id=\"ph5\">`FormBorderStyle.FixedDialog`</ph>.","pos":[69,314],"source":" To display a **Minimize** button, you must also set the form's <xref:System.Windows.Forms.Form.FormBorderStyle%2A> property to `FormBorderStyle.FixedSingle`, `FormBorderStyle.Sizable`, `FormBorderStyle.Fixed3D`, or `FormBorderStyle.FixedDialog`."}]},{"pos":[322,826],"content":"[!NOTE]\n Minimizing a form at run time generates a <xref:System.Windows.Forms.Control.Resize> event. The <xref:System.Windows.Forms.Form.WindowState%2A> property reflects the current state of the window. If you set the <xref:System.Windows.Forms.Form.WindowState%2A> property to `FormWindowState.Minimized`, the form is minimized independently of whatever settings are in effect for the <xref:System.Windows.Forms.Form.MinimizeBox%2A> and <xref:System.Windows.Forms.Form.FormBorderStyle%2A> properties.","leadings":["","> "],"nodes":[{"content":" Minimizing a form at run time generates a <xref:System.Windows.Forms.Control.Resize> event. The <xref:System.Windows.Forms.Form.WindowState%2A> property reflects the current state of the window. If you set the <xref:System.Windows.Forms.Form.WindowState%2A> property to `FormWindowState.Minimized`, the form is minimized independently of whatever settings are in effect for the <xref:System.Windows.Forms.Form.MinimizeBox%2A> and <xref:System.Windows.Forms.Form.FormBorderStyle%2A> properties.","pos":[8,502],"nodes":[{"content":"Minimizing a form at run time generates a <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.Resize&gt;</ph> event.","pos":[1,92],"source":" Minimizing a form at run time generates a <xref:System.Windows.Forms.Control.Resize> event."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Form.WindowState%2A&gt;</ph> property reflects the current state of the window.","pos":[93,195],"source":" The <xref:System.Windows.Forms.Form.WindowState%2A> property reflects the current state of the window."},{"content":"If you set the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Form.WindowState%2A&gt;</ph> property to <ph id=\"ph2\">`FormWindowState.Minimized`</ph>, the form is minimized independently of whatever settings are in effect for the <ph id=\"ph3\">&lt;xref:System.Windows.Forms.Form.MinimizeBox%2A&gt;</ph> and <ph id=\"ph4\">&lt;xref:System.Windows.Forms.Form.FormBorderStyle%2A&gt;</ph> properties.","pos":[196,494],"source":" If you set the <xref:System.Windows.Forms.Form.WindowState%2A> property to `FormWindowState.Minimized`, the form is minimized independently of whatever settings are in effect for the <xref:System.Windows.Forms.Form.MinimizeBox%2A> and <xref:System.Windows.Forms.Form.FormBorderStyle%2A> properties."}]}]}],"pos":[221156,221988],"yaml":true,"extradata":"MT"},{"content":"`true` to display a **Minimize** button for the form; otherwise, `false`. The default is `true`.","nodes":[{"pos":[0,96],"content":"`true` to display a **Minimize** button for the form; otherwise, `false`. The default is `true`.","nodes":[{"content":"<ph id=\"ph1\">`true`</ph> to display a <bpt id=\"p1\">**</bpt>Minimize<ept id=\"p1\">**</ept> button for the form; otherwise, <ph id=\"ph2\">`false`</ph>.","pos":[0,73],"source":"`true` to display a **Minimize** button for the form; otherwise, `false`."},{"content":"The default is <ph id=\"ph1\">`true`</ph>.","pos":[74,96],"source":" The default is `true`."}]}],"pos":[223542,223641],"yaml":true},{"content":"Gets or sets the minimum size the form can be resized to.","nodes":[{"pos":[0,57],"content":"Gets or sets the minimum size the form can be resized to.","nodes":[{"content":"Gets or sets the minimum size the form can be resized to.","pos":[0,57]}]}],"pos":[224606,224664],"yaml":true},{"content":"This property enables you to limit the size of a form to a specified minimum size. You can use this feature to prevent a user from sizing a window to an undesirable size. If this property is set to a <xref:System.Drawing.Size> object that is 0 in height and 0 in width, the form will have no minimum size beyond the limits set by Windows.","nodes":[{"pos":[0,338],"content":"This property enables you to limit the size of a form to a specified minimum size. You can use this feature to prevent a user from sizing a window to an undesirable size. If this property is set to a <xref:System.Drawing.Size> object that is 0 in height and 0 in width, the form will have no minimum size beyond the limits set by Windows.","nodes":[{"content":"This property enables you to limit the size of a form to a specified minimum size. You can use this feature to prevent a user from sizing a window to an undesirable size. If this property is set to a <xref:System.Drawing.Size> object that is 0 in height and 0 in width, the form will have no minimum size beyond the limits set by Windows.","pos":[0,338],"nodes":[{"content":"This property enables you to limit the size of a form to a specified minimum size.","pos":[0,82]},{"content":"You can use this feature to prevent a user from sizing a window to an undesirable size.","pos":[83,170]},{"content":"If this property is set to a <ph id=\"ph1\">&lt;xref:System.Drawing.Size&gt;</ph> object that is 0 in height and 0 in width, the form will have no minimum size beyond the limits set by Windows.","pos":[171,338],"source":" If this property is set to a <xref:System.Drawing.Size> object that is 0 in height and 0 in width, the form will have no minimum size beyond the limits set by Windows."}]}]}],"pos":[224675,225014],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Drawing.Size\"></xref> that represents the minimum size for the form.","nodes":[{"pos":[0,89],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Drawing.Size\"&gt;&lt;/xref&gt;</ph> that represents the minimum size for the form.","source":"A <xref href=\"System.Drawing.Size\"></xref> that represents the minimum size for the form."}],"pos":[225162,225252],"yaml":true},{"content":"The values of the height or width within the <xref href=\"System.Drawing.Size\"></xref> object are less than zero.","nodes":[{"pos":[0,112],"content":"The values of the height or width within the <ph id=\"ph1\">&lt;xref href=\"System.Drawing.Size\"&gt;&lt;/xref&gt;</ph> object are less than zero.","source":"The values of the height or width within the <xref href=\"System.Drawing.Size\"></xref> object are less than zero."}],"pos":[225431,225544],"yaml":true},{"content":"Occurs when the value of the <xref href=\"System.Windows.Forms.Form.MinimumSize\"></xref> property has changed.","nodes":[{"pos":[0,109],"content":"Occurs when the value of the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.Form.MinimumSize\"&gt;&lt;/xref&gt;</ph> property has changed.","source":"Occurs when the value of the <xref href=\"System.Windows.Forms.Form.MinimumSize\"></xref> property has changed."}],"pos":[226480,226590],"yaml":true},{"content":"For more information about handling events, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).","nodes":[{"pos":[0,150],"content":"For more information about handling events, see <bpt id=\"p1\">[</bpt>Handling and Raising Events<ept id=\"p1\">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.","source":"For more information about handling events, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)."}],"pos":[226601,226752],"yaml":true,"extradata":"MT"},{"content":"Gets a value indicating whether this form is displayed modally.","nodes":[{"pos":[0,63],"content":"Gets a value indicating whether this form is displayed modally.","nodes":[{"content":"Gets a value indicating whether this form is displayed modally.","pos":[0,63]}]}],"pos":[228929,228993],"yaml":true},{"content":"When a form is displayed modally, no input (keyboard or mouse click) can occur except to objects on the modal form. The program must hide or close a modal form (usually in response to some user action) before input to another form can occur. Forms that are displayed modally are typically used as dialog boxes in an application.  \n  \n You can use this property to determine whether a form that you have obtained from a method or property has been displayed modally.  \n  \n To display a form modally use the <xref:System.Windows.Forms.Form.ShowDialog%2A> method.","nodes":[{"pos":[0,328],"content":"When a form is displayed modally, no input (keyboard or mouse click) can occur except to objects on the modal form. The program must hide or close a modal form (usually in response to some user action) before input to another form can occur. Forms that are displayed modally are typically used as dialog boxes in an application.","nodes":[{"content":"When a form is displayed modally, no input (keyboard or mouse click) can occur except to objects on the modal form. The program must hide or close a modal form (usually in response to some user action) before input to another form can occur. Forms that are displayed modally are typically used as dialog boxes in an application.","pos":[0,328],"nodes":[{"content":"When a form is displayed modally, no input (keyboard or mouse click) can occur except to objects on the modal form.","pos":[0,115]},{"content":"The program must hide or close a modal form (usually in response to some user action) before input to another form can occur.","pos":[116,241]},{"content":"Forms that are displayed modally are typically used as dialog boxes in an application.","pos":[242,328]}]}]},{"pos":[335,465],"content":"You can use this property to determine whether a form that you have obtained from a method or property has been displayed modally.","nodes":[{"content":"You can use this property to determine whether a form that you have obtained from a method or property has been displayed modally.","pos":[0,130]}]},{"pos":[472,560],"content":"To display a form modally use the <xref:System.Windows.Forms.Form.ShowDialog%2A> method.","nodes":[{"content":"To display a form modally use the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Form.ShowDialog%2A&gt;</ph> method.","pos":[0,88],"source":"To display a form modally use the <xref:System.Windows.Forms.Form.ShowDialog%2A> method."}]}],"pos":[229004,229571],"yaml":true,"extradata":"MT"},{"content":"`true` if the form is displayed modally; otherwise, `false`.","nodes":[{"pos":[0,60],"content":"<ph id=\"ph1\">`true`</ph> if the form is displayed modally; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the form is displayed modally; otherwise, `false`."}],"pos":[230414,230477],"yaml":true},{"content":"Raises the <xref href=\"System.Windows.Forms.Form.Activated\"></xref> event.","nodes":[{"pos":[0,74],"content":"Raises the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.Form.Activated\"&gt;&lt;/xref&gt;</ph> event.","source":"Raises the <xref href=\"System.Windows.Forms.Form.Activated\"></xref> event."}],"pos":[231569,231644],"yaml":true},{"content":"Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).  \n  \n The <xref:System.Windows.Forms.Form.OnActivated%2A> method also allows derived classes to handle the event without attaching a delegate. Overriding this method is the preferred technique for handling the event in a derived class.","nodes":[{"pos":[0,191],"content":"Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).","nodes":[{"content":"Raising an event invokes the event handler through a delegate.","pos":[0,62]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Handling and Raising Events<ept id=\"p1\">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.","pos":[63,191],"source":" For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)."}]},{"pos":[198,427],"content":"The <xref:System.Windows.Forms.Form.OnActivated%2A> method also allows derived classes to handle the event without attaching a delegate. Overriding this method is the preferred technique for handling the event in a derived class.","nodes":[{"content":"The <xref:System.Windows.Forms.Form.OnActivated%2A> method also allows derived classes to handle the event without attaching a delegate. Overriding this method is the preferred technique for handling the event in a derived class.","pos":[0,229],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Form.OnActivated%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.","pos":[0,136],"source":"The <xref:System.Windows.Forms.Form.OnActivated%2A> method also allows derived classes to handle the event without attaching a delegate."},{"content":"Overriding this method is the preferred technique for handling the event in a derived class.","pos":[137,229]}]}]}],"pos":[231655,232087],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.EventArgs\"></xref> that contains the event data.","nodes":[{"pos":[0,70],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.EventArgs\"&gt;&lt;/xref&gt;</ph> that contains the event data.","source":"An <xref href=\"System.EventArgs\"></xref> that contains the event data."}],"pos":[232236,232307],"yaml":true},{"content":"Raises the <xref href=\"System.Windows.Forms.Control.BackgroundImageChanged\"></xref> event.","nodes":[{"pos":[0,90],"content":"Raises the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.Control.BackgroundImageChanged\"&gt;&lt;/xref&gt;</ph> event.","source":"Raises the <xref href=\"System.Windows.Forms.Control.BackgroundImageChanged\"></xref> event."}],"pos":[233413,233504],"yaml":true},{"content":"Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).  \n  \n The <xref:System.Windows.Forms.Form.OnBackgroundImageChanged%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","nodes":[{"pos":[0,191],"content":"Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).","nodes":[{"content":"Raising an event invokes the event handler through a delegate.","pos":[0,62]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Handling and Raising Events<ept id=\"p1\">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.","pos":[63,191],"source":" For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)."}]},{"pos":[198,422],"content":"The <xref:System.Windows.Forms.Form.OnBackgroundImageChanged%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","nodes":[{"content":"The <xref:System.Windows.Forms.Form.OnBackgroundImageChanged%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","pos":[0,224],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Form.OnBackgroundImageChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.","pos":[0,149],"source":"The <xref:System.Windows.Forms.Form.OnBackgroundImageChanged%2A> method also allows derived classes to handle the event without attaching a delegate."},{"content":"This is the preferred technique for handling the event in a derived class.","pos":[150,224]}]}]}],"pos":[233515,233942],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.EventArgs\"></xref> that contains the data.","nodes":[{"pos":[0,64],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.EventArgs\"&gt;&lt;/xref&gt;</ph> that contains the data.","source":"An <xref href=\"System.EventArgs\"></xref> that contains the data."}],"pos":[234105,234170],"yaml":true},{"content":"Raises the <xref href=\"System.Windows.Forms.Control.BackgroundImageLayoutChanged\"></xref> event.","nodes":[{"pos":[0,96],"content":"Raises the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.Control.BackgroundImageLayoutChanged\"&gt;&lt;/xref&gt;</ph> event.","source":"Raises the <xref href=\"System.Windows.Forms.Control.BackgroundImageLayoutChanged\"></xref> event."}],"pos":[235330,235427],"yaml":true},{"content":"Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).  \n  \n The <xref:System.Windows.Forms.Form.OnBackgroundImageLayoutChanged%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","nodes":[{"pos":[0,191],"content":"Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).","nodes":[{"content":"Raising an event invokes the event handler through a delegate.","pos":[0,62]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Handling and Raising Events<ept id=\"p1\">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.","pos":[63,191],"source":" For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)."}]},{"pos":[198,428],"content":"The <xref:System.Windows.Forms.Form.OnBackgroundImageLayoutChanged%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","nodes":[{"content":"The <xref:System.Windows.Forms.Form.OnBackgroundImageLayoutChanged%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","pos":[0,230],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Form.OnBackgroundImageLayoutChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.","pos":[0,155],"source":"The <xref:System.Windows.Forms.Form.OnBackgroundImageLayoutChanged%2A> method also allows derived classes to handle the event without attaching a delegate."},{"content":"This is the preferred technique for handling the event in a derived class.","pos":[156,230]}]}]}],"pos":[235438,235871],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.EventArgs\"></xref> that contains the event data.","nodes":[{"pos":[0,70],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.EventArgs\"&gt;&lt;/xref&gt;</ph> that contains the event data.","source":"An <xref href=\"System.EventArgs\"></xref> that contains the event data."}],"pos":[236040,236111],"yaml":true},{"content":"Raises the <xref href=\"System.Windows.Forms.Form.Closed\"></xref> event.","nodes":[{"pos":[0,71],"content":"Raises the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.Form.Closed\"&gt;&lt;/xref&gt;</ph> event.","source":"Raises the <xref href=\"System.Windows.Forms.Form.Closed\"></xref> event."}],"pos":[237123,237195],"yaml":true},{"content":"> [!CAUTION]\n>  The <xref:System.Windows.Forms.Form.OnClosed%2A> method is obsolete in the .NET Framework version 2.0; use the <xref:System.Windows.Forms.Form.OnFormClosed%2A> method instead.  \n  \n Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).  \n  \n The <xref:System.Windows.Forms.Form.OnFormClosed%2A> method also allows derived classes to handle the event without attaching a delegate. Overriding this method is the preferred technique for handling the event in a derived class.  \n  \n> [!CAUTION]\n>  The <xref:System.Windows.Forms.Form.OnClosed%2A> and <xref:System.Windows.Forms.Form.OnClosing%2A> methods are not called when the <xref:System.Windows.Forms.Application.Exit%2A?displayProperty=fullName> method is called to exit your application. If you have validation code in either of these methods that must be executed, you should call the <xref:System.Windows.Forms.Form.Close%2A?displayProperty=fullName> method for each open form individually before calling the <xref:System.Windows.Forms.Application.Exit%2A> method.","nodes":[{"pos":[2,191],"content":"[!CAUTION]\n The <xref:System.Windows.Forms.Form.OnClosed%2A> method is obsolete in the .NET Framework version 2.0; use the <xref:System.Windows.Forms.Form.OnFormClosed%2A> method instead.","leadings":["","> "],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Form.OnClosed%2A&gt;</ph> method is obsolete in the .NET Framework version 2.0; use the <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Form.OnFormClosed%2A&gt;</ph> method instead.","pos":[12,187],"source":" The <xref:System.Windows.Forms.Form.OnClosed%2A> method is obsolete in the .NET Framework version 2.0; use the <xref:System.Windows.Forms.Form.OnFormClosed%2A> method instead."}]},{"pos":[198,389],"content":"Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).","nodes":[{"content":"Raising an event invokes the event handler through a delegate.","pos":[0,62]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Handling and Raising Events<ept id=\"p1\">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.","pos":[63,191],"source":" For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)."}]},{"pos":[396,626],"content":"The <xref:System.Windows.Forms.Form.OnFormClosed%2A> method also allows derived classes to handle the event without attaching a delegate. Overriding this method is the preferred technique for handling the event in a derived class.","nodes":[{"content":"The <xref:System.Windows.Forms.Form.OnFormClosed%2A> method also allows derived classes to handle the event without attaching a delegate. Overriding this method is the preferred technique for handling the event in a derived class.","pos":[0,230],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Form.OnFormClosed%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.","pos":[0,137],"source":"The <xref:System.Windows.Forms.Form.OnFormClosed%2A> method also allows derived classes to handle the event without attaching a delegate."},{"content":"Overriding this method is the preferred technique for handling the event in a derived class.","pos":[138,230]}]}]},{"pos":[634,1173],"content":"[!CAUTION]\n The <xref:System.Windows.Forms.Form.OnClosed%2A> and <xref:System.Windows.Forms.Form.OnClosing%2A> methods are not called when the <xref:System.Windows.Forms.Application.Exit%2A?displayProperty=fullName> method is called to exit your application. If you have validation code in either of these methods that must be executed, you should call the <xref:System.Windows.Forms.Form.Close%2A?displayProperty=fullName> method for each open form individually before calling the <xref:System.Windows.Forms.Application.Exit%2A> method.","leadings":["","> "],"nodes":[{"content":" The <xref:System.Windows.Forms.Form.OnClosed%2A> and <xref:System.Windows.Forms.Form.OnClosing%2A> methods are not called when the <xref:System.Windows.Forms.Application.Exit%2A?displayProperty=fullName> method is called to exit your application. If you have validation code in either of these methods that must be executed, you should call the <xref:System.Windows.Forms.Form.Close%2A?displayProperty=fullName> method for each open form individually before calling the <xref:System.Windows.Forms.Application.Exit%2A> method.","pos":[11,537],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Form.OnClosed%2A&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Form.OnClosing%2A&gt;</ph> methods are not called when the <ph id=\"ph3\">&lt;xref:System.Windows.Forms.Application.Exit%2A?displayProperty=fullName&gt;</ph> method is called to exit your application.","pos":[1,247],"source":" The <xref:System.Windows.Forms.Form.OnClosed%2A> and <xref:System.Windows.Forms.Form.OnClosing%2A> methods are not called when the <xref:System.Windows.Forms.Application.Exit%2A?displayProperty=fullName> method is called to exit your application."},{"content":"If you have validation code in either of these methods that must be executed, you should call the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Form.Close%2A?displayProperty=fullName&gt;</ph> method for each open form individually before calling the <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Application.Exit%2A&gt;</ph> method.","pos":[248,526],"source":" If you have validation code in either of these methods that must be executed, you should call the <xref:System.Windows.Forms.Form.Close%2A?displayProperty=fullName> method for each open form individually before calling the <xref:System.Windows.Forms.Application.Exit%2A> method."}]}]}],"pos":[237206,238390],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.EventArgs\"></xref> that contains the event data.","nodes":[{"pos":[0,71],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.EventArgs\"&gt;&lt;/xref&gt;</ph> that contains the event data.","source":"The <xref href=\"System.EventArgs\"></xref> that contains the event data."}],"pos":[239153,239225],"yaml":true},{"content":"Raises the <xref href=\"System.Windows.Forms.Form.Closing\"></xref> event.","nodes":[{"pos":[0,72],"content":"Raises the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.Form.Closing\"&gt;&lt;/xref&gt;</ph> event.","source":"Raises the <xref href=\"System.Windows.Forms.Form.Closing\"></xref> event."}],"pos":[240341,240414],"yaml":true},{"content":"> [!CAUTION]\n>  The <xref:System.Windows.Forms.Form.OnClosing%2A> method is obsolete in the .NET Framework version 2.0; use the <xref:System.Windows.Forms.Form.OnFormClosing%2A> method instead.  \n  \n Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).  \n  \n The <xref:System.Windows.Forms.Form.OnClosing%2A> method also allows derived classes to handle the event without attaching a delegate. Overriding this method is the preferred technique for handling the event in a derived class.  \n  \n> [!CAUTION]\n>  The <xref:System.Windows.Forms.Form.OnClosed%2A> and <xref:System.Windows.Forms.Form.OnClosing%2A> methods are not called when the <xref:System.Windows.Forms.Application.Exit%2A?displayProperty=fullName> method is called to exit your application. If you have validation code in either of these methods that must be executed, you should call the <xref:System.Windows.Forms.Form.Close%2A?displayProperty=fullName> method for each open form individually before calling the <xref:System.Windows.Forms.Application.Exit%2A> method.","nodes":[{"pos":[2,193],"content":"[!CAUTION]\n The <xref:System.Windows.Forms.Form.OnClosing%2A> method is obsolete in the .NET Framework version 2.0; use the <xref:System.Windows.Forms.Form.OnFormClosing%2A> method instead.","leadings":["","> "],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Form.OnClosing%2A&gt;</ph> method is obsolete in the .NET Framework version 2.0; use the <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Form.OnFormClosing%2A&gt;</ph> method instead.","pos":[12,189],"source":" The <xref:System.Windows.Forms.Form.OnClosing%2A> method is obsolete in the .NET Framework version 2.0; use the <xref:System.Windows.Forms.Form.OnFormClosing%2A> method instead."}]},{"pos":[200,391],"content":"Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).","nodes":[{"content":"Raising an event invokes the event handler through a delegate.","pos":[0,62]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Handling and Raising Events<ept id=\"p1\">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.","pos":[63,191],"source":" For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)."}]},{"pos":[398,625],"content":"The <xref:System.Windows.Forms.Form.OnClosing%2A> method also allows derived classes to handle the event without attaching a delegate. Overriding this method is the preferred technique for handling the event in a derived class.","nodes":[{"content":"The <xref:System.Windows.Forms.Form.OnClosing%2A> method also allows derived classes to handle the event without attaching a delegate. Overriding this method is the preferred technique for handling the event in a derived class.","pos":[0,227],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Form.OnClosing%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.","pos":[0,134],"source":"The <xref:System.Windows.Forms.Form.OnClosing%2A> method also allows derived classes to handle the event without attaching a delegate."},{"content":"Overriding this method is the preferred technique for handling the event in a derived class.","pos":[135,227]}]}]},{"pos":[633,1172],"content":"[!CAUTION]\n The <xref:System.Windows.Forms.Form.OnClosed%2A> and <xref:System.Windows.Forms.Form.OnClosing%2A> methods are not called when the <xref:System.Windows.Forms.Application.Exit%2A?displayProperty=fullName> method is called to exit your application. If you have validation code in either of these methods that must be executed, you should call the <xref:System.Windows.Forms.Form.Close%2A?displayProperty=fullName> method for each open form individually before calling the <xref:System.Windows.Forms.Application.Exit%2A> method.","leadings":["","> "],"nodes":[{"content":" The <xref:System.Windows.Forms.Form.OnClosed%2A> and <xref:System.Windows.Forms.Form.OnClosing%2A> methods are not called when the <xref:System.Windows.Forms.Application.Exit%2A?displayProperty=fullName> method is called to exit your application. If you have validation code in either of these methods that must be executed, you should call the <xref:System.Windows.Forms.Form.Close%2A?displayProperty=fullName> method for each open form individually before calling the <xref:System.Windows.Forms.Application.Exit%2A> method.","pos":[11,537],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Form.OnClosed%2A&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Form.OnClosing%2A&gt;</ph> methods are not called when the <ph id=\"ph3\">&lt;xref:System.Windows.Forms.Application.Exit%2A?displayProperty=fullName&gt;</ph> method is called to exit your application.","pos":[1,247],"source":" The <xref:System.Windows.Forms.Form.OnClosed%2A> and <xref:System.Windows.Forms.Form.OnClosing%2A> methods are not called when the <xref:System.Windows.Forms.Application.Exit%2A?displayProperty=fullName> method is called to exit your application."},{"content":"If you have validation code in either of these methods that must be executed, you should call the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Form.Close%2A?displayProperty=fullName&gt;</ph> method for each open form individually before calling the <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Application.Exit%2A&gt;</ph> method.","pos":[248,526],"source":" If you have validation code in either of these methods that must be executed, you should call the <xref:System.Windows.Forms.Form.Close%2A?displayProperty=fullName> method for each open form individually before calling the <xref:System.Windows.Forms.Application.Exit%2A> method."}]}]}],"pos":[240425,241608],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.ComponentModel.CancelEventArgs\"></xref> that contains the event data.","nodes":[{"pos":[0,90],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.CancelEventArgs\"&gt;&lt;/xref&gt;</ph> that contains the event data.","source":"A <xref href=\"System.ComponentModel.CancelEventArgs\"></xref> that contains the event data."}],"pos":[242363,242454],"yaml":true},{"content":"Raises the `CreateControl` event.","nodes":[{"pos":[0,33],"content":"Raises the <ph id=\"ph1\">`CreateControl`</ph> event.","source":"Raises the `CreateControl` event."}],"pos":[243423,243457],"yaml":true},{"content":"Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).","nodes":[{"pos":[0,191],"content":"Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).","nodes":[{"content":"Raising an event invokes the event handler through a delegate.","pos":[0,62]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Handling and Raising Events<ept id=\"p1\">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.","pos":[63,191],"source":" For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)."}]}],"pos":[243468,243660],"yaml":true,"extradata":"MT"},{"content":"Raises the <xref href=\"System.Windows.Forms.Form.Deactivate\"></xref> event.","nodes":[{"pos":[0,75],"content":"Raises the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.Form.Deactivate\"&gt;&lt;/xref&gt;</ph> event.","source":"Raises the <xref href=\"System.Windows.Forms.Form.Deactivate\"></xref> event."}],"pos":[244806,244882],"yaml":true},{"content":"Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).  \n  \n The <xref:System.Windows.Forms.Form.OnDeactivate%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","nodes":[{"pos":[0,191],"content":"Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).","nodes":[{"content":"Raising an event invokes the event handler through a delegate.","pos":[0,62]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Handling and Raising Events<ept id=\"p1\">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.","pos":[63,191],"source":" For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)."}]},{"pos":[198,410],"content":"The <xref:System.Windows.Forms.Form.OnDeactivate%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","nodes":[{"content":"The <xref:System.Windows.Forms.Form.OnDeactivate%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","pos":[0,212],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Form.OnDeactivate%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.","pos":[0,137],"source":"The <xref:System.Windows.Forms.Form.OnDeactivate%2A> method also allows derived classes to handle the event without attaching a delegate."},{"content":"This is the preferred technique for handling the event in a derived class.","pos":[138,212]}]}]}],"pos":[244893,245308],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.EventArgs\"></xref> that contains the event data.","nodes":[{"pos":[0,71],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.EventArgs\"&gt;&lt;/xref&gt;</ph> that contains the event data.","source":"The <xref href=\"System.EventArgs\"></xref> that contains the event data."}],"pos":[245458,245530],"yaml":true},{"content":"Raises the <xref href=\"System.Windows.Forms.Form.DpiChanged\"></xref> event.","nodes":[{"pos":[0,75],"content":"Raises the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.Form.DpiChanged\"&gt;&lt;/xref&gt;</ph> event.","source":"Raises the <xref href=\"System.Windows.Forms.Form.DpiChanged\"></xref> event."}],"pos":[246689,246765],"yaml":true},{"content":"An <xref href=\"System.Windows.Forms.DpiChangedEventArgs\"></xref> that contains the event data.","nodes":[{"pos":[0,94],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.DpiChangedEventArgs\"&gt;&lt;/xref&gt;</ph> that contains the event data.","source":"An <xref href=\"System.Windows.Forms.DpiChangedEventArgs\"></xref> that contains the event data."}],"pos":[247026,247121],"yaml":true},{"content":"Raises the <xref href=\"System.Windows.Forms.Control.EnabledChanged\"></xref> event.","nodes":[{"pos":[0,82],"content":"Raises the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.Control.EnabledChanged\"&gt;&lt;/xref&gt;</ph> event.","source":"Raises the <xref href=\"System.Windows.Forms.Control.EnabledChanged\"></xref> event."}],"pos":[247945,248028],"yaml":true},{"content":"An <xref href=\"System.EventArgs\"></xref> that contains the event data.","nodes":[{"pos":[0,70],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.EventArgs\"&gt;&lt;/xref&gt;</ph> that contains the event data.","source":"An <xref href=\"System.EventArgs\"></xref> that contains the event data."}],"pos":[248183,248254],"yaml":true},{"content":"Raises the <xref href=\"System.Windows.Forms.Control.Enter\"></xref> event.","nodes":[{"pos":[0,73],"content":"Raises the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.Control.Enter\"&gt;&lt;/xref&gt;</ph> event.","source":"Raises the <xref href=\"System.Windows.Forms.Control.Enter\"></xref> event."}],"pos":[249263,249337],"yaml":true},{"content":"Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).  \n  \n The <xref:System.Windows.Forms.Form.OnEnter%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","nodes":[{"pos":[0,191],"content":"Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).","nodes":[{"content":"Raising an event invokes the event handler through a delegate.","pos":[0,62]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Handling and Raising Events<ept id=\"p1\">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.","pos":[63,191],"source":" For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)."}]},{"pos":[198,405],"content":"The <xref:System.Windows.Forms.Form.OnEnter%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","nodes":[{"content":"The <xref:System.Windows.Forms.Form.OnEnter%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","pos":[0,207],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Form.OnEnter%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.","pos":[0,132],"source":"The <xref:System.Windows.Forms.Form.OnEnter%2A> method also allows derived classes to handle the event without attaching a delegate."},{"content":"This is the preferred technique for handling the event in a derived class.","pos":[133,207]}]}]}],"pos":[249348,249758],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.EventArgs\"></xref> that contains the event data.","nodes":[{"pos":[0,70],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.EventArgs\"&gt;&lt;/xref&gt;</ph> that contains the event data.","source":"An <xref href=\"System.EventArgs\"></xref> that contains the event data."}],"pos":[249904,249975],"yaml":true},{"content":"Raises the <xref href=\"System.Windows.Forms.Control.FontChanged\"></xref> event.","nodes":[{"pos":[0,79],"content":"Raises the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.Control.FontChanged\"&gt;&lt;/xref&gt;</ph> event.","source":"Raises the <xref href=\"System.Windows.Forms.Control.FontChanged\"></xref> event."}],"pos":[251011,251091],"yaml":true},{"content":"An <xref href=\"System.EventArgs\"></xref> that contains the event data.","nodes":[{"pos":[0,70],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.EventArgs\"&gt;&lt;/xref&gt;</ph> that contains the event data.","source":"An <xref href=\"System.EventArgs\"></xref> that contains the event data."}],"pos":[251243,251314],"yaml":true},{"content":"Raises the <xref href=\"System.Windows.Forms.Form.FormClosed\"></xref> event.","nodes":[{"pos":[0,75],"content":"Raises the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.Form.FormClosed\"&gt;&lt;/xref&gt;</ph> event.","source":"Raises the <xref href=\"System.Windows.Forms.Form.FormClosed\"></xref> event."}],"pos":[252474,252550],"yaml":true},{"content":"The <xref:System.Windows.Forms.Form.OnFormClosing%2A> method removes the current form from the <xref:System.Windows.Forms.Application.OpenForms%2A> collection of the associated <xref:System.Windows.Forms.Application>.  \n  \n Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).  \n  \n The <xref:System.Windows.Forms.Form.OnFormClosed%2A> method also allows derived classes to handle the event without attaching a delegate. Overriding this method is the preferred technique for handling the event in a derived class.","nodes":[{"pos":[0,217],"content":"The <xref:System.Windows.Forms.Form.OnFormClosing%2A> method removes the current form from the <xref:System.Windows.Forms.Application.OpenForms%2A> collection of the associated <xref:System.Windows.Forms.Application>.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Form.OnFormClosing%2A&gt;</ph> method removes the current form from the <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Application.OpenForms%2A&gt;</ph> collection of the associated <ph id=\"ph3\">&lt;xref:System.Windows.Forms.Application&gt;</ph>.","pos":[0,217],"source":"The <xref:System.Windows.Forms.Form.OnFormClosing%2A> method removes the current form from the <xref:System.Windows.Forms.Application.OpenForms%2A> collection of the associated <xref:System.Windows.Forms.Application>."}]},{"pos":[224,415],"content":"Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).","nodes":[{"content":"Raising an event invokes the event handler through a delegate.","pos":[0,62]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Handling and Raising Events<ept id=\"p1\">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.","pos":[63,191],"source":" For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)."}]},{"pos":[422,652],"content":"The <xref:System.Windows.Forms.Form.OnFormClosed%2A> method also allows derived classes to handle the event without attaching a delegate. Overriding this method is the preferred technique for handling the event in a derived class.","nodes":[{"content":"The <xref:System.Windows.Forms.Form.OnFormClosed%2A> method also allows derived classes to handle the event without attaching a delegate. Overriding this method is the preferred technique for handling the event in a derived class.","pos":[0,230],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Form.OnFormClosed%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.","pos":[0,137],"source":"The <xref:System.Windows.Forms.Form.OnFormClosed%2A> method also allows derived classes to handle the event without attaching a delegate."},{"content":"Overriding this method is the preferred technique for handling the event in a derived class.","pos":[138,230]}]}]}],"pos":[252561,253220],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Windows.Forms.FormClosedEventArgs\"></xref> that contains the event data.","nodes":[{"pos":[0,93],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.FormClosedEventArgs\"&gt;&lt;/xref&gt;</ph> that contains the event data.","source":"A <xref href=\"System.Windows.Forms.FormClosedEventArgs\"></xref> that contains the event data."}],"pos":[253425,253519],"yaml":true},{"content":"Raises the <xref href=\"System.Windows.Forms.Form.FormClosing\"></xref> event.","nodes":[{"pos":[0,76],"content":"Raises the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.Form.FormClosing\"&gt;&lt;/xref&gt;</ph> event.","source":"Raises the <xref href=\"System.Windows.Forms.Form.FormClosing\"></xref> event."}],"pos":[254668,254745],"yaml":true},{"content":"Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).  \n  \n The <xref:System.Windows.Forms.Form.OnFormClosing%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","nodes":[{"pos":[0,191],"content":"Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).","nodes":[{"content":"Raising an event invokes the event handler through a delegate.","pos":[0,62]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Handling and Raising Events<ept id=\"p1\">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.","pos":[63,191],"source":" For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)."}]},{"pos":[198,411],"content":"The <xref:System.Windows.Forms.Form.OnFormClosing%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","nodes":[{"content":"The <xref:System.Windows.Forms.Form.OnFormClosing%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","pos":[0,213],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Form.OnFormClosing%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.","pos":[0,138],"source":"The <xref:System.Windows.Forms.Form.OnFormClosing%2A> method also allows derived classes to handle the event without attaching a delegate."},{"content":"This is the preferred technique for handling the event in a derived class.","pos":[139,213]}]}]}],"pos":[254756,255172],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Windows.Forms.FormClosingEventArgs\"></xref> that contains the event data.","nodes":[{"pos":[0,94],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.FormClosingEventArgs\"&gt;&lt;/xref&gt;</ph> that contains the event data.","source":"A <xref href=\"System.Windows.Forms.FormClosingEventArgs\"></xref> that contains the event data."}],"pos":[255380,255475],"yaml":true},{"content":"Raises the GetDpiScaledSize event.","nodes":[{"pos":[0,34],"content":"Raises the GetDpiScaledSize event.","nodes":[{"content":"Raises the GetDpiScaledSize event.","pos":[0,34]}]}],"pos":[256664,256699],"yaml":true},{"content":"The DPI value for the display device where the form was previously displayed.","nodes":[{"pos":[0,77],"content":"The DPI value for the display device where the form was previously displayed.","nodes":[{"content":"The DPI value for the display device where the form was previously displayed.","pos":[0,77]}]}],"pos":[256978,257056],"yaml":true},{"content":"The DPI value for the display device where the form will be displayed.","nodes":[{"pos":[0,70],"content":"The DPI value for the display device where the form will be displayed.","nodes":[{"content":"The DPI value for the display device where the form will be displayed.","pos":[0,70]}]}],"pos":[257123,257194],"yaml":true},{"content":"A <xref href=\"System.Drawing.Size\"></xref> representing the new size of the form based on the new DPI value.","nodes":[{"pos":[0,108],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Drawing.Size\"&gt;&lt;/xref&gt;</ph> representing the new size of the form based on the new DPI value.","source":"A <xref href=\"System.Drawing.Size\"></xref> representing the new size of the form based on the new DPI value."}],"pos":[257267,257376],"yaml":true},{"content":"`true` if successful; otherwise `false`.","nodes":[{"pos":[0,40],"content":"<ph id=\"ph1\">`true`</ph> if successful; otherwise <ph id=\"ph2\">`false`</ph>.","source":"`true` if successful; otherwise `false`."}],"pos":[257434,257477],"yaml":true},{"content":"Raises the <xref href=\"System.Windows.Forms.Control.HandleCreated\"></xref> event.","nodes":[{"pos":[0,81],"content":"Raises the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.Control.HandleCreated\"&gt;&lt;/xref&gt;</ph> event.","source":"Raises the <xref href=\"System.Windows.Forms.Control.HandleCreated\"></xref> event."}],"pos":[258301,258383],"yaml":true},{"content":"An <xref href=\"System.EventArgs\"></xref> that contains the event data.","nodes":[{"pos":[0,70],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.EventArgs\"&gt;&lt;/xref&gt;</ph> that contains the event data.","source":"An <xref href=\"System.EventArgs\"></xref> that contains the event data."}],"pos":[258537,258608],"yaml":true},{"content":"Raises the <xref href=\"System.Windows.Forms.Control.HandleDestroyed\"></xref> event.","nodes":[{"pos":[0,83],"content":"Raises the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.Control.HandleDestroyed\"&gt;&lt;/xref&gt;</ph> event.","source":"Raises the <xref href=\"System.Windows.Forms.Control.HandleDestroyed\"></xref> event."}],"pos":[259698,259782],"yaml":true},{"content":"An <xref href=\"System.EventArgs\"></xref> that contains the event data.","nodes":[{"pos":[0,70],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.EventArgs\"&gt;&lt;/xref&gt;</ph> that contains the event data.","source":"An <xref href=\"System.EventArgs\"></xref> that contains the event data."}],"pos":[259938,260009],"yaml":true},{"content":"Raises the <xref href=\"System.Windows.Forms.Form.HelpButtonClicked\"></xref> event.","nodes":[{"pos":[0,82],"content":"Raises the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.Form.HelpButtonClicked\"&gt;&lt;/xref&gt;</ph> event.","source":"Raises the <xref href=\"System.Windows.Forms.Form.HelpButtonClicked\"></xref> event."}],"pos":[261194,261277],"yaml":true},{"content":"Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).  \n  \n The <xref:System.Windows.Forms.Form.OnHelpButtonClicked%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","nodes":[{"pos":[0,191],"content":"Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).","nodes":[{"content":"Raising an event invokes the event handler through a delegate.","pos":[0,62]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Handling and Raising Events<ept id=\"p1\">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.","pos":[63,191],"source":" For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)."}]},{"pos":[198,417],"content":"The <xref:System.Windows.Forms.Form.OnHelpButtonClicked%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","nodes":[{"content":"The <xref:System.Windows.Forms.Form.OnHelpButtonClicked%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","pos":[0,219],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Form.OnHelpButtonClicked%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.","pos":[0,144],"source":"The <xref:System.Windows.Forms.Form.OnHelpButtonClicked%2A> method also allows derived classes to handle the event without attaching a delegate."},{"content":"This is the preferred technique for handling the event in a derived class.","pos":[145,219]}]}]}],"pos":[261288,261710],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.ComponentModel.CancelEventArgs\"></xref> that contains the event data.","nodes":[{"pos":[0,90],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.CancelEventArgs\"&gt;&lt;/xref&gt;</ph> that contains the event data.","source":"A <xref href=\"System.ComponentModel.CancelEventArgs\"></xref> that contains the event data."}],"pos":[261916,262007],"yaml":true},{"content":"Raises the <xref href=\"System.Windows.Forms.Form.InputLanguageChanged\"></xref> event.","nodes":[{"pos":[0,85],"content":"Raises the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.Form.InputLanguageChanged\"&gt;&lt;/xref&gt;</ph> event.","source":"Raises the <xref href=\"System.Windows.Forms.Form.InputLanguageChanged\"></xref> event."}],"pos":[263293,263379],"yaml":true},{"content":"Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).  \n  \n The <xref:System.Windows.Forms.Form.OnInputLanguageChanged%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","nodes":[{"pos":[0,191],"content":"Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).","nodes":[{"content":"Raising an event invokes the event handler through a delegate.","pos":[0,62]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Handling and Raising Events<ept id=\"p1\">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.","pos":[63,191],"source":" For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)."}]},{"pos":[198,420],"content":"The <xref:System.Windows.Forms.Form.OnInputLanguageChanged%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","nodes":[{"content":"The <xref:System.Windows.Forms.Form.OnInputLanguageChanged%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","pos":[0,222],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Form.OnInputLanguageChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.","pos":[0,147],"source":"The <xref:System.Windows.Forms.Form.OnInputLanguageChanged%2A> method also allows derived classes to handle the event without attaching a delegate."},{"content":"This is the preferred technique for handling the event in a derived class.","pos":[148,222]}]}]}],"pos":[263390,263815],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.Windows.Forms.InputLanguageChangedEventArgs\"></xref> that contains the event data.","nodes":[{"pos":[0,105],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.InputLanguageChangedEventArgs\"&gt;&lt;/xref&gt;</ph> that contains the event data.","source":"The <xref href=\"System.Windows.Forms.InputLanguageChangedEventArgs\"></xref> that contains the event data."}],"pos":[264050,264156],"yaml":true},{"content":"Raises the <xref href=\"System.Windows.Forms.Form.InputLanguageChanging\"></xref> event.","nodes":[{"pos":[0,86],"content":"Raises the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.Form.InputLanguageChanging\"&gt;&lt;/xref&gt;</ph> event.","source":"Raises the <xref href=\"System.Windows.Forms.Form.InputLanguageChanging\"></xref> event."}],"pos":[265457,265544],"yaml":true},{"content":"Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).  \n  \n The <xref:System.Windows.Forms.Form.OnInputLanguageChanging%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","nodes":[{"pos":[0,191],"content":"Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).","nodes":[{"content":"Raising an event invokes the event handler through a delegate.","pos":[0,62]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Handling and Raising Events<ept id=\"p1\">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.","pos":[63,191],"source":" For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)."}]},{"pos":[198,421],"content":"The <xref:System.Windows.Forms.Form.OnInputLanguageChanging%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","nodes":[{"content":"The <xref:System.Windows.Forms.Form.OnInputLanguageChanging%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","pos":[0,223],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Form.OnInputLanguageChanging%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.","pos":[0,148],"source":"The <xref:System.Windows.Forms.Form.OnInputLanguageChanging%2A> method also allows derived classes to handle the event without attaching a delegate."},{"content":"This is the preferred technique for handling the event in a derived class.","pos":[149,223]}]}]}],"pos":[265555,265981],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.Windows.Forms.InputLanguageChangingEventArgs\"></xref> that contains the event data.","nodes":[{"pos":[0,106],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.InputLanguageChangingEventArgs\"&gt;&lt;/xref&gt;</ph> that contains the event data.","source":"The <xref href=\"System.Windows.Forms.InputLanguageChangingEventArgs\"></xref> that contains the event data."}],"pos":[266219,266326],"yaml":true},{"content":"Raises the <xref href=\"System.Windows.Forms.Control.Layout\"></xref> event.","nodes":[{"pos":[0,74],"content":"Raises the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.Control.Layout\"&gt;&lt;/xref&gt;</ph> event.","source":"Raises the <xref href=\"System.Windows.Forms.Control.Layout\"></xref> event."}],"pos":[267448,267523],"yaml":true},{"content":"The event data.","nodes":[{"pos":[0,15],"content":"The event data.","nodes":[{"content":"The event data.","pos":[0,15]}]}],"pos":[267727,267743],"yaml":true},{"content":"Raises the <xref href=\"System.Windows.Forms.Form.Load\"></xref> event.","nodes":[{"pos":[0,69],"content":"Raises the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.Form.Load\"&gt;&lt;/xref&gt;</ph> event.","source":"Raises the <xref href=\"System.Windows.Forms.Form.Load\"></xref> event."}],"pos":[268743,268813],"yaml":true},{"content":"Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).  \n  \n The <xref:System.Windows.Forms.Form.OnLoad%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","nodes":[{"pos":[0,191],"content":"Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).","nodes":[{"content":"Raising an event invokes the event handler through a delegate.","pos":[0,62]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Handling and Raising Events<ept id=\"p1\">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.","pos":[63,191],"source":" For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)."}]},{"pos":[198,404],"content":"The <xref:System.Windows.Forms.Form.OnLoad%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","nodes":[{"content":"The <xref:System.Windows.Forms.Form.OnLoad%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","pos":[0,206],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Form.OnLoad%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.","pos":[0,131],"source":"The <xref:System.Windows.Forms.Form.OnLoad%2A> method also allows derived classes to handle the event without attaching a delegate."},{"content":"This is the preferred technique for handling the event in a derived class.","pos":[132,206]}]}]}],"pos":[268824,269233],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.EventArgs\"></xref> that contains the event data.","nodes":[{"pos":[0,70],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.EventArgs\"&gt;&lt;/xref&gt;</ph> that contains the event data.","source":"An <xref href=\"System.EventArgs\"></xref> that contains the event data."}],"pos":[269377,269448],"yaml":true},{"content":"Raises the <xref href=\"System.Windows.Forms.Form.MaximizedBoundsChanged\"></xref> event.","nodes":[{"pos":[0,87],"content":"Raises the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.Form.MaximizedBoundsChanged\"&gt;&lt;/xref&gt;</ph> event.","source":"Raises the <xref href=\"System.Windows.Forms.Form.MaximizedBoundsChanged\"></xref> event."}],"pos":[270571,270659],"yaml":true},{"content":"Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).  \n  \n The <xref:System.Windows.Forms.Form.OnMaximizedBoundsChanged%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","nodes":[{"pos":[0,191],"content":"Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).","nodes":[{"content":"Raising an event invokes the event handler through a delegate.","pos":[0,62]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Handling and Raising Events<ept id=\"p1\">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.","pos":[63,191],"source":" For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)."}]},{"pos":[198,422],"content":"The <xref:System.Windows.Forms.Form.OnMaximizedBoundsChanged%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","nodes":[{"content":"The <xref:System.Windows.Forms.Form.OnMaximizedBoundsChanged%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","pos":[0,224],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Form.OnMaximizedBoundsChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.","pos":[0,149],"source":"The <xref:System.Windows.Forms.Form.OnMaximizedBoundsChanged%2A> method also allows derived classes to handle the event without attaching a delegate."},{"content":"This is the preferred technique for handling the event in a derived class.","pos":[150,224]}]}]}],"pos":[270670,271097],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.EventArgs\"></xref> that contains the event data.","nodes":[{"pos":[0,71],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.EventArgs\"&gt;&lt;/xref&gt;</ph> that contains the event data.","source":"The <xref href=\"System.EventArgs\"></xref> that contains the event data."}],"pos":[271259,271331],"yaml":true},{"content":"Raises the <xref href=\"System.Windows.Forms.Form.MaximumSizeChanged\"></xref> event.","nodes":[{"pos":[0,83],"content":"Raises the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.Form.MaximumSizeChanged\"&gt;&lt;/xref&gt;</ph> event.","source":"Raises the <xref href=\"System.Windows.Forms.Form.MaximumSizeChanged\"></xref> event."}],"pos":[272426,272510],"yaml":true},{"content":"Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).  \n  \n The <xref:System.Windows.Forms.Form.OnMaximumSizeChanged%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","nodes":[{"pos":[0,191],"content":"Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).","nodes":[{"content":"Raising an event invokes the event handler through a delegate.","pos":[0,62]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Handling and Raising Events<ept id=\"p1\">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.","pos":[63,191],"source":" For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)."}]},{"pos":[198,418],"content":"The <xref:System.Windows.Forms.Form.OnMaximumSizeChanged%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","nodes":[{"content":"The <xref:System.Windows.Forms.Form.OnMaximumSizeChanged%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","pos":[0,220],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Form.OnMaximumSizeChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.","pos":[0,145],"source":"The <xref:System.Windows.Forms.Form.OnMaximumSizeChanged%2A> method also allows derived classes to handle the event without attaching a delegate."},{"content":"This is the preferred technique for handling the event in a derived class.","pos":[146,220]}]}]}],"pos":[272521,272944],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.EventArgs\"></xref> that contains the event data.","nodes":[{"pos":[0,71],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.EventArgs\"&gt;&lt;/xref&gt;</ph> that contains the event data.","source":"The <xref href=\"System.EventArgs\"></xref> that contains the event data."}],"pos":[273102,273174],"yaml":true},{"content":"Raises the <xref href=\"System.Windows.Forms.Form.MdiChildActivate\"></xref> event.","nodes":[{"pos":[0,81],"content":"Raises the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.Form.MdiChildActivate\"&gt;&lt;/xref&gt;</ph> event.","source":"Raises the <xref href=\"System.Windows.Forms.Form.MdiChildActivate\"></xref> event."}],"pos":[274275,274357],"yaml":true},{"content":"Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).  \n  \n The <xref:System.Windows.Forms.Form.OnMdiChildActivate%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","nodes":[{"pos":[0,191],"content":"Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).","nodes":[{"content":"Raising an event invokes the event handler through a delegate.","pos":[0,62]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Handling and Raising Events<ept id=\"p1\">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.","pos":[63,191],"source":" For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)."}]},{"pos":[198,416],"content":"The <xref:System.Windows.Forms.Form.OnMdiChildActivate%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","nodes":[{"content":"The <xref:System.Windows.Forms.Form.OnMdiChildActivate%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","pos":[0,218],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Form.OnMdiChildActivate%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.","pos":[0,143],"source":"The <xref:System.Windows.Forms.Form.OnMdiChildActivate%2A> method also allows derived classes to handle the event without attaching a delegate."},{"content":"This is the preferred technique for handling the event in a derived class.","pos":[144,218]}]}]}],"pos":[274368,274789],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.EventArgs\"></xref> that contains the event data.","nodes":[{"pos":[0,71],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.EventArgs\"&gt;&lt;/xref&gt;</ph> that contains the event data.","source":"The <xref href=\"System.EventArgs\"></xref> that contains the event data."}],"pos":[274945,275017],"yaml":true},{"content":"Raises the <xref href=\"System.Windows.Forms.Form.MenuComplete\"></xref> event.","nodes":[{"pos":[0,77],"content":"Raises the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.Form.MenuComplete\"&gt;&lt;/xref&gt;</ph> event.","source":"Raises the <xref href=\"System.Windows.Forms.Form.MenuComplete\"></xref> event."}],"pos":[276070,276148],"yaml":true},{"content":"Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).  \n  \n The <xref:System.Windows.Forms.Form.OnMenuComplete%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","nodes":[{"pos":[0,191],"content":"Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).","nodes":[{"content":"Raising an event invokes the event handler through a delegate.","pos":[0,62]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Handling and Raising Events<ept id=\"p1\">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.","pos":[63,191],"source":" For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)."}]},{"pos":[198,412],"content":"The <xref:System.Windows.Forms.Form.OnMenuComplete%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","nodes":[{"content":"The <xref:System.Windows.Forms.Form.OnMenuComplete%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","pos":[0,214],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Form.OnMenuComplete%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.","pos":[0,139],"source":"The <xref:System.Windows.Forms.Form.OnMenuComplete%2A> method also allows derived classes to handle the event without attaching a delegate."},{"content":"This is the preferred technique for handling the event in a derived class.","pos":[140,214]}]}]}],"pos":[276159,276576],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.EventArgs\"></xref> that contains the event data.","nodes":[{"pos":[0,71],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.EventArgs\"&gt;&lt;/xref&gt;</ph> that contains the event data.","source":"The <xref href=\"System.EventArgs\"></xref> that contains the event data."}],"pos":[276728,276800],"yaml":true},{"content":"Raises the <xref href=\"System.Windows.Forms.Form.MenuStart\"></xref> event.","nodes":[{"pos":[0,74],"content":"Raises the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.Form.MenuStart\"&gt;&lt;/xref&gt;</ph> event.","source":"Raises the <xref href=\"System.Windows.Forms.Form.MenuStart\"></xref> event."}],"pos":[277853,277928],"yaml":true},{"content":"Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).  \n  \n The <xref:System.Windows.Forms.Form.OnMenuStart%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","nodes":[{"pos":[0,191],"content":"Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).","nodes":[{"content":"Raising an event invokes the event handler through a delegate.","pos":[0,62]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Handling and Raising Events<ept id=\"p1\">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.","pos":[63,191],"source":" For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)."}]},{"pos":[198,409],"content":"The <xref:System.Windows.Forms.Form.OnMenuStart%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","nodes":[{"content":"The <xref:System.Windows.Forms.Form.OnMenuStart%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","pos":[0,211],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Form.OnMenuStart%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.","pos":[0,136],"source":"The <xref:System.Windows.Forms.Form.OnMenuStart%2A> method also allows derived classes to handle the event without attaching a delegate."},{"content":"This is the preferred technique for handling the event in a derived class.","pos":[137,211]}]}]}],"pos":[277939,278353],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.EventArgs\"></xref> that contains the event data.","nodes":[{"pos":[0,71],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.EventArgs\"&gt;&lt;/xref&gt;</ph> that contains the event data.","source":"The <xref href=\"System.EventArgs\"></xref> that contains the event data."}],"pos":[278502,278574],"yaml":true},{"content":"Raises the <xref href=\"System.Windows.Forms.Form.MinimumSizeChanged\"></xref> event.","nodes":[{"pos":[0,83],"content":"Raises the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.Form.MinimumSizeChanged\"&gt;&lt;/xref&gt;</ph> event.","source":"Raises the <xref href=\"System.Windows.Forms.Form.MinimumSizeChanged\"></xref> event."}],"pos":[279678,279762],"yaml":true},{"content":"Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).  \n  \n The <xref:System.Windows.Forms.Form.OnMinimumSizeChanged%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","nodes":[{"pos":[0,191],"content":"Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).","nodes":[{"content":"Raising an event invokes the event handler through a delegate.","pos":[0,62]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Handling and Raising Events<ept id=\"p1\">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.","pos":[63,191],"source":" For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)."}]},{"pos":[198,418],"content":"The <xref:System.Windows.Forms.Form.OnMinimumSizeChanged%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","nodes":[{"content":"The <xref:System.Windows.Forms.Form.OnMinimumSizeChanged%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","pos":[0,220],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Form.OnMinimumSizeChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.","pos":[0,145],"source":"The <xref:System.Windows.Forms.Form.OnMinimumSizeChanged%2A> method also allows derived classes to handle the event without attaching a delegate."},{"content":"This is the preferred technique for handling the event in a derived class.","pos":[146,220]}]}]}],"pos":[279773,280196],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.EventArgs\"></xref> that contains the event data.","nodes":[{"pos":[0,70],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.EventArgs\"&gt;&lt;/xref&gt;</ph> that contains the event data.","source":"An <xref href=\"System.EventArgs\"></xref> that contains the event data."}],"pos":[280354,280425],"yaml":true},{"content":"Raises the <xref href=\"System.Windows.Forms.Control.Paint\"></xref> event.","nodes":[{"pos":[0,73],"content":"Raises the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.Control.Paint\"&gt;&lt;/xref&gt;</ph> event.","source":"Raises the <xref href=\"System.Windows.Forms.Control.Paint\"></xref> event."}],"pos":[281532,281606],"yaml":true},{"content":"A <xref href=\"System.Windows.Forms.PaintEventArgs\"></xref> that contains the event data.","nodes":[{"pos":[0,88],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.PaintEventArgs\"&gt;&lt;/xref&gt;</ph> that contains the event data.","source":"A <xref href=\"System.Windows.Forms.PaintEventArgs\"></xref> that contains the event data."}],"pos":[281797,281886],"yaml":true},{"content":"Raises the <xref href=\"System.Windows.Forms.Control.Resize\"></xref> event.","nodes":[{"pos":[0,74],"content":"Raises the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.Control.Resize\"&gt;&lt;/xref&gt;</ph> event.","source":"Raises the <xref href=\"System.Windows.Forms.Control.Resize\"></xref> event."}],"pos":[282914,282989],"yaml":true},{"content":"An <xref href=\"System.EventArgs\"></xref> that contains the event data.","nodes":[{"pos":[0,70],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.EventArgs\"&gt;&lt;/xref&gt;</ph> that contains the event data.","source":"An <xref href=\"System.EventArgs\"></xref> that contains the event data."}],"pos":[283136,283207],"yaml":true},{"content":"Raises the <xref href=\"System.Windows.Forms.Form.ResizeBegin\"></xref> event.","nodes":[{"pos":[0,76],"content":"Raises the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.Form.ResizeBegin\"&gt;&lt;/xref&gt;</ph> event.","source":"Raises the <xref href=\"System.Windows.Forms.Form.ResizeBegin\"></xref> event."}],"pos":[284266,284343],"yaml":true},{"content":"The <xref:System.Windows.Forms.Form.ResizeBegin> event will only be raised if the form's <xref:System.Windows.Forms.Control.CanRaiseEvents%2A> property is set to `true`.  \n  \n Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).  \n  \n The <xref:System.Windows.Forms.Form.OnResizeBegin%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","nodes":[{"pos":[0,169],"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Form.ResizeBegin&gt;</ph> event will only be raised if the form's <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Control.CanRaiseEvents%2A&gt;</ph> property is set to <ph id=\"ph3\">`true`</ph>.","source":"The <xref:System.Windows.Forms.Form.ResizeBegin> event will only be raised if the form's <xref:System.Windows.Forms.Control.CanRaiseEvents%2A> property is set to `true`."},{"pos":[176,367],"content":"Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).","nodes":[{"content":"Raising an event invokes the event handler through a delegate.","pos":[0,62]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Handling and Raising Events<ept id=\"p1\">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.","pos":[63,191],"source":" For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)."}]},{"pos":[374,587],"content":"The <xref:System.Windows.Forms.Form.OnResizeBegin%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","nodes":[{"content":"The <xref:System.Windows.Forms.Form.OnResizeBegin%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","pos":[0,213],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Form.OnResizeBegin%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.","pos":[0,138],"source":"The <xref:System.Windows.Forms.Form.OnResizeBegin%2A> method also allows derived classes to handle the event without attaching a delegate."},{"content":"This is the preferred technique for handling the event in a derived class.","pos":[139,213]}]}]}],"pos":[284354,284948],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.EventArgs\"></xref> that contains the event data.","nodes":[{"pos":[0,69],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.EventArgs\"&gt;&lt;/xref&gt;</ph> that contains the event data.","source":"A <xref href=\"System.EventArgs\"></xref> that contains the event data."}],"pos":[285099,285169],"yaml":true},{"content":"Raises the <xref href=\"System.Windows.Forms.Form.ResizeEnd\"></xref> event.","nodes":[{"pos":[0,74],"content":"Raises the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.Form.ResizeEnd\"&gt;&lt;/xref&gt;</ph> event.","source":"Raises the <xref href=\"System.Windows.Forms.Form.ResizeEnd\"></xref> event."}],"pos":[286199,286274],"yaml":true},{"content":"The <xref:System.Windows.Forms.Form.ResizeEnd> event will only be raised if the form's <xref:System.Windows.Forms.Control.CanRaiseEvents%2A> property is set to `true`.  \n  \n Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).  \n  \n The <xref:System.Windows.Forms.Form.OnResizeEnd%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","nodes":[{"pos":[0,167],"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Form.ResizeEnd&gt;</ph> event will only be raised if the form's <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Control.CanRaiseEvents%2A&gt;</ph> property is set to <ph id=\"ph3\">`true`</ph>.","source":"The <xref:System.Windows.Forms.Form.ResizeEnd> event will only be raised if the form's <xref:System.Windows.Forms.Control.CanRaiseEvents%2A> property is set to `true`."},{"pos":[174,365],"content":"Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).","nodes":[{"content":"Raising an event invokes the event handler through a delegate.","pos":[0,62]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Handling and Raising Events<ept id=\"p1\">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.","pos":[63,191],"source":" For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)."}]},{"pos":[372,583],"content":"The <xref:System.Windows.Forms.Form.OnResizeEnd%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","nodes":[{"content":"The <xref:System.Windows.Forms.Form.OnResizeEnd%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","pos":[0,211],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Form.OnResizeEnd%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.","pos":[0,136],"source":"The <xref:System.Windows.Forms.Form.OnResizeEnd%2A> method also allows derived classes to handle the event without attaching a delegate."},{"content":"This is the preferred technique for handling the event in a derived class.","pos":[137,211]}]}]}],"pos":[286285,286875],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.EventArgs\"></xref> that contains the event data.","nodes":[{"pos":[0,69],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.EventArgs\"&gt;&lt;/xref&gt;</ph> that contains the event data.","source":"A <xref href=\"System.EventArgs\"></xref> that contains the event data."}],"pos":[287024,287094],"yaml":true},{"content":"Raises the <xref href=\"System.Windows.Forms.Form.RightToLeftLayoutChanged\"></xref> event.","nodes":[{"pos":[0,89],"content":"Raises the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.Form.RightToLeftLayoutChanged\"&gt;&lt;/xref&gt;</ph> event.","source":"Raises the <xref href=\"System.Windows.Forms.Form.RightToLeftLayoutChanged\"></xref> event."}],"pos":[288234,288324],"yaml":true},{"content":"If the current form or one of its parents is disposing of resources, the <xref:System.Windows.Forms.Form.OnRightToLeftLayoutChanged%2A> method will return without performing any action. If the <xref:System.Windows.Forms.Control.RightToLeft%2A> property of the form has a value of <xref:System.Windows.Forms.RightToLeft.Yes>, then the handles of the form and its child controls will be recreated through calls to the <xref:System.Windows.Forms.Control.RecreateHandle%2A> method.  \n  \n Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).  \n  \n The <xref:System.Windows.Forms.Form.OnRightToLeftLayoutChanged%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","nodes":[{"pos":[0,477],"content":"If the current form or one of its parents is disposing of resources, the <xref:System.Windows.Forms.Form.OnRightToLeftLayoutChanged%2A> method will return without performing any action. If the <xref:System.Windows.Forms.Control.RightToLeft%2A> property of the form has a value of <xref:System.Windows.Forms.RightToLeft.Yes>, then the handles of the form and its child controls will be recreated through calls to the <xref:System.Windows.Forms.Control.RecreateHandle%2A> method.","nodes":[{"content":"If the current form or one of its parents is disposing of resources, the <xref:System.Windows.Forms.Form.OnRightToLeftLayoutChanged%2A> method will return without performing any action. If the <xref:System.Windows.Forms.Control.RightToLeft%2A> property of the form has a value of <xref:System.Windows.Forms.RightToLeft.Yes>, then the handles of the form and its child controls will be recreated through calls to the <xref:System.Windows.Forms.Control.RecreateHandle%2A> method.","pos":[0,477],"nodes":[{"content":"If the current form or one of its parents is disposing of resources, the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Form.OnRightToLeftLayoutChanged%2A&gt;</ph> method will return without performing any action.","pos":[0,185],"source":"If the current form or one of its parents is disposing of resources, the <xref:System.Windows.Forms.Form.OnRightToLeftLayoutChanged%2A> method will return without performing any action."},{"content":"If the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.RightToLeft%2A&gt;</ph> property of the form has a value of <ph id=\"ph2\">&lt;xref:System.Windows.Forms.RightToLeft.Yes&gt;</ph>, then the handles of the form and its child controls will be recreated through calls to the <ph id=\"ph3\">&lt;xref:System.Windows.Forms.Control.RecreateHandle%2A&gt;</ph> method.","pos":[186,477],"source":" If the <xref:System.Windows.Forms.Control.RightToLeft%2A> property of the form has a value of <xref:System.Windows.Forms.RightToLeft.Yes>, then the handles of the form and its child controls will be recreated through calls to the <xref:System.Windows.Forms.Control.RecreateHandle%2A> method."}]}]},{"pos":[484,675],"content":"Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).","nodes":[{"content":"Raising an event invokes the event handler through a delegate.","pos":[0,62]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Handling and Raising Events<ept id=\"p1\">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.","pos":[63,191],"source":" For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)."}]},{"pos":[682,908],"content":"The <xref:System.Windows.Forms.Form.OnRightToLeftLayoutChanged%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","nodes":[{"content":"The <xref:System.Windows.Forms.Form.OnRightToLeftLayoutChanged%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","pos":[0,226],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Form.OnRightToLeftLayoutChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.","pos":[0,151],"source":"The <xref:System.Windows.Forms.Form.OnRightToLeftLayoutChanged%2A> method also allows derived classes to handle the event without attaching a delegate."},{"content":"This is the preferred technique for handling the event in a derived class.","pos":[152,226]}]}]}],"pos":[288335,289250],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.EventArgs\"></xref> that contains the event data.","nodes":[{"pos":[0,70],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.EventArgs\"&gt;&lt;/xref&gt;</ph> that contains the event data.","source":"An <xref href=\"System.EventArgs\"></xref> that contains the event data."}],"pos":[289414,289485],"yaml":true},{"content":"Raises the <xref href=\"System.Windows.Forms.Form.Shown\"></xref> event.","nodes":[{"pos":[0,70],"content":"Raises the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.Form.Shown\"&gt;&lt;/xref&gt;</ph> event.","source":"Raises the <xref href=\"System.Windows.Forms.Form.Shown\"></xref> event."}],"pos":[290526,290597],"yaml":true},{"content":"The <xref:System.Windows.Forms.Form.Shown> event occurs whenever the form is first shown.  \n  \n Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).  \n  \n The <xref:System.Windows.Forms.Form.OnShown%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","nodes":[{"pos":[0,89],"content":"The <xref:System.Windows.Forms.Form.Shown> event occurs whenever the form is first shown.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Form.Shown&gt;</ph> event occurs whenever the form is first shown.","pos":[0,89],"source":"The <xref:System.Windows.Forms.Form.Shown> event occurs whenever the form is first shown."}]},{"pos":[96,287],"content":"Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).","nodes":[{"content":"Raising an event invokes the event handler through a delegate.","pos":[0,62]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Handling and Raising Events<ept id=\"p1\">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.","pos":[63,191],"source":" For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)."}]},{"pos":[294,501],"content":"The <xref:System.Windows.Forms.Form.OnShown%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","nodes":[{"content":"The <xref:System.Windows.Forms.Form.OnShown%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","pos":[0,207],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Form.OnShown%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.","pos":[0,132],"source":"The <xref:System.Windows.Forms.Form.OnShown%2A> method also allows derived classes to handle the event without attaching a delegate."},{"content":"This is the preferred technique for handling the event in a derived class.","pos":[133,207]}]}]}],"pos":[290608,291116],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.EventArgs\"></xref> that contains the event data.","nodes":[{"pos":[0,69],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.EventArgs\"&gt;&lt;/xref&gt;</ph> that contains the event data.","source":"A <xref href=\"System.EventArgs\"></xref> that contains the event data."}],"pos":[291261,291331],"yaml":true},{"content":"Raises the <xref href=\"System.Windows.Forms.Control.StyleChanged\"></xref> event.","nodes":[{"pos":[0,80],"content":"Raises the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.Control.StyleChanged\"&gt;&lt;/xref&gt;</ph> event.","source":"Raises the <xref href=\"System.Windows.Forms.Control.StyleChanged\"></xref> event."}],"pos":[292395,292476],"yaml":true},{"content":"An <xref href=\"System.EventArgs\"></xref> that contains the event data.","nodes":[{"pos":[0,70],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.EventArgs\"&gt;&lt;/xref&gt;</ph> that contains the event data.","source":"An <xref href=\"System.EventArgs\"></xref> that contains the event data."}],"pos":[292629,292700],"yaml":true},{"content":"Raises the <xref href=\"System.Windows.Forms.Control.TextChanged\"></xref> event.","nodes":[{"pos":[0,79],"content":"Raises the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.Control.TextChanged\"&gt;&lt;/xref&gt;</ph> event.","source":"Raises the <xref href=\"System.Windows.Forms.Control.TextChanged\"></xref> event."}],"pos":[293743,293823],"yaml":true},{"content":"An <xref href=\"System.EventArgs\"></xref> that contains the event data.","nodes":[{"pos":[0,70],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.EventArgs\"&gt;&lt;/xref&gt;</ph> that contains the event data.","source":"An <xref href=\"System.EventArgs\"></xref> that contains the event data."}],"pos":[293975,294046],"yaml":true},{"content":"Raises the <xref href=\"System.Windows.Forms.Control.VisibleChanged\"></xref> event.","nodes":[{"pos":[0,82],"content":"Raises the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.Control.VisibleChanged\"&gt;&lt;/xref&gt;</ph> event.","source":"Raises the <xref href=\"System.Windows.Forms.Control.VisibleChanged\"></xref> event."}],"pos":[295128,295211],"yaml":true},{"content":"Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).  \n  \n The <xref:System.Windows.Forms.Form.OnVisibleChanged%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","nodes":[{"pos":[0,191],"content":"Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).","nodes":[{"content":"Raising an event invokes the event handler through a delegate.","pos":[0,62]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Handling and Raising Events<ept id=\"p1\">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.","pos":[63,191],"source":" For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)."}]},{"pos":[198,414],"content":"The <xref:System.Windows.Forms.Form.OnVisibleChanged%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","nodes":[{"content":"The <xref:System.Windows.Forms.Form.OnVisibleChanged%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.","pos":[0,216],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Form.OnVisibleChanged%2A&gt;</ph> method also allows derived classes to handle the event without attaching a delegate.","pos":[0,141],"source":"The <xref:System.Windows.Forms.Form.OnVisibleChanged%2A> method also allows derived classes to handle the event without attaching a delegate."},{"content":"This is the preferred technique for handling the event in a derived class.","pos":[142,216]}]}]}],"pos":[295222,295641],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.EventArgs\"></xref> that contains the event data.","nodes":[{"pos":[0,71],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.EventArgs\"&gt;&lt;/xref&gt;</ph> that contains the event data.","source":"The <xref href=\"System.EventArgs\"></xref> that contains the event data."}],"pos":[295796,295868],"yaml":true},{"content":"Gets or sets the opacity level of the form.","nodes":[{"pos":[0,43],"content":"Gets or sets the opacity level of the form.","nodes":[{"content":"Gets or sets the opacity level of the form.","pos":[0,43]}]}],"pos":[296814,296858],"yaml":true},{"content":"The <xref:System.Windows.Forms.Form.Opacity%2A> property enables you to specify a level of transparency for the form and its controls. When this property is set to a value less than 100 percent (1.00), the entire form, including borders, is made more transparent. Setting this property to a value of 0 percent (0.00) makes the form completely invisible. You can use this property to provide different levels of transparency or to provide effects such as phasing a form in or out of view. For example, you can phase a form into view by setting the <xref:System.Windows.Forms.Form.Opacity%2A> property to a value of 0 percent (0.00) and gradually increasing the value until it reaches 100 percent (1.00).  \n  \n <xref:System.Windows.Forms.Form.Opacity%2A> differs from the transparency provided by the <xref:System.Windows.Forms.Form.TransparencyKey%2A>, which only makes a form and its controls completely transparent if they are the same color as the value specified in the <xref:System.Windows.Forms.Form.TransparencyKey%2A> property.  \n  \n This property is not supported when <xref:System.Windows.Forms.Form.RightToLeftLayout%2A> is `true`.  \n  \n The <xref:System.Windows.Forms.Form.Opacity%2A> property depends on the Layered Windows API that was introduced with Windows 2000. For more information, see the \"Layered Windows: A New Way to Use Translucency and Transparency Effects in Windows Applications\" in the Platform SDK documentation at [http://msdn.microsoft.com](http://msdn.microsoft.com/).","nodes":[{"pos":[0,702],"content":"The <xref:System.Windows.Forms.Form.Opacity%2A> property enables you to specify a level of transparency for the form and its controls. When this property is set to a value less than 100 percent (1.00), the entire form, including borders, is made more transparent. Setting this property to a value of 0 percent (0.00) makes the form completely invisible. You can use this property to provide different levels of transparency or to provide effects such as phasing a form in or out of view. For example, you can phase a form into view by setting the <xref:System.Windows.Forms.Form.Opacity%2A> property to a value of 0 percent (0.00) and gradually increasing the value until it reaches 100 percent (1.00).","nodes":[{"content":"The <xref:System.Windows.Forms.Form.Opacity%2A> property enables you to specify a level of transparency for the form and its controls. When this property is set to a value less than 100 percent (1.00), the entire form, including borders, is made more transparent. Setting this property to a value of 0 percent (0.00) makes the form completely invisible. You can use this property to provide different levels of transparency or to provide effects such as phasing a form in or out of view. For example, you can phase a form into view by setting the <xref:System.Windows.Forms.Form.Opacity%2A> property to a value of 0 percent (0.00) and gradually increasing the value until it reaches 100 percent (1.00).","pos":[0,702],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Form.Opacity%2A&gt;</ph> property enables you to specify a level of transparency for the form and its controls.","pos":[0,134],"source":"The <xref:System.Windows.Forms.Form.Opacity%2A> property enables you to specify a level of transparency for the form and its controls."},{"content":"When this property is set to a value less than 100 percent (1.00), the entire form, including borders, is made more transparent.","pos":[135,263]},{"content":"Setting this property to a value of 0 percent (0.00) makes the form completely invisible.","pos":[264,353]},{"content":"You can use this property to provide different levels of transparency or to provide effects such as phasing a form in or out of view.","pos":[354,487]},{"content":"For example, you can phase a form into view by setting the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Form.Opacity%2A&gt;</ph> property to a value of 0 percent (0.00) and gradually increasing the value until it reaches 100 percent (1.00).","pos":[488,702],"source":" For example, you can phase a form into view by setting the <xref:System.Windows.Forms.Form.Opacity%2A> property to a value of 0 percent (0.00) and gradually increasing the value until it reaches 100 percent (1.00)."}]}]},{"pos":[709,1034],"content":"<xref:System.Windows.Forms.Form.Opacity%2A> differs from the transparency provided by the <xref:System.Windows.Forms.Form.TransparencyKey%2A>, which only makes a form and its controls completely transparent if they are the same color as the value specified in the <xref:System.Windows.Forms.Form.TransparencyKey%2A> property.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Windows.Forms.Form.Opacity%2A&gt;</ph> differs from the transparency provided by the <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Form.TransparencyKey%2A&gt;</ph>, which only makes a form and its controls completely transparent if they are the same color as the value specified in the <ph id=\"ph3\">&lt;xref:System.Windows.Forms.Form.TransparencyKey%2A&gt;</ph> property.","pos":[0,325],"source":"<xref:System.Windows.Forms.Form.Opacity%2A> differs from the transparency provided by the <xref:System.Windows.Forms.Form.TransparencyKey%2A>, which only makes a form and its controls completely transparent if they are the same color as the value specified in the <xref:System.Windows.Forms.Form.TransparencyKey%2A> property."}]},{"pos":[1041,1141],"content":"This property is not supported when <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Form.RightToLeftLayout%2A&gt;</ph> is <ph id=\"ph2\">`true`</ph>.","source":"This property is not supported when <xref:System.Windows.Forms.Form.RightToLeftLayout%2A> is `true`."},{"pos":[1148,1500],"content":"The <xref:System.Windows.Forms.Form.Opacity%2A> property depends on the Layered Windows API that was introduced with Windows 2000. For more information, see the \"Layered Windows: A New Way to Use Translucency and Transparency Effects in Windows Applications\" in the Platform SDK documentation at [http://msdn.microsoft.com](http://msdn.microsoft.com/).","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Form.Opacity%2A&gt;</ph> property depends on the Layered Windows API that was introduced with Windows 2000.","pos":[0,130],"source":"The <xref:System.Windows.Forms.Form.Opacity%2A> property depends on the Layered Windows API that was introduced with Windows 2000."},{"content":"For more information, see the \"Layered Windows: A New Way to Use Translucency and Transparency Effects in Windows Applications\" in the Platform SDK documentation at <bpt id=\"p1\">[</bpt>http://msdn.microsoft.com<ept id=\"p1\">](http://msdn.microsoft.com/)</ept>.","pos":[131,352],"source":" For more information, see the \"Layered Windows: A New Way to Use Translucency and Transparency Effects in Windows Applications\" in the Platform SDK documentation at [http://msdn.microsoft.com](http://msdn.microsoft.com/)."}]}],"pos":[296869,298380],"yaml":true,"extradata":"MT"},{"content":"The level of opacity for the form. The default is 1.00.","nodes":[{"pos":[0,55],"content":"The level of opacity for the form. The default is 1.00.","nodes":[{"content":"The level of opacity for the form. The default is 1.00.","pos":[0,55],"nodes":[{"content":"The level of opacity for the form.","pos":[0,34]},{"content":"The default is 1.00.","pos":[35,55]}]}]}],"pos":[299549,299605],"yaml":true},{"content":"Gets an array of <xref href=\"System.Windows.Forms.Form\"></xref> objects that represent all forms that are owned by this form.","nodes":[{"pos":[0,125],"content":"Gets an array of <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.Form\"&gt;&lt;/xref&gt;</ph> objects that represent all forms that are owned by this form.","source":"Gets an array of <xref href=\"System.Windows.Forms.Form\"></xref> objects that represent all forms that are owned by this form."}],"pos":[300612,300738],"yaml":true},{"content":"This property returns an array that contains all forms that are owned by this form. To make a form owned by another form, call the <xref:System.Windows.Forms.Form.AddOwnedForm%2A> method. The form assigned to the owner form will remain owned until the <xref:System.Windows.Forms.Form.RemoveOwnedForm%2A> method is called. You can also make a form owned by another by setting the <xref:System.Windows.Forms.Form.Owner%2A> property with a reference to its owner form.  \n  \n When a form is owned by another form, it is closed or hidden with the owner form. For example, consider a form named `Form2` that is owned by a form named `Form1`. If `Form1` is closed or minimized, `Form2` is also closed or hidden. Owned forms are also never displayed behind their owner form. You can use owned forms for windows such as find and replace windows, which should not be displayed behind the owner form when the owner form is selected.  \n  \n> [!NOTE]\n>  If the form is a multiple-document interface (MDI) parent form, this property will return all forms that are displayed with the exception of any MDI child forms that are currently open. To obtain the MDI child forms opened in an MDI parent form, use the <xref:System.Windows.Forms.Form.MdiChildren%2A> property.","nodes":[{"pos":[0,465],"content":"This property returns an array that contains all forms that are owned by this form. To make a form owned by another form, call the <xref:System.Windows.Forms.Form.AddOwnedForm%2A> method. The form assigned to the owner form will remain owned until the <xref:System.Windows.Forms.Form.RemoveOwnedForm%2A> method is called. You can also make a form owned by another by setting the <xref:System.Windows.Forms.Form.Owner%2A> property with a reference to its owner form.","nodes":[{"content":"This property returns an array that contains all forms that are owned by this form. To make a form owned by another form, call the <xref:System.Windows.Forms.Form.AddOwnedForm%2A> method. The form assigned to the owner form will remain owned until the <xref:System.Windows.Forms.Form.RemoveOwnedForm%2A> method is called. You can also make a form owned by another by setting the <xref:System.Windows.Forms.Form.Owner%2A> property with a reference to its owner form.","pos":[0,465],"nodes":[{"content":"This property returns an array that contains all forms that are owned by this form.","pos":[0,83]},{"content":"To make a form owned by another form, call the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Form.AddOwnedForm%2A&gt;</ph> method.","pos":[84,187],"source":" To make a form owned by another form, call the <xref:System.Windows.Forms.Form.AddOwnedForm%2A> method."},{"content":"The form assigned to the owner form will remain owned until the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Form.RemoveOwnedForm%2A&gt;</ph> method is called.","pos":[188,321],"source":" The form assigned to the owner form will remain owned until the <xref:System.Windows.Forms.Form.RemoveOwnedForm%2A> method is called."},{"content":"You can also make a form owned by another by setting the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Form.Owner%2A&gt;</ph> property with a reference to its owner form.","pos":[322,465],"source":" You can also make a form owned by another by setting the <xref:System.Windows.Forms.Form.Owner%2A> property with a reference to its owner form."}]}]},{"pos":[472,921],"content":"When a form is owned by another form, it is closed or hidden with the owner form. For example, consider a form named `Form2` that is owned by a form named `Form1`. If `Form1` is closed or minimized, `Form2` is also closed or hidden. Owned forms are also never displayed behind their owner form. You can use owned forms for windows such as find and replace windows, which should not be displayed behind the owner form when the owner form is selected.","nodes":[{"content":"When a form is owned by another form, it is closed or hidden with the owner form.","pos":[0,81]},{"content":"For example, consider a form named <ph id=\"ph1\">`Form2`</ph> that is owned by a form named <ph id=\"ph2\">`Form1`</ph>.","pos":[82,163],"source":" For example, consider a form named `Form2` that is owned by a form named `Form1`."},{"content":"If <ph id=\"ph1\">`Form1`</ph> is closed or minimized, <ph id=\"ph2\">`Form2`</ph> is also closed or hidden.","pos":[164,232],"source":" If `Form1` is closed or minimized, `Form2` is also closed or hidden."},{"content":"Owned forms are also never displayed behind their owner form.","pos":[233,294]},{"content":"You can use owned forms for windows such as find and replace windows, which should not be displayed behind the owner form when the owner form is selected.","pos":[295,449]}]},{"pos":[929,1251],"content":"[!NOTE]\n If the form is a multiple-document interface (MDI) parent form, this property will return all forms that are displayed with the exception of any MDI child forms that are currently open. To obtain the MDI child forms opened in an MDI parent form, use the <xref:System.Windows.Forms.Form.MdiChildren%2A> property.","leadings":["","> "],"nodes":[{"content":" If the form is a multiple-document interface (MDI) parent form, this property will return all forms that are displayed with the exception of any MDI child forms that are currently open. To obtain the MDI child forms opened in an MDI parent form, use the <xref:System.Windows.Forms.Form.MdiChildren%2A> property.","pos":[8,320],"nodes":[{"content":"If the form is a multiple-document interface (MDI) parent form, this property will return all forms that are displayed with the exception of any MDI child forms that are currently open.","pos":[1,186]},{"content":"To obtain the MDI child forms opened in an MDI parent form, use the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Form.MdiChildren%2A&gt;</ph> property.","pos":[187,312],"source":" To obtain the MDI child forms opened in an MDI parent form, use the <xref:System.Windows.Forms.Form.MdiChildren%2A> property."}]}]}],"pos":[300749,302008],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Windows.Forms.Form\"></xref> array that represents the owned forms for this form.","nodes":[{"pos":[0,101],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.Form\"&gt;&lt;/xref&gt;</ph> array that represents the owned forms for this form.","source":"A <xref href=\"System.Windows.Forms.Form\"></xref> array that represents the owned forms for this form."}],"pos":[302998,303100],"yaml":true},{"content":"Gets or sets the form that owns this form.","nodes":[{"pos":[0,42],"content":"Gets or sets the form that owns this form.","nodes":[{"content":"Gets or sets the form that owns this form.","pos":[0,42]}]}],"pos":[304076,304119],"yaml":true},{"content":"To make a form owned by another form, assign its <xref:System.Windows.Forms.Form.Owner%2A> property a reference to the form that will be the owner.  \n  \n When a form is owned by another form, it is closed or hidden with the owner form. For example, consider a form named `Form2` that is owned by a form named `Form1`. If `Form1` is closed or minimized, `Form2` is also closed or hidden.Owned forms are also never displayed behind their owner form. You can use owned forms for windows such as find and replace windows, which should not disappear when the owner form is selected. To determine the forms that are owned by a parent form, use the <xref:System.Windows.Forms.Form.OwnedForms%2A> property.","nodes":[{"pos":[0,147],"content":"To make a form owned by another form, assign its <xref:System.Windows.Forms.Form.Owner%2A> property a reference to the form that will be the owner.","nodes":[{"content":"To make a form owned by another form, assign its <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Form.Owner%2A&gt;</ph> property a reference to the form that will be the owner.","pos":[0,147],"source":"To make a form owned by another form, assign its <xref:System.Windows.Forms.Form.Owner%2A> property a reference to the form that will be the owner."}]},{"pos":[154,698],"content":"When a form is owned by another form, it is closed or hidden with the owner form. For example, consider a form named `Form2` that is owned by a form named `Form1`. If `Form1` is closed or minimized, `Form2` is also closed or hidden.Owned forms are also never displayed behind their owner form. You can use owned forms for windows such as find and replace windows, which should not disappear when the owner form is selected. To determine the forms that are owned by a parent form, use the <xref:System.Windows.Forms.Form.OwnedForms%2A> property.","nodes":[{"content":"When a form is owned by another form, it is closed or hidden with the owner form.","pos":[0,81]},{"content":"For example, consider a form named <ph id=\"ph1\">`Form2`</ph> that is owned by a form named <ph id=\"ph2\">`Form1`</ph>.","pos":[82,163],"source":" For example, consider a form named `Form2` that is owned by a form named `Form1`."},{"content":"If <ph id=\"ph1\">`Form1`</ph> is closed or minimized, <ph id=\"ph2\">`Form2`</ph> is also closed or hidden.Owned forms are also never displayed behind their owner form.","pos":[164,293],"source":" If `Form1` is closed or minimized, `Form2` is also closed or hidden.Owned forms are also never displayed behind their owner form."},{"content":"You can use owned forms for windows such as find and replace windows, which should not disappear when the owner form is selected.","pos":[294,423]},{"content":"To determine the forms that are owned by a parent form, use the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Form.OwnedForms%2A&gt;</ph> property.","pos":[424,544],"source":" To determine the forms that are owned by a parent form, use the <xref:System.Windows.Forms.Form.OwnedForms%2A> property."}]}],"pos":[304130,304833],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Windows.Forms.Form\"></xref> that represents the form that is the owner of this form.","nodes":[{"pos":[0,105],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.Form\"&gt;&lt;/xref&gt;</ph> that represents the form that is the owner of this form.","source":"A <xref href=\"System.Windows.Forms.Form\"></xref> that represents the form that is the owner of this form."}],"pos":[305035,305141],"yaml":true},{"content":"A top-level window cannot have an owner.","nodes":[{"pos":[0,40],"content":"A top-level window cannot have an owner.","nodes":[{"content":"A top-level window cannot have an owner.","pos":[0,40]}]}],"pos":[305278,305319],"yaml":true},{"content":"Processes a command key.","nodes":[{"pos":[0,24],"content":"Processes a command key.","nodes":[{"content":"Processes a command key.","pos":[0,24]}]}],"pos":[306490,306515],"yaml":true},{"content":"The <xref:System.Windows.Forms.Form.ProcessCmdKey%2A> method overrides the base  \n  \n <xref:System.Windows.Forms.ContainerControl.ProcessCmdKey%2A?displayProperty=fullName> implementation to provide additional handling of main menu command keys and MDI accelerators.  \n  \n For information about trapping keystrokes, see \"How to trap keystrokes in controls by using Visual C#\" and \"How to trap keystrokes in .NET controls by using Visual Basic .NET\" in the Microsoft Knowledge Base at http://support.microsoft.com.","nodes":[{"pos":[0,79],"content":"The <xref:System.Windows.Forms.Form.ProcessCmdKey%2A> method overrides the base","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Form.ProcessCmdKey%2A&gt;</ph> method overrides the base","pos":[0,79],"source":"The <xref:System.Windows.Forms.Form.ProcessCmdKey%2A> method overrides the base"}]},{"pos":[86,266],"content":"<xref:System.Windows.Forms.ContainerControl.ProcessCmdKey%2A?displayProperty=fullName> implementation to provide additional handling of main menu command keys and MDI accelerators.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Windows.Forms.ContainerControl.ProcessCmdKey%2A?displayProperty=fullName&gt;</ph> implementation to provide additional handling of main menu command keys and MDI accelerators.","pos":[0,180],"source":"<xref:System.Windows.Forms.ContainerControl.ProcessCmdKey%2A?displayProperty=fullName> implementation to provide additional handling of main menu command keys and MDI accelerators."}]},{"pos":[273,513],"content":"For information about trapping keystrokes, see \"How to trap keystrokes in controls by using Visual C#\" and \"How to trap keystrokes in .NET controls by using Visual Basic .NET\" in the Microsoft Knowledge Base at http://support.microsoft.com.","nodes":[{"content":"For information about trapping keystrokes, see \"How to trap keystrokes in controls by using Visual C#\" and \"How to trap keystrokes in .NET controls by using Visual Basic .NET\" in the Microsoft Knowledge Base at http://support.microsoft.com.","pos":[0,240]}]}],"pos":[306526,307050],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Windows.Forms.Message\"></xref>, passed by reference, that represents the Win32 message to process.","nodes":[{"pos":[0,119],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.Message\"&gt;&lt;/xref&gt;</ph>, passed by reference, that represents the Win32 message to process.","source":"A <xref href=\"System.Windows.Forms.Message\"></xref>, passed by reference, that represents the Win32 message to process."}],"pos":[307276,307396],"yaml":true},{"content":"One of the <xref href=\"System.Windows.Forms.Keys\"></xref> values that represents the key to process.","nodes":[{"pos":[0,100],"content":"One of the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.Keys\"&gt;&lt;/xref&gt;</ph> values that represents the key to process.","source":"One of the <xref href=\"System.Windows.Forms.Keys\"></xref> values that represents the key to process."}],"pos":[307471,307572],"yaml":true},{"content":"`true` if the keystroke was processed and consumed by the control; otherwise, `false` to allow further processing.","nodes":[{"pos":[0,114],"content":"<ph id=\"ph1\">`true`</ph> if the keystroke was processed and consumed by the control; otherwise, <ph id=\"ph2\">`false`</ph> to allow further processing.","source":"`true` if the keystroke was processed and consumed by the control; otherwise, `false` to allow further processing."}],"pos":[307630,307747],"yaml":true},{"content":"Processes a dialog character.","nodes":[{"pos":[0,29],"content":"Processes a dialog character.","nodes":[{"content":"Processes a dialog character.","pos":[0,29]}]}],"pos":[308766,308796],"yaml":true},{"content":"The character to process.","nodes":[{"pos":[0,25],"content":"The character to process.","nodes":[{"content":"The character to process.","pos":[0,25]}]}],"pos":[308956,308982],"yaml":true},{"content":"`true` if the character was processed by the control; otherwise, `false`.","nodes":[{"pos":[0,73],"content":"<ph id=\"ph1\">`true`</ph> if the character was processed by the control; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the character was processed by the control; otherwise, `false`."}],"pos":[309040,309116],"yaml":true},{"content":"Processes a dialog box key.","nodes":[{"pos":[0,27],"content":"Processes a dialog box key.","nodes":[{"content":"Processes a dialog box key.","pos":[0,27]}]}],"pos":[310214,310242],"yaml":true},{"content":"The <xref:System.Windows.Forms.Form.ProcessDialogKey%2A> method overrides the base <xref:System.Windows.Forms.ContainerControl.ProcessDialogKey%2A?displayProperty=fullName> implementation to provide additional handling of the RETURN and ESCAPE keys in dialog boxes. The method performs no processing on keystrokes that include the ALT or CONTROL modifiers.","nodes":[{"pos":[0,356],"content":"The <xref:System.Windows.Forms.Form.ProcessDialogKey%2A> method overrides the base <xref:System.Windows.Forms.ContainerControl.ProcessDialogKey%2A?displayProperty=fullName> implementation to provide additional handling of the RETURN and ESCAPE keys in dialog boxes. The method performs no processing on keystrokes that include the ALT or CONTROL modifiers.","nodes":[{"content":"The <xref:System.Windows.Forms.Form.ProcessDialogKey%2A> method overrides the base <xref:System.Windows.Forms.ContainerControl.ProcessDialogKey%2A?displayProperty=fullName> implementation to provide additional handling of the RETURN and ESCAPE keys in dialog boxes. The method performs no processing on keystrokes that include the ALT or CONTROL modifiers.","pos":[0,356],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Form.ProcessDialogKey%2A&gt;</ph> method overrides the base <ph id=\"ph2\">&lt;xref:System.Windows.Forms.ContainerControl.ProcessDialogKey%2A?displayProperty=fullName&gt;</ph> implementation to provide additional handling of the RETURN and ESCAPE keys in dialog boxes.","pos":[0,265],"source":"The <xref:System.Windows.Forms.Form.ProcessDialogKey%2A> method overrides the base <xref:System.Windows.Forms.ContainerControl.ProcessDialogKey%2A?displayProperty=fullName> implementation to provide additional handling of the RETURN and ESCAPE keys in dialog boxes."},{"content":"The method performs no processing on keystrokes that include the ALT or CONTROL modifiers.","pos":[266,356]}]}]}],"pos":[310253,310610],"yaml":true,"extradata":"MT"},{"content":"One of the <xref href=\"System.Windows.Forms.Keys\"></xref> values that represents the key to process.","nodes":[{"pos":[0,100],"content":"One of the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.Keys\"&gt;&lt;/xref&gt;</ph> values that represents the key to process.","source":"One of the <xref href=\"System.Windows.Forms.Keys\"></xref> values that represents the key to process."}],"pos":[310802,310903],"yaml":true},{"content":"`true` if the keystroke was processed and consumed by the control; otherwise, `false` to allow further processing.","nodes":[{"pos":[0,114],"content":"<ph id=\"ph1\">`true`</ph> if the keystroke was processed and consumed by the control; otherwise, <ph id=\"ph2\">`false`</ph> to allow further processing.","source":"`true` if the keystroke was processed and consumed by the control; otherwise, `false` to allow further processing."}],"pos":[310961,311078],"yaml":true},{"content":"Previews a keyboard message.","nodes":[{"pos":[0,28],"content":"Previews a keyboard message.","nodes":[{"content":"Previews a keyboard message.","pos":[0,28]}]}],"pos":[312185,312214],"yaml":true},{"content":"A <xref href=\"System.Windows.Forms.Message\"></xref>, passed by reference, that represents the window message to process.","nodes":[{"pos":[0,120],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.Message\"&gt;&lt;/xref&gt;</ph>, passed by reference, that represents the window message to process.","source":"A <xref href=\"System.Windows.Forms.Message\"></xref>, passed by reference, that represents the window message to process."}],"pos":[312405,312526],"yaml":true},{"content":"`true` if the message was processed by the control; otherwise, `false`.","nodes":[{"pos":[0,71],"content":"<ph id=\"ph1\">`true`</ph> if the message was processed by the control; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the message was processed by the control; otherwise, `false`."}],"pos":[312584,312658],"yaml":true},{"content":"Processes a mnemonic character.","nodes":[{"pos":[0,31],"content":"Processes a mnemonic character.","nodes":[{"content":"Processes a mnemonic character.","pos":[0,31]}]}],"pos":[313691,313723],"yaml":true},{"content":"The character to process.","nodes":[{"pos":[0,25],"content":"The character to process.","nodes":[{"content":"The character to process.","pos":[0,25]}]}],"pos":[313881,313907],"yaml":true},{"content":"`true` if the character was processed as a mnemonic by the control; otherwise, `false`.","nodes":[{"pos":[0,87],"content":"<ph id=\"ph1\">`true`</ph> if the character was processed as a mnemonic by the control; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the character was processed as a mnemonic by the control; otherwise, `false`."}],"pos":[313965,314055],"yaml":true},{"content":"Selects the next available control and makes it the active control.","nodes":[{"pos":[0,67],"content":"Selects the next available control and makes it the active control.","nodes":[{"content":"Selects the next available control and makes it the active control.","pos":[0,67]}]}],"pos":[315070,315138],"yaml":true},{"content":"`true` to cycle forward through the controls in the ContainerControl; otherwise, `false`.","nodes":[{"pos":[0,89],"content":"<ph id=\"ph1\">`true`</ph> to cycle forward through the controls in the ContainerControl; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` to cycle forward through the controls in the ContainerControl; otherwise, `false`."}],"pos":[315295,315387],"yaml":true},{"content":"`true` if a control is selected; otherwise, `false`.","nodes":[{"pos":[0,52],"content":"<ph id=\"ph1\">`true`</ph> if a control is selected; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if a control is selected; otherwise, `false`."}],"pos":[315445,315500],"yaml":true},{"content":"Removes an owned form from this form.","nodes":[{"pos":[0,37],"content":"Removes an owned form from this form.","nodes":[{"content":"Removes an owned form from this form.","pos":[0,37]}]}],"pos":[316571,316609],"yaml":true},{"content":"The form assigned to the owner form remains owned until the <xref:System.Windows.Forms.Form.RemoveOwnedForm%2A> method is called. In addition to removing the owned form from the list of owned form, this method also sets the owner form to `null`.","nodes":[{"pos":[0,245],"content":"The form assigned to the owner form remains owned until the <xref:System.Windows.Forms.Form.RemoveOwnedForm%2A> method is called. In addition to removing the owned form from the list of owned form, this method also sets the owner form to `null`.","nodes":[{"content":"The form assigned to the owner form remains owned until the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Form.RemoveOwnedForm%2A&gt;</ph> method is called.","pos":[0,129],"source":"The form assigned to the owner form remains owned until the <xref:System.Windows.Forms.Form.RemoveOwnedForm%2A> method is called."},{"content":"In addition to removing the owned form from the list of owned form, this method also sets the owner form to <ph id=\"ph1\">`null`</ph>.","pos":[130,245],"source":" In addition to removing the owned form from the list of owned form, this method also sets the owner form to `null`."}]}],"pos":[316620,316866],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Windows.Forms.Form\"></xref> representing the form to remove from the list of owned forms for this form.","nodes":[{"pos":[0,124],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.Form\"&gt;&lt;/xref&gt;</ph> representing the form to remove from the list of owned forms for this form.","source":"A <xref href=\"System.Windows.Forms.Form\"></xref> representing the form to remove from the list of owned forms for this form."}],"pos":[317049,317174],"yaml":true},{"content":"Occurs when a form enters resizing mode.","nodes":[{"pos":[0,40],"content":"Occurs when a form enters resizing mode.","nodes":[{"content":"Occurs when a form enters resizing mode.","pos":[0,40]}]}],"pos":[318123,318164],"yaml":true},{"content":"The <xref:System.Windows.Forms.Form.ResizeBegin> event is raised when the user begins to resize a form, typically by clicking and dragging one of the borders or the sizing grip located on the lower-right corner of the form. This action puts the form into a modal sizing loop until the resize operation is completed. Typically, the following set of events occurs during a resize operation:  \n  \n1.  A single <xref:System.Windows.Forms.Form.ResizeBegin> event occurs as the form enters resizing mode.  \n  \n2.  Zero or more pairs of <xref:System.Windows.Forms.Control.Resize> and <xref:System.Windows.Forms.Control.SizeChanged> events occur as the form's <xref:System.Windows.Forms.Form.Size%2A> is modified.  \n  \n3.  A single <xref:System.Windows.Forms.Form.ResizeEnd> event occurs as the form exits resizing mode.  \n  \n> [!NOTE]\n>  Just clicking without dragging on a border or resizing grip will generate the <xref:System.Windows.Forms.Form.ResizeBegin> and <xref:System.Windows.Forms.Form.ResizeEnd> events without any intermediate <xref:System.Windows.Forms.Control.Resize> and <xref:System.Windows.Forms.Control.SizeChanged> event pairs.  \n  \n The <xref:System.Windows.Forms.Form.ResizeBegin> and <xref:System.Windows.Forms.Form.ResizeEnd> pair of events is also raised when the user moves the form, typically by clicking and dragging on the caption bar. These events are not generated by programmatic manipulation of the form, for example by changing the <xref:System.Windows.Forms.Form.Size%2A> or <xref:System.Windows.Forms.Control.Location%2A> properties.  \n  \n For more information about handling events, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).","nodes":[{"pos":[0,388],"content":"The <xref:System.Windows.Forms.Form.ResizeBegin> event is raised when the user begins to resize a form, typically by clicking and dragging one of the borders or the sizing grip located on the lower-right corner of the form. This action puts the form into a modal sizing loop until the resize operation is completed. Typically, the following set of events occurs during a resize operation:","nodes":[{"content":"The <xref:System.Windows.Forms.Form.ResizeBegin> event is raised when the user begins to resize a form, typically by clicking and dragging one of the borders or the sizing grip located on the lower-right corner of the form. This action puts the form into a modal sizing loop until the resize operation is completed. Typically, the following set of events occurs during a resize operation:","pos":[0,388],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Form.ResizeBegin&gt;</ph> event is raised when the user begins to resize a form, typically by clicking and dragging one of the borders or the sizing grip located on the lower-right corner of the form.","pos":[0,223],"source":"The <xref:System.Windows.Forms.Form.ResizeBegin> event is raised when the user begins to resize a form, typically by clicking and dragging one of the borders or the sizing grip located on the lower-right corner of the form."},{"content":"This action puts the form into a modal sizing loop until the resize operation is completed.","pos":[224,315]},{"content":"Typically, the following set of events occurs during a resize operation:","pos":[316,388]}]}]},{"pos":[398,498],"content":"A single <xref:System.Windows.Forms.Form.ResizeBegin> event occurs as the form enters resizing mode.","nodes":[{"content":"A single <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Form.ResizeBegin&gt;</ph> event occurs as the form enters resizing mode.","pos":[0,100],"source":"A single <xref:System.Windows.Forms.Form.ResizeBegin> event occurs as the form enters resizing mode."}]},{"pos":[508,705],"content":"Zero or more pairs of <xref:System.Windows.Forms.Control.Resize> and <xref:System.Windows.Forms.Control.SizeChanged> events occur as the form's <xref:System.Windows.Forms.Form.Size%2A> is modified.","nodes":[{"content":"Zero or more pairs of <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.Resize&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Control.SizeChanged&gt;</ph> events occur as the form's <ph id=\"ph3\">&lt;xref:System.Windows.Forms.Form.Size%2A&gt;</ph> is modified.","pos":[0,197],"source":"Zero or more pairs of <xref:System.Windows.Forms.Control.Resize> and <xref:System.Windows.Forms.Control.SizeChanged> events occur as the form's <xref:System.Windows.Forms.Form.Size%2A> is modified."}]},{"pos":[715,812],"content":"A single <xref:System.Windows.Forms.Form.ResizeEnd> event occurs as the form exits resizing mode.","nodes":[{"content":"A single <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Form.ResizeEnd&gt;</ph> event occurs as the form exits resizing mode.","pos":[0,97],"source":"A single <xref:System.Windows.Forms.Form.ResizeEnd> event occurs as the form exits resizing mode."}]},{"pos":[820,1140],"content":"[!NOTE]\n Just clicking without dragging on a border or resizing grip will generate the <xref:System.Windows.Forms.Form.ResizeBegin> and <xref:System.Windows.Forms.Form.ResizeEnd> events without any intermediate <xref:System.Windows.Forms.Control.Resize> and <xref:System.Windows.Forms.Control.SizeChanged> event pairs.","leadings":["","> "],"nodes":[{"content":"Just clicking without dragging on a border or resizing grip will generate the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Form.ResizeBegin&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Form.ResizeEnd&gt;</ph> events without any intermediate <ph id=\"ph3\">&lt;xref:System.Windows.Forms.Control.Resize&gt;</ph> and <ph id=\"ph4\">&lt;xref:System.Windows.Forms.Control.SizeChanged&gt;</ph> event pairs.","pos":[9,318],"source":" Just clicking without dragging on a border or resizing grip will generate the <xref:System.Windows.Forms.Form.ResizeBegin> and <xref:System.Windows.Forms.Form.ResizeEnd> events without any intermediate <xref:System.Windows.Forms.Control.Resize> and <xref:System.Windows.Forms.Control.SizeChanged> event pairs."}]},{"pos":[1147,1562],"content":"The <xref:System.Windows.Forms.Form.ResizeBegin> and <xref:System.Windows.Forms.Form.ResizeEnd> pair of events is also raised when the user moves the form, typically by clicking and dragging on the caption bar. These events are not generated by programmatic manipulation of the form, for example by changing the <xref:System.Windows.Forms.Form.Size%2A> or <xref:System.Windows.Forms.Control.Location%2A> properties.","nodes":[{"content":"The <xref:System.Windows.Forms.Form.ResizeBegin> and <xref:System.Windows.Forms.Form.ResizeEnd> pair of events is also raised when the user moves the form, typically by clicking and dragging on the caption bar. These events are not generated by programmatic manipulation of the form, for example by changing the <xref:System.Windows.Forms.Form.Size%2A> or <xref:System.Windows.Forms.Control.Location%2A> properties.","pos":[0,415],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Form.ResizeBegin&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Form.ResizeEnd&gt;</ph> pair of events is also raised when the user moves the form, typically by clicking and dragging on the caption bar.","pos":[0,210],"source":"The <xref:System.Windows.Forms.Form.ResizeBegin> and <xref:System.Windows.Forms.Form.ResizeEnd> pair of events is also raised when the user moves the form, typically by clicking and dragging on the caption bar."},{"content":"These events are not generated by programmatic manipulation of the form, for example by changing the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Form.Size%2A&gt;</ph> or <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Control.Location%2A&gt;</ph> properties.","pos":[211,415],"source":" These events are not generated by programmatic manipulation of the form, for example by changing the <xref:System.Windows.Forms.Form.Size%2A> or <xref:System.Windows.Forms.Control.Location%2A> properties."}]}]},{"pos":[1569,1719],"content":"For more information about handling events, see <bpt id=\"p1\">[</bpt>Handling and Raising Events<ept id=\"p1\">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.","source":"For more information about handling events, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)."}],"pos":[318175,319910],"yaml":true,"extradata":"MT"},{"content":"Occurs when a form exits resizing mode.","nodes":[{"pos":[0,39],"content":"Occurs when a form exits resizing mode.","nodes":[{"content":"Occurs when a form exits resizing mode.","pos":[0,39]}]}],"pos":[322087,322127],"yaml":true},{"content":"The <xref:System.Windows.Forms.Form.ResizeEnd> event is raised when the user finishes resizing a form, typically by dragging one of the borders or the sizing grip located on the lower-right corner of the form, and then releasing it. For more information about the resizing operation, see the <xref:System.Windows.Forms.Form.ResizeBegin> event.  \n  \n The <xref:System.Windows.Forms.Form.ResizeEnd> event is also generated after the user moves a form, typically by clicking and dragging on the caption bar. This event is not generated by programmatic manipulation of the form, for example by changing the <xref:System.Windows.Forms.Form.Size%2A> or <xref:System.Windows.Forms.Control.Location%2A> properties.  \n  \n For more information about handling events, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).","nodes":[{"pos":[0,343],"content":"The <xref:System.Windows.Forms.Form.ResizeEnd> event is raised when the user finishes resizing a form, typically by dragging one of the borders or the sizing grip located on the lower-right corner of the form, and then releasing it. For more information about the resizing operation, see the <xref:System.Windows.Forms.Form.ResizeBegin> event.","nodes":[{"content":"The <xref:System.Windows.Forms.Form.ResizeEnd> event is raised when the user finishes resizing a form, typically by dragging one of the borders or the sizing grip located on the lower-right corner of the form, and then releasing it. For more information about the resizing operation, see the <xref:System.Windows.Forms.Form.ResizeBegin> event.","pos":[0,343],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Form.ResizeEnd&gt;</ph> event is raised when the user finishes resizing a form, typically by dragging one of the borders or the sizing grip located on the lower-right corner of the form, and then releasing it.","pos":[0,232],"source":"The <xref:System.Windows.Forms.Form.ResizeEnd> event is raised when the user finishes resizing a form, typically by dragging one of the borders or the sizing grip located on the lower-right corner of the form, and then releasing it."},{"content":"For more information about the resizing operation, see the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Form.ResizeBegin&gt;</ph> event.","pos":[233,343],"source":" For more information about the resizing operation, see the <xref:System.Windows.Forms.Form.ResizeBegin> event."}]}]},{"pos":[350,706],"content":"The <xref:System.Windows.Forms.Form.ResizeEnd> event is also generated after the user moves a form, typically by clicking and dragging on the caption bar. This event is not generated by programmatic manipulation of the form, for example by changing the <xref:System.Windows.Forms.Form.Size%2A> or <xref:System.Windows.Forms.Control.Location%2A> properties.","nodes":[{"content":"The <xref:System.Windows.Forms.Form.ResizeEnd> event is also generated after the user moves a form, typically by clicking and dragging on the caption bar. This event is not generated by programmatic manipulation of the form, for example by changing the <xref:System.Windows.Forms.Form.Size%2A> or <xref:System.Windows.Forms.Control.Location%2A> properties.","pos":[0,356],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Form.ResizeEnd&gt;</ph> event is also generated after the user moves a form, typically by clicking and dragging on the caption bar.","pos":[0,154],"source":"The <xref:System.Windows.Forms.Form.ResizeEnd> event is also generated after the user moves a form, typically by clicking and dragging on the caption bar."},{"content":"This event is not generated by programmatic manipulation of the form, for example by changing the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Form.Size%2A&gt;</ph> or <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Control.Location%2A&gt;</ph> properties.","pos":[155,356],"source":" This event is not generated by programmatic manipulation of the form, for example by changing the <xref:System.Windows.Forms.Form.Size%2A> or <xref:System.Windows.Forms.Control.Location%2A> properties."}]}]},{"pos":[713,863],"content":"For more information about handling events, see <bpt id=\"p1\">[</bpt>Handling and Raising Events<ept id=\"p1\">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.","source":"For more information about handling events, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)."}],"pos":[322138,323008],"yaml":true,"extradata":"MT"},{"content":"Gets the location and size of the form in its normal window state.","nodes":[{"pos":[0,66],"content":"Gets the location and size of the form in its normal window state.","nodes":[{"content":"Gets the location and size of the form in its normal window state.","pos":[0,66]}]}],"pos":[325206,325273],"yaml":true},{"content":"Typically, you use the <xref:System.Windows.Forms.Form.RestoreBounds%2A> property to track the user's window size and position preferences for the form in its normal window state. You should track both the value of the <xref:System.Windows.Forms.Form.WindowState%2A> and <xref:System.Windows.Forms.Form.RestoreBounds%2A> properties when tracking the user's window preferences.  \n  \n> [!NOTE]\n>  The value of the <xref:System.Windows.Forms.Form.RestoreBounds%2A> property is valid only when the <xref:System.Windows.Forms.Form.WindowState%2A> property of the <xref:System.Windows.Forms.Form> class is not equal to <xref:System.Windows.Forms.FormWindowState.Normal>.","nodes":[{"pos":[0,376],"content":"Typically, you use the <xref:System.Windows.Forms.Form.RestoreBounds%2A> property to track the user's window size and position preferences for the form in its normal window state. You should track both the value of the <xref:System.Windows.Forms.Form.WindowState%2A> and <xref:System.Windows.Forms.Form.RestoreBounds%2A> properties when tracking the user's window preferences.","nodes":[{"content":"Typically, you use the <xref:System.Windows.Forms.Form.RestoreBounds%2A> property to track the user's window size and position preferences for the form in its normal window state. You should track both the value of the <xref:System.Windows.Forms.Form.WindowState%2A> and <xref:System.Windows.Forms.Form.RestoreBounds%2A> properties when tracking the user's window preferences.","pos":[0,376],"nodes":[{"content":"Typically, you use the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Form.RestoreBounds%2A&gt;</ph> property to track the user's window size and position preferences for the form in its normal window state.","pos":[0,179],"source":"Typically, you use the <xref:System.Windows.Forms.Form.RestoreBounds%2A> property to track the user's window size and position preferences for the form in its normal window state."},{"content":"You should track both the value of the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Form.WindowState%2A&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Form.RestoreBounds%2A&gt;</ph> properties when tracking the user's window preferences.","pos":[180,376],"source":" You should track both the value of the <xref:System.Windows.Forms.Form.WindowState%2A> and <xref:System.Windows.Forms.Form.RestoreBounds%2A> properties when tracking the user's window preferences."}]}]},{"pos":[384,664],"content":"[!NOTE]\n The value of the <xref:System.Windows.Forms.Form.RestoreBounds%2A> property is valid only when the <xref:System.Windows.Forms.Form.WindowState%2A> property of the <xref:System.Windows.Forms.Form> class is not equal to <xref:System.Windows.Forms.FormWindowState.Normal>.","leadings":["","> "],"nodes":[{"content":"The value of the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Form.RestoreBounds%2A&gt;</ph> property is valid only when the <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Form.WindowState%2A&gt;</ph> property of the <ph id=\"ph3\">&lt;xref:System.Windows.Forms.Form&gt;</ph> class is not equal to <ph id=\"ph4\">&lt;xref:System.Windows.Forms.FormWindowState.Normal&gt;</ph>.","pos":[9,278],"source":" The value of the <xref:System.Windows.Forms.Form.RestoreBounds%2A> property is valid only when the <xref:System.Windows.Forms.Form.WindowState%2A> property of the <xref:System.Windows.Forms.Form> class is not equal to <xref:System.Windows.Forms.FormWindowState.Normal>."}]}],"pos":[325284,325954],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Drawing.Rectangle\"></xref> that contains the location and size of the form in the normal window state.","nodes":[{"pos":[0,123],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Drawing.Rectangle\"&gt;&lt;/xref&gt;</ph> that contains the location and size of the form in the normal window state.","source":"A <xref href=\"System.Drawing.Rectangle\"></xref> that contains the location and size of the form in the normal window state."}],"pos":[326157,326281],"yaml":true},{"content":"Gets or sets a value indicating whether right-to-left mirror placement is turned on.","nodes":[{"pos":[0,84],"content":"Gets or sets a value indicating whether right-to-left mirror placement is turned on.","nodes":[{"content":"Gets or sets a value indicating whether right-to-left mirror placement is turned on.","pos":[0,84]}]}],"pos":[327332,327417],"yaml":true},{"content":"The <xref:System.Windows.Forms.Form.RightToLeftLayout%2A> property is primarily useful for developing world-ready forms for worldwide audiences. Many forms are designed so that controls are laid out on a form in a left-to-right fashion. These forms are compatible with languages that follow this writing direction. However, when you display the same forms to users of right-to-left languages, it is often preferable to reverse the order of the controls on the form. If both the <xref:System.Windows.Forms.Form.RightToLeftLayout%2A> and <xref:System.Windows.Forms.Control.RightToLeft%2A> properties are `true`, mirroring will be turned on for the form, and control placement and text flow will be right-to-left.  \n  \n Unlike <xref:System.Windows.Forms.Control.RightToLeft%2A>, <xref:System.Windows.Forms.Form.RightToLeftLayout%2A> does not inherit. If you want it to take effect for child controls, you must set it on each child control that you want mirrored.  \n  \n Owner draw is not supported when <xref:System.Windows.Forms.Form.RightToLeftLayout%2A> is set to `Yes`. The owner draw events will still occur, but the behavior of any code you author in these events is not defined. Additionally, <xref:System.Windows.Forms.Control.BackgroundImage%2A>, <xref:System.Windows.Forms.Form.Opacity%2A>, <xref:System.Windows.Forms.Form.TransparencyKey%2A>, and the painting events are not supported.  \n  \n The <xref:System.Windows.Forms.Form.RightToLeftLayout%2A> and <xref:System.Windows.Forms.Control.RightToLeft%2A> properties cause the following Win32 API window styles to be set:  \n  \n-   When <xref:System.Windows.Forms.Control.RightToLeft%2A> is set to `Yes` and <xref:System.Windows.Forms.Form.RightToLeftLayout%2A> is set to `true`, Windows Forms sets the `WS_EX_LAYOUTRTL` window style, and removes the `WS_EX_RIGHT` and `WS_EX_RTLREADING` styles.  \n  \n-   When <xref:System.Windows.Forms.Control.RightToLeft%2A> is set to `Yes` but <xref:System.Windows.Forms.Form.RightToLeftLayout%2A> is set to `No`, Windows Forms sets the `WS_EX_RIGHT` and `WS_EX_RTLREADING` window styles.  \n  \n Changing the value of this property raises the <xref:System.Windows.Forms.Form.RightToLeftLayoutChanged> event.  \n  \n For more information about globalization issues, see [Best Practices for Developing World-Ready Applications](~/docs/standard/globalization-localization/best-practices-for-developing-world-ready-apps.md).","nodes":[{"pos":[0,710],"content":"The <xref:System.Windows.Forms.Form.RightToLeftLayout%2A> property is primarily useful for developing world-ready forms for worldwide audiences. Many forms are designed so that controls are laid out on a form in a left-to-right fashion. These forms are compatible with languages that follow this writing direction. However, when you display the same forms to users of right-to-left languages, it is often preferable to reverse the order of the controls on the form. If both the <xref:System.Windows.Forms.Form.RightToLeftLayout%2A> and <xref:System.Windows.Forms.Control.RightToLeft%2A> properties are `true`, mirroring will be turned on for the form, and control placement and text flow will be right-to-left.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Form.RightToLeftLayout%2A&gt;</ph> property is primarily useful for developing world-ready forms for worldwide audiences.","pos":[0,144],"source":"The <xref:System.Windows.Forms.Form.RightToLeftLayout%2A> property is primarily useful for developing world-ready forms for worldwide audiences."},{"content":"Many forms are designed so that controls are laid out on a form in a left-to-right fashion.","pos":[145,236]},{"content":"These forms are compatible with languages that follow this writing direction.","pos":[237,314]},{"content":"However, when you display the same forms to users of right-to-left languages, it is often preferable to reverse the order of the controls on the form.","pos":[315,465]},{"content":"If both the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Form.RightToLeftLayout%2A&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Control.RightToLeft%2A&gt;</ph> properties are <ph id=\"ph3\">`true`</ph>, mirroring will be turned on for the form, and control placement and text flow will be right-to-left.","pos":[466,710],"source":" If both the <xref:System.Windows.Forms.Form.RightToLeftLayout%2A> and <xref:System.Windows.Forms.Control.RightToLeft%2A> properties are `true`, mirroring will be turned on for the form, and control placement and text flow will be right-to-left."}]},{"pos":[717,959],"content":"Unlike <xref:System.Windows.Forms.Control.RightToLeft%2A>, <xref:System.Windows.Forms.Form.RightToLeftLayout%2A> does not inherit. If you want it to take effect for child controls, you must set it on each child control that you want mirrored.","nodes":[{"content":"Unlike <xref:System.Windows.Forms.Control.RightToLeft%2A>, <xref:System.Windows.Forms.Form.RightToLeftLayout%2A> does not inherit. If you want it to take effect for child controls, you must set it on each child control that you want mirrored.","pos":[0,242],"nodes":[{"content":"Unlike <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.RightToLeft%2A&gt;</ph>, <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Form.RightToLeftLayout%2A&gt;</ph> does not inherit.","pos":[0,130],"source":"Unlike <xref:System.Windows.Forms.Control.RightToLeft%2A>, <xref:System.Windows.Forms.Form.RightToLeftLayout%2A> does not inherit."},{"content":"If you want it to take effect for child controls, you must set it on each child control that you want mirrored.","pos":[131,242]}]}]},{"pos":[966,1392],"content":"Owner draw is not supported when <xref:System.Windows.Forms.Form.RightToLeftLayout%2A> is set to `Yes`. The owner draw events will still occur, but the behavior of any code you author in these events is not defined. Additionally, <xref:System.Windows.Forms.Control.BackgroundImage%2A>, <xref:System.Windows.Forms.Form.Opacity%2A>, <xref:System.Windows.Forms.Form.TransparencyKey%2A>, and the painting events are not supported.","nodes":[{"content":"Owner draw is not supported when <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Form.RightToLeftLayout%2A&gt;</ph> is set to <ph id=\"ph2\">`Yes`</ph>.","pos":[0,103],"source":"Owner draw is not supported when <xref:System.Windows.Forms.Form.RightToLeftLayout%2A> is set to `Yes`."},{"content":"The owner draw events will still occur, but the behavior of any code you author in these events is not defined.","pos":[104,215]},{"content":"Additionally, <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.BackgroundImage%2A&gt;</ph>, <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Form.Opacity%2A&gt;</ph>, <ph id=\"ph3\">&lt;xref:System.Windows.Forms.Form.TransparencyKey%2A&gt;</ph>, and the painting events are not supported.","pos":[216,426],"source":" Additionally, <xref:System.Windows.Forms.Control.BackgroundImage%2A>, <xref:System.Windows.Forms.Form.Opacity%2A>, <xref:System.Windows.Forms.Form.TransparencyKey%2A>, and the painting events are not supported."}]},{"pos":[1399,1577],"content":"The <xref:System.Windows.Forms.Form.RightToLeftLayout%2A> and <xref:System.Windows.Forms.Control.RightToLeft%2A> properties cause the following Win32 API window styles to be set:","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Form.RightToLeftLayout%2A&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Control.RightToLeft%2A&gt;</ph> properties cause the following Win32 API window styles to be set:","pos":[0,178],"source":"The <xref:System.Windows.Forms.Form.RightToLeftLayout%2A> and <xref:System.Windows.Forms.Control.RightToLeft%2A> properties cause the following Win32 API window styles to be set:"}]},{"pos":[1587,1850],"content":"When <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.RightToLeft%2A&gt;</ph> is set to <ph id=\"ph2\">`Yes`</ph> and <ph id=\"ph3\">&lt;xref:System.Windows.Forms.Form.RightToLeftLayout%2A&gt;</ph> is set to <ph id=\"ph4\">`true`</ph>, Windows Forms sets the <ph id=\"ph5\">`WS_EX_LAYOUTRTL`</ph> window style, and removes the <ph id=\"ph6\">`WS_EX_RIGHT`</ph> and <ph id=\"ph7\">`WS_EX_RTLREADING`</ph> styles.","source":"When <xref:System.Windows.Forms.Control.RightToLeft%2A> is set to `Yes` and <xref:System.Windows.Forms.Form.RightToLeftLayout%2A> is set to `true`, Windows Forms sets the `WS_EX_LAYOUTRTL` window style, and removes the `WS_EX_RIGHT` and `WS_EX_RTLREADING` styles."},{"pos":[1860,2080],"content":"When <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.RightToLeft%2A&gt;</ph> is set to <ph id=\"ph2\">`Yes`</ph> but <ph id=\"ph3\">&lt;xref:System.Windows.Forms.Form.RightToLeftLayout%2A&gt;</ph> is set to <ph id=\"ph4\">`No`</ph>, Windows Forms sets the <ph id=\"ph5\">`WS_EX_RIGHT`</ph> and <ph id=\"ph6\">`WS_EX_RTLREADING`</ph> window styles.","source":"When <xref:System.Windows.Forms.Control.RightToLeft%2A> is set to `Yes` but <xref:System.Windows.Forms.Form.RightToLeftLayout%2A> is set to `No`, Windows Forms sets the `WS_EX_RIGHT` and `WS_EX_RTLREADING` window styles."},{"pos":[2087,2198],"content":"Changing the value of this property raises the <xref:System.Windows.Forms.Form.RightToLeftLayoutChanged> event.","nodes":[{"content":"Changing the value of this property raises the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Form.RightToLeftLayoutChanged&gt;</ph> event.","pos":[0,111],"source":"Changing the value of this property raises the <xref:System.Windows.Forms.Form.RightToLeftLayoutChanged> event."}]},{"pos":[2205,2409],"content":"For more information about globalization issues, see <bpt id=\"p1\">[</bpt>Best Practices for Developing World-Ready Applications<ept id=\"p1\">](~/docs/standard/globalization-localization/best-practices-for-developing-world-ready-apps.md)</ept>.","source":"For more information about globalization issues, see [Best Practices for Developing World-Ready Applications](~/docs/standard/globalization-localization/best-practices-for-developing-world-ready-apps.md)."}],"pos":[327428,329854],"yaml":true,"extradata":"MT"},{"content":"`true` if right-to-left mirror placement is turned on; otherwise, `false` for standard child control placement. The default is `false`.","nodes":[{"pos":[0,135],"content":"`true` if right-to-left mirror placement is turned on; otherwise, `false` for standard child control placement. The default is `false`.","nodes":[{"content":"<ph id=\"ph1\">`true`</ph> if right-to-left mirror placement is turned on; otherwise, <ph id=\"ph2\">`false`</ph> for standard child control placement.","pos":[0,111],"source":"`true` if right-to-left mirror placement is turned on; otherwise, `false` for standard child control placement."},{"content":"The default is <ph id=\"ph1\">`false`</ph>.","pos":[112,135],"source":" The default is `false`."}]}],"pos":[329987,330125],"yaml":true},{"content":"Occurs after the value of the <xref href=\"System.Windows.Forms.Form.RightToLeftLayout\"></xref> property changes.","nodes":[{"pos":[0,112],"content":"Occurs after the value of the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.Form.RightToLeftLayout\"&gt;&lt;/xref&gt;</ph> property changes.","source":"Occurs after the value of the <xref href=\"System.Windows.Forms.Form.RightToLeftLayout\"></xref> property changes."}],"pos":[331149,331262],"yaml":true},{"content":"The <xref:System.Windows.Forms.Control.RightToLeft%2A> and <xref:System.Windows.Forms.Form.RightToLeftLayout%2A> properties are typically used in developing World-Ready applications.","nodes":[{"pos":[0,182],"content":"The <xref:System.Windows.Forms.Control.RightToLeft%2A> and <xref:System.Windows.Forms.Form.RightToLeftLayout%2A> properties are typically used in developing World-Ready applications.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.RightToLeft%2A&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Form.RightToLeftLayout%2A&gt;</ph> properties are typically used in developing World-Ready applications.","pos":[0,182],"source":"The <xref:System.Windows.Forms.Control.RightToLeft%2A> and <xref:System.Windows.Forms.Form.RightToLeftLayout%2A> properties are typically used in developing World-Ready applications."}]}],"pos":[331273,331456],"yaml":true,"extradata":"MT"},{"content":"Scales the location, size, padding, and margin of a control.","nodes":[{"pos":[0,60],"content":"Scales the location, size, padding, and margin of a control.","nodes":[{"content":"Scales the location, size, padding, and margin of a control.","pos":[0,60]}]}],"pos":[333918,333979],"yaml":true},{"content":"The factor by which the height and width of the control are scaled.","nodes":[{"pos":[0,67],"content":"The factor by which the height and width of the control are scaled.","nodes":[{"content":"The factor by which the height and width of the control are scaled.","pos":[0,67]}]}],"pos":[334203,334271],"yaml":true},{"content":"A <xref href=\"System.Windows.Forms.BoundsSpecified\"></xref> value that specifies the bounds of the control to use when defining its size and position.","nodes":[{"pos":[0,150],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.BoundsSpecified\"&gt;&lt;/xref&gt;</ph> value that specifies the bounds of the control to use when defining its size and position.","source":"A <xref href=\"System.Windows.Forms.BoundsSpecified\"></xref> value that specifies the bounds of the control to use when defining its size and position."}],"pos":[334359,334510],"yaml":true},{"content":"Performs scaling of the form.","nodes":[{"pos":[0,29],"content":"Performs scaling of the form.","nodes":[{"content":"Performs scaling of the form.","pos":[0,29]}]}],"pos":[335597,335627],"yaml":true},{"content":"Percentage to scale the form horizontally","nodes":[{"pos":[0,41],"content":"Percentage to scale the form horizontally","nodes":[{"content":"Percentage to scale the form horizontally","pos":[0,41]}]}],"pos":[335777,335819],"yaml":true},{"content":"Percentage to scale the form vertically","nodes":[{"pos":[0,39],"content":"Percentage to scale the form vertically","nodes":[{"content":"Percentage to scale the form vertically","pos":[0,39]}]}],"pos":[335876,335916],"yaml":true},{"content":"Selects this form, and optionally selects the next or previous control.","nodes":[{"pos":[0,71],"content":"Selects this form, and optionally selects the next or previous control.","nodes":[{"content":"Selects this form, and optionally selects the next or previous control.","pos":[0,71]}]}],"pos":[336994,337066],"yaml":true},{"content":"If set to true that the active control is changed","nodes":[{"pos":[0,49],"content":"If set to true that the active control is changed","nodes":[{"content":"If set to true that the active control is changed","pos":[0,49]}]}],"pos":[337232,337282],"yaml":true},{"content":"If directed is true, then this controls the direction in which focus is moved. If this is `true`, then the next control is selected; otherwise, the previous control is selected.","nodes":[{"pos":[0,177],"content":"If directed is true, then this controls the direction in which focus is moved. If this is `true`, then the next control is selected; otherwise, the previous control is selected.","nodes":[{"content":"If directed is true, then this controls the direction in which focus is moved.","pos":[0,78]},{"content":"If this is <ph id=\"ph1\">`true`</ph>, then the next control is selected; otherwise, the previous control is selected.","pos":[79,177],"source":" If this is `true`, then the next control is selected; otherwise, the previous control is selected."}]}],"pos":[337346,337524],"yaml":true},{"content":"Performs the work of setting the specified bounds of this control.","nodes":[{"pos":[0,66],"content":"Performs the work of setting the specified bounds of this control.","nodes":[{"content":"Performs the work of setting the specified bounds of this control.","pos":[0,66]}]}],"pos":[338882,338949],"yaml":true},{"content":"The new <xref href=\"System.Windows.Forms.Control.Left\"></xref> property value of the control.","nodes":[{"pos":[0,93],"content":"The new <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.Control.Left\"&gt;&lt;/xref&gt;</ph> property value of the control.","source":"The new <xref href=\"System.Windows.Forms.Control.Left\"></xref> property value of the control."}],"pos":[339169,339263],"yaml":true},{"content":"The new <xref href=\"System.Windows.Forms.Control.Top\"></xref> property value of the control.","nodes":[{"pos":[0,92],"content":"The new <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.Control.Top\"&gt;&lt;/xref&gt;</ph> property value of the control.","source":"The new <xref href=\"System.Windows.Forms.Control.Top\"></xref> property value of the control."}],"pos":[339319,339412],"yaml":true},{"content":"The new <xref href=\"System.Windows.Forms.Control.Width\"></xref> property value of the control.","nodes":[{"pos":[0,94],"content":"The new <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.Control.Width\"&gt;&lt;/xref&gt;</ph> property value of the control.","source":"The new <xref href=\"System.Windows.Forms.Control.Width\"></xref> property value of the control."}],"pos":[339472,339567],"yaml":true},{"content":"The new <xref href=\"System.Windows.Forms.Control.Height\"></xref> property value of the control.","nodes":[{"pos":[0,95],"content":"The new <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.Control.Height\"&gt;&lt;/xref&gt;</ph> property value of the control.","source":"The new <xref href=\"System.Windows.Forms.Control.Height\"></xref> property value of the control."}],"pos":[339628,339724],"yaml":true},{"content":"A bitwise combination of the <xref href=\"System.Windows.Forms.BoundsSpecified\"></xref> values.","nodes":[{"pos":[0,94],"content":"A bitwise combination of the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.BoundsSpecified\"&gt;&lt;/xref&gt;</ph> values.","source":"A bitwise combination of the <xref href=\"System.Windows.Forms.BoundsSpecified\"></xref> values."}],"pos":[339812,339907],"yaml":true},{"content":"Sets the client size of the form. This will adjust the bounds of the form to make the client size the requested size.","nodes":[{"pos":[0,117],"content":"Sets the client size of the form. This will adjust the bounds of the form to make the client size the requested size.","nodes":[{"content":"Sets the client size of the form. This will adjust the bounds of the form to make the client size the requested size.","pos":[0,117],"nodes":[{"content":"Sets the client size of the form.","pos":[0,33]},{"content":"This will adjust the bounds of the form to make the client size the requested size.","pos":[34,117]}]}]}],"pos":[341031,341149],"yaml":true},{"content":"Requested width of the client region.","nodes":[{"pos":[0,37],"content":"Requested width of the client region.","nodes":[{"content":"Requested width of the client region.","pos":[0,37]}]}],"pos":[341302,341340],"yaml":true},{"content":"Requested height of the client region.","nodes":[{"pos":[0,38],"content":"Requested height of the client region.","nodes":[{"content":"Requested height of the client region.","pos":[0,38]}]}],"pos":[341396,341435],"yaml":true},{"content":"Sets the bounds of the form in desktop coordinates.","nodes":[{"pos":[0,51],"content":"Sets the bounds of the form in desktop coordinates.","nodes":[{"content":"Sets the bounds of the form in desktop coordinates.","pos":[0,51]}]}],"pos":[342655,342707],"yaml":true},{"content":"Desktop coordinates are based on the working area of the screen, which excludes the taskbar. You can use this method to set the position and size of your form on the desktop. Since desktop coordinates are based on the working area of the form, you can use this method to ensure that your form is completely visible on the desktop.","nodes":[{"pos":[0,330],"content":"Desktop coordinates are based on the working area of the screen, which excludes the taskbar. You can use this method to set the position and size of your form on the desktop. Since desktop coordinates are based on the working area of the form, you can use this method to ensure that your form is completely visible on the desktop.","nodes":[{"content":"Desktop coordinates are based on the working area of the screen, which excludes the taskbar. You can use this method to set the position and size of your form on the desktop. Since desktop coordinates are based on the working area of the form, you can use this method to ensure that your form is completely visible on the desktop.","pos":[0,330],"nodes":[{"content":"Desktop coordinates are based on the working area of the screen, which excludes the taskbar.","pos":[0,92]},{"content":"You can use this method to set the position and size of your form on the desktop.","pos":[93,174]},{"content":"Since desktop coordinates are based on the working area of the form, you can use this method to ensure that your form is completely visible on the desktop.","pos":[175,330]}]}]}],"pos":[342718,343049],"yaml":true,"extradata":"MT"},{"content":"The x-coordinate of the form's location.","nodes":[{"pos":[0,40],"content":"The x-coordinate of the form's location.","nodes":[{"content":"The x-coordinate of the form's location.","pos":[0,40]}]}],"pos":[343943,343984],"yaml":true},{"content":"The y-coordinate of the form's location.","nodes":[{"pos":[0,40],"content":"The y-coordinate of the form's location.","nodes":[{"content":"The y-coordinate of the form's location.","pos":[0,40]}]}],"pos":[344040,344081],"yaml":true},{"content":"The width of the form.","nodes":[{"pos":[0,22],"content":"The width of the form.","nodes":[{"content":"The width of the form.","pos":[0,22]}]}],"pos":[344141,344164],"yaml":true},{"content":"The height of the form.","nodes":[{"pos":[0,23],"content":"The height of the form.","nodes":[{"content":"The height of the form.","pos":[0,23]}]}],"pos":[344225,344249],"yaml":true},{"content":"Sets the location of the form in desktop coordinates.","nodes":[{"pos":[0,53],"content":"Sets the location of the form in desktop coordinates.","nodes":[{"content":"Sets the location of the form in desktop coordinates.","pos":[0,53]}]}],"pos":[345365,345419],"yaml":true},{"content":"Desktop coordinates are based on the working area of the screen, which excludes the taskbar. You can use this method to position your form on the desktop. Since desktop coordinates are based on the working area of the form, you can use this method to ensure that your form is completely visible on the desktop. This method is intended to be used primarily for top-level forms; use the <xref:System.Windows.Forms.Form.LayoutMdi%2A> method to position multiple-document interface (MDI) child forms.","nodes":[{"pos":[0,496],"content":"Desktop coordinates are based on the working area of the screen, which excludes the taskbar. You can use this method to position your form on the desktop. Since desktop coordinates are based on the working area of the form, you can use this method to ensure that your form is completely visible on the desktop. This method is intended to be used primarily for top-level forms; use the <xref:System.Windows.Forms.Form.LayoutMdi%2A> method to position multiple-document interface (MDI) child forms.","nodes":[{"content":"Desktop coordinates are based on the working area of the screen, which excludes the taskbar. You can use this method to position your form on the desktop. Since desktop coordinates are based on the working area of the form, you can use this method to ensure that your form is completely visible on the desktop. This method is intended to be used primarily for top-level forms; use the <xref:System.Windows.Forms.Form.LayoutMdi%2A> method to position multiple-document interface (MDI) child forms.","pos":[0,496],"nodes":[{"content":"Desktop coordinates are based on the working area of the screen, which excludes the taskbar.","pos":[0,92]},{"content":"You can use this method to position your form on the desktop.","pos":[93,154]},{"content":"Since desktop coordinates are based on the working area of the form, you can use this method to ensure that your form is completely visible on the desktop.","pos":[155,310]},{"content":"This method is intended to be used primarily for top-level forms; use the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Form.LayoutMdi%2A&gt;</ph> method to position multiple-document interface (MDI) child forms.","pos":[311,496],"source":" This method is intended to be used primarily for top-level forms; use the <xref:System.Windows.Forms.Form.LayoutMdi%2A> method to position multiple-document interface (MDI) child forms."}]}]}],"pos":[345430,345927],"yaml":true,"extradata":"MT"},{"content":"The x-coordinate of the form's location.","nodes":[{"pos":[0,40],"content":"The x-coordinate of the form's location.","nodes":[{"content":"The x-coordinate of the form's location.","pos":[0,40]}]}],"pos":[346914,346955],"yaml":true},{"content":"The y-coordinate of the form's location.","nodes":[{"pos":[0,40],"content":"The y-coordinate of the form's location.","nodes":[{"content":"The y-coordinate of the form's location.","pos":[0,40]}]}],"pos":[347011,347052],"yaml":true},{"content":"Sets the control to the specified visible state.","nodes":[{"pos":[0,48],"content":"Sets the control to the specified visible state.","nodes":[{"content":"Sets the control to the specified visible state.","pos":[0,48]}]}],"pos":[348098,348147],"yaml":true},{"content":"`true` to make the control visible; otherwise, `false`.","nodes":[{"pos":[0,55],"content":"<ph id=\"ph1\">`true`</ph> to make the control visible; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` to make the control visible; otherwise, `false`."}],"pos":[348301,348359],"yaml":true},{"content":"Shows the form with the specified owner to the user.","nodes":[{"pos":[0,52],"content":"Shows the form with the specified owner to the user.","nodes":[{"content":"Shows the form with the specified owner to the user.","pos":[0,52]}]}],"pos":[349430,349483],"yaml":true},{"content":"You can use this method to display a non-modal form. When you use this method, the <xref:System.Windows.Forms.Form.Owner%2A> property of the form is set to `owner`. The non-modal form can use the <xref:System.Windows.Forms.Form.Owner%2A> property to get information about the owning form.  Calling this method is identical to setting the <xref:System.Windows.Forms.Form.Owner%2A> property of the non-modal and then calling the <xref:System.Windows.Forms.Control.Show> method.  \n  \n Showing the form is equivalent to setting the <xref:System.Windows.Forms.Control.Visible%2A> property to `true`. After the <xref:System.Windows.Forms.Form.Show%2A> method is called, the <xref:System.Windows.Forms.Control.Visible%2A> property returns a value of `true` until the <xref:System.Windows.Forms.Control.Hide%2A> method is called.","nodes":[{"pos":[0,475],"content":"You can use this method to display a non-modal form. When you use this method, the <xref:System.Windows.Forms.Form.Owner%2A> property of the form is set to `owner`. The non-modal form can use the <xref:System.Windows.Forms.Form.Owner%2A> property to get information about the owning form.  Calling this method is identical to setting the <xref:System.Windows.Forms.Form.Owner%2A> property of the non-modal and then calling the <xref:System.Windows.Forms.Control.Show> method.","nodes":[{"content":"You can use this method to display a non-modal form.","pos":[0,52]},{"content":"When you use this method, the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Form.Owner%2A&gt;</ph> property of the form is set to <ph id=\"ph2\">`owner`</ph>.","pos":[53,164],"source":" When you use this method, the <xref:System.Windows.Forms.Form.Owner%2A> property of the form is set to `owner`."},{"content":"The non-modal form can use the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Form.Owner%2A&gt;</ph> property to get information about the owning form.","pos":[165,288],"source":" The non-modal form can use the <xref:System.Windows.Forms.Form.Owner%2A> property to get information about the owning form."},{"content":"Calling this method is identical to setting the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Form.Owner%2A&gt;</ph> property of the non-modal and then calling the <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Control.Show&gt;</ph> method.","pos":[290,475],"source":"  Calling this method is identical to setting the <xref:System.Windows.Forms.Form.Owner%2A> property of the non-modal and then calling the <xref:System.Windows.Forms.Control.Show> method."}]},{"pos":[482,821],"content":"Showing the form is equivalent to setting the <xref:System.Windows.Forms.Control.Visible%2A> property to `true`. After the <xref:System.Windows.Forms.Form.Show%2A> method is called, the <xref:System.Windows.Forms.Control.Visible%2A> property returns a value of `true` until the <xref:System.Windows.Forms.Control.Hide%2A> method is called.","nodes":[{"content":"Showing the form is equivalent to setting the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.Visible%2A&gt;</ph> property to <ph id=\"ph2\">`true`</ph>.","pos":[0,112],"source":"Showing the form is equivalent to setting the <xref:System.Windows.Forms.Control.Visible%2A> property to `true`."},{"content":"After the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Form.Show%2A&gt;</ph> method is called, the <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Control.Visible%2A&gt;</ph> property returns a value of <ph id=\"ph3\">`true`</ph> until the <ph id=\"ph4\">&lt;xref:System.Windows.Forms.Control.Hide%2A&gt;</ph> method is called.","pos":[113,339],"source":" After the <xref:System.Windows.Forms.Form.Show%2A> method is called, the <xref:System.Windows.Forms.Control.Visible%2A> property returns a value of `true` until the <xref:System.Windows.Forms.Control.Hide%2A> method is called."}]}],"pos":[349494,350320],"yaml":true,"extradata":"MT"},{"content":"Any object that implements <xref href=\"System.Windows.Forms.IWin32Window\"></xref> and represents the top-level window that will own this form.","nodes":[{"pos":[0,142],"content":"Any object that implements <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.IWin32Window\"&gt;&lt;/xref&gt;</ph> and represents the top-level window that will own this form.","source":"Any object that implements <xref href=\"System.Windows.Forms.IWin32Window\"></xref> and represents the top-level window that will own this form."}],"pos":[350500,350643],"yaml":true},{"content":"The form being shown is already visible.  \n  \n -or-  \n  \n The form specified in the <code>owner</code> parameter is the same as the form being shown.  \n  \n -or-  \n  \n The form being shown is disabled.  \n  \n -or-  \n  \n The form being shown is not a top-level window.  \n  \n -or-  \n  \n The form being shown as a dialog box is already a modal form.  \n  \n -or-  \n  \n The current process is not running in user interactive mode (for more information, see <xref href=\"System.Windows.Forms.SystemInformation.UserInteractive\"></xref>).","nodes":[{"pos":[0,40],"content":"The form being shown is already visible.","nodes":[{"content":"The form being shown is already visible.","pos":[0,40]}]},{"pos":[47,51],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[58,149],"content":"The form specified in the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">owner</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is the same as the form being shown.","source":"The form specified in the <code>owner</code> parameter is the same as the form being shown."},{"pos":[156,160],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[167,200],"content":"The form being shown is disabled.","nodes":[{"content":"The form being shown is disabled.","pos":[0,33]}]},{"pos":[207,211],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[218,265],"content":"The form being shown is not a top-level window.","nodes":[{"content":"The form being shown is not a top-level window.","pos":[0,47]}]},{"pos":[272,276],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[283,344],"content":"The form being shown as a dialog box is already a modal form.","nodes":[{"content":"The form being shown as a dialog box is already a modal form.","pos":[0,61]}]},{"pos":[351,355],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[362,526],"content":"The current process is not running in user interactive mode (for more information, see <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.SystemInformation.UserInteractive\"&gt;&lt;/xref&gt;</ph>).","source":"The current process is not running in user interactive mode (for more information, see <xref href=\"System.Windows.Forms.SystemInformation.UserInteractive\"></xref>)."}],"pos":[350811,351362],"yaml":true},{"content":"Shows the form as a modal dialog box.","nodes":[{"pos":[0,37],"content":"Shows the form as a modal dialog box.","nodes":[{"content":"Shows the form as a modal dialog box.","pos":[0,37]}]}],"pos":[352240,352278],"yaml":true},{"content":"You can use this method to display a modal dialog box in your application. When this method is called, the code following it is not executed until after the dialog box is closed. The dialog box can be assigned one of the values of the <xref:System.Windows.Forms.DialogResult> enumeration by assigning it to the <xref:System.Windows.Forms.Button.DialogResult%2A> property of a <xref:System.Windows.Forms.Button> on the form or by setting the <xref:System.Windows.Forms.Form.DialogResult%2A> property of the form in code. This value is then returned by this method. You can use this return value to determine how to process the actions that occurred in the dialog box. For example, if the dialog box was closed and returned the `DialogResult.Cancel` value through this method, you could prevent code following the call to <xref:System.Windows.Forms.Form.ShowDialog%2A> from executing.  \n  \n When a form is displayed as a modal dialog box, clicking the **Close** button (the button with an X at the upper-right corner of the form) causes the form to be hidden and the <xref:System.Windows.Forms.Form.DialogResult%2A> property to be set to `DialogResult.Cancel`. Unlike non-modal forms, the <xref:System.Windows.Forms.Form.Close%2A> method is not called by the .NET Framework when the user clicks the close form button of a dialog box or sets the value of the <xref:System.Windows.Forms.Form.DialogResult%2A> property. Instead the form is hidden and can be shown again without creating a new instance of the dialog box. Because a form displayed as a dialog box is hidden instead of closed, you must call the <xref:System.Windows.Forms.Control.Dispose%2A> method of the form when the form is no longer needed by your application.  \n  \n This version of the <xref:System.Windows.Forms.Form.ShowDialog%2A> method does not specify a form or control as its owner. When this version is called, the currently active window is made the owner of the dialog box. If you want to specify a specific owner, use the other version of this method.","nodes":[{"pos":[0,882],"content":"You can use this method to display a modal dialog box in your application. When this method is called, the code following it is not executed until after the dialog box is closed. The dialog box can be assigned one of the values of the <xref:System.Windows.Forms.DialogResult> enumeration by assigning it to the <xref:System.Windows.Forms.Button.DialogResult%2A> property of a <xref:System.Windows.Forms.Button> on the form or by setting the <xref:System.Windows.Forms.Form.DialogResult%2A> property of the form in code. This value is then returned by this method. You can use this return value to determine how to process the actions that occurred in the dialog box. For example, if the dialog box was closed and returned the `DialogResult.Cancel` value through this method, you could prevent code following the call to <xref:System.Windows.Forms.Form.ShowDialog%2A> from executing.","nodes":[{"content":"You can use this method to display a modal dialog box in your application.","pos":[0,74]},{"content":"When this method is called, the code following it is not executed until after the dialog box is closed.","pos":[75,178]},{"content":"The dialog box can be assigned one of the values of the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.DialogResult&gt;</ph> enumeration by assigning it to the <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Button.DialogResult%2A&gt;</ph> property of a <ph id=\"ph3\">&lt;xref:System.Windows.Forms.Button&gt;</ph> on the form or by setting the <ph id=\"ph4\">&lt;xref:System.Windows.Forms.Form.DialogResult%2A&gt;</ph> property of the form in code.","pos":[179,519],"source":" The dialog box can be assigned one of the values of the <xref:System.Windows.Forms.DialogResult> enumeration by assigning it to the <xref:System.Windows.Forms.Button.DialogResult%2A> property of a <xref:System.Windows.Forms.Button> on the form or by setting the <xref:System.Windows.Forms.Form.DialogResult%2A> property of the form in code."},{"content":"This value is then returned by this method.","pos":[520,563]},{"content":"You can use this return value to determine how to process the actions that occurred in the dialog box.","pos":[564,666]},{"content":"For example, if the dialog box was closed and returned the <ph id=\"ph1\">`DialogResult.Cancel`</ph> value through this method, you could prevent code following the call to <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Form.ShowDialog%2A&gt;</ph> from executing.","pos":[667,882],"source":" For example, if the dialog box was closed and returned the `DialogResult.Cancel` value through this method, you could prevent code following the call to <xref:System.Windows.Forms.Form.ShowDialog%2A> from executing."}]},{"pos":[889,1724],"content":"When a form is displayed as a modal dialog box, clicking the **Close** button (the button with an X at the upper-right corner of the form) causes the form to be hidden and the <xref:System.Windows.Forms.Form.DialogResult%2A> property to be set to `DialogResult.Cancel`. Unlike non-modal forms, the <xref:System.Windows.Forms.Form.Close%2A> method is not called by the .NET Framework when the user clicks the close form button of a dialog box or sets the value of the <xref:System.Windows.Forms.Form.DialogResult%2A> property. Instead the form is hidden and can be shown again without creating a new instance of the dialog box. Because a form displayed as a dialog box is hidden instead of closed, you must call the <xref:System.Windows.Forms.Control.Dispose%2A> method of the form when the form is no longer needed by your application.","nodes":[{"content":"When a form is displayed as a modal dialog box, clicking the <bpt id=\"p1\">**</bpt>Close<ept id=\"p1\">**</ept> button (the button with an X at the upper-right corner of the form) causes the form to be hidden and the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Form.DialogResult%2A&gt;</ph> property to be set to <ph id=\"ph2\">`DialogResult.Cancel`</ph>.","pos":[0,269],"source":"When a form is displayed as a modal dialog box, clicking the **Close** button (the button with an X at the upper-right corner of the form) causes the form to be hidden and the <xref:System.Windows.Forms.Form.DialogResult%2A> property to be set to `DialogResult.Cancel`."},{"content":"Unlike non-modal forms, the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Form.Close%2A&gt;</ph> method is not called by the .NET Framework when the user clicks the close form button of a dialog box or sets the value of the <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Form.DialogResult%2A&gt;</ph> property.","pos":[270,525],"source":" Unlike non-modal forms, the <xref:System.Windows.Forms.Form.Close%2A> method is not called by the .NET Framework when the user clicks the close form button of a dialog box or sets the value of the <xref:System.Windows.Forms.Form.DialogResult%2A> property."},{"content":"Instead the form is hidden and can be shown again without creating a new instance of the dialog box.","pos":[526,626]},{"content":"Because a form displayed as a dialog box is hidden instead of closed, you must call the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.Dispose%2A&gt;</ph> method of the form when the form is no longer needed by your application.","pos":[627,835],"source":" Because a form displayed as a dialog box is hidden instead of closed, you must call the <xref:System.Windows.Forms.Control.Dispose%2A> method of the form when the form is no longer needed by your application."}]},{"pos":[1731,2026],"content":"This version of the <xref:System.Windows.Forms.Form.ShowDialog%2A> method does not specify a form or control as its owner. When this version is called, the currently active window is made the owner of the dialog box. If you want to specify a specific owner, use the other version of this method.","nodes":[{"content":"This version of the <xref:System.Windows.Forms.Form.ShowDialog%2A> method does not specify a form or control as its owner. When this version is called, the currently active window is made the owner of the dialog box. If you want to specify a specific owner, use the other version of this method.","pos":[0,295],"nodes":[{"content":"This version of the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Form.ShowDialog%2A&gt;</ph> method does not specify a form or control as its owner.","pos":[0,122],"source":"This version of the <xref:System.Windows.Forms.Form.ShowDialog%2A> method does not specify a form or control as its owner."},{"content":"When this version is called, the currently active window is made the owner of the dialog box.","pos":[123,216]},{"content":"If you want to specify a specific owner, use the other version of this method.","pos":[217,295]}]}]}],"pos":[352289,354322],"yaml":true,"extradata":"MT"},{"content":"One of the <xref href=\"System.Windows.Forms.DialogResult\"></xref> values.","nodes":[{"pos":[0,73],"content":"One of the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.DialogResult\"&gt;&lt;/xref&gt;</ph> values.","source":"One of the <xref href=\"System.Windows.Forms.DialogResult\"></xref> values."}],"pos":[355680,355754],"yaml":true},{"content":"The form being shown is already visible.  \n  \n -or-  \n  \n The form being shown is disabled.  \n  \n -or-  \n  \n The form being shown is not a top-level window.  \n  \n -or-  \n  \n The form being shown as a dialog box is already a modal form.  \n  \n -or-  \n  \n The current process is not running in user interactive mode (for more information, see <xref href=\"System.Windows.Forms.SystemInformation.UserInteractive\"></xref>).","nodes":[{"pos":[0,40],"content":"The form being shown is already visible.","nodes":[{"content":"The form being shown is already visible.","pos":[0,40]}]},{"pos":[47,51],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[58,91],"content":"The form being shown is disabled.","nodes":[{"content":"The form being shown is disabled.","pos":[0,33]}]},{"pos":[98,102],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[109,156],"content":"The form being shown is not a top-level window.","nodes":[{"content":"The form being shown is not a top-level window.","pos":[0,47]}]},{"pos":[163,167],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[174,235],"content":"The form being shown as a dialog box is already a modal form.","nodes":[{"content":"The form being shown as a dialog box is already a modal form.","pos":[0,61]}]},{"pos":[242,246],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[253,417],"content":"The current process is not running in user interactive mode (for more information, see <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.SystemInformation.UserInteractive\"&gt;&lt;/xref&gt;</ph>).","source":"The current process is not running in user interactive mode (for more information, see <xref href=\"System.Windows.Forms.SystemInformation.UserInteractive\"></xref>)."}],"pos":[355928,356366],"yaml":true},{"content":"Shows the form as a modal dialog box with the specified owner.","nodes":[{"pos":[0,62],"content":"Shows the form as a modal dialog box with the specified owner.","nodes":[{"content":"Shows the form as a modal dialog box with the specified owner.","pos":[0,62]}]}],"pos":[357385,357448],"yaml":true},{"content":"You can use this method to display a modal dialog box in your application. When this method is called, the code following it is not executed until after the dialog box is closed. The dialog box can be assigned one of the values of <xref:System.Windows.Forms.DialogResult> by assigning it to the <xref:System.Windows.Forms.Button.DialogResult%2A> property of a <xref:System.Windows.Forms.Button> on the form or by setting the <xref:System.Windows.Forms.Form.DialogResult%2A> property of the form in code. This value is then returned by this method. You can use this return value to determine how to process the actions that occurred in the dialog box. For example, if the dialog box was closed and returned the `DialogResult.Cancel` value through this method, you could prevent code following the call to <xref:System.Windows.Forms.Form.ShowDialog%2A> from executing.  \n  \n When a form is displayed as a modal dialog box, clicking the **Close** button (the button with an X at the upper-right corner of the form) causes the form to be hidden and the <xref:System.Windows.Forms.Form.DialogResult%2A> property to be set to `DialogResult.Cancel`. Unlike modeless forms, the <xref:System.Windows.Forms.Form.Close%2A> method is not called by the .NET Framework when the user clicks the close form button of a dialog box or sets the value of the <xref:System.Windows.Forms.Form.DialogResult%2A> property. Instead the form is hidden and can be shown again without creating a new instance of the dialog box. Because a form displayed as a dialog box is hidden instead of closed, you must call the <xref:System.Windows.Forms.Control.Dispose%2A> method of the form when the form is no longer needed by your application.  \n  \n This version of the <xref:System.Windows.Forms.Form.ShowDialog%2A> method allows you to specify a specific form that will own the dialog box that is shown.","nodes":[{"pos":[0,866],"content":"You can use this method to display a modal dialog box in your application. When this method is called, the code following it is not executed until after the dialog box is closed. The dialog box can be assigned one of the values of <xref:System.Windows.Forms.DialogResult> by assigning it to the <xref:System.Windows.Forms.Button.DialogResult%2A> property of a <xref:System.Windows.Forms.Button> on the form or by setting the <xref:System.Windows.Forms.Form.DialogResult%2A> property of the form in code. This value is then returned by this method. You can use this return value to determine how to process the actions that occurred in the dialog box. For example, if the dialog box was closed and returned the `DialogResult.Cancel` value through this method, you could prevent code following the call to <xref:System.Windows.Forms.Form.ShowDialog%2A> from executing.","nodes":[{"content":"You can use this method to display a modal dialog box in your application.","pos":[0,74]},{"content":"When this method is called, the code following it is not executed until after the dialog box is closed.","pos":[75,178]},{"content":"The dialog box can be assigned one of the values of <ph id=\"ph1\">&lt;xref:System.Windows.Forms.DialogResult&gt;</ph> by assigning it to the <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Button.DialogResult%2A&gt;</ph> property of a <ph id=\"ph3\">&lt;xref:System.Windows.Forms.Button&gt;</ph> on the form or by setting the <ph id=\"ph4\">&lt;xref:System.Windows.Forms.Form.DialogResult%2A&gt;</ph> property of the form in code.","pos":[179,503],"source":" The dialog box can be assigned one of the values of <xref:System.Windows.Forms.DialogResult> by assigning it to the <xref:System.Windows.Forms.Button.DialogResult%2A> property of a <xref:System.Windows.Forms.Button> on the form or by setting the <xref:System.Windows.Forms.Form.DialogResult%2A> property of the form in code."},{"content":"This value is then returned by this method.","pos":[504,547]},{"content":"You can use this return value to determine how to process the actions that occurred in the dialog box.","pos":[548,650]},{"content":"For example, if the dialog box was closed and returned the <ph id=\"ph1\">`DialogResult.Cancel`</ph> value through this method, you could prevent code following the call to <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Form.ShowDialog%2A&gt;</ph> from executing.","pos":[651,866],"source":" For example, if the dialog box was closed and returned the `DialogResult.Cancel` value through this method, you could prevent code following the call to <xref:System.Windows.Forms.Form.ShowDialog%2A> from executing."}]},{"pos":[873,1707],"content":"When a form is displayed as a modal dialog box, clicking the **Close** button (the button with an X at the upper-right corner of the form) causes the form to be hidden and the <xref:System.Windows.Forms.Form.DialogResult%2A> property to be set to `DialogResult.Cancel`. Unlike modeless forms, the <xref:System.Windows.Forms.Form.Close%2A> method is not called by the .NET Framework when the user clicks the close form button of a dialog box or sets the value of the <xref:System.Windows.Forms.Form.DialogResult%2A> property. Instead the form is hidden and can be shown again without creating a new instance of the dialog box. Because a form displayed as a dialog box is hidden instead of closed, you must call the <xref:System.Windows.Forms.Control.Dispose%2A> method of the form when the form is no longer needed by your application.","nodes":[{"content":"When a form is displayed as a modal dialog box, clicking the <bpt id=\"p1\">**</bpt>Close<ept id=\"p1\">**</ept> button (the button with an X at the upper-right corner of the form) causes the form to be hidden and the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Form.DialogResult%2A&gt;</ph> property to be set to <ph id=\"ph2\">`DialogResult.Cancel`</ph>.","pos":[0,269],"source":"When a form is displayed as a modal dialog box, clicking the **Close** button (the button with an X at the upper-right corner of the form) causes the form to be hidden and the <xref:System.Windows.Forms.Form.DialogResult%2A> property to be set to `DialogResult.Cancel`."},{"content":"Unlike modeless forms, the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Form.Close%2A&gt;</ph> method is not called by the .NET Framework when the user clicks the close form button of a dialog box or sets the value of the <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Form.DialogResult%2A&gt;</ph> property.","pos":[270,524],"source":" Unlike modeless forms, the <xref:System.Windows.Forms.Form.Close%2A> method is not called by the .NET Framework when the user clicks the close form button of a dialog box or sets the value of the <xref:System.Windows.Forms.Form.DialogResult%2A> property."},{"content":"Instead the form is hidden and can be shown again without creating a new instance of the dialog box.","pos":[525,625]},{"content":"Because a form displayed as a dialog box is hidden instead of closed, you must call the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.Dispose%2A&gt;</ph> method of the form when the form is no longer needed by your application.","pos":[626,834],"source":" Because a form displayed as a dialog box is hidden instead of closed, you must call the <xref:System.Windows.Forms.Control.Dispose%2A> method of the form when the form is no longer needed by your application."}]},{"pos":[1714,1869],"content":"This version of the <xref:System.Windows.Forms.Form.ShowDialog%2A> method allows you to specify a specific form that will own the dialog box that is shown.","nodes":[{"content":"This version of the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Form.ShowDialog%2A&gt;</ph> method allows you to specify a specific form that will own the dialog box that is shown.","pos":[0,155],"source":"This version of the <xref:System.Windows.Forms.Form.ShowDialog%2A> method allows you to specify a specific form that will own the dialog box that is shown."}]}],"pos":[357459,359335],"yaml":true,"extradata":"MT"},{"content":"Any object that implements <xref href=\"System.Windows.Forms.IWin32Window\"></xref> that represents the top-level window that will own the modal dialog box.","nodes":[{"pos":[0,154],"content":"Any object that implements <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.IWin32Window\"&gt;&lt;/xref&gt;</ph> that represents the top-level window that will own the modal dialog box.","source":"Any object that implements <xref href=\"System.Windows.Forms.IWin32Window\"></xref> that represents the top-level window that will own the modal dialog box."}],"pos":[360538,360693],"yaml":true},{"content":"One of the <xref href=\"System.Windows.Forms.DialogResult\"></xref> values.","nodes":[{"pos":[0,73],"content":"One of the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.DialogResult\"&gt;&lt;/xref&gt;</ph> values.","source":"One of the <xref href=\"System.Windows.Forms.DialogResult\"></xref> values."}],"pos":[360770,360844],"yaml":true},{"content":"The form specified in the <code>owner</code> parameter is the same as the form being shown.","nodes":[{"pos":[0,91],"content":"The form specified in the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">owner</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is the same as the form being shown.","source":"The form specified in the <code>owner</code> parameter is the same as the form being shown."}],"pos":[361002,361094],"yaml":true},{"content":"The form being shown is already visible.  \n  \n -or-  \n  \n The form being shown is disabled.  \n  \n -or-  \n  \n The form being shown is not a top-level window.  \n  \n -or-  \n  \n The form being shown as a dialog box is already a modal form.  \n  \n -or-  \n  \n The current process is not running in user interactive mode (for more information, see <xref href=\"System.Windows.Forms.SystemInformation.UserInteractive\"></xref>).","nodes":[{"pos":[0,40],"content":"The form being shown is already visible.","nodes":[{"content":"The form being shown is already visible.","pos":[0,40]}]},{"pos":[47,51],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[58,91],"content":"The form being shown is disabled.","nodes":[{"content":"The form being shown is disabled.","pos":[0,33]}]},{"pos":[98,102],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[109,156],"content":"The form being shown is not a top-level window.","nodes":[{"content":"The form being shown is not a top-level window.","pos":[0,47]}]},{"pos":[163,167],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[174,235],"content":"The form being shown as a dialog box is already a modal form.","nodes":[{"content":"The form being shown as a dialog box is already a modal form.","pos":[0,61]}]},{"pos":[242,246],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[253,417],"content":"The current process is not running in user interactive mode (for more information, see <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.SystemInformation.UserInteractive\"&gt;&lt;/xref&gt;</ph>).","source":"The current process is not running in user interactive mode (for more information, see <xref href=\"System.Windows.Forms.SystemInformation.UserInteractive\"></xref>)."}],"pos":[361204,361642],"yaml":true},{"content":"Gets or sets a value indicating whether an icon is displayed in the caption bar of the form.","nodes":[{"pos":[0,92],"content":"Gets or sets a value indicating whether an icon is displayed in the caption bar of the form.","nodes":[{"content":"Gets or sets a value indicating whether an icon is displayed in the caption bar of the form.","pos":[0,92]}]}],"pos":[362504,362597],"yaml":true},{"content":"The <xref:System.Windows.Forms.Form.ShowIcon%2A> property contains a <xref:System.Boolean> value that indicates whether the form's <xref:System.Windows.Forms.Form.Icon%2A> is displayed in the caption bar of the form. If the <xref:System.Windows.Forms.Form.ControlBox%2A> property is `false`, both the icon and control box will be suppressed.  \n  \n If <xref:System.Windows.Forms.Form.ShowIcon%2A> is `false` when the primary form is shown, a generic icon will be displayed in the taskbar button for the application.  \n  \n This property has no effect if <xref:System.Windows.Forms.Form.FormBorderStyle%2A> is set to <xref:System.Windows.Forms.FormBorderStyle.FixedDialog>. In that case, the form does not display an icon.","nodes":[{"pos":[0,341],"content":"The <xref:System.Windows.Forms.Form.ShowIcon%2A> property contains a <xref:System.Boolean> value that indicates whether the form's <xref:System.Windows.Forms.Form.Icon%2A> is displayed in the caption bar of the form. If the <xref:System.Windows.Forms.Form.ControlBox%2A> property is `false`, both the icon and control box will be suppressed.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Form.ShowIcon%2A&gt;</ph> property contains a <ph id=\"ph2\">&lt;xref:System.Boolean&gt;</ph> value that indicates whether the form's <ph id=\"ph3\">&lt;xref:System.Windows.Forms.Form.Icon%2A&gt;</ph> is displayed in the caption bar of the form.","pos":[0,216],"source":"The <xref:System.Windows.Forms.Form.ShowIcon%2A> property contains a <xref:System.Boolean> value that indicates whether the form's <xref:System.Windows.Forms.Form.Icon%2A> is displayed in the caption bar of the form."},{"content":"If the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Form.ControlBox%2A&gt;</ph> property is <ph id=\"ph2\">`false`</ph>, both the icon and control box will be suppressed.","pos":[217,341],"source":" If the <xref:System.Windows.Forms.Form.ControlBox%2A> property is `false`, both the icon and control box will be suppressed."}]},{"pos":[348,514],"content":"If <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Form.ShowIcon%2A&gt;</ph> is <ph id=\"ph2\">`false`</ph> when the primary form is shown, a generic icon will be displayed in the taskbar button for the application.","source":"If <xref:System.Windows.Forms.Form.ShowIcon%2A> is `false` when the primary form is shown, a generic icon will be displayed in the taskbar button for the application."},{"pos":[521,719],"content":"This property has no effect if <xref:System.Windows.Forms.Form.FormBorderStyle%2A> is set to <xref:System.Windows.Forms.FormBorderStyle.FixedDialog>. In that case, the form does not display an icon.","nodes":[{"content":"This property has no effect if <xref:System.Windows.Forms.Form.FormBorderStyle%2A> is set to <xref:System.Windows.Forms.FormBorderStyle.FixedDialog>. In that case, the form does not display an icon.","pos":[0,198],"nodes":[{"content":"This property has no effect if <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Form.FormBorderStyle%2A&gt;</ph> is set to <ph id=\"ph2\">&lt;xref:System.Windows.Forms.FormBorderStyle.FixedDialog&gt;</ph>.","pos":[0,149],"source":"This property has no effect if <xref:System.Windows.Forms.Form.FormBorderStyle%2A> is set to <xref:System.Windows.Forms.FormBorderStyle.FixedDialog>."},{"content":"In that case, the form does not display an icon.","pos":[150,198]}]}]}],"pos":[362608,363334],"yaml":true,"extradata":"MT"},{"content":"`true` if the form displays an icon in the caption bar; otherwise, `false`. The default is `true`.","nodes":[{"pos":[0,98],"content":"`true` if the form displays an icon in the caption bar; otherwise, `false`. The default is `true`.","nodes":[{"content":"<ph id=\"ph1\">`true`</ph> if the form displays an icon in the caption bar; otherwise, <ph id=\"ph2\">`false`</ph>.","pos":[0,75],"source":"`true` if the form displays an icon in the caption bar; otherwise, `false`."},{"content":"The default is <ph id=\"ph1\">`true`</ph>.","pos":[76,98],"source":" The default is `true`."}]}],"pos":[363450,363551],"yaml":true},{"content":"Gets or sets a value indicating whether the form is displayed in the Windows taskbar.","nodes":[{"pos":[0,85],"content":"Gets or sets a value indicating whether the form is displayed in the Windows taskbar.","nodes":[{"content":"Gets or sets a value indicating whether the form is displayed in the Windows taskbar.","pos":[0,85]}]}],"pos":[364525,364611],"yaml":true},{"content":"If a form is parented within another form, the parented form is not displayed in the Windows taskbar.  \n  \n You can use this property to prevent users from selecting your form through the Windows taskbar. For example, if you display a Find and Replace tool window in your application, you might want to prevent that window from being selected through the Windows taskbar because you would need both the application's main window and the Find and Replace tool window displayed in order to process searches appropriately.  \n  \n You will often wish to use this property when creating a form with the <xref:System.Windows.Forms.FormBorderStyle.FixedToolWindow> style. Setting the <xref:System.Windows.Forms.FormBorderStyle.FixedToolWindow> style does not alone guarantee that a window will not appear in the taskbar.","nodes":[{"pos":[0,101],"content":"If a form is parented within another form, the parented form is not displayed in the Windows taskbar.","nodes":[{"content":"If a form is parented within another form, the parented form is not displayed in the Windows taskbar.","pos":[0,101]}]},{"pos":[108,519],"content":"You can use this property to prevent users from selecting your form through the Windows taskbar. For example, if you display a Find and Replace tool window in your application, you might want to prevent that window from being selected through the Windows taskbar because you would need both the application's main window and the Find and Replace tool window displayed in order to process searches appropriately.","nodes":[{"content":"You can use this property to prevent users from selecting your form through the Windows taskbar. For example, if you display a Find and Replace tool window in your application, you might want to prevent that window from being selected through the Windows taskbar because you would need both the application's main window and the Find and Replace tool window displayed in order to process searches appropriately.","pos":[0,411],"nodes":[{"content":"You can use this property to prevent users from selecting your form through the Windows taskbar.","pos":[0,96]},{"content":"For example, if you display a Find and Replace tool window in your application, you might want to prevent that window from being selected through the Windows taskbar because you would need both the application's main window and the Find and Replace tool window displayed in order to process searches appropriately.","pos":[97,411]}]}]},{"pos":[526,812],"content":"You will often wish to use this property when creating a form with the <xref:System.Windows.Forms.FormBorderStyle.FixedToolWindow> style. Setting the <xref:System.Windows.Forms.FormBorderStyle.FixedToolWindow> style does not alone guarantee that a window will not appear in the taskbar.","nodes":[{"content":"You will often wish to use this property when creating a form with the <xref:System.Windows.Forms.FormBorderStyle.FixedToolWindow> style. Setting the <xref:System.Windows.Forms.FormBorderStyle.FixedToolWindow> style does not alone guarantee that a window will not appear in the taskbar.","pos":[0,286],"nodes":[{"content":"You will often wish to use this property when creating a form with the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.FormBorderStyle.FixedToolWindow&gt;</ph> style.","pos":[0,137],"source":"You will often wish to use this property when creating a form with the <xref:System.Windows.Forms.FormBorderStyle.FixedToolWindow> style."},{"content":"Setting the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.FormBorderStyle.FixedToolWindow&gt;</ph> style does not alone guarantee that a window will not appear in the taskbar.","pos":[138,286],"source":" Setting the <xref:System.Windows.Forms.FormBorderStyle.FixedToolWindow> style does not alone guarantee that a window will not appear in the taskbar."}]}]}],"pos":[364622,365441],"yaml":true,"extradata":"MT"},{"content":"`true` to display the form in the Windows taskbar at run time; otherwise, `false`. The default is `true`.","nodes":[{"pos":[0,105],"content":"`true` to display the form in the Windows taskbar at run time; otherwise, `false`. The default is `true`.","nodes":[{"content":"<ph id=\"ph1\">`true`</ph> to display the form in the Windows taskbar at run time; otherwise, <ph id=\"ph2\">`false`</ph>.","pos":[0,82],"source":"`true` to display the form in the Windows taskbar at run time; otherwise, `false`."},{"content":"The default is <ph id=\"ph1\">`true`</ph>.","pos":[83,105],"source":" The default is `true`."}]}],"pos":[366123,366231],"yaml":true},{"content":"Occurs whenever the form is first displayed.","nodes":[{"pos":[0,44],"content":"Occurs whenever the form is first displayed.","nodes":[{"content":"Occurs whenever the form is first displayed.","pos":[0,44]}]}],"pos":[367159,367204],"yaml":true},{"content":"The <xref:System.Windows.Forms.Form.Shown> event is only raised the first time a form is displayed; subsequently minimizing, maximizing, restoring, hiding, showing, or invalidating and repainting will not raise this event. For more information about the order of events of a form, see [Order of Events in Windows Forms](~/docs/framework/winforms/order-of-events-in-windows-forms.md).  \n  \n For more information about handling events, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).","nodes":[{"pos":[0,383],"content":"The <xref:System.Windows.Forms.Form.Shown> event is only raised the first time a form is displayed; subsequently minimizing, maximizing, restoring, hiding, showing, or invalidating and repainting will not raise this event. For more information about the order of events of a form, see [Order of Events in Windows Forms](~/docs/framework/winforms/order-of-events-in-windows-forms.md).","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Form.Shown&gt;</ph> event is only raised the first time a form is displayed; subsequently minimizing, maximizing, restoring, hiding, showing, or invalidating and repainting will not raise this event.","pos":[0,222],"source":"The <xref:System.Windows.Forms.Form.Shown> event is only raised the first time a form is displayed; subsequently minimizing, maximizing, restoring, hiding, showing, or invalidating and repainting will not raise this event."},{"content":"For more information about the order of events of a form, see <bpt id=\"p1\">[</bpt>Order of Events in Windows Forms<ept id=\"p1\">](~/docs/framework/winforms/order-of-events-in-windows-forms.md)</ept>.","pos":[223,383],"source":" For more information about the order of events of a form, see [Order of Events in Windows Forms](~/docs/framework/winforms/order-of-events-in-windows-forms.md)."}]},{"pos":[390,540],"content":"For more information about handling events, see <bpt id=\"p1\">[</bpt>Handling and Raising Events<ept id=\"p1\">](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)</ept>.","source":"For more information about handling events, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f)."}],"pos":[367215,367760],"yaml":true,"extradata":"MT"},{"content":"Gets a value indicating whether the window will be activated when it is shown.","nodes":[{"pos":[0,78],"content":"Gets a value indicating whether the window will be activated when it is shown.","nodes":[{"content":"Gets a value indicating whether the window will be activated when it is shown.","pos":[0,78]}]}],"pos":[369994,370073],"yaml":true},{"content":"Use this property if you want to show a top-level window, but don't want to interrupt a user's work by taking the input focus away from the current window. This can be an informational pop-up window or a floating window, such as a Tools palette in the Paint application.  \n  \n Because this property is read-only, you can only change its value by overriding <xref:System.Windows.Forms.Form.ShowWithoutActivation%2A> in your own form, and programming it to return `true`.  \n  \n If your non-activated window needs to use UI controls, you should consider using the <xref:System.Windows.Forms.ToolStrip> controls, such as <xref:System.Windows.Forms.ToolStripDropDown>. These controls are windowless, and will not cause a window to activate when they are selected.","nodes":[{"pos":[0,270],"content":"Use this property if you want to show a top-level window, but don't want to interrupt a user's work by taking the input focus away from the current window. This can be an informational pop-up window or a floating window, such as a Tools palette in the Paint application.","nodes":[{"content":"Use this property if you want to show a top-level window, but don't want to interrupt a user's work by taking the input focus away from the current window. This can be an informational pop-up window or a floating window, such as a Tools palette in the Paint application.","pos":[0,270],"nodes":[{"content":"Use this property if you want to show a top-level window, but don't want to interrupt a user's work by taking the input focus away from the current window.","pos":[0,155]},{"content":"This can be an informational pop-up window or a floating window, such as a Tools palette in the Paint application.","pos":[156,270]}]}]},{"pos":[277,469],"content":"Because this property is read-only, you can only change its value by overriding <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Form.ShowWithoutActivation%2A&gt;</ph> in your own form, and programming it to return <ph id=\"ph2\">`true`</ph>.","source":"Because this property is read-only, you can only change its value by overriding <xref:System.Windows.Forms.Form.ShowWithoutActivation%2A> in your own form, and programming it to return `true`."},{"pos":[476,758],"content":"If your non-activated window needs to use UI controls, you should consider using the <xref:System.Windows.Forms.ToolStrip> controls, such as <xref:System.Windows.Forms.ToolStripDropDown>. These controls are windowless, and will not cause a window to activate when they are selected.","nodes":[{"content":"If your non-activated window needs to use UI controls, you should consider using the <xref:System.Windows.Forms.ToolStrip> controls, such as <xref:System.Windows.Forms.ToolStripDropDown>. These controls are windowless, and will not cause a window to activate when they are selected.","pos":[0,282],"nodes":[{"content":"If your non-activated window needs to use UI controls, you should consider using the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.ToolStrip&gt;</ph> controls, such as <ph id=\"ph2\">&lt;xref:System.Windows.Forms.ToolStripDropDown&gt;</ph>.","pos":[0,187],"source":"If your non-activated window needs to use UI controls, you should consider using the <xref:System.Windows.Forms.ToolStrip> controls, such as <xref:System.Windows.Forms.ToolStripDropDown>."},{"content":"These controls are windowless, and will not cause a window to activate when they are selected.","pos":[188,282]}]}]}],"pos":[370084,370849],"yaml":true,"extradata":"MT"},{"content":"`True` if the window will not be activated when it is shown; otherwise, `false`. The default is `false`.","nodes":[{"pos":[0,104],"content":"`True` if the window will not be activated when it is shown; otherwise, `false`. The default is `false`.","nodes":[{"content":"<ph id=\"ph1\">`True`</ph> if the window will not be activated when it is shown; otherwise, <ph id=\"ph2\">`false`</ph>.","pos":[0,80],"source":"`True` if the window will not be activated when it is shown; otherwise, `false`."},{"content":"The default is <ph id=\"ph1\">`false`</ph>.","pos":[81,104],"source":" The default is `false`."}]}],"pos":[371041,371148],"yaml":true},{"content":"Gets or sets the size of the form.","nodes":[{"pos":[0,34],"content":"Gets or sets the size of the form.","nodes":[{"content":"Gets or sets the size of the form.","pos":[0,34]}]}],"pos":[372129,372164],"yaml":true},{"content":"This property allows you to set both the height and width (in pixels) of the form at the same time instead of setting the <xref:System.Windows.Forms.Control.Height%2A> and <xref:System.Windows.Forms.Control.Width%2A> properties individually. If you want to set the size and location of a form, you can use the <xref:System.Windows.Forms.Form.DesktopBounds%2A> property to size and locate the form based on desktop coordinates or use the <xref:System.Windows.Forms.Control.Bounds%2A> property of the <xref:System.Windows.Forms.Control> class to set the size and location of the form based on screen coordinates.  \n  \n> [!NOTE]\n>  The maximum value of this property is limited by the resolution of the screen on which the form runs. The value cannot be greater than 12 pixels over each screen dimension (horizontal + 12 and vertical + 12).  \n  \n> [!NOTE]\n>  On Pocket PC devices, you can create a resizable window by setting <xref:System.Windows.Forms.Form.FormBorderStyle%2A> to `None` and removing any <xref:System.Windows.Forms.MainMenu> control. On SmartPhone devices, you can never resize a <xref:System.Windows.Forms.Form> - it will always fill the entire screen.","nodes":[{"pos":[0,610],"content":"This property allows you to set both the height and width (in pixels) of the form at the same time instead of setting the <xref:System.Windows.Forms.Control.Height%2A> and <xref:System.Windows.Forms.Control.Width%2A> properties individually. If you want to set the size and location of a form, you can use the <xref:System.Windows.Forms.Form.DesktopBounds%2A> property to size and locate the form based on desktop coordinates or use the <xref:System.Windows.Forms.Control.Bounds%2A> property of the <xref:System.Windows.Forms.Control> class to set the size and location of the form based on screen coordinates.","nodes":[{"content":"This property allows you to set both the height and width (in pixels) of the form at the same time instead of setting the <xref:System.Windows.Forms.Control.Height%2A> and <xref:System.Windows.Forms.Control.Width%2A> properties individually. If you want to set the size and location of a form, you can use the <xref:System.Windows.Forms.Form.DesktopBounds%2A> property to size and locate the form based on desktop coordinates or use the <xref:System.Windows.Forms.Control.Bounds%2A> property of the <xref:System.Windows.Forms.Control> class to set the size and location of the form based on screen coordinates.","pos":[0,610],"nodes":[{"content":"This property allows you to set both the height and width (in pixels) of the form at the same time instead of setting the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.Height%2A&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Control.Width%2A&gt;</ph> properties individually.","pos":[0,241],"source":"This property allows you to set both the height and width (in pixels) of the form at the same time instead of setting the <xref:System.Windows.Forms.Control.Height%2A> and <xref:System.Windows.Forms.Control.Width%2A> properties individually."},{"content":"If you want to set the size and location of a form, you can use the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Form.DesktopBounds%2A&gt;</ph> property to size and locate the form based on desktop coordinates or use the <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Control.Bounds%2A&gt;</ph> property of the <ph id=\"ph3\">&lt;xref:System.Windows.Forms.Control&gt;</ph> class to set the size and location of the form based on screen coordinates.","pos":[242,610],"source":" If you want to set the size and location of a form, you can use the <xref:System.Windows.Forms.Form.DesktopBounds%2A> property to size and locate the form based on desktop coordinates or use the <xref:System.Windows.Forms.Control.Bounds%2A> property of the <xref:System.Windows.Forms.Control> class to set the size and location of the form based on screen coordinates."}]}]},{"pos":[618,837],"content":"[!NOTE]\n The maximum value of this property is limited by the resolution of the screen on which the form runs. The value cannot be greater than 12 pixels over each screen dimension (horizontal + 12 and vertical + 12).","leadings":["","> "],"nodes":[{"content":" The maximum value of this property is limited by the resolution of the screen on which the form runs. The value cannot be greater than 12 pixels over each screen dimension (horizontal + 12 and vertical + 12).","pos":[8,217],"nodes":[{"content":"The maximum value of this property is limited by the resolution of the screen on which the form runs.","pos":[1,102]},{"content":"The value cannot be greater than 12 pixels over each screen dimension (horizontal + 12 and vertical + 12).","pos":[103,209]}]}]},{"pos":[845,1167],"content":"[!NOTE]\n On Pocket PC devices, you can create a resizable window by setting <xref:System.Windows.Forms.Form.FormBorderStyle%2A> to `None` and removing any <xref:System.Windows.Forms.MainMenu> control. On SmartPhone devices, you can never resize a <xref:System.Windows.Forms.Form> - it will always fill the entire screen.","leadings":["","> "],"nodes":[{"content":" On Pocket PC devices, you can create a resizable window by setting <xref:System.Windows.Forms.Form.FormBorderStyle%2A> to `None` and removing any <xref:System.Windows.Forms.MainMenu> control. On SmartPhone devices, you can never resize a <xref:System.Windows.Forms.Form> - it will always fill the entire screen.","pos":[8,320],"nodes":[{"content":"On Pocket PC devices, you can create a resizable window by setting <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Form.FormBorderStyle%2A&gt;</ph> to <ph id=\"ph2\">`None`</ph> and removing any <ph id=\"ph3\">&lt;xref:System.Windows.Forms.MainMenu&gt;</ph> control.","pos":[1,192],"source":" On Pocket PC devices, you can create a resizable window by setting <xref:System.Windows.Forms.Form.FormBorderStyle%2A> to `None` and removing any <xref:System.Windows.Forms.MainMenu> control."},{"content":"On SmartPhone devices, you can never resize a <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Form&gt;</ph> - it will always fill the entire screen.","pos":[193,312],"source":" On SmartPhone devices, you can never resize a <xref:System.Windows.Forms.Form> - it will always fill the entire screen."}]}]}],"pos":[372175,373351],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Drawing.Size\"></xref> that represents the size of the form.","nodes":[{"pos":[0,80],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Drawing.Size\"&gt;&lt;/xref&gt;</ph> that represents the size of the form.","source":"A <xref href=\"System.Drawing.Size\"></xref> that represents the size of the form."}],"pos":[374406,374487],"yaml":true},{"content":"Gets or sets the style of the size grip to display in the lower-right corner of the form.","nodes":[{"pos":[0,89],"content":"Gets or sets the style of the size grip to display in the lower-right corner of the form.","nodes":[{"content":"Gets or sets the style of the size grip to display in the lower-right corner of the form.","pos":[0,89]}]}],"pos":[375457,375547],"yaml":true},{"content":"This property enables you to determine when the sizing grip is displayed on the form. You can set this property to display the sizing grip or have it automatically displayed based on the setting of the <xref:System.Windows.Forms.Form.FormBorderStyle%2A> property.","nodes":[{"pos":[0,263],"content":"This property enables you to determine when the sizing grip is displayed on the form. You can set this property to display the sizing grip or have it automatically displayed based on the setting of the <xref:System.Windows.Forms.Form.FormBorderStyle%2A> property.","nodes":[{"content":"This property enables you to determine when the sizing grip is displayed on the form. You can set this property to display the sizing grip or have it automatically displayed based on the setting of the <xref:System.Windows.Forms.Form.FormBorderStyle%2A> property.","pos":[0,263],"nodes":[{"content":"This property enables you to determine when the sizing grip is displayed on the form.","pos":[0,85]},{"content":"You can set this property to display the sizing grip or have it automatically displayed based on the setting of the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Form.FormBorderStyle%2A&gt;</ph> property.","pos":[86,263],"source":" You can set this property to display the sizing grip or have it automatically displayed based on the setting of the <xref:System.Windows.Forms.Form.FormBorderStyle%2A> property."}]}]}],"pos":[375558,375822],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Windows.Forms.SizeGripStyle\"></xref> that represents the style of the size grip to display. The default is <xref href=\"System.Windows.Forms.SizeGripStyle.Auto\"></xref>","nodes":[{"pos":[0,188],"content":"A <xref href=\"System.Windows.Forms.SizeGripStyle\"></xref> that represents the style of the size grip to display. The default is <xref href=\"System.Windows.Forms.SizeGripStyle.Auto\"></xref>","nodes":[{"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.SizeGripStyle\"&gt;&lt;/xref&gt;</ph> that represents the style of the size grip to display.","pos":[0,112],"source":"A <xref href=\"System.Windows.Forms.SizeGripStyle\"></xref> that represents the style of the size grip to display."},{"content":"The default is <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.SizeGripStyle.Auto\"&gt;&lt;/xref&gt;</ph>","pos":[113,188],"source":" The default is <xref href=\"System.Windows.Forms.SizeGripStyle.Auto\"></xref>"}]}],"pos":[376538,376727],"yaml":true},{"content":"The value specified is outside the range of valid values.","nodes":[{"pos":[0,57],"content":"The value specified is outside the range of valid values.","nodes":[{"content":"The value specified is outside the range of valid values.","pos":[0,57]}]}],"pos":[376940,376998],"yaml":true},{"content":"Gets or sets the starting position of the form at run time.","nodes":[{"pos":[0,59],"content":"Gets or sets the starting position of the form at run time.","nodes":[{"content":"Gets or sets the starting position of the form at run time.","pos":[0,59]}]}],"pos":[377907,377967],"yaml":true},{"content":"This property enables you to set the starting position of the form when it is displayed at run time. The form’s position can be specified manually by setting the <xref:System.Windows.Forms.Form.Location%2A> property or use the default location specified by Windows. You can also position the form to display in the center of the screen or in the center of its parent form for forms such as multiple-document interface (MDI) child forms.  \n  \n This property should be set before the form is shown.  You can set this property before you call the <xref:System.Windows.Forms.Form.Show%2A> or <xref:System.Windows.Forms.Form.ShowDialog%2A> method or in your form's constructor.","nodes":[{"pos":[0,436],"content":"This property enables you to set the starting position of the form when it is displayed at run time. The form’s position can be specified manually by setting the <xref:System.Windows.Forms.Form.Location%2A> property or use the default location specified by Windows. You can also position the form to display in the center of the screen or in the center of its parent form for forms such as multiple-document interface (MDI) child forms.","nodes":[{"content":"This property enables you to set the starting position of the form when it is displayed at run time. The form’s position can be specified manually by setting the <xref:System.Windows.Forms.Form.Location%2A> property or use the default location specified by Windows. You can also position the form to display in the center of the screen or in the center of its parent form for forms such as multiple-document interface (MDI) child forms.","pos":[0,436],"nodes":[{"content":"This property enables you to set the starting position of the form when it is displayed at run time.","pos":[0,100]},{"content":"The form’s position can be specified manually by setting the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Form.Location%2A&gt;</ph> property or use the default location specified by Windows.","pos":[101,265],"source":" The form’s position can be specified manually by setting the <xref:System.Windows.Forms.Form.Location%2A> property or use the default location specified by Windows."},{"content":"You can also position the form to display in the center of the screen or in the center of its parent form for forms such as multiple-document interface (MDI) child forms.","pos":[266,436]}]}]},{"pos":[443,672],"content":"This property should be set before the form is shown.  You can set this property before you call the <xref:System.Windows.Forms.Form.Show%2A> or <xref:System.Windows.Forms.Form.ShowDialog%2A> method or in your form's constructor.","nodes":[{"content":"This property should be set before the form is shown.  You can set this property before you call the <xref:System.Windows.Forms.Form.Show%2A> or <xref:System.Windows.Forms.Form.ShowDialog%2A> method or in your form's constructor.","pos":[0,229],"nodes":[{"content":"This property should be set before the form is shown.","pos":[0,53]},{"content":"You can set this property before you call the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Form.Show%2A&gt;</ph> or <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Form.ShowDialog%2A&gt;</ph> method or in your form's constructor.","pos":[55,229],"source":"  You can set this property before you call the <xref:System.Windows.Forms.Form.Show%2A> or <xref:System.Windows.Forms.Form.ShowDialog%2A> method or in your form's constructor."}]}]}],"pos":[377978,378655],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Windows.Forms.FormStartPosition\"></xref> that represents the starting position of the form.","nodes":[{"pos":[0,112],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.FormStartPosition\"&gt;&lt;/xref&gt;</ph> that represents the starting position of the form.","source":"A <xref href=\"System.Windows.Forms.FormStartPosition\"></xref> that represents the starting position of the form."}],"pos":[380177,380290],"yaml":true},{"content":"The value specified is outside the range of valid values.","nodes":[{"pos":[0,57],"content":"The value specified is outside the range of valid values.","nodes":[{"content":"The value specified is outside the range of valid values.","pos":[0,57]}]}],"pos":[380503,380561],"yaml":true},{"content":"Gets or sets the tab order of the control within its container.","nodes":[{"pos":[0,63],"content":"Gets or sets the tab order of the control within its container.","nodes":[{"content":"Gets or sets the tab order of the control within its container.","pos":[0,63]}]}],"pos":[381418,381482],"yaml":true},{"content":"Forms are not included in the tab order. Setting the <xref:System.Windows.Forms.Form.TabIndex%2A> property does nothing.","nodes":[{"pos":[0,120],"content":"Forms are not included in the tab order. Setting the <xref:System.Windows.Forms.Form.TabIndex%2A> property does nothing.","nodes":[{"content":"Forms are not included in the tab order. Setting the <xref:System.Windows.Forms.Form.TabIndex%2A> property does nothing.","pos":[0,120],"nodes":[{"content":"Forms are not included in the tab order.","pos":[0,40]},{"content":"Setting the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Form.TabIndex%2A&gt;</ph> property does nothing.","pos":[41,120],"source":" Setting the <xref:System.Windows.Forms.Form.TabIndex%2A> property does nothing."}]}]}],"pos":[381493,381614],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.Int32\"></xref> containing the index of the control within the set of controls within its container that is included in the tab order.","nodes":[{"pos":[0,155],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Int32\"&gt;&lt;/xref&gt;</ph> containing the index of the control within the set of controls within its container that is included in the tab order.","source":"An <xref href=\"System.Int32\"></xref> containing the index of the control within the set of controls within its container that is included in the tab order."}],"pos":[381784,381940],"yaml":true},{"content":"Occurs when the value of the <xref href=\"System.Windows.Forms.Form.TabIndex\"></xref> property changes.","nodes":[{"pos":[0,102],"content":"Occurs when the value of the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.Form.TabIndex\"&gt;&lt;/xref&gt;</ph> property changes.","source":"Occurs when the value of the <xref href=\"System.Windows.Forms.Form.TabIndex\"></xref> property changes."}],"pos":[382949,383052],"yaml":true},{"content":"Gets or sets a value indicating whether the user can give the focus to this control using the TAB key.","nodes":[{"pos":[0,102],"content":"Gets or sets a value indicating whether the user can give the focus to this control using the TAB key.","nodes":[{"content":"Gets or sets a value indicating whether the user can give the focus to this control using the TAB key.","pos":[0,102]}]}],"pos":[384157,384260],"yaml":true},{"content":"`true` if the user can give the focus to the control using the TAB key; otherwise, `false`. The default is `true`.","nodes":[{"pos":[0,114],"content":"`true` if the user can give the focus to the control using the TAB key; otherwise, `false`. The default is `true`.","nodes":[{"content":"<ph id=\"ph1\">`true`</ph> if the user can give the focus to the control using the TAB key; otherwise, <ph id=\"ph2\">`false`</ph>.","pos":[0,91],"source":"`true` if the user can give the focus to the control using the TAB key; otherwise, `false`."},{"content":"The default is <ph id=\"ph1\">`true`</ph>.","pos":[92,114],"source":" The default is `true`."}]}],"pos":[384432,384549],"yaml":true},{"content":"Occurs when the <xref href=\"System.Windows.Forms.Form.TabStop\"></xref> property changes.","nodes":[{"pos":[0,88],"content":"Occurs when the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.Form.TabStop\"&gt;&lt;/xref&gt;</ph> property changes.","source":"Occurs when the <xref href=\"System.Windows.Forms.Form.TabStop\"></xref> property changes."}],"pos":[385573,385662],"yaml":true},{"content":"Gets or sets the text associated with this control.","nodes":[{"pos":[0,51],"content":"Gets or sets the text associated with this control.","nodes":[{"content":"Gets or sets the text associated with this control.","pos":[0,51]}]}],"pos":[386770,386822],"yaml":true},{"content":"The text associated with this control.","nodes":[{"pos":[0,38],"content":"The text associated with this control.","nodes":[{"content":"The text associated with this control.","pos":[0,38]}]}],"pos":[387007,387046],"yaml":true},{"content":"Gets or sets a value indicating whether to display the form as a top-level window.","nodes":[{"pos":[0,82],"content":"Gets or sets a value indicating whether to display the form as a top-level window.","nodes":[{"content":"Gets or sets a value indicating whether to display the form as a top-level window.","pos":[0,82]}]}],"pos":[388041,388124],"yaml":true},{"content":"A top-level form is a window that has no parent form, or whose parent form is the desktop window. Top-level windows are typically used as the main form in an application.","nodes":[{"pos":[0,170],"content":"A top-level form is a window that has no parent form, or whose parent form is the desktop window. Top-level windows are typically used as the main form in an application.","nodes":[{"content":"A top-level form is a window that has no parent form, or whose parent form is the desktop window. Top-level windows are typically used as the main form in an application.","pos":[0,170],"nodes":[{"content":"A top-level form is a window that has no parent form, or whose parent form is the desktop window.","pos":[0,97]},{"content":"Top-level windows are typically used as the main form in an application.","pos":[98,170]}]}]}],"pos":[388135,388306],"yaml":true,"extradata":"MT"},{"content":"`true` to display the form as a top-level window; otherwise, `false`. The default is `true`.","nodes":[{"pos":[0,92],"content":"`true` to display the form as a top-level window; otherwise, `false`. The default is `true`.","nodes":[{"content":"<ph id=\"ph1\">`true`</ph> to display the form as a top-level window; otherwise, <ph id=\"ph2\">`false`</ph>.","pos":[0,69],"source":"`true` to display the form as a top-level window; otherwise, `false`."},{"content":"The default is <ph id=\"ph1\">`true`</ph>.","pos":[70,92],"source":" The default is `true`."}]}],"pos":[389154,389249],"yaml":true},{"content":"A Multiple-document interface (MDI) parent form must be a top-level window.","nodes":[{"pos":[0,75],"content":"A Multiple-document interface (MDI) parent form must be a top-level window.","nodes":[{"content":"A Multiple-document interface (MDI) parent form must be a top-level window.","pos":[0,75]}]}],"pos":[389389,389465],"yaml":true},{"content":"Gets or sets a value indicating whether the form should be displayed as a topmost form.","nodes":[{"pos":[0,87],"content":"Gets or sets a value indicating whether the form should be displayed as a topmost form.","nodes":[{"content":"Gets or sets a value indicating whether the form should be displayed as a topmost form.","pos":[0,87]}]}],"pos":[390364,390452],"yaml":true},{"content":"A topmost form is a form that overlaps all the other (non-topmost) forms even if it is not the active or foreground form. Topmost forms are always displayed at the highest point in the z-order of the windows on the desktop. You can use this property to create a form that is always displayed in your application, such as a Find and Replace tool window.","nodes":[{"pos":[0,352],"content":"A topmost form is a form that overlaps all the other (non-topmost) forms even if it is not the active or foreground form. Topmost forms are always displayed at the highest point in the z-order of the windows on the desktop. You can use this property to create a form that is always displayed in your application, such as a Find and Replace tool window.","nodes":[{"content":"A topmost form is a form that overlaps all the other (non-topmost) forms even if it is not the active or foreground form. Topmost forms are always displayed at the highest point in the z-order of the windows on the desktop. You can use this property to create a form that is always displayed in your application, such as a Find and Replace tool window.","pos":[0,352],"nodes":[{"content":"A topmost form is a form that overlaps all the other (non-topmost) forms even if it is not the active or foreground form.","pos":[0,121]},{"content":"Topmost forms are always displayed at the highest point in the z-order of the windows on the desktop.","pos":[122,223]},{"content":"You can use this property to create a form that is always displayed in your application, such as a Find and Replace tool window.","pos":[224,352]}]}]}],"pos":[390463,390816],"yaml":true,"extradata":"MT"},{"content":"`true` to display the form as a topmost form; otherwise, `false`. The default is `false`.","nodes":[{"pos":[0,89],"content":"`true` to display the form as a topmost form; otherwise, `false`. The default is `false`.","nodes":[{"content":"<ph id=\"ph1\">`true`</ph> to display the form as a topmost form; otherwise, <ph id=\"ph2\">`false`</ph>.","pos":[0,65],"source":"`true` to display the form as a topmost form; otherwise, `false`."},{"content":"The default is <ph id=\"ph1\">`false`</ph>.","pos":[66,89],"source":" The default is `false`."}]}],"pos":[391999,392091],"yaml":true},{"content":"Gets a string representing the current instance of the form.","nodes":[{"pos":[0,60],"content":"Gets a string representing the current instance of the form.","nodes":[{"content":"Gets a string representing the current instance of the form.","pos":[0,60]}]}],"pos":[393038,393099],"yaml":true},{"content":"A string consisting of the fully qualified name of the form object's class, with the <xref href=\"System.Windows.Forms.Form.Text\"></xref> property of the form appended to the end. For example, if the form is derived from the class <code>MyForm</code> in the <code>MyNamespace</code> namespace, and the <xref href=\"System.Windows.Forms.Form.Text\"></xref> property is set to <code>Hello, World</code>, this method will return <code>MyNamespace.MyForm, Text: Hello, World</code>.","nodes":[{"pos":[0,475],"content":"A string consisting of the fully qualified name of the form object's class, with the <xref href=\"System.Windows.Forms.Form.Text\"></xref> property of the form appended to the end. For example, if the form is derived from the class <code>MyForm</code> in the <code>MyNamespace</code> namespace, and the <xref href=\"System.Windows.Forms.Form.Text\"></xref> property is set to <code>Hello, World</code>, this method will return <code>MyNamespace.MyForm, Text: Hello, World</code>.","nodes":[{"content":"A string consisting of the fully qualified name of the form object's class, with the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.Form.Text\"&gt;&lt;/xref&gt;</ph> property of the form appended to the end.","pos":[0,178],"source":"A string consisting of the fully qualified name of the form object's class, with the <xref href=\"System.Windows.Forms.Form.Text\"></xref> property of the form appended to the end."},{"content":"For example, if the form is derived from the class <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">MyForm</ph><ept id=\"p1\">&lt;/code&gt;</ept> in the <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">MyNamespace</ph><ept id=\"p2\">&lt;/code&gt;</ept> namespace, and the <ph id=\"ph3\">&lt;xref href=\"System.Windows.Forms.Form.Text\"&gt;&lt;/xref&gt;</ph> property is set to <bpt id=\"p3\">&lt;code&gt;</bpt><ph id=\"ph4\">Hello, World</ph><ept id=\"p3\">&lt;/code&gt;</ept>, this method will return <bpt id=\"p4\">&lt;code&gt;</bpt><ph id=\"ph5\">MyNamespace.MyForm, Text: Hello, World</ph><ept id=\"p4\">&lt;/code&gt;</ept>.","pos":[179,475],"source":" For example, if the form is derived from the class <code>MyForm</code> in the <code>MyNamespace</code> namespace, and the <xref href=\"System.Windows.Forms.Form.Text\"></xref> property is set to <code>Hello, World</code>, this method will return <code>MyNamespace.MyForm, Text: Hello, World</code>."}]}],"pos":[393234,393716],"yaml":true},{"content":"Gets or sets the color that will represent transparent areas of the form.","nodes":[{"pos":[0,73],"content":"Gets or sets the color that will represent transparent areas of the form.","nodes":[{"content":"Gets or sets the color that will represent transparent areas of the form.","pos":[0,73]}]}],"pos":[394685,394759],"yaml":true},{"content":"When the <xref:System.Windows.Forms.Form.TransparencyKey%2A> property is assigned a <xref:System.Drawing.Color>, the areas of the form that have the same <xref:System.Windows.Forms.Control.BackColor%2A> will be displayed transparently. Any mouse actions, such as the click of the mouse, that are performed on the transparent areas of the form will be transferred to the windows below the transparent area. For example, if the client region of a form is made transparent, clicking the mouse on that area would send the event notification of the click to any window that is below it. If the color assigned to the <xref:System.Windows.Forms.Form.TransparencyKey%2A> property is the same as any controls on the form, they also will be displayed transparently. For example, if you have a <xref:System.Windows.Forms.Button> control on a form that has its <xref:System.Windows.Forms.Form.TransparencyKey%2A> property set to `SystemColors.Control`, the control will be displayed transparently unless the <xref:System.Windows.Forms.Control.BackColor%2A> property of the <xref:System.Windows.Forms.Button> control is changed to a different color.  \n  \n This property is not supported when <xref:System.Windows.Forms.Form.RightToLeftLayout%2A> is `true`.","nodes":[{"pos":[0,1136],"content":"When the <xref:System.Windows.Forms.Form.TransparencyKey%2A> property is assigned a <xref:System.Drawing.Color>, the areas of the form that have the same <xref:System.Windows.Forms.Control.BackColor%2A> will be displayed transparently. Any mouse actions, such as the click of the mouse, that are performed on the transparent areas of the form will be transferred to the windows below the transparent area. For example, if the client region of a form is made transparent, clicking the mouse on that area would send the event notification of the click to any window that is below it. If the color assigned to the <xref:System.Windows.Forms.Form.TransparencyKey%2A> property is the same as any controls on the form, they also will be displayed transparently. For example, if you have a <xref:System.Windows.Forms.Button> control on a form that has its <xref:System.Windows.Forms.Form.TransparencyKey%2A> property set to `SystemColors.Control`, the control will be displayed transparently unless the <xref:System.Windows.Forms.Control.BackColor%2A> property of the <xref:System.Windows.Forms.Button> control is changed to a different color.","nodes":[{"content":"When the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Form.TransparencyKey%2A&gt;</ph> property is assigned a <ph id=\"ph2\">&lt;xref:System.Drawing.Color&gt;</ph>, the areas of the form that have the same <ph id=\"ph3\">&lt;xref:System.Windows.Forms.Control.BackColor%2A&gt;</ph> will be displayed transparently.","pos":[0,235],"source":"When the <xref:System.Windows.Forms.Form.TransparencyKey%2A> property is assigned a <xref:System.Drawing.Color>, the areas of the form that have the same <xref:System.Windows.Forms.Control.BackColor%2A> will be displayed transparently."},{"content":"Any mouse actions, such as the click of the mouse, that are performed on the transparent areas of the form will be transferred to the windows below the transparent area.","pos":[236,405]},{"content":"For example, if the client region of a form is made transparent, clicking the mouse on that area would send the event notification of the click to any window that is below it.","pos":[406,581]},{"content":"If the color assigned to the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Form.TransparencyKey%2A&gt;</ph> property is the same as any controls on the form, they also will be displayed transparently.","pos":[582,755],"source":" If the color assigned to the <xref:System.Windows.Forms.Form.TransparencyKey%2A> property is the same as any controls on the form, they also will be displayed transparently."},{"content":"For example, if you have a <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Button&gt;</ph> control on a form that has its <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Form.TransparencyKey%2A&gt;</ph> property set to <ph id=\"ph3\">`SystemColors.Control`</ph>, the control will be displayed transparently unless the <ph id=\"ph4\">&lt;xref:System.Windows.Forms.Control.BackColor%2A&gt;</ph> property of the <ph id=\"ph5\">&lt;xref:System.Windows.Forms.Button&gt;</ph> control is changed to a different color.","pos":[756,1136],"source":" For example, if you have a <xref:System.Windows.Forms.Button> control on a form that has its <xref:System.Windows.Forms.Form.TransparencyKey%2A> property set to `SystemColors.Control`, the control will be displayed transparently unless the <xref:System.Windows.Forms.Control.BackColor%2A> property of the <xref:System.Windows.Forms.Button> control is changed to a different color."}]},{"pos":[1143,1243],"content":"This property is not supported when <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Form.RightToLeftLayout%2A&gt;</ph> is <ph id=\"ph2\">`true`</ph>.","source":"This property is not supported when <xref:System.Windows.Forms.Form.RightToLeftLayout%2A> is `true`."}],"pos":[394770,396018],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Drawing.Color\"></xref> that represents the color to display transparently on the form.","nodes":[{"pos":[0,107],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Drawing.Color\"&gt;&lt;/xref&gt;</ph> that represents the color to display transparently on the form.","source":"A <xref href=\"System.Drawing.Color\"></xref> that represents the color to display transparently on the form."}],"pos":[396857,396965],"yaml":true},{"content":"Updates which button is the default button.","nodes":[{"pos":[0,43],"content":"Updates which button is the default button.","nodes":[{"content":"Updates which button is the default button.","pos":[0,43]}]}],"pos":[397947,397991],"yaml":true},{"content":"The <xref:System.Windows.Forms.Form.UpdateDefaultButton%2A> method determines which button on the form raises its Click event when the user presses ENTER, according to the following priority:  \n  \n1.  If the <xref:System.Windows.Forms.ContainerControl.ActiveControl%2A> property implements the <xref:System.Windows.Forms.IButtonControl> interface, that control is the default button.  \n  \n2.  The <xref:System.Windows.Forms.Form.AcceptButton%2A> property is the default button.","nodes":[{"pos":[0,191],"content":"The <xref:System.Windows.Forms.Form.UpdateDefaultButton%2A> method determines which button on the form raises its Click event when the user presses ENTER, according to the following priority:","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Form.UpdateDefaultButton%2A&gt;</ph> method determines which button on the form raises its Click event when the user presses ENTER, according to the following priority:","pos":[0,191],"source":"The <xref:System.Windows.Forms.Form.UpdateDefaultButton%2A> method determines which button on the form raises its Click event when the user presses ENTER, according to the following priority:"}]},{"pos":[201,383],"content":"If the <xref:System.Windows.Forms.ContainerControl.ActiveControl%2A> property implements the <xref:System.Windows.Forms.IButtonControl> interface, that control is the default button.","nodes":[{"content":"If the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.ContainerControl.ActiveControl%2A&gt;</ph> property implements the <ph id=\"ph2\">&lt;xref:System.Windows.Forms.IButtonControl&gt;</ph> interface, that control is the default button.","pos":[0,182],"source":"If the <xref:System.Windows.Forms.ContainerControl.ActiveControl%2A> property implements the <xref:System.Windows.Forms.IButtonControl> interface, that control is the default button."}]},{"pos":[393,477],"content":"The <xref:System.Windows.Forms.Form.AcceptButton%2A> property is the default button.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Form.AcceptButton%2A&gt;</ph> property is the default button.","pos":[0,84],"source":"The <xref:System.Windows.Forms.Form.AcceptButton%2A> property is the default button."}]}],"pos":[398002,398486],"yaml":true,"extradata":"MT"},{"content":"Causes all of the child controls within a control that support validation to validate their data.","nodes":[{"pos":[0,97],"content":"Causes all of the child controls within a control that support validation to validate their data.","nodes":[{"content":"Causes all of the child controls within a control that support validation to validate their data.","pos":[0,97]}]}],"pos":[399566,399664],"yaml":true},{"content":"`true` if all of the children validated successfully; otherwise, `false`. If called from the <xref href=\"System.Windows.Forms.Control.Validating\"></xref> or <xref href=\"System.Windows.Forms.Control.Validated\"></xref> event handlers, this method will always return `false`.","nodes":[{"pos":[0,272],"content":"`true` if all of the children validated successfully; otherwise, `false`. If called from the <xref href=\"System.Windows.Forms.Control.Validating\"></xref> or <xref href=\"System.Windows.Forms.Control.Validated\"></xref> event handlers, this method will always return `false`.","nodes":[{"content":"<ph id=\"ph1\">`true`</ph> if all of the children validated successfully; otherwise, <ph id=\"ph2\">`false`</ph>.","pos":[0,73],"source":"`true` if all of the children validated successfully; otherwise, `false`."},{"content":"If called from the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.Control.Validating\"&gt;&lt;/xref&gt;</ph> or <ph id=\"ph2\">&lt;xref href=\"System.Windows.Forms.Control.Validated\"&gt;&lt;/xref&gt;</ph> event handlers, this method will always return <ph id=\"ph3\">`false`</ph>.","pos":[74,272],"source":" If called from the <xref href=\"System.Windows.Forms.Control.Validating\"></xref> or <xref href=\"System.Windows.Forms.Control.Validated\"></xref> event handlers, this method will always return `false`."}]}],"pos":[399862,400137],"yaml":true},{"content":"Causes all of the child controls within a control that support validation to validate their data.","nodes":[{"pos":[0,97],"content":"Causes all of the child controls within a control that support validation to validate their data.","nodes":[{"content":"Causes all of the child controls within a control that support validation to validate their data.","pos":[0,97]}]}],"pos":[401384,401482],"yaml":true},{"content":"Places restrictions on which controls have their <xref href=\"System.Windows.Forms.Control.Validating\"></xref> event raised.","nodes":[{"pos":[0,123],"content":"Places restrictions on which controls have their <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.Control.Validating\"&gt;&lt;/xref&gt;</ph> event raised.","source":"Places restrictions on which controls have their <xref href=\"System.Windows.Forms.Control.Validating\"></xref> event raised."}],"pos":[401789,401913],"yaml":true},{"content":"`true` if all of the children validated successfully; otherwise, `false`. If called from the <xref href=\"System.Windows.Forms.Control.Validating\"></xref> or <xref href=\"System.Windows.Forms.Control.Validated\"></xref> event handlers, this method will always return `false`.","nodes":[{"pos":[0,272],"content":"`true` if all of the children validated successfully; otherwise, `false`. If called from the <xref href=\"System.Windows.Forms.Control.Validating\"></xref> or <xref href=\"System.Windows.Forms.Control.Validated\"></xref> event handlers, this method will always return `false`.","nodes":[{"content":"<ph id=\"ph1\">`true`</ph> if all of the children validated successfully; otherwise, <ph id=\"ph2\">`false`</ph>.","pos":[0,73],"source":"`true` if all of the children validated successfully; otherwise, `false`."},{"content":"If called from the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.Control.Validating\"&gt;&lt;/xref&gt;</ph> or <ph id=\"ph2\">&lt;xref href=\"System.Windows.Forms.Control.Validated\"&gt;&lt;/xref&gt;</ph> event handlers, this method will always return <ph id=\"ph3\">`false`</ph>.","pos":[74,272],"source":" If called from the <xref href=\"System.Windows.Forms.Control.Validating\"></xref> or <xref href=\"System.Windows.Forms.Control.Validated\"></xref> event handlers, this method will always return `false`."}]}],"pos":[401971,402246],"yaml":true},{"content":"Gets or sets a value that indicates whether form is minimized, maximized, or normal.","nodes":[{"pos":[0,84],"content":"Gets or sets a value that indicates whether form is minimized, maximized, or normal.","nodes":[{"content":"Gets or sets a value that indicates whether form is minimized, maximized, or normal.","pos":[0,84]}]}],"pos":[403264,403349],"yaml":true},{"content":"Before a form is displayed, the <xref:System.Windows.Forms.Form.WindowState%2A> property is always set to `FormWindowState.Normal`, regardless of its initial setting. This is reflected in the <xref:System.Windows.Forms.Control.Height%2A>, <xref:System.Windows.Forms.Control.Left%2A>, <xref:System.Windows.Forms.Control.Top%2A>, and <xref:System.Windows.Forms.Control.Width%2A> property settings. If a form is hidden after it has been shown, these properties reflect the previous state until the form is shown again, regardless of any changes made to the <xref:System.Windows.Forms.Form.WindowState%2A> property.","nodes":[{"pos":[0,611],"content":"Before a form is displayed, the <xref:System.Windows.Forms.Form.WindowState%2A> property is always set to `FormWindowState.Normal`, regardless of its initial setting. This is reflected in the <xref:System.Windows.Forms.Control.Height%2A>, <xref:System.Windows.Forms.Control.Left%2A>, <xref:System.Windows.Forms.Control.Top%2A>, and <xref:System.Windows.Forms.Control.Width%2A> property settings. If a form is hidden after it has been shown, these properties reflect the previous state until the form is shown again, regardless of any changes made to the <xref:System.Windows.Forms.Form.WindowState%2A> property.","nodes":[{"content":"Before a form is displayed, the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Form.WindowState%2A&gt;</ph> property is always set to <ph id=\"ph2\">`FormWindowState.Normal`</ph>, regardless of its initial setting.","pos":[0,166],"source":"Before a form is displayed, the <xref:System.Windows.Forms.Form.WindowState%2A> property is always set to `FormWindowState.Normal`, regardless of its initial setting."},{"content":"This is reflected in the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Control.Height%2A&gt;</ph>, <ph id=\"ph2\">&lt;xref:System.Windows.Forms.Control.Left%2A&gt;</ph>, <ph id=\"ph3\">&lt;xref:System.Windows.Forms.Control.Top%2A&gt;</ph>, and <ph id=\"ph4\">&lt;xref:System.Windows.Forms.Control.Width%2A&gt;</ph> property settings.","pos":[167,395],"source":" This is reflected in the <xref:System.Windows.Forms.Control.Height%2A>, <xref:System.Windows.Forms.Control.Left%2A>, <xref:System.Windows.Forms.Control.Top%2A>, and <xref:System.Windows.Forms.Control.Width%2A> property settings."},{"content":"If a form is hidden after it has been shown, these properties reflect the previous state until the form is shown again, regardless of any changes made to the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.Form.WindowState%2A&gt;</ph> property.","pos":[396,611],"source":" If a form is hidden after it has been shown, these properties reflect the previous state until the form is shown again, regardless of any changes made to the <xref:System.Windows.Forms.Form.WindowState%2A> property."}]}],"pos":[403360,403972],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Windows.Forms.FormWindowState\"></xref> that represents whether form is minimized, maximized, or normal. The default is `FormWindowState.Normal`.","nodes":[{"pos":[0,165],"content":"A <xref href=\"System.Windows.Forms.FormWindowState\"></xref> that represents whether form is minimized, maximized, or normal. The default is `FormWindowState.Normal`.","nodes":[{"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.FormWindowState\"&gt;&lt;/xref&gt;</ph> that represents whether form is minimized, maximized, or normal.","pos":[0,124],"source":"A <xref href=\"System.Windows.Forms.FormWindowState\"></xref> that represents whether form is minimized, maximized, or normal."},{"content":"The default is <ph id=\"ph1\">`FormWindowState.Normal`</ph>.","pos":[125,165],"source":" The default is `FormWindowState.Normal`."}]}],"pos":[404764,404930],"yaml":true},{"content":"The value specified is outside the range of valid values.","nodes":[{"pos":[0,57],"content":"The value specified is outside the range of valid values.","nodes":[{"content":"The value specified is outside the range of valid values.","pos":[0,57]}]}],"pos":[405141,405199],"yaml":true},{"content":"Processes Windows messages.","nodes":[{"pos":[0,27],"content":"Processes Windows messages.","nodes":[{"content":"Processes Windows messages.","pos":[0,27]}]}],"pos":[406190,406218],"yaml":true},{"content":"The Windows <xref href=\"System.Windows.Forms.Message\"></xref> to process.","nodes":[{"pos":[0,73],"content":"The Windows <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.Message\"&gt;&lt;/xref&gt;</ph> to process.","source":"The Windows <xref href=\"System.Windows.Forms.Message\"></xref> to process."}],"pos":[406399,406473],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Windows.Forms.Form\n  commentId: T:System.Windows.Forms.Form\n  id: Form\n  children:\n  - System.Windows.Forms.Form.#ctor\n  - System.Windows.Forms.Form.AcceptButton\n  - System.Windows.Forms.Form.Activate\n  - System.Windows.Forms.Form.Activated\n  - System.Windows.Forms.Form.ActivateMdiChild(System.Windows.Forms.Form)\n  - System.Windows.Forms.Form.ActiveForm\n  - System.Windows.Forms.Form.ActiveMdiChild\n  - System.Windows.Forms.Form.AddOwnedForm(System.Windows.Forms.Form)\n  - System.Windows.Forms.Form.AdjustFormScrollbars(System.Boolean)\n  - System.Windows.Forms.Form.AllowTransparency\n  - System.Windows.Forms.Form.ApplyAutoScaling\n  - System.Windows.Forms.Form.AutoScale\n  - System.Windows.Forms.Form.AutoScaleBaseSize\n  - System.Windows.Forms.Form.AutoScroll\n  - System.Windows.Forms.Form.AutoSize\n  - System.Windows.Forms.Form.AutoSizeChanged\n  - System.Windows.Forms.Form.AutoSizeMode\n  - System.Windows.Forms.Form.AutoValidate\n  - System.Windows.Forms.Form.AutoValidateChanged\n  - System.Windows.Forms.Form.BackColor\n  - System.Windows.Forms.Form.CancelButton\n  - System.Windows.Forms.Form.CenterToParent\n  - System.Windows.Forms.Form.CenterToScreen\n  - System.Windows.Forms.Form.ClientSize\n  - System.Windows.Forms.Form.Close\n  - System.Windows.Forms.Form.Closed\n  - System.Windows.Forms.Form.Closing\n  - System.Windows.Forms.Form.ControlBox\n  - System.Windows.Forms.Form.CreateControlsInstance\n  - System.Windows.Forms.Form.CreateHandle\n  - System.Windows.Forms.Form.CreateParams\n  - System.Windows.Forms.Form.Deactivate\n  - System.Windows.Forms.Form.DefaultImeMode\n  - System.Windows.Forms.Form.DefaultSize\n  - System.Windows.Forms.Form.DefWndProc(System.Windows.Forms.Message@)\n  - System.Windows.Forms.Form.DesktopBounds\n  - System.Windows.Forms.Form.DesktopLocation\n  - System.Windows.Forms.Form.DialogResult\n  - System.Windows.Forms.Form.Dispose(System.Boolean)\n  - System.Windows.Forms.Form.DpiChanged\n  - System.Windows.Forms.Form.FormBorderStyle\n  - System.Windows.Forms.Form.FormClosed\n  - System.Windows.Forms.Form.FormClosing\n  - System.Windows.Forms.Form.GetAutoScaleSize(System.Drawing.Font)\n  - System.Windows.Forms.Form.GetScaledBounds(System.Drawing.Rectangle,System.Drawing.SizeF,System.Windows.Forms.BoundsSpecified)\n  - System.Windows.Forms.Form.HelpButton\n  - System.Windows.Forms.Form.HelpButtonClicked\n  - System.Windows.Forms.Form.Icon\n  - System.Windows.Forms.Form.InputLanguageChanged\n  - System.Windows.Forms.Form.InputLanguageChanging\n  - System.Windows.Forms.Form.IsMdiChild\n  - System.Windows.Forms.Form.IsMdiContainer\n  - System.Windows.Forms.Form.IsRestrictedWindow\n  - System.Windows.Forms.Form.KeyPreview\n  - System.Windows.Forms.Form.LayoutMdi(System.Windows.Forms.MdiLayout)\n  - System.Windows.Forms.Form.Load\n  - System.Windows.Forms.Form.Location\n  - System.Windows.Forms.Form.MainMenuStrip\n  - System.Windows.Forms.Form.Margin\n  - System.Windows.Forms.Form.MarginChanged\n  - System.Windows.Forms.Form.MaximizeBox\n  - System.Windows.Forms.Form.MaximizedBounds\n  - System.Windows.Forms.Form.MaximizedBoundsChanged\n  - System.Windows.Forms.Form.MaximumSize\n  - System.Windows.Forms.Form.MaximumSizeChanged\n  - System.Windows.Forms.Form.MdiChildActivate\n  - System.Windows.Forms.Form.MdiChildren\n  - System.Windows.Forms.Form.MdiParent\n  - System.Windows.Forms.Form.Menu\n  - System.Windows.Forms.Form.MenuComplete\n  - System.Windows.Forms.Form.MenuStart\n  - System.Windows.Forms.Form.MergedMenu\n  - System.Windows.Forms.Form.MinimizeBox\n  - System.Windows.Forms.Form.MinimumSize\n  - System.Windows.Forms.Form.MinimumSizeChanged\n  - System.Windows.Forms.Form.Modal\n  - System.Windows.Forms.Form.OnActivated(System.EventArgs)\n  - System.Windows.Forms.Form.OnBackgroundImageChanged(System.EventArgs)\n  - System.Windows.Forms.Form.OnBackgroundImageLayoutChanged(System.EventArgs)\n  - System.Windows.Forms.Form.OnClosed(System.EventArgs)\n  - System.Windows.Forms.Form.OnClosing(System.ComponentModel.CancelEventArgs)\n  - System.Windows.Forms.Form.OnCreateControl\n  - System.Windows.Forms.Form.OnDeactivate(System.EventArgs)\n  - System.Windows.Forms.Form.OnDpiChanged(System.Windows.Forms.DpiChangedEventArgs)\n  - System.Windows.Forms.Form.OnEnabledChanged(System.EventArgs)\n  - System.Windows.Forms.Form.OnEnter(System.EventArgs)\n  - System.Windows.Forms.Form.OnFontChanged(System.EventArgs)\n  - System.Windows.Forms.Form.OnFormClosed(System.Windows.Forms.FormClosedEventArgs)\n  - System.Windows.Forms.Form.OnFormClosing(System.Windows.Forms.FormClosingEventArgs)\n  - System.Windows.Forms.Form.OnGetDpiScaledSize(System.Int32,System.Int32,System.Drawing.Size@)\n  - System.Windows.Forms.Form.OnHandleCreated(System.EventArgs)\n  - System.Windows.Forms.Form.OnHandleDestroyed(System.EventArgs)\n  - System.Windows.Forms.Form.OnHelpButtonClicked(System.ComponentModel.CancelEventArgs)\n  - System.Windows.Forms.Form.OnInputLanguageChanged(System.Windows.Forms.InputLanguageChangedEventArgs)\n  - System.Windows.Forms.Form.OnInputLanguageChanging(System.Windows.Forms.InputLanguageChangingEventArgs)\n  - System.Windows.Forms.Form.OnLayout(System.Windows.Forms.LayoutEventArgs)\n  - System.Windows.Forms.Form.OnLoad(System.EventArgs)\n  - System.Windows.Forms.Form.OnMaximizedBoundsChanged(System.EventArgs)\n  - System.Windows.Forms.Form.OnMaximumSizeChanged(System.EventArgs)\n  - System.Windows.Forms.Form.OnMdiChildActivate(System.EventArgs)\n  - System.Windows.Forms.Form.OnMenuComplete(System.EventArgs)\n  - System.Windows.Forms.Form.OnMenuStart(System.EventArgs)\n  - System.Windows.Forms.Form.OnMinimumSizeChanged(System.EventArgs)\n  - System.Windows.Forms.Form.OnPaint(System.Windows.Forms.PaintEventArgs)\n  - System.Windows.Forms.Form.OnResize(System.EventArgs)\n  - System.Windows.Forms.Form.OnResizeBegin(System.EventArgs)\n  - System.Windows.Forms.Form.OnResizeEnd(System.EventArgs)\n  - System.Windows.Forms.Form.OnRightToLeftLayoutChanged(System.EventArgs)\n  - System.Windows.Forms.Form.OnShown(System.EventArgs)\n  - System.Windows.Forms.Form.OnStyleChanged(System.EventArgs)\n  - System.Windows.Forms.Form.OnTextChanged(System.EventArgs)\n  - System.Windows.Forms.Form.OnVisibleChanged(System.EventArgs)\n  - System.Windows.Forms.Form.Opacity\n  - System.Windows.Forms.Form.OwnedForms\n  - System.Windows.Forms.Form.Owner\n  - System.Windows.Forms.Form.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)\n  - System.Windows.Forms.Form.ProcessDialogChar(System.Char)\n  - System.Windows.Forms.Form.ProcessDialogKey(System.Windows.Forms.Keys)\n  - System.Windows.Forms.Form.ProcessKeyPreview(System.Windows.Forms.Message@)\n  - System.Windows.Forms.Form.ProcessMnemonic(System.Char)\n  - System.Windows.Forms.Form.ProcessTabKey(System.Boolean)\n  - System.Windows.Forms.Form.RemoveOwnedForm(System.Windows.Forms.Form)\n  - System.Windows.Forms.Form.ResizeBegin\n  - System.Windows.Forms.Form.ResizeEnd\n  - System.Windows.Forms.Form.RestoreBounds\n  - System.Windows.Forms.Form.RightToLeftLayout\n  - System.Windows.Forms.Form.RightToLeftLayoutChanged\n  - System.Windows.Forms.Form.ScaleControl(System.Drawing.SizeF,System.Windows.Forms.BoundsSpecified)\n  - System.Windows.Forms.Form.ScaleCore(System.Single,System.Single)\n  - System.Windows.Forms.Form.Select(System.Boolean,System.Boolean)\n  - System.Windows.Forms.Form.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)\n  - System.Windows.Forms.Form.SetClientSizeCore(System.Int32,System.Int32)\n  - System.Windows.Forms.Form.SetDesktopBounds(System.Int32,System.Int32,System.Int32,System.Int32)\n  - System.Windows.Forms.Form.SetDesktopLocation(System.Int32,System.Int32)\n  - System.Windows.Forms.Form.SetVisibleCore(System.Boolean)\n  - System.Windows.Forms.Form.Show(System.Windows.Forms.IWin32Window)\n  - System.Windows.Forms.Form.ShowDialog\n  - System.Windows.Forms.Form.ShowDialog(System.Windows.Forms.IWin32Window)\n  - System.Windows.Forms.Form.ShowIcon\n  - System.Windows.Forms.Form.ShowInTaskbar\n  - System.Windows.Forms.Form.Shown\n  - System.Windows.Forms.Form.ShowWithoutActivation\n  - System.Windows.Forms.Form.Size\n  - System.Windows.Forms.Form.SizeGripStyle\n  - System.Windows.Forms.Form.StartPosition\n  - System.Windows.Forms.Form.TabIndex\n  - System.Windows.Forms.Form.TabIndexChanged\n  - System.Windows.Forms.Form.TabStop\n  - System.Windows.Forms.Form.TabStopChanged\n  - System.Windows.Forms.Form.Text\n  - System.Windows.Forms.Form.TopLevel\n  - System.Windows.Forms.Form.TopMost\n  - System.Windows.Forms.Form.ToString\n  - System.Windows.Forms.Form.TransparencyKey\n  - System.Windows.Forms.Form.UpdateDefaultButton\n  - System.Windows.Forms.Form.ValidateChildren\n  - System.Windows.Forms.Form.ValidateChildren(System.Windows.Forms.ValidationConstraints)\n  - System.Windows.Forms.Form.WindowState\n  - System.Windows.Forms.Form.WndProc(System.Windows.Forms.Message@)\n  langs:\n  - csharp\n  name: Form\n  nameWithType: Form\n  fullName: System.Windows.Forms.Form\n  type: Class\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Represents a window or dialog box that makes up an application's user interface.\n  remarks: \"A <xref:System.Windows.Forms.Form> is a representation of any window displayed in your application. The <xref:System.Windows.Forms.Form> class can be used to create standard, tool, borderless, and floating windows. You can also use the <xref:System.Windows.Forms.Form> class to create modal windows such as a dialog box. A special kind of form, the multiple-document interface (MDI) form, can contain other forms called MDI child forms. An MDI form is created by setting the <xref:System.Windows.Forms.Form.IsMdiContainer%2A> property to `true`. MDI child forms are created by setting the <xref:System.Windows.Forms.Form.MdiParent%2A> property to the MDI parent form that will contain the child form.  \\n  \\n Using the properties available in the <xref:System.Windows.Forms.Form> class, you can determine the appearance, size, color, and window management features of the window or dialog box you are creating. The <xref:System.Windows.Forms.Control.Text%2A> property allows you to specify the caption of the window in the title bar. The <xref:System.Windows.Forms.Form.Size%2A> and <xref:System.Windows.Forms.Form.DesktopLocation%2A> properties allow you to define the size and position of the window when it is displayed. You can use the <xref:System.Windows.Forms.Control.ForeColor%2A> color property to change the default foreground color of all controls placed on the form. The <xref:System.Windows.Forms.Form.FormBorderStyle%2A>, <xref:System.Windows.Forms.Form.MinimizeBox%2A>, and <xref:System.Windows.Forms.Form.MaximizeBox%2A> properties allow you to control whether the form can be minimized, maximized, or resized at run time.  \\n  \\n In addition to properties, you can use the methods of the class to manipulate a form. For example, you can use the <xref:System.Windows.Forms.Form.ShowDialog%2A> method to show a form as a modal dialog box. You can use the <xref:System.Windows.Forms.Form.SetDesktopLocation%2A> method to position the form on the desktop.  \\n  \\n The events of the <xref:System.Windows.Forms.Form> class allow you to respond to actions performed on the form. You can use the <xref:System.Windows.Forms.Form.Activated> event to perform operations such as updating the data displayed in the controls of the form when the form is activated.  \\n  \\n You can use a form as the starting class in your application by placing a method called `Main` in the class. In the `Main` method add code to create and show the form. You will also need to add the `STAThread` attribute to the `Main` method in order for the form to run. When the starting form is closed, the application is also closed.  \\n  \\n If you set the <xref:System.Windows.Forms.Control.Enabled%2A> property to `false` before the <xref:System.Windows.Forms.Form> is visible (for example, setting <xref:System.Windows.Forms.Control.Enabled%2A> to false in the [!INCLUDE[TLA#tla_visualstu](~/includes/tlasharptla-visualstu-md.md)] designer), the minimize, maximize, close, and system buttons remain enabled. If you set <xref:System.Windows.Forms.Control.Enabled%2A> to `false` after the <xref:System.Windows.Forms.Form> is visible (for example, when the Load event occurs), the buttons are disabled.\"\n  example:\n  - \"The following code example creates a new instance of a <xref:System.Windows.Forms.Form> and calls the <xref:System.Windows.Forms.Form.ShowDialog%2A> method to display the form as a dialog box. The example sets the <xref:System.Windows.Forms.Form.FormBorderStyle%2A>, <xref:System.Windows.Forms.Form.AcceptButton%2A>, <xref:System.Windows.Forms.Form.CancelButton%2A>, <xref:System.Windows.Forms.Form.MinimizeBox%2A>, <xref:System.Windows.Forms.Form.MaximizeBox%2A>, and <xref:System.Windows.Forms.Form.StartPosition%2A> properties to change the appearance and functionality of the form to a dialog box. The example also uses the <xref:System.Windows.Forms.Form.ControlCollection.Add%2A> method of the form's <xref:System.Windows.Forms.Control.Controls%2A> collection to add two <xref:System.Windows.Forms.Button> controls. The example uses the <xref:System.Windows.Forms.Form.HelpButton%2A> property to display a help button in the caption bar of the dialog box.  \\n  \\n [!code-cpp[Classic Form.AcceptButton Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Form.AcceptButton Example/CPP/source.cpp#1)]\\n [!code-csharp[Classic Form.AcceptButton Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Form.AcceptButton Example/CS/source.cs#1)]\\n [!code-vb[Classic Form.AcceptButton Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Form.AcceptButton Example/VB/source.vb#1)]\"\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.AutoDispatch)]\n\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public class Form : System.Windows.Forms.ContainerControl\n  inheritance:\n  - System.Object\n  - System.MarshalByRefObject\n  - System.ComponentModel.Component\n  - System.Windows.Forms.Control\n  - System.Windows.Forms.ScrollableControl\n  - System.Windows.Forms.ContainerControl\n  derivedClasses:\n  - System.ComponentModel.Design.CollectionEditor.CollectionForm\n  - System.Messaging.Design.QueuePathDialog\n  - System.ServiceProcess.Design.ServiceInstallerDialog\n  - System.Web.UI.Design.WebControls.CalendarAutoFormatDialog\n  - System.Web.UI.Design.WebControls.RegexEditorDialog\n  - System.Windows.Forms.PrintPreviewDialog\n  - System.Windows.Forms.ThreadExceptionDialog\n  - System.Windows.Forms.Design.ComponentEditorForm\n  - System.Workflow.Activities.Rules.Design.RuleConditionDialog\n  - System.Workflow.Activities.Rules.Design.RuleSetDialog\n  - System.Workflow.ComponentModel.Design.ThemeConfigurationDialog\n  - System.Workflow.ComponentModel.Design.TypeBrowserDialog\n  - System.Workflow.ComponentModel.Design.WorkflowPageSetupDialog\n  implements: []\n  inheritedMembers:\n  - System.ComponentModel.Component.Container\n  - System.ComponentModel.Component.DesignMode\n  - System.ComponentModel.Component.Dispose\n  - System.ComponentModel.Component.Disposed\n  - System.ComponentModel.Component.Events\n  - System.ComponentModel.Component.GetService(System.Type)\n  - System.MarshalByRefObject.CreateObjRef(System.Type)\n  - System.MarshalByRefObject.GetLifetimeService\n  - System.MarshalByRefObject.InitializeLifetimeService\n  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Windows.Forms.ContainerControl.ActiveControl\n  - System.Windows.Forms.ContainerControl.AutoScaleDimensions\n  - System.Windows.Forms.ContainerControl.AutoScaleFactor\n  - System.Windows.Forms.ContainerControl.AutoScaleMode\n  - System.Windows.Forms.ContainerControl.BindingContext\n  - System.Windows.Forms.ContainerControl.CanEnableIme\n  - System.Windows.Forms.ContainerControl.CurrentAutoScaleDimensions\n  - System.Windows.Forms.ContainerControl.OnAutoValidateChanged(System.EventArgs)\n  - System.Windows.Forms.ContainerControl.OnParentChanged(System.EventArgs)\n  - System.Windows.Forms.ContainerControl.ParentForm\n  - System.Windows.Forms.ContainerControl.PerformAutoScale\n  - System.Windows.Forms.ContainerControl.System#Windows#Forms#IContainerControl#ActivateControl(System.Windows.Forms.Control)\n  - System.Windows.Forms.ContainerControl.Validate\n  - System.Windows.Forms.ContainerControl.Validate(System.Boolean)\n  - System.Windows.Forms.Control.AccessibilityNotifyClients(System.Windows.Forms.AccessibleEvents,System.Int32)\n  - System.Windows.Forms.Control.AccessibilityNotifyClients(System.Windows.Forms.AccessibleEvents,System.Int32,System.Int32)\n  - System.Windows.Forms.Control.AccessibilityObject\n  - System.Windows.Forms.Control.AccessibleDefaultActionDescription\n  - System.Windows.Forms.Control.AccessibleDescription\n  - System.Windows.Forms.Control.AccessibleName\n  - System.Windows.Forms.Control.AccessibleRole\n  - System.Windows.Forms.Control.AllowDrop\n  - System.Windows.Forms.Control.Anchor\n  - System.Windows.Forms.Control.AutoScrollOffset\n  - System.Windows.Forms.Control.BackColorChanged\n  - System.Windows.Forms.Control.BackgroundImage\n  - System.Windows.Forms.Control.BackgroundImageChanged\n  - System.Windows.Forms.Control.BackgroundImageLayout\n  - System.Windows.Forms.Control.BackgroundImageLayoutChanged\n  - System.Windows.Forms.Control.BeginInvoke(System.Delegate)\n  - System.Windows.Forms.Control.BeginInvoke(System.Delegate,System.Object[])\n  - System.Windows.Forms.Control.BindingContextChanged\n  - System.Windows.Forms.Control.Bottom\n  - System.Windows.Forms.Control.Bounds\n  - System.Windows.Forms.Control.BringToFront\n  - System.Windows.Forms.Control.CanFocus\n  - System.Windows.Forms.Control.CanRaiseEvents\n  - System.Windows.Forms.Control.CanSelect\n  - System.Windows.Forms.Control.Capture\n  - System.Windows.Forms.Control.CausesValidation\n  - System.Windows.Forms.Control.CausesValidationChanged\n  - System.Windows.Forms.Control.ChangeUICues\n  - System.Windows.Forms.Control.CheckForIllegalCrossThreadCalls\n  - System.Windows.Forms.Control.Click\n  - System.Windows.Forms.Control.ClientRectangle\n  - System.Windows.Forms.Control.ClientSizeChanged\n  - System.Windows.Forms.Control.CompanyName\n  - System.Windows.Forms.Control.Contains(System.Windows.Forms.Control)\n  - System.Windows.Forms.Control.ContainsFocus\n  - System.Windows.Forms.Control.ContextMenu\n  - System.Windows.Forms.Control.ContextMenuChanged\n  - System.Windows.Forms.Control.ContextMenuStrip\n  - System.Windows.Forms.Control.ContextMenuStripChanged\n  - System.Windows.Forms.Control.ControlAdded\n  - System.Windows.Forms.Control.ControlRemoved\n  - System.Windows.Forms.Control.Controls\n  - System.Windows.Forms.Control.CreateAccessibilityInstance\n  - System.Windows.Forms.Control.CreateControl\n  - System.Windows.Forms.Control.Created\n  - System.Windows.Forms.Control.CreateGraphics\n  - System.Windows.Forms.Control.Cursor\n  - System.Windows.Forms.Control.CursorChanged\n  - System.Windows.Forms.Control.DataBindings\n  - System.Windows.Forms.Control.DefaultBackColor\n  - System.Windows.Forms.Control.DefaultCursor\n  - System.Windows.Forms.Control.DefaultFont\n  - System.Windows.Forms.Control.DefaultForeColor\n  - System.Windows.Forms.Control.DefaultMargin\n  - System.Windows.Forms.Control.DefaultMaximumSize\n  - System.Windows.Forms.Control.DefaultMinimumSize\n  - System.Windows.Forms.Control.DefaultPadding\n  - System.Windows.Forms.Control.DestroyHandle\n  - System.Windows.Forms.Control.DeviceDpi\n  - System.Windows.Forms.Control.Disposing\n  - System.Windows.Forms.Control.Dock\n  - System.Windows.Forms.Control.DockChanged\n  - System.Windows.Forms.Control.DoDragDrop(System.Object,System.Windows.Forms.DragDropEffects)\n  - System.Windows.Forms.Control.DoubleBuffered\n  - System.Windows.Forms.Control.DoubleClick\n  - System.Windows.Forms.Control.DpiChangedAfterParent\n  - System.Windows.Forms.Control.DpiChangedBeforeParent\n  - System.Windows.Forms.Control.DragDrop\n  - System.Windows.Forms.Control.DragEnter\n  - System.Windows.Forms.Control.DragLeave\n  - System.Windows.Forms.Control.DragOver\n  - System.Windows.Forms.Control.DrawToBitmap(System.Drawing.Bitmap,System.Drawing.Rectangle)\n  - System.Windows.Forms.Control.Enabled\n  - System.Windows.Forms.Control.EnabledChanged\n  - System.Windows.Forms.Control.EndInvoke(System.IAsyncResult)\n  - System.Windows.Forms.Control.Enter\n  - System.Windows.Forms.Control.FindForm\n  - System.Windows.Forms.Control.Focus\n  - System.Windows.Forms.Control.Focused\n  - System.Windows.Forms.Control.Font\n  - System.Windows.Forms.Control.FontChanged\n  - System.Windows.Forms.Control.FontHeight\n  - System.Windows.Forms.Control.ForeColor\n  - System.Windows.Forms.Control.ForeColorChanged\n  - System.Windows.Forms.Control.FromChildHandle(System.IntPtr)\n  - System.Windows.Forms.Control.FromHandle(System.IntPtr)\n  - System.Windows.Forms.Control.GetAccessibilityObjectById(System.Int32)\n  - System.Windows.Forms.Control.GetAutoSizeMode\n  - System.Windows.Forms.Control.GetChildAtPoint(System.Drawing.Point)\n  - System.Windows.Forms.Control.GetChildAtPoint(System.Drawing.Point,System.Windows.Forms.GetChildAtPointSkip)\n  - System.Windows.Forms.Control.GetContainerControl\n  - System.Windows.Forms.Control.GetNextControl(System.Windows.Forms.Control,System.Boolean)\n  - System.Windows.Forms.Control.GetPreferredSize(System.Drawing.Size)\n  - System.Windows.Forms.Control.GetStyle(System.Windows.Forms.ControlStyles)\n  - System.Windows.Forms.Control.GetTopLevel\n  - System.Windows.Forms.Control.GiveFeedback\n  - System.Windows.Forms.Control.GotFocus\n  - System.Windows.Forms.Control.Handle\n  - System.Windows.Forms.Control.HandleCreated\n  - System.Windows.Forms.Control.HandleDestroyed\n  - System.Windows.Forms.Control.HasChildren\n  - System.Windows.Forms.Control.Height\n  - System.Windows.Forms.Control.HelpRequested\n  - System.Windows.Forms.Control.Hide\n  - System.Windows.Forms.Control.ImeMode\n  - System.Windows.Forms.Control.ImeModeBase\n  - System.Windows.Forms.Control.ImeModeChanged\n  - System.Windows.Forms.Control.InitLayout\n  - System.Windows.Forms.Control.Invalidate\n  - System.Windows.Forms.Control.Invalidate(System.Boolean)\n  - System.Windows.Forms.Control.Invalidate(System.Drawing.Rectangle)\n  - System.Windows.Forms.Control.Invalidate(System.Drawing.Rectangle,System.Boolean)\n  - System.Windows.Forms.Control.Invalidate(System.Drawing.Region)\n  - System.Windows.Forms.Control.Invalidate(System.Drawing.Region,System.Boolean)\n  - System.Windows.Forms.Control.Invalidated\n  - System.Windows.Forms.Control.Invoke(System.Delegate)\n  - System.Windows.Forms.Control.Invoke(System.Delegate,System.Object[])\n  - System.Windows.Forms.Control.InvokeGotFocus(System.Windows.Forms.Control,System.EventArgs)\n  - System.Windows.Forms.Control.InvokeLostFocus(System.Windows.Forms.Control,System.EventArgs)\n  - System.Windows.Forms.Control.InvokeOnClick(System.Windows.Forms.Control,System.EventArgs)\n  - System.Windows.Forms.Control.InvokePaint(System.Windows.Forms.Control,System.Windows.Forms.PaintEventArgs)\n  - System.Windows.Forms.Control.InvokePaintBackground(System.Windows.Forms.Control,System.Windows.Forms.PaintEventArgs)\n  - System.Windows.Forms.Control.InvokeRequired\n  - System.Windows.Forms.Control.IsAccessible\n  - System.Windows.Forms.Control.IsDisposed\n  - System.Windows.Forms.Control.IsHandleCreated\n  - System.Windows.Forms.Control.IsInputChar(System.Char)\n  - System.Windows.Forms.Control.IsInputKey(System.Windows.Forms.Keys)\n  - System.Windows.Forms.Control.IsKeyLocked(System.Windows.Forms.Keys)\n  - System.Windows.Forms.Control.IsMirrored\n  - System.Windows.Forms.Control.IsMnemonic(System.Char,System.String)\n  - System.Windows.Forms.Control.KeyDown\n  - System.Windows.Forms.Control.KeyPress\n  - System.Windows.Forms.Control.KeyUp\n  - System.Windows.Forms.Control.Layout\n  - System.Windows.Forms.Control.LayoutEngine\n  - System.Windows.Forms.Control.Leave\n  - System.Windows.Forms.Control.Left\n  - System.Windows.Forms.Control.LocationChanged\n  - System.Windows.Forms.Control.LogicalToDeviceUnits(System.Int32)\n  - System.Windows.Forms.Control.LostFocus\n  - System.Windows.Forms.Control.ModifierKeys\n  - System.Windows.Forms.Control.MouseButtons\n  - System.Windows.Forms.Control.MouseCaptureChanged\n  - System.Windows.Forms.Control.MouseClick\n  - System.Windows.Forms.Control.MouseDoubleClick\n  - System.Windows.Forms.Control.MouseDown\n  - System.Windows.Forms.Control.MouseEnter\n  - System.Windows.Forms.Control.MouseHover\n  - System.Windows.Forms.Control.MouseLeave\n  - System.Windows.Forms.Control.MouseMove\n  - System.Windows.Forms.Control.MousePosition\n  - System.Windows.Forms.Control.MouseUp\n  - System.Windows.Forms.Control.MouseWheel\n  - System.Windows.Forms.Control.Move\n  - System.Windows.Forms.Control.Name\n  - System.Windows.Forms.Control.NotifyInvalidate(System.Drawing.Rectangle)\n  - System.Windows.Forms.Control.OnAutoSizeChanged(System.EventArgs)\n  - System.Windows.Forms.Control.OnBackColorChanged(System.EventArgs)\n  - System.Windows.Forms.Control.OnBindingContextChanged(System.EventArgs)\n  - System.Windows.Forms.Control.OnCausesValidationChanged(System.EventArgs)\n  - System.Windows.Forms.Control.OnChangeUICues(System.Windows.Forms.UICuesEventArgs)\n  - System.Windows.Forms.Control.OnClick(System.EventArgs)\n  - System.Windows.Forms.Control.OnClientSizeChanged(System.EventArgs)\n  - System.Windows.Forms.Control.OnContextMenuChanged(System.EventArgs)\n  - System.Windows.Forms.Control.OnContextMenuStripChanged(System.EventArgs)\n  - System.Windows.Forms.Control.OnControlAdded(System.Windows.Forms.ControlEventArgs)\n  - System.Windows.Forms.Control.OnControlRemoved(System.Windows.Forms.ControlEventArgs)\n  - System.Windows.Forms.Control.OnCursorChanged(System.EventArgs)\n  - System.Windows.Forms.Control.OnDockChanged(System.EventArgs)\n  - System.Windows.Forms.Control.OnDoubleClick(System.EventArgs)\n  - System.Windows.Forms.Control.OnDpiChangedAfterParent(System.EventArgs)\n  - System.Windows.Forms.Control.OnDpiChangedBeforeParent(System.EventArgs)\n  - System.Windows.Forms.Control.OnDragDrop(System.Windows.Forms.DragEventArgs)\n  - System.Windows.Forms.Control.OnDragEnter(System.Windows.Forms.DragEventArgs)\n  - System.Windows.Forms.Control.OnDragLeave(System.EventArgs)\n  - System.Windows.Forms.Control.OnDragOver(System.Windows.Forms.DragEventArgs)\n  - System.Windows.Forms.Control.OnForeColorChanged(System.EventArgs)\n  - System.Windows.Forms.Control.OnGiveFeedback(System.Windows.Forms.GiveFeedbackEventArgs)\n  - System.Windows.Forms.Control.OnGotFocus(System.EventArgs)\n  - System.Windows.Forms.Control.OnHelpRequested(System.Windows.Forms.HelpEventArgs)\n  - System.Windows.Forms.Control.OnImeModeChanged(System.EventArgs)\n  - System.Windows.Forms.Control.OnInvalidated(System.Windows.Forms.InvalidateEventArgs)\n  - System.Windows.Forms.Control.OnKeyDown(System.Windows.Forms.KeyEventArgs)\n  - System.Windows.Forms.Control.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)\n  - System.Windows.Forms.Control.OnKeyUp(System.Windows.Forms.KeyEventArgs)\n  - System.Windows.Forms.Control.OnLeave(System.EventArgs)\n  - System.Windows.Forms.Control.OnLocationChanged(System.EventArgs)\n  - System.Windows.Forms.Control.OnLostFocus(System.EventArgs)\n  - System.Windows.Forms.Control.OnMarginChanged(System.EventArgs)\n  - System.Windows.Forms.Control.OnMouseCaptureChanged(System.EventArgs)\n  - System.Windows.Forms.Control.OnMouseClick(System.Windows.Forms.MouseEventArgs)\n  - System.Windows.Forms.Control.OnMouseDoubleClick(System.Windows.Forms.MouseEventArgs)\n  - System.Windows.Forms.Control.OnMouseDown(System.Windows.Forms.MouseEventArgs)\n  - System.Windows.Forms.Control.OnMouseEnter(System.EventArgs)\n  - System.Windows.Forms.Control.OnMouseHover(System.EventArgs)\n  - System.Windows.Forms.Control.OnMouseLeave(System.EventArgs)\n  - System.Windows.Forms.Control.OnMouseMove(System.Windows.Forms.MouseEventArgs)\n  - System.Windows.Forms.Control.OnMouseUp(System.Windows.Forms.MouseEventArgs)\n  - System.Windows.Forms.Control.OnMove(System.EventArgs)\n  - System.Windows.Forms.Control.OnNotifyMessage(System.Windows.Forms.Message)\n  - System.Windows.Forms.Control.OnParentBackColorChanged(System.EventArgs)\n  - System.Windows.Forms.Control.OnParentBackgroundImageChanged(System.EventArgs)\n  - System.Windows.Forms.Control.OnParentBindingContextChanged(System.EventArgs)\n  - System.Windows.Forms.Control.OnParentCursorChanged(System.EventArgs)\n  - System.Windows.Forms.Control.OnParentEnabledChanged(System.EventArgs)\n  - System.Windows.Forms.Control.OnParentFontChanged(System.EventArgs)\n  - System.Windows.Forms.Control.OnParentForeColorChanged(System.EventArgs)\n  - System.Windows.Forms.Control.OnParentRightToLeftChanged(System.EventArgs)\n  - System.Windows.Forms.Control.OnParentVisibleChanged(System.EventArgs)\n  - System.Windows.Forms.Control.OnPreviewKeyDown(System.Windows.Forms.PreviewKeyDownEventArgs)\n  - System.Windows.Forms.Control.OnPrint(System.Windows.Forms.PaintEventArgs)\n  - System.Windows.Forms.Control.OnQueryContinueDrag(System.Windows.Forms.QueryContinueDragEventArgs)\n  - System.Windows.Forms.Control.OnRegionChanged(System.EventArgs)\n  - System.Windows.Forms.Control.OnSizeChanged(System.EventArgs)\n  - System.Windows.Forms.Control.OnSystemColorsChanged(System.EventArgs)\n  - System.Windows.Forms.Control.OnTabIndexChanged(System.EventArgs)\n  - System.Windows.Forms.Control.OnTabStopChanged(System.EventArgs)\n  - System.Windows.Forms.Control.OnValidated(System.EventArgs)\n  - System.Windows.Forms.Control.OnValidating(System.ComponentModel.CancelEventArgs)\n  - System.Windows.Forms.Control.Padding\n  - System.Windows.Forms.Control.PaddingChanged\n  - System.Windows.Forms.Control.Paint\n  - System.Windows.Forms.Control.Parent\n  - System.Windows.Forms.Control.ParentChanged\n  - System.Windows.Forms.Control.PerformLayout\n  - System.Windows.Forms.Control.PerformLayout(System.Windows.Forms.Control,System.String)\n  - System.Windows.Forms.Control.PointToClient(System.Drawing.Point)\n  - System.Windows.Forms.Control.PointToScreen(System.Drawing.Point)\n  - System.Windows.Forms.Control.PreferredSize\n  - System.Windows.Forms.Control.PreProcessControlMessage(System.Windows.Forms.Message@)\n  - System.Windows.Forms.Control.PreProcessMessage(System.Windows.Forms.Message@)\n  - System.Windows.Forms.Control.PreviewKeyDown\n  - System.Windows.Forms.Control.ProcessKeyEventArgs(System.Windows.Forms.Message@)\n  - System.Windows.Forms.Control.ProcessKeyMessage(System.Windows.Forms.Message@)\n  - System.Windows.Forms.Control.ProductName\n  - System.Windows.Forms.Control.ProductVersion\n  - System.Windows.Forms.Control.PropagatingImeMode\n  - System.Windows.Forms.Control.QueryAccessibilityHelp\n  - System.Windows.Forms.Control.QueryContinueDrag\n  - System.Windows.Forms.Control.RaiseDragEvent(System.Object,System.Windows.Forms.DragEventArgs)\n  - System.Windows.Forms.Control.RaiseKeyEvent(System.Object,System.Windows.Forms.KeyEventArgs)\n  - System.Windows.Forms.Control.RaiseMouseEvent(System.Object,System.Windows.Forms.MouseEventArgs)\n  - System.Windows.Forms.Control.RaisePaintEvent(System.Object,System.Windows.Forms.PaintEventArgs)\n  - System.Windows.Forms.Control.RecreateHandle\n  - System.Windows.Forms.Control.RecreatingHandle\n  - System.Windows.Forms.Control.RectangleToClient(System.Drawing.Rectangle)\n  - System.Windows.Forms.Control.RectangleToScreen(System.Drawing.Rectangle)\n  - System.Windows.Forms.Control.ReflectMessage(System.IntPtr,System.Windows.Forms.Message@)\n  - System.Windows.Forms.Control.Refresh\n  - System.Windows.Forms.Control.Region\n  - System.Windows.Forms.Control.RegionChanged\n  - System.Windows.Forms.Control.RenderRightToLeft\n  - System.Windows.Forms.Control.RescaleConstantsForDpi(System.Int32,System.Int32)\n  - System.Windows.Forms.Control.ResetBackColor\n  - System.Windows.Forms.Control.ResetBindings\n  - System.Windows.Forms.Control.ResetCursor\n  - System.Windows.Forms.Control.ResetFont\n  - System.Windows.Forms.Control.ResetForeColor\n  - System.Windows.Forms.Control.ResetImeMode\n  - System.Windows.Forms.Control.ResetMouseEventArgs\n  - System.Windows.Forms.Control.ResetRightToLeft\n  - System.Windows.Forms.Control.ResetText\n  - System.Windows.Forms.Control.Resize\n  - System.Windows.Forms.Control.ResizeRedraw\n  - System.Windows.Forms.Control.ResumeLayout\n  - System.Windows.Forms.Control.ResumeLayout(System.Boolean)\n  - System.Windows.Forms.Control.Right\n  - System.Windows.Forms.Control.RightToLeft\n  - System.Windows.Forms.Control.RightToLeftChanged\n  - System.Windows.Forms.Control.RtlTranslateAlignment(System.Drawing.ContentAlignment)\n  - System.Windows.Forms.Control.RtlTranslateAlignment(System.Windows.Forms.HorizontalAlignment)\n  - System.Windows.Forms.Control.RtlTranslateAlignment(System.Windows.Forms.LeftRightAlignment)\n  - System.Windows.Forms.Control.RtlTranslateContent(System.Drawing.ContentAlignment)\n  - System.Windows.Forms.Control.RtlTranslateHorizontal(System.Windows.Forms.HorizontalAlignment)\n  - System.Windows.Forms.Control.RtlTranslateLeftRight(System.Windows.Forms.LeftRightAlignment)\n  - System.Windows.Forms.Control.Scale(System.Drawing.SizeF)\n  - System.Windows.Forms.Control.Scale(System.Single)\n  - System.Windows.Forms.Control.Scale(System.Single,System.Single)\n  - System.Windows.Forms.Control.ScaleBitmapLogicalToDevice(System.Drawing.Bitmap@)\n  - System.Windows.Forms.Control.ScaleChildren\n  - System.Windows.Forms.Control.Select\n  - System.Windows.Forms.Control.SelectNextControl(System.Windows.Forms.Control,System.Boolean,System.Boolean,System.Boolean,System.Boolean)\n  - System.Windows.Forms.Control.SendToBack\n  - System.Windows.Forms.Control.SetAutoSizeMode(System.Windows.Forms.AutoSizeMode)\n  - System.Windows.Forms.Control.SetBounds(System.Int32,System.Int32,System.Int32,System.Int32)\n  - System.Windows.Forms.Control.SetBounds(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)\n  - System.Windows.Forms.Control.SetStyle(System.Windows.Forms.ControlStyles,System.Boolean)\n  - System.Windows.Forms.Control.SetTopLevel(System.Boolean)\n  - System.Windows.Forms.Control.Show\n  - System.Windows.Forms.Control.ShowFocusCues\n  - System.Windows.Forms.Control.ShowKeyboardCues\n  - System.Windows.Forms.Control.Site\n  - System.Windows.Forms.Control.SizeChanged\n  - System.Windows.Forms.Control.SizeFromClientSize(System.Drawing.Size)\n  - System.Windows.Forms.Control.StyleChanged\n  - System.Windows.Forms.Control.SuspendLayout\n  - System.Windows.Forms.Control.System#Windows#Forms#IDropTarget#OnDragDrop(System.Windows.Forms.DragEventArgs)\n  - System.Windows.Forms.Control.System#Windows#Forms#IDropTarget#OnDragEnter(System.Windows.Forms.DragEventArgs)\n  - System.Windows.Forms.Control.System#Windows#Forms#IDropTarget#OnDragLeave(System.EventArgs)\n  - System.Windows.Forms.Control.System#Windows#Forms#IDropTarget#OnDragOver(System.Windows.Forms.DragEventArgs)\n  - System.Windows.Forms.Control.SystemColorsChanged\n  - System.Windows.Forms.Control.Tag\n  - System.Windows.Forms.Control.TextChanged\n  - System.Windows.Forms.Control.Top\n  - System.Windows.Forms.Control.TopLevelControl\n  - System.Windows.Forms.Control.Update\n  - System.Windows.Forms.Control.UpdateBounds\n  - System.Windows.Forms.Control.UpdateBounds(System.Int32,System.Int32,System.Int32,System.Int32)\n  - System.Windows.Forms.Control.UpdateBounds(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)\n  - System.Windows.Forms.Control.UpdateStyles\n  - System.Windows.Forms.Control.UpdateZOrder\n  - System.Windows.Forms.Control.UseWaitCursor\n  - System.Windows.Forms.Control.Validated\n  - System.Windows.Forms.Control.Validating\n  - System.Windows.Forms.Control.Visible\n  - System.Windows.Forms.Control.VisibleChanged\n  - System.Windows.Forms.Control.Width\n  - System.Windows.Forms.Control.WindowTarget\n  - System.Windows.Forms.ScrollableControl.AutoScrollMargin\n  - System.Windows.Forms.ScrollableControl.AutoScrollMinSize\n  - System.Windows.Forms.ScrollableControl.AutoScrollPosition\n  - System.Windows.Forms.ScrollableControl.DisplayRectangle\n  - System.Windows.Forms.ScrollableControl.DockPadding\n  - System.Windows.Forms.ScrollableControl.GetScrollState(System.Int32)\n  - System.Windows.Forms.ScrollableControl.HorizontalScroll\n  - System.Windows.Forms.ScrollableControl.HScroll\n  - System.Windows.Forms.ScrollableControl.OnMouseWheel(System.Windows.Forms.MouseEventArgs)\n  - System.Windows.Forms.ScrollableControl.OnPaddingChanged(System.EventArgs)\n  - System.Windows.Forms.ScrollableControl.OnPaintBackground(System.Windows.Forms.PaintEventArgs)\n  - System.Windows.Forms.ScrollableControl.OnRightToLeftChanged(System.EventArgs)\n  - System.Windows.Forms.ScrollableControl.OnScroll(System.Windows.Forms.ScrollEventArgs)\n  - System.Windows.Forms.ScrollableControl.Scroll\n  - System.Windows.Forms.ScrollableControl.ScrollControlIntoView(System.Windows.Forms.Control)\n  - System.Windows.Forms.ScrollableControl.ScrollStateAutoScrolling\n  - System.Windows.Forms.ScrollableControl.ScrollStateFullDrag\n  - System.Windows.Forms.ScrollableControl.ScrollStateHScrollVisible\n  - System.Windows.Forms.ScrollableControl.ScrollStateUserHasScrolled\n  - System.Windows.Forms.ScrollableControl.ScrollStateVScrollVisible\n  - System.Windows.Forms.ScrollableControl.ScrollToControl(System.Windows.Forms.Control)\n  - System.Windows.Forms.ScrollableControl.SetAutoScrollMargin(System.Int32,System.Int32)\n  - System.Windows.Forms.ScrollableControl.SetDisplayRectLocation(System.Int32,System.Int32)\n  - System.Windows.Forms.ScrollableControl.SetScrollState(System.Int32,System.Boolean)\n  - System.Windows.Forms.ScrollableControl.VerticalScroll\n  - System.Windows.Forms.ScrollableControl.VScroll\n  attributes:\n  - type: System.Runtime.InteropServices.ClassInterfaceAttribute\n  - type: System.Runtime.InteropServices.ComVisibleAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Form.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Form.#ctor\n  commentId: M:System.Windows.Forms.Form.#ctor\n  id: '#ctor'\n  parent: System.Windows.Forms.Form\n  langs:\n  - csharp\n  name: Form()\n  nameWithType: Form.Form()\n  fullName: Form.Form()\n  type: Constructor\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Initializes a new instance of the <xref href=\"System.Windows.Forms.Form\"></xref> class.\n  remarks: The default size of a form is 300 pixels in height and 300 pixels in width.\n  example:\n  - \"The following code example creates a new instance of a <xref:System.Windows.Forms.Form> and calls the <xref:System.Windows.Forms.Form.ShowDialog%2A> method to display the form as a dialog box. The example sets the <xref:System.Windows.Forms.Form.FormBorderStyle%2A>, <xref:System.Windows.Forms.Form.AcceptButton%2A>, <xref:System.Windows.Forms.Form.CancelButton%2A>, <xref:System.Windows.Forms.Form.MinimizeBox%2A>, <xref:System.Windows.Forms.Form.MaximizeBox%2A>, and <xref:System.Windows.Forms.Form.StartPosition%2A> properties to change the appearance and functionality of the form to a dialog box. The example also sets uses the <xref:System.Windows.Forms.Form.ControlCollection.Add%2A> method of the form's <xref:System.Windows.Forms.Control.Controls%2A> collection to add two <xref:System.Windows.Forms.Button> controls. The example uses the <xref:System.Windows.Forms.Form.HelpButton%2A> property to display a help button in the caption bar of the dialog box.  \\n  \\n [!code-cpp[Classic Form.AcceptButton Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Form.AcceptButton Example/CPP/source.cpp#1)]\\n [!code-csharp[Classic Form.AcceptButton Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Form.AcceptButton Example/CS/source.cs#1)]\\n [!code-vb[Classic Form.AcceptButton Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Form.AcceptButton Example/VB/source.vb#1)]\"\n  syntax:\n    content: public Form ();\n    parameters: []\n  overload: System.Windows.Forms.Form.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Form.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Form.AcceptButton\n  commentId: P:System.Windows.Forms.Form.AcceptButton\n  id: AcceptButton\n  parent: System.Windows.Forms.Form\n  langs:\n  - csharp\n  name: AcceptButton\n  nameWithType: Form.AcceptButton\n  fullName: Form.AcceptButton\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets or sets the button on the form that is clicked when the user presses the ENTER key.\n  remarks: \"This property enables you to designate a default action to occur when the user presses the ENTER key in your application. The button assigned to this property must be an <xref:System.Windows.Forms.IButtonControl> that is on the current form or located within a container on the current form.  \\n  \\n You can use this property to allow the user to quickly navigate a simple form by allowing them to simply press the ENTER key when they are finished instead of manually clicking the accept button with their mouse.  \\n  \\n The accept button might not be activated if the currently selected control on the form intercepts the ENTER key and processes it. For example, a multiline text box control allows the ENTER key to be pressed when it is selected to insert a new line character in the control.\"\n  example:\n  - \"The following code example creates a new instance of a <xref:System.Windows.Forms.Form> and calls the <xref:System.Windows.Forms.Form.ShowDialog%2A> method to display the form as a dialog box. The example sets the <xref:System.Windows.Forms.Form.FormBorderStyle%2A>, <xref:System.Windows.Forms.Form.AcceptButton%2A>, <xref:System.Windows.Forms.Form.CancelButton%2A>, <xref:System.Windows.Forms.Form.MinimizeBox%2A>, <xref:System.Windows.Forms.Form.MaximizeBox%2A>, and <xref:System.Windows.Forms.Form.StartPosition%2A> properties to change the appearance and functionality of the form to a dialog box. The example also uses the <xref:System.Windows.Forms.Form.ControlCollection.Add%2A> method of the form's <xref:System.Windows.Forms.Control.Controls%2A> collection to add two <xref:System.Windows.Forms.Button> controls. The example uses the <xref:System.Windows.Forms.Form.HelpButton%2A> property to display a help button in the caption bar of the dialog box.  \\n  \\n [!code-cpp[Classic Form.AcceptButton Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Form.AcceptButton Example/CPP/source.cpp#1)]\\n [!code-csharp[Classic Form.AcceptButton Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Form.AcceptButton Example/CS/source.cs#1)]\\n [!code-vb[Classic Form.AcceptButton Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Form.AcceptButton Example/VB/source.vb#1)]\"\n  syntax:\n    content: public System.Windows.Forms.IButtonControl AcceptButton { get; set; }\n    return:\n      type: System.Windows.Forms.IButtonControl\n      description: An <xref href=\"System.Windows.Forms.IButtonControl\"></xref> that represents the button to use as the accept button for the form.\n  overload: System.Windows.Forms.Form.AcceptButton*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Form.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Form.Activate\n  commentId: M:System.Windows.Forms.Form.Activate\n  id: Activate\n  parent: System.Windows.Forms.Form\n  langs:\n  - csharp\n  name: Activate()\n  nameWithType: Form.Activate()\n  fullName: Form.Activate()\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Activates the form and gives it focus.\n  remarks: Activating a form brings it to the front if this is the active application, or it flashes the window caption if this is not the active application. The form must be visible for this method to have any effect. To determine the active form in an application, use the <xref:System.Windows.Forms.Form.ActiveForm%2A> property or the <xref:System.Windows.Forms.Form.ActiveMdiChild%2A> property if your forms are in a Multiple-document interface (MDI) application.\n  example:\n  - \"The following code example demonstrates how to use the <xref:System.Windows.Forms.Form.SetDesktopLocation%2A>, <xref:System.Windows.Forms.Form.Load> and <xref:System.Windows.Forms.Form.Activate%2A> members. To run the example, paste the following code in a form called `Form1` containing a button called `Button1` and two `Label` controls called `Label1` and `Label2`.  \\n  \\n [!code-cpp[System.Windows.Forms.FormsActivate#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.FormsActivate/CPP/form1.cpp#1)]\\n [!code-csharp[System.Windows.Forms.FormsActivate#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.FormsActivate/CS/form1.cs#1)]\\n [!code-vb[System.Windows.Forms.FormsActivate#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.FormsActivate/VB/form1.vb#1)]\"\n  syntax:\n    content: public void Activate ();\n    parameters: []\n  overload: System.Windows.Forms.Form.Activate*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Form.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Form.Activated\n  commentId: E:System.Windows.Forms.Form.Activated\n  id: Activated\n  parent: System.Windows.Forms.Form\n  langs:\n  - csharp\n  name: Activated\n  nameWithType: Form.Activated\n  fullName: Form.Activated\n  type: Event\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Occurs when the form is activated in code or by the user.\n  remarks: \"> [!NOTE]\\n>  When the application is active and has multiple forms, the active form is the form with the input focus. A form that is not visible cannot be the active form. The simplest way to activate a visible form is to click it or use an appropriate keyboard combination.  \\n  \\n To activate a form at run time using code, call the <xref:System.Windows.Forms.Form.Activate%2A> method. You can use this event for tasks such as updating the contents of the form based on changes made to the form's data when the form was not activated.  \\n  \\n For more information about handling events, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).\"\n  example:\n  - \"The following code example demonstrates how to use the <xref:System.Windows.Forms.Form.SetDesktopLocation%2A>, <xref:System.Windows.Forms.Form.Closed>, <xref:System.Windows.Forms.Form.Load>, <xref:System.Windows.Forms.Form.Activated>, and <xref:System.Windows.Forms.Form.Activate%2A> members. To run the example, paste the following code in a form called Form1 containing a <xref:System.Windows.Forms.Button> called `Button1` and two <xref:System.Windows.Forms.Label> controls called `Label1` and `Label2`.  \\n  \\n [!code-cpp[System.Windows.Forms.FormsActivate#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.FormsActivate/CPP/form1.cpp#1)]\\n [!code-csharp[System.Windows.Forms.FormsActivate#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.FormsActivate/CS/form1.cs#1)]\\n [!code-vb[System.Windows.Forms.FormsActivate#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.FormsActivate/VB/form1.vb#1)]\"\n  syntax:\n    content: public event EventHandler Activated;\n    return:\n      type: System.EventHandler\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Form.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Form.ActivateMdiChild(System.Windows.Forms.Form)\n  commentId: M:System.Windows.Forms.Form.ActivateMdiChild(System.Windows.Forms.Form)\n  id: ActivateMdiChild(System.Windows.Forms.Form)\n  parent: System.Windows.Forms.Form\n  langs:\n  - csharp\n  name: ActivateMdiChild(Form)\n  nameWithType: Form.ActivateMdiChild(Form)\n  fullName: Form.ActivateMdiChild(Form)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Activates the MDI child of a form.\n  remarks: \"If the `form` parameter is already the active MDI child form, then the <xref:System.Windows.Forms.Form.ActivateMdiChild%2A> method simply returns. If `form` is not `null`, then it is set to be the active MDI child form.  \\n  \\n Whether the `form` parameter is `null` or not, <xref:System.Windows.Forms.Form.ActivateMdiChild%2A> raises the <xref:System.Windows.Forms.Form.MdiChildActivate> event.\"\n  syntax:\n    content: protected void ActivateMdiChild (System.Windows.Forms.Form form);\n    parameters:\n    - id: form\n      type: System.Windows.Forms.Form\n      description: The child form to activate.\n  overload: System.Windows.Forms.Form.ActivateMdiChild*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Form.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Form.ActiveForm\n  commentId: P:System.Windows.Forms.Form.ActiveForm\n  id: ActiveForm\n  parent: System.Windows.Forms.Form\n  langs:\n  - csharp\n  name: ActiveForm\n  nameWithType: Form.ActiveForm\n  fullName: Form.ActiveForm\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets the currently active form for this application.\n  remarks: \"You can use this method to obtain a reference to the currently active form to perform actions on the form or its controls.  \\n  \\n If your application is a multiple-document interface (MDI) application, use the <xref:System.Windows.Forms.Form.ActiveMdiChild%2A> property to obtain the currently active MDI child form.\"\n  example:\n  - \"The following code example gets the active form and disables all the controls on the form. The example uses the <xref:System.Windows.Forms.Control.Controls%2A> collection of the form to iterate through each control on the form and disable the controls.  \\n  \\n [!code-cpp[Classic Form.ActiveForm Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Form.ActiveForm Example/CPP/source.cpp#1)]\\n [!code-csharp[Classic Form.ActiveForm Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Form.ActiveForm Example/CS/source.cs#1)]\\n [!code-vb[Classic Form.ActiveForm Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Form.ActiveForm Example/VB/source.vb#1)]\"\n  syntax:\n    content: public static System.Windows.Forms.Form ActiveForm { get; }\n    return:\n      type: System.Windows.Forms.Form\n      description: A <xref href=\"System.Windows.Forms.Form\"></xref> that represents the currently active form, or `null` if there is no active form.\n  overload: System.Windows.Forms.Form.ActiveForm*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Form.xml\n  ms.technology:\n  - dotnet-winforms\n  ms.author: kempb\n  manager: ghogen\n- uid: System.Windows.Forms.Form.ActiveMdiChild\n  commentId: P:System.Windows.Forms.Form.ActiveMdiChild\n  id: ActiveMdiChild\n  parent: System.Windows.Forms.Form\n  langs:\n  - csharp\n  name: ActiveMdiChild\n  nameWithType: Form.ActiveMdiChild\n  fullName: Form.ActiveMdiChild\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets the currently active multiple-document interface (MDI) child window.\n  remarks: \"You can use this method to determine whether there are any MDI child forms open in your MDI application. You can also use this method to perform operations on an MDI child window from its MDI parent form or from another form that is displayed in your application.  \\n  \\n If the currently active form is not an MDI child form, you can use the <xref:System.Windows.Forms.Form.ActiveForm%2A> property to obtain a reference to it.\"\n  example:\n  - \"The following code example obtains a reference to the active MDI child form and loops through all <xref:System.Windows.Forms.TextBox> controls on the form, resetting their <xref:System.Windows.Forms.TextBoxBase.Text%2A> properties. This example requires that an MDI parent form has been created and that this method call is being made from the MDI parent form.  \\n  \\n [!code-cpp[Classic Form.ActiveMdiChild Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Form.ActiveMdiChild Example/CPP/source.cpp#1)]\\n [!code-csharp[Classic Form.ActiveMdiChild Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Form.ActiveMdiChild Example/CS/source.cs#1)]\\n [!code-vb[Classic Form.ActiveMdiChild Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Form.ActiveMdiChild Example/VB/source.vb#1)]\"\n  syntax:\n    content: >-\n      [System.ComponentModel.Browsable(false)]\n\n      public System.Windows.Forms.Form ActiveMdiChild { get; }\n    return:\n      type: System.Windows.Forms.Form\n      description: Returns a <xref href=\"System.Windows.Forms.Form\"></xref> that represents the currently active MDI child window, or `null` if there are currently no child windows present.\n  overload: System.Windows.Forms.Form.ActiveMdiChild*\n  exceptions: []\n  attributes:\n  - type: System.ComponentModel.BrowsableAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Form.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Form.AddOwnedForm(System.Windows.Forms.Form)\n  commentId: M:System.Windows.Forms.Form.AddOwnedForm(System.Windows.Forms.Form)\n  id: AddOwnedForm(System.Windows.Forms.Form)\n  parent: System.Windows.Forms.Form\n  langs:\n  - csharp\n  name: AddOwnedForm(Form)\n  nameWithType: Form.AddOwnedForm(Form)\n  fullName: Form.AddOwnedForm(Form)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Adds an owned form to this form.\n  remarks: \"The form assigned to the owner form remains owned until the <xref:System.Windows.Forms.Form.RemoveOwnedForm%2A> method is called. You can also make a form owned by another by setting the <xref:System.Windows.Forms.Form.Owner%2A> property with a reference to its owner form.  \\n  \\n When a form is owned by another form, it is closed or hidden with the owner form. For example, consider a form named `Form2` that is owned by a form named `Form1`. If `Form1` is closed or minimized, `Form2` is also closed or hidden. Owned forms are also never displayed behind their owner form. You can use owned forms for windows such as find and replace windows, which should not be displayed behind the owner form when the owner form is selected.  \\n  \\n> [!NOTE]\\n>  If the form is a multiple-document interface (MDI) parent form, this property returns all forms that are displayed with the exception of any MDI child forms that are currently open. To obtain the MDI child forms opened in an MDI parent form, use the <xref:System.Windows.Forms.Form.MdiChildren%2A> property.\"\n  example:\n  - \"The following code example demonstrates how to use the <xref:System.Windows.Forms.Form.AddOwnedForm%2A> method to display a form as an owned form of another form. Once the owned form is shown, you can minimize its owner form and the owned form will minimize with it. The example requires that the code in the example is called from another event or method of a form.  \\n  \\n [!code-cpp[Form.AddOwnedForm#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Form.AddOwnedForm/CPP/form1.cpp#1)]\\n [!code-csharp[Form.AddOwnedForm#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Form.AddOwnedForm/CS/form1.cs#1)]\\n [!code-vb[Form.AddOwnedForm#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Form.AddOwnedForm/VB/form1.vb#1)]\"\n  syntax:\n    content: public void AddOwnedForm (System.Windows.Forms.Form ownedForm);\n    parameters:\n    - id: ownedForm\n      type: System.Windows.Forms.Form\n      description: The <xref href=\"System.Windows.Forms.Form\"></xref> that this form will own.\n  overload: System.Windows.Forms.Form.AddOwnedForm*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Form.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Form.AdjustFormScrollbars(System.Boolean)\n  commentId: M:System.Windows.Forms.Form.AdjustFormScrollbars(System.Boolean)\n  id: AdjustFormScrollbars(System.Boolean)\n  parent: System.Windows.Forms.Form\n  langs:\n  - csharp\n  name: AdjustFormScrollbars(Boolean)\n  nameWithType: Form.AdjustFormScrollbars(Boolean)\n  fullName: Form.AdjustFormScrollbars(Boolean)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Adjusts the scroll bars on the container based on the current control positions and the control currently selected.\n  syntax:\n    content: protected override void AdjustFormScrollbars (bool displayScrollbars);\n    parameters:\n    - id: displayScrollbars\n      type: System.Boolean\n      description: '`true` to show the scroll bars; otherwise, `false`.'\n  overload: System.Windows.Forms.Form.AdjustFormScrollbars*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Form.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Form.AllowTransparency\n  commentId: P:System.Windows.Forms.Form.AllowTransparency\n  id: AllowTransparency\n  parent: System.Windows.Forms.Form\n  langs:\n  - csharp\n  name: AllowTransparency\n  nameWithType: Form.AllowTransparency\n  fullName: Form.AllowTransparency\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets or sets a value indicating whether the opacity of the form can be adjusted.\n  remarks: This property is automatically set to `true` if the `Opacity` is changed. When the opacity of a form is set using the `Opacity` property, the form will layer objects on the form. If you set the <xref:System.Windows.Forms.Form.AllowTransparency%2A> property to `false` the form will not be in layered mode which will improve the display performance of the form.\n  syntax:\n    content: >-\n      [System.ComponentModel.Browsable(false)]\n\n      public bool AllowTransparency { get; set; }\n    return:\n      type: System.Boolean\n      description: '`true` if the opacity of the form can be changed; otherwise, `false`.'\n  overload: System.Windows.Forms.Form.AllowTransparency*\n  exceptions: []\n  attributes:\n  - type: System.ComponentModel.BrowsableAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Form.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Form.ApplyAutoScaling\n  commentId: M:System.Windows.Forms.Form.ApplyAutoScaling\n  id: ApplyAutoScaling\n  parent: System.Windows.Forms.Form\n  langs:\n  - csharp\n  name: ApplyAutoScaling()\n  nameWithType: Form.ApplyAutoScaling()\n  fullName: Form.ApplyAutoScaling()\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Resizes the form according to the current value of the <xref href=\"System.Windows.Forms.Form.AutoScaleBaseSize\"></xref> property and the size of the current font.\n  remarks: This method determines the form size using the value of the <xref:System.Windows.Forms.Form.AutoScaleBaseSize%2A> property and the <xref:System.Windows.Forms.Form.Size%2A> value returned by the <xref:System.Windows.Forms.Form.GetAutoScaleSize%2A> method.\n  syntax:\n    content: >-\n      [System.Obsolete(\"This method has been deprecated. Use the ApplyAutoScaling method instead.  http://go.microsoft.com/fwlink/?linkid=14202\")]\n\n      protected void ApplyAutoScaling ();\n    parameters: []\n  overload: System.Windows.Forms.Form.ApplyAutoScaling*\n  exceptions: []\n  attributes:\n  - type: System.ObsoleteAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Form.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Form.AutoScale\n  commentId: P:System.Windows.Forms.Form.AutoScale\n  id: AutoScale\n  parent: System.Windows.Forms.Form\n  langs:\n  - csharp\n  name: AutoScale\n  nameWithType: Form.AutoScale\n  fullName: Form.AutoScale\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets or sets a value indicating whether the form adjusts its size to fit the height of the font used on the form and scales its controls.\n  remarks: \"> [!IMPORTANT]\\n>  The <xref:System.Windows.Forms.Form.AutoScale%2A> is obsolete and has been retained for backward compatibility. The non-obsolete alternative is <xref:System.Windows.Forms.ContainerControl.AutoScaleMode%2A?displayProperty=fullName>. For more information about automatic scaling, see [Automatic Scaling in Windows Forms](~/docs/framework/winforms/automatic-scaling-in-windows-forms.md).  \\n  \\n You can use this property to allow your form and its controls to automatically adjust based on changes in the font. This can be useful in applications where the font might increase or decrease based on the language specified for use by Windows.  \\n  \\n To obtain the size the form will auto scale to, use the <xref:System.Windows.Forms.Form.AutoScaleBaseSize%2A> property. If you want to determine the size the form will auto scale to based on a specific font, use the <xref:System.Windows.Forms.Form.GetAutoScaleSize%2A> method.\"\n  syntax:\n    content: >-\n      [System.ComponentModel.Browsable(false)]\n\n      [System.Obsolete(\"This property has been deprecated. Use the AutoScaleMode property instead.  http://go.microsoft.com/fwlink/?linkid=14202\")]\n\n      public bool AutoScale { get; set; }\n    return:\n      type: System.Boolean\n      description: '`true` if the form will automatically scale itself and its controls based on the current font assigned to the form; otherwise, `false`. The default is `true`.'\n  overload: System.Windows.Forms.Form.AutoScale*\n  exceptions: []\n  attributes:\n  - type: System.ComponentModel.BrowsableAttribute\n  - type: System.ObsoleteAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Form.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Form.AutoScaleBaseSize\n  commentId: P:System.Windows.Forms.Form.AutoScaleBaseSize\n  id: AutoScaleBaseSize\n  parent: System.Windows.Forms.Form\n  langs:\n  - csharp\n  name: AutoScaleBaseSize\n  nameWithType: Form.AutoScaleBaseSize\n  fullName: Form.AutoScaleBaseSize\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets or sets the base size used for autoscaling of the form.\n  remarks: \"> [!IMPORTANT]\\n>  This member has been retained for backward compatibility. For more information about automatic scaling, see [Automatic Scaling in Windows Forms](~/docs/framework/winforms/automatic-scaling-in-windows-forms.md).  \\n  \\n The value of the <xref:System.Windows.Forms.Form.AutoScaleBaseSize%2A> property is used at form-display time to compute the scaling factor for the form. The autoscaling base size is used by the form as a baseline for comparison to the system's font size to determine how much to scale the form when autoscaling is used. If you want to determine the size a form will auto scale to based on a specific font, use the <xref:System.Windows.Forms.Form.GetAutoScaleSize%2A> method.  \\n  \\n> [!NOTE]\\n>  The value of this property is used when the form is initially created. Once the property is set, it cannot be changed.\"\n  syntax:\n    content: >-\n      [System.ComponentModel.Browsable(false)]\n\n      public virtual System.Drawing.Size AutoScaleBaseSize { get; set; }\n    return:\n      type: System.Drawing.Size\n      description: A <xref href=\"System.Drawing.Size\"></xref> that represents the base size that this form uses for autoscaling.\n  overload: System.Windows.Forms.Form.AutoScaleBaseSize*\n  exceptions: []\n  attributes:\n  - type: System.ComponentModel.BrowsableAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Form.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Form.AutoScroll\n  commentId: P:System.Windows.Forms.Form.AutoScroll\n  id: AutoScroll\n  parent: System.Windows.Forms.Form\n  langs:\n  - csharp\n  name: AutoScroll\n  nameWithType: Form.AutoScroll\n  fullName: Form.AutoScroll\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets or sets a value indicating whether the form enables autoscrolling.\n  remarks: \"If this property is set to `true`, scroll bars are displayed on the form if any controls are located outside the form's client region. Additionally, when autoscrolling is on, the client area of the form automatically scrolls to make the control with input focus visible.  \\n  \\n You can use this property to prevent users from losing the ability to view controls when their video resolution settings are set to a low resolution.\"\n  example:\n  - \"The following code example demonstrates how to use the <xref:System.Windows.Forms.Form.AutoScroll%2A> property to enable the display of controls that are outsize the client area of a form. The example creates a new form and adds a <xref:System.Windows.Forms.Button> control to the form. The <xref:System.Windows.Forms.Button> control is positioned outsize the client area of the new form. The <xref:System.Windows.Forms.Form.AutoScroll%2A> property is set to true to display scroll bars on the form to enable the user to scroll to the control. This example requires that the method defined in this example is called from another form in an event handler or other method.  \\n  \\n [!code-cpp[Form.AutoScroll#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Form.AutoScroll/CPP/form1.cpp#1)]\\n [!code-csharp[Form.AutoScroll#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Form.AutoScroll/CS/form1.cs#1)]\\n [!code-vb[Form.AutoScroll#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Form.AutoScroll/VB/form1.vb#1)]\"\n  syntax:\n    content: public override bool AutoScroll { get; set; }\n    return:\n      type: System.Boolean\n      description: '`true` to enable autoscrolling on the form; otherwise, `false`. The default is `false`.'\n  overload: System.Windows.Forms.Form.AutoScroll*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Form.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Form.AutoSize\n  commentId: P:System.Windows.Forms.Form.AutoSize\n  id: AutoSize\n  parent: System.Windows.Forms.Form\n  langs:\n  - csharp\n  name: AutoSize\n  nameWithType: Form.AutoSize\n  fullName: Form.AutoSize\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Resize the form according to the setting of <xref href=\"System.Windows.Forms.Form.AutoSizeMode\"></xref>.\n  remarks: \"Use <xref:System.Windows.Forms.Form.AutoSize%2A> to force a form to resize to fit its contents.  \\n  \\n A form does not automatically resize in the Visual Studio forms designer, regardless of the values of the <xref:System.Windows.Forms.Form.AutoSize%2A> and <xref:System.Windows.Forms.Form.AutoSizeMode%2A> properties. The form correctly resizes itself at run time according to the values of these two properties. By contrast, a custom <xref:System.Windows.Forms.UserControl> automatically resizes itself both at design time and at run time.  \\n  \\n When using <xref:System.Windows.Forms.Form.AutoSize%2A>, the <xref:System.Windows.Forms.Control.MinimumSize%2A> and <xref:System.Windows.Forms.Control.MaximumSize%2A> properties are respected, but the current value of the <xref:System.Windows.Forms.Control.Size%2A> property is ignored. Using <xref:System.Windows.Forms.Form.AutoSize%2A> and <xref:System.Windows.Forms.Form.AutoSizeMode%2A> also renders the <xref:System.Windows.Forms.Form.AutoScroll%2A> property superfluous, as there is no way to shrink the form to hide its contained controls from view.  \\n  \\n See the <xref:System.Windows.Forms.AutoSizeMode> enumeration for information on how a form behaves when <xref:System.Windows.Forms.Form.AutoSize%2A> is `true`.\"\n  example:\n  - \"The following code example shows a form created using code that automatically resizes to fit its contents. When run, the form displays a <xref:System.Windows.Forms.Label>, a <xref:System.Windows.Forms.TextBox> for entering a URL, and a <xref:System.Windows.Forms.Button> for displaying that URL inside of the user's default Web browser. The code example uses a <xref:System.Windows.Forms.FlowLayoutPanel> to lay out the contained controls one after the other. It also sets the <xref:System.Windows.Forms.Control.AutoSize%2A> and <xref:System.Windows.Forms.AutoSizeMode> to grow and shrink to fit the contents of its form.  \\n  \\n [!code-csharp[Form.AutoSize#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Form.AutoSize/CS/Form1.cs#1)]\\n [!code-vb[Form.AutoSize#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Form.AutoSize/VB/Form1.vb#1)]\"\n  syntax:\n    content: >-\n      [System.ComponentModel.Browsable(true)]\n\n      public override bool AutoSize { get; set; }\n    return:\n      type: System.Boolean\n      description: '`true` if the form will automatically resize; `false` if it must be manually resized.'\n  overload: System.Windows.Forms.Form.AutoSize*\n  exceptions: []\n  attributes:\n  - type: System.ComponentModel.BrowsableAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Form.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Form.AutoSizeChanged\n  commentId: E:System.Windows.Forms.Form.AutoSizeChanged\n  id: AutoSizeChanged\n  parent: System.Windows.Forms.Form\n  langs:\n  - csharp\n  name: AutoSizeChanged\n  nameWithType: Form.AutoSizeChanged\n  fullName: Form.AutoSizeChanged\n  type: Event\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Occurs when the <xref href=\"System.Windows.Forms.Form.AutoSize\"></xref> property changes.\n  syntax:\n    content: >-\n      [System.ComponentModel.Browsable(true)]\n\n      public event EventHandler AutoSizeChanged;\n    return:\n      type: System.EventHandler\n      description: ''\n  exceptions: []\n  attributes:\n  - type: System.ComponentModel.BrowsableAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Form.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Form.AutoSizeMode\n  commentId: P:System.Windows.Forms.Form.AutoSizeMode\n  id: AutoSizeMode\n  parent: System.Windows.Forms.Form\n  langs:\n  - csharp\n  name: AutoSizeMode\n  nameWithType: Form.AutoSizeMode\n  fullName: Form.AutoSizeMode\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets or sets the mode by which the form automatically resizes itself.\n  remarks: \"Setting the <xref:System.Windows.Forms.Form.AutoSizeMode%2A> property to a new value causes the form to be laid out again.  \\n  \\n A form does not automatically resize in the Visual Studio forms designer, regardless of the values of the <xref:System.Windows.Forms.Form.AutoSize%2A> and <xref:System.Windows.Forms.Form.AutoSizeMode%2A> properties. The form correctly resizes itself at run time according to the values of these two properties. By contrast, a custom <xref:System.Windows.Forms.UserControl> automatically resizes itself both at design time and at run time.\"\n  example:\n  - \"The following code example shows a form created using code that automatically resizes to fit its contents. When run, the form displaya a <xref:System.Windows.Forms.Label>, a <xref:System.Windows.Forms.TextBox> for entering a URL, and a <xref:System.Windows.Forms.Button> for displaying that URL inside of the user's default Web browser. The code example uses a <xref:System.Windows.Forms.FlowLayoutPanel> to lay out the contained controls one after the other. It also sets the <xref:System.Windows.Forms.Control.AutoSize%2A> and <xref:System.Windows.Forms.AutoSizeMode> to grow and shrink to fit the contents of its form.  \\n  \\n [!code-csharp[Form.AutoSize#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Form.AutoSize/CS/Form1.cs#1)]\\n [!code-vb[Form.AutoSize#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Form.AutoSize/VB/Form1.vb#1)]\"\n  syntax:\n    content: >-\n      [System.ComponentModel.Browsable(true)]\n\n      public System.Windows.Forms.AutoSizeMode AutoSizeMode { get; set; }\n    return:\n      type: System.Windows.Forms.AutoSizeMode\n      description: An <xref href=\"System.Windows.Forms.AutoSizeMode\"></xref> enumerated value. The default is <xref href=\"System.Windows.Forms.AutoSizeMode.GrowOnly\"></xref>.\n  overload: System.Windows.Forms.Form.AutoSizeMode*\n  exceptions:\n  - type: System.ComponentModel.InvalidEnumArgumentException\n    commentId: T:System.ComponentModel.InvalidEnumArgumentException\n    description: The value is not a valid <xref href=\"System.Windows.Forms.AutoSizeMode\"></xref> value.\n  attributes:\n  - type: System.ComponentModel.BrowsableAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Form.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Form.AutoValidate\n  commentId: P:System.Windows.Forms.Form.AutoValidate\n  id: AutoValidate\n  parent: System.Windows.Forms.Form\n  langs:\n  - csharp\n  name: AutoValidate\n  nameWithType: Form.AutoValidate\n  fullName: Form.AutoValidate\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets or sets a value that indicates whether controls in this container will be automatically validated when the focus changes.\n  syntax:\n    content: >-\n      [System.ComponentModel.Browsable(true)]\n\n      public override System.Windows.Forms.AutoValidate AutoValidate { get; set; }\n    return:\n      type: System.Windows.Forms.AutoValidate\n      description: An <xref href=\"System.Windows.Forms.AutoValidate\"></xref> enumerated value that indicates whether contained controls are implicitly validated on focus change. The default is Inherit.\n  overload: System.Windows.Forms.Form.AutoValidate*\n  exceptions: []\n  attributes:\n  - type: System.ComponentModel.BrowsableAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Form.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Form.AutoValidateChanged\n  commentId: E:System.Windows.Forms.Form.AutoValidateChanged\n  id: AutoValidateChanged\n  parent: System.Windows.Forms.Form\n  langs:\n  - csharp\n  name: AutoValidateChanged\n  nameWithType: Form.AutoValidateChanged\n  fullName: Form.AutoValidateChanged\n  type: Event\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Occurs when the <xref href=\"System.Windows.Forms.Form.AutoValidate\"></xref> property changes.\n  syntax:\n    content: >-\n      [System.ComponentModel.Browsable(true)]\n\n      public event EventHandler AutoValidateChanged;\n    return:\n      type: System.EventHandler\n      description: ''\n  exceptions: []\n  attributes:\n  - type: System.ComponentModel.BrowsableAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Form.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Form.BackColor\n  commentId: P:System.Windows.Forms.Form.BackColor\n  id: BackColor\n  parent: System.Windows.Forms.Form\n  langs:\n  - csharp\n  name: BackColor\n  nameWithType: Form.BackColor\n  fullName: Form.BackColor\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets or sets the background color for the control.\n  syntax:\n    content: public override System.Drawing.Color BackColor { get; set; }\n    return:\n      type: System.Drawing.Color\n      description: A <xref href=\"System.Drawing.Color\"></xref> that represents the background color of the control. The default is the value of the <xref href=\"System.Windows.Forms.Control.DefaultBackColor\"></xref> property.\n  overload: System.Windows.Forms.Form.BackColor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Form.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Form.CancelButton\n  commentId: P:System.Windows.Forms.Form.CancelButton\n  id: CancelButton\n  parent: System.Windows.Forms.Form\n  langs:\n  - csharp\n  name: CancelButton\n  nameWithType: Form.CancelButton\n  fullName: Form.CancelButton\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets or sets the button control that is clicked when the user presses the ESC key.\n  remarks: \"The cancel button for a form is the button control that is clicked whenever the user presses the ESC key. The button assigned to this property must be an <xref:System.Windows.Forms.IButtonControl> that is on the current form or located within a container on the current form.  \\n  \\n This property allows you to designate a default action to occur when the user presses the ESC key in your application. You can use this property to allow the user to quickly navigate a simple form by allowing them to simply press the ESC key to close a window without committing changes instead of manually clicking the cancel button with their mouse.  \\n  \\n <xref:System.Windows.Forms.Form.CancelButton%2A> may not work if another control on the form intercepts the ESC key. For example, if you have a <xref:System.Windows.Forms.ComboBox> open on your form, ESC will close the <xref:System.Windows.Forms.ComboBox> instead of closing the Form.  \\n  \\n The <xref:System.Windows.Forms.IButtonControl> object assigned to <xref:System.Windows.Forms.Form.CancelButton%2A> must be visible on the form, or else pressing the ESC key will have no effect.\"\n  example:\n  - \"The following code example creates a new instance of a <xref:System.Windows.Forms.Form> and calls the <xref:System.Windows.Forms.Form.ShowDialog%2A> method to display the form as a dialog box. The example sets the <xref:System.Windows.Forms.Form.FormBorderStyle%2A>, <xref:System.Windows.Forms.Form.AcceptButton%2A>, <xref:System.Windows.Forms.Form.CancelButton%2A>, <xref:System.Windows.Forms.Form.MinimizeBox%2A>, <xref:System.Windows.Forms.Form.MaximizeBox%2A>, and <xref:System.Windows.Forms.Form.StartPosition%2A> properties to change the appearance and functionality of the form to a dialog box. The example also uses the <xref:System.Windows.Forms.Form.ControlCollection.Add%2A> method of the form's <xref:System.Windows.Forms.Control.Controls%2A> collection to add two <xref:System.Windows.Forms.Button> controls. The example uses the <xref:System.Windows.Forms.Form.HelpButton%2A> property to display a help button in the caption bar of the dialog box.  \\n  \\n [!code-cpp[Classic Form.AcceptButton Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Form.AcceptButton Example/CPP/source.cpp#1)]\\n [!code-csharp[Classic Form.AcceptButton Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Form.AcceptButton Example/CS/source.cs#1)]\\n [!code-vb[Classic Form.AcceptButton Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Form.AcceptButton Example/VB/source.vb#1)]\"\n  syntax:\n    content: public System.Windows.Forms.IButtonControl CancelButton { get; set; }\n    return:\n      type: System.Windows.Forms.IButtonControl\n      description: An <xref href=\"System.Windows.Forms.IButtonControl\"></xref> that represents the cancel button for the form.\n  overload: System.Windows.Forms.Form.CancelButton*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Form.xml\n  ms.technology:\n  - dotnet-winforms\n  ms.author: kempb\n  manager: ghogen\n- uid: System.Windows.Forms.Form.CenterToParent\n  commentId: M:System.Windows.Forms.Form.CenterToParent\n  id: CenterToParent\n  parent: System.Windows.Forms.Form\n  langs:\n  - csharp\n  name: CenterToParent()\n  nameWithType: Form.CenterToParent()\n  fullName: Form.CenterToParent()\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Centers the position of the form within the bounds of the parent form.\n  remarks: \"Do not call the <xref:System.Windows.Forms.Form.CenterToParent%2A> method directly from your code. Instead, set the <xref:System.Windows.Forms.Form.StartPosition%2A> property to <xref:System.Windows.Forms.FormStartPosition.CenterParent>.  \\n  \\n If the form or dialog is top-level, then <xref:System.Windows.Forms.Form.CenterToParent%2A> centers the form with respect to the screen or desktop.\"\n  syntax:\n    content: protected void CenterToParent ();\n    parameters: []\n  overload: System.Windows.Forms.Form.CenterToParent*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Form.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Form.CenterToScreen\n  commentId: M:System.Windows.Forms.Form.CenterToScreen\n  id: CenterToScreen\n  parent: System.Windows.Forms.Form\n  langs:\n  - csharp\n  name: CenterToScreen()\n  nameWithType: Form.CenterToScreen()\n  fullName: Form.CenterToScreen()\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Centers the form on the current screen.\n  remarks: \"Do not call this directly from your code. Instead, set the <xref:System.Windows.Forms.Form.StartPosition%2A> property to <xref:System.Windows.Forms.FormStartPosition.CenterScreen>.  \\n  \\n The <xref:System.Windows.Forms.Form.CenterToScreen%2A> method uses the following priority list to determine the screen used to center the form:  \\n  \\n1.  The <xref:System.Windows.Forms.Form.Owner%2A> property of the form.  \\n  \\n2.  The HWND owner of the form.  \\n  \\n3.  The screen that currently has the mouse cursor.\"\n  syntax:\n    content: protected void CenterToScreen ();\n    parameters: []\n  overload: System.Windows.Forms.Form.CenterToScreen*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Form.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Form.ClientSize\n  commentId: P:System.Windows.Forms.Form.ClientSize\n  id: ClientSize\n  parent: System.Windows.Forms.Form\n  langs:\n  - csharp\n  name: ClientSize\n  nameWithType: Form.ClientSize\n  fullName: Form.ClientSize\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets or sets the size of the client area of the form.\n  remarks: \"The size of the client area of the form is the size of the form excluding the borders and the title bar. The client area of a form is the area within a form where controls can be placed. You can use this property to get the proper dimensions when performing graphics operations or when sizing and positioning controls on the form. To get the size of the entire form, use the <xref:System.Windows.Forms.Form.Size%2A> property or use the individual properties <xref:System.Windows.Forms.Control.Height%2A> and <xref:System.Windows.Forms.Control.Width%2A>.  \\n  \\n> [!NOTE]\\n>  You cannot currently bind to this property using application settings. For more information on application settings, see [Application Settings Overview](~/docs/framework/winforms/advanced/application-settings-overview.md).\"\n  example:\n  - \"The following code example creates an event handler for the <xref:System.Windows.Forms.Control.Resize> event of a form. The event handler uses the <xref:System.Windows.Forms.Form.ClientSize%2A> property of the form to make a <xref:System.Windows.Forms.Button> control named `button1` fill the entire client area of the form.  \\n  \\n [!code-cpp[Classic Form.ClientSize Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Form.ClientSize Example/CPP/source.cpp#1)]\\n [!code-csharp[Classic Form.ClientSize Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Form.ClientSize Example/CS/source.cs#1)]\\n [!code-vb[Classic Form.ClientSize Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Form.ClientSize Example/VB/source.vb#1)]\"\n  syntax:\n    content: public System.Drawing.Size ClientSize { get; set; }\n    return:\n      type: System.Drawing.Size\n      description: A <xref href=\"System.Drawing.Size\"></xref> that represents the size of the form's client area.\n  overload: System.Windows.Forms.Form.ClientSize*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Form.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Form.Close\n  commentId: M:System.Windows.Forms.Form.Close\n  id: Close\n  parent: System.Windows.Forms.Form\n  langs:\n  - csharp\n  name: Close()\n  nameWithType: Form.Close()\n  fullName: Form.Close()\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Closes the form.\n  remarks: \"When a form is closed, all resources created within the object are closed and the form is disposed. You can prevent the closing of a form at run time by handling the <xref:System.Windows.Forms.Form.Closing> event and setting the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> property of the <xref:System.ComponentModel.CancelEventArgs> passed as a parameter to your event handler. If the form you are closing is the startup form of your application, your application ends.  \\n  \\n The two conditions when a form is not disposed on `Close` is when (1) it is part of a multiple-document interface (MDI) application, and the form is not visible; and (2) you have displayed the form using <xref:System.Windows.Forms.Form.ShowDialog%2A>. In these cases, you will need to call <xref:System.Windows.Forms.Form.Dispose%2A> manually to mark all of the form's controls for garbage collection.  \\n  \\n> [!NOTE]\\n>  When the <xref:System.Windows.Forms.Form.Close%2A> method is called on a <xref:System.Windows.Forms.Form> displayed as a modeless window, you cannot call the <xref:System.Windows.Forms.Control.Show%2A> method to make the form visible, because the form's resources have already been released. To hide a form and then make it visible, use the <xref:System.Windows.Forms.Control.Hide%2A?displayProperty=fullName> method.  \\n  \\n> [!CAUTION]\\n>  Prior to the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] 2.0, the <xref:System.Windows.Forms.Form.Closed?displayProperty=fullName> and <xref:System.Windows.Forms.Form.Closing?displayProperty=fullName> events are not raised when the <xref:System.Windows.Forms.Application.Exit%2A?displayProperty=fullName> method is called to exit your application. If you have validation code in either of these events that must be executed, you should call the <xref:System.Windows.Forms.Form.Close%2A?displayProperty=fullName> method for each open form individually before calling the <xref:System.Windows.Forms.Application.Exit%2A> method.\"\n  syntax:\n    content: public void Close ();\n    parameters: []\n  overload: System.Windows.Forms.Form.Close*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The form was closed while a handle was being created.\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: You cannot call this method from the <xref href=\"System.Windows.Forms.Form.Activated\"></xref> event when <xref href=\"System.Windows.Forms.Form.WindowState\"></xref> is set to <xref href=\"System.Windows.Forms.FormWindowState.Maximized\"></xref>.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Form.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Form.Closed\n  commentId: E:System.Windows.Forms.Form.Closed\n  id: Closed\n  parent: System.Windows.Forms.Form\n  langs:\n  - csharp\n  name: Closed\n  nameWithType: Form.Closed\n  fullName: Form.Closed\n  type: Event\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Occurs when the form is closed.\n  remarks: \"> [!CAUTION]\\n>  The <xref:System.Windows.Forms.Form.Closed> event is obsolete in the .NET Framework version 2.0; use the <xref:System.Windows.Forms.Form.FormClosed> event instead.  \\n  \\n This event occurs after the form has been closed by the user or by the <xref:System.Windows.Forms.Form.Close%2A> method of the form. To prevent a form from closing, handle the <xref:System.Windows.Forms.Form.Closing> event and set the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> property of the <xref:System.ComponentModel.CancelEventArgs> passed to your event handler to `true`.  \\n  \\n You can use this event to perform tasks such as freeing resources used by the form and to save information entered in the form or to update its parent form.  \\n  \\n> [!CAUTION]\\n>  The <xref:System.Windows.Forms.Form.Closed?displayProperty=fullName> and <xref:System.Windows.Forms.Form.Closing?displayProperty=fullName> events are not raised when the <xref:System.Windows.Forms.Application.Exit%2A?displayProperty=fullName> method is called to exit your application. If you have validation code in either of these events that must be executed, you should call the <xref:System.Windows.Forms.Form.Close%2A?displayProperty=fullName> method for each open form individually before calling the <xref:System.Windows.Forms.Application.Exit%2A> method.  \\n  \\n If the form is an MDI parent form, the <xref:System.Windows.Forms.Form.Closing> events of all MDI child forms are raised before the MDI parent form's <xref:System.Windows.Forms.Form.Closing> event is raised. In addition, the <xref:System.Windows.Forms.Form.Closed> events of all MDI child forms are raised before the <xref:System.Windows.Forms.Form.Closed> event of the MDI parent form is raised.  \\n  \\n For more information about handling events, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).\"\n  example:\n  - \"The following code example demonstrates how to use the <xref:System.Windows.Forms.Form.SetDesktopLocation%2A>, <xref:System.Windows.Forms.Form.Closed>, <xref:System.Windows.Forms.Form.Load>, <xref:System.Windows.Forms.Form.Activated>, and <xref:System.Windows.Forms.Form.Activate%2A> members. To run the example, paste the following code in a form called `Form1` containing a <xref:System.Windows.Forms.Button> called `Button1` and two <xref:System.Windows.Forms.Label> controls called `Label1` and `Label2`.  \\n  \\n [!code-cpp[System.Windows.Forms.FormsActivate#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.FormsActivate/CPP/form1.cpp#1)]\\n [!code-csharp[System.Windows.Forms.FormsActivate#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.FormsActivate/CS/form1.cs#1)]\\n [!code-vb[System.Windows.Forms.FormsActivate#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.FormsActivate/VB/form1.vb#1)]\"\n  syntax:\n    content: >-\n      [System.ComponentModel.Browsable(false)]\n\n      public event EventHandler Closed;\n    return:\n      type: System.EventHandler\n      description: ''\n  exceptions: []\n  attributes:\n  - type: System.ComponentModel.BrowsableAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Form.xml\n  ms.technology:\n  - dotnet-winforms\n  ms.author: kempb\n  manager: ghogen\n- uid: System.Windows.Forms.Form.Closing\n  commentId: E:System.Windows.Forms.Form.Closing\n  id: Closing\n  parent: System.Windows.Forms.Form\n  langs:\n  - csharp\n  name: Closing\n  nameWithType: Form.Closing\n  fullName: Form.Closing\n  type: Event\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Occurs when the form is closing.\n  remarks: \"> [!CAUTION]\\n>  The <xref:System.Windows.Forms.Form.Closing> event is obsolete in the .NET Framework version 2.0; use the <xref:System.Windows.Forms.Form.FormClosing> event instead.  \\n  \\n The <xref:System.Windows.Forms.Form.Closing> event occurs as the form is being closed. When a form is closed, all resources created within the object are released and the form is disposed. If you cancel this event, the form remains opened. To cancel the closure of a form, set the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> property of the <xref:System.ComponentModel.CancelEventArgs> passed to your event handler to `true`.  \\n  \\n When a form is displayed as a modal dialog box, clicking the **Close** button (the button with an X at the upper-right corner of the form) causes the form to be hidden and the <xref:System.Windows.Forms.Form.DialogResult%2A> property to be set to `DialogResult.Cancel`. You can override the value assigned to the <xref:System.Windows.Forms.Form.DialogResult%2A> property when the user clicks the **Close** button by setting the <xref:System.Windows.Forms.Form.DialogResult%2A> property in an event handler for the <xref:System.Windows.Forms.Form.Closing> event of the form.  \\n  \\n> [!NOTE]\\n>  When the <xref:System.Windows.Forms.Form.Close%2A> method is called on a <xref:System.Windows.Forms.Form> displayed as a modeless window, you cannot call the <xref:System.Windows.Forms.Control.Show%2A> method to make the form visible, because the form's resources have already been released. To hide a form and then make it visible, use the <xref:System.Windows.Forms.Control.Hide%2A?displayProperty=fullName> method.  \\n  \\n> [!CAUTION]\\n>  The <xref:System.Windows.Forms.Form.Closed?displayProperty=fullName> and <xref:System.Windows.Forms.Form.Closing?displayProperty=fullName> events are not raised when the <xref:System.Windows.Forms.Application.Exit%2A?displayProperty=fullName> method is called to exit your application. If you have validation code in either of these events that must be executed, you should call the <xref:System.Windows.Forms.Form.Close%2A?displayProperty=fullName> method for each open form individually before calling the <xref:System.Windows.Forms.Application.Exit%2A> method.  \\n  \\n If the form is an MDI parent form, the <xref:System.Windows.Forms.Form.Closing> events of all MDI child forms are raised before the MDI parent form's <xref:System.Windows.Forms.Form.Closing> event is raised. In addition, the <xref:System.Windows.Forms.Form.Closed> events of all MDI child forms are raised before the <xref:System.Windows.Forms.Form.Closed> event of the MDI parent form is raised. Canceling the <xref:System.Windows.Forms.Form.Closing> event of an MDI child form does not prevent the <xref:System.Windows.Forms.Form.Closing> event of the MDI parent form from being raised. However, canceling the event will set to `true` the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> property of the <xref:System.ComponentModel.CancelEventArgs> that is passed as a parameter to the parent form. To force all MDI parent and child forms to close, set the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> property to `false` in the MDI parent form.  \\n  \\n For more information about handling events, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).\"\n  example:\n  - \"The following code example uses <xref:System.Windows.Forms.Form.Closing> to test if the text in a <xref:System.Windows.Forms.TextBox> has changed. If it has, the user is asked whether to save the changes to a file.  \\n  \\n [!code-cpp[Form.Closing#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Form.Closing/CPP/form1.cpp#1)]\\n [!code-csharp[Form.Closing#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Form.Closing/CS/form1.cs#1)]\\n [!code-vb[Form.Closing#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Form.Closing/VB/form1.vb#1)]\"\n  syntax:\n    content: >-\n      [System.ComponentModel.Browsable(false)]\n\n      public event System.ComponentModel.CancelEventHandler Closing;\n    return:\n      type: System.ComponentModel.CancelEventHandler\n      description: ''\n  exceptions: []\n  attributes:\n  - type: System.ComponentModel.BrowsableAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Form.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Form.ControlBox\n  commentId: P:System.Windows.Forms.Form.ControlBox\n  id: ControlBox\n  parent: System.Windows.Forms.Form\n  langs:\n  - csharp\n  name: ControlBox\n  nameWithType: Form.ControlBox\n  fullName: Form.ControlBox\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets or sets a value indicating whether a control box is displayed in the caption bar of the form.\n  remarks: \"If the <xref:System.Windows.Forms.Form.ControlBox%2A> property is set to `true`, the control box is displayed in the upper-left corner of the caption bar. The control box is where the user can click to access the system menu.  \\n  \\n If you set <xref:System.Windows.Forms.Form.ControlBox%2A> to `false`, and also set the <xref:System.Windows.Forms.Form.Location%2A> property, the <xref:System.Windows.Forms.Form.Size%2A> property of Form will not update to reflect that the non-client area of the form has been hidden. To fix this problem, put the code which alters the <xref:System.Windows.Forms.Form.Location%2A> property to the <xref:System.Windows.Forms.Control.HandleCreated> event.  \\n  \\n> [!NOTE]\\n>  When set to `false`, the <xref:System.Windows.Forms.Form.ControlBox%2A> property has no effect on a Multiple-document interface (MDI) child form that is displayed maximized at time of creation.\"\n  example:\n  - \"The following code example uses the <xref:System.Windows.Forms.Form.ControlBox%2A>, <xref:System.Windows.Forms.Form.FormBorderStyle%2A>, <xref:System.Windows.Forms.Form.MaximizeBox%2A>, <xref:System.Windows.Forms.Form.MinimizeBox%2A>, and <xref:System.Windows.Forms.Form.StartPosition%2A> properties to create a form that does not have any border or caption box. The form created in this example could be used to create a splash screen for an application. The example requires that the example's method is defined in a form class and called when the form is being initialized.  \\n  \\n [!code-cpp[Classic Form.ControlBox Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Form.ControlBox Example/CPP/source.cpp#1)]\\n [!code-csharp[Classic Form.ControlBox Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Form.ControlBox Example/CS/source.cs#1)]\\n [!code-vb[Classic Form.ControlBox Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Form.ControlBox Example/VB/source.vb#1)]\"\n  syntax:\n    content: public bool ControlBox { get; set; }\n    return:\n      type: System.Boolean\n      description: '`true` if the form displays a control box in the upper left corner of the form; otherwise, `false`. The default is `true`.'\n  overload: System.Windows.Forms.Form.ControlBox*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Form.xml\n  ms.technology:\n  - dotnet-winforms\n  ms.author: kempb\n  manager: ghogen\n- uid: System.Windows.Forms.Form.CreateControlsInstance\n  commentId: M:System.Windows.Forms.Form.CreateControlsInstance\n  id: CreateControlsInstance\n  parent: System.Windows.Forms.Form\n  langs:\n  - csharp\n  name: CreateControlsInstance()\n  nameWithType: Form.CreateControlsInstance()\n  fullName: Form.CreateControlsInstance()\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Creates a new instance of the control collection for the control.\n  syntax:\n    content: protected override System.Windows.Forms.Control.ControlCollection CreateControlsInstance ();\n    parameters: []\n    return:\n      type: System.Windows.Forms.Control+ControlCollection\n      description: A new instance of <xref href=\"System.Windows.Forms.Control.ControlCollection\"></xref> assigned to the control.\n  overload: System.Windows.Forms.Form.CreateControlsInstance*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Form.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Form.CreateHandle\n  commentId: M:System.Windows.Forms.Form.CreateHandle\n  id: CreateHandle\n  parent: System.Windows.Forms.Form\n  langs:\n  - csharp\n  name: CreateHandle()\n  nameWithType: Form.CreateHandle()\n  fullName: Form.CreateHandle()\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Creates the handle for the form. If a derived class overrides this function, it must call the base implementation.\n  syntax:\n    content: protected override void CreateHandle ();\n    parameters: []\n  overload: System.Windows.Forms.Form.CreateHandle*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: A handle for this <xref href=\"System.Windows.Forms.Form\"></xref> has already been created.\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Form.xml\n  ms.technology:\n  - dotnet-winforms\n  ms.author: kempb\n  manager: ghogen\n- uid: System.Windows.Forms.Form.CreateParams\n  commentId: P:System.Windows.Forms.Form.CreateParams\n  id: CreateParams\n  parent: System.Windows.Forms.Form\n  langs:\n  - csharp\n  name: CreateParams\n  nameWithType: Form.CreateParams\n  fullName: Form.CreateParams\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets the required creation parameters when the control handle is created.\n  syntax:\n    content: protected override System.Windows.Forms.CreateParams CreateParams { get; }\n    return:\n      type: System.Windows.Forms.CreateParams\n      description: A <xref href=\"System.Windows.Forms.CreateParams\"></xref> that contains the required creation parameters when the handle to the control is created.\n  overload: System.Windows.Forms.Form.CreateParams*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Form.xml\n  ms.technology:\n  - dotnet-winforms\n  ms.author: kempb\n  manager: ghogen\n- uid: System.Windows.Forms.Form.Deactivate\n  commentId: E:System.Windows.Forms.Form.Deactivate\n  id: Deactivate\n  parent: System.Windows.Forms.Form\n  langs:\n  - csharp\n  name: Deactivate\n  nameWithType: Form.Deactivate\n  fullName: Form.Deactivate\n  type: Event\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Occurs when the form loses focus and is no longer the active form.\n  remarks: \"You can use this event to perform tasks such as updating another window in your application with data from the deactivated form.  \\n  \\n For more information about handling events, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).\"\n  example:\n  - \"The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.Form.Deactivate> event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \\n  \\n To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.Form> named `Form1`. Then ensure that the event handler is associated with the <xref:System.Windows.Forms.Form.Deactivate> event.  \\n  \\n [!code-csharp[System.Windows.Forms.EventExamples#393](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#393)]\\n [!code-vb[System.Windows.Forms.EventExamples#393](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#393)]\"\n  syntax:\n    content: public event EventHandler Deactivate;\n    return:\n      type: System.EventHandler\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Form.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Form.DefaultImeMode\n  commentId: P:System.Windows.Forms.Form.DefaultImeMode\n  id: DefaultImeMode\n  parent: System.Windows.Forms.Form\n  langs:\n  - csharp\n  name: DefaultImeMode\n  nameWithType: Form.DefaultImeMode\n  fullName: Form.DefaultImeMode\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets the default Input Method Editor (IME) mode supported by the control.\n  remarks: \"An input method editor (IME) is a program that allows users to enter complex characters and symbols, such as Japanese Kanji characters, by using a standard keyboard.  \\n  \\n As implemented in the <xref:System.Windows.Forms.Form> class, this property always returns the <xref:System.Windows.Forms.ImeMode?displayProperty=fullName> value. The value of this property is assigned to the <xref:System.Windows.Forms.Control.ImeMode%2A?displayProperty=fullName> property.\"\n  syntax:\n    content: protected override System.Windows.Forms.ImeMode DefaultImeMode { get; }\n    return:\n      type: System.Windows.Forms.ImeMode\n      description: One of the <xref href=\"System.Windows.Forms.ImeMode\"></xref> values.\n  overload: System.Windows.Forms.Form.DefaultImeMode*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Form.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Form.DefaultSize\n  commentId: P:System.Windows.Forms.Form.DefaultSize\n  id: DefaultSize\n  parent: System.Windows.Forms.Form\n  langs:\n  - csharp\n  name: DefaultSize\n  nameWithType: Form.DefaultSize\n  fullName: Form.DefaultSize\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets the default size of the control.\n  syntax:\n    content: protected override System.Drawing.Size DefaultSize { get; }\n    return:\n      type: System.Drawing.Size\n      description: The default <xref href=\"System.Drawing.Size\"></xref> of the control.\n  overload: System.Windows.Forms.Form.DefaultSize*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Form.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Form.DefWndProc(System.Windows.Forms.Message@)\n  commentId: M:System.Windows.Forms.Form.DefWndProc(System.Windows.Forms.Message@)\n  id: DefWndProc(System.Windows.Forms.Message@)\n  parent: System.Windows.Forms.Form\n  langs:\n  - csharp\n  name: DefWndProc(Message)\n  nameWithType: Form.DefWndProc(Message)\n  fullName: Form.DefWndProc(Message)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Sends the specified message to the default window procedure.\n  syntax:\n    content: protected override void DefWndProc (ref System.Windows.Forms.Message m);\n    parameters:\n    - id: m\n      type: System.Windows.Forms.Message\n      description: The Windows <xref href=\"System.Windows.Forms.Message\"></xref> to process.\n  overload: System.Windows.Forms.Form.DefWndProc*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Form.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Form.DesktopBounds\n  commentId: P:System.Windows.Forms.Form.DesktopBounds\n  id: DesktopBounds\n  parent: System.Windows.Forms.Form\n  langs:\n  - csharp\n  name: DesktopBounds\n  nameWithType: Form.DesktopBounds\n  fullName: Form.DesktopBounds\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets or sets the size and location of the form on the Windows desktop.\n  remarks: \"Desktop coordinates are based on the working area of the screen, which excludes the taskbar. The coordinate system of the desktop is pixel-based. If your application is running on a multiple monitor system, the coordinates of the form are the coordinates for the combined desktop.  \\n  \\n You can use this property to size and position a form relative to other forms or applications on the Windows desktop.\"\n  example:\n  - \"The following code example sets the size and position of a form so that the form is positioned 50 pixels from the left border of the desktop and 50 pixels from the top of the desktop. This example requires that the method is defined within a form class.  \\n  \\n [!code-cpp[Classic Form.DesktopBounds Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Form.DesktopBounds Example/CPP/source.cpp#1)]\\n [!code-csharp[Classic Form.DesktopBounds Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Form.DesktopBounds Example/CS/source.cs#1)]\\n [!code-vb[Classic Form.DesktopBounds Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Form.DesktopBounds Example/VB/source.vb#1)]\"\n  syntax:\n    content: >-\n      [System.ComponentModel.Browsable(false)]\n\n      public System.Drawing.Rectangle DesktopBounds { get; set; }\n    return:\n      type: System.Drawing.Rectangle\n      description: A <xref href=\"System.Drawing.Rectangle\"></xref> that represents the bounds of the form on the Windows desktop using desktop coordinates.\n  overload: System.Windows.Forms.Form.DesktopBounds*\n  exceptions: []\n  attributes:\n  - type: System.ComponentModel.BrowsableAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Form.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Form.DesktopLocation\n  commentId: P:System.Windows.Forms.Form.DesktopLocation\n  id: DesktopLocation\n  parent: System.Windows.Forms.Form\n  langs:\n  - csharp\n  name: DesktopLocation\n  nameWithType: Form.DesktopLocation\n  fullName: Form.DesktopLocation\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets or sets the location of the form on the Windows desktop.\n  remarks: \"Desktop coordinates are based on the working area of the screen, which excludes the taskbar. The coordinate system of the desktop is pixel based. If your application is running on a multimonitor system, the coordinates of the form are the coordinates for the combined desktop.  \\n  \\n You can use this property to position your form relative to other forms and applications on the Windows desktop.  \\n  \\n If you call the <xref:System.Windows.Forms.Form.SetDesktopLocation%2A> method before calling the <xref:System.Windows.Forms.Form.Show%2A> method, your form will be positioned at its default location, which is determined by the operating system. For more information about window positioning, see the \\\"Window Size and Position\\\" section of the \\\"Window Features\\\" document in the MSDN library at http://msdn.microsoft.com/library.  \\n  \\n If you call <xref:System.Windows.Forms.Form.SetDesktopLocation%2A> after calling <xref:System.Windows.Forms.Form.Show%2A>, your form will be positioned at the location you specified.\"\n  example:\n  - \"The following code example sets the position of a form so that the form is positioned 100 pixels from the left border of the desktop and 100 pixels from the top of the desktop. This example requires that method has been defined within a form class.  \\n  \\n [!code-cpp[Classic Form.DesktopLocation Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Form.DesktopLocation Example/CPP/source.cpp#1)]\\n [!code-csharp[Classic Form.DesktopLocation Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Form.DesktopLocation Example/CS/source.cs#1)]\\n [!code-vb[Classic Form.DesktopLocation Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Form.DesktopLocation Example/VB/source.vb#1)]\"\n  syntax:\n    content: >-\n      [System.ComponentModel.Browsable(false)]\n\n      public System.Drawing.Point DesktopLocation { get; set; }\n    return:\n      type: System.Drawing.Point\n      description: A <xref href=\"System.Drawing.Point\"></xref> that represents the location of the form on the desktop.\n  overload: System.Windows.Forms.Form.DesktopLocation*\n  exceptions: []\n  attributes:\n  - type: System.ComponentModel.BrowsableAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Form.xml\n  ms.technology:\n  - dotnet-winforms\n  ms.author: kempb\n  manager: ghogen\n- uid: System.Windows.Forms.Form.DialogResult\n  commentId: P:System.Windows.Forms.Form.DialogResult\n  id: DialogResult\n  parent: System.Windows.Forms.Form\n  langs:\n  - csharp\n  name: DialogResult\n  nameWithType: Form.DialogResult\n  fullName: Form.DialogResult\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets or sets the dialog result for the form.\n  remarks: \"The dialog result of a form is the value that is returned from the form when it is displayed as a modal dialog box. If the form is displayed as a dialog box, setting this property with a value from the <xref:System.Windows.Forms.DialogResult> enumeration sets the value of the dialog box result for the form, hides the modal dialog box, and returns control to the calling form. This property is typically set by the <xref:System.Windows.Forms.Button.DialogResult%2A> property of a <xref:System.Windows.Forms.Button> control on the form. When the user clicks the <xref:System.Windows.Forms.Button> control, the value assigned to the <xref:System.Windows.Forms.Button.DialogResult%2A> property of the <xref:System.Windows.Forms.Button> is assigned to the <xref:System.Windows.Forms.Form.DialogResult%2A> property of the form.  \\n  \\n When a form is displayed as a modal dialog box, clicking the **Close** button (the button with an X in the top-right corner of the form) causes the form to be hidden and the <xref:System.Windows.Forms.Form.DialogResult%2A> property to be set to `DialogResult.Cancel`. The <xref:System.Windows.Forms.Form.Close%2A> method is not automatically called when the user clicks the **Close** button of a dialog box or sets the value of the <xref:System.Windows.Forms.Form.DialogResult%2A> property. Instead, the form is hidden and can be shown again without creating a new instance of the dialog box. Because of this behavior, you must call the <xref:System.Windows.Forms.Control.Dispose%2A> method of the form when the form is no longer needed by your application.  \\n  \\n You can use this property to determine how a dialog box is closed in order to properly process the actions performed in the dialog box.  \\n  \\n> [!NOTE]\\n>  You can override the value assigned to the <xref:System.Windows.Forms.Form.DialogResult%2A> property when the user clicks the **Close** button by setting the <xref:System.Windows.Forms.Form.DialogResult%2A> property in an event handler for the <xref:System.Windows.Forms.Form.Closing> event of the form.  \\n  \\n> [!NOTE]\\n>  If a <xref:System.Windows.Forms.Form> is displayed as a modeless window, the value returned by the <xref:System.Windows.Forms.Form.DialogResult%2A> property might not return a value assigned to the form because the form's resources are automatically released when the form is closed.\"\n  example:\n  - \"The following code example displays a form as a dialog box and displays a message box indicating whether the OK or Cancel button of the form was clicked by referencing the <xref:System.Windows.Forms.Form.DialogResult%2A> property of the form.  \\n  \\n [!code-cpp[Classic Form.DialogResult Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Form.DialogResult Example/CPP/source.cpp#1)]\\n [!code-csharp[Classic Form.DialogResult Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Form.DialogResult Example/CS/source.cs#1)]\\n [!code-vb[Classic Form.DialogResult Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Form.DialogResult Example/VB/source.vb#1)]\"\n  syntax:\n    content: >-\n      [System.ComponentModel.Browsable(false)]\n\n      public System.Windows.Forms.DialogResult DialogResult { get; set; }\n    return:\n      type: System.Windows.Forms.DialogResult\n      description: A <xref href=\"System.Windows.Forms.DialogResult\"></xref> that represents the result of the form when used as a dialog box.\n  overload: System.Windows.Forms.Form.DialogResult*\n  exceptions:\n  - type: System.ComponentModel.InvalidEnumArgumentException\n    commentId: T:System.ComponentModel.InvalidEnumArgumentException\n    description: The value specified is outside the range of valid values.\n  attributes:\n  - type: System.ComponentModel.BrowsableAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Form.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Form.Dispose(System.Boolean)\n  commentId: M:System.Windows.Forms.Form.Dispose(System.Boolean)\n  id: Dispose(System.Boolean)\n  parent: System.Windows.Forms.Form\n  langs:\n  - csharp\n  name: Dispose(Boolean)\n  nameWithType: Form.Dispose(Boolean)\n  fullName: Form.Dispose(Boolean)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Disposes of the resources (other than memory) used by the <xref href=\"System.Windows.Forms.Form\"></xref>.\n  remarks: \"This method is called by the public `Dispose` method and the <xref:System.Object.Finalize%2A> method. `Dispose` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`. <xref:System.Object.Finalize%2A> invokes `Dispose` with `disposing` set to `false`.  \\n  \\n When the `disposing` parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.Windows.Forms.Form> references. This method invokes the `Dispose` method of each referenced object.  \\n  \\n <xref:System.Windows.Forms.Form.Dispose%2A> will be called automatically if the form is shown using the <xref:System.Windows.Forms.Form.Show%2A> method. If another method such as <xref:System.Windows.Forms.Form.ShowDialog%2A> is used, or the form is never shown at all, you must call <xref:System.Windows.Forms.Form.Dispose%2A> yourself within your application.\"\n  syntax:\n    content: protected override void Dispose (bool disposing);\n    parameters:\n    - id: disposing\n      type: System.Boolean\n      description: '`true` to release both managed and unmanaged resources; `false` to release only unmanaged resources.'\n  overload: System.Windows.Forms.Form.Dispose*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Form.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Form.DpiChanged\n  commentId: E:System.Windows.Forms.Form.DpiChanged\n  id: DpiChanged\n  parent: System.Windows.Forms.Form\n  langs:\n  - csharp\n  name: DpiChanged\n  nameWithType: Form.DpiChanged\n  fullName: Form.DpiChanged\n  type: Event\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Occurs when the DPI setting changes on the display device where the form is currently displayed.\n  syntax:\n    content: public event System.Windows.Forms.DpiChangedEventHandler DpiChanged;\n    return:\n      type: System.Windows.Forms.DpiChangedEventHandler\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.7\n  monikers:\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Form.xml\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Form.FormBorderStyle\n  commentId: P:System.Windows.Forms.Form.FormBorderStyle\n  id: FormBorderStyle\n  parent: System.Windows.Forms.Form\n  langs:\n  - csharp\n  name: FormBorderStyle\n  nameWithType: Form.FormBorderStyle\n  fullName: Form.FormBorderStyle\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets or sets the border style of the form.\n  remarks: \"The border style of the form determines how the outer edge of the form appears. In addition to changing the border display for a form, certain border styles prevent the form from being sized. For example, the `FormBorderStyle.FixedDialog` border style changes the border of the form to that of a dialog box and prevents the form from being resized. The border style can also affect the size or availability of the caption bar section of a form.  \\n  \\n> [!NOTE]\\n>  With the <xref:System.Windows.Forms.FormBorderStyle.Sizable> style, it is impossible to resize the window below a certain minimum value, even if you have set <xref:System.Windows.Forms.Form.ControlBox%2A> to `false` and assigned a zero-length string to <xref:System.Windows.Forms.Form.Text%2A>. Consider working around this by using the <xref:System.Windows.Forms.FormBorderStyle.SizableToolWindow> style instead.\"\n  example:\n  - \"The following code example creates a new instance of a <xref:System.Windows.Forms.Form> and calls the <xref:System.Windows.Forms.Form.ShowDialog%2A> method to display the form as a dialog box. The example sets the <xref:System.Windows.Forms.Form.FormBorderStyle%2A>, <xref:System.Windows.Forms.Form.AcceptButton%2A>, <xref:System.Windows.Forms.Form.CancelButton%2A>, <xref:System.Windows.Forms.Form.MinimizeBox%2A>, <xref:System.Windows.Forms.Form.MaximizeBox%2A>, and <xref:System.Windows.Forms.Form.StartPosition%2A> properties to change the appearance and functionality of the form to a dialog box. The example also uses the <xref:System.Windows.Forms.Form.ControlCollection.Add%2A> method of the form's <xref:System.Windows.Forms.Control.Controls%2A> collection to add two <xref:System.Windows.Forms.Button> controls. The example uses the <xref:System.Windows.Forms.Form.HelpButton%2A> property to display a help button in the caption bar of the dialog box.  \\n  \\n [!code-cpp[Classic Form.AcceptButton Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Form.AcceptButton Example/CPP/source.cpp#1)]\\n [!code-csharp[Classic Form.AcceptButton Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Form.AcceptButton Example/CS/source.cs#1)]\\n [!code-vb[Classic Form.AcceptButton Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Form.AcceptButton Example/VB/source.vb#1)]\"\n  syntax:\n    content: public System.Windows.Forms.FormBorderStyle FormBorderStyle { get; set; }\n    return:\n      type: System.Windows.Forms.FormBorderStyle\n      description: A <xref href=\"System.Windows.Forms.FormBorderStyle\"></xref> that represents the style of border to display for the form. The default is `FormBorderStyle.Sizable`.\n  overload: System.Windows.Forms.Form.FormBorderStyle*\n  exceptions:\n  - type: System.ComponentModel.InvalidEnumArgumentException\n    commentId: T:System.ComponentModel.InvalidEnumArgumentException\n    description: The value specified is outside the range of valid values.\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Form.xml\n  ms.technology:\n  - dotnet-winforms\n  ms.author: kempb\n  manager: ghogen\n- uid: System.Windows.Forms.Form.FormClosed\n  commentId: E:System.Windows.Forms.Form.FormClosed\n  id: FormClosed\n  parent: System.Windows.Forms.Form\n  langs:\n  - csharp\n  name: FormClosed\n  nameWithType: Form.FormClosed\n  fullName: Form.FormClosed\n  type: Event\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Occurs after the form is closed.\n  remarks: \"The <xref:System.Windows.Forms.Form.FormClosed> event occurs after the form has been closed by the user or by the <xref:System.Windows.Forms.Form.Close%2A> method or the <xref:System.Windows.Forms.Application.Exit%2A> method of the <xref:System.Windows.Forms.Application> class. To prevent a form from closing, handle the <xref:System.Windows.Forms.Form.FormClosing> event and set the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> property of the <xref:System.ComponentModel.CancelEventArgs> passed to your event handler to `true`.  \\n  \\n You can use this event to perform tasks such as freeing resources used by the form and to save information entered in the form or to update its parent form.  \\n  \\n If the form is a multiple-document interface (MDI) parent form, the <xref:System.Windows.Forms.Form.FormClosing> events of all MDI child forms are raised before the MDI parent form's <xref:System.Windows.Forms.Form.FormClosing> event is raised. Likewise, the <xref:System.Windows.Forms.Form.FormClosed> events of all MDI child forms are raised before the <xref:System.Windows.Forms.Form.FormClosed> event of the MDI parent form is raised.  \\n  \\n For more information about handling events, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).\"\n  example:\n  - \"The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.Form.FormClosed> event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \\n  \\n To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.Form> named `Form1`. Then ensure that the event handler is associated with the <xref:System.Windows.Forms.Form.FormClosed> event.  \\n  \\n [!code-csharp[System.Windows.Forms.EventExamples#395](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#395)]\\n [!code-vb[System.Windows.Forms.EventExamples#395](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#395)]\"\n  syntax:\n    content: public event System.Windows.Forms.FormClosedEventHandler FormClosed;\n    return:\n      type: System.Windows.Forms.FormClosedEventHandler\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Form.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Form.FormClosing\n  commentId: E:System.Windows.Forms.Form.FormClosing\n  id: FormClosing\n  parent: System.Windows.Forms.Form\n  langs:\n  - csharp\n  name: FormClosing\n  nameWithType: Form.FormClosing\n  fullName: Form.FormClosing\n  type: Event\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Occurs before the form is closed.\n  remarks: \"The <xref:System.Windows.Forms.Form.FormClosing> event occurs as the form is being closed. When a form is closed, it is disposed, releasing all resources associated with the form. If you cancel this event, the form remains opened. To cancel the closure of a form, set the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> property of the <xref:System.Windows.Forms.FormClosingEventArgs> passed to your event handler to `true`.  \\n  \\n When a form is displayed as a modal dialog box, clicking the **Close** button (the button with an X at the upper-right corner of the form) causes the form to be hidden and the <xref:System.Windows.Forms.Form.DialogResult%2A> property to be set to `DialogResult.Cancel`. You can override the value assigned to the <xref:System.Windows.Forms.Form.DialogResult%2A> property when the user clicks the **Close** button by setting the <xref:System.Windows.Forms.Form.DialogResult%2A> property in an event handler for the <xref:System.Windows.Forms.Form.FormClosing> event of the form.  \\n  \\n> [!NOTE]\\n>  When the <xref:System.Windows.Forms.Form.Close%2A> method is called on a <xref:System.Windows.Forms.Form> displayed as a modeless window, you cannot call the <xref:System.Windows.Forms.Control.Show%2A> method to make the form visible, because the form's resources have already been released. To hide a form and then make it visible, use the <xref:System.Windows.Forms.Control.Hide%2A> method.  \\n  \\n If the form is a multiple-document interface (MDI) parent form, the <xref:System.Windows.Forms.Form.FormClosing> events of all MDI child forms are raised before the MDI parent form's <xref:System.Windows.Forms.Form.FormClosing> event is raised. Likewise, the <xref:System.Windows.Forms.Form.FormClosed> events of all MDI child forms are raised before the <xref:System.Windows.Forms.Form.FormClosed> event of the MDI parent form is raised. Canceling the <xref:System.Windows.Forms.Form.FormClosing> event of an MDI child form does not prevent the <xref:System.Windows.Forms.Form.FormClosing> event of the MDI parent form from being raised. However, canceling the event will set to `true` the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> property of the <xref:System.Windows.Forms.FormClosingEventArgs> class that is passed as a parameter to the parent form. To force all MDI parent and child forms to close, set the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> property to `false` in the MDI parent form.  \\n  \\n For more information about handling events, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).\"\n  example:\n  - \"The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.Form.FormClosing> event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \\n  \\n To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.Form> named `Form1`. Then ensure that the event handler is associated with the <xref:System.Windows.Forms.Form.FormClosing> event.  \\n  \\n [!code-csharp[System.Windows.Forms.EventExamples#394](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#394)]\\n [!code-vb[System.Windows.Forms.EventExamples#394](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#394)]\"\n  syntax:\n    content: public event System.Windows.Forms.FormClosingEventHandler FormClosing;\n    return:\n      type: System.Windows.Forms.FormClosingEventHandler\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Form.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Form.GetAutoScaleSize(System.Drawing.Font)\n  commentId: M:System.Windows.Forms.Form.GetAutoScaleSize(System.Drawing.Font)\n  id: GetAutoScaleSize(System.Drawing.Font)\n  parent: System.Windows.Forms.Form\n  langs:\n  - csharp\n  name: GetAutoScaleSize(Font)\n  nameWithType: Form.GetAutoScaleSize(Font)\n  fullName: Form.GetAutoScaleSize(Font)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets the size when autoscaling the form based on a specified font.\n  remarks: \"> [!IMPORTANT]\\n>  The <xref:System.Windows.Forms.Form.GetAutoScaleSize%2A> method is obsolete in.NET Framework version 2.0. This member has been retained for backward compatibility. For more information about automatic scaling, see [Automatic Scaling in Windows Forms](~/docs/framework/winforms/automatic-scaling-in-windows-forms.md).  \\n  \\n You can use this method to determine the size a form would autoscale to for a specific font before applying the font to the form. If you want to determine the size a form is autoscaled to based on the font currently assigned to the form, use the <xref:System.Windows.Forms.Form.AutoScaleBaseSize%2A> property.\"\n  syntax:\n    content: >-\n      [System.Obsolete(\"This method has been deprecated. Use the AutoScaleDimensions property instead.  http://go.microsoft.com/fwlink/?linkid=14202\")]\n\n      public static System.Drawing.SizeF GetAutoScaleSize (System.Drawing.Font font);\n    parameters:\n    - id: font\n      type: System.Drawing.Font\n      description: A <xref href=\"System.Drawing.Font\"></xref> representing the font to determine the autoscaled base size of the form.\n    return:\n      type: System.Drawing.SizeF\n      description: A <xref href=\"System.Drawing.SizeF\"></xref> representing the autoscaled size of the form.\n  overload: System.Windows.Forms.Form.GetAutoScaleSize*\n  exceptions: []\n  attributes:\n  - type: System.ObsoleteAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Form.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Form.GetScaledBounds(System.Drawing.Rectangle,System.Drawing.SizeF,System.Windows.Forms.BoundsSpecified)\n  commentId: M:System.Windows.Forms.Form.GetScaledBounds(System.Drawing.Rectangle,System.Drawing.SizeF,System.Windows.Forms.BoundsSpecified)\n  id: GetScaledBounds(System.Drawing.Rectangle,System.Drawing.SizeF,System.Windows.Forms.BoundsSpecified)\n  parent: System.Windows.Forms.Form\n  langs:\n  - csharp\n  name: GetScaledBounds(Rectangle, SizeF, BoundsSpecified)\n  nameWithType: Form.GetScaledBounds(Rectangle, SizeF, BoundsSpecified)\n  fullName: Form.GetScaledBounds(Rectangle, SizeF, BoundsSpecified)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Retrieves the bounds within which the control is scaled.\n  syntax:\n    content: protected override System.Drawing.Rectangle GetScaledBounds (System.Drawing.Rectangle bounds, System.Drawing.SizeF factor, System.Windows.Forms.BoundsSpecified specified);\n    parameters:\n    - id: bounds\n      type: System.Drawing.Rectangle\n      description: A <xref href=\"System.Drawing.Rectangle\"></xref> that specifies the area for which to retrieve the display bounds.\n    - id: factor\n      type: System.Drawing.SizeF\n      description: The height and width of the control's bounds.\n    - id: specified\n      type: System.Windows.Forms.BoundsSpecified\n      description: One of the values of <xref href=\"System.Windows.Forms.BoundsSpecified\"></xref> that specifies the bounds of the control to use when defining its size and position.\n    return:\n      type: System.Drawing.Rectangle\n      description: A <xref href=\"System.Drawing.Rectangle\"></xref> representing the bounds within which the control is scaled.\n  overload: System.Windows.Forms.Form.GetScaledBounds*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Form.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Form.HelpButton\n  commentId: P:System.Windows.Forms.Form.HelpButton\n  id: HelpButton\n  parent: System.Windows.Forms.Form\n  langs:\n  - csharp\n  name: HelpButton\n  nameWithType: Form.HelpButton\n  fullName: Form.HelpButton\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets or sets a value indicating whether a Help button should be displayed in the caption box of the form.\n  remarks: \"When this property is set to `true`, a small button with a question mark appears in the caption bar to the left of the **Close** button. You can use this button to display help for your application. You can create an event handler for the <xref:System.Windows.Forms.Control.HelpRequested> event of the <xref:System.Windows.Forms.Control> class to display Help information to the user when the Help button of the form is clicked.  \\n  \\n> [!IMPORTANT]\\n>  The value of the <xref:System.Windows.Forms.Form.HelpButton%2A> property is ignored if the **Maximize** or **Minimize** buttons are shown.\"\n  example:\n  - \"The following code example creates a new instance of a <xref:System.Windows.Forms.Form> and calls the <xref:System.Windows.Forms.Form.ShowDialog%2A> method to display the form as a dialog box. The example sets the <xref:System.Windows.Forms.Form.FormBorderStyle%2A>, <xref:System.Windows.Forms.Form.AcceptButton%2A>, <xref:System.Windows.Forms.Form.CancelButton%2A>, <xref:System.Windows.Forms.Form.MinimizeBox%2A>, <xref:System.Windows.Forms.Form.MaximizeBox%2A>, and <xref:System.Windows.Forms.Form.StartPosition%2A> properties to change the appearance and functionality of the form to a dialog box. The example also uses the <xref:System.Windows.Forms.Form.ControlCollection.Add%2A> method of the form's <xref:System.Windows.Forms.Control.Controls%2A> collection to add two <xref:System.Windows.Forms.Button> controls. The example uses the <xref:System.Windows.Forms.Form.HelpButton%2A> property to display a Help button in the caption bar of the dialog box.  \\n  \\n [!code-cpp[Classic Form.AcceptButton Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Form.AcceptButton Example/CPP/source.cpp#1)]\\n [!code-csharp[Classic Form.AcceptButton Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Form.AcceptButton Example/CS/source.cs#1)]\\n [!code-vb[Classic Form.AcceptButton Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Form.AcceptButton Example/VB/source.vb#1)]\"\n  syntax:\n    content: public bool HelpButton { get; set; }\n    return:\n      type: System.Boolean\n      description: \"`true` to display a Help button in the form's caption bar; otherwise, `false`. The default is `false`.\"\n  overload: System.Windows.Forms.Form.HelpButton*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Form.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Form.HelpButtonClicked\n  commentId: E:System.Windows.Forms.Form.HelpButtonClicked\n  id: HelpButtonClicked\n  parent: System.Windows.Forms.Form\n  langs:\n  - csharp\n  name: HelpButtonClicked\n  nameWithType: Form.HelpButtonClicked\n  fullName: Form.HelpButtonClicked\n  type: Event\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Occurs when the **Help** button is clicked.\n  remarks: \"The <xref:System.Windows.Forms.Form.HelpButtonClicked> event occurs when the **Help** button in the form's caption bar is clicked. The **Help** button is displayed when the <xref:System.Windows.Forms.Form.HelpButton%2A> property is set to `true`. <xref:System.Windows.Forms.Form.HelpButtonClicked> can be canceled.  \\n  \\n For more information about handling events, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).\"\n  example:\n  - \"The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.Form.HelpButtonClicked> event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \\n  \\n To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.Form> named `Form1`. Then ensure that the event handler is associated with the <xref:System.Windows.Forms.Form.HelpButtonClicked> event.  \\n  \\n [!code-csharp[System.Windows.Forms.EventExamples#388](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#388)]\\n [!code-vb[System.Windows.Forms.EventExamples#388](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#388)]\"\n  syntax:\n    content: >-\n      [System.ComponentModel.Browsable(true)]\n\n      public event System.ComponentModel.CancelEventHandler HelpButtonClicked;\n    return:\n      type: System.ComponentModel.CancelEventHandler\n      description: ''\n  exceptions: []\n  attributes:\n  - type: System.ComponentModel.BrowsableAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Form.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Form.Icon\n  commentId: P:System.Windows.Forms.Form.Icon\n  id: Icon\n  parent: System.Windows.Forms.Form\n  langs:\n  - csharp\n  name: Icon\n  nameWithType: Form.Icon\n  fullName: Form.Icon\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets or sets the icon for the form.\n  remarks: \"A form's icon designates the picture that represents the form in the taskbar as well as the icon that is displayed for the control box of the form.  \\n  \\n This property will have no effect if <xref:System.Windows.Forms.Form.FormBorderStyle%2A> is set to <xref:System.Windows.Forms.FormBorderStyle.FixedDialog>. In that case, the form will not display an icon.\"\n  syntax:\n    content: public System.Drawing.Icon Icon { get; set; }\n    return:\n      type: System.Drawing.Icon\n      description: An <xref href=\"System.Drawing.Icon\"></xref> that represents the icon for the form.\n  overload: System.Windows.Forms.Form.Icon*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Form.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Form.InputLanguageChanged\n  commentId: E:System.Windows.Forms.Form.InputLanguageChanged\n  id: InputLanguageChanged\n  parent: System.Windows.Forms.Form\n  langs:\n  - csharp\n  name: InputLanguageChanged\n  nameWithType: Form.InputLanguageChanged\n  fullName: Form.InputLanguageChanged\n  type: Event\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Occurs after the input language of the form has changed.\n  remarks: \"You can use this event to make changes to your form's appearance and text based on changes made to the input language of the form.  \\n  \\n For more information about handling events, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).\"\n  example:\n  - \"The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.Form.InputLanguageChanged> event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \\n  \\n To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.Form> named `Form1`. Then ensure that the event handler is associated with the <xref:System.Windows.Forms.Form.InputLanguageChanged> event.  \\n  \\n [!code-csharp[System.Windows.Forms.EventExamples#400](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#400)]\\n [!code-vb[System.Windows.Forms.EventExamples#400](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#400)]\"\n  syntax:\n    content: public event System.Windows.Forms.InputLanguageChangedEventHandler InputLanguageChanged;\n    return:\n      type: System.Windows.Forms.InputLanguageChangedEventHandler\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Form.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Form.InputLanguageChanging\n  commentId: E:System.Windows.Forms.Form.InputLanguageChanging\n  id: InputLanguageChanging\n  parent: System.Windows.Forms.Form\n  langs:\n  - csharp\n  name: InputLanguageChanging\n  nameWithType: Form.InputLanguageChanging\n  fullName: Form.InputLanguageChanging\n  type: Event\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Occurs when the user attempts to change the input language for the form.\n  remarks: \"This event occurs before the change of input language is made for the form. You can cancel the language change by setting the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> property of the <xref:System.Windows.Forms.InputLanguageChangingEventArgs> passed to your event handler to `false`. If the event is canceled, the input language is not changed. You can use this event to determine whether the requested input language change is appropriate for your application.  \\n  \\n For more information about handling events, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).\"\n  example:\n  - \"The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.Form.InputLanguageChanging> event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \\n  \\n To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.Form> named `Form1`. Then ensure that the event handler is associated with the <xref:System.Windows.Forms.Form.InputLanguageChanging> event.  \\n  \\n [!code-csharp[System.Windows.Forms.EventExamples#401](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#401)]\\n [!code-vb[System.Windows.Forms.EventExamples#401](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#401)]\"\n  syntax:\n    content: public event System.Windows.Forms.InputLanguageChangingEventHandler InputLanguageChanging;\n    return:\n      type: System.Windows.Forms.InputLanguageChangingEventHandler\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Form.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Form.IsMdiChild\n  commentId: P:System.Windows.Forms.Form.IsMdiChild\n  id: IsMdiChild\n  parent: System.Windows.Forms.Form\n  langs:\n  - csharp\n  name: IsMdiChild\n  nameWithType: Form.IsMdiChild\n  fullName: Form.IsMdiChild\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets a value indicating whether the form is a multiple-document interface (MDI) child form.\n  remarks: \"At run time, MDI child forms are displayed inside the client area of an MDI parent form. An MDI child form can be maximized, minimized, and moved within the MDI parent form. To create an MDI child form, assign the <xref:System.Windows.Forms.Form> that will be the MDI parent form to the <xref:System.Windows.Forms.Form.MdiParent%2A> property of the child form. You can use the <xref:System.Windows.Forms.Form.IsMdiContainer%2A> property to determine whether a form is an MDI parent form.  \\n  \\n You can use the <xref:System.Windows.Forms.Form.IsMdiChild%2A> property to determine whether a form returned by a method or property is an MDI child form or a standard form in your application such as a dialog box.  \\n  \\n> [!NOTE]\\n>  All MDI child forms have sizable borders, a control-menu box, and Minimize and **Maximize** buttons, regardless of the settings of the <xref:System.Windows.Forms.Form.FormBorderStyle%2A>, <xref:System.Windows.Forms.Form.ControlBox%2A>, <xref:System.Windows.Forms.Form.MinimizeBox%2A>, and <xref:System.Windows.Forms.Form.MaximizeBox%2A> properties.\"\n  syntax:\n    content: >-\n      [System.ComponentModel.Browsable(false)]\n\n      public bool IsMdiChild { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if the form is an MDI child form; otherwise, `false`.'\n  overload: System.Windows.Forms.Form.IsMdiChild*\n  exceptions: []\n  attributes:\n  - type: System.ComponentModel.BrowsableAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Form.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Form.IsMdiContainer\n  commentId: P:System.Windows.Forms.Form.IsMdiContainer\n  id: IsMdiContainer\n  parent: System.Windows.Forms.Form\n  langs:\n  - csharp\n  name: IsMdiContainer\n  nameWithType: Form.IsMdiContainer\n  fullName: Form.IsMdiContainer\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets or sets a value indicating whether the form is a container for multiple-document interface (MDI) child forms.\n  remarks: \"This property changes the display and behavior of the form to an MDI parent form. When this property is set to `true`, the form displays a sunken client area with a raised border. All MDI child forms assigned to the parent form are displayed within its client area.  \\n  \\n When an MDI parent form is closed, the <xref:System.Windows.Forms.Form.Closing> events of all MDI child forms are raised before the MDI parent form's <xref:System.Windows.Forms.Form.Closing> event is raised. In addition, the <xref:System.Windows.Forms.Form.Closed> events of all MDI child forms are raised before the <xref:System.Windows.Forms.Form.Closed> event of the MDI parent form is raised.  \\n  \\n> [!NOTE]\\n>  If there are two <xref:System.Windows.Forms.MenuStrip> controls on an MDI child form, setting <xref:System.Windows.Forms.Form.IsMdiContainer%2A> to `true` for the parent form merges the contents of only one of the <xref:System.Windows.Forms.MenuStrip> controls. Use <xref:System.Windows.Forms.ToolStripManager.Merge%2A> to merge the contents of additional child <xref:System.Windows.Forms.MenuStrip> controls on the MDI parent form.\"\n  example:\n  - \"The following code example demonstrates using the <xref:System.Windows.Forms.Form.IsMdiContainer%2A> property as well as changing the `BackColor` property of an MDI Form. To run this example, paste the following code in a new form.  \\n  \\n [!code-csharp[System.Windows.Forms.MdiClientExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.MdiClientExample/CS/form1.cs#1)]\\n [!code-vb[System.Windows.Forms.MdiClientExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.MdiClientExample/VB/form1.vb#1)]\"\n  syntax:\n    content: public bool IsMdiContainer { get; set; }\n    return:\n      type: System.Boolean\n      description: '`true` if the form is a container for MDI child forms; otherwise, `false`. The default is `false`.'\n  overload: System.Windows.Forms.Form.IsMdiContainer*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Form.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Form.IsRestrictedWindow\n  commentId: P:System.Windows.Forms.Form.IsRestrictedWindow\n  id: IsRestrictedWindow\n  parent: System.Windows.Forms.Form\n  langs:\n  - csharp\n  name: IsRestrictedWindow\n  nameWithType: Form.IsRestrictedWindow\n  fullName: Form.IsRestrictedWindow\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets a value indicating whether the form can use all windows and user input events without restriction.\n  remarks: The <xref:System.Windows.Forms.Form.IsRestrictedWindow%2A> property determines whether the <xref:System.Security.Permissions.UIPermissionWindow.AllWindows> permission is granted. This property is set at run time in the form's constructor, and is cached for the lifetime of the form. Windows Forms applications running in partial trust cannot circumvent this check, as the common language runtime ensures that the parent constructor is always called in partial trust.\n  syntax:\n    content: >-\n      [System.ComponentModel.Browsable(false)]\n\n      public bool IsRestrictedWindow { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if the form has restrictions; otherwise, `false`. The default is `true`.'\n  overload: System.Windows.Forms.Form.IsRestrictedWindow*\n  exceptions: []\n  attributes:\n  - type: System.ComponentModel.BrowsableAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Form.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Form.KeyPreview\n  commentId: P:System.Windows.Forms.Form.KeyPreview\n  id: KeyPreview\n  parent: System.Windows.Forms.Form\n  langs:\n  - csharp\n  name: KeyPreview\n  nameWithType: Form.KeyPreview\n  fullName: Form.KeyPreview\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets or sets a value indicating whether the form will receive key events before the event is passed to the control that has focus.\n  remarks: \"When this property is set to `true`, the form will receive all <xref:System.Windows.Forms.Control.KeyPress>, <xref:System.Windows.Forms.Control.KeyDown>, and <xref:System.Windows.Forms.Control.KeyUp> events. After the form's event handlers have completed processing the keystroke, the keystroke is then assigned to the control with focus. For example, if the <xref:System.Windows.Forms.Form.KeyPreview%2A> property is set to `true` and the currently selected control is a <xref:System.Windows.Forms.TextBox>, after the keystroke is handled by the event handlers of the form the <xref:System.Windows.Forms.TextBox> control will receive the key that was pressed. To handle keyboard events only at the form level and not allow controls to receive keyboard events, set the <xref:System.Windows.Forms.KeyPressEventArgs.Handled%2A?displayProperty=fullName> property in your form's <xref:System.Windows.Forms.Control.KeyPress> event handler to `true`.  \\n  \\n You can use this property to process most keystrokes in your application and either handle the keystroke or call the appropriate control to handle the keystroke. For example, when an application uses function keys, you might want to process the keystrokes at the form level rather than writing code for each control that might receive keystroke events.  \\n  \\n> [!NOTE]\\n>  If a form has no visible or enabled controls, it automatically receives all keyboard events.  \\n  \\n> [!NOTE]\\n>  A control on a form may be programmed to cancel any keystrokes it receives. Since the control never sends these keystrokes to the form, the form will never see them regardless of the setting of <xref:System.Windows.Forms.Form.KeyPreview%2A>.\"\n  example:\n  - \"The following code example demonstrates setting a form's <xref:System.Windows.Forms.Form.KeyPreview%2A> property to true and handling the key events at the form level. To run the example, paste the following code in a blank form.  \\n  \\n [!code-cpp[System.Windows.Forms.ProcessMnemonic#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ProcessMnemonic/CPP/form1.cpp#2)]\\n [!code-csharp[System.Windows.Forms.ProcessMnemonic#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ProcessMnemonic/CS/form1.cs#2)]\\n [!code-vb[System.Windows.Forms.ProcessMnemonic#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ProcessMnemonic/VB/form1.vb#2)]\"\n  syntax:\n    content: public bool KeyPreview { get; set; }\n    return:\n      type: System.Boolean\n      description: '`true` if the form will receive all key events; `false` if the currently selected control on the form receives key events. The default is `false`.'\n  overload: System.Windows.Forms.Form.KeyPreview*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Form.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Form.LayoutMdi(System.Windows.Forms.MdiLayout)\n  commentId: M:System.Windows.Forms.Form.LayoutMdi(System.Windows.Forms.MdiLayout)\n  id: LayoutMdi(System.Windows.Forms.MdiLayout)\n  parent: System.Windows.Forms.Form\n  langs:\n  - csharp\n  name: LayoutMdi(MdiLayout)\n  nameWithType: Form.LayoutMdi(MdiLayout)\n  fullName: Form.LayoutMdi(MdiLayout)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Arranges the multiple-document interface (MDI) child forms within the MDI parent form.\n  remarks: You can use this method to arrange the MDI child forms in your MDI parent form to allow for easier navigation and manipulation of MDI child forms. MDI child forms can be tiled horizontally and vertically, cascaded, or as icons within the MDI parent form.\n  example:\n  - \"The following code example shows the event handlers for the menu items of a Window menu in an MDI application's parent form. Each event handler makes calls to the <xref:System.Windows.Forms.Form.LayoutMdi%2A> method to arrange any child forms that are currently open in the application.  \\n  \\n [!code-cpp[Classic Form.LayoutMdi Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Form.LayoutMdi Example/CPP/source.cpp#1)]\\n [!code-csharp[Classic Form.LayoutMdi Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Form.LayoutMdi Example/CS/source.cs#1)]\\n [!code-vb[Classic Form.LayoutMdi Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Form.LayoutMdi Example/VB/source.vb#1)]\"\n  syntax:\n    content: public void LayoutMdi (System.Windows.Forms.MdiLayout value);\n    parameters:\n    - id: value\n      type: System.Windows.Forms.MdiLayout\n      description: One of the <xref href=\"System.Windows.Forms.MdiLayout\"></xref> values that defines the layout of MDI child forms.\n  overload: System.Windows.Forms.Form.LayoutMdi*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Form.xml\n  ms.technology:\n  - dotnet-winforms\n  ms.author: kempb\n  manager: ghogen\n- uid: System.Windows.Forms.Form.Load\n  commentId: E:System.Windows.Forms.Form.Load\n  id: Load\n  parent: System.Windows.Forms.Form\n  langs:\n  - csharp\n  name: Load\n  nameWithType: Form.Load\n  fullName: Form.Load\n  type: Event\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Occurs before a form is displayed for the first time.\n  remarks: \"You can use this event to perform tasks such as allocating resources used by the form.  \\n  \\n For more information about handling events, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).\"\n  example:\n  - \"The following code example demonstrates how to use the <xref:System.Windows.Forms.Form.SetDesktopLocation%2A>, <xref:System.Windows.Forms.Form.Load>, <xref:System.Windows.Forms.Form.Activated>, and <xref:System.Windows.Forms.Form.Activate%2A> members. To run the example, paste the following code in a form called `Form1` containing a <xref:System.Windows.Forms.Button> called `Button1` and two <xref:System.Windows.Forms.Label> controls called `Label1` and `Label2`.  \\n  \\n [!code-cpp[System.Windows.Forms.FormsActivate#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.FormsActivate/CPP/form1.cpp#1)]\\n [!code-csharp[System.Windows.Forms.FormsActivate#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.FormsActivate/CS/form1.cs#1)]\\n [!code-vb[System.Windows.Forms.FormsActivate#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.FormsActivate/VB/form1.vb#1)]\"\n  syntax:\n    content: public event EventHandler Load;\n    return:\n      type: System.EventHandler\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Form.xml\n  ms.technology:\n  - dotnet-winforms\n  ms.author: kempb\n  manager: ghogen\n- uid: System.Windows.Forms.Form.Location\n  commentId: P:System.Windows.Forms.Form.Location\n  id: Location\n  parent: System.Windows.Forms.Form\n  langs:\n  - csharp\n  name: Location\n  nameWithType: Form.Location\n  fullName: Form.Location\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets or sets the <xref href=\"System.Drawing.Point\"></xref> that represents the upper-left corner of the <xref href=\"System.Windows.Forms.Form\"></xref> in screen coordinates.\n  remarks: \"<xref:System.Drawing.Point> is a structure, which means that it is a value type. If you access a property in <xref:System.Drawing.Point>, a copy of the property is returned. Therefore, changing the <xref:System.Drawing.Point.X%2A> or <xref:System.Drawing.Point.Y%2A> properties of the <xref:System.Drawing.Point> returned from the <xref:System.Windows.Forms.Control.Location%2A> property will not affect the <xref:System.Windows.Forms.Control.Left%2A>, <xref:System.Windows.Forms.Control.Right%2A>, <xref:System.Windows.Forms.Control.Top%2A>, or <xref:System.Windows.Forms.Control.Bottom%2A> property values of the <xref:System.Windows.Forms.Form>. To adjust these properties, set each property value individually, or set the <xref:System.Windows.Forms.Form.Location%2A> property with a new <xref:System.Drawing.Point>.  \\n  \\n The <xref:System.Windows.Forms.Form.Location%2A> property gets or sets the <xref:System.Windows.Forms.Control.Location%2A> property of the <xref:System.Windows.Forms.Control> base class, and sets the <xref:System.ComponentModel.SettingsBindableAttribute.Bindable%2A> property to `true`.\"\n  syntax:\n    content: >-\n      [System.ComponentModel.SettingsBindable(true)]\n\n      public System.Drawing.Point Location { get; set; }\n    return:\n      type: System.Drawing.Point\n      description: The <xref href=\"System.Drawing.Point\"></xref> that represents the upper-left corner of the <xref href=\"System.Windows.Forms.Form\"></xref> in screen coordinates.\n  overload: System.Windows.Forms.Form.Location*\n  exceptions: []\n  attributes:\n  - type: System.ComponentModel.SettingsBindableAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Form.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Form.MainMenuStrip\n  commentId: P:System.Windows.Forms.Form.MainMenuStrip\n  id: MainMenuStrip\n  parent: System.Windows.Forms.Form\n  langs:\n  - csharp\n  name: MainMenuStrip\n  nameWithType: Form.MainMenuStrip\n  fullName: Form.MainMenuStrip\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets or sets the primary menu container for the form.\n  remarks: \"In addition to setting the <xref:System.Windows.Forms.Form.MainMenuStrip%2A> property, you must <xref:System.Windows.Forms.Control.ControlCollection.Add%2A> the <xref:System.Windows.Forms.MenuStrip> control to the <xref:System.Windows.Forms.Control.Controls%2A> collection of the form.  \\n  \\n The <xref:System.Windows.Forms.MenuStrip> class supersedes the <xref:System.Windows.Forms.MainMenu> class in previous versions of the .NET Framework.\"\n  syntax:\n    content: >-\n      [System.ComponentModel.TypeConverter(typeof(System.ComponentModel.ReferenceConverter))]\n\n      public System.Windows.Forms.MenuStrip MainMenuStrip { get; set; }\n    return:\n      type: System.Windows.Forms.MenuStrip\n      description: A <xref href=\"System.Windows.Forms.MenuStrip\"></xref> that represents the container for the menu structure of the form. The default is `null`.\n  overload: System.Windows.Forms.Form.MainMenuStrip*\n  exceptions: []\n  attributes:\n  - type: System.ComponentModel.TypeConverterAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Form.xml\n  ms.technology:\n  - dotnet-winforms\n  ms.author: kempb\n  manager: ghogen\n- uid: System.Windows.Forms.Form.Margin\n  commentId: P:System.Windows.Forms.Form.Margin\n  id: Margin\n  parent: System.Windows.Forms.Form\n  langs:\n  - csharp\n  name: Margin\n  nameWithType: Form.Margin\n  fullName: Form.Margin\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets or sets the space between controls.\n  syntax:\n    content: >-\n      [System.ComponentModel.Browsable(false)]\n\n      public System.Windows.Forms.Padding Margin { get; set; }\n    return:\n      type: System.Windows.Forms.Padding\n      description: A value that represents the space between controls.\n  overload: System.Windows.Forms.Form.Margin*\n  exceptions: []\n  attributes:\n  - type: System.ComponentModel.BrowsableAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Form.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Form.MarginChanged\n  commentId: E:System.Windows.Forms.Form.MarginChanged\n  id: MarginChanged\n  parent: System.Windows.Forms.Form\n  langs:\n  - csharp\n  name: MarginChanged\n  nameWithType: Form.MarginChanged\n  fullName: Form.MarginChanged\n  type: Event\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Occurs when the <xref href=\"System.Windows.Forms.Form.Margin\"></xref> property changes.\n  syntax:\n    content: >-\n      [System.ComponentModel.Browsable(false)]\n\n      public event EventHandler MarginChanged;\n    return:\n      type: System.EventHandler\n      description: ''\n  exceptions: []\n  attributes:\n  - type: System.ComponentModel.BrowsableAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Form.xml\n  ms.technology:\n  - dotnet-winforms\n  ms.author: kempb\n  manager: ghogen\n- uid: System.Windows.Forms.Form.MaximizeBox\n  commentId: P:System.Windows.Forms.Form.MaximizeBox\n  id: MaximizeBox\n  parent: System.Windows.Forms.Form\n  langs:\n  - csharp\n  name: MaximizeBox\n  nameWithType: Form.MaximizeBox\n  fullName: Form.MaximizeBox\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets or sets a value indicating whether the **Maximize** button is displayed in the caption bar of the form.\n  remarks: \"A **Maximize** button enables users to enlarge a window to full-screen size. To display a **Maximize** button, you must also set the form's <xref:System.Windows.Forms.Form.FormBorderStyle%2A> property to `FormBorderStyle.FixedSingle`, `FormBorderStyle.Sizable`, `FormBorderStyle.Fixed3D`, or `FormBorderStyle.FixedDialog`.  \\n  \\n A **Maximize** button automatically becomes a restore button when a window is maximized. Minimizing or restoring a window automatically changes the restore button back to a **Maximize** button.  \\n  \\n> [!NOTE]\\n>  Maximizing a form at run time generates a <xref:System.Windows.Forms.Control.Resize> event. The <xref:System.Windows.Forms.Form.WindowState%2A> property reflects the current state of the window. If you set the <xref:System.Windows.Forms.Form.WindowState%2A> property to `FormWindowState.Maximized`, the form is maximized independently of whatever settings are in effect for the <xref:System.Windows.Forms.Form.MaximizeBox%2A> and <xref:System.Windows.Forms.Form.FormBorderStyle%2A> properties.\"\n  example:\n  - \"The following code example creates a new instance of a <xref:System.Windows.Forms.Form> and calls the <xref:System.Windows.Forms.Form.ShowDialog%2A> method to display the form as a dialog box. The example sets the <xref:System.Windows.Forms.Form.FormBorderStyle%2A>, <xref:System.Windows.Forms.Form.AcceptButton%2A>, <xref:System.Windows.Forms.Form.CancelButton%2A>, <xref:System.Windows.Forms.Form.MinimizeBox%2A>, <xref:System.Windows.Forms.Form.MaximizeBox%2A>, and <xref:System.Windows.Forms.Form.StartPosition%2A> properties to change the appearance and functionality of the form to a dialog box. The example also uses the <xref:System.Windows.Forms.Form.ControlCollection.Add%2A> method of the form's <xref:System.Windows.Forms.Control.Controls%2A> collection to add two <xref:System.Windows.Forms.Button> controls. The example uses the <xref:System.Windows.Forms.Form.HelpButton%2A> property to display a help button in the caption bar of the dialog box.  \\n  \\n [!code-cpp[Classic Form.AcceptButton Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Form.AcceptButton Example/CPP/source.cpp#1)]\\n [!code-csharp[Classic Form.AcceptButton Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Form.AcceptButton Example/CS/source.cs#1)]\\n [!code-vb[Classic Form.AcceptButton Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Form.AcceptButton Example/VB/source.vb#1)]\"\n  syntax:\n    content: public bool MaximizeBox { get; set; }\n    return:\n      type: System.Boolean\n      description: '`true` to display a **Maximize** button for the form; otherwise, `false`. The default is `true`.'\n  overload: System.Windows.Forms.Form.MaximizeBox*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Form.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Form.MaximizedBounds\n  commentId: P:System.Windows.Forms.Form.MaximizedBounds\n  id: MaximizedBounds\n  parent: System.Windows.Forms.Form\n  langs:\n  - csharp\n  name: MaximizedBounds\n  nameWithType: Form.MaximizedBounds\n  fullName: Form.MaximizedBounds\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets and sets the size of the form when it is maximized.\n  syntax:\n    content: protected System.Drawing.Rectangle MaximizedBounds { get; set; }\n    return:\n      type: System.Drawing.Rectangle\n      description: A <xref href=\"System.Drawing.Rectangle\"></xref> that represents the bounds of the form when it is maximized.\n  overload: System.Windows.Forms.Form.MaximizedBounds*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"The value of the <xref href=\\\"System.Drawing.Rectangle.Top\\\"></xref> property is greater than the height of the form.  \\n  \\n -or-  \\n  \\n The value of the <xref href=\\\"System.Drawing.Rectangle.Left\\\"></xref> property is greater than the width of the form.\"\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Form.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Form.MaximizedBoundsChanged\n  commentId: E:System.Windows.Forms.Form.MaximizedBoundsChanged\n  id: MaximizedBoundsChanged\n  parent: System.Windows.Forms.Form\n  langs:\n  - csharp\n  name: MaximizedBoundsChanged\n  nameWithType: Form.MaximizedBoundsChanged\n  fullName: Form.MaximizedBoundsChanged\n  type: Event\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Occurs when the value of the <xref href=\"System.Windows.Forms.Form.MaximizedBounds\"></xref> property has changed.\n  remarks: For more information about handling events, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).\n  example:\n  - \"The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.Form.MaximizedBoundsChanged> event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \\n  \\n To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.Form> named `Form1`. Then ensure that the event handler is associated with the <xref:System.Windows.Forms.Form.MaximizedBoundsChanged> event.  \\n  \\n [!code-csharp[System.Windows.Forms.EventExamples#389](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#389)]\\n [!code-vb[System.Windows.Forms.EventExamples#389](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#389)]\"\n  syntax:\n    content: public event EventHandler MaximizedBoundsChanged;\n    return:\n      type: System.EventHandler\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Form.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Form.MaximumSize\n  commentId: P:System.Windows.Forms.Form.MaximumSize\n  id: MaximumSize\n  parent: System.Windows.Forms.Form\n  langs:\n  - csharp\n  name: MaximumSize\n  nameWithType: Form.MaximumSize\n  fullName: Form.MaximumSize\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets the maximum size the form can be resized to.\n  remarks: This property enables you to limit the size of a form to a specified maximum size. You can use this feature when displaying multiple windows at the same time, to ensure that a single window does not cause other windows to be hidden. If this property is set to a <xref:System.Drawing.Size> object that is 0 in height and 0 in width, the form will have no maximum size beyond the limits set by Windows.\n  example:\n  - \"The following code example demonstrates setting the <xref:System.Windows.Forms.Form.MaximumSize%2A> property.  \\n  \\n [!code-cpp[System.Windows.Forms.FormExample#3](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.FormExample/CPP/form1.cpp#3)]\\n [!code-csharp[System.Windows.Forms.FormExample#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.FormExample/CS/form1.cs#3)]\\n [!code-vb[System.Windows.Forms.FormExample#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.FormExample/VB/form1.vb#3)]\"\n  syntax:\n    content: public override System.Drawing.Size MaximumSize { get; set; }\n    return:\n      type: System.Drawing.Size\n      description: A <xref href=\"System.Drawing.Size\"></xref> that represents the maximum size for the form.\n  overload: System.Windows.Forms.Form.MaximumSize*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: The values of the height or width within the <xref href=\"System.Drawing.Size\"></xref> object are less than zero.\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Form.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Form.MaximumSizeChanged\n  commentId: E:System.Windows.Forms.Form.MaximumSizeChanged\n  id: MaximumSizeChanged\n  parent: System.Windows.Forms.Form\n  langs:\n  - csharp\n  name: MaximumSizeChanged\n  nameWithType: Form.MaximumSizeChanged\n  fullName: Form.MaximumSizeChanged\n  type: Event\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Occurs when the value of the <xref href=\"System.Windows.Forms.Form.MaximumSize\"></xref> property has changed.\n  remarks: For more information about handling events, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).\n  example:\n  - \"The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.Form.MaximumSizeChanged> event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \\n  \\n To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.Form> named `Form1`. Then ensure that the event handler is associated with the <xref:System.Windows.Forms.Form.MaximumSizeChanged> event.  \\n  \\n [!code-csharp[System.Windows.Forms.EventExamples#390](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#390)]\\n [!code-vb[System.Windows.Forms.EventExamples#390](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#390)]\"\n  syntax:\n    content: public event EventHandler MaximumSizeChanged;\n    return:\n      type: System.EventHandler\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Form.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Form.MdiChildActivate\n  commentId: E:System.Windows.Forms.Form.MdiChildActivate\n  id: MdiChildActivate\n  parent: System.Windows.Forms.Form\n  langs:\n  - csharp\n  name: MdiChildActivate\n  nameWithType: Form.MdiChildActivate\n  fullName: Form.MdiChildActivate\n  type: Event\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Occurs when a multiple-document interface (MDI) child form is activated or closed within an MDI application.\n  remarks: \"You can use this event to perform tasks such as updating the contents of the MDI child form and changing the menu options available in the MDI parent form based on the status of the MDI child form that is activated.  \\n  \\n For more information about handling events, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).\"\n  example:\n  - \"The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.Form.MdiChildActivate> event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \\n  \\n To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.Form> named `Form1`. Then ensure that the event handler is associated with the <xref:System.Windows.Forms.Form.MdiChildActivate> event.  \\n  \\n [!code-csharp[System.Windows.Forms.EventExamples#397](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#397)]\\n [!code-vb[System.Windows.Forms.EventExamples#397](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#397)]\"\n  syntax:\n    content: public event EventHandler MdiChildActivate;\n    return:\n      type: System.EventHandler\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Form.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Form.MdiChildren\n  commentId: P:System.Windows.Forms.Form.MdiChildren\n  id: MdiChildren\n  parent: System.Windows.Forms.Form\n  langs:\n  - csharp\n  name: MdiChildren\n  nameWithType: Form.MdiChildren\n  fullName: Form.MdiChildren\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets an array of forms that represent the multiple-document interface (MDI) child forms that are parented to this form.\n  remarks: \"This property allows you to obtain references to all the MDI child forms currently opened in an MDI parent form. To create an MDI child form, assign the <xref:System.Windows.Forms.Form> that will be the MDI parent form to the <xref:System.Windows.Forms.Form.MdiParent%2A> property of the child form.  \\n  \\n You can use this property to loop through all the MDI child forms to perform operations such as saving data to a database when the MDI parent form closes or to update fields on the child forms based on actions performed in your application.\"\n  example:\n  - \"The following code example demonstrates how to use the <xref:System.Windows.Forms.Form.MdiChildren%2A> property to iterate through the list of MDI child forms and add a <xref:System.Windows.Forms.Button> control to each.  \\n  \\n [!code-cpp[Form.MDIChildren#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Form.MDIChildren/CPP/form1.cpp#1)]\\n [!code-csharp[Form.MDIChildren#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Form.MDIChildren/CS/form1.cs#1)]\\n [!code-vb[Form.MDIChildren#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Form.MDIChildren/VB/form1.vb#1)]\"\n  syntax:\n    content: >-\n      [System.ComponentModel.Browsable(false)]\n\n      public System.Windows.Forms.Form[] MdiChildren { get; }\n    return:\n      type: System.Windows.Forms.Form[]\n      description: An array of <xref href=\"System.Windows.Forms.Form\"></xref> objects, each of which identifies one of this form's MDI child forms.\n  overload: System.Windows.Forms.Form.MdiChildren*\n  exceptions: []\n  attributes:\n  - type: System.ComponentModel.BrowsableAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Form.xml\n  ms.technology:\n  - dotnet-winforms\n  ms.author: kempb\n  manager: ghogen\n- uid: System.Windows.Forms.Form.MdiParent\n  commentId: P:System.Windows.Forms.Form.MdiParent\n  id: MdiParent\n  parent: System.Windows.Forms.Form\n  langs:\n  - csharp\n  name: MdiParent\n  nameWithType: Form.MdiParent\n  fullName: Form.MdiParent\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets or sets the current multiple-document interface (MDI) parent form of this form.\n  remarks: \"To create an MDI child form, assign the <xref:System.Windows.Forms.Form> that will be the MDI parent form to the <xref:System.Windows.Forms.Form.MdiParent%2A> property of the child form. You can use this property from an MDI child form to obtain global information that all child forms need or to invoke methods that perform actions to all child forms.  \\n  \\n> [!NOTE]\\n>  If there are two <xref:System.Windows.Forms.MenuStrip> controls on an MDI child form, setting <xref:System.Windows.Forms.Form.IsMdiContainer%2A> to `true` for the parent form merges the contents of only one of the <xref:System.Windows.Forms.MenuStrip> controls. Use <xref:System.Windows.Forms.ToolStripManager.Merge%2A> to merge the contents of additional child <xref:System.Windows.Forms.MenuStrip> controls on the MDI parent form.\"\n  example:\n  - \"The following code example demonstrates how to create child forms in an MDI application. The example code creates a form with unique text to identify the child form. The example uses the <xref:System.Windows.Forms.Form.MdiParent%2A> property to specify that a form is a child form. This example requires that the code in the example is called from a form that has its <xref:System.Windows.Forms.Form.IsMdiContainer%2A> property set to `true` and that the form has a private class level integer variable named `childCount`.  \\n  \\n [!code-cpp[Form.MDIParent#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Form.MDIParent/CPP/form1.cpp#1)]\\n [!code-csharp[Form.MDIParent#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Form.MDIParent/CS/form1.cs#1)]\\n [!code-vb[Form.MDIParent#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Form.MDIParent/VB/form1.vb#1)]\"\n  syntax:\n    content: >-\n      [System.ComponentModel.Browsable(false)]\n\n      public System.Windows.Forms.Form MdiParent { get; set; }\n    return:\n      type: System.Windows.Forms.Form\n      description: A <xref href=\"System.Windows.Forms.Form\"></xref> that represents the MDI parent form.\n  overload: System.Windows.Forms.Form.MdiParent*\n  exceptions:\n  - type: System.Exception\n    commentId: T:System.Exception\n    description: \"The <xref href=\\\"System.Windows.Forms.Form\\\"></xref> assigned to this property is not marked as an MDI container.  \\n  \\n -or-  \\n  \\n The <xref href=\\\"System.Windows.Forms.Form\\\"></xref> assigned to this property is both a child and an MDI container form.  \\n  \\n -or-  \\n  \\n The <xref href=\\\"System.Windows.Forms.Form\\\"></xref> assigned to this property is located on a different thread.\"\n  attributes:\n  - type: System.ComponentModel.BrowsableAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Form.xml\n  ms.technology:\n  - dotnet-winforms\n  ms.author: kempb\n  manager: ghogen\n- uid: System.Windows.Forms.Form.Menu\n  commentId: P:System.Windows.Forms.Form.Menu\n  id: Menu\n  parent: System.Windows.Forms.Form\n  langs:\n  - csharp\n  name: Menu\n  nameWithType: Form.Menu\n  fullName: Form.Menu\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets or sets the <xref href=\"System.Windows.Forms.MainMenu\"></xref> that is displayed in the form.\n  remarks: You can use this property to switch between complete menu sets at run time. For example, you can define one <xref:System.Windows.Forms.MainMenu> to be displayed when your multiple-document interface (MDI) form has no active MDI child forms and another <xref:System.Windows.Forms.MainMenu> to display when a child window is displayed. You can also use a different <xref:System.Windows.Forms.MainMenu> when specific conditions exist in your application that require displaying a different menu set.\n  example:\n  - \"The following code example creates a <xref:System.Windows.Forms.MainMenu>, assigns two <xref:System.Windows.Forms.MenuItem> objects to the <xref:System.Windows.Forms.MainMenu> and binds it to a form. This example requires that you have a <xref:System.Windows.Forms.Form> created that is named `Form1`.  \\n  \\n [!code-cpp[Classic MainMenu.MainMenu Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic MainMenu.MainMenu Example/CPP/source.cpp#1)]\\n [!code-csharp[Classic MainMenu.MainMenu Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic MainMenu.MainMenu Example/CS/source.cs#1)]\\n [!code-vb[Classic MainMenu.MainMenu Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic MainMenu.MainMenu Example/VB/source.vb#1)]\"\n  syntax:\n    content: >-\n      [System.ComponentModel.Browsable(false)]\n\n      [System.ComponentModel.TypeConverter(typeof(System.ComponentModel.ReferenceConverter))]\n\n      public System.Windows.Forms.MainMenu Menu { get; set; }\n    return:\n      type: System.Windows.Forms.MainMenu\n      description: A <xref href=\"System.Windows.Forms.MainMenu\"></xref> that represents the menu to display in the form.\n  overload: System.Windows.Forms.Form.Menu*\n  exceptions: []\n  attributes:\n  - type: System.ComponentModel.BrowsableAttribute\n  - type: System.ComponentModel.TypeConverterAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Form.xml\n  ms.technology:\n  - dotnet-winforms\n  ms.author: kempb\n  manager: ghogen\n- uid: System.Windows.Forms.Form.MenuComplete\n  commentId: E:System.Windows.Forms.Form.MenuComplete\n  id: MenuComplete\n  parent: System.Windows.Forms.Form\n  langs:\n  - csharp\n  name: MenuComplete\n  nameWithType: Form.MenuComplete\n  fullName: Form.MenuComplete\n  type: Event\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Occurs when the menu of a form loses focus.\n  remarks: \"This event is raised when you click on any menu item in a menu that results in a command being performed and the menu losing focus. You can use this event to perform tasks such as updating the text of a <xref:System.Windows.Forms.StatusBar> control or enabling and disabling buttons on a <xref:System.Windows.Forms.ToolBar>.  \\n  \\n For more information about handling events, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).\"\n  example:\n  - \"The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.Form.MenuComplete> event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \\n  \\n To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.Form> named `Form1`. Then ensure that the event handler is associated with the <xref:System.Windows.Forms.Form.MenuComplete> event.  \\n  \\n [!code-csharp[System.Windows.Forms.EventExamples#398](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#398)]\\n [!code-vb[System.Windows.Forms.EventExamples#398](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#398)]\"\n  syntax:\n    content: >-\n      [System.ComponentModel.Browsable(false)]\n\n      public event EventHandler MenuComplete;\n    return:\n      type: System.EventHandler\n      description: ''\n  exceptions: []\n  attributes:\n  - type: System.ComponentModel.BrowsableAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Form.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Form.MenuStart\n  commentId: E:System.Windows.Forms.Form.MenuStart\n  id: MenuStart\n  parent: System.Windows.Forms.Form\n  langs:\n  - csharp\n  name: MenuStart\n  nameWithType: Form.MenuStart\n  fullName: Form.MenuStart\n  type: Event\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Occurs when the menu of a form receives focus.\n  remarks: \"This event is raised when any menu item in the menu is clicked by the user. You can use this event to perform tasks such as enabling and disabling controls on the form that should not be accessed by the user when the menus are being accessed.  \\n  \\n For more information about handling events, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).\"\n  example:\n  - \"The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.Form.MenuStart> event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \\n  \\n To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.Form> named `Form1`. Then ensure that the event handler is associated with the <xref:System.Windows.Forms.Form.MenuStart> event.  \\n  \\n [!code-csharp[System.Windows.Forms.EventExamples#399](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#399)]\\n [!code-vb[System.Windows.Forms.EventExamples#399](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#399)]\"\n  syntax:\n    content: >-\n      [System.ComponentModel.Browsable(false)]\n\n      public event EventHandler MenuStart;\n    return:\n      type: System.EventHandler\n      description: ''\n  exceptions: []\n  attributes:\n  - type: System.ComponentModel.BrowsableAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Form.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Form.MergedMenu\n  commentId: P:System.Windows.Forms.Form.MergedMenu\n  id: MergedMenu\n  parent: System.Windows.Forms.Form\n  langs:\n  - csharp\n  name: MergedMenu\n  nameWithType: Form.MergedMenu\n  fullName: Form.MergedMenu\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets the merged menu for the form.\n  remarks: This property is primarily used when the form is a multiple-document interface (MDI) child form that merges its menu with its parent form's menu. You can use this property to obtain the current menu structure in an MDI application to make changes or additions to the menu structure. To obtain the nonmerged <xref:System.Windows.Forms.MainMenu> assigned to a form, use the <xref:System.Windows.Forms.Form.Menu%2A> property.\n  syntax:\n    content: >-\n      [System.ComponentModel.Browsable(false)]\n\n      public System.Windows.Forms.MainMenu MergedMenu { get; }\n    return:\n      type: System.Windows.Forms.MainMenu\n      description: A <xref href=\"System.Windows.Forms.MainMenu\"></xref> that represents the merged menu of the form.\n  overload: System.Windows.Forms.Form.MergedMenu*\n  exceptions: []\n  attributes:\n  - type: System.ComponentModel.BrowsableAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Form.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Form.MinimizeBox\n  commentId: P:System.Windows.Forms.Form.MinimizeBox\n  id: MinimizeBox\n  parent: System.Windows.Forms.Form\n  langs:\n  - csharp\n  name: MinimizeBox\n  nameWithType: Form.MinimizeBox\n  fullName: Form.MinimizeBox\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets or sets a value indicating whether the **Minimize** button is displayed in the caption bar of the form.\n  remarks: \"A **Minimize** button enables users to minimize a window to an icon. To display a **Minimize** button, you must also set the form's <xref:System.Windows.Forms.Form.FormBorderStyle%2A> property to `FormBorderStyle.FixedSingle`, `FormBorderStyle.Sizable`, `FormBorderStyle.Fixed3D`, or `FormBorderStyle.FixedDialog`.  \\n  \\n> [!NOTE]\\n>  Minimizing a form at run time generates a <xref:System.Windows.Forms.Control.Resize> event. The <xref:System.Windows.Forms.Form.WindowState%2A> property reflects the current state of the window. If you set the <xref:System.Windows.Forms.Form.WindowState%2A> property to `FormWindowState.Minimized`, the form is minimized independently of whatever settings are in effect for the <xref:System.Windows.Forms.Form.MinimizeBox%2A> and <xref:System.Windows.Forms.Form.FormBorderStyle%2A> properties.\"\n  example:\n  - \"The following code example creates a new instance of a <xref:System.Windows.Forms.Form> and calls the <xref:System.Windows.Forms.Form.ShowDialog%2A> method to display the form as a dialog box. The example sets the <xref:System.Windows.Forms.Form.FormBorderStyle%2A>, <xref:System.Windows.Forms.Form.AcceptButton%2A>, <xref:System.Windows.Forms.Form.CancelButton%2A>, <xref:System.Windows.Forms.Form.MinimizeBox%2A>, <xref:System.Windows.Forms.Form.MaximizeBox%2A>, and <xref:System.Windows.Forms.Form.StartPosition%2A> properties to change the appearance and functionality of the form to a dialog box. The example also uses the <xref:System.Windows.Forms.Form.ControlCollection.Add%2A> method of the form's <xref:System.Windows.Forms.Control.Controls%2A> collection to add two <xref:System.Windows.Forms.Button> controls. The example uses the <xref:System.Windows.Forms.Form.HelpButton%2A> property to display a help button in the caption bar of the dialog box.  \\n  \\n [!code-cpp[Classic Form.AcceptButton Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Form.AcceptButton Example/CPP/source.cpp#1)]\\n [!code-csharp[Classic Form.AcceptButton Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Form.AcceptButton Example/CS/source.cs#1)]\\n [!code-vb[Classic Form.AcceptButton Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Form.AcceptButton Example/VB/source.vb#1)]\"\n  syntax:\n    content: public bool MinimizeBox { get; set; }\n    return:\n      type: System.Boolean\n      description: '`true` to display a **Minimize** button for the form; otherwise, `false`. The default is `true`.'\n  overload: System.Windows.Forms.Form.MinimizeBox*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Form.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Form.MinimumSize\n  commentId: P:System.Windows.Forms.Form.MinimumSize\n  id: MinimumSize\n  parent: System.Windows.Forms.Form\n  langs:\n  - csharp\n  name: MinimumSize\n  nameWithType: Form.MinimumSize\n  fullName: Form.MinimumSize\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets or sets the minimum size the form can be resized to.\n  remarks: This property enables you to limit the size of a form to a specified minimum size. You can use this feature to prevent a user from sizing a window to an undesirable size. If this property is set to a <xref:System.Drawing.Size> object that is 0 in height and 0 in width, the form will have no minimum size beyond the limits set by Windows.\n  syntax:\n    content: public override System.Drawing.Size MinimumSize { get; set; }\n    return:\n      type: System.Drawing.Size\n      description: A <xref href=\"System.Drawing.Size\"></xref> that represents the minimum size for the form.\n  overload: System.Windows.Forms.Form.MinimumSize*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: The values of the height or width within the <xref href=\"System.Drawing.Size\"></xref> object are less than zero.\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Form.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Form.MinimumSizeChanged\n  commentId: E:System.Windows.Forms.Form.MinimumSizeChanged\n  id: MinimumSizeChanged\n  parent: System.Windows.Forms.Form\n  langs:\n  - csharp\n  name: MinimumSizeChanged\n  nameWithType: Form.MinimumSizeChanged\n  fullName: Form.MinimumSizeChanged\n  type: Event\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Occurs when the value of the <xref href=\"System.Windows.Forms.Form.MinimumSize\"></xref> property has changed.\n  remarks: For more information about handling events, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).\n  example:\n  - \"The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.Form.MinimumSizeChanged> event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \\n  \\n To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.Form> named `Form1`. Then ensure that the event handler is associated with the <xref:System.Windows.Forms.Form.MinimumSizeChanged> event.  \\n  \\n [!code-csharp[System.Windows.Forms.EventExamples#391](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#391)]\\n [!code-vb[System.Windows.Forms.EventExamples#391](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#391)]\"\n  syntax:\n    content: public event EventHandler MinimumSizeChanged;\n    return:\n      type: System.EventHandler\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Form.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Form.Modal\n  commentId: P:System.Windows.Forms.Form.Modal\n  id: Modal\n  parent: System.Windows.Forms.Form\n  langs:\n  - csharp\n  name: Modal\n  nameWithType: Form.Modal\n  fullName: Form.Modal\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets a value indicating whether this form is displayed modally.\n  remarks: \"When a form is displayed modally, no input (keyboard or mouse click) can occur except to objects on the modal form. The program must hide or close a modal form (usually in response to some user action) before input to another form can occur. Forms that are displayed modally are typically used as dialog boxes in an application.  \\n  \\n You can use this property to determine whether a form that you have obtained from a method or property has been displayed modally.  \\n  \\n To display a form modally use the <xref:System.Windows.Forms.Form.ShowDialog%2A> method.\"\n  example:\n  - \"The following code example uses the <xref:System.Windows.Forms.Form.Modal%2A> property to determine if a form is displayed as a modal form. If it is not the <xref:System.Windows.Forms.Form.FormBorderStyle%2A> and <xref:System.Windows.Forms.Form.TopLevel%2A> properties are changed to make the form a non-top-level form with a tool window border.  \\n  \\n [!code-cpp[Form.Modal#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Form.Modal/CPP/form1.cpp#1)]\\n [!code-csharp[Form.Modal#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Form.Modal/CS/form1.cs#1)]\\n [!code-vb[Form.Modal#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Form.Modal/VB/form1.vb#1)]\"\n  syntax:\n    content: >-\n      [System.ComponentModel.Browsable(false)]\n\n      public bool Modal { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if the form is displayed modally; otherwise, `false`.'\n  overload: System.Windows.Forms.Form.Modal*\n  exceptions: []\n  attributes:\n  - type: System.ComponentModel.BrowsableAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Form.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Form.OnActivated(System.EventArgs)\n  commentId: M:System.Windows.Forms.Form.OnActivated(System.EventArgs)\n  id: OnActivated(System.EventArgs)\n  parent: System.Windows.Forms.Form\n  langs:\n  - csharp\n  name: OnActivated(EventArgs)\n  nameWithType: Form.OnActivated(EventArgs)\n  fullName: Form.OnActivated(EventArgs)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Raises the <xref href=\"System.Windows.Forms.Form.Activated\"></xref> event.\n  remarks: \"Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).  \\n  \\n The <xref:System.Windows.Forms.Form.OnActivated%2A> method also allows derived classes to handle the event without attaching a delegate. Overriding this method is the preferred technique for handling the event in a derived class.\"\n  syntax:\n    content: protected virtual void OnActivated (EventArgs e);\n    parameters:\n    - id: e\n      type: System.EventArgs\n      description: An <xref href=\"System.EventArgs\"></xref> that contains the event data.\n  overload: System.Windows.Forms.Form.OnActivated*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Form.xml\n  ms.technology:\n  - dotnet-winforms\n  ms.author: kempb\n  manager: ghogen\n- uid: System.Windows.Forms.Form.OnBackgroundImageChanged(System.EventArgs)\n  commentId: M:System.Windows.Forms.Form.OnBackgroundImageChanged(System.EventArgs)\n  id: OnBackgroundImageChanged(System.EventArgs)\n  parent: System.Windows.Forms.Form\n  langs:\n  - csharp\n  name: OnBackgroundImageChanged(EventArgs)\n  nameWithType: Form.OnBackgroundImageChanged(EventArgs)\n  fullName: Form.OnBackgroundImageChanged(EventArgs)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Raises the <xref href=\"System.Windows.Forms.Control.BackgroundImageChanged\"></xref> event.\n  remarks: \"Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).  \\n  \\n The <xref:System.Windows.Forms.Form.OnBackgroundImageChanged%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.\"\n  syntax:\n    content: protected override void OnBackgroundImageChanged (EventArgs e);\n    parameters:\n    - id: e\n      type: System.EventArgs\n      description: An <xref href=\"System.EventArgs\"></xref> that contains the data.\n  overload: System.Windows.Forms.Form.OnBackgroundImageChanged*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Form.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Form.OnBackgroundImageLayoutChanged(System.EventArgs)\n  commentId: M:System.Windows.Forms.Form.OnBackgroundImageLayoutChanged(System.EventArgs)\n  id: OnBackgroundImageLayoutChanged(System.EventArgs)\n  parent: System.Windows.Forms.Form\n  langs:\n  - csharp\n  name: OnBackgroundImageLayoutChanged(EventArgs)\n  nameWithType: Form.OnBackgroundImageLayoutChanged(EventArgs)\n  fullName: Form.OnBackgroundImageLayoutChanged(EventArgs)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Raises the <xref href=\"System.Windows.Forms.Control.BackgroundImageLayoutChanged\"></xref> event.\n  remarks: \"Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).  \\n  \\n The <xref:System.Windows.Forms.Form.OnBackgroundImageLayoutChanged%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.\"\n  syntax:\n    content: protected override void OnBackgroundImageLayoutChanged (EventArgs e);\n    parameters:\n    - id: e\n      type: System.EventArgs\n      description: An <xref href=\"System.EventArgs\"></xref> that contains the event data.\n  overload: System.Windows.Forms.Form.OnBackgroundImageLayoutChanged*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Form.xml\n  ms.technology:\n  - dotnet-winforms\n  ms.author: kempb\n  manager: ghogen\n- uid: System.Windows.Forms.Form.OnClosed(System.EventArgs)\n  commentId: M:System.Windows.Forms.Form.OnClosed(System.EventArgs)\n  id: OnClosed(System.EventArgs)\n  parent: System.Windows.Forms.Form\n  langs:\n  - csharp\n  name: OnClosed(EventArgs)\n  nameWithType: Form.OnClosed(EventArgs)\n  fullName: Form.OnClosed(EventArgs)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Raises the <xref href=\"System.Windows.Forms.Form.Closed\"></xref> event.\n  remarks: \"> [!CAUTION]\\n>  The <xref:System.Windows.Forms.Form.OnClosed%2A> method is obsolete in the .NET Framework version 2.0; use the <xref:System.Windows.Forms.Form.OnFormClosed%2A> method instead.  \\n  \\n Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).  \\n  \\n The <xref:System.Windows.Forms.Form.OnFormClosed%2A> method also allows derived classes to handle the event without attaching a delegate. Overriding this method is the preferred technique for handling the event in a derived class.  \\n  \\n> [!CAUTION]\\n>  The <xref:System.Windows.Forms.Form.OnClosed%2A> and <xref:System.Windows.Forms.Form.OnClosing%2A> methods are not called when the <xref:System.Windows.Forms.Application.Exit%2A?displayProperty=fullName> method is called to exit your application. If you have validation code in either of these methods that must be executed, you should call the <xref:System.Windows.Forms.Form.Close%2A?displayProperty=fullName> method for each open form individually before calling the <xref:System.Windows.Forms.Application.Exit%2A> method.\"\n  example:\n  - \"The following code example demonstrates how to override the <xref:System.Windows.Forms.Form.OnClosed%2A> method in a class derived from <xref:System.Windows.Forms.Form> .  \\n  \\n [!code-cpp[System.Drawing.PointsAndSizes#6](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.PointsAndSizes/CPP/form1.cpp#6)]\\n [!code-csharp[System.Drawing.PointsAndSizes#6](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.PointsAndSizes/CS/form1.cs#6)]\\n [!code-vb[System.Drawing.PointsAndSizes#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.PointsAndSizes/VB/form1.vb#6)]\"\n  syntax:\n    content: protected virtual void OnClosed (EventArgs e);\n    parameters:\n    - id: e\n      type: System.EventArgs\n      description: The <xref href=\"System.EventArgs\"></xref> that contains the event data.\n  overload: System.Windows.Forms.Form.OnClosed*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Form.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Form.OnClosing(System.ComponentModel.CancelEventArgs)\n  commentId: M:System.Windows.Forms.Form.OnClosing(System.ComponentModel.CancelEventArgs)\n  id: OnClosing(System.ComponentModel.CancelEventArgs)\n  parent: System.Windows.Forms.Form\n  langs:\n  - csharp\n  name: OnClosing(CancelEventArgs)\n  nameWithType: Form.OnClosing(CancelEventArgs)\n  fullName: Form.OnClosing(CancelEventArgs)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Raises the <xref href=\"System.Windows.Forms.Form.Closing\"></xref> event.\n  remarks: \"> [!CAUTION]\\n>  The <xref:System.Windows.Forms.Form.OnClosing%2A> method is obsolete in the .NET Framework version 2.0; use the <xref:System.Windows.Forms.Form.OnFormClosing%2A> method instead.  \\n  \\n Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).  \\n  \\n The <xref:System.Windows.Forms.Form.OnClosing%2A> method also allows derived classes to handle the event without attaching a delegate. Overriding this method is the preferred technique for handling the event in a derived class.  \\n  \\n> [!CAUTION]\\n>  The <xref:System.Windows.Forms.Form.OnClosed%2A> and <xref:System.Windows.Forms.Form.OnClosing%2A> methods are not called when the <xref:System.Windows.Forms.Application.Exit%2A?displayProperty=fullName> method is called to exit your application. If you have validation code in either of these methods that must be executed, you should call the <xref:System.Windows.Forms.Form.Close%2A?displayProperty=fullName> method for each open form individually before calling the <xref:System.Windows.Forms.Application.Exit%2A> method.\"\n  example:\n  - \"The following code example uses <xref:System.Windows.Forms.Form.Closing> to test if the text in a <xref:System.Windows.Forms.TextBox> has changed. If it has, the user is asked whether to save the changes to a file.  \\n  \\n [!code-cpp[Form.Closing#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Form.Closing/CPP/form1.cpp#1)]\\n [!code-csharp[Form.Closing#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Form.Closing/CS/form1.cs#1)]\\n [!code-vb[Form.Closing#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Form.Closing/VB/form1.vb#1)]\"\n  syntax:\n    content: protected virtual void OnClosing (System.ComponentModel.CancelEventArgs e);\n    parameters:\n    - id: e\n      type: System.ComponentModel.CancelEventArgs\n      description: A <xref href=\"System.ComponentModel.CancelEventArgs\"></xref> that contains the event data.\n  overload: System.Windows.Forms.Form.OnClosing*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Form.xml\n  ms.technology:\n  - dotnet-winforms\n  ms.author: kempb\n  manager: ghogen\n- uid: System.Windows.Forms.Form.OnCreateControl\n  commentId: M:System.Windows.Forms.Form.OnCreateControl\n  id: OnCreateControl\n  parent: System.Windows.Forms.Form\n  langs:\n  - csharp\n  name: OnCreateControl()\n  nameWithType: Form.OnCreateControl()\n  fullName: Form.OnCreateControl()\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Raises the `CreateControl` event.\n  remarks: Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).\n  syntax:\n    content: protected override void OnCreateControl ();\n    parameters: []\n  overload: System.Windows.Forms.Form.OnCreateControl*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Form.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Form.OnDeactivate(System.EventArgs)\n  commentId: M:System.Windows.Forms.Form.OnDeactivate(System.EventArgs)\n  id: OnDeactivate(System.EventArgs)\n  parent: System.Windows.Forms.Form\n  langs:\n  - csharp\n  name: OnDeactivate(EventArgs)\n  nameWithType: Form.OnDeactivate(EventArgs)\n  fullName: Form.OnDeactivate(EventArgs)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Raises the <xref href=\"System.Windows.Forms.Form.Deactivate\"></xref> event.\n  remarks: \"Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).  \\n  \\n The <xref:System.Windows.Forms.Form.OnDeactivate%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.\"\n  syntax:\n    content: protected virtual void OnDeactivate (EventArgs e);\n    parameters:\n    - id: e\n      type: System.EventArgs\n      description: The <xref href=\"System.EventArgs\"></xref> that contains the event data.\n  overload: System.Windows.Forms.Form.OnDeactivate*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Form.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Form.OnDpiChanged(System.Windows.Forms.DpiChangedEventArgs)\n  commentId: M:System.Windows.Forms.Form.OnDpiChanged(System.Windows.Forms.DpiChangedEventArgs)\n  id: OnDpiChanged(System.Windows.Forms.DpiChangedEventArgs)\n  parent: System.Windows.Forms.Form\n  langs:\n  - csharp\n  name: OnDpiChanged(DpiChangedEventArgs)\n  nameWithType: Form.OnDpiChanged(DpiChangedEventArgs)\n  fullName: Form.OnDpiChanged(DpiChangedEventArgs)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Raises the <xref href=\"System.Windows.Forms.Form.DpiChanged\"></xref> event.\n  syntax:\n    content: >-\n      [System.ComponentModel.Browsable(true)]\n\n      protected virtual void OnDpiChanged (System.Windows.Forms.DpiChangedEventArgs e);\n    parameters:\n    - id: e\n      type: System.Windows.Forms.DpiChangedEventArgs\n      description: An <xref href=\"System.Windows.Forms.DpiChangedEventArgs\"></xref> that contains the event data.\n  overload: System.Windows.Forms.Form.OnDpiChanged*\n  exceptions: []\n  attributes:\n  - type: System.ComponentModel.BrowsableAttribute\n  version:\n  - netframework-4.7\n  monikers:\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Form.xml\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Form.OnEnabledChanged(System.EventArgs)\n  commentId: M:System.Windows.Forms.Form.OnEnabledChanged(System.EventArgs)\n  id: OnEnabledChanged(System.EventArgs)\n  parent: System.Windows.Forms.Form\n  langs:\n  - csharp\n  name: OnEnabledChanged(EventArgs)\n  nameWithType: Form.OnEnabledChanged(EventArgs)\n  fullName: Form.OnEnabledChanged(EventArgs)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Raises the <xref href=\"System.Windows.Forms.Control.EnabledChanged\"></xref> event.\n  syntax:\n    content: protected override void OnEnabledChanged (EventArgs e);\n    parameters:\n    - id: e\n      type: System.EventArgs\n      description: An <xref href=\"System.EventArgs\"></xref> that contains the event data.\n  overload: System.Windows.Forms.Form.OnEnabledChanged*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Form.xml\n  ms.technology:\n  - dotnet-winforms\n  ms.author: kempb\n  manager: ghogen\n- uid: System.Windows.Forms.Form.OnEnter(System.EventArgs)\n  commentId: M:System.Windows.Forms.Form.OnEnter(System.EventArgs)\n  id: OnEnter(System.EventArgs)\n  parent: System.Windows.Forms.Form\n  langs:\n  - csharp\n  name: OnEnter(EventArgs)\n  nameWithType: Form.OnEnter(EventArgs)\n  fullName: Form.OnEnter(EventArgs)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Raises the <xref href=\"System.Windows.Forms.Control.Enter\"></xref> event.\n  remarks: \"Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).  \\n  \\n The <xref:System.Windows.Forms.Form.OnEnter%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.\"\n  syntax:\n    content: protected override void OnEnter (EventArgs e);\n    parameters:\n    - id: e\n      type: System.EventArgs\n      description: An <xref href=\"System.EventArgs\"></xref> that contains the event data.\n  overload: System.Windows.Forms.Form.OnEnter*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Form.xml\n  ms.technology:\n  - dotnet-winforms\n  ms.author: kempb\n  manager: ghogen\n- uid: System.Windows.Forms.Form.OnFontChanged(System.EventArgs)\n  commentId: M:System.Windows.Forms.Form.OnFontChanged(System.EventArgs)\n  id: OnFontChanged(System.EventArgs)\n  parent: System.Windows.Forms.Form\n  langs:\n  - csharp\n  name: OnFontChanged(EventArgs)\n  nameWithType: Form.OnFontChanged(EventArgs)\n  fullName: Form.OnFontChanged(EventArgs)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Raises the <xref href=\"System.Windows.Forms.Control.FontChanged\"></xref> event.\n  syntax:\n    content: protected override void OnFontChanged (EventArgs e);\n    parameters:\n    - id: e\n      type: System.EventArgs\n      description: An <xref href=\"System.EventArgs\"></xref> that contains the event data.\n  overload: System.Windows.Forms.Form.OnFontChanged*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Form.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Form.OnFormClosed(System.Windows.Forms.FormClosedEventArgs)\n  commentId: M:System.Windows.Forms.Form.OnFormClosed(System.Windows.Forms.FormClosedEventArgs)\n  id: OnFormClosed(System.Windows.Forms.FormClosedEventArgs)\n  parent: System.Windows.Forms.Form\n  langs:\n  - csharp\n  name: OnFormClosed(FormClosedEventArgs)\n  nameWithType: Form.OnFormClosed(FormClosedEventArgs)\n  fullName: Form.OnFormClosed(FormClosedEventArgs)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Raises the <xref href=\"System.Windows.Forms.Form.FormClosed\"></xref> event.\n  remarks: \"The <xref:System.Windows.Forms.Form.OnFormClosing%2A> method removes the current form from the <xref:System.Windows.Forms.Application.OpenForms%2A> collection of the associated <xref:System.Windows.Forms.Application>.  \\n  \\n Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).  \\n  \\n The <xref:System.Windows.Forms.Form.OnFormClosed%2A> method also allows derived classes to handle the event without attaching a delegate. Overriding this method is the preferred technique for handling the event in a derived class.\"\n  syntax:\n    content: protected virtual void OnFormClosed (System.Windows.Forms.FormClosedEventArgs e);\n    parameters:\n    - id: e\n      type: System.Windows.Forms.FormClosedEventArgs\n      description: A <xref href=\"System.Windows.Forms.FormClosedEventArgs\"></xref> that contains the event data.\n  overload: System.Windows.Forms.Form.OnFormClosed*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Form.xml\n  ms.technology:\n  - dotnet-winforms\n  ms.author: kempb\n  manager: ghogen\n- uid: System.Windows.Forms.Form.OnFormClosing(System.Windows.Forms.FormClosingEventArgs)\n  commentId: M:System.Windows.Forms.Form.OnFormClosing(System.Windows.Forms.FormClosingEventArgs)\n  id: OnFormClosing(System.Windows.Forms.FormClosingEventArgs)\n  parent: System.Windows.Forms.Form\n  langs:\n  - csharp\n  name: OnFormClosing(FormClosingEventArgs)\n  nameWithType: Form.OnFormClosing(FormClosingEventArgs)\n  fullName: Form.OnFormClosing(FormClosingEventArgs)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Raises the <xref href=\"System.Windows.Forms.Form.FormClosing\"></xref> event.\n  remarks: \"Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).  \\n  \\n The <xref:System.Windows.Forms.Form.OnFormClosing%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.\"\n  syntax:\n    content: protected virtual void OnFormClosing (System.Windows.Forms.FormClosingEventArgs e);\n    parameters:\n    - id: e\n      type: System.Windows.Forms.FormClosingEventArgs\n      description: A <xref href=\"System.Windows.Forms.FormClosingEventArgs\"></xref> that contains the event data.\n  overload: System.Windows.Forms.Form.OnFormClosing*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Form.xml\n  ms.technology:\n  - dotnet-winforms\n  ms.author: kempb\n  manager: ghogen\n- uid: System.Windows.Forms.Form.OnGetDpiScaledSize(System.Int32,System.Int32,System.Drawing.Size@)\n  commentId: M:System.Windows.Forms.Form.OnGetDpiScaledSize(System.Int32,System.Int32,System.Drawing.Size@)\n  id: OnGetDpiScaledSize(System.Int32,System.Int32,System.Drawing.Size@)\n  parent: System.Windows.Forms.Form\n  langs:\n  - csharp\n  name: OnGetDpiScaledSize(Int32, Int32, Size)\n  nameWithType: Form.OnGetDpiScaledSize(Int32, Int32, Size)\n  fullName: Form.OnGetDpiScaledSize(Int32, Int32, Size)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Raises the GetDpiScaledSize event.\n  syntax:\n    content: >-\n      [System.ComponentModel.Browsable(true)]\n\n      protected virtual bool OnGetDpiScaledSize (int deviceDpiOld, int deviceDpiNew, ref System.Drawing.Size desiredSize);\n    parameters:\n    - id: deviceDpiOld\n      type: System.Int32\n      description: The DPI value for the display device where the form was previously displayed.\n    - id: deviceDpiNew\n      type: System.Int32\n      description: The DPI value for the display device where the form will be displayed.\n    - id: desiredSize\n      type: System.Drawing.Size\n      description: A <xref href=\"System.Drawing.Size\"></xref> representing the new size of the form based on the new DPI value.\n    return:\n      type: System.Boolean\n      description: '`true` if successful; otherwise `false`.'\n  overload: System.Windows.Forms.Form.OnGetDpiScaledSize*\n  exceptions: []\n  attributes:\n  - type: System.ComponentModel.BrowsableAttribute\n  version:\n  - netframework-4.7\n  monikers:\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Form.xml\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Form.OnHandleCreated(System.EventArgs)\n  commentId: M:System.Windows.Forms.Form.OnHandleCreated(System.EventArgs)\n  id: OnHandleCreated(System.EventArgs)\n  parent: System.Windows.Forms.Form\n  langs:\n  - csharp\n  name: OnHandleCreated(EventArgs)\n  nameWithType: Form.OnHandleCreated(EventArgs)\n  fullName: Form.OnHandleCreated(EventArgs)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Raises the <xref href=\"System.Windows.Forms.Control.HandleCreated\"></xref> event.\n  syntax:\n    content: protected override void OnHandleCreated (EventArgs e);\n    parameters:\n    - id: e\n      type: System.EventArgs\n      description: An <xref href=\"System.EventArgs\"></xref> that contains the event data.\n  overload: System.Windows.Forms.Form.OnHandleCreated*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Form.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Form.OnHandleDestroyed(System.EventArgs)\n  commentId: M:System.Windows.Forms.Form.OnHandleDestroyed(System.EventArgs)\n  id: OnHandleDestroyed(System.EventArgs)\n  parent: System.Windows.Forms.Form\n  langs:\n  - csharp\n  name: OnHandleDestroyed(EventArgs)\n  nameWithType: Form.OnHandleDestroyed(EventArgs)\n  fullName: Form.OnHandleDestroyed(EventArgs)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Raises the <xref href=\"System.Windows.Forms.Control.HandleDestroyed\"></xref> event.\n  syntax:\n    content: protected override void OnHandleDestroyed (EventArgs e);\n    parameters:\n    - id: e\n      type: System.EventArgs\n      description: An <xref href=\"System.EventArgs\"></xref> that contains the event data.\n  overload: System.Windows.Forms.Form.OnHandleDestroyed*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Form.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Form.OnHelpButtonClicked(System.ComponentModel.CancelEventArgs)\n  commentId: M:System.Windows.Forms.Form.OnHelpButtonClicked(System.ComponentModel.CancelEventArgs)\n  id: OnHelpButtonClicked(System.ComponentModel.CancelEventArgs)\n  parent: System.Windows.Forms.Form\n  langs:\n  - csharp\n  name: OnHelpButtonClicked(CancelEventArgs)\n  nameWithType: Form.OnHelpButtonClicked(CancelEventArgs)\n  fullName: Form.OnHelpButtonClicked(CancelEventArgs)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Raises the <xref href=\"System.Windows.Forms.Form.HelpButtonClicked\"></xref> event.\n  remarks: \"Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).  \\n  \\n The <xref:System.Windows.Forms.Form.OnHelpButtonClicked%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.\"\n  syntax:\n    content: protected virtual void OnHelpButtonClicked (System.ComponentModel.CancelEventArgs e);\n    parameters:\n    - id: e\n      type: System.ComponentModel.CancelEventArgs\n      description: A <xref href=\"System.ComponentModel.CancelEventArgs\"></xref> that contains the event data.\n  overload: System.Windows.Forms.Form.OnHelpButtonClicked*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Form.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Form.OnInputLanguageChanged(System.Windows.Forms.InputLanguageChangedEventArgs)\n  commentId: M:System.Windows.Forms.Form.OnInputLanguageChanged(System.Windows.Forms.InputLanguageChangedEventArgs)\n  id: OnInputLanguageChanged(System.Windows.Forms.InputLanguageChangedEventArgs)\n  parent: System.Windows.Forms.Form\n  langs:\n  - csharp\n  name: OnInputLanguageChanged(InputLanguageChangedEventArgs)\n  nameWithType: Form.OnInputLanguageChanged(InputLanguageChangedEventArgs)\n  fullName: Form.OnInputLanguageChanged(InputLanguageChangedEventArgs)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Raises the <xref href=\"System.Windows.Forms.Form.InputLanguageChanged\"></xref> event.\n  remarks: \"Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).  \\n  \\n The <xref:System.Windows.Forms.Form.OnInputLanguageChanged%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.\"\n  syntax:\n    content: protected virtual void OnInputLanguageChanged (System.Windows.Forms.InputLanguageChangedEventArgs e);\n    parameters:\n    - id: e\n      type: System.Windows.Forms.InputLanguageChangedEventArgs\n      description: The <xref href=\"System.Windows.Forms.InputLanguageChangedEventArgs\"></xref> that contains the event data.\n  overload: System.Windows.Forms.Form.OnInputLanguageChanged*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Form.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Form.OnInputLanguageChanging(System.Windows.Forms.InputLanguageChangingEventArgs)\n  commentId: M:System.Windows.Forms.Form.OnInputLanguageChanging(System.Windows.Forms.InputLanguageChangingEventArgs)\n  id: OnInputLanguageChanging(System.Windows.Forms.InputLanguageChangingEventArgs)\n  parent: System.Windows.Forms.Form\n  langs:\n  - csharp\n  name: OnInputLanguageChanging(InputLanguageChangingEventArgs)\n  nameWithType: Form.OnInputLanguageChanging(InputLanguageChangingEventArgs)\n  fullName: Form.OnInputLanguageChanging(InputLanguageChangingEventArgs)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Raises the <xref href=\"System.Windows.Forms.Form.InputLanguageChanging\"></xref> event.\n  remarks: \"Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).  \\n  \\n The <xref:System.Windows.Forms.Form.OnInputLanguageChanging%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.\"\n  syntax:\n    content: protected virtual void OnInputLanguageChanging (System.Windows.Forms.InputLanguageChangingEventArgs e);\n    parameters:\n    - id: e\n      type: System.Windows.Forms.InputLanguageChangingEventArgs\n      description: The <xref href=\"System.Windows.Forms.InputLanguageChangingEventArgs\"></xref> that contains the event data.\n  overload: System.Windows.Forms.Form.OnInputLanguageChanging*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Form.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Form.OnLayout(System.Windows.Forms.LayoutEventArgs)\n  commentId: M:System.Windows.Forms.Form.OnLayout(System.Windows.Forms.LayoutEventArgs)\n  id: OnLayout(System.Windows.Forms.LayoutEventArgs)\n  parent: System.Windows.Forms.Form\n  langs:\n  - csharp\n  name: OnLayout(LayoutEventArgs)\n  nameWithType: Form.OnLayout(LayoutEventArgs)\n  fullName: Form.OnLayout(LayoutEventArgs)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Raises the <xref href=\"System.Windows.Forms.Control.Layout\"></xref> event.\n  syntax:\n    content: protected override void OnLayout (System.Windows.Forms.LayoutEventArgs levent);\n    parameters:\n    - id: levent\n      type: System.Windows.Forms.LayoutEventArgs\n      description: The event data.\n  overload: System.Windows.Forms.Form.OnLayout*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Form.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Form.OnLoad(System.EventArgs)\n  commentId: M:System.Windows.Forms.Form.OnLoad(System.EventArgs)\n  id: OnLoad(System.EventArgs)\n  parent: System.Windows.Forms.Form\n  langs:\n  - csharp\n  name: OnLoad(EventArgs)\n  nameWithType: Form.OnLoad(EventArgs)\n  fullName: Form.OnLoad(EventArgs)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Raises the <xref href=\"System.Windows.Forms.Form.Load\"></xref> event.\n  remarks: \"Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).  \\n  \\n The <xref:System.Windows.Forms.Form.OnLoad%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.\"\n  syntax:\n    content: protected virtual void OnLoad (EventArgs e);\n    parameters:\n    - id: e\n      type: System.EventArgs\n      description: An <xref href=\"System.EventArgs\"></xref> that contains the event data.\n  overload: System.Windows.Forms.Form.OnLoad*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Form.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Form.OnMaximizedBoundsChanged(System.EventArgs)\n  commentId: M:System.Windows.Forms.Form.OnMaximizedBoundsChanged(System.EventArgs)\n  id: OnMaximizedBoundsChanged(System.EventArgs)\n  parent: System.Windows.Forms.Form\n  langs:\n  - csharp\n  name: OnMaximizedBoundsChanged(EventArgs)\n  nameWithType: Form.OnMaximizedBoundsChanged(EventArgs)\n  fullName: Form.OnMaximizedBoundsChanged(EventArgs)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Raises the <xref href=\"System.Windows.Forms.Form.MaximizedBoundsChanged\"></xref> event.\n  remarks: \"Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).  \\n  \\n The <xref:System.Windows.Forms.Form.OnMaximizedBoundsChanged%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.\"\n  syntax:\n    content: protected virtual void OnMaximizedBoundsChanged (EventArgs e);\n    parameters:\n    - id: e\n      type: System.EventArgs\n      description: The <xref href=\"System.EventArgs\"></xref> that contains the event data.\n  overload: System.Windows.Forms.Form.OnMaximizedBoundsChanged*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Form.xml\n  ms.technology:\n  - dotnet-winforms\n  ms.author: kempb\n  manager: ghogen\n- uid: System.Windows.Forms.Form.OnMaximumSizeChanged(System.EventArgs)\n  commentId: M:System.Windows.Forms.Form.OnMaximumSizeChanged(System.EventArgs)\n  id: OnMaximumSizeChanged(System.EventArgs)\n  parent: System.Windows.Forms.Form\n  langs:\n  - csharp\n  name: OnMaximumSizeChanged(EventArgs)\n  nameWithType: Form.OnMaximumSizeChanged(EventArgs)\n  fullName: Form.OnMaximumSizeChanged(EventArgs)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Raises the <xref href=\"System.Windows.Forms.Form.MaximumSizeChanged\"></xref> event.\n  remarks: \"Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).  \\n  \\n The <xref:System.Windows.Forms.Form.OnMaximumSizeChanged%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.\"\n  syntax:\n    content: protected virtual void OnMaximumSizeChanged (EventArgs e);\n    parameters:\n    - id: e\n      type: System.EventArgs\n      description: The <xref href=\"System.EventArgs\"></xref> that contains the event data.\n  overload: System.Windows.Forms.Form.OnMaximumSizeChanged*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Form.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Form.OnMdiChildActivate(System.EventArgs)\n  commentId: M:System.Windows.Forms.Form.OnMdiChildActivate(System.EventArgs)\n  id: OnMdiChildActivate(System.EventArgs)\n  parent: System.Windows.Forms.Form\n  langs:\n  - csharp\n  name: OnMdiChildActivate(EventArgs)\n  nameWithType: Form.OnMdiChildActivate(EventArgs)\n  fullName: Form.OnMdiChildActivate(EventArgs)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Raises the <xref href=\"System.Windows.Forms.Form.MdiChildActivate\"></xref> event.\n  remarks: \"Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).  \\n  \\n The <xref:System.Windows.Forms.Form.OnMdiChildActivate%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.\"\n  syntax:\n    content: protected virtual void OnMdiChildActivate (EventArgs e);\n    parameters:\n    - id: e\n      type: System.EventArgs\n      description: The <xref href=\"System.EventArgs\"></xref> that contains the event data.\n  overload: System.Windows.Forms.Form.OnMdiChildActivate*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Form.xml\n  ms.technology:\n  - dotnet-winforms\n  ms.author: kempb\n  manager: ghogen\n- uid: System.Windows.Forms.Form.OnMenuComplete(System.EventArgs)\n  commentId: M:System.Windows.Forms.Form.OnMenuComplete(System.EventArgs)\n  id: OnMenuComplete(System.EventArgs)\n  parent: System.Windows.Forms.Form\n  langs:\n  - csharp\n  name: OnMenuComplete(EventArgs)\n  nameWithType: Form.OnMenuComplete(EventArgs)\n  fullName: Form.OnMenuComplete(EventArgs)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Raises the <xref href=\"System.Windows.Forms.Form.MenuComplete\"></xref> event.\n  remarks: \"Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).  \\n  \\n The <xref:System.Windows.Forms.Form.OnMenuComplete%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.\"\n  syntax:\n    content: protected virtual void OnMenuComplete (EventArgs e);\n    parameters:\n    - id: e\n      type: System.EventArgs\n      description: The <xref href=\"System.EventArgs\"></xref> that contains the event data.\n  overload: System.Windows.Forms.Form.OnMenuComplete*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Form.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Form.OnMenuStart(System.EventArgs)\n  commentId: M:System.Windows.Forms.Form.OnMenuStart(System.EventArgs)\n  id: OnMenuStart(System.EventArgs)\n  parent: System.Windows.Forms.Form\n  langs:\n  - csharp\n  name: OnMenuStart(EventArgs)\n  nameWithType: Form.OnMenuStart(EventArgs)\n  fullName: Form.OnMenuStart(EventArgs)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Raises the <xref href=\"System.Windows.Forms.Form.MenuStart\"></xref> event.\n  remarks: \"Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).  \\n  \\n The <xref:System.Windows.Forms.Form.OnMenuStart%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.\"\n  syntax:\n    content: protected virtual void OnMenuStart (EventArgs e);\n    parameters:\n    - id: e\n      type: System.EventArgs\n      description: The <xref href=\"System.EventArgs\"></xref> that contains the event data.\n  overload: System.Windows.Forms.Form.OnMenuStart*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Form.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Form.OnMinimumSizeChanged(System.EventArgs)\n  commentId: M:System.Windows.Forms.Form.OnMinimumSizeChanged(System.EventArgs)\n  id: OnMinimumSizeChanged(System.EventArgs)\n  parent: System.Windows.Forms.Form\n  langs:\n  - csharp\n  name: OnMinimumSizeChanged(EventArgs)\n  nameWithType: Form.OnMinimumSizeChanged(EventArgs)\n  fullName: Form.OnMinimumSizeChanged(EventArgs)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Raises the <xref href=\"System.Windows.Forms.Form.MinimumSizeChanged\"></xref> event.\n  remarks: \"Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).  \\n  \\n The <xref:System.Windows.Forms.Form.OnMinimumSizeChanged%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.\"\n  syntax:\n    content: protected virtual void OnMinimumSizeChanged (EventArgs e);\n    parameters:\n    - id: e\n      type: System.EventArgs\n      description: An <xref href=\"System.EventArgs\"></xref> that contains the event data.\n  overload: System.Windows.Forms.Form.OnMinimumSizeChanged*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Form.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Form.OnPaint(System.Windows.Forms.PaintEventArgs)\n  commentId: M:System.Windows.Forms.Form.OnPaint(System.Windows.Forms.PaintEventArgs)\n  id: OnPaint(System.Windows.Forms.PaintEventArgs)\n  parent: System.Windows.Forms.Form\n  langs:\n  - csharp\n  name: OnPaint(PaintEventArgs)\n  nameWithType: Form.OnPaint(PaintEventArgs)\n  fullName: Form.OnPaint(PaintEventArgs)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Raises the <xref href=\"System.Windows.Forms.Control.Paint\"></xref> event.\n  syntax:\n    content: protected override void OnPaint (System.Windows.Forms.PaintEventArgs e);\n    parameters:\n    - id: e\n      type: System.Windows.Forms.PaintEventArgs\n      description: A <xref href=\"System.Windows.Forms.PaintEventArgs\"></xref> that contains the event data.\n  overload: System.Windows.Forms.Form.OnPaint*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Form.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Form.OnResize(System.EventArgs)\n  commentId: M:System.Windows.Forms.Form.OnResize(System.EventArgs)\n  id: OnResize(System.EventArgs)\n  parent: System.Windows.Forms.Form\n  langs:\n  - csharp\n  name: OnResize(EventArgs)\n  nameWithType: Form.OnResize(EventArgs)\n  fullName: Form.OnResize(EventArgs)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Raises the <xref href=\"System.Windows.Forms.Control.Resize\"></xref> event.\n  syntax:\n    content: protected override void OnResize (EventArgs e);\n    parameters:\n    - id: e\n      type: System.EventArgs\n      description: An <xref href=\"System.EventArgs\"></xref> that contains the event data.\n  overload: System.Windows.Forms.Form.OnResize*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Form.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Form.OnResizeBegin(System.EventArgs)\n  commentId: M:System.Windows.Forms.Form.OnResizeBegin(System.EventArgs)\n  id: OnResizeBegin(System.EventArgs)\n  parent: System.Windows.Forms.Form\n  langs:\n  - csharp\n  name: OnResizeBegin(EventArgs)\n  nameWithType: Form.OnResizeBegin(EventArgs)\n  fullName: Form.OnResizeBegin(EventArgs)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Raises the <xref href=\"System.Windows.Forms.Form.ResizeBegin\"></xref> event.\n  remarks: \"The <xref:System.Windows.Forms.Form.ResizeBegin> event will only be raised if the form's <xref:System.Windows.Forms.Control.CanRaiseEvents%2A> property is set to `true`.  \\n  \\n Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).  \\n  \\n The <xref:System.Windows.Forms.Form.OnResizeBegin%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.\"\n  syntax:\n    content: protected virtual void OnResizeBegin (EventArgs e);\n    parameters:\n    - id: e\n      type: System.EventArgs\n      description: A <xref href=\"System.EventArgs\"></xref> that contains the event data.\n  overload: System.Windows.Forms.Form.OnResizeBegin*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Form.xml\n  ms.technology:\n  - dotnet-winforms\n  ms.author: kempb\n  manager: ghogen\n- uid: System.Windows.Forms.Form.OnResizeEnd(System.EventArgs)\n  commentId: M:System.Windows.Forms.Form.OnResizeEnd(System.EventArgs)\n  id: OnResizeEnd(System.EventArgs)\n  parent: System.Windows.Forms.Form\n  langs:\n  - csharp\n  name: OnResizeEnd(EventArgs)\n  nameWithType: Form.OnResizeEnd(EventArgs)\n  fullName: Form.OnResizeEnd(EventArgs)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Raises the <xref href=\"System.Windows.Forms.Form.ResizeEnd\"></xref> event.\n  remarks: \"The <xref:System.Windows.Forms.Form.ResizeEnd> event will only be raised if the form's <xref:System.Windows.Forms.Control.CanRaiseEvents%2A> property is set to `true`.  \\n  \\n Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).  \\n  \\n The <xref:System.Windows.Forms.Form.OnResizeEnd%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.\"\n  syntax:\n    content: protected virtual void OnResizeEnd (EventArgs e);\n    parameters:\n    - id: e\n      type: System.EventArgs\n      description: A <xref href=\"System.EventArgs\"></xref> that contains the event data.\n  overload: System.Windows.Forms.Form.OnResizeEnd*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Form.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Form.OnRightToLeftLayoutChanged(System.EventArgs)\n  commentId: M:System.Windows.Forms.Form.OnRightToLeftLayoutChanged(System.EventArgs)\n  id: OnRightToLeftLayoutChanged(System.EventArgs)\n  parent: System.Windows.Forms.Form\n  langs:\n  - csharp\n  name: OnRightToLeftLayoutChanged(EventArgs)\n  nameWithType: Form.OnRightToLeftLayoutChanged(EventArgs)\n  fullName: Form.OnRightToLeftLayoutChanged(EventArgs)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Raises the <xref href=\"System.Windows.Forms.Form.RightToLeftLayoutChanged\"></xref> event.\n  remarks: \"If the current form or one of its parents is disposing of resources, the <xref:System.Windows.Forms.Form.OnRightToLeftLayoutChanged%2A> method will return without performing any action. If the <xref:System.Windows.Forms.Control.RightToLeft%2A> property of the form has a value of <xref:System.Windows.Forms.RightToLeft.Yes>, then the handles of the form and its child controls will be recreated through calls to the <xref:System.Windows.Forms.Control.RecreateHandle%2A> method.  \\n  \\n Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).  \\n  \\n The <xref:System.Windows.Forms.Form.OnRightToLeftLayoutChanged%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.\"\n  syntax:\n    content: protected virtual void OnRightToLeftLayoutChanged (EventArgs e);\n    parameters:\n    - id: e\n      type: System.EventArgs\n      description: An <xref href=\"System.EventArgs\"></xref> that contains the event data.\n  overload: System.Windows.Forms.Form.OnRightToLeftLayoutChanged*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Form.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Form.OnShown(System.EventArgs)\n  commentId: M:System.Windows.Forms.Form.OnShown(System.EventArgs)\n  id: OnShown(System.EventArgs)\n  parent: System.Windows.Forms.Form\n  langs:\n  - csharp\n  name: OnShown(EventArgs)\n  nameWithType: Form.OnShown(EventArgs)\n  fullName: Form.OnShown(EventArgs)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Raises the <xref href=\"System.Windows.Forms.Form.Shown\"></xref> event.\n  remarks: \"The <xref:System.Windows.Forms.Form.Shown> event occurs whenever the form is first shown.  \\n  \\n Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).  \\n  \\n The <xref:System.Windows.Forms.Form.OnShown%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.\"\n  syntax:\n    content: protected virtual void OnShown (EventArgs e);\n    parameters:\n    - id: e\n      type: System.EventArgs\n      description: A <xref href=\"System.EventArgs\"></xref> that contains the event data.\n  overload: System.Windows.Forms.Form.OnShown*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Form.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Form.OnStyleChanged(System.EventArgs)\n  commentId: M:System.Windows.Forms.Form.OnStyleChanged(System.EventArgs)\n  id: OnStyleChanged(System.EventArgs)\n  parent: System.Windows.Forms.Form\n  langs:\n  - csharp\n  name: OnStyleChanged(EventArgs)\n  nameWithType: Form.OnStyleChanged(EventArgs)\n  fullName: Form.OnStyleChanged(EventArgs)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Raises the <xref href=\"System.Windows.Forms.Control.StyleChanged\"></xref> event.\n  syntax:\n    content: protected override void OnStyleChanged (EventArgs e);\n    parameters:\n    - id: e\n      type: System.EventArgs\n      description: An <xref href=\"System.EventArgs\"></xref> that contains the event data.\n  overload: System.Windows.Forms.Form.OnStyleChanged*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Form.xml\n  ms.technology:\n  - dotnet-winforms\n  ms.author: kempb\n  manager: ghogen\n- uid: System.Windows.Forms.Form.OnTextChanged(System.EventArgs)\n  commentId: M:System.Windows.Forms.Form.OnTextChanged(System.EventArgs)\n  id: OnTextChanged(System.EventArgs)\n  parent: System.Windows.Forms.Form\n  langs:\n  - csharp\n  name: OnTextChanged(EventArgs)\n  nameWithType: Form.OnTextChanged(EventArgs)\n  fullName: Form.OnTextChanged(EventArgs)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Raises the <xref href=\"System.Windows.Forms.Control.TextChanged\"></xref> event.\n  syntax:\n    content: protected override void OnTextChanged (EventArgs e);\n    parameters:\n    - id: e\n      type: System.EventArgs\n      description: An <xref href=\"System.EventArgs\"></xref> that contains the event data.\n  overload: System.Windows.Forms.Form.OnTextChanged*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Form.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Form.OnVisibleChanged(System.EventArgs)\n  commentId: M:System.Windows.Forms.Form.OnVisibleChanged(System.EventArgs)\n  id: OnVisibleChanged(System.EventArgs)\n  parent: System.Windows.Forms.Form\n  langs:\n  - csharp\n  name: OnVisibleChanged(EventArgs)\n  nameWithType: Form.OnVisibleChanged(EventArgs)\n  fullName: Form.OnVisibleChanged(EventArgs)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Raises the <xref href=\"System.Windows.Forms.Control.VisibleChanged\"></xref> event.\n  remarks: \"Raising an event invokes the event handler through a delegate. For more information, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).  \\n  \\n The <xref:System.Windows.Forms.Form.OnVisibleChanged%2A> method also allows derived classes to handle the event without attaching a delegate. This is the preferred technique for handling the event in a derived class.\"\n  syntax:\n    content: protected override void OnVisibleChanged (EventArgs e);\n    parameters:\n    - id: e\n      type: System.EventArgs\n      description: The <xref href=\"System.EventArgs\"></xref> that contains the event data.\n  overload: System.Windows.Forms.Form.OnVisibleChanged*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Form.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Form.Opacity\n  commentId: P:System.Windows.Forms.Form.Opacity\n  id: Opacity\n  parent: System.Windows.Forms.Form\n  langs:\n  - csharp\n  name: Opacity\n  nameWithType: Form.Opacity\n  fullName: Form.Opacity\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets or sets the opacity level of the form.\n  remarks: \"The <xref:System.Windows.Forms.Form.Opacity%2A> property enables you to specify a level of transparency for the form and its controls. When this property is set to a value less than 100 percent (1.00), the entire form, including borders, is made more transparent. Setting this property to a value of 0 percent (0.00) makes the form completely invisible. You can use this property to provide different levels of transparency or to provide effects such as phasing a form in or out of view. For example, you can phase a form into view by setting the <xref:System.Windows.Forms.Form.Opacity%2A> property to a value of 0 percent (0.00) and gradually increasing the value until it reaches 100 percent (1.00).  \\n  \\n <xref:System.Windows.Forms.Form.Opacity%2A> differs from the transparency provided by the <xref:System.Windows.Forms.Form.TransparencyKey%2A>, which only makes a form and its controls completely transparent if they are the same color as the value specified in the <xref:System.Windows.Forms.Form.TransparencyKey%2A> property.  \\n  \\n This property is not supported when <xref:System.Windows.Forms.Form.RightToLeftLayout%2A> is `true`.  \\n  \\n The <xref:System.Windows.Forms.Form.Opacity%2A> property depends on the Layered Windows API that was introduced with Windows 2000. For more information, see the \\\"Layered Windows: A New Way to Use Translucency and Transparency Effects in Windows Applications\\\" in the Platform SDK documentation at [http://msdn.microsoft.com](http://msdn.microsoft.com/).\"\n  example:\n  - \"The following code example demonstrates how to create a form that is displayed with an opacity level of 75 percent. The code example creates a new form that is positioned in the center of the screen with an <xref:System.Windows.Forms.Form.Opacity%2A> property set to change the opacity level of the form. The code example also sets the <xref:System.Windows.Forms.Form.Size%2A> property to provide a larger sized form than the default size of the form. This code example was written under the assumption that the method defined in this example is called from another form in an event handler or other method.  \\n  \\n [!code-cpp[Form.Opacity#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Form.Opacity/CPP/form1.cpp#1)]\\n [!code-csharp[Form.Opacity#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Form.Opacity/CS/form1.cs#1)]\\n [!code-vb[Form.Opacity#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Form.Opacity/VB/form1.vb#1)]\"\n  syntax:\n    content: >-\n      [System.ComponentModel.TypeConverter(typeof(System.Windows.Forms.OpacityConverter))]\n\n      public double Opacity { get; set; }\n    return:\n      type: System.Double\n      description: The level of opacity for the form. The default is 1.00.\n  overload: System.Windows.Forms.Form.Opacity*\n  exceptions: []\n  attributes:\n  - type: System.ComponentModel.TypeConverterAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Form.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Form.OwnedForms\n  commentId: P:System.Windows.Forms.Form.OwnedForms\n  id: OwnedForms\n  parent: System.Windows.Forms.Form\n  langs:\n  - csharp\n  name: OwnedForms\n  nameWithType: Form.OwnedForms\n  fullName: Form.OwnedForms\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets an array of <xref href=\"System.Windows.Forms.Form\"></xref> objects that represent all forms that are owned by this form.\n  remarks: \"This property returns an array that contains all forms that are owned by this form. To make a form owned by another form, call the <xref:System.Windows.Forms.Form.AddOwnedForm%2A> method. The form assigned to the owner form will remain owned until the <xref:System.Windows.Forms.Form.RemoveOwnedForm%2A> method is called. You can also make a form owned by another by setting the <xref:System.Windows.Forms.Form.Owner%2A> property with a reference to its owner form.  \\n  \\n When a form is owned by another form, it is closed or hidden with the owner form. For example, consider a form named `Form2` that is owned by a form named `Form1`. If `Form1` is closed or minimized, `Form2` is also closed or hidden. Owned forms are also never displayed behind their owner form. You can use owned forms for windows such as find and replace windows, which should not be displayed behind the owner form when the owner form is selected.  \\n  \\n> [!NOTE]\\n>  If the form is a multiple-document interface (MDI) parent form, this property will return all forms that are displayed with the exception of any MDI child forms that are currently open. To obtain the MDI child forms opened in an MDI parent form, use the <xref:System.Windows.Forms.Form.MdiChildren%2A> property.\"\n  example:\n  - \"The following code example demonstrates how to use the <xref:System.Windows.Forms.Form.OwnedForms%2A> property to modify all forms owned by the owner form. The first method in the example adds forms to the array of owned forms associated with the owned form. The second method loops through all owned forms and changes the caption. This example requires that both methods are called by an event or other method of a form.  \\n  \\n [!code-cpp[Form.OwnedForms#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Form.OwnedForms/CPP/form1.cpp#1)]\\n [!code-csharp[Form.OwnedForms#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Form.OwnedForms/CS/form1.cs#1)]\\n [!code-vb[Form.OwnedForms#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Form.OwnedForms/VB/form1.vb#1)]\"\n  syntax:\n    content: >-\n      [System.ComponentModel.Browsable(false)]\n\n      public System.Windows.Forms.Form[] OwnedForms { get; }\n    return:\n      type: System.Windows.Forms.Form[]\n      description: A <xref href=\"System.Windows.Forms.Form\"></xref> array that represents the owned forms for this form.\n  overload: System.Windows.Forms.Form.OwnedForms*\n  exceptions: []\n  attributes:\n  - type: System.ComponentModel.BrowsableAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Form.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Form.Owner\n  commentId: P:System.Windows.Forms.Form.Owner\n  id: Owner\n  parent: System.Windows.Forms.Form\n  langs:\n  - csharp\n  name: Owner\n  nameWithType: Form.Owner\n  fullName: Form.Owner\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets or sets the form that owns this form.\n  remarks: \"To make a form owned by another form, assign its <xref:System.Windows.Forms.Form.Owner%2A> property a reference to the form that will be the owner.  \\n  \\n When a form is owned by another form, it is closed or hidden with the owner form. For example, consider a form named `Form2` that is owned by a form named `Form1`. If `Form1` is closed or minimized, `Form2` is also closed or hidden.Owned forms are also never displayed behind their owner form. You can use owned forms for windows such as find and replace windows, which should not disappear when the owner form is selected. To determine the forms that are owned by a parent form, use the <xref:System.Windows.Forms.Form.OwnedForms%2A> property.\"\n  syntax:\n    content: >-\n      [System.ComponentModel.Browsable(false)]\n\n      public System.Windows.Forms.Form Owner { get; set; }\n    return:\n      type: System.Windows.Forms.Form\n      description: A <xref href=\"System.Windows.Forms.Form\"></xref> that represents the form that is the owner of this form.\n  overload: System.Windows.Forms.Form.Owner*\n  exceptions:\n  - type: System.Exception\n    commentId: T:System.Exception\n    description: A top-level window cannot have an owner.\n  attributes:\n  - type: System.ComponentModel.BrowsableAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Form.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Form.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)\n  commentId: M:System.Windows.Forms.Form.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)\n  id: ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)\n  parent: System.Windows.Forms.Form\n  langs:\n  - csharp\n  name: ProcessCmdKey(Message, Keys)\n  nameWithType: Form.ProcessCmdKey(Message, Keys)\n  fullName: Form.ProcessCmdKey(Message, Keys)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Processes a command key.\n  remarks: \"The <xref:System.Windows.Forms.Form.ProcessCmdKey%2A> method overrides the base  \\n  \\n <xref:System.Windows.Forms.ContainerControl.ProcessCmdKey%2A?displayProperty=fullName> implementation to provide additional handling of main menu command keys and MDI accelerators.  \\n  \\n For information about trapping keystrokes, see \\\"How to trap keystrokes in controls by using Visual C#\\\" and \\\"How to trap keystrokes in .NET controls by using Visual Basic .NET\\\" in the Microsoft Knowledge Base at http://support.microsoft.com.\"\n  syntax:\n    content: protected override bool ProcessCmdKey (ref System.Windows.Forms.Message msg, System.Windows.Forms.Keys keyData);\n    parameters:\n    - id: msg\n      type: System.Windows.Forms.Message\n      description: A <xref href=\"System.Windows.Forms.Message\"></xref>, passed by reference, that represents the Win32 message to process.\n    - id: keyData\n      type: System.Windows.Forms.Keys\n      description: One of the <xref href=\"System.Windows.Forms.Keys\"></xref> values that represents the key to process.\n    return:\n      type: System.Boolean\n      description: '`true` if the keystroke was processed and consumed by the control; otherwise, `false` to allow further processing.'\n  overload: System.Windows.Forms.Form.ProcessCmdKey*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Form.xml\n  ms.technology:\n  - dotnet-winforms\n  ms.author: kempb\n  manager: ghogen\n- uid: System.Windows.Forms.Form.ProcessDialogChar(System.Char)\n  commentId: M:System.Windows.Forms.Form.ProcessDialogChar(System.Char)\n  id: ProcessDialogChar(System.Char)\n  parent: System.Windows.Forms.Form\n  langs:\n  - csharp\n  name: ProcessDialogChar(Char)\n  nameWithType: Form.ProcessDialogChar(Char)\n  fullName: Form.ProcessDialogChar(Char)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Processes a dialog character.\n  syntax:\n    content: protected override bool ProcessDialogChar (char charCode);\n    parameters:\n    - id: charCode\n      type: System.Char\n      description: The character to process.\n    return:\n      type: System.Boolean\n      description: '`true` if the character was processed by the control; otherwise, `false`.'\n  overload: System.Windows.Forms.Form.ProcessDialogChar*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Form.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Form.ProcessDialogKey(System.Windows.Forms.Keys)\n  commentId: M:System.Windows.Forms.Form.ProcessDialogKey(System.Windows.Forms.Keys)\n  id: ProcessDialogKey(System.Windows.Forms.Keys)\n  parent: System.Windows.Forms.Form\n  langs:\n  - csharp\n  name: ProcessDialogKey(Keys)\n  nameWithType: Form.ProcessDialogKey(Keys)\n  fullName: Form.ProcessDialogKey(Keys)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Processes a dialog box key.\n  remarks: The <xref:System.Windows.Forms.Form.ProcessDialogKey%2A> method overrides the base <xref:System.Windows.Forms.ContainerControl.ProcessDialogKey%2A?displayProperty=fullName> implementation to provide additional handling of the RETURN and ESCAPE keys in dialog boxes. The method performs no processing on keystrokes that include the ALT or CONTROL modifiers.\n  syntax:\n    content: protected override bool ProcessDialogKey (System.Windows.Forms.Keys keyData);\n    parameters:\n    - id: keyData\n      type: System.Windows.Forms.Keys\n      description: One of the <xref href=\"System.Windows.Forms.Keys\"></xref> values that represents the key to process.\n    return:\n      type: System.Boolean\n      description: '`true` if the keystroke was processed and consumed by the control; otherwise, `false` to allow further processing.'\n  overload: System.Windows.Forms.Form.ProcessDialogKey*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Form.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Form.ProcessKeyPreview(System.Windows.Forms.Message@)\n  commentId: M:System.Windows.Forms.Form.ProcessKeyPreview(System.Windows.Forms.Message@)\n  id: ProcessKeyPreview(System.Windows.Forms.Message@)\n  parent: System.Windows.Forms.Form\n  langs:\n  - csharp\n  name: ProcessKeyPreview(Message)\n  nameWithType: Form.ProcessKeyPreview(Message)\n  fullName: Form.ProcessKeyPreview(Message)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Previews a keyboard message.\n  syntax:\n    content: protected override bool ProcessKeyPreview (ref System.Windows.Forms.Message m);\n    parameters:\n    - id: m\n      type: System.Windows.Forms.Message\n      description: A <xref href=\"System.Windows.Forms.Message\"></xref>, passed by reference, that represents the window message to process.\n    return:\n      type: System.Boolean\n      description: '`true` if the message was processed by the control; otherwise, `false`.'\n  overload: System.Windows.Forms.Form.ProcessKeyPreview*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Form.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Form.ProcessMnemonic(System.Char)\n  commentId: M:System.Windows.Forms.Form.ProcessMnemonic(System.Char)\n  id: ProcessMnemonic(System.Char)\n  parent: System.Windows.Forms.Form\n  langs:\n  - csharp\n  name: ProcessMnemonic(Char)\n  nameWithType: Form.ProcessMnemonic(Char)\n  fullName: Form.ProcessMnemonic(Char)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Processes a mnemonic character.\n  syntax:\n    content: protected override bool ProcessMnemonic (char charCode);\n    parameters:\n    - id: charCode\n      type: System.Char\n      description: The character to process.\n    return:\n      type: System.Boolean\n      description: '`true` if the character was processed as a mnemonic by the control; otherwise, `false`.'\n  overload: System.Windows.Forms.Form.ProcessMnemonic*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Form.xml\n  ms.technology:\n  - dotnet-winforms\n  ms.author: kempb\n  manager: ghogen\n- uid: System.Windows.Forms.Form.ProcessTabKey(System.Boolean)\n  commentId: M:System.Windows.Forms.Form.ProcessTabKey(System.Boolean)\n  id: ProcessTabKey(System.Boolean)\n  parent: System.Windows.Forms.Form\n  langs:\n  - csharp\n  name: ProcessTabKey(Boolean)\n  nameWithType: Form.ProcessTabKey(Boolean)\n  fullName: Form.ProcessTabKey(Boolean)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Selects the next available control and makes it the active control.\n  syntax:\n    content: protected override bool ProcessTabKey (bool forward);\n    parameters:\n    - id: forward\n      type: System.Boolean\n      description: '`true` to cycle forward through the controls in the ContainerControl; otherwise, `false`.'\n    return:\n      type: System.Boolean\n      description: '`true` if a control is selected; otherwise, `false`.'\n  overload: System.Windows.Forms.Form.ProcessTabKey*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Form.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Form.RemoveOwnedForm(System.Windows.Forms.Form)\n  commentId: M:System.Windows.Forms.Form.RemoveOwnedForm(System.Windows.Forms.Form)\n  id: RemoveOwnedForm(System.Windows.Forms.Form)\n  parent: System.Windows.Forms.Form\n  langs:\n  - csharp\n  name: RemoveOwnedForm(Form)\n  nameWithType: Form.RemoveOwnedForm(Form)\n  fullName: Form.RemoveOwnedForm(Form)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Removes an owned form from this form.\n  remarks: The form assigned to the owner form remains owned until the <xref:System.Windows.Forms.Form.RemoveOwnedForm%2A> method is called. In addition to removing the owned form from the list of owned form, this method also sets the owner form to `null`.\n  syntax:\n    content: public void RemoveOwnedForm (System.Windows.Forms.Form ownedForm);\n    parameters:\n    - id: ownedForm\n      type: System.Windows.Forms.Form\n      description: A <xref href=\"System.Windows.Forms.Form\"></xref> representing the form to remove from the list of owned forms for this form.\n  overload: System.Windows.Forms.Form.RemoveOwnedForm*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Form.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Form.ResizeBegin\n  commentId: E:System.Windows.Forms.Form.ResizeBegin\n  id: ResizeBegin\n  parent: System.Windows.Forms.Form\n  langs:\n  - csharp\n  name: ResizeBegin\n  nameWithType: Form.ResizeBegin\n  fullName: Form.ResizeBegin\n  type: Event\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Occurs when a form enters resizing mode.\n  remarks: \"The <xref:System.Windows.Forms.Form.ResizeBegin> event is raised when the user begins to resize a form, typically by clicking and dragging one of the borders or the sizing grip located on the lower-right corner of the form. This action puts the form into a modal sizing loop until the resize operation is completed. Typically, the following set of events occurs during a resize operation:  \\n  \\n1.  A single <xref:System.Windows.Forms.Form.ResizeBegin> event occurs as the form enters resizing mode.  \\n  \\n2.  Zero or more pairs of <xref:System.Windows.Forms.Control.Resize> and <xref:System.Windows.Forms.Control.SizeChanged> events occur as the form's <xref:System.Windows.Forms.Form.Size%2A> is modified.  \\n  \\n3.  A single <xref:System.Windows.Forms.Form.ResizeEnd> event occurs as the form exits resizing mode.  \\n  \\n> [!NOTE]\\n>  Just clicking without dragging on a border or resizing grip will generate the <xref:System.Windows.Forms.Form.ResizeBegin> and <xref:System.Windows.Forms.Form.ResizeEnd> events without any intermediate <xref:System.Windows.Forms.Control.Resize> and <xref:System.Windows.Forms.Control.SizeChanged> event pairs.  \\n  \\n The <xref:System.Windows.Forms.Form.ResizeBegin> and <xref:System.Windows.Forms.Form.ResizeEnd> pair of events is also raised when the user moves the form, typically by clicking and dragging on the caption bar. These events are not generated by programmatic manipulation of the form, for example by changing the <xref:System.Windows.Forms.Form.Size%2A> or <xref:System.Windows.Forms.Control.Location%2A> properties.  \\n  \\n For more information about handling events, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).\"\n  example:\n  - \"The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.Form.ResizeBegin> event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \\n  \\n To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.Form> named `Form1`. Then ensure that the event handler is associated with the <xref:System.Windows.Forms.Form.ResizeBegin> event.  \\n  \\n [!code-csharp[System.Windows.Forms.EventExamples#404](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#404)]\\n [!code-vb[System.Windows.Forms.EventExamples#404](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#404)]\"\n  syntax:\n    content: public event EventHandler ResizeBegin;\n    return:\n      type: System.EventHandler\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Form.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Form.ResizeEnd\n  commentId: E:System.Windows.Forms.Form.ResizeEnd\n  id: ResizeEnd\n  parent: System.Windows.Forms.Form\n  langs:\n  - csharp\n  name: ResizeEnd\n  nameWithType: Form.ResizeEnd\n  fullName: Form.ResizeEnd\n  type: Event\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Occurs when a form exits resizing mode.\n  remarks: \"The <xref:System.Windows.Forms.Form.ResizeEnd> event is raised when the user finishes resizing a form, typically by dragging one of the borders or the sizing grip located on the lower-right corner of the form, and then releasing it. For more information about the resizing operation, see the <xref:System.Windows.Forms.Form.ResizeBegin> event.  \\n  \\n The <xref:System.Windows.Forms.Form.ResizeEnd> event is also generated after the user moves a form, typically by clicking and dragging on the caption bar. This event is not generated by programmatic manipulation of the form, for example by changing the <xref:System.Windows.Forms.Form.Size%2A> or <xref:System.Windows.Forms.Control.Location%2A> properties.  \\n  \\n For more information about handling events, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).\"\n  example:\n  - \"The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.Form.ResizeEnd> event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \\n  \\n To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.Form> named `Form1`. Then ensure that the event handler is associated with the <xref:System.Windows.Forms.Form.ResizeEnd> event.  \\n  \\n [!code-csharp[System.Windows.Forms.EventExamples#405](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#405)]\\n [!code-vb[System.Windows.Forms.EventExamples#405](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#405)]\"\n  syntax:\n    content: public event EventHandler ResizeEnd;\n    return:\n      type: System.EventHandler\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Form.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Form.RestoreBounds\n  commentId: P:System.Windows.Forms.Form.RestoreBounds\n  id: RestoreBounds\n  parent: System.Windows.Forms.Form\n  langs:\n  - csharp\n  name: RestoreBounds\n  nameWithType: Form.RestoreBounds\n  fullName: Form.RestoreBounds\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets the location and size of the form in its normal window state.\n  remarks: \"Typically, you use the <xref:System.Windows.Forms.Form.RestoreBounds%2A> property to track the user's window size and position preferences for the form in its normal window state. You should track both the value of the <xref:System.Windows.Forms.Form.WindowState%2A> and <xref:System.Windows.Forms.Form.RestoreBounds%2A> properties when tracking the user's window preferences.  \\n  \\n> [!NOTE]\\n>  The value of the <xref:System.Windows.Forms.Form.RestoreBounds%2A> property is valid only when the <xref:System.Windows.Forms.Form.WindowState%2A> property of the <xref:System.Windows.Forms.Form> class is not equal to <xref:System.Windows.Forms.FormWindowState.Normal>.\"\n  syntax:\n    content: >-\n      [System.ComponentModel.Browsable(false)]\n\n      public System.Drawing.Rectangle RestoreBounds { get; }\n    return:\n      type: System.Drawing.Rectangle\n      description: A <xref href=\"System.Drawing.Rectangle\"></xref> that contains the location and size of the form in the normal window state.\n  overload: System.Windows.Forms.Form.RestoreBounds*\n  exceptions: []\n  attributes:\n  - type: System.ComponentModel.BrowsableAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Form.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Form.RightToLeftLayout\n  commentId: P:System.Windows.Forms.Form.RightToLeftLayout\n  id: RightToLeftLayout\n  parent: System.Windows.Forms.Form\n  langs:\n  - csharp\n  name: RightToLeftLayout\n  nameWithType: Form.RightToLeftLayout\n  fullName: Form.RightToLeftLayout\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets or sets a value indicating whether right-to-left mirror placement is turned on.\n  remarks: \"The <xref:System.Windows.Forms.Form.RightToLeftLayout%2A> property is primarily useful for developing world-ready forms for worldwide audiences. Many forms are designed so that controls are laid out on a form in a left-to-right fashion. These forms are compatible with languages that follow this writing direction. However, when you display the same forms to users of right-to-left languages, it is often preferable to reverse the order of the controls on the form. If both the <xref:System.Windows.Forms.Form.RightToLeftLayout%2A> and <xref:System.Windows.Forms.Control.RightToLeft%2A> properties are `true`, mirroring will be turned on for the form, and control placement and text flow will be right-to-left.  \\n  \\n Unlike <xref:System.Windows.Forms.Control.RightToLeft%2A>, <xref:System.Windows.Forms.Form.RightToLeftLayout%2A> does not inherit. If you want it to take effect for child controls, you must set it on each child control that you want mirrored.  \\n  \\n Owner draw is not supported when <xref:System.Windows.Forms.Form.RightToLeftLayout%2A> is set to `Yes`. The owner draw events will still occur, but the behavior of any code you author in these events is not defined. Additionally, <xref:System.Windows.Forms.Control.BackgroundImage%2A>, <xref:System.Windows.Forms.Form.Opacity%2A>, <xref:System.Windows.Forms.Form.TransparencyKey%2A>, and the painting events are not supported.  \\n  \\n The <xref:System.Windows.Forms.Form.RightToLeftLayout%2A> and <xref:System.Windows.Forms.Control.RightToLeft%2A> properties cause the following Win32 API window styles to be set:  \\n  \\n-   When <xref:System.Windows.Forms.Control.RightToLeft%2A> is set to `Yes` and <xref:System.Windows.Forms.Form.RightToLeftLayout%2A> is set to `true`, Windows Forms sets the `WS_EX_LAYOUTRTL` window style, and removes the `WS_EX_RIGHT` and `WS_EX_RTLREADING` styles.  \\n  \\n-   When <xref:System.Windows.Forms.Control.RightToLeft%2A> is set to `Yes` but <xref:System.Windows.Forms.Form.RightToLeftLayout%2A> is set to `No`, Windows Forms sets the `WS_EX_RIGHT` and `WS_EX_RTLREADING` window styles.  \\n  \\n Changing the value of this property raises the <xref:System.Windows.Forms.Form.RightToLeftLayoutChanged> event.  \\n  \\n For more information about globalization issues, see [Best Practices for Developing World-Ready Applications](~/docs/standard/globalization-localization/best-practices-for-developing-world-ready-apps.md).\"\n  syntax:\n    content: public virtual bool RightToLeftLayout { get; set; }\n    return:\n      type: System.Boolean\n      description: '`true` if right-to-left mirror placement is turned on; otherwise, `false` for standard child control placement. The default is `false`.'\n  overload: System.Windows.Forms.Form.RightToLeftLayout*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Form.xml\n  ms.technology:\n  - dotnet-winforms\n  ms.author: kempb\n  manager: ghogen\n- uid: System.Windows.Forms.Form.RightToLeftLayoutChanged\n  commentId: E:System.Windows.Forms.Form.RightToLeftLayoutChanged\n  id: RightToLeftLayoutChanged\n  parent: System.Windows.Forms.Form\n  langs:\n  - csharp\n  name: RightToLeftLayoutChanged\n  nameWithType: Form.RightToLeftLayoutChanged\n  fullName: Form.RightToLeftLayoutChanged\n  type: Event\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Occurs after the value of the <xref href=\"System.Windows.Forms.Form.RightToLeftLayout\"></xref> property changes.\n  remarks: The <xref:System.Windows.Forms.Control.RightToLeft%2A> and <xref:System.Windows.Forms.Form.RightToLeftLayout%2A> properties are typically used in developing World-Ready applications.\n  example:\n  - \"The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.Form.RightToLeftLayoutChanged> event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \\n  \\n To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.Form> named `Form1`. Then ensure that the event handler is associated with the <xref:System.Windows.Forms.Form.RightToLeftLayoutChanged> event.  \\n  \\n [!code-csharp[System.Windows.Forms.EventExamples#402](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#402)]\\n [!code-vb[System.Windows.Forms.EventExamples#402](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#402)]\"\n  syntax:\n    content: public event EventHandler RightToLeftLayoutChanged;\n    return:\n      type: System.EventHandler\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Form.xml\n  ms.technology:\n  - dotnet-winforms\n  ms.author: kempb\n  manager: ghogen\n- uid: System.Windows.Forms.Form.ScaleControl(System.Drawing.SizeF,System.Windows.Forms.BoundsSpecified)\n  commentId: M:System.Windows.Forms.Form.ScaleControl(System.Drawing.SizeF,System.Windows.Forms.BoundsSpecified)\n  id: ScaleControl(System.Drawing.SizeF,System.Windows.Forms.BoundsSpecified)\n  parent: System.Windows.Forms.Form\n  langs:\n  - csharp\n  name: ScaleControl(SizeF, BoundsSpecified)\n  nameWithType: Form.ScaleControl(SizeF, BoundsSpecified)\n  fullName: Form.ScaleControl(SizeF, BoundsSpecified)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Scales the location, size, padding, and margin of a control.\n  syntax:\n    content: protected override void ScaleControl (System.Drawing.SizeF factor, System.Windows.Forms.BoundsSpecified specified);\n    parameters:\n    - id: factor\n      type: System.Drawing.SizeF\n      description: The factor by which the height and width of the control are scaled.\n    - id: specified\n      type: System.Windows.Forms.BoundsSpecified\n      description: A <xref href=\"System.Windows.Forms.BoundsSpecified\"></xref> value that specifies the bounds of the control to use when defining its size and position.\n  overload: System.Windows.Forms.Form.ScaleControl*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Form.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Form.ScaleCore(System.Single,System.Single)\n  commentId: M:System.Windows.Forms.Form.ScaleCore(System.Single,System.Single)\n  id: ScaleCore(System.Single,System.Single)\n  parent: System.Windows.Forms.Form\n  langs:\n  - csharp\n  name: ScaleCore(Single, Single)\n  nameWithType: Form.ScaleCore(Single, Single)\n  fullName: Form.ScaleCore(Single, Single)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Performs scaling of the form.\n  syntax:\n    content: protected override void ScaleCore (float x, float y);\n    parameters:\n    - id: x\n      type: System.Single\n      description: Percentage to scale the form horizontally\n    - id: y\n      type: System.Single\n      description: Percentage to scale the form vertically\n  overload: System.Windows.Forms.Form.ScaleCore*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Form.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Form.Select(System.Boolean,System.Boolean)\n  commentId: M:System.Windows.Forms.Form.Select(System.Boolean,System.Boolean)\n  id: Select(System.Boolean,System.Boolean)\n  parent: System.Windows.Forms.Form\n  langs:\n  - csharp\n  name: Select(Boolean, Boolean)\n  nameWithType: Form.Select(Boolean, Boolean)\n  fullName: Form.Select(Boolean, Boolean)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Selects this form, and optionally selects the next or previous control.\n  syntax:\n    content: protected override void Select (bool directed, bool forward);\n    parameters:\n    - id: directed\n      type: System.Boolean\n      description: If set to true that the active control is changed\n    - id: forward\n      type: System.Boolean\n      description: If directed is true, then this controls the direction in which focus is moved. If this is `true`, then the next control is selected; otherwise, the previous control is selected.\n  overload: System.Windows.Forms.Form.Select*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Form.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Form.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)\n  commentId: M:System.Windows.Forms.Form.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)\n  id: SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)\n  parent: System.Windows.Forms.Form\n  langs:\n  - csharp\n  name: SetBoundsCore(Int32, Int32, Int32, Int32, BoundsSpecified)\n  nameWithType: Form.SetBoundsCore(Int32, Int32, Int32, Int32, BoundsSpecified)\n  fullName: Form.SetBoundsCore(Int32, Int32, Int32, Int32, BoundsSpecified)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Performs the work of setting the specified bounds of this control.\n  syntax:\n    content: protected override void SetBoundsCore (int x, int y, int width, int height, System.Windows.Forms.BoundsSpecified specified);\n    parameters:\n    - id: x\n      type: System.Int32\n      description: The new <xref href=\"System.Windows.Forms.Control.Left\"></xref> property value of the control.\n    - id: y\n      type: System.Int32\n      description: The new <xref href=\"System.Windows.Forms.Control.Top\"></xref> property value of the control.\n    - id: width\n      type: System.Int32\n      description: The new <xref href=\"System.Windows.Forms.Control.Width\"></xref> property value of the control.\n    - id: height\n      type: System.Int32\n      description: The new <xref href=\"System.Windows.Forms.Control.Height\"></xref> property value of the control.\n    - id: specified\n      type: System.Windows.Forms.BoundsSpecified\n      description: A bitwise combination of the <xref href=\"System.Windows.Forms.BoundsSpecified\"></xref> values.\n  overload: System.Windows.Forms.Form.SetBoundsCore*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Form.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Form.SetClientSizeCore(System.Int32,System.Int32)\n  commentId: M:System.Windows.Forms.Form.SetClientSizeCore(System.Int32,System.Int32)\n  id: SetClientSizeCore(System.Int32,System.Int32)\n  parent: System.Windows.Forms.Form\n  langs:\n  - csharp\n  name: SetClientSizeCore(Int32, Int32)\n  nameWithType: Form.SetClientSizeCore(Int32, Int32)\n  fullName: Form.SetClientSizeCore(Int32, Int32)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Sets the client size of the form. This will adjust the bounds of the form to make the client size the requested size.\n  syntax:\n    content: protected override void SetClientSizeCore (int x, int y);\n    parameters:\n    - id: x\n      type: System.Int32\n      description: Requested width of the client region.\n    - id: y\n      type: System.Int32\n      description: Requested height of the client region.\n  overload: System.Windows.Forms.Form.SetClientSizeCore*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Form.xml\n  ms.technology:\n  - dotnet-winforms\n  ms.author: kempb\n  manager: ghogen\n- uid: System.Windows.Forms.Form.SetDesktopBounds(System.Int32,System.Int32,System.Int32,System.Int32)\n  commentId: M:System.Windows.Forms.Form.SetDesktopBounds(System.Int32,System.Int32,System.Int32,System.Int32)\n  id: SetDesktopBounds(System.Int32,System.Int32,System.Int32,System.Int32)\n  parent: System.Windows.Forms.Form\n  langs:\n  - csharp\n  name: SetDesktopBounds(Int32, Int32, Int32, Int32)\n  nameWithType: Form.SetDesktopBounds(Int32, Int32, Int32, Int32)\n  fullName: Form.SetDesktopBounds(Int32, Int32, Int32, Int32)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Sets the bounds of the form in desktop coordinates.\n  remarks: Desktop coordinates are based on the working area of the screen, which excludes the taskbar. You can use this method to set the position and size of your form on the desktop. Since desktop coordinates are based on the working area of the form, you can use this method to ensure that your form is completely visible on the desktop.\n  example:\n  - \"The following code example demonstrates using the <xref:System.Windows.Forms.Form.SetDesktopBounds%2A> method. To run this example, paste the following code in a form that contains a button named `Button2`. Ensure all events are associated with their event handlers.  \\n  \\n [!code-cpp[System.Windows.Forms.FormExample#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.FormExample/CPP/form1.cpp#2)]\\n [!code-csharp[System.Windows.Forms.FormExample#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.FormExample/CS/form1.cs#2)]\\n [!code-vb[System.Windows.Forms.FormExample#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.FormExample/VB/form1.vb#2)]\"\n  syntax:\n    content: public void SetDesktopBounds (int x, int y, int width, int height);\n    parameters:\n    - id: x\n      type: System.Int32\n      description: The x-coordinate of the form's location.\n    - id: y\n      type: System.Int32\n      description: The y-coordinate of the form's location.\n    - id: width\n      type: System.Int32\n      description: The width of the form.\n    - id: height\n      type: System.Int32\n      description: The height of the form.\n  overload: System.Windows.Forms.Form.SetDesktopBounds*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Form.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Form.SetDesktopLocation(System.Int32,System.Int32)\n  commentId: M:System.Windows.Forms.Form.SetDesktopLocation(System.Int32,System.Int32)\n  id: SetDesktopLocation(System.Int32,System.Int32)\n  parent: System.Windows.Forms.Form\n  langs:\n  - csharp\n  name: SetDesktopLocation(Int32, Int32)\n  nameWithType: Form.SetDesktopLocation(Int32, Int32)\n  fullName: Form.SetDesktopLocation(Int32, Int32)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Sets the location of the form in desktop coordinates.\n  remarks: Desktop coordinates are based on the working area of the screen, which excludes the taskbar. You can use this method to position your form on the desktop. Since desktop coordinates are based on the working area of the form, you can use this method to ensure that your form is completely visible on the desktop. This method is intended to be used primarily for top-level forms; use the <xref:System.Windows.Forms.Form.LayoutMdi%2A> method to position multiple-document interface (MDI) child forms.\n  example:\n  - \"The following code example demonstrates how to use the <xref:System.Windows.Forms.Form.SetDesktopLocation%2A>, <xref:System.Windows.Forms.Form.Load> and <xref:System.Windows.Forms.Form.Activate%2A> members. To run the example, paste the following code in a form called `Form1` containing a button called `Button1` and two `Label` controls called `Label1` and `Label2`.  \\n  \\n [!code-cpp[System.Windows.Forms.FormsActivate#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.FormsActivate/CPP/form1.cpp#1)]\\n [!code-csharp[System.Windows.Forms.FormsActivate#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.FormsActivate/CS/form1.cs#1)]\\n [!code-vb[System.Windows.Forms.FormsActivate#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.FormsActivate/VB/form1.vb#1)]\"\n  syntax:\n    content: public void SetDesktopLocation (int x, int y);\n    parameters:\n    - id: x\n      type: System.Int32\n      description: The x-coordinate of the form's location.\n    - id: y\n      type: System.Int32\n      description: The y-coordinate of the form's location.\n  overload: System.Windows.Forms.Form.SetDesktopLocation*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Form.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Form.SetVisibleCore(System.Boolean)\n  commentId: M:System.Windows.Forms.Form.SetVisibleCore(System.Boolean)\n  id: SetVisibleCore(System.Boolean)\n  parent: System.Windows.Forms.Form\n  langs:\n  - csharp\n  name: SetVisibleCore(Boolean)\n  nameWithType: Form.SetVisibleCore(Boolean)\n  fullName: Form.SetVisibleCore(Boolean)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Sets the control to the specified visible state.\n  syntax:\n    content: protected override void SetVisibleCore (bool value);\n    parameters:\n    - id: value\n      type: System.Boolean\n      description: '`true` to make the control visible; otherwise, `false`.'\n  overload: System.Windows.Forms.Form.SetVisibleCore*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Form.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Form.Show(System.Windows.Forms.IWin32Window)\n  commentId: M:System.Windows.Forms.Form.Show(System.Windows.Forms.IWin32Window)\n  id: Show(System.Windows.Forms.IWin32Window)\n  parent: System.Windows.Forms.Form\n  langs:\n  - csharp\n  name: Show(IWin32Window)\n  nameWithType: Form.Show(IWin32Window)\n  fullName: Form.Show(IWin32Window)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Shows the form with the specified owner to the user.\n  remarks: \"You can use this method to display a non-modal form. When you use this method, the <xref:System.Windows.Forms.Form.Owner%2A> property of the form is set to `owner`. The non-modal form can use the <xref:System.Windows.Forms.Form.Owner%2A> property to get information about the owning form.  Calling this method is identical to setting the <xref:System.Windows.Forms.Form.Owner%2A> property of the non-modal and then calling the <xref:System.Windows.Forms.Control.Show> method.  \\n  \\n Showing the form is equivalent to setting the <xref:System.Windows.Forms.Control.Visible%2A> property to `true`. After the <xref:System.Windows.Forms.Form.Show%2A> method is called, the <xref:System.Windows.Forms.Control.Visible%2A> property returns a value of `true` until the <xref:System.Windows.Forms.Control.Hide%2A> method is called.\"\n  syntax:\n    content: public void Show (System.Windows.Forms.IWin32Window owner);\n    parameters:\n    - id: owner\n      type: System.Windows.Forms.IWin32Window\n      description: Any object that implements <xref href=\"System.Windows.Forms.IWin32Window\"></xref> and represents the top-level window that will own this form.\n  overload: System.Windows.Forms.Form.Show*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"The form being shown is already visible.  \\n  \\n -or-  \\n  \\n The form specified in the <code>owner</code> parameter is the same as the form being shown.  \\n  \\n -or-  \\n  \\n The form being shown is disabled.  \\n  \\n -or-  \\n  \\n The form being shown is not a top-level window.  \\n  \\n -or-  \\n  \\n The form being shown as a dialog box is already a modal form.  \\n  \\n -or-  \\n  \\n The current process is not running in user interactive mode (for more information, see <xref href=\\\"System.Windows.Forms.SystemInformation.UserInteractive\\\"></xref>).\"\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Form.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Form.ShowDialog\n  commentId: M:System.Windows.Forms.Form.ShowDialog\n  id: ShowDialog\n  parent: System.Windows.Forms.Form\n  langs:\n  - csharp\n  name: ShowDialog()\n  nameWithType: Form.ShowDialog()\n  fullName: Form.ShowDialog()\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Shows the form as a modal dialog box.\n  remarks: \"You can use this method to display a modal dialog box in your application. When this method is called, the code following it is not executed until after the dialog box is closed. The dialog box can be assigned one of the values of the <xref:System.Windows.Forms.DialogResult> enumeration by assigning it to the <xref:System.Windows.Forms.Button.DialogResult%2A> property of a <xref:System.Windows.Forms.Button> on the form or by setting the <xref:System.Windows.Forms.Form.DialogResult%2A> property of the form in code. This value is then returned by this method. You can use this return value to determine how to process the actions that occurred in the dialog box. For example, if the dialog box was closed and returned the `DialogResult.Cancel` value through this method, you could prevent code following the call to <xref:System.Windows.Forms.Form.ShowDialog%2A> from executing.  \\n  \\n When a form is displayed as a modal dialog box, clicking the **Close** button (the button with an X at the upper-right corner of the form) causes the form to be hidden and the <xref:System.Windows.Forms.Form.DialogResult%2A> property to be set to `DialogResult.Cancel`. Unlike non-modal forms, the <xref:System.Windows.Forms.Form.Close%2A> method is not called by the .NET Framework when the user clicks the close form button of a dialog box or sets the value of the <xref:System.Windows.Forms.Form.DialogResult%2A> property. Instead the form is hidden and can be shown again without creating a new instance of the dialog box. Because a form displayed as a dialog box is hidden instead of closed, you must call the <xref:System.Windows.Forms.Control.Dispose%2A> method of the form when the form is no longer needed by your application.  \\n  \\n This version of the <xref:System.Windows.Forms.Form.ShowDialog%2A> method does not specify a form or control as its owner. When this version is called, the currently active window is made the owner of the dialog box. If you want to specify a specific owner, use the other version of this method.\"\n  example:\n  - \"The following code example displays a form as a modal dialog box and evaluates the return value of the dialog box before determining whether to read the value of a <xref:System.Windows.Forms.TextBox> control on the dialog box form. This example requires that a <xref:System.Windows.Forms.Form> named `testDialog` is created and that it contains a <xref:System.Windows.Forms.TextBox> control named `TextBox1`. Furthermore, the example requires that code in this example is contained and called from a different <xref:System.Windows.Forms.Form> in order to display `testDialog` as a modal dialog box. The example uses the version of <xref:System.Windows.Forms.Form.ShowDialog%2A> that specifies an owner for the dialog box.  \\n  \\n [!code-cpp[Classic Form.ShowDialog Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Form.ShowDialog Example/CPP/source.cpp#1)]\\n [!code-csharp[Classic Form.ShowDialog Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Form.ShowDialog Example/CS/source.cs#1)]\\n [!code-vb[Classic Form.ShowDialog Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Form.ShowDialog Example/VB/source.vb#1)]\"\n  syntax:\n    content: public System.Windows.Forms.DialogResult ShowDialog ();\n    parameters: []\n    return:\n      type: System.Windows.Forms.DialogResult\n      description: One of the <xref href=\"System.Windows.Forms.DialogResult\"></xref> values.\n  overload: System.Windows.Forms.Form.ShowDialog*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"The form being shown is already visible.  \\n  \\n -or-  \\n  \\n The form being shown is disabled.  \\n  \\n -or-  \\n  \\n The form being shown is not a top-level window.  \\n  \\n -or-  \\n  \\n The form being shown as a dialog box is already a modal form.  \\n  \\n -or-  \\n  \\n The current process is not running in user interactive mode (for more information, see <xref href=\\\"System.Windows.Forms.SystemInformation.UserInteractive\\\"></xref>).\"\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Form.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Form.ShowDialog(System.Windows.Forms.IWin32Window)\n  commentId: M:System.Windows.Forms.Form.ShowDialog(System.Windows.Forms.IWin32Window)\n  id: ShowDialog(System.Windows.Forms.IWin32Window)\n  parent: System.Windows.Forms.Form\n  langs:\n  - csharp\n  name: ShowDialog(IWin32Window)\n  nameWithType: Form.ShowDialog(IWin32Window)\n  fullName: Form.ShowDialog(IWin32Window)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Shows the form as a modal dialog box with the specified owner.\n  remarks: \"You can use this method to display a modal dialog box in your application. When this method is called, the code following it is not executed until after the dialog box is closed. The dialog box can be assigned one of the values of <xref:System.Windows.Forms.DialogResult> by assigning it to the <xref:System.Windows.Forms.Button.DialogResult%2A> property of a <xref:System.Windows.Forms.Button> on the form or by setting the <xref:System.Windows.Forms.Form.DialogResult%2A> property of the form in code. This value is then returned by this method. You can use this return value to determine how to process the actions that occurred in the dialog box. For example, if the dialog box was closed and returned the `DialogResult.Cancel` value through this method, you could prevent code following the call to <xref:System.Windows.Forms.Form.ShowDialog%2A> from executing.  \\n  \\n When a form is displayed as a modal dialog box, clicking the **Close** button (the button with an X at the upper-right corner of the form) causes the form to be hidden and the <xref:System.Windows.Forms.Form.DialogResult%2A> property to be set to `DialogResult.Cancel`. Unlike modeless forms, the <xref:System.Windows.Forms.Form.Close%2A> method is not called by the .NET Framework when the user clicks the close form button of a dialog box or sets the value of the <xref:System.Windows.Forms.Form.DialogResult%2A> property. Instead the form is hidden and can be shown again without creating a new instance of the dialog box. Because a form displayed as a dialog box is hidden instead of closed, you must call the <xref:System.Windows.Forms.Control.Dispose%2A> method of the form when the form is no longer needed by your application.  \\n  \\n This version of the <xref:System.Windows.Forms.Form.ShowDialog%2A> method allows you to specify a specific form that will own the dialog box that is shown.\"\n  example:\n  - \"The following code example displays a form as a modal dialog box and evaluates the return value of the dialog box before determining whether to read the value of a <xref:System.Windows.Forms.TextBox> control on the dialog box form. This example requires that a <xref:System.Windows.Forms.Form> named `Form2` is created and that it contains a <xref:System.Windows.Forms.TextBox> control named `TextBox1`. The example uses the version of <xref:System.Windows.Forms.Form.ShowDialog%2A> that specifies an owner for the dialog box.  \\n  \\n [!code-cpp[Classic Form.ShowDialog Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Form.ShowDialog Example/CPP/source.cpp#1)]\\n [!code-csharp[Classic Form.ShowDialog Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Form.ShowDialog Example/CS/source.cs#1)]\\n [!code-vb[Classic Form.ShowDialog Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Form.ShowDialog Example/VB/source.vb#1)]\"\n  syntax:\n    content: public System.Windows.Forms.DialogResult ShowDialog (System.Windows.Forms.IWin32Window owner);\n    parameters:\n    - id: owner\n      type: System.Windows.Forms.IWin32Window\n      description: Any object that implements <xref href=\"System.Windows.Forms.IWin32Window\"></xref> that represents the top-level window that will own the modal dialog box.\n    return:\n      type: System.Windows.Forms.DialogResult\n      description: One of the <xref href=\"System.Windows.Forms.DialogResult\"></xref> values.\n  overload: System.Windows.Forms.Form.ShowDialog*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The form specified in the <code>owner</code> parameter is the same as the form being shown.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"The form being shown is already visible.  \\n  \\n -or-  \\n  \\n The form being shown is disabled.  \\n  \\n -or-  \\n  \\n The form being shown is not a top-level window.  \\n  \\n -or-  \\n  \\n The form being shown as a dialog box is already a modal form.  \\n  \\n -or-  \\n  \\n The current process is not running in user interactive mode (for more information, see <xref href=\\\"System.Windows.Forms.SystemInformation.UserInteractive\\\"></xref>).\"\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Form.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Form.ShowIcon\n  commentId: P:System.Windows.Forms.Form.ShowIcon\n  id: ShowIcon\n  parent: System.Windows.Forms.Form\n  langs:\n  - csharp\n  name: ShowIcon\n  nameWithType: Form.ShowIcon\n  fullName: Form.ShowIcon\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets or sets a value indicating whether an icon is displayed in the caption bar of the form.\n  remarks: \"The <xref:System.Windows.Forms.Form.ShowIcon%2A> property contains a <xref:System.Boolean> value that indicates whether the form's <xref:System.Windows.Forms.Form.Icon%2A> is displayed in the caption bar of the form. If the <xref:System.Windows.Forms.Form.ControlBox%2A> property is `false`, both the icon and control box will be suppressed.  \\n  \\n If <xref:System.Windows.Forms.Form.ShowIcon%2A> is `false` when the primary form is shown, a generic icon will be displayed in the taskbar button for the application.  \\n  \\n This property has no effect if <xref:System.Windows.Forms.Form.FormBorderStyle%2A> is set to <xref:System.Windows.Forms.FormBorderStyle.FixedDialog>. In that case, the form does not display an icon.\"\n  syntax:\n    content: public bool ShowIcon { get; set; }\n    return:\n      type: System.Boolean\n      description: '`true` if the form displays an icon in the caption bar; otherwise, `false`. The default is `true`.'\n  overload: System.Windows.Forms.Form.ShowIcon*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Form.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Form.ShowInTaskbar\n  commentId: P:System.Windows.Forms.Form.ShowInTaskbar\n  id: ShowInTaskbar\n  parent: System.Windows.Forms.Form\n  langs:\n  - csharp\n  name: ShowInTaskbar\n  nameWithType: Form.ShowInTaskbar\n  fullName: Form.ShowInTaskbar\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets or sets a value indicating whether the form is displayed in the Windows taskbar.\n  remarks: \"If a form is parented within another form, the parented form is not displayed in the Windows taskbar.  \\n  \\n You can use this property to prevent users from selecting your form through the Windows taskbar. For example, if you display a Find and Replace tool window in your application, you might want to prevent that window from being selected through the Windows taskbar because you would need both the application's main window and the Find and Replace tool window displayed in order to process searches appropriately.  \\n  \\n You will often wish to use this property when creating a form with the <xref:System.Windows.Forms.FormBorderStyle.FixedToolWindow> style. Setting the <xref:System.Windows.Forms.FormBorderStyle.FixedToolWindow> style does not alone guarantee that a window will not appear in the taskbar.\"\n  example:\n  - \"The following code example demonstrates how to use the <xref:System.Windows.Forms.Form.ShowInTaskbar%2A> property to make a dialog box that is not displayed in the Windows taskbar.  \\n  \\n [!code-cpp[Form.ShowInTaskbar#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Form.ShowInTaskbar/CPP/form1.cpp#1)]\\n [!code-csharp[Form.ShowInTaskbar#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Form.ShowInTaskbar/CS/form1.cs#1)]\\n [!code-vb[Form.ShowInTaskbar#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Form.ShowInTaskbar/VB/form1.vb#1)]\"\n  syntax:\n    content: public bool ShowInTaskbar { get; set; }\n    return:\n      type: System.Boolean\n      description: '`true` to display the form in the Windows taskbar at run time; otherwise, `false`. The default is `true`.'\n  overload: System.Windows.Forms.Form.ShowInTaskbar*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Form.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Form.Shown\n  commentId: E:System.Windows.Forms.Form.Shown\n  id: Shown\n  parent: System.Windows.Forms.Form\n  langs:\n  - csharp\n  name: Shown\n  nameWithType: Form.Shown\n  fullName: Form.Shown\n  type: Event\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Occurs whenever the form is first displayed.\n  remarks: \"The <xref:System.Windows.Forms.Form.Shown> event is only raised the first time a form is displayed; subsequently minimizing, maximizing, restoring, hiding, showing, or invalidating and repainting will not raise this event. For more information about the order of events of a form, see [Order of Events in Windows Forms](~/docs/framework/winforms/order-of-events-in-windows-forms.md).  \\n  \\n For more information about handling events, see [Handling and Raising Events](http://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f).\"\n  example:\n  - \"The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.Form.Shown> event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \\n  \\n To run the example code, paste it into a project that contains an instance of type <xref:System.Windows.Forms.Form> named `Form1`. Then ensure that the event handler is associated with the <xref:System.Windows.Forms.Form.Shown> event.  \\n  \\n [!code-csharp[System.Windows.Forms.EventExamples#403](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#403)]\\n [!code-vb[System.Windows.Forms.EventExamples#403](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#403)]\"\n  syntax:\n    content: public event EventHandler Shown;\n    return:\n      type: System.EventHandler\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Form.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Form.ShowWithoutActivation\n  commentId: P:System.Windows.Forms.Form.ShowWithoutActivation\n  id: ShowWithoutActivation\n  parent: System.Windows.Forms.Form\n  langs:\n  - csharp\n  name: ShowWithoutActivation\n  nameWithType: Form.ShowWithoutActivation\n  fullName: Form.ShowWithoutActivation\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets a value indicating whether the window will be activated when it is shown.\n  remarks: \"Use this property if you want to show a top-level window, but don't want to interrupt a user's work by taking the input focus away from the current window. This can be an informational pop-up window or a floating window, such as a Tools palette in the Paint application.  \\n  \\n Because this property is read-only, you can only change its value by overriding <xref:System.Windows.Forms.Form.ShowWithoutActivation%2A> in your own form, and programming it to return `true`.  \\n  \\n If your non-activated window needs to use UI controls, you should consider using the <xref:System.Windows.Forms.ToolStrip> controls, such as <xref:System.Windows.Forms.ToolStripDropDown>. These controls are windowless, and will not cause a window to activate when they are selected.\"\n  syntax:\n    content: >-\n      [System.ComponentModel.Browsable(false)]\n\n      protected virtual bool ShowWithoutActivation { get; }\n    return:\n      type: System.Boolean\n      description: '`True` if the window will not be activated when it is shown; otherwise, `false`. The default is `false`.'\n  overload: System.Windows.Forms.Form.ShowWithoutActivation*\n  exceptions: []\n  attributes:\n  - type: System.ComponentModel.BrowsableAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Form.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Form.Size\n  commentId: P:System.Windows.Forms.Form.Size\n  id: Size\n  parent: System.Windows.Forms.Form\n  langs:\n  - csharp\n  name: Size\n  nameWithType: Form.Size\n  fullName: Form.Size\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets or sets the size of the form.\n  remarks: \"This property allows you to set both the height and width (in pixels) of the form at the same time instead of setting the <xref:System.Windows.Forms.Control.Height%2A> and <xref:System.Windows.Forms.Control.Width%2A> properties individually. If you want to set the size and location of a form, you can use the <xref:System.Windows.Forms.Form.DesktopBounds%2A> property to size and locate the form based on desktop coordinates or use the <xref:System.Windows.Forms.Control.Bounds%2A> property of the <xref:System.Windows.Forms.Control> class to set the size and location of the form based on screen coordinates.  \\n  \\n> [!NOTE]\\n>  The maximum value of this property is limited by the resolution of the screen on which the form runs. The value cannot be greater than 12 pixels over each screen dimension (horizontal + 12 and vertical + 12).  \\n  \\n> [!NOTE]\\n>  On Pocket PC devices, you can create a resizable window by setting <xref:System.Windows.Forms.Form.FormBorderStyle%2A> to `None` and removing any <xref:System.Windows.Forms.MainMenu> control. On SmartPhone devices, you can never resize a <xref:System.Windows.Forms.Form> - it will always fill the entire screen.\"\n  example:\n  - \"The following code example demonstrates how to create a form that is displayed with an opacity level of 75 percent. The example code creates a new form that is positioned in the center of the screen with an <xref:System.Windows.Forms.Form.Opacity%2A> property set to change the opacity level of the form. The example code also sets the <xref:System.Windows.Forms.Form.Size%2A> property to provide a larger sized form than the default size of the form. This example requires that the method defined in this example is called from another form in an event handler or other method.  \\n  \\n [!code-cpp[Form.Opacity#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Form.Opacity/CPP/form1.cpp#1)]\\n [!code-csharp[Form.Opacity#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Form.Opacity/CS/form1.cs#1)]\\n [!code-vb[Form.Opacity#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Form.Opacity/VB/form1.vb#1)]\"\n  syntax:\n    content: public System.Drawing.Size Size { get; set; }\n    return:\n      type: System.Drawing.Size\n      description: A <xref href=\"System.Drawing.Size\"></xref> that represents the size of the form.\n  overload: System.Windows.Forms.Form.Size*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Form.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Form.SizeGripStyle\n  commentId: P:System.Windows.Forms.Form.SizeGripStyle\n  id: SizeGripStyle\n  parent: System.Windows.Forms.Form\n  langs:\n  - csharp\n  name: SizeGripStyle\n  nameWithType: Form.SizeGripStyle\n  fullName: Form.SizeGripStyle\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets or sets the style of the size grip to display in the lower-right corner of the form.\n  remarks: This property enables you to determine when the sizing grip is displayed on the form. You can set this property to display the sizing grip or have it automatically displayed based on the setting of the <xref:System.Windows.Forms.Form.FormBorderStyle%2A> property.\n  example:\n  - \"The following code example demonstrates how to hide the size grip for a <xref:System.Windows.Forms.Form> when the <xref:System.Windows.Forms.Form> is not resizable.  \\n  \\n [!code-cpp[Form.SizeGripStyle#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Form.SizeGripStyle/CPP/form1.cpp#1)]\\n [!code-csharp[Form.SizeGripStyle#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Form.SizeGripStyle/CS/form1.cs#1)]\\n [!code-vb[Form.SizeGripStyle#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Form.SizeGripStyle/VB/form1.vb#1)]\"\n  syntax:\n    content: public System.Windows.Forms.SizeGripStyle SizeGripStyle { get; set; }\n    return:\n      type: System.Windows.Forms.SizeGripStyle\n      description: A <xref href=\"System.Windows.Forms.SizeGripStyle\"></xref> that represents the style of the size grip to display. The default is <xref href=\"System.Windows.Forms.SizeGripStyle.Auto\"></xref>\n  overload: System.Windows.Forms.Form.SizeGripStyle*\n  exceptions:\n  - type: System.ComponentModel.InvalidEnumArgumentException\n    commentId: T:System.ComponentModel.InvalidEnumArgumentException\n    description: The value specified is outside the range of valid values.\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Form.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Form.StartPosition\n  commentId: P:System.Windows.Forms.Form.StartPosition\n  id: StartPosition\n  parent: System.Windows.Forms.Form\n  langs:\n  - csharp\n  name: StartPosition\n  nameWithType: Form.StartPosition\n  fullName: Form.StartPosition\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets or sets the starting position of the form at run time.\n  remarks: \"This property enables you to set the starting position of the form when it is displayed at run time. The form’s position can be specified manually by setting the <xref:System.Windows.Forms.Form.Location%2A> property or use the default location specified by Windows. You can also position the form to display in the center of the screen or in the center of its parent form for forms such as multiple-document interface (MDI) child forms.  \\n  \\n This property should be set before the form is shown.  You can set this property before you call the <xref:System.Windows.Forms.Form.Show%2A> or <xref:System.Windows.Forms.Form.ShowDialog%2A> method or in your form's constructor.\"\n  example:\n  - \"The following code example creates a new instance of a <xref:System.Windows.Forms.Form> and calls the <xref:System.Windows.Forms.Form.ShowDialog%2A> method to display the form as a dialog box. The example sets the <xref:System.Windows.Forms.Form.FormBorderStyle%2A>, <xref:System.Windows.Forms.Form.AcceptButton%2A>, <xref:System.Windows.Forms.Form.CancelButton%2A>, and <xref:System.Windows.Forms.Form.StartPosition%2A> properties to change the appearance and functionality of the form to a dialog box. The example also uses the <xref:System.Windows.Forms.Form.ControlCollection.Add%2A> method of the form's <xref:System.Windows.Forms.Control.Controls%2A> collection to add two <xref:System.Windows.Forms.Button> controls. The example uses the <xref:System.Windows.Forms.Form.HelpButton%2A> property to display a help button in the caption bar of the dialog box.  \\n  \\n [!code-cpp[Classic Form.StartPosition Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Form.StartPosition Example/CPP/source.cpp#1)]\\n [!code-csharp[Classic Form.StartPosition Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Form.StartPosition Example/CS/source.cs#1)]\\n [!code-vb[Classic Form.StartPosition Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Form.StartPosition Example/VB/source.vb#1)]\"\n  syntax:\n    content: public System.Windows.Forms.FormStartPosition StartPosition { get; set; }\n    return:\n      type: System.Windows.Forms.FormStartPosition\n      description: A <xref href=\"System.Windows.Forms.FormStartPosition\"></xref> that represents the starting position of the form.\n  overload: System.Windows.Forms.Form.StartPosition*\n  exceptions:\n  - type: System.ComponentModel.InvalidEnumArgumentException\n    commentId: T:System.ComponentModel.InvalidEnumArgumentException\n    description: The value specified is outside the range of valid values.\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Form.xml\n  ms.technology:\n  - dotnet-winforms\n  ms.author: kempb\n  manager: ghogen\n- uid: System.Windows.Forms.Form.TabIndex\n  commentId: P:System.Windows.Forms.Form.TabIndex\n  id: TabIndex\n  parent: System.Windows.Forms.Form\n  langs:\n  - csharp\n  name: TabIndex\n  nameWithType: Form.TabIndex\n  fullName: Form.TabIndex\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets or sets the tab order of the control within its container.\n  remarks: Forms are not included in the tab order. Setting the <xref:System.Windows.Forms.Form.TabIndex%2A> property does nothing.\n  syntax:\n    content: >-\n      [System.ComponentModel.Browsable(false)]\n\n      public int TabIndex { get; set; }\n    return:\n      type: System.Int32\n      description: An <xref href=\"System.Int32\"></xref> containing the index of the control within the set of controls within its container that is included in the tab order.\n  overload: System.Windows.Forms.Form.TabIndex*\n  exceptions: []\n  attributes:\n  - type: System.ComponentModel.BrowsableAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Form.xml\n  ms.technology:\n  - dotnet-winforms\n  ms.author: kempb\n  manager: ghogen\n- uid: System.Windows.Forms.Form.TabIndexChanged\n  commentId: E:System.Windows.Forms.Form.TabIndexChanged\n  id: TabIndexChanged\n  parent: System.Windows.Forms.Form\n  langs:\n  - csharp\n  name: TabIndexChanged\n  nameWithType: Form.TabIndexChanged\n  fullName: Form.TabIndexChanged\n  type: Event\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Occurs when the value of the <xref href=\"System.Windows.Forms.Form.TabIndex\"></xref> property changes.\n  syntax:\n    content: >-\n      [System.ComponentModel.Browsable(false)]\n\n      public event EventHandler TabIndexChanged;\n    return:\n      type: System.EventHandler\n      description: ''\n  exceptions: []\n  attributes:\n  - type: System.ComponentModel.BrowsableAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Form.xml\n  ms.technology:\n  - dotnet-winforms\n  ms.author: kempb\n  manager: ghogen\n- uid: System.Windows.Forms.Form.TabStop\n  commentId: P:System.Windows.Forms.Form.TabStop\n  id: TabStop\n  parent: System.Windows.Forms.Form\n  langs:\n  - csharp\n  name: TabStop\n  nameWithType: Form.TabStop\n  fullName: Form.TabStop\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets or sets a value indicating whether the user can give the focus to this control using the TAB key.\n  syntax:\n    content: >-\n      [System.ComponentModel.Browsable(false)]\n\n      public bool TabStop { get; set; }\n    return:\n      type: System.Boolean\n      description: '`true` if the user can give the focus to the control using the TAB key; otherwise, `false`. The default is `true`.'\n  overload: System.Windows.Forms.Form.TabStop*\n  exceptions: []\n  attributes:\n  - type: System.ComponentModel.BrowsableAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Form.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Form.TabStopChanged\n  commentId: E:System.Windows.Forms.Form.TabStopChanged\n  id: TabStopChanged\n  parent: System.Windows.Forms.Form\n  langs:\n  - csharp\n  name: TabStopChanged\n  nameWithType: Form.TabStopChanged\n  fullName: Form.TabStopChanged\n  type: Event\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Occurs when the <xref href=\"System.Windows.Forms.Form.TabStop\"></xref> property changes.\n  syntax:\n    content: >-\n      [System.ComponentModel.Browsable(false)]\n\n      public event EventHandler TabStopChanged;\n    return:\n      type: System.EventHandler\n      description: ''\n  exceptions: []\n  attributes:\n  - type: System.ComponentModel.BrowsableAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Form.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Form.Text\n  commentId: P:System.Windows.Forms.Form.Text\n  id: Text\n  parent: System.Windows.Forms.Form\n  langs:\n  - csharp\n  name: Text\n  nameWithType: Form.Text\n  fullName: Form.Text\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets or sets the text associated with this control.\n  syntax:\n    content: >-\n      [System.ComponentModel.SettingsBindable(true)]\n\n      public override string Text { get; set; }\n    return:\n      type: System.String\n      description: The text associated with this control.\n  overload: System.Windows.Forms.Form.Text*\n  exceptions: []\n  attributes:\n  - type: System.ComponentModel.SettingsBindableAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Form.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Form.TopLevel\n  commentId: P:System.Windows.Forms.Form.TopLevel\n  id: TopLevel\n  parent: System.Windows.Forms.Form\n  langs:\n  - csharp\n  name: TopLevel\n  nameWithType: Form.TopLevel\n  fullName: Form.TopLevel\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets or sets a value indicating whether to display the form as a top-level window.\n  remarks: A top-level form is a window that has no parent form, or whose parent form is the desktop window. Top-level windows are typically used as the main form in an application.\n  example:\n  - \"The following code example use the <xref:System.Windows.Forms.Form.Modal%2A> property to determine if a form is displayed as a modal form. If it is not the <xref:System.Windows.Forms.Form.FormBorderStyle%2A> and <xref:System.Windows.Forms.Form.TopLevel%2A> properties are changed to make the form non-top-level form with a tool window border.  \\n  \\n [!code-cpp[Form.Modal#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Form.Modal/CPP/form1.cpp#1)]\\n [!code-csharp[Form.Modal#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Form.Modal/CS/form1.cs#1)]\\n [!code-vb[Form.Modal#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Form.Modal/VB/form1.vb#1)]\"\n  syntax:\n    content: >-\n      [System.ComponentModel.Browsable(false)]\n\n      public bool TopLevel { get; set; }\n    return:\n      type: System.Boolean\n      description: '`true` to display the form as a top-level window; otherwise, `false`. The default is `true`.'\n  overload: System.Windows.Forms.Form.TopLevel*\n  exceptions:\n  - type: System.Exception\n    commentId: T:System.Exception\n    description: A Multiple-document interface (MDI) parent form must be a top-level window.\n  attributes:\n  - type: System.ComponentModel.BrowsableAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Form.xml\n  ms.technology:\n  - dotnet-winforms\n  ms.author: kempb\n  manager: ghogen\n- uid: System.Windows.Forms.Form.TopMost\n  commentId: P:System.Windows.Forms.Form.TopMost\n  id: TopMost\n  parent: System.Windows.Forms.Form\n  langs:\n  - csharp\n  name: TopMost\n  nameWithType: Form.TopMost\n  fullName: Form.TopMost\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets or sets a value indicating whether the form should be displayed as a topmost form.\n  remarks: A topmost form is a form that overlaps all the other (non-topmost) forms even if it is not the active or foreground form. Topmost forms are always displayed at the highest point in the z-order of the windows on the desktop. You can use this property to create a form that is always displayed in your application, such as a Find and Replace tool window.\n  example:\n  - \"The following code example demonstrates how to create a topmost form. The example creates two forms, one that is maximized and one that will be displayed as a topmost form. The first form, named `bottomForm`, is displayed maximized, using the <xref:System.Windows.Forms.Form.WindowState%2A> property, to better demonstrate the abilities of the topmost form. The second form, named `topMostForm`, sets the <xref:System.Windows.Forms.Form.TopMost%2A> property to `true` to display the form as a topmost form. When this code is run, clicking on the maximized form will not cause the topmost form to be displayed below the maximized form. The example requires that the method defined in the example is called from another form.  \\n  \\n [!code-cpp[Form.TopMost#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Form.TopMost/CPP/form1.cpp#1)]\\n [!code-csharp[Form.TopMost#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Form.TopMost/CS/form1.cs#1)]\\n [!code-vb[Form.TopMost#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Form.TopMost/VB/form1.vb#1)]\"\n  syntax:\n    content: public bool TopMost { get; set; }\n    return:\n      type: System.Boolean\n      description: '`true` to display the form as a topmost form; otherwise, `false`. The default is `false`.'\n  overload: System.Windows.Forms.Form.TopMost*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Form.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Form.ToString\n  commentId: M:System.Windows.Forms.Form.ToString\n  id: ToString\n  parent: System.Windows.Forms.Form\n  langs:\n  - csharp\n  name: ToString()\n  nameWithType: Form.ToString()\n  fullName: Form.ToString()\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets a string representing the current instance of the form.\n  syntax:\n    content: public override string ToString ();\n    parameters: []\n    return:\n      type: System.String\n      description: \"A string consisting of the fully qualified name of the form object's class, with the <xref href=\\\"System.Windows.Forms.Form.Text\\\"></xref> property of the form appended to the end. For example, if the form is derived from the class <code>MyForm</code> in the <code>MyNamespace</code> namespace, and the <xref href=\\\"System.Windows.Forms.Form.Text\\\"></xref> property is set to <code>Hello, World</code>, this method will return <code>MyNamespace.MyForm, Text: Hello, World</code>.\"\n  overload: System.Windows.Forms.Form.ToString*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Form.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Form.TransparencyKey\n  commentId: P:System.Windows.Forms.Form.TransparencyKey\n  id: TransparencyKey\n  parent: System.Windows.Forms.Form\n  langs:\n  - csharp\n  name: TransparencyKey\n  nameWithType: Form.TransparencyKey\n  fullName: Form.TransparencyKey\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets or sets the color that will represent transparent areas of the form.\n  remarks: \"When the <xref:System.Windows.Forms.Form.TransparencyKey%2A> property is assigned a <xref:System.Drawing.Color>, the areas of the form that have the same <xref:System.Windows.Forms.Control.BackColor%2A> will be displayed transparently. Any mouse actions, such as the click of the mouse, that are performed on the transparent areas of the form will be transferred to the windows below the transparent area. For example, if the client region of a form is made transparent, clicking the mouse on that area would send the event notification of the click to any window that is below it. If the color assigned to the <xref:System.Windows.Forms.Form.TransparencyKey%2A> property is the same as any controls on the form, they also will be displayed transparently. For example, if you have a <xref:System.Windows.Forms.Button> control on a form that has its <xref:System.Windows.Forms.Form.TransparencyKey%2A> property set to `SystemColors.Control`, the control will be displayed transparently unless the <xref:System.Windows.Forms.Control.BackColor%2A> property of the <xref:System.Windows.Forms.Button> control is changed to a different color.  \\n  \\n This property is not supported when <xref:System.Windows.Forms.Form.RightToLeftLayout%2A> is `true`.\"\n  example:\n  - \"The following code example creates a window that has a transparent client region regardless of background color of the form. This example requires that the example method is defined within a form class.  \\n  \\n [!code-cpp[Classic Form.TransparencyKey Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Form.TransparencyKey Example/CPP/source.cpp#1)]\\n [!code-csharp[Classic Form.TransparencyKey Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Form.TransparencyKey Example/CS/source.cs#1)]\\n [!code-vb[Classic Form.TransparencyKey Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Form.TransparencyKey Example/VB/source.vb#1)]\"\n  syntax:\n    content: public System.Drawing.Color TransparencyKey { get; set; }\n    return:\n      type: System.Drawing.Color\n      description: A <xref href=\"System.Drawing.Color\"></xref> that represents the color to display transparently on the form.\n  overload: System.Windows.Forms.Form.TransparencyKey*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Form.xml\n  ms.technology:\n  - dotnet-winforms\n  ms.author: kempb\n  manager: ghogen\n- uid: System.Windows.Forms.Form.UpdateDefaultButton\n  commentId: M:System.Windows.Forms.Form.UpdateDefaultButton\n  id: UpdateDefaultButton\n  parent: System.Windows.Forms.Form\n  langs:\n  - csharp\n  name: UpdateDefaultButton()\n  nameWithType: Form.UpdateDefaultButton()\n  fullName: Form.UpdateDefaultButton()\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Updates which button is the default button.\n  remarks: \"The <xref:System.Windows.Forms.Form.UpdateDefaultButton%2A> method determines which button on the form raises its Click event when the user presses ENTER, according to the following priority:  \\n  \\n1.  If the <xref:System.Windows.Forms.ContainerControl.ActiveControl%2A> property implements the <xref:System.Windows.Forms.IButtonControl> interface, that control is the default button.  \\n  \\n2.  The <xref:System.Windows.Forms.Form.AcceptButton%2A> property is the default button.\"\n  syntax:\n    content: protected override void UpdateDefaultButton ();\n    parameters: []\n  overload: System.Windows.Forms.Form.UpdateDefaultButton*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Form.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Form.ValidateChildren\n  commentId: M:System.Windows.Forms.Form.ValidateChildren\n  id: ValidateChildren\n  parent: System.Windows.Forms.Form\n  langs:\n  - csharp\n  name: ValidateChildren()\n  nameWithType: Form.ValidateChildren()\n  fullName: Form.ValidateChildren()\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Causes all of the child controls within a control that support validation to validate their data.\n  syntax:\n    content: >-\n      [System.ComponentModel.Browsable(true)]\n\n      public override bool ValidateChildren ();\n    parameters: []\n    return:\n      type: System.Boolean\n      description: '`true` if all of the children validated successfully; otherwise, `false`. If called from the <xref href=\"System.Windows.Forms.Control.Validating\"></xref> or <xref href=\"System.Windows.Forms.Control.Validated\"></xref> event handlers, this method will always return `false`.'\n  overload: System.Windows.Forms.Form.ValidateChildren*\n  exceptions: []\n  attributes:\n  - type: System.ComponentModel.BrowsableAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Form.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Form.ValidateChildren(System.Windows.Forms.ValidationConstraints)\n  commentId: M:System.Windows.Forms.Form.ValidateChildren(System.Windows.Forms.ValidationConstraints)\n  id: ValidateChildren(System.Windows.Forms.ValidationConstraints)\n  parent: System.Windows.Forms.Form\n  langs:\n  - csharp\n  name: ValidateChildren(ValidationConstraints)\n  nameWithType: Form.ValidateChildren(ValidationConstraints)\n  fullName: Form.ValidateChildren(ValidationConstraints)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Causes all of the child controls within a control that support validation to validate their data.\n  syntax:\n    content: >-\n      [System.ComponentModel.Browsable(true)]\n\n      public override bool ValidateChildren (System.Windows.Forms.ValidationConstraints validationConstraints);\n    parameters:\n    - id: validationConstraints\n      type: System.Windows.Forms.ValidationConstraints\n      description: Places restrictions on which controls have their <xref href=\"System.Windows.Forms.Control.Validating\"></xref> event raised.\n    return:\n      type: System.Boolean\n      description: '`true` if all of the children validated successfully; otherwise, `false`. If called from the <xref href=\"System.Windows.Forms.Control.Validating\"></xref> or <xref href=\"System.Windows.Forms.Control.Validated\"></xref> event handlers, this method will always return `false`.'\n  overload: System.Windows.Forms.Form.ValidateChildren*\n  exceptions: []\n  attributes:\n  - type: System.ComponentModel.BrowsableAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Form.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Form.WindowState\n  commentId: P:System.Windows.Forms.Form.WindowState\n  id: WindowState\n  parent: System.Windows.Forms.Form\n  langs:\n  - csharp\n  name: WindowState\n  nameWithType: Form.WindowState\n  fullName: Form.WindowState\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets or sets a value that indicates whether form is minimized, maximized, or normal.\n  remarks: Before a form is displayed, the <xref:System.Windows.Forms.Form.WindowState%2A> property is always set to `FormWindowState.Normal`, regardless of its initial setting. This is reflected in the <xref:System.Windows.Forms.Control.Height%2A>, <xref:System.Windows.Forms.Control.Left%2A>, <xref:System.Windows.Forms.Control.Top%2A>, and <xref:System.Windows.Forms.Control.Width%2A> property settings. If a form is hidden after it has been shown, these properties reflect the previous state until the form is shown again, regardless of any changes made to the <xref:System.Windows.Forms.Form.WindowState%2A> property.\n  example:\n  - \"The following code example demonstrates how to set the <xref:System.Windows.Forms.Form.WindowState%2A>to maximized. The code is called from the <xref:System.Windows.Forms.Form.Shown> event handler after the form has been created.  \\n  \\n```csharp  \\nprivate void Form1_Shown(object sender, EventArgs e)  \\n        {  \\n            this.WindowState = System.Windows.Forms.FormWindowState.Maximized;  \\n        }  \\n```  \\n  \\n```vb  \\nPrivate  Sub Form1_Shown(ByVal sender As Object, ByVal e As EventArgs)  \\n            Me.WindowState = System.Windows.Forms.FormWindowState.Maximized  \\nEnd Sub  \\n```\"\n  syntax:\n    content: public System.Windows.Forms.FormWindowState WindowState { get; set; }\n    return:\n      type: System.Windows.Forms.FormWindowState\n      description: A <xref href=\"System.Windows.Forms.FormWindowState\"></xref> that represents whether form is minimized, maximized, or normal. The default is `FormWindowState.Normal`.\n  overload: System.Windows.Forms.Form.WindowState*\n  exceptions:\n  - type: System.ComponentModel.InvalidEnumArgumentException\n    commentId: T:System.ComponentModel.InvalidEnumArgumentException\n    description: The value specified is outside the range of valid values.\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Form.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.Form.WndProc(System.Windows.Forms.Message@)\n  commentId: M:System.Windows.Forms.Form.WndProc(System.Windows.Forms.Message@)\n  id: WndProc(System.Windows.Forms.Message@)\n  parent: System.Windows.Forms.Form\n  langs:\n  - csharp\n  name: WndProc(Message)\n  nameWithType: Form.WndProc(Message)\n  fullName: Form.WndProc(Message)\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Processes Windows messages.\n  syntax:\n    content: protected override void WndProc (ref System.Windows.Forms.Message m);\n    parameters:\n    - id: m\n      type: System.Windows.Forms.Message\n      description: The Windows <xref href=\"System.Windows.Forms.Message\"></xref> to process.\n  overload: System.Windows.Forms.Form.WndProc*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Form.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\nreferences:\n- uid: System.Windows.Forms.ContainerControl\n  parent: System.Windows.Forms\n  isExternal: false\n  name: ContainerControl\n  nameWithType: ContainerControl\n  fullName: System.Windows.Forms.ContainerControl\n- uid: System.ComponentModel.InvalidEnumArgumentException\n  parent: System.ComponentModel\n  isExternal: false\n  name: InvalidEnumArgumentException\n  nameWithType: InvalidEnumArgumentException\n  fullName: System.ComponentModel.InvalidEnumArgumentException\n- uid: System.InvalidOperationException\n  parent: System\n  isExternal: false\n  name: InvalidOperationException\n  nameWithType: InvalidOperationException\n  fullName: System.InvalidOperationException\n- uid: System.ObjectDisposedException\n  parent: System\n  isExternal: false\n  name: ObjectDisposedException\n  nameWithType: ObjectDisposedException\n  fullName: System.ObjectDisposedException\n- uid: System.ArgumentOutOfRangeException\n  parent: System\n  isExternal: false\n  name: ArgumentOutOfRangeException\n  nameWithType: ArgumentOutOfRangeException\n  fullName: System.ArgumentOutOfRangeException\n- uid: System.Exception\n  parent: System\n  isExternal: false\n  name: Exception\n  nameWithType: Exception\n  fullName: System.Exception\n- uid: System.ArgumentException\n  parent: System\n  isExternal: false\n  name: ArgumentException\n  nameWithType: ArgumentException\n  fullName: System.ArgumentException\n- uid: System.Windows.Forms.Form.#ctor\n  parent: System.Windows.Forms.Form\n  isExternal: false\n  name: Form()\n  nameWithType: Form.Form()\n  fullName: Form.Form()\n- uid: System.Windows.Forms.Form.AcceptButton\n  parent: System.Windows.Forms.Form\n  isExternal: false\n  name: AcceptButton\n  nameWithType: Form.AcceptButton\n  fullName: Form.AcceptButton\n- uid: System.Windows.Forms.IButtonControl\n  parent: System.Windows.Forms\n  isExternal: false\n  name: IButtonControl\n  nameWithType: IButtonControl\n  fullName: System.Windows.Forms.IButtonControl\n- uid: System.Windows.Forms.Form.Activate\n  parent: System.Windows.Forms.Form\n  isExternal: false\n  name: Activate()\n  nameWithType: Form.Activate()\n  fullName: Form.Activate()\n- uid: System.Windows.Forms.Form.Activated\n  parent: System.Windows.Forms.Form\n  isExternal: false\n  name: Activated\n  nameWithType: Form.Activated\n  fullName: Form.Activated\n- uid: System.EventHandler\n  parent: System\n  isExternal: false\n  name: EventHandler\n  nameWithType: EventHandler\n  fullName: System.EventHandler\n- uid: System.Windows.Forms.Form.ActivateMdiChild(System.Windows.Forms.Form)\n  parent: System.Windows.Forms.Form\n  isExternal: false\n  name: ActivateMdiChild(Form)\n  nameWithType: Form.ActivateMdiChild(Form)\n  fullName: Form.ActivateMdiChild(Form)\n- uid: System.Windows.Forms.Form\n  parent: System.Windows.Forms\n  isExternal: false\n  name: Form\n  nameWithType: Form\n  fullName: System.Windows.Forms.Form\n- uid: System.Windows.Forms.Form.ActiveForm\n  parent: System.Windows.Forms.Form\n  isExternal: false\n  name: ActiveForm\n  nameWithType: Form.ActiveForm\n  fullName: Form.ActiveForm\n- uid: System.Windows.Forms.Form.ActiveMdiChild\n  parent: System.Windows.Forms.Form\n  isExternal: false\n  name: ActiveMdiChild\n  nameWithType: Form.ActiveMdiChild\n  fullName: Form.ActiveMdiChild\n- uid: System.Windows.Forms.Form.AddOwnedForm(System.Windows.Forms.Form)\n  parent: System.Windows.Forms.Form\n  isExternal: false\n  name: AddOwnedForm(Form)\n  nameWithType: Form.AddOwnedForm(Form)\n  fullName: Form.AddOwnedForm(Form)\n- uid: System.Windows.Forms.Form.AdjustFormScrollbars(System.Boolean)\n  parent: System.Windows.Forms.Form\n  isExternal: false\n  name: AdjustFormScrollbars(Boolean)\n  nameWithType: Form.AdjustFormScrollbars(Boolean)\n  fullName: Form.AdjustFormScrollbars(Boolean)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Windows.Forms.Form.AllowTransparency\n  parent: System.Windows.Forms.Form\n  isExternal: false\n  name: AllowTransparency\n  nameWithType: Form.AllowTransparency\n  fullName: Form.AllowTransparency\n- uid: System.Windows.Forms.Form.ApplyAutoScaling\n  parent: System.Windows.Forms.Form\n  isExternal: false\n  name: ApplyAutoScaling()\n  nameWithType: Form.ApplyAutoScaling()\n  fullName: Form.ApplyAutoScaling()\n- uid: System.Windows.Forms.Form.AutoScale\n  parent: System.Windows.Forms.Form\n  isExternal: false\n  name: AutoScale\n  nameWithType: Form.AutoScale\n  fullName: Form.AutoScale\n- uid: System.Windows.Forms.Form.AutoScaleBaseSize\n  parent: System.Windows.Forms.Form\n  isExternal: false\n  name: AutoScaleBaseSize\n  nameWithType: Form.AutoScaleBaseSize\n  fullName: Form.AutoScaleBaseSize\n- uid: System.Drawing.Size\n  parent: System.Drawing\n  isExternal: false\n  name: Size\n  nameWithType: Size\n  fullName: System.Drawing.Size\n- uid: System.Windows.Forms.Form.AutoScroll\n  parent: System.Windows.Forms.Form\n  isExternal: false\n  name: AutoScroll\n  nameWithType: Form.AutoScroll\n  fullName: Form.AutoScroll\n- uid: System.Windows.Forms.Form.AutoSize\n  parent: System.Windows.Forms.Form\n  isExternal: false\n  name: AutoSize\n  nameWithType: Form.AutoSize\n  fullName: Form.AutoSize\n- uid: System.Windows.Forms.Form.AutoSizeChanged\n  parent: System.Windows.Forms.Form\n  isExternal: false\n  name: AutoSizeChanged\n  nameWithType: Form.AutoSizeChanged\n  fullName: Form.AutoSizeChanged\n- uid: System.Windows.Forms.Form.AutoSizeMode\n  parent: System.Windows.Forms.Form\n  isExternal: false\n  name: AutoSizeMode\n  nameWithType: Form.AutoSizeMode\n  fullName: Form.AutoSizeMode\n- uid: System.Windows.Forms.AutoSizeMode\n  parent: System.Windows.Forms\n  isExternal: false\n  name: AutoSizeMode\n  nameWithType: AutoSizeMode\n  fullName: System.Windows.Forms.AutoSizeMode\n- uid: System.Windows.Forms.Form.AutoValidate\n  parent: System.Windows.Forms.Form\n  isExternal: false\n  name: AutoValidate\n  nameWithType: Form.AutoValidate\n  fullName: Form.AutoValidate\n- uid: System.Windows.Forms.AutoValidate\n  parent: System.Windows.Forms\n  isExternal: false\n  name: AutoValidate\n  nameWithType: AutoValidate\n  fullName: System.Windows.Forms.AutoValidate\n- uid: System.Windows.Forms.Form.AutoValidateChanged\n  parent: System.Windows.Forms.Form\n  isExternal: false\n  name: AutoValidateChanged\n  nameWithType: Form.AutoValidateChanged\n  fullName: Form.AutoValidateChanged\n- uid: System.Windows.Forms.Form.BackColor\n  parent: System.Windows.Forms.Form\n  isExternal: false\n  name: BackColor\n  nameWithType: Form.BackColor\n  fullName: Form.BackColor\n- uid: System.Drawing.Color\n  parent: System.Drawing\n  isExternal: false\n  name: Color\n  nameWithType: Color\n  fullName: System.Drawing.Color\n- uid: System.Windows.Forms.Form.CancelButton\n  parent: System.Windows.Forms.Form\n  isExternal: false\n  name: CancelButton\n  nameWithType: Form.CancelButton\n  fullName: Form.CancelButton\n- uid: System.Windows.Forms.Form.CenterToParent\n  parent: System.Windows.Forms.Form\n  isExternal: false\n  name: CenterToParent()\n  nameWithType: Form.CenterToParent()\n  fullName: Form.CenterToParent()\n- uid: System.Windows.Forms.Form.CenterToScreen\n  parent: System.Windows.Forms.Form\n  isExternal: false\n  name: CenterToScreen()\n  nameWithType: Form.CenterToScreen()\n  fullName: Form.CenterToScreen()\n- uid: System.Windows.Forms.Form.ClientSize\n  parent: System.Windows.Forms.Form\n  isExternal: false\n  name: ClientSize\n  nameWithType: Form.ClientSize\n  fullName: Form.ClientSize\n- uid: System.Windows.Forms.Form.Close\n  parent: System.Windows.Forms.Form\n  isExternal: false\n  name: Close()\n  nameWithType: Form.Close()\n  fullName: Form.Close()\n- uid: System.Windows.Forms.Form.Closed\n  parent: System.Windows.Forms.Form\n  isExternal: false\n  name: Closed\n  nameWithType: Form.Closed\n  fullName: Form.Closed\n- uid: System.Windows.Forms.Form.Closing\n  parent: System.Windows.Forms.Form\n  isExternal: false\n  name: Closing\n  nameWithType: Form.Closing\n  fullName: Form.Closing\n- uid: System.ComponentModel.CancelEventHandler\n  parent: System.ComponentModel\n  isExternal: false\n  name: CancelEventHandler\n  nameWithType: CancelEventHandler\n  fullName: System.ComponentModel.CancelEventHandler\n- uid: System.Windows.Forms.Form.ControlBox\n  parent: System.Windows.Forms.Form\n  isExternal: false\n  name: ControlBox\n  nameWithType: Form.ControlBox\n  fullName: Form.ControlBox\n- uid: System.Windows.Forms.Form.CreateControlsInstance\n  parent: System.Windows.Forms.Form\n  isExternal: false\n  name: CreateControlsInstance()\n  nameWithType: Form.CreateControlsInstance()\n  fullName: Form.CreateControlsInstance()\n- uid: System.Windows.Forms.Control\n  parent: System.Windows.Forms\n  isExternal: false\n  name: Control\n  nameWithType: Control\n  fullName: System.Windows.Forms.Control+ControlCollection\n- uid: System.Windows.Forms.Form.CreateHandle\n  parent: System.Windows.Forms.Form\n  isExternal: false\n  name: CreateHandle()\n  nameWithType: Form.CreateHandle()\n  fullName: Form.CreateHandle()\n- uid: System.Windows.Forms.Form.CreateParams\n  parent: System.Windows.Forms.Form\n  isExternal: false\n  name: CreateParams\n  nameWithType: Form.CreateParams\n  fullName: Form.CreateParams\n- uid: System.Windows.Forms.CreateParams\n  parent: System.Windows.Forms\n  isExternal: false\n  name: CreateParams\n  nameWithType: CreateParams\n  fullName: System.Windows.Forms.CreateParams\n- uid: System.Windows.Forms.Form.Deactivate\n  parent: System.Windows.Forms.Form\n  isExternal: false\n  name: Deactivate\n  nameWithType: Form.Deactivate\n  fullName: Form.Deactivate\n- uid: System.Windows.Forms.Form.DefaultImeMode\n  parent: System.Windows.Forms.Form\n  isExternal: false\n  name: DefaultImeMode\n  nameWithType: Form.DefaultImeMode\n  fullName: Form.DefaultImeMode\n- uid: System.Windows.Forms.ImeMode\n  parent: System.Windows.Forms\n  isExternal: false\n  name: ImeMode\n  nameWithType: ImeMode\n  fullName: System.Windows.Forms.ImeMode\n- uid: System.Windows.Forms.Form.DefaultSize\n  parent: System.Windows.Forms.Form\n  isExternal: false\n  name: DefaultSize\n  nameWithType: Form.DefaultSize\n  fullName: Form.DefaultSize\n- uid: System.Windows.Forms.Form.DefWndProc(System.Windows.Forms.Message@)\n  parent: System.Windows.Forms.Form\n  isExternal: false\n  name: DefWndProc(Message)\n  nameWithType: Form.DefWndProc(Message)\n  fullName: Form.DefWndProc(Message)\n- uid: System.Windows.Forms.Message\n  parent: System.Windows.Forms\n  isExternal: false\n  name: Message\n  nameWithType: Message\n  fullName: System.Windows.Forms.Message\n- uid: System.Windows.Forms.Form.DesktopBounds\n  parent: System.Windows.Forms.Form\n  isExternal: false\n  name: DesktopBounds\n  nameWithType: Form.DesktopBounds\n  fullName: Form.DesktopBounds\n- uid: System.Drawing.Rectangle\n  parent: System.Drawing\n  isExternal: false\n  name: Rectangle\n  nameWithType: Rectangle\n  fullName: System.Drawing.Rectangle\n- uid: System.Windows.Forms.Form.DesktopLocation\n  parent: System.Windows.Forms.Form\n  isExternal: false\n  name: DesktopLocation\n  nameWithType: Form.DesktopLocation\n  fullName: Form.DesktopLocation\n- uid: System.Drawing.Point\n  parent: System.Drawing\n  isExternal: false\n  name: Point\n  nameWithType: Point\n  fullName: System.Drawing.Point\n- uid: System.Windows.Forms.Form.DialogResult\n  parent: System.Windows.Forms.Form\n  isExternal: false\n  name: DialogResult\n  nameWithType: Form.DialogResult\n  fullName: Form.DialogResult\n- uid: System.Windows.Forms.DialogResult\n  parent: System.Windows.Forms\n  isExternal: false\n  name: DialogResult\n  nameWithType: DialogResult\n  fullName: System.Windows.Forms.DialogResult\n- uid: System.Windows.Forms.Form.Dispose(System.Boolean)\n  parent: System.Windows.Forms.Form\n  isExternal: false\n  name: Dispose(Boolean)\n  nameWithType: Form.Dispose(Boolean)\n  fullName: Form.Dispose(Boolean)\n- uid: System.Windows.Forms.Form.DpiChanged\n  parent: System.Windows.Forms.Form\n  isExternal: false\n  name: DpiChanged\n  nameWithType: Form.DpiChanged\n  fullName: Form.DpiChanged\n- uid: System.Windows.Forms.DpiChangedEventHandler\n  parent: System.Windows.Forms\n  isExternal: false\n  name: DpiChangedEventHandler\n  nameWithType: DpiChangedEventHandler\n  fullName: System.Windows.Forms.DpiChangedEventHandler\n- uid: System.Windows.Forms.Form.FormBorderStyle\n  parent: System.Windows.Forms.Form\n  isExternal: false\n  name: FormBorderStyle\n  nameWithType: Form.FormBorderStyle\n  fullName: Form.FormBorderStyle\n- uid: System.Windows.Forms.FormBorderStyle\n  parent: System.Windows.Forms\n  isExternal: false\n  name: FormBorderStyle\n  nameWithType: FormBorderStyle\n  fullName: System.Windows.Forms.FormBorderStyle\n- uid: System.Windows.Forms.Form.FormClosed\n  parent: System.Windows.Forms.Form\n  isExternal: false\n  name: FormClosed\n  nameWithType: Form.FormClosed\n  fullName: Form.FormClosed\n- uid: System.Windows.Forms.FormClosedEventHandler\n  parent: System.Windows.Forms\n  isExternal: false\n  name: FormClosedEventHandler\n  nameWithType: FormClosedEventHandler\n  fullName: System.Windows.Forms.FormClosedEventHandler\n- uid: System.Windows.Forms.Form.FormClosing\n  parent: System.Windows.Forms.Form\n  isExternal: false\n  name: FormClosing\n  nameWithType: Form.FormClosing\n  fullName: Form.FormClosing\n- uid: System.Windows.Forms.FormClosingEventHandler\n  parent: System.Windows.Forms\n  isExternal: false\n  name: FormClosingEventHandler\n  nameWithType: FormClosingEventHandler\n  fullName: System.Windows.Forms.FormClosingEventHandler\n- uid: System.Windows.Forms.Form.GetAutoScaleSize(System.Drawing.Font)\n  parent: System.Windows.Forms.Form\n  isExternal: false\n  name: GetAutoScaleSize(Font)\n  nameWithType: Form.GetAutoScaleSize(Font)\n  fullName: Form.GetAutoScaleSize(Font)\n- uid: System.Drawing.SizeF\n  parent: System.Drawing\n  isExternal: false\n  name: SizeF\n  nameWithType: SizeF\n  fullName: System.Drawing.SizeF\n- uid: System.Drawing.Font\n  parent: System.Drawing\n  isExternal: false\n  name: Font\n  nameWithType: Font\n  fullName: System.Drawing.Font\n- uid: System.Windows.Forms.Form.GetScaledBounds(System.Drawing.Rectangle,System.Drawing.SizeF,System.Windows.Forms.BoundsSpecified)\n  parent: System.Windows.Forms.Form\n  isExternal: false\n  name: GetScaledBounds(Rectangle, SizeF, BoundsSpecified)\n  nameWithType: Form.GetScaledBounds(Rectangle, SizeF, BoundsSpecified)\n  fullName: Form.GetScaledBounds(Rectangle, SizeF, BoundsSpecified)\n- uid: System.Windows.Forms.BoundsSpecified\n  parent: System.Windows.Forms\n  isExternal: false\n  name: BoundsSpecified\n  nameWithType: BoundsSpecified\n  fullName: System.Windows.Forms.BoundsSpecified\n- uid: System.Windows.Forms.Form.HelpButton\n  parent: System.Windows.Forms.Form\n  isExternal: false\n  name: HelpButton\n  nameWithType: Form.HelpButton\n  fullName: Form.HelpButton\n- uid: System.Windows.Forms.Form.HelpButtonClicked\n  parent: System.Windows.Forms.Form\n  isExternal: false\n  name: HelpButtonClicked\n  nameWithType: Form.HelpButtonClicked\n  fullName: Form.HelpButtonClicked\n- uid: System.Windows.Forms.Form.Icon\n  parent: System.Windows.Forms.Form\n  isExternal: false\n  name: Icon\n  nameWithType: Form.Icon\n  fullName: Form.Icon\n- uid: System.Drawing.Icon\n  parent: System.Drawing\n  isExternal: false\n  name: Icon\n  nameWithType: Icon\n  fullName: System.Drawing.Icon\n- uid: System.Windows.Forms.Form.InputLanguageChanged\n  parent: System.Windows.Forms.Form\n  isExternal: false\n  name: InputLanguageChanged\n  nameWithType: Form.InputLanguageChanged\n  fullName: Form.InputLanguageChanged\n- uid: System.Windows.Forms.InputLanguageChangedEventHandler\n  parent: System.Windows.Forms\n  isExternal: false\n  name: InputLanguageChangedEventHandler\n  nameWithType: InputLanguageChangedEventHandler\n  fullName: System.Windows.Forms.InputLanguageChangedEventHandler\n- uid: System.Windows.Forms.Form.InputLanguageChanging\n  parent: System.Windows.Forms.Form\n  isExternal: false\n  name: InputLanguageChanging\n  nameWithType: Form.InputLanguageChanging\n  fullName: Form.InputLanguageChanging\n- uid: System.Windows.Forms.InputLanguageChangingEventHandler\n  parent: System.Windows.Forms\n  isExternal: false\n  name: InputLanguageChangingEventHandler\n  nameWithType: InputLanguageChangingEventHandler\n  fullName: System.Windows.Forms.InputLanguageChangingEventHandler\n- uid: System.Windows.Forms.Form.IsMdiChild\n  parent: System.Windows.Forms.Form\n  isExternal: false\n  name: IsMdiChild\n  nameWithType: Form.IsMdiChild\n  fullName: Form.IsMdiChild\n- uid: System.Windows.Forms.Form.IsMdiContainer\n  parent: System.Windows.Forms.Form\n  isExternal: false\n  name: IsMdiContainer\n  nameWithType: Form.IsMdiContainer\n  fullName: Form.IsMdiContainer\n- uid: System.Windows.Forms.Form.IsRestrictedWindow\n  parent: System.Windows.Forms.Form\n  isExternal: false\n  name: IsRestrictedWindow\n  nameWithType: Form.IsRestrictedWindow\n  fullName: Form.IsRestrictedWindow\n- uid: System.Windows.Forms.Form.KeyPreview\n  parent: System.Windows.Forms.Form\n  isExternal: false\n  name: KeyPreview\n  nameWithType: Form.KeyPreview\n  fullName: Form.KeyPreview\n- uid: System.Windows.Forms.Form.LayoutMdi(System.Windows.Forms.MdiLayout)\n  parent: System.Windows.Forms.Form\n  isExternal: false\n  name: LayoutMdi(MdiLayout)\n  nameWithType: Form.LayoutMdi(MdiLayout)\n  fullName: Form.LayoutMdi(MdiLayout)\n- uid: System.Windows.Forms.MdiLayout\n  parent: System.Windows.Forms\n  isExternal: false\n  name: MdiLayout\n  nameWithType: MdiLayout\n  fullName: System.Windows.Forms.MdiLayout\n- uid: System.Windows.Forms.Form.Load\n  parent: System.Windows.Forms.Form\n  isExternal: false\n  name: Load\n  nameWithType: Form.Load\n  fullName: Form.Load\n- uid: System.Windows.Forms.Form.Location\n  parent: System.Windows.Forms.Form\n  isExternal: false\n  name: Location\n  nameWithType: Form.Location\n  fullName: Form.Location\n- uid: System.Windows.Forms.Form.MainMenuStrip\n  parent: System.Windows.Forms.Form\n  isExternal: false\n  name: MainMenuStrip\n  nameWithType: Form.MainMenuStrip\n  fullName: Form.MainMenuStrip\n- uid: System.Windows.Forms.MenuStrip\n  parent: System.Windows.Forms\n  isExternal: false\n  name: MenuStrip\n  nameWithType: MenuStrip\n  fullName: System.Windows.Forms.MenuStrip\n- uid: System.Windows.Forms.Form.Margin\n  parent: System.Windows.Forms.Form\n  isExternal: false\n  name: Margin\n  nameWithType: Form.Margin\n  fullName: Form.Margin\n- uid: System.Windows.Forms.Padding\n  parent: System.Windows.Forms\n  isExternal: false\n  name: Padding\n  nameWithType: Padding\n  fullName: System.Windows.Forms.Padding\n- uid: System.Windows.Forms.Form.MarginChanged\n  parent: System.Windows.Forms.Form\n  isExternal: false\n  name: MarginChanged\n  nameWithType: Form.MarginChanged\n  fullName: Form.MarginChanged\n- uid: System.Windows.Forms.Form.MaximizeBox\n  parent: System.Windows.Forms.Form\n  isExternal: false\n  name: MaximizeBox\n  nameWithType: Form.MaximizeBox\n  fullName: Form.MaximizeBox\n- uid: System.Windows.Forms.Form.MaximizedBounds\n  parent: System.Windows.Forms.Form\n  isExternal: false\n  name: MaximizedBounds\n  nameWithType: Form.MaximizedBounds\n  fullName: Form.MaximizedBounds\n- uid: System.Windows.Forms.Form.MaximizedBoundsChanged\n  parent: System.Windows.Forms.Form\n  isExternal: false\n  name: MaximizedBoundsChanged\n  nameWithType: Form.MaximizedBoundsChanged\n  fullName: Form.MaximizedBoundsChanged\n- uid: System.Windows.Forms.Form.MaximumSize\n  parent: System.Windows.Forms.Form\n  isExternal: false\n  name: MaximumSize\n  nameWithType: Form.MaximumSize\n  fullName: Form.MaximumSize\n- uid: System.Windows.Forms.Form.MaximumSizeChanged\n  parent: System.Windows.Forms.Form\n  isExternal: false\n  name: MaximumSizeChanged\n  nameWithType: Form.MaximumSizeChanged\n  fullName: Form.MaximumSizeChanged\n- uid: System.Windows.Forms.Form.MdiChildActivate\n  parent: System.Windows.Forms.Form\n  isExternal: false\n  name: MdiChildActivate\n  nameWithType: Form.MdiChildActivate\n  fullName: Form.MdiChildActivate\n- uid: System.Windows.Forms.Form.MdiChildren\n  parent: System.Windows.Forms.Form\n  isExternal: false\n  name: MdiChildren\n  nameWithType: Form.MdiChildren\n  fullName: Form.MdiChildren\n- uid: System.Windows.Forms.Form[]\n  parent: System.Windows.Forms\n  isExternal: false\n  name: Form[]\n  nameWithType: Form[]\n  fullName: System.Windows.Forms.Form[]\n  spec.csharp:\n  - uid: System.Windows.Forms.Form\n    name: Form\n    nameWithType: Form\n    fullName: System.Windows.Forms.Form\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Windows.Forms.Form.MdiParent\n  parent: System.Windows.Forms.Form\n  isExternal: false\n  name: MdiParent\n  nameWithType: Form.MdiParent\n  fullName: Form.MdiParent\n- uid: System.Windows.Forms.Form.Menu\n  parent: System.Windows.Forms.Form\n  isExternal: false\n  name: Menu\n  nameWithType: Form.Menu\n  fullName: Form.Menu\n- uid: System.Windows.Forms.MainMenu\n  parent: System.Windows.Forms\n  isExternal: false\n  name: MainMenu\n  nameWithType: MainMenu\n  fullName: System.Windows.Forms.MainMenu\n- uid: System.Windows.Forms.Form.MenuComplete\n  parent: System.Windows.Forms.Form\n  isExternal: false\n  name: MenuComplete\n  nameWithType: Form.MenuComplete\n  fullName: Form.MenuComplete\n- uid: System.Windows.Forms.Form.MenuStart\n  parent: System.Windows.Forms.Form\n  isExternal: false\n  name: MenuStart\n  nameWithType: Form.MenuStart\n  fullName: Form.MenuStart\n- uid: System.Windows.Forms.Form.MergedMenu\n  parent: System.Windows.Forms.Form\n  isExternal: false\n  name: MergedMenu\n  nameWithType: Form.MergedMenu\n  fullName: Form.MergedMenu\n- uid: System.Windows.Forms.Form.MinimizeBox\n  parent: System.Windows.Forms.Form\n  isExternal: false\n  name: MinimizeBox\n  nameWithType: Form.MinimizeBox\n  fullName: Form.MinimizeBox\n- uid: System.Windows.Forms.Form.MinimumSize\n  parent: System.Windows.Forms.Form\n  isExternal: false\n  name: MinimumSize\n  nameWithType: Form.MinimumSize\n  fullName: Form.MinimumSize\n- uid: System.Windows.Forms.Form.MinimumSizeChanged\n  parent: System.Windows.Forms.Form\n  isExternal: false\n  name: MinimumSizeChanged\n  nameWithType: Form.MinimumSizeChanged\n  fullName: Form.MinimumSizeChanged\n- uid: System.Windows.Forms.Form.Modal\n  parent: System.Windows.Forms.Form\n  isExternal: false\n  name: Modal\n  nameWithType: Form.Modal\n  fullName: Form.Modal\n- uid: System.Windows.Forms.Form.OnActivated(System.EventArgs)\n  parent: System.Windows.Forms.Form\n  isExternal: false\n  name: OnActivated(EventArgs)\n  nameWithType: Form.OnActivated(EventArgs)\n  fullName: Form.OnActivated(EventArgs)\n- uid: System.EventArgs\n  parent: System\n  isExternal: false\n  name: EventArgs\n  nameWithType: EventArgs\n  fullName: System.EventArgs\n- uid: System.Windows.Forms.Form.OnBackgroundImageChanged(System.EventArgs)\n  parent: System.Windows.Forms.Form\n  isExternal: false\n  name: OnBackgroundImageChanged(EventArgs)\n  nameWithType: Form.OnBackgroundImageChanged(EventArgs)\n  fullName: Form.OnBackgroundImageChanged(EventArgs)\n- uid: System.Windows.Forms.Form.OnBackgroundImageLayoutChanged(System.EventArgs)\n  parent: System.Windows.Forms.Form\n  isExternal: false\n  name: OnBackgroundImageLayoutChanged(EventArgs)\n  nameWithType: Form.OnBackgroundImageLayoutChanged(EventArgs)\n  fullName: Form.OnBackgroundImageLayoutChanged(EventArgs)\n- uid: System.Windows.Forms.Form.OnClosed(System.EventArgs)\n  parent: System.Windows.Forms.Form\n  isExternal: false\n  name: OnClosed(EventArgs)\n  nameWithType: Form.OnClosed(EventArgs)\n  fullName: Form.OnClosed(EventArgs)\n- uid: System.Windows.Forms.Form.OnClosing(System.ComponentModel.CancelEventArgs)\n  parent: System.Windows.Forms.Form\n  isExternal: false\n  name: OnClosing(CancelEventArgs)\n  nameWithType: Form.OnClosing(CancelEventArgs)\n  fullName: Form.OnClosing(CancelEventArgs)\n- uid: System.ComponentModel.CancelEventArgs\n  parent: System.ComponentModel\n  isExternal: false\n  name: CancelEventArgs\n  nameWithType: CancelEventArgs\n  fullName: System.ComponentModel.CancelEventArgs\n- uid: System.Windows.Forms.Form.OnCreateControl\n  parent: System.Windows.Forms.Form\n  isExternal: false\n  name: OnCreateControl()\n  nameWithType: Form.OnCreateControl()\n  fullName: Form.OnCreateControl()\n- uid: System.Windows.Forms.Form.OnDeactivate(System.EventArgs)\n  parent: System.Windows.Forms.Form\n  isExternal: false\n  name: OnDeactivate(EventArgs)\n  nameWithType: Form.OnDeactivate(EventArgs)\n  fullName: Form.OnDeactivate(EventArgs)\n- uid: System.Windows.Forms.Form.OnDpiChanged(System.Windows.Forms.DpiChangedEventArgs)\n  parent: System.Windows.Forms.Form\n  isExternal: false\n  name: OnDpiChanged(DpiChangedEventArgs)\n  nameWithType: Form.OnDpiChanged(DpiChangedEventArgs)\n  fullName: Form.OnDpiChanged(DpiChangedEventArgs)\n- uid: System.Windows.Forms.DpiChangedEventArgs\n  parent: System.Windows.Forms\n  isExternal: false\n  name: DpiChangedEventArgs\n  nameWithType: DpiChangedEventArgs\n  fullName: System.Windows.Forms.DpiChangedEventArgs\n- uid: System.Windows.Forms.Form.OnEnabledChanged(System.EventArgs)\n  parent: System.Windows.Forms.Form\n  isExternal: false\n  name: OnEnabledChanged(EventArgs)\n  nameWithType: Form.OnEnabledChanged(EventArgs)\n  fullName: Form.OnEnabledChanged(EventArgs)\n- uid: System.Windows.Forms.Form.OnEnter(System.EventArgs)\n  parent: System.Windows.Forms.Form\n  isExternal: false\n  name: OnEnter(EventArgs)\n  nameWithType: Form.OnEnter(EventArgs)\n  fullName: Form.OnEnter(EventArgs)\n- uid: System.Windows.Forms.Form.OnFontChanged(System.EventArgs)\n  parent: System.Windows.Forms.Form\n  isExternal: false\n  name: OnFontChanged(EventArgs)\n  nameWithType: Form.OnFontChanged(EventArgs)\n  fullName: Form.OnFontChanged(EventArgs)\n- uid: System.Windows.Forms.Form.OnFormClosed(System.Windows.Forms.FormClosedEventArgs)\n  parent: System.Windows.Forms.Form\n  isExternal: false\n  name: OnFormClosed(FormClosedEventArgs)\n  nameWithType: Form.OnFormClosed(FormClosedEventArgs)\n  fullName: Form.OnFormClosed(FormClosedEventArgs)\n- uid: System.Windows.Forms.FormClosedEventArgs\n  parent: System.Windows.Forms\n  isExternal: false\n  name: FormClosedEventArgs\n  nameWithType: FormClosedEventArgs\n  fullName: System.Windows.Forms.FormClosedEventArgs\n- uid: System.Windows.Forms.Form.OnFormClosing(System.Windows.Forms.FormClosingEventArgs)\n  parent: System.Windows.Forms.Form\n  isExternal: false\n  name: OnFormClosing(FormClosingEventArgs)\n  nameWithType: Form.OnFormClosing(FormClosingEventArgs)\n  fullName: Form.OnFormClosing(FormClosingEventArgs)\n- uid: System.Windows.Forms.FormClosingEventArgs\n  parent: System.Windows.Forms\n  isExternal: false\n  name: FormClosingEventArgs\n  nameWithType: FormClosingEventArgs\n  fullName: System.Windows.Forms.FormClosingEventArgs\n- uid: System.Windows.Forms.Form.OnGetDpiScaledSize(System.Int32,System.Int32,System.Drawing.Size@)\n  parent: System.Windows.Forms.Form\n  isExternal: false\n  name: OnGetDpiScaledSize(Int32, Int32, Size)\n  nameWithType: Form.OnGetDpiScaledSize(Int32, Int32, Size)\n  fullName: Form.OnGetDpiScaledSize(Int32, Int32, Size)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Windows.Forms.Form.OnHandleCreated(System.EventArgs)\n  parent: System.Windows.Forms.Form\n  isExternal: false\n  name: OnHandleCreated(EventArgs)\n  nameWithType: Form.OnHandleCreated(EventArgs)\n  fullName: Form.OnHandleCreated(EventArgs)\n- uid: System.Windows.Forms.Form.OnHandleDestroyed(System.EventArgs)\n  parent: System.Windows.Forms.Form\n  isExternal: false\n  name: OnHandleDestroyed(EventArgs)\n  nameWithType: Form.OnHandleDestroyed(EventArgs)\n  fullName: Form.OnHandleDestroyed(EventArgs)\n- uid: System.Windows.Forms.Form.OnHelpButtonClicked(System.ComponentModel.CancelEventArgs)\n  parent: System.Windows.Forms.Form\n  isExternal: false\n  name: OnHelpButtonClicked(CancelEventArgs)\n  nameWithType: Form.OnHelpButtonClicked(CancelEventArgs)\n  fullName: Form.OnHelpButtonClicked(CancelEventArgs)\n- uid: System.Windows.Forms.Form.OnInputLanguageChanged(System.Windows.Forms.InputLanguageChangedEventArgs)\n  parent: System.Windows.Forms.Form\n  isExternal: false\n  name: OnInputLanguageChanged(InputLanguageChangedEventArgs)\n  nameWithType: Form.OnInputLanguageChanged(InputLanguageChangedEventArgs)\n  fullName: Form.OnInputLanguageChanged(InputLanguageChangedEventArgs)\n- uid: System.Windows.Forms.InputLanguageChangedEventArgs\n  parent: System.Windows.Forms\n  isExternal: false\n  name: InputLanguageChangedEventArgs\n  nameWithType: InputLanguageChangedEventArgs\n  fullName: System.Windows.Forms.InputLanguageChangedEventArgs\n- uid: System.Windows.Forms.Form.OnInputLanguageChanging(System.Windows.Forms.InputLanguageChangingEventArgs)\n  parent: System.Windows.Forms.Form\n  isExternal: false\n  name: OnInputLanguageChanging(InputLanguageChangingEventArgs)\n  nameWithType: Form.OnInputLanguageChanging(InputLanguageChangingEventArgs)\n  fullName: Form.OnInputLanguageChanging(InputLanguageChangingEventArgs)\n- uid: System.Windows.Forms.InputLanguageChangingEventArgs\n  parent: System.Windows.Forms\n  isExternal: false\n  name: InputLanguageChangingEventArgs\n  nameWithType: InputLanguageChangingEventArgs\n  fullName: System.Windows.Forms.InputLanguageChangingEventArgs\n- uid: System.Windows.Forms.Form.OnLayout(System.Windows.Forms.LayoutEventArgs)\n  parent: System.Windows.Forms.Form\n  isExternal: false\n  name: OnLayout(LayoutEventArgs)\n  nameWithType: Form.OnLayout(LayoutEventArgs)\n  fullName: Form.OnLayout(LayoutEventArgs)\n- uid: System.Windows.Forms.LayoutEventArgs\n  parent: System.Windows.Forms\n  isExternal: false\n  name: LayoutEventArgs\n  nameWithType: LayoutEventArgs\n  fullName: System.Windows.Forms.LayoutEventArgs\n- uid: System.Windows.Forms.Form.OnLoad(System.EventArgs)\n  parent: System.Windows.Forms.Form\n  isExternal: false\n  name: OnLoad(EventArgs)\n  nameWithType: Form.OnLoad(EventArgs)\n  fullName: Form.OnLoad(EventArgs)\n- uid: System.Windows.Forms.Form.OnMaximizedBoundsChanged(System.EventArgs)\n  parent: System.Windows.Forms.Form\n  isExternal: false\n  name: OnMaximizedBoundsChanged(EventArgs)\n  nameWithType: Form.OnMaximizedBoundsChanged(EventArgs)\n  fullName: Form.OnMaximizedBoundsChanged(EventArgs)\n- uid: System.Windows.Forms.Form.OnMaximumSizeChanged(System.EventArgs)\n  parent: System.Windows.Forms.Form\n  isExternal: false\n  name: OnMaximumSizeChanged(EventArgs)\n  nameWithType: Form.OnMaximumSizeChanged(EventArgs)\n  fullName: Form.OnMaximumSizeChanged(EventArgs)\n- uid: System.Windows.Forms.Form.OnMdiChildActivate(System.EventArgs)\n  parent: System.Windows.Forms.Form\n  isExternal: false\n  name: OnMdiChildActivate(EventArgs)\n  nameWithType: Form.OnMdiChildActivate(EventArgs)\n  fullName: Form.OnMdiChildActivate(EventArgs)\n- uid: System.Windows.Forms.Form.OnMenuComplete(System.EventArgs)\n  parent: System.Windows.Forms.Form\n  isExternal: false\n  name: OnMenuComplete(EventArgs)\n  nameWithType: Form.OnMenuComplete(EventArgs)\n  fullName: Form.OnMenuComplete(EventArgs)\n- uid: System.Windows.Forms.Form.OnMenuStart(System.EventArgs)\n  parent: System.Windows.Forms.Form\n  isExternal: false\n  name: OnMenuStart(EventArgs)\n  nameWithType: Form.OnMenuStart(EventArgs)\n  fullName: Form.OnMenuStart(EventArgs)\n- uid: System.Windows.Forms.Form.OnMinimumSizeChanged(System.EventArgs)\n  parent: System.Windows.Forms.Form\n  isExternal: false\n  name: OnMinimumSizeChanged(EventArgs)\n  nameWithType: Form.OnMinimumSizeChanged(EventArgs)\n  fullName: Form.OnMinimumSizeChanged(EventArgs)\n- uid: System.Windows.Forms.Form.OnPaint(System.Windows.Forms.PaintEventArgs)\n  parent: System.Windows.Forms.Form\n  isExternal: false\n  name: OnPaint(PaintEventArgs)\n  nameWithType: Form.OnPaint(PaintEventArgs)\n  fullName: Form.OnPaint(PaintEventArgs)\n- uid: System.Windows.Forms.PaintEventArgs\n  parent: System.Windows.Forms\n  isExternal: false\n  name: PaintEventArgs\n  nameWithType: PaintEventArgs\n  fullName: System.Windows.Forms.PaintEventArgs\n- uid: System.Windows.Forms.Form.OnResize(System.EventArgs)\n  parent: System.Windows.Forms.Form\n  isExternal: false\n  name: OnResize(EventArgs)\n  nameWithType: Form.OnResize(EventArgs)\n  fullName: Form.OnResize(EventArgs)\n- uid: System.Windows.Forms.Form.OnResizeBegin(System.EventArgs)\n  parent: System.Windows.Forms.Form\n  isExternal: false\n  name: OnResizeBegin(EventArgs)\n  nameWithType: Form.OnResizeBegin(EventArgs)\n  fullName: Form.OnResizeBegin(EventArgs)\n- uid: System.Windows.Forms.Form.OnResizeEnd(System.EventArgs)\n  parent: System.Windows.Forms.Form\n  isExternal: false\n  name: OnResizeEnd(EventArgs)\n  nameWithType: Form.OnResizeEnd(EventArgs)\n  fullName: Form.OnResizeEnd(EventArgs)\n- uid: System.Windows.Forms.Form.OnRightToLeftLayoutChanged(System.EventArgs)\n  parent: System.Windows.Forms.Form\n  isExternal: false\n  name: OnRightToLeftLayoutChanged(EventArgs)\n  nameWithType: Form.OnRightToLeftLayoutChanged(EventArgs)\n  fullName: Form.OnRightToLeftLayoutChanged(EventArgs)\n- uid: System.Windows.Forms.Form.OnShown(System.EventArgs)\n  parent: System.Windows.Forms.Form\n  isExternal: false\n  name: OnShown(EventArgs)\n  nameWithType: Form.OnShown(EventArgs)\n  fullName: Form.OnShown(EventArgs)\n- uid: System.Windows.Forms.Form.OnStyleChanged(System.EventArgs)\n  parent: System.Windows.Forms.Form\n  isExternal: false\n  name: OnStyleChanged(EventArgs)\n  nameWithType: Form.OnStyleChanged(EventArgs)\n  fullName: Form.OnStyleChanged(EventArgs)\n- uid: System.Windows.Forms.Form.OnTextChanged(System.EventArgs)\n  parent: System.Windows.Forms.Form\n  isExternal: false\n  name: OnTextChanged(EventArgs)\n  nameWithType: Form.OnTextChanged(EventArgs)\n  fullName: Form.OnTextChanged(EventArgs)\n- uid: System.Windows.Forms.Form.OnVisibleChanged(System.EventArgs)\n  parent: System.Windows.Forms.Form\n  isExternal: false\n  name: OnVisibleChanged(EventArgs)\n  nameWithType: Form.OnVisibleChanged(EventArgs)\n  fullName: Form.OnVisibleChanged(EventArgs)\n- uid: System.Windows.Forms.Form.Opacity\n  parent: System.Windows.Forms.Form\n  isExternal: false\n  name: Opacity\n  nameWithType: Form.Opacity\n  fullName: Form.Opacity\n- uid: System.Double\n  parent: System\n  isExternal: false\n  name: Double\n  nameWithType: Double\n  fullName: System.Double\n- uid: System.Windows.Forms.Form.OwnedForms\n  parent: System.Windows.Forms.Form\n  isExternal: false\n  name: OwnedForms\n  nameWithType: Form.OwnedForms\n  fullName: Form.OwnedForms\n- uid: System.Windows.Forms.Form.Owner\n  parent: System.Windows.Forms.Form\n  isExternal: false\n  name: Owner\n  nameWithType: Form.Owner\n  fullName: Form.Owner\n- uid: System.Windows.Forms.Form.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)\n  parent: System.Windows.Forms.Form\n  isExternal: false\n  name: ProcessCmdKey(Message, Keys)\n  nameWithType: Form.ProcessCmdKey(Message, Keys)\n  fullName: Form.ProcessCmdKey(Message, Keys)\n- uid: System.Windows.Forms.Keys\n  parent: System.Windows.Forms\n  isExternal: false\n  name: Keys\n  nameWithType: Keys\n  fullName: System.Windows.Forms.Keys\n- uid: System.Windows.Forms.Form.ProcessDialogChar(System.Char)\n  parent: System.Windows.Forms.Form\n  isExternal: false\n  name: ProcessDialogChar(Char)\n  nameWithType: Form.ProcessDialogChar(Char)\n  fullName: Form.ProcessDialogChar(Char)\n- uid: System.Char\n  parent: System\n  isExternal: false\n  name: Char\n  nameWithType: Char\n  fullName: System.Char\n- uid: System.Windows.Forms.Form.ProcessDialogKey(System.Windows.Forms.Keys)\n  parent: System.Windows.Forms.Form\n  isExternal: false\n  name: ProcessDialogKey(Keys)\n  nameWithType: Form.ProcessDialogKey(Keys)\n  fullName: Form.ProcessDialogKey(Keys)\n- uid: System.Windows.Forms.Form.ProcessKeyPreview(System.Windows.Forms.Message@)\n  parent: System.Windows.Forms.Form\n  isExternal: false\n  name: ProcessKeyPreview(Message)\n  nameWithType: Form.ProcessKeyPreview(Message)\n  fullName: Form.ProcessKeyPreview(Message)\n- uid: System.Windows.Forms.Form.ProcessMnemonic(System.Char)\n  parent: System.Windows.Forms.Form\n  isExternal: false\n  name: ProcessMnemonic(Char)\n  nameWithType: Form.ProcessMnemonic(Char)\n  fullName: Form.ProcessMnemonic(Char)\n- uid: System.Windows.Forms.Form.ProcessTabKey(System.Boolean)\n  parent: System.Windows.Forms.Form\n  isExternal: false\n  name: ProcessTabKey(Boolean)\n  nameWithType: Form.ProcessTabKey(Boolean)\n  fullName: Form.ProcessTabKey(Boolean)\n- uid: System.Windows.Forms.Form.RemoveOwnedForm(System.Windows.Forms.Form)\n  parent: System.Windows.Forms.Form\n  isExternal: false\n  name: RemoveOwnedForm(Form)\n  nameWithType: Form.RemoveOwnedForm(Form)\n  fullName: Form.RemoveOwnedForm(Form)\n- uid: System.Windows.Forms.Form.ResizeBegin\n  parent: System.Windows.Forms.Form\n  isExternal: false\n  name: ResizeBegin\n  nameWithType: Form.ResizeBegin\n  fullName: Form.ResizeBegin\n- uid: System.Windows.Forms.Form.ResizeEnd\n  parent: System.Windows.Forms.Form\n  isExternal: false\n  name: ResizeEnd\n  nameWithType: Form.ResizeEnd\n  fullName: Form.ResizeEnd\n- uid: System.Windows.Forms.Form.RestoreBounds\n  parent: System.Windows.Forms.Form\n  isExternal: false\n  name: RestoreBounds\n  nameWithType: Form.RestoreBounds\n  fullName: Form.RestoreBounds\n- uid: System.Windows.Forms.Form.RightToLeftLayout\n  parent: System.Windows.Forms.Form\n  isExternal: false\n  name: RightToLeftLayout\n  nameWithType: Form.RightToLeftLayout\n  fullName: Form.RightToLeftLayout\n- uid: System.Windows.Forms.Form.RightToLeftLayoutChanged\n  parent: System.Windows.Forms.Form\n  isExternal: false\n  name: RightToLeftLayoutChanged\n  nameWithType: Form.RightToLeftLayoutChanged\n  fullName: Form.RightToLeftLayoutChanged\n- uid: System.Windows.Forms.Form.ScaleControl(System.Drawing.SizeF,System.Windows.Forms.BoundsSpecified)\n  parent: System.Windows.Forms.Form\n  isExternal: false\n  name: ScaleControl(SizeF, BoundsSpecified)\n  nameWithType: Form.ScaleControl(SizeF, BoundsSpecified)\n  fullName: Form.ScaleControl(SizeF, BoundsSpecified)\n- uid: System.Windows.Forms.Form.ScaleCore(System.Single,System.Single)\n  parent: System.Windows.Forms.Form\n  isExternal: false\n  name: ScaleCore(Single, Single)\n  nameWithType: Form.ScaleCore(Single, Single)\n  fullName: Form.ScaleCore(Single, Single)\n- uid: System.Single\n  parent: System\n  isExternal: false\n  name: Single\n  nameWithType: Single\n  fullName: System.Single\n- uid: System.Windows.Forms.Form.Select(System.Boolean,System.Boolean)\n  parent: System.Windows.Forms.Form\n  isExternal: false\n  name: Select(Boolean, Boolean)\n  nameWithType: Form.Select(Boolean, Boolean)\n  fullName: Form.Select(Boolean, Boolean)\n- uid: System.Windows.Forms.Form.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)\n  parent: System.Windows.Forms.Form\n  isExternal: false\n  name: SetBoundsCore(Int32, Int32, Int32, Int32, BoundsSpecified)\n  nameWithType: Form.SetBoundsCore(Int32, Int32, Int32, Int32, BoundsSpecified)\n  fullName: Form.SetBoundsCore(Int32, Int32, Int32, Int32, BoundsSpecified)\n- uid: System.Windows.Forms.Form.SetClientSizeCore(System.Int32,System.Int32)\n  parent: System.Windows.Forms.Form\n  isExternal: false\n  name: SetClientSizeCore(Int32, Int32)\n  nameWithType: Form.SetClientSizeCore(Int32, Int32)\n  fullName: Form.SetClientSizeCore(Int32, Int32)\n- uid: System.Windows.Forms.Form.SetDesktopBounds(System.Int32,System.Int32,System.Int32,System.Int32)\n  parent: System.Windows.Forms.Form\n  isExternal: false\n  name: SetDesktopBounds(Int32, Int32, Int32, Int32)\n  nameWithType: Form.SetDesktopBounds(Int32, Int32, Int32, Int32)\n  fullName: Form.SetDesktopBounds(Int32, Int32, Int32, Int32)\n- uid: System.Windows.Forms.Form.SetDesktopLocation(System.Int32,System.Int32)\n  parent: System.Windows.Forms.Form\n  isExternal: false\n  name: SetDesktopLocation(Int32, Int32)\n  nameWithType: Form.SetDesktopLocation(Int32, Int32)\n  fullName: Form.SetDesktopLocation(Int32, Int32)\n- uid: System.Windows.Forms.Form.SetVisibleCore(System.Boolean)\n  parent: System.Windows.Forms.Form\n  isExternal: false\n  name: SetVisibleCore(Boolean)\n  nameWithType: Form.SetVisibleCore(Boolean)\n  fullName: Form.SetVisibleCore(Boolean)\n- uid: System.Windows.Forms.Form.Show(System.Windows.Forms.IWin32Window)\n  parent: System.Windows.Forms.Form\n  isExternal: false\n  name: Show(IWin32Window)\n  nameWithType: Form.Show(IWin32Window)\n  fullName: Form.Show(IWin32Window)\n- uid: System.Windows.Forms.IWin32Window\n  parent: System.Windows.Forms\n  isExternal: false\n  name: IWin32Window\n  nameWithType: IWin32Window\n  fullName: System.Windows.Forms.IWin32Window\n- uid: System.Windows.Forms.Form.ShowDialog\n  parent: System.Windows.Forms.Form\n  isExternal: false\n  name: ShowDialog()\n  nameWithType: Form.ShowDialog()\n  fullName: Form.ShowDialog()\n- uid: System.Windows.Forms.Form.ShowDialog(System.Windows.Forms.IWin32Window)\n  parent: System.Windows.Forms.Form\n  isExternal: false\n  name: ShowDialog(IWin32Window)\n  nameWithType: Form.ShowDialog(IWin32Window)\n  fullName: Form.ShowDialog(IWin32Window)\n- uid: System.Windows.Forms.Form.ShowIcon\n  parent: System.Windows.Forms.Form\n  isExternal: false\n  name: ShowIcon\n  nameWithType: Form.ShowIcon\n  fullName: Form.ShowIcon\n- uid: System.Windows.Forms.Form.ShowInTaskbar\n  parent: System.Windows.Forms.Form\n  isExternal: false\n  name: ShowInTaskbar\n  nameWithType: Form.ShowInTaskbar\n  fullName: Form.ShowInTaskbar\n- uid: System.Windows.Forms.Form.Shown\n  parent: System.Windows.Forms.Form\n  isExternal: false\n  name: Shown\n  nameWithType: Form.Shown\n  fullName: Form.Shown\n- uid: System.Windows.Forms.Form.ShowWithoutActivation\n  parent: System.Windows.Forms.Form\n  isExternal: false\n  name: ShowWithoutActivation\n  nameWithType: Form.ShowWithoutActivation\n  fullName: Form.ShowWithoutActivation\n- uid: System.Windows.Forms.Form.Size\n  parent: System.Windows.Forms.Form\n  isExternal: false\n  name: Size\n  nameWithType: Form.Size\n  fullName: Form.Size\n- uid: System.Windows.Forms.Form.SizeGripStyle\n  parent: System.Windows.Forms.Form\n  isExternal: false\n  name: SizeGripStyle\n  nameWithType: Form.SizeGripStyle\n  fullName: Form.SizeGripStyle\n- uid: System.Windows.Forms.SizeGripStyle\n  parent: System.Windows.Forms\n  isExternal: false\n  name: SizeGripStyle\n  nameWithType: SizeGripStyle\n  fullName: System.Windows.Forms.SizeGripStyle\n- uid: System.Windows.Forms.Form.StartPosition\n  parent: System.Windows.Forms.Form\n  isExternal: false\n  name: StartPosition\n  nameWithType: Form.StartPosition\n  fullName: Form.StartPosition\n- uid: System.Windows.Forms.FormStartPosition\n  parent: System.Windows.Forms\n  isExternal: false\n  name: FormStartPosition\n  nameWithType: FormStartPosition\n  fullName: System.Windows.Forms.FormStartPosition\n- uid: System.Windows.Forms.Form.TabIndex\n  parent: System.Windows.Forms.Form\n  isExternal: false\n  name: TabIndex\n  nameWithType: Form.TabIndex\n  fullName: Form.TabIndex\n- uid: System.Windows.Forms.Form.TabIndexChanged\n  parent: System.Windows.Forms.Form\n  isExternal: false\n  name: TabIndexChanged\n  nameWithType: Form.TabIndexChanged\n  fullName: Form.TabIndexChanged\n- uid: System.Windows.Forms.Form.TabStop\n  parent: System.Windows.Forms.Form\n  isExternal: false\n  name: TabStop\n  nameWithType: Form.TabStop\n  fullName: Form.TabStop\n- uid: System.Windows.Forms.Form.TabStopChanged\n  parent: System.Windows.Forms.Form\n  isExternal: false\n  name: TabStopChanged\n  nameWithType: Form.TabStopChanged\n  fullName: Form.TabStopChanged\n- uid: System.Windows.Forms.Form.Text\n  parent: System.Windows.Forms.Form\n  isExternal: false\n  name: Text\n  nameWithType: Form.Text\n  fullName: Form.Text\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Windows.Forms.Form.TopLevel\n  parent: System.Windows.Forms.Form\n  isExternal: false\n  name: TopLevel\n  nameWithType: Form.TopLevel\n  fullName: Form.TopLevel\n- uid: System.Windows.Forms.Form.TopMost\n  parent: System.Windows.Forms.Form\n  isExternal: false\n  name: TopMost\n  nameWithType: Form.TopMost\n  fullName: Form.TopMost\n- uid: System.Windows.Forms.Form.ToString\n  parent: System.Windows.Forms.Form\n  isExternal: false\n  name: ToString()\n  nameWithType: Form.ToString()\n  fullName: Form.ToString()\n- uid: System.Windows.Forms.Form.TransparencyKey\n  parent: System.Windows.Forms.Form\n  isExternal: false\n  name: TransparencyKey\n  nameWithType: Form.TransparencyKey\n  fullName: Form.TransparencyKey\n- uid: System.Windows.Forms.Form.UpdateDefaultButton\n  parent: System.Windows.Forms.Form\n  isExternal: false\n  name: UpdateDefaultButton()\n  nameWithType: Form.UpdateDefaultButton()\n  fullName: Form.UpdateDefaultButton()\n- uid: System.Windows.Forms.Form.ValidateChildren\n  parent: System.Windows.Forms.Form\n  isExternal: false\n  name: ValidateChildren()\n  nameWithType: Form.ValidateChildren()\n  fullName: Form.ValidateChildren()\n- uid: System.Windows.Forms.Form.ValidateChildren(System.Windows.Forms.ValidationConstraints)\n  parent: System.Windows.Forms.Form\n  isExternal: false\n  name: ValidateChildren(ValidationConstraints)\n  nameWithType: Form.ValidateChildren(ValidationConstraints)\n  fullName: Form.ValidateChildren(ValidationConstraints)\n- uid: System.Windows.Forms.ValidationConstraints\n  parent: System.Windows.Forms\n  isExternal: false\n  name: ValidationConstraints\n  nameWithType: ValidationConstraints\n  fullName: System.Windows.Forms.ValidationConstraints\n- uid: System.Windows.Forms.Form.WindowState\n  parent: System.Windows.Forms.Form\n  isExternal: false\n  name: WindowState\n  nameWithType: Form.WindowState\n  fullName: Form.WindowState\n- uid: System.Windows.Forms.FormWindowState\n  parent: System.Windows.Forms\n  isExternal: false\n  name: FormWindowState\n  nameWithType: FormWindowState\n  fullName: System.Windows.Forms.FormWindowState\n- uid: System.Windows.Forms.Form.WndProc(System.Windows.Forms.Message@)\n  parent: System.Windows.Forms.Form\n  isExternal: false\n  name: WndProc(Message)\n  nameWithType: Form.WndProc(Message)\n  fullName: Form.WndProc(Message)\n- uid: System.Windows.Forms.Form.#ctor*\n  parent: System.Windows.Forms.Form\n  isExternal: false\n  name: Form\n  nameWithType: Form.Form\n  fullName: Form.Form\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Form.xml\n- uid: System.Windows.Forms.Form.AcceptButton*\n  parent: System.Windows.Forms.Form\n  isExternal: false\n  name: AcceptButton\n  nameWithType: Form.AcceptButton\n  fullName: Form.AcceptButton\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Form.xml\n- uid: System.Windows.Forms.Form.Activate*\n  parent: System.Windows.Forms.Form\n  isExternal: false\n  name: Activate\n  nameWithType: Form.Activate\n  fullName: Form.Activate\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Form.xml\n- uid: System.Windows.Forms.Form.ActivateMdiChild*\n  parent: System.Windows.Forms.Form\n  isExternal: false\n  name: ActivateMdiChild\n  nameWithType: Form.ActivateMdiChild\n  fullName: Form.ActivateMdiChild\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Form.xml\n- uid: System.Windows.Forms.Form.ActiveForm*\n  parent: System.Windows.Forms.Form\n  isExternal: false\n  name: ActiveForm\n  nameWithType: Form.ActiveForm\n  fullName: Form.ActiveForm\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Form.xml\n- uid: System.Windows.Forms.Form.ActiveMdiChild*\n  parent: System.Windows.Forms.Form\n  isExternal: false\n  name: ActiveMdiChild\n  nameWithType: Form.ActiveMdiChild\n  fullName: Form.ActiveMdiChild\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Form.xml\n- uid: System.Windows.Forms.Form.AddOwnedForm*\n  parent: System.Windows.Forms.Form\n  isExternal: false\n  name: AddOwnedForm\n  nameWithType: Form.AddOwnedForm\n  fullName: Form.AddOwnedForm\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Form.xml\n- uid: System.Windows.Forms.Form.AdjustFormScrollbars*\n  parent: System.Windows.Forms.Form\n  isExternal: false\n  name: AdjustFormScrollbars\n  nameWithType: Form.AdjustFormScrollbars\n  fullName: Form.AdjustFormScrollbars\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Form.xml\n- uid: System.Windows.Forms.Form.AllowTransparency*\n  parent: System.Windows.Forms.Form\n  isExternal: false\n  name: AllowTransparency\n  nameWithType: Form.AllowTransparency\n  fullName: Form.AllowTransparency\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Form.xml\n- uid: System.Windows.Forms.Form.ApplyAutoScaling*\n  parent: System.Windows.Forms.Form\n  isExternal: false\n  name: ApplyAutoScaling\n  nameWithType: Form.ApplyAutoScaling\n  fullName: Form.ApplyAutoScaling\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Form.xml\n- uid: System.Windows.Forms.Form.AutoScale*\n  parent: System.Windows.Forms.Form\n  isExternal: false\n  name: AutoScale\n  nameWithType: Form.AutoScale\n  fullName: Form.AutoScale\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Form.xml\n- uid: System.Windows.Forms.Form.AutoScaleBaseSize*\n  parent: System.Windows.Forms.Form\n  isExternal: false\n  name: AutoScaleBaseSize\n  nameWithType: Form.AutoScaleBaseSize\n  fullName: Form.AutoScaleBaseSize\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Form.xml\n- uid: System.Windows.Forms.Form.AutoScroll*\n  parent: System.Windows.Forms.Form\n  isExternal: false\n  name: AutoScroll\n  nameWithType: Form.AutoScroll\n  fullName: Form.AutoScroll\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Form.xml\n- uid: System.Windows.Forms.Form.AutoSize*\n  parent: System.Windows.Forms.Form\n  isExternal: false\n  name: AutoSize\n  nameWithType: Form.AutoSize\n  fullName: Form.AutoSize\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Form.xml\n- uid: System.Windows.Forms.Form.AutoSizeMode*\n  parent: System.Windows.Forms.Form\n  isExternal: false\n  name: AutoSizeMode\n  nameWithType: Form.AutoSizeMode\n  fullName: Form.AutoSizeMode\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Form.xml\n- uid: System.Windows.Forms.Form.AutoValidate*\n  parent: System.Windows.Forms.Form\n  isExternal: false\n  name: AutoValidate\n  nameWithType: Form.AutoValidate\n  fullName: Form.AutoValidate\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Form.xml\n- uid: System.Windows.Forms.Form.BackColor*\n  parent: System.Windows.Forms.Form\n  isExternal: false\n  name: BackColor\n  nameWithType: Form.BackColor\n  fullName: Form.BackColor\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Form.xml\n- uid: System.Windows.Forms.Form.CancelButton*\n  parent: System.Windows.Forms.Form\n  isExternal: false\n  name: CancelButton\n  nameWithType: Form.CancelButton\n  fullName: Form.CancelButton\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Form.xml\n- uid: System.Windows.Forms.Form.CenterToParent*\n  parent: System.Windows.Forms.Form\n  isExternal: false\n  name: CenterToParent\n  nameWithType: Form.CenterToParent\n  fullName: Form.CenterToParent\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Form.xml\n- uid: System.Windows.Forms.Form.CenterToScreen*\n  parent: System.Windows.Forms.Form\n  isExternal: false\n  name: CenterToScreen\n  nameWithType: Form.CenterToScreen\n  fullName: Form.CenterToScreen\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Form.xml\n- uid: System.Windows.Forms.Form.ClientSize*\n  parent: System.Windows.Forms.Form\n  isExternal: false\n  name: ClientSize\n  nameWithType: Form.ClientSize\n  fullName: Form.ClientSize\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Form.xml\n- uid: System.Windows.Forms.Form.Close*\n  parent: System.Windows.Forms.Form\n  isExternal: false\n  name: Close\n  nameWithType: Form.Close\n  fullName: Form.Close\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Form.xml\n- uid: System.Windows.Forms.Form.ControlBox*\n  parent: System.Windows.Forms.Form\n  isExternal: false\n  name: ControlBox\n  nameWithType: Form.ControlBox\n  fullName: Form.ControlBox\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Form.xml\n- uid: System.Windows.Forms.Form.CreateControlsInstance*\n  parent: System.Windows.Forms.Form\n  isExternal: false\n  name: CreateControlsInstance\n  nameWithType: Form.CreateControlsInstance\n  fullName: Form.CreateControlsInstance\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Form.xml\n- uid: System.Windows.Forms.Form.CreateHandle*\n  parent: System.Windows.Forms.Form\n  isExternal: false\n  name: CreateHandle\n  nameWithType: Form.CreateHandle\n  fullName: Form.CreateHandle\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Form.xml\n- uid: System.Windows.Forms.Form.CreateParams*\n  parent: System.Windows.Forms.Form\n  isExternal: false\n  name: CreateParams\n  nameWithType: Form.CreateParams\n  fullName: Form.CreateParams\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Form.xml\n- uid: System.Windows.Forms.Form.DefaultImeMode*\n  parent: System.Windows.Forms.Form\n  isExternal: false\n  name: DefaultImeMode\n  nameWithType: Form.DefaultImeMode\n  fullName: Form.DefaultImeMode\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Form.xml\n- uid: System.Windows.Forms.Form.DefaultSize*\n  parent: System.Windows.Forms.Form\n  isExternal: false\n  name: DefaultSize\n  nameWithType: Form.DefaultSize\n  fullName: Form.DefaultSize\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Form.xml\n- uid: System.Windows.Forms.Form.DefWndProc*\n  parent: System.Windows.Forms.Form\n  isExternal: false\n  name: DefWndProc\n  nameWithType: Form.DefWndProc\n  fullName: Form.DefWndProc\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Form.xml\n- uid: System.Windows.Forms.Form.DesktopBounds*\n  parent: System.Windows.Forms.Form\n  isExternal: false\n  name: DesktopBounds\n  nameWithType: Form.DesktopBounds\n  fullName: Form.DesktopBounds\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Form.xml\n- uid: System.Windows.Forms.Form.DesktopLocation*\n  parent: System.Windows.Forms.Form\n  isExternal: false\n  name: DesktopLocation\n  nameWithType: Form.DesktopLocation\n  fullName: Form.DesktopLocation\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Form.xml\n- uid: System.Windows.Forms.Form.DialogResult*\n  parent: System.Windows.Forms.Form\n  isExternal: false\n  name: DialogResult\n  nameWithType: Form.DialogResult\n  fullName: Form.DialogResult\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Form.xml\n- uid: System.Windows.Forms.Form.Dispose*\n  parent: System.Windows.Forms.Form\n  isExternal: false\n  name: Dispose\n  nameWithType: Form.Dispose\n  fullName: Form.Dispose\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Form.xml\n- uid: System.Windows.Forms.Form.FormBorderStyle*\n  parent: System.Windows.Forms.Form\n  isExternal: false\n  name: FormBorderStyle\n  nameWithType: Form.FormBorderStyle\n  fullName: Form.FormBorderStyle\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Form.xml\n- uid: System.Windows.Forms.Form.GetAutoScaleSize*\n  parent: System.Windows.Forms.Form\n  isExternal: false\n  name: GetAutoScaleSize\n  nameWithType: Form.GetAutoScaleSize\n  fullName: Form.GetAutoScaleSize\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Form.xml\n- uid: System.Windows.Forms.Form.GetScaledBounds*\n  parent: System.Windows.Forms.Form\n  isExternal: false\n  name: GetScaledBounds\n  nameWithType: Form.GetScaledBounds\n  fullName: Form.GetScaledBounds\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Form.xml\n- uid: System.Windows.Forms.Form.HelpButton*\n  parent: System.Windows.Forms.Form\n  isExternal: false\n  name: HelpButton\n  nameWithType: Form.HelpButton\n  fullName: Form.HelpButton\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Form.xml\n- uid: System.Windows.Forms.Form.Icon*\n  parent: System.Windows.Forms.Form\n  isExternal: false\n  name: Icon\n  nameWithType: Form.Icon\n  fullName: Form.Icon\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Form.xml\n- uid: System.Windows.Forms.Form.IsMdiChild*\n  parent: System.Windows.Forms.Form\n  isExternal: false\n  name: IsMdiChild\n  nameWithType: Form.IsMdiChild\n  fullName: Form.IsMdiChild\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Form.xml\n- uid: System.Windows.Forms.Form.IsMdiContainer*\n  parent: System.Windows.Forms.Form\n  isExternal: false\n  name: IsMdiContainer\n  nameWithType: Form.IsMdiContainer\n  fullName: Form.IsMdiContainer\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Form.xml\n- uid: System.Windows.Forms.Form.IsRestrictedWindow*\n  parent: System.Windows.Forms.Form\n  isExternal: false\n  name: IsRestrictedWindow\n  nameWithType: Form.IsRestrictedWindow\n  fullName: Form.IsRestrictedWindow\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Form.xml\n- uid: System.Windows.Forms.Form.KeyPreview*\n  parent: System.Windows.Forms.Form\n  isExternal: false\n  name: KeyPreview\n  nameWithType: Form.KeyPreview\n  fullName: Form.KeyPreview\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Form.xml\n- uid: System.Windows.Forms.Form.LayoutMdi*\n  parent: System.Windows.Forms.Form\n  isExternal: false\n  name: LayoutMdi\n  nameWithType: Form.LayoutMdi\n  fullName: Form.LayoutMdi\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Form.xml\n- uid: System.Windows.Forms.Form.Location*\n  parent: System.Windows.Forms.Form\n  isExternal: false\n  name: Location\n  nameWithType: Form.Location\n  fullName: Form.Location\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Form.xml\n- uid: System.Windows.Forms.Form.MainMenuStrip*\n  parent: System.Windows.Forms.Form\n  isExternal: false\n  name: MainMenuStrip\n  nameWithType: Form.MainMenuStrip\n  fullName: Form.MainMenuStrip\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Form.xml\n- uid: System.Windows.Forms.Form.Margin*\n  parent: System.Windows.Forms.Form\n  isExternal: false\n  name: Margin\n  nameWithType: Form.Margin\n  fullName: Form.Margin\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Form.xml\n- uid: System.Windows.Forms.Form.MaximizeBox*\n  parent: System.Windows.Forms.Form\n  isExternal: false\n  name: MaximizeBox\n  nameWithType: Form.MaximizeBox\n  fullName: Form.MaximizeBox\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Form.xml\n- uid: System.Windows.Forms.Form.MaximizedBounds*\n  parent: System.Windows.Forms.Form\n  isExternal: false\n  name: MaximizedBounds\n  nameWithType: Form.MaximizedBounds\n  fullName: Form.MaximizedBounds\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Form.xml\n- uid: System.Windows.Forms.Form.MaximumSize*\n  parent: System.Windows.Forms.Form\n  isExternal: false\n  name: MaximumSize\n  nameWithType: Form.MaximumSize\n  fullName: Form.MaximumSize\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Form.xml\n- uid: System.Windows.Forms.Form.MdiChildren*\n  parent: System.Windows.Forms.Form\n  isExternal: false\n  name: MdiChildren\n  nameWithType: Form.MdiChildren\n  fullName: Form.MdiChildren\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Form.xml\n- uid: System.Windows.Forms.Form.MdiParent*\n  parent: System.Windows.Forms.Form\n  isExternal: false\n  name: MdiParent\n  nameWithType: Form.MdiParent\n  fullName: Form.MdiParent\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Form.xml\n- uid: System.Windows.Forms.Form.Menu*\n  parent: System.Windows.Forms.Form\n  isExternal: false\n  name: Menu\n  nameWithType: Form.Menu\n  fullName: Form.Menu\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Form.xml\n- uid: System.Windows.Forms.Form.MergedMenu*\n  parent: System.Windows.Forms.Form\n  isExternal: false\n  name: MergedMenu\n  nameWithType: Form.MergedMenu\n  fullName: Form.MergedMenu\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Form.xml\n- uid: System.Windows.Forms.Form.MinimizeBox*\n  parent: System.Windows.Forms.Form\n  isExternal: false\n  name: MinimizeBox\n  nameWithType: Form.MinimizeBox\n  fullName: Form.MinimizeBox\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Form.xml\n- uid: System.Windows.Forms.Form.MinimumSize*\n  parent: System.Windows.Forms.Form\n  isExternal: false\n  name: MinimumSize\n  nameWithType: Form.MinimumSize\n  fullName: Form.MinimumSize\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Form.xml\n- uid: System.Windows.Forms.Form.Modal*\n  parent: System.Windows.Forms.Form\n  isExternal: false\n  name: Modal\n  nameWithType: Form.Modal\n  fullName: Form.Modal\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Form.xml\n- uid: System.Windows.Forms.Form.OnActivated*\n  parent: System.Windows.Forms.Form\n  isExternal: false\n  name: OnActivated\n  nameWithType: Form.OnActivated\n  fullName: Form.OnActivated\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Form.xml\n- uid: System.Windows.Forms.Form.OnBackgroundImageChanged*\n  parent: System.Windows.Forms.Form\n  isExternal: false\n  name: OnBackgroundImageChanged\n  nameWithType: Form.OnBackgroundImageChanged\n  fullName: Form.OnBackgroundImageChanged\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Form.xml\n- uid: System.Windows.Forms.Form.OnBackgroundImageLayoutChanged*\n  parent: System.Windows.Forms.Form\n  isExternal: false\n  name: OnBackgroundImageLayoutChanged\n  nameWithType: Form.OnBackgroundImageLayoutChanged\n  fullName: Form.OnBackgroundImageLayoutChanged\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Form.xml\n- uid: System.Windows.Forms.Form.OnClosed*\n  parent: System.Windows.Forms.Form\n  isExternal: false\n  name: OnClosed\n  nameWithType: Form.OnClosed\n  fullName: Form.OnClosed\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Form.xml\n- uid: System.Windows.Forms.Form.OnClosing*\n  parent: System.Windows.Forms.Form\n  isExternal: false\n  name: OnClosing\n  nameWithType: Form.OnClosing\n  fullName: Form.OnClosing\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Form.xml\n- uid: System.Windows.Forms.Form.OnCreateControl*\n  parent: System.Windows.Forms.Form\n  isExternal: false\n  name: OnCreateControl\n  nameWithType: Form.OnCreateControl\n  fullName: Form.OnCreateControl\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Form.xml\n- uid: System.Windows.Forms.Form.OnDeactivate*\n  parent: System.Windows.Forms.Form\n  isExternal: false\n  name: OnDeactivate\n  nameWithType: Form.OnDeactivate\n  fullName: Form.OnDeactivate\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Form.xml\n- uid: System.Windows.Forms.Form.OnDpiChanged*\n  parent: System.Windows.Forms.Form\n  isExternal: false\n  name: OnDpiChanged\n  nameWithType: Form.OnDpiChanged\n  fullName: Form.OnDpiChanged\n  monikers:\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Form.xml\n- uid: System.Windows.Forms.Form.OnEnabledChanged*\n  parent: System.Windows.Forms.Form\n  isExternal: false\n  name: OnEnabledChanged\n  nameWithType: Form.OnEnabledChanged\n  fullName: Form.OnEnabledChanged\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Form.xml\n- uid: System.Windows.Forms.Form.OnEnter*\n  parent: System.Windows.Forms.Form\n  isExternal: false\n  name: OnEnter\n  nameWithType: Form.OnEnter\n  fullName: Form.OnEnter\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Form.xml\n- uid: System.Windows.Forms.Form.OnFontChanged*\n  parent: System.Windows.Forms.Form\n  isExternal: false\n  name: OnFontChanged\n  nameWithType: Form.OnFontChanged\n  fullName: Form.OnFontChanged\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Form.xml\n- uid: System.Windows.Forms.Form.OnFormClosed*\n  parent: System.Windows.Forms.Form\n  isExternal: false\n  name: OnFormClosed\n  nameWithType: Form.OnFormClosed\n  fullName: Form.OnFormClosed\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Form.xml\n- uid: System.Windows.Forms.Form.OnFormClosing*\n  parent: System.Windows.Forms.Form\n  isExternal: false\n  name: OnFormClosing\n  nameWithType: Form.OnFormClosing\n  fullName: Form.OnFormClosing\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Form.xml\n- uid: System.Windows.Forms.Form.OnGetDpiScaledSize*\n  parent: System.Windows.Forms.Form\n  isExternal: false\n  name: OnGetDpiScaledSize\n  nameWithType: Form.OnGetDpiScaledSize\n  fullName: Form.OnGetDpiScaledSize\n  monikers:\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Form.xml\n- uid: System.Windows.Forms.Form.OnHandleCreated*\n  parent: System.Windows.Forms.Form\n  isExternal: false\n  name: OnHandleCreated\n  nameWithType: Form.OnHandleCreated\n  fullName: Form.OnHandleCreated\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Form.xml\n- uid: System.Windows.Forms.Form.OnHandleDestroyed*\n  parent: System.Windows.Forms.Form\n  isExternal: false\n  name: OnHandleDestroyed\n  nameWithType: Form.OnHandleDestroyed\n  fullName: Form.OnHandleDestroyed\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Form.xml\n- uid: System.Windows.Forms.Form.OnHelpButtonClicked*\n  parent: System.Windows.Forms.Form\n  isExternal: false\n  name: OnHelpButtonClicked\n  nameWithType: Form.OnHelpButtonClicked\n  fullName: Form.OnHelpButtonClicked\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Form.xml\n- uid: System.Windows.Forms.Form.OnInputLanguageChanged*\n  parent: System.Windows.Forms.Form\n  isExternal: false\n  name: OnInputLanguageChanged\n  nameWithType: Form.OnInputLanguageChanged\n  fullName: Form.OnInputLanguageChanged\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Form.xml\n- uid: System.Windows.Forms.Form.OnInputLanguageChanging*\n  parent: System.Windows.Forms.Form\n  isExternal: false\n  name: OnInputLanguageChanging\n  nameWithType: Form.OnInputLanguageChanging\n  fullName: Form.OnInputLanguageChanging\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Form.xml\n- uid: System.Windows.Forms.Form.OnLayout*\n  parent: System.Windows.Forms.Form\n  isExternal: false\n  name: OnLayout\n  nameWithType: Form.OnLayout\n  fullName: Form.OnLayout\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Form.xml\n- uid: System.Windows.Forms.Form.OnLoad*\n  parent: System.Windows.Forms.Form\n  isExternal: false\n  name: OnLoad\n  nameWithType: Form.OnLoad\n  fullName: Form.OnLoad\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Form.xml\n- uid: System.Windows.Forms.Form.OnMaximizedBoundsChanged*\n  parent: System.Windows.Forms.Form\n  isExternal: false\n  name: OnMaximizedBoundsChanged\n  nameWithType: Form.OnMaximizedBoundsChanged\n  fullName: Form.OnMaximizedBoundsChanged\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Form.xml\n- uid: System.Windows.Forms.Form.OnMaximumSizeChanged*\n  parent: System.Windows.Forms.Form\n  isExternal: false\n  name: OnMaximumSizeChanged\n  nameWithType: Form.OnMaximumSizeChanged\n  fullName: Form.OnMaximumSizeChanged\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Form.xml\n- uid: System.Windows.Forms.Form.OnMdiChildActivate*\n  parent: System.Windows.Forms.Form\n  isExternal: false\n  name: OnMdiChildActivate\n  nameWithType: Form.OnMdiChildActivate\n  fullName: Form.OnMdiChildActivate\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Form.xml\n- uid: System.Windows.Forms.Form.OnMenuComplete*\n  parent: System.Windows.Forms.Form\n  isExternal: false\n  name: OnMenuComplete\n  nameWithType: Form.OnMenuComplete\n  fullName: Form.OnMenuComplete\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Form.xml\n- uid: System.Windows.Forms.Form.OnMenuStart*\n  parent: System.Windows.Forms.Form\n  isExternal: false\n  name: OnMenuStart\n  nameWithType: Form.OnMenuStart\n  fullName: Form.OnMenuStart\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Form.xml\n- uid: System.Windows.Forms.Form.OnMinimumSizeChanged*\n  parent: System.Windows.Forms.Form\n  isExternal: false\n  name: OnMinimumSizeChanged\n  nameWithType: Form.OnMinimumSizeChanged\n  fullName: Form.OnMinimumSizeChanged\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Form.xml\n- uid: System.Windows.Forms.Form.OnPaint*\n  parent: System.Windows.Forms.Form\n  isExternal: false\n  name: OnPaint\n  nameWithType: Form.OnPaint\n  fullName: Form.OnPaint\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Form.xml\n- uid: System.Windows.Forms.Form.OnResize*\n  parent: System.Windows.Forms.Form\n  isExternal: false\n  name: OnResize\n  nameWithType: Form.OnResize\n  fullName: Form.OnResize\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Form.xml\n- uid: System.Windows.Forms.Form.OnResizeBegin*\n  parent: System.Windows.Forms.Form\n  isExternal: false\n  name: OnResizeBegin\n  nameWithType: Form.OnResizeBegin\n  fullName: Form.OnResizeBegin\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Form.xml\n- uid: System.Windows.Forms.Form.OnResizeEnd*\n  parent: System.Windows.Forms.Form\n  isExternal: false\n  name: OnResizeEnd\n  nameWithType: Form.OnResizeEnd\n  fullName: Form.OnResizeEnd\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Form.xml\n- uid: System.Windows.Forms.Form.OnRightToLeftLayoutChanged*\n  parent: System.Windows.Forms.Form\n  isExternal: false\n  name: OnRightToLeftLayoutChanged\n  nameWithType: Form.OnRightToLeftLayoutChanged\n  fullName: Form.OnRightToLeftLayoutChanged\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Form.xml\n- uid: System.Windows.Forms.Form.OnShown*\n  parent: System.Windows.Forms.Form\n  isExternal: false\n  name: OnShown\n  nameWithType: Form.OnShown\n  fullName: Form.OnShown\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Form.xml\n- uid: System.Windows.Forms.Form.OnStyleChanged*\n  parent: System.Windows.Forms.Form\n  isExternal: false\n  name: OnStyleChanged\n  nameWithType: Form.OnStyleChanged\n  fullName: Form.OnStyleChanged\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Form.xml\n- uid: System.Windows.Forms.Form.OnTextChanged*\n  parent: System.Windows.Forms.Form\n  isExternal: false\n  name: OnTextChanged\n  nameWithType: Form.OnTextChanged\n  fullName: Form.OnTextChanged\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Form.xml\n- uid: System.Windows.Forms.Form.OnVisibleChanged*\n  parent: System.Windows.Forms.Form\n  isExternal: false\n  name: OnVisibleChanged\n  nameWithType: Form.OnVisibleChanged\n  fullName: Form.OnVisibleChanged\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Form.xml\n- uid: System.Windows.Forms.Form.Opacity*\n  parent: System.Windows.Forms.Form\n  isExternal: false\n  name: Opacity\n  nameWithType: Form.Opacity\n  fullName: Form.Opacity\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Form.xml\n- uid: System.Windows.Forms.Form.OwnedForms*\n  parent: System.Windows.Forms.Form\n  isExternal: false\n  name: OwnedForms\n  nameWithType: Form.OwnedForms\n  fullName: Form.OwnedForms\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Form.xml\n- uid: System.Windows.Forms.Form.Owner*\n  parent: System.Windows.Forms.Form\n  isExternal: false\n  name: Owner\n  nameWithType: Form.Owner\n  fullName: Form.Owner\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Form.xml\n- uid: System.Windows.Forms.Form.ProcessCmdKey*\n  parent: System.Windows.Forms.Form\n  isExternal: false\n  name: ProcessCmdKey\n  nameWithType: Form.ProcessCmdKey\n  fullName: Form.ProcessCmdKey\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Form.xml\n- uid: System.Windows.Forms.Form.ProcessDialogChar*\n  parent: System.Windows.Forms.Form\n  isExternal: false\n  name: ProcessDialogChar\n  nameWithType: Form.ProcessDialogChar\n  fullName: Form.ProcessDialogChar\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Form.xml\n- uid: System.Windows.Forms.Form.ProcessDialogKey*\n  parent: System.Windows.Forms.Form\n  isExternal: false\n  name: ProcessDialogKey\n  nameWithType: Form.ProcessDialogKey\n  fullName: Form.ProcessDialogKey\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Form.xml\n- uid: System.Windows.Forms.Form.ProcessKeyPreview*\n  parent: System.Windows.Forms.Form\n  isExternal: false\n  name: ProcessKeyPreview\n  nameWithType: Form.ProcessKeyPreview\n  fullName: Form.ProcessKeyPreview\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Form.xml\n- uid: System.Windows.Forms.Form.ProcessMnemonic*\n  parent: System.Windows.Forms.Form\n  isExternal: false\n  name: ProcessMnemonic\n  nameWithType: Form.ProcessMnemonic\n  fullName: Form.ProcessMnemonic\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Form.xml\n- uid: System.Windows.Forms.Form.ProcessTabKey*\n  parent: System.Windows.Forms.Form\n  isExternal: false\n  name: ProcessTabKey\n  nameWithType: Form.ProcessTabKey\n  fullName: Form.ProcessTabKey\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Form.xml\n- uid: System.Windows.Forms.Form.RemoveOwnedForm*\n  parent: System.Windows.Forms.Form\n  isExternal: false\n  name: RemoveOwnedForm\n  nameWithType: Form.RemoveOwnedForm\n  fullName: Form.RemoveOwnedForm\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Form.xml\n- uid: System.Windows.Forms.Form.RestoreBounds*\n  parent: System.Windows.Forms.Form\n  isExternal: false\n  name: RestoreBounds\n  nameWithType: Form.RestoreBounds\n  fullName: Form.RestoreBounds\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Form.xml\n- uid: System.Windows.Forms.Form.RightToLeftLayout*\n  parent: System.Windows.Forms.Form\n  isExternal: false\n  name: RightToLeftLayout\n  nameWithType: Form.RightToLeftLayout\n  fullName: Form.RightToLeftLayout\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Form.xml\n- uid: System.Windows.Forms.Form.ScaleControl*\n  parent: System.Windows.Forms.Form\n  isExternal: false\n  name: ScaleControl\n  nameWithType: Form.ScaleControl\n  fullName: Form.ScaleControl\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Form.xml\n- uid: System.Windows.Forms.Form.ScaleCore*\n  parent: System.Windows.Forms.Form\n  isExternal: false\n  name: ScaleCore\n  nameWithType: Form.ScaleCore\n  fullName: Form.ScaleCore\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Form.xml\n- uid: System.Windows.Forms.Form.Select*\n  parent: System.Windows.Forms.Form\n  isExternal: false\n  name: Select\n  nameWithType: Form.Select\n  fullName: Form.Select\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Form.xml\n- uid: System.Windows.Forms.Form.SetBoundsCore*\n  parent: System.Windows.Forms.Form\n  isExternal: false\n  name: SetBoundsCore\n  nameWithType: Form.SetBoundsCore\n  fullName: Form.SetBoundsCore\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Form.xml\n- uid: System.Windows.Forms.Form.SetClientSizeCore*\n  parent: System.Windows.Forms.Form\n  isExternal: false\n  name: SetClientSizeCore\n  nameWithType: Form.SetClientSizeCore\n  fullName: Form.SetClientSizeCore\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Form.xml\n- uid: System.Windows.Forms.Form.SetDesktopBounds*\n  parent: System.Windows.Forms.Form\n  isExternal: false\n  name: SetDesktopBounds\n  nameWithType: Form.SetDesktopBounds\n  fullName: Form.SetDesktopBounds\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Form.xml\n- uid: System.Windows.Forms.Form.SetDesktopLocation*\n  parent: System.Windows.Forms.Form\n  isExternal: false\n  name: SetDesktopLocation\n  nameWithType: Form.SetDesktopLocation\n  fullName: Form.SetDesktopLocation\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Form.xml\n- uid: System.Windows.Forms.Form.SetVisibleCore*\n  parent: System.Windows.Forms.Form\n  isExternal: false\n  name: SetVisibleCore\n  nameWithType: Form.SetVisibleCore\n  fullName: Form.SetVisibleCore\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Form.xml\n- uid: System.Windows.Forms.Form.Show*\n  parent: System.Windows.Forms.Form\n  isExternal: false\n  name: Show\n  nameWithType: Form.Show\n  fullName: Form.Show\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Form.xml\n- uid: System.Windows.Forms.Form.ShowDialog*\n  parent: System.Windows.Forms.Form\n  isExternal: false\n  name: ShowDialog\n  nameWithType: Form.ShowDialog\n  fullName: Form.ShowDialog\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Form.xml\n- uid: System.Windows.Forms.Form.ShowIcon*\n  parent: System.Windows.Forms.Form\n  isExternal: false\n  name: ShowIcon\n  nameWithType: Form.ShowIcon\n  fullName: Form.ShowIcon\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Form.xml\n- uid: System.Windows.Forms.Form.ShowInTaskbar*\n  parent: System.Windows.Forms.Form\n  isExternal: false\n  name: ShowInTaskbar\n  nameWithType: Form.ShowInTaskbar\n  fullName: Form.ShowInTaskbar\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Form.xml\n- uid: System.Windows.Forms.Form.ShowWithoutActivation*\n  parent: System.Windows.Forms.Form\n  isExternal: false\n  name: ShowWithoutActivation\n  nameWithType: Form.ShowWithoutActivation\n  fullName: Form.ShowWithoutActivation\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Form.xml\n- uid: System.Windows.Forms.Form.Size*\n  parent: System.Windows.Forms.Form\n  isExternal: false\n  name: Size\n  nameWithType: Form.Size\n  fullName: Form.Size\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Form.xml\n- uid: System.Windows.Forms.Form.SizeGripStyle*\n  parent: System.Windows.Forms.Form\n  isExternal: false\n  name: SizeGripStyle\n  nameWithType: Form.SizeGripStyle\n  fullName: Form.SizeGripStyle\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Form.xml\n- uid: System.Windows.Forms.Form.StartPosition*\n  parent: System.Windows.Forms.Form\n  isExternal: false\n  name: StartPosition\n  nameWithType: Form.StartPosition\n  fullName: Form.StartPosition\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Form.xml\n- uid: System.Windows.Forms.Form.TabIndex*\n  parent: System.Windows.Forms.Form\n  isExternal: false\n  name: TabIndex\n  nameWithType: Form.TabIndex\n  fullName: Form.TabIndex\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Form.xml\n- uid: System.Windows.Forms.Form.TabStop*\n  parent: System.Windows.Forms.Form\n  isExternal: false\n  name: TabStop\n  nameWithType: Form.TabStop\n  fullName: Form.TabStop\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Form.xml\n- uid: System.Windows.Forms.Form.Text*\n  parent: System.Windows.Forms.Form\n  isExternal: false\n  name: Text\n  nameWithType: Form.Text\n  fullName: Form.Text\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Form.xml\n- uid: System.Windows.Forms.Form.TopLevel*\n  parent: System.Windows.Forms.Form\n  isExternal: false\n  name: TopLevel\n  nameWithType: Form.TopLevel\n  fullName: Form.TopLevel\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Form.xml\n- uid: System.Windows.Forms.Form.TopMost*\n  parent: System.Windows.Forms.Form\n  isExternal: false\n  name: TopMost\n  nameWithType: Form.TopMost\n  fullName: Form.TopMost\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Form.xml\n- uid: System.Windows.Forms.Form.ToString*\n  parent: System.Windows.Forms.Form\n  isExternal: false\n  name: ToString\n  nameWithType: Form.ToString\n  fullName: Form.ToString\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Form.xml\n- uid: System.Windows.Forms.Form.TransparencyKey*\n  parent: System.Windows.Forms.Form\n  isExternal: false\n  name: TransparencyKey\n  nameWithType: Form.TransparencyKey\n  fullName: Form.TransparencyKey\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Form.xml\n- uid: System.Windows.Forms.Form.UpdateDefaultButton*\n  parent: System.Windows.Forms.Form\n  isExternal: false\n  name: UpdateDefaultButton\n  nameWithType: Form.UpdateDefaultButton\n  fullName: Form.UpdateDefaultButton\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Form.xml\n- uid: System.Windows.Forms.Form.ValidateChildren*\n  parent: System.Windows.Forms.Form\n  isExternal: false\n  name: ValidateChildren\n  nameWithType: Form.ValidateChildren\n  fullName: Form.ValidateChildren\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Form.xml\n- uid: System.Windows.Forms.Form.WindowState*\n  parent: System.Windows.Forms.Form\n  isExternal: false\n  name: WindowState\n  nameWithType: Form.WindowState\n  fullName: Form.WindowState\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Form.xml\n- uid: System.Windows.Forms.Form.WndProc*\n  parent: System.Windows.Forms.Form\n  isExternal: false\n  name: WndProc\n  nameWithType: Form.WndProc\n  fullName: Form.WndProc\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/Form.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.MarshalByRefObject.CreateObjRef(System.Type)\n  parent: System.MarshalByRefObject\n  isExternal: false\n  name: CreateObjRef(Type)\n  nameWithType: MarshalByRefObject.CreateObjRef(Type)\n  fullName: MarshalByRefObject.CreateObjRef(Type)\n- uid: System.MarshalByRefObject.GetLifetimeService\n  parent: System.MarshalByRefObject\n  isExternal: false\n  name: GetLifetimeService()\n  nameWithType: MarshalByRefObject.GetLifetimeService()\n  fullName: MarshalByRefObject.GetLifetimeService()\n- uid: System.MarshalByRefObject.InitializeLifetimeService\n  parent: System.MarshalByRefObject\n  isExternal: false\n  name: InitializeLifetimeService()\n  nameWithType: MarshalByRefObject.InitializeLifetimeService()\n  fullName: MarshalByRefObject.InitializeLifetimeService()\n- uid: System.MarshalByRefObject.MemberwiseClone(System.Boolean)\n  parent: System.MarshalByRefObject\n  isExternal: false\n  name: MemberwiseClone(Boolean)\n  nameWithType: MarshalByRefObject.MemberwiseClone(Boolean)\n  fullName: MarshalByRefObject.MemberwiseClone(Boolean)\n- uid: System.Windows.Forms.Control.CanRaiseEvents\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: CanRaiseEvents\n  nameWithType: Control.CanRaiseEvents\n  fullName: Control.CanRaiseEvents\n- uid: System.ComponentModel.Component.Container\n  parent: System.ComponentModel.Component\n  isExternal: false\n  name: Container\n  nameWithType: Component.Container\n  fullName: Component.Container\n- uid: System.ComponentModel.Component.DesignMode\n  parent: System.ComponentModel.Component\n  isExternal: false\n  name: DesignMode\n  nameWithType: Component.DesignMode\n  fullName: Component.DesignMode\n- uid: System.ComponentModel.Component.Dispose\n  parent: System.ComponentModel.Component\n  isExternal: false\n  name: Dispose()\n  nameWithType: Component.Dispose()\n  fullName: Component.Dispose()\n- uid: System.ComponentModel.Component.Disposed\n  parent: System.ComponentModel.Component\n  isExternal: false\n  name: Disposed\n  nameWithType: Component.Disposed\n  fullName: Component.Disposed\n- uid: System.ComponentModel.Component.Events\n  parent: System.ComponentModel.Component\n  isExternal: false\n  name: Events\n  nameWithType: Component.Events\n  fullName: Component.Events\n- uid: System.ComponentModel.Component.GetService(System.Type)\n  parent: System.ComponentModel.Component\n  isExternal: false\n  name: GetService(Type)\n  nameWithType: Component.GetService(Type)\n  fullName: Component.GetService(Type)\n- uid: System.Windows.Forms.Control.Site\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: Site\n  nameWithType: Control.Site\n  fullName: Control.Site\n- uid: System.Windows.Forms.Control.AccessibilityNotifyClients(System.Windows.Forms.AccessibleEvents,System.Int32)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: AccessibilityNotifyClients(AccessibleEvents, Int32)\n  nameWithType: Control.AccessibilityNotifyClients(AccessibleEvents, Int32)\n  fullName: Control.AccessibilityNotifyClients(AccessibleEvents, Int32)\n- uid: System.Windows.Forms.Control.AccessibilityNotifyClients(System.Windows.Forms.AccessibleEvents,System.Int32,System.Int32)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: AccessibilityNotifyClients(AccessibleEvents, Int32, Int32)\n  nameWithType: Control.AccessibilityNotifyClients(AccessibleEvents, Int32, Int32)\n  fullName: Control.AccessibilityNotifyClients(AccessibleEvents, Int32, Int32)\n- uid: System.Windows.Forms.Control.AccessibilityObject\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: AccessibilityObject\n  nameWithType: Control.AccessibilityObject\n  fullName: Control.AccessibilityObject\n- uid: System.Windows.Forms.Control.AccessibleDefaultActionDescription\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: AccessibleDefaultActionDescription\n  nameWithType: Control.AccessibleDefaultActionDescription\n  fullName: Control.AccessibleDefaultActionDescription\n- uid: System.Windows.Forms.Control.AccessibleDescription\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: AccessibleDescription\n  nameWithType: Control.AccessibleDescription\n  fullName: Control.AccessibleDescription\n- uid: System.Windows.Forms.Control.AccessibleName\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: AccessibleName\n  nameWithType: Control.AccessibleName\n  fullName: Control.AccessibleName\n- uid: System.Windows.Forms.Control.AccessibleRole\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: AccessibleRole\n  nameWithType: Control.AccessibleRole\n  fullName: Control.AccessibleRole\n- uid: System.Windows.Forms.Control.AllowDrop\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: AllowDrop\n  nameWithType: Control.AllowDrop\n  fullName: Control.AllowDrop\n- uid: System.Windows.Forms.Control.Anchor\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: Anchor\n  nameWithType: Control.Anchor\n  fullName: Control.Anchor\n- uid: System.Windows.Forms.Control.AutoScrollOffset\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: AutoScrollOffset\n  nameWithType: Control.AutoScrollOffset\n  fullName: Control.AutoScrollOffset\n- uid: System.Windows.Forms.Control.BackColorChanged\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: BackColorChanged\n  nameWithType: Control.BackColorChanged\n  fullName: Control.BackColorChanged\n- uid: System.Windows.Forms.Control.BackgroundImage\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: BackgroundImage\n  nameWithType: Control.BackgroundImage\n  fullName: Control.BackgroundImage\n- uid: System.Windows.Forms.Control.BackgroundImageChanged\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: BackgroundImageChanged\n  nameWithType: Control.BackgroundImageChanged\n  fullName: Control.BackgroundImageChanged\n- uid: System.Windows.Forms.Control.BackgroundImageLayout\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: BackgroundImageLayout\n  nameWithType: Control.BackgroundImageLayout\n  fullName: Control.BackgroundImageLayout\n- uid: System.Windows.Forms.Control.BackgroundImageLayoutChanged\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: BackgroundImageLayoutChanged\n  nameWithType: Control.BackgroundImageLayoutChanged\n  fullName: Control.BackgroundImageLayoutChanged\n- uid: System.Windows.Forms.Control.BeginInvoke(System.Delegate)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: BeginInvoke(Delegate)\n  nameWithType: Control.BeginInvoke(Delegate)\n  fullName: Control.BeginInvoke(Delegate)\n- uid: System.Windows.Forms.Control.BeginInvoke(System.Delegate,System.Object[])\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: BeginInvoke(Delegate, Object[])\n  nameWithType: Control.BeginInvoke(Delegate, Object[])\n  fullName: Control.BeginInvoke(Delegate, Object[])\n- uid: System.Windows.Forms.ContainerControl.BindingContext\n  parent: System.Windows.Forms.ContainerControl\n  isExternal: false\n  name: BindingContext\n  nameWithType: ContainerControl.BindingContext\n  fullName: ContainerControl.BindingContext\n- uid: System.Windows.Forms.Control.BindingContextChanged\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: BindingContextChanged\n  nameWithType: Control.BindingContextChanged\n  fullName: Control.BindingContextChanged\n- uid: System.Windows.Forms.Control.Bottom\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: Bottom\n  nameWithType: Control.Bottom\n  fullName: Control.Bottom\n- uid: System.Windows.Forms.Control.Bounds\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: Bounds\n  nameWithType: Control.Bounds\n  fullName: Control.Bounds\n- uid: System.Windows.Forms.Control.BringToFront\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: BringToFront()\n  nameWithType: Control.BringToFront()\n  fullName: Control.BringToFront()\n- uid: System.Windows.Forms.ContainerControl.CanEnableIme\n  parent: System.Windows.Forms.ContainerControl\n  isExternal: false\n  name: CanEnableIme\n  nameWithType: ContainerControl.CanEnableIme\n  fullName: ContainerControl.CanEnableIme\n- uid: System.Windows.Forms.Control.CanFocus\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: CanFocus\n  nameWithType: Control.CanFocus\n  fullName: Control.CanFocus\n- uid: System.Windows.Forms.Control.CanSelect\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: CanSelect\n  nameWithType: Control.CanSelect\n  fullName: Control.CanSelect\n- uid: System.Windows.Forms.Control.Capture\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: Capture\n  nameWithType: Control.Capture\n  fullName: Control.Capture\n- uid: System.Windows.Forms.Control.CausesValidation\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: CausesValidation\n  nameWithType: Control.CausesValidation\n  fullName: Control.CausesValidation\n- uid: System.Windows.Forms.Control.CausesValidationChanged\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: CausesValidationChanged\n  nameWithType: Control.CausesValidationChanged\n  fullName: Control.CausesValidationChanged\n- uid: System.Windows.Forms.Control.ChangeUICues\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: ChangeUICues\n  nameWithType: Control.ChangeUICues\n  fullName: Control.ChangeUICues\n- uid: System.Windows.Forms.Control.CheckForIllegalCrossThreadCalls\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: CheckForIllegalCrossThreadCalls\n  nameWithType: Control.CheckForIllegalCrossThreadCalls\n  fullName: Control.CheckForIllegalCrossThreadCalls\n- uid: System.Windows.Forms.Control.Click\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: Click\n  nameWithType: Control.Click\n  fullName: Control.Click\n- uid: System.Windows.Forms.Control.ClientRectangle\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: ClientRectangle\n  nameWithType: Control.ClientRectangle\n  fullName: Control.ClientRectangle\n- uid: System.Windows.Forms.Control.ClientSizeChanged\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: ClientSizeChanged\n  nameWithType: Control.ClientSizeChanged\n  fullName: Control.ClientSizeChanged\n- uid: System.Windows.Forms.Control.CompanyName\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: CompanyName\n  nameWithType: Control.CompanyName\n  fullName: Control.CompanyName\n- uid: System.Windows.Forms.Control.Contains(System.Windows.Forms.Control)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: Contains(Control)\n  nameWithType: Control.Contains(Control)\n  fullName: Control.Contains(Control)\n- uid: System.Windows.Forms.Control.ContainsFocus\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: ContainsFocus\n  nameWithType: Control.ContainsFocus\n  fullName: Control.ContainsFocus\n- uid: System.Windows.Forms.Control.ContextMenu\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: ContextMenu\n  nameWithType: Control.ContextMenu\n  fullName: Control.ContextMenu\n- uid: System.Windows.Forms.Control.ContextMenuChanged\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: ContextMenuChanged\n  nameWithType: Control.ContextMenuChanged\n  fullName: Control.ContextMenuChanged\n- uid: System.Windows.Forms.Control.ContextMenuStrip\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: ContextMenuStrip\n  nameWithType: Control.ContextMenuStrip\n  fullName: Control.ContextMenuStrip\n- uid: System.Windows.Forms.Control.ContextMenuStripChanged\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: ContextMenuStripChanged\n  nameWithType: Control.ContextMenuStripChanged\n  fullName: Control.ContextMenuStripChanged\n- uid: System.Windows.Forms.Control.ControlAdded\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: ControlAdded\n  nameWithType: Control.ControlAdded\n  fullName: Control.ControlAdded\n- uid: System.Windows.Forms.Control.ControlRemoved\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: ControlRemoved\n  nameWithType: Control.ControlRemoved\n  fullName: Control.ControlRemoved\n- uid: System.Windows.Forms.Control.Controls\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: Controls\n  nameWithType: Control.Controls\n  fullName: Control.Controls\n- uid: System.Windows.Forms.Control.CreateAccessibilityInstance\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: CreateAccessibilityInstance()\n  nameWithType: Control.CreateAccessibilityInstance()\n  fullName: Control.CreateAccessibilityInstance()\n- uid: System.Windows.Forms.Control.CreateControl\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: CreateControl()\n  nameWithType: Control.CreateControl()\n  fullName: Control.CreateControl()\n- uid: System.Windows.Forms.Control.Created\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: Created\n  nameWithType: Control.Created\n  fullName: Control.Created\n- uid: System.Windows.Forms.Control.CreateGraphics\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: CreateGraphics()\n  nameWithType: Control.CreateGraphics()\n  fullName: Control.CreateGraphics()\n- uid: System.Windows.Forms.Control.Cursor\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: Cursor\n  nameWithType: Control.Cursor\n  fullName: Control.Cursor\n- uid: System.Windows.Forms.Control.CursorChanged\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: CursorChanged\n  nameWithType: Control.CursorChanged\n  fullName: Control.CursorChanged\n- uid: System.Windows.Forms.Control.DataBindings\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: DataBindings\n  nameWithType: Control.DataBindings\n  fullName: Control.DataBindings\n- uid: System.Windows.Forms.Control.DefaultBackColor\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: DefaultBackColor\n  nameWithType: Control.DefaultBackColor\n  fullName: Control.DefaultBackColor\n- uid: System.Windows.Forms.Control.DefaultCursor\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: DefaultCursor\n  nameWithType: Control.DefaultCursor\n  fullName: Control.DefaultCursor\n- uid: System.Windows.Forms.Control.DefaultFont\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: DefaultFont\n  nameWithType: Control.DefaultFont\n  fullName: Control.DefaultFont\n- uid: System.Windows.Forms.Control.DefaultForeColor\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: DefaultForeColor\n  nameWithType: Control.DefaultForeColor\n  fullName: Control.DefaultForeColor\n- uid: System.Windows.Forms.Control.DefaultMargin\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: DefaultMargin\n  nameWithType: Control.DefaultMargin\n  fullName: Control.DefaultMargin\n- uid: System.Windows.Forms.Control.DefaultMaximumSize\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: DefaultMaximumSize\n  nameWithType: Control.DefaultMaximumSize\n  fullName: Control.DefaultMaximumSize\n- uid: System.Windows.Forms.Control.DefaultMinimumSize\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: DefaultMinimumSize\n  nameWithType: Control.DefaultMinimumSize\n  fullName: Control.DefaultMinimumSize\n- uid: System.Windows.Forms.Control.DefaultPadding\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: DefaultPadding\n  nameWithType: Control.DefaultPadding\n  fullName: Control.DefaultPadding\n- uid: System.Windows.Forms.Control.DestroyHandle\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: DestroyHandle()\n  nameWithType: Control.DestroyHandle()\n  fullName: Control.DestroyHandle()\n- uid: System.Windows.Forms.Control.DeviceDpi\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: DeviceDpi\n  nameWithType: Control.DeviceDpi\n  fullName: Control.DeviceDpi\n- uid: System.Windows.Forms.ScrollableControl.DisplayRectangle\n  parent: System.Windows.Forms.ScrollableControl\n  isExternal: false\n  name: DisplayRectangle\n  nameWithType: ScrollableControl.DisplayRectangle\n  fullName: ScrollableControl.DisplayRectangle\n- uid: System.Windows.Forms.Control.Disposing\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: Disposing\n  nameWithType: Control.Disposing\n  fullName: Control.Disposing\n- uid: System.Windows.Forms.Control.Dock\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: Dock\n  nameWithType: Control.Dock\n  fullName: Control.Dock\n- uid: System.Windows.Forms.Control.DockChanged\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: DockChanged\n  nameWithType: Control.DockChanged\n  fullName: Control.DockChanged\n- uid: System.Windows.Forms.Control.DoDragDrop(System.Object,System.Windows.Forms.DragDropEffects)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: DoDragDrop(Object, DragDropEffects)\n  nameWithType: Control.DoDragDrop(Object, DragDropEffects)\n  fullName: Control.DoDragDrop(Object, DragDropEffects)\n- uid: System.Windows.Forms.Control.DoubleBuffered\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: DoubleBuffered\n  nameWithType: Control.DoubleBuffered\n  fullName: Control.DoubleBuffered\n- uid: System.Windows.Forms.Control.DoubleClick\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: DoubleClick\n  nameWithType: Control.DoubleClick\n  fullName: Control.DoubleClick\n- uid: System.Windows.Forms.Control.DpiChangedAfterParent\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: DpiChangedAfterParent\n  nameWithType: Control.DpiChangedAfterParent\n  fullName: Control.DpiChangedAfterParent\n- uid: System.Windows.Forms.Control.DpiChangedBeforeParent\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: DpiChangedBeforeParent\n  nameWithType: Control.DpiChangedBeforeParent\n  fullName: Control.DpiChangedBeforeParent\n- uid: System.Windows.Forms.Control.DragDrop\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: DragDrop\n  nameWithType: Control.DragDrop\n  fullName: Control.DragDrop\n- uid: System.Windows.Forms.Control.DragEnter\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: DragEnter\n  nameWithType: Control.DragEnter\n  fullName: Control.DragEnter\n- uid: System.Windows.Forms.Control.DragLeave\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: DragLeave\n  nameWithType: Control.DragLeave\n  fullName: Control.DragLeave\n- uid: System.Windows.Forms.Control.DragOver\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: DragOver\n  nameWithType: Control.DragOver\n  fullName: Control.DragOver\n- uid: System.Windows.Forms.Control.DrawToBitmap(System.Drawing.Bitmap,System.Drawing.Rectangle)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: DrawToBitmap(Bitmap, Rectangle)\n  nameWithType: Control.DrawToBitmap(Bitmap, Rectangle)\n  fullName: Control.DrawToBitmap(Bitmap, Rectangle)\n- uid: System.Windows.Forms.Control.Enabled\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: Enabled\n  nameWithType: Control.Enabled\n  fullName: Control.Enabled\n- uid: System.Windows.Forms.Control.EnabledChanged\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: EnabledChanged\n  nameWithType: Control.EnabledChanged\n  fullName: Control.EnabledChanged\n- uid: System.Windows.Forms.Control.EndInvoke(System.IAsyncResult)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: EndInvoke(IAsyncResult)\n  nameWithType: Control.EndInvoke(IAsyncResult)\n  fullName: Control.EndInvoke(IAsyncResult)\n- uid: System.Windows.Forms.Control.Enter\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: Enter\n  nameWithType: Control.Enter\n  fullName: Control.Enter\n- uid: System.Windows.Forms.Control.FindForm\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: FindForm()\n  nameWithType: Control.FindForm()\n  fullName: Control.FindForm()\n- uid: System.Windows.Forms.Control.Focus\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: Focus()\n  nameWithType: Control.Focus()\n  fullName: Control.Focus()\n- uid: System.Windows.Forms.Control.Focused\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: Focused\n  nameWithType: Control.Focused\n  fullName: Control.Focused\n- uid: System.Windows.Forms.Control.Font\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: Font\n  nameWithType: Control.Font\n  fullName: Control.Font\n- uid: System.Windows.Forms.Control.FontChanged\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: FontChanged\n  nameWithType: Control.FontChanged\n  fullName: Control.FontChanged\n- uid: System.Windows.Forms.Control.FontHeight\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: FontHeight\n  nameWithType: Control.FontHeight\n  fullName: Control.FontHeight\n- uid: System.Windows.Forms.Control.ForeColor\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: ForeColor\n  nameWithType: Control.ForeColor\n  fullName: Control.ForeColor\n- uid: System.Windows.Forms.Control.ForeColorChanged\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: ForeColorChanged\n  nameWithType: Control.ForeColorChanged\n  fullName: Control.ForeColorChanged\n- uid: System.Windows.Forms.Control.FromChildHandle(System.IntPtr)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: FromChildHandle(IntPtr)\n  nameWithType: Control.FromChildHandle(IntPtr)\n  fullName: Control.FromChildHandle(IntPtr)\n- uid: System.Windows.Forms.Control.FromHandle(System.IntPtr)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: FromHandle(IntPtr)\n  nameWithType: Control.FromHandle(IntPtr)\n  fullName: Control.FromHandle(IntPtr)\n- uid: System.Windows.Forms.Control.GetAccessibilityObjectById(System.Int32)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: GetAccessibilityObjectById(Int32)\n  nameWithType: Control.GetAccessibilityObjectById(Int32)\n  fullName: Control.GetAccessibilityObjectById(Int32)\n- uid: System.Windows.Forms.Control.GetAutoSizeMode\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: GetAutoSizeMode()\n  nameWithType: Control.GetAutoSizeMode()\n  fullName: Control.GetAutoSizeMode()\n- uid: System.Windows.Forms.Control.GetChildAtPoint(System.Drawing.Point)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: GetChildAtPoint(Point)\n  nameWithType: Control.GetChildAtPoint(Point)\n  fullName: Control.GetChildAtPoint(Point)\n- uid: System.Windows.Forms.Control.GetChildAtPoint(System.Drawing.Point,System.Windows.Forms.GetChildAtPointSkip)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: GetChildAtPoint(Point, GetChildAtPointSkip)\n  nameWithType: Control.GetChildAtPoint(Point, GetChildAtPointSkip)\n  fullName: Control.GetChildAtPoint(Point, GetChildAtPointSkip)\n- uid: System.Windows.Forms.Control.GetContainerControl\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: GetContainerControl()\n  nameWithType: Control.GetContainerControl()\n  fullName: Control.GetContainerControl()\n- uid: System.Windows.Forms.Control.GetNextControl(System.Windows.Forms.Control,System.Boolean)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: GetNextControl(Control, Boolean)\n  nameWithType: Control.GetNextControl(Control, Boolean)\n  fullName: Control.GetNextControl(Control, Boolean)\n- uid: System.Windows.Forms.Control.GetPreferredSize(System.Drawing.Size)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: GetPreferredSize(Size)\n  nameWithType: Control.GetPreferredSize(Size)\n  fullName: Control.GetPreferredSize(Size)\n- uid: System.Windows.Forms.Control.GetStyle(System.Windows.Forms.ControlStyles)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: GetStyle(ControlStyles)\n  nameWithType: Control.GetStyle(ControlStyles)\n  fullName: Control.GetStyle(ControlStyles)\n- uid: System.Windows.Forms.Control.GetTopLevel\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: GetTopLevel()\n  nameWithType: Control.GetTopLevel()\n  fullName: Control.GetTopLevel()\n- uid: System.Windows.Forms.Control.GiveFeedback\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: GiveFeedback\n  nameWithType: Control.GiveFeedback\n  fullName: Control.GiveFeedback\n- uid: System.Windows.Forms.Control.GotFocus\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: GotFocus\n  nameWithType: Control.GotFocus\n  fullName: Control.GotFocus\n- uid: System.Windows.Forms.Control.Handle\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: Handle\n  nameWithType: Control.Handle\n  fullName: Control.Handle\n- uid: System.Windows.Forms.Control.HandleCreated\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: HandleCreated\n  nameWithType: Control.HandleCreated\n  fullName: Control.HandleCreated\n- uid: System.Windows.Forms.Control.HandleDestroyed\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: HandleDestroyed\n  nameWithType: Control.HandleDestroyed\n  fullName: Control.HandleDestroyed\n- uid: System.Windows.Forms.Control.HasChildren\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: HasChildren\n  nameWithType: Control.HasChildren\n  fullName: Control.HasChildren\n- uid: System.Windows.Forms.Control.Height\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: Height\n  nameWithType: Control.Height\n  fullName: Control.Height\n- uid: System.Windows.Forms.Control.HelpRequested\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: HelpRequested\n  nameWithType: Control.HelpRequested\n  fullName: Control.HelpRequested\n- uid: System.Windows.Forms.Control.Hide\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: Hide()\n  nameWithType: Control.Hide()\n  fullName: Control.Hide()\n- uid: System.Windows.Forms.Control.ImeMode\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: ImeMode\n  nameWithType: Control.ImeMode\n  fullName: Control.ImeMode\n- uid: System.Windows.Forms.Control.ImeModeBase\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: ImeModeBase\n  nameWithType: Control.ImeModeBase\n  fullName: Control.ImeModeBase\n- uid: System.Windows.Forms.Control.ImeModeChanged\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: ImeModeChanged\n  nameWithType: Control.ImeModeChanged\n  fullName: Control.ImeModeChanged\n- uid: System.Windows.Forms.Control.InitLayout\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: InitLayout()\n  nameWithType: Control.InitLayout()\n  fullName: Control.InitLayout()\n- uid: System.Windows.Forms.Control.Invalidate(System.Drawing.Region,System.Boolean)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: Invalidate(Region, Boolean)\n  nameWithType: Control.Invalidate(Region, Boolean)\n  fullName: Control.Invalidate(Region, Boolean)\n- uid: System.Windows.Forms.Control.Invalidate(System.Drawing.Rectangle,System.Boolean)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: Invalidate(Rectangle, Boolean)\n  nameWithType: Control.Invalidate(Rectangle, Boolean)\n  fullName: Control.Invalidate(Rectangle, Boolean)\n- uid: System.Windows.Forms.Control.Invalidate(System.Drawing.Region)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: Invalidate(Region)\n  nameWithType: Control.Invalidate(Region)\n  fullName: Control.Invalidate(Region)\n- uid: System.Windows.Forms.Control.Invalidate(System.Drawing.Rectangle)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: Invalidate(Rectangle)\n  nameWithType: Control.Invalidate(Rectangle)\n  fullName: Control.Invalidate(Rectangle)\n- uid: System.Windows.Forms.Control.Invalidate(System.Boolean)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: Invalidate(Boolean)\n  nameWithType: Control.Invalidate(Boolean)\n  fullName: Control.Invalidate(Boolean)\n- uid: System.Windows.Forms.Control.Invalidate\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: Invalidate()\n  nameWithType: Control.Invalidate()\n  fullName: Control.Invalidate()\n- uid: System.Windows.Forms.Control.Invalidated\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: Invalidated\n  nameWithType: Control.Invalidated\n  fullName: Control.Invalidated\n- uid: System.Windows.Forms.Control.Invoke(System.Delegate)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: Invoke(Delegate)\n  nameWithType: Control.Invoke(Delegate)\n  fullName: Control.Invoke(Delegate)\n- uid: System.Windows.Forms.Control.Invoke(System.Delegate,System.Object[])\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: Invoke(Delegate, Object[])\n  nameWithType: Control.Invoke(Delegate, Object[])\n  fullName: Control.Invoke(Delegate, Object[])\n- uid: System.Windows.Forms.Control.InvokeGotFocus(System.Windows.Forms.Control,System.EventArgs)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: InvokeGotFocus(Control, EventArgs)\n  nameWithType: Control.InvokeGotFocus(Control, EventArgs)\n  fullName: Control.InvokeGotFocus(Control, EventArgs)\n- uid: System.Windows.Forms.Control.InvokeLostFocus(System.Windows.Forms.Control,System.EventArgs)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: InvokeLostFocus(Control, EventArgs)\n  nameWithType: Control.InvokeLostFocus(Control, EventArgs)\n  fullName: Control.InvokeLostFocus(Control, EventArgs)\n- uid: System.Windows.Forms.Control.InvokeOnClick(System.Windows.Forms.Control,System.EventArgs)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: InvokeOnClick(Control, EventArgs)\n  nameWithType: Control.InvokeOnClick(Control, EventArgs)\n  fullName: Control.InvokeOnClick(Control, EventArgs)\n- uid: System.Windows.Forms.Control.InvokePaint(System.Windows.Forms.Control,System.Windows.Forms.PaintEventArgs)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: InvokePaint(Control, PaintEventArgs)\n  nameWithType: Control.InvokePaint(Control, PaintEventArgs)\n  fullName: Control.InvokePaint(Control, PaintEventArgs)\n- uid: System.Windows.Forms.Control.InvokePaintBackground(System.Windows.Forms.Control,System.Windows.Forms.PaintEventArgs)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: InvokePaintBackground(Control, PaintEventArgs)\n  nameWithType: Control.InvokePaintBackground(Control, PaintEventArgs)\n  fullName: Control.InvokePaintBackground(Control, PaintEventArgs)\n- uid: System.Windows.Forms.Control.InvokeRequired\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: InvokeRequired\n  nameWithType: Control.InvokeRequired\n  fullName: Control.InvokeRequired\n- uid: System.Windows.Forms.Control.IsAccessible\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: IsAccessible\n  nameWithType: Control.IsAccessible\n  fullName: Control.IsAccessible\n- uid: System.Windows.Forms.Control.IsDisposed\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: IsDisposed\n  nameWithType: Control.IsDisposed\n  fullName: Control.IsDisposed\n- uid: System.Windows.Forms.Control.IsHandleCreated\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: IsHandleCreated\n  nameWithType: Control.IsHandleCreated\n  fullName: Control.IsHandleCreated\n- uid: System.Windows.Forms.Control.IsInputChar(System.Char)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: IsInputChar(Char)\n  nameWithType: Control.IsInputChar(Char)\n  fullName: Control.IsInputChar(Char)\n- uid: System.Windows.Forms.Control.IsInputKey(System.Windows.Forms.Keys)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: IsInputKey(Keys)\n  nameWithType: Control.IsInputKey(Keys)\n  fullName: Control.IsInputKey(Keys)\n- uid: System.Windows.Forms.Control.IsKeyLocked(System.Windows.Forms.Keys)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: IsKeyLocked(Keys)\n  nameWithType: Control.IsKeyLocked(Keys)\n  fullName: Control.IsKeyLocked(Keys)\n- uid: System.Windows.Forms.Control.IsMirrored\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: IsMirrored\n  nameWithType: Control.IsMirrored\n  fullName: Control.IsMirrored\n- uid: System.Windows.Forms.Control.IsMnemonic(System.Char,System.String)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: IsMnemonic(Char, String)\n  nameWithType: Control.IsMnemonic(Char, String)\n  fullName: Control.IsMnemonic(Char, String)\n- uid: System.Windows.Forms.Control.KeyDown\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: KeyDown\n  nameWithType: Control.KeyDown\n  fullName: Control.KeyDown\n- uid: System.Windows.Forms.Control.KeyPress\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: KeyPress\n  nameWithType: Control.KeyPress\n  fullName: Control.KeyPress\n- uid: System.Windows.Forms.Control.KeyUp\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: KeyUp\n  nameWithType: Control.KeyUp\n  fullName: Control.KeyUp\n- uid: System.Windows.Forms.Control.Layout\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: Layout\n  nameWithType: Control.Layout\n  fullName: Control.Layout\n- uid: System.Windows.Forms.Control.LayoutEngine\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: LayoutEngine\n  nameWithType: Control.LayoutEngine\n  fullName: Control.LayoutEngine\n- uid: System.Windows.Forms.Control.Leave\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: Leave\n  nameWithType: Control.Leave\n  fullName: Control.Leave\n- uid: System.Windows.Forms.Control.Left\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: Left\n  nameWithType: Control.Left\n  fullName: Control.Left\n- uid: System.Windows.Forms.Control.LocationChanged\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: LocationChanged\n  nameWithType: Control.LocationChanged\n  fullName: Control.LocationChanged\n- uid: System.Windows.Forms.Control.LogicalToDeviceUnits(System.Int32)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: LogicalToDeviceUnits(Int32)\n  nameWithType: Control.LogicalToDeviceUnits(Int32)\n  fullName: Control.LogicalToDeviceUnits(Int32)\n- uid: System.Windows.Forms.Control.LostFocus\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: LostFocus\n  nameWithType: Control.LostFocus\n  fullName: Control.LostFocus\n- uid: System.Windows.Forms.Control.ModifierKeys\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: ModifierKeys\n  nameWithType: Control.ModifierKeys\n  fullName: Control.ModifierKeys\n- uid: System.Windows.Forms.Control.MouseButtons\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: MouseButtons\n  nameWithType: Control.MouseButtons\n  fullName: Control.MouseButtons\n- uid: System.Windows.Forms.Control.MouseCaptureChanged\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: MouseCaptureChanged\n  nameWithType: Control.MouseCaptureChanged\n  fullName: Control.MouseCaptureChanged\n- uid: System.Windows.Forms.Control.MouseClick\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: MouseClick\n  nameWithType: Control.MouseClick\n  fullName: Control.MouseClick\n- uid: System.Windows.Forms.Control.MouseDoubleClick\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: MouseDoubleClick\n  nameWithType: Control.MouseDoubleClick\n  fullName: Control.MouseDoubleClick\n- uid: System.Windows.Forms.Control.MouseDown\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: MouseDown\n  nameWithType: Control.MouseDown\n  fullName: Control.MouseDown\n- uid: System.Windows.Forms.Control.MouseEnter\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: MouseEnter\n  nameWithType: Control.MouseEnter\n  fullName: Control.MouseEnter\n- uid: System.Windows.Forms.Control.MouseHover\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: MouseHover\n  nameWithType: Control.MouseHover\n  fullName: Control.MouseHover\n- uid: System.Windows.Forms.Control.MouseLeave\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: MouseLeave\n  nameWithType: Control.MouseLeave\n  fullName: Control.MouseLeave\n- uid: System.Windows.Forms.Control.MouseMove\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: MouseMove\n  nameWithType: Control.MouseMove\n  fullName: Control.MouseMove\n- uid: System.Windows.Forms.Control.MousePosition\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: MousePosition\n  nameWithType: Control.MousePosition\n  fullName: Control.MousePosition\n- uid: System.Windows.Forms.Control.MouseUp\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: MouseUp\n  nameWithType: Control.MouseUp\n  fullName: Control.MouseUp\n- uid: System.Windows.Forms.Control.MouseWheel\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: MouseWheel\n  nameWithType: Control.MouseWheel\n  fullName: Control.MouseWheel\n- uid: System.Windows.Forms.Control.Move\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: Move\n  nameWithType: Control.Move\n  fullName: Control.Move\n- uid: System.Windows.Forms.Control.Name\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: Name\n  nameWithType: Control.Name\n  fullName: Control.Name\n- uid: System.Windows.Forms.Control.NotifyInvalidate(System.Drawing.Rectangle)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: NotifyInvalidate(Rectangle)\n  nameWithType: Control.NotifyInvalidate(Rectangle)\n  fullName: Control.NotifyInvalidate(Rectangle)\n- uid: System.Windows.Forms.Control.OnAutoSizeChanged(System.EventArgs)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: OnAutoSizeChanged(EventArgs)\n  nameWithType: Control.OnAutoSizeChanged(EventArgs)\n  fullName: Control.OnAutoSizeChanged(EventArgs)\n- uid: System.Windows.Forms.Control.OnBackColorChanged(System.EventArgs)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: OnBackColorChanged(EventArgs)\n  nameWithType: Control.OnBackColorChanged(EventArgs)\n  fullName: Control.OnBackColorChanged(EventArgs)\n- uid: System.Windows.Forms.Control.OnBindingContextChanged(System.EventArgs)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: OnBindingContextChanged(EventArgs)\n  nameWithType: Control.OnBindingContextChanged(EventArgs)\n  fullName: Control.OnBindingContextChanged(EventArgs)\n- uid: System.Windows.Forms.Control.OnCausesValidationChanged(System.EventArgs)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: OnCausesValidationChanged(EventArgs)\n  nameWithType: Control.OnCausesValidationChanged(EventArgs)\n  fullName: Control.OnCausesValidationChanged(EventArgs)\n- uid: System.Windows.Forms.Control.OnChangeUICues(System.Windows.Forms.UICuesEventArgs)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: OnChangeUICues(UICuesEventArgs)\n  nameWithType: Control.OnChangeUICues(UICuesEventArgs)\n  fullName: Control.OnChangeUICues(UICuesEventArgs)\n- uid: System.Windows.Forms.Control.OnClick(System.EventArgs)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: OnClick(EventArgs)\n  nameWithType: Control.OnClick(EventArgs)\n  fullName: Control.OnClick(EventArgs)\n- uid: System.Windows.Forms.Control.OnClientSizeChanged(System.EventArgs)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: OnClientSizeChanged(EventArgs)\n  nameWithType: Control.OnClientSizeChanged(EventArgs)\n  fullName: Control.OnClientSizeChanged(EventArgs)\n- uid: System.Windows.Forms.Control.OnContextMenuChanged(System.EventArgs)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: OnContextMenuChanged(EventArgs)\n  nameWithType: Control.OnContextMenuChanged(EventArgs)\n  fullName: Control.OnContextMenuChanged(EventArgs)\n- uid: System.Windows.Forms.Control.OnContextMenuStripChanged(System.EventArgs)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: OnContextMenuStripChanged(EventArgs)\n  nameWithType: Control.OnContextMenuStripChanged(EventArgs)\n  fullName: Control.OnContextMenuStripChanged(EventArgs)\n- uid: System.Windows.Forms.Control.OnControlAdded(System.Windows.Forms.ControlEventArgs)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: OnControlAdded(ControlEventArgs)\n  nameWithType: Control.OnControlAdded(ControlEventArgs)\n  fullName: Control.OnControlAdded(ControlEventArgs)\n- uid: System.Windows.Forms.Control.OnControlRemoved(System.Windows.Forms.ControlEventArgs)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: OnControlRemoved(ControlEventArgs)\n  nameWithType: Control.OnControlRemoved(ControlEventArgs)\n  fullName: Control.OnControlRemoved(ControlEventArgs)\n- uid: System.Windows.Forms.Control.OnCursorChanged(System.EventArgs)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: OnCursorChanged(EventArgs)\n  nameWithType: Control.OnCursorChanged(EventArgs)\n  fullName: Control.OnCursorChanged(EventArgs)\n- uid: System.Windows.Forms.Control.OnDockChanged(System.EventArgs)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: OnDockChanged(EventArgs)\n  nameWithType: Control.OnDockChanged(EventArgs)\n  fullName: Control.OnDockChanged(EventArgs)\n- uid: System.Windows.Forms.Control.OnDoubleClick(System.EventArgs)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: OnDoubleClick(EventArgs)\n  nameWithType: Control.OnDoubleClick(EventArgs)\n  fullName: Control.OnDoubleClick(EventArgs)\n- uid: System.Windows.Forms.Control.OnDpiChangedAfterParent(System.EventArgs)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: OnDpiChangedAfterParent(EventArgs)\n  nameWithType: Control.OnDpiChangedAfterParent(EventArgs)\n  fullName: Control.OnDpiChangedAfterParent(EventArgs)\n- uid: System.Windows.Forms.Control.OnDpiChangedBeforeParent(System.EventArgs)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: OnDpiChangedBeforeParent(EventArgs)\n  nameWithType: Control.OnDpiChangedBeforeParent(EventArgs)\n  fullName: Control.OnDpiChangedBeforeParent(EventArgs)\n- uid: System.Windows.Forms.Control.OnDragDrop(System.Windows.Forms.DragEventArgs)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: OnDragDrop(DragEventArgs)\n  nameWithType: Control.OnDragDrop(DragEventArgs)\n  fullName: Control.OnDragDrop(DragEventArgs)\n- uid: System.Windows.Forms.Control.OnDragEnter(System.Windows.Forms.DragEventArgs)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: OnDragEnter(DragEventArgs)\n  nameWithType: Control.OnDragEnter(DragEventArgs)\n  fullName: Control.OnDragEnter(DragEventArgs)\n- uid: System.Windows.Forms.Control.OnDragLeave(System.EventArgs)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: OnDragLeave(EventArgs)\n  nameWithType: Control.OnDragLeave(EventArgs)\n  fullName: Control.OnDragLeave(EventArgs)\n- uid: System.Windows.Forms.Control.OnDragOver(System.Windows.Forms.DragEventArgs)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: OnDragOver(DragEventArgs)\n  nameWithType: Control.OnDragOver(DragEventArgs)\n  fullName: Control.OnDragOver(DragEventArgs)\n- uid: System.Windows.Forms.Control.OnForeColorChanged(System.EventArgs)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: OnForeColorChanged(EventArgs)\n  nameWithType: Control.OnForeColorChanged(EventArgs)\n  fullName: Control.OnForeColorChanged(EventArgs)\n- uid: System.Windows.Forms.Control.OnGiveFeedback(System.Windows.Forms.GiveFeedbackEventArgs)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: OnGiveFeedback(GiveFeedbackEventArgs)\n  nameWithType: Control.OnGiveFeedback(GiveFeedbackEventArgs)\n  fullName: Control.OnGiveFeedback(GiveFeedbackEventArgs)\n- uid: System.Windows.Forms.Control.OnGotFocus(System.EventArgs)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: OnGotFocus(EventArgs)\n  nameWithType: Control.OnGotFocus(EventArgs)\n  fullName: Control.OnGotFocus(EventArgs)\n- uid: System.Windows.Forms.Control.OnHelpRequested(System.Windows.Forms.HelpEventArgs)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: OnHelpRequested(HelpEventArgs)\n  nameWithType: Control.OnHelpRequested(HelpEventArgs)\n  fullName: Control.OnHelpRequested(HelpEventArgs)\n- uid: System.Windows.Forms.Control.OnImeModeChanged(System.EventArgs)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: OnImeModeChanged(EventArgs)\n  nameWithType: Control.OnImeModeChanged(EventArgs)\n  fullName: Control.OnImeModeChanged(EventArgs)\n- uid: System.Windows.Forms.Control.OnInvalidated(System.Windows.Forms.InvalidateEventArgs)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: OnInvalidated(InvalidateEventArgs)\n  nameWithType: Control.OnInvalidated(InvalidateEventArgs)\n  fullName: Control.OnInvalidated(InvalidateEventArgs)\n- uid: System.Windows.Forms.Control.OnKeyDown(System.Windows.Forms.KeyEventArgs)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: OnKeyDown(KeyEventArgs)\n  nameWithType: Control.OnKeyDown(KeyEventArgs)\n  fullName: Control.OnKeyDown(KeyEventArgs)\n- uid: System.Windows.Forms.Control.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: OnKeyPress(KeyPressEventArgs)\n  nameWithType: Control.OnKeyPress(KeyPressEventArgs)\n  fullName: Control.OnKeyPress(KeyPressEventArgs)\n- uid: System.Windows.Forms.Control.OnKeyUp(System.Windows.Forms.KeyEventArgs)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: OnKeyUp(KeyEventArgs)\n  nameWithType: Control.OnKeyUp(KeyEventArgs)\n  fullName: Control.OnKeyUp(KeyEventArgs)\n- uid: System.Windows.Forms.Control.OnLeave(System.EventArgs)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: OnLeave(EventArgs)\n  nameWithType: Control.OnLeave(EventArgs)\n  fullName: Control.OnLeave(EventArgs)\n- uid: System.Windows.Forms.Control.OnLocationChanged(System.EventArgs)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: OnLocationChanged(EventArgs)\n  nameWithType: Control.OnLocationChanged(EventArgs)\n  fullName: Control.OnLocationChanged(EventArgs)\n- uid: System.Windows.Forms.Control.OnLostFocus(System.EventArgs)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: OnLostFocus(EventArgs)\n  nameWithType: Control.OnLostFocus(EventArgs)\n  fullName: Control.OnLostFocus(EventArgs)\n- uid: System.Windows.Forms.Control.OnMarginChanged(System.EventArgs)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: OnMarginChanged(EventArgs)\n  nameWithType: Control.OnMarginChanged(EventArgs)\n  fullName: Control.OnMarginChanged(EventArgs)\n- uid: System.Windows.Forms.Control.OnMouseCaptureChanged(System.EventArgs)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: OnMouseCaptureChanged(EventArgs)\n  nameWithType: Control.OnMouseCaptureChanged(EventArgs)\n  fullName: Control.OnMouseCaptureChanged(EventArgs)\n- uid: System.Windows.Forms.Control.OnMouseClick(System.Windows.Forms.MouseEventArgs)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: OnMouseClick(MouseEventArgs)\n  nameWithType: Control.OnMouseClick(MouseEventArgs)\n  fullName: Control.OnMouseClick(MouseEventArgs)\n- uid: System.Windows.Forms.Control.OnMouseDoubleClick(System.Windows.Forms.MouseEventArgs)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: OnMouseDoubleClick(MouseEventArgs)\n  nameWithType: Control.OnMouseDoubleClick(MouseEventArgs)\n  fullName: Control.OnMouseDoubleClick(MouseEventArgs)\n- uid: System.Windows.Forms.Control.OnMouseDown(System.Windows.Forms.MouseEventArgs)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: OnMouseDown(MouseEventArgs)\n  nameWithType: Control.OnMouseDown(MouseEventArgs)\n  fullName: Control.OnMouseDown(MouseEventArgs)\n- uid: System.Windows.Forms.Control.OnMouseEnter(System.EventArgs)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: OnMouseEnter(EventArgs)\n  nameWithType: Control.OnMouseEnter(EventArgs)\n  fullName: Control.OnMouseEnter(EventArgs)\n- uid: System.Windows.Forms.Control.OnMouseHover(System.EventArgs)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: OnMouseHover(EventArgs)\n  nameWithType: Control.OnMouseHover(EventArgs)\n  fullName: Control.OnMouseHover(EventArgs)\n- uid: System.Windows.Forms.Control.OnMouseLeave(System.EventArgs)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: OnMouseLeave(EventArgs)\n  nameWithType: Control.OnMouseLeave(EventArgs)\n  fullName: Control.OnMouseLeave(EventArgs)\n- uid: System.Windows.Forms.Control.OnMouseMove(System.Windows.Forms.MouseEventArgs)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: OnMouseMove(MouseEventArgs)\n  nameWithType: Control.OnMouseMove(MouseEventArgs)\n  fullName: Control.OnMouseMove(MouseEventArgs)\n- uid: System.Windows.Forms.Control.OnMouseUp(System.Windows.Forms.MouseEventArgs)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: OnMouseUp(MouseEventArgs)\n  nameWithType: Control.OnMouseUp(MouseEventArgs)\n  fullName: Control.OnMouseUp(MouseEventArgs)\n- uid: System.Windows.Forms.ScrollableControl.OnMouseWheel(System.Windows.Forms.MouseEventArgs)\n  parent: System.Windows.Forms.ScrollableControl\n  isExternal: false\n  name: OnMouseWheel(MouseEventArgs)\n  nameWithType: ScrollableControl.OnMouseWheel(MouseEventArgs)\n  fullName: ScrollableControl.OnMouseWheel(MouseEventArgs)\n- uid: System.Windows.Forms.Control.OnMove(System.EventArgs)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: OnMove(EventArgs)\n  nameWithType: Control.OnMove(EventArgs)\n  fullName: Control.OnMove(EventArgs)\n- uid: System.Windows.Forms.Control.OnNotifyMessage(System.Windows.Forms.Message)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: OnNotifyMessage(Message)\n  nameWithType: Control.OnNotifyMessage(Message)\n  fullName: Control.OnNotifyMessage(Message)\n- uid: System.Windows.Forms.ScrollableControl.OnPaddingChanged(System.EventArgs)\n  parent: System.Windows.Forms.ScrollableControl\n  isExternal: false\n  name: OnPaddingChanged(EventArgs)\n  nameWithType: ScrollableControl.OnPaddingChanged(EventArgs)\n  fullName: ScrollableControl.OnPaddingChanged(EventArgs)\n- uid: System.Windows.Forms.ScrollableControl.OnPaintBackground(System.Windows.Forms.PaintEventArgs)\n  parent: System.Windows.Forms.ScrollableControl\n  isExternal: false\n  name: OnPaintBackground(PaintEventArgs)\n  nameWithType: ScrollableControl.OnPaintBackground(PaintEventArgs)\n  fullName: ScrollableControl.OnPaintBackground(PaintEventArgs)\n- uid: System.Windows.Forms.Control.OnParentBackColorChanged(System.EventArgs)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: OnParentBackColorChanged(EventArgs)\n  nameWithType: Control.OnParentBackColorChanged(EventArgs)\n  fullName: Control.OnParentBackColorChanged(EventArgs)\n- uid: System.Windows.Forms.Control.OnParentBackgroundImageChanged(System.EventArgs)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: OnParentBackgroundImageChanged(EventArgs)\n  nameWithType: Control.OnParentBackgroundImageChanged(EventArgs)\n  fullName: Control.OnParentBackgroundImageChanged(EventArgs)\n- uid: System.Windows.Forms.Control.OnParentBindingContextChanged(System.EventArgs)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: OnParentBindingContextChanged(EventArgs)\n  nameWithType: Control.OnParentBindingContextChanged(EventArgs)\n  fullName: Control.OnParentBindingContextChanged(EventArgs)\n- uid: System.Windows.Forms.ContainerControl.OnParentChanged(System.EventArgs)\n  parent: System.Windows.Forms.ContainerControl\n  isExternal: false\n  name: OnParentChanged(EventArgs)\n  nameWithType: ContainerControl.OnParentChanged(EventArgs)\n  fullName: ContainerControl.OnParentChanged(EventArgs)\n- uid: System.Windows.Forms.Control.OnParentCursorChanged(System.EventArgs)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: OnParentCursorChanged(EventArgs)\n  nameWithType: Control.OnParentCursorChanged(EventArgs)\n  fullName: Control.OnParentCursorChanged(EventArgs)\n- uid: System.Windows.Forms.Control.OnParentEnabledChanged(System.EventArgs)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: OnParentEnabledChanged(EventArgs)\n  nameWithType: Control.OnParentEnabledChanged(EventArgs)\n  fullName: Control.OnParentEnabledChanged(EventArgs)\n- uid: System.Windows.Forms.Control.OnParentFontChanged(System.EventArgs)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: OnParentFontChanged(EventArgs)\n  nameWithType: Control.OnParentFontChanged(EventArgs)\n  fullName: Control.OnParentFontChanged(EventArgs)\n- uid: System.Windows.Forms.Control.OnParentForeColorChanged(System.EventArgs)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: OnParentForeColorChanged(EventArgs)\n  nameWithType: Control.OnParentForeColorChanged(EventArgs)\n  fullName: Control.OnParentForeColorChanged(EventArgs)\n- uid: System.Windows.Forms.Control.OnParentRightToLeftChanged(System.EventArgs)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: OnParentRightToLeftChanged(EventArgs)\n  nameWithType: Control.OnParentRightToLeftChanged(EventArgs)\n  fullName: Control.OnParentRightToLeftChanged(EventArgs)\n- uid: System.Windows.Forms.Control.OnParentVisibleChanged(System.EventArgs)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: OnParentVisibleChanged(EventArgs)\n  nameWithType: Control.OnParentVisibleChanged(EventArgs)\n  fullName: Control.OnParentVisibleChanged(EventArgs)\n- uid: System.Windows.Forms.Control.OnPreviewKeyDown(System.Windows.Forms.PreviewKeyDownEventArgs)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: OnPreviewKeyDown(PreviewKeyDownEventArgs)\n  nameWithType: Control.OnPreviewKeyDown(PreviewKeyDownEventArgs)\n  fullName: Control.OnPreviewKeyDown(PreviewKeyDownEventArgs)\n- uid: System.Windows.Forms.Control.OnPrint(System.Windows.Forms.PaintEventArgs)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: OnPrint(PaintEventArgs)\n  nameWithType: Control.OnPrint(PaintEventArgs)\n  fullName: Control.OnPrint(PaintEventArgs)\n- uid: System.Windows.Forms.Control.OnQueryContinueDrag(System.Windows.Forms.QueryContinueDragEventArgs)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: OnQueryContinueDrag(QueryContinueDragEventArgs)\n  nameWithType: Control.OnQueryContinueDrag(QueryContinueDragEventArgs)\n  fullName: Control.OnQueryContinueDrag(QueryContinueDragEventArgs)\n- uid: System.Windows.Forms.Control.OnRegionChanged(System.EventArgs)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: OnRegionChanged(EventArgs)\n  nameWithType: Control.OnRegionChanged(EventArgs)\n  fullName: Control.OnRegionChanged(EventArgs)\n- uid: System.Windows.Forms.ScrollableControl.OnRightToLeftChanged(System.EventArgs)\n  parent: System.Windows.Forms.ScrollableControl\n  isExternal: false\n  name: OnRightToLeftChanged(EventArgs)\n  nameWithType: ScrollableControl.OnRightToLeftChanged(EventArgs)\n  fullName: ScrollableControl.OnRightToLeftChanged(EventArgs)\n- uid: System.Windows.Forms.Control.OnSizeChanged(System.EventArgs)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: OnSizeChanged(EventArgs)\n  nameWithType: Control.OnSizeChanged(EventArgs)\n  fullName: Control.OnSizeChanged(EventArgs)\n- uid: System.Windows.Forms.Control.OnSystemColorsChanged(System.EventArgs)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: OnSystemColorsChanged(EventArgs)\n  nameWithType: Control.OnSystemColorsChanged(EventArgs)\n  fullName: Control.OnSystemColorsChanged(EventArgs)\n- uid: System.Windows.Forms.Control.OnTabIndexChanged(System.EventArgs)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: OnTabIndexChanged(EventArgs)\n  nameWithType: Control.OnTabIndexChanged(EventArgs)\n  fullName: Control.OnTabIndexChanged(EventArgs)\n- uid: System.Windows.Forms.Control.OnTabStopChanged(System.EventArgs)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: OnTabStopChanged(EventArgs)\n  nameWithType: Control.OnTabStopChanged(EventArgs)\n  fullName: Control.OnTabStopChanged(EventArgs)\n- uid: System.Windows.Forms.Control.OnValidated(System.EventArgs)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: OnValidated(EventArgs)\n  nameWithType: Control.OnValidated(EventArgs)\n  fullName: Control.OnValidated(EventArgs)\n- uid: System.Windows.Forms.Control.OnValidating(System.ComponentModel.CancelEventArgs)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: OnValidating(CancelEventArgs)\n  nameWithType: Control.OnValidating(CancelEventArgs)\n  fullName: Control.OnValidating(CancelEventArgs)\n- uid: System.Windows.Forms.Control.Padding\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: Padding\n  nameWithType: Control.Padding\n  fullName: Control.Padding\n- uid: System.Windows.Forms.Control.PaddingChanged\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: PaddingChanged\n  nameWithType: Control.PaddingChanged\n  fullName: Control.PaddingChanged\n- uid: System.Windows.Forms.Control.Paint\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: Paint\n  nameWithType: Control.Paint\n  fullName: Control.Paint\n- uid: System.Windows.Forms.Control.Parent\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: Parent\n  nameWithType: Control.Parent\n  fullName: Control.Parent\n- uid: System.Windows.Forms.Control.ParentChanged\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: ParentChanged\n  nameWithType: Control.ParentChanged\n  fullName: Control.ParentChanged\n- uid: System.Windows.Forms.Control.PerformLayout\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: PerformLayout()\n  nameWithType: Control.PerformLayout()\n  fullName: Control.PerformLayout()\n- uid: System.Windows.Forms.Control.PerformLayout(System.Windows.Forms.Control,System.String)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: PerformLayout(Control, String)\n  nameWithType: Control.PerformLayout(Control, String)\n  fullName: Control.PerformLayout(Control, String)\n- uid: System.Windows.Forms.Control.PointToClient(System.Drawing.Point)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: PointToClient(Point)\n  nameWithType: Control.PointToClient(Point)\n  fullName: Control.PointToClient(Point)\n- uid: System.Windows.Forms.Control.PointToScreen(System.Drawing.Point)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: PointToScreen(Point)\n  nameWithType: Control.PointToScreen(Point)\n  fullName: Control.PointToScreen(Point)\n- uid: System.Windows.Forms.Control.PreferredSize\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: PreferredSize\n  nameWithType: Control.PreferredSize\n  fullName: Control.PreferredSize\n- uid: System.Windows.Forms.Control.PreProcessControlMessage(System.Windows.Forms.Message@)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: PreProcessControlMessage(Message)\n  nameWithType: Control.PreProcessControlMessage(Message)\n  fullName: Control.PreProcessControlMessage(Message)\n- uid: System.Windows.Forms.Control.PreProcessMessage(System.Windows.Forms.Message@)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: PreProcessMessage(Message)\n  nameWithType: Control.PreProcessMessage(Message)\n  fullName: Control.PreProcessMessage(Message)\n- uid: System.Windows.Forms.Control.PreviewKeyDown\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: PreviewKeyDown\n  nameWithType: Control.PreviewKeyDown\n  fullName: Control.PreviewKeyDown\n- uid: System.Windows.Forms.Control.ProcessKeyEventArgs(System.Windows.Forms.Message@)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: ProcessKeyEventArgs(Message)\n  nameWithType: Control.ProcessKeyEventArgs(Message)\n  fullName: Control.ProcessKeyEventArgs(Message)\n- uid: System.Windows.Forms.Control.ProcessKeyMessage(System.Windows.Forms.Message@)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: ProcessKeyMessage(Message)\n  nameWithType: Control.ProcessKeyMessage(Message)\n  fullName: Control.ProcessKeyMessage(Message)\n- uid: System.Windows.Forms.Control.ProductName\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: ProductName\n  nameWithType: Control.ProductName\n  fullName: Control.ProductName\n- uid: System.Windows.Forms.Control.ProductVersion\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: ProductVersion\n  nameWithType: Control.ProductVersion\n  fullName: Control.ProductVersion\n- uid: System.Windows.Forms.Control.PropagatingImeMode\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: PropagatingImeMode\n  nameWithType: Control.PropagatingImeMode\n  fullName: Control.PropagatingImeMode\n- uid: System.Windows.Forms.Control.QueryAccessibilityHelp\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: QueryAccessibilityHelp\n  nameWithType: Control.QueryAccessibilityHelp\n  fullName: Control.QueryAccessibilityHelp\n- uid: System.Windows.Forms.Control.QueryContinueDrag\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: QueryContinueDrag\n  nameWithType: Control.QueryContinueDrag\n  fullName: Control.QueryContinueDrag\n- uid: System.Windows.Forms.Control.RaiseDragEvent(System.Object,System.Windows.Forms.DragEventArgs)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: RaiseDragEvent(Object, DragEventArgs)\n  nameWithType: Control.RaiseDragEvent(Object, DragEventArgs)\n  fullName: Control.RaiseDragEvent(Object, DragEventArgs)\n- uid: System.Windows.Forms.Control.RaiseKeyEvent(System.Object,System.Windows.Forms.KeyEventArgs)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: RaiseKeyEvent(Object, KeyEventArgs)\n  nameWithType: Control.RaiseKeyEvent(Object, KeyEventArgs)\n  fullName: Control.RaiseKeyEvent(Object, KeyEventArgs)\n- uid: System.Windows.Forms.Control.RaiseMouseEvent(System.Object,System.Windows.Forms.MouseEventArgs)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: RaiseMouseEvent(Object, MouseEventArgs)\n  nameWithType: Control.RaiseMouseEvent(Object, MouseEventArgs)\n  fullName: Control.RaiseMouseEvent(Object, MouseEventArgs)\n- uid: System.Windows.Forms.Control.RaisePaintEvent(System.Object,System.Windows.Forms.PaintEventArgs)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: RaisePaintEvent(Object, PaintEventArgs)\n  nameWithType: Control.RaisePaintEvent(Object, PaintEventArgs)\n  fullName: Control.RaisePaintEvent(Object, PaintEventArgs)\n- uid: System.Windows.Forms.Control.RecreateHandle\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: RecreateHandle()\n  nameWithType: Control.RecreateHandle()\n  fullName: Control.RecreateHandle()\n- uid: System.Windows.Forms.Control.RecreatingHandle\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: RecreatingHandle\n  nameWithType: Control.RecreatingHandle\n  fullName: Control.RecreatingHandle\n- uid: System.Windows.Forms.Control.RectangleToClient(System.Drawing.Rectangle)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: RectangleToClient(Rectangle)\n  nameWithType: Control.RectangleToClient(Rectangle)\n  fullName: Control.RectangleToClient(Rectangle)\n- uid: System.Windows.Forms.Control.RectangleToScreen(System.Drawing.Rectangle)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: RectangleToScreen(Rectangle)\n  nameWithType: Control.RectangleToScreen(Rectangle)\n  fullName: Control.RectangleToScreen(Rectangle)\n- uid: System.Windows.Forms.Control.ReflectMessage(System.IntPtr,System.Windows.Forms.Message@)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: ReflectMessage(IntPtr, Message)\n  nameWithType: Control.ReflectMessage(IntPtr, Message)\n  fullName: Control.ReflectMessage(IntPtr, Message)\n- uid: System.Windows.Forms.Control.Refresh\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: Refresh()\n  nameWithType: Control.Refresh()\n  fullName: Control.Refresh()\n- uid: System.Windows.Forms.Control.Region\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: Region\n  nameWithType: Control.Region\n  fullName: Control.Region\n- uid: System.Windows.Forms.Control.RegionChanged\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: RegionChanged\n  nameWithType: Control.RegionChanged\n  fullName: Control.RegionChanged\n- uid: System.Windows.Forms.Control.RenderRightToLeft\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: RenderRightToLeft\n  nameWithType: Control.RenderRightToLeft\n  fullName: Control.RenderRightToLeft\n- uid: System.Windows.Forms.Control.RescaleConstantsForDpi(System.Int32,System.Int32)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: RescaleConstantsForDpi(Int32, Int32)\n  nameWithType: Control.RescaleConstantsForDpi(Int32, Int32)\n  fullName: Control.RescaleConstantsForDpi(Int32, Int32)\n- uid: System.Windows.Forms.Control.ResetBackColor\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: ResetBackColor()\n  nameWithType: Control.ResetBackColor()\n  fullName: Control.ResetBackColor()\n- uid: System.Windows.Forms.Control.ResetBindings\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: ResetBindings()\n  nameWithType: Control.ResetBindings()\n  fullName: Control.ResetBindings()\n- uid: System.Windows.Forms.Control.ResetCursor\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: ResetCursor()\n  nameWithType: Control.ResetCursor()\n  fullName: Control.ResetCursor()\n- uid: System.Windows.Forms.Control.ResetFont\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: ResetFont()\n  nameWithType: Control.ResetFont()\n  fullName: Control.ResetFont()\n- uid: System.Windows.Forms.Control.ResetForeColor\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: ResetForeColor()\n  nameWithType: Control.ResetForeColor()\n  fullName: Control.ResetForeColor()\n- uid: System.Windows.Forms.Control.ResetImeMode\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: ResetImeMode()\n  nameWithType: Control.ResetImeMode()\n  fullName: Control.ResetImeMode()\n- uid: System.Windows.Forms.Control.ResetMouseEventArgs\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: ResetMouseEventArgs()\n  nameWithType: Control.ResetMouseEventArgs()\n  fullName: Control.ResetMouseEventArgs()\n- uid: System.Windows.Forms.Control.ResetRightToLeft\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: ResetRightToLeft()\n  nameWithType: Control.ResetRightToLeft()\n  fullName: Control.ResetRightToLeft()\n- uid: System.Windows.Forms.Control.ResetText\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: ResetText()\n  nameWithType: Control.ResetText()\n  fullName: Control.ResetText()\n- uid: System.Windows.Forms.Control.Resize\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: Resize\n  nameWithType: Control.Resize\n  fullName: Control.Resize\n- uid: System.Windows.Forms.Control.ResizeRedraw\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: ResizeRedraw\n  nameWithType: Control.ResizeRedraw\n  fullName: Control.ResizeRedraw\n- uid: System.Windows.Forms.Control.ResumeLayout\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: ResumeLayout()\n  nameWithType: Control.ResumeLayout()\n  fullName: Control.ResumeLayout()\n- uid: System.Windows.Forms.Control.ResumeLayout(System.Boolean)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: ResumeLayout(Boolean)\n  nameWithType: Control.ResumeLayout(Boolean)\n  fullName: Control.ResumeLayout(Boolean)\n- uid: System.Windows.Forms.Control.Right\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: Right\n  nameWithType: Control.Right\n  fullName: Control.Right\n- uid: System.Windows.Forms.Control.RightToLeft\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: RightToLeft\n  nameWithType: Control.RightToLeft\n  fullName: Control.RightToLeft\n- uid: System.Windows.Forms.Control.RightToLeftChanged\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: RightToLeftChanged\n  nameWithType: Control.RightToLeftChanged\n  fullName: Control.RightToLeftChanged\n- uid: System.Windows.Forms.Control.RtlTranslateAlignment(System.Windows.Forms.LeftRightAlignment)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: RtlTranslateAlignment(LeftRightAlignment)\n  nameWithType: Control.RtlTranslateAlignment(LeftRightAlignment)\n  fullName: Control.RtlTranslateAlignment(LeftRightAlignment)\n- uid: System.Windows.Forms.Control.RtlTranslateAlignment(System.Windows.Forms.HorizontalAlignment)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: RtlTranslateAlignment(HorizontalAlignment)\n  nameWithType: Control.RtlTranslateAlignment(HorizontalAlignment)\n  fullName: Control.RtlTranslateAlignment(HorizontalAlignment)\n- uid: System.Windows.Forms.Control.RtlTranslateAlignment(System.Drawing.ContentAlignment)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: RtlTranslateAlignment(ContentAlignment)\n  nameWithType: Control.RtlTranslateAlignment(ContentAlignment)\n  fullName: Control.RtlTranslateAlignment(ContentAlignment)\n- uid: System.Windows.Forms.Control.RtlTranslateContent(System.Drawing.ContentAlignment)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: RtlTranslateContent(ContentAlignment)\n  nameWithType: Control.RtlTranslateContent(ContentAlignment)\n  fullName: Control.RtlTranslateContent(ContentAlignment)\n- uid: System.Windows.Forms.Control.RtlTranslateHorizontal(System.Windows.Forms.HorizontalAlignment)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: RtlTranslateHorizontal(HorizontalAlignment)\n  nameWithType: Control.RtlTranslateHorizontal(HorizontalAlignment)\n  fullName: Control.RtlTranslateHorizontal(HorizontalAlignment)\n- uid: System.Windows.Forms.Control.RtlTranslateLeftRight(System.Windows.Forms.LeftRightAlignment)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: RtlTranslateLeftRight(LeftRightAlignment)\n  nameWithType: Control.RtlTranslateLeftRight(LeftRightAlignment)\n  fullName: Control.RtlTranslateLeftRight(LeftRightAlignment)\n- uid: System.Windows.Forms.Control.Scale(System.Drawing.SizeF)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: Scale(SizeF)\n  nameWithType: Control.Scale(SizeF)\n  fullName: Control.Scale(SizeF)\n- uid: System.Windows.Forms.Control.Scale(System.Single)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: Scale(Single)\n  nameWithType: Control.Scale(Single)\n  fullName: Control.Scale(Single)\n- uid: System.Windows.Forms.Control.Scale(System.Single,System.Single)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: Scale(Single, Single)\n  nameWithType: Control.Scale(Single, Single)\n  fullName: Control.Scale(Single, Single)\n- uid: System.Windows.Forms.Control.ScaleBitmapLogicalToDevice(System.Drawing.Bitmap@)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: ScaleBitmapLogicalToDevice(Bitmap)\n  nameWithType: Control.ScaleBitmapLogicalToDevice(Bitmap)\n  fullName: Control.ScaleBitmapLogicalToDevice(Bitmap)\n- uid: System.Windows.Forms.Control.ScaleChildren\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: ScaleChildren\n  nameWithType: Control.ScaleChildren\n  fullName: Control.ScaleChildren\n- uid: System.Windows.Forms.Control.Select\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: Select()\n  nameWithType: Control.Select()\n  fullName: Control.Select()\n- uid: System.Windows.Forms.Control.SelectNextControl(System.Windows.Forms.Control,System.Boolean,System.Boolean,System.Boolean,System.Boolean)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: SelectNextControl(Control, Boolean, Boolean, Boolean, Boolean)\n  nameWithType: Control.SelectNextControl(Control, Boolean, Boolean, Boolean, Boolean)\n  fullName: Control.SelectNextControl(Control, Boolean, Boolean, Boolean, Boolean)\n- uid: System.Windows.Forms.Control.SendToBack\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: SendToBack()\n  nameWithType: Control.SendToBack()\n  fullName: Control.SendToBack()\n- uid: System.Windows.Forms.Control.SetAutoSizeMode(System.Windows.Forms.AutoSizeMode)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: SetAutoSizeMode(AutoSizeMode)\n  nameWithType: Control.SetAutoSizeMode(AutoSizeMode)\n  fullName: Control.SetAutoSizeMode(AutoSizeMode)\n- uid: System.Windows.Forms.Control.SetBounds(System.Int32,System.Int32,System.Int32,System.Int32)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: SetBounds(Int32, Int32, Int32, Int32)\n  nameWithType: Control.SetBounds(Int32, Int32, Int32, Int32)\n  fullName: Control.SetBounds(Int32, Int32, Int32, Int32)\n- uid: System.Windows.Forms.Control.SetBounds(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: SetBounds(Int32, Int32, Int32, Int32, BoundsSpecified)\n  nameWithType: Control.SetBounds(Int32, Int32, Int32, Int32, BoundsSpecified)\n  fullName: Control.SetBounds(Int32, Int32, Int32, Int32, BoundsSpecified)\n- uid: System.Windows.Forms.Control.SetStyle(System.Windows.Forms.ControlStyles,System.Boolean)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: SetStyle(ControlStyles, Boolean)\n  nameWithType: Control.SetStyle(ControlStyles, Boolean)\n  fullName: Control.SetStyle(ControlStyles, Boolean)\n- uid: System.Windows.Forms.Control.SetTopLevel(System.Boolean)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: SetTopLevel(Boolean)\n  nameWithType: Control.SetTopLevel(Boolean)\n  fullName: Control.SetTopLevel(Boolean)\n- uid: System.Windows.Forms.Control.Show\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: Show()\n  nameWithType: Control.Show()\n  fullName: Control.Show()\n- uid: System.Windows.Forms.Control.ShowFocusCues\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: ShowFocusCues\n  nameWithType: Control.ShowFocusCues\n  fullName: Control.ShowFocusCues\n- uid: System.Windows.Forms.Control.ShowKeyboardCues\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: ShowKeyboardCues\n  nameWithType: Control.ShowKeyboardCues\n  fullName: Control.ShowKeyboardCues\n- uid: System.Windows.Forms.Control.SizeChanged\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: SizeChanged\n  nameWithType: Control.SizeChanged\n  fullName: Control.SizeChanged\n- uid: System.Windows.Forms.Control.SizeFromClientSize(System.Drawing.Size)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: SizeFromClientSize(Size)\n  nameWithType: Control.SizeFromClientSize(Size)\n  fullName: Control.SizeFromClientSize(Size)\n- uid: System.Windows.Forms.Control.StyleChanged\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: StyleChanged\n  nameWithType: Control.StyleChanged\n  fullName: Control.StyleChanged\n- uid: System.Windows.Forms.Control.SuspendLayout\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: SuspendLayout()\n  nameWithType: Control.SuspendLayout()\n  fullName: Control.SuspendLayout()\n- uid: System.Windows.Forms.Control.SystemColorsChanged\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: SystemColorsChanged\n  nameWithType: Control.SystemColorsChanged\n  fullName: Control.SystemColorsChanged\n- uid: System.Windows.Forms.Control.Tag\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: Tag\n  nameWithType: Control.Tag\n  fullName: Control.Tag\n- uid: System.Windows.Forms.Control.TextChanged\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: TextChanged\n  nameWithType: Control.TextChanged\n  fullName: Control.TextChanged\n- uid: System.Windows.Forms.Control.Top\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: Top\n  nameWithType: Control.Top\n  fullName: Control.Top\n- uid: System.Windows.Forms.Control.TopLevelControl\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: TopLevelControl\n  nameWithType: Control.TopLevelControl\n  fullName: Control.TopLevelControl\n- uid: System.Windows.Forms.Control.Update\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: Update()\n  nameWithType: Control.Update()\n  fullName: Control.Update()\n- uid: System.Windows.Forms.Control.UpdateBounds(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: UpdateBounds(Int32, Int32, Int32, Int32, Int32, Int32)\n  nameWithType: Control.UpdateBounds(Int32, Int32, Int32, Int32, Int32, Int32)\n  fullName: Control.UpdateBounds(Int32, Int32, Int32, Int32, Int32, Int32)\n- uid: System.Windows.Forms.Control.UpdateBounds(System.Int32,System.Int32,System.Int32,System.Int32)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: UpdateBounds(Int32, Int32, Int32, Int32)\n  nameWithType: Control.UpdateBounds(Int32, Int32, Int32, Int32)\n  fullName: Control.UpdateBounds(Int32, Int32, Int32, Int32)\n- uid: System.Windows.Forms.Control.UpdateBounds\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: UpdateBounds()\n  nameWithType: Control.UpdateBounds()\n  fullName: Control.UpdateBounds()\n- uid: System.Windows.Forms.Control.UpdateStyles\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: UpdateStyles()\n  nameWithType: Control.UpdateStyles()\n  fullName: Control.UpdateStyles()\n- uid: System.Windows.Forms.Control.UpdateZOrder\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: UpdateZOrder()\n  nameWithType: Control.UpdateZOrder()\n  fullName: Control.UpdateZOrder()\n- uid: System.Windows.Forms.Control.UseWaitCursor\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: UseWaitCursor\n  nameWithType: Control.UseWaitCursor\n  fullName: Control.UseWaitCursor\n- uid: System.Windows.Forms.Control.Validated\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: Validated\n  nameWithType: Control.Validated\n  fullName: Control.Validated\n- uid: System.Windows.Forms.Control.Validating\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: Validating\n  nameWithType: Control.Validating\n  fullName: Control.Validating\n- uid: System.Windows.Forms.Control.Visible\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: Visible\n  nameWithType: Control.Visible\n  fullName: Control.Visible\n- uid: System.Windows.Forms.Control.VisibleChanged\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: VisibleChanged\n  nameWithType: Control.VisibleChanged\n  fullName: Control.VisibleChanged\n- uid: System.Windows.Forms.Control.Width\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: Width\n  nameWithType: Control.Width\n  fullName: Control.Width\n- uid: System.Windows.Forms.Control.WindowTarget\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: WindowTarget\n  nameWithType: Control.WindowTarget\n  fullName: Control.WindowTarget\n- uid: System.Windows.Forms.Control.System#Windows#Forms#IDropTarget#OnDragDrop(System.Windows.Forms.DragEventArgs)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: IDropTarget.OnDragDrop(DragEventArgs)\n  nameWithType: Control.IDropTarget.OnDragDrop(DragEventArgs)\n  fullName: Control.IDropTarget.OnDragDrop(DragEventArgs)\n- uid: System.Windows.Forms.Control.System#Windows#Forms#IDropTarget#OnDragEnter(System.Windows.Forms.DragEventArgs)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: IDropTarget.OnDragEnter(DragEventArgs)\n  nameWithType: Control.IDropTarget.OnDragEnter(DragEventArgs)\n  fullName: Control.IDropTarget.OnDragEnter(DragEventArgs)\n- uid: System.Windows.Forms.Control.System#Windows#Forms#IDropTarget#OnDragLeave(System.EventArgs)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: IDropTarget.OnDragLeave(EventArgs)\n  nameWithType: Control.IDropTarget.OnDragLeave(EventArgs)\n  fullName: Control.IDropTarget.OnDragLeave(EventArgs)\n- uid: System.Windows.Forms.Control.System#Windows#Forms#IDropTarget#OnDragOver(System.Windows.Forms.DragEventArgs)\n  parent: System.Windows.Forms.Control\n  isExternal: false\n  name: IDropTarget.OnDragOver(DragEventArgs)\n  nameWithType: Control.IDropTarget.OnDragOver(DragEventArgs)\n  fullName: Control.IDropTarget.OnDragOver(DragEventArgs)\n- uid: System.Windows.Forms.ScrollableControl.AutoScrollMargin\n  parent: System.Windows.Forms.ScrollableControl\n  isExternal: false\n  name: AutoScrollMargin\n  nameWithType: ScrollableControl.AutoScrollMargin\n  fullName: ScrollableControl.AutoScrollMargin\n- uid: System.Windows.Forms.ScrollableControl.AutoScrollMinSize\n  parent: System.Windows.Forms.ScrollableControl\n  isExternal: false\n  name: AutoScrollMinSize\n  nameWithType: ScrollableControl.AutoScrollMinSize\n  fullName: ScrollableControl.AutoScrollMinSize\n- uid: System.Windows.Forms.ScrollableControl.AutoScrollPosition\n  parent: System.Windows.Forms.ScrollableControl\n  isExternal: false\n  name: AutoScrollPosition\n  nameWithType: ScrollableControl.AutoScrollPosition\n  fullName: ScrollableControl.AutoScrollPosition\n- uid: System.Windows.Forms.ScrollableControl.DockPadding\n  parent: System.Windows.Forms.ScrollableControl\n  isExternal: false\n  name: DockPadding\n  nameWithType: ScrollableControl.DockPadding\n  fullName: ScrollableControl.DockPadding\n- uid: System.Windows.Forms.ScrollableControl.GetScrollState(System.Int32)\n  parent: System.Windows.Forms.ScrollableControl\n  isExternal: false\n  name: GetScrollState(Int32)\n  nameWithType: ScrollableControl.GetScrollState(Int32)\n  fullName: ScrollableControl.GetScrollState(Int32)\n- uid: System.Windows.Forms.ScrollableControl.HorizontalScroll\n  parent: System.Windows.Forms.ScrollableControl\n  isExternal: false\n  name: HorizontalScroll\n  nameWithType: ScrollableControl.HorizontalScroll\n  fullName: ScrollableControl.HorizontalScroll\n- uid: System.Windows.Forms.ScrollableControl.HScroll\n  parent: System.Windows.Forms.ScrollableControl\n  isExternal: false\n  name: HScroll\n  nameWithType: ScrollableControl.HScroll\n  fullName: ScrollableControl.HScroll\n- uid: System.Windows.Forms.ScrollableControl.OnScroll(System.Windows.Forms.ScrollEventArgs)\n  parent: System.Windows.Forms.ScrollableControl\n  isExternal: false\n  name: OnScroll(ScrollEventArgs)\n  nameWithType: ScrollableControl.OnScroll(ScrollEventArgs)\n  fullName: ScrollableControl.OnScroll(ScrollEventArgs)\n- uid: System.Windows.Forms.ScrollableControl.Scroll\n  parent: System.Windows.Forms.ScrollableControl\n  isExternal: false\n  name: Scroll\n  nameWithType: ScrollableControl.Scroll\n  fullName: ScrollableControl.Scroll\n- uid: System.Windows.Forms.ScrollableControl.ScrollControlIntoView(System.Windows.Forms.Control)\n  parent: System.Windows.Forms.ScrollableControl\n  isExternal: false\n  name: ScrollControlIntoView(Control)\n  nameWithType: ScrollableControl.ScrollControlIntoView(Control)\n  fullName: ScrollableControl.ScrollControlIntoView(Control)\n- uid: System.Windows.Forms.ScrollableControl.ScrollStateAutoScrolling\n  parent: System.Windows.Forms.ScrollableControl\n  isExternal: false\n  name: ScrollStateAutoScrolling\n  nameWithType: ScrollableControl.ScrollStateAutoScrolling\n  fullName: ScrollableControl.ScrollStateAutoScrolling\n- uid: System.Windows.Forms.ScrollableControl.ScrollStateFullDrag\n  parent: System.Windows.Forms.ScrollableControl\n  isExternal: false\n  name: ScrollStateFullDrag\n  nameWithType: ScrollableControl.ScrollStateFullDrag\n  fullName: ScrollableControl.ScrollStateFullDrag\n- uid: System.Windows.Forms.ScrollableControl.ScrollStateHScrollVisible\n  parent: System.Windows.Forms.ScrollableControl\n  isExternal: false\n  name: ScrollStateHScrollVisible\n  nameWithType: ScrollableControl.ScrollStateHScrollVisible\n  fullName: ScrollableControl.ScrollStateHScrollVisible\n- uid: System.Windows.Forms.ScrollableControl.ScrollStateUserHasScrolled\n  parent: System.Windows.Forms.ScrollableControl\n  isExternal: false\n  name: ScrollStateUserHasScrolled\n  nameWithType: ScrollableControl.ScrollStateUserHasScrolled\n  fullName: ScrollableControl.ScrollStateUserHasScrolled\n- uid: System.Windows.Forms.ScrollableControl.ScrollStateVScrollVisible\n  parent: System.Windows.Forms.ScrollableControl\n  isExternal: false\n  name: ScrollStateVScrollVisible\n  nameWithType: ScrollableControl.ScrollStateVScrollVisible\n  fullName: ScrollableControl.ScrollStateVScrollVisible\n- uid: System.Windows.Forms.ScrollableControl.ScrollToControl(System.Windows.Forms.Control)\n  parent: System.Windows.Forms.ScrollableControl\n  isExternal: false\n  name: ScrollToControl(Control)\n  nameWithType: ScrollableControl.ScrollToControl(Control)\n  fullName: ScrollableControl.ScrollToControl(Control)\n- uid: System.Windows.Forms.ScrollableControl.SetAutoScrollMargin(System.Int32,System.Int32)\n  parent: System.Windows.Forms.ScrollableControl\n  isExternal: false\n  name: SetAutoScrollMargin(Int32, Int32)\n  nameWithType: ScrollableControl.SetAutoScrollMargin(Int32, Int32)\n  fullName: ScrollableControl.SetAutoScrollMargin(Int32, Int32)\n- uid: System.Windows.Forms.ScrollableControl.SetDisplayRectLocation(System.Int32,System.Int32)\n  parent: System.Windows.Forms.ScrollableControl\n  isExternal: false\n  name: SetDisplayRectLocation(Int32, Int32)\n  nameWithType: ScrollableControl.SetDisplayRectLocation(Int32, Int32)\n  fullName: ScrollableControl.SetDisplayRectLocation(Int32, Int32)\n- uid: System.Windows.Forms.ScrollableControl.SetScrollState(System.Int32,System.Boolean)\n  parent: System.Windows.Forms.ScrollableControl\n  isExternal: false\n  name: SetScrollState(Int32, Boolean)\n  nameWithType: ScrollableControl.SetScrollState(Int32, Boolean)\n  fullName: ScrollableControl.SetScrollState(Int32, Boolean)\n- uid: System.Windows.Forms.ScrollableControl.VerticalScroll\n  parent: System.Windows.Forms.ScrollableControl\n  isExternal: false\n  name: VerticalScroll\n  nameWithType: ScrollableControl.VerticalScroll\n  fullName: ScrollableControl.VerticalScroll\n- uid: System.Windows.Forms.ScrollableControl.VScroll\n  parent: System.Windows.Forms.ScrollableControl\n  isExternal: false\n  name: VScroll\n  nameWithType: ScrollableControl.VScroll\n  fullName: ScrollableControl.VScroll\n- uid: System.Windows.Forms.ContainerControl.ActiveControl\n  parent: System.Windows.Forms.ContainerControl\n  isExternal: false\n  name: ActiveControl\n  nameWithType: ContainerControl.ActiveControl\n  fullName: ContainerControl.ActiveControl\n- uid: System.Windows.Forms.ContainerControl.AutoScaleDimensions\n  parent: System.Windows.Forms.ContainerControl\n  isExternal: false\n  name: AutoScaleDimensions\n  nameWithType: ContainerControl.AutoScaleDimensions\n  fullName: ContainerControl.AutoScaleDimensions\n- uid: System.Windows.Forms.ContainerControl.AutoScaleFactor\n  parent: System.Windows.Forms.ContainerControl\n  isExternal: false\n  name: AutoScaleFactor\n  nameWithType: ContainerControl.AutoScaleFactor\n  fullName: ContainerControl.AutoScaleFactor\n- uid: System.Windows.Forms.ContainerControl.AutoScaleMode\n  parent: System.Windows.Forms.ContainerControl\n  isExternal: false\n  name: AutoScaleMode\n  nameWithType: ContainerControl.AutoScaleMode\n  fullName: ContainerControl.AutoScaleMode\n- uid: System.Windows.Forms.ContainerControl.CurrentAutoScaleDimensions\n  parent: System.Windows.Forms.ContainerControl\n  isExternal: false\n  name: CurrentAutoScaleDimensions\n  nameWithType: ContainerControl.CurrentAutoScaleDimensions\n  fullName: ContainerControl.CurrentAutoScaleDimensions\n- uid: System.Windows.Forms.ContainerControl.OnAutoValidateChanged(System.EventArgs)\n  parent: System.Windows.Forms.ContainerControl\n  isExternal: false\n  name: OnAutoValidateChanged(EventArgs)\n  nameWithType: ContainerControl.OnAutoValidateChanged(EventArgs)\n  fullName: ContainerControl.OnAutoValidateChanged(EventArgs)\n- uid: System.Windows.Forms.ContainerControl.ParentForm\n  parent: System.Windows.Forms.ContainerControl\n  isExternal: false\n  name: ParentForm\n  nameWithType: ContainerControl.ParentForm\n  fullName: ContainerControl.ParentForm\n- uid: System.Windows.Forms.ContainerControl.PerformAutoScale\n  parent: System.Windows.Forms.ContainerControl\n  isExternal: false\n  name: PerformAutoScale()\n  nameWithType: ContainerControl.PerformAutoScale()\n  fullName: ContainerControl.PerformAutoScale()\n- uid: System.Windows.Forms.ContainerControl.Validate\n  parent: System.Windows.Forms.ContainerControl\n  isExternal: false\n  name: Validate()\n  nameWithType: ContainerControl.Validate()\n  fullName: ContainerControl.Validate()\n- uid: System.Windows.Forms.ContainerControl.Validate(System.Boolean)\n  parent: System.Windows.Forms.ContainerControl\n  isExternal: false\n  name: Validate(Boolean)\n  nameWithType: ContainerControl.Validate(Boolean)\n  fullName: ContainerControl.Validate(Boolean)\n- uid: System.Windows.Forms.ContainerControl.System#Windows#Forms#IContainerControl#ActivateControl(System.Windows.Forms.Control)\n  parent: System.Windows.Forms.ContainerControl\n  isExternal: false\n  name: IContainerControl.ActivateControl(Control)\n  nameWithType: ContainerControl.IContainerControl.ActivateControl(Control)\n  fullName: ContainerControl.IContainerControl.ActivateControl(Control)\n"}