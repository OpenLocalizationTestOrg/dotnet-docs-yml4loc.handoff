{"nodes":[{"content":"Provides the functionality that allows a common language runtime host to participate in the flow, or migration, of the execution context.","nodes":[{"pos":[0,137],"content":"Provides the functionality that allows a common language runtime host to participate in the flow, or migration, of the execution context.","nodes":[{"content":"Provides the functionality that allows a common language runtime host to participate in the flow, or migration, of the execution context.","pos":[0,137]}]}],"pos":[765,903],"yaml":true},{"content":"If the current <xref:System.AppDomainManager> has a reference to a <xref:System.Threading.HostExecutionContextManager> in its <xref:System.AppDomainManager.HostExecutionContextManager%2A> property, then the common language runtime calls the manager every time a call to the <xref:System.Threading.ExecutionContext.Run%2A?displayProperty=fullName> method occurs, to allow the host to participate in the flow of the execution context.","nodes":[{"pos":[0,432],"content":"If the current <xref:System.AppDomainManager> has a reference to a <xref:System.Threading.HostExecutionContextManager> in its <xref:System.AppDomainManager.HostExecutionContextManager%2A> property, then the common language runtime calls the manager every time a call to the <xref:System.Threading.ExecutionContext.Run%2A?displayProperty=fullName> method occurs, to allow the host to participate in the flow of the execution context.","nodes":[{"content":"If the current <ph id=\"ph1\">&lt;xref:System.AppDomainManager&gt;</ph> has a reference to a <ph id=\"ph2\">&lt;xref:System.Threading.HostExecutionContextManager&gt;</ph> in its <ph id=\"ph3\">&lt;xref:System.AppDomainManager.HostExecutionContextManager%2A&gt;</ph> property, then the common language runtime calls the manager every time a call to the <ph id=\"ph4\">&lt;xref:System.Threading.ExecutionContext.Run%2A?displayProperty=fullName&gt;</ph> method occurs, to allow the host to participate in the flow of the execution context.","pos":[0,432],"source":"If the current <xref:System.AppDomainManager> has a reference to a <xref:System.Threading.HostExecutionContextManager> in its <xref:System.AppDomainManager.HostExecutionContextManager%2A> property, then the common language runtime calls the manager every time a call to the <xref:System.Threading.ExecutionContext.Run%2A?displayProperty=fullName> method occurs, to allow the host to participate in the flow of the execution context."}]}],"pos":[914,1347],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.Threading.HostExecutionContextManager\"></xref> class.","nodes":[{"pos":[0,106],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Threading.HostExecutionContextManager\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.Threading.HostExecutionContextManager\"></xref> class."}],"pos":[3016,3123],"yaml":true},{"content":"Captures the host execution context from the current thread.","nodes":[{"pos":[0,60],"content":"Captures the host execution context from the current thread.","nodes":[{"content":"Captures the host execution context from the current thread.","pos":[0,60]}]}],"pos":[4485,4546],"yaml":true},{"content":"The <xref:System.Threading.HostExecutionContext> is created using a safe handle containing the `IUnknown` pointer for the host executing the current thread.","nodes":[{"pos":[0,156],"content":"The <ph id=\"ph1\">&lt;xref:System.Threading.HostExecutionContext&gt;</ph> is created using a safe handle containing the <ph id=\"ph2\">`IUnknown`</ph> pointer for the host executing the current thread.","source":"The <xref:System.Threading.HostExecutionContext> is created using a safe handle containing the `IUnknown` pointer for the host executing the current thread."}],"pos":[4557,4714],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Threading.HostExecutionContext\"></xref> object representing the host execution context of the current thread.","nodes":[{"pos":[0,130],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Threading.HostExecutionContext\"&gt;&lt;/xref&gt;</ph> object representing the host execution context of the current thread.","source":"A <xref href=\"System.Threading.HostExecutionContext\"></xref> object representing the host execution context of the current thread."}],"pos":[4902,5033],"yaml":true},{"content":"Restores the host execution context to its prior state.","nodes":[{"pos":[0,55],"content":"Restores the host execution context to its prior state.","nodes":[{"content":"Restores the host execution context to its prior state.","pos":[0,55]}]}],"pos":[6373,6429],"yaml":true},{"content":"`previousState` must be the object returned by the <xref:System.Threading.HostExecutionContextManager.SetHostExecutionContext%2A> method.","nodes":[{"pos":[0,137],"content":"<ph id=\"ph1\">`previousState`</ph> must be the object returned by the <ph id=\"ph2\">&lt;xref:System.Threading.HostExecutionContextManager.SetHostExecutionContext%2A&gt;</ph> method.","source":"`previousState` must be the object returned by the <xref:System.Threading.HostExecutionContextManager.SetHostExecutionContext%2A> method."}],"pos":[6440,6580],"yaml":true,"extradata":"MT"},{"content":"The previous context state to revert to.","nodes":[{"pos":[0,40],"content":"The previous context state to revert to.","nodes":[{"content":"The previous context state to revert to.","pos":[0,40]}]}],"pos":[6739,6780],"yaml":true},{"content":"<code>previousState</code> is `null`.  \n  \n -or-  \n  \n <code>previousState</code> was not created on the current thread.  \n  \n -or-  \n  \n <code>previousState</code> is not the last state for the <xref href=\"System.Threading.HostExecutionContext\"></xref>.","nodes":[{"pos":[0,37],"content":"<ph id=\"ph1\">&lt;code&gt;previousState&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>previousState</code> is `null`."},{"pos":[44,48],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[55,120],"content":"<ph id=\"ph1\">&lt;code&gt;previousState&lt;/code&gt;</ph> was not created on the current thread.","source":"<code>previousState</code> was not created on the current thread."},{"pos":[127,131],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[138,254],"content":"<ph id=\"ph1\">&lt;code&gt;previousState&lt;/code&gt;</ph> is not the last state for the <ph id=\"ph2\">&lt;xref href=\"System.Threading.HostExecutionContext\"&gt;&lt;/xref&gt;</ph>.","source":"<code>previousState</code> is not the last state for the <xref href=\"System.Threading.HostExecutionContext\"></xref>."}],"pos":[6969,7236],"yaml":true},{"content":"Sets the current host execution context to the specified host execution context.","nodes":[{"pos":[0,80],"content":"Sets the current host execution context to the specified host execution context.","nodes":[{"content":"Sets the current host execution context to the specified host execution context.","pos":[0,80]}]}],"pos":[8726,8807],"yaml":true},{"content":"The <xref:System.Threading.HostExecutionContextManager.SetHostExecutionContext%2A> method sets the host execution context for the current <xref:System.Threading.HostExecutionContext>.  A <xref:System.Threading.HostExecutionContext> that has been used as the argument to another <xref:System.Threading.HostExecutionContextManager.SetHostExecutionContext%2A> method call cannot be passed in as the parameter for this method. Instead, use the <xref:System.Threading.HostExecutionContext.CreateCopy%2A?displayProperty=fullName> method to create a copy of a <xref:System.Threading.HostExecutionContext> object and then use the copy to set the host execution context.  \n  \n Call the <xref:System.Threading.HostExecutionContextManager.Revert%2A> method using the object returned by this method to restore the <xref:System.Threading.HostExecutionContext> to its previous state.","nodes":[{"pos":[0,661],"content":"The <xref:System.Threading.HostExecutionContextManager.SetHostExecutionContext%2A> method sets the host execution context for the current <xref:System.Threading.HostExecutionContext>.  A <xref:System.Threading.HostExecutionContext> that has been used as the argument to another <xref:System.Threading.HostExecutionContextManager.SetHostExecutionContext%2A> method call cannot be passed in as the parameter for this method. Instead, use the <xref:System.Threading.HostExecutionContext.CreateCopy%2A?displayProperty=fullName> method to create a copy of a <xref:System.Threading.HostExecutionContext> object and then use the copy to set the host execution context.","nodes":[{"content":"The <xref:System.Threading.HostExecutionContextManager.SetHostExecutionContext%2A> method sets the host execution context for the current <xref:System.Threading.HostExecutionContext>.  A <xref:System.Threading.HostExecutionContext> that has been used as the argument to another <xref:System.Threading.HostExecutionContextManager.SetHostExecutionContext%2A> method call cannot be passed in as the parameter for this method. Instead, use the <xref:System.Threading.HostExecutionContext.CreateCopy%2A?displayProperty=fullName> method to create a copy of a <xref:System.Threading.HostExecutionContext> object and then use the copy to set the host execution context.","pos":[0,661],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Threading.HostExecutionContextManager.SetHostExecutionContext%2A&gt;</ph> method sets the host execution context for the current <ph id=\"ph2\">&lt;xref:System.Threading.HostExecutionContext&gt;</ph>.","pos":[0,183],"source":"The <xref:System.Threading.HostExecutionContextManager.SetHostExecutionContext%2A> method sets the host execution context for the current <xref:System.Threading.HostExecutionContext>."},{"content":"A <ph id=\"ph1\">&lt;xref:System.Threading.HostExecutionContext&gt;</ph> that has been used as the argument to another <ph id=\"ph2\">&lt;xref:System.Threading.HostExecutionContextManager.SetHostExecutionContext%2A&gt;</ph> method call cannot be passed in as the parameter for this method.","pos":[185,422],"source":"  A <xref:System.Threading.HostExecutionContext> that has been used as the argument to another <xref:System.Threading.HostExecutionContextManager.SetHostExecutionContext%2A> method call cannot be passed in as the parameter for this method."},{"content":"Instead, use the <ph id=\"ph1\">&lt;xref:System.Threading.HostExecutionContext.CreateCopy%2A?displayProperty=fullName&gt;</ph> method to create a copy of a <ph id=\"ph2\">&lt;xref:System.Threading.HostExecutionContext&gt;</ph> object and then use the copy to set the host execution context.","pos":[423,661],"source":" Instead, use the <xref:System.Threading.HostExecutionContext.CreateCopy%2A?displayProperty=fullName> method to create a copy of a <xref:System.Threading.HostExecutionContext> object and then use the copy to set the host execution context."}]}]},{"pos":[668,869],"content":"Call the <xref:System.Threading.HostExecutionContextManager.Revert%2A> method using the object returned by this method to restore the <xref:System.Threading.HostExecutionContext> to its previous state.","nodes":[{"content":"Call the <ph id=\"ph1\">&lt;xref:System.Threading.HostExecutionContextManager.Revert%2A&gt;</ph> method using the object returned by this method to restore the <ph id=\"ph2\">&lt;xref:System.Threading.HostExecutionContext&gt;</ph> to its previous state.","pos":[0,201],"source":"Call the <xref:System.Threading.HostExecutionContextManager.Revert%2A> method using the object returned by this method to restore the <xref:System.Threading.HostExecutionContext> to its previous state."}]}],"pos":[8818,9692],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.Threading.HostExecutionContext\"></xref> to be set.","nodes":[{"pos":[0,73],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Threading.HostExecutionContext\"&gt;&lt;/xref&gt;</ph> to be set.","source":"The <xref href=\"System.Threading.HostExecutionContext\"></xref> to be set."}],"pos":[9939,10013],"yaml":true},{"content":"An object for restoring the <xref href=\"System.Threading.HostExecutionContext\"></xref> to its previous state.","nodes":[{"pos":[0,109],"content":"An object for restoring the <ph id=\"ph1\">&lt;xref href=\"System.Threading.HostExecutionContext\"&gt;&lt;/xref&gt;</ph> to its previous state.","source":"An object for restoring the <xref href=\"System.Threading.HostExecutionContext\"></xref> to its previous state."}],"pos":[10070,10180],"yaml":true},{"content":"<code>hostExecutionContext</code> was not acquired through a capture operation.  \n  \n -or-  \n  \n <code>hostExecutionContext</code> has been the argument to a previous <xref href=\"System.Threading.HostExecutionContextManager.SetHostExecutionContext(System.Threading.HostExecutionContext)\"></xref> method call.","nodes":[{"pos":[0,79],"content":"<ph id=\"ph1\">&lt;code&gt;hostExecutionContext&lt;/code&gt;</ph> was not acquired through a capture operation.","source":"<code>hostExecutionContext</code> was not acquired through a capture operation."},{"pos":[86,90],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[97,308],"content":"<ph id=\"ph1\">&lt;code&gt;hostExecutionContext&lt;/code&gt;</ph> has been the argument to a previous <ph id=\"ph2\">&lt;xref href=\"System.Threading.HostExecutionContextManager.SetHostExecutionContext(System.Threading.HostExecutionContext)\"&gt;&lt;/xref&gt;</ph> method call.","source":"<code>hostExecutionContext</code> has been the argument to a previous <xref href=\"System.Threading.HostExecutionContextManager.SetHostExecutionContext(System.Threading.HostExecutionContext)\"></xref> method call."}],"pos":[10386,10703],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Threading.HostExecutionContextManager\n  commentId: T:System.Threading.HostExecutionContextManager\n  id: HostExecutionContextManager\n  children:\n  - System.Threading.HostExecutionContextManager.#ctor\n  - System.Threading.HostExecutionContextManager.Capture\n  - System.Threading.HostExecutionContextManager.Revert(System.Object)\n  - System.Threading.HostExecutionContextManager.SetHostExecutionContext(System.Threading.HostExecutionContext)\n  langs:\n  - csharp\n  name: HostExecutionContextManager\n  nameWithType: HostExecutionContextManager\n  fullName: System.Threading.HostExecutionContextManager\n  type: Class\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Threading\n  namespace: System.Threading\n  summary: Provides the functionality that allows a common language runtime host to participate in the flow, or migration, of the execution context.\n  remarks: If the current <xref:System.AppDomainManager> has a reference to a <xref:System.Threading.HostExecutionContextManager> in its <xref:System.AppDomainManager.HostExecutionContextManager%2A> property, then the common language runtime calls the manager every time a call to the <xref:System.Threading.ExecutionContext.Run%2A?displayProperty=fullName> method occurs, to allow the host to participate in the flow of the execution context.\n  syntax:\n    content: public class HostExecutionContextManager\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading/HostExecutionContextManager.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Threading.HostExecutionContextManager.#ctor\n  commentId: M:System.Threading.HostExecutionContextManager.#ctor\n  id: '#ctor'\n  parent: System.Threading.HostExecutionContextManager\n  langs:\n  - csharp\n  name: HostExecutionContextManager()\n  nameWithType: HostExecutionContextManager.HostExecutionContextManager()\n  fullName: HostExecutionContextManager.HostExecutionContextManager()\n  type: Constructor\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Threading\n  namespace: System.Threading\n  summary: Initializes a new instance of the <xref href=\"System.Threading.HostExecutionContextManager\"></xref> class.\n  syntax:\n    content: public HostExecutionContextManager ();\n    parameters: []\n  overload: System.Threading.HostExecutionContextManager.#ctor*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading/HostExecutionContextManager.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Threading.HostExecutionContextManager.Capture\n  commentId: M:System.Threading.HostExecutionContextManager.Capture\n  id: Capture\n  parent: System.Threading.HostExecutionContextManager\n  langs:\n  - csharp\n  name: Capture()\n  nameWithType: HostExecutionContextManager.Capture()\n  fullName: HostExecutionContextManager.Capture()\n  type: Method\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Threading\n  namespace: System.Threading\n  summary: Captures the host execution context from the current thread.\n  remarks: The <xref:System.Threading.HostExecutionContext> is created using a safe handle containing the `IUnknown` pointer for the host executing the current thread.\n  syntax:\n    content: public virtual System.Threading.HostExecutionContext Capture ();\n    parameters: []\n    return:\n      type: System.Threading.HostExecutionContext\n      description: A <xref href=\"System.Threading.HostExecutionContext\"></xref> object representing the host execution context of the current thread.\n  overload: System.Threading.HostExecutionContextManager.Capture*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading/HostExecutionContextManager.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Threading.HostExecutionContextManager.Revert(System.Object)\n  commentId: M:System.Threading.HostExecutionContextManager.Revert(System.Object)\n  id: Revert(System.Object)\n  parent: System.Threading.HostExecutionContextManager\n  langs:\n  - csharp\n  name: Revert(Object)\n  nameWithType: HostExecutionContextManager.Revert(Object)\n  fullName: HostExecutionContextManager.Revert(Object)\n  type: Method\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Threading\n  namespace: System.Threading\n  summary: Restores the host execution context to its prior state.\n  remarks: '`previousState` must be the object returned by the <xref:System.Threading.HostExecutionContextManager.SetHostExecutionContext%2A> method.'\n  syntax:\n    content: public virtual void Revert (object previousState);\n    parameters:\n    - id: previousState\n      type: System.Object\n      description: The previous context state to revert to.\n  overload: System.Threading.HostExecutionContextManager.Revert*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"<code>previousState</code> is `null`.  \\n  \\n -or-  \\n  \\n <code>previousState</code> was not created on the current thread.  \\n  \\n -or-  \\n  \\n <code>previousState</code> is not the last state for the <xref href=\\\"System.Threading.HostExecutionContext\\\"></xref>.\"\n  attributes: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading/HostExecutionContextManager.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Threading.HostExecutionContextManager.SetHostExecutionContext(System.Threading.HostExecutionContext)\n  commentId: M:System.Threading.HostExecutionContextManager.SetHostExecutionContext(System.Threading.HostExecutionContext)\n  id: SetHostExecutionContext(System.Threading.HostExecutionContext)\n  parent: System.Threading.HostExecutionContextManager\n  langs:\n  - csharp\n  name: SetHostExecutionContext(HostExecutionContext)\n  nameWithType: HostExecutionContextManager.SetHostExecutionContext(HostExecutionContext)\n  fullName: HostExecutionContextManager.SetHostExecutionContext(HostExecutionContext)\n  type: Method\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Threading\n  namespace: System.Threading\n  summary: Sets the current host execution context to the specified host execution context.\n  remarks: \"The <xref:System.Threading.HostExecutionContextManager.SetHostExecutionContext%2A> method sets the host execution context for the current <xref:System.Threading.HostExecutionContext>.  A <xref:System.Threading.HostExecutionContext> that has been used as the argument to another <xref:System.Threading.HostExecutionContextManager.SetHostExecutionContext%2A> method call cannot be passed in as the parameter for this method. Instead, use the <xref:System.Threading.HostExecutionContext.CreateCopy%2A?displayProperty=fullName> method to create a copy of a <xref:System.Threading.HostExecutionContext> object and then use the copy to set the host execution context.  \\n  \\n Call the <xref:System.Threading.HostExecutionContextManager.Revert%2A> method using the object returned by this method to restore the <xref:System.Threading.HostExecutionContext> to its previous state.\"\n  syntax:\n    content: public virtual object SetHostExecutionContext (System.Threading.HostExecutionContext hostExecutionContext);\n    parameters:\n    - id: hostExecutionContext\n      type: System.Threading.HostExecutionContext\n      description: The <xref href=\"System.Threading.HostExecutionContext\"></xref> to be set.\n    return:\n      type: System.Object\n      description: An object for restoring the <xref href=\"System.Threading.HostExecutionContext\"></xref> to its previous state.\n  overload: System.Threading.HostExecutionContextManager.SetHostExecutionContext*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"<code>hostExecutionContext</code> was not acquired through a capture operation.  \\n  \\n -or-  \\n  \\n <code>hostExecutionContext</code> has been the argument to a previous <xref href=\\\"System.Threading.HostExecutionContextManager.SetHostExecutionContext(System.Threading.HostExecutionContext)\\\"></xref> method call.\"\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading/HostExecutionContextManager.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\nreferences:\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.InvalidOperationException\n  parent: System\n  isExternal: false\n  name: InvalidOperationException\n  nameWithType: InvalidOperationException\n  fullName: System.InvalidOperationException\n- uid: System.Threading.HostExecutionContextManager.#ctor\n  parent: System.Threading.HostExecutionContextManager\n  isExternal: false\n  name: HostExecutionContextManager()\n  nameWithType: HostExecutionContextManager.HostExecutionContextManager()\n  fullName: HostExecutionContextManager.HostExecutionContextManager()\n- uid: System.Threading.HostExecutionContextManager.Capture\n  parent: System.Threading.HostExecutionContextManager\n  isExternal: false\n  name: Capture()\n  nameWithType: HostExecutionContextManager.Capture()\n  fullName: HostExecutionContextManager.Capture()\n- uid: System.Threading.HostExecutionContext\n  parent: System.Threading\n  isExternal: false\n  name: HostExecutionContext\n  nameWithType: HostExecutionContext\n  fullName: System.Threading.HostExecutionContext\n- uid: System.Threading.HostExecutionContextManager.Revert(System.Object)\n  parent: System.Threading.HostExecutionContextManager\n  isExternal: false\n  name: Revert(Object)\n  nameWithType: HostExecutionContextManager.Revert(Object)\n  fullName: HostExecutionContextManager.Revert(Object)\n- uid: System.Threading.HostExecutionContextManager.SetHostExecutionContext(System.Threading.HostExecutionContext)\n  parent: System.Threading.HostExecutionContextManager\n  isExternal: false\n  name: SetHostExecutionContext(HostExecutionContext)\n  nameWithType: HostExecutionContextManager.SetHostExecutionContext(HostExecutionContext)\n  fullName: HostExecutionContextManager.SetHostExecutionContext(HostExecutionContext)\n- uid: System.Threading.HostExecutionContextManager.#ctor*\n  parent: System.Threading.HostExecutionContextManager\n  isExternal: false\n  name: HostExecutionContextManager\n  nameWithType: HostExecutionContextManager.HostExecutionContextManager\n  fullName: HostExecutionContextManager.HostExecutionContextManager\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading/HostExecutionContextManager.xml\n- uid: System.Threading.HostExecutionContextManager.Capture*\n  parent: System.Threading.HostExecutionContextManager\n  isExternal: false\n  name: Capture\n  nameWithType: HostExecutionContextManager.Capture\n  fullName: HostExecutionContextManager.Capture\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading/HostExecutionContextManager.xml\n- uid: System.Threading.HostExecutionContextManager.Revert*\n  parent: System.Threading.HostExecutionContextManager\n  isExternal: false\n  name: Revert\n  nameWithType: HostExecutionContextManager.Revert\n  fullName: HostExecutionContextManager.Revert\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading/HostExecutionContextManager.xml\n- uid: System.Threading.HostExecutionContextManager.SetHostExecutionContext*\n  parent: System.Threading.HostExecutionContextManager\n  isExternal: false\n  name: SetHostExecutionContext\n  nameWithType: HostExecutionContextManager.SetHostExecutionContext\n  fullName: HostExecutionContextManager.SetHostExecutionContext\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Threading/HostExecutionContextManager.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n"}