### YamlMime:ManagedReference
items:
- uid: System.Net.Http.WebRequestHandler
  commentId: T:System.Net.Http.WebRequestHandler
  id: WebRequestHandler
  children:
  - System.Net.Http.WebRequestHandler.#ctor
  - System.Net.Http.WebRequestHandler.AllowPipelining
  - System.Net.Http.WebRequestHandler.AuthenticationLevel
  - System.Net.Http.WebRequestHandler.CachePolicy
  - System.Net.Http.WebRequestHandler.ClientCertificates
  - System.Net.Http.WebRequestHandler.ContinueTimeout
  - System.Net.Http.WebRequestHandler.ImpersonationLevel
  - System.Net.Http.WebRequestHandler.MaxResponseHeadersLength
  - System.Net.Http.WebRequestHandler.ReadWriteTimeout
  - System.Net.Http.WebRequestHandler.ServerCertificateValidationCallback
  - System.Net.Http.WebRequestHandler.UnsafeAuthenticatedConnectionSharing
  langs:
  - csharp
  name: WebRequestHandler
  nameWithType: WebRequestHandler
  fullName: System.Net.Http.WebRequestHandler
  type: Class
  assemblies:
  - System.Net.Http.WebRequest
  namespace: System.Net.Http
  summary: Provides desktop-specific features not available to Windows Store apps or other environments.
  remarks: This class implements a transport handler using <xref:System.Net.HttpWebRequest> instances to send HTTP requests to servers.
  syntax:
    content: 'public class WebRequestHandler : System.Net.Http.HttpClientHandler'
  inheritance:
  - System.Object
  - System.Net.Http.HttpMessageHandler
  - System.Net.Http.HttpClientHandler
  implements: []
  inheritedMembers:
  - System.Net.Http.HttpClientHandler.AllowAutoRedirect
  - System.Net.Http.HttpClientHandler.AutomaticDecompression
  - System.Net.Http.HttpClientHandler.CheckCertificateRevocationList
  - System.Net.Http.HttpClientHandler.ClientCertificateOptions
  - System.Net.Http.HttpClientHandler.CookieContainer
  - System.Net.Http.HttpClientHandler.Credentials
  - System.Net.Http.HttpClientHandler.DefaultProxyCredentials
  - System.Net.Http.HttpClientHandler.Dispose(System.Boolean)
  - System.Net.Http.HttpClientHandler.MaxAutomaticRedirections
  - System.Net.Http.HttpClientHandler.MaxConnectionsPerServer
  - System.Net.Http.HttpClientHandler.MaxRequestContentBufferSize
  - System.Net.Http.HttpClientHandler.PreAuthenticate
  - System.Net.Http.HttpClientHandler.Properties
  - System.Net.Http.HttpClientHandler.Proxy
  - System.Net.Http.HttpClientHandler.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)
  - System.Net.Http.HttpClientHandler.ServerCertificateCustomValidationCallback
  - System.Net.Http.HttpClientHandler.SslProtocols
  - System.Net.Http.HttpClientHandler.SupportsAutomaticDecompression
  - System.Net.Http.HttpClientHandler.SupportsProxy
  - System.Net.Http.HttpClientHandler.SupportsRedirectConfiguration
  - System.Net.Http.HttpClientHandler.UseCookies
  - System.Net.Http.HttpClientHandler.UseDefaultCredentials
  - System.Net.Http.HttpClientHandler.UseProxy
  - System.Net.Http.HttpMessageHandler.Dispose
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Http/WebRequestHandler.xml
  ms.author: bobdel
  manager: markl
- uid: System.Net.Http.WebRequestHandler.#ctor
  commentId: M:System.Net.Http.WebRequestHandler.#ctor
  id: '#ctor'
  parent: System.Net.Http.WebRequestHandler
  langs:
  - csharp
  name: WebRequestHandler()
  nameWithType: WebRequestHandler.WebRequestHandler()
  fullName: WebRequestHandler.WebRequestHandler()
  type: Constructor
  assemblies:
  - System.Net.Http.WebRequest
  namespace: System.Net.Http
  summary: Initializes a new instance of the <xref href="System.Net.Http.WebRequestHandler"></xref> class.
  syntax:
    content: public WebRequestHandler ();
    parameters: []
  overload: System.Net.Http.WebRequestHandler.#ctor*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Http/WebRequestHandler.xml
  ms.author: bobdel
  manager: markl
- uid: System.Net.Http.WebRequestHandler.AllowPipelining
  commentId: P:System.Net.Http.WebRequestHandler.AllowPipelining
  id: AllowPipelining
  parent: System.Net.Http.WebRequestHandler
  langs:
  - csharp
  name: AllowPipelining
  nameWithType: WebRequestHandler.AllowPipelining
  fullName: WebRequestHandler.AllowPipelining
  type: Property
  assemblies:
  - System.Net.Http.WebRequest
  namespace: System.Net.Http
  summary: Gets or sets a value that indicates whether to pipeline the request to the Internet resource.
  remarks: An application uses the <xref:System.Net.Http.WebRequestHandler.AllowPipelining%2A> property to indicate a preference for pipelined connections. When <xref:System.Net.Http.WebRequestHandler.AllowPipelining%2A> is `true`, an application makes pipelined connections to the servers that support them.
  syntax:
    content: public bool AllowPipelining { get; set; }
    return:
      type: System.Boolean
      description: "Returns <xref href=\"System.Boolean\"></xref>.  \n  \n `true` if the request should be pipelined; otherwise, `false`. The default is `true`."
  overload: System.Net.Http.WebRequestHandler.AllowPipelining*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Http/WebRequestHandler.xml
  ms.author: bobdel
  manager: markl
- uid: System.Net.Http.WebRequestHandler.AuthenticationLevel
  commentId: P:System.Net.Http.WebRequestHandler.AuthenticationLevel
  id: AuthenticationLevel
  parent: System.Net.Http.WebRequestHandler
  langs:
  - csharp
  name: AuthenticationLevel
  nameWithType: WebRequestHandler.AuthenticationLevel
  fullName: WebRequestHandler.AuthenticationLevel
  type: Property
  assemblies:
  - System.Net.Http.WebRequest
  namespace: System.Net.Http
  summary: Gets or sets a value indicating the level of authentication and impersonation used for this request.
  remarks: In mutual authentication, both the client and server present credentials to establish their identity. The <xref:System.Net.Security.AuthenticationLevel.MutualAuthRequired> and <xref:System.Net.Security.AuthenticationLevel.MutualAuthRequested> values are relevant for Kerberos authentication. Kerberos authentication can be supported directly, or can be used if the Negotiate security protocol is used to select the actual security protocol. For more information about authentication protocols, see [Internet Authentication](~/docs/framework/network-programming/internet-authentication.md).
  syntax:
    content: public System.Net.Security.AuthenticationLevel AuthenticationLevel { get; set; }
    return:
      type: System.Net.Security.AuthenticationLevel
      description: "Returns <xref href=\"System.Net.Security.AuthenticationLevel\"></xref>.  \n  \n A bitwise combination of the <xref href=\"System.Net.Security.AuthenticationLevel\"></xref> values.  The default value is <xref href=\"System.Net.Security.AuthenticationLevel.MutualAuthRequested\"></xref>."
  overload: System.Net.Http.WebRequestHandler.AuthenticationLevel*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Http/WebRequestHandler.xml
  ms.author: bobdel
  manager: markl
- uid: System.Net.Http.WebRequestHandler.CachePolicy
  commentId: P:System.Net.Http.WebRequestHandler.CachePolicy
  id: CachePolicy
  parent: System.Net.Http.WebRequestHandler
  langs:
  - csharp
  name: CachePolicy
  nameWithType: WebRequestHandler.CachePolicy
  fullName: WebRequestHandler.CachePolicy
  type: Property
  assemblies:
  - System.Net.Http.WebRequest
  namespace: System.Net.Http
  summary: Gets or sets the cache policy for this request.
  remarks: "The current cache policy and the presence of the requested resource in the cache determine whether a response can be retrieved from the cache. Using cached responses usually improves application performance, but there is a risk that the response in the cache does not match the response on the server.  \n  \n The default cache policy can be specified in the Machine.config configuration file or by setting the <xref:System.Net.HttpWebRequest.DefaultCachePolicy%2A> property.  \n  \n A copy of a resource is only added to the cache if the response stream for the resource is retrieved and read to the end of the stream. So another request for the same resource could use a cached copy, depending on the cache policy level for this request."
  syntax:
    content: public System.Net.Cache.RequestCachePolicy CachePolicy { get; set; }
    return:
      type: System.Net.Cache.RequestCachePolicy
      description: "Returns <xref href=\"System.Net.Cache.RequestCachePolicy\"></xref>.  \n  \n A <xref href=\"System.Net.Cache.RequestCachePolicy\"></xref> object that defines a cache policy. The default is <xref href=\"System.Net.WebRequest.DefaultCachePolicy\"></xref>."
  overload: System.Net.Http.WebRequestHandler.CachePolicy*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Http/WebRequestHandler.xml
  ms.author: bobdel
  manager: markl
- uid: System.Net.Http.WebRequestHandler.ClientCertificates
  commentId: P:System.Net.Http.WebRequestHandler.ClientCertificates
  id: ClientCertificates
  parent: System.Net.Http.WebRequestHandler
  langs:
  - csharp
  name: ClientCertificates
  nameWithType: WebRequestHandler.ClientCertificates
  fullName: WebRequestHandler.ClientCertificates
  type: Property
  assemblies:
  - System.Net.Http.WebRequest
  namespace: System.Net.Http
  summary: Gets or sets the collection of security certificates that are associated with this request.
  syntax:
    content: public System.Security.Cryptography.X509Certificates.X509CertificateCollection ClientCertificates { get; }
    return:
      type: System.Security.Cryptography.X509Certificates.X509CertificateCollection
      description: "Returns <xref href=\"System.Security.Cryptography.X509Certificates.X509CertificateCollection\"></xref>.  \n  \n The collection of security certificates associated with this request."
  overload: System.Net.Http.WebRequestHandler.ClientCertificates*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Http/WebRequestHandler.xml
  ms.author: bobdel
  manager: markl
- uid: System.Net.Http.WebRequestHandler.ContinueTimeout
  commentId: P:System.Net.Http.WebRequestHandler.ContinueTimeout
  id: ContinueTimeout
  parent: System.Net.Http.WebRequestHandler
  langs:
  - csharp
  name: ContinueTimeout
  nameWithType: WebRequestHandler.ContinueTimeout
  fullName: WebRequestHandler.ContinueTimeout
  type: Property
  assemblies:
  - System.Net.Http.WebRequest
  namespace: System.Net.Http
  summary: Gets or sets the amount of time, in milliseconds, the application will wait for 100-continue from the server before uploading data.
  syntax:
    content: public TimeSpan ContinueTimeout { get; set; }
    return:
      type: System.TimeSpan
      description: "Returns <xref href=\"System.TimeSpan\"></xref>.  \n  \n The amount of time, in milliseconds, the application will wait for 100-continue from the server before uploading data. The default value is 350 milliseconds."
  overload: System.Net.Http.WebRequestHandler.ContinueTimeout*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Http/WebRequestHandler.xml
  ms.author: bobdel
  manager: markl
- uid: System.Net.Http.WebRequestHandler.ImpersonationLevel
  commentId: P:System.Net.Http.WebRequestHandler.ImpersonationLevel
  id: ImpersonationLevel
  parent: System.Net.Http.WebRequestHandler
  langs:
  - csharp
  name: ImpersonationLevel
  nameWithType: WebRequestHandler.ImpersonationLevel
  fullName: WebRequestHandler.ImpersonationLevel
  type: Property
  assemblies:
  - System.Net.Http.WebRequest
  namespace: System.Net.Http
  summary: Gets or sets the impersonation level for the current request.
  remarks: The impersonation level determines how the server can use the client's credentials.
  syntax:
    content: public System.Security.Principal.TokenImpersonationLevel ImpersonationLevel { get; set; }
    return:
      type: System.Security.Principal.TokenImpersonationLevel
      description: "Returns <xref href=\"System.Security.Principal.TokenImpersonationLevel\"></xref>.  \n  \n The impersonation level for the request. The default is <xref href=\"System.Security.Principal.TokenImpersonationLevel.Delegation\"></xref>."
  overload: System.Net.Http.WebRequestHandler.ImpersonationLevel*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Http/WebRequestHandler.xml
  ms.author: bobdel
  manager: markl
- uid: System.Net.Http.WebRequestHandler.MaxResponseHeadersLength
  commentId: P:System.Net.Http.WebRequestHandler.MaxResponseHeadersLength
  id: MaxResponseHeadersLength
  parent: System.Net.Http.WebRequestHandler
  langs:
  - csharp
  name: MaxResponseHeadersLength
  nameWithType: WebRequestHandler.MaxResponseHeadersLength
  fullName: WebRequestHandler.MaxResponseHeadersLength
  type: Property
  assemblies:
  - System.Net.Http.WebRequest
  namespace: System.Net.Http
  summary: Gets or sets the maximum allowed length of the response headers.
  remarks: "The length of the response header includes the response status line and any extra control characters that are received as part of HTTP protocol. A value of -1 means no limit is imposed on the response headers; a value of 0 means that all requests fail.  \n  \n If the <xref:System.Net.Http.WebRequestHandler.MaxResponseHeadersLength%2A> property is not explicitly set, it defaults to the value of the <xref:System.Net.HttpWebRequest.DefaultMaximumResponseHeadersLength%2A> property.  \n  \n If the length of the response header received exceeds the value of the <xref:System.Net.Http.WebRequestHandler.MaxResponseHeadersLength%2A> property, an exception is thrown when the response is accessed."
  syntax:
    content: public int MaxResponseHeadersLength { get; set; }
    return:
      type: System.Int32
      description: "Returns <xref href=\"System.Int32\"></xref>.  \n  \n The length, in kilobytes (1024 bytes), of the response headers."
  overload: System.Net.Http.WebRequestHandler.MaxResponseHeadersLength*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Http/WebRequestHandler.xml
  ms.author: bobdel
  manager: markl
- uid: System.Net.Http.WebRequestHandler.ReadWriteTimeout
  commentId: P:System.Net.Http.WebRequestHandler.ReadWriteTimeout
  id: ReadWriteTimeout
  parent: System.Net.Http.WebRequestHandler
  langs:
  - csharp
  name: ReadWriteTimeout
  nameWithType: WebRequestHandler.ReadWriteTimeout
  fullName: WebRequestHandler.ReadWriteTimeout
  type: Property
  assemblies:
  - System.Net.Http.WebRequest
  namespace: System.Net.Http
  summary: Gets or sets a time-out in milliseconds when writing a request to or reading a response from a server.
  syntax:
    content: public int ReadWriteTimeout { get; set; }
    return:
      type: System.Int32
      description: "Returns <xref href=\"System.Int32\"></xref>.  \n  \n The number of milliseconds before the writing or reading times out. The default value is 300,000 milliseconds (5 minutes)."
  overload: System.Net.Http.WebRequestHandler.ReadWriteTimeout*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Http/WebRequestHandler.xml
  ms.author: bobdel
  manager: markl
- uid: System.Net.Http.WebRequestHandler.ServerCertificateValidationCallback
  commentId: P:System.Net.Http.WebRequestHandler.ServerCertificateValidationCallback
  id: ServerCertificateValidationCallback
  parent: System.Net.Http.WebRequestHandler
  langs:
  - csharp
  name: ServerCertificateValidationCallback
  nameWithType: WebRequestHandler.ServerCertificateValidationCallback
  fullName: WebRequestHandler.ServerCertificateValidationCallback
  type: Property
  assemblies:
  - System.Net.Http.WebRequest
  namespace: System.Net.Http
  summary: Gets or sets a callback method to validate the server certificate.
  remarks: If the <xref:System.Net.Http.WebRequestHandler.ServerCertificateValidationCallback%2A> is `null`, the server certificate will be validated using standard well-known  certificate authorities.
  syntax:
    content: public System.Net.Security.RemoteCertificateValidationCallback ServerCertificateValidationCallback { get; set; }
    return:
      type: System.Net.Security.RemoteCertificateValidationCallback
      description: "Returns <xref href=\"System.Net.Security.RemoteCertificateValidationCallback\"></xref>.  \n  \n A callback method to validate the server certificate."
  overload: System.Net.Http.WebRequestHandler.ServerCertificateValidationCallback*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Http/WebRequestHandler.xml
  ms.author: bobdel
  manager: markl
- uid: System.Net.Http.WebRequestHandler.UnsafeAuthenticatedConnectionSharing
  commentId: P:System.Net.Http.WebRequestHandler.UnsafeAuthenticatedConnectionSharing
  id: UnsafeAuthenticatedConnectionSharing
  parent: System.Net.Http.WebRequestHandler
  langs:
  - csharp
  name: UnsafeAuthenticatedConnectionSharing
  nameWithType: WebRequestHandler.UnsafeAuthenticatedConnectionSharing
  fullName: WebRequestHandler.UnsafeAuthenticatedConnectionSharing
  type: Property
  assemblies:
  - System.Net.Http.WebRequest
  namespace: System.Net.Http
  summary: Gets or sets a value that indicates whether to allow high-speed NTLM-authenticated connection sharing.
  remarks: "The default value for this property is `false`, which causes the current connection to be closed after a request is completed. Your application must go through the authentication sequence every time it issues a new request.If this property is set to `true`, the connection used to retrieve the response remains open after the authentication has been performed. In this case, other requests that have this property set to `true` may use the connection without re-authenticating. In other words, if a connection has been authenticated for user A, user B may reuse A's connection; user B's request is fulfilled based on the credentials of user A.  \n  \n> [!CAUTION]\n>  Because it is possible for an application to use the connection without being authenticated, you need to be sure that there is no administrative vulnerability in your system when setting this property to `true`. If your application sends requests for multiple users (impersonates multiple user accounts) and relies on authentication to protect resources, do not set this property to `true` unless you use connection groups as described below.  \n  \n You may want to consider enabling this mechanism if your are having performance problems and your application is running on a Web server with integrated Windows authentication.  \n  \n Enabling this setting opens the system to security risks. If you set the <xref:System.Net.HttpWebRequest.UnsafeAuthenticatedConnectionSharing%2A> property to `true` be sure to take the following precautions:  \n  \n-   Run your application in a protected environment to help avoid possible connection exploits.  \n  \n If you control the back-end server, as an alternative you might consider turning off authentication persistence. This increases performance to a lesser degree, but it is safer. For more details, search for AuthPersistence in the MSDN library at [http://msdn.microsoft.com/library](http://msdn.microsoft.com/library)."
  syntax:
    content: >-
      [set: System.Security.SecuritySafeCritical]

      public bool UnsafeAuthenticatedConnectionSharing { get; set; }
    return:
      type: System.Boolean
      description: "Returns <xref href=\"System.Boolean\"></xref>.  \n  \n `true` to keep the authenticated connection open; otherwise, `false`."
  overload: System.Net.Http.WebRequestHandler.UnsafeAuthenticatedConnectionSharing*
  exceptions: []
  attributes:
  - type: 'set: System.Security.SecuritySafeCritical'
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Http/WebRequestHandler.xml
  ms.author: bobdel
  manager: markl
references:
- uid: System.Net.Http.HttpClientHandler
  parent: System.Net.Http
  isExternal: false
  name: HttpClientHandler
  nameWithType: HttpClientHandler
  fullName: System.Net.Http.HttpClientHandler
- uid: System.Net.Http.WebRequestHandler.#ctor
  parent: System.Net.Http.WebRequestHandler
  isExternal: false
  name: WebRequestHandler()
  nameWithType: WebRequestHandler.WebRequestHandler()
  fullName: WebRequestHandler.WebRequestHandler()
- uid: System.Net.Http.WebRequestHandler.AllowPipelining
  parent: System.Net.Http.WebRequestHandler
  isExternal: false
  name: AllowPipelining
  nameWithType: WebRequestHandler.AllowPipelining
  fullName: WebRequestHandler.AllowPipelining
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Net.Http.WebRequestHandler.AuthenticationLevel
  parent: System.Net.Http.WebRequestHandler
  isExternal: false
  name: AuthenticationLevel
  nameWithType: WebRequestHandler.AuthenticationLevel
  fullName: WebRequestHandler.AuthenticationLevel
- uid: System.Net.Security.AuthenticationLevel
  parent: System.Net.Security
  isExternal: false
  name: AuthenticationLevel
  nameWithType: AuthenticationLevel
  fullName: System.Net.Security.AuthenticationLevel
- uid: System.Net.Http.WebRequestHandler.CachePolicy
  parent: System.Net.Http.WebRequestHandler
  isExternal: false
  name: CachePolicy
  nameWithType: WebRequestHandler.CachePolicy
  fullName: WebRequestHandler.CachePolicy
- uid: System.Net.Cache.RequestCachePolicy
  parent: System.Net.Cache
  isExternal: false
  name: RequestCachePolicy
  nameWithType: RequestCachePolicy
  fullName: System.Net.Cache.RequestCachePolicy
- uid: System.Net.Http.WebRequestHandler.ClientCertificates
  parent: System.Net.Http.WebRequestHandler
  isExternal: false
  name: ClientCertificates
  nameWithType: WebRequestHandler.ClientCertificates
  fullName: WebRequestHandler.ClientCertificates
- uid: System.Security.Cryptography.X509Certificates.X509CertificateCollection
  parent: System.Security.Cryptography.X509Certificates
  isExternal: false
  name: X509CertificateCollection
  nameWithType: X509CertificateCollection
  fullName: System.Security.Cryptography.X509Certificates.X509CertificateCollection
- uid: System.Net.Http.WebRequestHandler.ContinueTimeout
  parent: System.Net.Http.WebRequestHandler
  isExternal: false
  name: ContinueTimeout
  nameWithType: WebRequestHandler.ContinueTimeout
  fullName: WebRequestHandler.ContinueTimeout
- uid: System.TimeSpan
  parent: System
  isExternal: false
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.Net.Http.WebRequestHandler.ImpersonationLevel
  parent: System.Net.Http.WebRequestHandler
  isExternal: false
  name: ImpersonationLevel
  nameWithType: WebRequestHandler.ImpersonationLevel
  fullName: WebRequestHandler.ImpersonationLevel
- uid: System.Security.Principal.TokenImpersonationLevel
  parent: System.Security.Principal
  isExternal: false
  name: TokenImpersonationLevel
  nameWithType: TokenImpersonationLevel
  fullName: System.Security.Principal.TokenImpersonationLevel
- uid: System.Net.Http.WebRequestHandler.MaxResponseHeadersLength
  parent: System.Net.Http.WebRequestHandler
  isExternal: false
  name: MaxResponseHeadersLength
  nameWithType: WebRequestHandler.MaxResponseHeadersLength
  fullName: WebRequestHandler.MaxResponseHeadersLength
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Net.Http.WebRequestHandler.ReadWriteTimeout
  parent: System.Net.Http.WebRequestHandler
  isExternal: false
  name: ReadWriteTimeout
  nameWithType: WebRequestHandler.ReadWriteTimeout
  fullName: WebRequestHandler.ReadWriteTimeout
- uid: System.Net.Http.WebRequestHandler.ServerCertificateValidationCallback
  parent: System.Net.Http.WebRequestHandler
  isExternal: false
  name: ServerCertificateValidationCallback
  nameWithType: WebRequestHandler.ServerCertificateValidationCallback
  fullName: WebRequestHandler.ServerCertificateValidationCallback
- uid: System.Net.Security.RemoteCertificateValidationCallback
  parent: System.Net.Security
  isExternal: false
  name: RemoteCertificateValidationCallback
  nameWithType: RemoteCertificateValidationCallback
  fullName: System.Net.Security.RemoteCertificateValidationCallback
- uid: System.Net.Http.WebRequestHandler.UnsafeAuthenticatedConnectionSharing
  parent: System.Net.Http.WebRequestHandler
  isExternal: false
  name: UnsafeAuthenticatedConnectionSharing
  nameWithType: WebRequestHandler.UnsafeAuthenticatedConnectionSharing
  fullName: WebRequestHandler.UnsafeAuthenticatedConnectionSharing
- uid: System.Net.Http.WebRequestHandler.#ctor*
  parent: System.Net.Http.WebRequestHandler
  isExternal: false
  name: WebRequestHandler
  nameWithType: WebRequestHandler.WebRequestHandler
  fullName: WebRequestHandler.WebRequestHandler
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Http/WebRequestHandler.xml
- uid: System.Net.Http.WebRequestHandler.AllowPipelining*
  parent: System.Net.Http.WebRequestHandler
  isExternal: false
  name: AllowPipelining
  nameWithType: WebRequestHandler.AllowPipelining
  fullName: WebRequestHandler.AllowPipelining
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Http/WebRequestHandler.xml
- uid: System.Net.Http.WebRequestHandler.AuthenticationLevel*
  parent: System.Net.Http.WebRequestHandler
  isExternal: false
  name: AuthenticationLevel
  nameWithType: WebRequestHandler.AuthenticationLevel
  fullName: WebRequestHandler.AuthenticationLevel
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Http/WebRequestHandler.xml
- uid: System.Net.Http.WebRequestHandler.CachePolicy*
  parent: System.Net.Http.WebRequestHandler
  isExternal: false
  name: CachePolicy
  nameWithType: WebRequestHandler.CachePolicy
  fullName: WebRequestHandler.CachePolicy
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Http/WebRequestHandler.xml
- uid: System.Net.Http.WebRequestHandler.ClientCertificates*
  parent: System.Net.Http.WebRequestHandler
  isExternal: false
  name: ClientCertificates
  nameWithType: WebRequestHandler.ClientCertificates
  fullName: WebRequestHandler.ClientCertificates
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Http/WebRequestHandler.xml
- uid: System.Net.Http.WebRequestHandler.ContinueTimeout*
  parent: System.Net.Http.WebRequestHandler
  isExternal: false
  name: ContinueTimeout
  nameWithType: WebRequestHandler.ContinueTimeout
  fullName: WebRequestHandler.ContinueTimeout
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Http/WebRequestHandler.xml
- uid: System.Net.Http.WebRequestHandler.ImpersonationLevel*
  parent: System.Net.Http.WebRequestHandler
  isExternal: false
  name: ImpersonationLevel
  nameWithType: WebRequestHandler.ImpersonationLevel
  fullName: WebRequestHandler.ImpersonationLevel
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Http/WebRequestHandler.xml
- uid: System.Net.Http.WebRequestHandler.MaxResponseHeadersLength*
  parent: System.Net.Http.WebRequestHandler
  isExternal: false
  name: MaxResponseHeadersLength
  nameWithType: WebRequestHandler.MaxResponseHeadersLength
  fullName: WebRequestHandler.MaxResponseHeadersLength
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Http/WebRequestHandler.xml
- uid: System.Net.Http.WebRequestHandler.ReadWriteTimeout*
  parent: System.Net.Http.WebRequestHandler
  isExternal: false
  name: ReadWriteTimeout
  nameWithType: WebRequestHandler.ReadWriteTimeout
  fullName: WebRequestHandler.ReadWriteTimeout
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Http/WebRequestHandler.xml
- uid: System.Net.Http.WebRequestHandler.ServerCertificateValidationCallback*
  parent: System.Net.Http.WebRequestHandler
  isExternal: false
  name: ServerCertificateValidationCallback
  nameWithType: WebRequestHandler.ServerCertificateValidationCallback
  fullName: WebRequestHandler.ServerCertificateValidationCallback
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Http/WebRequestHandler.xml
- uid: System.Net.Http.WebRequestHandler.UnsafeAuthenticatedConnectionSharing*
  parent: System.Net.Http.WebRequestHandler
  isExternal: false
  name: UnsafeAuthenticatedConnectionSharing
  nameWithType: WebRequestHandler.UnsafeAuthenticatedConnectionSharing
  fullName: WebRequestHandler.UnsafeAuthenticatedConnectionSharing
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Http/WebRequestHandler.xml
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: Object.Equals(Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: Object.Equals(Object, Object)
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: false
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: Object.GetHashCode()
- uid: System.Object.GetType
  parent: System.Object
  isExternal: false
  name: GetType()
  nameWithType: Object.GetType()
  fullName: Object.GetType()
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: false
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: Object.MemberwiseClone()
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: Object.ReferenceEquals(Object, Object)
- uid: System.Object.ToString
  parent: System.Object
  isExternal: false
  name: ToString()
  nameWithType: Object.ToString()
  fullName: Object.ToString()
- uid: System.Net.Http.HttpMessageHandler.Dispose
  parent: System.Net.Http.HttpMessageHandler
  isExternal: false
  name: Dispose()
  nameWithType: HttpMessageHandler.Dispose()
  fullName: HttpMessageHandler.Dispose()
- uid: System.Net.Http.HttpClientHandler.Dispose(System.Boolean)
  parent: System.Net.Http.HttpClientHandler
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: HttpClientHandler.Dispose(Boolean)
  fullName: HttpClientHandler.Dispose(Boolean)
- uid: System.Net.Http.HttpClientHandler.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)
  parent: System.Net.Http.HttpClientHandler
  isExternal: false
  name: SendAsync(HttpRequestMessage, CancellationToken)
  nameWithType: HttpClientHandler.SendAsync(HttpRequestMessage, CancellationToken)
  fullName: HttpClientHandler.SendAsync(HttpRequestMessage, CancellationToken)
- uid: System.Net.Http.HttpClientHandler.AllowAutoRedirect
  parent: System.Net.Http.HttpClientHandler
  isExternal: false
  name: AllowAutoRedirect
  nameWithType: HttpClientHandler.AllowAutoRedirect
  fullName: HttpClientHandler.AllowAutoRedirect
- uid: System.Net.Http.HttpClientHandler.AutomaticDecompression
  parent: System.Net.Http.HttpClientHandler
  isExternal: false
  name: AutomaticDecompression
  nameWithType: HttpClientHandler.AutomaticDecompression
  fullName: HttpClientHandler.AutomaticDecompression
- uid: System.Net.Http.HttpClientHandler.CheckCertificateRevocationList
  parent: System.Net.Http.HttpClientHandler
  isExternal: false
  name: CheckCertificateRevocationList
  nameWithType: HttpClientHandler.CheckCertificateRevocationList
  fullName: HttpClientHandler.CheckCertificateRevocationList
- uid: System.Net.Http.HttpClientHandler.ClientCertificateOptions
  parent: System.Net.Http.HttpClientHandler
  isExternal: false
  name: ClientCertificateOptions
  nameWithType: HttpClientHandler.ClientCertificateOptions
  fullName: HttpClientHandler.ClientCertificateOptions
- uid: System.Net.Http.HttpClientHandler.CookieContainer
  parent: System.Net.Http.HttpClientHandler
  isExternal: false
  name: CookieContainer
  nameWithType: HttpClientHandler.CookieContainer
  fullName: HttpClientHandler.CookieContainer
- uid: System.Net.Http.HttpClientHandler.Credentials
  parent: System.Net.Http.HttpClientHandler
  isExternal: false
  name: Credentials
  nameWithType: HttpClientHandler.Credentials
  fullName: HttpClientHandler.Credentials
- uid: System.Net.Http.HttpClientHandler.DefaultProxyCredentials
  parent: System.Net.Http.HttpClientHandler
  isExternal: false
  name: DefaultProxyCredentials
  nameWithType: HttpClientHandler.DefaultProxyCredentials
  fullName: HttpClientHandler.DefaultProxyCredentials
- uid: System.Net.Http.HttpClientHandler.MaxAutomaticRedirections
  parent: System.Net.Http.HttpClientHandler
  isExternal: false
  name: MaxAutomaticRedirections
  nameWithType: HttpClientHandler.MaxAutomaticRedirections
  fullName: HttpClientHandler.MaxAutomaticRedirections
- uid: System.Net.Http.HttpClientHandler.MaxConnectionsPerServer
  parent: System.Net.Http.HttpClientHandler
  isExternal: false
  name: MaxConnectionsPerServer
  nameWithType: HttpClientHandler.MaxConnectionsPerServer
  fullName: HttpClientHandler.MaxConnectionsPerServer
- uid: System.Net.Http.HttpClientHandler.MaxRequestContentBufferSize
  parent: System.Net.Http.HttpClientHandler
  isExternal: false
  name: MaxRequestContentBufferSize
  nameWithType: HttpClientHandler.MaxRequestContentBufferSize
  fullName: HttpClientHandler.MaxRequestContentBufferSize
- uid: System.Net.Http.HttpClientHandler.PreAuthenticate
  parent: System.Net.Http.HttpClientHandler
  isExternal: false
  name: PreAuthenticate
  nameWithType: HttpClientHandler.PreAuthenticate
  fullName: HttpClientHandler.PreAuthenticate
- uid: System.Net.Http.HttpClientHandler.Properties
  parent: System.Net.Http.HttpClientHandler
  isExternal: false
  name: Properties
  nameWithType: HttpClientHandler.Properties
  fullName: HttpClientHandler.Properties
- uid: System.Net.Http.HttpClientHandler.Proxy
  parent: System.Net.Http.HttpClientHandler
  isExternal: false
  name: Proxy
  nameWithType: HttpClientHandler.Proxy
  fullName: HttpClientHandler.Proxy
- uid: System.Net.Http.HttpClientHandler.ServerCertificateCustomValidationCallback
  parent: System.Net.Http.HttpClientHandler
  isExternal: false
  name: ServerCertificateCustomValidationCallback
  nameWithType: HttpClientHandler.ServerCertificateCustomValidationCallback
  fullName: HttpClientHandler.ServerCertificateCustomValidationCallback
- uid: System.Net.Http.HttpClientHandler.SslProtocols
  parent: System.Net.Http.HttpClientHandler
  isExternal: false
  name: SslProtocols
  nameWithType: HttpClientHandler.SslProtocols
  fullName: HttpClientHandler.SslProtocols
- uid: System.Net.Http.HttpClientHandler.SupportsAutomaticDecompression
  parent: System.Net.Http.HttpClientHandler
  isExternal: false
  name: SupportsAutomaticDecompression
  nameWithType: HttpClientHandler.SupportsAutomaticDecompression
  fullName: HttpClientHandler.SupportsAutomaticDecompression
- uid: System.Net.Http.HttpClientHandler.SupportsProxy
  parent: System.Net.Http.HttpClientHandler
  isExternal: false
  name: SupportsProxy
  nameWithType: HttpClientHandler.SupportsProxy
  fullName: HttpClientHandler.SupportsProxy
- uid: System.Net.Http.HttpClientHandler.SupportsRedirectConfiguration
  parent: System.Net.Http.HttpClientHandler
  isExternal: false
  name: SupportsRedirectConfiguration
  nameWithType: HttpClientHandler.SupportsRedirectConfiguration
  fullName: HttpClientHandler.SupportsRedirectConfiguration
- uid: System.Net.Http.HttpClientHandler.UseCookies
  parent: System.Net.Http.HttpClientHandler
  isExternal: false
  name: UseCookies
  nameWithType: HttpClientHandler.UseCookies
  fullName: HttpClientHandler.UseCookies
- uid: System.Net.Http.HttpClientHandler.UseDefaultCredentials
  parent: System.Net.Http.HttpClientHandler
  isExternal: false
  name: UseDefaultCredentials
  nameWithType: HttpClientHandler.UseDefaultCredentials
  fullName: HttpClientHandler.UseDefaultCredentials
- uid: System.Net.Http.HttpClientHandler.UseProxy
  parent: System.Net.Http.HttpClientHandler
  isExternal: false
  name: UseProxy
  nameWithType: HttpClientHandler.UseProxy
  fullName: HttpClientHandler.UseProxy
