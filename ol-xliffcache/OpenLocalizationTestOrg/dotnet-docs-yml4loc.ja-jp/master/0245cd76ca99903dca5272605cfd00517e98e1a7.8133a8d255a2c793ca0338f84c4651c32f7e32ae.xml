{"nodes":[{"content":"Represents the execution environment of an activity that is being aborted.","nodes":[{"pos":[0,74],"content":"Represents the execution environment of an activity that is being aborted.","nodes":[{"content":"Represents the execution environment of an activity that is being aborted.","pos":[0,74]}]}],"pos":[496,571],"yaml":true},{"content":"Custom activity authors that create activities that are derived from <xref:System.Activities.NativeActivity%601> can override <xref:System.Activities.NativeActivity%601.Abort%2A> to take action in response to being aborted. For example, an activity that interacts with <xref:System.Data.SqlClient.SqlCommand> might want to call <xref:System.Data.SqlClient.SqlCommand.Cancel%2A> if the activity is being aborted.","nodes":[{"pos":[0,411],"content":"Custom activity authors that create activities that are derived from <xref:System.Activities.NativeActivity%601> can override <xref:System.Activities.NativeActivity%601.Abort%2A> to take action in response to being aborted. For example, an activity that interacts with <xref:System.Data.SqlClient.SqlCommand> might want to call <xref:System.Data.SqlClient.SqlCommand.Cancel%2A> if the activity is being aborted.","nodes":[{"content":"Custom activity authors that create activities that are derived from <xref:System.Activities.NativeActivity%601> can override <xref:System.Activities.NativeActivity%601.Abort%2A> to take action in response to being aborted. For example, an activity that interacts with <xref:System.Data.SqlClient.SqlCommand> might want to call <xref:System.Data.SqlClient.SqlCommand.Cancel%2A> if the activity is being aborted.","pos":[0,411],"nodes":[{"content":"Custom activity authors that create activities that are derived from <ph id=\"ph1\">&lt;xref:System.Activities.NativeActivity%601&gt;</ph> can override <ph id=\"ph2\">&lt;xref:System.Activities.NativeActivity%601.Abort%2A&gt;</ph> to take action in response to being aborted.","pos":[0,223],"source":"Custom activity authors that create activities that are derived from <xref:System.Activities.NativeActivity%601> can override <xref:System.Activities.NativeActivity%601.Abort%2A> to take action in response to being aborted."},{"content":"For example, an activity that interacts with <ph id=\"ph1\">&lt;xref:System.Data.SqlClient.SqlCommand&gt;</ph> might want to call <ph id=\"ph2\">&lt;xref:System.Data.SqlClient.SqlCommand.Cancel%2A&gt;</ph> if the activity is being aborted.","pos":[224,411],"source":" For example, an activity that interacts with <xref:System.Data.SqlClient.SqlCommand> might want to call <xref:System.Data.SqlClient.SqlCommand.Cancel%2A> if the activity is being aborted."}]}]}],"pos":[582,994],"yaml":true,"extradata":"MT"},{"content":"Gets an <xref href=\"System.Exception\"></xref> that contains the reason for the activity being aborted.","nodes":[{"pos":[0,102],"content":"Gets an <ph id=\"ph1\">&lt;xref href=\"System.Exception\"&gt;&lt;/xref&gt;</ph> that contains the reason for the activity being aborted.","source":"Gets an <xref href=\"System.Exception\"></xref> that contains the reason for the activity being aborted."}],"pos":[3706,3809],"yaml":true},{"content":"An exception that contains the reason for the activity being aborted.","nodes":[{"pos":[0,69],"content":"An exception that contains the reason for the activity being aborted.","nodes":[{"content":"An exception that contains the reason for the activity being aborted.","pos":[0,69]}]}],"pos":[3925,3995],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Activities.NativeActivityAbortContext\n  commentId: T:System.Activities.NativeActivityAbortContext\n  id: NativeActivityAbortContext\n  children:\n  - System.Activities.NativeActivityAbortContext.Reason\n  langs:\n  - csharp\n  name: NativeActivityAbortContext\n  nameWithType: NativeActivityAbortContext\n  fullName: System.Activities.NativeActivityAbortContext\n  type: Class\n  assemblies:\n  - System.Activities\n  namespace: System.Activities\n  summary: Represents the execution environment of an activity that is being aborted.\n  remarks: Custom activity authors that create activities that are derived from <xref:System.Activities.NativeActivity%601> can override <xref:System.Activities.NativeActivity%601.Abort%2A> to take action in response to being aborted. For example, an activity that interacts with <xref:System.Data.SqlClient.SqlCommand> might want to call <xref:System.Data.SqlClient.SqlCommand.Cancel%2A> if the activity is being aborted.\n  syntax:\n    content: 'public sealed class NativeActivityAbortContext : System.Activities.ActivityContext'\n  inheritance:\n  - System.Object\n  - System.Activities.ActivityContext\n  implements: []\n  inheritedMembers:\n  - System.Activities.ActivityContext.ActivityInstanceId\n  - System.Activities.ActivityContext.DataContext\n  - System.Activities.ActivityContext.GetExtension``1\n  - System.Activities.ActivityContext.GetLocation``1(System.Activities.LocationReference)\n  - System.Activities.ActivityContext.GetValue(System.Activities.Argument)\n  - System.Activities.ActivityContext.GetValue(System.Activities.RuntimeArgument)\n  - System.Activities.ActivityContext.GetValue``1(System.Activities.InArgument{``0})\n  - System.Activities.ActivityContext.GetValue``1(System.Activities.InOutArgument{``0})\n  - System.Activities.ActivityContext.GetValue``1(System.Activities.LocationReference)\n  - System.Activities.ActivityContext.GetValue``1(System.Activities.OutArgument{``0})\n  - System.Activities.ActivityContext.SetValue(System.Activities.Argument,System.Object)\n  - System.Activities.ActivityContext.SetValue``1(System.Activities.InArgument{``0},``0)\n  - System.Activities.ActivityContext.SetValue``1(System.Activities.InOutArgument{``0},``0)\n  - System.Activities.ActivityContext.SetValue``1(System.Activities.LocationReference,``0)\n  - System.Activities.ActivityContext.SetValue``1(System.Activities.OutArgument{``0},``0)\n  - System.Activities.ActivityContext.WorkflowInstanceId\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities/NativeActivityAbortContext.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Activities.NativeActivityAbortContext.Reason\n  commentId: P:System.Activities.NativeActivityAbortContext.Reason\n  id: Reason\n  parent: System.Activities.NativeActivityAbortContext\n  langs:\n  - csharp\n  name: Reason\n  nameWithType: NativeActivityAbortContext.Reason\n  fullName: NativeActivityAbortContext.Reason\n  type: Property\n  assemblies:\n  - System.Activities\n  namespace: System.Activities\n  summary: Gets an <xref href=\"System.Exception\"></xref> that contains the reason for the activity being aborted.\n  syntax:\n    content: public Exception Reason { get; }\n    return:\n      type: System.Exception\n      description: An exception that contains the reason for the activity being aborted.\n  overload: System.Activities.NativeActivityAbortContext.Reason*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities/NativeActivityAbortContext.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\nreferences:\n- uid: System.Activities.ActivityContext\n  parent: System.Activities\n  isExternal: false\n  name: ActivityContext\n  nameWithType: ActivityContext\n  fullName: System.Activities.ActivityContext\n- uid: System.Activities.NativeActivityAbortContext.Reason\n  parent: System.Activities.NativeActivityAbortContext\n  isExternal: false\n  name: Reason\n  nameWithType: NativeActivityAbortContext.Reason\n  fullName: NativeActivityAbortContext.Reason\n- uid: System.Exception\n  parent: System\n  isExternal: false\n  name: Exception\n  nameWithType: Exception\n  fullName: System.Exception\n- uid: System.Activities.NativeActivityAbortContext.Reason*\n  parent: System.Activities.NativeActivityAbortContext\n  isExternal: false\n  name: Reason\n  nameWithType: NativeActivityAbortContext.Reason\n  fullName: NativeActivityAbortContext.Reason\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities/NativeActivityAbortContext.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.Activities.ActivityContext.ActivityInstanceId\n  parent: System.Activities.ActivityContext\n  isExternal: false\n  name: ActivityInstanceId\n  nameWithType: ActivityContext.ActivityInstanceId\n  fullName: ActivityContext.ActivityInstanceId\n- uid: System.Activities.ActivityContext.DataContext\n  parent: System.Activities.ActivityContext\n  isExternal: false\n  name: DataContext\n  nameWithType: ActivityContext.DataContext\n  fullName: ActivityContext.DataContext\n- uid: System.Activities.ActivityContext.GetExtension``1\n  parent: System.Activities.ActivityContext\n  isExternal: false\n  name: GetExtension<T>()\n  nameWithType: ActivityContext.GetExtension<T>()\n  fullName: ActivityContext.GetExtension<T>()\n- uid: System.Activities.ActivityContext.GetLocation``1(System.Activities.LocationReference)\n  parent: System.Activities.ActivityContext\n  isExternal: false\n  name: GetLocation<T>(LocationReference)\n  nameWithType: ActivityContext.GetLocation<T>(LocationReference)\n  fullName: ActivityContext.GetLocation<T>(LocationReference)\n- uid: System.Activities.ActivityContext.GetValue(System.Activities.Argument)\n  parent: System.Activities.ActivityContext\n  isExternal: false\n  name: GetValue(Argument)\n  nameWithType: ActivityContext.GetValue(Argument)\n  fullName: ActivityContext.GetValue(Argument)\n- uid: System.Activities.ActivityContext.GetValue(System.Activities.RuntimeArgument)\n  parent: System.Activities.ActivityContext\n  isExternal: false\n  name: GetValue(RuntimeArgument)\n  nameWithType: ActivityContext.GetValue(RuntimeArgument)\n  fullName: ActivityContext.GetValue(RuntimeArgument)\n- uid: System.Activities.ActivityContext.GetValue``1(System.Activities.InArgument{``0})\n  parent: System.Activities.ActivityContext\n  isExternal: false\n  name: GetValue<T>(InArgument<T>)\n  nameWithType: ActivityContext.GetValue<T>(InArgument<T>)\n  fullName: ActivityContext.GetValue<T>(InArgument<T>)\n- uid: System.Activities.ActivityContext.GetValue``1(System.Activities.InOutArgument{``0})\n  parent: System.Activities.ActivityContext\n  isExternal: false\n  name: GetValue<T>(InOutArgument<T>)\n  nameWithType: ActivityContext.GetValue<T>(InOutArgument<T>)\n  fullName: ActivityContext.GetValue<T>(InOutArgument<T>)\n- uid: System.Activities.ActivityContext.GetValue``1(System.Activities.LocationReference)\n  parent: System.Activities.ActivityContext\n  isExternal: false\n  name: GetValue<T>(LocationReference)\n  nameWithType: ActivityContext.GetValue<T>(LocationReference)\n  fullName: ActivityContext.GetValue<T>(LocationReference)\n- uid: System.Activities.ActivityContext.GetValue``1(System.Activities.OutArgument{``0})\n  parent: System.Activities.ActivityContext\n  isExternal: false\n  name: GetValue<T>(OutArgument<T>)\n  nameWithType: ActivityContext.GetValue<T>(OutArgument<T>)\n  fullName: ActivityContext.GetValue<T>(OutArgument<T>)\n- uid: System.Activities.ActivityContext.SetValue(System.Activities.Argument,System.Object)\n  parent: System.Activities.ActivityContext\n  isExternal: false\n  name: SetValue(Argument, Object)\n  nameWithType: ActivityContext.SetValue(Argument, Object)\n  fullName: ActivityContext.SetValue(Argument, Object)\n- uid: System.Activities.ActivityContext.SetValue``1(System.Activities.InArgument{``0},``0)\n  parent: System.Activities.ActivityContext\n  isExternal: false\n  name: SetValue<T>(InArgument<T>, T)\n  nameWithType: ActivityContext.SetValue<T>(InArgument<T>, T)\n  fullName: ActivityContext.SetValue<T>(InArgument<T>, T)\n- uid: System.Activities.ActivityContext.SetValue``1(System.Activities.InOutArgument{``0},``0)\n  parent: System.Activities.ActivityContext\n  isExternal: false\n  name: SetValue<T>(InOutArgument<T>, T)\n  nameWithType: ActivityContext.SetValue<T>(InOutArgument<T>, T)\n  fullName: ActivityContext.SetValue<T>(InOutArgument<T>, T)\n- uid: System.Activities.ActivityContext.SetValue``1(System.Activities.LocationReference,``0)\n  parent: System.Activities.ActivityContext\n  isExternal: false\n  name: SetValue<T>(LocationReference, T)\n  nameWithType: ActivityContext.SetValue<T>(LocationReference, T)\n  fullName: ActivityContext.SetValue<T>(LocationReference, T)\n- uid: System.Activities.ActivityContext.SetValue``1(System.Activities.OutArgument{``0},``0)\n  parent: System.Activities.ActivityContext\n  isExternal: false\n  name: SetValue<T>(OutArgument<T>, T)\n  nameWithType: ActivityContext.SetValue<T>(OutArgument<T>, T)\n  fullName: ActivityContext.SetValue<T>(OutArgument<T>, T)\n- uid: System.Activities.ActivityContext.WorkflowInstanceId\n  parent: System.Activities.ActivityContext\n  isExternal: false\n  name: WorkflowInstanceId\n  nameWithType: ActivityContext.WorkflowInstanceId\n  fullName: ActivityContext.WorkflowInstanceId\n"}