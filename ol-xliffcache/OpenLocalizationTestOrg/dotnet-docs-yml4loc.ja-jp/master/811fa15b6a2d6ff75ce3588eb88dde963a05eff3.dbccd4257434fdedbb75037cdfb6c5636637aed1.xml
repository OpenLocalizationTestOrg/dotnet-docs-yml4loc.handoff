{"nodes":[{"content":"Provides a utility class for the creation and verification of digital signatures in a <xref href=\"System.IO.Packaging.Package\"></xref>.","nodes":[{"pos":[0,135],"content":"Provides a utility class for the creation and verification of digital signatures in a <ph id=\"ph1\">&lt;xref href=\"System.IO.Packaging.Package\"&gt;&lt;/xref&gt;</ph>.","source":"Provides a utility class for the creation and verification of digital signatures in a <xref href=\"System.IO.Packaging.Package\"></xref>."}],"pos":[3452,3588],"yaml":true},{"content":"<xref:System.IO.Packaging.PackageDigitalSignatureManager> builds on the architecture of [!INCLUDE[TLA#tla_netframewk](~/includes/tlasharptla-netframewk-md.md)] digital signature classes and provides a utility class for performing common tasks in using digital signatures with <xref:System.IO.Packaging.Package> elements.  \n  \n For more information about package digital signatures, see the MSDN article Digital Signing Framework of the Open Packaging Conventions available at [http://go.microsoft.com/fwlink/?LinkId=74494](http://go.microsoft.com/fwlink/?LinkId=74494).","nodes":[{"pos":[0,320],"content":"<ph id=\"ph1\">&lt;xref:System.IO.Packaging.PackageDigitalSignatureManager&gt;</ph> builds on the architecture of <ph id=\"ph2\">[!INCLUDE[TLA#tla_netframewk](~/includes/tlasharptla-netframewk-md.md)]</ph> digital signature classes and provides a utility class for performing common tasks in using digital signatures with <ph id=\"ph3\">&lt;xref:System.IO.Packaging.Package&gt;</ph> elements.","source":"<xref:System.IO.Packaging.PackageDigitalSignatureManager> builds on the architecture of [!INCLUDE[TLA#tla_netframewk](~/includes/tlasharptla-netframewk-md.md)] digital signature classes and provides a utility class for performing common tasks in using digital signatures with <xref:System.IO.Packaging.Package> elements."},{"pos":[327,569],"content":"For more information about package digital signatures, see the MSDN article Digital Signing Framework of the Open Packaging Conventions available at <bpt id=\"p1\">[</bpt>http://go.microsoft.com/fwlink/?LinkId=74494<ept id=\"p1\">](http://go.microsoft.com/fwlink/?LinkId=74494)</ept>.","source":"For more information about package digital signatures, see the MSDN article Digital Signing Framework of the Open Packaging Conventions available at [http://go.microsoft.com/fwlink/?LinkId=74494](http://go.microsoft.com/fwlink/?LinkId=74494)."}],"pos":[3599,4173],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.IO.Packaging.PackageDigitalSignatureManager\"></xref> class for use with a specified <xref href=\"System.IO.Packaging.Package\"></xref>.","nodes":[{"pos":[0,186],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.IO.Packaging.PackageDigitalSignatureManager\"&gt;&lt;/xref&gt;</ph> class for use with a specified <ph id=\"ph2\">&lt;xref href=\"System.IO.Packaging.Package\"&gt;&lt;/xref&gt;</ph>.","source":"Initializes a new instance of the <xref href=\"System.IO.Packaging.PackageDigitalSignatureManager\"></xref> class for use with a specified <xref href=\"System.IO.Packaging.Package\"></xref>."}],"pos":[6019,6206],"yaml":true},{"content":"The target package associated with the signature manager is set during initialization. After it is set, the package associated with the signature manager cannot be changed. Create a new signature manager for each package as needed.","nodes":[{"pos":[0,231],"content":"The target package associated with the signature manager is set during initialization. After it is set, the package associated with the signature manager cannot be changed. Create a new signature manager for each package as needed.","nodes":[{"content":"The target package associated with the signature manager is set during initialization. After it is set, the package associated with the signature manager cannot be changed. Create a new signature manager for each package as needed.","pos":[0,231],"nodes":[{"content":"The target package associated with the signature manager is set during initialization.","pos":[0,86]},{"content":"After it is set, the package associated with the signature manager cannot be changed.","pos":[87,172]},{"content":"Create a new signature manager for each package as needed.","pos":[173,231]}]}]}],"pos":[6217,6449],"yaml":true,"extradata":"MT"},{"content":"The package associated with this signature manager.","nodes":[{"pos":[0,51],"content":"The package associated with this signature manager.","nodes":[{"content":"The package associated with this signature manager.","pos":[0,51]}]}],"pos":[6845,6897],"yaml":true},{"content":"Gets or sets the X.509 certificate embedding option used by the <xref href=\"System.IO.Packaging.PackageDigitalSignatureManager.Sign(System.Collections.Generic.IEnumerable{System.Uri})\"></xref> method to digitally sign package parts.","nodes":[{"pos":[0,232],"content":"Gets or sets the X.509 certificate embedding option used by the <ph id=\"ph1\">&lt;xref href=\"System.IO.Packaging.PackageDigitalSignatureManager.Sign(System.Collections.Generic.IEnumerable{System.Uri})\"&gt;&lt;/xref&gt;</ph> method to digitally sign package parts.","source":"Gets or sets the X.509 certificate embedding option used by the <xref href=\"System.IO.Packaging.PackageDigitalSignatureManager.Sign(System.Collections.Generic.IEnumerable{System.Uri})\"></xref> method to digitally sign package parts."}],"pos":[8042,8275],"yaml":true},{"content":"This property specifies where the signer's X.509 certificate will be stored when digitally signing a part.","nodes":[{"pos":[0,106],"content":"This property specifies where the signer's X.509 certificate will be stored when digitally signing a part.","nodes":[{"content":"This property specifies where the signer's X.509 certificate will be stored when digitally signing a part.","pos":[0,106]}]}],"pos":[8286,8393],"yaml":true,"extradata":"MT"},{"content":"One of the <xref href=\"System.IO.Packaging.CertificateEmbeddingOption\"></xref> values.","nodes":[{"pos":[0,86],"content":"One of the <ph id=\"ph1\">&lt;xref href=\"System.IO.Packaging.CertificateEmbeddingOption\"&gt;&lt;/xref&gt;</ph> values.","source":"One of the <xref href=\"System.IO.Packaging.CertificateEmbeddingOption\"></xref> values."}],"pos":[8852,8939],"yaml":true},{"content":"Countersigns all the signatures in the package with a user-selected X.509 certificate.","nodes":[{"pos":[0,86],"content":"Countersigns all the signatures in the package with a user-selected X.509 certificate.","nodes":[{"content":"Countersigns all the signatures in the package with a user-selected X.509 certificate.","pos":[0,86]}]}],"pos":[10064,10151],"yaml":true},{"content":"If no X.509 certificate is specified in the call, this method opens a certificate selection dialog box that prompts the user to choose a certificate to use for signing.  \n  \n Set the window handle in the <xref:System.IO.Packaging.PackageDigitalSignatureManager.ParentWindow%2A> property before calling <xref:System.IO.Packaging.PackageDigitalSignatureManager.Countersign%2A> to make the Certificate Selection Dialog modal to the given window.","nodes":[{"pos":[0,168],"content":"If no X.509 certificate is specified in the call, this method opens a certificate selection dialog box that prompts the user to choose a certificate to use for signing.","nodes":[{"content":"If no X.509 certificate is specified in the call, this method opens a certificate selection dialog box that prompts the user to choose a certificate to use for signing.","pos":[0,168]}]},{"pos":[175,442],"content":"Set the window handle in the <xref:System.IO.Packaging.PackageDigitalSignatureManager.ParentWindow%2A> property before calling <xref:System.IO.Packaging.PackageDigitalSignatureManager.Countersign%2A> to make the Certificate Selection Dialog modal to the given window.","nodes":[{"content":"Set the window handle in the <ph id=\"ph1\">&lt;xref:System.IO.Packaging.PackageDigitalSignatureManager.ParentWindow%2A&gt;</ph> property before calling <ph id=\"ph2\">&lt;xref:System.IO.Packaging.PackageDigitalSignatureManager.Countersign%2A&gt;</ph> to make the Certificate Selection Dialog modal to the given window.","pos":[0,267],"source":"Set the window handle in the <xref:System.IO.Packaging.PackageDigitalSignatureManager.ParentWindow%2A> property before calling <xref:System.IO.Packaging.PackageDigitalSignatureManager.Countersign%2A> to make the Certificate Selection Dialog modal to the given window."}]}],"pos":[10162,10609],"yaml":true,"extradata":"MT"},{"content":"The signature that was added as a countersign; or `null` if no certificate could be located or the user canceled the certificate selection dialog.","nodes":[{"pos":[0,146],"content":"The signature that was added as a countersign; or <ph id=\"ph1\">`null`</ph> if no certificate could be located or the user canceled the certificate selection dialog.","source":"The signature that was added as a countersign; or `null` if no certificate could be located or the user canceled the certificate selection dialog."}],"pos":[10805,10952],"yaml":true},{"content":"Countersigns all the signatures in the package with a specified X.509 certificate.","nodes":[{"pos":[0,82],"content":"Countersigns all the signatures in the package with a specified X.509 certificate.","nodes":[{"content":"Countersigns all the signatures in the package with a specified X.509 certificate.","pos":[0,82]}]}],"pos":[12305,12388],"yaml":true},{"content":"The X.509 certificate to add as a countersign signature.","nodes":[{"pos":[0,56],"content":"The X.509 certificate to add as a countersign signature.","nodes":[{"content":"The X.509 certificate to add as a countersign signature.","pos":[0,56]}]}],"pos":[12682,12739],"yaml":true},{"content":"The signature that was added as a countersign.","nodes":[{"pos":[0,46],"content":"The signature that was added as a countersign.","nodes":[{"content":"The signature that was added as a countersign.","pos":[0,46]}]}],"pos":[12826,12873],"yaml":true},{"content":"<code>certificate</code> is `null`","nodes":[{"pos":[0,34],"content":"<ph id=\"ph1\">&lt;code&gt;certificate&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>","source":"<code>certificate</code> is `null`"}],"pos":[13065,13100],"yaml":true},{"content":"Countersigns a list of signatures with a given X.509 certificate.","nodes":[{"pos":[0,65],"content":"Countersigns a list of signatures with a given X.509 certificate.","nodes":[{"content":"Countersigns a list of signatures with a given X.509 certificate.","pos":[0,65]}]}],"pos":[14567,14633],"yaml":true},{"content":"The X.509 certificate to countersign each of the specified <code>signatures</code>.","nodes":[{"pos":[0,83],"content":"The X.509 certificate to countersign each of the specified <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">signatures</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"The X.509 certificate to countersign each of the specified <code>signatures</code>."}],"pos":[14983,15067],"yaml":true},{"content":"The list of signatures to countersign.","nodes":[{"pos":[0,38],"content":"The list of signatures to countersign.","nodes":[{"content":"The list of signatures to countersign.","pos":[0,38]}]}],"pos":[15170,15209],"yaml":true},{"content":"The digital signature used to countersign each of the <code>signatures</code>.","nodes":[{"pos":[0,78],"content":"The digital signature used to countersign each of the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">signatures</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"The digital signature used to countersign each of the <code>signatures</code>."}],"pos":[15296,15375],"yaml":true},{"content":"Either the <code>certificate</code> or <code>signatures</code> parameter is `null`.","nodes":[{"pos":[0,83],"content":"Either the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">certificate</ph><ept id=\"p1\">&lt;/code&gt;</ept> or <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">signatures</ph><ept id=\"p2\">&lt;/code&gt;</ept> parameter is <ph id=\"ph3\">`null`</ph>.","source":"Either the <code>certificate</code> or <code>signatures</code> parameter is `null`."}],"pos":[15567,15651],"yaml":true},{"content":"The package contains no signed <xref href=\"System.IO.Packaging.PackagePart\"></xref> objects.","nodes":[{"pos":[0,92],"content":"The package contains no signed <ph id=\"ph1\">&lt;xref href=\"System.IO.Packaging.PackagePart\"&gt;&lt;/xref&gt;</ph> objects.","source":"The package contains no signed <xref href=\"System.IO.Packaging.PackagePart\"></xref> objects."}],"pos":[15761,15854],"yaml":true},{"content":"The package contains no <xref href=\"System.IO.Packaging.PackageDigitalSignature\"></xref> parts.","nodes":[{"pos":[0,95],"content":"The package contains no <ph id=\"ph1\">&lt;xref href=\"System.IO.Packaging.PackageDigitalSignature\"&gt;&lt;/xref&gt;</ph> parts.","source":"The package contains no <xref href=\"System.IO.Packaging.PackageDigitalSignature\"></xref> parts."}],"pos":[15948,16044],"yaml":true},{"content":"Gets a [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] string that identifies the default hash algorithm used to create and verify signatures.","nodes":[{"pos":[0,154],"content":"Gets a <ph id=\"ph1\">[!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)]</ph> string that identifies the default hash algorithm used to create and verify signatures.","source":"Gets a [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] string that identifies the default hash algorithm used to create and verify signatures."}],"pos":[17120,17275],"yaml":true},{"content":"The default hash algorithm for the standard <xref:System.IO.Packaging.PackageDigitalSignatureManager> class is <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigSHA1Url> ([!INCLUDE[TLA#tla_sha1](~/includes/tlasharptla-sha1-md.md)]).  \n  \n The <xref:System.IO.Packaging.PackageDigitalSignatureManager.HashAlgorithm%2A> property gets or sets the actual hash algorithm this is used to create and verify signatures.  \n  \n The <xref:System.IO.Packaging.PackageDigitalSignatureManager.DefaultHashAlgorithm%2A> property is typically used to reset the <xref:System.IO.Packaging.PackageDigitalSignatureManager.HashAlgorithm%2A> property back to default after a temporary change.","nodes":[{"pos":[0,238],"content":"The default hash algorithm for the standard <ph id=\"ph1\">&lt;xref:System.IO.Packaging.PackageDigitalSignatureManager&gt;</ph> class is <ph id=\"ph2\">&lt;xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigSHA1Url&gt;</ph> (<ph id=\"ph3\">[!INCLUDE[TLA#tla_sha1](~/includes/tlasharptla-sha1-md.md)]</ph>).","source":"The default hash algorithm for the standard <xref:System.IO.Packaging.PackageDigitalSignatureManager> class is <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigSHA1Url> ([!INCLUDE[TLA#tla_sha1](~/includes/tlasharptla-sha1-md.md)])."},{"pos":[245,417],"content":"The <xref:System.IO.Packaging.PackageDigitalSignatureManager.HashAlgorithm%2A> property gets or sets the actual hash algorithm this is used to create and verify signatures.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.IO.Packaging.PackageDigitalSignatureManager.HashAlgorithm%2A&gt;</ph> property gets or sets the actual hash algorithm this is used to create and verify signatures.","pos":[0,172],"source":"The <xref:System.IO.Packaging.PackageDigitalSignatureManager.HashAlgorithm%2A> property gets or sets the actual hash algorithm this is used to create and verify signatures."}]},{"pos":[424,675],"content":"The <xref:System.IO.Packaging.PackageDigitalSignatureManager.DefaultHashAlgorithm%2A> property is typically used to reset the <xref:System.IO.Packaging.PackageDigitalSignatureManager.HashAlgorithm%2A> property back to default after a temporary change.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.IO.Packaging.PackageDigitalSignatureManager.DefaultHashAlgorithm%2A&gt;</ph> property is typically used to reset the <ph id=\"ph2\">&lt;xref:System.IO.Packaging.PackageDigitalSignatureManager.HashAlgorithm%2A&gt;</ph> property back to default after a temporary change.","pos":[0,251],"source":"The <xref:System.IO.Packaging.PackageDigitalSignatureManager.DefaultHashAlgorithm%2A> property is typically used to reset the <xref:System.IO.Packaging.PackageDigitalSignatureManager.HashAlgorithm%2A> property back to default after a temporary change."}]}],"pos":[17286,17968],"yaml":true,"extradata":"MT"},{"content":"A [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] string that identifies the default hash algorithm used to create and verify signatures.","nodes":[{"pos":[0,149],"content":"A <ph id=\"ph1\">[!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)]</ph> string that identifies the default hash algorithm used to create and verify signatures.","source":"A [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] string that identifies the default hash algorithm used to create and verify signatures."}],"pos":[18099,18249],"yaml":true},{"content":"Returns the digital signature for a given signature [!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)].","nodes":[{"pos":[0,110],"content":"Returns the digital signature for a given signature <ph id=\"ph1\">[!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)]</ph>.","source":"Returns the digital signature for a given signature [!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)]."}],"pos":[19428,19539],"yaml":true},{"content":"The [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] of the digital signature to return.","nodes":[{"pos":[0,99],"content":"The <ph id=\"ph1\">[!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)]</ph> of the digital signature to return.","source":"The [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] of the digital signature to return."}],"pos":[19727,19827],"yaml":true},{"content":"The digital signature for the specified <code>signatureUri</code>, or `null` if a signature for the given <code>signatureUri</code> cannot be found.","nodes":[{"pos":[0,148],"content":"The digital signature for the specified <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">signatureUri</ph><ept id=\"p1\">&lt;/code&gt;</ept>, or <ph id=\"ph2\">`null`</ph> if a signature for the given <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph3\">signatureUri</ph><ept id=\"p2\">&lt;/code&gt;</ept> cannot be found.","source":"The digital signature for the specified <code>signatureUri</code>, or `null` if a signature for the given <code>signatureUri</code> cannot be found."}],"pos":[19914,20063],"yaml":true},{"content":"Gets or sets the [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] identifier for the <xref href=\"System.Security.Cryptography.HashAlgorithm\"></xref> instance used to create and verify signatures.","nodes":[{"pos":[0,206],"content":"Gets or sets the <ph id=\"ph1\">[!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)]</ph> identifier for the <ph id=\"ph2\">&lt;xref href=\"System.Security.Cryptography.HashAlgorithm\"&gt;&lt;/xref&gt;</ph> instance used to create and verify signatures.","source":"Gets or sets the [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] identifier for the <xref href=\"System.Security.Cryptography.HashAlgorithm\"></xref> instance used to create and verify signatures."}],"pos":[21191,21398],"yaml":true},{"content":"The default hash algorithm identifier for the standard digital signature manager is <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigSHA1Url> (<xref:System.Security.Cryptography.SHA1>—Secure Hash Algorithm version 1.0).  \n  \n Unless explicitly set otherwise, this property gets the same value as <xref:System.IO.Packaging.PackageDigitalSignatureManager.DefaultHashAlgorithm%2A>.  \n  \n The <xref:System.IO.Packaging.PackageDigitalSignatureManager.HashAlgorithm%2A> property is typically not changed from its default. This property must be changed only if a signature that uses a different known and accessible <xref:System.Security.Cryptography.HashAlgorithm> is encountered.  When finished with the signature that uses a different hash algorithm, call <xref:System.IO.Packaging.PackageDigitalSignatureManager.DefaultHashAlgorithm%2A> to reset the <xref:System.IO.Packaging.PackageDigitalSignatureManager.HashAlgorithm%2A> property back to default.","nodes":[{"pos":[0,226],"content":"The default hash algorithm identifier for the standard digital signature manager is <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigSHA1Url> (<xref:System.Security.Cryptography.SHA1>—Secure Hash Algorithm version 1.0).","nodes":[{"content":"The default hash algorithm identifier for the standard digital signature manager is <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigSHA1Url&gt;</ph> (<ph id=\"ph2\">&lt;xref:System.Security.Cryptography.SHA1&gt;</ph>—Secure Hash Algorithm version 1.0).","pos":[0,226],"source":"The default hash algorithm identifier for the standard digital signature manager is <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigSHA1Url> (<xref:System.Security.Cryptography.SHA1>—Secure Hash Algorithm version 1.0)."}]},{"pos":[233,385],"content":"Unless explicitly set otherwise, this property gets the same value as <xref:System.IO.Packaging.PackageDigitalSignatureManager.DefaultHashAlgorithm%2A>.","nodes":[{"content":"Unless explicitly set otherwise, this property gets the same value as <ph id=\"ph1\">&lt;xref:System.IO.Packaging.PackageDigitalSignatureManager.DefaultHashAlgorithm%2A&gt;</ph>.","pos":[0,152],"source":"Unless explicitly set otherwise, this property gets the same value as <xref:System.IO.Packaging.PackageDigitalSignatureManager.DefaultHashAlgorithm%2A>."}]},{"pos":[392,954],"content":"The <xref:System.IO.Packaging.PackageDigitalSignatureManager.HashAlgorithm%2A> property is typically not changed from its default. This property must be changed only if a signature that uses a different known and accessible <xref:System.Security.Cryptography.HashAlgorithm> is encountered.  When finished with the signature that uses a different hash algorithm, call <xref:System.IO.Packaging.PackageDigitalSignatureManager.DefaultHashAlgorithm%2A> to reset the <xref:System.IO.Packaging.PackageDigitalSignatureManager.HashAlgorithm%2A> property back to default.","nodes":[{"content":"The <xref:System.IO.Packaging.PackageDigitalSignatureManager.HashAlgorithm%2A> property is typically not changed from its default. This property must be changed only if a signature that uses a different known and accessible <xref:System.Security.Cryptography.HashAlgorithm> is encountered.  When finished with the signature that uses a different hash algorithm, call <xref:System.IO.Packaging.PackageDigitalSignatureManager.DefaultHashAlgorithm%2A> to reset the <xref:System.IO.Packaging.PackageDigitalSignatureManager.HashAlgorithm%2A> property back to default.","pos":[0,562],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.IO.Packaging.PackageDigitalSignatureManager.HashAlgorithm%2A&gt;</ph> property is typically not changed from its default.","pos":[0,130],"source":"The <xref:System.IO.Packaging.PackageDigitalSignatureManager.HashAlgorithm%2A> property is typically not changed from its default."},{"content":"This property must be changed only if a signature that uses a different known and accessible <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.HashAlgorithm&gt;</ph> is encountered.","pos":[131,289],"source":" This property must be changed only if a signature that uses a different known and accessible <xref:System.Security.Cryptography.HashAlgorithm> is encountered."},{"content":"When finished with the signature that uses a different hash algorithm, call <ph id=\"ph1\">&lt;xref:System.IO.Packaging.PackageDigitalSignatureManager.DefaultHashAlgorithm%2A&gt;</ph> to reset the <ph id=\"ph2\">&lt;xref:System.IO.Packaging.PackageDigitalSignatureManager.HashAlgorithm%2A&gt;</ph> property back to default.","pos":[291,562],"source":"  When finished with the signature that uses a different hash algorithm, call <xref:System.IO.Packaging.PackageDigitalSignatureManager.DefaultHashAlgorithm%2A> to reset the <xref:System.IO.Packaging.PackageDigitalSignatureManager.HashAlgorithm%2A> property back to default."}]}]}],"pos":[21409,22370],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.Security.Cryptography.Xml.SignedXml\"></xref> [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] identifier for the <xref href=\"System.Security.Cryptography.HashAlgorithm\"></xref> instance used to create and verify signatures.","nodes":[{"pos":[0,257],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.Xml.SignedXml\"&gt;&lt;/xref&gt;</ph> <ph id=\"ph2\">[!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)]</ph> identifier for the <ph id=\"ph3\">&lt;xref href=\"System.Security.Cryptography.HashAlgorithm\"&gt;&lt;/xref&gt;</ph> instance used to create and verify signatures.","source":"The <xref href=\"System.Security.Cryptography.Xml.SignedXml\"></xref> [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] identifier for the <xref href=\"System.Security.Cryptography.HashAlgorithm\"></xref> instance used to create and verify signatures."}],"pos":[22492,22750],"yaml":true},{"content":"The string for the [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] to set is `null`.","nodes":[{"pos":[0,96],"content":"The string for the <ph id=\"ph1\">[!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)]</ph> to set is <ph id=\"ph2\">`null`</ph>.","source":"The string for the [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] to set is `null`."}],"pos":[22944,23041],"yaml":true},{"content":"The string for the [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] to set is empty.","nodes":[{"pos":[0,95],"content":"The string for the <ph id=\"ph1\">[!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)]</ph> to set is empty.","source":"The string for the [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] to set is empty."}],"pos":[23135,23231],"yaml":true},{"content":"Occurs when <xref href=\"System.IO.Packaging.PackageDigitalSignatureManager.VerifySignatures(System.Boolean)\"></xref> encounters an invalid signature.","nodes":[{"pos":[0,149],"content":"Occurs when <ph id=\"ph1\">&lt;xref href=\"System.IO.Packaging.PackageDigitalSignatureManager.VerifySignatures(System.Boolean)\"&gt;&lt;/xref&gt;</ph> encounters an invalid signature.","source":"Occurs when <xref href=\"System.IO.Packaging.PackageDigitalSignatureManager.VerifySignatures(System.Boolean)\"></xref> encounters an invalid signature."}],"pos":[24310,24460],"yaml":true},{"content":"Gets a value that indicates whether the package contains any signatures.","nodes":[{"pos":[0,72],"content":"Gets a value that indicates whether the package contains any signatures.","nodes":[{"content":"Gets a value that indicates whether the package contains any signatures.","pos":[0,72]}]}],"pos":[25684,25757],"yaml":true},{"content":"The <xref:System.IO.Packaging.PackageDigitalSignatureManager.IsSigned%2A> property does not perform signature validations. If signatures are present and <xref:System.IO.Packaging.PackageDigitalSignatureManager.IsSigned%2A> is `true`, one or more of the signatures might not be valid.  Call <xref:System.IO.Packaging.PackageDigitalSignatureManager.VerifySignatures%2A> to confirm that the signatures are valid and have not changed.","nodes":[{"pos":[0,430],"content":"The <xref:System.IO.Packaging.PackageDigitalSignatureManager.IsSigned%2A> property does not perform signature validations. If signatures are present and <xref:System.IO.Packaging.PackageDigitalSignatureManager.IsSigned%2A> is `true`, one or more of the signatures might not be valid.  Call <xref:System.IO.Packaging.PackageDigitalSignatureManager.VerifySignatures%2A> to confirm that the signatures are valid and have not changed.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.IO.Packaging.PackageDigitalSignatureManager.IsSigned%2A&gt;</ph> property does not perform signature validations.","pos":[0,122],"source":"The <xref:System.IO.Packaging.PackageDigitalSignatureManager.IsSigned%2A> property does not perform signature validations."},{"content":"If signatures are present and <ph id=\"ph1\">&lt;xref:System.IO.Packaging.PackageDigitalSignatureManager.IsSigned%2A&gt;</ph> is <ph id=\"ph2\">`true`</ph>, one or more of the signatures might not be valid.","pos":[123,283],"source":" If signatures are present and <xref:System.IO.Packaging.PackageDigitalSignatureManager.IsSigned%2A> is `true`, one or more of the signatures might not be valid."},{"content":"Call <ph id=\"ph1\">&lt;xref:System.IO.Packaging.PackageDigitalSignatureManager.VerifySignatures%2A&gt;</ph> to confirm that the signatures are valid and have not changed.","pos":[285,430],"source":"  Call <xref:System.IO.Packaging.PackageDigitalSignatureManager.VerifySignatures%2A> to confirm that the signatures are valid and have not changed."}]}],"pos":[25768,26199],"yaml":true,"extradata":"MT"},{"content":"`true` if the package contains signatures; otherwise, `false`.","nodes":[{"pos":[0,62],"content":"<ph id=\"ph1\">`true`</ph> if the package contains signatures; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the package contains signatures; otherwise, `false`."}],"pos":[27021,27086],"yaml":true},{"content":"Gets or sets a handle to the parent window for displaying a certificate selection dialog box.","nodes":[{"pos":[0,93],"content":"Gets or sets a handle to the parent window for displaying a certificate selection dialog box.","nodes":[{"content":"Gets or sets a handle to the parent window for displaying a certificate selection dialog box.","pos":[0,93]}]}],"pos":[28204,28298],"yaml":true},{"content":"A certificate selection dialog box is presented only if a <xref:System.IO.Packaging.PackageDigitalSignatureManager.Sign%2A> call contains no certificates. If no certificates are specified, <xref:System.IO.Packaging.PackageDigitalSignatureManager.Sign%2A> will display a certificate selection dialog box that enables the user to choose which certificate to use for signing.","nodes":[{"pos":[0,372],"content":"A certificate selection dialog box is presented only if a <xref:System.IO.Packaging.PackageDigitalSignatureManager.Sign%2A> call contains no certificates. If no certificates are specified, <xref:System.IO.Packaging.PackageDigitalSignatureManager.Sign%2A> will display a certificate selection dialog box that enables the user to choose which certificate to use for signing.","nodes":[{"content":"A certificate selection dialog box is presented only if a <xref:System.IO.Packaging.PackageDigitalSignatureManager.Sign%2A> call contains no certificates. If no certificates are specified, <xref:System.IO.Packaging.PackageDigitalSignatureManager.Sign%2A> will display a certificate selection dialog box that enables the user to choose which certificate to use for signing.","pos":[0,372],"nodes":[{"content":"A certificate selection dialog box is presented only if a <ph id=\"ph1\">&lt;xref:System.IO.Packaging.PackageDigitalSignatureManager.Sign%2A&gt;</ph> call contains no certificates.","pos":[0,154],"source":"A certificate selection dialog box is presented only if a <xref:System.IO.Packaging.PackageDigitalSignatureManager.Sign%2A> call contains no certificates."},{"content":"If no certificates are specified, <ph id=\"ph1\">&lt;xref:System.IO.Packaging.PackageDigitalSignatureManager.Sign%2A&gt;</ph> will display a certificate selection dialog box that enables the user to choose which certificate to use for signing.","pos":[155,372],"source":" If no certificates are specified, <xref:System.IO.Packaging.PackageDigitalSignatureManager.Sign%2A> will display a certificate selection dialog box that enables the user to choose which certificate to use for signing."}]}]}],"pos":[28309,28682],"yaml":true,"extradata":"MT"},{"content":"The handle of the parent window to use to display the certificate selection dialog box.","nodes":[{"pos":[0,87],"content":"The handle of the parent window to use to display the certificate selection dialog box.","nodes":[{"content":"The handle of the parent window to use to display the certificate selection dialog box.","pos":[0,87]}]}],"pos":[28803,28891],"yaml":true},{"content":"Removes all digital signatures from the package.","nodes":[{"pos":[0,48],"content":"Removes all digital signatures from the package.","nodes":[{"content":"Removes all digital signatures from the package.","pos":[0,48]}]}],"pos":[30059,30108],"yaml":true},{"content":"This method also removes all X.509 certificates from the package.  After removing all signatures and certificates, call <xref:System.IO.Packaging.Package.Flush%2A> to persist all changes to the store.","nodes":[{"pos":[0,200],"content":"This method also removes all X.509 certificates from the package.  After removing all signatures and certificates, call <xref:System.IO.Packaging.Package.Flush%2A> to persist all changes to the store.","nodes":[{"content":"This method also removes all X.509 certificates from the package.  After removing all signatures and certificates, call <xref:System.IO.Packaging.Package.Flush%2A> to persist all changes to the store.","pos":[0,200],"nodes":[{"content":"This method also removes all X.509 certificates from the package.","pos":[0,65]},{"content":"After removing all signatures and certificates, call <ph id=\"ph1\">&lt;xref:System.IO.Packaging.Package.Flush%2A&gt;</ph> to persist all changes to the store.","pos":[67,200],"source":"  After removing all signatures and certificates, call <xref:System.IO.Packaging.Package.Flush%2A> to persist all changes to the store."}]}]}],"pos":[30119,30320],"yaml":true,"extradata":"MT"},{"content":"Removes the digital signature with a given signature [!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)].","nodes":[{"pos":[0,111],"content":"Removes the digital signature with a given signature <ph id=\"ph1\">[!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)]</ph>.","source":"Removes the digital signature with a given signature [!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)]."}],"pos":[31594,31706],"yaml":true},{"content":"This method also removes the associated X.509 certificate if it is not referenced by any other digital signature.  \n  \n After removing a signature, call <xref:System.IO.Packaging.Package.Flush%2A> to persist the change to the store.","nodes":[{"pos":[0,113],"content":"This method also removes the associated X.509 certificate if it is not referenced by any other digital signature.","nodes":[{"content":"This method also removes the associated X.509 certificate if it is not referenced by any other digital signature.","pos":[0,113]}]},{"pos":[120,232],"content":"After removing a signature, call <xref:System.IO.Packaging.Package.Flush%2A> to persist the change to the store.","nodes":[{"content":"After removing a signature, call <ph id=\"ph1\">&lt;xref:System.IO.Packaging.Package.Flush%2A&gt;</ph> to persist the change to the store.","pos":[0,112],"source":"After removing a signature, call <xref:System.IO.Packaging.Package.Flush%2A> to persist the change to the store."}]}],"pos":[31717,31954],"yaml":true,"extradata":"MT"},{"content":"The [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] of the <xref href=\"System.IO.Packaging.PackageDigitalSignature\"></xref> to remove.","nodes":[{"pos":[0,146],"content":"The <ph id=\"ph1\">[!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)]</ph> of the <ph id=\"ph2\">&lt;xref href=\"System.IO.Packaging.PackageDigitalSignature\"&gt;&lt;/xref&gt;</ph> to remove.","source":"The [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] of the <xref href=\"System.IO.Packaging.PackageDigitalSignature\"></xref> to remove."}],"pos":[32106,32253],"yaml":true},{"content":"Prompts the user for an X.509 certificate, which is then used to digitally sign a specified list of package parts.","nodes":[{"pos":[0,114],"content":"Prompts the user for an X.509 certificate, which is then used to digitally sign a specified list of package parts.","nodes":[{"content":"Prompts the user for an X.509 certificate, which is then used to digitally sign a specified list of package parts.","pos":[0,114]}]}],"pos":[33538,33653],"yaml":true},{"content":"To make the certificate selection dialog modal to a particular window, set the <xref:System.IO.Packaging.PackageDigitalSignatureManager.ParentWindow%2A> property before calling <xref:System.IO.Packaging.PackageDigitalSignatureManager.Sign%2A>.  \n  \n <xref:System.IO.Packaging.PackageDigitalSignatureManager.Sign%2A> will not prompt for certificates if there are none in the default certificate store.","nodes":[{"pos":[0,243],"content":"To make the certificate selection dialog modal to a particular window, set the <xref:System.IO.Packaging.PackageDigitalSignatureManager.ParentWindow%2A> property before calling <xref:System.IO.Packaging.PackageDigitalSignatureManager.Sign%2A>.","nodes":[{"content":"To make the certificate selection dialog modal to a particular window, set the <ph id=\"ph1\">&lt;xref:System.IO.Packaging.PackageDigitalSignatureManager.ParentWindow%2A&gt;</ph> property before calling <ph id=\"ph2\">&lt;xref:System.IO.Packaging.PackageDigitalSignatureManager.Sign%2A&gt;</ph>.","pos":[0,243],"source":"To make the certificate selection dialog modal to a particular window, set the <xref:System.IO.Packaging.PackageDigitalSignatureManager.ParentWindow%2A> property before calling <xref:System.IO.Packaging.PackageDigitalSignatureManager.Sign%2A>."}]},{"pos":[250,400],"content":"<xref:System.IO.Packaging.PackageDigitalSignatureManager.Sign%2A> will not prompt for certificates if there are none in the default certificate store.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.IO.Packaging.PackageDigitalSignatureManager.Sign%2A&gt;</ph> will not prompt for certificates if there are none in the default certificate store.","pos":[0,150],"source":"<xref:System.IO.Packaging.PackageDigitalSignatureManager.Sign%2A> will not prompt for certificates if there are none in the default certificate store."}]}],"pos":[33664,34069],"yaml":true,"extradata":"MT"},{"content":"The list of [!INCLUDE[TLA#tla_uri#plural](~/includes/tlasharptla-urisharpplural-md.md)] for the <xref href=\"System.IO.Packaging.PackagePart\"></xref> elements to sign.","nodes":[{"pos":[0,166],"content":"The list of <ph id=\"ph1\">[!INCLUDE[TLA#tla_uri#plural](~/includes/tlasharptla-urisharpplural-md.md)]</ph> for the <ph id=\"ph2\">&lt;xref href=\"System.IO.Packaging.PackagePart\"&gt;&lt;/xref&gt;</ph> elements to sign.","source":"The list of [!INCLUDE[TLA#tla_uri#plural](~/includes/tlasharptla-urisharpplural-md.md)] for the <xref href=\"System.IO.Packaging.PackagePart\"></xref> elements to sign."}],"pos":[34912,35079],"yaml":true},{"content":"The digital signature used to sign the list of <code>parts</code>.","nodes":[{"pos":[0,66],"content":"The digital signature used to sign the list of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">parts</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"The digital signature used to sign the list of <code>parts</code>."}],"pos":[35166,35233],"yaml":true},{"content":"Signs a list of package parts with a given X.509 certificate.","nodes":[{"pos":[0,61],"content":"Signs a list of package parts with a given X.509 certificate.","nodes":[{"content":"Signs a list of package parts with a given X.509 certificate.","pos":[0,61]}]}],"pos":[36744,36806],"yaml":true},{"content":"The list of [!INCLUDE[TLA#tla_uri#plural](~/includes/tlasharptla-urisharpplural-md.md)] for the <xref href=\"System.IO.Packaging.PackagePart\"></xref> elements to sign.","nodes":[{"pos":[0,166],"content":"The list of <ph id=\"ph1\">[!INCLUDE[TLA#tla_uri#plural](~/includes/tlasharptla-urisharpplural-md.md)]</ph> for the <ph id=\"ph2\">&lt;xref href=\"System.IO.Packaging.PackagePart\"&gt;&lt;/xref&gt;</ph> elements to sign.","source":"The list of [!INCLUDE[TLA#tla_uri#plural](~/includes/tlasharptla-urisharpplural-md.md)] for the <xref href=\"System.IO.Packaging.PackagePart\"></xref> elements to sign."}],"pos":[37775,37942],"yaml":true},{"content":"The X.509 certificate to use to digitally sign each of the specified <code>parts</code>.","nodes":[{"pos":[0,88],"content":"The X.509 certificate to use to digitally sign each of the specified <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">parts</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"The X.509 certificate to use to digitally sign each of the specified <code>parts</code>."}],"pos":[38057,38146],"yaml":true},{"content":"The digital signature used to sign the given list of <code>parts</code>; or `null` if no certificate could be found or the user clicked \"Cancel\" in the certificate selection dialog box.","nodes":[{"pos":[0,185],"content":"The digital signature used to sign the given list of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">parts</ph><ept id=\"p1\">&lt;/code&gt;</ept>; or <ph id=\"ph2\">`null`</ph> if no certificate could be found or the user clicked \"Cancel\" in the certificate selection dialog box.","source":"The digital signature used to sign the given list of <code>parts</code>; or `null` if no certificate could be found or the user clicked \"Cancel\" in the certificate selection dialog box."}],"pos":[38233,38419],"yaml":true},{"content":"Signs a list of package parts and package relationships with a given X.509 certificate.","nodes":[{"pos":[0,87],"content":"Signs a list of package parts and package relationships with a given X.509 certificate.","nodes":[{"content":"Signs a list of package parts and package relationships with a given X.509 certificate.","pos":[0,87]}]}],"pos":[40320,40408],"yaml":true},{"content":"Between `parts` and `relationshipSelectors` there must be at least one element to sign.","nodes":[{"pos":[0,87],"content":"Between <ph id=\"ph1\">`parts`</ph> and <ph id=\"ph2\">`relationshipSelectors`</ph> there must be at least one element to sign.","source":"Between `parts` and `relationshipSelectors` there must be at least one element to sign."}],"pos":[40419,40507],"yaml":true,"extradata":"MT"},{"content":"The list of [!INCLUDE[TLA#tla_uri#plural](~/includes/tlasharptla-urisharpplural-md.md)] for the <xref href=\"System.IO.Packaging.PackagePart\"></xref> objects to sign.","nodes":[{"pos":[0,165],"content":"The list of <ph id=\"ph1\">[!INCLUDE[TLA#tla_uri#plural](~/includes/tlasharptla-urisharpplural-md.md)]</ph> for the <ph id=\"ph2\">&lt;xref href=\"System.IO.Packaging.PackagePart\"&gt;&lt;/xref&gt;</ph> objects to sign.","source":"The list of [!INCLUDE[TLA#tla_uri#plural](~/includes/tlasharptla-urisharpplural-md.md)] for the <xref href=\"System.IO.Packaging.PackagePart\"></xref> objects to sign."}],"pos":[41536,41702],"yaml":true},{"content":"The X.509 certificate to use to digitally sign each of the specified parts and relationships.","nodes":[{"pos":[0,93],"content":"The X.509 certificate to use to digitally sign each of the specified parts and relationships.","nodes":[{"content":"The X.509 certificate to use to digitally sign each of the specified parts and relationships.","pos":[0,93]}]}],"pos":[41817,41911],"yaml":true},{"content":"The list of <xref href=\"System.IO.Packaging.PackageRelationship\"></xref> objects to sign.","nodes":[{"pos":[0,89],"content":"The list of <ph id=\"ph1\">&lt;xref href=\"System.IO.Packaging.PackageRelationship\"&gt;&lt;/xref&gt;</ph> objects to sign.","source":"The list of <xref href=\"System.IO.Packaging.PackageRelationship\"></xref> objects to sign."}],"pos":[42062,42152],"yaml":true},{"content":"The digital signature used to sign the elements specified in the <code>parts</code> and <code>relationshipSelectors</code> lists.","nodes":[{"pos":[0,129],"content":"The digital signature used to sign the elements specified in the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">parts</ph><ept id=\"p1\">&lt;/code&gt;</ept> and <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">relationshipSelectors</ph><ept id=\"p2\">&lt;/code&gt;</ept> lists.","source":"The digital signature used to sign the elements specified in the <code>parts</code> and <code>relationshipSelectors</code> lists."}],"pos":[42239,42369],"yaml":true},{"content":"Neither <code>parts</code> nor <code>relationshipSelectors</code> specify any objects to sign.","nodes":[{"pos":[0,94],"content":"Neither <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">parts</ph><ept id=\"p1\">&lt;/code&gt;</ept> nor <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">relationshipSelectors</ph><ept id=\"p2\">&lt;/code&gt;</ept> specify any objects to sign.","source":"Neither <code>parts</code> nor <code>relationshipSelectors</code> specify any objects to sign."}],"pos":[42546,42641],"yaml":true},{"content":"Signs a list of package parts and package relationships with a given X.509 certificate and [!INCLUDE[TLA#tla_id](~/includes/tlasharptla-id-md.md)].","nodes":[{"pos":[0,147],"content":"Signs a list of package parts and package relationships with a given X.509 certificate and <ph id=\"ph1\">[!INCLUDE[TLA#tla_id](~/includes/tlasharptla-id-md.md)]</ph>.","source":"Signs a list of package parts and package relationships with a given X.509 certificate and [!INCLUDE[TLA#tla_id](~/includes/tlasharptla-id-md.md)]."}],"pos":[44522,44670],"yaml":true},{"content":"The `parts` list can be empty or `null` if `relationshipSelectors` contains at least one entry.  \n  \n The `relationshipSelectors` list can be empty or `null` if `parts` contains at least one entry.  \n  \n Between the `parts` list and `relationshipSelectors` there must be at least one element to sign.","nodes":[{"pos":[0,95],"content":"The <ph id=\"ph1\">`parts`</ph> list can be empty or <ph id=\"ph2\">`null`</ph> if <ph id=\"ph3\">`relationshipSelectors`</ph> contains at least one entry.","source":"The `parts` list can be empty or `null` if `relationshipSelectors` contains at least one entry."},{"pos":[102,197],"content":"The <ph id=\"ph1\">`relationshipSelectors`</ph> list can be empty or <ph id=\"ph2\">`null`</ph> if <ph id=\"ph3\">`parts`</ph> contains at least one entry.","source":"The `relationshipSelectors` list can be empty or `null` if `parts` contains at least one entry."},{"pos":[204,300],"content":"Between the <ph id=\"ph1\">`parts`</ph> list and <ph id=\"ph2\">`relationshipSelectors`</ph> there must be at least one element to sign.","source":"Between the `parts` list and `relationshipSelectors` there must be at least one element to sign."}],"pos":[44681,44988],"yaml":true,"extradata":"MT"},{"content":"The list of [!INCLUDE[TLA#tla_uri#plural](~/includes/tlasharptla-urisharpplural-md.md)] for the <xref href=\"System.IO.Packaging.PackagePart\"></xref> objects to sign.","nodes":[{"pos":[0,165],"content":"The list of <ph id=\"ph1\">[!INCLUDE[TLA#tla_uri#plural](~/includes/tlasharptla-urisharpplural-md.md)]</ph> for the <ph id=\"ph2\">&lt;xref href=\"System.IO.Packaging.PackagePart\"&gt;&lt;/xref&gt;</ph> objects to sign.","source":"The list of [!INCLUDE[TLA#tla_uri#plural](~/includes/tlasharptla-urisharpplural-md.md)] for the <xref href=\"System.IO.Packaging.PackagePart\"></xref> objects to sign."}],"pos":[46037,46203],"yaml":true},{"content":"The X.509 certificate to use to digitally sign each of the specified parts and relationships.","nodes":[{"pos":[0,93],"content":"The X.509 certificate to use to digitally sign each of the specified parts and relationships.","nodes":[{"content":"The X.509 certificate to use to digitally sign each of the specified parts and relationships.","pos":[0,93]}]}],"pos":[46318,46412],"yaml":true},{"content":"The list of <xref href=\"System.IO.Packaging.PackageRelationship\"></xref> objects to sign.","nodes":[{"pos":[0,89],"content":"The list of <ph id=\"ph1\">&lt;xref href=\"System.IO.Packaging.PackageRelationship\"&gt;&lt;/xref&gt;</ph> objects to sign.","source":"The list of <xref href=\"System.IO.Packaging.PackageRelationship\"></xref> objects to sign."}],"pos":[46563,46653],"yaml":true},{"content":"An identification string to associate with the signature.","nodes":[{"pos":[0,57],"content":"An identification string to associate with the signature.","nodes":[{"content":"An identification string to associate with the signature.","pos":[0,57]}]}],"pos":[46720,46778],"yaml":true},{"content":"The digital signature used to sign the elements specified in the <code>parts</code> and <code>relationshipSelectors</code> lists.","nodes":[{"pos":[0,129],"content":"The digital signature used to sign the elements specified in the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">parts</ph><ept id=\"p1\">&lt;/code&gt;</ept> and <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">relationshipSelectors</ph><ept id=\"p2\">&lt;/code&gt;</ept> lists.","source":"The digital signature used to sign the elements specified in the <code>parts</code> and <code>relationshipSelectors</code> lists."}],"pos":[46865,46995],"yaml":true},{"content":"Neither <code>parts</code> nor <code>relationshipSelectors</code> specify any elements to sign.","nodes":[{"pos":[0,95],"content":"Neither <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">parts</ph><ept id=\"p1\">&lt;/code&gt;</ept> nor <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">relationshipSelectors</ph><ept id=\"p2\">&lt;/code&gt;</ept> specify any elements to sign.","source":"Neither <code>parts</code> nor <code>relationshipSelectors</code> specify any elements to sign."}],"pos":[47172,47268],"yaml":true},{"content":"Signs a list of package parts, package relationships, or custom objects with a specified X.509 certificate and signature [!INCLUDE[TLA#tla_id](~/includes/tlasharptla-id-md.md)].","nodes":[{"pos":[0,177],"content":"Signs a list of package parts, package relationships, or custom objects with a specified X.509 certificate and signature <ph id=\"ph1\">[!INCLUDE[TLA#tla_id](~/includes/tlasharptla-id-md.md)]</ph>.","source":"Signs a list of package parts, package relationships, or custom objects with a specified X.509 certificate and signature [!INCLUDE[TLA#tla_id](~/includes/tlasharptla-id-md.md)]."}],"pos":[49797,49975],"yaml":true},{"content":"There must be at least one element to sign in `parts`, `relationshipSelectors`, `signatureObjects`, or `objectReferences`.  \n  \n> [!NOTE]\n>  The terms `Object`, `Manifest`, `Reference`, `SignatureProperties`, and `Transform` in the following two remarks refer to element types and tags defined by the W3C XML-Signature Syntax and Processing specification, see [http://www.w3.org/TR/xmldsig-core/](http://www.w3.org/TR/xmldsig-core/).  \n  \n This and other <xref:System.IO.Packaging.PackageDigitalSignatureManager.Sign%2A> method overloads use the current <xref:System.IO.Packaging.PackageDigitalSignatureManager.TransformMapping%2A> dictionary that defines a `Transform` to apply based on the package part <xref:System.IO.Packaging.PackagePart.ContentType%2A>.  The Microsoft Open Packaging Conventions (OPC) specification currently allows only two valid `Transform` algorithms: C14 and C14N.  The W3C XML-Signature Syntax and Processing standard does not allow empty `Manifest` tags.  Also the Open Packaging Conventions specification requires a <xref:System.IO.Packaging.Package>-specific `Object` tag that contains both `Manifest` and `SignatureProperties` tags.  Each `Manifest` tag additionally also include at least one `Reference` tag.  These tags require that each signature sign at least one <xref:System.IO.Packaging.PackagePart> (non-empty parts tag) or <xref:System.IO.Packaging.PackageRelationship> (non-empty `relationshipSelectors`) even if the signature is needed only to sign `signatureObjects` or `objectReferences`.  \n  \n This <xref:System.IO.Packaging.PackageDigitalSignatureManager.Sign%2A> method ignores the <xref:System.Security.Cryptography.Xml.Reference.DigestMethod%2A> property associated with each <xref:System.Security.Cryptography.Xml.Reference> defined in `objectReferences`.  \n  \n This <xref:System.IO.Packaging.PackageDigitalSignatureManager.Sign%2A> overload provides support for generation of [!INCLUDE[TLA#tla_xml](~/includes/tlasharptla-xml-md.md)] signatures that require custom `Object` tags.  For any provided `Object` tag to be signed, a corresponding `Reference` tag must be provided with a [!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)] that specifies the `Object` tag in local fragment syntax.  For example if the `Object` tag has an ID of \"myObject\", the URI in the `Reference` tag would be \"#myObject\".  For unsigned objects, no `Reference` is required.","nodes":[{"pos":[0,122],"content":"There must be at least one element to sign in <ph id=\"ph1\">`parts`</ph>, <ph id=\"ph2\">`relationshipSelectors`</ph>, <ph id=\"ph3\">`signatureObjects`</ph>, or <ph id=\"ph4\">`objectReferences`</ph>.","source":"There must be at least one element to sign in `parts`, `relationshipSelectors`, `signatureObjects`, or `objectReferences`."},{"pos":[130,433],"content":"[!NOTE]\n The terms `Object`, `Manifest`, `Reference`, `SignatureProperties`, and `Transform` in the following two remarks refer to element types and tags defined by the W3C XML-Signature Syntax and Processing specification, see [http://www.w3.org/TR/xmldsig-core/](http://www.w3.org/TR/xmldsig-core/).","leadings":["","> "],"nodes":[{"content":"The terms <ph id=\"ph1\">`Object`</ph>, <ph id=\"ph2\">`Manifest`</ph>, <ph id=\"ph3\">`Reference`</ph>, <ph id=\"ph4\">`SignatureProperties`</ph>, and <ph id=\"ph5\">`Transform`</ph> in the following two remarks refer to element types and tags defined by the W3C XML-Signature Syntax and Processing specification, see <bpt id=\"p1\">[</bpt>http://www.w3.org/TR/xmldsig-core/<ept id=\"p1\">](http://www.w3.org/TR/xmldsig-core/)</ept>.","pos":[9,301],"source":" The terms `Object`, `Manifest`, `Reference`, `SignatureProperties`, and `Transform` in the following two remarks refer to element types and tags defined by the W3C XML-Signature Syntax and Processing specification, see [http://www.w3.org/TR/xmldsig-core/](http://www.w3.org/TR/xmldsig-core/)."}]},{"pos":[440,1533],"content":"This and other <xref:System.IO.Packaging.PackageDigitalSignatureManager.Sign%2A> method overloads use the current <xref:System.IO.Packaging.PackageDigitalSignatureManager.TransformMapping%2A> dictionary that defines a `Transform` to apply based on the package part <xref:System.IO.Packaging.PackagePart.ContentType%2A>.  The Microsoft Open Packaging Conventions (OPC) specification currently allows only two valid `Transform` algorithms: C14 and C14N.  The W3C XML-Signature Syntax and Processing standard does not allow empty `Manifest` tags.  Also the Open Packaging Conventions specification requires a <xref:System.IO.Packaging.Package>-specific `Object` tag that contains both `Manifest` and `SignatureProperties` tags.  Each `Manifest` tag additionally also include at least one `Reference` tag.  These tags require that each signature sign at least one <xref:System.IO.Packaging.PackagePart> (non-empty parts tag) or <xref:System.IO.Packaging.PackageRelationship> (non-empty `relationshipSelectors`) even if the signature is needed only to sign `signatureObjects` or `objectReferences`.","nodes":[{"content":"This and other <ph id=\"ph1\">&lt;xref:System.IO.Packaging.PackageDigitalSignatureManager.Sign%2A&gt;</ph> method overloads use the current <ph id=\"ph2\">&lt;xref:System.IO.Packaging.PackageDigitalSignatureManager.TransformMapping%2A&gt;</ph> dictionary that defines a <ph id=\"ph3\">`Transform`</ph> to apply based on the package part <ph id=\"ph4\">&lt;xref:System.IO.Packaging.PackagePart.ContentType%2A&gt;</ph>.","pos":[0,319],"source":"This and other <xref:System.IO.Packaging.PackageDigitalSignatureManager.Sign%2A> method overloads use the current <xref:System.IO.Packaging.PackageDigitalSignatureManager.TransformMapping%2A> dictionary that defines a `Transform` to apply based on the package part <xref:System.IO.Packaging.PackagePart.ContentType%2A>."},{"content":"The Microsoft Open Packaging Conventions (OPC) specification currently allows only two valid <ph id=\"ph1\">`Transform`</ph> algorithms: C14 and C14N.","pos":[321,451],"source":"  The Microsoft Open Packaging Conventions (OPC) specification currently allows only two valid `Transform` algorithms: C14 and C14N."},{"content":"The W3C XML-Signature Syntax and Processing standard does not allow empty <ph id=\"ph1\">`Manifest`</ph> tags.","pos":[453,543],"source":"  The W3C XML-Signature Syntax and Processing standard does not allow empty `Manifest` tags."},{"content":"Also the Open Packaging Conventions specification requires a <ph id=\"ph1\">&lt;xref:System.IO.Packaging.Package&gt;</ph>-specific <ph id=\"ph2\">`Object`</ph> tag that contains both <ph id=\"ph3\">`Manifest`</ph> and <ph id=\"ph4\">`SignatureProperties`</ph> tags.","pos":[545,724],"source":"  Also the Open Packaging Conventions specification requires a <xref:System.IO.Packaging.Package>-specific `Object` tag that contains both `Manifest` and `SignatureProperties` tags."},{"content":"Each <ph id=\"ph1\">`Manifest`</ph> tag additionally also include at least one <ph id=\"ph2\">`Reference`</ph> tag.","pos":[726,801],"source":"  Each `Manifest` tag additionally also include at least one `Reference` tag."},{"content":"These tags require that each signature sign at least one <ph id=\"ph1\">&lt;xref:System.IO.Packaging.PackagePart&gt;</ph> (non-empty parts tag) or <ph id=\"ph2\">&lt;xref:System.IO.Packaging.PackageRelationship&gt;</ph> (non-empty <ph id=\"ph3\">`relationshipSelectors`</ph>) even if the signature is needed only to sign <ph id=\"ph4\">`signatureObjects`</ph> or <ph id=\"ph5\">`objectReferences`</ph>.","pos":[803,1093],"source":"  These tags require that each signature sign at least one <xref:System.IO.Packaging.PackagePart> (non-empty parts tag) or <xref:System.IO.Packaging.PackageRelationship> (non-empty `relationshipSelectors`) even if the signature is needed only to sign `signatureObjects` or `objectReferences`."}]},{"pos":[1540,1806],"content":"This <ph id=\"ph1\">&lt;xref:System.IO.Packaging.PackageDigitalSignatureManager.Sign%2A&gt;</ph> method ignores the <ph id=\"ph2\">&lt;xref:System.Security.Cryptography.Xml.Reference.DigestMethod%2A&gt;</ph> property associated with each <ph id=\"ph3\">&lt;xref:System.Security.Cryptography.Xml.Reference&gt;</ph> defined in <ph id=\"ph4\">`objectReferences`</ph>.","source":"This <xref:System.IO.Packaging.PackageDigitalSignatureManager.Sign%2A> method ignores the <xref:System.Security.Cryptography.Xml.Reference.DigestMethod%2A> property associated with each <xref:System.Security.Cryptography.Xml.Reference> defined in `objectReferences`."},{"pos":[1813,2410],"content":"This <xref:System.IO.Packaging.PackageDigitalSignatureManager.Sign%2A> overload provides support for generation of [!INCLUDE[TLA#tla_xml](~/includes/tlasharptla-xml-md.md)] signatures that require custom `Object` tags.  For any provided `Object` tag to be signed, a corresponding `Reference` tag must be provided with a [!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)] that specifies the `Object` tag in local fragment syntax.  For example if the `Object` tag has an ID of \"myObject\", the URI in the `Reference` tag would be \"#myObject\".  For unsigned objects, no `Reference` is required.","nodes":[{"content":"This <ph id=\"ph1\">&lt;xref:System.IO.Packaging.PackageDigitalSignatureManager.Sign%2A&gt;</ph> overload provides support for generation of <ph id=\"ph2\">[!INCLUDE[TLA#tla_xml](~/includes/tlasharptla-xml-md.md)]</ph> signatures that require custom <ph id=\"ph3\">`Object`</ph> tags.","pos":[0,218],"source":"This <xref:System.IO.Packaging.PackageDigitalSignatureManager.Sign%2A> overload provides support for generation of [!INCLUDE[TLA#tla_xml](~/includes/tlasharptla-xml-md.md)] signatures that require custom `Object` tags."},{"content":"For any provided <ph id=\"ph1\">`Object`</ph> tag to be signed, a corresponding <ph id=\"ph2\">`Reference`</ph> tag must be provided with a <ph id=\"ph3\">[!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)]</ph> that specifies the <ph id=\"ph4\">`Object`</ph> tag in local fragment syntax.","pos":[220,435],"source":"  For any provided `Object` tag to be signed, a corresponding `Reference` tag must be provided with a [!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)] that specifies the `Object` tag in local fragment syntax."},{"content":"For example if the <ph id=\"ph1\">`Object`</ph> tag has an ID of \"myObject\", the URI in the <ph id=\"ph2\">`Reference`</ph> tag would be \"#myObject\".","pos":[437,546],"source":"  For example if the `Object` tag has an ID of \"myObject\", the URI in the `Reference` tag would be \"#myObject\"."},{"content":"For unsigned objects, no <ph id=\"ph1\">`Reference`</ph> is required.","pos":[548,597],"source":"  For unsigned objects, no `Reference` is required."}]}],"pos":[49986,52412],"yaml":true,"extradata":"MT"},{"content":"The list of [!INCLUDE[TLA#tla_uri#plural](~/includes/tlasharptla-urisharpplural-md.md)] for the <xref href=\"System.IO.Packaging.PackagePart\"></xref> objects to sign.","nodes":[{"pos":[0,165],"content":"The list of <ph id=\"ph1\">[!INCLUDE[TLA#tla_uri#plural](~/includes/tlasharptla-urisharpplural-md.md)]</ph> for the <ph id=\"ph2\">&lt;xref href=\"System.IO.Packaging.PackagePart\"&gt;&lt;/xref&gt;</ph> objects to sign.","source":"The list of [!INCLUDE[TLA#tla_uri#plural](~/includes/tlasharptla-urisharpplural-md.md)] for the <xref href=\"System.IO.Packaging.PackagePart\"></xref> objects to sign."}],"pos":[53118,53284],"yaml":true},{"content":"The X.509 certificate to use to digitally sign each of the specified parts and relationships.","nodes":[{"pos":[0,93],"content":"The X.509 certificate to use to digitally sign each of the specified parts and relationships.","nodes":[{"content":"The X.509 certificate to use to digitally sign each of the specified parts and relationships.","pos":[0,93]}]}],"pos":[53399,53493],"yaml":true},{"content":"The list of <xref href=\"System.IO.Packaging.PackageRelationship\"></xref> objects to sign.","nodes":[{"pos":[0,89],"content":"The list of <ph id=\"ph1\">&lt;xref href=\"System.IO.Packaging.PackageRelationship\"&gt;&lt;/xref&gt;</ph> objects to sign.","source":"The list of <xref href=\"System.IO.Packaging.PackageRelationship\"></xref> objects to sign."}],"pos":[53644,53734],"yaml":true},{"content":"An identification string to associate with the signature.","nodes":[{"pos":[0,57],"content":"An identification string to associate with the signature.","nodes":[{"content":"An identification string to associate with the signature.","pos":[0,57]}]}],"pos":[53801,53859],"yaml":true},{"content":"A list of custom data objects to sign.","nodes":[{"pos":[0,38],"content":"A list of custom data objects to sign.","nodes":[{"content":"A list of custom data objects to sign.","pos":[0,38]}]}],"pos":[54001,54040],"yaml":true},{"content":"A list of references to custom objects to sign.","nodes":[{"pos":[0,47],"content":"A list of references to custom objects to sign.","nodes":[{"content":"A list of references to custom objects to sign.","pos":[0,47]}]}],"pos":[54181,54229],"yaml":true},{"content":"The digital signature used to sign the elements specified in the <code>parts</code> and <code>relationshipSelectors</code> lists.","nodes":[{"pos":[0,129],"content":"The digital signature used to sign the elements specified in the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">parts</ph><ept id=\"p1\">&lt;/code&gt;</ept> and <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">relationshipSelectors</ph><ept id=\"p2\">&lt;/code&gt;</ept> lists.","source":"The digital signature used to sign the elements specified in the <code>parts</code> and <code>relationshipSelectors</code> lists."}],"pos":[54316,54446],"yaml":true},{"content":"Neither <code>parts</code>, <code>relationshipSelectors</code>, <code>signatureObjects</code>, nor <code>objectReferences</code> specify any elements to sign.","nodes":[{"pos":[0,158],"content":"Neither <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">parts</ph><ept id=\"p1\">&lt;/code&gt;</ept>, <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">relationshipSelectors</ph><ept id=\"p2\">&lt;/code&gt;</ept>, <bpt id=\"p3\">&lt;code&gt;</bpt><ph id=\"ph3\">signatureObjects</ph><ept id=\"p3\">&lt;/code&gt;</ept>, nor <bpt id=\"p4\">&lt;code&gt;</bpt><ph id=\"ph4\">objectReferences</ph><ept id=\"p4\">&lt;/code&gt;</ept> specify any elements to sign.","source":"Neither <code>parts</code>, <code>relationshipSelectors</code>, <code>signatureObjects</code>, nor <code>objectReferences</code> specify any elements to sign."}],"pos":[54623,54782],"yaml":true},{"content":"A <xref href=\"System.IO.Packaging.PackagePart.ContentType\"></xref> of a part being signed references an empty, `null`, or undefined <xref href=\"System.IO.Packaging.PackageDigitalSignatureManager.TransformMapping\"></xref>.","nodes":[{"pos":[0,221],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.IO.Packaging.PackagePart.ContentType\"&gt;&lt;/xref&gt;</ph> of a part being signed references an empty, <ph id=\"ph2\">`null`</ph>, or undefined <ph id=\"ph3\">&lt;xref href=\"System.IO.Packaging.PackageDigitalSignatureManager.TransformMapping\"&gt;&lt;/xref&gt;</ph>.","source":"A <xref href=\"System.IO.Packaging.PackagePart.ContentType\"></xref> of a part being signed references an empty, `null`, or undefined <xref href=\"System.IO.Packaging.PackageDigitalSignatureManager.TransformMapping\"></xref>."}],"pos":[54892,55114],"yaml":true},{"content":"<code>signatureId</code> is not `null` and is not a valid [!INCLUDE[TLA#tla_xml](~/includes/tlasharptla-xml-md.md)] schema ID (for example, begins with a leading numeric digit).","nodes":[{"pos":[0,177],"content":"<ph id=\"ph1\">&lt;code&gt;signatureId&lt;/code&gt;</ph> is not <ph id=\"ph2\">`null`</ph> and is not a valid <ph id=\"ph3\">[!INCLUDE[TLA#tla_xml](~/includes/tlasharptla-xml-md.md)]</ph> schema ID (for example, begins with a leading numeric digit).","source":"<code>signatureId</code> is not `null` and is not a valid [!INCLUDE[TLA#tla_xml](~/includes/tlasharptla-xml-md.md)] schema ID (for example, begins with a leading numeric digit)."}],"pos":[55206,55384],"yaml":true},{"content":"Gets the [!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)] of the signature origin part.","nodes":[{"pos":[0,96],"content":"Gets the <ph id=\"ph1\">[!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)]</ph> of the signature origin part.","source":"Gets the [!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)] of the signature origin part."}],"pos":[56496,56593],"yaml":true},{"content":"The <xref:System.IO.Packaging.PackageDigitalSignatureManager.SignatureOrigin%2A> [!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)] can vary by package because the name is not formally defined. While this implementation will generally use the same default value, the value returned by this property will reflect whatever origin is already present in the current <xref:System.IO.Packaging.Package>.","nodes":[{"pos":[0,404],"content":"The <xref:System.IO.Packaging.PackageDigitalSignatureManager.SignatureOrigin%2A> [!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)] can vary by package because the name is not formally defined. While this implementation will generally use the same default value, the value returned by this property will reflect whatever origin is already present in the current <xref:System.IO.Packaging.Package>.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.IO.Packaging.PackageDigitalSignatureManager.SignatureOrigin%2A&gt;</ph> <ph id=\"ph2\">[!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)]</ph> can vary by package because the name is not formally defined.","pos":[0,200],"source":"The <xref:System.IO.Packaging.PackageDigitalSignatureManager.SignatureOrigin%2A> [!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)] can vary by package because the name is not formally defined."},{"content":"While this implementation will generally use the same default value, the value returned by this property will reflect whatever origin is already present in the current <ph id=\"ph1\">&lt;xref:System.IO.Packaging.Package&gt;</ph>.","pos":[201,404],"source":" While this implementation will generally use the same default value, the value returned by this property will reflect whatever origin is already present in the current <xref:System.IO.Packaging.Package>."}]}],"pos":[56604,57009],"yaml":true,"extradata":"MT"},{"content":"The [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] of the signature origin part.","nodes":[{"pos":[0,93],"content":"The <ph id=\"ph1\">[!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)]</ph> of the signature origin part.","source":"The [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] of the signature origin part."}],"pos":[57122,57216],"yaml":true},{"content":"Gets the type of default signature origin relationship.","nodes":[{"pos":[0,55],"content":"Gets the type of default signature origin relationship.","nodes":[{"content":"Gets the type of default signature origin relationship.","pos":[0,55]}]}],"pos":[58455,58511],"yaml":true},{"content":"The type of default signature origin relationship.","nodes":[{"pos":[0,50],"content":"The type of default signature origin relationship.","nodes":[{"content":"The type of default signature origin relationship.","pos":[0,50]}]}],"pos":[58653,58704],"yaml":true},{"content":"Gets a collection of all the signatures contained in the package.","nodes":[{"pos":[0,65],"content":"Gets a collection of all the signatures contained in the package.","nodes":[{"content":"Gets a collection of all the signatures contained in the package.","pos":[0,65]}]}],"pos":[59833,59899],"yaml":true},{"content":"A collection of all the <xref href=\"System.IO.Packaging.PackageDigitalSignature\"></xref> objects.","nodes":[{"pos":[0,97],"content":"A collection of all the <ph id=\"ph1\">&lt;xref href=\"System.IO.Packaging.PackageDigitalSignature\"&gt;&lt;/xref&gt;</ph> objects.","source":"A collection of all the <xref href=\"System.IO.Packaging.PackageDigitalSignature\"></xref> objects."}],"pos":[60182,60280],"yaml":true},{"content":"Gets or sets the date/time format used to create a signature <xref href=\"System.IO.Packaging.PackageDigitalSignature.SigningTime\"></xref>.","nodes":[{"pos":[0,138],"content":"Gets or sets the date/time format used to create a signature <ph id=\"ph1\">&lt;xref href=\"System.IO.Packaging.PackageDigitalSignature.SigningTime\"&gt;&lt;/xref&gt;</ph>.","source":"Gets or sets the date/time format used to create a signature <xref href=\"System.IO.Packaging.PackageDigitalSignature.SigningTime\"></xref>."}],"pos":[61388,61527],"yaml":true},{"content":"The default <xref:System.IO.Packaging.PackageDigitalSignatureManager.TimeFormat%2A> is \"YYYY-MM-DDThh:mm:ss.sTZD\".  \n  \n Date/time formats follow the syntax of the \"W3C Date and Time Formats\" specification at [http://www.w3.org/TR/Note-datetime.html](http://www.w3.org/TR/Note-datetime.html). The components shown below must be present and use the syntax and punctuation as defined.  \n  \n|TimeFormat|Description|Example|  \n|----------------|-----------------|-------------|  \n|YYYY|Year|2005|  \n|YYYY-MM|Year and month|2005-07|  \n|YYYY-MM-DD|Complete date|2005-07-28|  \n|YYYY-MM-DDThh:mmTZD|Complete date plus hours and minutes|2005-07-28T19:20-01:00|  \n|YYYY-MM-DDThh:mm:ssTZD|Complete date plus hours, minutes, and seconds|2005-07-28T19:20:45-01:00|  \n|YYYY-MM-DDThh:mm:ss.sTZD|Complete date plus hours, minutes, and seconds with a decimal fraction|2005-07-28T19:20:45.75-01:00|  \n  \n where:  \n  \n|||  \n|-|-|  \n|YYYY|four-digit year (for example 2005)|  \n|MM|two-digit month (01=January)|  \n|DD|two-digit day of month (01 through 31)|  \n|Thh|two-digit hour (00 through 23, 24-hour time)|  \n|mm|two digits of minutes (00 through 59)|  \n|ss|two digits of seconds (00 through 59)|  \n|s|one or more digits representing a decimal fracion of a second|  \n|TZD|time zone designator (Z or +hh:mm or -hh:mm)|","nodes":[{"pos":[0,114],"content":"The default <xref:System.IO.Packaging.PackageDigitalSignatureManager.TimeFormat%2A> is \"YYYY-MM-DDThh:mm:ss.sTZD\".","nodes":[{"content":"The default <ph id=\"ph1\">&lt;xref:System.IO.Packaging.PackageDigitalSignatureManager.TimeFormat%2A&gt;</ph> is \"YYYY-MM-DDThh:mm:ss.sTZD\".","pos":[0,114],"source":"The default <xref:System.IO.Packaging.PackageDigitalSignatureManager.TimeFormat%2A> is \"YYYY-MM-DDThh:mm:ss.sTZD\"."}]},{"pos":[121,382],"content":"Date/time formats follow the syntax of the \"W3C Date and Time Formats\" specification at [http://www.w3.org/TR/Note-datetime.html](http://www.w3.org/TR/Note-datetime.html). The components shown below must be present and use the syntax and punctuation as defined.","nodes":[{"content":"Date/time formats follow the syntax of the \"W3C Date and Time Formats\" specification at <bpt id=\"p1\">[</bpt>http://www.w3.org/TR/Note-datetime.html<ept id=\"p1\">](http://www.w3.org/TR/Note-datetime.html)</ept>.","pos":[0,171],"source":"Date/time formats follow the syntax of the \"W3C Date and Time Formats\" specification at [http://www.w3.org/TR/Note-datetime.html](http://www.w3.org/TR/Note-datetime.html)."},{"content":"The components shown below must be present and use the syntax and punctuation as defined.","pos":[172,261]}]},{"pos":[389,399],"content":"TimeFormat","nodes":[{"content":"TimeFormat","pos":[0,10]}]},{"pos":[400,411],"content":"Description","nodes":[{"content":"Description","pos":[0,11]}]},{"pos":[412,419],"content":"Example","nodes":[{"content":"Example","pos":[0,7]}]},{"pos":[477,481],"content":"YYYY","nodes":[{"content":"YYYY","pos":[0,4]}]},{"pos":[482,486],"content":"Year","nodes":[{"content":"Year","pos":[0,4]}]},{"pos":[487,491],"content":"2005","nodes":[{"content":"2005","pos":[0,4]}]},{"pos":[496,503],"content":"YYYY-MM","nodes":[{"content":"YYYY-MM","pos":[0,7]}]},{"pos":[504,518],"content":"Year and month","nodes":[{"content":"Year and month","pos":[0,14]}]},{"pos":[519,526],"content":"2005-07","nodes":[{"content":"2005-07","pos":[0,7]}]},{"pos":[531,541],"content":"YYYY-MM-DD","nodes":[{"content":"YYYY-MM-DD","pos":[0,10]}]},{"pos":[542,555],"content":"Complete date","nodes":[{"content":"Complete date","pos":[0,13]}]},{"pos":[556,566],"content":"2005-07-28","nodes":[{"content":"2005-07-28","pos":[0,10]}]},{"pos":[571,590],"content":"YYYY-MM-DDThh:mmTZD","nodes":[{"content":"YYYY-MM-DDThh:mmTZD","pos":[0,19]}]},{"pos":[591,627],"content":"Complete date plus hours and minutes","nodes":[{"content":"Complete date plus hours and minutes","pos":[0,36]}]},{"pos":[628,650],"content":"2005-07-28T19:20-01:00","nodes":[{"content":"2005-07-28T19:20-01:00","pos":[0,22]}]},{"pos":[655,677],"content":"YYYY-MM-DDThh:mm:ssTZD","nodes":[{"content":"YYYY-MM-DDThh:mm:ssTZD","pos":[0,22]}]},{"pos":[678,724],"content":"Complete date plus hours, minutes, and seconds","nodes":[{"content":"Complete date plus hours, minutes, and seconds","pos":[0,46]}]},{"pos":[725,750],"content":"2005-07-28T19:20:45-01:00","nodes":[{"content":"2005-07-28T19:20:45-01:00","pos":[0,25]}]},{"pos":[755,779],"content":"YYYY-MM-DDThh:mm:ss.sTZD","nodes":[{"content":"YYYY-MM-DDThh:mm:ss.sTZD","pos":[0,24]}]},{"pos":[780,850],"content":"Complete date plus hours, minutes, and seconds with a decimal fraction","nodes":[{"content":"Complete date plus hours, minutes, and seconds with a decimal fraction","pos":[0,70]}]},{"pos":[851,879],"content":"2005-07-28T19:20:45.75-01:00","nodes":[{"content":"2005-07-28T19:20:45.75-01:00","pos":[0,28]}]},{"pos":[887,893],"content":"where:","nodes":[{"content":"where:","pos":[0,6]}]},{"pos":[914,918],"content":"YYYY","nodes":[{"content":"YYYY","pos":[0,4]}]},{"pos":[919,953],"content":"four-digit year (for example 2005)","nodes":[{"content":"four-digit year (for example 2005)","pos":[0,34]}]},{"pos":[958,960],"content":"MM","nodes":[{"content":"MM","pos":[0,2]}]},{"pos":[961,989],"content":"two-digit month (01=January)","nodes":[{"content":"two-digit month (01=January)","pos":[0,28]}]},{"pos":[994,996],"content":"DD","nodes":[{"content":"DD","pos":[0,2]}]},{"pos":[997,1035],"content":"two-digit day of month (01 through 31)","nodes":[{"content":"two-digit day of month (01 through 31)","pos":[0,38]}]},{"pos":[1040,1043],"content":"Thh","nodes":[{"content":"Thh","pos":[0,3]}]},{"pos":[1044,1088],"content":"two-digit hour (00 through 23, 24-hour time)","nodes":[{"content":"two-digit hour (00 through 23, 24-hour time)","pos":[0,44]}]},{"pos":[1093,1095],"content":"mm","nodes":[{"content":"mm","pos":[0,2]}]},{"pos":[1096,1133],"content":"two digits of minutes (00 through 59)","nodes":[{"content":"two digits of minutes (00 through 59)","pos":[0,37]}]},{"pos":[1138,1140],"content":"ss","nodes":[{"content":"ss","pos":[0,2]}]},{"pos":[1141,1178],"content":"two digits of seconds (00 through 59)","nodes":[{"content":"two digits of seconds (00 through 59)","pos":[0,37]}]},{"pos":[1183,1184],"content":"s","nodes":[{"content":"s","pos":[0,1]}]},{"pos":[1185,1246],"content":"one or more digits representing a decimal fracion of a second","nodes":[{"content":"one or more digits representing a decimal fracion of a second","pos":[0,61]}]},{"pos":[1251,1254],"content":"TZD","nodes":[{"content":"TZD","pos":[0,3]}]},{"pos":[1255,1299],"content":"time zone designator (Z or +hh:mm or -hh:mm)","nodes":[{"content":"time zone designator (Z or +hh:mm or -hh:mm)","pos":[0,44]}]}],"pos":[61538,62869],"yaml":true,"extradata":"MT"},{"content":"The date/time format used to create a signature <xref href=\"System.IO.Packaging.PackageDigitalSignature.SigningTime\"></xref>.","nodes":[{"pos":[0,125],"content":"The date/time format used to create a signature <ph id=\"ph1\">&lt;xref href=\"System.IO.Packaging.PackageDigitalSignature.SigningTime\"&gt;&lt;/xref&gt;</ph>.","source":"The date/time format used to create a signature <xref href=\"System.IO.Packaging.PackageDigitalSignature.SigningTime\"></xref>."}],"pos":[62988,63114],"yaml":true},{"content":"Gets a dictionary that contains each defined <xref href=\"System.IO.Packaging.PackagePart.ContentType\"></xref> and its associated [!INCLUDE[TLA#tla_xml](~/includes/tlasharptla-xml-md.md)] <xref href=\"System.Security.Cryptography.Xml.Transform\"></xref>.<xref href=\"System.Security.Cryptography.Xml.Transform.Algorithm\"></xref> identifier.","nodes":[{"pos":[0,336],"content":"Gets a dictionary that contains each defined <xref href=\"System.IO.Packaging.PackagePart.ContentType\"></xref> and its associated [!INCLUDE[TLA#tla_xml](~/includes/tlasharptla-xml-md.md)] <xref href=\"System.Security.Cryptography.Xml.Transform\"></xref>.<xref href=\"System.Security.Cryptography.Xml.Transform.Algorithm\"></xref> identifier.","nodes":[{"content":"Gets a dictionary that contains each defined <ph id=\"ph1\">&lt;xref href=\"System.IO.Packaging.PackagePart.ContentType\"&gt;&lt;/xref&gt;</ph> and its associated <ph id=\"ph2\">[!INCLUDE[TLA#tla_xml](~/includes/tlasharptla-xml-md.md)]</ph> <ph id=\"ph3\">&lt;xref href=\"System.Security.Cryptography.Xml.Transform\"&gt;&lt;/xref&gt;</ph>.<ph id=\"ph4\">&lt;xref href=\"System.Security.Cryptography.Xml.Transform.Algorithm\"&gt;&lt;/xref&gt;</ph>","pos":[0,324],"source":"Gets a dictionary that contains each defined <xref href=\"System.IO.Packaging.PackagePart.ContentType\"></xref> and its associated [!INCLUDE[TLA#tla_xml](~/includes/tlasharptla-xml-md.md)] <xref href=\"System.Security.Cryptography.Xml.Transform\"></xref>.<xref href=\"System.Security.Cryptography.Xml.Transform.Algorithm\"></xref>"},{"content":"identifier.","pos":[325,336]}]}],"pos":[64258,64595],"yaml":true},{"content":"During a sign operation the associated transform algorithm for each content type is applied before the <xref:System.IO.Packaging.PackageDigitalSignatureManager.HashAlgorithm%2A> is executed.  \n  \n Default content and transform mappings include:  \n  \n|Content|ContentType|Transform algorithm identifier|  \n|-------------|-----------------|------------------------------------|  \n|Relationship|\"application/vnd.openxmlformats-package.relationships+xml\"|<xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigC14NTransformUrl>|  \n|Digital Signature|\"application/vnd.openxmlformats-package.digital-signature-xmlsignature+xml\"|<xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigC14NTransformUrl>|","nodes":[{"pos":[0,190],"content":"During a sign operation the associated transform algorithm for each content type is applied before the <xref:System.IO.Packaging.PackageDigitalSignatureManager.HashAlgorithm%2A> is executed.","nodes":[{"content":"During a sign operation the associated transform algorithm for each content type is applied before the <ph id=\"ph1\">&lt;xref:System.IO.Packaging.PackageDigitalSignatureManager.HashAlgorithm%2A&gt;</ph> is executed.","pos":[0,190],"source":"During a sign operation the associated transform algorithm for each content type is applied before the <xref:System.IO.Packaging.PackageDigitalSignatureManager.HashAlgorithm%2A> is executed."}]},{"pos":[197,244],"content":"Default content and transform mappings include:","nodes":[{"content":"Default content and transform mappings include:","pos":[0,47]}]},{"pos":[251,258],"content":"Content","nodes":[{"content":"Content","pos":[0,7]}]},{"pos":[259,270],"content":"ContentType","nodes":[{"content":"ContentType","pos":[0,11]}]},{"pos":[271,301],"content":"Transform algorithm identifier","nodes":[{"content":"Transform algorithm identifier","pos":[0,30]}]},{"pos":[379,391],"content":"Relationship","nodes":[{"content":"Relationship","pos":[0,12]}]},{"pos":[392,450],"content":"\"application/vnd.openxmlformats-package.relationships+xml\"","nodes":[{"content":"\"application/vnd.openxmlformats-package.relationships+xml\"","pos":[0,58]}]},{"pos":[451,524],"content":"<xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigC14NTransformUrl>","nodes":[]},{"pos":[529,546],"content":"Digital Signature","nodes":[{"content":"Digital Signature","pos":[0,17]}]},{"pos":[547,622],"content":"\"application/vnd.openxmlformats-package.digital-signature-xmlsignature+xml\"","nodes":[{"content":"\"application/vnd.openxmlformats-package.digital-signature-xmlsignature+xml\"","pos":[0,75]}]},{"pos":[623,696],"content":"<xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigC14NTransformUrl>","nodes":[]}],"pos":[64606,65317],"yaml":true,"extradata":"MT"},{"content":"A dictionary that contains each defined <xref href=\"System.IO.Packaging.PackagePart.ContentType\"></xref> and its associated [!INCLUDE[TLA#tla_xml](~/includes/tlasharptla-xml-md.md)] <xref href=\"System.Security.Cryptography.Xml.Transform\"></xref>.<xref href=\"System.Security.Cryptography.Xml.Transform.Algorithm\"></xref> identifier.","nodes":[{"pos":[0,331],"content":"A dictionary that contains each defined <xref href=\"System.IO.Packaging.PackagePart.ContentType\"></xref> and its associated [!INCLUDE[TLA#tla_xml](~/includes/tlasharptla-xml-md.md)] <xref href=\"System.Security.Cryptography.Xml.Transform\"></xref>.<xref href=\"System.Security.Cryptography.Xml.Transform.Algorithm\"></xref> identifier.","nodes":[{"content":"A dictionary that contains each defined <ph id=\"ph1\">&lt;xref href=\"System.IO.Packaging.PackagePart.ContentType\"&gt;&lt;/xref&gt;</ph> and its associated <ph id=\"ph2\">[!INCLUDE[TLA#tla_xml](~/includes/tlasharptla-xml-md.md)]</ph> <ph id=\"ph3\">&lt;xref href=\"System.Security.Cryptography.Xml.Transform\"&gt;&lt;/xref&gt;</ph>.<ph id=\"ph4\">&lt;xref href=\"System.Security.Cryptography.Xml.Transform.Algorithm\"&gt;&lt;/xref&gt;</ph>","pos":[0,319],"source":"A dictionary that contains each defined <xref href=\"System.IO.Packaging.PackagePart.ContentType\"></xref> and its associated [!INCLUDE[TLA#tla_xml](~/includes/tlasharptla-xml-md.md)] <xref href=\"System.Security.Cryptography.Xml.Transform\"></xref>.<xref href=\"System.Security.Cryptography.Xml.Transform.Algorithm\"></xref>"},{"content":"identifier.","pos":[320,331]}]}],"pos":[65536,65868],"yaml":true},{"content":"Verifies a given X.509 certificate.","nodes":[{"pos":[0,35],"content":"Verifies a given X.509 certificate.","nodes":[{"content":"Verifies a given X.509 certificate.","pos":[0,35]}]}],"pos":[67262,67298],"yaml":true},{"content":"The X.509 certificate to verify.","nodes":[{"pos":[0,32],"content":"The X.509 certificate to verify.","nodes":[{"content":"The X.509 certificate to verify.","pos":[0,32]}]}],"pos":[67679,67712],"yaml":true},{"content":"<xref href=\"System.Security.Cryptography.X509Certificates.X509ChainStatusFlags.NoError\"></xref> (value 0) if the certificate verified successfully; otherwise, a bitwise enumeration of error flags.","nodes":[{"pos":[0,196],"content":"<ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.X509Certificates.X509ChainStatusFlags.NoError\"&gt;&lt;/xref&gt;</ph> (value 0) if the certificate verified successfully; otherwise, a bitwise enumeration of error flags.","source":"<xref href=\"System.Security.Cryptography.X509Certificates.X509ChainStatusFlags.NoError\"></xref> (value 0) if the certificate verified successfully; otherwise, a bitwise enumeration of error flags."}],"pos":[67822,68019],"yaml":true},{"content":"Verifies the signatures on all signed parts within the package.","nodes":[{"pos":[0,63],"content":"Verifies the signatures on all signed parts within the package.","nodes":[{"content":"Verifies the signatures on all signed parts within the package.","pos":[0,63]}]}],"pos":[69309,69373],"yaml":true},{"content":"This method verifies only the digital signatures; it does not verify the related X.509 certificates.  The <xref:System.IO.Packaging.PackageDigitalSignatureManager.VerifyCertificate%2A> method can be used to verify the X.509 certificates.","nodes":[{"pos":[0,237],"content":"This method verifies only the digital signatures; it does not verify the related X.509 certificates.  The <xref:System.IO.Packaging.PackageDigitalSignatureManager.VerifyCertificate%2A> method can be used to verify the X.509 certificates.","nodes":[{"content":"This method verifies only the digital signatures; it does not verify the related X.509 certificates.  The <xref:System.IO.Packaging.PackageDigitalSignatureManager.VerifyCertificate%2A> method can be used to verify the X.509 certificates.","pos":[0,237],"nodes":[{"content":"This method verifies only the digital signatures; it does not verify the related X.509 certificates.","pos":[0,100]},{"content":"The <ph id=\"ph1\">&lt;xref:System.IO.Packaging.PackageDigitalSignatureManager.VerifyCertificate%2A&gt;</ph> method can be used to verify the X.509 certificates.","pos":[102,237],"source":"  The <xref:System.IO.Packaging.PackageDigitalSignatureManager.VerifyCertificate%2A> method can be used to verify the X.509 certificates."}]}]}],"pos":[69384,69622],"yaml":true,"extradata":"MT"},{"content":"`true` to exit on first failure; otherwise, `false` to continue and check all signatures.","nodes":[{"pos":[0,89],"content":"<ph id=\"ph1\">`true`</ph> to exit on first failure; otherwise, <ph id=\"ph2\">`false`</ph> to continue and check all signatures.","source":"`true` to exit on first failure; otherwise, `false` to continue and check all signatures."}],"pos":[70442,70534],"yaml":true},{"content":"<xref href=\"System.IO.Packaging.VerifyResult.Success\"></xref> (value 0) if all signatures are verified successfully; otherwise, an enumeration that identifies the error.","nodes":[{"pos":[0,169],"content":"<ph id=\"ph1\">&lt;xref href=\"System.IO.Packaging.VerifyResult.Success\"&gt;&lt;/xref&gt;</ph> (value 0) if all signatures are verified successfully; otherwise, an enumeration that identifies the error.","source":"<xref href=\"System.IO.Packaging.VerifyResult.Success\"></xref> (value 0) if all signatures are verified successfully; otherwise, an enumeration that identifies the error."}],"pos":[70610,70780],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.IO.Packaging.PackageDigitalSignatureManager\n  commentId: T:System.IO.Packaging.PackageDigitalSignatureManager\n  id: PackageDigitalSignatureManager\n  children:\n  - System.IO.Packaging.PackageDigitalSignatureManager.#ctor(System.IO.Packaging.Package)\n  - System.IO.Packaging.PackageDigitalSignatureManager.CertificateOption\n  - System.IO.Packaging.PackageDigitalSignatureManager.Countersign\n  - System.IO.Packaging.PackageDigitalSignatureManager.Countersign(System.Security.Cryptography.X509Certificates.X509Certificate)\n  - System.IO.Packaging.PackageDigitalSignatureManager.Countersign(System.Security.Cryptography.X509Certificates.X509Certificate,System.Collections.Generic.IEnumerable{System.Uri})\n  - System.IO.Packaging.PackageDigitalSignatureManager.DefaultHashAlgorithm\n  - System.IO.Packaging.PackageDigitalSignatureManager.GetSignature(System.Uri)\n  - System.IO.Packaging.PackageDigitalSignatureManager.HashAlgorithm\n  - System.IO.Packaging.PackageDigitalSignatureManager.InvalidSignatureEvent\n  - System.IO.Packaging.PackageDigitalSignatureManager.IsSigned\n  - System.IO.Packaging.PackageDigitalSignatureManager.ParentWindow\n  - System.IO.Packaging.PackageDigitalSignatureManager.RemoveAllSignatures\n  - System.IO.Packaging.PackageDigitalSignatureManager.RemoveSignature(System.Uri)\n  - System.IO.Packaging.PackageDigitalSignatureManager.Sign(System.Collections.Generic.IEnumerable{System.Uri})\n  - System.IO.Packaging.PackageDigitalSignatureManager.Sign(System.Collections.Generic.IEnumerable{System.Uri},System.Security.Cryptography.X509Certificates.X509Certificate)\n  - System.IO.Packaging.PackageDigitalSignatureManager.Sign(System.Collections.Generic.IEnumerable{System.Uri},System.Security.Cryptography.X509Certificates.X509Certificate,System.Collections.Generic.IEnumerable{System.IO.Packaging.PackageRelationshipSelector})\n  - System.IO.Packaging.PackageDigitalSignatureManager.Sign(System.Collections.Generic.IEnumerable{System.Uri},System.Security.Cryptography.X509Certificates.X509Certificate,System.Collections.Generic.IEnumerable{System.IO.Packaging.PackageRelationshipSelector},System.String)\n  - System.IO.Packaging.PackageDigitalSignatureManager.Sign(System.Collections.Generic.IEnumerable{System.Uri},System.Security.Cryptography.X509Certificates.X509Certificate,System.Collections.Generic.IEnumerable{System.IO.Packaging.PackageRelationshipSelector},System.String,System.Collections.Generic.IEnumerable{System.Security.Cryptography.Xml.DataObject},System.Collections.Generic.IEnumerable{System.Security.Cryptography.Xml.Reference})\n  - System.IO.Packaging.PackageDigitalSignatureManager.SignatureOrigin\n  - System.IO.Packaging.PackageDigitalSignatureManager.SignatureOriginRelationshipType\n  - System.IO.Packaging.PackageDigitalSignatureManager.Signatures\n  - System.IO.Packaging.PackageDigitalSignatureManager.TimeFormat\n  - System.IO.Packaging.PackageDigitalSignatureManager.TransformMapping\n  - System.IO.Packaging.PackageDigitalSignatureManager.VerifyCertificate(System.Security.Cryptography.X509Certificates.X509Certificate)\n  - System.IO.Packaging.PackageDigitalSignatureManager.VerifySignatures(System.Boolean)\n  langs:\n  - csharp\n  name: PackageDigitalSignatureManager\n  nameWithType: PackageDigitalSignatureManager\n  fullName: System.IO.Packaging.PackageDigitalSignatureManager\n  type: Class\n  assemblies:\n  - WindowsBase\n  namespace: System.IO.Packaging\n  summary: Provides a utility class for the creation and verification of digital signatures in a <xref href=\"System.IO.Packaging.Package\"></xref>.\n  remarks: \"<xref:System.IO.Packaging.PackageDigitalSignatureManager> builds on the architecture of [!INCLUDE[TLA#tla_netframewk](~/includes/tlasharptla-netframewk-md.md)] digital signature classes and provides a utility class for performing common tasks in using digital signatures with <xref:System.IO.Packaging.Package> elements.  \\n  \\n For more information about package digital signatures, see the MSDN article Digital Signing Framework of the Open Packaging Conventions available at [http://go.microsoft.com/fwlink/?LinkId=74494](http://go.microsoft.com/fwlink/?LinkId=74494).\"\n  example:\n  - The following example shows how to use the <xref:System.IO.Packaging.PackageDigitalSignatureManager>.  For the complete sample, see [Creating a Package with a Digital Signature Sample](http://go.microsoft.com/fwlink/?LinkID=159966).\n  syntax:\n    content: public sealed class PackageDigitalSignatureManager\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Packaging/PackageDigitalSignatureManager.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.IO.Packaging.PackageDigitalSignatureManager.#ctor(System.IO.Packaging.Package)\n  commentId: M:System.IO.Packaging.PackageDigitalSignatureManager.#ctor(System.IO.Packaging.Package)\n  id: '#ctor(System.IO.Packaging.Package)'\n  parent: System.IO.Packaging.PackageDigitalSignatureManager\n  langs:\n  - csharp\n  name: PackageDigitalSignatureManager(Package)\n  nameWithType: PackageDigitalSignatureManager.PackageDigitalSignatureManager(Package)\n  fullName: PackageDigitalSignatureManager.PackageDigitalSignatureManager(Package)\n  type: Constructor\n  assemblies:\n  - WindowsBase\n  namespace: System.IO.Packaging\n  summary: Initializes a new instance of the <xref href=\"System.IO.Packaging.PackageDigitalSignatureManager\"></xref> class for use with a specified <xref href=\"System.IO.Packaging.Package\"></xref>.\n  remarks: The target package associated with the signature manager is set during initialization. After it is set, the package associated with the signature manager cannot be changed. Create a new signature manager for each package as needed.\n  example:\n  - The following example shows how to use this constructor.  For the complete sample, see [Creating a Package with a Digital Signature Sample](http://go.microsoft.com/fwlink/?LinkID=159966).\n  syntax:\n    content: public PackageDigitalSignatureManager (System.IO.Packaging.Package package);\n    parameters:\n    - id: package\n      type: System.IO.Packaging.Package\n      description: The package associated with this signature manager.\n  overload: System.IO.Packaging.PackageDigitalSignatureManager.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Packaging/PackageDigitalSignatureManager.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.IO.Packaging.PackageDigitalSignatureManager.CertificateOption\n  commentId: P:System.IO.Packaging.PackageDigitalSignatureManager.CertificateOption\n  id: CertificateOption\n  parent: System.IO.Packaging.PackageDigitalSignatureManager\n  langs:\n  - csharp\n  name: CertificateOption\n  nameWithType: PackageDigitalSignatureManager.CertificateOption\n  fullName: PackageDigitalSignatureManager.CertificateOption\n  type: Property\n  assemblies:\n  - WindowsBase\n  namespace: System.IO.Packaging\n  summary: Gets or sets the X.509 certificate embedding option used by the <xref href=\"System.IO.Packaging.PackageDigitalSignatureManager.Sign(System.Collections.Generic.IEnumerable{System.Uri})\"></xref> method to digitally sign package parts.\n  remarks: This property specifies where the signer's X.509 certificate will be stored when digitally signing a part.\n  example:\n  - The following example shows how to set this property in preparation to digitally sign the parts within a package.  For the complete sample, see [Creating a Package with a Digital Signature Sample](http://go.microsoft.com/fwlink/?LinkID=159966).\n  syntax:\n    content: public System.IO.Packaging.CertificateEmbeddingOption CertificateOption { get; set; }\n    return:\n      type: System.IO.Packaging.CertificateEmbeddingOption\n      description: One of the <xref href=\"System.IO.Packaging.CertificateEmbeddingOption\"></xref> values.\n  overload: System.IO.Packaging.PackageDigitalSignatureManager.CertificateOption*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Packaging/PackageDigitalSignatureManager.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.IO.Packaging.PackageDigitalSignatureManager.Countersign\n  commentId: M:System.IO.Packaging.PackageDigitalSignatureManager.Countersign\n  id: Countersign\n  parent: System.IO.Packaging.PackageDigitalSignatureManager\n  langs:\n  - csharp\n  name: Countersign()\n  nameWithType: PackageDigitalSignatureManager.Countersign()\n  fullName: PackageDigitalSignatureManager.Countersign()\n  type: Method\n  assemblies:\n  - WindowsBase\n  namespace: System.IO.Packaging\n  summary: Countersigns all the signatures in the package with a user-selected X.509 certificate.\n  remarks: \"If no X.509 certificate is specified in the call, this method opens a certificate selection dialog box that prompts the user to choose a certificate to use for signing.  \\n  \\n Set the window handle in the <xref:System.IO.Packaging.PackageDigitalSignatureManager.ParentWindow%2A> property before calling <xref:System.IO.Packaging.PackageDigitalSignatureManager.Countersign%2A> to make the Certificate Selection Dialog modal to the given window.\"\n  syntax:\n    content: public System.IO.Packaging.PackageDigitalSignature Countersign ();\n    parameters: []\n    return:\n      type: System.IO.Packaging.PackageDigitalSignature\n      description: The signature that was added as a countersign; or `null` if no certificate could be located or the user canceled the certificate selection dialog.\n  overload: System.IO.Packaging.PackageDigitalSignatureManager.Countersign*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Packaging/PackageDigitalSignatureManager.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.IO.Packaging.PackageDigitalSignatureManager.Countersign(System.Security.Cryptography.X509Certificates.X509Certificate)\n  commentId: M:System.IO.Packaging.PackageDigitalSignatureManager.Countersign(System.Security.Cryptography.X509Certificates.X509Certificate)\n  id: Countersign(System.Security.Cryptography.X509Certificates.X509Certificate)\n  parent: System.IO.Packaging.PackageDigitalSignatureManager\n  langs:\n  - csharp\n  name: Countersign(X509Certificate)\n  nameWithType: PackageDigitalSignatureManager.Countersign(X509Certificate)\n  fullName: PackageDigitalSignatureManager.Countersign(X509Certificate)\n  type: Method\n  assemblies:\n  - WindowsBase\n  namespace: System.IO.Packaging\n  summary: Countersigns all the signatures in the package with a specified X.509 certificate.\n  syntax:\n    content: public System.IO.Packaging.PackageDigitalSignature Countersign (System.Security.Cryptography.X509Certificates.X509Certificate certificate);\n    parameters:\n    - id: certificate\n      type: System.Security.Cryptography.X509Certificates.X509Certificate\n      description: The X.509 certificate to add as a countersign signature.\n    return:\n      type: System.IO.Packaging.PackageDigitalSignature\n      description: The signature that was added as a countersign.\n  overload: System.IO.Packaging.PackageDigitalSignatureManager.Countersign*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>certificate</code> is `null`\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Packaging/PackageDigitalSignatureManager.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.IO.Packaging.PackageDigitalSignatureManager.Countersign(System.Security.Cryptography.X509Certificates.X509Certificate,System.Collections.Generic.IEnumerable{System.Uri})\n  commentId: M:System.IO.Packaging.PackageDigitalSignatureManager.Countersign(System.Security.Cryptography.X509Certificates.X509Certificate,System.Collections.Generic.IEnumerable{System.Uri})\n  id: Countersign(System.Security.Cryptography.X509Certificates.X509Certificate,System.Collections.Generic.IEnumerable{System.Uri})\n  parent: System.IO.Packaging.PackageDigitalSignatureManager\n  langs:\n  - csharp\n  name: Countersign(X509Certificate, IEnumerable<Uri>)\n  nameWithType: PackageDigitalSignatureManager.Countersign(X509Certificate, IEnumerable<Uri>)\n  fullName: PackageDigitalSignatureManager.Countersign(X509Certificate, IEnumerable<Uri>)\n  type: Method\n  assemblies:\n  - WindowsBase\n  namespace: System.IO.Packaging\n  summary: Countersigns a list of signatures with a given X.509 certificate.\n  syntax:\n    content: public System.IO.Packaging.PackageDigitalSignature Countersign (System.Security.Cryptography.X509Certificates.X509Certificate certificate, System.Collections.Generic.IEnumerable<Uri> signatures);\n    parameters:\n    - id: certificate\n      type: System.Security.Cryptography.X509Certificates.X509Certificate\n      description: The X.509 certificate to countersign each of the specified <code>signatures</code>.\n    - id: signatures\n      type: System.Collections.Generic.IEnumerable{System.Uri}\n      description: The list of signatures to countersign.\n    return:\n      type: System.IO.Packaging.PackageDigitalSignature\n      description: The digital signature used to countersign each of the <code>signatures</code>.\n  overload: System.IO.Packaging.PackageDigitalSignatureManager.Countersign*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: Either the <code>certificate</code> or <code>signatures</code> parameter is `null`.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The package contains no signed <xref href=\"System.IO.Packaging.PackagePart\"></xref> objects.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The package contains no <xref href=\"System.IO.Packaging.PackageDigitalSignature\"></xref> parts.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Packaging/PackageDigitalSignatureManager.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.IO.Packaging.PackageDigitalSignatureManager.DefaultHashAlgorithm\n  commentId: P:System.IO.Packaging.PackageDigitalSignatureManager.DefaultHashAlgorithm\n  id: DefaultHashAlgorithm\n  parent: System.IO.Packaging.PackageDigitalSignatureManager\n  langs:\n  - csharp\n  name: DefaultHashAlgorithm\n  nameWithType: PackageDigitalSignatureManager.DefaultHashAlgorithm\n  fullName: PackageDigitalSignatureManager.DefaultHashAlgorithm\n  type: Property\n  assemblies:\n  - WindowsBase\n  namespace: System.IO.Packaging\n  summary: Gets a [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] string that identifies the default hash algorithm used to create and verify signatures.\n  remarks: \"The default hash algorithm for the standard <xref:System.IO.Packaging.PackageDigitalSignatureManager> class is <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigSHA1Url> ([!INCLUDE[TLA#tla_sha1](~/includes/tlasharptla-sha1-md.md)]).  \\n  \\n The <xref:System.IO.Packaging.PackageDigitalSignatureManager.HashAlgorithm%2A> property gets or sets the actual hash algorithm this is used to create and verify signatures.  \\n  \\n The <xref:System.IO.Packaging.PackageDigitalSignatureManager.DefaultHashAlgorithm%2A> property is typically used to reset the <xref:System.IO.Packaging.PackageDigitalSignatureManager.HashAlgorithm%2A> property back to default after a temporary change.\"\n  syntax:\n    content: public static string DefaultHashAlgorithm { get; }\n    return:\n      type: System.String\n      description: A [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] string that identifies the default hash algorithm used to create and verify signatures.\n  overload: System.IO.Packaging.PackageDigitalSignatureManager.DefaultHashAlgorithm*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Packaging/PackageDigitalSignatureManager.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.IO.Packaging.PackageDigitalSignatureManager.GetSignature(System.Uri)\n  commentId: M:System.IO.Packaging.PackageDigitalSignatureManager.GetSignature(System.Uri)\n  id: GetSignature(System.Uri)\n  parent: System.IO.Packaging.PackageDigitalSignatureManager\n  langs:\n  - csharp\n  name: GetSignature(Uri)\n  nameWithType: PackageDigitalSignatureManager.GetSignature(Uri)\n  fullName: PackageDigitalSignatureManager.GetSignature(Uri)\n  type: Method\n  assemblies:\n  - WindowsBase\n  namespace: System.IO.Packaging\n  summary: Returns the digital signature for a given signature [!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)].\n  syntax:\n    content: public System.IO.Packaging.PackageDigitalSignature GetSignature (Uri signatureUri);\n    parameters:\n    - id: signatureUri\n      type: System.Uri\n      description: The [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] of the digital signature to return.\n    return:\n      type: System.IO.Packaging.PackageDigitalSignature\n      description: The digital signature for the specified <code>signatureUri</code>, or `null` if a signature for the given <code>signatureUri</code> cannot be found.\n  overload: System.IO.Packaging.PackageDigitalSignatureManager.GetSignature*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Packaging/PackageDigitalSignatureManager.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.IO.Packaging.PackageDigitalSignatureManager.HashAlgorithm\n  commentId: P:System.IO.Packaging.PackageDigitalSignatureManager.HashAlgorithm\n  id: HashAlgorithm\n  parent: System.IO.Packaging.PackageDigitalSignatureManager\n  langs:\n  - csharp\n  name: HashAlgorithm\n  nameWithType: PackageDigitalSignatureManager.HashAlgorithm\n  fullName: PackageDigitalSignatureManager.HashAlgorithm\n  type: Property\n  assemblies:\n  - WindowsBase\n  namespace: System.IO.Packaging\n  summary: Gets or sets the [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] identifier for the <xref href=\"System.Security.Cryptography.HashAlgorithm\"></xref> instance used to create and verify signatures.\n  remarks: \"The default hash algorithm identifier for the standard digital signature manager is <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigSHA1Url> (<xref:System.Security.Cryptography.SHA1>—Secure Hash Algorithm version 1.0).  \\n  \\n Unless explicitly set otherwise, this property gets the same value as <xref:System.IO.Packaging.PackageDigitalSignatureManager.DefaultHashAlgorithm%2A>.  \\n  \\n The <xref:System.IO.Packaging.PackageDigitalSignatureManager.HashAlgorithm%2A> property is typically not changed from its default. This property must be changed only if a signature that uses a different known and accessible <xref:System.Security.Cryptography.HashAlgorithm> is encountered.  When finished with the signature that uses a different hash algorithm, call <xref:System.IO.Packaging.PackageDigitalSignatureManager.DefaultHashAlgorithm%2A> to reset the <xref:System.IO.Packaging.PackageDigitalSignatureManager.HashAlgorithm%2A> property back to default.\"\n  syntax:\n    content: public string HashAlgorithm { get; set; }\n    return:\n      type: System.String\n      description: The <xref href=\"System.Security.Cryptography.Xml.SignedXml\"></xref> [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] identifier for the <xref href=\"System.Security.Cryptography.HashAlgorithm\"></xref> instance used to create and verify signatures.\n  overload: System.IO.Packaging.PackageDigitalSignatureManager.HashAlgorithm*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The string for the [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] to set is `null`.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The string for the [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] to set is empty.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Packaging/PackageDigitalSignatureManager.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.IO.Packaging.PackageDigitalSignatureManager.InvalidSignatureEvent\n  commentId: E:System.IO.Packaging.PackageDigitalSignatureManager.InvalidSignatureEvent\n  id: InvalidSignatureEvent\n  parent: System.IO.Packaging.PackageDigitalSignatureManager\n  langs:\n  - csharp\n  name: InvalidSignatureEvent\n  nameWithType: PackageDigitalSignatureManager.InvalidSignatureEvent\n  fullName: PackageDigitalSignatureManager.InvalidSignatureEvent\n  type: Event\n  assemblies:\n  - WindowsBase\n  namespace: System.IO.Packaging\n  summary: Occurs when <xref href=\"System.IO.Packaging.PackageDigitalSignatureManager.VerifySignatures(System.Boolean)\"></xref> encounters an invalid signature.\n  syntax:\n    content: public event System.IO.Packaging.InvalidSignatureEventHandler InvalidSignatureEvent;\n    return:\n      type: System.IO.Packaging.InvalidSignatureEventHandler\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Packaging/PackageDigitalSignatureManager.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.IO.Packaging.PackageDigitalSignatureManager.IsSigned\n  commentId: P:System.IO.Packaging.PackageDigitalSignatureManager.IsSigned\n  id: IsSigned\n  parent: System.IO.Packaging.PackageDigitalSignatureManager\n  langs:\n  - csharp\n  name: IsSigned\n  nameWithType: PackageDigitalSignatureManager.IsSigned\n  fullName: PackageDigitalSignatureManager.IsSigned\n  type: Property\n  assemblies:\n  - WindowsBase\n  namespace: System.IO.Packaging\n  summary: Gets a value that indicates whether the package contains any signatures.\n  remarks: The <xref:System.IO.Packaging.PackageDigitalSignatureManager.IsSigned%2A> property does not perform signature validations. If signatures are present and <xref:System.IO.Packaging.PackageDigitalSignatureManager.IsSigned%2A> is `true`, one or more of the signatures might not be valid.  Call <xref:System.IO.Packaging.PackageDigitalSignatureManager.VerifySignatures%2A> to confirm that the signatures are valid and have not changed.\n  example:\n  - \"The following example shows how to use the <xref:System.IO.Packaging.PackageDigitalSignatureManager.IsSigned%2A> property to determine if a package contains digital signatures.  For the complete sample, see [Creating a Package with a Digital Signature Sample](http://go.microsoft.com/fwlink/?LinkID=159966).  \\n  \\n [!code-csharp[PackageDigitalSignature#PackageDigSigValidate](~/samples/snippets/csharp/VS_Snippets_Wpf/PackageDigitalSignature/CSharp/PackageDigitalSignature.cs#packagedigsigvalidate)]\\n [!code-vb[PackageDigitalSignature#PackageDigSigValidate](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PackageDigitalSignature/visualbasic/packagedigitalsignature.vb#packagedigsigvalidate)]\"\n  syntax:\n    content: public bool IsSigned { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if the package contains signatures; otherwise, `false`.'\n  overload: System.IO.Packaging.PackageDigitalSignatureManager.IsSigned*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Packaging/PackageDigitalSignatureManager.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.IO.Packaging.PackageDigitalSignatureManager.ParentWindow\n  commentId: P:System.IO.Packaging.PackageDigitalSignatureManager.ParentWindow\n  id: ParentWindow\n  parent: System.IO.Packaging.PackageDigitalSignatureManager\n  langs:\n  - csharp\n  name: ParentWindow\n  nameWithType: PackageDigitalSignatureManager.ParentWindow\n  fullName: PackageDigitalSignatureManager.ParentWindow\n  type: Property\n  assemblies:\n  - WindowsBase\n  namespace: System.IO.Packaging\n  summary: Gets or sets a handle to the parent window for displaying a certificate selection dialog box.\n  remarks: A certificate selection dialog box is presented only if a <xref:System.IO.Packaging.PackageDigitalSignatureManager.Sign%2A> call contains no certificates. If no certificates are specified, <xref:System.IO.Packaging.PackageDigitalSignatureManager.Sign%2A> will display a certificate selection dialog box that enables the user to choose which certificate to use for signing.\n  syntax:\n    content: public IntPtr ParentWindow { get; set; }\n    return:\n      type: System.IntPtr\n      description: The handle of the parent window to use to display the certificate selection dialog box.\n  overload: System.IO.Packaging.PackageDigitalSignatureManager.ParentWindow*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Packaging/PackageDigitalSignatureManager.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.IO.Packaging.PackageDigitalSignatureManager.RemoveAllSignatures\n  commentId: M:System.IO.Packaging.PackageDigitalSignatureManager.RemoveAllSignatures\n  id: RemoveAllSignatures\n  parent: System.IO.Packaging.PackageDigitalSignatureManager\n  langs:\n  - csharp\n  name: RemoveAllSignatures()\n  nameWithType: PackageDigitalSignatureManager.RemoveAllSignatures()\n  fullName: PackageDigitalSignatureManager.RemoveAllSignatures()\n  type: Method\n  assemblies:\n  - WindowsBase\n  namespace: System.IO.Packaging\n  summary: Removes all digital signatures from the package.\n  remarks: This method also removes all X.509 certificates from the package.  After removing all signatures and certificates, call <xref:System.IO.Packaging.Package.Flush%2A> to persist all changes to the store.\n  syntax:\n    content: public void RemoveAllSignatures ();\n    parameters: []\n  overload: System.IO.Packaging.PackageDigitalSignatureManager.RemoveAllSignatures*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Packaging/PackageDigitalSignatureManager.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.IO.Packaging.PackageDigitalSignatureManager.RemoveSignature(System.Uri)\n  commentId: M:System.IO.Packaging.PackageDigitalSignatureManager.RemoveSignature(System.Uri)\n  id: RemoveSignature(System.Uri)\n  parent: System.IO.Packaging.PackageDigitalSignatureManager\n  langs:\n  - csharp\n  name: RemoveSignature(Uri)\n  nameWithType: PackageDigitalSignatureManager.RemoveSignature(Uri)\n  fullName: PackageDigitalSignatureManager.RemoveSignature(Uri)\n  type: Method\n  assemblies:\n  - WindowsBase\n  namespace: System.IO.Packaging\n  summary: Removes the digital signature with a given signature [!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)].\n  remarks: \"This method also removes the associated X.509 certificate if it is not referenced by any other digital signature.  \\n  \\n After removing a signature, call <xref:System.IO.Packaging.Package.Flush%2A> to persist the change to the store.\"\n  syntax:\n    content: public void RemoveSignature (Uri signatureUri);\n    parameters:\n    - id: signatureUri\n      type: System.Uri\n      description: The [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] of the <xref href=\"System.IO.Packaging.PackageDigitalSignature\"></xref> to remove.\n  overload: System.IO.Packaging.PackageDigitalSignatureManager.RemoveSignature*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Packaging/PackageDigitalSignatureManager.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.IO.Packaging.PackageDigitalSignatureManager.Sign(System.Collections.Generic.IEnumerable{System.Uri})\n  commentId: M:System.IO.Packaging.PackageDigitalSignatureManager.Sign(System.Collections.Generic.IEnumerable{System.Uri})\n  id: Sign(System.Collections.Generic.IEnumerable{System.Uri})\n  parent: System.IO.Packaging.PackageDigitalSignatureManager\n  langs:\n  - csharp\n  name: Sign(IEnumerable<Uri>)\n  nameWithType: PackageDigitalSignatureManager.Sign(IEnumerable<Uri>)\n  fullName: PackageDigitalSignatureManager.Sign(IEnumerable<Uri>)\n  type: Method\n  assemblies:\n  - WindowsBase\n  namespace: System.IO.Packaging\n  summary: Prompts the user for an X.509 certificate, which is then used to digitally sign a specified list of package parts.\n  remarks: \"To make the certificate selection dialog modal to a particular window, set the <xref:System.IO.Packaging.PackageDigitalSignatureManager.ParentWindow%2A> property before calling <xref:System.IO.Packaging.PackageDigitalSignatureManager.Sign%2A>.  \\n  \\n <xref:System.IO.Packaging.PackageDigitalSignatureManager.Sign%2A> will not prompt for certificates if there are none in the default certificate store.\"\n  example:\n  - \"The following example shows how to digitally sign a list of package parts.  For the complete sample, see the [Creating a Package with a Digital Signature Sample](http://go.microsoft.com/fwlink/?LinkID=159966).  \\n  \\n [!code-csharp[PackageDigitalSignature#PackageDigSigSign](~/samples/snippets/csharp/VS_Snippets_Wpf/PackageDigitalSignature/CSharp/PackageDigitalSignature.cs#packagedigsigsign)]\\n [!code-vb[PackageDigitalSignature#PackageDigSigSign](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PackageDigitalSignature/visualbasic/packagedigitalsignature.vb#packagedigsigsign)]\"\n  syntax:\n    content: public System.IO.Packaging.PackageDigitalSignature Sign (System.Collections.Generic.IEnumerable<Uri> parts);\n    parameters:\n    - id: parts\n      type: System.Collections.Generic.IEnumerable{System.Uri}\n      description: The list of [!INCLUDE[TLA#tla_uri#plural](~/includes/tlasharptla-urisharpplural-md.md)] for the <xref href=\"System.IO.Packaging.PackagePart\"></xref> elements to sign.\n    return:\n      type: System.IO.Packaging.PackageDigitalSignature\n      description: The digital signature used to sign the list of <code>parts</code>.\n  overload: System.IO.Packaging.PackageDigitalSignatureManager.Sign*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Packaging/PackageDigitalSignatureManager.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.IO.Packaging.PackageDigitalSignatureManager.Sign(System.Collections.Generic.IEnumerable{System.Uri},System.Security.Cryptography.X509Certificates.X509Certificate)\n  commentId: M:System.IO.Packaging.PackageDigitalSignatureManager.Sign(System.Collections.Generic.IEnumerable{System.Uri},System.Security.Cryptography.X509Certificates.X509Certificate)\n  id: Sign(System.Collections.Generic.IEnumerable{System.Uri},System.Security.Cryptography.X509Certificates.X509Certificate)\n  parent: System.IO.Packaging.PackageDigitalSignatureManager\n  langs:\n  - csharp\n  name: Sign(IEnumerable<Uri>, X509Certificate)\n  nameWithType: PackageDigitalSignatureManager.Sign(IEnumerable<Uri>, X509Certificate)\n  fullName: PackageDigitalSignatureManager.Sign(IEnumerable<Uri>, X509Certificate)\n  type: Method\n  assemblies:\n  - WindowsBase\n  namespace: System.IO.Packaging\n  summary: Signs a list of package parts with a given X.509 certificate.\n  remarks: ''\n  example:\n  - \"The following example shows how to digitally sign a list of parts within a <xref:System.IO.Packaging.Package>.  For the complete example, see the [Creating a Package with a Digital Signature Sample](http://go.microsoft.com/fwlink/?LinkID=159966).  \\n  \\n [!code-csharp[PackageDigitalSignature#PackageDigSigSign](~/samples/snippets/csharp/VS_Snippets_Wpf/PackageDigitalSignature/CSharp/PackageDigitalSignature.cs#packagedigsigsign)]\\n [!code-vb[PackageDigitalSignature#PackageDigSigSign](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PackageDigitalSignature/visualbasic/packagedigitalsignature.vb#packagedigsigsign)]\"\n  syntax:\n    content: public System.IO.Packaging.PackageDigitalSignature Sign (System.Collections.Generic.IEnumerable<Uri> parts, System.Security.Cryptography.X509Certificates.X509Certificate certificate);\n    parameters:\n    - id: parts\n      type: System.Collections.Generic.IEnumerable{System.Uri}\n      description: The list of [!INCLUDE[TLA#tla_uri#plural](~/includes/tlasharptla-urisharpplural-md.md)] for the <xref href=\"System.IO.Packaging.PackagePart\"></xref> elements to sign.\n    - id: certificate\n      type: System.Security.Cryptography.X509Certificates.X509Certificate\n      description: The X.509 certificate to use to digitally sign each of the specified <code>parts</code>.\n    return:\n      type: System.IO.Packaging.PackageDigitalSignature\n      description: The digital signature used to sign the given list of <code>parts</code>; or `null` if no certificate could be found or the user clicked \"Cancel\" in the certificate selection dialog box.\n  overload: System.IO.Packaging.PackageDigitalSignatureManager.Sign*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Packaging/PackageDigitalSignatureManager.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.IO.Packaging.PackageDigitalSignatureManager.Sign(System.Collections.Generic.IEnumerable{System.Uri},System.Security.Cryptography.X509Certificates.X509Certificate,System.Collections.Generic.IEnumerable{System.IO.Packaging.PackageRelationshipSelector})\n  commentId: M:System.IO.Packaging.PackageDigitalSignatureManager.Sign(System.Collections.Generic.IEnumerable{System.Uri},System.Security.Cryptography.X509Certificates.X509Certificate,System.Collections.Generic.IEnumerable{System.IO.Packaging.PackageRelationshipSelector})\n  id: Sign(System.Collections.Generic.IEnumerable{System.Uri},System.Security.Cryptography.X509Certificates.X509Certificate,System.Collections.Generic.IEnumerable{System.IO.Packaging.PackageRelationshipSelector})\n  parent: System.IO.Packaging.PackageDigitalSignatureManager\n  langs:\n  - csharp\n  name: Sign(IEnumerable<Uri>, X509Certificate, IEnumerable<PackageRelationshipSelector>)\n  nameWithType: PackageDigitalSignatureManager.Sign(IEnumerable<Uri>, X509Certificate, IEnumerable<PackageRelationshipSelector>)\n  fullName: PackageDigitalSignatureManager.Sign(IEnumerable<Uri>, X509Certificate, IEnumerable<PackageRelationshipSelector>)\n  type: Method\n  assemblies:\n  - WindowsBase\n  namespace: System.IO.Packaging\n  summary: Signs a list of package parts and package relationships with a given X.509 certificate.\n  remarks: Between `parts` and `relationshipSelectors` there must be at least one element to sign.\n  example:\n  - \"The following example shows how to digitally sign a list of package parts.  For the complete sample, see the [Creating a Package with a Digital Signature Sample](http://go.microsoft.com/fwlink/?LinkID=159966).  \\n  \\n [!code-csharp[PackageDigitalSignature#PackageDigSigSign](~/samples/snippets/csharp/VS_Snippets_Wpf/PackageDigitalSignature/CSharp/PackageDigitalSignature.cs#packagedigsigsign)]\\n [!code-vb[PackageDigitalSignature#PackageDigSigSign](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PackageDigitalSignature/visualbasic/packagedigitalsignature.vb#packagedigsigsign)]\"\n  syntax:\n    content: public System.IO.Packaging.PackageDigitalSignature Sign (System.Collections.Generic.IEnumerable<Uri> parts, System.Security.Cryptography.X509Certificates.X509Certificate certificate, System.Collections.Generic.IEnumerable<System.IO.Packaging.PackageRelationshipSelector> relationshipSelectors);\n    parameters:\n    - id: parts\n      type: System.Collections.Generic.IEnumerable{System.Uri}\n      description: The list of [!INCLUDE[TLA#tla_uri#plural](~/includes/tlasharptla-urisharpplural-md.md)] for the <xref href=\"System.IO.Packaging.PackagePart\"></xref> objects to sign.\n    - id: certificate\n      type: System.Security.Cryptography.X509Certificates.X509Certificate\n      description: The X.509 certificate to use to digitally sign each of the specified parts and relationships.\n    - id: relationshipSelectors\n      type: System.Collections.Generic.IEnumerable{System.IO.Packaging.PackageRelationshipSelector}\n      description: The list of <xref href=\"System.IO.Packaging.PackageRelationship\"></xref> objects to sign.\n    return:\n      type: System.IO.Packaging.PackageDigitalSignature\n      description: The digital signature used to sign the elements specified in the <code>parts</code> and <code>relationshipSelectors</code> lists.\n  overload: System.IO.Packaging.PackageDigitalSignatureManager.Sign*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: Neither <code>parts</code> nor <code>relationshipSelectors</code> specify any objects to sign.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Packaging/PackageDigitalSignatureManager.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.IO.Packaging.PackageDigitalSignatureManager.Sign(System.Collections.Generic.IEnumerable{System.Uri},System.Security.Cryptography.X509Certificates.X509Certificate,System.Collections.Generic.IEnumerable{System.IO.Packaging.PackageRelationshipSelector},System.String)\n  commentId: M:System.IO.Packaging.PackageDigitalSignatureManager.Sign(System.Collections.Generic.IEnumerable{System.Uri},System.Security.Cryptography.X509Certificates.X509Certificate,System.Collections.Generic.IEnumerable{System.IO.Packaging.PackageRelationshipSelector},System.String)\n  id: Sign(System.Collections.Generic.IEnumerable{System.Uri},System.Security.Cryptography.X509Certificates.X509Certificate,System.Collections.Generic.IEnumerable{System.IO.Packaging.PackageRelationshipSelector},System.String)\n  parent: System.IO.Packaging.PackageDigitalSignatureManager\n  langs:\n  - csharp\n  name: Sign(IEnumerable<Uri>, X509Certificate, IEnumerable<PackageRelationshipSelector>, String)\n  nameWithType: PackageDigitalSignatureManager.Sign(IEnumerable<Uri>, X509Certificate, IEnumerable<PackageRelationshipSelector>, String)\n  fullName: PackageDigitalSignatureManager.Sign(IEnumerable<Uri>, X509Certificate, IEnumerable<PackageRelationshipSelector>, String)\n  type: Method\n  assemblies:\n  - WindowsBase\n  namespace: System.IO.Packaging\n  summary: Signs a list of package parts and package relationships with a given X.509 certificate and [!INCLUDE[TLA#tla_id](~/includes/tlasharptla-id-md.md)].\n  remarks: \"The `parts` list can be empty or `null` if `relationshipSelectors` contains at least one entry.  \\n  \\n The `relationshipSelectors` list can be empty or `null` if `parts` contains at least one entry.  \\n  \\n Between the `parts` list and `relationshipSelectors` there must be at least one element to sign.\"\n  example:\n  - \"The following example shows how to digitally sign a list of package parts.  For the complete sample, see the [Creating a Package with a Digital Signature Sample](http://go.microsoft.com/fwlink/?LinkID=159966).  \\n  \\n [!code-csharp[PackageDigitalSignature#PackageDigSigSign](~/samples/snippets/csharp/VS_Snippets_Wpf/PackageDigitalSignature/CSharp/PackageDigitalSignature.cs#packagedigsigsign)]\\n [!code-vb[PackageDigitalSignature#PackageDigSigSign](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PackageDigitalSignature/visualbasic/packagedigitalsignature.vb#packagedigsigsign)]\"\n  syntax:\n    content: public System.IO.Packaging.PackageDigitalSignature Sign (System.Collections.Generic.IEnumerable<Uri> parts, System.Security.Cryptography.X509Certificates.X509Certificate certificate, System.Collections.Generic.IEnumerable<System.IO.Packaging.PackageRelationshipSelector> relationshipSelectors, string signatureId);\n    parameters:\n    - id: parts\n      type: System.Collections.Generic.IEnumerable{System.Uri}\n      description: The list of [!INCLUDE[TLA#tla_uri#plural](~/includes/tlasharptla-urisharpplural-md.md)] for the <xref href=\"System.IO.Packaging.PackagePart\"></xref> objects to sign.\n    - id: certificate\n      type: System.Security.Cryptography.X509Certificates.X509Certificate\n      description: The X.509 certificate to use to digitally sign each of the specified parts and relationships.\n    - id: relationshipSelectors\n      type: System.Collections.Generic.IEnumerable{System.IO.Packaging.PackageRelationshipSelector}\n      description: The list of <xref href=\"System.IO.Packaging.PackageRelationship\"></xref> objects to sign.\n    - id: signatureId\n      type: System.String\n      description: An identification string to associate with the signature.\n    return:\n      type: System.IO.Packaging.PackageDigitalSignature\n      description: The digital signature used to sign the elements specified in the <code>parts</code> and <code>relationshipSelectors</code> lists.\n  overload: System.IO.Packaging.PackageDigitalSignatureManager.Sign*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: Neither <code>parts</code> nor <code>relationshipSelectors</code> specify any elements to sign.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Packaging/PackageDigitalSignatureManager.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.IO.Packaging.PackageDigitalSignatureManager.Sign(System.Collections.Generic.IEnumerable{System.Uri},System.Security.Cryptography.X509Certificates.X509Certificate,System.Collections.Generic.IEnumerable{System.IO.Packaging.PackageRelationshipSelector},System.String,System.Collections.Generic.IEnumerable{System.Security.Cryptography.Xml.DataObject},System.Collections.Generic.IEnumerable{System.Security.Cryptography.Xml.Reference})\n  commentId: M:System.IO.Packaging.PackageDigitalSignatureManager.Sign(System.Collections.Generic.IEnumerable{System.Uri},System.Security.Cryptography.X509Certificates.X509Certificate,System.Collections.Generic.IEnumerable{System.IO.Packaging.PackageRelationshipSelector},System.String,System.Collections.Generic.IEnumerable{System.Security.Cryptography.Xml.DataObject},System.Collections.Generic.IEnumerable{System.Security.Cryptography.Xml.Reference})\n  id: Sign(System.Collections.Generic.IEnumerable{System.Uri},System.Security.Cryptography.X509Certificates.X509Certificate,System.Collections.Generic.IEnumerable{System.IO.Packaging.PackageRelationshipSelector},System.String,System.Collections.Generic.IEnumerable{System.Security.Cryptography.Xml.DataObject},System.Collections.Generic.IEnumerable{System.Security.Cryptography.Xml.Reference})\n  parent: System.IO.Packaging.PackageDigitalSignatureManager\n  langs:\n  - csharp\n  name: Sign(IEnumerable<Uri>, X509Certificate, IEnumerable<PackageRelationshipSelector>, String, IEnumerable<DataObject>, IEnumerable<Reference>)\n  nameWithType: PackageDigitalSignatureManager.Sign(IEnumerable<Uri>, X509Certificate, IEnumerable<PackageRelationshipSelector>, String, IEnumerable<DataObject>, IEnumerable<Reference>)\n  fullName: PackageDigitalSignatureManager.Sign(IEnumerable<Uri>, X509Certificate, IEnumerable<PackageRelationshipSelector>, String, IEnumerable<DataObject>, IEnumerable<Reference>)\n  type: Method\n  assemblies:\n  - WindowsBase\n  namespace: System.IO.Packaging\n  summary: Signs a list of package parts, package relationships, or custom objects with a specified X.509 certificate and signature [!INCLUDE[TLA#tla_id](~/includes/tlasharptla-id-md.md)].\n  remarks: \"There must be at least one element to sign in `parts`, `relationshipSelectors`, `signatureObjects`, or `objectReferences`.  \\n  \\n> [!NOTE]\\n>  The terms `Object`, `Manifest`, `Reference`, `SignatureProperties`, and `Transform` in the following two remarks refer to element types and tags defined by the W3C XML-Signature Syntax and Processing specification, see [http://www.w3.org/TR/xmldsig-core/](http://www.w3.org/TR/xmldsig-core/).  \\n  \\n This and other <xref:System.IO.Packaging.PackageDigitalSignatureManager.Sign%2A> method overloads use the current <xref:System.IO.Packaging.PackageDigitalSignatureManager.TransformMapping%2A> dictionary that defines a `Transform` to apply based on the package part <xref:System.IO.Packaging.PackagePart.ContentType%2A>.  The Microsoft Open Packaging Conventions (OPC) specification currently allows only two valid `Transform` algorithms: C14 and C14N.  The W3C XML-Signature Syntax and Processing standard does not allow empty `Manifest` tags.  Also the Open Packaging Conventions specification requires a <xref:System.IO.Packaging.Package>-specific `Object` tag that contains both `Manifest` and `SignatureProperties` tags.  Each `Manifest` tag additionally also include at least one `Reference` tag.  These tags require that each signature sign at least one <xref:System.IO.Packaging.PackagePart> (non-empty parts tag) or <xref:System.IO.Packaging.PackageRelationship> (non-empty `relationshipSelectors`) even if the signature is needed only to sign `signatureObjects` or `objectReferences`.  \\n  \\n This <xref:System.IO.Packaging.PackageDigitalSignatureManager.Sign%2A> method ignores the <xref:System.Security.Cryptography.Xml.Reference.DigestMethod%2A> property associated with each <xref:System.Security.Cryptography.Xml.Reference> defined in `objectReferences`.  \\n  \\n This <xref:System.IO.Packaging.PackageDigitalSignatureManager.Sign%2A> overload provides support for generation of [!INCLUDE[TLA#tla_xml](~/includes/tlasharptla-xml-md.md)] signatures that require custom `Object` tags.  For any provided `Object` tag to be signed, a corresponding `Reference` tag must be provided with a [!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)] that specifies the `Object` tag in local fragment syntax.  For example if the `Object` tag has an ID of \\\"myObject\\\", the URI in the `Reference` tag would be \\\"#myObject\\\".  For unsigned objects, no `Reference` is required.\"\n  syntax:\n    content: >-\n      [System.Security.SecurityCritical]\n\n      public System.IO.Packaging.PackageDigitalSignature Sign (System.Collections.Generic.IEnumerable<Uri> parts, System.Security.Cryptography.X509Certificates.X509Certificate certificate, System.Collections.Generic.IEnumerable<System.IO.Packaging.PackageRelationshipSelector> relationshipSelectors, string signatureId, System.Collections.Generic.IEnumerable<System.Security.Cryptography.Xml.DataObject> signatureObjects, System.Collections.Generic.IEnumerable<System.Security.Cryptography.Xml.Reference> objectReferences);\n    parameters:\n    - id: parts\n      type: System.Collections.Generic.IEnumerable{System.Uri}\n      description: The list of [!INCLUDE[TLA#tla_uri#plural](~/includes/tlasharptla-urisharpplural-md.md)] for the <xref href=\"System.IO.Packaging.PackagePart\"></xref> objects to sign.\n    - id: certificate\n      type: System.Security.Cryptography.X509Certificates.X509Certificate\n      description: The X.509 certificate to use to digitally sign each of the specified parts and relationships.\n    - id: relationshipSelectors\n      type: System.Collections.Generic.IEnumerable{System.IO.Packaging.PackageRelationshipSelector}\n      description: The list of <xref href=\"System.IO.Packaging.PackageRelationship\"></xref> objects to sign.\n    - id: signatureId\n      type: System.String\n      description: An identification string to associate with the signature.\n    - id: signatureObjects\n      type: System.Collections.Generic.IEnumerable{System.Security.Cryptography.Xml.DataObject}\n      description: A list of custom data objects to sign.\n    - id: objectReferences\n      type: System.Collections.Generic.IEnumerable{System.Security.Cryptography.Xml.Reference}\n      description: A list of references to custom objects to sign.\n    return:\n      type: System.IO.Packaging.PackageDigitalSignature\n      description: The digital signature used to sign the elements specified in the <code>parts</code> and <code>relationshipSelectors</code> lists.\n  overload: System.IO.Packaging.PackageDigitalSignatureManager.Sign*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: Neither <code>parts</code>, <code>relationshipSelectors</code>, <code>signatureObjects</code>, nor <code>objectReferences</code> specify any elements to sign.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: A <xref href=\"System.IO.Packaging.PackagePart.ContentType\"></xref> of a part being signed references an empty, `null`, or undefined <xref href=\"System.IO.Packaging.PackageDigitalSignatureManager.TransformMapping\"></xref>.\n  - type: System.Xml.XmlException\n    commentId: T:System.Xml.XmlException\n    description: <code>signatureId</code> is not `null` and is not a valid [!INCLUDE[TLA#tla_xml](~/includes/tlasharptla-xml-md.md)] schema ID (for example, begins with a leading numeric digit).\n  attributes:\n  - type: System.Security.SecurityCriticalAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Packaging/PackageDigitalSignatureManager.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.IO.Packaging.PackageDigitalSignatureManager.SignatureOrigin\n  commentId: P:System.IO.Packaging.PackageDigitalSignatureManager.SignatureOrigin\n  id: SignatureOrigin\n  parent: System.IO.Packaging.PackageDigitalSignatureManager\n  langs:\n  - csharp\n  name: SignatureOrigin\n  nameWithType: PackageDigitalSignatureManager.SignatureOrigin\n  fullName: PackageDigitalSignatureManager.SignatureOrigin\n  type: Property\n  assemblies:\n  - WindowsBase\n  namespace: System.IO.Packaging\n  summary: Gets the [!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)] of the signature origin part.\n  remarks: The <xref:System.IO.Packaging.PackageDigitalSignatureManager.SignatureOrigin%2A> [!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)] can vary by package because the name is not formally defined. While this implementation will generally use the same default value, the value returned by this property will reflect whatever origin is already present in the current <xref:System.IO.Packaging.Package>.\n  syntax:\n    content: public Uri SignatureOrigin { get; }\n    return:\n      type: System.Uri\n      description: The [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] of the signature origin part.\n  overload: System.IO.Packaging.PackageDigitalSignatureManager.SignatureOrigin*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Packaging/PackageDigitalSignatureManager.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.IO.Packaging.PackageDigitalSignatureManager.SignatureOriginRelationshipType\n  commentId: P:System.IO.Packaging.PackageDigitalSignatureManager.SignatureOriginRelationshipType\n  id: SignatureOriginRelationshipType\n  parent: System.IO.Packaging.PackageDigitalSignatureManager\n  langs:\n  - csharp\n  name: SignatureOriginRelationshipType\n  nameWithType: PackageDigitalSignatureManager.SignatureOriginRelationshipType\n  fullName: PackageDigitalSignatureManager.SignatureOriginRelationshipType\n  type: Property\n  assemblies:\n  - WindowsBase\n  namespace: System.IO.Packaging\n  summary: Gets the type of default signature origin relationship.\n  syntax:\n    content: public static string SignatureOriginRelationshipType { get; }\n    return:\n      type: System.String\n      description: The type of default signature origin relationship.\n  overload: System.IO.Packaging.PackageDigitalSignatureManager.SignatureOriginRelationshipType*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Packaging/PackageDigitalSignatureManager.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.IO.Packaging.PackageDigitalSignatureManager.Signatures\n  commentId: P:System.IO.Packaging.PackageDigitalSignatureManager.Signatures\n  id: Signatures\n  parent: System.IO.Packaging.PackageDigitalSignatureManager\n  langs:\n  - csharp\n  name: Signatures\n  nameWithType: PackageDigitalSignatureManager.Signatures\n  fullName: PackageDigitalSignatureManager.Signatures\n  type: Property\n  assemblies:\n  - WindowsBase\n  namespace: System.IO.Packaging\n  summary: Gets a collection of all the signatures contained in the package.\n  syntax:\n    content: public System.Collections.ObjectModel.ReadOnlyCollection<System.IO.Packaging.PackageDigitalSignature> Signatures { get; }\n    return:\n      type: System.Collections.ObjectModel.ReadOnlyCollection{System.IO.Packaging.PackageDigitalSignature}\n      description: A collection of all the <xref href=\"System.IO.Packaging.PackageDigitalSignature\"></xref> objects.\n  overload: System.IO.Packaging.PackageDigitalSignatureManager.Signatures*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Packaging/PackageDigitalSignatureManager.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.IO.Packaging.PackageDigitalSignatureManager.TimeFormat\n  commentId: P:System.IO.Packaging.PackageDigitalSignatureManager.TimeFormat\n  id: TimeFormat\n  parent: System.IO.Packaging.PackageDigitalSignatureManager\n  langs:\n  - csharp\n  name: TimeFormat\n  nameWithType: PackageDigitalSignatureManager.TimeFormat\n  fullName: PackageDigitalSignatureManager.TimeFormat\n  type: Property\n  assemblies:\n  - WindowsBase\n  namespace: System.IO.Packaging\n  summary: Gets or sets the date/time format used to create a signature <xref href=\"System.IO.Packaging.PackageDigitalSignature.SigningTime\"></xref>.\n  remarks: \"The default <xref:System.IO.Packaging.PackageDigitalSignatureManager.TimeFormat%2A> is \\\"YYYY-MM-DDThh:mm:ss.sTZD\\\".  \\n  \\n Date/time formats follow the syntax of the \\\"W3C Date and Time Formats\\\" specification at [http://www.w3.org/TR/Note-datetime.html](http://www.w3.org/TR/Note-datetime.html). The components shown below must be present and use the syntax and punctuation as defined.  \\n  \\n|TimeFormat|Description|Example|  \\n|----------------|-----------------|-------------|  \\n|YYYY|Year|2005|  \\n|YYYY-MM|Year and month|2005-07|  \\n|YYYY-MM-DD|Complete date|2005-07-28|  \\n|YYYY-MM-DDThh:mmTZD|Complete date plus hours and minutes|2005-07-28T19:20-01:00|  \\n|YYYY-MM-DDThh:mm:ssTZD|Complete date plus hours, minutes, and seconds|2005-07-28T19:20:45-01:00|  \\n|YYYY-MM-DDThh:mm:ss.sTZD|Complete date plus hours, minutes, and seconds with a decimal fraction|2005-07-28T19:20:45.75-01:00|  \\n  \\n where:  \\n  \\n|||  \\n|-|-|  \\n|YYYY|four-digit year (for example 2005)|  \\n|MM|two-digit month (01=January)|  \\n|DD|two-digit day of month (01 through 31)|  \\n|Thh|two-digit hour (00 through 23, 24-hour time)|  \\n|mm|two digits of minutes (00 through 59)|  \\n|ss|two digits of seconds (00 through 59)|  \\n|s|one or more digits representing a decimal fracion of a second|  \\n|TZD|time zone designator (Z or +hh:mm or -hh:mm)|\"\n  syntax:\n    content: public string TimeFormat { get; set; }\n    return:\n      type: System.String\n      description: The date/time format used to create a signature <xref href=\"System.IO.Packaging.PackageDigitalSignature.SigningTime\"></xref>.\n  overload: System.IO.Packaging.PackageDigitalSignatureManager.TimeFormat*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Packaging/PackageDigitalSignatureManager.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.IO.Packaging.PackageDigitalSignatureManager.TransformMapping\n  commentId: P:System.IO.Packaging.PackageDigitalSignatureManager.TransformMapping\n  id: TransformMapping\n  parent: System.IO.Packaging.PackageDigitalSignatureManager\n  langs:\n  - csharp\n  name: TransformMapping\n  nameWithType: PackageDigitalSignatureManager.TransformMapping\n  fullName: PackageDigitalSignatureManager.TransformMapping\n  type: Property\n  assemblies:\n  - WindowsBase\n  namespace: System.IO.Packaging\n  summary: Gets a dictionary that contains each defined <xref href=\"System.IO.Packaging.PackagePart.ContentType\"></xref> and its associated [!INCLUDE[TLA#tla_xml](~/includes/tlasharptla-xml-md.md)] <xref href=\"System.Security.Cryptography.Xml.Transform\"></xref>.<xref href=\"System.Security.Cryptography.Xml.Transform.Algorithm\"></xref> identifier.\n  remarks: \"During a sign operation the associated transform algorithm for each content type is applied before the <xref:System.IO.Packaging.PackageDigitalSignatureManager.HashAlgorithm%2A> is executed.  \\n  \\n Default content and transform mappings include:  \\n  \\n|Content|ContentType|Transform algorithm identifier|  \\n|-------------|-----------------|------------------------------------|  \\n|Relationship|\\\"application/vnd.openxmlformats-package.relationships+xml\\\"|<xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigC14NTransformUrl>|  \\n|Digital Signature|\\\"application/vnd.openxmlformats-package.digital-signature-xmlsignature+xml\\\"|<xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigC14NTransformUrl>|\"\n  syntax:\n    content: public System.Collections.Generic.Dictionary<string,string> TransformMapping { get; }\n    return:\n      type: System.Collections.Generic.Dictionary{System.String,System.String}\n      description: A dictionary that contains each defined <xref href=\"System.IO.Packaging.PackagePart.ContentType\"></xref> and its associated [!INCLUDE[TLA#tla_xml](~/includes/tlasharptla-xml-md.md)] <xref href=\"System.Security.Cryptography.Xml.Transform\"></xref>.<xref href=\"System.Security.Cryptography.Xml.Transform.Algorithm\"></xref> identifier.\n  overload: System.IO.Packaging.PackageDigitalSignatureManager.TransformMapping*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Packaging/PackageDigitalSignatureManager.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.IO.Packaging.PackageDigitalSignatureManager.VerifyCertificate(System.Security.Cryptography.X509Certificates.X509Certificate)\n  commentId: M:System.IO.Packaging.PackageDigitalSignatureManager.VerifyCertificate(System.Security.Cryptography.X509Certificates.X509Certificate)\n  id: VerifyCertificate(System.Security.Cryptography.X509Certificates.X509Certificate)\n  parent: System.IO.Packaging.PackageDigitalSignatureManager\n  langs:\n  - csharp\n  name: VerifyCertificate(X509Certificate)\n  nameWithType: PackageDigitalSignatureManager.VerifyCertificate(X509Certificate)\n  fullName: PackageDigitalSignatureManager.VerifyCertificate(X509Certificate)\n  type: Method\n  assemblies:\n  - WindowsBase\n  namespace: System.IO.Packaging\n  summary: Verifies a given X.509 certificate.\n  syntax:\n    content: >-\n      [System.Security.SecurityCritical]\n\n      public static System.Security.Cryptography.X509Certificates.X509ChainStatusFlags VerifyCertificate (System.Security.Cryptography.X509Certificates.X509Certificate certificate);\n    parameters:\n    - id: certificate\n      type: System.Security.Cryptography.X509Certificates.X509Certificate\n      description: The X.509 certificate to verify.\n    return:\n      type: System.Security.Cryptography.X509Certificates.X509ChainStatusFlags\n      description: <xref href=\"System.Security.Cryptography.X509Certificates.X509ChainStatusFlags.NoError\"></xref> (value 0) if the certificate verified successfully; otherwise, a bitwise enumeration of error flags.\n  overload: System.IO.Packaging.PackageDigitalSignatureManager.VerifyCertificate*\n  exceptions: []\n  attributes:\n  - type: System.Security.SecurityCriticalAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Packaging/PackageDigitalSignatureManager.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.IO.Packaging.PackageDigitalSignatureManager.VerifySignatures(System.Boolean)\n  commentId: M:System.IO.Packaging.PackageDigitalSignatureManager.VerifySignatures(System.Boolean)\n  id: VerifySignatures(System.Boolean)\n  parent: System.IO.Packaging.PackageDigitalSignatureManager\n  langs:\n  - csharp\n  name: VerifySignatures(Boolean)\n  nameWithType: PackageDigitalSignatureManager.VerifySignatures(Boolean)\n  fullName: PackageDigitalSignatureManager.VerifySignatures(Boolean)\n  type: Method\n  assemblies:\n  - WindowsBase\n  namespace: System.IO.Packaging\n  summary: Verifies the signatures on all signed parts within the package.\n  remarks: This method verifies only the digital signatures; it does not verify the related X.509 certificates.  The <xref:System.IO.Packaging.PackageDigitalSignatureManager.VerifyCertificate%2A> method can be used to verify the X.509 certificates.\n  example:\n  - \"The following example shows how to use this method to validate all signed parts within a package.  For the complete sample, see [Creating a Package with a Digital Signature Sample](http://go.microsoft.com/fwlink/?LinkID=159966).  \\n  \\n [!code-csharp[PackageDigitalSignature#PackageDigSigValidate](~/samples/snippets/csharp/VS_Snippets_Wpf/PackageDigitalSignature/CSharp/PackageDigitalSignature.cs#packagedigsigvalidate)]\\n [!code-vb[PackageDigitalSignature#PackageDigSigValidate](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PackageDigitalSignature/visualbasic/packagedigitalsignature.vb#packagedigsigvalidate)]\"\n  syntax:\n    content: public System.IO.Packaging.VerifyResult VerifySignatures (bool exitOnFailure);\n    parameters:\n    - id: exitOnFailure\n      type: System.Boolean\n      description: '`true` to exit on first failure; otherwise, `false` to continue and check all signatures.'\n    return:\n      type: System.IO.Packaging.VerifyResult\n      description: <xref href=\"System.IO.Packaging.VerifyResult.Success\"></xref> (value 0) if all signatures are verified successfully; otherwise, an enumeration that identifies the error.\n  overload: System.IO.Packaging.PackageDigitalSignatureManager.VerifySignatures*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Packaging/PackageDigitalSignatureManager.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\nreferences:\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.ArgumentNullException\n  parent: System\n  isExternal: false\n  name: ArgumentNullException\n  nameWithType: ArgumentNullException\n  fullName: System.ArgumentNullException\n- uid: System.InvalidOperationException\n  parent: System\n  isExternal: false\n  name: InvalidOperationException\n  nameWithType: InvalidOperationException\n  fullName: System.InvalidOperationException\n- uid: System.ArgumentException\n  parent: System\n  isExternal: false\n  name: ArgumentException\n  nameWithType: ArgumentException\n  fullName: System.ArgumentException\n- uid: System.Xml.XmlException\n  parent: System.Xml\n  isExternal: false\n  name: XmlException\n  nameWithType: XmlException\n  fullName: System.Xml.XmlException\n- uid: System.IO.Packaging.PackageDigitalSignatureManager.#ctor(System.IO.Packaging.Package)\n  parent: System.IO.Packaging.PackageDigitalSignatureManager\n  isExternal: false\n  name: PackageDigitalSignatureManager(Package)\n  nameWithType: PackageDigitalSignatureManager.PackageDigitalSignatureManager(Package)\n  fullName: PackageDigitalSignatureManager.PackageDigitalSignatureManager(Package)\n- uid: System.IO.Packaging.Package\n  parent: System.IO.Packaging\n  isExternal: false\n  name: Package\n  nameWithType: Package\n  fullName: System.IO.Packaging.Package\n- uid: System.IO.Packaging.PackageDigitalSignatureManager.CertificateOption\n  parent: System.IO.Packaging.PackageDigitalSignatureManager\n  isExternal: false\n  name: CertificateOption\n  nameWithType: PackageDigitalSignatureManager.CertificateOption\n  fullName: PackageDigitalSignatureManager.CertificateOption\n- uid: System.IO.Packaging.CertificateEmbeddingOption\n  parent: System.IO.Packaging\n  isExternal: false\n  name: CertificateEmbeddingOption\n  nameWithType: CertificateEmbeddingOption\n  fullName: System.IO.Packaging.CertificateEmbeddingOption\n- uid: System.IO.Packaging.PackageDigitalSignatureManager.Countersign\n  parent: System.IO.Packaging.PackageDigitalSignatureManager\n  isExternal: false\n  name: Countersign()\n  nameWithType: PackageDigitalSignatureManager.Countersign()\n  fullName: PackageDigitalSignatureManager.Countersign()\n- uid: System.IO.Packaging.PackageDigitalSignature\n  parent: System.IO.Packaging\n  isExternal: false\n  name: PackageDigitalSignature\n  nameWithType: PackageDigitalSignature\n  fullName: System.IO.Packaging.PackageDigitalSignature\n- uid: System.IO.Packaging.PackageDigitalSignatureManager.Countersign(System.Security.Cryptography.X509Certificates.X509Certificate)\n  parent: System.IO.Packaging.PackageDigitalSignatureManager\n  isExternal: false\n  name: Countersign(X509Certificate)\n  nameWithType: PackageDigitalSignatureManager.Countersign(X509Certificate)\n  fullName: PackageDigitalSignatureManager.Countersign(X509Certificate)\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate\n  parent: System.Security.Cryptography.X509Certificates\n  isExternal: false\n  name: X509Certificate\n  nameWithType: X509Certificate\n  fullName: System.Security.Cryptography.X509Certificates.X509Certificate\n- uid: System.IO.Packaging.PackageDigitalSignatureManager.Countersign(System.Security.Cryptography.X509Certificates.X509Certificate,System.Collections.Generic.IEnumerable{System.Uri})\n  parent: System.IO.Packaging.PackageDigitalSignatureManager\n  isExternal: false\n  name: Countersign(X509Certificate, IEnumerable<Uri>)\n  nameWithType: PackageDigitalSignatureManager.Countersign(X509Certificate, IEnumerable<Uri>)\n  fullName: PackageDigitalSignatureManager.Countersign(X509Certificate, IEnumerable<Uri>)\n- uid: System.Collections.Generic.IEnumerable`1\n  name: IEnumerable<T>\n  nameWithType: IEnumerable<T>\n  fullName: System.Collections.Generic.IEnumerable<T>\n- uid: System.Uri\n  name: Uri\n  nameWithType: Uri\n  fullName: System.Uri\n- uid: System.Collections.Generic.IEnumerable{System.Uri}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IEnumerable<Uri>\n  nameWithType: IEnumerable<Uri>\n  fullName: System.Collections.Generic.IEnumerable<System.Uri>\n  spec.csharp:\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    nameWithType: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Uri\n    name: Uri\n    nameWithType: Uri\n    fullName: System.Uri\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.IO.Packaging.PackageDigitalSignatureManager.DefaultHashAlgorithm\n  parent: System.IO.Packaging.PackageDigitalSignatureManager\n  isExternal: false\n  name: DefaultHashAlgorithm\n  nameWithType: PackageDigitalSignatureManager.DefaultHashAlgorithm\n  fullName: PackageDigitalSignatureManager.DefaultHashAlgorithm\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.IO.Packaging.PackageDigitalSignatureManager.GetSignature(System.Uri)\n  parent: System.IO.Packaging.PackageDigitalSignatureManager\n  isExternal: false\n  name: GetSignature(Uri)\n  nameWithType: PackageDigitalSignatureManager.GetSignature(Uri)\n  fullName: PackageDigitalSignatureManager.GetSignature(Uri)\n- uid: System.IO.Packaging.PackageDigitalSignatureManager.HashAlgorithm\n  parent: System.IO.Packaging.PackageDigitalSignatureManager\n  isExternal: false\n  name: HashAlgorithm\n  nameWithType: PackageDigitalSignatureManager.HashAlgorithm\n  fullName: PackageDigitalSignatureManager.HashAlgorithm\n- uid: System.IO.Packaging.PackageDigitalSignatureManager.InvalidSignatureEvent\n  parent: System.IO.Packaging.PackageDigitalSignatureManager\n  isExternal: false\n  name: InvalidSignatureEvent\n  nameWithType: PackageDigitalSignatureManager.InvalidSignatureEvent\n  fullName: PackageDigitalSignatureManager.InvalidSignatureEvent\n- uid: System.IO.Packaging.InvalidSignatureEventHandler\n  parent: System.IO.Packaging\n  isExternal: false\n  name: InvalidSignatureEventHandler\n  nameWithType: InvalidSignatureEventHandler\n  fullName: System.IO.Packaging.InvalidSignatureEventHandler\n- uid: System.IO.Packaging.PackageDigitalSignatureManager.IsSigned\n  parent: System.IO.Packaging.PackageDigitalSignatureManager\n  isExternal: false\n  name: IsSigned\n  nameWithType: PackageDigitalSignatureManager.IsSigned\n  fullName: PackageDigitalSignatureManager.IsSigned\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.IO.Packaging.PackageDigitalSignatureManager.ParentWindow\n  parent: System.IO.Packaging.PackageDigitalSignatureManager\n  isExternal: false\n  name: ParentWindow\n  nameWithType: PackageDigitalSignatureManager.ParentWindow\n  fullName: PackageDigitalSignatureManager.ParentWindow\n- uid: System.IntPtr\n  parent: System\n  isExternal: false\n  name: IntPtr\n  nameWithType: IntPtr\n  fullName: System.IntPtr\n- uid: System.IO.Packaging.PackageDigitalSignatureManager.RemoveAllSignatures\n  parent: System.IO.Packaging.PackageDigitalSignatureManager\n  isExternal: false\n  name: RemoveAllSignatures()\n  nameWithType: PackageDigitalSignatureManager.RemoveAllSignatures()\n  fullName: PackageDigitalSignatureManager.RemoveAllSignatures()\n- uid: System.IO.Packaging.PackageDigitalSignatureManager.RemoveSignature(System.Uri)\n  parent: System.IO.Packaging.PackageDigitalSignatureManager\n  isExternal: false\n  name: RemoveSignature(Uri)\n  nameWithType: PackageDigitalSignatureManager.RemoveSignature(Uri)\n  fullName: PackageDigitalSignatureManager.RemoveSignature(Uri)\n- uid: System.IO.Packaging.PackageDigitalSignatureManager.Sign(System.Collections.Generic.IEnumerable{System.Uri})\n  parent: System.IO.Packaging.PackageDigitalSignatureManager\n  isExternal: false\n  name: Sign(IEnumerable<Uri>)\n  nameWithType: PackageDigitalSignatureManager.Sign(IEnumerable<Uri>)\n  fullName: PackageDigitalSignatureManager.Sign(IEnumerable<Uri>)\n- uid: System.IO.Packaging.PackageDigitalSignatureManager.Sign(System.Collections.Generic.IEnumerable{System.Uri},System.Security.Cryptography.X509Certificates.X509Certificate)\n  parent: System.IO.Packaging.PackageDigitalSignatureManager\n  isExternal: false\n  name: Sign(IEnumerable<Uri>, X509Certificate)\n  nameWithType: PackageDigitalSignatureManager.Sign(IEnumerable<Uri>, X509Certificate)\n  fullName: PackageDigitalSignatureManager.Sign(IEnumerable<Uri>, X509Certificate)\n- uid: System.IO.Packaging.PackageDigitalSignatureManager.Sign(System.Collections.Generic.IEnumerable{System.Uri},System.Security.Cryptography.X509Certificates.X509Certificate,System.Collections.Generic.IEnumerable{System.IO.Packaging.PackageRelationshipSelector})\n  parent: System.IO.Packaging.PackageDigitalSignatureManager\n  isExternal: false\n  name: Sign(IEnumerable<Uri>, X509Certificate, IEnumerable<PackageRelationshipSelector>)\n  nameWithType: PackageDigitalSignatureManager.Sign(IEnumerable<Uri>, X509Certificate, IEnumerable<PackageRelationshipSelector>)\n  fullName: PackageDigitalSignatureManager.Sign(IEnumerable<Uri>, X509Certificate, IEnumerable<PackageRelationshipSelector>)\n- uid: System.IO.Packaging.PackageRelationshipSelector\n  name: PackageRelationshipSelector\n  nameWithType: PackageRelationshipSelector\n  fullName: System.IO.Packaging.PackageRelationshipSelector\n- uid: System.Collections.Generic.IEnumerable{System.IO.Packaging.PackageRelationshipSelector}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IEnumerable<PackageRelationshipSelector>\n  nameWithType: IEnumerable<PackageRelationshipSelector>\n  fullName: System.Collections.Generic.IEnumerable<System.IO.Packaging.PackageRelationshipSelector>\n  spec.csharp:\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    nameWithType: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.IO.Packaging.PackageRelationshipSelector\n    name: PackageRelationshipSelector\n    nameWithType: PackageRelationshipSelector\n    fullName: System.IO.Packaging.PackageRelationshipSelector\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.IO.Packaging.PackageDigitalSignatureManager.Sign(System.Collections.Generic.IEnumerable{System.Uri},System.Security.Cryptography.X509Certificates.X509Certificate,System.Collections.Generic.IEnumerable{System.IO.Packaging.PackageRelationshipSelector},System.String)\n  parent: System.IO.Packaging.PackageDigitalSignatureManager\n  isExternal: false\n  name: Sign(IEnumerable<Uri>, X509Certificate, IEnumerable<PackageRelationshipSelector>, String)\n  nameWithType: PackageDigitalSignatureManager.Sign(IEnumerable<Uri>, X509Certificate, IEnumerable<PackageRelationshipSelector>, String)\n  fullName: PackageDigitalSignatureManager.Sign(IEnumerable<Uri>, X509Certificate, IEnumerable<PackageRelationshipSelector>, String)\n- uid: System.IO.Packaging.PackageDigitalSignatureManager.Sign(System.Collections.Generic.IEnumerable{System.Uri},System.Security.Cryptography.X509Certificates.X509Certificate,System.Collections.Generic.IEnumerable{System.IO.Packaging.PackageRelationshipSelector},System.String,System.Collections.Generic.IEnumerable{System.Security.Cryptography.Xml.DataObject},System.Collections.Generic.IEnumerable{System.Security.Cryptography.Xml.Reference})\n  parent: System.IO.Packaging.PackageDigitalSignatureManager\n  isExternal: false\n  name: Sign(IEnumerable<Uri>, X509Certificate, IEnumerable<PackageRelationshipSelector>, String, IEnumerable<DataObject>, IEnumerable<Reference>)\n  nameWithType: PackageDigitalSignatureManager.Sign(IEnumerable<Uri>, X509Certificate, IEnumerable<PackageRelationshipSelector>, String, IEnumerable<DataObject>, IEnumerable<Reference>)\n  fullName: PackageDigitalSignatureManager.Sign(IEnumerable<Uri>, X509Certificate, IEnumerable<PackageRelationshipSelector>, String, IEnumerable<DataObject>, IEnumerable<Reference>)\n- uid: System.Security.Cryptography.Xml.DataObject\n  name: DataObject\n  nameWithType: DataObject\n  fullName: System.Security.Cryptography.Xml.DataObject\n- uid: System.Collections.Generic.IEnumerable{System.Security.Cryptography.Xml.DataObject}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IEnumerable<DataObject>\n  nameWithType: IEnumerable<DataObject>\n  fullName: System.Collections.Generic.IEnumerable<System.Security.Cryptography.Xml.DataObject>\n  spec.csharp:\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    nameWithType: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Security.Cryptography.Xml.DataObject\n    name: DataObject\n    nameWithType: DataObject\n    fullName: System.Security.Cryptography.Xml.DataObject\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Security.Cryptography.Xml.Reference\n  name: Reference\n  nameWithType: Reference\n  fullName: System.Security.Cryptography.Xml.Reference\n- uid: System.Collections.Generic.IEnumerable{System.Security.Cryptography.Xml.Reference}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IEnumerable<Reference>\n  nameWithType: IEnumerable<Reference>\n  fullName: System.Collections.Generic.IEnumerable<System.Security.Cryptography.Xml.Reference>\n  spec.csharp:\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    nameWithType: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Security.Cryptography.Xml.Reference\n    name: Reference\n    nameWithType: Reference\n    fullName: System.Security.Cryptography.Xml.Reference\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.IO.Packaging.PackageDigitalSignatureManager.SignatureOrigin\n  parent: System.IO.Packaging.PackageDigitalSignatureManager\n  isExternal: false\n  name: SignatureOrigin\n  nameWithType: PackageDigitalSignatureManager.SignatureOrigin\n  fullName: PackageDigitalSignatureManager.SignatureOrigin\n- uid: System.IO.Packaging.PackageDigitalSignatureManager.SignatureOriginRelationshipType\n  parent: System.IO.Packaging.PackageDigitalSignatureManager\n  isExternal: false\n  name: SignatureOriginRelationshipType\n  nameWithType: PackageDigitalSignatureManager.SignatureOriginRelationshipType\n  fullName: PackageDigitalSignatureManager.SignatureOriginRelationshipType\n- uid: System.IO.Packaging.PackageDigitalSignatureManager.Signatures\n  parent: System.IO.Packaging.PackageDigitalSignatureManager\n  isExternal: false\n  name: Signatures\n  nameWithType: PackageDigitalSignatureManager.Signatures\n  fullName: PackageDigitalSignatureManager.Signatures\n- uid: System.Collections.ObjectModel.ReadOnlyCollection`1\n  name: ReadOnlyCollection<T>\n  nameWithType: ReadOnlyCollection<T>\n  fullName: System.Collections.ObjectModel.ReadOnlyCollection<T>\n- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.IO.Packaging.PackageDigitalSignature}\n  parent: System.Collections.ObjectModel\n  isExternal: false\n  name: ReadOnlyCollection<PackageDigitalSignature>\n  nameWithType: ReadOnlyCollection<PackageDigitalSignature>\n  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.IO.Packaging.PackageDigitalSignature>\n  spec.csharp:\n  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1\n    name: ReadOnlyCollection\n    nameWithType: ReadOnlyCollection\n    fullName: System.Collections.ObjectModel.ReadOnlyCollection\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.IO.Packaging.PackageDigitalSignature\n    name: PackageDigitalSignature\n    nameWithType: PackageDigitalSignature\n    fullName: System.IO.Packaging.PackageDigitalSignature\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.IO.Packaging.PackageDigitalSignatureManager.TimeFormat\n  parent: System.IO.Packaging.PackageDigitalSignatureManager\n  isExternal: false\n  name: TimeFormat\n  nameWithType: PackageDigitalSignatureManager.TimeFormat\n  fullName: PackageDigitalSignatureManager.TimeFormat\n- uid: System.IO.Packaging.PackageDigitalSignatureManager.TransformMapping\n  parent: System.IO.Packaging.PackageDigitalSignatureManager\n  isExternal: false\n  name: TransformMapping\n  nameWithType: PackageDigitalSignatureManager.TransformMapping\n  fullName: PackageDigitalSignatureManager.TransformMapping\n- uid: System.Collections.Generic.Dictionary`2\n  name: Dictionary<TKey,TValue>\n  nameWithType: Dictionary<TKey,TValue>\n  fullName: System.Collections.Generic.Dictionary<TKey,TValue>\n- uid: System.Collections.Generic.Dictionary{System.String,System.String}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: Dictionary<String,String>\n  nameWithType: Dictionary<String,String>\n  fullName: System.Collections.Generic.Dictionary<System.String,System.String>\n  spec.csharp:\n  - uid: System.Collections.Generic.Dictionary`2\n    name: Dictionary\n    nameWithType: Dictionary\n    fullName: System.Collections.Generic.Dictionary\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.String\n    name: String\n    nameWithType: String\n    fullName: System.String\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: System.String\n    name: String\n    nameWithType: String\n    fullName: System.String\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.IO.Packaging.PackageDigitalSignatureManager.VerifyCertificate(System.Security.Cryptography.X509Certificates.X509Certificate)\n  parent: System.IO.Packaging.PackageDigitalSignatureManager\n  isExternal: false\n  name: VerifyCertificate(X509Certificate)\n  nameWithType: PackageDigitalSignatureManager.VerifyCertificate(X509Certificate)\n  fullName: PackageDigitalSignatureManager.VerifyCertificate(X509Certificate)\n- uid: System.Security.Cryptography.X509Certificates.X509ChainStatusFlags\n  parent: System.Security.Cryptography.X509Certificates\n  isExternal: false\n  name: X509ChainStatusFlags\n  nameWithType: X509ChainStatusFlags\n  fullName: System.Security.Cryptography.X509Certificates.X509ChainStatusFlags\n- uid: System.IO.Packaging.PackageDigitalSignatureManager.VerifySignatures(System.Boolean)\n  parent: System.IO.Packaging.PackageDigitalSignatureManager\n  isExternal: false\n  name: VerifySignatures(Boolean)\n  nameWithType: PackageDigitalSignatureManager.VerifySignatures(Boolean)\n  fullName: PackageDigitalSignatureManager.VerifySignatures(Boolean)\n- uid: System.IO.Packaging.VerifyResult\n  parent: System.IO.Packaging\n  isExternal: false\n  name: VerifyResult\n  nameWithType: VerifyResult\n  fullName: System.IO.Packaging.VerifyResult\n- uid: System.IO.Packaging.PackageDigitalSignatureManager.Sign*\n  parent: System.IO.Packaging.PackageDigitalSignatureManager\n  isExternal: false\n  name: Sign\n  nameWithType: PackageDigitalSignatureManager.Sign\n  fullName: PackageDigitalSignatureManager.Sign\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Packaging/PackageDigitalSignatureManager.xml\n- uid: System.IO.Packaging.PackageDigitalSignatureManager.#ctor*\n  parent: System.IO.Packaging.PackageDigitalSignatureManager\n  isExternal: false\n  name: PackageDigitalSignatureManager\n  nameWithType: PackageDigitalSignatureManager.PackageDigitalSignatureManager\n  fullName: PackageDigitalSignatureManager.PackageDigitalSignatureManager\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Packaging/PackageDigitalSignatureManager.xml\n- uid: System.IO.Packaging.PackageDigitalSignatureManager.CertificateOption*\n  parent: System.IO.Packaging.PackageDigitalSignatureManager\n  isExternal: false\n  name: CertificateOption\n  nameWithType: PackageDigitalSignatureManager.CertificateOption\n  fullName: PackageDigitalSignatureManager.CertificateOption\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Packaging/PackageDigitalSignatureManager.xml\n- uid: System.IO.Packaging.PackageDigitalSignatureManager.Countersign*\n  parent: System.IO.Packaging.PackageDigitalSignatureManager\n  isExternal: false\n  name: Countersign\n  nameWithType: PackageDigitalSignatureManager.Countersign\n  fullName: PackageDigitalSignatureManager.Countersign\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Packaging/PackageDigitalSignatureManager.xml\n- uid: System.IO.Packaging.PackageDigitalSignatureManager.DefaultHashAlgorithm*\n  parent: System.IO.Packaging.PackageDigitalSignatureManager\n  isExternal: false\n  name: DefaultHashAlgorithm\n  nameWithType: PackageDigitalSignatureManager.DefaultHashAlgorithm\n  fullName: PackageDigitalSignatureManager.DefaultHashAlgorithm\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Packaging/PackageDigitalSignatureManager.xml\n- uid: System.IO.Packaging.PackageDigitalSignatureManager.GetSignature*\n  parent: System.IO.Packaging.PackageDigitalSignatureManager\n  isExternal: false\n  name: GetSignature\n  nameWithType: PackageDigitalSignatureManager.GetSignature\n  fullName: PackageDigitalSignatureManager.GetSignature\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Packaging/PackageDigitalSignatureManager.xml\n- uid: System.IO.Packaging.PackageDigitalSignatureManager.HashAlgorithm*\n  parent: System.IO.Packaging.PackageDigitalSignatureManager\n  isExternal: false\n  name: HashAlgorithm\n  nameWithType: PackageDigitalSignatureManager.HashAlgorithm\n  fullName: PackageDigitalSignatureManager.HashAlgorithm\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Packaging/PackageDigitalSignatureManager.xml\n- uid: System.IO.Packaging.PackageDigitalSignatureManager.IsSigned*\n  parent: System.IO.Packaging.PackageDigitalSignatureManager\n  isExternal: false\n  name: IsSigned\n  nameWithType: PackageDigitalSignatureManager.IsSigned\n  fullName: PackageDigitalSignatureManager.IsSigned\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Packaging/PackageDigitalSignatureManager.xml\n- uid: System.IO.Packaging.PackageDigitalSignatureManager.ParentWindow*\n  parent: System.IO.Packaging.PackageDigitalSignatureManager\n  isExternal: false\n  name: ParentWindow\n  nameWithType: PackageDigitalSignatureManager.ParentWindow\n  fullName: PackageDigitalSignatureManager.ParentWindow\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Packaging/PackageDigitalSignatureManager.xml\n- uid: System.IO.Packaging.PackageDigitalSignatureManager.RemoveAllSignatures*\n  parent: System.IO.Packaging.PackageDigitalSignatureManager\n  isExternal: false\n  name: RemoveAllSignatures\n  nameWithType: PackageDigitalSignatureManager.RemoveAllSignatures\n  fullName: PackageDigitalSignatureManager.RemoveAllSignatures\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Packaging/PackageDigitalSignatureManager.xml\n- uid: System.IO.Packaging.PackageDigitalSignatureManager.RemoveSignature*\n  parent: System.IO.Packaging.PackageDigitalSignatureManager\n  isExternal: false\n  name: RemoveSignature\n  nameWithType: PackageDigitalSignatureManager.RemoveSignature\n  fullName: PackageDigitalSignatureManager.RemoveSignature\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Packaging/PackageDigitalSignatureManager.xml\n- uid: System.IO.Packaging.PackageDigitalSignatureManager.SignatureOrigin*\n  parent: System.IO.Packaging.PackageDigitalSignatureManager\n  isExternal: false\n  name: SignatureOrigin\n  nameWithType: PackageDigitalSignatureManager.SignatureOrigin\n  fullName: PackageDigitalSignatureManager.SignatureOrigin\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Packaging/PackageDigitalSignatureManager.xml\n- uid: System.IO.Packaging.PackageDigitalSignatureManager.SignatureOriginRelationshipType*\n  parent: System.IO.Packaging.PackageDigitalSignatureManager\n  isExternal: false\n  name: SignatureOriginRelationshipType\n  nameWithType: PackageDigitalSignatureManager.SignatureOriginRelationshipType\n  fullName: PackageDigitalSignatureManager.SignatureOriginRelationshipType\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Packaging/PackageDigitalSignatureManager.xml\n- uid: System.IO.Packaging.PackageDigitalSignatureManager.Signatures*\n  parent: System.IO.Packaging.PackageDigitalSignatureManager\n  isExternal: false\n  name: Signatures\n  nameWithType: PackageDigitalSignatureManager.Signatures\n  fullName: PackageDigitalSignatureManager.Signatures\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Packaging/PackageDigitalSignatureManager.xml\n- uid: System.IO.Packaging.PackageDigitalSignatureManager.TimeFormat*\n  parent: System.IO.Packaging.PackageDigitalSignatureManager\n  isExternal: false\n  name: TimeFormat\n  nameWithType: PackageDigitalSignatureManager.TimeFormat\n  fullName: PackageDigitalSignatureManager.TimeFormat\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Packaging/PackageDigitalSignatureManager.xml\n- uid: System.IO.Packaging.PackageDigitalSignatureManager.TransformMapping*\n  parent: System.IO.Packaging.PackageDigitalSignatureManager\n  isExternal: false\n  name: TransformMapping\n  nameWithType: PackageDigitalSignatureManager.TransformMapping\n  fullName: PackageDigitalSignatureManager.TransformMapping\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Packaging/PackageDigitalSignatureManager.xml\n- uid: System.IO.Packaging.PackageDigitalSignatureManager.VerifyCertificate*\n  parent: System.IO.Packaging.PackageDigitalSignatureManager\n  isExternal: false\n  name: VerifyCertificate\n  nameWithType: PackageDigitalSignatureManager.VerifyCertificate\n  fullName: PackageDigitalSignatureManager.VerifyCertificate\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Packaging/PackageDigitalSignatureManager.xml\n- uid: System.IO.Packaging.PackageDigitalSignatureManager.VerifySignatures*\n  parent: System.IO.Packaging.PackageDigitalSignatureManager\n  isExternal: false\n  name: VerifySignatures\n  nameWithType: PackageDigitalSignatureManager.VerifySignatures\n  fullName: PackageDigitalSignatureManager.VerifySignatures\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Packaging/PackageDigitalSignatureManager.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n"}