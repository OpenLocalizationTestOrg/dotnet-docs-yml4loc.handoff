### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.LinqDataSourceInsertEventArgs
  commentId: T:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs
  id: LinqDataSourceInsertEventArgs
  children:
  - System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.#ctor(System.Object)
  - System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.#ctor(System.Web.UI.WebControls.LinqDataSourceValidationException)
  - System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.Exception
  - System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.ExceptionHandled
  - System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.NewObject
  langs:
  - csharp
  name: LinqDataSourceInsertEventArgs
  nameWithType: LinqDataSourceInsertEventArgs
  fullName: System.Web.UI.WebControls.LinqDataSourceInsertEventArgs
  type: Class
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: Provides data for the <xref href="System.Web.UI.WebControls.LinqDataSource.Inserting"></xref> event.
  remarks: "The <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs> object is passed to any event handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Inserting> event. The <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.NewObject%2A> property contains the data that will be inserted.  \n  \n You can use the <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs> object to examine the data before the insert operation is executed in the data source. You can then validate the data, examine validation errors from the data class, or change a value before the update. You can also cancel the insert operation.  \n  \n If the object that represents the data source throws a validation exception before it inserts the data, the <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.Exception%2A> property contains an instance of the <xref:System.Web.UI.WebControls.LinqDataSourceValidationException> class. You can retrieve all the validation exceptions through the <xref:System.Web.UI.WebControls.LinqDataSourceValidationException.InnerExceptions%2A> property. If no validation exception is thrown, the <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.Exception%2A> property contains `null`. If you handle the validation exceptions and do not want the exception to be re-thrown, set the <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.ExceptionHandled%2A> property to `true`."
  example:
  - "The following example shows a handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Inserting> event. The object from the <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.NewObject%2A> property is cast to a type named `Product`. The `DateModified` property of the `Product` object is set to the current date and time.  \n  \n [!code-csharp[System.Web.UI.WebControls.LinqDataSource.Inserting#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource.Inserting/cs/Default.aspx.cs#1)]\n [!code-vb[System.Web.UI.WebControls.LinqDataSource.Inserting#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource.Inserting/vb/Default.aspx.vb#1)]  \n  \n The following example shows an event handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Inserting> event. It displays any validation exception messages by using a <xref:System.Web.UI.WebControls.Label> control.  \n  \n```vb  \nProtected Sub LinqDataSource_Inserting(ByVal sender As Object, _  \n        ByVal e As LinqDataSourceInsertEventArgs)  \n    If (e.Exception IsNot Nothing) Then  \n        For Each innerException As KeyValuePair(Of String, Exception) _  \n               In e.Exception.InnerExceptions  \n            Label1.Text &= innerException.Key & \": \" & _  \n                innerException.Value.Message + \"<br />\"  \n        Next  \n        e.ExceptionHandled = True  \n    End If  \nEnd Sub  \n```  \n  \n```csharp  \nprotected void LinqDataSource_Inserting(object sender,   \n        LinqDataSourceInsertEventArgs e)  \n{  \n    if (e.Exception != null)  \n    {  \n        foreach (KeyValuePair<string, Exception> innerException in   \n             e.Exception.InnerExceptions)  \n        {  \n        Label1.Text += innerException.Key + \": \" +   \n            innerException.Value.Message + \"<br />\";  \n        }  \n        e.ExceptionHandled = true;  \n    }  \n}  \n```"
  syntax:
    content: 'public class LinqDataSourceInsertEventArgs : System.ComponentModel.CancelEventArgs'
  inheritance:
  - System.Object
  - System.EventArgs
  - System.ComponentModel.CancelEventArgs
  implements: []
  inheritedMembers:
  - System.ComponentModel.CancelEventArgs.Cancel
  - System.EventArgs.Empty
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/LinqDataSourceInsertEventArgs.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.#ctor(System.Object)
  commentId: M:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.#ctor(System.Object)
  id: '#ctor(System.Object)'
  parent: System.Web.UI.WebControls.LinqDataSourceInsertEventArgs
  langs:
  - csharp
  name: LinqDataSourceInsertEventArgs(Object)
  nameWithType: LinqDataSourceInsertEventArgs.LinqDataSourceInsertEventArgs(Object)
  fullName: LinqDataSourceInsertEventArgs.LinqDataSourceInsertEventArgs(Object)
  type: Constructor
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: Initializes a new instance of the <xref href="System.Web.UI.WebControls.LinqDataSourceInsertEventArgs"></xref> class.
  syntax:
    content: public LinqDataSourceInsertEventArgs (object newObject);
    parameters:
    - id: newObject
      type: System.Object
      description: An object that contains the data to insert.
  overload: System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.#ctor*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/LinqDataSourceInsertEventArgs.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.#ctor(System.Web.UI.WebControls.LinqDataSourceValidationException)
  commentId: M:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.#ctor(System.Web.UI.WebControls.LinqDataSourceValidationException)
  id: '#ctor(System.Web.UI.WebControls.LinqDataSourceValidationException)'
  parent: System.Web.UI.WebControls.LinqDataSourceInsertEventArgs
  langs:
  - csharp
  name: LinqDataSourceInsertEventArgs(LinqDataSourceValidationException)
  nameWithType: LinqDataSourceInsertEventArgs.LinqDataSourceInsertEventArgs(LinqDataSourceValidationException)
  fullName: LinqDataSourceInsertEventArgs.LinqDataSourceInsertEventArgs(LinqDataSourceValidationException)
  type: Constructor
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: Initializes a new instance of the <xref href="System.Web.UI.WebControls.LinqDataSourceInsertEventArgs"></xref> class and specifies the provided exception.
  syntax:
    content: public LinqDataSourceInsertEventArgs (System.Web.UI.WebControls.LinqDataSourceValidationException exception);
    parameters:
    - id: exception
      type: System.Web.UI.WebControls.LinqDataSourceValidationException
      description: The exception that occurred when the data to insert was being validated.
  overload: System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.#ctor*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/LinqDataSourceInsertEventArgs.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.Exception
  commentId: P:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.Exception
  id: Exception
  parent: System.Web.UI.WebControls.LinqDataSourceInsertEventArgs
  langs:
  - csharp
  name: Exception
  nameWithType: LinqDataSourceInsertEventArgs.Exception
  fullName: LinqDataSourceInsertEventArgs.Exception
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: Gets the exception that was thrown while the data was being validated before the insert operation.
  remarks: If a validation exception is thrown before the insert operation is performed, the exception is stored in the <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.Exception%2A> property. In a handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Inserting> event, you can retrieve the exception through the <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.Exception%2A> property.
  example:
  - "The following example shows a handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Inserting> event. It displays any validation exception messages by using a <xref:System.Web.UI.WebControls.Label> control.  \n  \n```vb  \nProtected Sub LinqDataSource_Inserting(ByVal sender As Object, _  \n        ByVal e As LinqDataSourceInsertEventArgs)  \n    If (e.Exception IsNot Nothing) Then  \n        For Each innerException As KeyValuePair(Of String, Exception) _  \n               In e.Exception.InnerExceptions  \n            Label1.Text &= innerException.Key & \": \" & _  \n                innerException.Value.Message + \"<br />\"  \n        Next  \n        e.ExceptionHandled = True  \n    End If  \nEnd Sub  \n```  \n  \n```csharp  \nprotected void LinqDataSource_Inserting(object sender,   \n        LinqDataSourceInsertEventArgs e)  \n{  \n    if (e.Exception != null)  \n    {  \n        foreach (KeyValuePair<string, Exception> innerException in   \n             e.Exception.InnerExceptions)  \n        {  \n        Label1.Text += innerException.Key + \": \" +   \n            innerException.Value.Message + \"<br />\";  \n        }  \n        e.ExceptionHandled = true;  \n    }  \n}  \n```"
  syntax:
    content: public System.Web.UI.WebControls.LinqDataSourceValidationException Exception { get; }
    return:
      type: System.Web.UI.WebControls.LinqDataSourceValidationException
      description: The exception, if an error occurred; otherwise, `null`.
  overload: System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.Exception*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/LinqDataSourceInsertEventArgs.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.ExceptionHandled
  commentId: P:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.ExceptionHandled
  id: ExceptionHandled
  parent: System.Web.UI.WebControls.LinqDataSourceInsertEventArgs
  langs:
  - csharp
  name: ExceptionHandled
  nameWithType: LinqDataSourceInsertEventArgs.ExceptionHandled
  fullName: LinqDataSourceInsertEventArgs.ExceptionHandled
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: Gets or sets a value that indicates whether the exception was handled and that it should not be thrown again.
  remarks: You can create event handlers for the <xref:System.Web.UI.WebControls.LinqDataSource.Inserting> event to examine validation exceptions that occurred before the insert operation. If you handle the exception and do not want it to be thrown again, set the <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.ExceptionHandled%2A> property to `true`. If you do not set the <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.ExceptionHandled%2A> property to `true`, the exception will be propagated to the next event handler in the call stack.
  example:
  - "The following example shows an event handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Inserting> event. It displays any validation exception messages by using a <xref:System.Web.UI.WebControls.Label> control.  \n  \n```vb  \nProtected Sub LinqDataSource_Inserting(ByVal sender As Object, _  \n        ByVal e As LinqDataSourceInsertEventArgs)  \n    If (e.Exception IsNot Nothing) Then  \n        For Each innerException As KeyValuePair(Of String, Exception) _  \n               In e.Exception.InnerExceptions  \n            Label1.Text &= innerException.Key & \": \" & _  \n                innerException.Value.Message + \"<br />\"  \n        Next  \n        e.ExceptionHandled = True  \n    End If  \nEnd Sub  \n```  \n  \n```csharp  \nprotected void LinqDataSource_Inserting(object sender,   \n        LinqDataSourceInsertEventArgs e)  \n{  \n    if (e.Exception != null)  \n    {  \n        foreach (KeyValuePair<string, Exception> innerException in   \n             e.Exception.InnerExceptions)  \n        {  \n        Label1.Text += innerException.Key + \": \" +   \n            innerException.Value.Message + \"<br />\";  \n        }  \n        e.ExceptionHandled = true;  \n    }  \n}  \n```"
  syntax:
    content: public bool ExceptionHandled { get; set; }
    return:
      type: System.Boolean
      description: '`true` if the exception was handled; otherwise, `false`.'
  overload: System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.ExceptionHandled*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/LinqDataSourceInsertEventArgs.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.NewObject
  commentId: P:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.NewObject
  id: NewObject
  parent: System.Web.UI.WebControls.LinqDataSourceInsertEventArgs
  langs:
  - csharp
  name: NewObject
  nameWithType: LinqDataSourceInsertEventArgs.NewObject
  fullName: LinqDataSourceInsertEventArgs.NewObject
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls
  summary: Gets the object that contains the data to insert.
  remarks: "The <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.NewObject%2A> property contains the data that will be inserted into the data source. Create a handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Inserting> event and retrieve the <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.NewObject%2A> property in order to validate the data, change the data, or cancel the insert operation before the data operation is executed.  \n  \n The <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.NewObject%2A> property returns an object of type <xref:System.Object>. You can cast this object to the type of the class that represents the data."
  example:
  - "The following example shows a handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Inserting> event. The object from the <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.NewObject%2A> property is cast to a type named `Product`. The `DateModified` property of the `Product` object is set to the current date and time.  \n  \n [!code-csharp[System.Web.UI.WebControls.LinqDataSource.Inserting#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource.Inserting/cs/Default.aspx.cs#1)]\n [!code-vb[System.Web.UI.WebControls.LinqDataSource.Inserting#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource.Inserting/vb/Default.aspx.vb#1)]"
  syntax:
    content: public object NewObject { get; }
    return:
      type: System.Object
      description: An object that contains the data to insert.
  overload: System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.NewObject*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/LinqDataSourceInsertEventArgs.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
references:
- uid: System.ComponentModel.CancelEventArgs
  parent: System.ComponentModel
  isExternal: false
  name: CancelEventArgs
  nameWithType: CancelEventArgs
  fullName: System.ComponentModel.CancelEventArgs
- uid: System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.#ctor(System.Object)
  parent: System.Web.UI.WebControls.LinqDataSourceInsertEventArgs
  isExternal: false
  name: LinqDataSourceInsertEventArgs(Object)
  nameWithType: LinqDataSourceInsertEventArgs.LinqDataSourceInsertEventArgs(Object)
  fullName: LinqDataSourceInsertEventArgs.LinqDataSourceInsertEventArgs(Object)
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.#ctor(System.Web.UI.WebControls.LinqDataSourceValidationException)
  parent: System.Web.UI.WebControls.LinqDataSourceInsertEventArgs
  isExternal: false
  name: LinqDataSourceInsertEventArgs(LinqDataSourceValidationException)
  nameWithType: LinqDataSourceInsertEventArgs.LinqDataSourceInsertEventArgs(LinqDataSourceValidationException)
  fullName: LinqDataSourceInsertEventArgs.LinqDataSourceInsertEventArgs(LinqDataSourceValidationException)
- uid: System.Web.UI.WebControls.LinqDataSourceValidationException
  parent: System.Web.UI.WebControls
  isExternal: false
  name: LinqDataSourceValidationException
  nameWithType: LinqDataSourceValidationException
  fullName: System.Web.UI.WebControls.LinqDataSourceValidationException
- uid: System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.Exception
  parent: System.Web.UI.WebControls.LinqDataSourceInsertEventArgs
  isExternal: false
  name: Exception
  nameWithType: LinqDataSourceInsertEventArgs.Exception
  fullName: LinqDataSourceInsertEventArgs.Exception
- uid: System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.ExceptionHandled
  parent: System.Web.UI.WebControls.LinqDataSourceInsertEventArgs
  isExternal: false
  name: ExceptionHandled
  nameWithType: LinqDataSourceInsertEventArgs.ExceptionHandled
  fullName: LinqDataSourceInsertEventArgs.ExceptionHandled
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.NewObject
  parent: System.Web.UI.WebControls.LinqDataSourceInsertEventArgs
  isExternal: false
  name: NewObject
  nameWithType: LinqDataSourceInsertEventArgs.NewObject
  fullName: LinqDataSourceInsertEventArgs.NewObject
- uid: System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.#ctor*
  parent: System.Web.UI.WebControls.LinqDataSourceInsertEventArgs
  isExternal: false
  name: LinqDataSourceInsertEventArgs
  nameWithType: LinqDataSourceInsertEventArgs.LinqDataSourceInsertEventArgs
  fullName: LinqDataSourceInsertEventArgs.LinqDataSourceInsertEventArgs
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/LinqDataSourceInsertEventArgs.xml
- uid: System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.Exception*
  parent: System.Web.UI.WebControls.LinqDataSourceInsertEventArgs
  isExternal: false
  name: Exception
  nameWithType: LinqDataSourceInsertEventArgs.Exception
  fullName: LinqDataSourceInsertEventArgs.Exception
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/LinqDataSourceInsertEventArgs.xml
- uid: System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.ExceptionHandled*
  parent: System.Web.UI.WebControls.LinqDataSourceInsertEventArgs
  isExternal: false
  name: ExceptionHandled
  nameWithType: LinqDataSourceInsertEventArgs.ExceptionHandled
  fullName: LinqDataSourceInsertEventArgs.ExceptionHandled
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/LinqDataSourceInsertEventArgs.xml
- uid: System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.NewObject*
  parent: System.Web.UI.WebControls.LinqDataSourceInsertEventArgs
  isExternal: false
  name: NewObject
  nameWithType: LinqDataSourceInsertEventArgs.NewObject
  fullName: LinqDataSourceInsertEventArgs.NewObject
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/LinqDataSourceInsertEventArgs.xml
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: Object.Equals(Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: Object.Equals(Object, Object)
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: false
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: Object.GetHashCode()
- uid: System.Object.GetType
  parent: System.Object
  isExternal: false
  name: GetType()
  nameWithType: Object.GetType()
  fullName: Object.GetType()
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: false
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: Object.MemberwiseClone()
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: Object.ReferenceEquals(Object, Object)
- uid: System.Object.ToString
  parent: System.Object
  isExternal: false
  name: ToString()
  nameWithType: Object.ToString()
  fullName: Object.ToString()
- uid: System.EventArgs.Empty
  parent: System.EventArgs
  isExternal: false
  name: Empty
  nameWithType: EventArgs.Empty
  fullName: EventArgs.Empty
- uid: System.ComponentModel.CancelEventArgs.Cancel
  parent: System.ComponentModel.CancelEventArgs
  isExternal: false
  name: Cancel
  nameWithType: CancelEventArgs.Cancel
  fullName: CancelEventArgs.Cancel
