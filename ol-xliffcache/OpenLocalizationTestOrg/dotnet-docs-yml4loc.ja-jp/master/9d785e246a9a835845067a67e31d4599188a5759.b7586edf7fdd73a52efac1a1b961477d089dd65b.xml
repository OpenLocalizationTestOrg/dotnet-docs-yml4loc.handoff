{"nodes":[{"content":"Represents a decimal number.","nodes":[{"pos":[0,28],"content":"Represents a decimal number.","nodes":[{"content":"Represents a decimal number.","pos":[0,28]}]}],"pos":[6668,6697],"yaml":true},{"content":"The <xref:System.Decimal> value type represents decimal numbers ranging from positive 79,228,162,514,264,337,593,543,950,335 to negative 79,228,162,514,264,337,593,543,950,335. The <xref:System.Decimal> value type is appropriate for financial calculations that require large numbers of significant integral and fractional digits and no round-off errors. The <xref:System.Decimal> type does not eliminate the need for rounding. Rather, it minimizes errors due to rounding. For example, the following code produces a result of 0.9999999999999999999999999999 instead of 1.  \n  \n [!code-cpp[System.Decimal.Class#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Decimal.Class/cpp/decimal1.cpp#1)]\n [!code-csharp[System.Decimal.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Decimal.Class/cs/DecimalDivision_46630_1.cs#1)]\n [!code-vb[System.Decimal.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Decimal.Class/vb/DecimalDivision_46630_1.vb#1)]  \n  \n When the result of the division and multiplication is passed to the <xref:System.Math.Round%2A> method, the result suffers no loss of precision, as the following code shows.  \n  \n [!code-cpp[System.Decimal.Class#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Decimal.Class/cpp/decimal2.cpp#2)]\n [!code-csharp[System.Decimal.Class#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Decimal.Class/cs/DecimalDivision_46630_1.cs#2)]\n [!code-vb[System.Decimal.Class#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Decimal.Class/vb/DecimalDivision_46630_1.vb#2)]  \n  \n A decimal number is a floating-point value that consists of a sign, a numeric value where each digit in the value ranges from 0 to 9, and a scaling factor that indicates the position of a floating decimal point that separates the integral and fractional parts of the numeric value.  \n  \n The binary representation of a <xref:System.Decimal> value consists of a 1-bit sign, a 96-bit integer number, and a scaling factor used to divide the 96-bit integer and specify what portion of it is a decimal fraction. The scaling factor is implicitly the number 10, raised to an exponent ranging from 0 to 28. Therefore, the binary representation of a <xref:System.Decimal> value  the form, ((-2<sup>96</sup> to 2<sup>96</sup>) / 10<sup>(0 to 28)</sup>), where -(2<sup>96</sup>-1) is equal to <xref:System.Decimal.MinValue>, and 2<sup>96</sup>-1 is equal to <xref:System.Decimal.MaxValue>. For more information about the binary representation of <xref:System.Decimal> values and an example, see the <xref:System.Decimal.%23ctor%28System.Int32%5B%5D%29> constructor and the <xref:System.Decimal.GetBits%2A> method.  \n  \n The scaling factor  also preserves any trailing zeros in a <xref:System.Decimal> number. Trailing zeros do not affect the value of a <xref:System.Decimal> number in arithmetic or comparison operations. However, trailing zeros might be revealed by the <xref:System.Decimal.ToString%2A> method if an appropriate format string is applied.  \n  \n## Conversion Considerations  \n This type provides methods that convert <xref:System.Decimal> values to and from <xref:System.SByte>, <xref:System.Int16>, <xref:System.Int32>, <xref:System.Int64>, <xref:System.Byte>, <xref:System.UInt16>, <xref:System.UInt32>, and <xref:System.UInt64> values. Conversions from these integral types to <xref:System.Decimal> are widening conversions that never lose information or throw exceptions.  \n  \n Conversions from <xref:System.Decimal> to any of the integral types are narrowing conversions that round the <xref:System.Decimal> value to the nearest integer value toward zero. Some languages, such as C#, also support the conversion of <xref:System.Decimal> values to <xref:System.Char> values. If the result of these conversions cannot be represented in the destination type, an <xref:System.OverflowException> exception is thrown.  \n  \n The <xref:System.Decimal> type also provides methods that convert <xref:System.Decimal> values to and from <xref:System.Single> and <xref:System.Double> values. Conversions from <xref:System.Decimal> to <xref:System.Single> or <xref:System.Double> are narrowing conversions that might lose precision but not information about the magnitude of the converted value. The conversion does not throw an exception.  \n  \n Conversions from <xref:System.Single> or <xref:System.Double> to <xref:System.Decimal> throw an <xref:System.OverflowException> exception if the result of the conversion cannot be represented as a <xref:System.Decimal>.  \n  \n## Performing Operations on Decimal Values  \n The <xref:System.Decimal> type supports standard mathematical operations such as addition, subtraction, division, multiplication, and unary negation. You can also work directly with the binary representation of a <xref:System.Decimal> value by calling the <xref:System.Decimal.GetBits%2A> method.  \n  \n To compare two <xref:System.Decimal> values, you can use the standard numeric comparison operators, or you can call the <xref:System.Decimal.CompareTo%2A> or <xref:System.Decimal.Equals%2A> method.  \n  \n You can also call the members of the <xref:System.Math> class to perform a wide range of numeric operations, including getting the absolute value of a number, determining the maximum or minimum value of two <xref:System.Decimal> values, getting the sign of a number, and rounding a number.","nodes":[{"pos":[0,569],"content":"The <xref:System.Decimal> value type represents decimal numbers ranging from positive 79,228,162,514,264,337,593,543,950,335 to negative 79,228,162,514,264,337,593,543,950,335. The <xref:System.Decimal> value type is appropriate for financial calculations that require large numbers of significant integral and fractional digits and no round-off errors. The <xref:System.Decimal> type does not eliminate the need for rounding. Rather, it minimizes errors due to rounding. For example, the following code produces a result of 0.9999999999999999999999999999 instead of 1.","nodes":[{"content":"The <xref:System.Decimal> value type represents decimal numbers ranging from positive 79,228,162,514,264,337,593,543,950,335 to negative 79,228,162,514,264,337,593,543,950,335. The <xref:System.Decimal> value type is appropriate for financial calculations that require large numbers of significant integral and fractional digits and no round-off errors. The <xref:System.Decimal> type does not eliminate the need for rounding. Rather, it minimizes errors due to rounding. For example, the following code produces a result of 0.9999999999999999999999999999 instead of 1.","pos":[0,569],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Decimal&gt;</ph> value type represents decimal numbers ranging from positive 79,228,162,514,264,337,593,543,950,335 to negative 79,228,162,514,264,337,593,543,950,335.","pos":[0,176],"source":"The <xref:System.Decimal> value type represents decimal numbers ranging from positive 79,228,162,514,264,337,593,543,950,335 to negative 79,228,162,514,264,337,593,543,950,335."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Decimal&gt;</ph> value type is appropriate for financial calculations that require large numbers of significant integral and fractional digits and no round-off errors.","pos":[177,353],"source":" The <xref:System.Decimal> value type is appropriate for financial calculations that require large numbers of significant integral and fractional digits and no round-off errors."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Decimal&gt;</ph> type does not eliminate the need for rounding.","pos":[354,426],"source":" The <xref:System.Decimal> type does not eliminate the need for rounding."},{"content":"Rather, it minimizes errors due to rounding.","pos":[427,471]},{"content":"For example, the following code produces a result of 0.9999999999999999999999999999 instead of 1.","pos":[472,569]}]}]},{"pos":[576,985],"content":"<bpt id=\"p1\">[!code-cpp</bpt><bpt id=\"p2\">[</bpt>System.Decimal.Class#1<ept id=\"p2\">](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Decimal.Class/cpp/decimal1.cpp#1)</ept><ept id=\"p1\">]</ept> <bpt id=\"p3\">[!code-csharp</bpt><bpt id=\"p4\">[</bpt>System.Decimal.Class#1<ept id=\"p4\">](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Decimal.Class/cs/DecimalDivision_46630_1.cs#1)</ept><ept id=\"p3\">]</ept> <bpt id=\"p5\">[!code-vb</bpt><bpt id=\"p6\">[</bpt>System.Decimal.Class#1<ept id=\"p6\">](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Decimal.Class/vb/DecimalDivision_46630_1.vb#1)</ept><ept id=\"p5\">]</ept>","source":"[!code-cpp[System.Decimal.Class#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Decimal.Class/cpp/decimal1.cpp#1)]\n [!code-csharp[System.Decimal.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Decimal.Class/cs/DecimalDivision_46630_1.cs#1)]\n [!code-vb[System.Decimal.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Decimal.Class/vb/DecimalDivision_46630_1.vb#1)]"},{"pos":[992,1165],"content":"When the result of the division and multiplication is passed to the <xref:System.Math.Round%2A> method, the result suffers no loss of precision, as the following code shows.","nodes":[{"content":"When the result of the division and multiplication is passed to the <ph id=\"ph1\">&lt;xref:System.Math.Round%2A&gt;</ph> method, the result suffers no loss of precision, as the following code shows.","pos":[0,173],"source":"When the result of the division and multiplication is passed to the <xref:System.Math.Round%2A> method, the result suffers no loss of precision, as the following code shows."}]},{"pos":[1172,1581],"content":"<bpt id=\"p1\">[!code-cpp</bpt><bpt id=\"p2\">[</bpt>System.Decimal.Class#2<ept id=\"p2\">](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Decimal.Class/cpp/decimal2.cpp#2)</ept><ept id=\"p1\">]</ept> <bpt id=\"p3\">[!code-csharp</bpt><bpt id=\"p4\">[</bpt>System.Decimal.Class#2<ept id=\"p4\">](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Decimal.Class/cs/DecimalDivision_46630_1.cs#2)</ept><ept id=\"p3\">]</ept> <bpt id=\"p5\">[!code-vb</bpt><bpt id=\"p6\">[</bpt>System.Decimal.Class#2<ept id=\"p6\">](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Decimal.Class/vb/DecimalDivision_46630_1.vb#2)</ept><ept id=\"p5\">]</ept>","source":"[!code-cpp[System.Decimal.Class#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Decimal.Class/cpp/decimal2.cpp#2)]\n [!code-csharp[System.Decimal.Class#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Decimal.Class/cs/DecimalDivision_46630_1.cs#2)]\n [!code-vb[System.Decimal.Class#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Decimal.Class/vb/DecimalDivision_46630_1.vb#2)]"},{"pos":[1588,1869],"content":"A decimal number is a floating-point value that consists of a sign, a numeric value where each digit in the value ranges from 0 to 9, and a scaling factor that indicates the position of a floating decimal point that separates the integral and fractional parts of the numeric value.","nodes":[{"content":"A decimal number is a floating-point value that consists of a sign, a numeric value where each digit in the value ranges from 0 to 9, and a scaling factor that indicates the position of a floating decimal point that separates the integral and fractional parts of the numeric value.","pos":[0,281]}]},{"pos":[1876,2690],"content":"The binary representation of a <xref:System.Decimal> value consists of a 1-bit sign, a 96-bit integer number, and a scaling factor used to divide the 96-bit integer and specify what portion of it is a decimal fraction. The scaling factor is implicitly the number 10, raised to an exponent ranging from 0 to 28. Therefore, the binary representation of a <xref:System.Decimal> value  the form, ((-2<sup>96</sup> to 2<sup>96</sup>) / 10<sup>(0 to 28)</sup>), where -(2<sup>96</sup>-1) is equal to <xref:System.Decimal.MinValue>, and 2<sup>96</sup>-1 is equal to <xref:System.Decimal.MaxValue>. For more information about the binary representation of <xref:System.Decimal> values and an example, see the <xref:System.Decimal.%23ctor%28System.Int32%5B%5D%29> constructor and the <xref:System.Decimal.GetBits%2A> method.","nodes":[{"content":"The binary representation of a <ph id=\"ph1\">&lt;xref:System.Decimal&gt;</ph> value consists of a 1-bit sign, a 96-bit integer number, and a scaling factor used to divide the 96-bit integer and specify what portion of it is a decimal fraction.","pos":[0,218],"source":"The binary representation of a <xref:System.Decimal> value consists of a 1-bit sign, a 96-bit integer number, and a scaling factor used to divide the 96-bit integer and specify what portion of it is a decimal fraction."},{"content":"The scaling factor is implicitly the number 10, raised to an exponent ranging from 0 to 28.","pos":[219,310]},{"content":"Therefore, the binary representation of a <ph id=\"ph1\">&lt;xref:System.Decimal&gt;</ph> value  the form, ((-2<bpt id=\"p1\">&lt;sup&gt;</bpt>96<ept id=\"p1\">&lt;/sup&gt;</ept> to 2<bpt id=\"p2\">&lt;sup&gt;</bpt>96<ept id=\"p2\">&lt;/sup&gt;</ept>) / 10<bpt id=\"p3\">&lt;sup&gt;</bpt>(0 to 28)<ept id=\"p3\">&lt;/sup&gt;</ept>), where -(2<bpt id=\"p4\">&lt;sup&gt;</bpt>96<ept id=\"p4\">&lt;/sup&gt;</ept>-1) is equal to <ph id=\"ph2\">&lt;xref:System.Decimal.MinValue&gt;</ph>, and 2<bpt id=\"p5\">&lt;sup&gt;</bpt>96<ept id=\"p5\">&lt;/sup&gt;</ept>-1 is equal to <ph id=\"ph3\">&lt;xref:System.Decimal.MaxValue&gt;</ph>.","pos":[311,590],"source":" Therefore, the binary representation of a <xref:System.Decimal> value  the form, ((-2<sup>96</sup> to 2<sup>96</sup>) / 10<sup>(0 to 28)</sup>), where -(2<sup>96</sup>-1) is equal to <xref:System.Decimal.MinValue>, and 2<sup>96</sup>-1 is equal to <xref:System.Decimal.MaxValue>."},{"content":"For more information about the binary representation of <ph id=\"ph1\">&lt;xref:System.Decimal&gt;</ph> values and an example, see the <ph id=\"ph2\">&lt;xref:System.Decimal.%23ctor%28System.Int32%5B%5D%29&gt;</ph> constructor and the <ph id=\"ph3\">&lt;xref:System.Decimal.GetBits%2A&gt;</ph> method.","pos":[591,814],"source":" For more information about the binary representation of <xref:System.Decimal> values and an example, see the <xref:System.Decimal.%23ctor%28System.Int32%5B%5D%29> constructor and the <xref:System.Decimal.GetBits%2A> method."}]},{"pos":[2697,3032],"content":"The scaling factor  also preserves any trailing zeros in a <xref:System.Decimal> number. Trailing zeros do not affect the value of a <xref:System.Decimal> number in arithmetic or comparison operations. However, trailing zeros might be revealed by the <xref:System.Decimal.ToString%2A> method if an appropriate format string is applied.","nodes":[{"content":"The scaling factor  also preserves any trailing zeros in a <xref:System.Decimal> number. Trailing zeros do not affect the value of a <xref:System.Decimal> number in arithmetic or comparison operations. However, trailing zeros might be revealed by the <xref:System.Decimal.ToString%2A> method if an appropriate format string is applied.","pos":[0,335],"nodes":[{"content":"The scaling factor  also preserves any trailing zeros in a <ph id=\"ph1\">&lt;xref:System.Decimal&gt;</ph> number.","pos":[0,88],"source":"The scaling factor  also preserves any trailing zeros in a <xref:System.Decimal> number."},{"content":"Trailing zeros do not affect the value of a <ph id=\"ph1\">&lt;xref:System.Decimal&gt;</ph> number in arithmetic or comparison operations.","pos":[89,201],"source":" Trailing zeros do not affect the value of a <xref:System.Decimal> number in arithmetic or comparison operations."},{"content":"However, trailing zeros might be revealed by the <ph id=\"ph1\">&lt;xref:System.Decimal.ToString%2A&gt;</ph> method if an appropriate format string is applied.","pos":[202,335],"source":" However, trailing zeros might be revealed by the <xref:System.Decimal.ToString%2A> method if an appropriate format string is applied."}]}]},{"pos":[3041,3066],"content":"Conversion Considerations","linkify":"Conversion Considerations","nodes":[{"content":"Conversion Considerations","pos":[0,25]}]},{"pos":[3070,3468],"content":"This type provides methods that convert <xref:System.Decimal> values to and from <xref:System.SByte>, <xref:System.Int16>, <xref:System.Int32>, <xref:System.Int64>, <xref:System.Byte>, <xref:System.UInt16>, <xref:System.UInt32>, and <xref:System.UInt64> values. Conversions from these integral types to <xref:System.Decimal> are widening conversions that never lose information or throw exceptions.","nodes":[{"content":"This type provides methods that convert <xref:System.Decimal> values to and from <xref:System.SByte>, <xref:System.Int16>, <xref:System.Int32>, <xref:System.Int64>, <xref:System.Byte>, <xref:System.UInt16>, <xref:System.UInt32>, and <xref:System.UInt64> values. Conversions from these integral types to <xref:System.Decimal> are widening conversions that never lose information or throw exceptions.","pos":[0,398],"nodes":[{"content":"This type provides methods that convert <ph id=\"ph1\">&lt;xref:System.Decimal&gt;</ph> values to and from <ph id=\"ph2\">&lt;xref:System.SByte&gt;</ph>, <ph id=\"ph3\">&lt;xref:System.Int16&gt;</ph>, <ph id=\"ph4\">&lt;xref:System.Int32&gt;</ph>, <ph id=\"ph5\">&lt;xref:System.Int64&gt;</ph>, <ph id=\"ph6\">&lt;xref:System.Byte&gt;</ph>, <ph id=\"ph7\">&lt;xref:System.UInt16&gt;</ph>, <ph id=\"ph8\">&lt;xref:System.UInt32&gt;</ph>, and <ph id=\"ph9\">&lt;xref:System.UInt64&gt;</ph> values.","pos":[0,261],"source":"This type provides methods that convert <xref:System.Decimal> values to and from <xref:System.SByte>, <xref:System.Int16>, <xref:System.Int32>, <xref:System.Int64>, <xref:System.Byte>, <xref:System.UInt16>, <xref:System.UInt32>, and <xref:System.UInt64> values."},{"content":"Conversions from these integral types to <ph id=\"ph1\">&lt;xref:System.Decimal&gt;</ph> are widening conversions that never lose information or throw exceptions.","pos":[262,398],"source":" Conversions from these integral types to <xref:System.Decimal> are widening conversions that never lose information or throw exceptions."}]}]},{"pos":[3475,3909],"content":"Conversions from <xref:System.Decimal> to any of the integral types are narrowing conversions that round the <xref:System.Decimal> value to the nearest integer value toward zero. Some languages, such as C#, also support the conversion of <xref:System.Decimal> values to <xref:System.Char> values. If the result of these conversions cannot be represented in the destination type, an <xref:System.OverflowException> exception is thrown.","nodes":[{"content":"Conversions from <xref:System.Decimal> to any of the integral types are narrowing conversions that round the <xref:System.Decimal> value to the nearest integer value toward zero. Some languages, such as C#, also support the conversion of <xref:System.Decimal> values to <xref:System.Char> values. If the result of these conversions cannot be represented in the destination type, an <xref:System.OverflowException> exception is thrown.","pos":[0,434],"nodes":[{"content":"Conversions from <ph id=\"ph1\">&lt;xref:System.Decimal&gt;</ph> to any of the integral types are narrowing conversions that round the <ph id=\"ph2\">&lt;xref:System.Decimal&gt;</ph> value to the nearest integer value toward zero.","pos":[0,178],"source":"Conversions from <xref:System.Decimal> to any of the integral types are narrowing conversions that round the <xref:System.Decimal> value to the nearest integer value toward zero."},{"content":"Some languages, such as C#, also support the conversion of <ph id=\"ph1\">&lt;xref:System.Decimal&gt;</ph> values to <ph id=\"ph2\">&lt;xref:System.Char&gt;</ph> values.","pos":[179,296],"source":" Some languages, such as C#, also support the conversion of <xref:System.Decimal> values to <xref:System.Char> values."},{"content":"If the result of these conversions cannot be represented in the destination type, an <ph id=\"ph1\">&lt;xref:System.OverflowException&gt;</ph> exception is thrown.","pos":[297,434],"source":" If the result of these conversions cannot be represented in the destination type, an <xref:System.OverflowException> exception is thrown."}]}]},{"pos":[3916,4323],"content":"The <xref:System.Decimal> type also provides methods that convert <xref:System.Decimal> values to and from <xref:System.Single> and <xref:System.Double> values. Conversions from <xref:System.Decimal> to <xref:System.Single> or <xref:System.Double> are narrowing conversions that might lose precision but not information about the magnitude of the converted value. The conversion does not throw an exception.","nodes":[{"content":"The <xref:System.Decimal> type also provides methods that convert <xref:System.Decimal> values to and from <xref:System.Single> and <xref:System.Double> values. Conversions from <xref:System.Decimal> to <xref:System.Single> or <xref:System.Double> are narrowing conversions that might lose precision but not information about the magnitude of the converted value. The conversion does not throw an exception.","pos":[0,407],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Decimal&gt;</ph> type also provides methods that convert <ph id=\"ph2\">&lt;xref:System.Decimal&gt;</ph> values to and from <ph id=\"ph3\">&lt;xref:System.Single&gt;</ph> and <ph id=\"ph4\">&lt;xref:System.Double&gt;</ph> values.","pos":[0,160],"source":"The <xref:System.Decimal> type also provides methods that convert <xref:System.Decimal> values to and from <xref:System.Single> and <xref:System.Double> values."},{"content":"Conversions from <ph id=\"ph1\">&lt;xref:System.Decimal&gt;</ph> to <ph id=\"ph2\">&lt;xref:System.Single&gt;</ph> or <ph id=\"ph3\">&lt;xref:System.Double&gt;</ph> are narrowing conversions that might lose precision but not information about the magnitude of the converted value.","pos":[161,363],"source":" Conversions from <xref:System.Decimal> to <xref:System.Single> or <xref:System.Double> are narrowing conversions that might lose precision but not information about the magnitude of the converted value."},{"content":"The conversion does not throw an exception.","pos":[364,407]}]}]},{"pos":[4330,4549],"content":"Conversions from <xref:System.Single> or <xref:System.Double> to <xref:System.Decimal> throw an <xref:System.OverflowException> exception if the result of the conversion cannot be represented as a <xref:System.Decimal>.","nodes":[{"content":"Conversions from <ph id=\"ph1\">&lt;xref:System.Single&gt;</ph> or <ph id=\"ph2\">&lt;xref:System.Double&gt;</ph> to <ph id=\"ph3\">&lt;xref:System.Decimal&gt;</ph> throw an <ph id=\"ph4\">&lt;xref:System.OverflowException&gt;</ph> exception if the result of the conversion cannot be represented as a <ph id=\"ph5\">&lt;xref:System.Decimal&gt;</ph>.","pos":[0,219],"source":"Conversions from <xref:System.Single> or <xref:System.Double> to <xref:System.Decimal> throw an <xref:System.OverflowException> exception if the result of the conversion cannot be represented as a <xref:System.Decimal>."}]},{"pos":[4558,4597],"content":"Performing Operations on Decimal Values","linkify":"Performing Operations on Decimal Values","nodes":[{"content":"Performing Operations on Decimal Values","pos":[0,39]}]},{"pos":[4601,4897],"content":"The <xref:System.Decimal> type supports standard mathematical operations such as addition, subtraction, division, multiplication, and unary negation. You can also work directly with the binary representation of a <xref:System.Decimal> value by calling the <xref:System.Decimal.GetBits%2A> method.","nodes":[{"content":"The <xref:System.Decimal> type supports standard mathematical operations such as addition, subtraction, division, multiplication, and unary negation. You can also work directly with the binary representation of a <xref:System.Decimal> value by calling the <xref:System.Decimal.GetBits%2A> method.","pos":[0,296],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Decimal&gt;</ph> type supports standard mathematical operations such as addition, subtraction, division, multiplication, and unary negation.","pos":[0,149],"source":"The <xref:System.Decimal> type supports standard mathematical operations such as addition, subtraction, division, multiplication, and unary negation."},{"content":"You can also work directly with the binary representation of a <ph id=\"ph1\">&lt;xref:System.Decimal&gt;</ph> value by calling the <ph id=\"ph2\">&lt;xref:System.Decimal.GetBits%2A&gt;</ph> method.","pos":[150,296],"source":" You can also work directly with the binary representation of a <xref:System.Decimal> value by calling the <xref:System.Decimal.GetBits%2A> method."}]}]},{"pos":[4904,5101],"content":"To compare two <xref:System.Decimal> values, you can use the standard numeric comparison operators, or you can call the <xref:System.Decimal.CompareTo%2A> or <xref:System.Decimal.Equals%2A> method.","nodes":[{"content":"To compare two <ph id=\"ph1\">&lt;xref:System.Decimal&gt;</ph> values, you can use the standard numeric comparison operators, or you can call the <ph id=\"ph2\">&lt;xref:System.Decimal.CompareTo%2A&gt;</ph> or <ph id=\"ph3\">&lt;xref:System.Decimal.Equals%2A&gt;</ph> method.","pos":[0,197],"source":"To compare two <xref:System.Decimal> values, you can use the standard numeric comparison operators, or you can call the <xref:System.Decimal.CompareTo%2A> or <xref:System.Decimal.Equals%2A> method."}]},{"pos":[5108,5397],"content":"You can also call the members of the <xref:System.Math> class to perform a wide range of numeric operations, including getting the absolute value of a number, determining the maximum or minimum value of two <xref:System.Decimal> values, getting the sign of a number, and rounding a number.","nodes":[{"content":"You can also call the members of the <ph id=\"ph1\">&lt;xref:System.Math&gt;</ph> class to perform a wide range of numeric operations, including getting the absolute value of a number, determining the maximum or minimum value of two <ph id=\"ph2\">&lt;xref:System.Decimal&gt;</ph> values, getting the sign of a number, and rounding a number.","pos":[0,289],"source":"You can also call the members of the <xref:System.Math> class to perform a wide range of numeric operations, including getting the absolute value of a number, determining the maximum or minimum value of two <xref:System.Decimal> values, getting the sign of a number, and rounding a number."}]}],"pos":[6708,12140],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of <xref href=\"System.Decimal\"></xref> to the value of the specified double-precision floating-point number.","nodes":[{"pos":[0,135],"content":"Initializes a new instance of <ph id=\"ph1\">&lt;xref href=\"System.Decimal\"&gt;&lt;/xref&gt;</ph> to the value of the specified double-precision floating-point number.","source":"Initializes a new instance of <xref href=\"System.Decimal\"></xref> to the value of the specified double-precision floating-point number."}],"pos":[14600,14736],"yaml":true},{"content":"This constructor rounds `value` to 15 significant digits using rounding to nearest. This is done even if the number has more than 15 digits and the less significant digits are zero.","nodes":[{"pos":[0,181],"content":"This constructor rounds `value` to 15 significant digits using rounding to nearest. This is done even if the number has more than 15 digits and the less significant digits are zero.","nodes":[{"content":"This constructor rounds <ph id=\"ph1\">`value`</ph> to 15 significant digits using rounding to nearest.","pos":[0,83],"source":"This constructor rounds `value` to 15 significant digits using rounding to nearest."},{"content":"This is done even if the number has more than 15 digits and the less significant digits are zero.","pos":[84,181]}]}],"pos":[14747,14929],"yaml":true,"extradata":"MT"},{"content":"The value to represent as a <xref href=\"System.Decimal\"></xref>.","nodes":[{"pos":[0,64],"content":"The value to represent as a <ph id=\"ph1\">&lt;xref href=\"System.Decimal\"&gt;&lt;/xref&gt;</ph>.","source":"The value to represent as a <xref href=\"System.Decimal\"></xref>."}],"pos":[15657,15722],"yaml":true},{"content":"<code>value</code> is greater than <xref href=\"System.Decimal.MaxValue\"></xref> or less than <xref href=\"System.Decimal.MinValue\"></xref>.  \n  \n -or-  \n  \n <code>value</code> is <xref href=\"System.Double.NaN\"></xref>, <xref href=\"System.Double.PositiveInfinity\"></xref>, or <xref href=\"System.Double.NegativeInfinity\"></xref>.","nodes":[{"pos":[0,138],"content":"<ph id=\"ph1\">&lt;code&gt;value&lt;/code&gt;</ph> is greater than <ph id=\"ph2\">&lt;xref href=\"System.Decimal.MaxValue\"&gt;&lt;/xref&gt;</ph> or less than <ph id=\"ph3\">&lt;xref href=\"System.Decimal.MinValue\"&gt;&lt;/xref&gt;</ph>.","source":"<code>value</code> is greater than <xref href=\"System.Decimal.MaxValue\"></xref> or less than <xref href=\"System.Decimal.MinValue\"></xref>."},{"pos":[145,149],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[156,326],"content":"<ph id=\"ph1\">&lt;code&gt;value&lt;/code&gt;</ph> is <ph id=\"ph2\">&lt;xref href=\"System.Double.NaN\"&gt;&lt;/xref&gt;</ph>, <ph id=\"ph3\">&lt;xref href=\"System.Double.PositiveInfinity\"&gt;&lt;/xref&gt;</ph>, or <ph id=\"ph4\">&lt;xref href=\"System.Double.NegativeInfinity\"&gt;&lt;/xref&gt;</ph>.","source":"<code>value</code> is <xref href=\"System.Double.NaN\"></xref>, <xref href=\"System.Double.PositiveInfinity\"></xref>, or <xref href=\"System.Double.NegativeInfinity\"></xref>."}],"pos":[15864,16207],"yaml":true},{"content":"Initializes a new instance of <xref href=\"System.Decimal\"></xref> to the value of the specified 32-bit signed integer.","nodes":[{"pos":[0,118],"content":"Initializes a new instance of <ph id=\"ph1\">&lt;xref href=\"System.Decimal\"&gt;&lt;/xref&gt;</ph> to the value of the specified 32-bit signed integer.","source":"Initializes a new instance of <xref href=\"System.Decimal\"></xref> to the value of the specified 32-bit signed integer."}],"pos":[17654,17773],"yaml":true},{"content":"The value to represent as a <xref href=\"System.Decimal\"></xref>.","nodes":[{"pos":[0,64],"content":"The value to represent as a <ph id=\"ph1\">&lt;xref href=\"System.Decimal\"&gt;&lt;/xref&gt;</ph>.","source":"The value to represent as a <xref href=\"System.Decimal\"></xref>."}],"pos":[18502,18567],"yaml":true},{"content":"Initializes a new instance of <xref href=\"System.Decimal\"></xref> to a decimal value represented in binary and contained in a specified array.","nodes":[{"pos":[0,142],"content":"Initializes a new instance of <ph id=\"ph1\">&lt;xref href=\"System.Decimal\"&gt;&lt;/xref&gt;</ph> to a decimal value represented in binary and contained in a specified array.","source":"Initializes a new instance of <xref href=\"System.Decimal\"></xref> to a decimal value represented in binary and contained in a specified array."}],"pos":[20060,20203],"yaml":true},{"content":"The binary representation of a <xref:System.Decimal> number consists of a 1-bit sign, a 96-bit integer number, and a scaling factor used to divide the integer number and specify what portion of it is a decimal fraction. The scaling factor is implicitly the number 10, raised to an exponent ranging from 0 to 28.  \n  \n `bits` is a four-element long array of 32-bit signed integers.  \n  \n `bits` [0], `bits` [1], and `bits` [2] contain the low, middle, and high 32 bits of the 96-bit integer number.  \n  \n `bits` [3] contains the scale factor and sign, and consists of following parts:  \n  \n Bits 0 to 15, the lower word, are unused and must be zero.  \n  \n Bits 16 to 23 must contain an exponent between 0 and 28, which indicates the power of 10 to divide the integer number.  \n  \n Bits 24 to 30 are unused and must be zero.  \n  \n Bit 31 contains the sign; 0 meaning positive, and 1 meaning negative.  \n  \n A numeric value might have several possible binary representations; all are equally valid and numerically equivalent. Note that the bit representation differentiates between negative and positive zero. These values are treated as being equal in all operations.","nodes":[{"pos":[0,311],"content":"The binary representation of a <xref:System.Decimal> number consists of a 1-bit sign, a 96-bit integer number, and a scaling factor used to divide the integer number and specify what portion of it is a decimal fraction. The scaling factor is implicitly the number 10, raised to an exponent ranging from 0 to 28.","nodes":[{"content":"The binary representation of a <xref:System.Decimal> number consists of a 1-bit sign, a 96-bit integer number, and a scaling factor used to divide the integer number and specify what portion of it is a decimal fraction. The scaling factor is implicitly the number 10, raised to an exponent ranging from 0 to 28.","pos":[0,311],"nodes":[{"content":"The binary representation of a <ph id=\"ph1\">&lt;xref:System.Decimal&gt;</ph> number consists of a 1-bit sign, a 96-bit integer number, and a scaling factor used to divide the integer number and specify what portion of it is a decimal fraction.","pos":[0,219],"source":"The binary representation of a <xref:System.Decimal> number consists of a 1-bit sign, a 96-bit integer number, and a scaling factor used to divide the integer number and specify what portion of it is a decimal fraction."},{"content":"The scaling factor is implicitly the number 10, raised to an exponent ranging from 0 to 28.","pos":[220,311]}]}]},{"pos":[318,380],"content":"<ph id=\"ph1\">`bits`</ph> is a four-element long array of 32-bit signed integers.","source":"`bits` is a four-element long array of 32-bit signed integers."},{"pos":[387,497],"content":"<ph id=\"ph1\">`bits`</ph> [0], <ph id=\"ph2\">`bits`</ph> [1], and <ph id=\"ph3\">`bits`</ph> [2] contain the low, middle, and high 32 bits of the 96-bit integer number.","source":"`bits` [0], `bits` [1], and `bits` [2] contain the low, middle, and high 32 bits of the 96-bit integer number."},{"pos":[504,583],"content":"<ph id=\"ph1\">`bits`</ph> [3] contains the scale factor and sign, and consists of following parts:","source":"`bits` [3] contains the scale factor and sign, and consists of following parts:"},{"pos":[590,648],"content":"Bits 0 to 15, the lower word, are unused and must be zero.","nodes":[{"content":"Bits 0 to 15, the lower word, are unused and must be zero.","pos":[0,58]}]},{"pos":[655,773],"content":"Bits 16 to 23 must contain an exponent between 0 and 28, which indicates the power of 10 to divide the integer number.","nodes":[{"content":"Bits 16 to 23 must contain an exponent between 0 and 28, which indicates the power of 10 to divide the integer number.","pos":[0,118]}]},{"pos":[780,822],"content":"Bits 24 to 30 are unused and must be zero.","nodes":[{"content":"Bits 24 to 30 are unused and must be zero.","pos":[0,42]}]},{"pos":[829,898],"content":"Bit 31 contains the sign; 0 meaning positive, and 1 meaning negative.","nodes":[{"content":"Bit 31 contains the sign; 0 meaning positive, and 1 meaning negative.","pos":[0,69]}]},{"pos":[905,1165],"content":"A numeric value might have several possible binary representations; all are equally valid and numerically equivalent. Note that the bit representation differentiates between negative and positive zero. These values are treated as being equal in all operations.","nodes":[{"content":"A numeric value might have several possible binary representations; all are equally valid and numerically equivalent. Note that the bit representation differentiates between negative and positive zero. These values are treated as being equal in all operations.","pos":[0,260],"nodes":[{"content":"A numeric value might have several possible binary representations; all are equally valid and numerically equivalent.","pos":[0,117]},{"content":"Note that the bit representation differentiates between negative and positive zero.","pos":[118,201]},{"content":"These values are treated as being equal in all operations.","pos":[202,260]}]}]}],"pos":[20214,21398],"yaml":true,"extradata":"MT"},{"content":"An array of 32-bit signed integers containing a representation of a decimal value.","nodes":[{"pos":[0,82],"content":"An array of 32-bit signed integers containing a representation of a decimal value.","nodes":[{"content":"An array of 32-bit signed integers containing a representation of a decimal value.","pos":[0,82]}]}],"pos":[22151,22234],"yaml":true},{"content":"<code>bits</code> is `null`.","nodes":[{"pos":[0,28],"content":"<ph id=\"ph1\">&lt;code&gt;bits&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>bits</code> is `null`."}],"pos":[22384,22413],"yaml":true},{"content":"The length of the <code>bits</code> is not 4.  \n  \n -or-  \n  \n The representation of the decimal value in <code>bits</code> is not valid.","nodes":[{"pos":[0,45],"content":"The length of the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">bits</ph><ept id=\"p1\">&lt;/code&gt;</ept> is not 4.","source":"The length of the <code>bits</code> is not 4."},{"pos":[52,56],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[63,137],"content":"The representation of the decimal value in <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">bits</ph><ept id=\"p1\">&lt;/code&gt;</ept> is not valid.","source":"The representation of the decimal value in <code>bits</code> is not valid."}],"pos":[22507,22651],"yaml":true},{"content":"Initializes a new instance of <xref href=\"System.Decimal\"></xref> to the value of the specified 64-bit signed integer.","nodes":[{"pos":[0,118],"content":"Initializes a new instance of <ph id=\"ph1\">&lt;xref href=\"System.Decimal\"&gt;&lt;/xref&gt;</ph> to the value of the specified 64-bit signed integer.","source":"Initializes a new instance of <xref href=\"System.Decimal\"></xref> to the value of the specified 64-bit signed integer."}],"pos":[24081,24200],"yaml":true},{"content":"The value to represent as a <xref href=\"System.Decimal\"></xref>.","nodes":[{"pos":[0,64],"content":"The value to represent as a <ph id=\"ph1\">&lt;xref href=\"System.Decimal\"&gt;&lt;/xref&gt;</ph>.","source":"The value to represent as a <xref href=\"System.Decimal\"></xref>."}],"pos":[24930,24995],"yaml":true},{"content":"Initializes a new instance of <xref href=\"System.Decimal\"></xref> to the value of the specified single-precision floating-point number.","nodes":[{"pos":[0,135],"content":"Initializes a new instance of <ph id=\"ph1\">&lt;xref href=\"System.Decimal\"&gt;&lt;/xref&gt;</ph> to the value of the specified single-precision floating-point number.","source":"Initializes a new instance of <xref href=\"System.Decimal\"></xref> to the value of the specified single-precision floating-point number."}],"pos":[26482,26618],"yaml":true},{"content":"This constructor rounds `value` to 7 significant digits using rounding to nearest. This is done even if the number has more than 7 digits and the less significant digits are zero.","nodes":[{"pos":[0,179],"content":"This constructor rounds `value` to 7 significant digits using rounding to nearest. This is done even if the number has more than 7 digits and the less significant digits are zero.","nodes":[{"content":"This constructor rounds <ph id=\"ph1\">`value`</ph> to 7 significant digits using rounding to nearest.","pos":[0,82],"source":"This constructor rounds `value` to 7 significant digits using rounding to nearest."},{"content":"This is done even if the number has more than 7 digits and the less significant digits are zero.","pos":[83,179]}]}],"pos":[26629,26809],"yaml":true,"extradata":"MT"},{"content":"The value to represent as a <xref href=\"System.Decimal\"></xref>.","nodes":[{"pos":[0,64],"content":"The value to represent as a <ph id=\"ph1\">&lt;xref href=\"System.Decimal\"&gt;&lt;/xref&gt;</ph>.","source":"The value to represent as a <xref href=\"System.Decimal\"></xref>."}],"pos":[27533,27598],"yaml":true},{"content":"<code>value</code> is greater than <xref href=\"System.Decimal.MaxValue\"></xref> or less than <xref href=\"System.Decimal.MinValue\"></xref>.  \n  \n -or-  \n  \n <code>value</code> is <xref href=\"System.Single.NaN\"></xref>, <xref href=\"System.Single.PositiveInfinity\"></xref>, or <xref href=\"System.Single.NegativeInfinity\"></xref>.","nodes":[{"pos":[0,138],"content":"<ph id=\"ph1\">&lt;code&gt;value&lt;/code&gt;</ph> is greater than <ph id=\"ph2\">&lt;xref href=\"System.Decimal.MaxValue\"&gt;&lt;/xref&gt;</ph> or less than <ph id=\"ph3\">&lt;xref href=\"System.Decimal.MinValue\"&gt;&lt;/xref&gt;</ph>.","source":"<code>value</code> is greater than <xref href=\"System.Decimal.MaxValue\"></xref> or less than <xref href=\"System.Decimal.MinValue\"></xref>."},{"pos":[145,149],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[156,326],"content":"<ph id=\"ph1\">&lt;code&gt;value&lt;/code&gt;</ph> is <ph id=\"ph2\">&lt;xref href=\"System.Single.NaN\"&gt;&lt;/xref&gt;</ph>, <ph id=\"ph3\">&lt;xref href=\"System.Single.PositiveInfinity\"&gt;&lt;/xref&gt;</ph>, or <ph id=\"ph4\">&lt;xref href=\"System.Single.NegativeInfinity\"&gt;&lt;/xref&gt;</ph>.","source":"<code>value</code> is <xref href=\"System.Single.NaN\"></xref>, <xref href=\"System.Single.PositiveInfinity\"></xref>, or <xref href=\"System.Single.NegativeInfinity\"></xref>."}],"pos":[27740,28083],"yaml":true},{"content":"Initializes a new instance of <xref href=\"System.Decimal\"></xref> to the value of the specified 32-bit unsigned integer.","nodes":[{"pos":[0,120],"content":"Initializes a new instance of <ph id=\"ph1\">&lt;xref href=\"System.Decimal\"&gt;&lt;/xref&gt;</ph> to the value of the specified 32-bit unsigned integer.","source":"Initializes a new instance of <xref href=\"System.Decimal\"></xref> to the value of the specified 32-bit unsigned integer."}],"pos":[29536,29657],"yaml":true},{"content":"The value to represent as a <xref href=\"System.Decimal\"></xref>.","nodes":[{"pos":[0,64],"content":"The value to represent as a <ph id=\"ph1\">&lt;xref href=\"System.Decimal\"&gt;&lt;/xref&gt;</ph>.","source":"The value to represent as a <xref href=\"System.Decimal\"></xref>."}],"pos":[30436,30501],"yaml":true},{"content":"Initializes a new instance of <xref href=\"System.Decimal\"></xref> to the value of the specified 64-bit unsigned integer.","nodes":[{"pos":[0,120],"content":"Initializes a new instance of <ph id=\"ph1\">&lt;xref href=\"System.Decimal\"&gt;&lt;/xref&gt;</ph> to the value of the specified 64-bit unsigned integer.","source":"Initializes a new instance of <xref href=\"System.Decimal\"></xref> to the value of the specified 64-bit unsigned integer."}],"pos":[32041,32162],"yaml":true},{"content":"The value to represent as a <xref href=\"System.Decimal\"></xref>.","nodes":[{"pos":[0,64],"content":"The value to represent as a <ph id=\"ph1\">&lt;xref href=\"System.Decimal\"&gt;&lt;/xref&gt;</ph>.","source":"The value to represent as a <xref href=\"System.Decimal\"></xref>."}],"pos":[32942,33007],"yaml":true},{"content":"Initializes a new instance of <xref href=\"System.Decimal\"></xref> from parameters specifying the instance's constituent parts.","nodes":[{"pos":[0,126],"content":"Initializes a new instance of <ph id=\"ph1\">&lt;xref href=\"System.Decimal\"&gt;&lt;/xref&gt;</ph> from parameters specifying the instance's constituent parts.","source":"Initializes a new instance of <xref href=\"System.Decimal\"></xref> from parameters specifying the instance's constituent parts."}],"pos":[34787,34914],"yaml":true},{"content":"The binary representation of a <xref:System.Decimal> number consists of a 1-bit sign, a 96-bit integer number, and a scaling factor used to divide the integer number and specify what portion of it is a decimal fraction. The scaling factor is implicitly the number 10 raised to an exponent ranging from 0 to 28.","nodes":[{"pos":[0,310],"content":"The binary representation of a <xref:System.Decimal> number consists of a 1-bit sign, a 96-bit integer number, and a scaling factor used to divide the integer number and specify what portion of it is a decimal fraction. The scaling factor is implicitly the number 10 raised to an exponent ranging from 0 to 28.","nodes":[{"content":"The binary representation of a <xref:System.Decimal> number consists of a 1-bit sign, a 96-bit integer number, and a scaling factor used to divide the integer number and specify what portion of it is a decimal fraction. The scaling factor is implicitly the number 10 raised to an exponent ranging from 0 to 28.","pos":[0,310],"nodes":[{"content":"The binary representation of a <ph id=\"ph1\">&lt;xref:System.Decimal&gt;</ph> number consists of a 1-bit sign, a 96-bit integer number, and a scaling factor used to divide the integer number and specify what portion of it is a decimal fraction.","pos":[0,219],"source":"The binary representation of a <xref:System.Decimal> number consists of a 1-bit sign, a 96-bit integer number, and a scaling factor used to divide the integer number and specify what portion of it is a decimal fraction."},{"content":"The scaling factor is implicitly the number 10 raised to an exponent ranging from 0 to 28.","pos":[220,310]}]}]}],"pos":[34925,35236],"yaml":true,"extradata":"MT"},{"content":"The low 32 bits of a 96-bit integer.","nodes":[{"pos":[0,36],"content":"The low 32 bits of a 96-bit integer.","nodes":[{"content":"The low 32 bits of a 96-bit integer.","pos":[0,36]}]}],"pos":[36691,36728],"yaml":true},{"content":"The middle 32 bits of a 96-bit integer.","nodes":[{"pos":[0,39],"content":"The middle 32 bits of a 96-bit integer.","nodes":[{"content":"The middle 32 bits of a 96-bit integer.","pos":[0,39]}]}],"pos":[36786,36826],"yaml":true},{"content":"The high 32 bits of a 96-bit integer.","nodes":[{"pos":[0,37],"content":"The high 32 bits of a 96-bit integer.","nodes":[{"content":"The high 32 bits of a 96-bit integer.","pos":[0,37]}]}],"pos":[36883,36921],"yaml":true},{"content":"`true` to indicate a negative number; `false` to indicate a positive number.","nodes":[{"pos":[0,76],"content":"<ph id=\"ph1\">`true`</ph> to indicate a negative number; <ph id=\"ph2\">`false`</ph> to indicate a positive number.","source":"`true` to indicate a negative number; `false` to indicate a positive number."}],"pos":[36988,37067],"yaml":true},{"content":"A power of 10 ranging from 0 to 28.","nodes":[{"pos":[0,35],"content":"A power of 10 ranging from 0 to 28.","nodes":[{"content":"A power of 10 ranging from 0 to 28.","pos":[0,35]}]}],"pos":[37126,37162],"yaml":true},{"content":"<code>scale</code> is greater than 28.","nodes":[{"pos":[0,38],"content":"<ph id=\"ph1\">&lt;code&gt;scale&lt;/code&gt;</ph> is greater than 28.","source":"<code>scale</code> is greater than 28."}],"pos":[37324,37363],"yaml":true},{"content":"Adds two specified <xref href=\"System.Decimal\"></xref> values.","nodes":[{"pos":[0,62],"content":"Adds two specified <ph id=\"ph1\">&lt;xref href=\"System.Decimal\"&gt;&lt;/xref&gt;</ph> values.","source":"Adds two specified <xref href=\"System.Decimal\"></xref> values."}],"pos":[38852,38915],"yaml":true},{"content":"The following code sample illustrates the use of `Add` :  \n  \n [!code-cpp[Decimal Example#5](~/samples/snippets/cpp/VS_Snippets_CLR/Decimal Example/CPP/source.cpp#5)]\n [!code-csharp[Decimal Example#5](~/samples/snippets/csharp/VS_Snippets_CLR/Decimal Example/CS/source.cs#5)]\n [!code-vb[Decimal Example#5](~/samples/snippets/visualbasic/VS_Snippets_CLR/Decimal Example/VB/source.vb#5)]","nodes":[{"pos":[0,56],"content":"The following code sample illustrates the use of <ph id=\"ph1\">`Add`</ph> :","source":"The following code sample illustrates the use of `Add` :"},{"pos":[63,385],"content":"<bpt id=\"p1\">[!code-cpp</bpt><bpt id=\"p2\">[</bpt>Decimal Example#5<ept id=\"p2\">](~/samples/snippets/cpp/VS_Snippets_CLR/Decimal Example/CPP/source.cpp#5)</ept><ept id=\"p1\">]</ept> <bpt id=\"p3\">[!code-csharp</bpt><bpt id=\"p4\">[</bpt>Decimal Example#5<ept id=\"p4\">](~/samples/snippets/csharp/VS_Snippets_CLR/Decimal Example/CS/source.cs#5)</ept><ept id=\"p3\">]</ept> <bpt id=\"p5\">[!code-vb</bpt><bpt id=\"p6\">[</bpt>Decimal Example#5<ept id=\"p6\">](~/samples/snippets/visualbasic/VS_Snippets_CLR/Decimal Example/VB/source.vb#5)</ept><ept id=\"p5\">]</ept>","source":"[!code-cpp[Decimal Example#5](~/samples/snippets/cpp/VS_Snippets_CLR/Decimal Example/CPP/source.cpp#5)]\n [!code-csharp[Decimal Example#5](~/samples/snippets/csharp/VS_Snippets_CLR/Decimal Example/CS/source.cs#5)]\n [!code-vb[Decimal Example#5](~/samples/snippets/visualbasic/VS_Snippets_CLR/Decimal Example/VB/source.vb#5)]"}],"pos":[38926,39318],"yaml":true,"extradata":"MT"},{"content":"The first value to add.","nodes":[{"pos":[0,23],"content":"The first value to add.","nodes":[{"content":"The first value to add.","pos":[0,23]}]}],"pos":[39468,39492],"yaml":true},{"content":"The second value to add.","nodes":[{"pos":[0,24],"content":"The second value to add.","nodes":[{"content":"The second value to add.","pos":[0,24]}]}],"pos":[39551,39576],"yaml":true},{"content":"The sum of <code>d1</code> and <code>d2</code>.","nodes":[{"pos":[0,47],"content":"The sum of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">d1</ph><ept id=\"p1\">&lt;/code&gt;</ept> and <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">d2</ph><ept id=\"p2\">&lt;/code&gt;</ept>.","source":"The sum of <code>d1</code> and <code>d2</code>."}],"pos":[39634,39682],"yaml":true},{"content":"The sum of <code>d1</code> and <code>d2</code> is less than <xref href=\"System.Decimal.MinValue\"></xref> or greater than <xref href=\"System.Decimal.MaxValue\"></xref>.","nodes":[{"pos":[0,166],"content":"The sum of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">d1</ph><ept id=\"p1\">&lt;/code&gt;</ept> and <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">d2</ph><ept id=\"p2\">&lt;/code&gt;</ept> is less than <ph id=\"ph3\">&lt;xref href=\"System.Decimal.MinValue\"&gt;&lt;/xref&gt;</ph> or greater than <ph id=\"ph4\">&lt;xref href=\"System.Decimal.MaxValue\"&gt;&lt;/xref&gt;</ph>.","source":"The sum of <code>d1</code> and <code>d2</code> is less than <xref href=\"System.Decimal.MinValue\"></xref> or greater than <xref href=\"System.Decimal.MaxValue\"></xref>."}],"pos":[39822,39989],"yaml":true},{"content":"Returns the smallest integral value that is greater than or equal to the specified decimal number.","nodes":[{"pos":[0,98],"content":"Returns the smallest integral value that is greater than or equal to the specified decimal number.","nodes":[{"content":"Returns the smallest integral value that is greater than or equal to the specified decimal number.","pos":[0,98]}]}],"pos":[41447,41546],"yaml":true},{"content":"The behavior of this method follows IEEE Standard 754, section 4. This kind of rounding is sometimes called rounding toward positive infinity. In other words, if `d` is positive, the presence of any fractional component causes `d` to be rounded to the next highest integer. If `d` is negative, the rounding operation causes any fractional component of `d` to be discarded. The operation of this method differs from the <xref:System.Decimal.Floor%2A> method, which supports rounding toward negative infinity.","nodes":[{"pos":[0,507],"content":"The behavior of this method follows IEEE Standard 754, section 4. This kind of rounding is sometimes called rounding toward positive infinity. In other words, if `d` is positive, the presence of any fractional component causes `d` to be rounded to the next highest integer. If `d` is negative, the rounding operation causes any fractional component of `d` to be discarded. The operation of this method differs from the <xref:System.Decimal.Floor%2A> method, which supports rounding toward negative infinity.","nodes":[{"content":"The behavior of this method follows IEEE Standard 754, section 4.","pos":[0,65]},{"content":"This kind of rounding is sometimes called rounding toward positive infinity.","pos":[66,142]},{"content":"In other words, if <ph id=\"ph1\">`d`</ph> is positive, the presence of any fractional component causes <ph id=\"ph2\">`d`</ph> to be rounded to the next highest integer.","pos":[143,273],"source":" In other words, if `d` is positive, the presence of any fractional component causes `d` to be rounded to the next highest integer."},{"content":"If <ph id=\"ph1\">`d`</ph> is negative, the rounding operation causes any fractional component of <ph id=\"ph2\">`d`</ph> to be discarded.","pos":[274,372],"source":" If `d` is negative, the rounding operation causes any fractional component of `d` to be discarded."},{"content":"The operation of this method differs from the <ph id=\"ph1\">&lt;xref:System.Decimal.Floor%2A&gt;</ph> method, which supports rounding toward negative infinity.","pos":[373,507],"source":" The operation of this method differs from the <xref:System.Decimal.Floor%2A> method, which supports rounding toward negative infinity."}]}],"pos":[41557,42065],"yaml":true,"extradata":"MT"},{"content":"A decimal number.","nodes":[{"pos":[0,17],"content":"A decimal number.","nodes":[{"content":"A decimal number.","pos":[0,17]}]}],"pos":[42638,42656],"yaml":true},{"content":"The smallest integral value that is greater than or equal to the <code>d</code> parameter. Note that this method returns a <xref href=\"System.Decimal\"></xref> instead of an integral type.","nodes":[{"pos":[0,187],"content":"The smallest integral value that is greater than or equal to the <code>d</code> parameter. Note that this method returns a <xref href=\"System.Decimal\"></xref> instead of an integral type.","nodes":[{"content":"The smallest integral value that is greater than or equal to the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">d</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter.","pos":[0,90],"source":"The smallest integral value that is greater than or equal to the <code>d</code> parameter."},{"content":"Note that this method returns a <ph id=\"ph1\">&lt;xref href=\"System.Decimal\"&gt;&lt;/xref&gt;</ph> instead of an integral type.","pos":[91,187],"source":" Note that this method returns a <xref href=\"System.Decimal\"></xref> instead of an integral type."}]}],"pos":[42714,42902],"yaml":true},{"content":"Compares two specified <xref href=\"System.Decimal\"></xref> values.","nodes":[{"pos":[0,66],"content":"Compares two specified <ph id=\"ph1\">&lt;xref href=\"System.Decimal\"&gt;&lt;/xref&gt;</ph> values.","source":"Compares two specified <xref href=\"System.Decimal\"></xref> values."}],"pos":[44468,44535],"yaml":true},{"content":"The first value to compare.","nodes":[{"pos":[0,27],"content":"The first value to compare.","nodes":[{"content":"The first value to compare.","pos":[0,27]}]}],"pos":[45370,45398],"yaml":true},{"content":"The second value to compare.","nodes":[{"pos":[0,28],"content":"The second value to compare.","nodes":[{"content":"The second value to compare.","pos":[0,28]}]}],"pos":[45457,45486],"yaml":true},{"content":"A signed number indicating the relative values of <code>d1</code> and <code>d2</code>.  \n  \n <table><thead><tr><th> Return value  \n  \n </th><th> Meaning  \n  \n </th></tr></thead><tbody><tr><td> Less than zero  \n  \n </td><td><code>d1</code> is less than <code>d2</code>.  \n  \n </td></tr><tr><td> Zero  \n  \n </td><td><code>d1</code> and <code>d2</code> are equal.  \n  \n </td></tr><tr><td> Greater than zero  \n  \n </td><td><code>d1</code> is greater than <code>d2</code>.  \n  \n </td></tr></tbody></table>","nodes":[{"pos":[0,86],"content":"A signed number indicating the relative values of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">d1</ph><ept id=\"p1\">&lt;/code&gt;</ept> and <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">d2</ph><ept id=\"p2\">&lt;/code&gt;</ept>.","source":"A signed number indicating the relative values of <code>d1</code> and <code>d2</code>."},{"pos":[93,501],"content":"<table><thead><tr><th> Return value  \n  \n </th><th> Meaning  \n  \n </th></tr></thead><tbody><tr><td> Less than zero  \n  \n </td><td><code>d1</code> is less than <code>d2</code>.  \n  \n </td></tr><tr><td> Zero  \n  \n </td><td><code>d1</code> and <code>d2</code> are equal.  \n  \n </td></tr><tr><td> Greater than zero  \n  \n </td><td><code>d1</code> is greater than <code>d2</code>.  \n  \n </td></tr></tbody></table>","nodes":[{"content":"Return value","pos":[23,40],"source":" Return value  \n  \n "},{"content":"Meaning","pos":[52,64],"source":" Meaning  \n  \n "},{"content":"Less than zero","pos":[100,119],"source":" Less than zero  \n  \n "},{"content":"<code>d1</code> is less than <code>d2</code>.  \n  \n ","pos":[130,182],"nodes":[{"content":"<ph id=\"ph1\">&lt;code&gt;d1&lt;/code&gt;</ph> is less than <ph id=\"ph2\">&lt;code&gt;d2&lt;/code&gt;</ph>.","pos":[0,45],"source":"<code>d1</code> is less than <code>d2</code>."}]},{"content":"Zero","pos":[201,210],"source":" Zero  \n  \n "},{"content":"<code>d1</code> and <code>d2</code> are equal.  \n  \n ","pos":[221,274],"nodes":[{"content":"<ph id=\"ph1\">&lt;code&gt;d1&lt;/code&gt;</ph> and <ph id=\"ph2\">&lt;code&gt;d2&lt;/code&gt;</ph> are equal.","pos":[0,46],"source":"<code>d1</code> and <code>d2</code> are equal."}]},{"content":"Greater than zero","pos":[293,315],"source":" Greater than zero  \n  \n "},{"content":"<code>d1</code> is greater than <code>d2</code>.  \n  \n ","pos":[326,381],"nodes":[{"content":"<ph id=\"ph1\">&lt;code&gt;d1&lt;/code&gt;</ph> is greater than <ph id=\"ph2\">&lt;code&gt;d2&lt;/code&gt;</ph>.","pos":[0,48],"source":"<code>d1</code> is greater than <code>d2</code>."}]}]}],"pos":[45542,46063],"yaml":true},{"content":"Compares this instance to a specified object and returns a comparison of their relative values.","nodes":[{"pos":[0,95],"content":"Compares this instance to a specified object and returns a comparison of their relative values.","nodes":[{"content":"Compares this instance to a specified object and returns a comparison of their relative values.","pos":[0,95]}]}],"pos":[47580,47676],"yaml":true},{"content":"Any instance of <xref:System.Decimal>, regardless of its value, is considered greater than `null`.  \n  \n Parameter `value` must be `null` or an instance of <xref:System.Decimal>; otherwise, an exception is thrown.","nodes":[{"pos":[0,98],"content":"Any instance of <ph id=\"ph1\">&lt;xref:System.Decimal&gt;</ph>, regardless of its value, is considered greater than <ph id=\"ph2\">`null`</ph>.","source":"Any instance of <xref:System.Decimal>, regardless of its value, is considered greater than `null`."},{"pos":[105,213],"content":"Parameter <ph id=\"ph1\">`value`</ph> must be <ph id=\"ph2\">`null`</ph> or an instance of <ph id=\"ph3\">&lt;xref:System.Decimal&gt;</ph>; otherwise, an exception is thrown.","source":"Parameter `value` must be `null` or an instance of <xref:System.Decimal>; otherwise, an exception is thrown."}],"pos":[47687,47905],"yaml":true,"extradata":"MT"},{"content":"The object to compare with this instance, or `null`.","nodes":[{"pos":[0,52],"content":"The object to compare with this instance, or <ph id=\"ph1\">`null`</ph>.","source":"The object to compare with this instance, or `null`."}],"pos":[48642,48695],"yaml":true},{"content":"A signed number indicating the relative values of this instance and <code>value</code>.  \n  \n <table><thead><tr><th> Return value  \n  \n </th><th> Meaning  \n  \n </th></tr></thead><tbody><tr><td> Less than zero  \n  \n </td><td> This instance is less than <code>value</code>.  \n  \n </td></tr><tr><td> Zero  \n  \n </td><td> This instance is equal to <code>value</code>.  \n  \n </td></tr><tr><td> Greater than zero  \n  \n </td><td> This instance is greater than <code>value</code>.  \n  \n -or-  \n  \n <code>value</code> is `null`.  \n  \n </td></tr></tbody></table>","nodes":[{"pos":[0,87],"content":"A signed number indicating the relative values of this instance and <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">value</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"A signed number indicating the relative values of this instance and <code>value</code>."},{"pos":[94,472],"content":"<table><thead><tr><th> Return value  \n  \n </th><th> Meaning  \n  \n </th></tr></thead><tbody><tr><td> Less than zero  \n  \n </td><td> This instance is less than <code>value</code>.  \n  \n </td></tr><tr><td> Zero  \n  \n </td><td> This instance is equal to <code>value</code>.  \n  \n </td></tr><tr><td> Greater than zero  \n  \n </td><td> This instance is greater than <code>value</code>.","nodes":[{"content":"Return value","pos":[23,40],"source":" Return value  \n  \n "},{"content":"Meaning","pos":[52,64],"source":" Meaning  \n  \n "},{"content":"Less than zero","pos":[100,119],"source":" Less than zero  \n  \n "},{"content":" This instance is less than <code>value</code>.  \n  \n ","pos":[130,184],"nodes":[{"content":"This instance is less than <ph id=\"ph1\">&lt;code&gt;value&lt;/code&gt;</ph>.","pos":[1,47],"source":" This instance is less than <code>value</code>."}]},{"content":"Zero","pos":[203,212],"source":" Zero  \n  \n "},{"content":" This instance is equal to <code>value</code>.  \n  \n ","pos":[223,276],"nodes":[{"content":"This instance is equal to <ph id=\"ph1\">&lt;code&gt;value&lt;/code&gt;</ph>.","pos":[1,46],"source":" This instance is equal to <code>value</code>."}]},{"content":"Greater than zero","pos":[295,317],"source":" Greater than zero  \n  \n "},{"content":"This instance is greater than <ph id=\"ph1\">&lt;code&gt;value&lt;/code&gt;</ph>.","pos":[329,378],"source":" This instance is greater than <code>value</code>."}]},{"pos":[479,483],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[490,553],"content":"<code>value</code> is `null`.  \n  \n </td></tr></tbody></table>","nodes":[{"content":"<code>value</code> is `null`.  \n  \n ","pos":[0,36],"nodes":[{"content":"<ph id=\"ph1\">&lt;code&gt;value&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","pos":[0,29],"source":"<code>value</code> is `null`."}]}]}],"pos":[48751,49328],"yaml":true},{"content":"<code>value</code> is not a <xref href=\"System.Decimal\"></xref>.","nodes":[{"pos":[0,64],"content":"<ph id=\"ph1\">&lt;code&gt;value&lt;/code&gt;</ph> is not a <ph id=\"ph2\">&lt;xref href=\"System.Decimal\"&gt;&lt;/xref&gt;</ph>.","source":"<code>value</code> is not a <xref href=\"System.Decimal\"></xref>."}],"pos":[49474,49539],"yaml":true},{"content":"Compares this instance to a specified <xref href=\"System.Decimal\"></xref> object and returns a comparison of their relative values.","nodes":[{"pos":[0,131],"content":"Compares this instance to a specified <ph id=\"ph1\">&lt;xref href=\"System.Decimal\"&gt;&lt;/xref&gt;</ph> object and returns a comparison of their relative values.","source":"Compares this instance to a specified <xref href=\"System.Decimal\"></xref> object and returns a comparison of their relative values."}],"pos":[50665,50797],"yaml":true},{"content":"This method implements the <xref:System.IComparable%601?displayProperty=fullName> interface and performs slightly better than the <xref:System.Decimal.CompareTo%2A?displayProperty=fullName> method because it does not have to convert the `value` parameter to an object.  \n  \n Depending on your programming language, it might be possible to code a <xref:System.Decimal.CompareTo%2A> method where the parameter type has fewer bits (is narrower) than the instance type. This is possible because some programming languages perform an implicit widening conversion that represents the parameter as a type with as many bits as the instance.  \n  \n For example, suppose the instance type is <xref:System.Int32> and the parameter type is <xref:System.Byte>. The Microsoft C# compiler generates instructions to represent the parameter as an <xref:System.Int32> object, then generates a <xref:System.Int32.CompareTo%2A?displayProperty=fullName> method to compare the values of the <xref:System.Int32> instance and the <xref:System.Int32> parameter representation.  \n  \n Consult your programming language's documentation to determine whether its compiler performs implicit widening conversions on numeric types.","nodes":[{"pos":[0,268],"content":"This method implements the <ph id=\"ph1\">&lt;xref:System.IComparable%601?displayProperty=fullName&gt;</ph> interface and performs slightly better than the <ph id=\"ph2\">&lt;xref:System.Decimal.CompareTo%2A?displayProperty=fullName&gt;</ph> method because it does not have to convert the <ph id=\"ph3\">`value`</ph> parameter to an object.","source":"This method implements the <xref:System.IComparable%601?displayProperty=fullName> interface and performs slightly better than the <xref:System.Decimal.CompareTo%2A?displayProperty=fullName> method because it does not have to convert the `value` parameter to an object."},{"pos":[275,632],"content":"Depending on your programming language, it might be possible to code a <xref:System.Decimal.CompareTo%2A> method where the parameter type has fewer bits (is narrower) than the instance type. This is possible because some programming languages perform an implicit widening conversion that represents the parameter as a type with as many bits as the instance.","nodes":[{"content":"Depending on your programming language, it might be possible to code a <xref:System.Decimal.CompareTo%2A> method where the parameter type has fewer bits (is narrower) than the instance type. This is possible because some programming languages perform an implicit widening conversion that represents the parameter as a type with as many bits as the instance.","pos":[0,357],"nodes":[{"content":"Depending on your programming language, it might be possible to code a <ph id=\"ph1\">&lt;xref:System.Decimal.CompareTo%2A&gt;</ph> method where the parameter type has fewer bits (is narrower) than the instance type.","pos":[0,190],"source":"Depending on your programming language, it might be possible to code a <xref:System.Decimal.CompareTo%2A> method where the parameter type has fewer bits (is narrower) than the instance type."},{"content":"This is possible because some programming languages perform an implicit widening conversion that represents the parameter as a type with as many bits as the instance.","pos":[191,357]}]}]},{"pos":[639,1050],"content":"For example, suppose the instance type is <xref:System.Int32> and the parameter type is <xref:System.Byte>. The Microsoft C# compiler generates instructions to represent the parameter as an <xref:System.Int32> object, then generates a <xref:System.Int32.CompareTo%2A?displayProperty=fullName> method to compare the values of the <xref:System.Int32> instance and the <xref:System.Int32> parameter representation.","nodes":[{"content":"For example, suppose the instance type is <xref:System.Int32> and the parameter type is <xref:System.Byte>. The Microsoft C# compiler generates instructions to represent the parameter as an <xref:System.Int32> object, then generates a <xref:System.Int32.CompareTo%2A?displayProperty=fullName> method to compare the values of the <xref:System.Int32> instance and the <xref:System.Int32> parameter representation.","pos":[0,411],"nodes":[{"content":"For example, suppose the instance type is <ph id=\"ph1\">&lt;xref:System.Int32&gt;</ph> and the parameter type is <ph id=\"ph2\">&lt;xref:System.Byte&gt;</ph>.","pos":[0,107],"source":"For example, suppose the instance type is <xref:System.Int32> and the parameter type is <xref:System.Byte>."},{"content":"The Microsoft C# compiler generates instructions to represent the parameter as an <ph id=\"ph1\">&lt;xref:System.Int32&gt;</ph> object, then generates a <ph id=\"ph2\">&lt;xref:System.Int32.CompareTo%2A?displayProperty=fullName&gt;</ph> method to compare the values of the <ph id=\"ph3\">&lt;xref:System.Int32&gt;</ph> instance and the <ph id=\"ph4\">&lt;xref:System.Int32&gt;</ph> parameter representation.","pos":[108,411],"source":" The Microsoft C# compiler generates instructions to represent the parameter as an <xref:System.Int32> object, then generates a <xref:System.Int32.CompareTo%2A?displayProperty=fullName> method to compare the values of the <xref:System.Int32> instance and the <xref:System.Int32> parameter representation."}]}]},{"pos":[1057,1197],"content":"Consult your programming language's documentation to determine whether its compiler performs implicit widening conversions on numeric types.","nodes":[{"content":"Consult your programming language's documentation to determine whether its compiler performs implicit widening conversions on numeric types.","pos":[0,140]}]}],"pos":[50808,52014],"yaml":true,"extradata":"MT"},{"content":"The object to compare with this instance.","nodes":[{"pos":[0,41],"content":"The object to compare with this instance.","nodes":[{"content":"The object to compare with this instance.","pos":[0,41]}]}],"pos":[52630,52672],"yaml":true},{"content":"A signed number indicating the relative values of this instance and <code>value</code>.  \n  \n <table><thead><tr><th> Return value  \n  \n </th><th> Meaning  \n  \n </th></tr></thead><tbody><tr><td> Less than zero  \n  \n </td><td> This instance is less than <code>value</code>.  \n  \n </td></tr><tr><td> Zero  \n  \n </td><td> This instance is equal to <code>value</code>.  \n  \n </td></tr><tr><td> Greater than zero  \n  \n </td><td> This instance is greater than <code>value</code>.  \n  \n </td></tr></tbody></table>","nodes":[{"pos":[0,87],"content":"A signed number indicating the relative values of this instance and <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">value</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"A signed number indicating the relative values of this instance and <code>value</code>."},{"pos":[94,506],"content":"<table><thead><tr><th> Return value  \n  \n </th><th> Meaning  \n  \n </th></tr></thead><tbody><tr><td> Less than zero  \n  \n </td><td> This instance is less than <code>value</code>.  \n  \n </td></tr><tr><td> Zero  \n  \n </td><td> This instance is equal to <code>value</code>.  \n  \n </td></tr><tr><td> Greater than zero  \n  \n </td><td> This instance is greater than <code>value</code>.  \n  \n </td></tr></tbody></table>","nodes":[{"content":"Return value","pos":[23,40],"source":" Return value  \n  \n "},{"content":"Meaning","pos":[52,64],"source":" Meaning  \n  \n "},{"content":"Less than zero","pos":[100,119],"source":" Less than zero  \n  \n "},{"content":" This instance is less than <code>value</code>.  \n  \n ","pos":[130,184],"nodes":[{"content":"This instance is less than <ph id=\"ph1\">&lt;code&gt;value&lt;/code&gt;</ph>.","pos":[1,47],"source":" This instance is less than <code>value</code>."}]},{"content":"Zero","pos":[203,212],"source":" Zero  \n  \n "},{"content":" This instance is equal to <code>value</code>.  \n  \n ","pos":[223,276],"nodes":[{"content":"This instance is equal to <ph id=\"ph1\">&lt;code&gt;value&lt;/code&gt;</ph>.","pos":[1,46],"source":" This instance is equal to <code>value</code>."}]},{"content":"Greater than zero","pos":[295,317],"source":" Greater than zero  \n  \n "},{"content":" This instance is greater than <code>value</code>.  \n  \n ","pos":[328,385],"nodes":[{"content":"This instance is greater than <ph id=\"ph1\">&lt;code&gt;value&lt;/code&gt;</ph>.","pos":[1,50],"source":" This instance is greater than <code>value</code>."}]}]}],"pos":[52728,53254],"yaml":true},{"content":"Divides two specified <xref href=\"System.Decimal\"></xref> values.","nodes":[{"pos":[0,65],"content":"Divides two specified <ph id=\"ph1\">&lt;xref href=\"System.Decimal\"&gt;&lt;/xref&gt;</ph> values.","source":"Divides two specified <xref href=\"System.Decimal\"></xref> values."}],"pos":[54833,54899],"yaml":true},{"content":"The dividend.","nodes":[{"pos":[0,13],"content":"The dividend.","nodes":[{"content":"The dividend.","pos":[0,13]}]}],"pos":[55458,55472],"yaml":true},{"content":"The divisor.","nodes":[{"pos":[0,12],"content":"The divisor.","nodes":[{"content":"The divisor.","pos":[0,12]}]}],"pos":[55531,55544],"yaml":true},{"content":"The result of dividing <code>d1</code> by <code>d2</code>.","nodes":[{"pos":[0,58],"content":"The result of dividing <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">d1</ph><ept id=\"p1\">&lt;/code&gt;</ept> by <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">d2</ph><ept id=\"p2\">&lt;/code&gt;</ept>.","source":"The result of dividing <code>d1</code> by <code>d2</code>."}],"pos":[55602,55661],"yaml":true},{"content":"<code>d2</code> is zero.","nodes":[{"pos":[0,24],"content":"<ph id=\"ph1\">&lt;code&gt;d2&lt;/code&gt;</ph> is zero.","source":"<code>d2</code> is zero."}],"pos":[55812,55837],"yaml":true},{"content":"The return value (that is, the quotient) is less than <xref href=\"System.Decimal.MinValue\"></xref> or greater than <xref href=\"System.Decimal.MaxValue\"></xref>.","nodes":[{"pos":[0,160],"content":"The return value (that is, the quotient) is less than <ph id=\"ph1\">&lt;xref href=\"System.Decimal.MinValue\"&gt;&lt;/xref&gt;</ph> or greater than <ph id=\"ph2\">&lt;xref href=\"System.Decimal.MaxValue\"&gt;&lt;/xref&gt;</ph>.","source":"The return value (that is, the quotient) is less than <xref href=\"System.Decimal.MinValue\"></xref> or greater than <xref href=\"System.Decimal.MaxValue\"></xref>."}],"pos":[55931,56092],"yaml":true},{"content":"Returns a value indicating whether this instance and a specified <xref href=\"System.Decimal\"></xref> object represent the same value.","nodes":[{"pos":[0,133],"content":"Returns a value indicating whether this instance and a specified <ph id=\"ph1\">&lt;xref href=\"System.Decimal\"&gt;&lt;/xref&gt;</ph> object represent the same value.","source":"Returns a value indicating whether this instance and a specified <xref href=\"System.Decimal\"></xref> object represent the same value."}],"pos":[57544,57678],"yaml":true},{"content":"This method implements the <xref:System.IEquatable%601?displayProperty=fullName> interface, and performs slightly better than <xref:System.Decimal.Equals%2A> because it does not have to convert the `value` parameter to an object.  \n  \n If `value` has fewer bits (is narrower) than the instance type, some programming languages perform an implicit widening conversion that transforms the value of the parameter into a value with more bits.  \n  \n For example, suppose the instance type is <xref:System.Int32> and the parameter type is <xref:System.Byte>. The Microsoft C# compiler generates instructions to represent the value of the parameter as an <xref:System.Int32> object, then generates a <xref:System.Int32.CompareTo%2A?displayProperty=fullName> method to compare the <xref:System.Int32> instance and parameter representation.  \n  \n Consult your programming language's documentation to determine whether its compiler performs implicit widening conversions on numeric types.","nodes":[{"pos":[0,229],"content":"This method implements the <ph id=\"ph1\">&lt;xref:System.IEquatable%601?displayProperty=fullName&gt;</ph> interface, and performs slightly better than <ph id=\"ph2\">&lt;xref:System.Decimal.Equals%2A&gt;</ph> because it does not have to convert the <ph id=\"ph3\">`value`</ph> parameter to an object.","source":"This method implements the <xref:System.IEquatable%601?displayProperty=fullName> interface, and performs slightly better than <xref:System.Decimal.Equals%2A> because it does not have to convert the `value` parameter to an object."},{"pos":[236,438],"content":"If <ph id=\"ph1\">`value`</ph> has fewer bits (is narrower) than the instance type, some programming languages perform an implicit widening conversion that transforms the value of the parameter into a value with more bits.","source":"If `value` has fewer bits (is narrower) than the instance type, some programming languages perform an implicit widening conversion that transforms the value of the parameter into a value with more bits."},{"pos":[445,831],"content":"For example, suppose the instance type is <xref:System.Int32> and the parameter type is <xref:System.Byte>. The Microsoft C# compiler generates instructions to represent the value of the parameter as an <xref:System.Int32> object, then generates a <xref:System.Int32.CompareTo%2A?displayProperty=fullName> method to compare the <xref:System.Int32> instance and parameter representation.","nodes":[{"content":"For example, suppose the instance type is <xref:System.Int32> and the parameter type is <xref:System.Byte>. The Microsoft C# compiler generates instructions to represent the value of the parameter as an <xref:System.Int32> object, then generates a <xref:System.Int32.CompareTo%2A?displayProperty=fullName> method to compare the <xref:System.Int32> instance and parameter representation.","pos":[0,386],"nodes":[{"content":"For example, suppose the instance type is <ph id=\"ph1\">&lt;xref:System.Int32&gt;</ph> and the parameter type is <ph id=\"ph2\">&lt;xref:System.Byte&gt;</ph>.","pos":[0,107],"source":"For example, suppose the instance type is <xref:System.Int32> and the parameter type is <xref:System.Byte>."},{"content":"The Microsoft C# compiler generates instructions to represent the value of the parameter as an <ph id=\"ph1\">&lt;xref:System.Int32&gt;</ph> object, then generates a <ph id=\"ph2\">&lt;xref:System.Int32.CompareTo%2A?displayProperty=fullName&gt;</ph> method to compare the <ph id=\"ph3\">&lt;xref:System.Int32&gt;</ph> instance and parameter representation.","pos":[108,386],"source":" The Microsoft C# compiler generates instructions to represent the value of the parameter as an <xref:System.Int32> object, then generates a <xref:System.Int32.CompareTo%2A?displayProperty=fullName> method to compare the <xref:System.Int32> instance and parameter representation."}]}]},{"pos":[838,978],"content":"Consult your programming language's documentation to determine whether its compiler performs implicit widening conversions on numeric types.","nodes":[{"content":"Consult your programming language's documentation to determine whether its compiler performs implicit widening conversions on numeric types.","pos":[0,140]}]}],"pos":[57689,58676],"yaml":true,"extradata":"MT"},{"content":"An object to compare to this instance.","nodes":[{"pos":[0,38],"content":"An object to compare to this instance.","nodes":[{"content":"An object to compare to this instance.","pos":[0,38]}]}],"pos":[58813,58852],"yaml":true},{"content":"`true` if <code>value</code> is equal to this instance; otherwise, `false`.","nodes":[{"pos":[0,75],"content":"<ph id=\"ph1\">`true`</ph> if <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">value</ph><ept id=\"p1\">&lt;/code&gt;</ept> is equal to this instance; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` if <code>value</code> is equal to this instance; otherwise, `false`."}],"pos":[58910,58988],"yaml":true},{"content":"Returns a value indicating whether this instance and a specified <xref href=\"System.Object\"></xref> represent the same type and value.","nodes":[{"pos":[0,134],"content":"Returns a value indicating whether this instance and a specified <ph id=\"ph1\">&lt;xref href=\"System.Object\"&gt;&lt;/xref&gt;</ph> represent the same type and value.","source":"Returns a value indicating whether this instance and a specified <xref href=\"System.Object\"></xref> represent the same type and value."}],"pos":[60486,60621],"yaml":true},{"content":"The object to compare with this instance.","nodes":[{"pos":[0,41],"content":"The object to compare with this instance.","nodes":[{"content":"The object to compare with this instance.","pos":[0,41]}]}],"pos":[61376,61418],"yaml":true},{"content":"`true` if <code>value</code> is a <xref href=\"System.Decimal\"></xref> and equal to this instance; otherwise, `false`.","nodes":[{"pos":[0,117],"content":"<ph id=\"ph1\">`true`</ph> if <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">value</ph><ept id=\"p1\">&lt;/code&gt;</ept> is a <ph id=\"ph3\">&lt;xref href=\"System.Decimal\"&gt;&lt;/xref&gt;</ph> and equal to this instance; otherwise, <ph id=\"ph4\">`false`</ph>.","source":"`true` if <code>value</code> is a <xref href=\"System.Decimal\"></xref> and equal to this instance; otherwise, `false`."}],"pos":[61476,61596],"yaml":true},{"content":"Returns a value indicating whether two specified instances of <xref href=\"System.Decimal\"></xref> represent the same value.","nodes":[{"pos":[0,123],"content":"Returns a value indicating whether two specified instances of <ph id=\"ph1\">&lt;xref href=\"System.Decimal\"&gt;&lt;/xref&gt;</ph> represent the same value.","source":"Returns a value indicating whether two specified instances of <xref href=\"System.Decimal\"></xref> represent the same value."}],"pos":[63172,63296],"yaml":true},{"content":"The first value to compare.","nodes":[{"pos":[0,27],"content":"The first value to compare.","nodes":[{"content":"The first value to compare.","pos":[0,27]}]}],"pos":[64053,64081],"yaml":true},{"content":"The second value to compare.","nodes":[{"pos":[0,28],"content":"The second value to compare.","nodes":[{"content":"The second value to compare.","pos":[0,28]}]}],"pos":[64140,64169],"yaml":true},{"content":"`true` if <code>d1</code> and <code>d2</code> are equal; otherwise, `false`.","nodes":[{"pos":[0,76],"content":"<ph id=\"ph1\">`true`</ph> if <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">d1</ph><ept id=\"p1\">&lt;/code&gt;</ept> and <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph3\">d2</ph><ept id=\"p2\">&lt;/code&gt;</ept> are equal; otherwise, <ph id=\"ph4\">`false`</ph>.","source":"`true` if <code>d1</code> and <code>d2</code> are equal; otherwise, `false`."}],"pos":[64227,64306],"yaml":true},{"content":"Rounds a specified <xref href=\"System.Decimal\"></xref> number to the closest integer toward negative infinity.","nodes":[{"pos":[0,110],"content":"Rounds a specified <ph id=\"ph1\">&lt;xref href=\"System.Decimal\"&gt;&lt;/xref&gt;</ph> number to the closest integer toward negative infinity.","source":"Rounds a specified <xref href=\"System.Decimal\"></xref> number to the closest integer toward negative infinity."}],"pos":[65804,65915],"yaml":true},{"content":"The behavior of this method follows IEEE Standard 754, Section 4. This kind of rounding is sometimes called rounding toward negative infinity. In other words, if `d` is positive, any fractional component is truncated. If `d` is negative, the presence of any fractional component causes it to be rounded to the smaller integer. The operation of this method differs from the <xref:System.Decimal.Ceiling%2A> method, which supports rounding toward positive infinity.","nodes":[{"pos":[0,463],"content":"The behavior of this method follows IEEE Standard 754, Section 4. This kind of rounding is sometimes called rounding toward negative infinity. In other words, if `d` is positive, any fractional component is truncated. If `d` is negative, the presence of any fractional component causes it to be rounded to the smaller integer. The operation of this method differs from the <xref:System.Decimal.Ceiling%2A> method, which supports rounding toward positive infinity.","nodes":[{"content":"The behavior of this method follows IEEE Standard 754, Section 4.","pos":[0,65]},{"content":"This kind of rounding is sometimes called rounding toward negative infinity.","pos":[66,142]},{"content":"In other words, if <ph id=\"ph1\">`d`</ph> is positive, any fractional component is truncated.","pos":[143,217],"source":" In other words, if `d` is positive, any fractional component is truncated."},{"content":"If <ph id=\"ph1\">`d`</ph> is negative, the presence of any fractional component causes it to be rounded to the smaller integer.","pos":[218,326],"source":" If `d` is negative, the presence of any fractional component causes it to be rounded to the smaller integer."},{"content":"The operation of this method differs from the <ph id=\"ph1\">&lt;xref:System.Decimal.Ceiling%2A&gt;</ph> method, which supports rounding toward positive infinity.","pos":[327,463],"source":" The operation of this method differs from the <xref:System.Decimal.Ceiling%2A> method, which supports rounding toward positive infinity."}]}],"pos":[65926,66390],"yaml":true,"extradata":"MT"},{"content":"The value to round.","nodes":[{"pos":[0,19],"content":"The value to round.","nodes":[{"content":"The value to round.","pos":[0,19]}]}],"pos":[66961,66981],"yaml":true},{"content":"If <code>d</code> has a fractional part, the next whole <xref href=\"System.Decimal\"></xref> number toward negative infinity that is less than <code>d</code>.  \n  \n -or-  \n  \n If <code>d</code> doesn't have a fractional part, <code>d</code> is returned unchanged. Note that the method returns an integral value of type <xref href=\"System.Decimal\"></xref>.","nodes":[{"pos":[0,157],"content":"If <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">d</ph><ept id=\"p1\">&lt;/code&gt;</ept> has a fractional part, the next whole <ph id=\"ph2\">&lt;xref href=\"System.Decimal\"&gt;&lt;/xref&gt;</ph> number toward negative infinity that is less than <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph3\">d</ph><ept id=\"p2\">&lt;/code&gt;</ept>.","source":"If <code>d</code> has a fractional part, the next whole <xref href=\"System.Decimal\"></xref> number toward negative infinity that is less than <code>d</code>."},{"pos":[164,168],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[175,354],"content":"If <code>d</code> doesn't have a fractional part, <code>d</code> is returned unchanged. Note that the method returns an integral value of type <xref href=\"System.Decimal\"></xref>.","nodes":[{"content":"If <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">d</ph><ept id=\"p1\">&lt;/code&gt;</ept> doesn't have a fractional part, <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">d</ph><ept id=\"p2\">&lt;/code&gt;</ept> is returned unchanged.","pos":[0,87],"source":"If <code>d</code> doesn't have a fractional part, <code>d</code> is returned unchanged."},{"content":"Note that the method returns an integral value of type <ph id=\"ph1\">&lt;xref href=\"System.Decimal\"&gt;&lt;/xref&gt;</ph>.","pos":[88,179],"source":" Note that the method returns an integral value of type <xref href=\"System.Decimal\"></xref>."}]}],"pos":[67039,67404],"yaml":true},{"content":"Converts the specified 64-bit signed integer, which contains an OLE Automation Currency value, to the equivalent <xref href=\"System.Decimal\"></xref> value.","nodes":[{"pos":[0,155],"content":"Converts the specified 64-bit signed integer, which contains an OLE Automation Currency value, to the equivalent <ph id=\"ph1\">&lt;xref href=\"System.Decimal\"&gt;&lt;/xref&gt;</ph> value.","source":"Converts the specified 64-bit signed integer, which contains an OLE Automation Currency value, to the equivalent <xref href=\"System.Decimal\"></xref> value."}],"pos":[68943,69099],"yaml":true},{"content":"An OLE Automation Currency value.","nodes":[{"pos":[0,33],"content":"An OLE Automation Currency value.","nodes":[{"content":"An OLE Automation Currency value.","pos":[0,33]}]}],"pos":[69891,69925],"yaml":true},{"content":"A <xref href=\"System.Decimal\"></xref> that contains the equivalent of <code>cy</code>.","nodes":[{"pos":[0,86],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Decimal\"&gt;&lt;/xref&gt;</ph> that contains the equivalent of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">cy</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"A <xref href=\"System.Decimal\"></xref> that contains the equivalent of <code>cy</code>."}],"pos":[69983,70070],"yaml":true},{"content":"Converts the value of a specified instance of <xref href=\"System.Decimal\"></xref> to its equivalent binary representation.","nodes":[{"pos":[0,122],"content":"Converts the value of a specified instance of <ph id=\"ph1\">&lt;xref href=\"System.Decimal\"&gt;&lt;/xref&gt;</ph> to its equivalent binary representation.","source":"Converts the value of a specified instance of <xref href=\"System.Decimal\"></xref> to its equivalent binary representation."}],"pos":[71227,71350],"yaml":true},{"content":"The binary representation of a <xref:System.Decimal> number consists of a 1-bit sign, a 96-bit integer number, and a scaling factor used to divide the integer number and specify what portion of it is a decimal fraction. The scaling factor is implicitly the number 10, raised to an exponent ranging from 0 to 28.  \n  \n The return value is a four-element array of 32-bit signed integers.  \n  \n The first, second, and third elements of the returned array contain the low, middle, and high 32 bits of the 96-bit integer number.  \n  \n The fourth element of the returned array contains the scale factor and sign. It consists of the following parts:  \n  \n Bits 0 to 15, the lower word, are unused and must be zero.  \n  \n Bits 16 to 23 must contain an exponent between 0 and 28, which indicates the power of 10 to divide the integer number.  \n  \n Bits 24 to 30 are unused and must be zero.  \n  \n Bit 31 contains the sign: 0 mean positive, and 1 means negative.  \n  \n Note that the bit representation differentiates between negative and positive zero. These values are treated as being equal in all operations.","nodes":[{"pos":[0,311],"content":"The binary representation of a <xref:System.Decimal> number consists of a 1-bit sign, a 96-bit integer number, and a scaling factor used to divide the integer number and specify what portion of it is a decimal fraction. The scaling factor is implicitly the number 10, raised to an exponent ranging from 0 to 28.","nodes":[{"content":"The binary representation of a <xref:System.Decimal> number consists of a 1-bit sign, a 96-bit integer number, and a scaling factor used to divide the integer number and specify what portion of it is a decimal fraction. The scaling factor is implicitly the number 10, raised to an exponent ranging from 0 to 28.","pos":[0,311],"nodes":[{"content":"The binary representation of a <ph id=\"ph1\">&lt;xref:System.Decimal&gt;</ph> number consists of a 1-bit sign, a 96-bit integer number, and a scaling factor used to divide the integer number and specify what portion of it is a decimal fraction.","pos":[0,219],"source":"The binary representation of a <xref:System.Decimal> number consists of a 1-bit sign, a 96-bit integer number, and a scaling factor used to divide the integer number and specify what portion of it is a decimal fraction."},{"content":"The scaling factor is implicitly the number 10, raised to an exponent ranging from 0 to 28.","pos":[220,311]}]}]},{"pos":[318,385],"content":"The return value is a four-element array of 32-bit signed integers.","nodes":[{"content":"The return value is a four-element array of 32-bit signed integers.","pos":[0,67]}]},{"pos":[392,523],"content":"The first, second, and third elements of the returned array contain the low, middle, and high 32 bits of the 96-bit integer number.","nodes":[{"content":"The first, second, and third elements of the returned array contain the low, middle, and high 32 bits of the 96-bit integer number.","pos":[0,131]}]},{"pos":[530,642],"content":"The fourth element of the returned array contains the scale factor and sign. It consists of the following parts:","nodes":[{"content":"The fourth element of the returned array contains the scale factor and sign. It consists of the following parts:","pos":[0,112],"nodes":[{"content":"The fourth element of the returned array contains the scale factor and sign.","pos":[0,76]},{"content":"It consists of the following parts:","pos":[77,112]}]}]},{"pos":[649,707],"content":"Bits 0 to 15, the lower word, are unused and must be zero.","nodes":[{"content":"Bits 0 to 15, the lower word, are unused and must be zero.","pos":[0,58]}]},{"pos":[714,832],"content":"Bits 16 to 23 must contain an exponent between 0 and 28, which indicates the power of 10 to divide the integer number.","nodes":[{"content":"Bits 16 to 23 must contain an exponent between 0 and 28, which indicates the power of 10 to divide the integer number.","pos":[0,118]}]},{"pos":[839,881],"content":"Bits 24 to 30 are unused and must be zero.","nodes":[{"content":"Bits 24 to 30 are unused and must be zero.","pos":[0,42]}]},{"pos":[888,952],"content":"Bit 31 contains the sign: 0 mean positive, and 1 means negative.","nodes":[{"content":"Bit 31 contains the sign: 0 mean positive, and 1 means negative.","pos":[0,64]}]},{"pos":[959,1101],"content":"Note that the bit representation differentiates between negative and positive zero. These values are treated as being equal in all operations.","nodes":[{"content":"Note that the bit representation differentiates between negative and positive zero. These values are treated as being equal in all operations.","pos":[0,142],"nodes":[{"content":"Note that the bit representation differentiates between negative and positive zero.","pos":[0,83]},{"content":"These values are treated as being equal in all operations.","pos":[84,142]}]}]}],"pos":[71361,72481],"yaml":true,"extradata":"MT"},{"content":"The value to convert.","nodes":[{"pos":[0,21],"content":"The value to convert.","nodes":[{"content":"The value to convert.","pos":[0,21]}]}],"pos":[73972,73994],"yaml":true},{"content":"A 32-bit signed integer array with four elements that contain the binary representation of <code>d</code>.","nodes":[{"pos":[0,106],"content":"A 32-bit signed integer array with four elements that contain the binary representation of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">d</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"A 32-bit signed integer array with four elements that contain the binary representation of <code>d</code>."}],"pos":[74052,74159],"yaml":true},{"content":"Returns the hash code for this instance.","nodes":[{"pos":[0,40],"content":"Returns the hash code for this instance.","nodes":[{"content":"Returns the hash code for this instance.","pos":[0,40]}]}],"pos":[75608,75649],"yaml":true},{"content":"A 32-bit signed integer hash code.","nodes":[{"pos":[0,34],"content":"A 32-bit signed integer hash code.","nodes":[{"content":"A 32-bit signed integer hash code.","pos":[0,34]}]}],"pos":[75783,75818],"yaml":true},{"content":"Returns the <xref href=\"System.TypeCode\"></xref> for value type <xref href=\"System.Decimal\"></xref>.","nodes":[{"pos":[0,100],"content":"Returns the <ph id=\"ph1\">&lt;xref href=\"System.TypeCode\"&gt;&lt;/xref&gt;</ph> for value type <ph id=\"ph2\">&lt;xref href=\"System.Decimal\"&gt;&lt;/xref&gt;</ph>.","source":"Returns the <xref href=\"System.TypeCode\"></xref> for value type <xref href=\"System.Decimal\"></xref>."}],"pos":[77288,77389],"yaml":true},{"content":"The enumerated constant <xref href=\"System.TypeCode.Decimal\"></xref>.","nodes":[{"pos":[0,69],"content":"The enumerated constant <ph id=\"ph1\">&lt;xref href=\"System.TypeCode.Decimal\"&gt;&lt;/xref&gt;</ph>.","source":"The enumerated constant <xref href=\"System.TypeCode.Decimal\"></xref>."}],"pos":[78137,78207],"yaml":true},{"content":"Represents the largest possible value of <xref href=\"System.Decimal\"></xref>. This field is constant and read-only.","nodes":[{"pos":[0,115],"content":"Represents the largest possible value of <xref href=\"System.Decimal\"></xref>. This field is constant and read-only.","nodes":[{"content":"Represents the largest possible value of <ph id=\"ph1\">&lt;xref href=\"System.Decimal\"&gt;&lt;/xref&gt;</ph>.","pos":[0,77],"source":"Represents the largest possible value of <xref href=\"System.Decimal\"></xref>."},{"content":"This field is constant and read-only.","pos":[78,115]}]}],"pos":[79291,79407],"yaml":true},{"content":"The value of this constant is positive 79,228,162,514,264,337,593,543,950,335.","nodes":[{"pos":[0,78],"content":"The value of this constant is positive 79,228,162,514,264,337,593,543,950,335.","nodes":[{"content":"The value of this constant is positive 79,228,162,514,264,337,593,543,950,335.","pos":[0,78]}]}],"pos":[79418,79497],"yaml":true,"extradata":"MT"},{"content":"Represents the number negative one (-1).","nodes":[{"pos":[0,40],"content":"Represents the number negative one (-1).","nodes":[{"content":"Represents the number negative one (-1).","pos":[0,40]}]}],"pos":[81422,81463],"yaml":true},{"content":"Represents the smallest possible value of <xref href=\"System.Decimal\"></xref>. This field is constant and read-only.","nodes":[{"pos":[0,116],"content":"Represents the smallest possible value of <xref href=\"System.Decimal\"></xref>. This field is constant and read-only.","nodes":[{"content":"Represents the smallest possible value of <ph id=\"ph1\">&lt;xref href=\"System.Decimal\"&gt;&lt;/xref&gt;</ph>.","pos":[0,78],"source":"Represents the smallest possible value of <xref href=\"System.Decimal\"></xref>."},{"content":"This field is constant and read-only.","pos":[79,116]}]}],"pos":[83469,83586],"yaml":true},{"content":"The value of this constant is negative 79,228,162,514,264,337,593,543,950,335.","nodes":[{"pos":[0,78],"content":"The value of this constant is negative 79,228,162,514,264,337,593,543,950,335.","nodes":[{"content":"The value of this constant is negative 79,228,162,514,264,337,593,543,950,335.","pos":[0,78]}]}],"pos":[83597,83676],"yaml":true,"extradata":"MT"},{"content":"Multiplies two specified <xref href=\"System.Decimal\"></xref> values.","nodes":[{"pos":[0,68],"content":"Multiplies two specified <ph id=\"ph1\">&lt;xref href=\"System.Decimal\"&gt;&lt;/xref&gt;</ph> values.","source":"Multiplies two specified <xref href=\"System.Decimal\"></xref> values."}],"pos":[85816,85885],"yaml":true},{"content":"The multiplicand.","nodes":[{"pos":[0,17],"content":"The multiplicand.","nodes":[{"content":"The multiplicand.","pos":[0,17]}]}],"pos":[86633,86651],"yaml":true},{"content":"The multiplier.","nodes":[{"pos":[0,15],"content":"The multiplier.","nodes":[{"content":"The multiplier.","pos":[0,15]}]}],"pos":[86710,86726],"yaml":true},{"content":"The result of multiplying <code>d1</code> and <code>d2</code>.","nodes":[{"pos":[0,62],"content":"The result of multiplying <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">d1</ph><ept id=\"p1\">&lt;/code&gt;</ept> and <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">d2</ph><ept id=\"p2\">&lt;/code&gt;</ept>.","source":"The result of multiplying <code>d1</code> and <code>d2</code>."}],"pos":[86784,86847],"yaml":true},{"content":"The return value is less than <xref href=\"System.Decimal.MinValue\"></xref> or greater than <xref href=\"System.Decimal.MaxValue\"></xref>.","nodes":[{"pos":[0,136],"content":"The return value is less than <ph id=\"ph1\">&lt;xref href=\"System.Decimal.MinValue\"&gt;&lt;/xref&gt;</ph> or greater than <ph id=\"ph2\">&lt;xref href=\"System.Decimal.MaxValue\"&gt;&lt;/xref&gt;</ph>.","source":"The return value is less than <xref href=\"System.Decimal.MinValue\"></xref> or greater than <xref href=\"System.Decimal.MaxValue\"></xref>."}],"pos":[86992,87129],"yaml":true},{"content":"Returns the result of multiplying the specified <xref href=\"System.Decimal\"></xref> value by negative one.","nodes":[{"pos":[0,106],"content":"Returns the result of multiplying the specified <ph id=\"ph1\">&lt;xref href=\"System.Decimal\"&gt;&lt;/xref&gt;</ph> value by negative one.","source":"Returns the result of multiplying the specified <xref href=\"System.Decimal\"></xref> value by negative one."}],"pos":[88581,88688],"yaml":true},{"content":"The value to negate.","nodes":[{"pos":[0,20],"content":"The value to negate.","nodes":[{"content":"The value to negate.","pos":[0,20]}]}],"pos":[89435,89456],"yaml":true},{"content":"A decimal number with the value of <code>d</code>, but the opposite sign.  \n  \n -or-  \n  \n Zero, if <code>d</code> is zero.","nodes":[{"pos":[0,73],"content":"A decimal number with the value of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">d</ph><ept id=\"p1\">&lt;/code&gt;</ept>, but the opposite sign.","source":"A decimal number with the value of <code>d</code>, but the opposite sign."},{"pos":[80,84],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[91,123],"content":"Zero, if <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">d</ph><ept id=\"p1\">&lt;/code&gt;</ept> is zero.","source":"Zero, if <code>d</code> is zero."}],"pos":[89514,89644],"yaml":true},{"content":"Represents the number one (1).","nodes":[{"pos":[0,30],"content":"Represents the number one (1).","nodes":[{"content":"Represents the number one (1).","pos":[0,30]}]}],"pos":[91037,91068],"yaml":true},{"content":"Adds two specified <xref href=\"System.Decimal\"></xref> values.","nodes":[{"pos":[0,62],"content":"Adds two specified <ph id=\"ph1\">&lt;xref href=\"System.Decimal\"&gt;&lt;/xref&gt;</ph> values.","source":"Adds two specified <xref href=\"System.Decimal\"></xref> values."}],"pos":[93232,93295],"yaml":true},{"content":"The <xref:System.Decimal.op_Addition%2A> method defines the operation of the addition operator for <xref:System.Decimal> values. It enables code such as the following:  \n  \n [!code-csharp[System.Decimal.Operators#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.decimal.operators/cs/addition1.cs#3)]\n [!code-vb[System.Decimal.Operators#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.operators/vb/addition1.vb#3)]  \n  \n If the language you're using doesn't support custom operators, call the <xref:System.Decimal.Add%2A> method instead.  \n  \n The equivalent method for this operator is <xref:System.Decimal.Add%28System.Decimal%2CSystem.Decimal%29?displayProperty=fullName>","nodes":[{"pos":[0,167],"content":"The <xref:System.Decimal.op_Addition%2A> method defines the operation of the addition operator for <xref:System.Decimal> values. It enables code such as the following:","nodes":[{"content":"The <xref:System.Decimal.op_Addition%2A> method defines the operation of the addition operator for <xref:System.Decimal> values. It enables code such as the following:","pos":[0,167],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Decimal.op_Addition%2A&gt;</ph> method defines the operation of the addition operator for <ph id=\"ph2\">&lt;xref:System.Decimal&gt;</ph> values.","pos":[0,128],"source":"The <xref:System.Decimal.op_Addition%2A> method defines the operation of the addition operator for <xref:System.Decimal> values."},{"content":"It enables code such as the following:","pos":[129,167]}]}]},{"pos":[174,447],"content":"<bpt id=\"p1\">[!code-csharp</bpt><bpt id=\"p2\">[</bpt>System.Decimal.Operators#3<ept id=\"p2\">](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.decimal.operators/cs/addition1.cs#3)</ept><ept id=\"p1\">]</ept> <bpt id=\"p3\">[!code-vb</bpt><bpt id=\"p4\">[</bpt>System.Decimal.Operators#3<ept id=\"p4\">](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.operators/vb/addition1.vb#3)</ept><ept id=\"p3\">]</ept>","source":"[!code-csharp[System.Decimal.Operators#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.decimal.operators/cs/addition1.cs#3)]\n [!code-vb[System.Decimal.Operators#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.operators/vb/addition1.vb#3)]"},{"pos":[454,570],"content":"If the language you're using doesn't support custom operators, call the <xref:System.Decimal.Add%2A> method instead.","nodes":[{"content":"If the language you're using doesn't support custom operators, call the <ph id=\"ph1\">&lt;xref:System.Decimal.Add%2A&gt;</ph> method instead.","pos":[0,116],"source":"If the language you're using doesn't support custom operators, call the <xref:System.Decimal.Add%2A> method instead."}]},{"pos":[577,707],"content":"The equivalent method for this operator is <xref:System.Decimal.Add%28System.Decimal%2CSystem.Decimal%29?displayProperty=fullName>","nodes":[{"content":"The equivalent method for this operator is <ph id=\"ph1\">&lt;xref:System.Decimal.Add%28System.Decimal%2CSystem.Decimal%29?displayProperty=fullName&gt;</ph>","pos":[0,130],"source":"The equivalent method for this operator is <xref:System.Decimal.Add%28System.Decimal%2CSystem.Decimal%29?displayProperty=fullName>"}]}],"pos":[93306,94023],"yaml":true,"extradata":"MT"},{"content":"The first value to add.","nodes":[{"pos":[0,23],"content":"The first value to add.","nodes":[{"content":"The first value to add.","pos":[0,23]}]}],"pos":[94181,94205],"yaml":true},{"content":"The second value to add.","nodes":[{"pos":[0,24],"content":"The second value to add.","nodes":[{"content":"The second value to add.","pos":[0,24]}]}],"pos":[94264,94289],"yaml":true},{"content":"The result of adding <code>d1</code> and <code>d2</code>.","nodes":[{"pos":[0,57],"content":"The result of adding <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">d1</ph><ept id=\"p1\">&lt;/code&gt;</ept> and <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">d2</ph><ept id=\"p2\">&lt;/code&gt;</ept>.","source":"The result of adding <code>d1</code> and <code>d2</code>."}],"pos":[94347,94405],"yaml":true},{"content":"The return value is less than <xref href=\"System.Decimal.MinValue\"></xref> or greater than <xref href=\"System.Decimal.MaxValue\"></xref>.","nodes":[{"pos":[0,136],"content":"The return value is less than <ph id=\"ph1\">&lt;xref href=\"System.Decimal.MinValue\"&gt;&lt;/xref&gt;</ph> or greater than <ph id=\"ph2\">&lt;xref href=\"System.Decimal.MaxValue\"&gt;&lt;/xref&gt;</ph>.","source":"The return value is less than <xref href=\"System.Decimal.MinValue\"></xref> or greater than <xref href=\"System.Decimal.MaxValue\"></xref>."}],"pos":[94553,94690],"yaml":true},{"content":"Decrements the <xref href=\"System.Decimal\"></xref> operand by one.","nodes":[{"pos":[0,66],"content":"Decrements the <ph id=\"ph1\">&lt;xref href=\"System.Decimal\"&gt;&lt;/xref&gt;</ph> operand by one.","source":"Decrements the <xref href=\"System.Decimal\"></xref> operand by one."}],"pos":[96180,96247],"yaml":true},{"content":"The <xref:System.Decimal.op_Decrement%2A> method defines the operation of the decrement operator for <xref:System.Decimal> values. It enables code such as the following:  \n  \n [!code-csharp[System.Decimal.Operators#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.decimal.operators/cs/decrement1.cs#4)]  \n  \n Some languages (such as Visual Basic) that lack an increment operator can call the <xref:System.Decimal.op_Decrement%2A> method directly, as the following example shows.  \n  \n [!code-vb[System.Decimal.Operators#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.operators/vb/decrement1.vb#5)]  \n  \n If your language does not support custom operators, call the <xref:System.Decimal.Subtract%2A> method instead, as the following example shows.  \n  \n [!code-csharp[System.Decimal.Operators#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.decimal.operators/cs/decrement2.cs#6)]\n [!code-vb[System.Decimal.Operators#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.operators/vb/decrement2.vb#6)]","nodes":[{"pos":[0,169],"content":"The <xref:System.Decimal.op_Decrement%2A> method defines the operation of the decrement operator for <xref:System.Decimal> values. It enables code such as the following:","nodes":[{"content":"The <xref:System.Decimal.op_Decrement%2A> method defines the operation of the decrement operator for <xref:System.Decimal> values. It enables code such as the following:","pos":[0,169],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Decimal.op_Decrement%2A&gt;</ph> method defines the operation of the decrement operator for <ph id=\"ph2\">&lt;xref:System.Decimal&gt;</ph> values.","pos":[0,130],"source":"The <xref:System.Decimal.op_Decrement%2A> method defines the operation of the decrement operator for <xref:System.Decimal> values."},{"content":"It enables code such as the following:","pos":[131,169]}]}]},{"pos":[176,312],"content":"<bpt id=\"p1\">[!code-csharp</bpt><bpt id=\"p2\">[</bpt>System.Decimal.Operators#4<ept id=\"p2\">](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.decimal.operators/cs/decrement1.cs#4)</ept><ept id=\"p1\">]</ept>","source":"[!code-csharp[System.Decimal.Operators#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.decimal.operators/cs/decrement1.cs#4)]"},{"pos":[319,488],"content":"Some languages (such as Visual Basic) that lack an increment operator can call the <xref:System.Decimal.op_Decrement%2A> method directly, as the following example shows.","nodes":[{"content":"Some languages (such as Visual Basic) that lack an increment operator can call the <ph id=\"ph1\">&lt;xref:System.Decimal.op_Decrement%2A&gt;</ph> method directly, as the following example shows.","pos":[0,169],"source":"Some languages (such as Visual Basic) that lack an increment operator can call the <xref:System.Decimal.op_Decrement%2A> method directly, as the following example shows."}]},{"pos":[495,632],"content":"<bpt id=\"p1\">[!code-vb</bpt><bpt id=\"p2\">[</bpt>System.Decimal.Operators#5<ept id=\"p2\">](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.operators/vb/decrement1.vb#5)</ept><ept id=\"p1\">]</ept>","source":"[!code-vb[System.Decimal.Operators#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.operators/vb/decrement1.vb#5)]"},{"pos":[639,781],"content":"If your language does not support custom operators, call the <xref:System.Decimal.Subtract%2A> method instead, as the following example shows.","nodes":[{"content":"If your language does not support custom operators, call the <ph id=\"ph1\">&lt;xref:System.Decimal.Subtract%2A&gt;</ph> method instead, as the following example shows.","pos":[0,142],"source":"If your language does not support custom operators, call the <xref:System.Decimal.Subtract%2A> method instead, as the following example shows."}]},{"pos":[788,1063],"content":"<bpt id=\"p1\">[!code-csharp</bpt><bpt id=\"p2\">[</bpt>System.Decimal.Operators#6<ept id=\"p2\">](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.decimal.operators/cs/decrement2.cs#6)</ept><ept id=\"p1\">]</ept> <bpt id=\"p3\">[!code-vb</bpt><bpt id=\"p4\">[</bpt>System.Decimal.Operators#6<ept id=\"p4\">](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.operators/vb/decrement2.vb#6)</ept><ept id=\"p3\">]</ept>","source":"[!code-csharp[System.Decimal.Operators#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.decimal.operators/cs/decrement2.cs#6)]\n [!code-vb[System.Decimal.Operators#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.operators/vb/decrement2.vb#6)]"}],"pos":[96258,97335],"yaml":true,"extradata":"MT"},{"content":"The value to decrement.","nodes":[{"pos":[0,23],"content":"The value to decrement.","nodes":[{"content":"The value to decrement.","pos":[0,23]}]}],"pos":[97480,97504],"yaml":true},{"content":"The value of <code>d</code> decremented by 1.","nodes":[{"pos":[0,45],"content":"The value of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">d</ph><ept id=\"p1\">&lt;/code&gt;</ept> decremented by 1.","source":"The value of <code>d</code> decremented by 1."}],"pos":[97562,97608],"yaml":true},{"content":"The return value is less than <xref href=\"System.Decimal.MinValue\"></xref> or greater than <xref href=\"System.Decimal.MaxValue\"></xref>.","nodes":[{"pos":[0,136],"content":"The return value is less than <ph id=\"ph1\">&lt;xref href=\"System.Decimal.MinValue\"&gt;&lt;/xref&gt;</ph> or greater than <ph id=\"ph2\">&lt;xref href=\"System.Decimal.MaxValue\"&gt;&lt;/xref&gt;</ph>.","source":"The return value is less than <xref href=\"System.Decimal.MinValue\"></xref> or greater than <xref href=\"System.Decimal.MaxValue\"></xref>."}],"pos":[97757,97894],"yaml":true},{"content":"Divides two specified <xref href=\"System.Decimal\"></xref> values.","nodes":[{"pos":[0,65],"content":"Divides two specified <ph id=\"ph1\">&lt;xref href=\"System.Decimal\"&gt;&lt;/xref&gt;</ph> values.","source":"Divides two specified <xref href=\"System.Decimal\"></xref> values."}],"pos":[99433,99499],"yaml":true},{"content":"The <xref:System.Decimal.op_Division%2A> method defines the operation of the division operator for <xref:System.Decimal> values. It enables code such as the following:  \n  \n [!code-csharp[System.Decimal.Operators#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.decimal.operators/cs/division1.cs#7)]\n [!code-vb[System.Decimal.Operators#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.operators/vb/division1.vb#7)]  \n  \n If the language you're using doesn't support custom operators, call the <xref:System.Decimal.Divide%2A> method instead.  \n  \n The equivalent method for this operator is <xref:System.Decimal.Divide%28System.Decimal%2CSystem.Decimal%29?displayProperty=fullName>","nodes":[{"pos":[0,167],"content":"The <xref:System.Decimal.op_Division%2A> method defines the operation of the division operator for <xref:System.Decimal> values. It enables code such as the following:","nodes":[{"content":"The <xref:System.Decimal.op_Division%2A> method defines the operation of the division operator for <xref:System.Decimal> values. It enables code such as the following:","pos":[0,167],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Decimal.op_Division%2A&gt;</ph> method defines the operation of the division operator for <ph id=\"ph2\">&lt;xref:System.Decimal&gt;</ph> values.","pos":[0,128],"source":"The <xref:System.Decimal.op_Division%2A> method defines the operation of the division operator for <xref:System.Decimal> values."},{"content":"It enables code such as the following:","pos":[129,167]}]}]},{"pos":[174,447],"content":"<bpt id=\"p1\">[!code-csharp</bpt><bpt id=\"p2\">[</bpt>System.Decimal.Operators#7<ept id=\"p2\">](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.decimal.operators/cs/division1.cs#7)</ept><ept id=\"p1\">]</ept> <bpt id=\"p3\">[!code-vb</bpt><bpt id=\"p4\">[</bpt>System.Decimal.Operators#7<ept id=\"p4\">](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.operators/vb/division1.vb#7)</ept><ept id=\"p3\">]</ept>","source":"[!code-csharp[System.Decimal.Operators#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.decimal.operators/cs/division1.cs#7)]\n [!code-vb[System.Decimal.Operators#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.operators/vb/division1.vb#7)]"},{"pos":[454,573],"content":"If the language you're using doesn't support custom operators, call the <xref:System.Decimal.Divide%2A> method instead.","nodes":[{"content":"If the language you're using doesn't support custom operators, call the <ph id=\"ph1\">&lt;xref:System.Decimal.Divide%2A&gt;</ph> method instead.","pos":[0,119],"source":"If the language you're using doesn't support custom operators, call the <xref:System.Decimal.Divide%2A> method instead."}]},{"pos":[580,713],"content":"The equivalent method for this operator is <xref:System.Decimal.Divide%28System.Decimal%2CSystem.Decimal%29?displayProperty=fullName>","nodes":[{"content":"The equivalent method for this operator is <ph id=\"ph1\">&lt;xref:System.Decimal.Divide%28System.Decimal%2CSystem.Decimal%29?displayProperty=fullName&gt;</ph>","pos":[0,133],"source":"The equivalent method for this operator is <xref:System.Decimal.Divide%28System.Decimal%2CSystem.Decimal%29?displayProperty=fullName>"}]}],"pos":[99510,100233],"yaml":true,"extradata":"MT"},{"content":"The dividend.","nodes":[{"pos":[0,13],"content":"The dividend.","nodes":[{"content":"The dividend.","pos":[0,13]}]}],"pos":[100391,100405],"yaml":true},{"content":"The divisor.","nodes":[{"pos":[0,12],"content":"The divisor.","nodes":[{"content":"The divisor.","pos":[0,12]}]}],"pos":[100464,100477],"yaml":true},{"content":"The result of dividing <code>d1</code> by <code>d2</code>.","nodes":[{"pos":[0,58],"content":"The result of dividing <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">d1</ph><ept id=\"p1\">&lt;/code&gt;</ept> by <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">d2</ph><ept id=\"p2\">&lt;/code&gt;</ept>.","source":"The result of dividing <code>d1</code> by <code>d2</code>."}],"pos":[100535,100594],"yaml":true},{"content":"<code>d2</code> is zero.","nodes":[{"pos":[0,24],"content":"<ph id=\"ph1\">&lt;code&gt;d2&lt;/code&gt;</ph> is zero.","source":"<code>d2</code> is zero."}],"pos":[100750,100775],"yaml":true},{"content":"The return value is less than <xref href=\"System.Decimal.MinValue\"></xref> or greater than <xref href=\"System.Decimal.MaxValue\"></xref>.","nodes":[{"pos":[0,136],"content":"The return value is less than <ph id=\"ph1\">&lt;xref href=\"System.Decimal.MinValue\"&gt;&lt;/xref&gt;</ph> or greater than <ph id=\"ph2\">&lt;xref href=\"System.Decimal.MaxValue\"&gt;&lt;/xref&gt;</ph>.","source":"The return value is less than <xref href=\"System.Decimal.MinValue\"></xref> or greater than <xref href=\"System.Decimal.MaxValue\"></xref>."}],"pos":[100869,101006],"yaml":true},{"content":"Returns a value that indicates whether two <xref href=\"System.Decimal\"></xref> values are equal.","nodes":[{"pos":[0,96],"content":"Returns a value that indicates whether two <ph id=\"ph1\">&lt;xref href=\"System.Decimal\"&gt;&lt;/xref&gt;</ph> values are equal.","source":"Returns a value that indicates whether two <xref href=\"System.Decimal\"></xref> values are equal."}],"pos":[102562,102659],"yaml":true},{"content":"The <xref:System.Decimal.op_Equality%2A> method defines the operation of the equality operator for <xref:System.Decimal> values. It enables code such as the following:  \n  \n [!code-csharp[System.Decimal.Operators#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.decimal.operators/cs/equality1.cs#1)]\n [!code-vb[System.Decimal.Operators#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.operators/vb/equality1.vb#1)]  \n  \n If the language you're using doesn't support custom operators, call the <xref:System.Decimal.Equals%2A> method instead.  \n  \n The equivalent method for this operator is <xref:System.Decimal.Equals%28System.Object%29?displayProperty=fullName>","nodes":[{"pos":[0,167],"content":"The <xref:System.Decimal.op_Equality%2A> method defines the operation of the equality operator for <xref:System.Decimal> values. It enables code such as the following:","nodes":[{"content":"The <xref:System.Decimal.op_Equality%2A> method defines the operation of the equality operator for <xref:System.Decimal> values. It enables code such as the following:","pos":[0,167],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Decimal.op_Equality%2A&gt;</ph> method defines the operation of the equality operator for <ph id=\"ph2\">&lt;xref:System.Decimal&gt;</ph> values.","pos":[0,128],"source":"The <xref:System.Decimal.op_Equality%2A> method defines the operation of the equality operator for <xref:System.Decimal> values."},{"content":"It enables code such as the following:","pos":[129,167]}]}]},{"pos":[174,447],"content":"<bpt id=\"p1\">[!code-csharp</bpt><bpt id=\"p2\">[</bpt>System.Decimal.Operators#1<ept id=\"p2\">](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.decimal.operators/cs/equality1.cs#1)</ept><ept id=\"p1\">]</ept> <bpt id=\"p3\">[!code-vb</bpt><bpt id=\"p4\">[</bpt>System.Decimal.Operators#1<ept id=\"p4\">](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.operators/vb/equality1.vb#1)</ept><ept id=\"p3\">]</ept>","source":"[!code-csharp[System.Decimal.Operators#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.decimal.operators/cs/equality1.cs#1)]\n [!code-vb[System.Decimal.Operators#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.operators/vb/equality1.vb#1)]"},{"pos":[454,573],"content":"If the language you're using doesn't support custom operators, call the <xref:System.Decimal.Equals%2A> method instead.","nodes":[{"content":"If the language you're using doesn't support custom operators, call the <ph id=\"ph1\">&lt;xref:System.Decimal.Equals%2A&gt;</ph> method instead.","pos":[0,119],"source":"If the language you're using doesn't support custom operators, call the <xref:System.Decimal.Equals%2A> method instead."}]},{"pos":[580,695],"content":"The equivalent method for this operator is <xref:System.Decimal.Equals%28System.Object%29?displayProperty=fullName>","nodes":[{"content":"The equivalent method for this operator is <ph id=\"ph1\">&lt;xref:System.Decimal.Equals%28System.Object%29?displayProperty=fullName&gt;</ph>","pos":[0,115],"source":"The equivalent method for this operator is <xref:System.Decimal.Equals%28System.Object%29?displayProperty=fullName>"}]}],"pos":[102670,103375],"yaml":true,"extradata":"MT"},{"content":"The first value to compare.","nodes":[{"pos":[0,27],"content":"The first value to compare.","nodes":[{"content":"The first value to compare.","pos":[0,27]}]}],"pos":[103530,103558],"yaml":true},{"content":"The second value to compare.","nodes":[{"pos":[0,28],"content":"The second value to compare.","nodes":[{"content":"The second value to compare.","pos":[0,28]}]}],"pos":[103617,103646],"yaml":true},{"content":"`true` if <code>d1</code> and <code>d2</code> are equal; otherwise, `false`.","nodes":[{"pos":[0,76],"content":"<ph id=\"ph1\">`true`</ph> if <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">d1</ph><ept id=\"p1\">&lt;/code&gt;</ept> and <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph3\">d2</ph><ept id=\"p2\">&lt;/code&gt;</ept> are equal; otherwise, <ph id=\"ph4\">`false`</ph>.","source":"`true` if <code>d1</code> and <code>d2</code> are equal; otherwise, `false`."}],"pos":[103704,103783],"yaml":true},{"content":"Returns a value indicating whether a specified <xref href=\"System.Decimal\"></xref> is greater than another specified <xref href=\"System.Decimal\"></xref>.","nodes":[{"pos":[0,153],"content":"Returns a value indicating whether a specified <ph id=\"ph1\">&lt;xref href=\"System.Decimal\"&gt;&lt;/xref&gt;</ph> is greater than another specified <ph id=\"ph2\">&lt;xref href=\"System.Decimal\"&gt;&lt;/xref&gt;</ph>.","source":"Returns a value indicating whether a specified <xref href=\"System.Decimal\"></xref> is greater than another specified <xref href=\"System.Decimal\"></xref>."}],"pos":[127938,128092],"yaml":true},{"content":"The <xref:System.Decimal.op_GreaterThan%2A> method defines the operation of the greater than operator for <xref:System.Decimal> values. It enables code such as the following:  \n  \n [!code-csharp[System.Decimal.Operators#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.decimal.operators/cs/greaterthan1.cs#8)]\n [!code-vb[System.Decimal.Operators#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.operators/vb/greaterthan1.vb#8)]  \n  \n Languages that do not support custom operators can call the <xref:System.Decimal.Compare%2A> method instead. They may also be able to call the <xref:System.Decimal.op_GreaterThan%2A> method directly, as the following example shows.  \n  \n [!code-vb[System.Decimal.Operators#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.operators/vb/greaterthan2.vb#9)]  \n  \n The equivalent method for this operator is <xref:System.Decimal.Compare%28System.Decimal%2CSystem.Decimal%29?displayProperty=fullName>","nodes":[{"pos":[0,174],"content":"The <xref:System.Decimal.op_GreaterThan%2A> method defines the operation of the greater than operator for <xref:System.Decimal> values. It enables code such as the following:","nodes":[{"content":"The <xref:System.Decimal.op_GreaterThan%2A> method defines the operation of the greater than operator for <xref:System.Decimal> values. It enables code such as the following:","pos":[0,174],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Decimal.op_GreaterThan%2A&gt;</ph> method defines the operation of the greater than operator for <ph id=\"ph2\">&lt;xref:System.Decimal&gt;</ph> values.","pos":[0,135],"source":"The <xref:System.Decimal.op_GreaterThan%2A> method defines the operation of the greater than operator for <xref:System.Decimal> values."},{"content":"It enables code such as the following:","pos":[136,174]}]}]},{"pos":[181,460],"content":"<bpt id=\"p1\">[!code-csharp</bpt><bpt id=\"p2\">[</bpt>System.Decimal.Operators#8<ept id=\"p2\">](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.decimal.operators/cs/greaterthan1.cs#8)</ept><ept id=\"p1\">]</ept> <bpt id=\"p3\">[!code-vb</bpt><bpt id=\"p4\">[</bpt>System.Decimal.Operators#8<ept id=\"p4\">](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.operators/vb/greaterthan1.vb#8)</ept><ept id=\"p3\">]</ept>","source":"[!code-csharp[System.Decimal.Operators#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.decimal.operators/cs/greaterthan1.cs#8)]\n [!code-vb[System.Decimal.Operators#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.operators/vb/greaterthan1.vb#8)]"},{"pos":[467,698],"content":"Languages that do not support custom operators can call the <xref:System.Decimal.Compare%2A> method instead. They may also be able to call the <xref:System.Decimal.op_GreaterThan%2A> method directly, as the following example shows.","nodes":[{"content":"Languages that do not support custom operators can call the <xref:System.Decimal.Compare%2A> method instead. They may also be able to call the <xref:System.Decimal.op_GreaterThan%2A> method directly, as the following example shows.","pos":[0,231],"nodes":[{"content":"Languages that do not support custom operators can call the <ph id=\"ph1\">&lt;xref:System.Decimal.Compare%2A&gt;</ph> method instead.","pos":[0,108],"source":"Languages that do not support custom operators can call the <xref:System.Decimal.Compare%2A> method instead."},{"content":"They may also be able to call the <ph id=\"ph1\">&lt;xref:System.Decimal.op_GreaterThan%2A&gt;</ph> method directly, as the following example shows.","pos":[109,231],"source":" They may also be able to call the <xref:System.Decimal.op_GreaterThan%2A> method directly, as the following example shows."}]}]},{"pos":[705,844],"content":"<bpt id=\"p1\">[!code-vb</bpt><bpt id=\"p2\">[</bpt>System.Decimal.Operators#9<ept id=\"p2\">](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.operators/vb/greaterthan2.vb#9)</ept><ept id=\"p1\">]</ept>","source":"[!code-vb[System.Decimal.Operators#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.operators/vb/greaterthan2.vb#9)]"},{"pos":[851,985],"content":"The equivalent method for this operator is <xref:System.Decimal.Compare%28System.Decimal%2CSystem.Decimal%29?displayProperty=fullName>","nodes":[{"content":"The equivalent method for this operator is <ph id=\"ph1\">&lt;xref:System.Decimal.Compare%28System.Decimal%2CSystem.Decimal%29?displayProperty=fullName&gt;</ph>","pos":[0,134],"source":"The equivalent method for this operator is <xref:System.Decimal.Compare%28System.Decimal%2CSystem.Decimal%29?displayProperty=fullName>"}]}],"pos":[128103,129100],"yaml":true,"extradata":"MT"},{"content":"The first value to compare.","nodes":[{"pos":[0,27],"content":"The first value to compare.","nodes":[{"content":"The first value to compare.","pos":[0,27]}]}],"pos":[129258,129286],"yaml":true},{"content":"The second value to compare.","nodes":[{"pos":[0,28],"content":"The second value to compare.","nodes":[{"content":"The second value to compare.","pos":[0,28]}]}],"pos":[129345,129374],"yaml":true},{"content":"`true` if <code>d1</code> is greater than <code>d2</code>; otherwise, `false`.","nodes":[{"pos":[0,78],"content":"<ph id=\"ph1\">`true`</ph> if <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">d1</ph><ept id=\"p1\">&lt;/code&gt;</ept> is greater than <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph3\">d2</ph><ept id=\"p2\">&lt;/code&gt;</ept>; otherwise, <ph id=\"ph4\">`false`</ph>.","source":"`true` if <code>d1</code> is greater than <code>d2</code>; otherwise, `false`."}],"pos":[129432,129513],"yaml":true},{"content":"Returns a value indicating whether a specified <xref href=\"System.Decimal\"></xref> is greater than or equal to another specified <xref href=\"System.Decimal\"></xref>.","nodes":[{"pos":[0,165],"content":"Returns a value indicating whether a specified <ph id=\"ph1\">&lt;xref href=\"System.Decimal\"&gt;&lt;/xref&gt;</ph> is greater than or equal to another specified <ph id=\"ph2\">&lt;xref href=\"System.Decimal\"&gt;&lt;/xref&gt;</ph>.","source":"Returns a value indicating whether a specified <xref href=\"System.Decimal\"></xref> is greater than or equal to another specified <xref href=\"System.Decimal\"></xref>."}],"pos":[131189,131355],"yaml":true},{"content":"The <xref:System.Decimal.op_GreaterThanOrEqual%2A> method defines the operation of the greater than or equal operator for <xref:System.Decimal> values. It enables code such as the following:  \n  \n [!code-csharp[System.Decimal.Operators#10](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.decimal.operators/cs/greaterthanorequal1.cs#10)]\n [!code-vb[System.Decimal.Operators#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.operators/vb/greaterthanorequal1.vb#10)]  \n  \n Languages that do not support custom operators can call the <xref:System.Decimal.Compare%2A> method instead. They may also be able to call the <xref:System.Decimal.op_GreaterThanOrEqual%2A> method directly, as the following example shows.  \n  \n [!code-vb[System.Decimal.Operators#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.operators/vb/greaterthanorequal2.vb#11)]  \n  \n The equivalent method for this operator is <xref:System.Decimal.Compare%28System.Decimal%2CSystem.Decimal%29?displayProperty=fullName>","nodes":[{"pos":[0,190],"content":"The <xref:System.Decimal.op_GreaterThanOrEqual%2A> method defines the operation of the greater than or equal operator for <xref:System.Decimal> values. It enables code such as the following:","nodes":[{"content":"The <xref:System.Decimal.op_GreaterThanOrEqual%2A> method defines the operation of the greater than or equal operator for <xref:System.Decimal> values. It enables code such as the following:","pos":[0,190],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Decimal.op_GreaterThanOrEqual%2A&gt;</ph> method defines the operation of the greater than or equal operator for <ph id=\"ph2\">&lt;xref:System.Decimal&gt;</ph> values.","pos":[0,151],"source":"The <xref:System.Decimal.op_GreaterThanOrEqual%2A> method defines the operation of the greater than or equal operator for <xref:System.Decimal> values."},{"content":"It enables code such as the following:","pos":[152,190]}]}]},{"pos":[197,494],"content":"<bpt id=\"p1\">[!code-csharp</bpt><bpt id=\"p2\">[</bpt>System.Decimal.Operators#10<ept id=\"p2\">](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.decimal.operators/cs/greaterthanorequal1.cs#10)</ept><ept id=\"p1\">]</ept> <bpt id=\"p3\">[!code-vb</bpt><bpt id=\"p4\">[</bpt>System.Decimal.Operators#10<ept id=\"p4\">](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.operators/vb/greaterthanorequal1.vb#10)</ept><ept id=\"p3\">]</ept>","source":"[!code-csharp[System.Decimal.Operators#10](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.decimal.operators/cs/greaterthanorequal1.cs#10)]\n [!code-vb[System.Decimal.Operators#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.operators/vb/greaterthanorequal1.vb#10)]"},{"pos":[501,739],"content":"Languages that do not support custom operators can call the <xref:System.Decimal.Compare%2A> method instead. They may also be able to call the <xref:System.Decimal.op_GreaterThanOrEqual%2A> method directly, as the following example shows.","nodes":[{"content":"Languages that do not support custom operators can call the <xref:System.Decimal.Compare%2A> method instead. They may also be able to call the <xref:System.Decimal.op_GreaterThanOrEqual%2A> method directly, as the following example shows.","pos":[0,238],"nodes":[{"content":"Languages that do not support custom operators can call the <ph id=\"ph1\">&lt;xref:System.Decimal.Compare%2A&gt;</ph> method instead.","pos":[0,108],"source":"Languages that do not support custom operators can call the <xref:System.Decimal.Compare%2A> method instead."},{"content":"They may also be able to call the <ph id=\"ph1\">&lt;xref:System.Decimal.op_GreaterThanOrEqual%2A&gt;</ph> method directly, as the following example shows.","pos":[109,238],"source":" They may also be able to call the <xref:System.Decimal.op_GreaterThanOrEqual%2A> method directly, as the following example shows."}]}]},{"pos":[746,894],"content":"<bpt id=\"p1\">[!code-vb</bpt><bpt id=\"p2\">[</bpt>System.Decimal.Operators#11<ept id=\"p2\">](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.operators/vb/greaterthanorequal2.vb#11)</ept><ept id=\"p1\">]</ept>","source":"[!code-vb[System.Decimal.Operators#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.operators/vb/greaterthanorequal2.vb#11)]"},{"pos":[901,1035],"content":"The equivalent method for this operator is <xref:System.Decimal.Compare%28System.Decimal%2CSystem.Decimal%29?displayProperty=fullName>","nodes":[{"content":"The equivalent method for this operator is <ph id=\"ph1\">&lt;xref:System.Decimal.Compare%28System.Decimal%2CSystem.Decimal%29?displayProperty=fullName&gt;</ph>","pos":[0,134],"source":"The equivalent method for this operator is <xref:System.Decimal.Compare%28System.Decimal%2CSystem.Decimal%29?displayProperty=fullName>"}]}],"pos":[131366,132413],"yaml":true,"extradata":"MT"},{"content":"The first value to compare.","nodes":[{"pos":[0,27],"content":"The first value to compare.","nodes":[{"content":"The first value to compare.","pos":[0,27]}]}],"pos":[132578,132606],"yaml":true},{"content":"The second value to compare.","nodes":[{"pos":[0,28],"content":"The second value to compare.","nodes":[{"content":"The second value to compare.","pos":[0,28]}]}],"pos":[132665,132694],"yaml":true},{"content":"`true` if <code>d1</code> is greater than or equal to <code>d2</code>; otherwise, `false`.","nodes":[{"pos":[0,90],"content":"<ph id=\"ph1\">`true`</ph> if <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">d1</ph><ept id=\"p1\">&lt;/code&gt;</ept> is greater than or equal to <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph3\">d2</ph><ept id=\"p2\">&lt;/code&gt;</ept>; otherwise, <ph id=\"ph4\">`false`</ph>.","source":"`true` if <code>d1</code> is greater than or equal to <code>d2</code>; otherwise, `false`."}],"pos":[132752,132845],"yaml":true},{"content":"Increments the <xref href=\"System.Decimal\"></xref> operand by 1.","nodes":[{"pos":[0,64],"content":"Increments the <ph id=\"ph1\">&lt;xref href=\"System.Decimal\"&gt;&lt;/xref&gt;</ph> operand by 1.","source":"Increments the <xref href=\"System.Decimal\"></xref> operand by 1."}],"pos":[150096,150161],"yaml":true},{"content":"The <xref:System.Decimal.op_Increment%2A> method defines the operation of the increment operator for <xref:System.Decimal> values. It enables code such as the following:  \n  \n [!code-csharp[System.Decimal.Operators#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.decimal.operators/cs/increment1.cs#12)]  \n  \n Some languages (such as Visual Basic) that lack an increment operator can call the <xref:System.Decimal.op_Increment%2A> method directly, as the following example shows.  \n  \n [!code-vb[System.Decimal.Operators#13](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.operators/vb/increment1.vb#13)]  \n  \n If your language does not support custom operators, call the <xref:System.Decimal.Add%2A> method instead, as the following example shows.  \n  \n [!code-csharp[System.Decimal.Operators#14](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.decimal.operators/cs/increment2.cs#14)]\n [!code-vb[System.Decimal.Operators#14](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.operators/vb/increment2.vb#14)]","nodes":[{"pos":[0,169],"content":"The <xref:System.Decimal.op_Increment%2A> method defines the operation of the increment operator for <xref:System.Decimal> values. It enables code such as the following:","nodes":[{"content":"The <xref:System.Decimal.op_Increment%2A> method defines the operation of the increment operator for <xref:System.Decimal> values. It enables code such as the following:","pos":[0,169],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Decimal.op_Increment%2A&gt;</ph> method defines the operation of the increment operator for <ph id=\"ph2\">&lt;xref:System.Decimal&gt;</ph> values.","pos":[0,130],"source":"The <xref:System.Decimal.op_Increment%2A> method defines the operation of the increment operator for <xref:System.Decimal> values."},{"content":"It enables code such as the following:","pos":[131,169]}]}]},{"pos":[176,314],"content":"<bpt id=\"p1\">[!code-csharp</bpt><bpt id=\"p2\">[</bpt>System.Decimal.Operators#12<ept id=\"p2\">](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.decimal.operators/cs/increment1.cs#12)</ept><ept id=\"p1\">]</ept>","source":"[!code-csharp[System.Decimal.Operators#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.decimal.operators/cs/increment1.cs#12)]"},{"pos":[321,490],"content":"Some languages (such as Visual Basic) that lack an increment operator can call the <xref:System.Decimal.op_Increment%2A> method directly, as the following example shows.","nodes":[{"content":"Some languages (such as Visual Basic) that lack an increment operator can call the <ph id=\"ph1\">&lt;xref:System.Decimal.op_Increment%2A&gt;</ph> method directly, as the following example shows.","pos":[0,169],"source":"Some languages (such as Visual Basic) that lack an increment operator can call the <xref:System.Decimal.op_Increment%2A> method directly, as the following example shows."}]},{"pos":[497,636],"content":"<bpt id=\"p1\">[!code-vb</bpt><bpt id=\"p2\">[</bpt>System.Decimal.Operators#13<ept id=\"p2\">](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.operators/vb/increment1.vb#13)</ept><ept id=\"p1\">]</ept>","source":"[!code-vb[System.Decimal.Operators#13](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.operators/vb/increment1.vb#13)]"},{"pos":[643,780],"content":"If your language does not support custom operators, call the <xref:System.Decimal.Add%2A> method instead, as the following example shows.","nodes":[{"content":"If your language does not support custom operators, call the <ph id=\"ph1\">&lt;xref:System.Decimal.Add%2A&gt;</ph> method instead, as the following example shows.","pos":[0,137],"source":"If your language does not support custom operators, call the <xref:System.Decimal.Add%2A> method instead, as the following example shows."}]},{"pos":[787,1066],"content":"<bpt id=\"p1\">[!code-csharp</bpt><bpt id=\"p2\">[</bpt>System.Decimal.Operators#14<ept id=\"p2\">](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.decimal.operators/cs/increment2.cs#14)</ept><ept id=\"p1\">]</ept> <bpt id=\"p3\">[!code-vb</bpt><bpt id=\"p4\">[</bpt>System.Decimal.Operators#14<ept id=\"p4\">](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.operators/vb/increment2.vb#14)</ept><ept id=\"p3\">]</ept>","source":"[!code-csharp[System.Decimal.Operators#14](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.decimal.operators/cs/increment2.cs#14)]\n [!code-vb[System.Decimal.Operators#14](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.operators/vb/increment2.vb#14)]"}],"pos":[150172,151252],"yaml":true,"extradata":"MT"},{"content":"The value to increment.","nodes":[{"pos":[0,23],"content":"The value to increment.","nodes":[{"content":"The value to increment.","pos":[0,23]}]}],"pos":[151397,151421],"yaml":true},{"content":"The value of <code>d</code> incremented by 1.","nodes":[{"pos":[0,45],"content":"The value of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">d</ph><ept id=\"p1\">&lt;/code&gt;</ept> incremented by 1.","source":"The value of <code>d</code> incremented by 1."}],"pos":[151479,151525],"yaml":true},{"content":"The return value is less than <xref href=\"System.Decimal.MinValue\"></xref> or greater than <xref href=\"System.Decimal.MaxValue\"></xref>.","nodes":[{"pos":[0,136],"content":"The return value is less than <ph id=\"ph1\">&lt;xref href=\"System.Decimal.MinValue\"&gt;&lt;/xref&gt;</ph> or greater than <ph id=\"ph2\">&lt;xref href=\"System.Decimal.MaxValue\"&gt;&lt;/xref&gt;</ph>.","source":"The return value is less than <xref href=\"System.Decimal.MinValue\"></xref> or greater than <xref href=\"System.Decimal.MaxValue\"></xref>."}],"pos":[151674,151811],"yaml":true},{"content":"Returns a value that indicates whether two <xref href=\"System.Decimal\"></xref> objects have different values.","nodes":[{"pos":[0,109],"content":"Returns a value that indicates whether two <ph id=\"ph1\">&lt;xref href=\"System.Decimal\"&gt;&lt;/xref&gt;</ph> objects have different values.","source":"Returns a value that indicates whether two <xref href=\"System.Decimal\"></xref> objects have different values."}],"pos":[153362,153472],"yaml":true},{"content":"The <xref:System.Decimal.op_Inequality%2A> method defines the operation of the inequality operator for <xref:System.Decimal> values. It enables code such as the following:  \n  \n [!code-csharp[System.Decimal.Operators#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.decimal.operators/cs/inequality1.cs#2)]\n [!code-vb[System.Decimal.Operators#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.operators/vb/inequality1.vb#2)]  \n  \n If the language you're using doesn't support custom operators, you can test for inequality by using one of the following techniques:  \n  \n-   Calling the <xref:System.Decimal.Compare%2A> method, which indicates the relationship between two <xref:System.Decimal> values.  \n  \n-   Calling the <xref:System.Decimal.Equals%2A> method and reversing its value.  \n  \n The equivalent method for this operator is <xref:System.Decimal.Compare%28System.Decimal%2CSystem.Decimal%29?displayProperty=fullName>","nodes":[{"pos":[0,171],"content":"The <xref:System.Decimal.op_Inequality%2A> method defines the operation of the inequality operator for <xref:System.Decimal> values. It enables code such as the following:","nodes":[{"content":"The <xref:System.Decimal.op_Inequality%2A> method defines the operation of the inequality operator for <xref:System.Decimal> values. It enables code such as the following:","pos":[0,171],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Decimal.op_Inequality%2A&gt;</ph> method defines the operation of the inequality operator for <ph id=\"ph2\">&lt;xref:System.Decimal&gt;</ph> values.","pos":[0,132],"source":"The <xref:System.Decimal.op_Inequality%2A> method defines the operation of the inequality operator for <xref:System.Decimal> values."},{"content":"It enables code such as the following:","pos":[133,171]}]}]},{"pos":[178,455],"content":"<bpt id=\"p1\">[!code-csharp</bpt><bpt id=\"p2\">[</bpt>System.Decimal.Operators#2<ept id=\"p2\">](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.decimal.operators/cs/inequality1.cs#2)</ept><ept id=\"p1\">]</ept> <bpt id=\"p3\">[!code-vb</bpt><bpt id=\"p4\">[</bpt>System.Decimal.Operators#2<ept id=\"p4\">](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.operators/vb/inequality1.vb#2)</ept><ept id=\"p3\">]</ept>","source":"[!code-csharp[System.Decimal.Operators#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.decimal.operators/cs/inequality1.cs#2)]\n [!code-vb[System.Decimal.Operators#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.operators/vb/inequality1.vb#2)]"},{"pos":[462,594],"content":"If the language you're using doesn't support custom operators, you can test for inequality by using one of the following techniques:","nodes":[{"content":"If the language you're using doesn't support custom operators, you can test for inequality by using one of the following techniques:","pos":[0,132]}]},{"pos":[604,731],"content":"Calling the <xref:System.Decimal.Compare%2A> method, which indicates the relationship between two <xref:System.Decimal> values.","nodes":[{"content":"Calling the <ph id=\"ph1\">&lt;xref:System.Decimal.Compare%2A&gt;</ph> method, which indicates the relationship between two <ph id=\"ph2\">&lt;xref:System.Decimal&gt;</ph> values.","pos":[0,127],"source":"Calling the <xref:System.Decimal.Compare%2A> method, which indicates the relationship between two <xref:System.Decimal> values."}]},{"pos":[741,816],"content":"Calling the <xref:System.Decimal.Equals%2A> method and reversing its value.","nodes":[{"content":"Calling the <ph id=\"ph1\">&lt;xref:System.Decimal.Equals%2A&gt;</ph> method and reversing its value.","pos":[0,75],"source":"Calling the <xref:System.Decimal.Equals%2A> method and reversing its value."}]},{"pos":[823,957],"content":"The equivalent method for this operator is <xref:System.Decimal.Compare%28System.Decimal%2CSystem.Decimal%29?displayProperty=fullName>","nodes":[{"content":"The equivalent method for this operator is <ph id=\"ph1\">&lt;xref:System.Decimal.Compare%28System.Decimal%2CSystem.Decimal%29?displayProperty=fullName&gt;</ph>","pos":[0,134],"source":"The equivalent method for this operator is <xref:System.Decimal.Compare%28System.Decimal%2CSystem.Decimal%29?displayProperty=fullName>"}]}],"pos":[153483,154454],"yaml":true,"extradata":"MT"},{"content":"The first value to compare.","nodes":[{"pos":[0,27],"content":"The first value to compare.","nodes":[{"content":"The first value to compare.","pos":[0,27]}]}],"pos":[154611,154639],"yaml":true},{"content":"The second value to compare.","nodes":[{"pos":[0,28],"content":"The second value to compare.","nodes":[{"content":"The second value to compare.","pos":[0,28]}]}],"pos":[154698,154727],"yaml":true},{"content":"`true` if <code>d1</code> and <code>d2</code> are not equal; otherwise, `false`.","nodes":[{"pos":[0,80],"content":"<ph id=\"ph1\">`true`</ph> if <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">d1</ph><ept id=\"p1\">&lt;/code&gt;</ept> and <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph3\">d2</ph><ept id=\"p2\">&lt;/code&gt;</ept> are not equal; otherwise, <ph id=\"ph4\">`false`</ph>.","source":"`true` if <code>d1</code> and <code>d2</code> are not equal; otherwise, `false`."}],"pos":[154785,154868],"yaml":true},{"content":"Returns a value indicating whether a specified <xref href=\"System.Decimal\"></xref> is less than another specified <xref href=\"System.Decimal\"></xref>.","nodes":[{"pos":[0,150],"content":"Returns a value indicating whether a specified <ph id=\"ph1\">&lt;xref href=\"System.Decimal\"&gt;&lt;/xref&gt;</ph> is less than another specified <ph id=\"ph2\">&lt;xref href=\"System.Decimal\"&gt;&lt;/xref&gt;</ph>.","source":"Returns a value indicating whether a specified <xref href=\"System.Decimal\"></xref> is less than another specified <xref href=\"System.Decimal\"></xref>."}],"pos":[156483,156634],"yaml":true},{"content":"The <xref:System.Decimal.op_LessThan%2A> method defines the operation of the less than operator for <xref:System.Decimal> values. It enables code such as the following:  \n  \n [!code-csharp[System.Decimal.Operators#15](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.decimal.operators/cs/lessthan1.cs#15)]\n [!code-vb[System.Decimal.Operators#15](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.operators/vb/lessthan1.vb#15)]  \n  \n Languages that do not support custom operators can call the <xref:System.Decimal.Compare%2A> method instead. They may also be able to call the <xref:System.Decimal.op_LessThan%2A> method directly, as the following example shows.  \n  \n [!code-vb[System.Decimal.Operators#16](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.operators/vb/lessthan2.vb#16)]  \n  \n The equivalent method for this operator is <xref:System.Decimal.Compare%28System.Decimal%2CSystem.Decimal%29?displayProperty=fullName>","nodes":[{"pos":[0,168],"content":"The <xref:System.Decimal.op_LessThan%2A> method defines the operation of the less than operator for <xref:System.Decimal> values. It enables code such as the following:","nodes":[{"content":"The <xref:System.Decimal.op_LessThan%2A> method defines the operation of the less than operator for <xref:System.Decimal> values. It enables code such as the following:","pos":[0,168],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Decimal.op_LessThan%2A&gt;</ph> method defines the operation of the less than operator for <ph id=\"ph2\">&lt;xref:System.Decimal&gt;</ph> values.","pos":[0,129],"source":"The <xref:System.Decimal.op_LessThan%2A> method defines the operation of the less than operator for <xref:System.Decimal> values."},{"content":"It enables code such as the following:","pos":[130,168]}]}]},{"pos":[175,452],"content":"<bpt id=\"p1\">[!code-csharp</bpt><bpt id=\"p2\">[</bpt>System.Decimal.Operators#15<ept id=\"p2\">](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.decimal.operators/cs/lessthan1.cs#15)</ept><ept id=\"p1\">]</ept> <bpt id=\"p3\">[!code-vb</bpt><bpt id=\"p4\">[</bpt>System.Decimal.Operators#15<ept id=\"p4\">](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.operators/vb/lessthan1.vb#15)</ept><ept id=\"p3\">]</ept>","source":"[!code-csharp[System.Decimal.Operators#15](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.decimal.operators/cs/lessthan1.cs#15)]\n [!code-vb[System.Decimal.Operators#15](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.operators/vb/lessthan1.vb#15)]"},{"pos":[459,687],"content":"Languages that do not support custom operators can call the <xref:System.Decimal.Compare%2A> method instead. They may also be able to call the <xref:System.Decimal.op_LessThan%2A> method directly, as the following example shows.","nodes":[{"content":"Languages that do not support custom operators can call the <xref:System.Decimal.Compare%2A> method instead. They may also be able to call the <xref:System.Decimal.op_LessThan%2A> method directly, as the following example shows.","pos":[0,228],"nodes":[{"content":"Languages that do not support custom operators can call the <ph id=\"ph1\">&lt;xref:System.Decimal.Compare%2A&gt;</ph> method instead.","pos":[0,108],"source":"Languages that do not support custom operators can call the <xref:System.Decimal.Compare%2A> method instead."},{"content":"They may also be able to call the <ph id=\"ph1\">&lt;xref:System.Decimal.op_LessThan%2A&gt;</ph> method directly, as the following example shows.","pos":[109,228],"source":" They may also be able to call the <xref:System.Decimal.op_LessThan%2A> method directly, as the following example shows."}]}]},{"pos":[694,832],"content":"<bpt id=\"p1\">[!code-vb</bpt><bpt id=\"p2\">[</bpt>System.Decimal.Operators#16<ept id=\"p2\">](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.operators/vb/lessthan2.vb#16)</ept><ept id=\"p1\">]</ept>","source":"[!code-vb[System.Decimal.Operators#16](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.operators/vb/lessthan2.vb#16)]"},{"pos":[839,973],"content":"The equivalent method for this operator is <xref:System.Decimal.Compare%28System.Decimal%2CSystem.Decimal%29?displayProperty=fullName>","nodes":[{"content":"The equivalent method for this operator is <ph id=\"ph1\">&lt;xref:System.Decimal.Compare%28System.Decimal%2CSystem.Decimal%29?displayProperty=fullName&gt;</ph>","pos":[0,134],"source":"The equivalent method for this operator is <xref:System.Decimal.Compare%28System.Decimal%2CSystem.Decimal%29?displayProperty=fullName>"}]}],"pos":[156645,157630],"yaml":true,"extradata":"MT"},{"content":"The first value to compare.","nodes":[{"pos":[0,27],"content":"The first value to compare.","nodes":[{"content":"The first value to compare.","pos":[0,27]}]}],"pos":[157785,157813],"yaml":true},{"content":"The second value to compare.","nodes":[{"pos":[0,28],"content":"The second value to compare.","nodes":[{"content":"The second value to compare.","pos":[0,28]}]}],"pos":[157872,157901],"yaml":true},{"content":"`true` if <code>d1</code> is less than <code>d2</code>; otherwise, `false`.","nodes":[{"pos":[0,75],"content":"<ph id=\"ph1\">`true`</ph> if <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">d1</ph><ept id=\"p1\">&lt;/code&gt;</ept> is less than <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph3\">d2</ph><ept id=\"p2\">&lt;/code&gt;</ept>; otherwise, <ph id=\"ph4\">`false`</ph>.","source":"`true` if <code>d1</code> is less than <code>d2</code>; otherwise, `false`."}],"pos":[157959,158037],"yaml":true},{"content":"Returns a value indicating whether a specified <xref href=\"System.Decimal\"></xref> is less than or equal to another specified <xref href=\"System.Decimal\"></xref>.","nodes":[{"pos":[0,162],"content":"Returns a value indicating whether a specified <ph id=\"ph1\">&lt;xref href=\"System.Decimal\"&gt;&lt;/xref&gt;</ph> is less than or equal to another specified <ph id=\"ph2\">&lt;xref href=\"System.Decimal\"&gt;&lt;/xref&gt;</ph>.","source":"Returns a value indicating whether a specified <xref href=\"System.Decimal\"></xref> is less than or equal to another specified <xref href=\"System.Decimal\"></xref>."}],"pos":[159692,159855],"yaml":true},{"content":"The <xref:System.Decimal.op_LessThanOrEqual%2A> method defines the operation of the less than or equal operator for <xref:System.Decimal> values. It enables code such as the following:  \n  \n [!code-csharp[System.Decimal.Operators#17](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.decimal.operators/cs/lessthanorequal1.cs#17)]\n [!code-vb[System.Decimal.Operators#17](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.operators/vb/lessthanorequal1.vb#17)]  \n  \n Languages that do not support custom operators can call the <xref:System.Decimal.Compare%2A> method instead. They may also be able to call the <xref:System.Decimal.op_LessThanOrEqual%2A> method directly, as the following example shows.  \n  \n [!code-vb[System.Decimal.Operators#18](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.operators/vb/lessthanorequal2.vb#18)]  \n  \n The equivalent method for this operator is <xref:System.Decimal.Compare%28System.Decimal%2CSystem.Decimal%29?displayProperty=fullName>","nodes":[{"pos":[0,184],"content":"The <xref:System.Decimal.op_LessThanOrEqual%2A> method defines the operation of the less than or equal operator for <xref:System.Decimal> values. It enables code such as the following:","nodes":[{"content":"The <xref:System.Decimal.op_LessThanOrEqual%2A> method defines the operation of the less than or equal operator for <xref:System.Decimal> values. It enables code such as the following:","pos":[0,184],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Decimal.op_LessThanOrEqual%2A&gt;</ph> method defines the operation of the less than or equal operator for <ph id=\"ph2\">&lt;xref:System.Decimal&gt;</ph> values.","pos":[0,145],"source":"The <xref:System.Decimal.op_LessThanOrEqual%2A> method defines the operation of the less than or equal operator for <xref:System.Decimal> values."},{"content":"It enables code such as the following:","pos":[146,184]}]}]},{"pos":[191,482],"content":"<bpt id=\"p1\">[!code-csharp</bpt><bpt id=\"p2\">[</bpt>System.Decimal.Operators#17<ept id=\"p2\">](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.decimal.operators/cs/lessthanorequal1.cs#17)</ept><ept id=\"p1\">]</ept> <bpt id=\"p3\">[!code-vb</bpt><bpt id=\"p4\">[</bpt>System.Decimal.Operators#17<ept id=\"p4\">](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.operators/vb/lessthanorequal1.vb#17)</ept><ept id=\"p3\">]</ept>","source":"[!code-csharp[System.Decimal.Operators#17](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.decimal.operators/cs/lessthanorequal1.cs#17)]\n [!code-vb[System.Decimal.Operators#17](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.operators/vb/lessthanorequal1.vb#17)]"},{"pos":[489,724],"content":"Languages that do not support custom operators can call the <xref:System.Decimal.Compare%2A> method instead. They may also be able to call the <xref:System.Decimal.op_LessThanOrEqual%2A> method directly, as the following example shows.","nodes":[{"content":"Languages that do not support custom operators can call the <xref:System.Decimal.Compare%2A> method instead. They may also be able to call the <xref:System.Decimal.op_LessThanOrEqual%2A> method directly, as the following example shows.","pos":[0,235],"nodes":[{"content":"Languages that do not support custom operators can call the <ph id=\"ph1\">&lt;xref:System.Decimal.Compare%2A&gt;</ph> method instead.","pos":[0,108],"source":"Languages that do not support custom operators can call the <xref:System.Decimal.Compare%2A> method instead."},{"content":"They may also be able to call the <ph id=\"ph1\">&lt;xref:System.Decimal.op_LessThanOrEqual%2A&gt;</ph> method directly, as the following example shows.","pos":[109,235],"source":" They may also be able to call the <xref:System.Decimal.op_LessThanOrEqual%2A> method directly, as the following example shows."}]}]},{"pos":[731,876],"content":"<bpt id=\"p1\">[!code-vb</bpt><bpt id=\"p2\">[</bpt>System.Decimal.Operators#18<ept id=\"p2\">](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.operators/vb/lessthanorequal2.vb#18)</ept><ept id=\"p1\">]</ept>","source":"[!code-vb[System.Decimal.Operators#18](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.operators/vb/lessthanorequal2.vb#18)]"},{"pos":[883,1017],"content":"The equivalent method for this operator is <xref:System.Decimal.Compare%28System.Decimal%2CSystem.Decimal%29?displayProperty=fullName>","nodes":[{"content":"The equivalent method for this operator is <ph id=\"ph1\">&lt;xref:System.Decimal.Compare%28System.Decimal%2CSystem.Decimal%29?displayProperty=fullName&gt;</ph>","pos":[0,134],"source":"The equivalent method for this operator is <xref:System.Decimal.Compare%28System.Decimal%2CSystem.Decimal%29?displayProperty=fullName>"}]}],"pos":[159866,160895],"yaml":true,"extradata":"MT"},{"content":"The first value to compare.","nodes":[{"pos":[0,27],"content":"The first value to compare.","nodes":[{"content":"The first value to compare.","pos":[0,27]}]}],"pos":[161057,161085],"yaml":true},{"content":"The second value to compare.","nodes":[{"pos":[0,28],"content":"The second value to compare.","nodes":[{"content":"The second value to compare.","pos":[0,28]}]}],"pos":[161144,161173],"yaml":true},{"content":"`true` if <code>d1</code> is less than or equal to <code>d2</code>; otherwise, `false`.","nodes":[{"pos":[0,87],"content":"<ph id=\"ph1\">`true`</ph> if <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">d1</ph><ept id=\"p1\">&lt;/code&gt;</ept> is less than or equal to <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph3\">d2</ph><ept id=\"p2\">&lt;/code&gt;</ept>; otherwise, <ph id=\"ph4\">`false`</ph>.","source":"`true` if <code>d1</code> is less than or equal to <code>d2</code>; otherwise, `false`."}],"pos":[161231,161321],"yaml":true},{"content":"Returns the remainder resulting from dividing two specified <xref href=\"System.Decimal\"></xref> values.","nodes":[{"pos":[0,103],"content":"Returns the remainder resulting from dividing two specified <ph id=\"ph1\">&lt;xref href=\"System.Decimal\"&gt;&lt;/xref&gt;</ph> values.","source":"Returns the remainder resulting from dividing two specified <xref href=\"System.Decimal\"></xref> values."}],"pos":[162935,163039],"yaml":true},{"content":"The <xref:System.Decimal.op_Modulus%2A> method defines the operation of the modulus operator for <xref:System.Decimal> values. It enables code such as the following:  \n  \n [!code-csharp[System.Decimal.Operators#19](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.decimal.operators/cs/modulus1.cs#19)]\n [!code-vb[System.Decimal.Operators#19](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.operators/vb/modulus1.vb#19)]  \n  \n If the language you're using doesn't support custom operators, call the <xref:System.Decimal.Remainder%2A> method instead.  \n  \n The sign of the value return by the modulus operation depends on the sign of dividend. If dividend is positive, the modulus operation returns a positive result; if it is negative, the modulus operation returns a negative result.  \n  \n The equivalent method for this operator is <xref:System.Decimal.Remainder%28System.Decimal%2CSystem.Decimal%29?displayProperty=fullName>","nodes":[{"pos":[0,165],"content":"The <xref:System.Decimal.op_Modulus%2A> method defines the operation of the modulus operator for <xref:System.Decimal> values. It enables code such as the following:","nodes":[{"content":"The <xref:System.Decimal.op_Modulus%2A> method defines the operation of the modulus operator for <xref:System.Decimal> values. It enables code such as the following:","pos":[0,165],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Decimal.op_Modulus%2A&gt;</ph> method defines the operation of the modulus operator for <ph id=\"ph2\">&lt;xref:System.Decimal&gt;</ph> values.","pos":[0,126],"source":"The <xref:System.Decimal.op_Modulus%2A> method defines the operation of the modulus operator for <xref:System.Decimal> values."},{"content":"It enables code such as the following:","pos":[127,165]}]}]},{"pos":[172,447],"content":"<bpt id=\"p1\">[!code-csharp</bpt><bpt id=\"p2\">[</bpt>System.Decimal.Operators#19<ept id=\"p2\">](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.decimal.operators/cs/modulus1.cs#19)</ept><ept id=\"p1\">]</ept> <bpt id=\"p3\">[!code-vb</bpt><bpt id=\"p4\">[</bpt>System.Decimal.Operators#19<ept id=\"p4\">](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.operators/vb/modulus1.vb#19)</ept><ept id=\"p3\">]</ept>","source":"[!code-csharp[System.Decimal.Operators#19](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.decimal.operators/cs/modulus1.cs#19)]\n [!code-vb[System.Decimal.Operators#19](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.operators/vb/modulus1.vb#19)]"},{"pos":[454,576],"content":"If the language you're using doesn't support custom operators, call the <xref:System.Decimal.Remainder%2A> method instead.","nodes":[{"content":"If the language you're using doesn't support custom operators, call the <ph id=\"ph1\">&lt;xref:System.Decimal.Remainder%2A&gt;</ph> method instead.","pos":[0,122],"source":"If the language you're using doesn't support custom operators, call the <xref:System.Decimal.Remainder%2A> method instead."}]},{"pos":[583,811],"content":"The sign of the value return by the modulus operation depends on the sign of dividend. If dividend is positive, the modulus operation returns a positive result; if it is negative, the modulus operation returns a negative result.","nodes":[{"content":"The sign of the value return by the modulus operation depends on the sign of dividend. If dividend is positive, the modulus operation returns a positive result; if it is negative, the modulus operation returns a negative result.","pos":[0,228],"nodes":[{"content":"The sign of the value return by the modulus operation depends on the sign of dividend.","pos":[0,86]},{"content":"If dividend is positive, the modulus operation returns a positive result; if it is negative, the modulus operation returns a negative result.","pos":[87,228]}]}]},{"pos":[818,954],"content":"The equivalent method for this operator is <xref:System.Decimal.Remainder%28System.Decimal%2CSystem.Decimal%29?displayProperty=fullName>","nodes":[{"content":"The equivalent method for this operator is <ph id=\"ph1\">&lt;xref:System.Decimal.Remainder%28System.Decimal%2CSystem.Decimal%29?displayProperty=fullName&gt;</ph>","pos":[0,136],"source":"The equivalent method for this operator is <xref:System.Decimal.Remainder%28System.Decimal%2CSystem.Decimal%29?displayProperty=fullName>"}]}],"pos":[163050,164016],"yaml":true,"extradata":"MT"},{"content":"The dividend.","nodes":[{"pos":[0,13],"content":"The dividend.","nodes":[{"content":"The dividend.","pos":[0,13]}]}],"pos":[164173,164187],"yaml":true},{"content":"The divisor.","nodes":[{"pos":[0,12],"content":"The divisor.","nodes":[{"content":"The divisor.","pos":[0,12]}]}],"pos":[164246,164259],"yaml":true},{"content":"The remainder resulting from dividing <code>d1</code> by <code>d2</code>.","nodes":[{"pos":[0,73],"content":"The remainder resulting from dividing <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">d1</ph><ept id=\"p1\">&lt;/code&gt;</ept> by <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">d2</ph><ept id=\"p2\">&lt;/code&gt;</ept>.","source":"The remainder resulting from dividing <code>d1</code> by <code>d2</code>."}],"pos":[164317,164391],"yaml":true},{"content":"<code>d2</code> is `zero`.","nodes":[{"pos":[0,26],"content":"<ph id=\"ph1\">&lt;code&gt;d2&lt;/code&gt;</ph> is <ph id=\"ph2\">`zero`</ph>.","source":"<code>d2</code> is `zero`."}],"pos":[164546,164573],"yaml":true},{"content":"The return value is less than <xref href=\"System.Decimal.MinValue\"></xref> or greater than <xref href=\"System.Decimal.MaxValue\"></xref>.","nodes":[{"pos":[0,136],"content":"The return value is less than <ph id=\"ph1\">&lt;xref href=\"System.Decimal.MinValue\"&gt;&lt;/xref&gt;</ph> or greater than <ph id=\"ph2\">&lt;xref href=\"System.Decimal.MaxValue\"&gt;&lt;/xref&gt;</ph>.","source":"The return value is less than <xref href=\"System.Decimal.MinValue\"></xref> or greater than <xref href=\"System.Decimal.MaxValue\"></xref>."}],"pos":[164667,164804],"yaml":true},{"content":"Multiplies two specified <xref href=\"System.Decimal\"></xref> values.","nodes":[{"pos":[0,68],"content":"Multiplies two specified <ph id=\"ph1\">&lt;xref href=\"System.Decimal\"&gt;&lt;/xref&gt;</ph> values.","source":"Multiplies two specified <xref href=\"System.Decimal\"></xref> values."}],"pos":[166343,166412],"yaml":true},{"content":"The <xref:System.Decimal.op_Multiply%2A> method defines the operation of the multiplication operator for <xref:System.Decimal> values. It enables code such as the following:  \n  \n [!code-csharp[System.Decimal.Operators#20](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.decimal.operators/cs/multiply1.cs#20)]\n [!code-vb[System.Decimal.Operators#20](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.operators/vb/multiply1.vb#20)]  \n  \n If the language you're using doesn't support custom operators, call the <xref:System.Decimal.Multiply%2A> method instead.  \n  \n The equivalent method for this operator is <xref:System.Decimal.Multiply%28System.Decimal%2CSystem.Decimal%29?displayProperty=fullName>","nodes":[{"pos":[0,173],"content":"The <xref:System.Decimal.op_Multiply%2A> method defines the operation of the multiplication operator for <xref:System.Decimal> values. It enables code such as the following:","nodes":[{"content":"The <xref:System.Decimal.op_Multiply%2A> method defines the operation of the multiplication operator for <xref:System.Decimal> values. It enables code such as the following:","pos":[0,173],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Decimal.op_Multiply%2A&gt;</ph> method defines the operation of the multiplication operator for <ph id=\"ph2\">&lt;xref:System.Decimal&gt;</ph> values.","pos":[0,134],"source":"The <xref:System.Decimal.op_Multiply%2A> method defines the operation of the multiplication operator for <xref:System.Decimal> values."},{"content":"It enables code such as the following:","pos":[135,173]}]}]},{"pos":[180,457],"content":"<bpt id=\"p1\">[!code-csharp</bpt><bpt id=\"p2\">[</bpt>System.Decimal.Operators#20<ept id=\"p2\">](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.decimal.operators/cs/multiply1.cs#20)</ept><ept id=\"p1\">]</ept> <bpt id=\"p3\">[!code-vb</bpt><bpt id=\"p4\">[</bpt>System.Decimal.Operators#20<ept id=\"p4\">](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.operators/vb/multiply1.vb#20)</ept><ept id=\"p3\">]</ept>","source":"[!code-csharp[System.Decimal.Operators#20](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.decimal.operators/cs/multiply1.cs#20)]\n [!code-vb[System.Decimal.Operators#20](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.operators/vb/multiply1.vb#20)]"},{"pos":[464,585],"content":"If the language you're using doesn't support custom operators, call the <xref:System.Decimal.Multiply%2A> method instead.","nodes":[{"content":"If the language you're using doesn't support custom operators, call the <ph id=\"ph1\">&lt;xref:System.Decimal.Multiply%2A&gt;</ph> method instead.","pos":[0,121],"source":"If the language you're using doesn't support custom operators, call the <xref:System.Decimal.Multiply%2A> method instead."}]},{"pos":[592,727],"content":"The equivalent method for this operator is <xref:System.Decimal.Multiply%28System.Decimal%2CSystem.Decimal%29?displayProperty=fullName>","nodes":[{"content":"The equivalent method for this operator is <ph id=\"ph1\">&lt;xref:System.Decimal.Multiply%28System.Decimal%2CSystem.Decimal%29?displayProperty=fullName&gt;</ph>","pos":[0,135],"source":"The equivalent method for this operator is <xref:System.Decimal.Multiply%28System.Decimal%2CSystem.Decimal%29?displayProperty=fullName>"}]}],"pos":[166423,167160],"yaml":true,"extradata":"MT"},{"content":"The first value to multiply.","nodes":[{"pos":[0,28],"content":"The first value to multiply.","nodes":[{"content":"The first value to multiply.","pos":[0,28]}]}],"pos":[167318,167347],"yaml":true},{"content":"The second value to multiply.","nodes":[{"pos":[0,29],"content":"The second value to multiply.","nodes":[{"content":"The second value to multiply.","pos":[0,29]}]}],"pos":[167406,167436],"yaml":true},{"content":"The result of multiplying <code>d1</code> by <code>d2</code>.","nodes":[{"pos":[0,61],"content":"The result of multiplying <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">d1</ph><ept id=\"p1\">&lt;/code&gt;</ept> by <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">d2</ph><ept id=\"p2\">&lt;/code&gt;</ept>.","source":"The result of multiplying <code>d1</code> by <code>d2</code>."}],"pos":[167494,167556],"yaml":true},{"content":"The return value is less than <xref href=\"System.Decimal.MinValue\"></xref> or greater than <xref href=\"System.Decimal.MaxValue\"></xref>.","nodes":[{"pos":[0,136],"content":"The return value is less than <ph id=\"ph1\">&lt;xref href=\"System.Decimal.MinValue\"&gt;&lt;/xref&gt;</ph> or greater than <ph id=\"ph2\">&lt;xref href=\"System.Decimal.MaxValue\"&gt;&lt;/xref&gt;</ph>.","source":"The return value is less than <xref href=\"System.Decimal.MinValue\"></xref> or greater than <xref href=\"System.Decimal.MaxValue\"></xref>."}],"pos":[167704,167841],"yaml":true},{"content":"Subtracts two specified <xref href=\"System.Decimal\"></xref> values.","nodes":[{"pos":[0,67],"content":"Subtracts two specified <ph id=\"ph1\">&lt;xref href=\"System.Decimal\"&gt;&lt;/xref&gt;</ph> values.","source":"Subtracts two specified <xref href=\"System.Decimal\"></xref> values."}],"pos":[169415,169483],"yaml":true},{"content":"The <xref:System.Decimal.op_Subtraction%2A> method defines the operation of the subtraction operator for <xref:System.Decimal> values. It enables code such as the following:  \n  \n [!code-csharp[System.Decimal.Operators#21](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.decimal.operators/cs/subtraction1.cs#21)]\n [!code-vb[System.Decimal.Operators#21](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.operators/vb/subtraction1.vb#21)]  \n  \n If the language you're using doesn't support custom operators, call the <xref:System.Decimal.Subtract%2A> method instead.  \n  \n The equivalent method for this operator is <xref:System.Decimal.Subtract%28System.Decimal%2CSystem.Decimal%29?displayProperty=fullName>","nodes":[{"pos":[0,173],"content":"The <xref:System.Decimal.op_Subtraction%2A> method defines the operation of the subtraction operator for <xref:System.Decimal> values. It enables code such as the following:","nodes":[{"content":"The <xref:System.Decimal.op_Subtraction%2A> method defines the operation of the subtraction operator for <xref:System.Decimal> values. It enables code such as the following:","pos":[0,173],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Decimal.op_Subtraction%2A&gt;</ph> method defines the operation of the subtraction operator for <ph id=\"ph2\">&lt;xref:System.Decimal&gt;</ph> values.","pos":[0,134],"source":"The <xref:System.Decimal.op_Subtraction%2A> method defines the operation of the subtraction operator for <xref:System.Decimal> values."},{"content":"It enables code such as the following:","pos":[135,173]}]}]},{"pos":[180,463],"content":"<bpt id=\"p1\">[!code-csharp</bpt><bpt id=\"p2\">[</bpt>System.Decimal.Operators#21<ept id=\"p2\">](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.decimal.operators/cs/subtraction1.cs#21)</ept><ept id=\"p1\">]</ept> <bpt id=\"p3\">[!code-vb</bpt><bpt id=\"p4\">[</bpt>System.Decimal.Operators#21<ept id=\"p4\">](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.operators/vb/subtraction1.vb#21)</ept><ept id=\"p3\">]</ept>","source":"[!code-csharp[System.Decimal.Operators#21](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.decimal.operators/cs/subtraction1.cs#21)]\n [!code-vb[System.Decimal.Operators#21](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.operators/vb/subtraction1.vb#21)]"},{"pos":[470,591],"content":"If the language you're using doesn't support custom operators, call the <xref:System.Decimal.Subtract%2A> method instead.","nodes":[{"content":"If the language you're using doesn't support custom operators, call the <ph id=\"ph1\">&lt;xref:System.Decimal.Subtract%2A&gt;</ph> method instead.","pos":[0,121],"source":"If the language you're using doesn't support custom operators, call the <xref:System.Decimal.Subtract%2A> method instead."}]},{"pos":[598,733],"content":"The equivalent method for this operator is <xref:System.Decimal.Subtract%28System.Decimal%2CSystem.Decimal%29?displayProperty=fullName>","nodes":[{"content":"The equivalent method for this operator is <ph id=\"ph1\">&lt;xref:System.Decimal.Subtract%28System.Decimal%2CSystem.Decimal%29?displayProperty=fullName&gt;</ph>","pos":[0,135],"source":"The equivalent method for this operator is <xref:System.Decimal.Subtract%28System.Decimal%2CSystem.Decimal%29?displayProperty=fullName>"}]}],"pos":[169494,170237],"yaml":true,"extradata":"MT"},{"content":"The minuend.","nodes":[{"pos":[0,12],"content":"The minuend.","nodes":[{"content":"The minuend.","pos":[0,12]}]}],"pos":[170398,170411],"yaml":true},{"content":"The subtrahend.","nodes":[{"pos":[0,15],"content":"The subtrahend.","nodes":[{"content":"The subtrahend.","pos":[0,15]}]}],"pos":[170470,170486],"yaml":true},{"content":"The result of subtracting <code>d2</code> from <code>d1</code>.","nodes":[{"pos":[0,63],"content":"The result of subtracting <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">d2</ph><ept id=\"p1\">&lt;/code&gt;</ept> from <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">d1</ph><ept id=\"p2\">&lt;/code&gt;</ept>.","source":"The result of subtracting <code>d2</code> from <code>d1</code>."}],"pos":[170544,170608],"yaml":true},{"content":"The return value is less than <xref href=\"System.Decimal.MinValue\"></xref> or greater than <xref href=\"System.Decimal.MaxValue\"></xref>.","nodes":[{"pos":[0,136],"content":"The return value is less than <ph id=\"ph1\">&lt;xref href=\"System.Decimal.MinValue\"&gt;&lt;/xref&gt;</ph> or greater than <ph id=\"ph2\">&lt;xref href=\"System.Decimal.MaxValue\"&gt;&lt;/xref&gt;</ph>.","source":"The return value is less than <xref href=\"System.Decimal.MinValue\"></xref> or greater than <xref href=\"System.Decimal.MaxValue\"></xref>."}],"pos":[170759,170896],"yaml":true},{"content":"Negates the value of the specified <xref href=\"System.Decimal\"></xref> operand.","nodes":[{"pos":[0,79],"content":"Negates the value of the specified <ph id=\"ph1\">&lt;xref href=\"System.Decimal\"&gt;&lt;/xref&gt;</ph> operand.","source":"Negates the value of the specified <xref href=\"System.Decimal\"></xref> operand."}],"pos":[172410,172490],"yaml":true},{"content":"The <xref:System.Decimal.op_UnaryPlus%2A> method defines the operation of the unary negation operator (or the additive inverse operator) for <xref:System.Decimal> values. The operation produces a value that results in 0 (zero) when it is added to the original number. Languages that do not support custom operators can call the <xref:System.Decimal.Negate%2A> method instead.  \n  \n The equivalent method for this operator is <xref:System.Decimal.Negate%28System.Decimal%29?displayProperty=fullName>","nodes":[{"pos":[0,375],"content":"The <xref:System.Decimal.op_UnaryPlus%2A> method defines the operation of the unary negation operator (or the additive inverse operator) for <xref:System.Decimal> values. The operation produces a value that results in 0 (zero) when it is added to the original number. Languages that do not support custom operators can call the <xref:System.Decimal.Negate%2A> method instead.","nodes":[{"content":"The <xref:System.Decimal.op_UnaryPlus%2A> method defines the operation of the unary negation operator (or the additive inverse operator) for <xref:System.Decimal> values. The operation produces a value that results in 0 (zero) when it is added to the original number. Languages that do not support custom operators can call the <xref:System.Decimal.Negate%2A> method instead.","pos":[0,375],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Decimal.op_UnaryPlus%2A&gt;</ph> method defines the operation of the unary negation operator (or the additive inverse operator) for <ph id=\"ph2\">&lt;xref:System.Decimal&gt;</ph> values.","pos":[0,170],"source":"The <xref:System.Decimal.op_UnaryPlus%2A> method defines the operation of the unary negation operator (or the additive inverse operator) for <xref:System.Decimal> values."},{"content":"The operation produces a value that results in 0 (zero) when it is added to the original number.","pos":[171,267]},{"content":"Languages that do not support custom operators can call the <ph id=\"ph1\">&lt;xref:System.Decimal.Negate%2A&gt;</ph> method instead.","pos":[268,375],"source":" Languages that do not support custom operators can call the <xref:System.Decimal.Negate%2A> method instead."}]}]},{"pos":[382,498],"content":"The equivalent method for this operator is <xref:System.Decimal.Negate%28System.Decimal%29?displayProperty=fullName>","nodes":[{"content":"The equivalent method for this operator is <ph id=\"ph1\">&lt;xref:System.Decimal.Negate%28System.Decimal%29?displayProperty=fullName&gt;</ph>","pos":[0,116],"source":"The equivalent method for this operator is <xref:System.Decimal.Negate%28System.Decimal%29?displayProperty=fullName>"}]}],"pos":[172501,173004],"yaml":true,"extradata":"MT"},{"content":"The value to negate.","nodes":[{"pos":[0,20],"content":"The value to negate.","nodes":[{"content":"The value to negate.","pos":[0,20]}]}],"pos":[173153,173174],"yaml":true},{"content":"The result of <code>d</code> multiplied by negative one (-1).","nodes":[{"pos":[0,61],"content":"The result of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">d</ph><ept id=\"p1\">&lt;/code&gt;</ept> multiplied by negative one (-1).","source":"The result of <code>d</code> multiplied by negative one (-1)."}],"pos":[173232,173294],"yaml":true},{"content":"Returns the value of the <xref href=\"System.Decimal\"></xref> operand (the sign of the operand is unchanged).","nodes":[{"pos":[0,108],"content":"Returns the value of the <ph id=\"ph1\">&lt;xref href=\"System.Decimal\"&gt;&lt;/xref&gt;</ph> operand (the sign of the operand is unchanged).","source":"Returns the value of the <xref href=\"System.Decimal\"></xref> operand (the sign of the operand is unchanged)."}],"pos":[174829,174938],"yaml":true},{"content":"The <xref:System.Decimal.op_UnaryPlus%2A> method defines the operation of the unary positive operator for <xref:System.Decimal> values.","nodes":[{"pos":[0,135],"content":"The <xref:System.Decimal.op_UnaryPlus%2A> method defines the operation of the unary positive operator for <xref:System.Decimal> values.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Decimal.op_UnaryPlus%2A&gt;</ph> method defines the operation of the unary positive operator for <ph id=\"ph2\">&lt;xref:System.Decimal&gt;</ph> values.","pos":[0,135],"source":"The <xref:System.Decimal.op_UnaryPlus%2A> method defines the operation of the unary positive operator for <xref:System.Decimal> values."}]}],"pos":[174949,175085],"yaml":true,"extradata":"MT"},{"content":"The operand to return.","nodes":[{"pos":[0,22],"content":"The operand to return.","nodes":[{"content":"The operand to return.","pos":[0,22]}]}],"pos":[175230,175253],"yaml":true},{"content":"The value of the operand, <code>d</code>.","nodes":[{"pos":[0,41],"content":"The value of the operand, <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">d</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"The value of the operand, <code>d</code>."}],"pos":[175311,175353],"yaml":true},{"content":"Converts the string representation of a number to its <xref href=\"System.Decimal\"></xref> equivalent.","nodes":[{"pos":[0,101],"content":"Converts the string representation of a number to its <ph id=\"ph1\">&lt;xref href=\"System.Decimal\"&gt;&lt;/xref&gt;</ph> equivalent.","source":"Converts the string representation of a number to its <xref href=\"System.Decimal\"></xref> equivalent."}],"pos":[176834,176936],"yaml":true},{"content":"Parameter `s` contains a number of the form:  \n  \n [ws][sign][digits,]digits[.fractional-digits][ws]  \n  \n Elements in square brackets ([ and ]) are optional. The following table describes each element.  \n  \n|Element|Description|  \n|-------------|-----------------|  \n|*ws*|Optional white space.|  \n|*sign*|An optional sign.|  \n|*digits*|A sequence of digits ranging from 0 to 9.|  \n|*,*|A culture-specific thousands separator symbol.|  \n|*.*|A culture-specific decimal point symbol.|  \n|*fractional-digits*|A sequence of digits ranging from 0 to 9.|  \n  \n Parameter `s` is interpreted using the <xref:System.Globalization.NumberStyles?displayProperty=fullName> style. This means that white space and thousands separators are allowed but currency symbols are not. To explicitly define the elements (such as currency symbols, thousands separators, and white space) that can be present in `s`, use either the <xref:System.Decimal.Parse%28System.String%2CSystem.Globalization.NumberStyles%29?displayProperty=fullName> or the <xref:System.Decimal.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=fullName> method.  \n  \n Parameter `s` is parsed using the formatting information in a <xref:System.Globalization.NumberFormatInfo> initialized for the current system culture. For more information, see <xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A>. To parse a string using the formatting information of some other culture, use the <xref:System.Decimal.Parse%28System.String%2CSystem.IFormatProvider%29?displayProperty=fullName> or <xref:System.Decimal.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=fullName> method.  \n  \n If necessary, the value of `s` is rounded using rounding to nearest.  \n  \n A <xref:System.Decimal> has 29 digits of precision. If `s` represents a number that has more than 29 digits, but has a fractional part and is within the range of <xref:System.Decimal.MaxValue> and <xref:System.Decimal.MinValue>, the number is rounded, not truncated, to 29 digits using rounding to nearest.  \n  \n If during a parse operation a separator is encountered in the `s` parameter, and the applicable currency or number decimal and group separators are the same, the parse operation assumes that the separator is a decimal separator rather than a group separator. For more information about separators, see <xref:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator%2A>, <xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator%2A>, <xref:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator%2A>, and <xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A>.","nodes":[{"pos":[0,44],"content":"Parameter <ph id=\"ph1\">`s`</ph> contains a number of the form:","source":"Parameter `s` contains a number of the form:"},{"pos":[51,100],"content":"[ws][sign][digits,]digits[.fractional-digits][ws]","nodes":[{"content":"[ws][sign][digits,]digits[.fractional-digits][ws]","pos":[0,49]}]},{"pos":[107,202],"content":"Elements in square brackets ([ and ]) are optional. The following table describes each element.","nodes":[{"content":"Elements in square brackets ([ and ]) are optional. The following table describes each element.","pos":[0,95],"nodes":[{"content":"Elements in square brackets ([ and ]) are optional.","pos":[0,51]},{"content":"The following table describes each element.","pos":[52,95]}]}]},{"pos":[209,216],"content":"Element","nodes":[{"content":"Element","pos":[0,7]}]},{"pos":[217,228],"content":"Description","nodes":[{"content":"Description","pos":[0,11]}]},{"pos":[269,273],"content":"<bpt id=\"p1\">*</bpt>ws<ept id=\"p1\">*</ept>","source":"*ws*"},{"pos":[274,295],"content":"Optional white space.","nodes":[{"content":"Optional white space.","pos":[0,21]}]},{"pos":[300,306],"content":"<bpt id=\"p1\">*</bpt>sign<ept id=\"p1\">*</ept>","source":"*sign*"},{"pos":[307,324],"content":"An optional sign.","nodes":[{"content":"An optional sign.","pos":[0,17]}]},{"pos":[329,337],"content":"<bpt id=\"p1\">*</bpt>digits<ept id=\"p1\">*</ept>","source":"*digits*"},{"pos":[338,379],"content":"A sequence of digits ranging from 0 to 9.","nodes":[{"content":"A sequence of digits ranging from 0 to 9.","pos":[0,41]}]},{"pos":[384,387],"content":"<bpt id=\"p1\">*</bpt>,<ept id=\"p1\">*</ept>","source":"*,*"},{"pos":[388,434],"content":"A culture-specific thousands separator symbol.","nodes":[{"content":"A culture-specific thousands separator symbol.","pos":[0,46]}]},{"pos":[439,442],"content":"<bpt id=\"p1\">*</bpt>.<ept id=\"p1\">*</ept>","source":"*.*"},{"pos":[443,483],"content":"A culture-specific decimal point symbol.","nodes":[{"content":"A culture-specific decimal point symbol.","pos":[0,40]}]},{"pos":[488,507],"content":"<bpt id=\"p1\">*</bpt>fractional-digits<ept id=\"p1\">*</ept>","source":"*fractional-digits*"},{"pos":[508,549],"content":"A sequence of digits ranging from 0 to 9.","nodes":[{"content":"A sequence of digits ranging from 0 to 9.","pos":[0,41]}]},{"pos":[557,1162],"content":"Parameter `s` is interpreted using the <xref:System.Globalization.NumberStyles?displayProperty=fullName> style. This means that white space and thousands separators are allowed but currency symbols are not. To explicitly define the elements (such as currency symbols, thousands separators, and white space) that can be present in `s`, use either the <xref:System.Decimal.Parse%28System.String%2CSystem.Globalization.NumberStyles%29?displayProperty=fullName> or the <xref:System.Decimal.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=fullName> method.","nodes":[{"content":"Parameter <ph id=\"ph1\">`s`</ph> is interpreted using the <ph id=\"ph2\">&lt;xref:System.Globalization.NumberStyles?displayProperty=fullName&gt;</ph> style.","pos":[0,111],"source":"Parameter `s` is interpreted using the <xref:System.Globalization.NumberStyles?displayProperty=fullName> style."},{"content":"This means that white space and thousands separators are allowed but currency symbols are not.","pos":[112,206]},{"content":"To explicitly define the elements (such as currency symbols, thousands separators, and white space) that can be present in <ph id=\"ph1\">`s`</ph>, use either the <ph id=\"ph2\">&lt;xref:System.Decimal.Parse%28System.String%2CSystem.Globalization.NumberStyles%29?displayProperty=fullName&gt;</ph> or the <ph id=\"ph3\">&lt;xref:System.Decimal.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=fullName&gt;</ph> method.","pos":[207,605],"source":" To explicitly define the elements (such as currency symbols, thousands separators, and white space) that can be present in `s`, use either the <xref:System.Decimal.Parse%28System.String%2CSystem.Globalization.NumberStyles%29?displayProperty=fullName> or the <xref:System.Decimal.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=fullName> method."}]},{"pos":[1169,1729],"content":"Parameter `s` is parsed using the formatting information in a <xref:System.Globalization.NumberFormatInfo> initialized for the current system culture. For more information, see <xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A>. To parse a string using the formatting information of some other culture, use the <xref:System.Decimal.Parse%28System.String%2CSystem.IFormatProvider%29?displayProperty=fullName> or <xref:System.Decimal.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=fullName> method.","nodes":[{"content":"Parameter <ph id=\"ph1\">`s`</ph> is parsed using the formatting information in a <ph id=\"ph2\">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> initialized for the current system culture.","pos":[0,150],"source":"Parameter `s` is parsed using the formatting information in a <xref:System.Globalization.NumberFormatInfo> initialized for the current system culture."},{"content":"For more information, see <ph id=\"ph1\">&lt;xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A&gt;</ph>.","pos":[151,237],"source":" For more information, see <xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A>."},{"content":"To parse a string using the formatting information of some other culture, use the <ph id=\"ph1\">&lt;xref:System.Decimal.Parse%28System.String%2CSystem.IFormatProvider%29?displayProperty=fullName&gt;</ph> or <ph id=\"ph2\">&lt;xref:System.Decimal.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=fullName&gt;</ph> method.","pos":[238,560],"source":" To parse a string using the formatting information of some other culture, use the <xref:System.Decimal.Parse%28System.String%2CSystem.IFormatProvider%29?displayProperty=fullName> or <xref:System.Decimal.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=fullName> method."}]},{"pos":[1736,1804],"content":"If necessary, the value of <ph id=\"ph1\">`s`</ph> is rounded using rounding to nearest.","source":"If necessary, the value of `s` is rounded using rounding to nearest."},{"pos":[1811,2117],"content":"A <xref:System.Decimal> has 29 digits of precision. If `s` represents a number that has more than 29 digits, but has a fractional part and is within the range of <xref:System.Decimal.MaxValue> and <xref:System.Decimal.MinValue>, the number is rounded, not truncated, to 29 digits using rounding to nearest.","nodes":[{"content":"A <ph id=\"ph1\">&lt;xref:System.Decimal&gt;</ph> has 29 digits of precision.","pos":[0,51],"source":"A <xref:System.Decimal> has 29 digits of precision."},{"content":"If <ph id=\"ph1\">`s`</ph> represents a number that has more than 29 digits, but has a fractional part and is within the range of <ph id=\"ph2\">&lt;xref:System.Decimal.MaxValue&gt;</ph> and <ph id=\"ph3\">&lt;xref:System.Decimal.MinValue&gt;</ph>, the number is rounded, not truncated, to 29 digits using rounding to nearest.","pos":[52,306],"source":" If `s` represents a number that has more than 29 digits, but has a fractional part and is within the range of <xref:System.Decimal.MaxValue> and <xref:System.Decimal.MinValue>, the number is rounded, not truncated, to 29 digits using rounding to nearest."}]},{"pos":[2124,2717],"content":"If during a parse operation a separator is encountered in the `s` parameter, and the applicable currency or number decimal and group separators are the same, the parse operation assumes that the separator is a decimal separator rather than a group separator. For more information about separators, see <xref:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator%2A>, <xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator%2A>, <xref:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator%2A>, and <xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A>.","nodes":[{"content":"If during a parse operation a separator is encountered in the <ph id=\"ph1\">`s`</ph> parameter, and the applicable currency or number decimal and group separators are the same, the parse operation assumes that the separator is a decimal separator rather than a group separator.","pos":[0,258],"source":"If during a parse operation a separator is encountered in the `s` parameter, and the applicable currency or number decimal and group separators are the same, the parse operation assumes that the separator is a decimal separator rather than a group separator."},{"content":"For more information about separators, see <ph id=\"ph1\">&lt;xref:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator%2A&gt;</ph>, <ph id=\"ph2\">&lt;xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator%2A&gt;</ph>, <ph id=\"ph3\">&lt;xref:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator%2A&gt;</ph>, and <ph id=\"ph4\">&lt;xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A&gt;</ph>.","pos":[259,593],"source":" For more information about separators, see <xref:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator%2A>, <xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator%2A>, <xref:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator%2A>, and <xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A>."}]}],"pos":[176947,179690],"yaml":true,"extradata":"MT"},{"content":"The string representation of the number to convert.","nodes":[{"pos":[0,51],"content":"The string representation of the number to convert.","nodes":[{"content":"The string representation of the number to convert.","pos":[0,51]}]}],"pos":[180257,180309],"yaml":true},{"content":"The equivalent to the number contained in <code>s</code>.","nodes":[{"pos":[0,57],"content":"The equivalent to the number contained in <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">s</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"The equivalent to the number contained in <code>s</code>."}],"pos":[180367,180425],"yaml":true},{"content":"<code>s</code> is `null`.","nodes":[{"pos":[0,25],"content":"<ph id=\"ph1\">&lt;code&gt;s&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>s</code> is `null`."}],"pos":[180575,180601],"yaml":true},{"content":"<code>s</code> is not in the correct format.","nodes":[{"pos":[0,44],"content":"<ph id=\"ph1\">&lt;code&gt;s&lt;/code&gt;</ph> is not in the correct format.","source":"<code>s</code> is not in the correct format."}],"pos":[180691,180736],"yaml":true},{"content":"<code>s</code> represents a number less than <xref href=\"System.Decimal.MinValue\"></xref> or greater than <xref href=\"System.Decimal.MaxValue\"></xref>.","nodes":[{"pos":[0,151],"content":"<ph id=\"ph1\">&lt;code&gt;s&lt;/code&gt;</ph> represents a number less than <ph id=\"ph2\">&lt;xref href=\"System.Decimal.MinValue\"&gt;&lt;/xref&gt;</ph> or greater than <ph id=\"ph3\">&lt;xref href=\"System.Decimal.MaxValue\"&gt;&lt;/xref&gt;</ph>.","source":"<code>s</code> represents a number less than <xref href=\"System.Decimal.MinValue\"></xref> or greater than <xref href=\"System.Decimal.MaxValue\"></xref>."}],"pos":[180830,180982],"yaml":true},{"content":"Converts the string representation of a number in a specified style to its <xref href=\"System.Decimal\"></xref> equivalent.","nodes":[{"pos":[0,122],"content":"Converts the string representation of a number in a specified style to its <ph id=\"ph1\">&lt;xref href=\"System.Decimal\"&gt;&lt;/xref&gt;</ph> equivalent.","source":"Converts the string representation of a number in a specified style to its <xref href=\"System.Decimal\"></xref> equivalent."}],"pos":[182549,182672],"yaml":true},{"content":"The `style` parameter defines the style elements (such as thousands separators, white space, and currency symbols) that are allowed in the `s` parameter for the parse operation to succeed. It must be a combination of bit flags from the <xref:System.Globalization.NumberStyles> enumeration. The following <xref:System.Globalization.NumberStyles> members are not supported:  \n  \n-   <xref:System.Globalization.NumberStyles?displayProperty=fullName>  \n  \n-   <xref:System.Globalization.NumberStyles.HexNumber>  \n  \n Depending on the value of `style`, the `s` parameter may include the following elements:  \n  \n [ws][$][sign][digits,]digits[.fractional-digits][e[sign]digits][ws]  \n  \n Elements in square brackets ([ and ]) are optional. The following table describes each element.  \n  \n|Element|Description|  \n|-------------|-----------------|  \n|*ws*|Optional white space. White space can appear at the beginning of `s` if `style` includes the <xref:System.Globalization.NumberStyles?displayProperty=fullName> flag, and it can appear at the end of `s` if `style` includes the <xref:System.Globalization.NumberStyles?displayProperty=fullName> flag.|  \n|*$*|A culture-specific currency symbol. Its position in the string is defined by the <xref:System.Globalization.NumberFormatInfo.CurrencyNegativePattern%2A?displayProperty=fullName> and <xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A?displayProperty=fullName> properties of the current culture. The current culture's currency symbol can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles?displayProperty=fullName> flag.|  \n|*sign*|An optional sign. The sign can appear at the beginning of `s` if `style` includes the <xref:System.Globalization.NumberStyles?displayProperty=fullName> flag, and it can appear at the end of `s` if `style` includes the <xref:System.Globalization.NumberStyles?displayProperty=fullName> flag. Parentheses can be used in `s` to indicate a negative value if `style` includes the <xref:System.Globalization.NumberStyles?displayProperty=fullName> flag.|  \n|*digits*|A sequence of digits ranging from 0 to 9.|  \n|*,*|A culture-specific thousands separator symbol. The current culture's thousands separator can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles?displayProperty=fullName> flag.|  \n|*.*|A culture-specific decimal point symbol. The current culture's decimal point symbol can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles?displayProperty=fullName> flag.|  \n|*fractional-digits*|A sequence of digits ranging from 0 to 9. Fractional digits can appear in `s` only if `style` includes the <xref:System.Globalization.NumberStyles?displayProperty=fullName> flag.|  \n|*e*|The 'e' or 'E' character, which indicates that the value is represented in exponential notation. The `s` parameter can represent a number in exponential notation if `style` includes the <xref:System.Globalization.NumberStyles?displayProperty=fullName> flag.|  \n  \n A string with digits only (which corresponds to the <xref:System.Globalization.NumberStyles.None> style) always parses successfully. The remaining <xref:System.Globalization.NumberStyles> members control elements that may be but are not required to be present in the input string. The following table indicates how individual <xref:System.Globalization.NumberStyles> members affect the elements that may be present in `s`.  \n  \n|NumberStyles value|Elements permitted in s in addition to digits|  \n|------------------------|---------------------------------------------------|  \n|<xref:System.Globalization.NumberStyles.None>|The *digits* element only.|  \n|<xref:System.Globalization.NumberStyles.AllowDecimalPoint>|The *.* and *fractional-digits* elements.|  \n|<xref:System.Globalization.NumberStyles.AllowExponent>|The `s` parameter can also use exponential notation. This flag supports values in the form *digits*E*digits*; additional flags are needed to successfully parse strings with elements such as positive or negative signs and decimal point symbols.|  \n|<xref:System.Globalization.NumberStyles.AllowLeadingWhite>|The *ws* element at the beginning of `s`.|  \n|<xref:System.Globalization.NumberStyles.AllowTrailingWhite>|The *ws* element at the end of `s`.|  \n|<xref:System.Globalization.NumberStyles.AllowLeadingSign>|The *sign* element at the beginning of `s`.|  \n|<xref:System.Globalization.NumberStyles.AllowTrailingSign>|The *sign* element at the end of `s`.|  \n|<xref:System.Globalization.NumberStyles.AllowParentheses>|The *sign* element in the form of parentheses enclosing the numeric value.|  \n|<xref:System.Globalization.NumberStyles.AllowThousands>|The *,* element.|  \n|<xref:System.Globalization.NumberStyles.AllowCurrencySymbol>|The *$* element.|  \n|<xref:System.Globalization.NumberStyles.Currency>|All. The `s` parameter cannot represent a hexadecimal number or a number in exponential notation.|  \n|<xref:System.Globalization.NumberStyles.Float>|The *ws* element at the beginning or end of `s`, *sign* at the beginning of `s`, and the *.* symbol. The `s` parameter can also use exponential notation.|  \n|<xref:System.Globalization.NumberStyles.Number>|The `ws`, `sign`, *,*, and *.* elements.|  \n|<xref:System.Globalization.NumberStyles.Any>|All styles, except `s` cannot represent a hexadecimal number.|  \n  \n The `s` parameter is parsed using the formatting information in a <xref:System.Globalization.NumberFormatInfo> object initialized for the current system culture. For more information, see <xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A>.  \n  \n A <xref:System.Decimal> has 29 digits of precision. If `s` represents a number that has more than 29 digits, but has a fractional part and is within the range of <xref:System.Decimal.MaxValue> and <xref:System.Decimal.MinValue>, the number is rounded, not truncated, to 29 digits using rounding to nearest.  \n  \n If a separator is encountered in the `s` parameter during a parse operation, `styles` includes the <xref:System.Globalization.NumberStyles?displayProperty=fullName> and <xref:System.Globalization.NumberStyles?displayProperty=fullName> values, and the applicable currency or number decimal and group separators are the same, the parse operation assumes that the separator is a decimal separator rather than a group separator. For more information about separators, see <xref:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator%2A>, <xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator%2A>, <xref:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator%2A>, and <xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A>.","nodes":[{"pos":[0,371],"content":"The `style` parameter defines the style elements (such as thousands separators, white space, and currency symbols) that are allowed in the `s` parameter for the parse operation to succeed. It must be a combination of bit flags from the <xref:System.Globalization.NumberStyles> enumeration. The following <xref:System.Globalization.NumberStyles> members are not supported:","nodes":[{"content":"The <ph id=\"ph1\">`style`</ph> parameter defines the style elements (such as thousands separators, white space, and currency symbols) that are allowed in the <ph id=\"ph2\">`s`</ph> parameter for the parse operation to succeed.","pos":[0,188],"source":"The `style` parameter defines the style elements (such as thousands separators, white space, and currency symbols) that are allowed in the `s` parameter for the parse operation to succeed."},{"content":"It must be a combination of bit flags from the <ph id=\"ph1\">&lt;xref:System.Globalization.NumberStyles&gt;</ph> enumeration.","pos":[189,289],"source":" It must be a combination of bit flags from the <xref:System.Globalization.NumberStyles> enumeration."},{"content":"The following <ph id=\"ph1\">&lt;xref:System.Globalization.NumberStyles&gt;</ph> members are not supported:","pos":[290,371],"source":" The following <xref:System.Globalization.NumberStyles> members are not supported:"}]},{"pos":[381,446],"content":"<xref:System.Globalization.NumberStyles?displayProperty=fullName>","nodes":[]},{"pos":[456,506],"content":"<xref:System.Globalization.NumberStyles.HexNumber>","nodes":[]},{"pos":[513,601],"content":"Depending on the value of <ph id=\"ph1\">`style`</ph>, the <ph id=\"ph2\">`s`</ph> parameter may include the following elements:","source":"Depending on the value of `style`, the `s` parameter may include the following elements:"},{"pos":[608,675],"content":"[ws][$][sign][digits,]digits[.fractional-digits][e[sign]digits][ws]","nodes":[{"content":"[ws][$][sign][digits,]digits[.fractional-digits][e[sign]digits][ws]","pos":[0,67]}]},{"pos":[682,777],"content":"Elements in square brackets ([ and ]) are optional. The following table describes each element.","nodes":[{"content":"Elements in square brackets ([ and ]) are optional. The following table describes each element.","pos":[0,95],"nodes":[{"content":"Elements in square brackets ([ and ]) are optional.","pos":[0,51]},{"content":"The following table describes each element.","pos":[52,95]}]}]},{"pos":[784,791],"content":"Element","nodes":[{"content":"Element","pos":[0,7]}]},{"pos":[792,803],"content":"Description","nodes":[{"content":"Description","pos":[0,11]}]},{"pos":[844,848],"content":"<bpt id=\"p1\">*</bpt>ws<ept id=\"p1\">*</ept>","source":"*ws*"},{"pos":[849,1145],"content":"Optional white space. White space can appear at the beginning of `s` if `style` includes the <xref:System.Globalization.NumberStyles?displayProperty=fullName> flag, and it can appear at the end of `s` if `style` includes the <xref:System.Globalization.NumberStyles?displayProperty=fullName> flag.","nodes":[{"content":"Optional white space.","pos":[0,21]},{"content":"White space can appear at the beginning of <ph id=\"ph1\">`s`</ph> if <ph id=\"ph2\">`style`</ph> includes the <ph id=\"ph3\">&lt;xref:System.Globalization.NumberStyles?displayProperty=fullName&gt;</ph> flag, and it can appear at the end of <ph id=\"ph4\">`s`</ph> if <ph id=\"ph5\">`style`</ph> includes the <ph id=\"ph6\">&lt;xref:System.Globalization.NumberStyles?displayProperty=fullName&gt;</ph> flag.","pos":[22,296],"source":" White space can appear at the beginning of `s` if `style` includes the <xref:System.Globalization.NumberStyles?displayProperty=fullName> flag, and it can appear at the end of `s` if `style` includes the <xref:System.Globalization.NumberStyles?displayProperty=fullName> flag."}]},{"pos":[1154,1619],"content":"A culture-specific currency symbol. Its position in the string is defined by the <xref:System.Globalization.NumberFormatInfo.CurrencyNegativePattern%2A?displayProperty=fullName> and <xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A?displayProperty=fullName> properties of the current culture. The current culture's currency symbol can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles?displayProperty=fullName> flag.","nodes":[{"content":"A culture-specific currency symbol.","pos":[0,35]},{"content":"Its position in the string is defined by the <ph id=\"ph1\">&lt;xref:System.Globalization.NumberFormatInfo.CurrencyNegativePattern%2A?displayProperty=fullName&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A?displayProperty=fullName&gt;</ph> properties of the current culture.","pos":[36,313],"source":" Its position in the string is defined by the <xref:System.Globalization.NumberFormatInfo.CurrencyNegativePattern%2A?displayProperty=fullName> and <xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A?displayProperty=fullName> properties of the current culture."},{"content":"The current culture's currency symbol can appear in <ph id=\"ph1\">`s`</ph> if <ph id=\"ph2\">`style`</ph> includes the <ph id=\"ph3\">&lt;xref:System.Globalization.NumberStyles?displayProperty=fullName&gt;</ph> flag.","pos":[314,465],"source":" The current culture's currency symbol can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles?displayProperty=fullName> flag."}]},{"pos":[1624,1630],"content":"<bpt id=\"p1\">*</bpt>sign<ept id=\"p1\">*</ept>","source":"*sign*"},{"pos":[1631,2076],"content":"An optional sign. The sign can appear at the beginning of `s` if `style` includes the <xref:System.Globalization.NumberStyles?displayProperty=fullName> flag, and it can appear at the end of `s` if `style` includes the <xref:System.Globalization.NumberStyles?displayProperty=fullName> flag. Parentheses can be used in `s` to indicate a negative value if `style` includes the <xref:System.Globalization.NumberStyles?displayProperty=fullName> flag.","nodes":[{"content":"An optional sign.","pos":[0,17]},{"content":"The sign can appear at the beginning of <ph id=\"ph1\">`s`</ph> if <ph id=\"ph2\">`style`</ph> includes the <ph id=\"ph3\">&lt;xref:System.Globalization.NumberStyles?displayProperty=fullName&gt;</ph> flag, and it can appear at the end of <ph id=\"ph4\">`s`</ph> if <ph id=\"ph5\">`style`</ph> includes the <ph id=\"ph6\">&lt;xref:System.Globalization.NumberStyles?displayProperty=fullName&gt;</ph> flag.","pos":[18,289],"source":" The sign can appear at the beginning of `s` if `style` includes the <xref:System.Globalization.NumberStyles?displayProperty=fullName> flag, and it can appear at the end of `s` if `style` includes the <xref:System.Globalization.NumberStyles?displayProperty=fullName> flag."},{"content":"Parentheses can be used in <ph id=\"ph1\">`s`</ph> to indicate a negative value if <ph id=\"ph2\">`style`</ph> includes the <ph id=\"ph3\">&lt;xref:System.Globalization.NumberStyles?displayProperty=fullName&gt;</ph> flag.","pos":[290,445],"source":" Parentheses can be used in `s` to indicate a negative value if `style` includes the <xref:System.Globalization.NumberStyles?displayProperty=fullName> flag."}]},{"pos":[2081,2089],"content":"<bpt id=\"p1\">*</bpt>digits<ept id=\"p1\">*</ept>","source":"*digits*"},{"pos":[2090,2131],"content":"A sequence of digits ranging from 0 to 9.","nodes":[{"content":"A sequence of digits ranging from 0 to 9.","pos":[0,41]}]},{"pos":[2136,2139],"content":"<bpt id=\"p1\">*</bpt>,<ept id=\"p1\">*</ept>","source":"*,*"},{"pos":[2140,2342],"content":"A culture-specific thousands separator symbol. The current culture's thousands separator can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles?displayProperty=fullName> flag.","nodes":[{"content":"A culture-specific thousands separator symbol.","pos":[0,46]},{"content":"The current culture's thousands separator can appear in <ph id=\"ph1\">`s`</ph> if <ph id=\"ph2\">`style`</ph> includes the <ph id=\"ph3\">&lt;xref:System.Globalization.NumberStyles?displayProperty=fullName&gt;</ph> flag.","pos":[47,202],"source":" The current culture's thousands separator can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles?displayProperty=fullName> flag."}]},{"pos":[2347,2350],"content":"<bpt id=\"p1\">*</bpt>.<ept id=\"p1\">*</ept>","source":"*.*"},{"pos":[2351,2548],"content":"A culture-specific decimal point symbol. The current culture's decimal point symbol can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles?displayProperty=fullName> flag.","nodes":[{"content":"A culture-specific decimal point symbol.","pos":[0,40]},{"content":"The current culture's decimal point symbol can appear in <ph id=\"ph1\">`s`</ph> if <ph id=\"ph2\">`style`</ph> includes the <ph id=\"ph3\">&lt;xref:System.Globalization.NumberStyles?displayProperty=fullName&gt;</ph> flag.","pos":[41,197],"source":" The current culture's decimal point symbol can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles?displayProperty=fullName> flag."}]},{"pos":[2553,2572],"content":"<bpt id=\"p1\">*</bpt>fractional-digits<ept id=\"p1\">*</ept>","source":"*fractional-digits*"},{"pos":[2573,2751],"content":"A sequence of digits ranging from 0 to 9. Fractional digits can appear in `s` only if `style` includes the <xref:System.Globalization.NumberStyles?displayProperty=fullName> flag.","nodes":[{"content":"A sequence of digits ranging from 0 to 9.","pos":[0,41]},{"content":"Fractional digits can appear in <ph id=\"ph1\">`s`</ph> only if <ph id=\"ph2\">`style`</ph> includes the <ph id=\"ph3\">&lt;xref:System.Globalization.NumberStyles?displayProperty=fullName&gt;</ph> flag.","pos":[42,178],"source":" Fractional digits can appear in `s` only if `style` includes the <xref:System.Globalization.NumberStyles?displayProperty=fullName> flag."}]},{"pos":[2756,2759],"content":"<bpt id=\"p1\">*</bpt>e<ept id=\"p1\">*</ept>","source":"*e*"},{"pos":[2760,3017],"content":"The 'e' or 'E' character, which indicates that the value is represented in exponential notation. The `s` parameter can represent a number in exponential notation if `style` includes the <xref:System.Globalization.NumberStyles?displayProperty=fullName> flag.","nodes":[{"content":"The 'e' or 'E' character, which indicates that the value is represented in exponential notation.","pos":[0,96]},{"content":"The <ph id=\"ph1\">`s`</ph> parameter can represent a number in exponential notation if <ph id=\"ph2\">`style`</ph> includes the <ph id=\"ph3\">&lt;xref:System.Globalization.NumberStyles?displayProperty=fullName&gt;</ph> flag.","pos":[97,257],"source":" The `s` parameter can represent a number in exponential notation if `style` includes the <xref:System.Globalization.NumberStyles?displayProperty=fullName> flag."}]},{"pos":[3025,3447],"content":"A string with digits only (which corresponds to the <xref:System.Globalization.NumberStyles.None> style) always parses successfully. The remaining <xref:System.Globalization.NumberStyles> members control elements that may be but are not required to be present in the input string. The following table indicates how individual <xref:System.Globalization.NumberStyles> members affect the elements that may be present in `s`.","nodes":[{"content":"A string with digits only (which corresponds to the <ph id=\"ph1\">&lt;xref:System.Globalization.NumberStyles.None&gt;</ph> style) always parses successfully.","pos":[0,132],"source":"A string with digits only (which corresponds to the <xref:System.Globalization.NumberStyles.None> style) always parses successfully."},{"content":"The remaining <ph id=\"ph1\">&lt;xref:System.Globalization.NumberStyles&gt;</ph> members control elements that may be but are not required to be present in the input string.","pos":[133,280],"source":" The remaining <xref:System.Globalization.NumberStyles> members control elements that may be but are not required to be present in the input string."},{"content":"The following table indicates how individual <ph id=\"ph1\">&lt;xref:System.Globalization.NumberStyles&gt;</ph> members affect the elements that may be present in <ph id=\"ph2\">`s`</ph>.","pos":[281,422],"source":" The following table indicates how individual <xref:System.Globalization.NumberStyles> members affect the elements that may be present in `s`."}]},{"pos":[3454,3472],"content":"NumberStyles value","nodes":[{"content":"NumberStyles value","pos":[0,18]}]},{"pos":[3473,3518],"content":"Elements permitted in s in addition to digits","nodes":[{"content":"Elements permitted in s in addition to digits","pos":[0,45]}]},{"pos":[3604,3649],"content":"<xref:System.Globalization.NumberStyles.None>","nodes":[]},{"pos":[3650,3676],"content":"The <bpt id=\"p1\">*</bpt>digits<ept id=\"p1\">*</ept> element only.","source":"The *digits* element only."},{"pos":[3681,3739],"content":"<xref:System.Globalization.NumberStyles.AllowDecimalPoint>","nodes":[]},{"pos":[3740,3781],"content":"The *.* and *fractional-digits* elements.","nodes":[{"content":"The <bpt id=\"p1\">*</bpt>.<ept id=\"p1\">*</ept>","pos":[0,7],"source":"The *.*"},{"content":"and <bpt id=\"p1\">*</bpt>fractional-digits<ept id=\"p1\">*</ept> elements.","pos":[8,41],"source":" and *fractional-digits* elements."}]},{"pos":[3786,3840],"content":"<xref:System.Globalization.NumberStyles.AllowExponent>","nodes":[]},{"pos":[3841,4084],"content":"The `s` parameter can also use exponential notation. This flag supports values in the form *digits*E*digits*; additional flags are needed to successfully parse strings with elements such as positive or negative signs and decimal point symbols.","nodes":[{"content":"The <ph id=\"ph1\">`s`</ph> parameter can also use exponential notation.","pos":[0,52],"source":"The `s` parameter can also use exponential notation."},{"content":"This flag supports values in the form <bpt id=\"p1\">*</bpt>digits<ept id=\"p1\">*</ept>E<bpt id=\"p2\">*</bpt>digits<ept id=\"p2\">*</ept>; additional flags are needed to successfully parse strings with elements such as positive or negative signs and decimal point symbols.","pos":[53,243],"source":" This flag supports values in the form *digits*E*digits*; additional flags are needed to successfully parse strings with elements such as positive or negative signs and decimal point symbols."}]},{"pos":[4089,4147],"content":"<xref:System.Globalization.NumberStyles.AllowLeadingWhite>","nodes":[]},{"pos":[4148,4189],"content":"The <bpt id=\"p1\">*</bpt>ws<ept id=\"p1\">*</ept> element at the beginning of <ph id=\"ph1\">`s`</ph>.","source":"The *ws* element at the beginning of `s`."},{"pos":[4194,4253],"content":"<xref:System.Globalization.NumberStyles.AllowTrailingWhite>","nodes":[]},{"pos":[4254,4289],"content":"The <bpt id=\"p1\">*</bpt>ws<ept id=\"p1\">*</ept> element at the end of <ph id=\"ph1\">`s`</ph>.","source":"The *ws* element at the end of `s`."},{"pos":[4294,4351],"content":"<xref:System.Globalization.NumberStyles.AllowLeadingSign>","nodes":[]},{"pos":[4352,4395],"content":"The <bpt id=\"p1\">*</bpt>sign<ept id=\"p1\">*</ept> element at the beginning of <ph id=\"ph1\">`s`</ph>.","source":"The *sign* element at the beginning of `s`."},{"pos":[4400,4458],"content":"<xref:System.Globalization.NumberStyles.AllowTrailingSign>","nodes":[]},{"pos":[4459,4496],"content":"The <bpt id=\"p1\">*</bpt>sign<ept id=\"p1\">*</ept> element at the end of <ph id=\"ph1\">`s`</ph>.","source":"The *sign* element at the end of `s`."},{"pos":[4501,4558],"content":"<xref:System.Globalization.NumberStyles.AllowParentheses>","nodes":[]},{"pos":[4559,4633],"content":"The <bpt id=\"p1\">*</bpt>sign<ept id=\"p1\">*</ept> element in the form of parentheses enclosing the numeric value.","source":"The *sign* element in the form of parentheses enclosing the numeric value."},{"pos":[4638,4693],"content":"<xref:System.Globalization.NumberStyles.AllowThousands>","nodes":[]},{"pos":[4694,4710],"content":"The <bpt id=\"p1\">*</bpt>,<ept id=\"p1\">*</ept> element.","source":"The *,* element."},{"pos":[4715,4775],"content":"<xref:System.Globalization.NumberStyles.AllowCurrencySymbol>","nodes":[]},{"pos":[4776,4792],"content":"The <bpt id=\"p1\">*</bpt><ph id=\"ph1\">$</ph><ept id=\"p1\">*</ept> element.","source":"The *$* element."},{"pos":[4797,4846],"content":"<xref:System.Globalization.NumberStyles.Currency>","nodes":[]},{"pos":[4847,4944],"content":"All. The `s` parameter cannot represent a hexadecimal number or a number in exponential notation.","nodes":[{"content":"All.","pos":[0,4]},{"content":"The <ph id=\"ph1\">`s`</ph> parameter cannot represent a hexadecimal number or a number in exponential notation.","pos":[5,97],"source":" The `s` parameter cannot represent a hexadecimal number or a number in exponential notation."}]},{"pos":[4949,4995],"content":"<xref:System.Globalization.NumberStyles.Float>","nodes":[]},{"pos":[4996,5149],"content":"The *ws* element at the beginning or end of `s`, *sign* at the beginning of `s`, and the *.* symbol. The `s` parameter can also use exponential notation.","nodes":[{"content":"The <bpt id=\"p1\">*</bpt>ws<ept id=\"p1\">*</ept> element at the beginning or end of <ph id=\"ph1\">`s`</ph>, <bpt id=\"p2\">*</bpt>sign<ept id=\"p2\">*</ept> at the beginning of <ph id=\"ph2\">`s`</ph>, and the <bpt id=\"p3\">*</bpt>.<ept id=\"p3\">*</ept>","pos":[0,92],"source":"The *ws* element at the beginning or end of `s`, *sign* at the beginning of `s`, and the *.*"},{"content":"symbol.","pos":[93,100]},{"content":"The <ph id=\"ph1\">`s`</ph> parameter can also use exponential notation.","pos":[101,153],"source":" The `s` parameter can also use exponential notation."}]},{"pos":[5154,5201],"content":"<xref:System.Globalization.NumberStyles.Number>","nodes":[]},{"pos":[5202,5242],"content":"The `ws`, `sign`, *,*, and *.* elements.","nodes":[{"content":"The <ph id=\"ph1\">`ws`</ph>, <ph id=\"ph2\">`sign`</ph>, <bpt id=\"p1\">*</bpt>,<ept id=\"p1\">*</ept>, and <bpt id=\"p2\">*</bpt>.<ept id=\"p2\">*</ept>","pos":[0,30],"source":"The `ws`, `sign`, *,*, and *.*"},{"content":"elements.","pos":[31,40]}]},{"pos":[5247,5291],"content":"<xref:System.Globalization.NumberStyles.Any>","nodes":[]},{"pos":[5292,5353],"content":"All styles, except <ph id=\"ph1\">`s`</ph> cannot represent a hexadecimal number.","source":"All styles, except `s` cannot represent a hexadecimal number."},{"pos":[5361,5609],"content":"The `s` parameter is parsed using the formatting information in a <xref:System.Globalization.NumberFormatInfo> object initialized for the current system culture. For more information, see <xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A>.","nodes":[{"content":"The <ph id=\"ph1\">`s`</ph> parameter is parsed using the formatting information in a <ph id=\"ph2\">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object initialized for the current system culture.","pos":[0,161],"source":"The `s` parameter is parsed using the formatting information in a <xref:System.Globalization.NumberFormatInfo> object initialized for the current system culture."},{"content":"For more information, see <ph id=\"ph1\">&lt;xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A&gt;</ph>.","pos":[162,248],"source":" For more information, see <xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A>."}]},{"pos":[5616,5922],"content":"A <xref:System.Decimal> has 29 digits of precision. If `s` represents a number that has more than 29 digits, but has a fractional part and is within the range of <xref:System.Decimal.MaxValue> and <xref:System.Decimal.MinValue>, the number is rounded, not truncated, to 29 digits using rounding to nearest.","nodes":[{"content":"A <ph id=\"ph1\">&lt;xref:System.Decimal&gt;</ph> has 29 digits of precision.","pos":[0,51],"source":"A <xref:System.Decimal> has 29 digits of precision."},{"content":"If <ph id=\"ph1\">`s`</ph> represents a number that has more than 29 digits, but has a fractional part and is within the range of <ph id=\"ph2\">&lt;xref:System.Decimal.MaxValue&gt;</ph> and <ph id=\"ph3\">&lt;xref:System.Decimal.MinValue&gt;</ph>, the number is rounded, not truncated, to 29 digits using rounding to nearest.","pos":[52,306],"source":" If `s` represents a number that has more than 29 digits, but has a fractional part and is within the range of <xref:System.Decimal.MaxValue> and <xref:System.Decimal.MinValue>, the number is rounded, not truncated, to 29 digits using rounding to nearest."}]},{"pos":[5929,6688],"content":"If a separator is encountered in the `s` parameter during a parse operation, `styles` includes the <xref:System.Globalization.NumberStyles?displayProperty=fullName> and <xref:System.Globalization.NumberStyles?displayProperty=fullName> values, and the applicable currency or number decimal and group separators are the same, the parse operation assumes that the separator is a decimal separator rather than a group separator. For more information about separators, see <xref:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator%2A>, <xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator%2A>, <xref:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator%2A>, and <xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A>.","nodes":[{"content":"If a separator is encountered in the <ph id=\"ph1\">`s`</ph> parameter during a parse operation, <ph id=\"ph2\">`styles`</ph> includes the <ph id=\"ph3\">&lt;xref:System.Globalization.NumberStyles?displayProperty=fullName&gt;</ph> and <ph id=\"ph4\">&lt;xref:System.Globalization.NumberStyles?displayProperty=fullName&gt;</ph> values, and the applicable currency or number decimal and group separators are the same, the parse operation assumes that the separator is a decimal separator rather than a group separator.","pos":[0,424],"source":"If a separator is encountered in the `s` parameter during a parse operation, `styles` includes the <xref:System.Globalization.NumberStyles?displayProperty=fullName> and <xref:System.Globalization.NumberStyles?displayProperty=fullName> values, and the applicable currency or number decimal and group separators are the same, the parse operation assumes that the separator is a decimal separator rather than a group separator."},{"content":"For more information about separators, see <ph id=\"ph1\">&lt;xref:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator%2A&gt;</ph>, <ph id=\"ph2\">&lt;xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator%2A&gt;</ph>, <ph id=\"ph3\">&lt;xref:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator%2A&gt;</ph>, and <ph id=\"ph4\">&lt;xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A&gt;</ph>.","pos":[425,759],"source":" For more information about separators, see <xref:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator%2A>, <xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator%2A>, <xref:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator%2A>, and <xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A>."}]}],"pos":[182683,189420],"yaml":true,"extradata":"MT"},{"content":"The string representation of the number to convert.","nodes":[{"pos":[0,51],"content":"The string representation of the number to convert.","nodes":[{"content":"The string representation of the number to convert.","pos":[0,51]}]}],"pos":[190092,190144],"yaml":true},{"content":"A bitwise combination of <xref href=\"System.Globalization.NumberStyles\"></xref> values that indicates the style elements that can be present in <code>s</code>. A typical value to specify is <xref href=\"System.Globalization.NumberStyles.Number\"></xref>.","nodes":[{"pos":[0,252],"content":"A bitwise combination of <xref href=\"System.Globalization.NumberStyles\"></xref> values that indicates the style elements that can be present in <code>s</code>. A typical value to specify is <xref href=\"System.Globalization.NumberStyles.Number\"></xref>.","nodes":[{"content":"A bitwise combination of <ph id=\"ph1\">&lt;xref href=\"System.Globalization.NumberStyles\"&gt;&lt;/xref&gt;</ph> values that indicates the style elements that can be present in <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">s</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","pos":[0,159],"source":"A bitwise combination of <xref href=\"System.Globalization.NumberStyles\"></xref> values that indicates the style elements that can be present in <code>s</code>."},{"content":"A typical value to specify is <ph id=\"ph1\">&lt;xref href=\"System.Globalization.NumberStyles.Number\"&gt;&lt;/xref&gt;</ph>.","pos":[160,252],"source":" A typical value to specify is <xref href=\"System.Globalization.NumberStyles.Number\"></xref>."}]}],"pos":[190225,190478],"yaml":true},{"content":"The <xref href=\"System.Decimal\"></xref> number equivalent to the number contained in <code>s</code> as specified by <code>style</code>.","nodes":[{"pos":[0,135],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Decimal\"&gt;&lt;/xref&gt;</ph> number equivalent to the number contained in <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">s</ph><ept id=\"p1\">&lt;/code&gt;</ept> as specified by <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph3\">style</ph><ept id=\"p2\">&lt;/code&gt;</ept>.","source":"The <xref href=\"System.Decimal\"></xref> number equivalent to the number contained in <code>s</code> as specified by <code>style</code>."}],"pos":[190536,190672],"yaml":true},{"content":"<code>s</code> is `null`.","nodes":[{"pos":[0,25],"content":"<ph id=\"ph1\">&lt;code&gt;s&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>s</code> is `null`."}],"pos":[190822,190848],"yaml":true},{"content":"<code>style</code> is not a <xref href=\"System.Globalization.NumberStyles\"></xref> value.  \n  \n -or-  \n  \n <code>style</code> is the <xref href=\"System.Globalization.NumberStyles.AllowHexSpecifier\"></xref> value.","nodes":[{"pos":[0,89],"content":"<ph id=\"ph1\">&lt;code&gt;style&lt;/code&gt;</ph> is not a <ph id=\"ph2\">&lt;xref href=\"System.Globalization.NumberStyles\"&gt;&lt;/xref&gt;</ph> value.","source":"<code>style</code> is not a <xref href=\"System.Globalization.NumberStyles\"></xref> value."},{"pos":[96,100],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[107,212],"content":"<ph id=\"ph1\">&lt;code&gt;style&lt;/code&gt;</ph> is the <ph id=\"ph2\">&lt;xref href=\"System.Globalization.NumberStyles.AllowHexSpecifier\"&gt;&lt;/xref&gt;</ph> value.","source":"<code>style</code> is the <xref href=\"System.Globalization.NumberStyles.AllowHexSpecifier\"></xref> value."}],"pos":[190942,191165],"yaml":true},{"content":"<code>s</code> is not in the correct format.","nodes":[{"pos":[0,44],"content":"<ph id=\"ph1\">&lt;code&gt;s&lt;/code&gt;</ph> is not in the correct format.","source":"<code>s</code> is not in the correct format."}],"pos":[191255,191300],"yaml":true},{"content":"<code>s</code> represents a number less than <xref href=\"System.Decimal.MinValue\"></xref> or greater than <xref href=\"System.Decimal.MaxValue\"></xref>","nodes":[{"pos":[0,150],"content":"<ph id=\"ph1\">&lt;code&gt;s&lt;/code&gt;</ph> represents a number less than <ph id=\"ph2\">&lt;xref href=\"System.Decimal.MinValue\"&gt;&lt;/xref&gt;</ph> or greater than <ph id=\"ph3\">&lt;xref href=\"System.Decimal.MaxValue\"&gt;&lt;/xref&gt;</ph>","source":"<code>s</code> represents a number less than <xref href=\"System.Decimal.MinValue\"></xref> or greater than <xref href=\"System.Decimal.MaxValue\"></xref>"}],"pos":[191394,191545],"yaml":true},{"content":"Converts the string representation of a number to its <xref href=\"System.Decimal\"></xref> equivalent using the specified culture-specific format information.","nodes":[{"pos":[0,157],"content":"Converts the string representation of a number to its <ph id=\"ph1\">&lt;xref href=\"System.Decimal\"&gt;&lt;/xref&gt;</ph> equivalent using the specified culture-specific format information.","source":"Converts the string representation of a number to its <xref href=\"System.Decimal\"></xref> equivalent using the specified culture-specific format information."}],"pos":[193088,193246],"yaml":true},{"content":"This overload of the <xref:System.Decimal.Parse%28System.String%2CSystem.IFormatProvider%29> method is commonly used to convert text that can be formatted in a variety of ways to a <xref:System.Decimal> value. For example, it can be used to convert the text entered by a user into an HTML text box to a numeric value.  \n  \n The `s` parameter contains a number of the form:  \n  \n [ws][sign][digits,]digits[.fractional-digits][ws]  \n  \n Elements in square brackets ([ and ]) are optional. The following table describes each element.  \n  \n|Element|Description|  \n|-------------|-----------------|  \n|*ws*|Optional white space.|  \n|*sign*|An optional sign.|  \n|*digits*|A sequence of digits ranging from 0 to 9.|  \n|*,*|A culture-specific thousands separator symbol.|  \n|*.*|A culture-specific decimal point symbol.|  \n|*fractional-digits*|A sequence of digits ranging from 0 to 9.|  \n  \n The `s` parameter is interpreted using the <xref:System.Globalization.NumberStyles?displayProperty=fullName> style. This means that white space and thousands separators are allowed but currency symbols are not. To explicitly define the elements (such as currency symbols, thousands separators, and white space) that can be present in `s`, use the <xref:System.Decimal.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=fullName> method.  \n  \n The `provider` parameter is an <xref:System.IFormatProvider> implementation, such as a <xref:System.Globalization.NumberFormatInfo> or <xref:System.Globalization.CultureInfo> object. The `provider` parameter supplies culture-specific information used in parsing. If `provider` is `null`, the thread current culture is used.  \n  \n A <xref:System.Decimal> object has 29 digits of precision. If `s` represents a number that has more than 29 digits, but has a fractional part and is within the range of <xref:System.Decimal.MaxValue> and <xref:System.Decimal.MinValue>, the number is rounded, not truncated, to 29 digits using rounding to nearest.  \n  \n If a separator is encountered in the `s` parameter during a parse operation, and the applicable currency or number decimal and group separators are the same, the parse operation assumes that the separator is a decimal separator rather than a group separator. For more information about separators, see <xref:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator%2A>, <xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator%2A>, <xref:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator%2A>, and <xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A>.","nodes":[{"pos":[0,317],"content":"This overload of the <xref:System.Decimal.Parse%28System.String%2CSystem.IFormatProvider%29> method is commonly used to convert text that can be formatted in a variety of ways to a <xref:System.Decimal> value. For example, it can be used to convert the text entered by a user into an HTML text box to a numeric value.","nodes":[{"content":"This overload of the <xref:System.Decimal.Parse%28System.String%2CSystem.IFormatProvider%29> method is commonly used to convert text that can be formatted in a variety of ways to a <xref:System.Decimal> value. For example, it can be used to convert the text entered by a user into an HTML text box to a numeric value.","pos":[0,317],"nodes":[{"content":"This overload of the <ph id=\"ph1\">&lt;xref:System.Decimal.Parse%28System.String%2CSystem.IFormatProvider%29&gt;</ph> method is commonly used to convert text that can be formatted in a variety of ways to a <ph id=\"ph2\">&lt;xref:System.Decimal&gt;</ph> value.","pos":[0,209],"source":"This overload of the <xref:System.Decimal.Parse%28System.String%2CSystem.IFormatProvider%29> method is commonly used to convert text that can be formatted in a variety of ways to a <xref:System.Decimal> value."},{"content":"For example, it can be used to convert the text entered by a user into an HTML text box to a numeric value.","pos":[210,317]}]}]},{"pos":[324,372],"content":"The <ph id=\"ph1\">`s`</ph> parameter contains a number of the form:","source":"The `s` parameter contains a number of the form:"},{"pos":[379,428],"content":"[ws][sign][digits,]digits[.fractional-digits][ws]","nodes":[{"content":"[ws][sign][digits,]digits[.fractional-digits][ws]","pos":[0,49]}]},{"pos":[435,530],"content":"Elements in square brackets ([ and ]) are optional. The following table describes each element.","nodes":[{"content":"Elements in square brackets ([ and ]) are optional. The following table describes each element.","pos":[0,95],"nodes":[{"content":"Elements in square brackets ([ and ]) are optional.","pos":[0,51]},{"content":"The following table describes each element.","pos":[52,95]}]}]},{"pos":[537,544],"content":"Element","nodes":[{"content":"Element","pos":[0,7]}]},{"pos":[545,556],"content":"Description","nodes":[{"content":"Description","pos":[0,11]}]},{"pos":[597,601],"content":"<bpt id=\"p1\">*</bpt>ws<ept id=\"p1\">*</ept>","source":"*ws*"},{"pos":[602,623],"content":"Optional white space.","nodes":[{"content":"Optional white space.","pos":[0,21]}]},{"pos":[628,634],"content":"<bpt id=\"p1\">*</bpt>sign<ept id=\"p1\">*</ept>","source":"*sign*"},{"pos":[635,652],"content":"An optional sign.","nodes":[{"content":"An optional sign.","pos":[0,17]}]},{"pos":[657,665],"content":"<bpt id=\"p1\">*</bpt>digits<ept id=\"p1\">*</ept>","source":"*digits*"},{"pos":[666,707],"content":"A sequence of digits ranging from 0 to 9.","nodes":[{"content":"A sequence of digits ranging from 0 to 9.","pos":[0,41]}]},{"pos":[712,715],"content":"<bpt id=\"p1\">*</bpt>,<ept id=\"p1\">*</ept>","source":"*,*"},{"pos":[716,762],"content":"A culture-specific thousands separator symbol.","nodes":[{"content":"A culture-specific thousands separator symbol.","pos":[0,46]}]},{"pos":[767,770],"content":"<bpt id=\"p1\">*</bpt>.<ept id=\"p1\">*</ept>","source":"*.*"},{"pos":[771,811],"content":"A culture-specific decimal point symbol.","nodes":[{"content":"A culture-specific decimal point symbol.","pos":[0,40]}]},{"pos":[816,835],"content":"<bpt id=\"p1\">*</bpt>fractional-digits<ept id=\"p1\">*</ept>","source":"*fractional-digits*"},{"pos":[836,877],"content":"A sequence of digits ranging from 0 to 9.","nodes":[{"content":"A sequence of digits ranging from 0 to 9.","pos":[0,41]}]},{"pos":[885,1372],"content":"The `s` parameter is interpreted using the <xref:System.Globalization.NumberStyles?displayProperty=fullName> style. This means that white space and thousands separators are allowed but currency symbols are not. To explicitly define the elements (such as currency symbols, thousands separators, and white space) that can be present in `s`, use the <xref:System.Decimal.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=fullName> method.","nodes":[{"content":"The <ph id=\"ph1\">`s`</ph> parameter is interpreted using the <ph id=\"ph2\">&lt;xref:System.Globalization.NumberStyles?displayProperty=fullName&gt;</ph> style.","pos":[0,115],"source":"The `s` parameter is interpreted using the <xref:System.Globalization.NumberStyles?displayProperty=fullName> style."},{"content":"This means that white space and thousands separators are allowed but currency symbols are not.","pos":[116,210]},{"content":"To explicitly define the elements (such as currency symbols, thousands separators, and white space) that can be present in <ph id=\"ph1\">`s`</ph>, use the <ph id=\"ph2\">&lt;xref:System.Decimal.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=fullName&gt;</ph> method.","pos":[211,487],"source":" To explicitly define the elements (such as currency symbols, thousands separators, and white space) that can be present in `s`, use the <xref:System.Decimal.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=fullName> method."}]},{"pos":[1379,1702],"content":"The `provider` parameter is an <xref:System.IFormatProvider> implementation, such as a <xref:System.Globalization.NumberFormatInfo> or <xref:System.Globalization.CultureInfo> object. The `provider` parameter supplies culture-specific information used in parsing. If `provider` is `null`, the thread current culture is used.","nodes":[{"content":"The <ph id=\"ph1\">`provider`</ph> parameter is an <ph id=\"ph2\">&lt;xref:System.IFormatProvider&gt;</ph> implementation, such as a <ph id=\"ph3\">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> or <ph id=\"ph4\">&lt;xref:System.Globalization.CultureInfo&gt;</ph> object.","pos":[0,182],"source":"The `provider` parameter is an <xref:System.IFormatProvider> implementation, such as a <xref:System.Globalization.NumberFormatInfo> or <xref:System.Globalization.CultureInfo> object."},{"content":"The <ph id=\"ph1\">`provider`</ph> parameter supplies culture-specific information used in parsing.","pos":[183,262],"source":" The `provider` parameter supplies culture-specific information used in parsing."},{"content":"If <ph id=\"ph1\">`provider`</ph> is <ph id=\"ph2\">`null`</ph>, the thread current culture is used.","pos":[263,323],"source":" If `provider` is `null`, the thread current culture is used."}]},{"pos":[1709,2022],"content":"A <xref:System.Decimal> object has 29 digits of precision. If `s` represents a number that has more than 29 digits, but has a fractional part and is within the range of <xref:System.Decimal.MaxValue> and <xref:System.Decimal.MinValue>, the number is rounded, not truncated, to 29 digits using rounding to nearest.","nodes":[{"content":"A <ph id=\"ph1\">&lt;xref:System.Decimal&gt;</ph> object has 29 digits of precision.","pos":[0,58],"source":"A <xref:System.Decimal> object has 29 digits of precision."},{"content":"If <ph id=\"ph1\">`s`</ph> represents a number that has more than 29 digits, but has a fractional part and is within the range of <ph id=\"ph2\">&lt;xref:System.Decimal.MaxValue&gt;</ph> and <ph id=\"ph3\">&lt;xref:System.Decimal.MinValue&gt;</ph>, the number is rounded, not truncated, to 29 digits using rounding to nearest.","pos":[59,313],"source":" If `s` represents a number that has more than 29 digits, but has a fractional part and is within the range of <xref:System.Decimal.MaxValue> and <xref:System.Decimal.MinValue>, the number is rounded, not truncated, to 29 digits using rounding to nearest."}]},{"pos":[2029,2622],"content":"If a separator is encountered in the `s` parameter during a parse operation, and the applicable currency or number decimal and group separators are the same, the parse operation assumes that the separator is a decimal separator rather than a group separator. For more information about separators, see <xref:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator%2A>, <xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator%2A>, <xref:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator%2A>, and <xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A>.","nodes":[{"content":"If a separator is encountered in the <ph id=\"ph1\">`s`</ph> parameter during a parse operation, and the applicable currency or number decimal and group separators are the same, the parse operation assumes that the separator is a decimal separator rather than a group separator.","pos":[0,258],"source":"If a separator is encountered in the `s` parameter during a parse operation, and the applicable currency or number decimal and group separators are the same, the parse operation assumes that the separator is a decimal separator rather than a group separator."},{"content":"For more information about separators, see <ph id=\"ph1\">&lt;xref:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator%2A&gt;</ph>, <ph id=\"ph2\">&lt;xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator%2A&gt;</ph>, <ph id=\"ph3\">&lt;xref:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator%2A&gt;</ph>, and <ph id=\"ph4\">&lt;xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A&gt;</ph>.","pos":[259,593],"source":" For more information about separators, see <xref:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator%2A>, <xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator%2A>, <xref:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator%2A>, and <xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A>."}]}],"pos":[193257,195905],"yaml":true,"extradata":"MT"},{"content":"The string representation of the number to convert.","nodes":[{"pos":[0,51],"content":"The string representation of the number to convert.","nodes":[{"content":"The string representation of the number to convert.","pos":[0,51]}]}],"pos":[196915,196967],"yaml":true},{"content":"An <xref href=\"System.IFormatProvider\"></xref> that supplies culture-specific parsing information about <code>s</code>.","nodes":[{"pos":[0,119],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.IFormatProvider\"&gt;&lt;/xref&gt;</ph> that supplies culture-specific parsing information about <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">s</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"An <xref href=\"System.IFormatProvider\"></xref> that supplies culture-specific parsing information about <code>s</code>."}],"pos":[197040,197160],"yaml":true},{"content":"The <xref href=\"System.Decimal\"></xref> number equivalent to the number contained in <code>s</code> as specified by <code>provider</code>.","nodes":[{"pos":[0,138],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Decimal\"&gt;&lt;/xref&gt;</ph> number equivalent to the number contained in <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">s</ph><ept id=\"p1\">&lt;/code&gt;</ept> as specified by <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph3\">provider</ph><ept id=\"p2\">&lt;/code&gt;</ept>.","source":"The <xref href=\"System.Decimal\"></xref> number equivalent to the number contained in <code>s</code> as specified by <code>provider</code>."}],"pos":[197218,197357],"yaml":true},{"content":"<code>s</code> is `null`.","nodes":[{"pos":[0,25],"content":"<ph id=\"ph1\">&lt;code&gt;s&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>s</code> is `null`."}],"pos":[197507,197533],"yaml":true},{"content":"<code>s</code> is not of the correct format","nodes":[{"pos":[0,43],"content":"<ph id=\"ph1\">&lt;code&gt;s&lt;/code&gt;</ph> is not of the correct format","source":"<code>s</code> is not of the correct format"}],"pos":[197623,197667],"yaml":true},{"content":"<code>s</code> represents a number less than <xref href=\"System.Decimal.MinValue\"></xref> or greater than <xref href=\"System.Decimal.MaxValue\"></xref>","nodes":[{"pos":[0,150],"content":"<ph id=\"ph1\">&lt;code&gt;s&lt;/code&gt;</ph> represents a number less than <ph id=\"ph2\">&lt;xref href=\"System.Decimal.MinValue\"&gt;&lt;/xref&gt;</ph> or greater than <ph id=\"ph3\">&lt;xref href=\"System.Decimal.MaxValue\"&gt;&lt;/xref&gt;</ph>","source":"<code>s</code> represents a number less than <xref href=\"System.Decimal.MinValue\"></xref> or greater than <xref href=\"System.Decimal.MaxValue\"></xref>"}],"pos":[197761,197912],"yaml":true},{"content":"Converts the string representation of a number to its <xref href=\"System.Decimal\"></xref> equivalent using the specified style and culture-specific format.","nodes":[{"pos":[0,155],"content":"Converts the string representation of a number to its <ph id=\"ph1\">&lt;xref href=\"System.Decimal\"&gt;&lt;/xref&gt;</ph> equivalent using the specified style and culture-specific format.","source":"Converts the string representation of a number to its <xref href=\"System.Decimal\"></xref> equivalent using the specified style and culture-specific format."}],"pos":[199599,199755],"yaml":true},{"content":"The `style` parameter defines the allowable format of the `s` parameter for the parse operation to succeed. It must be a combination of bit flags from the <xref:System.Globalization.NumberStyles> enumeration. The following <xref:System.Globalization.NumberStyles> members are not supported:  \n  \n-   <xref:System.Globalization.NumberStyles?displayProperty=fullName>  \n  \n-   <xref:System.Globalization.NumberStyles.HexNumber>  \n  \n Depending on the value of `style`, the `s` parameter may include the following elements:  \n  \n [ws][$][sign][digits,]digits[.fractional-digits][e[sign]digits][ws]  \n  \n Elements in square brackets ([ and ]) are optional. The following table describes each element.  \n  \n|Element|Description|  \n|-------------|-----------------|  \n|*$*|A culture-specific currency symbol. Its position in the string is defined by the <xref:System.Globalization.NumberFormatInfo.CurrencyNegativePattern%2A> and <xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A> properties of the <xref:System.Globalization.NumberFormatInfo> object returned by the <xref:System.IFormatProvider.GetFormat%2A> method of the `provider` parameter. The currency symbol can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles?displayProperty=fullName> flag.|  \n|*ws*|Optional white space. White space can appear at the beginning of `s` if `style` includes the <xref:System.Globalization.NumberStyles?displayProperty=fullName> flag, and it can appear at the end of `s` if `style` includes the <xref:System.Globalization.NumberStyles?displayProperty=fullName> flag.|  \n|*sign*|An optional sign. The sign can appear at the beginning of `s` if `style` includes the <xref:System.Globalization.NumberStyles?displayProperty=fullName> flag, and it can appear at the end of `s` if `style` includes the <xref:System.Globalization.NumberStyles?displayProperty=fullName> flag. Parentheses can be used in `s` to indicate a negative value if `style` includes the <xref:System.Globalization.NumberStyles?displayProperty=fullName> flag.|  \n|*digits*|A sequence of digits ranging from 0 to 9.|  \n|*,*|A culture-specific thousands separator symbol. The thousands separator of the culture defined by `provider` can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles?displayProperty=fullName> flag.|  \n|*.*|A culture-specific decimal point symbol. The decimal point symbol of the culture defined by `provider` can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles?displayProperty=fullName> flag.|  \n|*fractional-digits*|A sequence of digits ranging from 0 to 9. Fractional digits can appear in `s` only if `style` includes the <xref:System.Globalization.NumberStyles?displayProperty=fullName> flag.|  \n|*e*|The 'e' or 'E' character, which indicates that the value is represented in exponential notation. The `s` parameter can represent a number in exponential notation if `style` includes the <xref:System.Globalization.NumberStyles?displayProperty=fullName> flag.|  \n  \n A string with digits only (which corresponds to the <xref:System.Globalization.NumberStyles.None> style) always parses successfully. The remaining <xref:System.Globalization.NumberStyles> members control elements that may be but are not required to be present in the input string. The following table indicates how individual <xref:System.Globalization.NumberStyles> members affect the elements that may be present in `s`.  \n  \n|NumberStyles value|Elements permitted in s in addition to digits|  \n|------------------------|---------------------------------------------------|  \n|<xref:System.Globalization.NumberStyles.None>|The *digits* element only.|  \n|<xref:System.Globalization.NumberStyles.AllowDecimalPoint>|The *.* and *fractional-digits* elements.|  \n|<xref:System.Globalization.NumberStyles.AllowExponent>|The `s` parameter can also use exponential notation.  This flag supports values in the form *digits*E*digits*; additional flags are needed to successfully parse strings with elements such as positive or negative signs and decimal point symbols.|  \n|<xref:System.Globalization.NumberStyles.AllowLeadingWhite>|The *ws* element at the beginning of `s`.|  \n|<xref:System.Globalization.NumberStyles.AllowTrailingWhite>|The *ws* element at the end of `s`.|  \n|<xref:System.Globalization.NumberStyles.AllowLeadingSign>|The *sign* element at the beginning of `s`.|  \n|<xref:System.Globalization.NumberStyles.AllowTrailingSign>|The *sign* element at the end of `s`.|  \n|<xref:System.Globalization.NumberStyles.AllowParentheses>|The *sign* element in the form of parentheses enclosing the numeric value.|  \n|<xref:System.Globalization.NumberStyles.AllowThousands>|The *,* element.|  \n|<xref:System.Globalization.NumberStyles.AllowCurrencySymbol>|The *$* element.|  \n|<xref:System.Globalization.NumberStyles.Currency>|All. The `s` parameter cannot represent a hexadecimal number or a number in exponential notation.|  \n|<xref:System.Globalization.NumberStyles.Float>|The *ws* element at the beginning or end of `s`, *sign* at the beginning of `s`, and the *.*symbol. The `s` parameter can also use exponential notation.|  \n|<xref:System.Globalization.NumberStyles.Number>|The `ws`, `sign`, *,*, and *.* elements.|  \n|<xref:System.Globalization.NumberStyles.Any>|All styles, except `s` cannot represent a hexadecimal number.|  \n  \n The `provider` parameter is an <xref:System.IFormatProvider> implementation, such as a <xref:System.Globalization.NumberFormatInfo> or <xref:System.Globalization.CultureInfo> object. The `provider` parameter supplies culture-specific information used in parsing. If `provider` is `null`, the thread current culture is used.  \n  \n A <xref:System.Decimal> object has 29 digits of precision. If `s` represents a number that has more than 29 digits, but has a fractional part and is within the range of <xref:System.Decimal.MaxValue> and <xref:System.Decimal.MinValue>, the number is rounded, not truncated, to 29 digits using rounding to nearest.  \n  \n If a separator is encountered in the `s` parameter during a parse operation, and the applicable currency or number decimal and group separators are the same, the parse operation assumes that the separator is a decimal separator rather than a group separator. For more information about separators, see <xref:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator%2A>, <xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator%2A>, <xref:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator%2A>, and <xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A>.","nodes":[{"pos":[0,290],"content":"The `style` parameter defines the allowable format of the `s` parameter for the parse operation to succeed. It must be a combination of bit flags from the <xref:System.Globalization.NumberStyles> enumeration. The following <xref:System.Globalization.NumberStyles> members are not supported:","nodes":[{"content":"The <ph id=\"ph1\">`style`</ph> parameter defines the allowable format of the <ph id=\"ph2\">`s`</ph> parameter for the parse operation to succeed.","pos":[0,107],"source":"The `style` parameter defines the allowable format of the `s` parameter for the parse operation to succeed."},{"content":"It must be a combination of bit flags from the <ph id=\"ph1\">&lt;xref:System.Globalization.NumberStyles&gt;</ph> enumeration.","pos":[108,208],"source":" It must be a combination of bit flags from the <xref:System.Globalization.NumberStyles> enumeration."},{"content":"The following <ph id=\"ph1\">&lt;xref:System.Globalization.NumberStyles&gt;</ph> members are not supported:","pos":[209,290],"source":" The following <xref:System.Globalization.NumberStyles> members are not supported:"}]},{"pos":[300,365],"content":"<xref:System.Globalization.NumberStyles?displayProperty=fullName>","nodes":[]},{"pos":[375,425],"content":"<xref:System.Globalization.NumberStyles.HexNumber>","nodes":[]},{"pos":[432,520],"content":"Depending on the value of <ph id=\"ph1\">`style`</ph>, the <ph id=\"ph2\">`s`</ph> parameter may include the following elements:","source":"Depending on the value of `style`, the `s` parameter may include the following elements:"},{"pos":[527,594],"content":"[ws][$][sign][digits,]digits[.fractional-digits][e[sign]digits][ws]","nodes":[{"content":"[ws][$][sign][digits,]digits[.fractional-digits][e[sign]digits][ws]","pos":[0,67]}]},{"pos":[601,696],"content":"Elements in square brackets ([ and ]) are optional. The following table describes each element.","nodes":[{"content":"Elements in square brackets ([ and ]) are optional. The following table describes each element.","pos":[0,95],"nodes":[{"content":"Elements in square brackets ([ and ]) are optional.","pos":[0,51]},{"content":"The following table describes each element.","pos":[52,95]}]}]},{"pos":[703,710],"content":"Element","nodes":[{"content":"Element","pos":[0,7]}]},{"pos":[711,722],"content":"Description","nodes":[{"content":"Description","pos":[0,11]}]},{"pos":[767,1294],"content":"A culture-specific currency symbol. Its position in the string is defined by the <xref:System.Globalization.NumberFormatInfo.CurrencyNegativePattern%2A> and <xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A> properties of the <xref:System.Globalization.NumberFormatInfo> object returned by the <xref:System.IFormatProvider.GetFormat%2A> method of the `provider` parameter. The currency symbol can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles?displayProperty=fullName> flag.","nodes":[{"content":"A culture-specific currency symbol.","pos":[0,35]},{"content":"Its position in the string is defined by the <ph id=\"ph1\">&lt;xref:System.Globalization.NumberFormatInfo.CurrencyNegativePattern%2A&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A&gt;</ph> properties of the <ph id=\"ph3\">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object returned by the <ph id=\"ph4\">&lt;xref:System.IFormatProvider.GetFormat%2A&gt;</ph> method of the <ph id=\"ph5\">`provider`</ph> parameter.","pos":[36,393],"source":" Its position in the string is defined by the <xref:System.Globalization.NumberFormatInfo.CurrencyNegativePattern%2A> and <xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A> properties of the <xref:System.Globalization.NumberFormatInfo> object returned by the <xref:System.IFormatProvider.GetFormat%2A> method of the `provider` parameter."},{"content":"The currency symbol can appear in <ph id=\"ph1\">`s`</ph> if <ph id=\"ph2\">`style`</ph> includes the <ph id=\"ph3\">&lt;xref:System.Globalization.NumberStyles?displayProperty=fullName&gt;</ph> flag.","pos":[394,527],"source":" The currency symbol can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles?displayProperty=fullName> flag."}]},{"pos":[1299,1303],"content":"<bpt id=\"p1\">*</bpt>ws<ept id=\"p1\">*</ept>","source":"*ws*"},{"pos":[1304,1600],"content":"Optional white space. White space can appear at the beginning of `s` if `style` includes the <xref:System.Globalization.NumberStyles?displayProperty=fullName> flag, and it can appear at the end of `s` if `style` includes the <xref:System.Globalization.NumberStyles?displayProperty=fullName> flag.","nodes":[{"content":"Optional white space.","pos":[0,21]},{"content":"White space can appear at the beginning of <ph id=\"ph1\">`s`</ph> if <ph id=\"ph2\">`style`</ph> includes the <ph id=\"ph3\">&lt;xref:System.Globalization.NumberStyles?displayProperty=fullName&gt;</ph> flag, and it can appear at the end of <ph id=\"ph4\">`s`</ph> if <ph id=\"ph5\">`style`</ph> includes the <ph id=\"ph6\">&lt;xref:System.Globalization.NumberStyles?displayProperty=fullName&gt;</ph> flag.","pos":[22,296],"source":" White space can appear at the beginning of `s` if `style` includes the <xref:System.Globalization.NumberStyles?displayProperty=fullName> flag, and it can appear at the end of `s` if `style` includes the <xref:System.Globalization.NumberStyles?displayProperty=fullName> flag."}]},{"pos":[1605,1611],"content":"<bpt id=\"p1\">*</bpt>sign<ept id=\"p1\">*</ept>","source":"*sign*"},{"pos":[1612,2057],"content":"An optional sign. The sign can appear at the beginning of `s` if `style` includes the <xref:System.Globalization.NumberStyles?displayProperty=fullName> flag, and it can appear at the end of `s` if `style` includes the <xref:System.Globalization.NumberStyles?displayProperty=fullName> flag. Parentheses can be used in `s` to indicate a negative value if `style` includes the <xref:System.Globalization.NumberStyles?displayProperty=fullName> flag.","nodes":[{"content":"An optional sign.","pos":[0,17]},{"content":"The sign can appear at the beginning of <ph id=\"ph1\">`s`</ph> if <ph id=\"ph2\">`style`</ph> includes the <ph id=\"ph3\">&lt;xref:System.Globalization.NumberStyles?displayProperty=fullName&gt;</ph> flag, and it can appear at the end of <ph id=\"ph4\">`s`</ph> if <ph id=\"ph5\">`style`</ph> includes the <ph id=\"ph6\">&lt;xref:System.Globalization.NumberStyles?displayProperty=fullName&gt;</ph> flag.","pos":[18,289],"source":" The sign can appear at the beginning of `s` if `style` includes the <xref:System.Globalization.NumberStyles?displayProperty=fullName> flag, and it can appear at the end of `s` if `style` includes the <xref:System.Globalization.NumberStyles?displayProperty=fullName> flag."},{"content":"Parentheses can be used in <ph id=\"ph1\">`s`</ph> to indicate a negative value if <ph id=\"ph2\">`style`</ph> includes the <ph id=\"ph3\">&lt;xref:System.Globalization.NumberStyles?displayProperty=fullName&gt;</ph> flag.","pos":[290,445],"source":" Parentheses can be used in `s` to indicate a negative value if `style` includes the <xref:System.Globalization.NumberStyles?displayProperty=fullName> flag."}]},{"pos":[2062,2070],"content":"<bpt id=\"p1\">*</bpt>digits<ept id=\"p1\">*</ept>","source":"*digits*"},{"pos":[2071,2112],"content":"A sequence of digits ranging from 0 to 9.","nodes":[{"content":"A sequence of digits ranging from 0 to 9.","pos":[0,41]}]},{"pos":[2117,2120],"content":"<bpt id=\"p1\">*</bpt>,<ept id=\"p1\">*</ept>","source":"*,*"},{"pos":[2121,2342],"content":"A culture-specific thousands separator symbol. The thousands separator of the culture defined by `provider` can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles?displayProperty=fullName> flag.","nodes":[{"content":"A culture-specific thousands separator symbol.","pos":[0,46]},{"content":"The thousands separator of the culture defined by <ph id=\"ph1\">`provider`</ph> can appear in <ph id=\"ph2\">`s`</ph> if <ph id=\"ph3\">`style`</ph> includes the <ph id=\"ph4\">&lt;xref:System.Globalization.NumberStyles?displayProperty=fullName&gt;</ph> flag.","pos":[47,221],"source":" The thousands separator of the culture defined by `provider` can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles?displayProperty=fullName> flag."}]},{"pos":[2347,2350],"content":"<bpt id=\"p1\">*</bpt>.<ept id=\"p1\">*</ept>","source":"*.*"},{"pos":[2351,2567],"content":"A culture-specific decimal point symbol. The decimal point symbol of the culture defined by `provider` can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles?displayProperty=fullName> flag.","nodes":[{"content":"A culture-specific decimal point symbol.","pos":[0,40]},{"content":"The decimal point symbol of the culture defined by <ph id=\"ph1\">`provider`</ph> can appear in <ph id=\"ph2\">`s`</ph> if <ph id=\"ph3\">`style`</ph> includes the <ph id=\"ph4\">&lt;xref:System.Globalization.NumberStyles?displayProperty=fullName&gt;</ph> flag.","pos":[41,216],"source":" The decimal point symbol of the culture defined by `provider` can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles?displayProperty=fullName> flag."}]},{"pos":[2572,2591],"content":"<bpt id=\"p1\">*</bpt>fractional-digits<ept id=\"p1\">*</ept>","source":"*fractional-digits*"},{"pos":[2592,2770],"content":"A sequence of digits ranging from 0 to 9. Fractional digits can appear in `s` only if `style` includes the <xref:System.Globalization.NumberStyles?displayProperty=fullName> flag.","nodes":[{"content":"A sequence of digits ranging from 0 to 9.","pos":[0,41]},{"content":"Fractional digits can appear in <ph id=\"ph1\">`s`</ph> only if <ph id=\"ph2\">`style`</ph> includes the <ph id=\"ph3\">&lt;xref:System.Globalization.NumberStyles?displayProperty=fullName&gt;</ph> flag.","pos":[42,178],"source":" Fractional digits can appear in `s` only if `style` includes the <xref:System.Globalization.NumberStyles?displayProperty=fullName> flag."}]},{"pos":[2775,2778],"content":"<bpt id=\"p1\">*</bpt>e<ept id=\"p1\">*</ept>","source":"*e*"},{"pos":[2779,3036],"content":"The 'e' or 'E' character, which indicates that the value is represented in exponential notation. The `s` parameter can represent a number in exponential notation if `style` includes the <xref:System.Globalization.NumberStyles?displayProperty=fullName> flag.","nodes":[{"content":"The 'e' or 'E' character, which indicates that the value is represented in exponential notation.","pos":[0,96]},{"content":"The <ph id=\"ph1\">`s`</ph> parameter can represent a number in exponential notation if <ph id=\"ph2\">`style`</ph> includes the <ph id=\"ph3\">&lt;xref:System.Globalization.NumberStyles?displayProperty=fullName&gt;</ph> flag.","pos":[97,257],"source":" The `s` parameter can represent a number in exponential notation if `style` includes the <xref:System.Globalization.NumberStyles?displayProperty=fullName> flag."}]},{"pos":[3044,3466],"content":"A string with digits only (which corresponds to the <xref:System.Globalization.NumberStyles.None> style) always parses successfully. The remaining <xref:System.Globalization.NumberStyles> members control elements that may be but are not required to be present in the input string. The following table indicates how individual <xref:System.Globalization.NumberStyles> members affect the elements that may be present in `s`.","nodes":[{"content":"A string with digits only (which corresponds to the <ph id=\"ph1\">&lt;xref:System.Globalization.NumberStyles.None&gt;</ph> style) always parses successfully.","pos":[0,132],"source":"A string with digits only (which corresponds to the <xref:System.Globalization.NumberStyles.None> style) always parses successfully."},{"content":"The remaining <ph id=\"ph1\">&lt;xref:System.Globalization.NumberStyles&gt;</ph> members control elements that may be but are not required to be present in the input string.","pos":[133,280],"source":" The remaining <xref:System.Globalization.NumberStyles> members control elements that may be but are not required to be present in the input string."},{"content":"The following table indicates how individual <ph id=\"ph1\">&lt;xref:System.Globalization.NumberStyles&gt;</ph> members affect the elements that may be present in <ph id=\"ph2\">`s`</ph>.","pos":[281,422],"source":" The following table indicates how individual <xref:System.Globalization.NumberStyles> members affect the elements that may be present in `s`."}]},{"pos":[3473,3491],"content":"NumberStyles value","nodes":[{"content":"NumberStyles value","pos":[0,18]}]},{"pos":[3492,3537],"content":"Elements permitted in s in addition to digits","nodes":[{"content":"Elements permitted in s in addition to digits","pos":[0,45]}]},{"pos":[3623,3668],"content":"<xref:System.Globalization.NumberStyles.None>","nodes":[]},{"pos":[3669,3695],"content":"The <bpt id=\"p1\">*</bpt>digits<ept id=\"p1\">*</ept> element only.","source":"The *digits* element only."},{"pos":[3700,3758],"content":"<xref:System.Globalization.NumberStyles.AllowDecimalPoint>","nodes":[]},{"pos":[3759,3800],"content":"The *.* and *fractional-digits* elements.","nodes":[{"content":"The <bpt id=\"p1\">*</bpt>.<ept id=\"p1\">*</ept>","pos":[0,7],"source":"The *.*"},{"content":"and <bpt id=\"p1\">*</bpt>fractional-digits<ept id=\"p1\">*</ept> elements.","pos":[8,41],"source":" and *fractional-digits* elements."}]},{"pos":[3805,3859],"content":"<xref:System.Globalization.NumberStyles.AllowExponent>","nodes":[]},{"pos":[3860,4104],"content":"The `s` parameter can also use exponential notation.  This flag supports values in the form *digits*E*digits*; additional flags are needed to successfully parse strings with elements such as positive or negative signs and decimal point symbols.","nodes":[{"content":"The <ph id=\"ph1\">`s`</ph> parameter can also use exponential notation.","pos":[0,52],"source":"The `s` parameter can also use exponential notation."},{"content":"This flag supports values in the form <bpt id=\"p1\">*</bpt>digits<ept id=\"p1\">*</ept>E<bpt id=\"p2\">*</bpt>digits<ept id=\"p2\">*</ept>; additional flags are needed to successfully parse strings with elements such as positive or negative signs and decimal point symbols.","pos":[54,244],"source":"  This flag supports values in the form *digits*E*digits*; additional flags are needed to successfully parse strings with elements such as positive or negative signs and decimal point symbols."}]},{"pos":[4109,4167],"content":"<xref:System.Globalization.NumberStyles.AllowLeadingWhite>","nodes":[]},{"pos":[4168,4209],"content":"The <bpt id=\"p1\">*</bpt>ws<ept id=\"p1\">*</ept> element at the beginning of <ph id=\"ph1\">`s`</ph>.","source":"The *ws* element at the beginning of `s`."},{"pos":[4214,4273],"content":"<xref:System.Globalization.NumberStyles.AllowTrailingWhite>","nodes":[]},{"pos":[4274,4309],"content":"The <bpt id=\"p1\">*</bpt>ws<ept id=\"p1\">*</ept> element at the end of <ph id=\"ph1\">`s`</ph>.","source":"The *ws* element at the end of `s`."},{"pos":[4314,4371],"content":"<xref:System.Globalization.NumberStyles.AllowLeadingSign>","nodes":[]},{"pos":[4372,4415],"content":"The <bpt id=\"p1\">*</bpt>sign<ept id=\"p1\">*</ept> element at the beginning of <ph id=\"ph1\">`s`</ph>.","source":"The *sign* element at the beginning of `s`."},{"pos":[4420,4478],"content":"<xref:System.Globalization.NumberStyles.AllowTrailingSign>","nodes":[]},{"pos":[4479,4516],"content":"The <bpt id=\"p1\">*</bpt>sign<ept id=\"p1\">*</ept> element at the end of <ph id=\"ph1\">`s`</ph>.","source":"The *sign* element at the end of `s`."},{"pos":[4521,4578],"content":"<xref:System.Globalization.NumberStyles.AllowParentheses>","nodes":[]},{"pos":[4579,4653],"content":"The <bpt id=\"p1\">*</bpt>sign<ept id=\"p1\">*</ept> element in the form of parentheses enclosing the numeric value.","source":"The *sign* element in the form of parentheses enclosing the numeric value."},{"pos":[4658,4713],"content":"<xref:System.Globalization.NumberStyles.AllowThousands>","nodes":[]},{"pos":[4714,4730],"content":"The <bpt id=\"p1\">*</bpt>,<ept id=\"p1\">*</ept> element.","source":"The *,* element."},{"pos":[4735,4795],"content":"<xref:System.Globalization.NumberStyles.AllowCurrencySymbol>","nodes":[]},{"pos":[4796,4812],"content":"The <bpt id=\"p1\">*</bpt><ph id=\"ph1\">$</ph><ept id=\"p1\">*</ept> element.","source":"The *$* element."},{"pos":[4817,4866],"content":"<xref:System.Globalization.NumberStyles.Currency>","nodes":[]},{"pos":[4867,4964],"content":"All. The `s` parameter cannot represent a hexadecimal number or a number in exponential notation.","nodes":[{"content":"All.","pos":[0,4]},{"content":"The <ph id=\"ph1\">`s`</ph> parameter cannot represent a hexadecimal number or a number in exponential notation.","pos":[5,97],"source":" The `s` parameter cannot represent a hexadecimal number or a number in exponential notation."}]},{"pos":[4969,5015],"content":"<xref:System.Globalization.NumberStyles.Float>","nodes":[]},{"pos":[5016,5168],"content":"The *ws* element at the beginning or end of `s`, *sign* at the beginning of `s`, and the *.*symbol. The `s` parameter can also use exponential notation.","nodes":[{"content":"The <bpt id=\"p1\">*</bpt>ws<ept id=\"p1\">*</ept> element at the beginning or end of <ph id=\"ph1\">`s`</ph>, <bpt id=\"p2\">*</bpt>sign<ept id=\"p2\">*</ept> at the beginning of <ph id=\"ph2\">`s`</ph>, and the <bpt id=\"p3\">*</bpt>.<ept id=\"p3\">*</ept>symbol.","pos":[0,99],"source":"The *ws* element at the beginning or end of `s`, *sign* at the beginning of `s`, and the *.*symbol."},{"content":"The <ph id=\"ph1\">`s`</ph> parameter can also use exponential notation.","pos":[100,152],"source":" The `s` parameter can also use exponential notation."}]},{"pos":[5173,5220],"content":"<xref:System.Globalization.NumberStyles.Number>","nodes":[]},{"pos":[5221,5261],"content":"The `ws`, `sign`, *,*, and *.* elements.","nodes":[{"content":"The <ph id=\"ph1\">`ws`</ph>, <ph id=\"ph2\">`sign`</ph>, <bpt id=\"p1\">*</bpt>,<ept id=\"p1\">*</ept>, and <bpt id=\"p2\">*</bpt>.<ept id=\"p2\">*</ept>","pos":[0,30],"source":"The `ws`, `sign`, *,*, and *.*"},{"content":"elements.","pos":[31,40]}]},{"pos":[5266,5310],"content":"<xref:System.Globalization.NumberStyles.Any>","nodes":[]},{"pos":[5311,5372],"content":"All styles, except <ph id=\"ph1\">`s`</ph> cannot represent a hexadecimal number.","source":"All styles, except `s` cannot represent a hexadecimal number."},{"pos":[5380,5703],"content":"The `provider` parameter is an <xref:System.IFormatProvider> implementation, such as a <xref:System.Globalization.NumberFormatInfo> or <xref:System.Globalization.CultureInfo> object. The `provider` parameter supplies culture-specific information used in parsing. If `provider` is `null`, the thread current culture is used.","nodes":[{"content":"The <ph id=\"ph1\">`provider`</ph> parameter is an <ph id=\"ph2\">&lt;xref:System.IFormatProvider&gt;</ph> implementation, such as a <ph id=\"ph3\">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> or <ph id=\"ph4\">&lt;xref:System.Globalization.CultureInfo&gt;</ph> object.","pos":[0,182],"source":"The `provider` parameter is an <xref:System.IFormatProvider> implementation, such as a <xref:System.Globalization.NumberFormatInfo> or <xref:System.Globalization.CultureInfo> object."},{"content":"The <ph id=\"ph1\">`provider`</ph> parameter supplies culture-specific information used in parsing.","pos":[183,262],"source":" The `provider` parameter supplies culture-specific information used in parsing."},{"content":"If <ph id=\"ph1\">`provider`</ph> is <ph id=\"ph2\">`null`</ph>, the thread current culture is used.","pos":[263,323],"source":" If `provider` is `null`, the thread current culture is used."}]},{"pos":[5710,6023],"content":"A <xref:System.Decimal> object has 29 digits of precision. If `s` represents a number that has more than 29 digits, but has a fractional part and is within the range of <xref:System.Decimal.MaxValue> and <xref:System.Decimal.MinValue>, the number is rounded, not truncated, to 29 digits using rounding to nearest.","nodes":[{"content":"A <ph id=\"ph1\">&lt;xref:System.Decimal&gt;</ph> object has 29 digits of precision.","pos":[0,58],"source":"A <xref:System.Decimal> object has 29 digits of precision."},{"content":"If <ph id=\"ph1\">`s`</ph> represents a number that has more than 29 digits, but has a fractional part and is within the range of <ph id=\"ph2\">&lt;xref:System.Decimal.MaxValue&gt;</ph> and <ph id=\"ph3\">&lt;xref:System.Decimal.MinValue&gt;</ph>, the number is rounded, not truncated, to 29 digits using rounding to nearest.","pos":[59,313],"source":" If `s` represents a number that has more than 29 digits, but has a fractional part and is within the range of <xref:System.Decimal.MaxValue> and <xref:System.Decimal.MinValue>, the number is rounded, not truncated, to 29 digits using rounding to nearest."}]},{"pos":[6030,6623],"content":"If a separator is encountered in the `s` parameter during a parse operation, and the applicable currency or number decimal and group separators are the same, the parse operation assumes that the separator is a decimal separator rather than a group separator. For more information about separators, see <xref:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator%2A>, <xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator%2A>, <xref:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator%2A>, and <xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A>.","nodes":[{"content":"If a separator is encountered in the <ph id=\"ph1\">`s`</ph> parameter during a parse operation, and the applicable currency or number decimal and group separators are the same, the parse operation assumes that the separator is a decimal separator rather than a group separator.","pos":[0,258],"source":"If a separator is encountered in the `s` parameter during a parse operation, and the applicable currency or number decimal and group separators are the same, the parse operation assumes that the separator is a decimal separator rather than a group separator."},{"content":"For more information about separators, see <ph id=\"ph1\">&lt;xref:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator%2A&gt;</ph>, <ph id=\"ph2\">&lt;xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator%2A&gt;</ph>, <ph id=\"ph3\">&lt;xref:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator%2A&gt;</ph>, and <ph id=\"ph4\">&lt;xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A&gt;</ph>.","pos":[259,593],"source":" For more information about separators, see <xref:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator%2A>, <xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator%2A>, <xref:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator%2A>, and <xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A>."}]}],"pos":[199766,206438],"yaml":true,"extradata":"MT"},{"content":"The string representation of the number to convert.","nodes":[{"pos":[0,51],"content":"The string representation of the number to convert.","nodes":[{"content":"The string representation of the number to convert.","pos":[0,51]}]}],"pos":[207060,207112],"yaml":true},{"content":"A bitwise combination of <xref href=\"System.Globalization.NumberStyles\"></xref> values that indicates the style elements that can be present in <code>s</code>. A typical value to specify is <xref href=\"System.Globalization.NumberStyles.Number\"></xref>.","nodes":[{"pos":[0,252],"content":"A bitwise combination of <xref href=\"System.Globalization.NumberStyles\"></xref> values that indicates the style elements that can be present in <code>s</code>. A typical value to specify is <xref href=\"System.Globalization.NumberStyles.Number\"></xref>.","nodes":[{"content":"A bitwise combination of <ph id=\"ph1\">&lt;xref href=\"System.Globalization.NumberStyles\"&gt;&lt;/xref&gt;</ph> values that indicates the style elements that can be present in <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">s</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","pos":[0,159],"source":"A bitwise combination of <xref href=\"System.Globalization.NumberStyles\"></xref> values that indicates the style elements that can be present in <code>s</code>."},{"content":"A typical value to specify is <ph id=\"ph1\">&lt;xref href=\"System.Globalization.NumberStyles.Number\"&gt;&lt;/xref&gt;</ph>.","pos":[160,252],"source":" A typical value to specify is <xref href=\"System.Globalization.NumberStyles.Number\"></xref>."}]}],"pos":[207193,207446],"yaml":true},{"content":"An <xref href=\"System.IFormatProvider\"></xref> object that supplies culture-specific information about the format of <code>s</code>.","nodes":[{"pos":[0,132],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.IFormatProvider\"&gt;&lt;/xref&gt;</ph> object that supplies culture-specific information about the format of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">s</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"An <xref href=\"System.IFormatProvider\"></xref> object that supplies culture-specific information about the format of <code>s</code>."}],"pos":[207519,207652],"yaml":true},{"content":"The <xref href=\"System.Decimal\"></xref> number equivalent to the number contained in <code>s</code> as specified by <code>style</code> and <code>provider</code>.","nodes":[{"pos":[0,161],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Decimal\"&gt;&lt;/xref&gt;</ph> number equivalent to the number contained in <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">s</ph><ept id=\"p1\">&lt;/code&gt;</ept> as specified by <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph3\">style</ph><ept id=\"p2\">&lt;/code&gt;</ept> and <bpt id=\"p3\">&lt;code&gt;</bpt><ph id=\"ph4\">provider</ph><ept id=\"p3\">&lt;/code&gt;</ept>.","source":"The <xref href=\"System.Decimal\"></xref> number equivalent to the number contained in <code>s</code> as specified by <code>style</code> and <code>provider</code>."}],"pos":[207710,207872],"yaml":true},{"content":"<code>s</code> is not in the correct format.","nodes":[{"pos":[0,44],"content":"<ph id=\"ph1\">&lt;code&gt;s&lt;/code&gt;</ph> is not in the correct format.","source":"<code>s</code> is not in the correct format."}],"pos":[208010,208055],"yaml":true},{"content":"<code>s</code> represents a number less than <xref href=\"System.Decimal.MinValue\"></xref> or greater than <xref href=\"System.Decimal.MaxValue\"></xref>.","nodes":[{"pos":[0,151],"content":"<ph id=\"ph1\">&lt;code&gt;s&lt;/code&gt;</ph> represents a number less than <ph id=\"ph2\">&lt;xref href=\"System.Decimal.MinValue\"&gt;&lt;/xref&gt;</ph> or greater than <ph id=\"ph3\">&lt;xref href=\"System.Decimal.MaxValue\"&gt;&lt;/xref&gt;</ph>.","source":"<code>s</code> represents a number less than <xref href=\"System.Decimal.MinValue\"></xref> or greater than <xref href=\"System.Decimal.MaxValue\"></xref>."}],"pos":[208149,208301],"yaml":true},{"content":"<code>s</code> is `null`.","nodes":[{"pos":[0,25],"content":"<ph id=\"ph1\">&lt;code&gt;s&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>s</code> is `null`."}],"pos":[208403,208429],"yaml":true},{"content":"<code>style</code> is not a <xref href=\"System.Globalization.NumberStyles\"></xref> value.  \n  \n -or-  \n  \n <code>style</code> is the <xref href=\"System.Globalization.NumberStyles.AllowHexSpecifier\"></xref> value.","nodes":[{"pos":[0,89],"content":"<ph id=\"ph1\">&lt;code&gt;style&lt;/code&gt;</ph> is not a <ph id=\"ph2\">&lt;xref href=\"System.Globalization.NumberStyles\"&gt;&lt;/xref&gt;</ph> value.","source":"<code>style</code> is not a <xref href=\"System.Globalization.NumberStyles\"></xref> value."},{"pos":[96,100],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[107,212],"content":"<ph id=\"ph1\">&lt;code&gt;style&lt;/code&gt;</ph> is the <ph id=\"ph2\">&lt;xref href=\"System.Globalization.NumberStyles.AllowHexSpecifier\"&gt;&lt;/xref&gt;</ph> value.","source":"<code>style</code> is the <xref href=\"System.Globalization.NumberStyles.AllowHexSpecifier\"></xref> value."}],"pos":[208523,208746],"yaml":true},{"content":"Computes the remainder after dividing two <xref href=\"System.Decimal\"></xref> values.","nodes":[{"pos":[0,85],"content":"Computes the remainder after dividing two <ph id=\"ph1\">&lt;xref href=\"System.Decimal\"&gt;&lt;/xref&gt;</ph> values.","source":"Computes the remainder after dividing two <xref href=\"System.Decimal\"></xref> values."}],"pos":[210271,210357],"yaml":true},{"content":"The dividend.","nodes":[{"pos":[0,13],"content":"The dividend.","nodes":[{"content":"The dividend.","pos":[0,13]}]}],"pos":[210963,210977],"yaml":true},{"content":"The divisor.","nodes":[{"pos":[0,12],"content":"The divisor.","nodes":[{"content":"The divisor.","pos":[0,12]}]}],"pos":[211036,211049],"yaml":true},{"content":"The remainder after dividing <code>d1</code> by <code>d2</code>.","nodes":[{"pos":[0,64],"content":"The remainder after dividing <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">d1</ph><ept id=\"p1\">&lt;/code&gt;</ept> by <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">d2</ph><ept id=\"p2\">&lt;/code&gt;</ept>.","source":"The remainder after dividing <code>d1</code> by <code>d2</code>."}],"pos":[211107,211172],"yaml":true},{"content":"<code>d2</code> is zero.","nodes":[{"pos":[0,24],"content":"<ph id=\"ph1\">&lt;code&gt;d2&lt;/code&gt;</ph> is zero.","source":"<code>d2</code> is zero."}],"pos":[211326,211351],"yaml":true},{"content":"The return value is less than <xref href=\"System.Decimal.MinValue\"></xref> or greater than <xref href=\"System.Decimal.MaxValue\"></xref>.","nodes":[{"pos":[0,136],"content":"The return value is less than <ph id=\"ph1\">&lt;xref href=\"System.Decimal.MinValue\"&gt;&lt;/xref&gt;</ph> or greater than <ph id=\"ph2\">&lt;xref href=\"System.Decimal.MaxValue\"&gt;&lt;/xref&gt;</ph>.","source":"The return value is less than <xref href=\"System.Decimal.MinValue\"></xref> or greater than <xref href=\"System.Decimal.MaxValue\"></xref>."}],"pos":[211445,211582],"yaml":true},{"content":"Rounds a decimal value to a specified precision. A parameter specifies how to round the value if it is midway between two other numbers.","nodes":[{"pos":[0,136],"content":"Rounds a decimal value to a specified precision. A parameter specifies how to round the value if it is midway between two other numbers.","nodes":[{"content":"Rounds a decimal value to a specified precision. A parameter specifies how to round the value if it is midway between two other numbers.","pos":[0,136],"nodes":[{"content":"Rounds a decimal value to a specified precision.","pos":[0,48]},{"content":"A parameter specifies how to round the value if it is midway between two other numbers.","pos":[49,136]}]}]}],"pos":[213197,213334],"yaml":true},{"content":"The `decimals` parameter specifies the number of significant decimal places in the return value and ranges from 0 to 28. If `decimals` is zero, an integer is returned.  \n  \n In a midpoint value, the value after the least significant digit in the result is precisely half way between two numbers. For example, 3.47500 is a midpoint value if it is to be rounded two decimal places, and 7.500 is a midpoint value if it is to be rounded to an integer. In these cases, the nearest value can't be easily identified without a rounding convention, which is specified by the `mode` argument. The <xref:System.Decimal.Round%28System.Decimal%2CSystem.Int32%2CSystem.MidpointRounding%29> method supports two rounding conventions for handling midpoint values.  \n  \n Rounding away from zero.  \n Midpoint values are rounded to the next number away from zero. For example, 3.75 rounds to 3.8, 3.85 rounds to 3.9, -3.75 rounds to -3.8, and -3.85 rounds to -3.9. This form of rounding is represented by the <xref:System.MidpointRounding?displayProperty=fullName> enumeration member.  \n  \n Rounding away from zero is the most widely known form of rounding.  \n  \n Rounding to even, or banker's rounding  \n Midpoint values are rounded to the nearest even number. For example, both 3.75 and 3.85 round to 3.8, and both -3.75 and -3.85 round to -3.8. This form of rounding is represented by the <xref:System.MidpointRounding?displayProperty=fullName> enumeration member.  \n  \n Rounding to nearest is the standard form of rounding used in financial and statistical operations. It conforms to IEEE Standard 754, section 4. When used in multiple rounding operations, it reduces the rounding error that is caused by consistently rounding midpoint values in a single direction. In some cases, this rounding error can be significant.","nodes":[{"pos":[0,167],"content":"The `decimals` parameter specifies the number of significant decimal places in the return value and ranges from 0 to 28. If `decimals` is zero, an integer is returned.","nodes":[{"content":"The <ph id=\"ph1\">`decimals`</ph> parameter specifies the number of significant decimal places in the return value and ranges from 0 to 28.","pos":[0,120],"source":"The `decimals` parameter specifies the number of significant decimal places in the return value and ranges from 0 to 28."},{"content":"If <ph id=\"ph1\">`decimals`</ph> is zero, an integer is returned.","pos":[121,167],"source":" If `decimals` is zero, an integer is returned."}]},{"pos":[174,746],"content":"In a midpoint value, the value after the least significant digit in the result is precisely half way between two numbers. For example, 3.47500 is a midpoint value if it is to be rounded two decimal places, and 7.500 is a midpoint value if it is to be rounded to an integer. In these cases, the nearest value can't be easily identified without a rounding convention, which is specified by the `mode` argument. The <xref:System.Decimal.Round%28System.Decimal%2CSystem.Int32%2CSystem.MidpointRounding%29> method supports two rounding conventions for handling midpoint values.","nodes":[{"content":"In a midpoint value, the value after the least significant digit in the result is precisely half way between two numbers.","pos":[0,121]},{"content":"For example, 3.47500 is a midpoint value if it is to be rounded two decimal places, and 7.500 is a midpoint value if it is to be rounded to an integer.","pos":[122,273]},{"content":"In these cases, the nearest value can't be easily identified without a rounding convention, which is specified by the <ph id=\"ph1\">`mode`</ph> argument.","pos":[274,408],"source":" In these cases, the nearest value can't be easily identified without a rounding convention, which is specified by the `mode` argument."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Decimal.Round%28System.Decimal%2CSystem.Int32%2CSystem.MidpointRounding%29&gt;</ph> method supports two rounding conventions for handling midpoint values.","pos":[409,572],"source":" The <xref:System.Decimal.Round%28System.Decimal%2CSystem.Int32%2CSystem.MidpointRounding%29> method supports two rounding conventions for handling midpoint values."}]},{"pos":[753,1064],"content":"Rounding away from zero.  \n Midpoint values are rounded to the next number away from zero. For example, 3.75 rounds to 3.8, 3.85 rounds to 3.9, -3.75 rounds to -3.8, and -3.85 rounds to -3.9. This form of rounding is represented by the <xref:System.MidpointRounding?displayProperty=fullName> enumeration member.","nodes":[{"content":"Rounding away from zero.","pos":[0,24]},{"content":"Midpoint values are rounded to the next number away from zero. For example, 3.75 rounds to 3.8, 3.85 rounds to 3.9, -3.75 rounds to -3.8, and -3.85 rounds to -3.9. This form of rounding is represented by the <xref:System.MidpointRounding?displayProperty=fullName> enumeration member.","pos":[28,311],"nodes":[{"content":"Midpoint values are rounded to the next number away from zero.","pos":[0,62]},{"content":"For example, 3.75 rounds to 3.8, 3.85 rounds to 3.9, -3.75 rounds to -3.8, and -3.85 rounds to -3.9.","pos":[63,163]},{"content":"This form of rounding is represented by the <ph id=\"ph1\">&lt;xref:System.MidpointRounding?displayProperty=fullName&gt;</ph> enumeration member.","pos":[164,283],"source":" This form of rounding is represented by the <xref:System.MidpointRounding?displayProperty=fullName> enumeration member."}]}]},{"pos":[1071,1137],"content":"Rounding away from zero is the most widely known form of rounding.","nodes":[{"content":"Rounding away from zero is the most widely known form of rounding.","pos":[0,66]}]},{"pos":[1144,1447],"content":"Rounding to even, or banker's rounding  \n Midpoint values are rounded to the nearest even number. For example, both 3.75 and 3.85 round to 3.8, and both -3.75 and -3.85 round to -3.8. This form of rounding is represented by the <xref:System.MidpointRounding?displayProperty=fullName> enumeration member.","nodes":[{"content":"Rounding to even, or banker's rounding","pos":[0,38]},{"content":"Midpoint values are rounded to the nearest even number. For example, both 3.75 and 3.85 round to 3.8, and both -3.75 and -3.85 round to -3.8. This form of rounding is represented by the <xref:System.MidpointRounding?displayProperty=fullName> enumeration member.","pos":[42,303],"nodes":[{"content":"Midpoint values are rounded to the nearest even number.","pos":[0,55]},{"content":"For example, both 3.75 and 3.85 round to 3.8, and both -3.75 and -3.85 round to -3.8.","pos":[56,141]},{"content":"This form of rounding is represented by the <ph id=\"ph1\">&lt;xref:System.MidpointRounding?displayProperty=fullName&gt;</ph> enumeration member.","pos":[142,261],"source":" This form of rounding is represented by the <xref:System.MidpointRounding?displayProperty=fullName> enumeration member."}]}]},{"pos":[1454,1804],"content":"Rounding to nearest is the standard form of rounding used in financial and statistical operations. It conforms to IEEE Standard 754, section 4. When used in multiple rounding operations, it reduces the rounding error that is caused by consistently rounding midpoint values in a single direction. In some cases, this rounding error can be significant.","nodes":[{"content":"Rounding to nearest is the standard form of rounding used in financial and statistical operations. It conforms to IEEE Standard 754, section 4. When used in multiple rounding operations, it reduces the rounding error that is caused by consistently rounding midpoint values in a single direction. In some cases, this rounding error can be significant.","pos":[0,350],"nodes":[{"content":"Rounding to nearest is the standard form of rounding used in financial and statistical operations.","pos":[0,98]},{"content":"It conforms to IEEE Standard 754, section 4.","pos":[99,143]},{"content":"When used in multiple rounding operations, it reduces the rounding error that is caused by consistently rounding midpoint values in a single direction.","pos":[144,295]},{"content":"In some cases, this rounding error can be significant.","pos":[296,350]}]}]}],"pos":[213345,215164],"yaml":true,"extradata":"MT"},{"content":"A decimal number to round.","nodes":[{"pos":[0,26],"content":"A decimal number to round.","nodes":[{"content":"A decimal number to round.","pos":[0,26]}]}],"pos":[215912,215939],"yaml":true},{"content":"The number of significant decimal places (precision) in the return value.","nodes":[{"pos":[0,73],"content":"The number of significant decimal places (precision) in the return value.","nodes":[{"content":"The number of significant decimal places (precision) in the return value.","pos":[0,73]}]}],"pos":[216002,216076],"yaml":true},{"content":"A value that specifies how to round <code>d</code> if it is midway between two other numbers.","nodes":[{"pos":[0,93],"content":"A value that specifies how to round <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">d</ph><ept id=\"p1\">&lt;/code&gt;</ept> if it is midway between two other numbers.","source":"A value that specifies how to round <code>d</code> if it is midway between two other numbers."}],"pos":[216146,216240],"yaml":true},{"content":"The number that is nearest to the <code>d</code> parameter with a precision equal to the <code>decimals</code> parameter. If <code>d</code> is halfway between two numbers, one of which is even and the other odd, the <code>mode</code> parameter determines which of the two numbers is returned. If the precision of <code>d</code> is less than <code>decimals</code>, <code>d</code> is returned unchanged.","nodes":[{"pos":[0,401],"content":"The number that is nearest to the <code>d</code> parameter with a precision equal to the <code>decimals</code> parameter. If <code>d</code> is halfway between two numbers, one of which is even and the other odd, the <code>mode</code> parameter determines which of the two numbers is returned. If the precision of <code>d</code> is less than <code>decimals</code>, <code>d</code> is returned unchanged.","nodes":[{"content":"The number that is nearest to the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">d</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter with a precision equal to the <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">decimals</ph><ept id=\"p2\">&lt;/code&gt;</ept> parameter.","pos":[0,121],"source":"The number that is nearest to the <code>d</code> parameter with a precision equal to the <code>decimals</code> parameter."},{"content":"If <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">d</ph><ept id=\"p1\">&lt;/code&gt;</ept> is halfway between two numbers, one of which is even and the other odd, the <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">mode</ph><ept id=\"p2\">&lt;/code&gt;</ept> parameter determines which of the two numbers is returned.","pos":[122,292],"source":" If <code>d</code> is halfway between two numbers, one of which is even and the other odd, the <code>mode</code> parameter determines which of the two numbers is returned."},{"content":"If the precision of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">d</ph><ept id=\"p1\">&lt;/code&gt;</ept> is less than <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">decimals</ph><ept id=\"p2\">&lt;/code&gt;</ept>, <bpt id=\"p3\">&lt;code&gt;</bpt><ph id=\"ph3\">d</ph><ept id=\"p3\">&lt;/code&gt;</ept> is returned unchanged.","pos":[293,401],"source":" If the precision of <code>d</code> is less than <code>decimals</code>, <code>d</code> is returned unchanged."}]}],"pos":[216298,216700],"yaml":true},{"content":"<code>decimals</code> is less than 0 or greater than 28.","nodes":[{"pos":[0,56],"content":"<ph id=\"ph1\">&lt;code&gt;decimals&lt;/code&gt;</ph> is less than 0 or greater than 28.","source":"<code>decimals</code> is less than 0 or greater than 28."}],"pos":[216862,216919],"yaml":true},{"content":"<code>mode</code> is not a <xref href=\"System.MidpointRounding\"></xref> value.","nodes":[{"pos":[0,78],"content":"<ph id=\"ph1\">&lt;code&gt;mode&lt;/code&gt;</ph> is not a <ph id=\"ph2\">&lt;xref href=\"System.MidpointRounding\"&gt;&lt;/xref&gt;</ph> value.","source":"<code>mode</code> is not a <xref href=\"System.MidpointRounding\"></xref> value."}],"pos":[217013,217092],"yaml":true},{"content":"The result is outside the range of a <xref href=\"System.Decimal\"></xref> object.","nodes":[{"pos":[0,80],"content":"The result is outside the range of a <ph id=\"ph1\">&lt;xref href=\"System.Decimal\"&gt;&lt;/xref&gt;</ph> object.","source":"The result is outside the range of a <xref href=\"System.Decimal\"></xref> object."}],"pos":[217186,217267],"yaml":true},{"content":"Rounds a decimal value to the nearest integer. A parameter specifies how to round the value if it is midway between two other numbers.","nodes":[{"pos":[0,134],"content":"Rounds a decimal value to the nearest integer. A parameter specifies how to round the value if it is midway between two other numbers.","nodes":[{"content":"Rounds a decimal value to the nearest integer. A parameter specifies how to round the value if it is midway between two other numbers.","pos":[0,134],"nodes":[{"content":"Rounds a decimal value to the nearest integer.","pos":[0,46]},{"content":"A parameter specifies how to round the value if it is midway between two other numbers.","pos":[47,134]}]}]}],"pos":[218495,218630],"yaml":true},{"content":"In a midpoint value, the value after the least significant digit in the result is precisely half way between two numbers. For example, 7.5 is a midpoint value if it is to be rounded to an integer. For midpoint values, the nearest value can't be easily identified without a rounding convention, which is specified by the `mode` argument. The <xref:System.Decimal.Round%2A> method supports two rounding conventions for handling midpoint values.  \n  \n Rounding away from zero.  \n Midpoint values are rounded to the next number away from zero. For example, 3.5 rounds to 4, 4.5 rounds to 5, -3.5 rounds to -4, and -4.5 rounds to -5. This form of rounding is represented by the <xref:System.MidpointRounding?displayProperty=fullName> enumeration member.  \n  \n Rounding away from zero is the most widely known form of rounding.  \n  \n Rounding to even, or banker's rounding  \n Midpoint values are rounded to the nearest even number. For example, both 3.5 and 4.5 round to 4, and both -3.5 and -4.5 round to -4. This form of rounding is represented by the <xref:System.MidpointRounding?displayProperty=fullName> enumeration member.  \n  \n Rounding to nearest is the standard form of rounding used in financial and statistical operations. It conforms to IEEE Standard 754, section 4. When used in multiple rounding operations, it reduces the rounding error that is caused by consistently rounding midpoint values in a single direction. In some cases, this rounding error can be significant.","nodes":[{"pos":[0,442],"content":"In a midpoint value, the value after the least significant digit in the result is precisely half way between two numbers. For example, 7.5 is a midpoint value if it is to be rounded to an integer. For midpoint values, the nearest value can't be easily identified without a rounding convention, which is specified by the `mode` argument. The <xref:System.Decimal.Round%2A> method supports two rounding conventions for handling midpoint values.","nodes":[{"content":"In a midpoint value, the value after the least significant digit in the result is precisely half way between two numbers.","pos":[0,121]},{"content":"For example, 7.5 is a midpoint value if it is to be rounded to an integer.","pos":[122,196]},{"content":"For midpoint values, the nearest value can't be easily identified without a rounding convention, which is specified by the <ph id=\"ph1\">`mode`</ph> argument.","pos":[197,336],"source":" For midpoint values, the nearest value can't be easily identified without a rounding convention, which is specified by the `mode` argument."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Decimal.Round%2A&gt;</ph> method supports two rounding conventions for handling midpoint values.","pos":[337,442],"source":" The <xref:System.Decimal.Round%2A> method supports two rounding conventions for handling midpoint values."}]},{"pos":[449,748],"content":"Rounding away from zero.  \n Midpoint values are rounded to the next number away from zero. For example, 3.5 rounds to 4, 4.5 rounds to 5, -3.5 rounds to -4, and -4.5 rounds to -5. This form of rounding is represented by the <xref:System.MidpointRounding?displayProperty=fullName> enumeration member.","nodes":[{"content":"Rounding away from zero.","pos":[0,24]},{"content":"Midpoint values are rounded to the next number away from zero. For example, 3.5 rounds to 4, 4.5 rounds to 5, -3.5 rounds to -4, and -4.5 rounds to -5. This form of rounding is represented by the <xref:System.MidpointRounding?displayProperty=fullName> enumeration member.","pos":[28,299],"nodes":[{"content":"Midpoint values are rounded to the next number away from zero.","pos":[0,62]},{"content":"For example, 3.5 rounds to 4, 4.5 rounds to 5, -3.5 rounds to -4, and -4.5 rounds to -5.","pos":[63,151]},{"content":"This form of rounding is represented by the <ph id=\"ph1\">&lt;xref:System.MidpointRounding?displayProperty=fullName&gt;</ph> enumeration member.","pos":[152,271],"source":" This form of rounding is represented by the <xref:System.MidpointRounding?displayProperty=fullName> enumeration member."}]}]},{"pos":[755,821],"content":"Rounding away from zero is the most widely known form of rounding.","nodes":[{"content":"Rounding away from zero is the most widely known form of rounding.","pos":[0,66]}]},{"pos":[828,1123],"content":"Rounding to even, or banker's rounding  \n Midpoint values are rounded to the nearest even number. For example, both 3.5 and 4.5 round to 4, and both -3.5 and -4.5 round to -4. This form of rounding is represented by the <xref:System.MidpointRounding?displayProperty=fullName> enumeration member.","nodes":[{"content":"Rounding to even, or banker's rounding","pos":[0,38]},{"content":"Midpoint values are rounded to the nearest even number. For example, both 3.5 and 4.5 round to 4, and both -3.5 and -4.5 round to -4. This form of rounding is represented by the <xref:System.MidpointRounding?displayProperty=fullName> enumeration member.","pos":[42,295],"nodes":[{"content":"Midpoint values are rounded to the nearest even number.","pos":[0,55]},{"content":"For example, both 3.5 and 4.5 round to 4, and both -3.5 and -4.5 round to -4.","pos":[56,133]},{"content":"This form of rounding is represented by the <ph id=\"ph1\">&lt;xref:System.MidpointRounding?displayProperty=fullName&gt;</ph> enumeration member.","pos":[134,253],"source":" This form of rounding is represented by the <xref:System.MidpointRounding?displayProperty=fullName> enumeration member."}]}]},{"pos":[1130,1480],"content":"Rounding to nearest is the standard form of rounding used in financial and statistical operations. It conforms to IEEE Standard 754, section 4. When used in multiple rounding operations, it reduces the rounding error that is caused by consistently rounding midpoint values in a single direction. In some cases, this rounding error can be significant.","nodes":[{"content":"Rounding to nearest is the standard form of rounding used in financial and statistical operations. It conforms to IEEE Standard 754, section 4. When used in multiple rounding operations, it reduces the rounding error that is caused by consistently rounding midpoint values in a single direction. In some cases, this rounding error can be significant.","pos":[0,350],"nodes":[{"content":"Rounding to nearest is the standard form of rounding used in financial and statistical operations.","pos":[0,98]},{"content":"It conforms to IEEE Standard 754, section 4.","pos":[99,143]},{"content":"When used in multiple rounding operations, it reduces the rounding error that is caused by consistently rounding midpoint values in a single direction.","pos":[144,295]},{"content":"In some cases, this rounding error can be significant.","pos":[296,350]}]}]}],"pos":[218641,220134],"yaml":true,"extradata":"MT"},{"content":"A decimal number to round.","nodes":[{"pos":[0,26],"content":"A decimal number to round.","nodes":[{"content":"A decimal number to round.","pos":[0,26]}]}],"pos":[221014,221041],"yaml":true},{"content":"A value that specifies how to round <code>d</code> if it is midway between two other numbers.","nodes":[{"pos":[0,93],"content":"A value that specifies how to round <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">d</ph><ept id=\"p1\">&lt;/code&gt;</ept> if it is midway between two other numbers.","source":"A value that specifies how to round <code>d</code> if it is midway between two other numbers."}],"pos":[221111,221205],"yaml":true},{"content":"The integer that is nearest to the <code>d</code> parameter. If <code>d</code> is halfway between two numbers, one of which is even and the other odd, the <code>mode</code> parameter determines which of the two numbers is returned.","nodes":[{"pos":[0,231],"content":"The integer that is nearest to the <code>d</code> parameter. If <code>d</code> is halfway between two numbers, one of which is even and the other odd, the <code>mode</code> parameter determines which of the two numbers is returned.","nodes":[{"content":"The integer that is nearest to the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">d</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter.","pos":[0,60],"source":"The integer that is nearest to the <code>d</code> parameter."},{"content":"If <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">d</ph><ept id=\"p1\">&lt;/code&gt;</ept> is halfway between two numbers, one of which is even and the other odd, the <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">mode</ph><ept id=\"p2\">&lt;/code&gt;</ept> parameter determines which of the two numbers is returned.","pos":[61,231],"source":" If <code>d</code> is halfway between two numbers, one of which is even and the other odd, the <code>mode</code> parameter determines which of the two numbers is returned."}]}],"pos":[221263,221495],"yaml":true},{"content":"<code>mode</code> is not a <xref href=\"System.MidpointRounding\"></xref> value.","nodes":[{"pos":[0,78],"content":"<ph id=\"ph1\">&lt;code&gt;mode&lt;/code&gt;</ph> is not a <ph id=\"ph2\">&lt;xref href=\"System.MidpointRounding\"&gt;&lt;/xref&gt;</ph> value.","source":"<code>mode</code> is not a <xref href=\"System.MidpointRounding\"></xref> value."}],"pos":[221637,221716],"yaml":true},{"content":"The result is outside the range of a <xref href=\"System.Decimal\"></xref> object.","nodes":[{"pos":[0,80],"content":"The result is outside the range of a <ph id=\"ph1\">&lt;xref href=\"System.Decimal\"&gt;&lt;/xref&gt;</ph> object.","source":"The result is outside the range of a <xref href=\"System.Decimal\"></xref> object."}],"pos":[221810,221891],"yaml":true},{"content":"Rounds a decimal value to the nearest integer.","nodes":[{"pos":[0,46],"content":"Rounds a decimal value to the nearest integer.","nodes":[{"content":"Rounds a decimal value to the nearest integer.","pos":[0,46]}]}],"pos":[222976,223023],"yaml":true},{"content":"The behavior of this method follows IEEE Standard 754, section 4. This kind of rounding is sometimes called *round half to even* or *banker's rounding*. It minimizes rounding errors that result from consistently rounding a midpoint value in a single direction. It is equivalent to calling the <xref:System.Decimal.Round%28System.Decimal%2CSystem.MidpointRounding%29> method with a `mode` argument of <xref:System.MidpointRounding?displayProperty=fullName>.","nodes":[{"pos":[0,456],"content":"The behavior of this method follows IEEE Standard 754, section 4. This kind of rounding is sometimes called *round half to even* or *banker's rounding*. It minimizes rounding errors that result from consistently rounding a midpoint value in a single direction. It is equivalent to calling the <xref:System.Decimal.Round%28System.Decimal%2CSystem.MidpointRounding%29> method with a `mode` argument of <xref:System.MidpointRounding?displayProperty=fullName>.","nodes":[{"content":"The behavior of this method follows IEEE Standard 754, section 4.","pos":[0,65]},{"content":"This kind of rounding is sometimes called <bpt id=\"p1\">*</bpt>round half to even<ept id=\"p1\">*</ept> or <bpt id=\"p2\">*</bpt>banker's rounding<ept id=\"p2\">*</ept>.","pos":[66,152],"source":" This kind of rounding is sometimes called *round half to even* or *banker's rounding*."},{"content":"It minimizes rounding errors that result from consistently rounding a midpoint value in a single direction.","pos":[153,260]},{"content":"It is equivalent to calling the <ph id=\"ph1\">&lt;xref:System.Decimal.Round%28System.Decimal%2CSystem.MidpointRounding%29&gt;</ph> method with a <ph id=\"ph2\">`mode`</ph> argument of <ph id=\"ph3\">&lt;xref:System.MidpointRounding?displayProperty=fullName&gt;</ph>.","pos":[261,456],"source":" It is equivalent to calling the <xref:System.Decimal.Round%28System.Decimal%2CSystem.MidpointRounding%29> method with a `mode` argument of <xref:System.MidpointRounding?displayProperty=fullName>."}]}],"pos":[223034,223491],"yaml":true,"extradata":"MT"},{"content":"A decimal number to round.","nodes":[{"pos":[0,26],"content":"A decimal number to round.","nodes":[{"content":"A decimal number to round.","pos":[0,26]}]}],"pos":[224118,224145],"yaml":true},{"content":"The integer that is nearest to the <code>d</code> parameter. If <code>d</code> is halfway between two integers, one of which is even and the other odd, the even number is returned.","nodes":[{"pos":[0,180],"content":"The integer that is nearest to the <code>d</code> parameter. If <code>d</code> is halfway between two integers, one of which is even and the other odd, the even number is returned.","nodes":[{"content":"The integer that is nearest to the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">d</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter.","pos":[0,60],"source":"The integer that is nearest to the <code>d</code> parameter."},{"content":"If <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">d</ph><ept id=\"p1\">&lt;/code&gt;</ept> is halfway between two integers, one of which is even and the other odd, the even number is returned.","pos":[61,180],"source":" If <code>d</code> is halfway between two integers, one of which is even and the other odd, the even number is returned."}]}],"pos":[224203,224384],"yaml":true},{"content":"The result is outside the range of a <xref href=\"System.Decimal\"></xref> value.","nodes":[{"pos":[0,79],"content":"The result is outside the range of a <ph id=\"ph1\">&lt;xref href=\"System.Decimal\"&gt;&lt;/xref&gt;</ph> value.","source":"The result is outside the range of a <xref href=\"System.Decimal\"></xref> value."}],"pos":[224526,224606],"yaml":true},{"content":"Rounds a <xref href=\"System.Decimal\"></xref> value to a specified number of decimal places.","nodes":[{"pos":[0,91],"content":"Rounds a <ph id=\"ph1\">&lt;xref href=\"System.Decimal\"&gt;&lt;/xref&gt;</ph> value to a specified number of decimal places.","source":"Rounds a <xref href=\"System.Decimal\"></xref> value to a specified number of decimal places."}],"pos":[225751,225843],"yaml":true},{"content":"This method is equivalent to calling the <xref:System.Decimal.Round%28System.Decimal%2CSystem.Int32%2CSystem.MidpointRounding%29> method with a `mode` argument of <xref:System.MidpointRounding?displayProperty=fullName>.When `d` is exactly halfway between two rounded values, the result is the rounded value that has an even digit in the far right decimal position. For example, when rounded to two decimals, the value 2.345 becomes 2.34 and the value 2.355 becomes 2.36. This process is known as *rounding toward even*, or *banker's rounding*. It minimizes rounding errors that result from consistently rounding a midpoint value in a single direction.","nodes":[{"pos":[0,651],"content":"This method is equivalent to calling the <xref:System.Decimal.Round%28System.Decimal%2CSystem.Int32%2CSystem.MidpointRounding%29> method with a `mode` argument of <xref:System.MidpointRounding?displayProperty=fullName>.When `d` is exactly halfway between two rounded values, the result is the rounded value that has an even digit in the far right decimal position. For example, when rounded to two decimals, the value 2.345 becomes 2.34 and the value 2.355 becomes 2.36. This process is known as *rounding toward even*, or *banker's rounding*. It minimizes rounding errors that result from consistently rounding a midpoint value in a single direction.","nodes":[{"content":"This method is equivalent to calling the <ph id=\"ph1\">&lt;xref:System.Decimal.Round%28System.Decimal%2CSystem.Int32%2CSystem.MidpointRounding%29&gt;</ph> method with a <ph id=\"ph2\">`mode`</ph> argument of <ph id=\"ph3\">&lt;xref:System.MidpointRounding?displayProperty=fullName&gt;</ph>.When <ph id=\"ph4\">`d`</ph> is exactly halfway between two rounded values, the result is the rounded value that has an even digit in the far right decimal position.","pos":[0,364],"source":"This method is equivalent to calling the <xref:System.Decimal.Round%28System.Decimal%2CSystem.Int32%2CSystem.MidpointRounding%29> method with a `mode` argument of <xref:System.MidpointRounding?displayProperty=fullName>.When `d` is exactly halfway between two rounded values, the result is the rounded value that has an even digit in the far right decimal position."},{"content":"For example, when rounded to two decimals, the value 2.345 becomes 2.34 and the value 2.355 becomes 2.36.","pos":[365,470]},{"content":"This process is known as <bpt id=\"p1\">*</bpt>rounding toward even<ept id=\"p1\">*</ept>, or <bpt id=\"p2\">*</bpt>banker's rounding<ept id=\"p2\">*</ept>.","pos":[471,543],"source":" This process is known as *rounding toward even*, or *banker's rounding*."},{"content":"It minimizes rounding errors that result from consistently rounding a midpoint value in a single direction.","pos":[544,651]}]}],"pos":[225854,226506],"yaml":true,"extradata":"MT"},{"content":"A decimal number to round.","nodes":[{"pos":[0,26],"content":"A decimal number to round.","nodes":[{"content":"A decimal number to round.","pos":[0,26]}]}],"pos":[227062,227089],"yaml":true},{"content":"A value from 0 to 28 that specifies the number of decimal places to round to.","nodes":[{"pos":[0,77],"content":"A value from 0 to 28 that specifies the number of decimal places to round to.","nodes":[{"content":"A value from 0 to 28 that specifies the number of decimal places to round to.","pos":[0,77]}]}],"pos":[227152,227230],"yaml":true},{"content":"The decimal number equivalent to <code>d</code> rounded to <code>decimals</code> number of decimal places.","nodes":[{"pos":[0,106],"content":"The decimal number equivalent to <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">d</ph><ept id=\"p1\">&lt;/code&gt;</ept> rounded to <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">decimals</ph><ept id=\"p2\">&lt;/code&gt;</ept> number of decimal places.","source":"The decimal number equivalent to <code>d</code> rounded to <code>decimals</code> number of decimal places."}],"pos":[227288,227395],"yaml":true},{"content":"<code>decimals</code> is not a value from 0 to 28.","nodes":[{"pos":[0,50],"content":"<ph id=\"ph1\">&lt;code&gt;decimals&lt;/code&gt;</ph> is not a value from 0 to 28.","source":"<code>decimals</code> is not a value from 0 to 28."}],"pos":[227557,227608],"yaml":true},{"content":"Subtracts one specified <xref href=\"System.Decimal\"></xref> value from another.","nodes":[{"pos":[0,79],"content":"Subtracts one specified <ph id=\"ph1\">&lt;xref href=\"System.Decimal\"&gt;&lt;/xref&gt;</ph> value from another.","source":"Subtracts one specified <xref href=\"System.Decimal\"></xref> value from another."}],"pos":[228800,228880],"yaml":true},{"content":"The minuend.","nodes":[{"pos":[0,12],"content":"The minuend.","nodes":[{"content":"The minuend.","pos":[0,12]}]}],"pos":[229456,229469],"yaml":true},{"content":"The subtrahend.","nodes":[{"pos":[0,15],"content":"The subtrahend.","nodes":[{"content":"The subtrahend.","pos":[0,15]}]}],"pos":[229528,229544],"yaml":true},{"content":"The result of subtracting <code>d2</code> from <code>d1</code>.","nodes":[{"pos":[0,63],"content":"The result of subtracting <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">d2</ph><ept id=\"p1\">&lt;/code&gt;</ept> from <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">d1</ph><ept id=\"p2\">&lt;/code&gt;</ept>.","source":"The result of subtracting <code>d2</code> from <code>d1</code>."}],"pos":[229602,229666],"yaml":true},{"content":"The return value is less than <xref href=\"System.Decimal.MinValue\"></xref> or greater than <xref href=\"System.Decimal.MaxValue\"></xref>.","nodes":[{"pos":[0,136],"content":"The return value is less than <ph id=\"ph1\">&lt;xref href=\"System.Decimal.MinValue\"&gt;&lt;/xref&gt;</ph> or greater than <ph id=\"ph2\">&lt;xref href=\"System.Decimal.MaxValue\"&gt;&lt;/xref&gt;</ph>.","source":"The return value is less than <xref href=\"System.Decimal.MinValue\"></xref> or greater than <xref href=\"System.Decimal.MaxValue\"></xref>."}],"pos":[229811,229948],"yaml":true},{"content":"Converts the value of the specified <xref href=\"System.Decimal\"></xref> to the equivalent 8-bit unsigned integer.","nodes":[{"pos":[0,113],"content":"Converts the value of the specified <ph id=\"ph1\">&lt;xref href=\"System.Decimal\"&gt;&lt;/xref&gt;</ph> to the equivalent 8-bit unsigned integer.","source":"Converts the value of the specified <xref href=\"System.Decimal\"></xref> to the equivalent 8-bit unsigned integer."}],"pos":[231400,231514],"yaml":true},{"content":"Parameter `value` is rounded to the nearest integer value toward zero, and that result is returned.  \n  \n You can also convert a <xref:System.Decimal> value to an 8-bit unsigned integer by using the <xref:System.Decimal.op_Explicit%2A> assignment operator. Because the operator performs a narrowing conversion, you must use a casting operator in C# or a conversion function in Visual Basic.","nodes":[{"pos":[0,99],"content":"Parameter <ph id=\"ph1\">`value`</ph> is rounded to the nearest integer value toward zero, and that result is returned.","source":"Parameter `value` is rounded to the nearest integer value toward zero, and that result is returned."},{"pos":[106,390],"content":"You can also convert a <xref:System.Decimal> value to an 8-bit unsigned integer by using the <xref:System.Decimal.op_Explicit%2A> assignment operator. Because the operator performs a narrowing conversion, you must use a casting operator in C# or a conversion function in Visual Basic.","nodes":[{"content":"You can also convert a <xref:System.Decimal> value to an 8-bit unsigned integer by using the <xref:System.Decimal.op_Explicit%2A> assignment operator. Because the operator performs a narrowing conversion, you must use a casting operator in C# or a conversion function in Visual Basic.","pos":[0,284],"nodes":[{"content":"You can also convert a <ph id=\"ph1\">&lt;xref:System.Decimal&gt;</ph> value to an 8-bit unsigned integer by using the <ph id=\"ph2\">&lt;xref:System.Decimal.op_Explicit%2A&gt;</ph> assignment operator.","pos":[0,150],"source":"You can also convert a <xref:System.Decimal> value to an 8-bit unsigned integer by using the <xref:System.Decimal.op_Explicit%2A> assignment operator."},{"content":"Because the operator performs a narrowing conversion, you must use a casting operator in C# or a conversion function in Visual Basic.","pos":[151,284]}]}]}],"pos":[231525,231920],"yaml":true,"extradata":"MT"},{"content":"The decimal number to convert.","nodes":[{"pos":[0,30],"content":"The decimal number to convert.","nodes":[{"content":"The decimal number to convert.","pos":[0,30]}]}],"pos":[232477,232508],"yaml":true},{"content":"An 8-bit unsigned integer equivalent to <code>value</code>.","nodes":[{"pos":[0,59],"content":"An 8-bit unsigned integer equivalent to <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">value</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"An 8-bit unsigned integer equivalent to <code>value</code>."}],"pos":[232563,232623],"yaml":true},{"content":"<code>value</code> is less than <xref href=\"System.Byte.MinValue\"></xref> or greater than <xref href=\"System.Byte.MaxValue\"></xref>.","nodes":[{"pos":[0,132],"content":"<ph id=\"ph1\">&lt;code&gt;value&lt;/code&gt;</ph> is less than <ph id=\"ph2\">&lt;xref href=\"System.Byte.MinValue\"&gt;&lt;/xref&gt;</ph> or greater than <ph id=\"ph3\">&lt;xref href=\"System.Byte.MaxValue\"&gt;&lt;/xref&gt;</ph>.","source":"<code>value</code> is less than <xref href=\"System.Byte.MinValue\"></xref> or greater than <xref href=\"System.Byte.MaxValue\"></xref>."}],"pos":[232766,232899],"yaml":true},{"content":"Converts the value of the specified <xref href=\"System.Decimal\"></xref> to the equivalent double-precision floating-point number.","nodes":[{"pos":[0,129],"content":"Converts the value of the specified <ph id=\"ph1\">&lt;xref href=\"System.Decimal\"&gt;&lt;/xref&gt;</ph> to the equivalent double-precision floating-point number.","source":"Converts the value of the specified <xref href=\"System.Decimal\"></xref> to the equivalent double-precision floating-point number."}],"pos":[234346,234476],"yaml":true},{"content":"This operation can produce round-off errors because a double-precision floating-point number has fewer significant digits than a <xref:System.Decimal>.  \n  \n You can also convert a <xref:System.Decimal> to a <xref:System.Double> value by using the <xref:System.Decimal.op_Explicit%2A> assignment operator. Because the conversion can entail a loss of precision, you must use a casting operator in C# or a conversion function in Visual Basic.","nodes":[{"pos":[0,151],"content":"This operation can produce round-off errors because a double-precision floating-point number has fewer significant digits than a <xref:System.Decimal>.","nodes":[{"content":"This operation can produce round-off errors because a double-precision floating-point number has fewer significant digits than a <ph id=\"ph1\">&lt;xref:System.Decimal&gt;</ph>.","pos":[0,151],"source":"This operation can produce round-off errors because a double-precision floating-point number has fewer significant digits than a <xref:System.Decimal>."}]},{"pos":[158,440],"content":"You can also convert a <xref:System.Decimal> to a <xref:System.Double> value by using the <xref:System.Decimal.op_Explicit%2A> assignment operator. Because the conversion can entail a loss of precision, you must use a casting operator in C# or a conversion function in Visual Basic.","nodes":[{"content":"You can also convert a <xref:System.Decimal> to a <xref:System.Double> value by using the <xref:System.Decimal.op_Explicit%2A> assignment operator. Because the conversion can entail a loss of precision, you must use a casting operator in C# or a conversion function in Visual Basic.","pos":[0,282],"nodes":[{"content":"You can also convert a <ph id=\"ph1\">&lt;xref:System.Decimal&gt;</ph> to a <ph id=\"ph2\">&lt;xref:System.Double&gt;</ph> value by using the <ph id=\"ph3\">&lt;xref:System.Decimal.op_Explicit%2A&gt;</ph> assignment operator.","pos":[0,147],"source":"You can also convert a <xref:System.Decimal> to a <xref:System.Double> value by using the <xref:System.Decimal.op_Explicit%2A> assignment operator."},{"content":"Because the conversion can entail a loss of precision, you must use a casting operator in C# or a conversion function in Visual Basic.","pos":[148,282]}]}]}],"pos":[234487,234932],"yaml":true,"extradata":"MT"},{"content":"The decimal number to convert.","nodes":[{"pos":[0,30],"content":"The decimal number to convert.","nodes":[{"content":"The decimal number to convert.","pos":[0,30]}]}],"pos":[235592,235623],"yaml":true},{"content":"A double-precision floating-point number equivalent to <code>d</code>.","nodes":[{"pos":[0,70],"content":"A double-precision floating-point number equivalent to <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">d</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"A double-precision floating-point number equivalent to <code>d</code>."}],"pos":[235680,235751],"yaml":true},{"content":"Converts the value of the specified <xref href=\"System.Decimal\"></xref> to the equivalent 16-bit signed integer.","nodes":[{"pos":[0,112],"content":"Converts the value of the specified <ph id=\"ph1\">&lt;xref href=\"System.Decimal\"&gt;&lt;/xref&gt;</ph> to the equivalent 16-bit signed integer.","source":"Converts the value of the specified <xref href=\"System.Decimal\"></xref> to the equivalent 16-bit signed integer."}],"pos":[237263,237376],"yaml":true},{"content":"You can also convert a <xref:System.Decimal> value to a 16-bit integer by using the <xref:System.Decimal.op_Explicit%2A> assignment operator. Because the operator performs a narrowing conversion, you must use a casting operator in C# or a conversion function in Visual Basic.","nodes":[{"pos":[0,275],"content":"You can also convert a <xref:System.Decimal> value to a 16-bit integer by using the <xref:System.Decimal.op_Explicit%2A> assignment operator. Because the operator performs a narrowing conversion, you must use a casting operator in C# or a conversion function in Visual Basic.","nodes":[{"content":"You can also convert a <xref:System.Decimal> value to a 16-bit integer by using the <xref:System.Decimal.op_Explicit%2A> assignment operator. Because the operator performs a narrowing conversion, you must use a casting operator in C# or a conversion function in Visual Basic.","pos":[0,275],"nodes":[{"content":"You can also convert a <ph id=\"ph1\">&lt;xref:System.Decimal&gt;</ph> value to a 16-bit integer by using the <ph id=\"ph2\">&lt;xref:System.Decimal.op_Explicit%2A&gt;</ph> assignment operator.","pos":[0,141],"source":"You can also convert a <xref:System.Decimal> value to a 16-bit integer by using the <xref:System.Decimal.op_Explicit%2A> assignment operator."},{"content":"Because the operator performs a narrowing conversion, you must use a casting operator in C# or a conversion function in Visual Basic.","pos":[142,275]}]}]}],"pos":[237387,237663],"yaml":true,"extradata":"MT"},{"content":"The decimal number to convert.","nodes":[{"pos":[0,30],"content":"The decimal number to convert.","nodes":[{"content":"The decimal number to convert.","pos":[0,30]}]}],"pos":[238230,238261],"yaml":true},{"content":"A 16-bit signed integer equivalent to <code>value</code>.","nodes":[{"pos":[0,57],"content":"A 16-bit signed integer equivalent to <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">value</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"A 16-bit signed integer equivalent to <code>value</code>."}],"pos":[238317,238375],"yaml":true},{"content":"<code>value</code> is less than <xref href=\"System.Int16.MinValue\"></xref> or greater than <xref href=\"System.Int16.MaxValue\"></xref>.","nodes":[{"pos":[0,134],"content":"<ph id=\"ph1\">&lt;code&gt;value&lt;/code&gt;</ph> is less than <ph id=\"ph2\">&lt;xref href=\"System.Int16.MinValue\"&gt;&lt;/xref&gt;</ph> or greater than <ph id=\"ph3\">&lt;xref href=\"System.Int16.MaxValue\"&gt;&lt;/xref&gt;</ph>.","source":"<code>value</code> is less than <xref href=\"System.Int16.MinValue\"></xref> or greater than <xref href=\"System.Int16.MaxValue\"></xref>."}],"pos":[238519,238654],"yaml":true},{"content":"Converts the value of the specified <xref href=\"System.Decimal\"></xref> to the equivalent 32-bit signed integer.","nodes":[{"pos":[0,112],"content":"Converts the value of the specified <ph id=\"ph1\">&lt;xref href=\"System.Decimal\"&gt;&lt;/xref&gt;</ph> to the equivalent 32-bit signed integer.","source":"Converts the value of the specified <xref href=\"System.Decimal\"></xref> to the equivalent 32-bit signed integer."}],"pos":[240095,240208],"yaml":true},{"content":"The return value is the integral part of the decimal value; fractional digits are truncated.  \n  \n You can also convert a <xref:System.Decimal> value to a 32-bit integer by using the <xref:System.Decimal.op_Explicit%2A> assignment operator. Because the operator performs a narrowing conversion, you must use a casting operator in C# or a conversion function in Visual Basic.","nodes":[{"pos":[0,92],"content":"The return value is the integral part of the decimal value; fractional digits are truncated.","nodes":[{"content":"The return value is the integral part of the decimal value; fractional digits are truncated.","pos":[0,92]}]},{"pos":[99,374],"content":"You can also convert a <xref:System.Decimal> value to a 32-bit integer by using the <xref:System.Decimal.op_Explicit%2A> assignment operator. Because the operator performs a narrowing conversion, you must use a casting operator in C# or a conversion function in Visual Basic.","nodes":[{"content":"You can also convert a <xref:System.Decimal> value to a 32-bit integer by using the <xref:System.Decimal.op_Explicit%2A> assignment operator. Because the operator performs a narrowing conversion, you must use a casting operator in C# or a conversion function in Visual Basic.","pos":[0,275],"nodes":[{"content":"You can also convert a <ph id=\"ph1\">&lt;xref:System.Decimal&gt;</ph> value to a 32-bit integer by using the <ph id=\"ph2\">&lt;xref:System.Decimal.op_Explicit%2A&gt;</ph> assignment operator.","pos":[0,141],"source":"You can also convert a <xref:System.Decimal> value to a 32-bit integer by using the <xref:System.Decimal.op_Explicit%2A> assignment operator."},{"content":"Because the operator performs a narrowing conversion, you must use a casting operator in C# or a conversion function in Visual Basic.","pos":[142,275]}]}]}],"pos":[240219,240598],"yaml":true,"extradata":"MT"},{"content":"The decimal number to convert.","nodes":[{"pos":[0,30],"content":"The decimal number to convert.","nodes":[{"content":"The decimal number to convert.","pos":[0,30]}]}],"pos":[241155,241186],"yaml":true},{"content":"A 32-bit signed integer equivalent to the value of <code>d</code>.","nodes":[{"pos":[0,66],"content":"A 32-bit signed integer equivalent to the value of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">d</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"A 32-bit signed integer equivalent to the value of <code>d</code>."}],"pos":[241242,241309],"yaml":true},{"content":"<code>d</code> is less than <xref href=\"System.Int32.MinValue\"></xref> or greater than <xref href=\"System.Int32.MaxValue\"></xref>.","nodes":[{"pos":[0,130],"content":"<ph id=\"ph1\">&lt;code&gt;d&lt;/code&gt;</ph> is less than <ph id=\"ph2\">&lt;xref href=\"System.Int32.MinValue\"&gt;&lt;/xref&gt;</ph> or greater than <ph id=\"ph3\">&lt;xref href=\"System.Int32.MaxValue\"&gt;&lt;/xref&gt;</ph>.","source":"<code>d</code> is less than <xref href=\"System.Int32.MinValue\"></xref> or greater than <xref href=\"System.Int32.MaxValue\"></xref>."}],"pos":[241453,241584],"yaml":true},{"content":"Converts the value of the specified <xref href=\"System.Decimal\"></xref> to the equivalent 64-bit signed integer.","nodes":[{"pos":[0,112],"content":"Converts the value of the specified <ph id=\"ph1\">&lt;xref href=\"System.Decimal\"&gt;&lt;/xref&gt;</ph> to the equivalent 64-bit signed integer.","source":"Converts the value of the specified <xref href=\"System.Decimal\"></xref> to the equivalent 64-bit signed integer."}],"pos":[243042,243155],"yaml":true},{"content":"The return value is the integral part of the decimal value; fractional digits are truncated.  \n  \n You can also convert a <xref:System.Decimal> value to a 64-bit integer by using the <xref:System.Decimal.op_Explicit%2A> assignment operator. Because the operator performs a narrowing conversion, you must use a casting operator in C# or a conversion function in Visual Basic.","nodes":[{"pos":[0,92],"content":"The return value is the integral part of the decimal value; fractional digits are truncated.","nodes":[{"content":"The return value is the integral part of the decimal value; fractional digits are truncated.","pos":[0,92]}]},{"pos":[99,374],"content":"You can also convert a <xref:System.Decimal> value to a 64-bit integer by using the <xref:System.Decimal.op_Explicit%2A> assignment operator. Because the operator performs a narrowing conversion, you must use a casting operator in C# or a conversion function in Visual Basic.","nodes":[{"content":"You can also convert a <xref:System.Decimal> value to a 64-bit integer by using the <xref:System.Decimal.op_Explicit%2A> assignment operator. Because the operator performs a narrowing conversion, you must use a casting operator in C# or a conversion function in Visual Basic.","pos":[0,275],"nodes":[{"content":"You can also convert a <ph id=\"ph1\">&lt;xref:System.Decimal&gt;</ph> value to a 64-bit integer by using the <ph id=\"ph2\">&lt;xref:System.Decimal.op_Explicit%2A&gt;</ph> assignment operator.","pos":[0,141],"source":"You can also convert a <xref:System.Decimal> value to a 64-bit integer by using the <xref:System.Decimal.op_Explicit%2A> assignment operator."},{"content":"Because the operator performs a narrowing conversion, you must use a casting operator in C# or a conversion function in Visual Basic.","pos":[142,275]}]}]}],"pos":[243166,243545],"yaml":true,"extradata":"MT"},{"content":"The decimal number to convert.","nodes":[{"pos":[0,30],"content":"The decimal number to convert.","nodes":[{"content":"The decimal number to convert.","pos":[0,30]}]}],"pos":[244103,244134],"yaml":true},{"content":"A 64-bit signed integer equivalent to the value of <code>d</code>.","nodes":[{"pos":[0,66],"content":"A 64-bit signed integer equivalent to the value of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">d</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"A 64-bit signed integer equivalent to the value of <code>d</code>."}],"pos":[244190,244257],"yaml":true},{"content":"<code>d</code> is less than <xref href=\"System.Int64.MinValue\"></xref> or greater than <xref href=\"System.Int64.MaxValue\"></xref>.","nodes":[{"pos":[0,130],"content":"<ph id=\"ph1\">&lt;code&gt;d&lt;/code&gt;</ph> is less than <ph id=\"ph2\">&lt;xref href=\"System.Int64.MinValue\"&gt;&lt;/xref&gt;</ph> or greater than <ph id=\"ph3\">&lt;xref href=\"System.Int64.MaxValue\"&gt;&lt;/xref&gt;</ph>.","source":"<code>d</code> is less than <xref href=\"System.Int64.MinValue\"></xref> or greater than <xref href=\"System.Int64.MaxValue\"></xref>."}],"pos":[244401,244532],"yaml":true},{"content":"Converts the specified <xref href=\"System.Decimal\"></xref> value to the equivalent OLE Automation Currency value, which is contained in a 64-bit signed integer.","nodes":[{"pos":[0,160],"content":"Converts the specified <ph id=\"ph1\">&lt;xref href=\"System.Decimal\"&gt;&lt;/xref&gt;</ph> value to the equivalent OLE Automation Currency value, which is contained in a 64-bit signed integer.","source":"Converts the specified <xref href=\"System.Decimal\"></xref> value to the equivalent OLE Automation Currency value, which is contained in a 64-bit signed integer."}],"pos":[246020,246181],"yaml":true},{"content":"The decimal number to convert.","nodes":[{"pos":[0,30],"content":"The decimal number to convert.","nodes":[{"content":"The decimal number to convert.","pos":[0,30]}]}],"pos":[246980,247011],"yaml":true},{"content":"A 64-bit signed integer that contains the OLE Automation equivalent of <code>value</code>.","nodes":[{"pos":[0,90],"content":"A 64-bit signed integer that contains the OLE Automation equivalent of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">value</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"A 64-bit signed integer that contains the OLE Automation equivalent of <code>value</code>."}],"pos":[247067,247158],"yaml":true},{"content":"Converts the value of the specified <xref href=\"System.Decimal\"></xref> to the equivalent 8-bit signed integer.","nodes":[{"pos":[0,111],"content":"Converts the value of the specified <ph id=\"ph1\">&lt;xref href=\"System.Decimal\"&gt;&lt;/xref&gt;</ph> to the equivalent 8-bit signed integer.","source":"Converts the value of the specified <xref href=\"System.Decimal\"></xref> to the equivalent 8-bit signed integer."}],"pos":[248313,248425],"yaml":true},{"content":"You can also convert a <xref:System.Decimal> value to an 8-bit signed integer by using the <xref:System.Decimal.op_Explicit%2A> assignment operator. Because the operator performs a narrowing conversion, you must use a casting operator in C# or a conversion function in Visual Basic.","nodes":[{"pos":[0,282],"content":"You can also convert a <xref:System.Decimal> value to an 8-bit signed integer by using the <xref:System.Decimal.op_Explicit%2A> assignment operator. Because the operator performs a narrowing conversion, you must use a casting operator in C# or a conversion function in Visual Basic.","nodes":[{"content":"You can also convert a <xref:System.Decimal> value to an 8-bit signed integer by using the <xref:System.Decimal.op_Explicit%2A> assignment operator. Because the operator performs a narrowing conversion, you must use a casting operator in C# or a conversion function in Visual Basic.","pos":[0,282],"nodes":[{"content":"You can also convert a <ph id=\"ph1\">&lt;xref:System.Decimal&gt;</ph> value to an 8-bit signed integer by using the <ph id=\"ph2\">&lt;xref:System.Decimal.op_Explicit%2A&gt;</ph> assignment operator.","pos":[0,148],"source":"You can also convert a <xref:System.Decimal> value to an 8-bit signed integer by using the <xref:System.Decimal.op_Explicit%2A> assignment operator."},{"content":"Because the operator performs a narrowing conversion, you must use a casting operator in C# or a conversion function in Visual Basic.","pos":[149,282]}]}]}],"pos":[248436,248719],"yaml":true,"extradata":"MT"},{"content":"The decimal number to convert.","nodes":[{"pos":[0,30],"content":"The decimal number to convert.","nodes":[{"content":"The decimal number to convert.","pos":[0,30]}]}],"pos":[249329,249360],"yaml":true},{"content":"An 8-bit signed integer equivalent to <code>value</code>.","nodes":[{"pos":[0,57],"content":"An 8-bit signed integer equivalent to <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">value</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"An 8-bit signed integer equivalent to <code>value</code>."}],"pos":[249416,249474],"yaml":true},{"content":"<code>value</code> is less than <xref href=\"System.SByte.MinValue\"></xref> or greater than <xref href=\"System.SByte.MaxValue\"></xref>.","nodes":[{"pos":[0,134],"content":"<ph id=\"ph1\">&lt;code&gt;value&lt;/code&gt;</ph> is less than <ph id=\"ph2\">&lt;xref href=\"System.SByte.MinValue\"&gt;&lt;/xref&gt;</ph> or greater than <ph id=\"ph3\">&lt;xref href=\"System.SByte.MaxValue\"&gt;&lt;/xref&gt;</ph>.","source":"<code>value</code> is less than <xref href=\"System.SByte.MinValue\"></xref> or greater than <xref href=\"System.SByte.MaxValue\"></xref>."}],"pos":[249618,249753],"yaml":true},{"content":"Converts the value of the specified <xref href=\"System.Decimal\"></xref> to the equivalent single-precision floating-point number.","nodes":[{"pos":[0,129],"content":"Converts the value of the specified <ph id=\"ph1\">&lt;xref href=\"System.Decimal\"&gt;&lt;/xref&gt;</ph> to the equivalent single-precision floating-point number.","source":"Converts the value of the specified <xref href=\"System.Decimal\"></xref> to the equivalent single-precision floating-point number."}],"pos":[251308,251438],"yaml":true},{"content":"This operation can produce round-off errors because a single-precision floating-point number has fewer significant digits than a <xref:System.Decimal>.  \n  \n You can also convert a <xref:System.Decimal> to a <xref:System.Single> value by using the <xref:System.Decimal.op_Explicit%2A> assignment operator. Because the conversion can entail a loss of precision, you must use a casting operator in C# or a conversion function in Visual Basic.","nodes":[{"pos":[0,151],"content":"This operation can produce round-off errors because a single-precision floating-point number has fewer significant digits than a <xref:System.Decimal>.","nodes":[{"content":"This operation can produce round-off errors because a single-precision floating-point number has fewer significant digits than a <ph id=\"ph1\">&lt;xref:System.Decimal&gt;</ph>.","pos":[0,151],"source":"This operation can produce round-off errors because a single-precision floating-point number has fewer significant digits than a <xref:System.Decimal>."}]},{"pos":[158,440],"content":"You can also convert a <xref:System.Decimal> to a <xref:System.Single> value by using the <xref:System.Decimal.op_Explicit%2A> assignment operator. Because the conversion can entail a loss of precision, you must use a casting operator in C# or a conversion function in Visual Basic.","nodes":[{"content":"You can also convert a <xref:System.Decimal> to a <xref:System.Single> value by using the <xref:System.Decimal.op_Explicit%2A> assignment operator. Because the conversion can entail a loss of precision, you must use a casting operator in C# or a conversion function in Visual Basic.","pos":[0,282],"nodes":[{"content":"You can also convert a <ph id=\"ph1\">&lt;xref:System.Decimal&gt;</ph> to a <ph id=\"ph2\">&lt;xref:System.Single&gt;</ph> value by using the <ph id=\"ph3\">&lt;xref:System.Decimal.op_Explicit%2A&gt;</ph> assignment operator.","pos":[0,147],"source":"You can also convert a <xref:System.Decimal> to a <xref:System.Single> value by using the <xref:System.Decimal.op_Explicit%2A> assignment operator."},{"content":"Because the conversion can entail a loss of precision, you must use a casting operator in C# or a conversion function in Visual Basic.","pos":[148,282]}]}]}],"pos":[251449,251894],"yaml":true,"extradata":"MT"},{"content":"The decimal number to convert.","nodes":[{"pos":[0,30],"content":"The decimal number to convert.","nodes":[{"content":"The decimal number to convert.","pos":[0,30]}]}],"pos":[252557,252588],"yaml":true},{"content":"A single-precision floating-point number equivalent to the value of <code>d</code>.","nodes":[{"pos":[0,83],"content":"A single-precision floating-point number equivalent to the value of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">d</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"A single-precision floating-point number equivalent to the value of <code>d</code>."}],"pos":[252645,252729],"yaml":true},{"content":"Converts the numeric value of this instance to its equivalent string representation using the specified format and culture-specific format information.","nodes":[{"pos":[0,151],"content":"Converts the numeric value of this instance to its equivalent string representation using the specified format and culture-specific format information.","nodes":[{"content":"Converts the numeric value of this instance to its equivalent string representation using the specified format and culture-specific format information.","pos":[0,151]}]}],"pos":[254361,254513],"yaml":true},{"content":"The <xref:System.Double.ToString%28System.String%2CSystem.IFormatProvider%29> method formats a <xref:System.Double> value in a specified format of a specified culture. If you want to use default format or culture settings, use the other overloads of the <xref:System.Double.ToString%2A> method, as follows:  \n  \n|To use format|For culture|Use the overload|  \n|-------------------|-----------------|----------------------|  \n|Default (\"G\") format|Default (current) culture|<xref:System.Double.ToString>|  \n|Default (\"G\") format|A specific culture|<xref:System.Double.ToString%28System.IFormatProvider%29>|  \n|A specific format|Default (current) culture|<xref:System.Double.ToString%28System.String%29>|  \n  \n The `format` parameter can be any valid standard numeric format specifier except for D, R, and X, as well as any combination of custom numeric format specifiers. If `format` is `null` or an empty string, the return value for this instance is formatted with the general numeric format specifier (\"G\").  \n  \n The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics:  \n  \n-   For more information about numeric format specifiers, see [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) and [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md).  \n  \n-   For more information about formatting, see [Formatting Types](~/docs/standard/base-types/formatting-types.md).  \n  \n The `provider` parameter is an <xref:System.IFormatProvider> implementation whose <xref:System.IFormatProvider.GetFormat%2A?displayProperty=fullName> method returns a <xref:System.Globalization.NumberFormatInfo> object. Typically, `provider` is a <xref:System.Globalization.NumberFormatInfo> or <xref:System.Globalization.CultureInfo> object. The `provider` parameter supplies culture-specific information used in formatting. If `provider` is `null`, the thread current culture is used.","nodes":[{"pos":[0,306],"content":"The <xref:System.Double.ToString%28System.String%2CSystem.IFormatProvider%29> method formats a <xref:System.Double> value in a specified format of a specified culture. If you want to use default format or culture settings, use the other overloads of the <xref:System.Double.ToString%2A> method, as follows:","nodes":[{"content":"The <xref:System.Double.ToString%28System.String%2CSystem.IFormatProvider%29> method formats a <xref:System.Double> value in a specified format of a specified culture. If you want to use default format or culture settings, use the other overloads of the <xref:System.Double.ToString%2A> method, as follows:","pos":[0,306],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Double.ToString%28System.String%2CSystem.IFormatProvider%29&gt;</ph> method formats a <ph id=\"ph2\">&lt;xref:System.Double&gt;</ph> value in a specified format of a specified culture.","pos":[0,167],"source":"The <xref:System.Double.ToString%28System.String%2CSystem.IFormatProvider%29> method formats a <xref:System.Double> value in a specified format of a specified culture."},{"content":"If you want to use default format or culture settings, use the other overloads of the <ph id=\"ph1\">&lt;xref:System.Double.ToString%2A&gt;</ph> method, as follows:","pos":[168,306],"source":" If you want to use default format or culture settings, use the other overloads of the <xref:System.Double.ToString%2A> method, as follows:"}]}]},{"pos":[313,326],"content":"To use format","nodes":[{"content":"To use format","pos":[0,13]}]},{"pos":[327,338],"content":"For culture","nodes":[{"content":"For culture","pos":[0,11]}]},{"pos":[339,355],"content":"Use the overload","nodes":[{"content":"Use the overload","pos":[0,16]}]},{"pos":[425,445],"content":"Default (\"G\") format","nodes":[{"content":"Default (\"G\") format","pos":[0,20]}]},{"pos":[446,471],"content":"Default (current) culture","nodes":[{"content":"Default (current) culture","pos":[0,25]}]},{"pos":[472,501],"content":"<xref:System.Double.ToString>","nodes":[]},{"pos":[506,526],"content":"Default (\"G\") format","nodes":[{"content":"Default (\"G\") format","pos":[0,20]}]},{"pos":[527,545],"content":"A specific culture","nodes":[{"content":"A specific culture","pos":[0,18]}]},{"pos":[546,603],"content":"<xref:System.Double.ToString%28System.IFormatProvider%29>","nodes":[]},{"pos":[608,625],"content":"A specific format","nodes":[{"content":"A specific format","pos":[0,17]}]},{"pos":[626,651],"content":"Default (current) culture","nodes":[{"content":"Default (current) culture","pos":[0,25]}]},{"pos":[652,700],"content":"<xref:System.Double.ToString%28System.String%29>","nodes":[]},{"pos":[708,1008],"content":"The `format` parameter can be any valid standard numeric format specifier except for D, R, and X, as well as any combination of custom numeric format specifiers. If `format` is `null` or an empty string, the return value for this instance is formatted with the general numeric format specifier (\"G\").","nodes":[{"content":"The <ph id=\"ph1\">`format`</ph> parameter can be any valid standard numeric format specifier except for D, R, and X, as well as any combination of custom numeric format specifiers.","pos":[0,161],"source":"The `format` parameter can be any valid standard numeric format specifier except for D, R, and X, as well as any combination of custom numeric format specifiers."},{"content":"If <ph id=\"ph1\">`format`</ph> is <ph id=\"ph2\">`null`</ph> or an empty string, the return value for this instance is formatted with the general numeric format specifier (\"G\").","pos":[162,300],"source":" If `format` is `null` or an empty string, the return value for this instance is formatted with the general numeric format specifier (\"G\")."}]},{"pos":[1015,1145],"content":"The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics:","nodes":[{"content":"The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics:","pos":[0,130]}]},{"pos":[1155,1407],"content":"For more information about numeric format specifiers, see <bpt id=\"p1\">[</bpt>Standard Numeric Format Strings<ept id=\"p1\">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept> and <bpt id=\"p2\">[</bpt>Custom Numeric Format Strings<ept id=\"p2\">](~/docs/standard/base-types/custom-numeric-format-strings.md)</ept>.","source":"For more information about numeric format specifiers, see [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) and [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md)."},{"pos":[1417,1527],"content":"For more information about formatting, see <bpt id=\"p1\">[</bpt>Formatting Types<ept id=\"p1\">](~/docs/standard/base-types/formatting-types.md)</ept>.","source":"For more information about formatting, see [Formatting Types](~/docs/standard/base-types/formatting-types.md)."},{"pos":[1534,2020],"content":"The `provider` parameter is an <xref:System.IFormatProvider> implementation whose <xref:System.IFormatProvider.GetFormat%2A?displayProperty=fullName> method returns a <xref:System.Globalization.NumberFormatInfo> object. Typically, `provider` is a <xref:System.Globalization.NumberFormatInfo> or <xref:System.Globalization.CultureInfo> object. The `provider` parameter supplies culture-specific information used in formatting. If `provider` is `null`, the thread current culture is used.","nodes":[{"content":"The <ph id=\"ph1\">`provider`</ph> parameter is an <ph id=\"ph2\">&lt;xref:System.IFormatProvider&gt;</ph> implementation whose <ph id=\"ph3\">&lt;xref:System.IFormatProvider.GetFormat%2A?displayProperty=fullName&gt;</ph> method returns a <ph id=\"ph4\">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object.","pos":[0,219],"source":"The `provider` parameter is an <xref:System.IFormatProvider> implementation whose <xref:System.IFormatProvider.GetFormat%2A?displayProperty=fullName> method returns a <xref:System.Globalization.NumberFormatInfo> object."},{"content":"Typically, <ph id=\"ph1\">`provider`</ph> is a <ph id=\"ph2\">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> or <ph id=\"ph3\">&lt;xref:System.Globalization.CultureInfo&gt;</ph> object.","pos":[220,342],"source":" Typically, `provider` is a <xref:System.Globalization.NumberFormatInfo> or <xref:System.Globalization.CultureInfo> object."},{"content":"The <ph id=\"ph1\">`provider`</ph> parameter supplies culture-specific information used in formatting.","pos":[343,425],"source":" The `provider` parameter supplies culture-specific information used in formatting."},{"content":"If <ph id=\"ph1\">`provider`</ph> is <ph id=\"ph2\">`null`</ph>, the thread current culture is used.","pos":[426,486],"source":" If `provider` is `null`, the thread current culture is used."}]}],"pos":[254524,256569],"yaml":true,"extradata":"MT"},{"content":"A numeric format string.","nodes":[{"pos":[0,24],"content":"A numeric format string.","nodes":[{"content":"A numeric format string.","pos":[0,24]}]}],"pos":[257188,257213],"yaml":true},{"content":"An object that supplies culture-specific formatting information.","nodes":[{"pos":[0,64],"content":"An object that supplies culture-specific formatting information.","nodes":[{"content":"An object that supplies culture-specific formatting information.","pos":[0,64]}]}],"pos":[257286,257351],"yaml":true},{"content":"The string representation of the value of this instance as specified by <code>format</code> and <code>provider</code>.","nodes":[{"pos":[0,118],"content":"The string representation of the value of this instance as specified by <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">format</ph><ept id=\"p1\">&lt;/code&gt;</ept> and <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">provider</ph><ept id=\"p2\">&lt;/code&gt;</ept>.","source":"The string representation of the value of this instance as specified by <code>format</code> and <code>provider</code>."}],"pos":[257408,257527],"yaml":true},{"content":"<code>format</code> is invalid.","nodes":[{"pos":[0,31],"content":"<ph id=\"ph1\">&lt;code&gt;format&lt;/code&gt;</ph> is invalid.","source":"<code>format</code> is invalid."}],"pos":[257668,257700],"yaml":true},{"content":"Converts the numeric value of this instance to its equivalent string representation using the specified culture-specific format information.","nodes":[{"pos":[0,140],"content":"Converts the numeric value of this instance to its equivalent string representation using the specified culture-specific format information.","nodes":[{"content":"Converts the numeric value of this instance to its equivalent string representation using the specified culture-specific format information.","pos":[0,140]}]}],"pos":[259212,259353],"yaml":true},{"content":"The <xref:System.Decimal.ToString%28System.IFormatProvider%29> method formats a <xref:System.Decimal> value in the default (\"G\", or general) format of a specified culture. If you want to specify a different format or the current culture, use the other overloads of the <xref:System.Decimal.ToString%2A> method, as follows:  \n  \n|To use format|For culture|Use the overload|  \n|-------------------|-----------------|----------------------|  \n|Default (\"G\") format|Default (current) culture|<xref:System.Decimal.ToString>|  \n|A specific format|Default (current) culture|<xref:System.Decimal.ToString%28System.String%29>|  \n|A specific format|A specific culture|<xref:System.Decimal.ToString%28System.String%2CSystem.IFormatProvider%29>|  \n  \n The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics:  \n  \n-   For more information about numeric format specifiers, see [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) and [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md).  \n  \n-   For more information about formatting, see [Formatting Types](~/docs/standard/base-types/formatting-types.md).  \n  \n The `provider` parameter is an <xref:System.IFormatProvider> implementation whose <xref:System.IFormatProvider.GetFormat%2A?displayProperty=fullName> method returns a <xref:System.Globalization.NumberFormatInfo> object. Typically, `provider` is a <xref:System.Globalization.NumberFormatInfo> object or a <xref:System.Globalization.CultureInfo> object. The `provider` parameter supplies culture-specific information used in formatting. If `provider` is `null`, the thread current culture is used.  \n  \n To convert a <xref:System.Decimal> value to its string representation using a specified culture and a specific format string, call the <xref:System.Decimal.ToString%28System.String%2CSystem.IFormatProvider%29?displayProperty=fullName> method.","nodes":[{"pos":[0,322],"content":"The <xref:System.Decimal.ToString%28System.IFormatProvider%29> method formats a <xref:System.Decimal> value in the default (\"G\", or general) format of a specified culture. If you want to specify a different format or the current culture, use the other overloads of the <xref:System.Decimal.ToString%2A> method, as follows:","nodes":[{"content":"The <xref:System.Decimal.ToString%28System.IFormatProvider%29> method formats a <xref:System.Decimal> value in the default (\"G\", or general) format of a specified culture. If you want to specify a different format or the current culture, use the other overloads of the <xref:System.Decimal.ToString%2A> method, as follows:","pos":[0,322],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Decimal.ToString%28System.IFormatProvider%29&gt;</ph> method formats a <ph id=\"ph2\">&lt;xref:System.Decimal&gt;</ph> value in the default (\"G\", or general) format of a specified culture.","pos":[0,171],"source":"The <xref:System.Decimal.ToString%28System.IFormatProvider%29> method formats a <xref:System.Decimal> value in the default (\"G\", or general) format of a specified culture."},{"content":"If you want to specify a different format or the current culture, use the other overloads of the <ph id=\"ph1\">&lt;xref:System.Decimal.ToString%2A&gt;</ph> method, as follows:","pos":[172,322],"source":" If you want to specify a different format or the current culture, use the other overloads of the <xref:System.Decimal.ToString%2A> method, as follows:"}]}]},{"pos":[329,342],"content":"To use format","nodes":[{"content":"To use format","pos":[0,13]}]},{"pos":[343,354],"content":"For culture","nodes":[{"content":"For culture","pos":[0,11]}]},{"pos":[355,371],"content":"Use the overload","nodes":[{"content":"Use the overload","pos":[0,16]}]},{"pos":[441,461],"content":"Default (\"G\") format","nodes":[{"content":"Default (\"G\") format","pos":[0,20]}]},{"pos":[462,487],"content":"Default (current) culture","nodes":[{"content":"Default (current) culture","pos":[0,25]}]},{"pos":[488,518],"content":"<xref:System.Decimal.ToString>","nodes":[]},{"pos":[523,540],"content":"A specific format","nodes":[{"content":"A specific format","pos":[0,17]}]},{"pos":[541,566],"content":"Default (current) culture","nodes":[{"content":"Default (current) culture","pos":[0,25]}]},{"pos":[567,616],"content":"<xref:System.Decimal.ToString%28System.String%29>","nodes":[]},{"pos":[621,638],"content":"A specific format","nodes":[{"content":"A specific format","pos":[0,17]}]},{"pos":[639,657],"content":"A specific culture","nodes":[{"content":"A specific culture","pos":[0,18]}]},{"pos":[658,732],"content":"<xref:System.Decimal.ToString%28System.String%2CSystem.IFormatProvider%29>","nodes":[]},{"pos":[740,870],"content":"The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics:","nodes":[{"content":"The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics:","pos":[0,130]}]},{"pos":[880,1132],"content":"For more information about numeric format specifiers, see <bpt id=\"p1\">[</bpt>Standard Numeric Format Strings<ept id=\"p1\">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept> and <bpt id=\"p2\">[</bpt>Custom Numeric Format Strings<ept id=\"p2\">](~/docs/standard/base-types/custom-numeric-format-strings.md)</ept>.","source":"For more information about numeric format specifiers, see [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) and [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md)."},{"pos":[1142,1252],"content":"For more information about formatting, see <bpt id=\"p1\">[</bpt>Formatting Types<ept id=\"p1\">](~/docs/standard/base-types/formatting-types.md)</ept>.","source":"For more information about formatting, see [Formatting Types](~/docs/standard/base-types/formatting-types.md)."},{"pos":[1259,1754],"content":"The `provider` parameter is an <xref:System.IFormatProvider> implementation whose <xref:System.IFormatProvider.GetFormat%2A?displayProperty=fullName> method returns a <xref:System.Globalization.NumberFormatInfo> object. Typically, `provider` is a <xref:System.Globalization.NumberFormatInfo> object or a <xref:System.Globalization.CultureInfo> object. The `provider` parameter supplies culture-specific information used in formatting. If `provider` is `null`, the thread current culture is used.","nodes":[{"content":"The <ph id=\"ph1\">`provider`</ph> parameter is an <ph id=\"ph2\">&lt;xref:System.IFormatProvider&gt;</ph> implementation whose <ph id=\"ph3\">&lt;xref:System.IFormatProvider.GetFormat%2A?displayProperty=fullName&gt;</ph> method returns a <ph id=\"ph4\">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object.","pos":[0,219],"source":"The `provider` parameter is an <xref:System.IFormatProvider> implementation whose <xref:System.IFormatProvider.GetFormat%2A?displayProperty=fullName> method returns a <xref:System.Globalization.NumberFormatInfo> object."},{"content":"Typically, <ph id=\"ph1\">`provider`</ph> is a <ph id=\"ph2\">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object or a <ph id=\"ph3\">&lt;xref:System.Globalization.CultureInfo&gt;</ph> object.","pos":[220,351],"source":" Typically, `provider` is a <xref:System.Globalization.NumberFormatInfo> object or a <xref:System.Globalization.CultureInfo> object."},{"content":"The <ph id=\"ph1\">`provider`</ph> parameter supplies culture-specific information used in formatting.","pos":[352,434],"source":" The `provider` parameter supplies culture-specific information used in formatting."},{"content":"If <ph id=\"ph1\">`provider`</ph> is <ph id=\"ph2\">`null`</ph>, the thread current culture is used.","pos":[435,495],"source":" If `provider` is `null`, the thread current culture is used."}]},{"pos":[1761,2003],"content":"To convert a <xref:System.Decimal> value to its string representation using a specified culture and a specific format string, call the <xref:System.Decimal.ToString%28System.String%2CSystem.IFormatProvider%29?displayProperty=fullName> method.","nodes":[{"content":"To convert a <ph id=\"ph1\">&lt;xref:System.Decimal&gt;</ph> value to its string representation using a specified culture and a specific format string, call the <ph id=\"ph2\">&lt;xref:System.Decimal.ToString%28System.String%2CSystem.IFormatProvider%29?displayProperty=fullName&gt;</ph> method.","pos":[0,242],"source":"To convert a <xref:System.Decimal> value to its string representation using a specified culture and a specific format string, call the <xref:System.Decimal.ToString%28System.String%2CSystem.IFormatProvider%29?displayProperty=fullName> method."}]}],"pos":[259364,261390],"yaml":true,"extradata":"MT"},{"content":"An object that supplies culture-specific formatting information.","nodes":[{"pos":[0,64],"content":"An object that supplies culture-specific formatting information.","nodes":[{"content":"An object that supplies culture-specific formatting information.","pos":[0,64]}]}],"pos":[262036,262101],"yaml":true},{"content":"The string representation of the value of this instance as specified by <code>provider</code>.","nodes":[{"pos":[0,94],"content":"The string representation of the value of this instance as specified by <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">provider</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"The string representation of the value of this instance as specified by <code>provider</code>."}],"pos":[262158,262253],"yaml":true},{"content":"Converts the numeric value of this instance to its equivalent string representation.","nodes":[{"pos":[0,84],"content":"Converts the numeric value of this instance to its equivalent string representation.","nodes":[{"content":"Converts the numeric value of this instance to its equivalent string representation.","pos":[0,84]}]}],"pos":[263702,263787],"yaml":true},{"content":"The <xref:System.Decimal.ToString> method formats a <xref:System.Decimal> value in the default (\"G\", or general) format of the current culture. If you want to specify a different format or culture, use the other overloads of the <xref:System.Decimal.ToString%2A> method, as follows:  \n  \n|To use format|For culture|Use the overload|  \n|-------------------|-----------------|----------------------|  \n|Default (\"G\") format|A specific culture|<xref:System.Decimal.ToString%28System.IFormatProvider%29>|  \n|A specific format|Default (current) culture|<xref:System.Decimal.ToString%28System.String%29>|  \n|A specific format|A specific culture|<xref:System.Decimal.ToString%28System.String%2CSystem.IFormatProvider%29>|  \n  \n The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics:  \n  \n-   For more information about numeric format specifiers, see [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) and [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md).  \n  \n-   For more information about formatting, see [Formatting Types](~/docs/standard/base-types/formatting-types.md).","nodes":[{"pos":[0,282],"content":"The <xref:System.Decimal.ToString> method formats a <xref:System.Decimal> value in the default (\"G\", or general) format of the current culture. If you want to specify a different format or culture, use the other overloads of the <xref:System.Decimal.ToString%2A> method, as follows:","nodes":[{"content":"The <xref:System.Decimal.ToString> method formats a <xref:System.Decimal> value in the default (\"G\", or general) format of the current culture. If you want to specify a different format or culture, use the other overloads of the <xref:System.Decimal.ToString%2A> method, as follows:","pos":[0,282],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Decimal.ToString&gt;</ph> method formats a <ph id=\"ph2\">&lt;xref:System.Decimal&gt;</ph> value in the default (\"G\", or general) format of the current culture.","pos":[0,143],"source":"The <xref:System.Decimal.ToString> method formats a <xref:System.Decimal> value in the default (\"G\", or general) format of the current culture."},{"content":"If you want to specify a different format or culture, use the other overloads of the <ph id=\"ph1\">&lt;xref:System.Decimal.ToString%2A&gt;</ph> method, as follows:","pos":[144,282],"source":" If you want to specify a different format or culture, use the other overloads of the <xref:System.Decimal.ToString%2A> method, as follows:"}]}]},{"pos":[289,302],"content":"To use format","nodes":[{"content":"To use format","pos":[0,13]}]},{"pos":[303,314],"content":"For culture","nodes":[{"content":"For culture","pos":[0,11]}]},{"pos":[315,331],"content":"Use the overload","nodes":[{"content":"Use the overload","pos":[0,16]}]},{"pos":[401,421],"content":"Default (\"G\") format","nodes":[{"content":"Default (\"G\") format","pos":[0,20]}]},{"pos":[422,440],"content":"A specific culture","nodes":[{"content":"A specific culture","pos":[0,18]}]},{"pos":[441,499],"content":"<xref:System.Decimal.ToString%28System.IFormatProvider%29>","nodes":[]},{"pos":[504,521],"content":"A specific format","nodes":[{"content":"A specific format","pos":[0,17]}]},{"pos":[522,547],"content":"Default (current) culture","nodes":[{"content":"Default (current) culture","pos":[0,25]}]},{"pos":[548,597],"content":"<xref:System.Decimal.ToString%28System.String%29>","nodes":[]},{"pos":[602,619],"content":"A specific format","nodes":[{"content":"A specific format","pos":[0,17]}]},{"pos":[620,638],"content":"A specific culture","nodes":[{"content":"A specific culture","pos":[0,18]}]},{"pos":[639,713],"content":"<xref:System.Decimal.ToString%28System.String%2CSystem.IFormatProvider%29>","nodes":[]},{"pos":[721,851],"content":"The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics:","nodes":[{"content":"The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics:","pos":[0,130]}]},{"pos":[861,1113],"content":"For more information about numeric format specifiers, see <bpt id=\"p1\">[</bpt>Standard Numeric Format Strings<ept id=\"p1\">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept> and <bpt id=\"p2\">[</bpt>Custom Numeric Format Strings<ept id=\"p2\">](~/docs/standard/base-types/custom-numeric-format-strings.md)</ept>.","source":"For more information about numeric format specifiers, see [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) and [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md)."},{"pos":[1123,1233],"content":"For more information about formatting, see <bpt id=\"p1\">[</bpt>Formatting Types<ept id=\"p1\">](~/docs/standard/base-types/formatting-types.md)</ept>.","source":"For more information about formatting, see [Formatting Types](~/docs/standard/base-types/formatting-types.md)."}],"pos":[263798,265050],"yaml":true,"extradata":"MT"},{"content":"A string that represents the value of this instance.","nodes":[{"pos":[0,52],"content":"A string that represents the value of this instance.","nodes":[{"content":"A string that represents the value of this instance.","pos":[0,52]}]}],"pos":[266148,266201],"yaml":true},{"content":"Converts the numeric value of this instance to its equivalent string representation, using the specified format.","nodes":[{"pos":[0,112],"content":"Converts the numeric value of this instance to its equivalent string representation, using the specified format.","nodes":[{"content":"Converts the numeric value of this instance to its equivalent string representation, using the specified format.","pos":[0,112]}]}],"pos":[267713,267826],"yaml":true},{"content":"The <xref:System.Decimal.ToString%28System.String%29> method formats a <xref:System.Decimal> value in a specified format by using the conventions of the current culture. If you want to use the default (\"G\", or general) format or specify a different culture, use the other overloads of the <xref:System.Decimal.ToString%2A> method, as follows:  \n  \n|To use format|For culture|Use the overload|  \n|-------------------|-----------------|----------------------|  \n|Default (\"G\") format|Default (current) culture|<xref:System.Decimal.ToString>|  \n|Default (\"G\") format|A specific culture|<xref:System.Decimal.ToString%28System.IFormatProvider%29>|  \n|A specific format|A specific culture|<xref:System.Decimal.ToString%28System.String%2CSystem.IFormatProvider%29>|  \n  \n The <xref:System.Decimal.ToString%2A> method uses the standard or custom numeric format string specified by the `format` parameter to convert the value of the current instance into its string representation. The `format` parameter can be any valid [standard numeric format specifier](~/docs/standard/base-types/standard-numeric-format-strings.md) except for D, R, and X, as well as any combination of [custom numeric format specifiers](~/docs/standard/base-types/custom-numeric-format-strings.md). If `format` is `null` or an empty string, the return value of this instance is formatted with the general numeric format specifier (G).  \n  \n The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics:  \n  \n-   For more information about numeric format specifiers, see [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) and [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md).  \n  \n-   For more information about formatting, see [Formatting Types](~/docs/standard/base-types/formatting-types.md).  \n  \n The return value is formatted by using the <xref:System.Globalization.NumberFormatInfo> object for the current culture. To apply the formatting conventions of a specified culture, call the <xref:System.Decimal.ToString%28System.String%2CSystem.IFormatProvider%29> method.","nodes":[{"pos":[0,342],"content":"The <xref:System.Decimal.ToString%28System.String%29> method formats a <xref:System.Decimal> value in a specified format by using the conventions of the current culture. If you want to use the default (\"G\", or general) format or specify a different culture, use the other overloads of the <xref:System.Decimal.ToString%2A> method, as follows:","nodes":[{"content":"The <xref:System.Decimal.ToString%28System.String%29> method formats a <xref:System.Decimal> value in a specified format by using the conventions of the current culture. If you want to use the default (\"G\", or general) format or specify a different culture, use the other overloads of the <xref:System.Decimal.ToString%2A> method, as follows:","pos":[0,342],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Decimal.ToString%28System.String%29&gt;</ph> method formats a <ph id=\"ph2\">&lt;xref:System.Decimal&gt;</ph> value in a specified format by using the conventions of the current culture.","pos":[0,169],"source":"The <xref:System.Decimal.ToString%28System.String%29> method formats a <xref:System.Decimal> value in a specified format by using the conventions of the current culture."},{"content":"If you want to use the default (\"G\", or general) format or specify a different culture, use the other overloads of the <ph id=\"ph1\">&lt;xref:System.Decimal.ToString%2A&gt;</ph> method, as follows:","pos":[170,342],"source":" If you want to use the default (\"G\", or general) format or specify a different culture, use the other overloads of the <xref:System.Decimal.ToString%2A> method, as follows:"}]}]},{"pos":[349,362],"content":"To use format","nodes":[{"content":"To use format","pos":[0,13]}]},{"pos":[363,374],"content":"For culture","nodes":[{"content":"For culture","pos":[0,11]}]},{"pos":[375,391],"content":"Use the overload","nodes":[{"content":"Use the overload","pos":[0,16]}]},{"pos":[461,481],"content":"Default (\"G\") format","nodes":[{"content":"Default (\"G\") format","pos":[0,20]}]},{"pos":[482,507],"content":"Default (current) culture","nodes":[{"content":"Default (current) culture","pos":[0,25]}]},{"pos":[508,538],"content":"<xref:System.Decimal.ToString>","nodes":[]},{"pos":[543,563],"content":"Default (\"G\") format","nodes":[{"content":"Default (\"G\") format","pos":[0,20]}]},{"pos":[564,582],"content":"A specific culture","nodes":[{"content":"A specific culture","pos":[0,18]}]},{"pos":[583,641],"content":"<xref:System.Decimal.ToString%28System.IFormatProvider%29>","nodes":[]},{"pos":[646,663],"content":"A specific format","nodes":[{"content":"A specific format","pos":[0,17]}]},{"pos":[664,682],"content":"A specific culture","nodes":[{"content":"A specific culture","pos":[0,18]}]},{"pos":[683,757],"content":"<xref:System.Decimal.ToString%28System.String%2CSystem.IFormatProvider%29>","nodes":[]},{"pos":[765,1398],"content":"The <xref:System.Decimal.ToString%2A> method uses the standard or custom numeric format string specified by the `format` parameter to convert the value of the current instance into its string representation. The `format` parameter can be any valid [standard numeric format specifier](~/docs/standard/base-types/standard-numeric-format-strings.md) except for D, R, and X, as well as any combination of [custom numeric format specifiers](~/docs/standard/base-types/custom-numeric-format-strings.md). If `format` is `null` or an empty string, the return value of this instance is formatted with the general numeric format specifier (G).","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Decimal.ToString%2A&gt;</ph> method uses the standard or custom numeric format string specified by the <ph id=\"ph2\">`format`</ph> parameter to convert the value of the current instance into its string representation.","pos":[0,207],"source":"The <xref:System.Decimal.ToString%2A> method uses the standard or custom numeric format string specified by the `format` parameter to convert the value of the current instance into its string representation."},{"content":"The <ph id=\"ph1\">`format`</ph> parameter can be any valid <bpt id=\"p1\">[</bpt>standard numeric format specifier<ept id=\"p1\">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept> except for D, R, and X, as well as any combination of <bpt id=\"p2\">[</bpt>custom numeric format specifiers<ept id=\"p2\">](~/docs/standard/base-types/custom-numeric-format-strings.md)</ept>.","pos":[208,497],"source":" The `format` parameter can be any valid [standard numeric format specifier](~/docs/standard/base-types/standard-numeric-format-strings.md) except for D, R, and X, as well as any combination of [custom numeric format specifiers](~/docs/standard/base-types/custom-numeric-format-strings.md)."},{"content":"If <ph id=\"ph1\">`format`</ph> is <ph id=\"ph2\">`null`</ph> or an empty string, the return value of this instance is formatted with the general numeric format specifier (G).","pos":[498,633],"source":" If `format` is `null` or an empty string, the return value of this instance is formatted with the general numeric format specifier (G)."}]},{"pos":[1405,1535],"content":"The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics:","nodes":[{"content":"The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics:","pos":[0,130]}]},{"pos":[1545,1797],"content":"For more information about numeric format specifiers, see <bpt id=\"p1\">[</bpt>Standard Numeric Format Strings<ept id=\"p1\">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept> and <bpt id=\"p2\">[</bpt>Custom Numeric Format Strings<ept id=\"p2\">](~/docs/standard/base-types/custom-numeric-format-strings.md)</ept>.","source":"For more information about numeric format specifiers, see [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) and [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md)."},{"pos":[1807,1917],"content":"For more information about formatting, see <bpt id=\"p1\">[</bpt>Formatting Types<ept id=\"p1\">](~/docs/standard/base-types/formatting-types.md)</ept>.","source":"For more information about formatting, see [Formatting Types](~/docs/standard/base-types/formatting-types.md)."},{"pos":[1924,2195],"content":"The return value is formatted by using the <xref:System.Globalization.NumberFormatInfo> object for the current culture. To apply the formatting conventions of a specified culture, call the <xref:System.Decimal.ToString%28System.String%2CSystem.IFormatProvider%29> method.","nodes":[{"content":"The return value is formatted by using the <xref:System.Globalization.NumberFormatInfo> object for the current culture. To apply the formatting conventions of a specified culture, call the <xref:System.Decimal.ToString%28System.String%2CSystem.IFormatProvider%29> method.","pos":[0,271],"nodes":[{"content":"The return value is formatted by using the <ph id=\"ph1\">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object for the current culture.","pos":[0,119],"source":"The return value is formatted by using the <xref:System.Globalization.NumberFormatInfo> object for the current culture."},{"content":"To apply the formatting conventions of a specified culture, call the <ph id=\"ph1\">&lt;xref:System.Decimal.ToString%28System.String%2CSystem.IFormatProvider%29&gt;</ph> method.","pos":[120,271],"source":" To apply the formatting conventions of a specified culture, call the <xref:System.Decimal.ToString%28System.String%2CSystem.IFormatProvider%29> method."}]}]}],"pos":[267837,270057],"yaml":true,"extradata":"MT"},{"content":"A standard or custom numeric format string.","nodes":[{"pos":[0,43],"content":"A standard or custom numeric format string.","nodes":[{"content":"A standard or custom numeric format string.","pos":[0,43]}]}],"pos":[270779,270823],"yaml":true},{"content":"The string representation of the value of this instance as specified by <code>format</code>.","nodes":[{"pos":[0,92],"content":"The string representation of the value of this instance as specified by <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">format</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"The string representation of the value of this instance as specified by <code>format</code>."}],"pos":[270880,270973],"yaml":true},{"content":"<code>format</code> is invalid.","nodes":[{"pos":[0,31],"content":"<ph id=\"ph1\">&lt;code&gt;format&lt;/code&gt;</ph> is invalid.","source":"<code>format</code> is invalid."}],"pos":[271114,271146],"yaml":true},{"content":"Converts the value of the specified <xref href=\"System.Decimal\"></xref> to the equivalent 16-bit unsigned integer.","nodes":[{"pos":[0,114],"content":"Converts the value of the specified <ph id=\"ph1\">&lt;xref href=\"System.Decimal\"&gt;&lt;/xref&gt;</ph> to the equivalent 16-bit unsigned integer.","source":"Converts the value of the specified <xref href=\"System.Decimal\"></xref> to the equivalent 16-bit unsigned integer."}],"pos":[272610,272725],"yaml":true},{"content":"The return value is the integral part of the decimal value; fractional digits are truncated.  \n  \n You can also convert a <xref:System.Decimal> value to a 16-bit unsigned integer by using the <xref:System.Decimal.op_Explicit%2A> assignment operator. Because the operator performs a narrowing conversion, you must use a casting operator in C# or a conversion function in Visual Basic.","nodes":[{"pos":[0,92],"content":"The return value is the integral part of the decimal value; fractional digits are truncated.","nodes":[{"content":"The return value is the integral part of the decimal value; fractional digits are truncated.","pos":[0,92]}]},{"pos":[99,383],"content":"You can also convert a <xref:System.Decimal> value to a 16-bit unsigned integer by using the <xref:System.Decimal.op_Explicit%2A> assignment operator. Because the operator performs a narrowing conversion, you must use a casting operator in C# or a conversion function in Visual Basic.","nodes":[{"content":"You can also convert a <xref:System.Decimal> value to a 16-bit unsigned integer by using the <xref:System.Decimal.op_Explicit%2A> assignment operator. Because the operator performs a narrowing conversion, you must use a casting operator in C# or a conversion function in Visual Basic.","pos":[0,284],"nodes":[{"content":"You can also convert a <ph id=\"ph1\">&lt;xref:System.Decimal&gt;</ph> value to a 16-bit unsigned integer by using the <ph id=\"ph2\">&lt;xref:System.Decimal.op_Explicit%2A&gt;</ph> assignment operator.","pos":[0,150],"source":"You can also convert a <xref:System.Decimal> value to a 16-bit unsigned integer by using the <xref:System.Decimal.op_Explicit%2A> assignment operator."},{"content":"Because the operator performs a narrowing conversion, you must use a casting operator in C# or a conversion function in Visual Basic.","pos":[151,284]}]}]}],"pos":[272736,273124],"yaml":true,"extradata":"MT"},{"content":"The decimal number to convert.","nodes":[{"pos":[0,30],"content":"The decimal number to convert.","nodes":[{"content":"The decimal number to convert.","pos":[0,30]}]}],"pos":[273746,273777],"yaml":true},{"content":"A 16-bit unsigned integer equivalent to the value of <code>value</code>.","nodes":[{"pos":[0,72],"content":"A 16-bit unsigned integer equivalent to the value of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">value</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"A 16-bit unsigned integer equivalent to the value of <code>value</code>."}],"pos":[273834,273907],"yaml":true},{"content":"<code>value</code> is greater than <xref href=\"System.UInt16.MaxValue\"></xref> or less than <xref href=\"System.UInt16.MinValue\"></xref>.","nodes":[{"pos":[0,136],"content":"<ph id=\"ph1\">&lt;code&gt;value&lt;/code&gt;</ph> is greater than <ph id=\"ph2\">&lt;xref href=\"System.UInt16.MaxValue\"&gt;&lt;/xref&gt;</ph> or less than <ph id=\"ph3\">&lt;xref href=\"System.UInt16.MinValue\"&gt;&lt;/xref&gt;</ph>.","source":"<code>value</code> is greater than <xref href=\"System.UInt16.MaxValue\"></xref> or less than <xref href=\"System.UInt16.MinValue\"></xref>."}],"pos":[274052,274189],"yaml":true},{"content":"Converts the value of the specified <xref href=\"System.Decimal\"></xref> to the equivalent 32-bit unsigned integer.","nodes":[{"pos":[0,114],"content":"Converts the value of the specified <ph id=\"ph1\">&lt;xref href=\"System.Decimal\"&gt;&lt;/xref&gt;</ph> to the equivalent 32-bit unsigned integer.","source":"Converts the value of the specified <xref href=\"System.Decimal\"></xref> to the equivalent 32-bit unsigned integer."}],"pos":[275744,275859],"yaml":true},{"content":"The return value is the integral part of the decimal value; fractional digits are truncated.  \n  \n You can also convert a <xref:System.Decimal> value to an 32-bit unsigned integer by using the <xref:System.Decimal.op_Explicit%2A> assignment operator. Because the operator performs a narrowing conversion, you must use a casting operator in C# or a conversion function in Visual Basic.","nodes":[{"pos":[0,92],"content":"The return value is the integral part of the decimal value; fractional digits are truncated.","nodes":[{"content":"The return value is the integral part of the decimal value; fractional digits are truncated.","pos":[0,92]}]},{"pos":[99,384],"content":"You can also convert a <xref:System.Decimal> value to an 32-bit unsigned integer by using the <xref:System.Decimal.op_Explicit%2A> assignment operator. Because the operator performs a narrowing conversion, you must use a casting operator in C# or a conversion function in Visual Basic.","nodes":[{"content":"You can also convert a <xref:System.Decimal> value to an 32-bit unsigned integer by using the <xref:System.Decimal.op_Explicit%2A> assignment operator. Because the operator performs a narrowing conversion, you must use a casting operator in C# or a conversion function in Visual Basic.","pos":[0,285],"nodes":[{"content":"You can also convert a <ph id=\"ph1\">&lt;xref:System.Decimal&gt;</ph> value to an 32-bit unsigned integer by using the <ph id=\"ph2\">&lt;xref:System.Decimal.op_Explicit%2A&gt;</ph> assignment operator.","pos":[0,151],"source":"You can also convert a <xref:System.Decimal> value to an 32-bit unsigned integer by using the <xref:System.Decimal.op_Explicit%2A> assignment operator."},{"content":"Because the operator performs a narrowing conversion, you must use a casting operator in C# or a conversion function in Visual Basic.","pos":[152,285]}]}]}],"pos":[275870,276259],"yaml":true,"extradata":"MT"},{"content":"The decimal number to convert.","nodes":[{"pos":[0,30],"content":"The decimal number to convert.","nodes":[{"content":"The decimal number to convert.","pos":[0,30]}]}],"pos":[276871,276902],"yaml":true},{"content":"A 32-bit unsigned integer equivalent to the value of <code>d</code>.","nodes":[{"pos":[0,68],"content":"A 32-bit unsigned integer equivalent to the value of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">d</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"A 32-bit unsigned integer equivalent to the value of <code>d</code>."}],"pos":[276959,277028],"yaml":true},{"content":"<code>d</code> is negative or greater than <xref href=\"System.UInt32.MaxValue\"></xref>.","nodes":[{"pos":[0,87],"content":"<ph id=\"ph1\">&lt;code&gt;d&lt;/code&gt;</ph> is negative or greater than <ph id=\"ph2\">&lt;xref href=\"System.UInt32.MaxValue\"&gt;&lt;/xref&gt;</ph>.","source":"<code>d</code> is negative or greater than <xref href=\"System.UInt32.MaxValue\"></xref>."}],"pos":[277173,277261],"yaml":true},{"content":"Converts the value of the specified <xref href=\"System.Decimal\"></xref> to the equivalent 64-bit unsigned integer.","nodes":[{"pos":[0,114],"content":"Converts the value of the specified <ph id=\"ph1\">&lt;xref href=\"System.Decimal\"&gt;&lt;/xref&gt;</ph> to the equivalent 64-bit unsigned integer.","source":"Converts the value of the specified <xref href=\"System.Decimal\"></xref> to the equivalent 64-bit unsigned integer."}],"pos":[278816,278931],"yaml":true},{"content":"The return value is the integral part of the decimal value; fractional digits are truncated.  \n  \n You can also convert a <xref:System.Decimal> value to an 64-bit unsigned integer by using the <xref:System.Decimal.op_Explicit%2A> assignment operator. Because the operator performs a narrowing conversion, you must use a casting operator in C# or a conversion function in Visual Basic.","nodes":[{"pos":[0,92],"content":"The return value is the integral part of the decimal value; fractional digits are truncated.","nodes":[{"content":"The return value is the integral part of the decimal value; fractional digits are truncated.","pos":[0,92]}]},{"pos":[99,384],"content":"You can also convert a <xref:System.Decimal> value to an 64-bit unsigned integer by using the <xref:System.Decimal.op_Explicit%2A> assignment operator. Because the operator performs a narrowing conversion, you must use a casting operator in C# or a conversion function in Visual Basic.","nodes":[{"content":"You can also convert a <xref:System.Decimal> value to an 64-bit unsigned integer by using the <xref:System.Decimal.op_Explicit%2A> assignment operator. Because the operator performs a narrowing conversion, you must use a casting operator in C# or a conversion function in Visual Basic.","pos":[0,285],"nodes":[{"content":"You can also convert a <ph id=\"ph1\">&lt;xref:System.Decimal&gt;</ph> value to an 64-bit unsigned integer by using the <ph id=\"ph2\">&lt;xref:System.Decimal.op_Explicit%2A&gt;</ph> assignment operator.","pos":[0,151],"source":"You can also convert a <xref:System.Decimal> value to an 64-bit unsigned integer by using the <xref:System.Decimal.op_Explicit%2A> assignment operator."},{"content":"Because the operator performs a narrowing conversion, you must use a casting operator in C# or a conversion function in Visual Basic.","pos":[152,285]}]}]}],"pos":[278942,279331],"yaml":true,"extradata":"MT"},{"content":"The decimal number to convert.","nodes":[{"pos":[0,30],"content":"The decimal number to convert.","nodes":[{"content":"The decimal number to convert.","pos":[0,30]}]}],"pos":[279944,279975],"yaml":true},{"content":"A 64-bit unsigned integer equivalent to the value of <code>d</code>.","nodes":[{"pos":[0,68],"content":"A 64-bit unsigned integer equivalent to the value of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">d</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"A 64-bit unsigned integer equivalent to the value of <code>d</code>."}],"pos":[280032,280101],"yaml":true},{"content":"<code>d</code> is negative or greater than <xref href=\"System.UInt64.MaxValue\"></xref>.","nodes":[{"pos":[0,87],"content":"<ph id=\"ph1\">&lt;code&gt;d&lt;/code&gt;</ph> is negative or greater than <ph id=\"ph2\">&lt;xref href=\"System.UInt64.MaxValue\"&gt;&lt;/xref&gt;</ph>.","source":"<code>d</code> is negative or greater than <xref href=\"System.UInt64.MaxValue\"></xref>."}],"pos":[280246,280334],"yaml":true},{"content":"Returns the integral digits of the specified <xref href=\"System.Decimal\"></xref>; any fractional digits are discarded.","nodes":[{"pos":[0,118],"content":"Returns the integral digits of the specified <ph id=\"ph1\">&lt;xref href=\"System.Decimal\"&gt;&lt;/xref&gt;</ph>; any fractional digits are discarded.","source":"Returns the integral digits of the specified <xref href=\"System.Decimal\"></xref>; any fractional digits are discarded."}],"pos":[281834,281953],"yaml":true},{"content":"This method rounds `d` toward zero, to the nearest whole number, which corresponds to discarding any digits after the decimal point.","nodes":[{"pos":[0,132],"content":"This method rounds <ph id=\"ph1\">`d`</ph> toward zero, to the nearest whole number, which corresponds to discarding any digits after the decimal point.","source":"This method rounds `d` toward zero, to the nearest whole number, which corresponds to discarding any digits after the decimal point."}],"pos":[281964,282097],"yaml":true,"extradata":"MT"},{"content":"The decimal number to truncate.","nodes":[{"pos":[0,31],"content":"The decimal number to truncate.","nodes":[{"content":"The decimal number to truncate.","pos":[0,31]}]}],"pos":[282848,282880],"yaml":true},{"content":"The result of <code>d</code> rounded toward zero, to the nearest whole number.","nodes":[{"pos":[0,78],"content":"The result of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">d</ph><ept id=\"p1\">&lt;/code&gt;</ept> rounded toward zero, to the nearest whole number.","source":"The result of <code>d</code> rounded toward zero, to the nearest whole number."}],"pos":[282938,283017],"yaml":true},{"content":"Converts the string representation of a number to its <xref href=\"System.Decimal\"></xref> equivalent using the specified style and culture-specific format. A return value indicates whether the conversion succeeded or failed.","nodes":[{"pos":[0,224],"content":"Converts the string representation of a number to its <xref href=\"System.Decimal\"></xref> equivalent using the specified style and culture-specific format. A return value indicates whether the conversion succeeded or failed.","nodes":[{"content":"Converts the string representation of a number to its <ph id=\"ph1\">&lt;xref href=\"System.Decimal\"&gt;&lt;/xref&gt;</ph> equivalent using the specified style and culture-specific format.","pos":[0,155],"source":"Converts the string representation of a number to its <xref href=\"System.Decimal\"></xref> equivalent using the specified style and culture-specific format."},{"content":"A return value indicates whether the conversion succeeded or failed.","pos":[156,224]}]}],"pos":[284868,285093],"yaml":true},{"content":"This overload differs from the <xref:System.Decimal.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=fullName> method by returning a Boolean value that indicates whether the parse operation succeeded instead of returning the parsed numeric value. It eliminates the need to use exception handling to test for a <xref:System.FormatException> in the event that `s` is invalid and cannot be successfully parsed.  \n  \n The `style` parameter defines the allowable format of the `s` parameter for the parse operation to succeed. It must be a combination of bit flags from the <xref:System.Globalization.NumberStyles> enumeration. The following <xref:System.Globalization.NumberStyles> members are not supported:  \n  \n-   <xref:System.Globalization.NumberStyles?displayProperty=fullName>  \n  \n-   <xref:System.Globalization.NumberStyles?displayProperty=fullName>  \n  \n Depending on the value of style, the `s` parameter may include the following elements:  \n  \n [ws][$][sign][digits,]digits[.fractional-digits][e[sign]digits][ws]  \n  \n Elements in square brackets ([ and ]) are optional. The following table describes each element.  \n  \n|Element|Description|  \n|-------------|-----------------|  \n|*ws*|Optional white space. White space can appear at the beginning of `s` if `style` includes the <xref:System.Globalization.NumberStyles?displayProperty=fullName> flag. It can appear at the end of `s` if `style` includes the <xref:System.Globalization.NumberStyles?displayProperty=fullName> flag.|  \n|*$*|A culture-specific currency symbol. Its position in the string is defined by the <xref:System.Globalization.NumberFormatInfo.CurrencyNegativePattern%2A?displayProperty=fullName> or <xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A?displayProperty=fullName> properties of the <xref:System.Globalization.NumberFormatInfo> object returned by the <xref:System.IFormatProvider.GetFormat%2A?displayProperty=fullName> method of the `provider` parameter. The currency symbol can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles?displayProperty=fullName> flag.|  \n|*sign*|An optional sign.|  \n|*digits*|A sequence of digits ranging from 0 to 9.|  \n|*.*|A culture-specific decimal point symbol.|  \n|*fractional-digits*|A sequence of digits ranging from 0 to 9.|  \n  \n The `style` parameter specifies the permitted format of the `s` parameter, and can be one or more <xref:System.Globalization.NumberStyles> enumerated constants combined using a bitwise OR operation. If `style` is null, `s` is interpreted using the <xref:System.Globalization.NumberStyles?displayProperty=fullName> style.  \n  \n The `provider` parameter is an <xref:System.IFormatProvider> implementation such as a <xref:System.Globalization.NumberFormatInfo> or <xref:System.Globalization.CultureInfo> object. The `provider` parameter supplies culture-specific information used in parsing. If `provider` is `null`, the thread current culture is used.  \n  \n A <xref:System.Decimal> object has 29 digits of precision. If `s` represents a number that has more than 29 digits, but has a fractional part and is within the range of <xref:System.Decimal.MaxValue> and <xref:System.Decimal.MinValue>, the number is rounded, not truncated, to 29 digits using rounding to nearest.  \n  \n If a separator is encountered in the `s` parameter during a parse operation, and the applicable currency or number decimal and group separators are the same, the parse operation assumes that the separator is a decimal separator rather than a group separator. For more information about separators, see <xref:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator%2A>, <xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator%2A>, <xref:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator%2A>, and <xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A>.","nodes":[{"pos":[0,460],"content":"This overload differs from the <xref:System.Decimal.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=fullName> method by returning a Boolean value that indicates whether the parse operation succeeded instead of returning the parsed numeric value. It eliminates the need to use exception handling to test for a <xref:System.FormatException> in the event that `s` is invalid and cannot be successfully parsed.","nodes":[{"content":"This overload differs from the <ph id=\"ph1\">&lt;xref:System.Decimal.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=fullName&gt;</ph> method by returning a Boolean value that indicates whether the parse operation succeeded instead of returning the parsed numeric value.","pos":[0,299],"source":"This overload differs from the <xref:System.Decimal.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=fullName> method by returning a Boolean value that indicates whether the parse operation succeeded instead of returning the parsed numeric value."},{"content":"It eliminates the need to use exception handling to test for a <ph id=\"ph1\">&lt;xref:System.FormatException&gt;</ph> in the event that <ph id=\"ph2\">`s`</ph> is invalid and cannot be successfully parsed.","pos":[300,460],"source":" It eliminates the need to use exception handling to test for a <xref:System.FormatException> in the event that `s` is invalid and cannot be successfully parsed."}]},{"pos":[467,757],"content":"The `style` parameter defines the allowable format of the `s` parameter for the parse operation to succeed. It must be a combination of bit flags from the <xref:System.Globalization.NumberStyles> enumeration. The following <xref:System.Globalization.NumberStyles> members are not supported:","nodes":[{"content":"The <ph id=\"ph1\">`style`</ph> parameter defines the allowable format of the <ph id=\"ph2\">`s`</ph> parameter for the parse operation to succeed.","pos":[0,107],"source":"The `style` parameter defines the allowable format of the `s` parameter for the parse operation to succeed."},{"content":"It must be a combination of bit flags from the <ph id=\"ph1\">&lt;xref:System.Globalization.NumberStyles&gt;</ph> enumeration.","pos":[108,208],"source":" It must be a combination of bit flags from the <xref:System.Globalization.NumberStyles> enumeration."},{"content":"The following <ph id=\"ph1\">&lt;xref:System.Globalization.NumberStyles&gt;</ph> members are not supported:","pos":[209,290],"source":" The following <xref:System.Globalization.NumberStyles> members are not supported:"}]},{"pos":[767,832],"content":"<xref:System.Globalization.NumberStyles?displayProperty=fullName>","nodes":[]},{"pos":[842,907],"content":"<xref:System.Globalization.NumberStyles?displayProperty=fullName>","nodes":[]},{"pos":[914,1000],"content":"Depending on the value of style, the <ph id=\"ph1\">`s`</ph> parameter may include the following elements:","source":"Depending on the value of style, the `s` parameter may include the following elements:"},{"pos":[1007,1074],"content":"[ws][$][sign][digits,]digits[.fractional-digits][e[sign]digits][ws]","nodes":[{"content":"[ws][$][sign][digits,]digits[.fractional-digits][e[sign]digits][ws]","pos":[0,67]}]},{"pos":[1081,1176],"content":"Elements in square brackets ([ and ]) are optional. The following table describes each element.","nodes":[{"content":"Elements in square brackets ([ and ]) are optional. The following table describes each element.","pos":[0,95],"nodes":[{"content":"Elements in square brackets ([ and ]) are optional.","pos":[0,51]},{"content":"The following table describes each element.","pos":[52,95]}]}]},{"pos":[1183,1190],"content":"Element","nodes":[{"content":"Element","pos":[0,7]}]},{"pos":[1191,1202],"content":"Description","nodes":[{"content":"Description","pos":[0,11]}]},{"pos":[1243,1247],"content":"<bpt id=\"p1\">*</bpt>ws<ept id=\"p1\">*</ept>","source":"*ws*"},{"pos":[1248,1540],"content":"Optional white space. White space can appear at the beginning of `s` if `style` includes the <xref:System.Globalization.NumberStyles?displayProperty=fullName> flag. It can appear at the end of `s` if `style` includes the <xref:System.Globalization.NumberStyles?displayProperty=fullName> flag.","nodes":[{"content":"Optional white space.","pos":[0,21]},{"content":"White space can appear at the beginning of <ph id=\"ph1\">`s`</ph> if <ph id=\"ph2\">`style`</ph> includes the <ph id=\"ph3\">&lt;xref:System.Globalization.NumberStyles?displayProperty=fullName&gt;</ph> flag.","pos":[22,164],"source":" White space can appear at the beginning of `s` if `style` includes the <xref:System.Globalization.NumberStyles?displayProperty=fullName> flag."},{"content":"It can appear at the end of <ph id=\"ph1\">`s`</ph> if <ph id=\"ph2\">`style`</ph> includes the <ph id=\"ph3\">&lt;xref:System.Globalization.NumberStyles?displayProperty=fullName&gt;</ph> flag.","pos":[165,292],"source":" It can appear at the end of `s` if `style` includes the <xref:System.Globalization.NumberStyles?displayProperty=fullName> flag."}]},{"pos":[1549,2150],"content":"A culture-specific currency symbol. Its position in the string is defined by the <xref:System.Globalization.NumberFormatInfo.CurrencyNegativePattern%2A?displayProperty=fullName> or <xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A?displayProperty=fullName> properties of the <xref:System.Globalization.NumberFormatInfo> object returned by the <xref:System.IFormatProvider.GetFormat%2A?displayProperty=fullName> method of the `provider` parameter. The currency symbol can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles?displayProperty=fullName> flag.","nodes":[{"content":"A culture-specific currency symbol.","pos":[0,35]},{"content":"Its position in the string is defined by the <ph id=\"ph1\">&lt;xref:System.Globalization.NumberFormatInfo.CurrencyNegativePattern%2A?displayProperty=fullName&gt;</ph> or <ph id=\"ph2\">&lt;xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A?displayProperty=fullName&gt;</ph> properties of the <ph id=\"ph3\">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object returned by the <ph id=\"ph4\">&lt;xref:System.IFormatProvider.GetFormat%2A?displayProperty=fullName&gt;</ph> method of the <ph id=\"ph5\">`provider`</ph> parameter.","pos":[36,467],"source":" Its position in the string is defined by the <xref:System.Globalization.NumberFormatInfo.CurrencyNegativePattern%2A?displayProperty=fullName> or <xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A?displayProperty=fullName> properties of the <xref:System.Globalization.NumberFormatInfo> object returned by the <xref:System.IFormatProvider.GetFormat%2A?displayProperty=fullName> method of the `provider` parameter."},{"content":"The currency symbol can appear in <ph id=\"ph1\">`s`</ph> if <ph id=\"ph2\">`style`</ph> includes the <ph id=\"ph3\">&lt;xref:System.Globalization.NumberStyles?displayProperty=fullName&gt;</ph> flag.","pos":[468,601],"source":" The currency symbol can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles?displayProperty=fullName> flag."}]},{"pos":[2155,2161],"content":"<bpt id=\"p1\">*</bpt>sign<ept id=\"p1\">*</ept>","source":"*sign*"},{"pos":[2162,2179],"content":"An optional sign.","nodes":[{"content":"An optional sign.","pos":[0,17]}]},{"pos":[2184,2192],"content":"<bpt id=\"p1\">*</bpt>digits<ept id=\"p1\">*</ept>","source":"*digits*"},{"pos":[2193,2234],"content":"A sequence of digits ranging from 0 to 9.","nodes":[{"content":"A sequence of digits ranging from 0 to 9.","pos":[0,41]}]},{"pos":[2239,2242],"content":"<bpt id=\"p1\">*</bpt>.<ept id=\"p1\">*</ept>","source":"*.*"},{"pos":[2243,2283],"content":"A culture-specific decimal point symbol.","nodes":[{"content":"A culture-specific decimal point symbol.","pos":[0,40]}]},{"pos":[2288,2307],"content":"<bpt id=\"p1\">*</bpt>fractional-digits<ept id=\"p1\">*</ept>","source":"*fractional-digits*"},{"pos":[2308,2349],"content":"A sequence of digits ranging from 0 to 9.","nodes":[{"content":"A sequence of digits ranging from 0 to 9.","pos":[0,41]}]},{"pos":[2357,2677],"content":"The `style` parameter specifies the permitted format of the `s` parameter, and can be one or more <xref:System.Globalization.NumberStyles> enumerated constants combined using a bitwise OR operation. If `style` is null, `s` is interpreted using the <xref:System.Globalization.NumberStyles?displayProperty=fullName> style.","nodes":[{"content":"The <ph id=\"ph1\">`style`</ph> parameter specifies the permitted format of the <ph id=\"ph2\">`s`</ph> parameter, and can be one or more <ph id=\"ph3\">&lt;xref:System.Globalization.NumberStyles&gt;</ph> enumerated constants combined using a bitwise OR operation.","pos":[0,198],"source":"The `style` parameter specifies the permitted format of the `s` parameter, and can be one or more <xref:System.Globalization.NumberStyles> enumerated constants combined using a bitwise OR operation."},{"content":"If <ph id=\"ph1\">`style`</ph> is null, <ph id=\"ph2\">`s`</ph> is interpreted using the <ph id=\"ph3\">&lt;xref:System.Globalization.NumberStyles?displayProperty=fullName&gt;</ph> style.","pos":[199,320],"source":" If `style` is null, `s` is interpreted using the <xref:System.Globalization.NumberStyles?displayProperty=fullName> style."}]},{"pos":[2684,3006],"content":"The `provider` parameter is an <xref:System.IFormatProvider> implementation such as a <xref:System.Globalization.NumberFormatInfo> or <xref:System.Globalization.CultureInfo> object. The `provider` parameter supplies culture-specific information used in parsing. If `provider` is `null`, the thread current culture is used.","nodes":[{"content":"The <ph id=\"ph1\">`provider`</ph> parameter is an <ph id=\"ph2\">&lt;xref:System.IFormatProvider&gt;</ph> implementation such as a <ph id=\"ph3\">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> or <ph id=\"ph4\">&lt;xref:System.Globalization.CultureInfo&gt;</ph> object.","pos":[0,181],"source":"The `provider` parameter is an <xref:System.IFormatProvider> implementation such as a <xref:System.Globalization.NumberFormatInfo> or <xref:System.Globalization.CultureInfo> object."},{"content":"The <ph id=\"ph1\">`provider`</ph> parameter supplies culture-specific information used in parsing.","pos":[182,261],"source":" The `provider` parameter supplies culture-specific information used in parsing."},{"content":"If <ph id=\"ph1\">`provider`</ph> is <ph id=\"ph2\">`null`</ph>, the thread current culture is used.","pos":[262,322],"source":" If `provider` is `null`, the thread current culture is used."}]},{"pos":[3013,3326],"content":"A <xref:System.Decimal> object has 29 digits of precision. If `s` represents a number that has more than 29 digits, but has a fractional part and is within the range of <xref:System.Decimal.MaxValue> and <xref:System.Decimal.MinValue>, the number is rounded, not truncated, to 29 digits using rounding to nearest.","nodes":[{"content":"A <ph id=\"ph1\">&lt;xref:System.Decimal&gt;</ph> object has 29 digits of precision.","pos":[0,58],"source":"A <xref:System.Decimal> object has 29 digits of precision."},{"content":"If <ph id=\"ph1\">`s`</ph> represents a number that has more than 29 digits, but has a fractional part and is within the range of <ph id=\"ph2\">&lt;xref:System.Decimal.MaxValue&gt;</ph> and <ph id=\"ph3\">&lt;xref:System.Decimal.MinValue&gt;</ph>, the number is rounded, not truncated, to 29 digits using rounding to nearest.","pos":[59,313],"source":" If `s` represents a number that has more than 29 digits, but has a fractional part and is within the range of <xref:System.Decimal.MaxValue> and <xref:System.Decimal.MinValue>, the number is rounded, not truncated, to 29 digits using rounding to nearest."}]},{"pos":[3333,3926],"content":"If a separator is encountered in the `s` parameter during a parse operation, and the applicable currency or number decimal and group separators are the same, the parse operation assumes that the separator is a decimal separator rather than a group separator. For more information about separators, see <xref:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator%2A>, <xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator%2A>, <xref:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator%2A>, and <xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A>.","nodes":[{"content":"If a separator is encountered in the <ph id=\"ph1\">`s`</ph> parameter during a parse operation, and the applicable currency or number decimal and group separators are the same, the parse operation assumes that the separator is a decimal separator rather than a group separator.","pos":[0,258],"source":"If a separator is encountered in the `s` parameter during a parse operation, and the applicable currency or number decimal and group separators are the same, the parse operation assumes that the separator is a decimal separator rather than a group separator."},{"content":"For more information about separators, see <ph id=\"ph1\">&lt;xref:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator%2A&gt;</ph>, <ph id=\"ph2\">&lt;xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator%2A&gt;</ph>, <ph id=\"ph3\">&lt;xref:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator%2A&gt;</ph>, and <ph id=\"ph4\">&lt;xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A&gt;</ph>.","pos":[259,593],"source":" For more information about separators, see <xref:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator%2A>, <xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator%2A>, <xref:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator%2A>, and <xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A>."}]}],"pos":[285104,289062],"yaml":true,"extradata":"MT"},{"content":"The string representation of the number to convert.","nodes":[{"pos":[0,51],"content":"The string representation of the number to convert.","nodes":[{"content":"The string representation of the number to convert.","pos":[0,51]}]}],"pos":[289906,289958],"yaml":true},{"content":"A bitwise combination of enumeration values that indicates the permitted format of <code>s</code>. A typical value to specify is <xref href=\"System.Globalization.NumberStyles.Number\"></xref>.","nodes":[{"pos":[0,191],"content":"A bitwise combination of enumeration values that indicates the permitted format of <code>s</code>. A typical value to specify is <xref href=\"System.Globalization.NumberStyles.Number\"></xref>.","nodes":[{"content":"A bitwise combination of enumeration values that indicates the permitted format of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">s</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","pos":[0,98],"source":"A bitwise combination of enumeration values that indicates the permitted format of <code>s</code>."},{"content":"A typical value to specify is <ph id=\"ph1\">&lt;xref href=\"System.Globalization.NumberStyles.Number\"&gt;&lt;/xref&gt;</ph>.","pos":[99,191],"source":" A typical value to specify is <xref href=\"System.Globalization.NumberStyles.Number\"></xref>."}]}],"pos":[290039,290231],"yaml":true},{"content":"An object that supplies culture-specific parsing information about <code>s</code>.","nodes":[{"pos":[0,82],"content":"An object that supplies culture-specific parsing information about <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">s</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"An object that supplies culture-specific parsing information about <code>s</code>."}],"pos":[290304,290387],"yaml":true},{"content":"`true` if <code>s</code> was converted successfully; otherwise, `false`.","nodes":[{"pos":[0,72],"content":"<ph id=\"ph1\">`true`</ph> if <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">s</ph><ept id=\"p1\">&lt;/code&gt;</ept> was converted successfully; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` if <code>s</code> was converted successfully; otherwise, `false`."}],"pos":[290511,290586],"yaml":true},{"content":"<code>style</code> is not a <xref href=\"System.Globalization.NumberStyles\"></xref> value.  \n  \n -or-  \n  \n <code>style</code> is the <xref href=\"System.Globalization.NumberStyles.AllowHexSpecifier\"></xref> value.","nodes":[{"pos":[0,89],"content":"<ph id=\"ph1\">&lt;code&gt;style&lt;/code&gt;</ph> is not a <ph id=\"ph2\">&lt;xref href=\"System.Globalization.NumberStyles\"&gt;&lt;/xref&gt;</ph> value.","source":"<code>style</code> is not a <xref href=\"System.Globalization.NumberStyles\"></xref> value."},{"pos":[96,100],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[107,212],"content":"<ph id=\"ph1\">&lt;code&gt;style&lt;/code&gt;</ph> is the <ph id=\"ph2\">&lt;xref href=\"System.Globalization.NumberStyles.AllowHexSpecifier\"&gt;&lt;/xref&gt;</ph> value.","source":"<code>style</code> is the <xref href=\"System.Globalization.NumberStyles.AllowHexSpecifier\"></xref> value."}],"pos":[290731,290954],"yaml":true},{"content":"Converts the string representation of a number to its <xref href=\"System.Decimal\"></xref> equivalent. A return value indicates whether the conversion succeeded or failed.","nodes":[{"pos":[0,170],"content":"Converts the string representation of a number to its <xref href=\"System.Decimal\"></xref> equivalent. A return value indicates whether the conversion succeeded or failed.","nodes":[{"content":"Converts the string representation of a number to its <ph id=\"ph1\">&lt;xref href=\"System.Decimal\"&gt;&lt;/xref&gt;</ph> equivalent.","pos":[0,101],"source":"Converts the string representation of a number to its <xref href=\"System.Decimal\"></xref> equivalent."},{"content":"A return value indicates whether the conversion succeeded or failed.","pos":[102,170]}]}],"pos":[292470,292641],"yaml":true},{"content":"This overload differs from the <xref:System.Decimal.Parse%28System.String%29?displayProperty=fullName> method by returning a Boolean value that indicates whether the parse operation succeeded instead of returning the parsed numeric value. It eliminates the need to use exception handling to test for a <xref:System.FormatException> in the event that `s` is invalid and cannot be successfully parsed.  \n  \n Parameter `s` contains a number of the form:  \n  \n [ws][sign][digits,]digits[.fractional-digits][ws]  \n  \n Elements in square brackets ([ and ]) are optional. The following table describes each element.  \n  \n|Element|Description|  \n|-------------|-----------------|  \n|*ws*|Optional white space.|  \n|*sign*|An optional sign.|  \n|*digits*|A sequence of digits ranging from 0 to 9.|  \n|*,*|A culture-specific thousands separator symbol.|  \n|*.*|A culture-specific decimal point symbol.|  \n|*fractional-digits*|A sequence of digits ranging from 0 to 9.|  \n  \n Parameter `s` is interpreted using the <xref:System.Globalization.NumberStyles?displayProperty=fullName> style. This means that white space and thousands separators are allowed but currency symbols are not. To explicitly define the elements (such as currency symbols, thousands separators, and white space) that can be present in `s`, use the <xref:System.Decimal.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Decimal%40%29?displayProperty=fullName> method overload.  \n  \n Parameter `s` is parsed using the formatting information in a <xref:System.Globalization.NumberFormatInfo> object initialized for the current system culture. For more information, see <xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A>. To parse a string using the formatting information of some other specified culture, use the <xref:System.Decimal.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Decimal%40%29?displayProperty=fullName> method overload.  \n  \n If necessary, the value of `s` is rounded using rounding to nearest.  \n  \n A <xref:System.Decimal> object has 29 digits of precision. If `s` represents a number that has more than 29 digits, but has a fractional part and is within the range of <xref:System.Decimal.MaxValue> and <xref:System.Decimal.MinValue>, the number is rounded, not truncated, to 29 digits using rounding to nearest.  \n  \n If during a parse operation a separator is encountered in the `s` parameter, and the applicable currency or number decimal and group separators are the same, the parse operation assumes that the separator is a decimal separator rather than a group separator. For more information about separators, see <xref:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator%2A>, <xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator%2A>, <xref:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator%2A>, and <xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A>.","nodes":[{"pos":[0,399],"content":"This overload differs from the <xref:System.Decimal.Parse%28System.String%29?displayProperty=fullName> method by returning a Boolean value that indicates whether the parse operation succeeded instead of returning the parsed numeric value. It eliminates the need to use exception handling to test for a <xref:System.FormatException> in the event that `s` is invalid and cannot be successfully parsed.","nodes":[{"content":"This overload differs from the <ph id=\"ph1\">&lt;xref:System.Decimal.Parse%28System.String%29?displayProperty=fullName&gt;</ph> method by returning a Boolean value that indicates whether the parse operation succeeded instead of returning the parsed numeric value.","pos":[0,238],"source":"This overload differs from the <xref:System.Decimal.Parse%28System.String%29?displayProperty=fullName> method by returning a Boolean value that indicates whether the parse operation succeeded instead of returning the parsed numeric value."},{"content":"It eliminates the need to use exception handling to test for a <ph id=\"ph1\">&lt;xref:System.FormatException&gt;</ph> in the event that <ph id=\"ph2\">`s`</ph> is invalid and cannot be successfully parsed.","pos":[239,399],"source":" It eliminates the need to use exception handling to test for a <xref:System.FormatException> in the event that `s` is invalid and cannot be successfully parsed."}]},{"pos":[406,450],"content":"Parameter <ph id=\"ph1\">`s`</ph> contains a number of the form:","source":"Parameter `s` contains a number of the form:"},{"pos":[457,506],"content":"[ws][sign][digits,]digits[.fractional-digits][ws]","nodes":[{"content":"[ws][sign][digits,]digits[.fractional-digits][ws]","pos":[0,49]}]},{"pos":[513,608],"content":"Elements in square brackets ([ and ]) are optional. The following table describes each element.","nodes":[{"content":"Elements in square brackets ([ and ]) are optional. The following table describes each element.","pos":[0,95],"nodes":[{"content":"Elements in square brackets ([ and ]) are optional.","pos":[0,51]},{"content":"The following table describes each element.","pos":[52,95]}]}]},{"pos":[615,622],"content":"Element","nodes":[{"content":"Element","pos":[0,7]}]},{"pos":[623,634],"content":"Description","nodes":[{"content":"Description","pos":[0,11]}]},{"pos":[675,679],"content":"<bpt id=\"p1\">*</bpt>ws<ept id=\"p1\">*</ept>","source":"*ws*"},{"pos":[680,701],"content":"Optional white space.","nodes":[{"content":"Optional white space.","pos":[0,21]}]},{"pos":[706,712],"content":"<bpt id=\"p1\">*</bpt>sign<ept id=\"p1\">*</ept>","source":"*sign*"},{"pos":[713,730],"content":"An optional sign.","nodes":[{"content":"An optional sign.","pos":[0,17]}]},{"pos":[735,743],"content":"<bpt id=\"p1\">*</bpt>digits<ept id=\"p1\">*</ept>","source":"*digits*"},{"pos":[744,785],"content":"A sequence of digits ranging from 0 to 9.","nodes":[{"content":"A sequence of digits ranging from 0 to 9.","pos":[0,41]}]},{"pos":[790,793],"content":"<bpt id=\"p1\">*</bpt>,<ept id=\"p1\">*</ept>","source":"*,*"},{"pos":[794,840],"content":"A culture-specific thousands separator symbol.","nodes":[{"content":"A culture-specific thousands separator symbol.","pos":[0,46]}]},{"pos":[845,848],"content":"<bpt id=\"p1\">*</bpt>.<ept id=\"p1\">*</ept>","source":"*.*"},{"pos":[849,889],"content":"A culture-specific decimal point symbol.","nodes":[{"content":"A culture-specific decimal point symbol.","pos":[0,40]}]},{"pos":[894,913],"content":"<bpt id=\"p1\">*</bpt>fractional-digits<ept id=\"p1\">*</ept>","source":"*fractional-digits*"},{"pos":[914,955],"content":"A sequence of digits ranging from 0 to 9.","nodes":[{"content":"A sequence of digits ranging from 0 to 9.","pos":[0,41]}]},{"pos":[963,1478],"content":"Parameter `s` is interpreted using the <xref:System.Globalization.NumberStyles?displayProperty=fullName> style. This means that white space and thousands separators are allowed but currency symbols are not. To explicitly define the elements (such as currency symbols, thousands separators, and white space) that can be present in `s`, use the <xref:System.Decimal.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Decimal%40%29?displayProperty=fullName> method overload.","nodes":[{"content":"Parameter <ph id=\"ph1\">`s`</ph> is interpreted using the <ph id=\"ph2\">&lt;xref:System.Globalization.NumberStyles?displayProperty=fullName&gt;</ph> style.","pos":[0,111],"source":"Parameter `s` is interpreted using the <xref:System.Globalization.NumberStyles?displayProperty=fullName> style."},{"content":"This means that white space and thousands separators are allowed but currency symbols are not.","pos":[112,206]},{"content":"To explicitly define the elements (such as currency symbols, thousands separators, and white space) that can be present in <ph id=\"ph1\">`s`</ph>, use the <ph id=\"ph2\">&lt;xref:System.Decimal.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Decimal%40%29?displayProperty=fullName&gt;</ph> method overload.","pos":[207,515],"source":" To explicitly define the elements (such as currency symbols, thousands separators, and white space) that can be present in `s`, use the <xref:System.Decimal.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Decimal%40%29?displayProperty=fullName> method overload."}]},{"pos":[1485,1994],"content":"Parameter `s` is parsed using the formatting information in a <xref:System.Globalization.NumberFormatInfo> object initialized for the current system culture. For more information, see <xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A>. To parse a string using the formatting information of some other specified culture, use the <xref:System.Decimal.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Decimal%40%29?displayProperty=fullName> method overload.","nodes":[{"content":"Parameter <ph id=\"ph1\">`s`</ph> is parsed using the formatting information in a <ph id=\"ph2\">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object initialized for the current system culture.","pos":[0,157],"source":"Parameter `s` is parsed using the formatting information in a <xref:System.Globalization.NumberFormatInfo> object initialized for the current system culture."},{"content":"For more information, see <ph id=\"ph1\">&lt;xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A&gt;</ph>.","pos":[158,244],"source":" For more information, see <xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A>."},{"content":"To parse a string using the formatting information of some other specified culture, use the <ph id=\"ph1\">&lt;xref:System.Decimal.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Decimal%40%29?displayProperty=fullName&gt;</ph> method overload.","pos":[245,509],"source":" To parse a string using the formatting information of some other specified culture, use the <xref:System.Decimal.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Decimal%40%29?displayProperty=fullName> method overload."}]},{"pos":[2001,2069],"content":"If necessary, the value of <ph id=\"ph1\">`s`</ph> is rounded using rounding to nearest.","source":"If necessary, the value of `s` is rounded using rounding to nearest."},{"pos":[2076,2389],"content":"A <xref:System.Decimal> object has 29 digits of precision. If `s` represents a number that has more than 29 digits, but has a fractional part and is within the range of <xref:System.Decimal.MaxValue> and <xref:System.Decimal.MinValue>, the number is rounded, not truncated, to 29 digits using rounding to nearest.","nodes":[{"content":"A <ph id=\"ph1\">&lt;xref:System.Decimal&gt;</ph> object has 29 digits of precision.","pos":[0,58],"source":"A <xref:System.Decimal> object has 29 digits of precision."},{"content":"If <ph id=\"ph1\">`s`</ph> represents a number that has more than 29 digits, but has a fractional part and is within the range of <ph id=\"ph2\">&lt;xref:System.Decimal.MaxValue&gt;</ph> and <ph id=\"ph3\">&lt;xref:System.Decimal.MinValue&gt;</ph>, the number is rounded, not truncated, to 29 digits using rounding to nearest.","pos":[59,313],"source":" If `s` represents a number that has more than 29 digits, but has a fractional part and is within the range of <xref:System.Decimal.MaxValue> and <xref:System.Decimal.MinValue>, the number is rounded, not truncated, to 29 digits using rounding to nearest."}]},{"pos":[2396,2989],"content":"If during a parse operation a separator is encountered in the `s` parameter, and the applicable currency or number decimal and group separators are the same, the parse operation assumes that the separator is a decimal separator rather than a group separator. For more information about separators, see <xref:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator%2A>, <xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator%2A>, <xref:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator%2A>, and <xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A>.","nodes":[{"content":"If during a parse operation a separator is encountered in the <ph id=\"ph1\">`s`</ph> parameter, and the applicable currency or number decimal and group separators are the same, the parse operation assumes that the separator is a decimal separator rather than a group separator.","pos":[0,258],"source":"If during a parse operation a separator is encountered in the `s` parameter, and the applicable currency or number decimal and group separators are the same, the parse operation assumes that the separator is a decimal separator rather than a group separator."},{"content":"For more information about separators, see <ph id=\"ph1\">&lt;xref:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator%2A&gt;</ph>, <ph id=\"ph2\">&lt;xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator%2A&gt;</ph>, <ph id=\"ph3\">&lt;xref:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator%2A&gt;</ph>, and <ph id=\"ph4\">&lt;xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A&gt;</ph>.","pos":[259,593],"source":" For more information about separators, see <xref:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator%2A>, <xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator%2A>, <xref:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator%2A>, and <xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A>."}]}],"pos":[292652,295669],"yaml":true,"extradata":"MT"},{"content":"The string representation of the number to convert.","nodes":[{"pos":[0,51],"content":"The string representation of the number to convert.","nodes":[{"content":"The string representation of the number to convert.","pos":[0,51]}]}],"pos":[296387,296439],"yaml":true},{"content":"`true` if <code>s</code> was converted successfully; otherwise, `false`.","nodes":[{"pos":[0,72],"content":"<ph id=\"ph1\">`true`</ph> if <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">s</ph><ept id=\"p1\">&lt;/code&gt;</ept> was converted successfully; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` if <code>s</code> was converted successfully; otherwise, `false`."}],"pos":[296563,296638],"yaml":true},{"content":"Represents the number zero (0).","nodes":[{"pos":[0,31],"content":"Represents the number zero (0).","nodes":[{"content":"Represents the number zero (0).","pos":[0,31]}]}],"pos":[298039,298071],"yaml":true},{"content":"For a description of this member, see <xref href=\"System.IConvertible.ToBoolean(System.IFormatProvider)\"></xref>.","nodes":[{"pos":[0,113],"content":"For a description of this member, see <ph id=\"ph1\">&lt;xref href=\"System.IConvertible.ToBoolean(System.IFormatProvider)\"&gt;&lt;/xref&gt;</ph>.","source":"For a description of this member, see <xref href=\"System.IConvertible.ToBoolean(System.IFormatProvider)\"></xref>."}],"pos":[302466,302580],"yaml":true},{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Decimal> instance is cast to an <xref:System.IConvertible> interface. The recommended alternative is to call the <xref:System.Convert.ToBoolean%28System.Decimal%29?displayProperty=fullName> method.","nodes":[{"pos":[0,299],"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Decimal> instance is cast to an <xref:System.IConvertible> interface. The recommended alternative is to call the <xref:System.Convert.ToBoolean%28System.Decimal%29?displayProperty=fullName> method.","nodes":[{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Decimal> instance is cast to an <xref:System.IConvertible> interface. The recommended alternative is to call the <xref:System.Convert.ToBoolean%28System.Decimal%29?displayProperty=fullName> method.","pos":[0,299],"nodes":[{"content":"This member is an explicit interface member implementation.","pos":[0,59]},{"content":"It can be used only when the <ph id=\"ph1\">&lt;xref:System.Decimal&gt;</ph> instance is cast to an <ph id=\"ph2\">&lt;xref:System.IConvertible&gt;</ph> interface.","pos":[60,171],"source":" It can be used only when the <xref:System.Decimal> instance is cast to an <xref:System.IConvertible> interface."},{"content":"The recommended alternative is to call the <ph id=\"ph1\">&lt;xref:System.Convert.ToBoolean%28System.Decimal%29?displayProperty=fullName&gt;</ph> method.","pos":[172,299],"source":" The recommended alternative is to call the <xref:System.Convert.ToBoolean%28System.Decimal%29?displayProperty=fullName> method."}]}]}],"pos":[302591,302891],"yaml":true,"extradata":"MT"},{"content":"This parameter is ignored.","nodes":[{"pos":[0,26],"content":"This parameter is ignored.","nodes":[{"content":"This parameter is ignored.","pos":[0,26]}]}],"pos":[303059,303086],"yaml":true},{"content":"`true` if the value of the current instance is not zero; otherwise, `false`.","nodes":[{"pos":[0,76],"content":"<ph id=\"ph1\">`true`</ph> if the value of the current instance is not zero; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the value of the current instance is not zero; otherwise, `false`."}],"pos":[303144,303223],"yaml":true},{"content":"For a description of this member, see <xref href=\"System.IConvertible.ToByte(System.IFormatProvider)\"></xref>.","nodes":[{"pos":[0,110],"content":"For a description of this member, see <ph id=\"ph1\">&lt;xref href=\"System.IConvertible.ToByte(System.IFormatProvider)\"&gt;&lt;/xref&gt;</ph>.","source":"For a description of this member, see <xref href=\"System.IConvertible.ToByte(System.IFormatProvider)\"></xref>."}],"pos":[304774,304885],"yaml":true},{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Decimal> instance is cast to an <xref:System.IConvertible> interface. The recommended alternative is to call either the <xref:System.Decimal.ToByte%2A?displayProperty=fullName> method or the <xref:System.Convert.ToByte%2A?displayProperty=fullName> method.","nodes":[{"pos":[0,357],"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Decimal> instance is cast to an <xref:System.IConvertible> interface. The recommended alternative is to call either the <xref:System.Decimal.ToByte%2A?displayProperty=fullName> method or the <xref:System.Convert.ToByte%2A?displayProperty=fullName> method.","nodes":[{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Decimal> instance is cast to an <xref:System.IConvertible> interface. The recommended alternative is to call either the <xref:System.Decimal.ToByte%2A?displayProperty=fullName> method or the <xref:System.Convert.ToByte%2A?displayProperty=fullName> method.","pos":[0,357],"nodes":[{"content":"This member is an explicit interface member implementation.","pos":[0,59]},{"content":"It can be used only when the <ph id=\"ph1\">&lt;xref:System.Decimal&gt;</ph> instance is cast to an <ph id=\"ph2\">&lt;xref:System.IConvertible&gt;</ph> interface.","pos":[60,171],"source":" It can be used only when the <xref:System.Decimal> instance is cast to an <xref:System.IConvertible> interface."},{"content":"The recommended alternative is to call either the <ph id=\"ph1\">&lt;xref:System.Decimal.ToByte%2A?displayProperty=fullName&gt;</ph> method or the <ph id=\"ph2\">&lt;xref:System.Convert.ToByte%2A?displayProperty=fullName&gt;</ph> method.","pos":[172,357],"source":" The recommended alternative is to call either the <xref:System.Decimal.ToByte%2A?displayProperty=fullName> method or the <xref:System.Convert.ToByte%2A?displayProperty=fullName> method."}]}]}],"pos":[304896,305254],"yaml":true,"extradata":"MT"},{"content":"This parameter is ignored.","nodes":[{"pos":[0,26],"content":"This parameter is ignored.","nodes":[{"content":"This parameter is ignored.","pos":[0,26]}]}],"pos":[305419,305446],"yaml":true},{"content":"The value of the current instance, converted to a <xref href=\"System.Byte\"></xref>.","nodes":[{"pos":[0,83],"content":"The value of the current instance, converted to a <ph id=\"ph1\">&lt;xref href=\"System.Byte\"&gt;&lt;/xref&gt;</ph>.","source":"The value of the current instance, converted to a <xref href=\"System.Byte\"></xref>."}],"pos":[305501,305585],"yaml":true},{"content":"The resulting integer value is less than <xref href=\"System.Byte.MinValue\"></xref> or greater than <xref href=\"System.Byte.MaxValue\"></xref>.","nodes":[{"pos":[0,141],"content":"The resulting integer value is less than <ph id=\"ph1\">&lt;xref href=\"System.Byte.MinValue\"&gt;&lt;/xref&gt;</ph> or greater than <ph id=\"ph2\">&lt;xref href=\"System.Byte.MaxValue\"&gt;&lt;/xref&gt;</ph>.","source":"The resulting integer value is less than <xref href=\"System.Byte.MinValue\"></xref> or greater than <xref href=\"System.Byte.MaxValue\"></xref>."}],"pos":[305748,305890],"yaml":true},{"content":"This conversion is not supported. Attempting to use this method throws an <xref href=\"System.InvalidCastException\"></xref>.","nodes":[{"pos":[0,123],"content":"This conversion is not supported. Attempting to use this method throws an <xref href=\"System.InvalidCastException\"></xref>.","nodes":[{"content":"This conversion is not supported.","pos":[0,33]},{"content":"Attempting to use this method throws an <ph id=\"ph1\">&lt;xref href=\"System.InvalidCastException\"&gt;&lt;/xref&gt;</ph>.","pos":[34,123],"source":" Attempting to use this method throws an <xref href=\"System.InvalidCastException\"></xref>."}]}],"pos":[307366,307490],"yaml":true},{"content":"This parameter is ignored.","nodes":[{"pos":[0,26],"content":"This parameter is ignored.","nodes":[{"content":"This parameter is ignored.","pos":[0,26]}]}],"pos":[307655,307682],"yaml":true},{"content":"None. This conversion is not supported.","nodes":[{"pos":[0,39],"content":"None. This conversion is not supported.","nodes":[{"content":"None. This conversion is not supported.","pos":[0,39],"nodes":[{"content":"None.","pos":[0,5]},{"content":"This conversion is not supported.","pos":[6,39]}]}]}],"pos":[307737,307777],"yaml":true},{"content":"In all cases.","nodes":[{"pos":[0,13],"content":"In all cases.","nodes":[{"content":"In all cases.","pos":[0,13]}]}],"pos":[307946,307960],"yaml":true},{"content":"This conversion is not supported. Attempting to use this method throws an <xref href=\"System.InvalidCastException\"></xref>.","nodes":[{"pos":[0,123],"content":"This conversion is not supported. Attempting to use this method throws an <xref href=\"System.InvalidCastException\"></xref>.","nodes":[{"content":"This conversion is not supported.","pos":[0,33]},{"content":"Attempting to use this method throws an <ph id=\"ph1\">&lt;xref href=\"System.InvalidCastException\"&gt;&lt;/xref&gt;</ph>.","pos":[34,123],"source":" Attempting to use this method throws an <xref href=\"System.InvalidCastException\"></xref>."}]}],"pos":[309460,309584],"yaml":true},{"content":"This parameter is ignored.","nodes":[{"pos":[0,26],"content":"This parameter is ignored.","nodes":[{"content":"This parameter is ignored.","pos":[0,26]}]}],"pos":[309757,309784],"yaml":true},{"content":"None. This conversion is not supported.","nodes":[{"pos":[0,39],"content":"None. This conversion is not supported.","nodes":[{"content":"None. This conversion is not supported.","pos":[0,39],"nodes":[{"content":"None.","pos":[0,5]},{"content":"This conversion is not supported.","pos":[6,39]}]}]}],"pos":[309843,309883],"yaml":true},{"content":"In all cases.","nodes":[{"pos":[0,13],"content":"In all cases.","nodes":[{"content":"In all cases.","pos":[0,13]}]}],"pos":[310056,310070],"yaml":true},{"content":"For a description of this member, see <xref href=\"System.IConvertible.ToDecimal(System.IFormatProvider)\"></xref>.","nodes":[{"pos":[0,113],"content":"For a description of this member, see <ph id=\"ph1\">&lt;xref href=\"System.IConvertible.ToDecimal(System.IFormatProvider)\"&gt;&lt;/xref&gt;</ph>.","source":"For a description of this member, see <xref href=\"System.IConvertible.ToDecimal(System.IFormatProvider)\"></xref>."}],"pos":[311564,311678],"yaml":true},{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Decimal> instance is cast to an <xref:System.IConvertible> interface.","nodes":[{"pos":[0,171],"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Decimal> instance is cast to an <xref:System.IConvertible> interface.","nodes":[{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Decimal> instance is cast to an <xref:System.IConvertible> interface.","pos":[0,171],"nodes":[{"content":"This member is an explicit interface member implementation.","pos":[0,59]},{"content":"It can be used only when the <ph id=\"ph1\">&lt;xref:System.Decimal&gt;</ph> instance is cast to an <ph id=\"ph2\">&lt;xref:System.IConvertible&gt;</ph> interface.","pos":[60,171],"source":" It can be used only when the <xref:System.Decimal> instance is cast to an <xref:System.IConvertible> interface."}]}]}],"pos":[311689,311861],"yaml":true,"extradata":"MT"},{"content":"This parameter is ignored.","nodes":[{"pos":[0,26],"content":"This parameter is ignored.","nodes":[{"content":"This parameter is ignored.","pos":[0,26]}]}],"pos":[312032,312059],"yaml":true},{"content":"The value of the current instance, unchanged.","nodes":[{"pos":[0,45],"content":"The value of the current instance, unchanged.","nodes":[{"content":"The value of the current instance, unchanged.","pos":[0,45]}]}],"pos":[312117,312163],"yaml":true},{"content":"For a description of this member, see <xref href=\"System.IConvertible.ToDouble(System.IFormatProvider)\"></xref>.","nodes":[{"pos":[0,112],"content":"For a description of this member, see <ph id=\"ph1\">&lt;xref href=\"System.IConvertible.ToDouble(System.IFormatProvider)\"&gt;&lt;/xref&gt;</ph>.","source":"For a description of this member, see <xref href=\"System.IConvertible.ToDouble(System.IFormatProvider)\"></xref>."}],"pos":[313726,313839],"yaml":true},{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Decimal> instance is cast to an <xref:System.IConvertible> interface. The recommended alternative is to call either the <xref:System.Decimal.ToDouble%2A?displayProperty=fullName> method or the <xref:System.Convert.ToDouble%2A?displayProperty=fullName> method.  \n  \n Because a <xref:System.Double> has fewer significant digits than a <xref:System.Decimal>, this operation may produce round-off errors.","nodes":[{"pos":[0,361],"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Decimal> instance is cast to an <xref:System.IConvertible> interface. The recommended alternative is to call either the <xref:System.Decimal.ToDouble%2A?displayProperty=fullName> method or the <xref:System.Convert.ToDouble%2A?displayProperty=fullName> method.","nodes":[{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Decimal> instance is cast to an <xref:System.IConvertible> interface. The recommended alternative is to call either the <xref:System.Decimal.ToDouble%2A?displayProperty=fullName> method or the <xref:System.Convert.ToDouble%2A?displayProperty=fullName> method.","pos":[0,361],"nodes":[{"content":"This member is an explicit interface member implementation.","pos":[0,59]},{"content":"It can be used only when the <ph id=\"ph1\">&lt;xref:System.Decimal&gt;</ph> instance is cast to an <ph id=\"ph2\">&lt;xref:System.IConvertible&gt;</ph> interface.","pos":[60,171],"source":" It can be used only when the <xref:System.Decimal> instance is cast to an <xref:System.IConvertible> interface."},{"content":"The recommended alternative is to call either the <ph id=\"ph1\">&lt;xref:System.Decimal.ToDouble%2A?displayProperty=fullName&gt;</ph> method or the <ph id=\"ph2\">&lt;xref:System.Convert.ToDouble%2A?displayProperty=fullName&gt;</ph> method.","pos":[172,361],"source":" The recommended alternative is to call either the <xref:System.Decimal.ToDouble%2A?displayProperty=fullName> method or the <xref:System.Convert.ToDouble%2A?displayProperty=fullName> method."}]}]},{"pos":[368,502],"content":"Because a <xref:System.Double> has fewer significant digits than a <xref:System.Decimal>, this operation may produce round-off errors.","nodes":[{"content":"Because a <ph id=\"ph1\">&lt;xref:System.Double&gt;</ph> has fewer significant digits than a <ph id=\"ph2\">&lt;xref:System.Decimal&gt;</ph>, this operation may produce round-off errors.","pos":[0,134],"source":"Because a <xref:System.Double> has fewer significant digits than a <xref:System.Decimal>, this operation may produce round-off errors."}]}],"pos":[313850,314357],"yaml":true,"extradata":"MT"},{"content":"This parameter is ignored.","nodes":[{"pos":[0,26],"content":"This parameter is ignored.","nodes":[{"content":"This parameter is ignored.","pos":[0,26]}]}],"pos":[314526,314553],"yaml":true},{"content":"The value of the current instance, converted to a <xref href=\"System.Double\"></xref>.","nodes":[{"pos":[0,85],"content":"The value of the current instance, converted to a <ph id=\"ph1\">&lt;xref href=\"System.Double\"&gt;&lt;/xref&gt;</ph>.","source":"The value of the current instance, converted to a <xref href=\"System.Double\"></xref>."}],"pos":[314610,314696],"yaml":true},{"content":"For a description of this member, see <xref href=\"System.IConvertible.ToInt16(System.IFormatProvider)\"></xref>.","nodes":[{"pos":[0,111],"content":"For a description of this member, see <ph id=\"ph1\">&lt;xref href=\"System.IConvertible.ToInt16(System.IFormatProvider)\"&gt;&lt;/xref&gt;</ph>.","source":"For a description of this member, see <xref href=\"System.IConvertible.ToInt16(System.IFormatProvider)\"></xref>."}],"pos":[316252,316364],"yaml":true},{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Decimal> instance is cast to an <xref:System.IConvertible> interface. The recommended alternative is to call either the <xref:System.Decimal.ToInt16%2A?displayProperty=fullName> method or the <xref:System.Convert.ToInt16%2A?displayProperty=fullName> method.  \n  \n The <xref:System.Decimal> value is rounded toward zero to the nearest integer value.","nodes":[{"pos":[0,359],"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Decimal> instance is cast to an <xref:System.IConvertible> interface. The recommended alternative is to call either the <xref:System.Decimal.ToInt16%2A?displayProperty=fullName> method or the <xref:System.Convert.ToInt16%2A?displayProperty=fullName> method.","nodes":[{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Decimal> instance is cast to an <xref:System.IConvertible> interface. The recommended alternative is to call either the <xref:System.Decimal.ToInt16%2A?displayProperty=fullName> method or the <xref:System.Convert.ToInt16%2A?displayProperty=fullName> method.","pos":[0,359],"nodes":[{"content":"This member is an explicit interface member implementation.","pos":[0,59]},{"content":"It can be used only when the <ph id=\"ph1\">&lt;xref:System.Decimal&gt;</ph> instance is cast to an <ph id=\"ph2\">&lt;xref:System.IConvertible&gt;</ph> interface.","pos":[60,171],"source":" It can be used only when the <xref:System.Decimal> instance is cast to an <xref:System.IConvertible> interface."},{"content":"The recommended alternative is to call either the <ph id=\"ph1\">&lt;xref:System.Decimal.ToInt16%2A?displayProperty=fullName&gt;</ph> method or the <ph id=\"ph2\">&lt;xref:System.Convert.ToInt16%2A?displayProperty=fullName&gt;</ph> method.","pos":[172,359],"source":" The recommended alternative is to call either the <xref:System.Decimal.ToInt16%2A?displayProperty=fullName> method or the <xref:System.Convert.ToInt16%2A?displayProperty=fullName> method."}]}]},{"pos":[366,450],"content":"The <xref:System.Decimal> value is rounded toward zero to the nearest integer value.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Decimal&gt;</ph> value is rounded toward zero to the nearest integer value.","pos":[0,84],"source":"The <xref:System.Decimal> value is rounded toward zero to the nearest integer value."}]}],"pos":[316375,316830],"yaml":true,"extradata":"MT"},{"content":"This parameter is ignored.","nodes":[{"pos":[0,26],"content":"This parameter is ignored.","nodes":[{"content":"This parameter is ignored.","pos":[0,26]}]}],"pos":[316997,317024],"yaml":true},{"content":"The value of the current instance, converted to a <xref href=\"System.Int16\"></xref>.","nodes":[{"pos":[0,84],"content":"The value of the current instance, converted to a <ph id=\"ph1\">&lt;xref href=\"System.Int16\"&gt;&lt;/xref&gt;</ph>.","source":"The value of the current instance, converted to a <xref href=\"System.Int16\"></xref>."}],"pos":[317080,317165],"yaml":true},{"content":"The resulting integer value is less than <xref href=\"System.Int16.MinValue\"></xref> or greater than <xref href=\"System.Int16.MaxValue\"></xref>.","nodes":[{"pos":[0,143],"content":"The resulting integer value is less than <ph id=\"ph1\">&lt;xref href=\"System.Int16.MinValue\"&gt;&lt;/xref&gt;</ph> or greater than <ph id=\"ph2\">&lt;xref href=\"System.Int16.MaxValue\"&gt;&lt;/xref&gt;</ph>.","source":"The resulting integer value is less than <xref href=\"System.Int16.MinValue\"></xref> or greater than <xref href=\"System.Int16.MaxValue\"></xref>."}],"pos":[317329,317473],"yaml":true},{"content":"For a description of this member, see <xref href=\"System.IConvertible.ToInt32(System.IFormatProvider)\"></xref>.","nodes":[{"pos":[0,111],"content":"For a description of this member, see <ph id=\"ph1\">&lt;xref href=\"System.IConvertible.ToInt32(System.IFormatProvider)\"&gt;&lt;/xref&gt;</ph>.","source":"For a description of this member, see <xref href=\"System.IConvertible.ToInt32(System.IFormatProvider)\"></xref>."}],"pos":[318955,319067],"yaml":true},{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Decimal> instance is cast to an <xref:System.IConvertible> interface. The recommended alternative is to call either the <xref:System.Decimal.ToInt32%2A?displayProperty=fullName> method or the <xref:System.Convert.ToInt32%2A?displayProperty=fullName> method.  \n  \n The <xref:System.Decimal> value is rounded toward zero to the nearest integer value.","nodes":[{"pos":[0,359],"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Decimal> instance is cast to an <xref:System.IConvertible> interface. The recommended alternative is to call either the <xref:System.Decimal.ToInt32%2A?displayProperty=fullName> method or the <xref:System.Convert.ToInt32%2A?displayProperty=fullName> method.","nodes":[{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Decimal> instance is cast to an <xref:System.IConvertible> interface. The recommended alternative is to call either the <xref:System.Decimal.ToInt32%2A?displayProperty=fullName> method or the <xref:System.Convert.ToInt32%2A?displayProperty=fullName> method.","pos":[0,359],"nodes":[{"content":"This member is an explicit interface member implementation.","pos":[0,59]},{"content":"It can be used only when the <ph id=\"ph1\">&lt;xref:System.Decimal&gt;</ph> instance is cast to an <ph id=\"ph2\">&lt;xref:System.IConvertible&gt;</ph> interface.","pos":[60,171],"source":" It can be used only when the <xref:System.Decimal> instance is cast to an <xref:System.IConvertible> interface."},{"content":"The recommended alternative is to call either the <ph id=\"ph1\">&lt;xref:System.Decimal.ToInt32%2A?displayProperty=fullName&gt;</ph> method or the <ph id=\"ph2\">&lt;xref:System.Convert.ToInt32%2A?displayProperty=fullName&gt;</ph> method.","pos":[172,359],"source":" The recommended alternative is to call either the <xref:System.Decimal.ToInt32%2A?displayProperty=fullName> method or the <xref:System.Convert.ToInt32%2A?displayProperty=fullName> method."}]}]},{"pos":[366,450],"content":"The <xref:System.Decimal> value is rounded toward zero to the nearest integer value.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Decimal&gt;</ph> value is rounded toward zero to the nearest integer value.","pos":[0,84],"source":"The <xref:System.Decimal> value is rounded toward zero to the nearest integer value."}]}],"pos":[319078,319533],"yaml":true,"extradata":"MT"},{"content":"The parameter is ignored.","nodes":[{"pos":[0,25],"content":"The parameter is ignored.","nodes":[{"content":"The parameter is ignored.","pos":[0,25]}]}],"pos":[319698,319724],"yaml":true},{"content":"The value of the current instance, converted to a <xref href=\"System.Int32\"></xref>.","nodes":[{"pos":[0,84],"content":"The value of the current instance, converted to a <ph id=\"ph1\">&lt;xref href=\"System.Int32\"&gt;&lt;/xref&gt;</ph>.","source":"The value of the current instance, converted to a <xref href=\"System.Int32\"></xref>."}],"pos":[319780,319865],"yaml":true},{"content":"The resulting integer value is less than <xref href=\"System.Int32.MinValue\"></xref> or greater than <xref href=\"System.Int32.MaxValue\"></xref>.","nodes":[{"pos":[0,143],"content":"The resulting integer value is less than <ph id=\"ph1\">&lt;xref href=\"System.Int32.MinValue\"&gt;&lt;/xref&gt;</ph> or greater than <ph id=\"ph2\">&lt;xref href=\"System.Int32.MaxValue\"&gt;&lt;/xref&gt;</ph>.","source":"The resulting integer value is less than <xref href=\"System.Int32.MinValue\"></xref> or greater than <xref href=\"System.Int32.MaxValue\"></xref>."}],"pos":[320029,320173],"yaml":true},{"content":"For a description of this member, see <xref href=\"System.IConvertible.ToInt64(System.IFormatProvider)\"></xref>.","nodes":[{"pos":[0,111],"content":"For a description of this member, see <ph id=\"ph1\">&lt;xref href=\"System.IConvertible.ToInt64(System.IFormatProvider)\"&gt;&lt;/xref&gt;</ph>.","source":"For a description of this member, see <xref href=\"System.IConvertible.ToInt64(System.IFormatProvider)\"></xref>."}],"pos":[321655,321767],"yaml":true},{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Decimal> instance is cast to an <xref:System.IConvertible> interface. The recommended alternative is to call either the <xref:System.Decimal.ToInt64%2A?displayProperty=fullName> method or the <xref:System.Convert.ToInt64%2A?displayProperty=fullName> method.","nodes":[{"pos":[0,359],"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Decimal> instance is cast to an <xref:System.IConvertible> interface. The recommended alternative is to call either the <xref:System.Decimal.ToInt64%2A?displayProperty=fullName> method or the <xref:System.Convert.ToInt64%2A?displayProperty=fullName> method.","nodes":[{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Decimal> instance is cast to an <xref:System.IConvertible> interface. The recommended alternative is to call either the <xref:System.Decimal.ToInt64%2A?displayProperty=fullName> method or the <xref:System.Convert.ToInt64%2A?displayProperty=fullName> method.","pos":[0,359],"nodes":[{"content":"This member is an explicit interface member implementation.","pos":[0,59]},{"content":"It can be used only when the <ph id=\"ph1\">&lt;xref:System.Decimal&gt;</ph> instance is cast to an <ph id=\"ph2\">&lt;xref:System.IConvertible&gt;</ph> interface.","pos":[60,171],"source":" It can be used only when the <xref:System.Decimal> instance is cast to an <xref:System.IConvertible> interface."},{"content":"The recommended alternative is to call either the <ph id=\"ph1\">&lt;xref:System.Decimal.ToInt64%2A?displayProperty=fullName&gt;</ph> method or the <ph id=\"ph2\">&lt;xref:System.Convert.ToInt64%2A?displayProperty=fullName&gt;</ph> method.","pos":[172,359],"source":" The recommended alternative is to call either the <xref:System.Decimal.ToInt64%2A?displayProperty=fullName> method or the <xref:System.Convert.ToInt64%2A?displayProperty=fullName> method."}]}]}],"pos":[321778,322138],"yaml":true,"extradata":"MT"},{"content":"This parameter is ignored.","nodes":[{"pos":[0,26],"content":"This parameter is ignored.","nodes":[{"content":"This parameter is ignored.","pos":[0,26]}]}],"pos":[322304,322331],"yaml":true},{"content":"The value of the current instance, converted to a <xref href=\"System.Int64\"></xref>.","nodes":[{"pos":[0,84],"content":"The value of the current instance, converted to a <ph id=\"ph1\">&lt;xref href=\"System.Int64\"&gt;&lt;/xref&gt;</ph>.","source":"The value of the current instance, converted to a <xref href=\"System.Int64\"></xref>."}],"pos":[322387,322472],"yaml":true},{"content":"The resulting integer value is less than <xref href=\"System.Int64.MinValue\"></xref> or greater than <xref href=\"System.Int64.MaxValue\"></xref>.","nodes":[{"pos":[0,143],"content":"The resulting integer value is less than <ph id=\"ph1\">&lt;xref href=\"System.Int64.MinValue\"&gt;&lt;/xref&gt;</ph> or greater than <ph id=\"ph2\">&lt;xref href=\"System.Int64.MaxValue\"&gt;&lt;/xref&gt;</ph>.","source":"The resulting integer value is less than <xref href=\"System.Int64.MinValue\"></xref> or greater than <xref href=\"System.Int64.MaxValue\"></xref>."}],"pos":[322636,322780],"yaml":true},{"content":"For a description of this member, see <xref href=\"System.IConvertible.ToSByte(System.IFormatProvider)\"></xref>.","nodes":[{"pos":[0,111],"content":"For a description of this member, see <ph id=\"ph1\">&lt;xref href=\"System.IConvertible.ToSByte(System.IFormatProvider)\"&gt;&lt;/xref&gt;</ph>.","source":"For a description of this member, see <xref href=\"System.IConvertible.ToSByte(System.IFormatProvider)\"></xref>."}],"pos":[324262,324374],"yaml":true},{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Decimal> instance is cast to an <xref:System.IConvertible> interface. The recommended alternative is to call either the <xref:System.Decimal.ToSByte%2A?displayProperty=fullName> method or the <xref:System.Convert.ToSByte%2A?displayProperty=fullName> method.","nodes":[{"pos":[0,359],"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Decimal> instance is cast to an <xref:System.IConvertible> interface. The recommended alternative is to call either the <xref:System.Decimal.ToSByte%2A?displayProperty=fullName> method or the <xref:System.Convert.ToSByte%2A?displayProperty=fullName> method.","nodes":[{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Decimal> instance is cast to an <xref:System.IConvertible> interface. The recommended alternative is to call either the <xref:System.Decimal.ToSByte%2A?displayProperty=fullName> method or the <xref:System.Convert.ToSByte%2A?displayProperty=fullName> method.","pos":[0,359],"nodes":[{"content":"This member is an explicit interface member implementation.","pos":[0,59]},{"content":"It can be used only when the <ph id=\"ph1\">&lt;xref:System.Decimal&gt;</ph> instance is cast to an <ph id=\"ph2\">&lt;xref:System.IConvertible&gt;</ph> interface.","pos":[60,171],"source":" It can be used only when the <xref:System.Decimal> instance is cast to an <xref:System.IConvertible> interface."},{"content":"The recommended alternative is to call either the <ph id=\"ph1\">&lt;xref:System.Decimal.ToSByte%2A?displayProperty=fullName&gt;</ph> method or the <ph id=\"ph2\">&lt;xref:System.Convert.ToSByte%2A?displayProperty=fullName&gt;</ph> method.","pos":[172,359],"source":" The recommended alternative is to call either the <xref:System.Decimal.ToSByte%2A?displayProperty=fullName> method or the <xref:System.Convert.ToSByte%2A?displayProperty=fullName> method."}]}]}],"pos":[324385,324745],"yaml":true,"extradata":"MT"},{"content":"This parameter is ignored.","nodes":[{"pos":[0,26],"content":"This parameter is ignored.","nodes":[{"content":"This parameter is ignored.","pos":[0,26]}]}],"pos":[324912,324939],"yaml":true},{"content":"The value of the current instance, converted to a <xref href=\"System.SByte\"></xref>.","nodes":[{"pos":[0,84],"content":"The value of the current instance, converted to a <ph id=\"ph1\">&lt;xref href=\"System.SByte\"&gt;&lt;/xref&gt;</ph>.","source":"The value of the current instance, converted to a <xref href=\"System.SByte\"></xref>."}],"pos":[324995,325080],"yaml":true},{"content":"The resulting integer value is less than <xref href=\"System.SByte.MinValue\"></xref> or greater than <xref href=\"System.SByte.MaxValue\"></xref>.","nodes":[{"pos":[0,143],"content":"The resulting integer value is less than <ph id=\"ph1\">&lt;xref href=\"System.SByte.MinValue\"&gt;&lt;/xref&gt;</ph> or greater than <ph id=\"ph2\">&lt;xref href=\"System.SByte.MaxValue\"&gt;&lt;/xref&gt;</ph>.","source":"The resulting integer value is less than <xref href=\"System.SByte.MinValue\"></xref> or greater than <xref href=\"System.SByte.MaxValue\"></xref>."}],"pos":[325244,325388],"yaml":true},{"content":"For a description of this member, see <xref href=\"System.IConvertible.ToSingle(System.IFormatProvider)\"></xref>.","nodes":[{"pos":[0,112],"content":"For a description of this member, see <ph id=\"ph1\">&lt;xref href=\"System.IConvertible.ToSingle(System.IFormatProvider)\"&gt;&lt;/xref&gt;</ph>.","source":"For a description of this member, see <xref href=\"System.IConvertible.ToSingle(System.IFormatProvider)\"></xref>."}],"pos":[326876,326989],"yaml":true},{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Decimal> instance is cast to an <xref:System.IConvertible> interface. The recommended alternative is to call either the <xref:System.Decimal.ToSingle%2A?displayProperty=fullName> method or the <xref:System.Convert.ToSingle%2A?displayProperty=fullName> method.","nodes":[{"pos":[0,361],"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Decimal> instance is cast to an <xref:System.IConvertible> interface. The recommended alternative is to call either the <xref:System.Decimal.ToSingle%2A?displayProperty=fullName> method or the <xref:System.Convert.ToSingle%2A?displayProperty=fullName> method.","nodes":[{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Decimal> instance is cast to an <xref:System.IConvertible> interface. The recommended alternative is to call either the <xref:System.Decimal.ToSingle%2A?displayProperty=fullName> method or the <xref:System.Convert.ToSingle%2A?displayProperty=fullName> method.","pos":[0,361],"nodes":[{"content":"This member is an explicit interface member implementation.","pos":[0,59]},{"content":"It can be used only when the <ph id=\"ph1\">&lt;xref:System.Decimal&gt;</ph> instance is cast to an <ph id=\"ph2\">&lt;xref:System.IConvertible&gt;</ph> interface.","pos":[60,171],"source":" It can be used only when the <xref:System.Decimal> instance is cast to an <xref:System.IConvertible> interface."},{"content":"The recommended alternative is to call either the <ph id=\"ph1\">&lt;xref:System.Decimal.ToSingle%2A?displayProperty=fullName&gt;</ph> method or the <ph id=\"ph2\">&lt;xref:System.Convert.ToSingle%2A?displayProperty=fullName&gt;</ph> method.","pos":[172,361],"source":" The recommended alternative is to call either the <xref:System.Decimal.ToSingle%2A?displayProperty=fullName> method or the <xref:System.Convert.ToSingle%2A?displayProperty=fullName> method."}]}]}],"pos":[327000,327362],"yaml":true,"extradata":"MT"},{"content":"This parameter is ignored.","nodes":[{"pos":[0,26],"content":"This parameter is ignored.","nodes":[{"content":"This parameter is ignored.","pos":[0,26]}]}],"pos":[327530,327557],"yaml":true},{"content":"The value of the current instance, converted to a <xref href=\"System.Single\"></xref>.","nodes":[{"pos":[0,85],"content":"The value of the current instance, converted to a <ph id=\"ph1\">&lt;xref href=\"System.Single\"&gt;&lt;/xref&gt;</ph>.","source":"The value of the current instance, converted to a <xref href=\"System.Single\"></xref>."}],"pos":[327614,327700],"yaml":true},{"content":"For a description of this member, see <xref href=\"System.IConvertible.ToType(System.Type,System.IFormatProvider)\"></xref>.","nodes":[{"pos":[0,122],"content":"For a description of this member, see <ph id=\"ph1\">&lt;xref href=\"System.IConvertible.ToType(System.Type,System.IFormatProvider)\"&gt;&lt;/xref&gt;</ph>.","source":"For a description of this member, see <xref href=\"System.IConvertible.ToType(System.Type,System.IFormatProvider)\"></xref>."}],"pos":[329304,329427],"yaml":true},{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Decimal> instance is cast to an <xref:System.IConvertible> interface. The recommended alternative is to call the `static` (`Shared` in Visual Basic) <xref:System.Convert.ChangeType%2A?displayProperty=fullName> method instead.","nodes":[{"pos":[0,327],"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Decimal> instance is cast to an <xref:System.IConvertible> interface. The recommended alternative is to call the `static` (`Shared` in Visual Basic) <xref:System.Convert.ChangeType%2A?displayProperty=fullName> method instead.","nodes":[{"content":"This member is an explicit interface member implementation.","pos":[0,59]},{"content":"It can be used only when the <ph id=\"ph1\">&lt;xref:System.Decimal&gt;</ph> instance is cast to an <ph id=\"ph2\">&lt;xref:System.IConvertible&gt;</ph> interface.","pos":[60,171],"source":" It can be used only when the <xref:System.Decimal> instance is cast to an <xref:System.IConvertible> interface."},{"content":"The recommended alternative is to call the <ph id=\"ph1\">`static`</ph> (<ph id=\"ph2\">`Shared`</ph> in Visual Basic) <ph id=\"ph3\">&lt;xref:System.Convert.ChangeType%2A?displayProperty=fullName&gt;</ph> method instead.","pos":[172,327],"source":" The recommended alternative is to call the `static` (`Shared` in Visual Basic) <xref:System.Convert.ChangeType%2A?displayProperty=fullName> method instead."}]}],"pos":[329438,329766],"yaml":true,"extradata":"MT"},{"content":"The type to which to convert the value of this <xref href=\"System.Decimal\"></xref> instance.","nodes":[{"pos":[0,92],"content":"The type to which to convert the value of this <ph id=\"ph1\">&lt;xref href=\"System.Decimal\"&gt;&lt;/xref&gt;</ph> instance.","source":"The type to which to convert the value of this <xref href=\"System.Decimal\"></xref> instance."}],"pos":[329929,330022],"yaml":true},{"content":"An <xref href=\"System.IFormatProvider\"></xref> implementation that supplies culture-specific information about the format of the returned value.","nodes":[{"pos":[0,144],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.IFormatProvider\"&gt;&lt;/xref&gt;</ph> implementation that supplies culture-specific information about the format of the returned value.","source":"An <xref href=\"System.IFormatProvider\"></xref> implementation that supplies culture-specific information about the format of the returned value."}],"pos":[330095,330240],"yaml":true},{"content":"The value of the current instance, converted to a <code>type</code>.","nodes":[{"pos":[0,68],"content":"The value of the current instance, converted to a <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">type</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"The value of the current instance, converted to a <code>type</code>."}],"pos":[330297,330366],"yaml":true},{"content":"<code>type</code> is `null`.","nodes":[{"pos":[0,28],"content":"<ph id=\"ph1\">&lt;code&gt;type&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>type</code> is `null`."}],"pos":[330537,330566],"yaml":true},{"content":"The requested type conversion is not supported.","nodes":[{"pos":[0,47],"content":"The requested type conversion is not supported.","nodes":[{"content":"The requested type conversion is not supported.","pos":[0,47]}]}],"pos":[330666,330714],"yaml":true},{"content":"For a description of this member, see <xref href=\"System.IConvertible.ToUInt16(System.IFormatProvider)\"></xref>.","nodes":[{"pos":[0,112],"content":"For a description of this member, see <ph id=\"ph1\">&lt;xref href=\"System.IConvertible.ToUInt16(System.IFormatProvider)\"&gt;&lt;/xref&gt;</ph>.","source":"For a description of this member, see <xref href=\"System.IConvertible.ToUInt16(System.IFormatProvider)\"></xref>."}],"pos":[332202,332315],"yaml":true},{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Decimal> instance is cast to an <xref:System.IConvertible> interface. The recommended alternative is to call either the <xref:System.Decimal.ToUInt16%2A?displayProperty=fullName> method or the <xref:System.Convert.ToUInt16%2A?displayProperty=fullName> method.","nodes":[{"pos":[0,361],"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Decimal> instance is cast to an <xref:System.IConvertible> interface. The recommended alternative is to call either the <xref:System.Decimal.ToUInt16%2A?displayProperty=fullName> method or the <xref:System.Convert.ToUInt16%2A?displayProperty=fullName> method.","nodes":[{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Decimal> instance is cast to an <xref:System.IConvertible> interface. The recommended alternative is to call either the <xref:System.Decimal.ToUInt16%2A?displayProperty=fullName> method or the <xref:System.Convert.ToUInt16%2A?displayProperty=fullName> method.","pos":[0,361],"nodes":[{"content":"This member is an explicit interface member implementation.","pos":[0,59]},{"content":"It can be used only when the <ph id=\"ph1\">&lt;xref:System.Decimal&gt;</ph> instance is cast to an <ph id=\"ph2\">&lt;xref:System.IConvertible&gt;</ph> interface.","pos":[60,171],"source":" It can be used only when the <xref:System.Decimal> instance is cast to an <xref:System.IConvertible> interface."},{"content":"The recommended alternative is to call either the <ph id=\"ph1\">&lt;xref:System.Decimal.ToUInt16%2A?displayProperty=fullName&gt;</ph> method or the <ph id=\"ph2\">&lt;xref:System.Convert.ToUInt16%2A?displayProperty=fullName&gt;</ph> method.","pos":[172,361],"source":" The recommended alternative is to call either the <xref:System.Decimal.ToUInt16%2A?displayProperty=fullName> method or the <xref:System.Convert.ToUInt16%2A?displayProperty=fullName> method."}]}]}],"pos":[332326,332688],"yaml":true,"extradata":"MT"},{"content":"This parameter is ignored.","nodes":[{"pos":[0,26],"content":"This parameter is ignored.","nodes":[{"content":"This parameter is ignored.","pos":[0,26]}]}],"pos":[332857,332884],"yaml":true},{"content":"The value of the current instance, converted to a <xref href=\"System.UInt16\"></xref>.","nodes":[{"pos":[0,85],"content":"The value of the current instance, converted to a <ph id=\"ph1\">&lt;xref href=\"System.UInt16\"&gt;&lt;/xref&gt;</ph>.","source":"The value of the current instance, converted to a <xref href=\"System.UInt16\"></xref>."}],"pos":[332941,333027],"yaml":true},{"content":"The resulting integer value is less than <xref href=\"System.UInt16.MinValue\"></xref> or greater than <xref href=\"System.UInt16.MaxValue\"></xref>.","nodes":[{"pos":[0,145],"content":"The resulting integer value is less than <ph id=\"ph1\">&lt;xref href=\"System.UInt16.MinValue\"&gt;&lt;/xref&gt;</ph> or greater than <ph id=\"ph2\">&lt;xref href=\"System.UInt16.MaxValue\"&gt;&lt;/xref&gt;</ph>.","source":"The resulting integer value is less than <xref href=\"System.UInt16.MinValue\"></xref> or greater than <xref href=\"System.UInt16.MaxValue\"></xref>."}],"pos":[333192,333338],"yaml":true},{"content":"For a description of this member, see <xref href=\"System.IConvertible.ToInt32(System.IFormatProvider)\"></xref>.","nodes":[{"pos":[0,111],"content":"For a description of this member, see <ph id=\"ph1\">&lt;xref href=\"System.IConvertible.ToInt32(System.IFormatProvider)\"&gt;&lt;/xref&gt;</ph>.","source":"For a description of this member, see <xref href=\"System.IConvertible.ToInt32(System.IFormatProvider)\"></xref>."}],"pos":[334826,334938],"yaml":true},{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Decimal> instance is cast to an <xref:System.IConvertible> interface. The recommended alternative is to call either the <xref:System.Decimal.ToUInt32%2A?displayProperty=fullName> method or the <xref:System.Convert.ToUInt32%2A?displayProperty=fullName> method.  \n  \n The <xref:System.Decimal> value is rounded toward zero to the nearest integer value.","nodes":[{"pos":[0,361],"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Decimal> instance is cast to an <xref:System.IConvertible> interface. The recommended alternative is to call either the <xref:System.Decimal.ToUInt32%2A?displayProperty=fullName> method or the <xref:System.Convert.ToUInt32%2A?displayProperty=fullName> method.","nodes":[{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Decimal> instance is cast to an <xref:System.IConvertible> interface. The recommended alternative is to call either the <xref:System.Decimal.ToUInt32%2A?displayProperty=fullName> method or the <xref:System.Convert.ToUInt32%2A?displayProperty=fullName> method.","pos":[0,361],"nodes":[{"content":"This member is an explicit interface member implementation.","pos":[0,59]},{"content":"It can be used only when the <ph id=\"ph1\">&lt;xref:System.Decimal&gt;</ph> instance is cast to an <ph id=\"ph2\">&lt;xref:System.IConvertible&gt;</ph> interface.","pos":[60,171],"source":" It can be used only when the <xref:System.Decimal> instance is cast to an <xref:System.IConvertible> interface."},{"content":"The recommended alternative is to call either the <ph id=\"ph1\">&lt;xref:System.Decimal.ToUInt32%2A?displayProperty=fullName&gt;</ph> method or the <ph id=\"ph2\">&lt;xref:System.Convert.ToUInt32%2A?displayProperty=fullName&gt;</ph> method.","pos":[172,361],"source":" The recommended alternative is to call either the <xref:System.Decimal.ToUInt32%2A?displayProperty=fullName> method or the <xref:System.Convert.ToUInt32%2A?displayProperty=fullName> method."}]}]},{"pos":[368,452],"content":"The <xref:System.Decimal> value is rounded toward zero to the nearest integer value.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Decimal&gt;</ph> value is rounded toward zero to the nearest integer value.","pos":[0,84],"source":"The <xref:System.Decimal> value is rounded toward zero to the nearest integer value."}]}],"pos":[334949,335406],"yaml":true,"extradata":"MT"},{"content":"This parameter is ignored.","nodes":[{"pos":[0,26],"content":"This parameter is ignored.","nodes":[{"content":"This parameter is ignored.","pos":[0,26]}]}],"pos":[335573,335600],"yaml":true},{"content":"The value of the current instance, converted to a <xref href=\"System.UInt32\"></xref>.","nodes":[{"pos":[0,85],"content":"The value of the current instance, converted to a <ph id=\"ph1\">&lt;xref href=\"System.UInt32\"&gt;&lt;/xref&gt;</ph>.","source":"The value of the current instance, converted to a <xref href=\"System.UInt32\"></xref>."}],"pos":[335657,335743],"yaml":true},{"content":"The resulting integer value is less than <xref href=\"System.UInt32.MinValue\"></xref> or greater than <xref href=\"System.UInt32.MaxValue\"></xref>.","nodes":[{"pos":[0,145],"content":"The resulting integer value is less than <ph id=\"ph1\">&lt;xref href=\"System.UInt32.MinValue\"&gt;&lt;/xref&gt;</ph> or greater than <ph id=\"ph2\">&lt;xref href=\"System.UInt32.MaxValue\"&gt;&lt;/xref&gt;</ph>.","source":"The resulting integer value is less than <xref href=\"System.UInt32.MinValue\"></xref> or greater than <xref href=\"System.UInt32.MaxValue\"></xref>."}],"pos":[335908,336054],"yaml":true},{"content":"For a description of this member, see <xref href=\"System.IConvertible.ToInt64(System.IFormatProvider)\"></xref>.","nodes":[{"pos":[0,111],"content":"For a description of this member, see <ph id=\"ph1\">&lt;xref href=\"System.IConvertible.ToInt64(System.IFormatProvider)\"&gt;&lt;/xref&gt;</ph>.","source":"For a description of this member, see <xref href=\"System.IConvertible.ToInt64(System.IFormatProvider)\"></xref>."}],"pos":[337542,337654],"yaml":true},{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Decimal> instance is cast to an <xref:System.IConvertible> interface. The recommended alternative is to call either the <xref:System.Decimal.ToUInt64%2A?displayProperty=fullName> method or the <xref:System.Convert.ToUInt64%2A?displayProperty=fullName> method.  \n  \n The <xref:System.Decimal> value is rounded toward zero to the nearest integer value.","nodes":[{"pos":[0,361],"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Decimal> instance is cast to an <xref:System.IConvertible> interface. The recommended alternative is to call either the <xref:System.Decimal.ToUInt64%2A?displayProperty=fullName> method or the <xref:System.Convert.ToUInt64%2A?displayProperty=fullName> method.","nodes":[{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Decimal> instance is cast to an <xref:System.IConvertible> interface. The recommended alternative is to call either the <xref:System.Decimal.ToUInt64%2A?displayProperty=fullName> method or the <xref:System.Convert.ToUInt64%2A?displayProperty=fullName> method.","pos":[0,361],"nodes":[{"content":"This member is an explicit interface member implementation.","pos":[0,59]},{"content":"It can be used only when the <ph id=\"ph1\">&lt;xref:System.Decimal&gt;</ph> instance is cast to an <ph id=\"ph2\">&lt;xref:System.IConvertible&gt;</ph> interface.","pos":[60,171],"source":" It can be used only when the <xref:System.Decimal> instance is cast to an <xref:System.IConvertible> interface."},{"content":"The recommended alternative is to call either the <ph id=\"ph1\">&lt;xref:System.Decimal.ToUInt64%2A?displayProperty=fullName&gt;</ph> method or the <ph id=\"ph2\">&lt;xref:System.Convert.ToUInt64%2A?displayProperty=fullName&gt;</ph> method.","pos":[172,361],"source":" The recommended alternative is to call either the <xref:System.Decimal.ToUInt64%2A?displayProperty=fullName> method or the <xref:System.Convert.ToUInt64%2A?displayProperty=fullName> method."}]}]},{"pos":[368,452],"content":"The <xref:System.Decimal> value is rounded toward zero to the nearest integer value.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Decimal&gt;</ph> value is rounded toward zero to the nearest integer value.","pos":[0,84],"source":"The <xref:System.Decimal> value is rounded toward zero to the nearest integer value."}]}],"pos":[337665,338122],"yaml":true,"extradata":"MT"},{"content":"This parameter is ignored.","nodes":[{"pos":[0,26],"content":"This parameter is ignored.","nodes":[{"content":"This parameter is ignored.","pos":[0,26]}]}],"pos":[338290,338317],"yaml":true},{"content":"The value of the current instance, converted to a <xref href=\"System.UInt64\"></xref>.","nodes":[{"pos":[0,85],"content":"The value of the current instance, converted to a <ph id=\"ph1\">&lt;xref href=\"System.UInt64\"&gt;&lt;/xref&gt;</ph>.","source":"The value of the current instance, converted to a <xref href=\"System.UInt64\"></xref>."}],"pos":[338374,338460],"yaml":true},{"content":"The resulting integer value is less than <xref href=\"System.UInt64.MinValue\"></xref> or greater than <xref href=\"System.UInt64.MaxValue\"></xref>.","nodes":[{"pos":[0,145],"content":"The resulting integer value is less than <ph id=\"ph1\">&lt;xref href=\"System.UInt64.MinValue\"&gt;&lt;/xref&gt;</ph> or greater than <ph id=\"ph2\">&lt;xref href=\"System.UInt64.MaxValue\"&gt;&lt;/xref&gt;</ph>.","source":"The resulting integer value is less than <xref href=\"System.UInt64.MinValue\"></xref> or greater than <xref href=\"System.UInt64.MaxValue\"></xref>."}],"pos":[338625,338771],"yaml":true},{"content":"Runs when the deserialization of an object has been completed.","nodes":[{"pos":[0,62],"content":"Runs when the deserialization of an object has been completed.","nodes":[{"content":"Runs when the deserialization of an object has been completed.","pos":[0,62]}]}],"pos":[340397,340460],"yaml":true},{"content":"The object that initiated the callback. The functionality for this parameter is not currently implemented.","nodes":[{"pos":[0,106],"content":"The object that initiated the callback. The functionality for this parameter is not currently implemented.","nodes":[{"content":"The object that initiated the callback. The functionality for this parameter is not currently implemented.","pos":[0,106],"nodes":[{"content":"The object that initiated the callback.","pos":[0,39]},{"content":"The functionality for this parameter is not currently implemented.","pos":[40,106]}]}]}],"pos":[340626,340733],"yaml":true},{"content":"The <xref href=\"System.Decimal\"></xref> object contains invalid or corrupted data.","nodes":[{"pos":[0,82],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Decimal\"&gt;&lt;/xref&gt;</ph> object contains invalid or corrupted data.","source":"The <xref href=\"System.Decimal\"></xref> object contains invalid or corrupted data."}],"pos":[340995,341078],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Decimal\n  commentId: T:System.Decimal\n  id: Decimal\n  children:\n  - System.Decimal.#ctor(System.Double)\n  - System.Decimal.#ctor(System.Int32)\n  - System.Decimal.#ctor(System.Int32[])\n  - System.Decimal.#ctor(System.Int64)\n  - System.Decimal.#ctor(System.Single)\n  - System.Decimal.#ctor(System.UInt32)\n  - System.Decimal.#ctor(System.UInt64)\n  - System.Decimal.#ctor(System.Int32,System.Int32,System.Int32,System.Boolean,System.Byte)\n  - System.Decimal.Add(System.Decimal,System.Decimal)\n  - System.Decimal.Ceiling(System.Decimal)\n  - System.Decimal.Compare(System.Decimal,System.Decimal)\n  - System.Decimal.CompareTo(System.Object)\n  - System.Decimal.CompareTo(System.Decimal)\n  - System.Decimal.Divide(System.Decimal,System.Decimal)\n  - System.Decimal.Equals(System.Decimal)\n  - System.Decimal.Equals(System.Object)\n  - System.Decimal.Equals(System.Decimal,System.Decimal)\n  - System.Decimal.Floor(System.Decimal)\n  - System.Decimal.FromOACurrency(System.Int64)\n  - System.Decimal.GetBits(System.Decimal)\n  - System.Decimal.GetHashCode\n  - System.Decimal.GetTypeCode\n  - System.Decimal.MaxValue\n  - System.Decimal.MinusOne\n  - System.Decimal.MinValue\n  - System.Decimal.Multiply(System.Decimal,System.Decimal)\n  - System.Decimal.Negate(System.Decimal)\n  - System.Decimal.One\n  - System.Decimal.op_Addition(System.Decimal,System.Decimal)\n  - System.Decimal.op_Decrement(System.Decimal)\n  - System.Decimal.op_Division(System.Decimal,System.Decimal)\n  - System.Decimal.op_Equality(System.Decimal,System.Decimal)\n  - System.Decimal.op_Explicit(System.Single to System.Decimal)\n  - System.Decimal.op_Explicit(System.Double to System.Decimal)\n  - System.Decimal.op_Explicit(System.Decimal to System.UInt64)\n  - System.Decimal.op_Explicit(System.Decimal to System.UInt32)\n  - System.Decimal.op_Explicit(System.Decimal to System.UInt16)\n  - System.Decimal.op_Explicit(System.Decimal to System.Single)\n  - System.Decimal.op_Explicit(System.Decimal to System.SByte)\n  - System.Decimal.op_Explicit(System.Decimal to System.Int64)\n  - System.Decimal.op_Explicit(System.Decimal to System.Int32)\n  - System.Decimal.op_Explicit(System.Decimal to System.Int16)\n  - System.Decimal.op_Explicit(System.Decimal to System.Double)\n  - System.Decimal.op_Explicit(System.Decimal to System.Char)\n  - System.Decimal.op_Explicit(System.Decimal to System.Byte)\n  - System.Decimal.op_GreaterThan(System.Decimal,System.Decimal)\n  - System.Decimal.op_GreaterThanOrEqual(System.Decimal,System.Decimal)\n  - System.Decimal.op_Implicit(System.UInt32 to System.Decimal)\n  - System.Decimal.op_Implicit(System.UInt16 to System.Decimal)\n  - System.Decimal.op_Implicit(System.SByte to System.Decimal)\n  - System.Decimal.op_Implicit(System.Int64 to System.Decimal)\n  - System.Decimal.op_Implicit(System.UInt64 to System.Decimal)\n  - System.Decimal.op_Implicit(System.Int16 to System.Decimal)\n  - System.Decimal.op_Implicit(System.Char to System.Decimal)\n  - System.Decimal.op_Implicit(System.Byte to System.Decimal)\n  - System.Decimal.op_Implicit(System.Int32 to System.Decimal)\n  - System.Decimal.op_Increment(System.Decimal)\n  - System.Decimal.op_Inequality(System.Decimal,System.Decimal)\n  - System.Decimal.op_LessThan(System.Decimal,System.Decimal)\n  - System.Decimal.op_LessThanOrEqual(System.Decimal,System.Decimal)\n  - System.Decimal.op_Modulus(System.Decimal,System.Decimal)\n  - System.Decimal.op_Multiply(System.Decimal,System.Decimal)\n  - System.Decimal.op_Subtraction(System.Decimal,System.Decimal)\n  - System.Decimal.op_UnaryNegation(System.Decimal)\n  - System.Decimal.op_UnaryPlus(System.Decimal)\n  - System.Decimal.Parse(System.String)\n  - System.Decimal.Parse(System.String,System.Globalization.NumberStyles)\n  - System.Decimal.Parse(System.String,System.IFormatProvider)\n  - System.Decimal.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)\n  - System.Decimal.Remainder(System.Decimal,System.Decimal)\n  - System.Decimal.Round(System.Decimal,System.Int32,System.MidpointRounding)\n  - System.Decimal.Round(System.Decimal,System.MidpointRounding)\n  - System.Decimal.Round(System.Decimal)\n  - System.Decimal.Round(System.Decimal,System.Int32)\n  - System.Decimal.Subtract(System.Decimal,System.Decimal)\n  - System.Decimal.ToByte(System.Decimal)\n  - System.Decimal.ToDouble(System.Decimal)\n  - System.Decimal.ToInt16(System.Decimal)\n  - System.Decimal.ToInt32(System.Decimal)\n  - System.Decimal.ToInt64(System.Decimal)\n  - System.Decimal.ToOACurrency(System.Decimal)\n  - System.Decimal.ToSByte(System.Decimal)\n  - System.Decimal.ToSingle(System.Decimal)\n  - System.Decimal.ToString(System.String,System.IFormatProvider)\n  - System.Decimal.ToString(System.IFormatProvider)\n  - System.Decimal.ToString\n  - System.Decimal.ToString(System.String)\n  - System.Decimal.ToUInt16(System.Decimal)\n  - System.Decimal.ToUInt32(System.Decimal)\n  - System.Decimal.ToUInt64(System.Decimal)\n  - System.Decimal.Truncate(System.Decimal)\n  - System.Decimal.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Decimal@)\n  - System.Decimal.TryParse(System.String,System.Decimal@)\n  - System.Decimal.Zero\n  - System.Decimal.System#IComparable#CompareTo(System.Object)\n  - System.Decimal.System#IConvertible#GetTypeCode\n  - System.Decimal.System#IConvertible#ToBoolean(System.IFormatProvider)\n  - System.Decimal.System#IConvertible#ToByte(System.IFormatProvider)\n  - System.Decimal.System#IConvertible#ToChar(System.IFormatProvider)\n  - System.Decimal.System#IConvertible#ToDateTime(System.IFormatProvider)\n  - System.Decimal.System#IConvertible#ToDecimal(System.IFormatProvider)\n  - System.Decimal.System#IConvertible#ToDouble(System.IFormatProvider)\n  - System.Decimal.System#IConvertible#ToInt16(System.IFormatProvider)\n  - System.Decimal.System#IConvertible#ToInt32(System.IFormatProvider)\n  - System.Decimal.System#IConvertible#ToInt64(System.IFormatProvider)\n  - System.Decimal.System#IConvertible#ToSByte(System.IFormatProvider)\n  - System.Decimal.System#IConvertible#ToSingle(System.IFormatProvider)\n  - System.Decimal.System#IConvertible#ToType(System.Type,System.IFormatProvider)\n  - System.Decimal.System#IConvertible#ToUInt16(System.IFormatProvider)\n  - System.Decimal.System#IConvertible#ToUInt32(System.IFormatProvider)\n  - System.Decimal.System#IConvertible#ToUInt64(System.IFormatProvider)\n  - System.Decimal.System#Runtime#Serialization#IDeserializationCallback#OnDeserialization(System.Object)\n  langs:\n  - csharp\n  name: Decimal\n  nameWithType: Decimal\n  fullName: System.Decimal\n  type: Struct\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Represents a decimal number.\n  remarks: \"The <xref:System.Decimal> value type represents decimal numbers ranging from positive 79,228,162,514,264,337,593,543,950,335 to negative 79,228,162,514,264,337,593,543,950,335. The <xref:System.Decimal> value type is appropriate for financial calculations that require large numbers of significant integral and fractional digits and no round-off errors. The <xref:System.Decimal> type does not eliminate the need for rounding. Rather, it minimizes errors due to rounding. For example, the following code produces a result of 0.9999999999999999999999999999 instead of 1.  \\n  \\n [!code-cpp[System.Decimal.Class#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Decimal.Class/cpp/decimal1.cpp#1)]\\n [!code-csharp[System.Decimal.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Decimal.Class/cs/DecimalDivision_46630_1.cs#1)]\\n [!code-vb[System.Decimal.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Decimal.Class/vb/DecimalDivision_46630_1.vb#1)]  \\n  \\n When the result of the division and multiplication is passed to the <xref:System.Math.Round%2A> method, the result suffers no loss of precision, as the following code shows.  \\n  \\n [!code-cpp[System.Decimal.Class#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Decimal.Class/cpp/decimal2.cpp#2)]\\n [!code-csharp[System.Decimal.Class#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Decimal.Class/cs/DecimalDivision_46630_1.cs#2)]\\n [!code-vb[System.Decimal.Class#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Decimal.Class/vb/DecimalDivision_46630_1.vb#2)]  \\n  \\n A decimal number is a floating-point value that consists of a sign, a numeric value where each digit in the value ranges from 0 to 9, and a scaling factor that indicates the position of a floating decimal point that separates the integral and fractional parts of the numeric value.  \\n  \\n The binary representation of a <xref:System.Decimal> value consists of a 1-bit sign, a 96-bit integer number, and a scaling factor used to divide the 96-bit integer and specify what portion of it is a decimal fraction. The scaling factor is implicitly the number 10, raised to an exponent ranging from 0 to 28. Therefore, the binary representation of a <xref:System.Decimal> value  the form, ((-2<sup>96</sup> to 2<sup>96</sup>) / 10<sup>(0 to 28)</sup>), where -(2<sup>96</sup>-1) is equal to <xref:System.Decimal.MinValue>, and 2<sup>96</sup>-1 is equal to <xref:System.Decimal.MaxValue>. For more information about the binary representation of <xref:System.Decimal> values and an example, see the <xref:System.Decimal.%23ctor%28System.Int32%5B%5D%29> constructor and the <xref:System.Decimal.GetBits%2A> method.  \\n  \\n The scaling factor  also preserves any trailing zeros in a <xref:System.Decimal> number. Trailing zeros do not affect the value of a <xref:System.Decimal> number in arithmetic or comparison operations. However, trailing zeros might be revealed by the <xref:System.Decimal.ToString%2A> method if an appropriate format string is applied.  \\n  \\n## Conversion Considerations  \\n This type provides methods that convert <xref:System.Decimal> values to and from <xref:System.SByte>, <xref:System.Int16>, <xref:System.Int32>, <xref:System.Int64>, <xref:System.Byte>, <xref:System.UInt16>, <xref:System.UInt32>, and <xref:System.UInt64> values. Conversions from these integral types to <xref:System.Decimal> are widening conversions that never lose information or throw exceptions.  \\n  \\n Conversions from <xref:System.Decimal> to any of the integral types are narrowing conversions that round the <xref:System.Decimal> value to the nearest integer value toward zero. Some languages, such as C#, also support the conversion of <xref:System.Decimal> values to <xref:System.Char> values. If the result of these conversions cannot be represented in the destination type, an <xref:System.OverflowException> exception is thrown.  \\n  \\n The <xref:System.Decimal> type also provides methods that convert <xref:System.Decimal> values to and from <xref:System.Single> and <xref:System.Double> values. Conversions from <xref:System.Decimal> to <xref:System.Single> or <xref:System.Double> are narrowing conversions that might lose precision but not information about the magnitude of the converted value. The conversion does not throw an exception.  \\n  \\n Conversions from <xref:System.Single> or <xref:System.Double> to <xref:System.Decimal> throw an <xref:System.OverflowException> exception if the result of the conversion cannot be represented as a <xref:System.Decimal>.  \\n  \\n## Performing Operations on Decimal Values  \\n The <xref:System.Decimal> type supports standard mathematical operations such as addition, subtraction, division, multiplication, and unary negation. You can also work directly with the binary representation of a <xref:System.Decimal> value by calling the <xref:System.Decimal.GetBits%2A> method.  \\n  \\n To compare two <xref:System.Decimal> values, you can use the standard numeric comparison operators, or you can call the <xref:System.Decimal.CompareTo%2A> or <xref:System.Decimal.Equals%2A> method.  \\n  \\n You can also call the members of the <xref:System.Math> class to perform a wide range of numeric operations, including getting the absolute value of a number, determining the maximum or minimum value of two <xref:System.Decimal> values, getting the sign of a number, and rounding a number.\"\n  example:\n  - \"The following code example demonstrates the use of <xref:System.Decimal>.  \\n  \\n [!code-cpp[Decimal Example#1](~/samples/snippets/cpp/VS_Snippets_CLR/Decimal Example/CPP/source.cpp#1)]\\n [!code-csharp[Decimal Example#1](~/samples/snippets/csharp/VS_Snippets_CLR/Decimal Example/CS/source.cs#1)]\\n [!code-vb[Decimal Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Decimal Example/VB/source.vb#1)]\"\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public struct Decimal : IComparable, IComparable<decimal>, IConvertible, IEquatable<decimal>, IFormattable, System.Runtime.Serialization.IDeserializationCallback\n  inheritance:\n  - System.Object\n  - System.ValueType\n  implements:\n  - System.IComparable\n  - System.IComparable{System.Decimal}\n  - System.IConvertible\n  - System.IEquatable{System.Decimal}\n  - System.IFormattable\n  - System.Runtime.Serialization.IDeserializationCallback\n  attributes:\n  - type: System.Runtime.InteropServices.ComVisibleAttribute\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Decimal.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Decimal.#ctor(System.Double)\n  commentId: M:System.Decimal.#ctor(System.Double)\n  id: '#ctor(System.Double)'\n  parent: System.Decimal\n  langs:\n  - csharp\n  name: Decimal(Double)\n  nameWithType: Decimal.Decimal(Double)\n  fullName: Decimal.Decimal(Double)\n  type: Constructor\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Initializes a new instance of <xref href=\"System.Decimal\"></xref> to the value of the specified double-precision floating-point number.\n  remarks: This constructor rounds `value` to 15 significant digits using rounding to nearest. This is done even if the number has more than 15 digits and the less significant digits are zero.\n  example:\n  - \"The following code example creates several `Decimal` numbers using the constructor overload that initializes a `Decimal` structure with a <xref:System.Double> value.  \\n  \\n [!code-cpp[System.Decimal.Ctor.Reals#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Decimal.Ctor.Reals/CPP/ctordo.cpp#2)]\\n [!code-csharp[System.Decimal.Ctor.Reals#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Decimal.Ctor.Reals/CS/ctordo.cs#2)]\\n [!code-vb[System.Decimal.Ctor.Reals#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Decimal.Ctor.Reals/VB/ctordo.vb#2)]\"\n  syntax:\n    content: public Decimal (double value);\n    parameters:\n    - id: value\n      type: System.Double\n      description: The value to represent as a <xref href=\"System.Decimal\"></xref>.\n  overload: System.Decimal.#ctor*\n  exceptions:\n  - type: System.OverflowException\n    commentId: T:System.OverflowException\n    description: \"<code>value</code> is greater than <xref href=\\\"System.Decimal.MaxValue\\\"></xref> or less than <xref href=\\\"System.Decimal.MinValue\\\"></xref>.  \\n  \\n -or-  \\n  \\n <code>value</code> is <xref href=\\\"System.Double.NaN\\\"></xref>, <xref href=\\\"System.Double.PositiveInfinity\\\"></xref>, or <xref href=\\\"System.Double.NegativeInfinity\\\"></xref>.\"\n  attributes: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Decimal.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Decimal.#ctor(System.Int32)\n  commentId: M:System.Decimal.#ctor(System.Int32)\n  id: '#ctor(System.Int32)'\n  parent: System.Decimal\n  langs:\n  - csharp\n  name: Decimal(Int32)\n  nameWithType: Decimal.Decimal(Int32)\n  fullName: Decimal.Decimal(Int32)\n  type: Constructor\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Initializes a new instance of <xref href=\"System.Decimal\"></xref> to the value of the specified 32-bit signed integer.\n  remarks: ''\n  example:\n  - \"The following code example creates several `Decimal` numbers using the constructor overload that initializes a `Decimal` structure with an <xref:System.Int32> value.  \\n  \\n [!code-cpp[System.Decimal.Ctor.Ints#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Decimal.Ctor.Ints/CPP/ctori.cpp#1)]\\n [!code-csharp[System.Decimal.Ctor.Ints#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Decimal.Ctor.Ints/CS/ctori.cs#1)]\\n [!code-vb[System.Decimal.Ctor.Ints#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Decimal.Ctor.Ints/VB/ctori.vb#1)]\"\n  syntax:\n    content: public Decimal (int value);\n    parameters:\n    - id: value\n      type: System.Int32\n      description: The value to represent as a <xref href=\"System.Decimal\"></xref>.\n  overload: System.Decimal.#ctor*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Decimal.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Decimal.#ctor(System.Int32[])\n  commentId: M:System.Decimal.#ctor(System.Int32[])\n  id: '#ctor(System.Int32[])'\n  parent: System.Decimal\n  langs:\n  - csharp\n  name: Decimal(Int32[])\n  nameWithType: Decimal.Decimal(Int32[])\n  fullName: Decimal.Decimal(Int32[])\n  type: Constructor\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Initializes a new instance of <xref href=\"System.Decimal\"></xref> to a decimal value represented in binary and contained in a specified array.\n  remarks: \"The binary representation of a <xref:System.Decimal> number consists of a 1-bit sign, a 96-bit integer number, and a scaling factor used to divide the integer number and specify what portion of it is a decimal fraction. The scaling factor is implicitly the number 10, raised to an exponent ranging from 0 to 28.  \\n  \\n `bits` is a four-element long array of 32-bit signed integers.  \\n  \\n `bits` [0], `bits` [1], and `bits` [2] contain the low, middle, and high 32 bits of the 96-bit integer number.  \\n  \\n `bits` [3] contains the scale factor and sign, and consists of following parts:  \\n  \\n Bits 0 to 15, the lower word, are unused and must be zero.  \\n  \\n Bits 16 to 23 must contain an exponent between 0 and 28, which indicates the power of 10 to divide the integer number.  \\n  \\n Bits 24 to 30 are unused and must be zero.  \\n  \\n Bit 31 contains the sign; 0 meaning positive, and 1 meaning negative.  \\n  \\n A numeric value might have several possible binary representations; all are equally valid and numerically equivalent. Note that the bit representation differentiates between negative and positive zero. These values are treated as being equal in all operations.\"\n  example:\n  - \"The following code example creates several `Decimal` numbers using the constructor overload that initializes a `Decimal` structure with an array of four <xref:System.Int32> values.  \\n  \\n [!code-cpp[System.Decimal.Ctor.Arrays#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Decimal.Ctor.Arrays/CPP/ctoriarr.cpp#1)]\\n [!code-csharp[System.Decimal.Ctor.Arrays#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Decimal.Ctor.Arrays/CS/ctoriarr.cs#1)]\\n [!code-vb[System.Decimal.Ctor.Arrays#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Decimal.Ctor.Arrays/VB/ctoriarr.vb#1)]\"\n  syntax:\n    content: public Decimal (int[] bits);\n    parameters:\n    - id: bits\n      type: System.Int32[]\n      description: An array of 32-bit signed integers containing a representation of a decimal value.\n  overload: System.Decimal.#ctor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>bits</code> is `null`.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"The length of the <code>bits</code> is not 4.  \\n  \\n -or-  \\n  \\n The representation of the decimal value in <code>bits</code> is not valid.\"\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Decimal.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Decimal.#ctor(System.Int64)\n  commentId: M:System.Decimal.#ctor(System.Int64)\n  id: '#ctor(System.Int64)'\n  parent: System.Decimal\n  langs:\n  - csharp\n  name: Decimal(Int64)\n  nameWithType: Decimal.Decimal(Int64)\n  fullName: Decimal.Decimal(Int64)\n  type: Constructor\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Initializes a new instance of <xref href=\"System.Decimal\"></xref> to the value of the specified 64-bit signed integer.\n  remarks: ''\n  example:\n  - \"The following code example creates several `Decimal` numbers using the constructor overload that initializes a `Decimal` structure with an <xref:System.Int64> value.  \\n  \\n [!code-cpp[System.Decimal.Ctor.Ints#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Decimal.Ctor.Ints/CPP/ctorl.cpp#3)]\\n [!code-csharp[System.Decimal.Ctor.Ints#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Decimal.Ctor.Ints/CS/ctorl.cs#3)]\\n [!code-vb[System.Decimal.Ctor.Ints#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Decimal.Ctor.Ints/VB/ctorl.vb#3)]\"\n  syntax:\n    content: public Decimal (long value);\n    parameters:\n    - id: value\n      type: System.Int64\n      description: The value to represent as a <xref href=\"System.Decimal\"></xref>.\n  overload: System.Decimal.#ctor*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Decimal.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Decimal.#ctor(System.Single)\n  commentId: M:System.Decimal.#ctor(System.Single)\n  id: '#ctor(System.Single)'\n  parent: System.Decimal\n  langs:\n  - csharp\n  name: Decimal(Single)\n  nameWithType: Decimal.Decimal(Single)\n  fullName: Decimal.Decimal(Single)\n  type: Constructor\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Initializes a new instance of <xref href=\"System.Decimal\"></xref> to the value of the specified single-precision floating-point number.\n  remarks: This constructor rounds `value` to 7 significant digits using rounding to nearest. This is done even if the number has more than 7 digits and the less significant digits are zero.\n  example:\n  - \"The following code example creates several `Decimal` numbers using the constructor overload that initializes a `Decimal` structure with a <xref:System.Single> value.  \\n  \\n [!code-cpp[System.Decimal.Ctor.Reals#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Decimal.Ctor.Reals/CPP/ctors.cpp#1)]\\n [!code-csharp[System.Decimal.Ctor.Reals#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Decimal.Ctor.Reals/CS/ctors.cs#1)]\\n [!code-vb[System.Decimal.Ctor.Reals#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Decimal.Ctor.Reals/VB/ctors.vb#1)]\"\n  syntax:\n    content: public Decimal (float value);\n    parameters:\n    - id: value\n      type: System.Single\n      description: The value to represent as a <xref href=\"System.Decimal\"></xref>.\n  overload: System.Decimal.#ctor*\n  exceptions:\n  - type: System.OverflowException\n    commentId: T:System.OverflowException\n    description: \"<code>value</code> is greater than <xref href=\\\"System.Decimal.MaxValue\\\"></xref> or less than <xref href=\\\"System.Decimal.MinValue\\\"></xref>.  \\n  \\n -or-  \\n  \\n <code>value</code> is <xref href=\\\"System.Single.NaN\\\"></xref>, <xref href=\\\"System.Single.PositiveInfinity\\\"></xref>, or <xref href=\\\"System.Single.NegativeInfinity\\\"></xref>.\"\n  attributes: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Decimal.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Decimal.#ctor(System.UInt32)\n  commentId: M:System.Decimal.#ctor(System.UInt32)\n  id: '#ctor(System.UInt32)'\n  parent: System.Decimal\n  langs:\n  - csharp\n  name: Decimal(UInt32)\n  nameWithType: Decimal.Decimal(UInt32)\n  fullName: Decimal.Decimal(UInt32)\n  type: Constructor\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Initializes a new instance of <xref href=\"System.Decimal\"></xref> to the value of the specified 32-bit unsigned integer.\n  remarks: ''\n  example:\n  - \"The following code example creates several `Decimal` numbers using the constructor overload that initializes a `Decimal` structure with a <xref:System.UInt32> value.  \\n  \\n [!code-cpp[System.Decimal.Ctor.Ints#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Decimal.Ctor.Ints/CPP/ctorui.cpp#2)]\\n [!code-csharp[System.Decimal.Ctor.Ints#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Decimal.Ctor.Ints/CS/ctorui.cs#2)]\\n [!code-vb[System.Decimal.Ctor.Ints#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Decimal.Ctor.Ints/VB/ctorui.vb#2)]\"\n  syntax:\n    content: >-\n      [System.CLSCompliant(false)]\n\n      public Decimal (uint value);\n    parameters:\n    - id: value\n      type: System.UInt32\n      description: The value to represent as a <xref href=\"System.Decimal\"></xref>.\n  overload: System.Decimal.#ctor*\n  exceptions: []\n  attributes:\n  - type: System.CLSCompliantAttribute\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Decimal.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Decimal.#ctor(System.UInt64)\n  commentId: M:System.Decimal.#ctor(System.UInt64)\n  id: '#ctor(System.UInt64)'\n  parent: System.Decimal\n  langs:\n  - csharp\n  name: Decimal(UInt64)\n  nameWithType: Decimal.Decimal(UInt64)\n  fullName: Decimal.Decimal(UInt64)\n  type: Constructor\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Initializes a new instance of <xref href=\"System.Decimal\"></xref> to the value of the specified 64-bit unsigned integer.\n  remarks: ''\n  example:\n  - \"The following code example creates several `Decimal` numbers using the constructor overload that initializes a `Decimal` structure with a <xref:System.UInt64> value.  \\n  \\n [!code-cpp[System.Decimal.Ctor.Ints#4](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Decimal.Ctor.Ints/CPP/ctorul.cpp#4)]\\n [!code-csharp[System.Decimal.Ctor.Ints#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Decimal.Ctor.Ints/CS/ctorul.cs#4)]\\n [!code-vb[System.Decimal.Ctor.Ints#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Decimal.Ctor.Ints/VB/ctorul.vb#4)]\"\n  syntax:\n    content: >-\n      [System.CLSCompliant(false)]\n\n      public Decimal (ulong value);\n    parameters:\n    - id: value\n      type: System.UInt64\n      description: The value to represent as a <xref href=\"System.Decimal\"></xref>.\n  overload: System.Decimal.#ctor*\n  exceptions: []\n  attributes:\n  - type: System.CLSCompliantAttribute\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Decimal.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Decimal.#ctor(System.Int32,System.Int32,System.Int32,System.Boolean,System.Byte)\n  commentId: M:System.Decimal.#ctor(System.Int32,System.Int32,System.Int32,System.Boolean,System.Byte)\n  id: '#ctor(System.Int32,System.Int32,System.Int32,System.Boolean,System.Byte)'\n  parent: System.Decimal\n  langs:\n  - csharp\n  name: Decimal(Int32, Int32, Int32, Boolean, Byte)\n  nameWithType: Decimal.Decimal(Int32, Int32, Int32, Boolean, Byte)\n  fullName: Decimal.Decimal(Int32, Int32, Int32, Boolean, Byte)\n  type: Constructor\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Initializes a new instance of <xref href=\"System.Decimal\"></xref> from parameters specifying the instance's constituent parts.\n  remarks: The binary representation of a <xref:System.Decimal> number consists of a 1-bit sign, a 96-bit integer number, and a scaling factor used to divide the integer number and specify what portion of it is a decimal fraction. The scaling factor is implicitly the number 10 raised to an exponent ranging from 0 to 28.\n  example:\n  - \"The following code example creates several `Decimal` numbers using the constructor overload that initializes a `Decimal` structure with three <xref:System.Int32> value words, a <xref:System.Boolean> sign, and a <xref:System.Byte> scale factor.  \\n  \\n [!code-cpp[System.Decimal.Ctor.Arrays#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Decimal.Ctor.Arrays/CPP/ctoriiibby.cpp#2)]\\n [!code-csharp[System.Decimal.Ctor.Arrays#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Decimal.Ctor.Arrays/CS/ctoriiibby.cs#2)]\\n [!code-vb[System.Decimal.Ctor.Arrays#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Decimal.Ctor.Arrays/VB/ctoriiibby.vb#2)]  \\n  \\n The following example uses the <xref:System.Decimal.GetBits%2A> method to retrieve the component parts of an array. It then uses this array in the call to the <xref:System.Decimal.%23ctor%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Boolean%2CSystem.Byte%29> constructor to instantiate a new <xref:System.Decimal> value.  \\n  \\n [!code-csharp[System.Decimal.Ctor#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.decimal.ctor/cs/ctor2a.cs#1)]\\n [!code-vb[System.Decimal.Ctor#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.ctor/vb/ctor2a.vb#1)]\"\n  syntax:\n    content: public Decimal (int lo, int mid, int hi, bool isNegative, byte scale);\n    parameters:\n    - id: lo\n      type: System.Int32\n      description: The low 32 bits of a 96-bit integer.\n    - id: mid\n      type: System.Int32\n      description: The middle 32 bits of a 96-bit integer.\n    - id: hi\n      type: System.Int32\n      description: The high 32 bits of a 96-bit integer.\n    - id: isNegative\n      type: System.Boolean\n      description: '`true` to indicate a negative number; `false` to indicate a positive number.'\n    - id: scale\n      type: System.Byte\n      description: A power of 10 ranging from 0 to 28.\n  overload: System.Decimal.#ctor*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: <code>scale</code> is greater than 28.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Decimal.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Decimal.Add(System.Decimal,System.Decimal)\n  commentId: M:System.Decimal.Add(System.Decimal,System.Decimal)\n  id: Add(System.Decimal,System.Decimal)\n  parent: System.Decimal\n  langs:\n  - csharp\n  name: Add(Decimal, Decimal)\n  nameWithType: Decimal.Add(Decimal, Decimal)\n  fullName: Decimal.Add(Decimal, Decimal)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Adds two specified <xref href=\"System.Decimal\"></xref> values.\n  remarks: \"The following code sample illustrates the use of `Add` :  \\n  \\n [!code-cpp[Decimal Example#5](~/samples/snippets/cpp/VS_Snippets_CLR/Decimal Example/CPP/source.cpp#5)]\\n [!code-csharp[Decimal Example#5](~/samples/snippets/csharp/VS_Snippets_CLR/Decimal Example/CS/source.cs#5)]\\n [!code-vb[Decimal Example#5](~/samples/snippets/visualbasic/VS_Snippets_CLR/Decimal Example/VB/source.vb#5)]\"\n  syntax:\n    content: public static decimal Add (decimal d1, decimal d2);\n    parameters:\n    - id: d1\n      type: System.Decimal\n      description: The first value to add.\n    - id: d2\n      type: System.Decimal\n      description: The second value to add.\n    return:\n      type: System.Decimal\n      description: The sum of <code>d1</code> and <code>d2</code>.\n  overload: System.Decimal.Add*\n  exceptions:\n  - type: System.OverflowException\n    commentId: T:System.OverflowException\n    description: The sum of <code>d1</code> and <code>d2</code> is less than <xref href=\"System.Decimal.MinValue\"></xref> or greater than <xref href=\"System.Decimal.MaxValue\"></xref>.\n  attributes: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Decimal.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Decimal.Ceiling(System.Decimal)\n  commentId: M:System.Decimal.Ceiling(System.Decimal)\n  id: Ceiling(System.Decimal)\n  parent: System.Decimal\n  langs:\n  - csharp\n  name: Ceiling(Decimal)\n  nameWithType: Decimal.Ceiling(Decimal)\n  fullName: Decimal.Ceiling(Decimal)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Returns the smallest integral value that is greater than or equal to the specified decimal number.\n  remarks: The behavior of this method follows IEEE Standard 754, section 4. This kind of rounding is sometimes called rounding toward positive infinity. In other words, if `d` is positive, the presence of any fractional component causes `d` to be rounded to the next highest integer. If `d` is negative, the rounding operation causes any fractional component of `d` to be discarded. The operation of this method differs from the <xref:System.Decimal.Floor%2A> method, which supports rounding toward negative infinity.\n  example:\n  - \"The following example illustrates the <xref:System.Decimal.Ceiling%2A> method and contrasts it with the <xref:System.Decimal.Floor%2A> method.  \\n  \\n [!code-csharp[System.Decimal.Ceiling#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Decimal.Ceiling/cs/ceiling1.cs#1)]\\n [!code-vb[System.Decimal.Ceiling#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Decimal.Ceiling/vb/Ceiling1.vb#1)]\"\n  syntax:\n    content: public static decimal Ceiling (decimal d);\n    parameters:\n    - id: d\n      type: System.Decimal\n      description: A decimal number.\n    return:\n      type: System.Decimal\n      description: The smallest integral value that is greater than or equal to the <code>d</code> parameter. Note that this method returns a <xref href=\"System.Decimal\"></xref> instead of an integral type.\n  overload: System.Decimal.Ceiling*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Decimal.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Decimal.Compare(System.Decimal,System.Decimal)\n  commentId: M:System.Decimal.Compare(System.Decimal,System.Decimal)\n  id: Compare(System.Decimal,System.Decimal)\n  parent: System.Decimal\n  langs:\n  - csharp\n  name: Compare(Decimal, Decimal)\n  nameWithType: Decimal.Compare(Decimal, Decimal)\n  fullName: Decimal.Compare(Decimal, Decimal)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Compares two specified <xref href=\"System.Decimal\"></xref> values.\n  remarks: ''\n  example:\n  - \"The following example compares several <xref:System.Decimal> values. Note that the first comparison indicates that the two values are equal despite the subtraction operation performed on the `value2` variable. This is because the <xref:System.Decimal> type has 29 digits of precision, whereas a difference between these two values can be detected only with 30 digits of precision.  \\n  \\n [!code-csharp[System.Decimal.Compare#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Decimal.Compare/cs/Compare1.cs#1)]\\n [!code-vb[System.Decimal.Compare#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Decimal.Compare/vb/Compare1.vb#1)]\"\n  syntax:\n    content: public static int Compare (decimal d1, decimal d2);\n    parameters:\n    - id: d1\n      type: System.Decimal\n      description: The first value to compare.\n    - id: d2\n      type: System.Decimal\n      description: The second value to compare.\n    return:\n      type: System.Int32\n      description: \"A signed number indicating the relative values of <code>d1</code> and <code>d2</code>.  \\n  \\n <table><thead><tr><th> Return value  \\n  \\n </th><th> Meaning  \\n  \\n </th></tr></thead><tbody><tr><td> Less than zero  \\n  \\n </td><td><code>d1</code> is less than <code>d2</code>.  \\n  \\n </td></tr><tr><td> Zero  \\n  \\n </td><td><code>d1</code> and <code>d2</code> are equal.  \\n  \\n </td></tr><tr><td> Greater than zero  \\n  \\n </td><td><code>d1</code> is greater than <code>d2</code>.  \\n  \\n </td></tr></tbody></table>\"\n  overload: System.Decimal.Compare*\n  exceptions: []\n  attributes: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Decimal.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Decimal.CompareTo(System.Object)\n  commentId: M:System.Decimal.CompareTo(System.Object)\n  id: CompareTo(System.Object)\n  parent: System.Decimal\n  langs:\n  - csharp\n  name: CompareTo(Object)\n  nameWithType: Decimal.CompareTo(Object)\n  fullName: Decimal.CompareTo(Object)\n  type: Method\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System\n  summary: Compares this instance to a specified object and returns a comparison of their relative values.\n  remarks: \"Any instance of <xref:System.Decimal>, regardless of its value, is considered greater than `null`.  \\n  \\n Parameter `value` must be `null` or an instance of <xref:System.Decimal>; otherwise, an exception is thrown.\"\n  example:\n  - \"The following code example compares several `Decimal` and other objects to a reference `Decimal` value using the `CompareTo` method.  \\n  \\n [!code-cpp[System.Decimal.Compare_Equals#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Decimal.Compare_Equals/CPP/cto_eq_obj.cpp#1)]\\n [!code-csharp[System.Decimal.Compare_Equals#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Decimal.Compare_Equals/CS/cto_eq_obj.cs#1)]\\n [!code-vb[System.Decimal.Compare_Equals#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Decimal.Compare_Equals/VB/cto_eq_obj.vb#1)]\"\n  syntax:\n    content: public int CompareTo (object value);\n    parameters:\n    - id: value\n      type: System.Object\n      description: The object to compare with this instance, or `null`.\n    return:\n      type: System.Int32\n      description: \"A signed number indicating the relative values of this instance and <code>value</code>.  \\n  \\n <table><thead><tr><th> Return value  \\n  \\n </th><th> Meaning  \\n  \\n </th></tr></thead><tbody><tr><td> Less than zero  \\n  \\n </td><td> This instance is less than <code>value</code>.  \\n  \\n </td></tr><tr><td> Zero  \\n  \\n </td><td> This instance is equal to <code>value</code>.  \\n  \\n </td></tr><tr><td> Greater than zero  \\n  \\n </td><td> This instance is greater than <code>value</code>.  \\n  \\n -or-  \\n  \\n <code>value</code> is `null`.  \\n  \\n </td></tr></tbody></table>\"\n  overload: System.Decimal.CompareTo*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>value</code> is not a <xref href=\"System.Decimal\"></xref>.\n  attributes: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Decimal.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Decimal.CompareTo(System.Decimal)\n  commentId: M:System.Decimal.CompareTo(System.Decimal)\n  id: CompareTo(System.Decimal)\n  parent: System.Decimal\n  langs:\n  - csharp\n  name: CompareTo(Decimal)\n  nameWithType: Decimal.CompareTo(Decimal)\n  fullName: Decimal.CompareTo(Decimal)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Compares this instance to a specified <xref href=\"System.Decimal\"></xref> object and returns a comparison of their relative values.\n  remarks: \"This method implements the <xref:System.IComparable%601?displayProperty=fullName> interface and performs slightly better than the <xref:System.Decimal.CompareTo%2A?displayProperty=fullName> method because it does not have to convert the `value` parameter to an object.  \\n  \\n Depending on your programming language, it might be possible to code a <xref:System.Decimal.CompareTo%2A> method where the parameter type has fewer bits (is narrower) than the instance type. This is possible because some programming languages perform an implicit widening conversion that represents the parameter as a type with as many bits as the instance.  \\n  \\n For example, suppose the instance type is <xref:System.Int32> and the parameter type is <xref:System.Byte>. The Microsoft C# compiler generates instructions to represent the parameter as an <xref:System.Int32> object, then generates a <xref:System.Int32.CompareTo%2A?displayProperty=fullName> method to compare the values of the <xref:System.Int32> instance and the <xref:System.Int32> parameter representation.  \\n  \\n Consult your programming language's documentation to determine whether its compiler performs implicit widening conversions on numeric types.\"\n  example:\n  - \"The following code example demonstrates generic and nongeneric versions of the <xref:System.Decimal.CompareTo%2A> method for several value and reference types.  \\n  \\n [!code-cpp[T.CompareTo#1](~/samples/snippets/cpp/VS_Snippets_CLR/T.CompareTo/CPP/cat.cpp#1)]\\n [!code-csharp[T.CompareTo#1](~/samples/snippets/csharp/VS_Snippets_CLR/T.CompareTo/CS/cat.cs#1)]\\n [!code-vb[T.CompareTo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/T.CompareTo/VB/cat.vb#1)]\"\n  syntax:\n    content: public int CompareTo (decimal value);\n    parameters:\n    - id: value\n      type: System.Decimal\n      description: The object to compare with this instance.\n    return:\n      type: System.Int32\n      description: \"A signed number indicating the relative values of this instance and <code>value</code>.  \\n  \\n <table><thead><tr><th> Return value  \\n  \\n </th><th> Meaning  \\n  \\n </th></tr></thead><tbody><tr><td> Less than zero  \\n  \\n </td><td> This instance is less than <code>value</code>.  \\n  \\n </td></tr><tr><td> Zero  \\n  \\n </td><td> This instance is equal to <code>value</code>.  \\n  \\n </td></tr><tr><td> Greater than zero  \\n  \\n </td><td> This instance is greater than <code>value</code>.  \\n  \\n </td></tr></tbody></table>\"\n  overload: System.Decimal.CompareTo*\n  exceptions: []\n  attributes: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Decimal.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Decimal.Divide(System.Decimal,System.Decimal)\n  commentId: M:System.Decimal.Divide(System.Decimal,System.Decimal)\n  id: Divide(System.Decimal,System.Decimal)\n  parent: System.Decimal\n  langs:\n  - csharp\n  name: Divide(Decimal, Decimal)\n  nameWithType: Decimal.Divide(Decimal, Decimal)\n  fullName: Decimal.Divide(Decimal, Decimal)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Divides two specified <xref href=\"System.Decimal\"></xref> values.\n  remarks: ''\n  example:\n  - \"The following example calls the <xref:System.Decimal.Divide%2A> method to divide a range of values by 22.1.  \\n  \\n [!code-csharp[System.Decimal.Divide#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Decimal.Divide/cs/Divide1.cs#1)]\\n [!code-vb[System.Decimal.Divide#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Decimal.Divide/vb/Divide1.vb#1)]\"\n  syntax:\n    content: public static decimal Divide (decimal d1, decimal d2);\n    parameters:\n    - id: d1\n      type: System.Decimal\n      description: The dividend.\n    - id: d2\n      type: System.Decimal\n      description: The divisor.\n    return:\n      type: System.Decimal\n      description: The result of dividing <code>d1</code> by <code>d2</code>.\n  overload: System.Decimal.Divide*\n  exceptions:\n  - type: System.DivideByZeroException\n    commentId: T:System.DivideByZeroException\n    description: <code>d2</code> is zero.\n  - type: System.OverflowException\n    commentId: T:System.OverflowException\n    description: The return value (that is, the quotient) is less than <xref href=\"System.Decimal.MinValue\"></xref> or greater than <xref href=\"System.Decimal.MaxValue\"></xref>.\n  attributes: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Decimal.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Decimal.Equals(System.Decimal)\n  commentId: M:System.Decimal.Equals(System.Decimal)\n  id: Equals(System.Decimal)\n  parent: System.Decimal\n  langs:\n  - csharp\n  name: Equals(Decimal)\n  nameWithType: Decimal.Equals(Decimal)\n  fullName: Decimal.Equals(Decimal)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Returns a value indicating whether this instance and a specified <xref href=\"System.Decimal\"></xref> object represent the same value.\n  remarks: \"This method implements the <xref:System.IEquatable%601?displayProperty=fullName> interface, and performs slightly better than <xref:System.Decimal.Equals%2A> because it does not have to convert the `value` parameter to an object.  \\n  \\n If `value` has fewer bits (is narrower) than the instance type, some programming languages perform an implicit widening conversion that transforms the value of the parameter into a value with more bits.  \\n  \\n For example, suppose the instance type is <xref:System.Int32> and the parameter type is <xref:System.Byte>. The Microsoft C# compiler generates instructions to represent the value of the parameter as an <xref:System.Int32> object, then generates a <xref:System.Int32.CompareTo%2A?displayProperty=fullName> method to compare the <xref:System.Int32> instance and parameter representation.  \\n  \\n Consult your programming language's documentation to determine whether its compiler performs implicit widening conversions on numeric types.\"\n  syntax:\n    content: public bool Equals (decimal value);\n    parameters:\n    - id: value\n      type: System.Decimal\n      description: An object to compare to this instance.\n    return:\n      type: System.Boolean\n      description: '`true` if <code>value</code> is equal to this instance; otherwise, `false`.'\n  overload: System.Decimal.Equals*\n  exceptions: []\n  attributes: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Decimal.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Decimal.Equals(System.Object)\n  commentId: M:System.Decimal.Equals(System.Object)\n  id: Equals(System.Object)\n  parent: System.Decimal\n  langs:\n  - csharp\n  name: Equals(Object)\n  nameWithType: Decimal.Equals(Object)\n  fullName: Decimal.Equals(Object)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Returns a value indicating whether this instance and a specified <xref href=\"System.Object\"></xref> represent the same type and value.\n  remarks: ''\n  example:\n  - \"The following code example compares several `Decimal` and other objects to a reference `Decimal` value using the `Equals` method.  \\n  \\n [!code-cpp[System.Decimal.Compare_Equals#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Decimal.Compare_Equals/CPP/cto_eq_obj.cpp#1)]\\n [!code-csharp[System.Decimal.Compare_Equals#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Decimal.Compare_Equals/CS/cto_eq_obj.cs#1)]\\n [!code-vb[System.Decimal.Compare_Equals#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Decimal.Compare_Equals/VB/cto_eq_obj.vb#1)]\"\n  syntax:\n    content: public override bool Equals (object value);\n    parameters:\n    - id: value\n      type: System.Object\n      description: The object to compare with this instance.\n    return:\n      type: System.Boolean\n      description: '`true` if <code>value</code> is a <xref href=\"System.Decimal\"></xref> and equal to this instance; otherwise, `false`.'\n  overload: System.Decimal.Equals*\n  exceptions: []\n  attributes: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Decimal.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Decimal.Equals(System.Decimal,System.Decimal)\n  commentId: M:System.Decimal.Equals(System.Decimal,System.Decimal)\n  id: Equals(System.Decimal,System.Decimal)\n  parent: System.Decimal\n  langs:\n  - csharp\n  name: Equals(Decimal, Decimal)\n  nameWithType: Decimal.Equals(Decimal, Decimal)\n  fullName: Decimal.Equals(Decimal, Decimal)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Returns a value indicating whether two specified instances of <xref href=\"System.Decimal\"></xref> represent the same value.\n  remarks: ''\n  example:\n  - \"The following code example compares several `Decimal` values to a reference `Decimal` value using the static `Equals` method.  \\n  \\n [!code-cpp[System.Decimal.Compare_Equals#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Decimal.Compare_Equals/CPP/comp_equal.cpp#2)]\\n [!code-csharp[System.Decimal.Compare_Equals#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Decimal.Compare_Equals/CS/comp_equal.cs#2)]\\n [!code-vb[System.Decimal.Compare_Equals#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Decimal.Compare_Equals/VB/comp_equal.vb#2)]\"\n  syntax:\n    content: public static bool Equals (decimal d1, decimal d2);\n    parameters:\n    - id: d1\n      type: System.Decimal\n      description: The first value to compare.\n    - id: d2\n      type: System.Decimal\n      description: The second value to compare.\n    return:\n      type: System.Boolean\n      description: '`true` if <code>d1</code> and <code>d2</code> are equal; otherwise, `false`.'\n  overload: System.Decimal.Equals*\n  exceptions: []\n  attributes: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Decimal.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Decimal.Floor(System.Decimal)\n  commentId: M:System.Decimal.Floor(System.Decimal)\n  id: Floor(System.Decimal)\n  parent: System.Decimal\n  langs:\n  - csharp\n  name: Floor(Decimal)\n  nameWithType: Decimal.Floor(Decimal)\n  fullName: Decimal.Floor(Decimal)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Rounds a specified <xref href=\"System.Decimal\"></xref> number to the closest integer toward negative infinity.\n  remarks: The behavior of this method follows IEEE Standard 754, Section 4. This kind of rounding is sometimes called rounding toward negative infinity. In other words, if `d` is positive, any fractional component is truncated. If `d` is negative, the presence of any fractional component causes it to be rounded to the smaller integer. The operation of this method differs from the <xref:System.Decimal.Ceiling%2A> method, which supports rounding toward positive infinity.\n  example:\n  - \"The following example illustrates the <xref:System.Decimal.Floor%2A> method and contrasts it with the <xref:System.Decimal.Ceiling%2A> method.  \\n  \\n [!code-csharp[System.Decimal.Ceiling#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Decimal.Ceiling/cs/ceiling1.cs#1)]\\n [!code-vb[System.Decimal.Ceiling#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Decimal.Ceiling/vb/Ceiling1.vb#1)]\"\n  syntax:\n    content: public static decimal Floor (decimal d);\n    parameters:\n    - id: d\n      type: System.Decimal\n      description: The value to round.\n    return:\n      type: System.Decimal\n      description: \"If <code>d</code> has a fractional part, the next whole <xref href=\\\"System.Decimal\\\"></xref> number toward negative infinity that is less than <code>d</code>.  \\n  \\n -or-  \\n  \\n If <code>d</code> doesn't have a fractional part, <code>d</code> is returned unchanged. Note that the method returns an integral value of type <xref href=\\\"System.Decimal\\\"></xref>.\"\n  overload: System.Decimal.Floor*\n  exceptions: []\n  attributes: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Decimal.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Decimal.FromOACurrency(System.Int64)\n  commentId: M:System.Decimal.FromOACurrency(System.Int64)\n  id: FromOACurrency(System.Int64)\n  parent: System.Decimal\n  langs:\n  - csharp\n  name: FromOACurrency(Int64)\n  nameWithType: Decimal.FromOACurrency(Int64)\n  fullName: Decimal.FromOACurrency(Int64)\n  type: Method\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System\n  summary: Converts the specified 64-bit signed integer, which contains an OLE Automation Currency value, to the equivalent <xref href=\"System.Decimal\"></xref> value.\n  remarks: ''\n  example:\n  - \"The following code example uses the `FromOACurrency` method to convert <xref:System.Int64> fields that contain OLE Automation Currency values to the equivalent `Decimal` numbers.  \\n  \\n [!code-cpp[System.Decimal.OACurrency#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Decimal.OACurrency/CPP/fromoacurrency.cpp#2)]\\n [!code-csharp[System.Decimal.OACurrency#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Decimal.OACurrency/CS/fromoacurrency.cs#2)]\\n [!code-vb[System.Decimal.OACurrency#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Decimal.OACurrency/VB/fromoacurrency.vb#2)]\"\n  syntax:\n    content: public static decimal FromOACurrency (long cy);\n    parameters:\n    - id: cy\n      type: System.Int64\n      description: An OLE Automation Currency value.\n    return:\n      type: System.Decimal\n      description: A <xref href=\"System.Decimal\"></xref> that contains the equivalent of <code>cy</code>.\n  overload: System.Decimal.FromOACurrency*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Decimal.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Decimal.GetBits(System.Decimal)\n  commentId: M:System.Decimal.GetBits(System.Decimal)\n  id: GetBits(System.Decimal)\n  parent: System.Decimal\n  langs:\n  - csharp\n  name: GetBits(Decimal)\n  nameWithType: Decimal.GetBits(Decimal)\n  fullName: Decimal.GetBits(Decimal)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Converts the value of a specified instance of <xref href=\"System.Decimal\"></xref> to its equivalent binary representation.\n  remarks: \"The binary representation of a <xref:System.Decimal> number consists of a 1-bit sign, a 96-bit integer number, and a scaling factor used to divide the integer number and specify what portion of it is a decimal fraction. The scaling factor is implicitly the number 10, raised to an exponent ranging from 0 to 28.  \\n  \\n The return value is a four-element array of 32-bit signed integers.  \\n  \\n The first, second, and third elements of the returned array contain the low, middle, and high 32 bits of the 96-bit integer number.  \\n  \\n The fourth element of the returned array contains the scale factor and sign. It consists of the following parts:  \\n  \\n Bits 0 to 15, the lower word, are unused and must be zero.  \\n  \\n Bits 16 to 23 must contain an exponent between 0 and 28, which indicates the power of 10 to divide the integer number.  \\n  \\n Bits 24 to 30 are unused and must be zero.  \\n  \\n Bit 31 contains the sign: 0 mean positive, and 1 means negative.  \\n  \\n Note that the bit representation differentiates between negative and positive zero. These values are treated as being equal in all operations.\"\n  example:\n  - \"The following example uses the `GetBits` method to convert several `Decimal` values to their equivalent binary representations. It then displays the decimal values and the hexadecimal value of the elements in the array returned by the <xref:System.Decimal.GetBits%2A> method.  \\n  \\n [!code-cpp[System.Decimal.Get_Bits_Hash_Type#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Decimal.Get_Bits_Hash_Type/CPP/getbits.cpp#2)]\\n [!code-csharp[System.Decimal.Get_Bits_Hash_Type#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Decimal.Get_Bits_Hash_Type/CS/getbits.cs#2)]\\n [!code-vb[System.Decimal.Get_Bits_Hash_Type#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Decimal.Get_Bits_Hash_Type/VB/getbits.vb#2)]  \\n  \\n The following example uses the <xref:System.Decimal.GetBits%2A> method to retrieve the component parts of an array. It then uses this array in the call to the <xref:System.Decimal.%23ctor%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Boolean%2CSystem.Byte%29> constructor to instantiate a new <xref:System.Decimal> value.  \\n  \\n [!code-csharp[System.Decimal.Ctor#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.decimal.ctor/cs/ctor2a.cs#1)]\\n [!code-vb[System.Decimal.Ctor#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.ctor/vb/ctor2a.vb#1)]\"\n  syntax:\n    content: public static int[] GetBits (decimal d);\n    parameters:\n    - id: d\n      type: System.Decimal\n      description: The value to convert.\n    return:\n      type: System.Int32[]\n      description: A 32-bit signed integer array with four elements that contain the binary representation of <code>d</code>.\n  overload: System.Decimal.GetBits*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Decimal.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Decimal.GetHashCode\n  commentId: M:System.Decimal.GetHashCode\n  id: GetHashCode\n  parent: System.Decimal\n  langs:\n  - csharp\n  name: GetHashCode()\n  nameWithType: Decimal.GetHashCode()\n  fullName: Decimal.GetHashCode()\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Returns the hash code for this instance.\n  syntax:\n    content: public override int GetHashCode ();\n    parameters: []\n    return:\n      type: System.Int32\n      description: A 32-bit signed integer hash code.\n  overload: System.Decimal.GetHashCode*\n  exceptions: []\n  attributes: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Decimal.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Decimal.GetTypeCode\n  commentId: M:System.Decimal.GetTypeCode\n  id: GetTypeCode\n  parent: System.Decimal\n  langs:\n  - csharp\n  name: GetTypeCode()\n  nameWithType: Decimal.GetTypeCode()\n  fullName: Decimal.GetTypeCode()\n  type: Method\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System\n  summary: Returns the <xref href=\"System.TypeCode\"></xref> for value type <xref href=\"System.Decimal\"></xref>.\n  remarks: ''\n  example:\n  - \"The following code example uses the `GetTypeCode` method to return the type code for `Decimal` value type.  \\n  \\n [!code-cpp[System.Decimal.Get_Bits_Hash_Type#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Decimal.Get_Bits_Hash_Type/CPP/gettypecode.cpp#3)]\\n [!code-csharp[System.Decimal.Get_Bits_Hash_Type#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Decimal.Get_Bits_Hash_Type/CS/gettypecode.cs#3)]\\n [!code-vb[System.Decimal.Get_Bits_Hash_Type#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Decimal.Get_Bits_Hash_Type/VB/gettypecode.vb#3)]\"\n  syntax:\n    content: public TypeCode GetTypeCode ();\n    parameters: []\n    return:\n      type: System.TypeCode\n      description: The enumerated constant <xref href=\"System.TypeCode.Decimal\"></xref>.\n  overload: System.Decimal.GetTypeCode*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Decimal.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Decimal.MaxValue\n  commentId: F:System.Decimal.MaxValue\n  id: MaxValue\n  parent: System.Decimal\n  langs:\n  - csharp\n  name: MaxValue\n  nameWithType: Decimal.MaxValue\n  fullName: Decimal.MaxValue\n  type: Field\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Represents the largest possible value of <xref href=\"System.Decimal\"></xref>. This field is constant and read-only.\n  remarks: The value of this constant is positive 79,228,162,514,264,337,593,543,950,335.\n  example:\n  - \"The following code sample illustrates the use of `MaxValue` :  \\n  \\n [!code-cpp[Decimal Example#2](~/samples/snippets/cpp/VS_Snippets_CLR/Decimal Example/CPP/source.cpp#2)]\\n [!code-csharp[Decimal Example#2](~/samples/snippets/csharp/VS_Snippets_CLR/Decimal Example/CS/source.cs#2)]\\n [!code-vb[Decimal Example#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/Decimal Example/VB/source.vb#2)]\"\n  syntax:\n    content: public static readonly decimal MaxValue;\n    return:\n      type: System.Decimal\n      description: ''\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Decimal.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Decimal.MinusOne\n  commentId: F:System.Decimal.MinusOne\n  id: MinusOne\n  parent: System.Decimal\n  langs:\n  - csharp\n  name: MinusOne\n  nameWithType: Decimal.MinusOne\n  fullName: Decimal.MinusOne\n  type: Field\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Represents the number negative one (-1).\n  remarks: ''\n  example:\n  - \"The following code example illustrates the use of the `MinusOne` field.  \\n  \\n [!code-cpp[System.Decimal.Fields#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Decimal.Fields/CPP/fields.cpp#1)]\\n [!code-csharp[System.Decimal.Fields#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Decimal.Fields/CS/fields.cs#1)]\\n [!code-vb[System.Decimal.Fields#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Decimal.Fields/VB/fields.vb#1)]\"\n  syntax:\n    content: public static readonly decimal MinusOne;\n    return:\n      type: System.Decimal\n      description: ''\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Decimal.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Decimal.MinValue\n  commentId: F:System.Decimal.MinValue\n  id: MinValue\n  parent: System.Decimal\n  langs:\n  - csharp\n  name: MinValue\n  nameWithType: Decimal.MinValue\n  fullName: Decimal.MinValue\n  type: Field\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Represents the smallest possible value of <xref href=\"System.Decimal\"></xref>. This field is constant and read-only.\n  remarks: The value of this constant is negative 79,228,162,514,264,337,593,543,950,335.\n  example:\n  - \"The following code example illustrates the use of the `MinValue` field.  \\n  \\n [!code-cpp[System.Decimal.Fields#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Decimal.Fields/CPP/fields.cpp#1)]\\n [!code-csharp[System.Decimal.Fields#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Decimal.Fields/CS/fields.cs#1)]\\n [!code-vb[System.Decimal.Fields#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Decimal.Fields/VB/fields.vb#1)]\"\n  syntax:\n    content: public static readonly decimal MinValue;\n    return:\n      type: System.Decimal\n      description: ''\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Decimal.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Decimal.Multiply(System.Decimal,System.Decimal)\n  commentId: M:System.Decimal.Multiply(System.Decimal,System.Decimal)\n  id: Multiply(System.Decimal,System.Decimal)\n  parent: System.Decimal\n  langs:\n  - csharp\n  name: Multiply(Decimal, Decimal)\n  nameWithType: Decimal.Multiply(Decimal, Decimal)\n  fullName: Decimal.Multiply(Decimal, Decimal)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Multiplies two specified <xref href=\"System.Decimal\"></xref> values.\n  remarks: ''\n  example:\n  - \"The following code example creates several pairs of `Decimal` values and calculates their products with the `Multiply` method.  \\n  \\n [!code-cpp[System.Decimal.Mul_Div_Rem#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Decimal.Mul_Div_Rem/CPP/mul_div_rem.cpp#1)]\\n [!code-csharp[System.Decimal.Mul_Div_Rem#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Decimal.Mul_Div_Rem/CS/mul_div_rem.cs#1)]\\n [!code-vb[System.Decimal.Mul_Div_Rem#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Decimal.Mul_Div_Rem/VB/mul_div_rem.vb#1)]\"\n  syntax:\n    content: public static decimal Multiply (decimal d1, decimal d2);\n    parameters:\n    - id: d1\n      type: System.Decimal\n      description: The multiplicand.\n    - id: d2\n      type: System.Decimal\n      description: The multiplier.\n    return:\n      type: System.Decimal\n      description: The result of multiplying <code>d1</code> and <code>d2</code>.\n  overload: System.Decimal.Multiply*\n  exceptions:\n  - type: System.OverflowException\n    commentId: T:System.OverflowException\n    description: The return value is less than <xref href=\"System.Decimal.MinValue\"></xref> or greater than <xref href=\"System.Decimal.MaxValue\"></xref>.\n  attributes: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Decimal.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Decimal.Negate(System.Decimal)\n  commentId: M:System.Decimal.Negate(System.Decimal)\n  id: Negate(System.Decimal)\n  parent: System.Decimal\n  langs:\n  - csharp\n  name: Negate(Decimal)\n  nameWithType: Decimal.Negate(Decimal)\n  fullName: Decimal.Negate(Decimal)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Returns the result of multiplying the specified <xref href=\"System.Decimal\"></xref> value by negative one.\n  remarks: ''\n  example:\n  - \"The following code example uses the `Negate` method to change the sign of several `Decimal` values.  \\n  \\n [!code-cpp[System.Decimal.Flr_Neg_Rnd_Trnc#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Decimal.Flr_Neg_Rnd_Trnc/CPP/floor_neg_trunc.cpp#1)]\\n [!code-csharp[System.Decimal.Flr_Neg_Rnd_Trnc#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Decimal.Flr_Neg_Rnd_Trnc/CS/floor_neg_trunc.cs#1)]\\n [!code-vb[System.Decimal.Flr_Neg_Rnd_Trnc#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Decimal.Flr_Neg_Rnd_Trnc/VB/floor_neg_trunc.vb#1)]\"\n  syntax:\n    content: public static decimal Negate (decimal d);\n    parameters:\n    - id: d\n      type: System.Decimal\n      description: The value to negate.\n    return:\n      type: System.Decimal\n      description: \"A decimal number with the value of <code>d</code>, but the opposite sign.  \\n  \\n -or-  \\n  \\n Zero, if <code>d</code> is zero.\"\n  overload: System.Decimal.Negate*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Decimal.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Decimal.One\n  commentId: F:System.Decimal.One\n  id: One\n  parent: System.Decimal\n  langs:\n  - csharp\n  name: One\n  nameWithType: Decimal.One\n  fullName: Decimal.One\n  type: Field\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Represents the number one (1).\n  remarks: ''\n  example:\n  - \"The following code example illustrates the use of the `One` field.  \\n  \\n [!code-cpp[System.Decimal.Fields#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Decimal.Fields/CPP/fields.cpp#1)]\\n [!code-csharp[System.Decimal.Fields#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Decimal.Fields/CS/fields.cs#1)]\\n [!code-vb[System.Decimal.Fields#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Decimal.Fields/VB/fields.vb#1)]\"\n  syntax:\n    content: public static readonly decimal One;\n    return:\n      type: System.Decimal\n      description: ''\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Decimal.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Decimal.op_Addition(System.Decimal,System.Decimal)\n  commentId: M:System.Decimal.op_Addition(System.Decimal,System.Decimal)\n  id: op_Addition(System.Decimal,System.Decimal)\n  parent: System.Decimal\n  langs:\n  - csharp\n  name: op_Addition(Decimal, Decimal)\n  nameWithType: Decimal.op_Addition(Decimal, Decimal)\n  fullName: Decimal.op_Addition(Decimal, Decimal)\n  type: Operator\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Adds two specified <xref href=\"System.Decimal\"></xref> values.\n  remarks: \"The <xref:System.Decimal.op_Addition%2A> method defines the operation of the addition operator for <xref:System.Decimal> values. It enables code such as the following:  \\n  \\n [!code-csharp[System.Decimal.Operators#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.decimal.operators/cs/addition1.cs#3)]\\n [!code-vb[System.Decimal.Operators#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.operators/vb/addition1.vb#3)]  \\n  \\n If the language you're using doesn't support custom operators, call the <xref:System.Decimal.Add%2A> method instead.  \\n  \\n The equivalent method for this operator is <xref:System.Decimal.Add%28System.Decimal%2CSystem.Decimal%29?displayProperty=fullName>\"\n  syntax:\n    content: public static decimal op_Addition (decimal d1, decimal d2);\n    parameters:\n    - id: d1\n      type: System.Decimal\n      description: The first value to add.\n    - id: d2\n      type: System.Decimal\n      description: The second value to add.\n    return:\n      type: System.Decimal\n      description: The result of adding <code>d1</code> and <code>d2</code>.\n  overload: System.Decimal.op_Addition*\n  exceptions:\n  - type: System.OverflowException\n    commentId: T:System.OverflowException\n    description: The return value is less than <xref href=\"System.Decimal.MinValue\"></xref> or greater than <xref href=\"System.Decimal.MaxValue\"></xref>.\n  attributes: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Decimal.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Decimal.op_Decrement(System.Decimal)\n  commentId: M:System.Decimal.op_Decrement(System.Decimal)\n  id: op_Decrement(System.Decimal)\n  parent: System.Decimal\n  langs:\n  - csharp\n  name: op_Decrement(Decimal)\n  nameWithType: Decimal.op_Decrement(Decimal)\n  fullName: Decimal.op_Decrement(Decimal)\n  type: Operator\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Decrements the <xref href=\"System.Decimal\"></xref> operand by one.\n  remarks: \"The <xref:System.Decimal.op_Decrement%2A> method defines the operation of the decrement operator for <xref:System.Decimal> values. It enables code such as the following:  \\n  \\n [!code-csharp[System.Decimal.Operators#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.decimal.operators/cs/decrement1.cs#4)]  \\n  \\n Some languages (such as Visual Basic) that lack an increment operator can call the <xref:System.Decimal.op_Decrement%2A> method directly, as the following example shows.  \\n  \\n [!code-vb[System.Decimal.Operators#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.operators/vb/decrement1.vb#5)]  \\n  \\n If your language does not support custom operators, call the <xref:System.Decimal.Subtract%2A> method instead, as the following example shows.  \\n  \\n [!code-csharp[System.Decimal.Operators#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.decimal.operators/cs/decrement2.cs#6)]\\n [!code-vb[System.Decimal.Operators#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.operators/vb/decrement2.vb#6)]\"\n  syntax:\n    content: public static decimal op_Decrement (decimal d);\n    parameters:\n    - id: d\n      type: System.Decimal\n      description: The value to decrement.\n    return:\n      type: System.Decimal\n      description: The value of <code>d</code> decremented by 1.\n  overload: System.Decimal.op_Decrement*\n  exceptions:\n  - type: System.OverflowException\n    commentId: T:System.OverflowException\n    description: The return value is less than <xref href=\"System.Decimal.MinValue\"></xref> or greater than <xref href=\"System.Decimal.MaxValue\"></xref>.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Decimal.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Decimal.op_Division(System.Decimal,System.Decimal)\n  commentId: M:System.Decimal.op_Division(System.Decimal,System.Decimal)\n  id: op_Division(System.Decimal,System.Decimal)\n  parent: System.Decimal\n  langs:\n  - csharp\n  name: op_Division(Decimal, Decimal)\n  nameWithType: Decimal.op_Division(Decimal, Decimal)\n  fullName: Decimal.op_Division(Decimal, Decimal)\n  type: Operator\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Divides two specified <xref href=\"System.Decimal\"></xref> values.\n  remarks: \"The <xref:System.Decimal.op_Division%2A> method defines the operation of the division operator for <xref:System.Decimal> values. It enables code such as the following:  \\n  \\n [!code-csharp[System.Decimal.Operators#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.decimal.operators/cs/division1.cs#7)]\\n [!code-vb[System.Decimal.Operators#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.operators/vb/division1.vb#7)]  \\n  \\n If the language you're using doesn't support custom operators, call the <xref:System.Decimal.Divide%2A> method instead.  \\n  \\n The equivalent method for this operator is <xref:System.Decimal.Divide%28System.Decimal%2CSystem.Decimal%29?displayProperty=fullName>\"\n  syntax:\n    content: public static decimal op_Division (decimal d1, decimal d2);\n    parameters:\n    - id: d1\n      type: System.Decimal\n      description: The dividend.\n    - id: d2\n      type: System.Decimal\n      description: The divisor.\n    return:\n      type: System.Decimal\n      description: The result of dividing <code>d1</code> by <code>d2</code>.\n  overload: System.Decimal.op_Division*\n  exceptions:\n  - type: System.DivideByZeroException\n    commentId: T:System.DivideByZeroException\n    description: <code>d2</code> is zero.\n  - type: System.OverflowException\n    commentId: T:System.OverflowException\n    description: The return value is less than <xref href=\"System.Decimal.MinValue\"></xref> or greater than <xref href=\"System.Decimal.MaxValue\"></xref>.\n  attributes: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Decimal.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Decimal.op_Equality(System.Decimal,System.Decimal)\n  commentId: M:System.Decimal.op_Equality(System.Decimal,System.Decimal)\n  id: op_Equality(System.Decimal,System.Decimal)\n  parent: System.Decimal\n  langs:\n  - csharp\n  name: op_Equality(Decimal, Decimal)\n  nameWithType: Decimal.op_Equality(Decimal, Decimal)\n  fullName: Decimal.op_Equality(Decimal, Decimal)\n  type: Operator\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Returns a value that indicates whether two <xref href=\"System.Decimal\"></xref> values are equal.\n  remarks: \"The <xref:System.Decimal.op_Equality%2A> method defines the operation of the equality operator for <xref:System.Decimal> values. It enables code such as the following:  \\n  \\n [!code-csharp[System.Decimal.Operators#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.decimal.operators/cs/equality1.cs#1)]\\n [!code-vb[System.Decimal.Operators#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.operators/vb/equality1.vb#1)]  \\n  \\n If the language you're using doesn't support custom operators, call the <xref:System.Decimal.Equals%2A> method instead.  \\n  \\n The equivalent method for this operator is <xref:System.Decimal.Equals%28System.Object%29?displayProperty=fullName>\"\n  syntax:\n    content: public static bool op_Equality (decimal d1, decimal d2);\n    parameters:\n    - id: d1\n      type: System.Decimal\n      description: The first value to compare.\n    - id: d2\n      type: System.Decimal\n      description: The second value to compare.\n    return:\n      type: System.Boolean\n      description: '`true` if <code>d1</code> and <code>d2</code> are equal; otherwise, `false`.'\n  overload: System.Decimal.op_Equality*\n  exceptions: []\n  attributes: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Decimal.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Decimal.op_Explicit(System.Single to System.Decimal)\n  commentId: M:System.Decimal.op_Explicit(System.Single)~System.Decimal\n  id: op_Explicit(System.Single to System.Decimal)\n  parent: System.Decimal\n  langs:\n  - csharp\n  name: op_Explicit(Single to Decimal)\n  nameWithType: Decimal.op_Explicit(Single to Decimal)\n  fullName: Decimal.op_Explicit(Single to Decimal)\n  type: Operator\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  syntax:\n    content: public static decimal op_Explicit (float value);\n    parameters:\n    - id: value\n      type: System.Single\n      description: ''\n    return:\n      type: System.Decimal\n      description: ''\n  overload: System.Decimal.op_Explicit*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Decimal.xml\n- uid: System.Decimal.op_Explicit(System.Double to System.Decimal)\n  commentId: M:System.Decimal.op_Explicit(System.Double)~System.Decimal\n  id: op_Explicit(System.Double to System.Decimal)\n  parent: System.Decimal\n  langs:\n  - csharp\n  name: op_Explicit(Double to Decimal)\n  nameWithType: Decimal.op_Explicit(Double to Decimal)\n  fullName: Decimal.op_Explicit(Double to Decimal)\n  type: Operator\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  syntax:\n    content: public static decimal op_Explicit (double value);\n    parameters:\n    - id: value\n      type: System.Double\n      description: ''\n    return:\n      type: System.Decimal\n      description: ''\n  overload: System.Decimal.op_Explicit*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Decimal.xml\n- uid: System.Decimal.op_Explicit(System.Decimal to System.UInt64)\n  commentId: M:System.Decimal.op_Explicit(System.Decimal)~System.UInt64\n  id: op_Explicit(System.Decimal to System.UInt64)\n  parent: System.Decimal\n  langs:\n  - csharp\n  name: op_Explicit(Decimal to UInt64)\n  nameWithType: Decimal.op_Explicit(Decimal to UInt64)\n  fullName: Decimal.op_Explicit(Decimal to UInt64)\n  type: Operator\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  syntax:\n    content: >-\n      [System.CLSCompliant(false)]\n\n      public static ulong op_Explicit (decimal value);\n    parameters:\n    - id: value\n      type: System.Decimal\n      description: ''\n    return:\n      type: System.UInt64\n      description: ''\n  overload: System.Decimal.op_Explicit*\n  exceptions: []\n  attributes:\n  - type: System.CLSCompliantAttribute\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Decimal.xml\n- uid: System.Decimal.op_Explicit(System.Decimal to System.UInt32)\n  commentId: M:System.Decimal.op_Explicit(System.Decimal)~System.UInt32\n  id: op_Explicit(System.Decimal to System.UInt32)\n  parent: System.Decimal\n  langs:\n  - csharp\n  name: op_Explicit(Decimal to UInt32)\n  nameWithType: Decimal.op_Explicit(Decimal to UInt32)\n  fullName: Decimal.op_Explicit(Decimal to UInt32)\n  type: Operator\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  syntax:\n    content: >-\n      [System.CLSCompliant(false)]\n\n      public static uint op_Explicit (decimal value);\n    parameters:\n    - id: value\n      type: System.Decimal\n      description: ''\n    return:\n      type: System.UInt32\n      description: ''\n  overload: System.Decimal.op_Explicit*\n  exceptions: []\n  attributes:\n  - type: System.CLSCompliantAttribute\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Decimal.xml\n- uid: System.Decimal.op_Explicit(System.Decimal to System.UInt16)\n  commentId: M:System.Decimal.op_Explicit(System.Decimal)~System.UInt16\n  id: op_Explicit(System.Decimal to System.UInt16)\n  parent: System.Decimal\n  langs:\n  - csharp\n  name: op_Explicit(Decimal to UInt16)\n  nameWithType: Decimal.op_Explicit(Decimal to UInt16)\n  fullName: Decimal.op_Explicit(Decimal to UInt16)\n  type: Operator\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  syntax:\n    content: >-\n      [System.CLSCompliant(false)]\n\n      public static ushort op_Explicit (decimal value);\n    parameters:\n    - id: value\n      type: System.Decimal\n      description: ''\n    return:\n      type: System.UInt16\n      description: ''\n  overload: System.Decimal.op_Explicit*\n  exceptions: []\n  attributes:\n  - type: System.CLSCompliantAttribute\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Decimal.xml\n- uid: System.Decimal.op_Explicit(System.Decimal to System.Single)\n  commentId: M:System.Decimal.op_Explicit(System.Decimal)~System.Single\n  id: op_Explicit(System.Decimal to System.Single)\n  parent: System.Decimal\n  langs:\n  - csharp\n  name: op_Explicit(Decimal to Single)\n  nameWithType: Decimal.op_Explicit(Decimal to Single)\n  fullName: Decimal.op_Explicit(Decimal to Single)\n  type: Operator\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  syntax:\n    content: public static float op_Explicit (decimal value);\n    parameters:\n    - id: value\n      type: System.Decimal\n      description: ''\n    return:\n      type: System.Single\n      description: ''\n  overload: System.Decimal.op_Explicit*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Decimal.xml\n- uid: System.Decimal.op_Explicit(System.Decimal to System.SByte)\n  commentId: M:System.Decimal.op_Explicit(System.Decimal)~System.SByte\n  id: op_Explicit(System.Decimal to System.SByte)\n  parent: System.Decimal\n  langs:\n  - csharp\n  name: op_Explicit(Decimal to SByte)\n  nameWithType: Decimal.op_Explicit(Decimal to SByte)\n  fullName: Decimal.op_Explicit(Decimal to SByte)\n  type: Operator\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  syntax:\n    content: >-\n      [System.CLSCompliant(false)]\n\n      public static sbyte op_Explicit (decimal value);\n    parameters:\n    - id: value\n      type: System.Decimal\n      description: ''\n    return:\n      type: System.SByte\n      description: ''\n  overload: System.Decimal.op_Explicit*\n  exceptions: []\n  attributes:\n  - type: System.CLSCompliantAttribute\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Decimal.xml\n- uid: System.Decimal.op_Explicit(System.Decimal to System.Int64)\n  commentId: M:System.Decimal.op_Explicit(System.Decimal)~System.Int64\n  id: op_Explicit(System.Decimal to System.Int64)\n  parent: System.Decimal\n  langs:\n  - csharp\n  name: op_Explicit(Decimal to Int64)\n  nameWithType: Decimal.op_Explicit(Decimal to Int64)\n  fullName: Decimal.op_Explicit(Decimal to Int64)\n  type: Operator\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  syntax:\n    content: public static long op_Explicit (decimal value);\n    parameters:\n    - id: value\n      type: System.Decimal\n      description: ''\n    return:\n      type: System.Int64\n      description: ''\n  overload: System.Decimal.op_Explicit*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Decimal.xml\n- uid: System.Decimal.op_Explicit(System.Decimal to System.Int32)\n  commentId: M:System.Decimal.op_Explicit(System.Decimal)~System.Int32\n  id: op_Explicit(System.Decimal to System.Int32)\n  parent: System.Decimal\n  langs:\n  - csharp\n  name: op_Explicit(Decimal to Int32)\n  nameWithType: Decimal.op_Explicit(Decimal to Int32)\n  fullName: Decimal.op_Explicit(Decimal to Int32)\n  type: Operator\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  syntax:\n    content: public static int op_Explicit (decimal value);\n    parameters:\n    - id: value\n      type: System.Decimal\n      description: ''\n    return:\n      type: System.Int32\n      description: ''\n  overload: System.Decimal.op_Explicit*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Decimal.xml\n- uid: System.Decimal.op_Explicit(System.Decimal to System.Int16)\n  commentId: M:System.Decimal.op_Explicit(System.Decimal)~System.Int16\n  id: op_Explicit(System.Decimal to System.Int16)\n  parent: System.Decimal\n  langs:\n  - csharp\n  name: op_Explicit(Decimal to Int16)\n  nameWithType: Decimal.op_Explicit(Decimal to Int16)\n  fullName: Decimal.op_Explicit(Decimal to Int16)\n  type: Operator\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  syntax:\n    content: public static short op_Explicit (decimal value);\n    parameters:\n    - id: value\n      type: System.Decimal\n      description: ''\n    return:\n      type: System.Int16\n      description: ''\n  overload: System.Decimal.op_Explicit*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Decimal.xml\n- uid: System.Decimal.op_Explicit(System.Decimal to System.Double)\n  commentId: M:System.Decimal.op_Explicit(System.Decimal)~System.Double\n  id: op_Explicit(System.Decimal to System.Double)\n  parent: System.Decimal\n  langs:\n  - csharp\n  name: op_Explicit(Decimal to Double)\n  nameWithType: Decimal.op_Explicit(Decimal to Double)\n  fullName: Decimal.op_Explicit(Decimal to Double)\n  type: Operator\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  syntax:\n    content: public static double op_Explicit (decimal value);\n    parameters:\n    - id: value\n      type: System.Decimal\n      description: ''\n    return:\n      type: System.Double\n      description: ''\n  overload: System.Decimal.op_Explicit*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Decimal.xml\n- uid: System.Decimal.op_Explicit(System.Decimal to System.Char)\n  commentId: M:System.Decimal.op_Explicit(System.Decimal)~System.Char\n  id: op_Explicit(System.Decimal to System.Char)\n  parent: System.Decimal\n  langs:\n  - csharp\n  name: op_Explicit(Decimal to Char)\n  nameWithType: Decimal.op_Explicit(Decimal to Char)\n  fullName: Decimal.op_Explicit(Decimal to Char)\n  type: Operator\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  syntax:\n    content: public static char op_Explicit (decimal value);\n    parameters:\n    - id: value\n      type: System.Decimal\n      description: ''\n    return:\n      type: System.Char\n      description: ''\n  overload: System.Decimal.op_Explicit*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Decimal.xml\n- uid: System.Decimal.op_Explicit(System.Decimal to System.Byte)\n  commentId: M:System.Decimal.op_Explicit(System.Decimal)~System.Byte\n  id: op_Explicit(System.Decimal to System.Byte)\n  parent: System.Decimal\n  langs:\n  - csharp\n  name: op_Explicit(Decimal to Byte)\n  nameWithType: Decimal.op_Explicit(Decimal to Byte)\n  fullName: Decimal.op_Explicit(Decimal to Byte)\n  type: Operator\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  syntax:\n    content: public static byte op_Explicit (decimal value);\n    parameters:\n    - id: value\n      type: System.Decimal\n      description: ''\n    return:\n      type: System.Byte\n      description: ''\n  overload: System.Decimal.op_Explicit*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Decimal.xml\n- uid: System.Decimal.op_GreaterThan(System.Decimal,System.Decimal)\n  commentId: M:System.Decimal.op_GreaterThan(System.Decimal,System.Decimal)\n  id: op_GreaterThan(System.Decimal,System.Decimal)\n  parent: System.Decimal\n  langs:\n  - csharp\n  name: op_GreaterThan(Decimal, Decimal)\n  nameWithType: Decimal.op_GreaterThan(Decimal, Decimal)\n  fullName: Decimal.op_GreaterThan(Decimal, Decimal)\n  type: Operator\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Returns a value indicating whether a specified <xref href=\"System.Decimal\"></xref> is greater than another specified <xref href=\"System.Decimal\"></xref>.\n  remarks: \"The <xref:System.Decimal.op_GreaterThan%2A> method defines the operation of the greater than operator for <xref:System.Decimal> values. It enables code such as the following:  \\n  \\n [!code-csharp[System.Decimal.Operators#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.decimal.operators/cs/greaterthan1.cs#8)]\\n [!code-vb[System.Decimal.Operators#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.operators/vb/greaterthan1.vb#8)]  \\n  \\n Languages that do not support custom operators can call the <xref:System.Decimal.Compare%2A> method instead. They may also be able to call the <xref:System.Decimal.op_GreaterThan%2A> method directly, as the following example shows.  \\n  \\n [!code-vb[System.Decimal.Operators#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.operators/vb/greaterthan2.vb#9)]  \\n  \\n The equivalent method for this operator is <xref:System.Decimal.Compare%28System.Decimal%2CSystem.Decimal%29?displayProperty=fullName>\"\n  syntax:\n    content: public static bool op_GreaterThan (decimal d1, decimal d2);\n    parameters:\n    - id: d1\n      type: System.Decimal\n      description: The first value to compare.\n    - id: d2\n      type: System.Decimal\n      description: The second value to compare.\n    return:\n      type: System.Boolean\n      description: '`true` if <code>d1</code> is greater than <code>d2</code>; otherwise, `false`.'\n  overload: System.Decimal.op_GreaterThan*\n  exceptions: []\n  attributes: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Decimal.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Decimal.op_GreaterThanOrEqual(System.Decimal,System.Decimal)\n  commentId: M:System.Decimal.op_GreaterThanOrEqual(System.Decimal,System.Decimal)\n  id: op_GreaterThanOrEqual(System.Decimal,System.Decimal)\n  parent: System.Decimal\n  langs:\n  - csharp\n  name: op_GreaterThanOrEqual(Decimal, Decimal)\n  nameWithType: Decimal.op_GreaterThanOrEqual(Decimal, Decimal)\n  fullName: Decimal.op_GreaterThanOrEqual(Decimal, Decimal)\n  type: Operator\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Returns a value indicating whether a specified <xref href=\"System.Decimal\"></xref> is greater than or equal to another specified <xref href=\"System.Decimal\"></xref>.\n  remarks: \"The <xref:System.Decimal.op_GreaterThanOrEqual%2A> method defines the operation of the greater than or equal operator for <xref:System.Decimal> values. It enables code such as the following:  \\n  \\n [!code-csharp[System.Decimal.Operators#10](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.decimal.operators/cs/greaterthanorequal1.cs#10)]\\n [!code-vb[System.Decimal.Operators#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.operators/vb/greaterthanorequal1.vb#10)]  \\n  \\n Languages that do not support custom operators can call the <xref:System.Decimal.Compare%2A> method instead. They may also be able to call the <xref:System.Decimal.op_GreaterThanOrEqual%2A> method directly, as the following example shows.  \\n  \\n [!code-vb[System.Decimal.Operators#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.operators/vb/greaterthanorequal2.vb#11)]  \\n  \\n The equivalent method for this operator is <xref:System.Decimal.Compare%28System.Decimal%2CSystem.Decimal%29?displayProperty=fullName>\"\n  syntax:\n    content: public static bool op_GreaterThanOrEqual (decimal d1, decimal d2);\n    parameters:\n    - id: d1\n      type: System.Decimal\n      description: The first value to compare.\n    - id: d2\n      type: System.Decimal\n      description: The second value to compare.\n    return:\n      type: System.Boolean\n      description: '`true` if <code>d1</code> is greater than or equal to <code>d2</code>; otherwise, `false`.'\n  overload: System.Decimal.op_GreaterThanOrEqual*\n  exceptions: []\n  attributes: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Decimal.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Decimal.op_Implicit(System.UInt32 to System.Decimal)\n  commentId: M:System.Decimal.op_Implicit(System.UInt32)~System.Decimal\n  id: op_Implicit(System.UInt32 to System.Decimal)\n  parent: System.Decimal\n  langs:\n  - csharp\n  name: op_Implicit(UInt32 to Decimal)\n  nameWithType: Decimal.op_Implicit(UInt32 to Decimal)\n  fullName: Decimal.op_Implicit(UInt32 to Decimal)\n  type: Operator\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  syntax:\n    content: >-\n      [System.CLSCompliant(false)]\n\n      public static decimal op_Implicit (uint value);\n    parameters:\n    - id: value\n      type: System.UInt32\n      description: ''\n    return:\n      type: System.Decimal\n      description: ''\n  overload: System.Decimal.op_Implicit*\n  exceptions: []\n  attributes:\n  - type: System.CLSCompliantAttribute\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Decimal.xml\n- uid: System.Decimal.op_Implicit(System.UInt16 to System.Decimal)\n  commentId: M:System.Decimal.op_Implicit(System.UInt16)~System.Decimal\n  id: op_Implicit(System.UInt16 to System.Decimal)\n  parent: System.Decimal\n  langs:\n  - csharp\n  name: op_Implicit(UInt16 to Decimal)\n  nameWithType: Decimal.op_Implicit(UInt16 to Decimal)\n  fullName: Decimal.op_Implicit(UInt16 to Decimal)\n  type: Operator\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  syntax:\n    content: >-\n      [System.CLSCompliant(false)]\n\n      public static decimal op_Implicit (ushort value);\n    parameters:\n    - id: value\n      type: System.UInt16\n      description: ''\n    return:\n      type: System.Decimal\n      description: ''\n  overload: System.Decimal.op_Implicit*\n  exceptions: []\n  attributes:\n  - type: System.CLSCompliantAttribute\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Decimal.xml\n- uid: System.Decimal.op_Implicit(System.SByte to System.Decimal)\n  commentId: M:System.Decimal.op_Implicit(System.SByte)~System.Decimal\n  id: op_Implicit(System.SByte to System.Decimal)\n  parent: System.Decimal\n  langs:\n  - csharp\n  name: op_Implicit(SByte to Decimal)\n  nameWithType: Decimal.op_Implicit(SByte to Decimal)\n  fullName: Decimal.op_Implicit(SByte to Decimal)\n  type: Operator\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  syntax:\n    content: >-\n      [System.CLSCompliant(false)]\n\n      public static decimal op_Implicit (sbyte value);\n    parameters:\n    - id: value\n      type: System.SByte\n      description: ''\n    return:\n      type: System.Decimal\n      description: ''\n  overload: System.Decimal.op_Implicit*\n  exceptions: []\n  attributes:\n  - type: System.CLSCompliantAttribute\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Decimal.xml\n- uid: System.Decimal.op_Implicit(System.Int64 to System.Decimal)\n  commentId: M:System.Decimal.op_Implicit(System.Int64)~System.Decimal\n  id: op_Implicit(System.Int64 to System.Decimal)\n  parent: System.Decimal\n  langs:\n  - csharp\n  name: op_Implicit(Int64 to Decimal)\n  nameWithType: Decimal.op_Implicit(Int64 to Decimal)\n  fullName: Decimal.op_Implicit(Int64 to Decimal)\n  type: Operator\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  syntax:\n    content: public static decimal op_Implicit (long value);\n    parameters:\n    - id: value\n      type: System.Int64\n      description: ''\n    return:\n      type: System.Decimal\n      description: ''\n  overload: System.Decimal.op_Implicit*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Decimal.xml\n- uid: System.Decimal.op_Implicit(System.UInt64 to System.Decimal)\n  commentId: M:System.Decimal.op_Implicit(System.UInt64)~System.Decimal\n  id: op_Implicit(System.UInt64 to System.Decimal)\n  parent: System.Decimal\n  langs:\n  - csharp\n  name: op_Implicit(UInt64 to Decimal)\n  nameWithType: Decimal.op_Implicit(UInt64 to Decimal)\n  fullName: Decimal.op_Implicit(UInt64 to Decimal)\n  type: Operator\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  syntax:\n    content: >-\n      [System.CLSCompliant(false)]\n\n      public static decimal op_Implicit (ulong value);\n    parameters:\n    - id: value\n      type: System.UInt64\n      description: ''\n    return:\n      type: System.Decimal\n      description: ''\n  overload: System.Decimal.op_Implicit*\n  exceptions: []\n  attributes:\n  - type: System.CLSCompliantAttribute\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Decimal.xml\n- uid: System.Decimal.op_Implicit(System.Int16 to System.Decimal)\n  commentId: M:System.Decimal.op_Implicit(System.Int16)~System.Decimal\n  id: op_Implicit(System.Int16 to System.Decimal)\n  parent: System.Decimal\n  langs:\n  - csharp\n  name: op_Implicit(Int16 to Decimal)\n  nameWithType: Decimal.op_Implicit(Int16 to Decimal)\n  fullName: Decimal.op_Implicit(Int16 to Decimal)\n  type: Operator\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  syntax:\n    content: public static decimal op_Implicit (short value);\n    parameters:\n    - id: value\n      type: System.Int16\n      description: ''\n    return:\n      type: System.Decimal\n      description: ''\n  overload: System.Decimal.op_Implicit*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Decimal.xml\n- uid: System.Decimal.op_Implicit(System.Char to System.Decimal)\n  commentId: M:System.Decimal.op_Implicit(System.Char)~System.Decimal\n  id: op_Implicit(System.Char to System.Decimal)\n  parent: System.Decimal\n  langs:\n  - csharp\n  name: op_Implicit(Char to Decimal)\n  nameWithType: Decimal.op_Implicit(Char to Decimal)\n  fullName: Decimal.op_Implicit(Char to Decimal)\n  type: Operator\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  syntax:\n    content: public static decimal op_Implicit (char value);\n    parameters:\n    - id: value\n      type: System.Char\n      description: ''\n    return:\n      type: System.Decimal\n      description: ''\n  overload: System.Decimal.op_Implicit*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Decimal.xml\n- uid: System.Decimal.op_Implicit(System.Byte to System.Decimal)\n  commentId: M:System.Decimal.op_Implicit(System.Byte)~System.Decimal\n  id: op_Implicit(System.Byte to System.Decimal)\n  parent: System.Decimal\n  langs:\n  - csharp\n  name: op_Implicit(Byte to Decimal)\n  nameWithType: Decimal.op_Implicit(Byte to Decimal)\n  fullName: Decimal.op_Implicit(Byte to Decimal)\n  type: Operator\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  syntax:\n    content: public static decimal op_Implicit (byte value);\n    parameters:\n    - id: value\n      type: System.Byte\n      description: ''\n    return:\n      type: System.Decimal\n      description: ''\n  overload: System.Decimal.op_Implicit*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Decimal.xml\n- uid: System.Decimal.op_Implicit(System.Int32 to System.Decimal)\n  commentId: M:System.Decimal.op_Implicit(System.Int32)~System.Decimal\n  id: op_Implicit(System.Int32 to System.Decimal)\n  parent: System.Decimal\n  langs:\n  - csharp\n  name: op_Implicit(Int32 to Decimal)\n  nameWithType: Decimal.op_Implicit(Int32 to Decimal)\n  fullName: Decimal.op_Implicit(Int32 to Decimal)\n  type: Operator\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  syntax:\n    content: public static decimal op_Implicit (int value);\n    parameters:\n    - id: value\n      type: System.Int32\n      description: ''\n    return:\n      type: System.Decimal\n      description: ''\n  overload: System.Decimal.op_Implicit*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Decimal.xml\n- uid: System.Decimal.op_Increment(System.Decimal)\n  commentId: M:System.Decimal.op_Increment(System.Decimal)\n  id: op_Increment(System.Decimal)\n  parent: System.Decimal\n  langs:\n  - csharp\n  name: op_Increment(Decimal)\n  nameWithType: Decimal.op_Increment(Decimal)\n  fullName: Decimal.op_Increment(Decimal)\n  type: Operator\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Increments the <xref href=\"System.Decimal\"></xref> operand by 1.\n  remarks: \"The <xref:System.Decimal.op_Increment%2A> method defines the operation of the increment operator for <xref:System.Decimal> values. It enables code such as the following:  \\n  \\n [!code-csharp[System.Decimal.Operators#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.decimal.operators/cs/increment1.cs#12)]  \\n  \\n Some languages (such as Visual Basic) that lack an increment operator can call the <xref:System.Decimal.op_Increment%2A> method directly, as the following example shows.  \\n  \\n [!code-vb[System.Decimal.Operators#13](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.operators/vb/increment1.vb#13)]  \\n  \\n If your language does not support custom operators, call the <xref:System.Decimal.Add%2A> method instead, as the following example shows.  \\n  \\n [!code-csharp[System.Decimal.Operators#14](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.decimal.operators/cs/increment2.cs#14)]\\n [!code-vb[System.Decimal.Operators#14](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.operators/vb/increment2.vb#14)]\"\n  syntax:\n    content: public static decimal op_Increment (decimal d);\n    parameters:\n    - id: d\n      type: System.Decimal\n      description: The value to increment.\n    return:\n      type: System.Decimal\n      description: The value of <code>d</code> incremented by 1.\n  overload: System.Decimal.op_Increment*\n  exceptions:\n  - type: System.OverflowException\n    commentId: T:System.OverflowException\n    description: The return value is less than <xref href=\"System.Decimal.MinValue\"></xref> or greater than <xref href=\"System.Decimal.MaxValue\"></xref>.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Decimal.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Decimal.op_Inequality(System.Decimal,System.Decimal)\n  commentId: M:System.Decimal.op_Inequality(System.Decimal,System.Decimal)\n  id: op_Inequality(System.Decimal,System.Decimal)\n  parent: System.Decimal\n  langs:\n  - csharp\n  name: op_Inequality(Decimal, Decimal)\n  nameWithType: Decimal.op_Inequality(Decimal, Decimal)\n  fullName: Decimal.op_Inequality(Decimal, Decimal)\n  type: Operator\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Returns a value that indicates whether two <xref href=\"System.Decimal\"></xref> objects have different values.\n  remarks: \"The <xref:System.Decimal.op_Inequality%2A> method defines the operation of the inequality operator for <xref:System.Decimal> values. It enables code such as the following:  \\n  \\n [!code-csharp[System.Decimal.Operators#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.decimal.operators/cs/inequality1.cs#2)]\\n [!code-vb[System.Decimal.Operators#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.operators/vb/inequality1.vb#2)]  \\n  \\n If the language you're using doesn't support custom operators, you can test for inequality by using one of the following techniques:  \\n  \\n-   Calling the <xref:System.Decimal.Compare%2A> method, which indicates the relationship between two <xref:System.Decimal> values.  \\n  \\n-   Calling the <xref:System.Decimal.Equals%2A> method and reversing its value.  \\n  \\n The equivalent method for this operator is <xref:System.Decimal.Compare%28System.Decimal%2CSystem.Decimal%29?displayProperty=fullName>\"\n  syntax:\n    content: public static bool op_Inequality (decimal d1, decimal d2);\n    parameters:\n    - id: d1\n      type: System.Decimal\n      description: The first value to compare.\n    - id: d2\n      type: System.Decimal\n      description: The second value to compare.\n    return:\n      type: System.Boolean\n      description: '`true` if <code>d1</code> and <code>d2</code> are not equal; otherwise, `false`.'\n  overload: System.Decimal.op_Inequality*\n  exceptions: []\n  attributes: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Decimal.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Decimal.op_LessThan(System.Decimal,System.Decimal)\n  commentId: M:System.Decimal.op_LessThan(System.Decimal,System.Decimal)\n  id: op_LessThan(System.Decimal,System.Decimal)\n  parent: System.Decimal\n  langs:\n  - csharp\n  name: op_LessThan(Decimal, Decimal)\n  nameWithType: Decimal.op_LessThan(Decimal, Decimal)\n  fullName: Decimal.op_LessThan(Decimal, Decimal)\n  type: Operator\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Returns a value indicating whether a specified <xref href=\"System.Decimal\"></xref> is less than another specified <xref href=\"System.Decimal\"></xref>.\n  remarks: \"The <xref:System.Decimal.op_LessThan%2A> method defines the operation of the less than operator for <xref:System.Decimal> values. It enables code such as the following:  \\n  \\n [!code-csharp[System.Decimal.Operators#15](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.decimal.operators/cs/lessthan1.cs#15)]\\n [!code-vb[System.Decimal.Operators#15](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.operators/vb/lessthan1.vb#15)]  \\n  \\n Languages that do not support custom operators can call the <xref:System.Decimal.Compare%2A> method instead. They may also be able to call the <xref:System.Decimal.op_LessThan%2A> method directly, as the following example shows.  \\n  \\n [!code-vb[System.Decimal.Operators#16](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.operators/vb/lessthan2.vb#16)]  \\n  \\n The equivalent method for this operator is <xref:System.Decimal.Compare%28System.Decimal%2CSystem.Decimal%29?displayProperty=fullName>\"\n  syntax:\n    content: public static bool op_LessThan (decimal d1, decimal d2);\n    parameters:\n    - id: d1\n      type: System.Decimal\n      description: The first value to compare.\n    - id: d2\n      type: System.Decimal\n      description: The second value to compare.\n    return:\n      type: System.Boolean\n      description: '`true` if <code>d1</code> is less than <code>d2</code>; otherwise, `false`.'\n  overload: System.Decimal.op_LessThan*\n  exceptions: []\n  attributes: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Decimal.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Decimal.op_LessThanOrEqual(System.Decimal,System.Decimal)\n  commentId: M:System.Decimal.op_LessThanOrEqual(System.Decimal,System.Decimal)\n  id: op_LessThanOrEqual(System.Decimal,System.Decimal)\n  parent: System.Decimal\n  langs:\n  - csharp\n  name: op_LessThanOrEqual(Decimal, Decimal)\n  nameWithType: Decimal.op_LessThanOrEqual(Decimal, Decimal)\n  fullName: Decimal.op_LessThanOrEqual(Decimal, Decimal)\n  type: Operator\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Returns a value indicating whether a specified <xref href=\"System.Decimal\"></xref> is less than or equal to another specified <xref href=\"System.Decimal\"></xref>.\n  remarks: \"The <xref:System.Decimal.op_LessThanOrEqual%2A> method defines the operation of the less than or equal operator for <xref:System.Decimal> values. It enables code such as the following:  \\n  \\n [!code-csharp[System.Decimal.Operators#17](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.decimal.operators/cs/lessthanorequal1.cs#17)]\\n [!code-vb[System.Decimal.Operators#17](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.operators/vb/lessthanorequal1.vb#17)]  \\n  \\n Languages that do not support custom operators can call the <xref:System.Decimal.Compare%2A> method instead. They may also be able to call the <xref:System.Decimal.op_LessThanOrEqual%2A> method directly, as the following example shows.  \\n  \\n [!code-vb[System.Decimal.Operators#18](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.operators/vb/lessthanorequal2.vb#18)]  \\n  \\n The equivalent method for this operator is <xref:System.Decimal.Compare%28System.Decimal%2CSystem.Decimal%29?displayProperty=fullName>\"\n  syntax:\n    content: public static bool op_LessThanOrEqual (decimal d1, decimal d2);\n    parameters:\n    - id: d1\n      type: System.Decimal\n      description: The first value to compare.\n    - id: d2\n      type: System.Decimal\n      description: The second value to compare.\n    return:\n      type: System.Boolean\n      description: '`true` if <code>d1</code> is less than or equal to <code>d2</code>; otherwise, `false`.'\n  overload: System.Decimal.op_LessThanOrEqual*\n  exceptions: []\n  attributes: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Decimal.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Decimal.op_Modulus(System.Decimal,System.Decimal)\n  commentId: M:System.Decimal.op_Modulus(System.Decimal,System.Decimal)\n  id: op_Modulus(System.Decimal,System.Decimal)\n  parent: System.Decimal\n  langs:\n  - csharp\n  name: op_Modulus(Decimal, Decimal)\n  nameWithType: Decimal.op_Modulus(Decimal, Decimal)\n  fullName: Decimal.op_Modulus(Decimal, Decimal)\n  type: Operator\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Returns the remainder resulting from dividing two specified <xref href=\"System.Decimal\"></xref> values.\n  remarks: \"The <xref:System.Decimal.op_Modulus%2A> method defines the operation of the modulus operator for <xref:System.Decimal> values. It enables code such as the following:  \\n  \\n [!code-csharp[System.Decimal.Operators#19](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.decimal.operators/cs/modulus1.cs#19)]\\n [!code-vb[System.Decimal.Operators#19](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.operators/vb/modulus1.vb#19)]  \\n  \\n If the language you're using doesn't support custom operators, call the <xref:System.Decimal.Remainder%2A> method instead.  \\n  \\n The sign of the value return by the modulus operation depends on the sign of dividend. If dividend is positive, the modulus operation returns a positive result; if it is negative, the modulus operation returns a negative result.  \\n  \\n The equivalent method for this operator is <xref:System.Decimal.Remainder%28System.Decimal%2CSystem.Decimal%29?displayProperty=fullName>\"\n  syntax:\n    content: public static decimal op_Modulus (decimal d1, decimal d2);\n    parameters:\n    - id: d1\n      type: System.Decimal\n      description: The dividend.\n    - id: d2\n      type: System.Decimal\n      description: The divisor.\n    return:\n      type: System.Decimal\n      description: The remainder resulting from dividing <code>d1</code> by <code>d2</code>.\n  overload: System.Decimal.op_Modulus*\n  exceptions:\n  - type: System.DivideByZeroException\n    commentId: T:System.DivideByZeroException\n    description: <code>d2</code> is `zero`.\n  - type: System.OverflowException\n    commentId: T:System.OverflowException\n    description: The return value is less than <xref href=\"System.Decimal.MinValue\"></xref> or greater than <xref href=\"System.Decimal.MaxValue\"></xref>.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Decimal.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Decimal.op_Multiply(System.Decimal,System.Decimal)\n  commentId: M:System.Decimal.op_Multiply(System.Decimal,System.Decimal)\n  id: op_Multiply(System.Decimal,System.Decimal)\n  parent: System.Decimal\n  langs:\n  - csharp\n  name: op_Multiply(Decimal, Decimal)\n  nameWithType: Decimal.op_Multiply(Decimal, Decimal)\n  fullName: Decimal.op_Multiply(Decimal, Decimal)\n  type: Operator\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Multiplies two specified <xref href=\"System.Decimal\"></xref> values.\n  remarks: \"The <xref:System.Decimal.op_Multiply%2A> method defines the operation of the multiplication operator for <xref:System.Decimal> values. It enables code such as the following:  \\n  \\n [!code-csharp[System.Decimal.Operators#20](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.decimal.operators/cs/multiply1.cs#20)]\\n [!code-vb[System.Decimal.Operators#20](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.operators/vb/multiply1.vb#20)]  \\n  \\n If the language you're using doesn't support custom operators, call the <xref:System.Decimal.Multiply%2A> method instead.  \\n  \\n The equivalent method for this operator is <xref:System.Decimal.Multiply%28System.Decimal%2CSystem.Decimal%29?displayProperty=fullName>\"\n  syntax:\n    content: public static decimal op_Multiply (decimal d1, decimal d2);\n    parameters:\n    - id: d1\n      type: System.Decimal\n      description: The first value to multiply.\n    - id: d2\n      type: System.Decimal\n      description: The second value to multiply.\n    return:\n      type: System.Decimal\n      description: The result of multiplying <code>d1</code> by <code>d2</code>.\n  overload: System.Decimal.op_Multiply*\n  exceptions:\n  - type: System.OverflowException\n    commentId: T:System.OverflowException\n    description: The return value is less than <xref href=\"System.Decimal.MinValue\"></xref> or greater than <xref href=\"System.Decimal.MaxValue\"></xref>.\n  attributes: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Decimal.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Decimal.op_Subtraction(System.Decimal,System.Decimal)\n  commentId: M:System.Decimal.op_Subtraction(System.Decimal,System.Decimal)\n  id: op_Subtraction(System.Decimal,System.Decimal)\n  parent: System.Decimal\n  langs:\n  - csharp\n  name: op_Subtraction(Decimal, Decimal)\n  nameWithType: Decimal.op_Subtraction(Decimal, Decimal)\n  fullName: Decimal.op_Subtraction(Decimal, Decimal)\n  type: Operator\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Subtracts two specified <xref href=\"System.Decimal\"></xref> values.\n  remarks: \"The <xref:System.Decimal.op_Subtraction%2A> method defines the operation of the subtraction operator for <xref:System.Decimal> values. It enables code such as the following:  \\n  \\n [!code-csharp[System.Decimal.Operators#21](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.decimal.operators/cs/subtraction1.cs#21)]\\n [!code-vb[System.Decimal.Operators#21](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.operators/vb/subtraction1.vb#21)]  \\n  \\n If the language you're using doesn't support custom operators, call the <xref:System.Decimal.Subtract%2A> method instead.  \\n  \\n The equivalent method for this operator is <xref:System.Decimal.Subtract%28System.Decimal%2CSystem.Decimal%29?displayProperty=fullName>\"\n  syntax:\n    content: public static decimal op_Subtraction (decimal d1, decimal d2);\n    parameters:\n    - id: d1\n      type: System.Decimal\n      description: The minuend.\n    - id: d2\n      type: System.Decimal\n      description: The subtrahend.\n    return:\n      type: System.Decimal\n      description: The result of subtracting <code>d2</code> from <code>d1</code>.\n  overload: System.Decimal.op_Subtraction*\n  exceptions:\n  - type: System.OverflowException\n    commentId: T:System.OverflowException\n    description: The return value is less than <xref href=\"System.Decimal.MinValue\"></xref> or greater than <xref href=\"System.Decimal.MaxValue\"></xref>.\n  attributes: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Decimal.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Decimal.op_UnaryNegation(System.Decimal)\n  commentId: M:System.Decimal.op_UnaryNegation(System.Decimal)\n  id: op_UnaryNegation(System.Decimal)\n  parent: System.Decimal\n  langs:\n  - csharp\n  name: op_UnaryNegation(Decimal)\n  nameWithType: Decimal.op_UnaryNegation(Decimal)\n  fullName: Decimal.op_UnaryNegation(Decimal)\n  type: Operator\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Negates the value of the specified <xref href=\"System.Decimal\"></xref> operand.\n  remarks: \"The <xref:System.Decimal.op_UnaryPlus%2A> method defines the operation of the unary negation operator (or the additive inverse operator) for <xref:System.Decimal> values. The operation produces a value that results in 0 (zero) when it is added to the original number. Languages that do not support custom operators can call the <xref:System.Decimal.Negate%2A> method instead.  \\n  \\n The equivalent method for this operator is <xref:System.Decimal.Negate%28System.Decimal%29?displayProperty=fullName>\"\n  syntax:\n    content: public static decimal op_UnaryNegation (decimal d);\n    parameters:\n    - id: d\n      type: System.Decimal\n      description: The value to negate.\n    return:\n      type: System.Decimal\n      description: The result of <code>d</code> multiplied by negative one (-1).\n  overload: System.Decimal.op_UnaryNegation*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Decimal.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Decimal.op_UnaryPlus(System.Decimal)\n  commentId: M:System.Decimal.op_UnaryPlus(System.Decimal)\n  id: op_UnaryPlus(System.Decimal)\n  parent: System.Decimal\n  langs:\n  - csharp\n  name: op_UnaryPlus(Decimal)\n  nameWithType: Decimal.op_UnaryPlus(Decimal)\n  fullName: Decimal.op_UnaryPlus(Decimal)\n  type: Operator\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Returns the value of the <xref href=\"System.Decimal\"></xref> operand (the sign of the operand is unchanged).\n  remarks: The <xref:System.Decimal.op_UnaryPlus%2A> method defines the operation of the unary positive operator for <xref:System.Decimal> values.\n  syntax:\n    content: public static decimal op_UnaryPlus (decimal d);\n    parameters:\n    - id: d\n      type: System.Decimal\n      description: The operand to return.\n    return:\n      type: System.Decimal\n      description: The value of the operand, <code>d</code>.\n  overload: System.Decimal.op_UnaryPlus*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Decimal.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Decimal.Parse(System.String)\n  commentId: M:System.Decimal.Parse(System.String)\n  id: Parse(System.String)\n  parent: System.Decimal\n  langs:\n  - csharp\n  name: Parse(String)\n  nameWithType: Decimal.Parse(String)\n  fullName: Decimal.Parse(String)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Converts the string representation of a number to its <xref href=\"System.Decimal\"></xref> equivalent.\n  remarks: \"Parameter `s` contains a number of the form:  \\n  \\n [ws][sign][digits,]digits[.fractional-digits][ws]  \\n  \\n Elements in square brackets ([ and ]) are optional. The following table describes each element.  \\n  \\n|Element|Description|  \\n|-------------|-----------------|  \\n|*ws*|Optional white space.|  \\n|*sign*|An optional sign.|  \\n|*digits*|A sequence of digits ranging from 0 to 9.|  \\n|*,*|A culture-specific thousands separator symbol.|  \\n|*.*|A culture-specific decimal point symbol.|  \\n|*fractional-digits*|A sequence of digits ranging from 0 to 9.|  \\n  \\n Parameter `s` is interpreted using the <xref:System.Globalization.NumberStyles?displayProperty=fullName> style. This means that white space and thousands separators are allowed but currency symbols are not. To explicitly define the elements (such as currency symbols, thousands separators, and white space) that can be present in `s`, use either the <xref:System.Decimal.Parse%28System.String%2CSystem.Globalization.NumberStyles%29?displayProperty=fullName> or the <xref:System.Decimal.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=fullName> method.  \\n  \\n Parameter `s` is parsed using the formatting information in a <xref:System.Globalization.NumberFormatInfo> initialized for the current system culture. For more information, see <xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A>. To parse a string using the formatting information of some other culture, use the <xref:System.Decimal.Parse%28System.String%2CSystem.IFormatProvider%29?displayProperty=fullName> or <xref:System.Decimal.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=fullName> method.  \\n  \\n If necessary, the value of `s` is rounded using rounding to nearest.  \\n  \\n A <xref:System.Decimal> has 29 digits of precision. If `s` represents a number that has more than 29 digits, but has a fractional part and is within the range of <xref:System.Decimal.MaxValue> and <xref:System.Decimal.MinValue>, the number is rounded, not truncated, to 29 digits using rounding to nearest.  \\n  \\n If during a parse operation a separator is encountered in the `s` parameter, and the applicable currency or number decimal and group separators are the same, the parse operation assumes that the separator is a decimal separator rather than a group separator. For more information about separators, see <xref:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator%2A>, <xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator%2A>, <xref:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator%2A>, and <xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A>.\"\n  example:\n  - \"The following code example uses the <xref:System.Decimal.Parse%28System.String%29> method to parse string representations of <xref:System.Decimal> values.  \\n  \\n [!code-csharp[System.Decimal.Parse#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Decimal.Parse/CS/parse.cs#1)]\\n [!code-vb[System.Decimal.Parse#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Decimal.Parse/VB/parse.vb#1)]\"\n  syntax:\n    content: public static decimal Parse (string s);\n    parameters:\n    - id: s\n      type: System.String\n      description: The string representation of the number to convert.\n    return:\n      type: System.Decimal\n      description: The equivalent to the number contained in <code>s</code>.\n  overload: System.Decimal.Parse*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>s</code> is `null`.\n  - type: System.FormatException\n    commentId: T:System.FormatException\n    description: <code>s</code> is not in the correct format.\n  - type: System.OverflowException\n    commentId: T:System.OverflowException\n    description: <code>s</code> represents a number less than <xref href=\"System.Decimal.MinValue\"></xref> or greater than <xref href=\"System.Decimal.MaxValue\"></xref>.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Decimal.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Decimal.Parse(System.String,System.Globalization.NumberStyles)\n  commentId: M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles)\n  id: Parse(System.String,System.Globalization.NumberStyles)\n  parent: System.Decimal\n  langs:\n  - csharp\n  name: Parse(String, NumberStyles)\n  nameWithType: Decimal.Parse(String, NumberStyles)\n  fullName: Decimal.Parse(String, NumberStyles)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Converts the string representation of a number in a specified style to its <xref href=\"System.Decimal\"></xref> equivalent.\n  remarks: \"The `style` parameter defines the style elements (such as thousands separators, white space, and currency symbols) that are allowed in the `s` parameter for the parse operation to succeed. It must be a combination of bit flags from the <xref:System.Globalization.NumberStyles> enumeration. The following <xref:System.Globalization.NumberStyles> members are not supported:  \\n  \\n-   <xref:System.Globalization.NumberStyles?displayProperty=fullName>  \\n  \\n-   <xref:System.Globalization.NumberStyles.HexNumber>  \\n  \\n Depending on the value of `style`, the `s` parameter may include the following elements:  \\n  \\n [ws][$][sign][digits,]digits[.fractional-digits][e[sign]digits][ws]  \\n  \\n Elements in square brackets ([ and ]) are optional. The following table describes each element.  \\n  \\n|Element|Description|  \\n|-------------|-----------------|  \\n|*ws*|Optional white space. White space can appear at the beginning of `s` if `style` includes the <xref:System.Globalization.NumberStyles?displayProperty=fullName> flag, and it can appear at the end of `s` if `style` includes the <xref:System.Globalization.NumberStyles?displayProperty=fullName> flag.|  \\n|*$*|A culture-specific currency symbol. Its position in the string is defined by the <xref:System.Globalization.NumberFormatInfo.CurrencyNegativePattern%2A?displayProperty=fullName> and <xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A?displayProperty=fullName> properties of the current culture. The current culture's currency symbol can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles?displayProperty=fullName> flag.|  \\n|*sign*|An optional sign. The sign can appear at the beginning of `s` if `style` includes the <xref:System.Globalization.NumberStyles?displayProperty=fullName> flag, and it can appear at the end of `s` if `style` includes the <xref:System.Globalization.NumberStyles?displayProperty=fullName> flag. Parentheses can be used in `s` to indicate a negative value if `style` includes the <xref:System.Globalization.NumberStyles?displayProperty=fullName> flag.|  \\n|*digits*|A sequence of digits ranging from 0 to 9.|  \\n|*,*|A culture-specific thousands separator symbol. The current culture's thousands separator can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles?displayProperty=fullName> flag.|  \\n|*.*|A culture-specific decimal point symbol. The current culture's decimal point symbol can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles?displayProperty=fullName> flag.|  \\n|*fractional-digits*|A sequence of digits ranging from 0 to 9. Fractional digits can appear in `s` only if `style` includes the <xref:System.Globalization.NumberStyles?displayProperty=fullName> flag.|  \\n|*e*|The 'e' or 'E' character, which indicates that the value is represented in exponential notation. The `s` parameter can represent a number in exponential notation if `style` includes the <xref:System.Globalization.NumberStyles?displayProperty=fullName> flag.|  \\n  \\n A string with digits only (which corresponds to the <xref:System.Globalization.NumberStyles.None> style) always parses successfully. The remaining <xref:System.Globalization.NumberStyles> members control elements that may be but are not required to be present in the input string. The following table indicates how individual <xref:System.Globalization.NumberStyles> members affect the elements that may be present in `s`.  \\n  \\n|NumberStyles value|Elements permitted in s in addition to digits|  \\n|------------------------|---------------------------------------------------|  \\n|<xref:System.Globalization.NumberStyles.None>|The *digits* element only.|  \\n|<xref:System.Globalization.NumberStyles.AllowDecimalPoint>|The *.* and *fractional-digits* elements.|  \\n|<xref:System.Globalization.NumberStyles.AllowExponent>|The `s` parameter can also use exponential notation. This flag supports values in the form *digits*E*digits*; additional flags are needed to successfully parse strings with elements such as positive or negative signs and decimal point symbols.|  \\n|<xref:System.Globalization.NumberStyles.AllowLeadingWhite>|The *ws* element at the beginning of `s`.|  \\n|<xref:System.Globalization.NumberStyles.AllowTrailingWhite>|The *ws* element at the end of `s`.|  \\n|<xref:System.Globalization.NumberStyles.AllowLeadingSign>|The *sign* element at the beginning of `s`.|  \\n|<xref:System.Globalization.NumberStyles.AllowTrailingSign>|The *sign* element at the end of `s`.|  \\n|<xref:System.Globalization.NumberStyles.AllowParentheses>|The *sign* element in the form of parentheses enclosing the numeric value.|  \\n|<xref:System.Globalization.NumberStyles.AllowThousands>|The *,* element.|  \\n|<xref:System.Globalization.NumberStyles.AllowCurrencySymbol>|The *$* element.|  \\n|<xref:System.Globalization.NumberStyles.Currency>|All. The `s` parameter cannot represent a hexadecimal number or a number in exponential notation.|  \\n|<xref:System.Globalization.NumberStyles.Float>|The *ws* element at the beginning or end of `s`, *sign* at the beginning of `s`, and the *.* symbol. The `s` parameter can also use exponential notation.|  \\n|<xref:System.Globalization.NumberStyles.Number>|The `ws`, `sign`, *,*, and *.* elements.|  \\n|<xref:System.Globalization.NumberStyles.Any>|All styles, except `s` cannot represent a hexadecimal number.|  \\n  \\n The `s` parameter is parsed using the formatting information in a <xref:System.Globalization.NumberFormatInfo> object initialized for the current system culture. For more information, see <xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A>.  \\n  \\n A <xref:System.Decimal> has 29 digits of precision. If `s` represents a number that has more than 29 digits, but has a fractional part and is within the range of <xref:System.Decimal.MaxValue> and <xref:System.Decimal.MinValue>, the number is rounded, not truncated, to 29 digits using rounding to nearest.  \\n  \\n If a separator is encountered in the `s` parameter during a parse operation, `styles` includes the <xref:System.Globalization.NumberStyles?displayProperty=fullName> and <xref:System.Globalization.NumberStyles?displayProperty=fullName> values, and the applicable currency or number decimal and group separators are the same, the parse operation assumes that the separator is a decimal separator rather than a group separator. For more information about separators, see <xref:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator%2A>, <xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator%2A>, <xref:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator%2A>, and <xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A>.\"\n  example:\n  - \"The following code example uses the <xref:System.Decimal.Parse%28System.String%2CSystem.Globalization.NumberStyles%29> method to parse the string representations of <xref:System.Decimal> values using the en-US culture.  \\n  \\n [!code-csharp[System.Decimal.Parse#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Decimal.Parse/CS/parse.cs#2)]\\n [!code-vb[System.Decimal.Parse#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Decimal.Parse/VB/parse.vb#2)]\"\n  syntax:\n    content: public static decimal Parse (string s, System.Globalization.NumberStyles style);\n    parameters:\n    - id: s\n      type: System.String\n      description: The string representation of the number to convert.\n    - id: style\n      type: System.Globalization.NumberStyles\n      description: A bitwise combination of <xref href=\"System.Globalization.NumberStyles\"></xref> values that indicates the style elements that can be present in <code>s</code>. A typical value to specify is <xref href=\"System.Globalization.NumberStyles.Number\"></xref>.\n    return:\n      type: System.Decimal\n      description: The <xref href=\"System.Decimal\"></xref> number equivalent to the number contained in <code>s</code> as specified by <code>style</code>.\n  overload: System.Decimal.Parse*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>s</code> is `null`.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"<code>style</code> is not a <xref href=\\\"System.Globalization.NumberStyles\\\"></xref> value.  \\n  \\n -or-  \\n  \\n <code>style</code> is the <xref href=\\\"System.Globalization.NumberStyles.AllowHexSpecifier\\\"></xref> value.\"\n  - type: System.FormatException\n    commentId: T:System.FormatException\n    description: <code>s</code> is not in the correct format.\n  - type: System.OverflowException\n    commentId: T:System.OverflowException\n    description: <code>s</code> represents a number less than <xref href=\"System.Decimal.MinValue\"></xref> or greater than <xref href=\"System.Decimal.MaxValue\"></xref>\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Decimal.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Decimal.Parse(System.String,System.IFormatProvider)\n  commentId: M:System.Decimal.Parse(System.String,System.IFormatProvider)\n  id: Parse(System.String,System.IFormatProvider)\n  parent: System.Decimal\n  langs:\n  - csharp\n  name: Parse(String, IFormatProvider)\n  nameWithType: Decimal.Parse(String, IFormatProvider)\n  fullName: Decimal.Parse(String, IFormatProvider)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Converts the string representation of a number to its <xref href=\"System.Decimal\"></xref> equivalent using the specified culture-specific format information.\n  remarks: \"This overload of the <xref:System.Decimal.Parse%28System.String%2CSystem.IFormatProvider%29> method is commonly used to convert text that can be formatted in a variety of ways to a <xref:System.Decimal> value. For example, it can be used to convert the text entered by a user into an HTML text box to a numeric value.  \\n  \\n The `s` parameter contains a number of the form:  \\n  \\n [ws][sign][digits,]digits[.fractional-digits][ws]  \\n  \\n Elements in square brackets ([ and ]) are optional. The following table describes each element.  \\n  \\n|Element|Description|  \\n|-------------|-----------------|  \\n|*ws*|Optional white space.|  \\n|*sign*|An optional sign.|  \\n|*digits*|A sequence of digits ranging from 0 to 9.|  \\n|*,*|A culture-specific thousands separator symbol.|  \\n|*.*|A culture-specific decimal point symbol.|  \\n|*fractional-digits*|A sequence of digits ranging from 0 to 9.|  \\n  \\n The `s` parameter is interpreted using the <xref:System.Globalization.NumberStyles?displayProperty=fullName> style. This means that white space and thousands separators are allowed but currency symbols are not. To explicitly define the elements (such as currency symbols, thousands separators, and white space) that can be present in `s`, use the <xref:System.Decimal.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=fullName> method.  \\n  \\n The `provider` parameter is an <xref:System.IFormatProvider> implementation, such as a <xref:System.Globalization.NumberFormatInfo> or <xref:System.Globalization.CultureInfo> object. The `provider` parameter supplies culture-specific information used in parsing. If `provider` is `null`, the thread current culture is used.  \\n  \\n A <xref:System.Decimal> object has 29 digits of precision. If `s` represents a number that has more than 29 digits, but has a fractional part and is within the range of <xref:System.Decimal.MaxValue> and <xref:System.Decimal.MinValue>, the number is rounded, not truncated, to 29 digits using rounding to nearest.  \\n  \\n If a separator is encountered in the `s` parameter during a parse operation, and the applicable currency or number decimal and group separators are the same, the parse operation assumes that the separator is a decimal separator rather than a group separator. For more information about separators, see <xref:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator%2A>, <xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator%2A>, <xref:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator%2A>, and <xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A>.\"\n  example:\n  - \"The following example is the button click event handler of a Web form. It uses the array returned by the <xref:System.Web.HttpRequest.UserLanguages%2A?displayProperty=fullName> property to determine the user's locale. It then instantiates a <xref:System.Globalization.CultureInfo> object that corresponds to that locale. The <xref:System.Globalization.NumberFormatInfo> object that belongs to that <xref:System.Globalization.CultureInfo> object is then passed to the <xref:System.Decimal.Parse%28System.String%2CSystem.IFormatProvider%29> method to convert the user's input to a <xref:System.Decimal> value.  \\n  \\n [!code-csharp[ParseMethod#3](~/samples/snippets/csharp/VS_Snippets_CLR/ParseMethod/cs/Default.aspx.cs#3)]\\n [!code-vb[ParseMethod#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/ParseMethod/vb/Default.aspx.vb#3)]\"\n  syntax:\n    content: public static decimal Parse (string s, IFormatProvider provider);\n    parameters:\n    - id: s\n      type: System.String\n      description: The string representation of the number to convert.\n    - id: provider\n      type: System.IFormatProvider\n      description: An <xref href=\"System.IFormatProvider\"></xref> that supplies culture-specific parsing information about <code>s</code>.\n    return:\n      type: System.Decimal\n      description: The <xref href=\"System.Decimal\"></xref> number equivalent to the number contained in <code>s</code> as specified by <code>provider</code>.\n  overload: System.Decimal.Parse*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>s</code> is `null`.\n  - type: System.FormatException\n    commentId: T:System.FormatException\n    description: <code>s</code> is not of the correct format\n  - type: System.OverflowException\n    commentId: T:System.OverflowException\n    description: <code>s</code> represents a number less than <xref href=\"System.Decimal.MinValue\"></xref> or greater than <xref href=\"System.Decimal.MaxValue\"></xref>\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Decimal.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Decimal.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)\n  commentId: M:System.Decimal.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)\n  id: Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)\n  parent: System.Decimal\n  langs:\n  - csharp\n  name: Parse(String, NumberStyles, IFormatProvider)\n  nameWithType: Decimal.Parse(String, NumberStyles, IFormatProvider)\n  fullName: Decimal.Parse(String, NumberStyles, IFormatProvider)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Converts the string representation of a number to its <xref href=\"System.Decimal\"></xref> equivalent using the specified style and culture-specific format.\n  remarks: \"The `style` parameter defines the allowable format of the `s` parameter for the parse operation to succeed. It must be a combination of bit flags from the <xref:System.Globalization.NumberStyles> enumeration. The following <xref:System.Globalization.NumberStyles> members are not supported:  \\n  \\n-   <xref:System.Globalization.NumberStyles?displayProperty=fullName>  \\n  \\n-   <xref:System.Globalization.NumberStyles.HexNumber>  \\n  \\n Depending on the value of `style`, the `s` parameter may include the following elements:  \\n  \\n [ws][$][sign][digits,]digits[.fractional-digits][e[sign]digits][ws]  \\n  \\n Elements in square brackets ([ and ]) are optional. The following table describes each element.  \\n  \\n|Element|Description|  \\n|-------------|-----------------|  \\n|*$*|A culture-specific currency symbol. Its position in the string is defined by the <xref:System.Globalization.NumberFormatInfo.CurrencyNegativePattern%2A> and <xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A> properties of the <xref:System.Globalization.NumberFormatInfo> object returned by the <xref:System.IFormatProvider.GetFormat%2A> method of the `provider` parameter. The currency symbol can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles?displayProperty=fullName> flag.|  \\n|*ws*|Optional white space. White space can appear at the beginning of `s` if `style` includes the <xref:System.Globalization.NumberStyles?displayProperty=fullName> flag, and it can appear at the end of `s` if `style` includes the <xref:System.Globalization.NumberStyles?displayProperty=fullName> flag.|  \\n|*sign*|An optional sign. The sign can appear at the beginning of `s` if `style` includes the <xref:System.Globalization.NumberStyles?displayProperty=fullName> flag, and it can appear at the end of `s` if `style` includes the <xref:System.Globalization.NumberStyles?displayProperty=fullName> flag. Parentheses can be used in `s` to indicate a negative value if `style` includes the <xref:System.Globalization.NumberStyles?displayProperty=fullName> flag.|  \\n|*digits*|A sequence of digits ranging from 0 to 9.|  \\n|*,*|A culture-specific thousands separator symbol. The thousands separator of the culture defined by `provider` can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles?displayProperty=fullName> flag.|  \\n|*.*|A culture-specific decimal point symbol. The decimal point symbol of the culture defined by `provider` can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles?displayProperty=fullName> flag.|  \\n|*fractional-digits*|A sequence of digits ranging from 0 to 9. Fractional digits can appear in `s` only if `style` includes the <xref:System.Globalization.NumberStyles?displayProperty=fullName> flag.|  \\n|*e*|The 'e' or 'E' character, which indicates that the value is represented in exponential notation. The `s` parameter can represent a number in exponential notation if `style` includes the <xref:System.Globalization.NumberStyles?displayProperty=fullName> flag.|  \\n  \\n A string with digits only (which corresponds to the <xref:System.Globalization.NumberStyles.None> style) always parses successfully. The remaining <xref:System.Globalization.NumberStyles> members control elements that may be but are not required to be present in the input string. The following table indicates how individual <xref:System.Globalization.NumberStyles> members affect the elements that may be present in `s`.  \\n  \\n|NumberStyles value|Elements permitted in s in addition to digits|  \\n|------------------------|---------------------------------------------------|  \\n|<xref:System.Globalization.NumberStyles.None>|The *digits* element only.|  \\n|<xref:System.Globalization.NumberStyles.AllowDecimalPoint>|The *.* and *fractional-digits* elements.|  \\n|<xref:System.Globalization.NumberStyles.AllowExponent>|The `s` parameter can also use exponential notation.  This flag supports values in the form *digits*E*digits*; additional flags are needed to successfully parse strings with elements such as positive or negative signs and decimal point symbols.|  \\n|<xref:System.Globalization.NumberStyles.AllowLeadingWhite>|The *ws* element at the beginning of `s`.|  \\n|<xref:System.Globalization.NumberStyles.AllowTrailingWhite>|The *ws* element at the end of `s`.|  \\n|<xref:System.Globalization.NumberStyles.AllowLeadingSign>|The *sign* element at the beginning of `s`.|  \\n|<xref:System.Globalization.NumberStyles.AllowTrailingSign>|The *sign* element at the end of `s`.|  \\n|<xref:System.Globalization.NumberStyles.AllowParentheses>|The *sign* element in the form of parentheses enclosing the numeric value.|  \\n|<xref:System.Globalization.NumberStyles.AllowThousands>|The *,* element.|  \\n|<xref:System.Globalization.NumberStyles.AllowCurrencySymbol>|The *$* element.|  \\n|<xref:System.Globalization.NumberStyles.Currency>|All. The `s` parameter cannot represent a hexadecimal number or a number in exponential notation.|  \\n|<xref:System.Globalization.NumberStyles.Float>|The *ws* element at the beginning or end of `s`, *sign* at the beginning of `s`, and the *.*symbol. The `s` parameter can also use exponential notation.|  \\n|<xref:System.Globalization.NumberStyles.Number>|The `ws`, `sign`, *,*, and *.* elements.|  \\n|<xref:System.Globalization.NumberStyles.Any>|All styles, except `s` cannot represent a hexadecimal number.|  \\n  \\n The `provider` parameter is an <xref:System.IFormatProvider> implementation, such as a <xref:System.Globalization.NumberFormatInfo> or <xref:System.Globalization.CultureInfo> object. The `provider` parameter supplies culture-specific information used in parsing. If `provider` is `null`, the thread current culture is used.  \\n  \\n A <xref:System.Decimal> object has 29 digits of precision. If `s` represents a number that has more than 29 digits, but has a fractional part and is within the range of <xref:System.Decimal.MaxValue> and <xref:System.Decimal.MinValue>, the number is rounded, not truncated, to 29 digits using rounding to nearest.  \\n  \\n If a separator is encountered in the `s` parameter during a parse operation, and the applicable currency or number decimal and group separators are the same, the parse operation assumes that the separator is a decimal separator rather than a group separator. For more information about separators, see <xref:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator%2A>, <xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator%2A>, <xref:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator%2A>, and <xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A>.\"\n  example:\n  - \"The following example uses a variety of `style` and `provider` parameters to parse the string representations of <xref:System.Decimal> values.  \\n  \\n [!code-csharp[System.Decimal.Parse#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Decimal.Parse/CS/parse.cs#3)]\\n [!code-vb[System.Decimal.Parse#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Decimal.Parse/VB/parse.vb#3)]\"\n  syntax:\n    content: public static decimal Parse (string s, System.Globalization.NumberStyles style, IFormatProvider provider);\n    parameters:\n    - id: s\n      type: System.String\n      description: The string representation of the number to convert.\n    - id: style\n      type: System.Globalization.NumberStyles\n      description: A bitwise combination of <xref href=\"System.Globalization.NumberStyles\"></xref> values that indicates the style elements that can be present in <code>s</code>. A typical value to specify is <xref href=\"System.Globalization.NumberStyles.Number\"></xref>.\n    - id: provider\n      type: System.IFormatProvider\n      description: An <xref href=\"System.IFormatProvider\"></xref> object that supplies culture-specific information about the format of <code>s</code>.\n    return:\n      type: System.Decimal\n      description: The <xref href=\"System.Decimal\"></xref> number equivalent to the number contained in <code>s</code> as specified by <code>style</code> and <code>provider</code>.\n  overload: System.Decimal.Parse*\n  exceptions:\n  - type: System.FormatException\n    commentId: T:System.FormatException\n    description: <code>s</code> is not in the correct format.\n  - type: System.OverflowException\n    commentId: T:System.OverflowException\n    description: <code>s</code> represents a number less than <xref href=\"System.Decimal.MinValue\"></xref> or greater than <xref href=\"System.Decimal.MaxValue\"></xref>.\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>s</code> is `null`.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"<code>style</code> is not a <xref href=\\\"System.Globalization.NumberStyles\\\"></xref> value.  \\n  \\n -or-  \\n  \\n <code>style</code> is the <xref href=\\\"System.Globalization.NumberStyles.AllowHexSpecifier\\\"></xref> value.\"\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Decimal.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Decimal.Remainder(System.Decimal,System.Decimal)\n  commentId: M:System.Decimal.Remainder(System.Decimal,System.Decimal)\n  id: Remainder(System.Decimal,System.Decimal)\n  parent: System.Decimal\n  langs:\n  - csharp\n  name: Remainder(Decimal, Decimal)\n  nameWithType: Decimal.Remainder(Decimal, Decimal)\n  fullName: Decimal.Remainder(Decimal, Decimal)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Computes the remainder after dividing two <xref href=\"System.Decimal\"></xref> values.\n  remarks: ''\n  example:\n  - \"The following example uses the <xref:System.Decimal.Remainder%2A> method to calculate the remainder in a series of division operations.  \\n  \\n [!code-csharp[System.Decimal.Remainder#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.decimal.remainder/cs/remainder.cs#1)]\\n [!code-vb[System.Decimal.Remainder#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.remainder/vb/remainder.vb#1)]\"\n  syntax:\n    content: public static decimal Remainder (decimal d1, decimal d2);\n    parameters:\n    - id: d1\n      type: System.Decimal\n      description: The dividend.\n    - id: d2\n      type: System.Decimal\n      description: The divisor.\n    return:\n      type: System.Decimal\n      description: The remainder after dividing <code>d1</code> by <code>d2</code>.\n  overload: System.Decimal.Remainder*\n  exceptions:\n  - type: System.DivideByZeroException\n    commentId: T:System.DivideByZeroException\n    description: <code>d2</code> is zero.\n  - type: System.OverflowException\n    commentId: T:System.OverflowException\n    description: The return value is less than <xref href=\"System.Decimal.MinValue\"></xref> or greater than <xref href=\"System.Decimal.MaxValue\"></xref>.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Decimal.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Decimal.Round(System.Decimal,System.Int32,System.MidpointRounding)\n  commentId: M:System.Decimal.Round(System.Decimal,System.Int32,System.MidpointRounding)\n  id: Round(System.Decimal,System.Int32,System.MidpointRounding)\n  parent: System.Decimal\n  langs:\n  - csharp\n  name: Round(Decimal, Int32, MidpointRounding)\n  nameWithType: Decimal.Round(Decimal, Int32, MidpointRounding)\n  fullName: Decimal.Round(Decimal, Int32, MidpointRounding)\n  type: Method\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System\n  summary: Rounds a decimal value to a specified precision. A parameter specifies how to round the value if it is midway between two other numbers.\n  remarks: \"The `decimals` parameter specifies the number of significant decimal places in the return value and ranges from 0 to 28. If `decimals` is zero, an integer is returned.  \\n  \\n In a midpoint value, the value after the least significant digit in the result is precisely half way between two numbers. For example, 3.47500 is a midpoint value if it is to be rounded two decimal places, and 7.500 is a midpoint value if it is to be rounded to an integer. In these cases, the nearest value can't be easily identified without a rounding convention, which is specified by the `mode` argument. The <xref:System.Decimal.Round%28System.Decimal%2CSystem.Int32%2CSystem.MidpointRounding%29> method supports two rounding conventions for handling midpoint values.  \\n  \\n Rounding away from zero.  \\n Midpoint values are rounded to the next number away from zero. For example, 3.75 rounds to 3.8, 3.85 rounds to 3.9, -3.75 rounds to -3.8, and -3.85 rounds to -3.9. This form of rounding is represented by the <xref:System.MidpointRounding?displayProperty=fullName> enumeration member.  \\n  \\n Rounding away from zero is the most widely known form of rounding.  \\n  \\n Rounding to even, or banker's rounding  \\n Midpoint values are rounded to the nearest even number. For example, both 3.75 and 3.85 round to 3.8, and both -3.75 and -3.85 round to -3.8. This form of rounding is represented by the <xref:System.MidpointRounding?displayProperty=fullName> enumeration member.  \\n  \\n Rounding to nearest is the standard form of rounding used in financial and statistical operations. It conforms to IEEE Standard 754, section 4. When used in multiple rounding operations, it reduces the rounding error that is caused by consistently rounding midpoint values in a single direction. In some cases, this rounding error can be significant.\"\n  example:\n  - \"The following example demonstrates how to use the <xref:System.Math.Round%28System.Decimal%2CSystem.Int32%2CSystem.MidpointRounding%29> method with the <xref:System.MidpointRounding> enumeration.  \\n  \\n [!code-cpp[math.midpointrounding#1](~/samples/snippets/cpp/VS_Snippets_CLR/math.midpointrounding/cpp/mpr.cpp#1)]\\n [!code-csharp[math.midpointrounding#1](~/samples/snippets/csharp/VS_Snippets_CLR/math.midpointrounding/CS/mpr.cs#1)]\\n [!code-vb[math.midpointrounding#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/math.midpointrounding/VB/mpr.vb#1)]\"\n  syntax:\n    content: public static decimal Round (decimal d, int decimals, MidpointRounding mode);\n    parameters:\n    - id: d\n      type: System.Decimal\n      description: A decimal number to round.\n    - id: decimals\n      type: System.Int32\n      description: The number of significant decimal places (precision) in the return value.\n    - id: mode\n      type: System.MidpointRounding\n      description: A value that specifies how to round <code>d</code> if it is midway between two other numbers.\n    return:\n      type: System.Decimal\n      description: The number that is nearest to the <code>d</code> parameter with a precision equal to the <code>decimals</code> parameter. If <code>d</code> is halfway between two numbers, one of which is even and the other odd, the <code>mode</code> parameter determines which of the two numbers is returned. If the precision of <code>d</code> is less than <code>decimals</code>, <code>d</code> is returned unchanged.\n  overload: System.Decimal.Round*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: <code>decimals</code> is less than 0 or greater than 28.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>mode</code> is not a <xref href=\"System.MidpointRounding\"></xref> value.\n  - type: System.OverflowException\n    commentId: T:System.OverflowException\n    description: The result is outside the range of a <xref href=\"System.Decimal\"></xref> object.\n  attributes: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Decimal.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Decimal.Round(System.Decimal,System.MidpointRounding)\n  commentId: M:System.Decimal.Round(System.Decimal,System.MidpointRounding)\n  id: Round(System.Decimal,System.MidpointRounding)\n  parent: System.Decimal\n  langs:\n  - csharp\n  name: Round(Decimal, MidpointRounding)\n  nameWithType: Decimal.Round(Decimal, MidpointRounding)\n  fullName: Decimal.Round(Decimal, MidpointRounding)\n  type: Method\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System\n  summary: Rounds a decimal value to the nearest integer. A parameter specifies how to round the value if it is midway between two other numbers.\n  remarks: \"In a midpoint value, the value after the least significant digit in the result is precisely half way between two numbers. For example, 7.5 is a midpoint value if it is to be rounded to an integer. For midpoint values, the nearest value can't be easily identified without a rounding convention, which is specified by the `mode` argument. The <xref:System.Decimal.Round%2A> method supports two rounding conventions for handling midpoint values.  \\n  \\n Rounding away from zero.  \\n Midpoint values are rounded to the next number away from zero. For example, 3.5 rounds to 4, 4.5 rounds to 5, -3.5 rounds to -4, and -4.5 rounds to -5. This form of rounding is represented by the <xref:System.MidpointRounding?displayProperty=fullName> enumeration member.  \\n  \\n Rounding away from zero is the most widely known form of rounding.  \\n  \\n Rounding to even, or banker's rounding  \\n Midpoint values are rounded to the nearest even number. For example, both 3.5 and 4.5 round to 4, and both -3.5 and -4.5 round to -4. This form of rounding is represented by the <xref:System.MidpointRounding?displayProperty=fullName> enumeration member.  \\n  \\n Rounding to nearest is the standard form of rounding used in financial and statistical operations. It conforms to IEEE Standard 754, section 4. When used in multiple rounding operations, it reduces the rounding error that is caused by consistently rounding midpoint values in a single direction. In some cases, this rounding error can be significant.\"\n  example:\n  - \"The following example displays values returned by the <xref:System.Math.Round%28System.Decimal%29> method, the <xref:System.Math.Round%28System.Decimal%2CSystem.MidpointRounding%29> method with a `mode` argument of <xref:System.MidpointRounding.ToEven>, and the <xref:System.Math.Round%28System.Decimal%2CSystem.MidpointRounding%29> method with a `mode` argument of <xref:System.MidpointRounding.AwayFromZero>.  \\n  \\n [!code-csharp[System.Math.Round.Overload#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.math.round.overload/cs/midpoint1.cs#5)]\\n [!code-vb[System.Math.Round.Overload#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.math.round.overload/vb/midpoint1.vb#5)]\"\n  syntax:\n    content: public static decimal Round (decimal d, MidpointRounding mode);\n    parameters:\n    - id: d\n      type: System.Decimal\n      description: A decimal number to round.\n    - id: mode\n      type: System.MidpointRounding\n      description: A value that specifies how to round <code>d</code> if it is midway between two other numbers.\n    return:\n      type: System.Decimal\n      description: The integer that is nearest to the <code>d</code> parameter. If <code>d</code> is halfway between two numbers, one of which is even and the other odd, the <code>mode</code> parameter determines which of the two numbers is returned.\n  overload: System.Decimal.Round*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>mode</code> is not a <xref href=\"System.MidpointRounding\"></xref> value.\n  - type: System.OverflowException\n    commentId: T:System.OverflowException\n    description: The result is outside the range of a <xref href=\"System.Decimal\"></xref> object.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Decimal.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Decimal.Round(System.Decimal)\n  commentId: M:System.Decimal.Round(System.Decimal)\n  id: Round(System.Decimal)\n  parent: System.Decimal\n  langs:\n  - csharp\n  name: Round(Decimal)\n  nameWithType: Decimal.Round(Decimal)\n  fullName: Decimal.Round(Decimal)\n  type: Method\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System\n  summary: Rounds a decimal value to the nearest integer.\n  remarks: The behavior of this method follows IEEE Standard 754, section 4. This kind of rounding is sometimes called *round half to even* or *banker's rounding*. It minimizes rounding errors that result from consistently rounding a midpoint value in a single direction. It is equivalent to calling the <xref:System.Decimal.Round%28System.Decimal%2CSystem.MidpointRounding%29> method with a `mode` argument of <xref:System.MidpointRounding?displayProperty=fullName>.\n  example:\n  - \"The following example rounds a range of <xref:System.Decimal> values between 100 and 102 to the nearest integer. Because the method uses banker's rounding, note that 100.5 rounds to 100 and 101.5 rounds to 102.  \\n  \\n [!code-csharp[System.Decimal.Round#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Decimal.Round/cs/Round1.cs#1)]\\n [!code-vb[System.Decimal.Round#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Decimal.Round/vb/Round1.vb#1)]\"\n  syntax:\n    content: public static decimal Round (decimal d);\n    parameters:\n    - id: d\n      type: System.Decimal\n      description: A decimal number to round.\n    return:\n      type: System.Decimal\n      description: The integer that is nearest to the <code>d</code> parameter. If <code>d</code> is halfway between two integers, one of which is even and the other odd, the even number is returned.\n  overload: System.Decimal.Round*\n  exceptions:\n  - type: System.OverflowException\n    commentId: T:System.OverflowException\n    description: The result is outside the range of a <xref href=\"System.Decimal\"></xref> value.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Decimal.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Decimal.Round(System.Decimal,System.Int32)\n  commentId: M:System.Decimal.Round(System.Decimal,System.Int32)\n  id: Round(System.Decimal,System.Int32)\n  parent: System.Decimal\n  langs:\n  - csharp\n  name: Round(Decimal, Int32)\n  nameWithType: Decimal.Round(Decimal, Int32)\n  fullName: Decimal.Round(Decimal, Int32)\n  type: Method\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System\n  summary: Rounds a <xref href=\"System.Decimal\"></xref> value to a specified number of decimal places.\n  remarks: This method is equivalent to calling the <xref:System.Decimal.Round%28System.Decimal%2CSystem.Int32%2CSystem.MidpointRounding%29> method with a `mode` argument of <xref:System.MidpointRounding?displayProperty=fullName>.When `d` is exactly halfway between two rounded values, the result is the rounded value that has an even digit in the far right decimal position. For example, when rounded to two decimals, the value 2.345 becomes 2.34 and the value 2.355 becomes 2.36. This process is known as *rounding toward even*, or *banker's rounding*. It minimizes rounding errors that result from consistently rounding a midpoint value in a single direction.\n  example:\n  - \"The following example rounds several `Decimal` values to a specified number of decimal places using the `Round` method.  \\n  \\n [!code-csharp[System.Decimal.Round#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Decimal.Round/cs/Round12.cs#12)]\\n [!code-vb[System.Decimal.Round#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Decimal.Round/vb/Round12.vb#12)]\"\n  syntax:\n    content: public static decimal Round (decimal d, int decimals);\n    parameters:\n    - id: d\n      type: System.Decimal\n      description: A decimal number to round.\n    - id: decimals\n      type: System.Int32\n      description: A value from 0 to 28 that specifies the number of decimal places to round to.\n    return:\n      type: System.Decimal\n      description: The decimal number equivalent to <code>d</code> rounded to <code>decimals</code> number of decimal places.\n  overload: System.Decimal.Round*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: <code>decimals</code> is not a value from 0 to 28.\n  attributes: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Decimal.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Decimal.Subtract(System.Decimal,System.Decimal)\n  commentId: M:System.Decimal.Subtract(System.Decimal,System.Decimal)\n  id: Subtract(System.Decimal,System.Decimal)\n  parent: System.Decimal\n  langs:\n  - csharp\n  name: Subtract(Decimal, Decimal)\n  nameWithType: Decimal.Subtract(Decimal, Decimal)\n  fullName: Decimal.Subtract(Decimal, Decimal)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Subtracts one specified <xref href=\"System.Decimal\"></xref> value from another.\n  remarks: ''\n  example:\n  - \"The following example illustrates the use of `Subtract`.  \\n  \\n [!code-cpp[Decimal Example#4](~/samples/snippets/cpp/VS_Snippets_CLR/Decimal Example/CPP/source.cpp#4)]\\n [!code-csharp[Decimal Example#4](~/samples/snippets/csharp/VS_Snippets_CLR/Decimal Example/CS/source.cs#4)]\\n [!code-vb[Decimal Example#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/Decimal Example/VB/source.vb#4)]\"\n  syntax:\n    content: public static decimal Subtract (decimal d1, decimal d2);\n    parameters:\n    - id: d1\n      type: System.Decimal\n      description: The minuend.\n    - id: d2\n      type: System.Decimal\n      description: The subtrahend.\n    return:\n      type: System.Decimal\n      description: The result of subtracting <code>d2</code> from <code>d1</code>.\n  overload: System.Decimal.Subtract*\n  exceptions:\n  - type: System.OverflowException\n    commentId: T:System.OverflowException\n    description: The return value is less than <xref href=\"System.Decimal.MinValue\"></xref> or greater than <xref href=\"System.Decimal.MaxValue\"></xref>.\n  attributes: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Decimal.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Decimal.ToByte(System.Decimal)\n  commentId: M:System.Decimal.ToByte(System.Decimal)\n  id: ToByte(System.Decimal)\n  parent: System.Decimal\n  langs:\n  - csharp\n  name: ToByte(Decimal)\n  nameWithType: Decimal.ToByte(Decimal)\n  fullName: Decimal.ToByte(Decimal)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Converts the value of the specified <xref href=\"System.Decimal\"></xref> to the equivalent 8-bit unsigned integer.\n  remarks: \"Parameter `value` is rounded to the nearest integer value toward zero, and that result is returned.  \\n  \\n You can also convert a <xref:System.Decimal> value to an 8-bit unsigned integer by using the <xref:System.Decimal.op_Explicit%2A> assignment operator. Because the operator performs a narrowing conversion, you must use a casting operator in C# or a conversion function in Visual Basic.\"\n  example:\n  - \"The following example uses the <xref:System.Decimal.ToByte%2A> method to convert decimal numbers to <xref:System.Byte> values.  \\n  \\n [!code-csharp[System.Decimal.ToByte#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.decimal.tobyte/cs/tobyte_1.cs#1)]\\n [!code-vb[System.Decimal.ToByte#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.tobyte/vb/tobyte_1.vb#1)]\"\n  syntax:\n    content: public static byte ToByte (decimal value);\n    parameters:\n    - id: value\n      type: System.Decimal\n      description: The decimal number to convert.\n    return:\n      type: System.Byte\n      description: An 8-bit unsigned integer equivalent to <code>value</code>.\n  overload: System.Decimal.ToByte*\n  exceptions:\n  - type: System.OverflowException\n    commentId: T:System.OverflowException\n    description: <code>value</code> is less than <xref href=\"System.Byte.MinValue\"></xref> or greater than <xref href=\"System.Byte.MaxValue\"></xref>.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Decimal.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Decimal.ToDouble(System.Decimal)\n  commentId: M:System.Decimal.ToDouble(System.Decimal)\n  id: ToDouble(System.Decimal)\n  parent: System.Decimal\n  langs:\n  - csharp\n  name: ToDouble(Decimal)\n  nameWithType: Decimal.ToDouble(Decimal)\n  fullName: Decimal.ToDouble(Decimal)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Converts the value of the specified <xref href=\"System.Decimal\"></xref> to the equivalent double-precision floating-point number.\n  remarks: \"This operation can produce round-off errors because a double-precision floating-point number has fewer significant digits than a <xref:System.Decimal>.  \\n  \\n You can also convert a <xref:System.Decimal> to a <xref:System.Double> value by using the <xref:System.Decimal.op_Explicit%2A> assignment operator. Because the conversion can entail a loss of precision, you must use a casting operator in C# or a conversion function in Visual Basic.\"\n  example:\n  - \"The following code example converts `Decimal` numbers to <xref:System.Double> values using `ToDouble` method.  \\n  \\n [!code-cpp[System.Decimal.ToXXX#5](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Decimal.ToXXX/CPP/tosgl_dbl.cpp#5)]\\n [!code-csharp[System.Decimal.ToXXX#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Decimal.ToXXX/CS/tosgl_dbl.cs#5)]\\n [!code-vb[System.Decimal.ToXXX#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Decimal.ToXXX/VB/tosgl_dbl.vb#5)]\"\n  syntax:\n    content: public static double ToDouble (decimal d);\n    parameters:\n    - id: d\n      type: System.Decimal\n      description: The decimal number to convert.\n    return:\n      type: System.Double\n      description: A double-precision floating-point number equivalent to <code>d</code>.\n  overload: System.Decimal.ToDouble*\n  exceptions: []\n  attributes: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Decimal.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Decimal.ToInt16(System.Decimal)\n  commentId: M:System.Decimal.ToInt16(System.Decimal)\n  id: ToInt16(System.Decimal)\n  parent: System.Decimal\n  langs:\n  - csharp\n  name: ToInt16(Decimal)\n  nameWithType: Decimal.ToInt16(Decimal)\n  fullName: Decimal.ToInt16(Decimal)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Converts the value of the specified <xref href=\"System.Decimal\"></xref> to the equivalent 16-bit signed integer.\n  remarks: You can also convert a <xref:System.Decimal> value to a 16-bit integer by using the <xref:System.Decimal.op_Explicit%2A> assignment operator. Because the operator performs a narrowing conversion, you must use a casting operator in C# or a conversion function in Visual Basic.\n  example:\n  - \"The following example uses the <xref:System.Decimal.ToInt16%2A> method to convert decimal numbers to <xref:System.Int16> values.  \\n  \\n [!code-csharp[System.Decimal.ToInt16#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.decimal.toint16/cs/toint16_1.cs#1)]\\n [!code-vb[System.Decimal.ToInt16#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.toint16/vb/toint16_1.vb#1)]\"\n  syntax:\n    content: public static short ToInt16 (decimal value);\n    parameters:\n    - id: value\n      type: System.Decimal\n      description: The decimal number to convert.\n    return:\n      type: System.Int16\n      description: A 16-bit signed integer equivalent to <code>value</code>.\n  overload: System.Decimal.ToInt16*\n  exceptions:\n  - type: System.OverflowException\n    commentId: T:System.OverflowException\n    description: <code>value</code> is less than <xref href=\"System.Int16.MinValue\"></xref> or greater than <xref href=\"System.Int16.MaxValue\"></xref>.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Decimal.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Decimal.ToInt32(System.Decimal)\n  commentId: M:System.Decimal.ToInt32(System.Decimal)\n  id: ToInt32(System.Decimal)\n  parent: System.Decimal\n  langs:\n  - csharp\n  name: ToInt32(Decimal)\n  nameWithType: Decimal.ToInt32(Decimal)\n  fullName: Decimal.ToInt32(Decimal)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Converts the value of the specified <xref href=\"System.Decimal\"></xref> to the equivalent 32-bit signed integer.\n  remarks: \"The return value is the integral part of the decimal value; fractional digits are truncated.  \\n  \\n You can also convert a <xref:System.Decimal> value to a 32-bit integer by using the <xref:System.Decimal.op_Explicit%2A> assignment operator. Because the operator performs a narrowing conversion, you must use a casting operator in C# or a conversion function in Visual Basic.\"\n  example:\n  - \"The following example uses the <xref:System.Decimal.ToInt32%2A> method to convert decimal numbers to <xref:System.Int32> values.  \\n  \\n [!code-csharp[System.Decimal.ToInt32#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.decimal.toint32/cs/toint32_1.cs#1)]\\n [!code-vb[System.Decimal.ToInt32#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.toint32/vb/toint32_1.vb#1)]\"\n  syntax:\n    content: public static int ToInt32 (decimal d);\n    parameters:\n    - id: d\n      type: System.Decimal\n      description: The decimal number to convert.\n    return:\n      type: System.Int32\n      description: A 32-bit signed integer equivalent to the value of <code>d</code>.\n  overload: System.Decimal.ToInt32*\n  exceptions:\n  - type: System.OverflowException\n    commentId: T:System.OverflowException\n    description: <code>d</code> is less than <xref href=\"System.Int32.MinValue\"></xref> or greater than <xref href=\"System.Int32.MaxValue\"></xref>.\n  attributes: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Decimal.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Decimal.ToInt64(System.Decimal)\n  commentId: M:System.Decimal.ToInt64(System.Decimal)\n  id: ToInt64(System.Decimal)\n  parent: System.Decimal\n  langs:\n  - csharp\n  name: ToInt64(Decimal)\n  nameWithType: Decimal.ToInt64(Decimal)\n  fullName: Decimal.ToInt64(Decimal)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Converts the value of the specified <xref href=\"System.Decimal\"></xref> to the equivalent 64-bit signed integer.\n  remarks: \"The return value is the integral part of the decimal value; fractional digits are truncated.  \\n  \\n You can also convert a <xref:System.Decimal> value to a 64-bit integer by using the <xref:System.Decimal.op_Explicit%2A> assignment operator. Because the operator performs a narrowing conversion, you must use a casting operator in C# or a conversion function in Visual Basic.\"\n  example:\n  - \"The following example uses the <xref:System.Decimal.ToInt64%2A> method to convert decimal numbers to <xref:System.Int64> values.  \\n  \\n [!code-csharp[System.Decimal.ToInt64#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.decimal.toint64/cs/toint64_1.cs#1)]\\n [!code-vb[System.Decimal.ToInt64#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.toint64/vb/toint64_1.vb#1)]\"\n  syntax:\n    content: public static long ToInt64 (decimal d);\n    parameters:\n    - id: d\n      type: System.Decimal\n      description: The decimal number to convert.\n    return:\n      type: System.Int64\n      description: A 64-bit signed integer equivalent to the value of <code>d</code>.\n  overload: System.Decimal.ToInt64*\n  exceptions:\n  - type: System.OverflowException\n    commentId: T:System.OverflowException\n    description: <code>d</code> is less than <xref href=\"System.Int64.MinValue\"></xref> or greater than <xref href=\"System.Int64.MaxValue\"></xref>.\n  attributes: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Decimal.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Decimal.ToOACurrency(System.Decimal)\n  commentId: M:System.Decimal.ToOACurrency(System.Decimal)\n  id: ToOACurrency(System.Decimal)\n  parent: System.Decimal\n  langs:\n  - csharp\n  name: ToOACurrency(Decimal)\n  nameWithType: Decimal.ToOACurrency(Decimal)\n  fullName: Decimal.ToOACurrency(Decimal)\n  type: Method\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System\n  summary: Converts the specified <xref href=\"System.Decimal\"></xref> value to the equivalent OLE Automation Currency value, which is contained in a 64-bit signed integer.\n  remarks: ''\n  example:\n  - \"The following code example uses the `ToOACurrency` method to convert `Decimal` numbers to the equivalent OLE Automation Currency values that are contained in <xref:System.Int64> fields.  \\n  \\n [!code-cpp[System.Decimal.OACurrency#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Decimal.OACurrency/CPP/tooacurrency.cpp#1)]\\n [!code-csharp[System.Decimal.OACurrency#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Decimal.OACurrency/CS/tooacurrency.cs#1)]\\n [!code-vb[System.Decimal.OACurrency#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Decimal.OACurrency/VB/tooacurrency.vb#1)]\"\n  syntax:\n    content: public static long ToOACurrency (decimal value);\n    parameters:\n    - id: value\n      type: System.Decimal\n      description: The decimal number to convert.\n    return:\n      type: System.Int64\n      description: A 64-bit signed integer that contains the OLE Automation equivalent of <code>value</code>.\n  overload: System.Decimal.ToOACurrency*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Decimal.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Decimal.ToSByte(System.Decimal)\n  commentId: M:System.Decimal.ToSByte(System.Decimal)\n  id: ToSByte(System.Decimal)\n  parent: System.Decimal\n  langs:\n  - csharp\n  name: ToSByte(Decimal)\n  nameWithType: Decimal.ToSByte(Decimal)\n  fullName: Decimal.ToSByte(Decimal)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Converts the value of the specified <xref href=\"System.Decimal\"></xref> to the equivalent 8-bit signed integer.\n  remarks: You can also convert a <xref:System.Decimal> value to an 8-bit signed integer by using the <xref:System.Decimal.op_Explicit%2A> assignment operator. Because the operator performs a narrowing conversion, you must use a casting operator in C# or a conversion function in Visual Basic.\n  example:\n  - \"The following example uses the <xref:System.Decimal.ToSByte%2A> method to convert decimal numbers to <xref:System.SByte> values.  \\n  \\n [!code-csharp[System.Decimal.ToSByte#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.decimal.tosbyte/cs/tosbyte1.cs#1)]\\n [!code-vb[System.Decimal.ToSByte#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.tosbyte/vb/tosbyte1.vb#1)]\"\n  syntax:\n    content: >-\n      [System.CLSCompliant(false)]\n\n      public static sbyte ToSByte (decimal value);\n    parameters:\n    - id: value\n      type: System.Decimal\n      description: The decimal number to convert.\n    return:\n      type: System.SByte\n      description: An 8-bit signed integer equivalent to <code>value</code>.\n  overload: System.Decimal.ToSByte*\n  exceptions:\n  - type: System.OverflowException\n    commentId: T:System.OverflowException\n    description: <code>value</code> is less than <xref href=\"System.SByte.MinValue\"></xref> or greater than <xref href=\"System.SByte.MaxValue\"></xref>.\n  attributes:\n  - type: System.CLSCompliantAttribute\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  altCompliant: System.Decimal.ToInt16(System.Decimal)\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Decimal.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Decimal.ToSingle(System.Decimal)\n  commentId: M:System.Decimal.ToSingle(System.Decimal)\n  id: ToSingle(System.Decimal)\n  parent: System.Decimal\n  langs:\n  - csharp\n  name: ToSingle(Decimal)\n  nameWithType: Decimal.ToSingle(Decimal)\n  fullName: Decimal.ToSingle(Decimal)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Converts the value of the specified <xref href=\"System.Decimal\"></xref> to the equivalent single-precision floating-point number.\n  remarks: \"This operation can produce round-off errors because a single-precision floating-point number has fewer significant digits than a <xref:System.Decimal>.  \\n  \\n You can also convert a <xref:System.Decimal> to a <xref:System.Single> value by using the <xref:System.Decimal.op_Explicit%2A> assignment operator. Because the conversion can entail a loss of precision, you must use a casting operator in C# or a conversion function in Visual Basic.\"\n  example:\n  - \"The following code example converts `Decimal` numbers to <xref:System.Single> values using the `ToSingle` method.  \\n  \\n [!code-cpp[System.Decimal.ToXXX#5](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Decimal.ToXXX/CPP/tosgl_dbl.cpp#5)]\\n [!code-csharp[System.Decimal.ToXXX#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Decimal.ToXXX/CS/tosgl_dbl.cs#5)]\\n [!code-vb[System.Decimal.ToXXX#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Decimal.ToXXX/VB/tosgl_dbl.vb#5)]\"\n  syntax:\n    content: public static float ToSingle (decimal d);\n    parameters:\n    - id: d\n      type: System.Decimal\n      description: The decimal number to convert.\n    return:\n      type: System.Single\n      description: A single-precision floating-point number equivalent to the value of <code>d</code>.\n  overload: System.Decimal.ToSingle*\n  exceptions: []\n  attributes: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Decimal.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Decimal.ToString(System.String,System.IFormatProvider)\n  commentId: M:System.Decimal.ToString(System.String,System.IFormatProvider)\n  id: ToString(System.String,System.IFormatProvider)\n  parent: System.Decimal\n  langs:\n  - csharp\n  name: ToString(String, IFormatProvider)\n  nameWithType: Decimal.ToString(String, IFormatProvider)\n  fullName: Decimal.ToString(String, IFormatProvider)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Converts the numeric value of this instance to its equivalent string representation using the specified format and culture-specific format information.\n  remarks: \"The <xref:System.Double.ToString%28System.String%2CSystem.IFormatProvider%29> method formats a <xref:System.Double> value in a specified format of a specified culture. If you want to use default format or culture settings, use the other overloads of the <xref:System.Double.ToString%2A> method, as follows:  \\n  \\n|To use format|For culture|Use the overload|  \\n|-------------------|-----------------|----------------------|  \\n|Default (\\\"G\\\") format|Default (current) culture|<xref:System.Double.ToString>|  \\n|Default (\\\"G\\\") format|A specific culture|<xref:System.Double.ToString%28System.IFormatProvider%29>|  \\n|A specific format|Default (current) culture|<xref:System.Double.ToString%28System.String%29>|  \\n  \\n The `format` parameter can be any valid standard numeric format specifier except for D, R, and X, as well as any combination of custom numeric format specifiers. If `format` is `null` or an empty string, the return value for this instance is formatted with the general numeric format specifier (\\\"G\\\").  \\n  \\n The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics:  \\n  \\n-   For more information about numeric format specifiers, see [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) and [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md).  \\n  \\n-   For more information about formatting, see [Formatting Types](~/docs/standard/base-types/formatting-types.md).  \\n  \\n The `provider` parameter is an <xref:System.IFormatProvider> implementation whose <xref:System.IFormatProvider.GetFormat%2A?displayProperty=fullName> method returns a <xref:System.Globalization.NumberFormatInfo> object. Typically, `provider` is a <xref:System.Globalization.NumberFormatInfo> or <xref:System.Globalization.CultureInfo> object. The `provider` parameter supplies culture-specific information used in formatting. If `provider` is `null`, the thread current culture is used.\"\n  example:\n  - \"The following example displays a <xref:System.Decimal> value using each of the supported standard numeric format specifiers for several different cultures.  \\n  \\n [!code-csharp[System.Decimal.ToString#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Decimal.ToString/CS/ToString2.cs#5)]\\n [!code-vb[System.Decimal.ToString#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Decimal.ToString/VB/ToString2.vb#5)]\"\n  syntax:\n    content: public string ToString (string format, IFormatProvider provider);\n    parameters:\n    - id: format\n      type: System.String\n      description: A numeric format string.\n    - id: provider\n      type: System.IFormatProvider\n      description: An object that supplies culture-specific formatting information.\n    return:\n      type: System.String\n      description: The string representation of the value of this instance as specified by <code>format</code> and <code>provider</code>.\n  overload: System.Decimal.ToString*\n  exceptions:\n  - type: System.FormatException\n    commentId: T:System.FormatException\n    description: <code>format</code> is invalid.\n  attributes: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Decimal.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Decimal.ToString(System.IFormatProvider)\n  commentId: M:System.Decimal.ToString(System.IFormatProvider)\n  id: ToString(System.IFormatProvider)\n  parent: System.Decimal\n  langs:\n  - csharp\n  name: ToString(IFormatProvider)\n  nameWithType: Decimal.ToString(IFormatProvider)\n  fullName: Decimal.ToString(IFormatProvider)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Converts the numeric value of this instance to its equivalent string representation using the specified culture-specific format information.\n  remarks: \"The <xref:System.Decimal.ToString%28System.IFormatProvider%29> method formats a <xref:System.Decimal> value in the default (\\\"G\\\", or general) format of a specified culture. If you want to specify a different format or the current culture, use the other overloads of the <xref:System.Decimal.ToString%2A> method, as follows:  \\n  \\n|To use format|For culture|Use the overload|  \\n|-------------------|-----------------|----------------------|  \\n|Default (\\\"G\\\") format|Default (current) culture|<xref:System.Decimal.ToString>|  \\n|A specific format|Default (current) culture|<xref:System.Decimal.ToString%28System.String%29>|  \\n|A specific format|A specific culture|<xref:System.Decimal.ToString%28System.String%2CSystem.IFormatProvider%29>|  \\n  \\n The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics:  \\n  \\n-   For more information about numeric format specifiers, see [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) and [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md).  \\n  \\n-   For more information about formatting, see [Formatting Types](~/docs/standard/base-types/formatting-types.md).  \\n  \\n The `provider` parameter is an <xref:System.IFormatProvider> implementation whose <xref:System.IFormatProvider.GetFormat%2A?displayProperty=fullName> method returns a <xref:System.Globalization.NumberFormatInfo> object. Typically, `provider` is a <xref:System.Globalization.NumberFormatInfo> object or a <xref:System.Globalization.CultureInfo> object. The `provider` parameter supplies culture-specific information used in formatting. If `provider` is `null`, the thread current culture is used.  \\n  \\n To convert a <xref:System.Decimal> value to its string representation using a specified culture and a specific format string, call the <xref:System.Decimal.ToString%28System.String%2CSystem.IFormatProvider%29?displayProperty=fullName> method.\"\n  example:\n  - \"The following example displays the string representation of a <xref:System.Decimal> value using <xref:System.Globalization.CultureInfo> objects that represent several different cultures.  \\n  \\n [!code-csharp[System.Decimal.ToString#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Decimal.ToString/CS/ToString2.cs#3)]\\n [!code-vb[System.Decimal.ToString#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Decimal.ToString/VB/ToString2.vb#3)]\"\n  syntax:\n    content: public string ToString (IFormatProvider provider);\n    parameters:\n    - id: provider\n      type: System.IFormatProvider\n      description: An object that supplies culture-specific formatting information.\n    return:\n      type: System.String\n      description: The string representation of the value of this instance as specified by <code>provider</code>.\n  overload: System.Decimal.ToString*\n  exceptions: []\n  attributes: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Decimal.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Decimal.ToString\n  commentId: M:System.Decimal.ToString\n  id: ToString\n  parent: System.Decimal\n  langs:\n  - csharp\n  name: ToString()\n  nameWithType: Decimal.ToString()\n  fullName: Decimal.ToString()\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Converts the numeric value of this instance to its equivalent string representation.\n  remarks: \"The <xref:System.Decimal.ToString> method formats a <xref:System.Decimal> value in the default (\\\"G\\\", or general) format of the current culture. If you want to specify a different format or culture, use the other overloads of the <xref:System.Decimal.ToString%2A> method, as follows:  \\n  \\n|To use format|For culture|Use the overload|  \\n|-------------------|-----------------|----------------------|  \\n|Default (\\\"G\\\") format|A specific culture|<xref:System.Decimal.ToString%28System.IFormatProvider%29>|  \\n|A specific format|Default (current) culture|<xref:System.Decimal.ToString%28System.String%29>|  \\n|A specific format|A specific culture|<xref:System.Decimal.ToString%28System.String%2CSystem.IFormatProvider%29>|  \\n  \\n The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics:  \\n  \\n-   For more information about numeric format specifiers, see [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) and [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md).  \\n  \\n-   For more information about formatting, see [Formatting Types](~/docs/standard/base-types/formatting-types.md).\"\n  example:\n  - \"The following example displays a <xref:System.Decimal> value using the default <xref:System.Decimal.ToString> method. It also displays the string representations of the <xref:System.Decimal> value that result from using a number of standard format specifiers.  \\n  \\n [!code-csharp[System.Decimal.ToString#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Decimal.ToString/CS/ToString2.cs#2)]\\n [!code-vb[System.Decimal.ToString#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Decimal.ToString/VB/ToString2.vb#2)]  \\n  \\n The following example displays the amount of money in an account.  \\n  \\n [!code-cpp[Decimal Example#5](~/samples/snippets/cpp/VS_Snippets_CLR/Decimal Example/CPP/source.cpp#5)]\\n [!code-csharp[Decimal Example#5](~/samples/snippets/csharp/VS_Snippets_CLR/Decimal Example/CS/source.cs#5)]\\n [!code-vb[Decimal Example#5](~/samples/snippets/visualbasic/VS_Snippets_CLR/Decimal Example/VB/source.vb#5)]\"\n  syntax:\n    content: public override string ToString ();\n    parameters: []\n    return:\n      type: System.String\n      description: A string that represents the value of this instance.\n  overload: System.Decimal.ToString*\n  exceptions: []\n  attributes: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Decimal.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Decimal.ToString(System.String)\n  commentId: M:System.Decimal.ToString(System.String)\n  id: ToString(System.String)\n  parent: System.Decimal\n  langs:\n  - csharp\n  name: ToString(String)\n  nameWithType: Decimal.ToString(String)\n  fullName: Decimal.ToString(String)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Converts the numeric value of this instance to its equivalent string representation, using the specified format.\n  remarks: \"The <xref:System.Decimal.ToString%28System.String%29> method formats a <xref:System.Decimal> value in a specified format by using the conventions of the current culture. If you want to use the default (\\\"G\\\", or general) format or specify a different culture, use the other overloads of the <xref:System.Decimal.ToString%2A> method, as follows:  \\n  \\n|To use format|For culture|Use the overload|  \\n|-------------------|-----------------|----------------------|  \\n|Default (\\\"G\\\") format|Default (current) culture|<xref:System.Decimal.ToString>|  \\n|Default (\\\"G\\\") format|A specific culture|<xref:System.Decimal.ToString%28System.IFormatProvider%29>|  \\n|A specific format|A specific culture|<xref:System.Decimal.ToString%28System.String%2CSystem.IFormatProvider%29>|  \\n  \\n The <xref:System.Decimal.ToString%2A> method uses the standard or custom numeric format string specified by the `format` parameter to convert the value of the current instance into its string representation. The `format` parameter can be any valid [standard numeric format specifier](~/docs/standard/base-types/standard-numeric-format-strings.md) except for D, R, and X, as well as any combination of [custom numeric format specifiers](~/docs/standard/base-types/custom-numeric-format-strings.md). If `format` is `null` or an empty string, the return value of this instance is formatted with the general numeric format specifier (G).  \\n  \\n The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics:  \\n  \\n-   For more information about numeric format specifiers, see [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) and [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md).  \\n  \\n-   For more information about formatting, see [Formatting Types](~/docs/standard/base-types/formatting-types.md).  \\n  \\n The return value is formatted by using the <xref:System.Globalization.NumberFormatInfo> object for the current culture. To apply the formatting conventions of a specified culture, call the <xref:System.Decimal.ToString%28System.String%2CSystem.IFormatProvider%29> method.\"\n  example:\n  - \"The following example displays a <xref:System.Decimal> value using each of the supported standard numeric format specifiers, together with two custom numeric format strings. In converting the numeric values to strings, the example uses the formatting conventions of the en-US culture.  \\n  \\n [!code-csharp[System.Decimal.ToString#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Decimal.ToString/CS/ToString2.cs#4)]\\n [!code-vb[System.Decimal.ToString#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Decimal.ToString/VB/ToString2.vb#4)]\"\n  syntax:\n    content: public string ToString (string format);\n    parameters:\n    - id: format\n      type: System.String\n      description: A standard or custom numeric format string.\n    return:\n      type: System.String\n      description: The string representation of the value of this instance as specified by <code>format</code>.\n  overload: System.Decimal.ToString*\n  exceptions:\n  - type: System.FormatException\n    commentId: T:System.FormatException\n    description: <code>format</code> is invalid.\n  attributes: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Decimal.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Decimal.ToUInt16(System.Decimal)\n  commentId: M:System.Decimal.ToUInt16(System.Decimal)\n  id: ToUInt16(System.Decimal)\n  parent: System.Decimal\n  langs:\n  - csharp\n  name: ToUInt16(Decimal)\n  nameWithType: Decimal.ToUInt16(Decimal)\n  fullName: Decimal.ToUInt16(Decimal)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Converts the value of the specified <xref href=\"System.Decimal\"></xref> to the equivalent 16-bit unsigned integer.\n  remarks: \"The return value is the integral part of the decimal value; fractional digits are truncated.  \\n  \\n You can also convert a <xref:System.Decimal> value to a 16-bit unsigned integer by using the <xref:System.Decimal.op_Explicit%2A> assignment operator. Because the operator performs a narrowing conversion, you must use a casting operator in C# or a conversion function in Visual Basic.\"\n  example:\n  - \"The following example uses the <xref:System.Decimal.ToUInt16%2A> method to convert decimal numbers to <xref:System.UInt16> values.  \\n  \\n [!code-csharp[System.Decimal.ToUInt16#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.decimal.touint16/cs/touint16_1.cs#1)]\\n [!code-vb[System.Decimal.ToUInt16#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.touint16/vb/touint16_1.vb#1)]\"\n  syntax:\n    content: >-\n      [System.CLSCompliant(false)]\n\n      public static ushort ToUInt16 (decimal value);\n    parameters:\n    - id: value\n      type: System.Decimal\n      description: The decimal number to convert.\n    return:\n      type: System.UInt16\n      description: A 16-bit unsigned integer equivalent to the value of <code>value</code>.\n  overload: System.Decimal.ToUInt16*\n  exceptions:\n  - type: System.OverflowException\n    commentId: T:System.OverflowException\n    description: <code>value</code> is greater than <xref href=\"System.UInt16.MaxValue\"></xref> or less than <xref href=\"System.UInt16.MinValue\"></xref>.\n  attributes:\n  - type: System.CLSCompliantAttribute\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  altCompliant: System.Decimal.ToInt32(System.Decimal)\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Decimal.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Decimal.ToUInt32(System.Decimal)\n  commentId: M:System.Decimal.ToUInt32(System.Decimal)\n  id: ToUInt32(System.Decimal)\n  parent: System.Decimal\n  langs:\n  - csharp\n  name: ToUInt32(Decimal)\n  nameWithType: Decimal.ToUInt32(Decimal)\n  fullName: Decimal.ToUInt32(Decimal)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Converts the value of the specified <xref href=\"System.Decimal\"></xref> to the equivalent 32-bit unsigned integer.\n  remarks: \"The return value is the integral part of the decimal value; fractional digits are truncated.  \\n  \\n You can also convert a <xref:System.Decimal> value to an 32-bit unsigned integer by using the <xref:System.Decimal.op_Explicit%2A> assignment operator. Because the operator performs a narrowing conversion, you must use a casting operator in C# or a conversion function in Visual Basic.\"\n  example:\n  - \"The following example uses the <xref:System.Decimal.ToUInt32%2A> method to convert decimal numbers to <xref:System.UInt32> values.  \\n  \\n [!code-csharp[System.Decimal.ToUInt32#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.decimal.touint32/cs/touint32_1.cs#1)]\\n [!code-vb[System.Decimal.ToUInt32#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.touint32/vb/touint32_1.vb#1)]\"\n  syntax:\n    content: >-\n      [System.CLSCompliant(false)]\n\n      public static uint ToUInt32 (decimal d);\n    parameters:\n    - id: d\n      type: System.Decimal\n      description: The decimal number to convert.\n    return:\n      type: System.UInt32\n      description: A 32-bit unsigned integer equivalent to the value of <code>d</code>.\n  overload: System.Decimal.ToUInt32*\n  exceptions:\n  - type: System.OverflowException\n    commentId: T:System.OverflowException\n    description: <code>d</code> is negative or greater than <xref href=\"System.UInt32.MaxValue\"></xref>.\n  attributes:\n  - type: System.CLSCompliantAttribute\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  altCompliant: System.Decimal.ToInt64(System.Decimal)\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Decimal.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Decimal.ToUInt64(System.Decimal)\n  commentId: M:System.Decimal.ToUInt64(System.Decimal)\n  id: ToUInt64(System.Decimal)\n  parent: System.Decimal\n  langs:\n  - csharp\n  name: ToUInt64(Decimal)\n  nameWithType: Decimal.ToUInt64(Decimal)\n  fullName: Decimal.ToUInt64(Decimal)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Converts the value of the specified <xref href=\"System.Decimal\"></xref> to the equivalent 64-bit unsigned integer.\n  remarks: \"The return value is the integral part of the decimal value; fractional digits are truncated.  \\n  \\n You can also convert a <xref:System.Decimal> value to an 64-bit unsigned integer by using the <xref:System.Decimal.op_Explicit%2A> assignment operator. Because the operator performs a narrowing conversion, you must use a casting operator in C# or a conversion function in Visual Basic.\"\n  example:\n  - \"The following example uses the <xref:System.Decimal.ToUInt64%2A> method to convert decimal numbers to <xref:System.UInt64> values.  \\n  \\n [!code-csharp[System.Decimal.ToUInt64#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.decimal.touint64/cs/touint64_1.cs#1)]\\n [!code-vb[System.Decimal.ToUInt64#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.decimal.touint64/vb/touint64_1.vb#1)]\"\n  syntax:\n    content: >-\n      [System.CLSCompliant(false)]\n\n      public static ulong ToUInt64 (decimal d);\n    parameters:\n    - id: d\n      type: System.Decimal\n      description: The decimal number to convert.\n    return:\n      type: System.UInt64\n      description: A 64-bit unsigned integer equivalent to the value of <code>d</code>.\n  overload: System.Decimal.ToUInt64*\n  exceptions:\n  - type: System.OverflowException\n    commentId: T:System.OverflowException\n    description: <code>d</code> is negative or greater than <xref href=\"System.UInt64.MaxValue\"></xref>.\n  attributes:\n  - type: System.CLSCompliantAttribute\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Decimal.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Decimal.Truncate(System.Decimal)\n  commentId: M:System.Decimal.Truncate(System.Decimal)\n  id: Truncate(System.Decimal)\n  parent: System.Decimal\n  langs:\n  - csharp\n  name: Truncate(Decimal)\n  nameWithType: Decimal.Truncate(Decimal)\n  fullName: Decimal.Truncate(Decimal)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Returns the integral digits of the specified <xref href=\"System.Decimal\"></xref>; any fractional digits are discarded.\n  remarks: This method rounds `d` toward zero, to the nearest whole number, which corresponds to discarding any digits after the decimal point.\n  example:\n  - \"The following code example uses the `Truncate` method to discard the fractional digits of several `Decimal` values.  \\n  \\n [!code-cpp[System.Decimal.Flr_Neg_Rnd_Trnc#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Decimal.Flr_Neg_Rnd_Trnc/CPP/floor_neg_trunc.cpp#1)]\\n [!code-csharp[System.Decimal.Flr_Neg_Rnd_Trnc#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Decimal.Flr_Neg_Rnd_Trnc/CS/floor_neg_trunc.cs#1)]\\n [!code-vb[System.Decimal.Flr_Neg_Rnd_Trnc#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Decimal.Flr_Neg_Rnd_Trnc/VB/floor_neg_trunc.vb#1)]\"\n  syntax:\n    content: public static decimal Truncate (decimal d);\n    parameters:\n    - id: d\n      type: System.Decimal\n      description: The decimal number to truncate.\n    return:\n      type: System.Decimal\n      description: The result of <code>d</code> rounded toward zero, to the nearest whole number.\n  overload: System.Decimal.Truncate*\n  exceptions: []\n  attributes: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Decimal.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Decimal.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Decimal@)\n  commentId: M:System.Decimal.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Decimal@)\n  id: TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Decimal@)\n  parent: System.Decimal\n  langs:\n  - csharp\n  name: TryParse(String, NumberStyles, IFormatProvider, Decimal)\n  nameWithType: Decimal.TryParse(String, NumberStyles, IFormatProvider, Decimal)\n  fullName: Decimal.TryParse(String, NumberStyles, IFormatProvider, Decimal)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Converts the string representation of a number to its <xref href=\"System.Decimal\"></xref> equivalent using the specified style and culture-specific format. A return value indicates whether the conversion succeeded or failed.\n  remarks: \"This overload differs from the <xref:System.Decimal.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=fullName> method by returning a Boolean value that indicates whether the parse operation succeeded instead of returning the parsed numeric value. It eliminates the need to use exception handling to test for a <xref:System.FormatException> in the event that `s` is invalid and cannot be successfully parsed.  \\n  \\n The `style` parameter defines the allowable format of the `s` parameter for the parse operation to succeed. It must be a combination of bit flags from the <xref:System.Globalization.NumberStyles> enumeration. The following <xref:System.Globalization.NumberStyles> members are not supported:  \\n  \\n-   <xref:System.Globalization.NumberStyles?displayProperty=fullName>  \\n  \\n-   <xref:System.Globalization.NumberStyles?displayProperty=fullName>  \\n  \\n Depending on the value of style, the `s` parameter may include the following elements:  \\n  \\n [ws][$][sign][digits,]digits[.fractional-digits][e[sign]digits][ws]  \\n  \\n Elements in square brackets ([ and ]) are optional. The following table describes each element.  \\n  \\n|Element|Description|  \\n|-------------|-----------------|  \\n|*ws*|Optional white space. White space can appear at the beginning of `s` if `style` includes the <xref:System.Globalization.NumberStyles?displayProperty=fullName> flag. It can appear at the end of `s` if `style` includes the <xref:System.Globalization.NumberStyles?displayProperty=fullName> flag.|  \\n|*$*|A culture-specific currency symbol. Its position in the string is defined by the <xref:System.Globalization.NumberFormatInfo.CurrencyNegativePattern%2A?displayProperty=fullName> or <xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A?displayProperty=fullName> properties of the <xref:System.Globalization.NumberFormatInfo> object returned by the <xref:System.IFormatProvider.GetFormat%2A?displayProperty=fullName> method of the `provider` parameter. The currency symbol can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles?displayProperty=fullName> flag.|  \\n|*sign*|An optional sign.|  \\n|*digits*|A sequence of digits ranging from 0 to 9.|  \\n|*.*|A culture-specific decimal point symbol.|  \\n|*fractional-digits*|A sequence of digits ranging from 0 to 9.|  \\n  \\n The `style` parameter specifies the permitted format of the `s` parameter, and can be one or more <xref:System.Globalization.NumberStyles> enumerated constants combined using a bitwise OR operation. If `style` is null, `s` is interpreted using the <xref:System.Globalization.NumberStyles?displayProperty=fullName> style.  \\n  \\n The `provider` parameter is an <xref:System.IFormatProvider> implementation such as a <xref:System.Globalization.NumberFormatInfo> or <xref:System.Globalization.CultureInfo> object. The `provider` parameter supplies culture-specific information used in parsing. If `provider` is `null`, the thread current culture is used.  \\n  \\n A <xref:System.Decimal> object has 29 digits of precision. If `s` represents a number that has more than 29 digits, but has a fractional part and is within the range of <xref:System.Decimal.MaxValue> and <xref:System.Decimal.MinValue>, the number is rounded, not truncated, to 29 digits using rounding to nearest.  \\n  \\n If a separator is encountered in the `s` parameter during a parse operation, and the applicable currency or number decimal and group separators are the same, the parse operation assumes that the separator is a decimal separator rather than a group separator. For more information about separators, see <xref:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator%2A>, <xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator%2A>, <xref:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator%2A>, and <xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A>.\"\n  example:\n  - \"The following example demonstrates the use of the <xref:System.Decimal.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Decimal%40%29> method to parse the string representation of a number that has a particular style and is formatted using the conventions of a particular culture.  \\n  \\n [!code-csharp[System.Decimal.TryParse#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Decimal.TryParse/cs/TryParse.cs#2)]\\n [!code-vb[System.Decimal.TryParse#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Decimal.TryParse/vb/TryParse.vb#2)]\"\n  syntax:\n    content: public static bool TryParse (string s, System.Globalization.NumberStyles style, IFormatProvider provider, out decimal result);\n    parameters:\n    - id: s\n      type: System.String\n      description: The string representation of the number to convert.\n    - id: style\n      type: System.Globalization.NumberStyles\n      description: A bitwise combination of enumeration values that indicates the permitted format of <code>s</code>. A typical value to specify is <xref href=\"System.Globalization.NumberStyles.Number\"></xref>.\n    - id: provider\n      type: System.IFormatProvider\n      description: An object that supplies culture-specific parsing information about <code>s</code>.\n    - id: result\n      type: System.Decimal\n      description: ''\n    return:\n      type: System.Boolean\n      description: '`true` if <code>s</code> was converted successfully; otherwise, `false`.'\n  overload: System.Decimal.TryParse*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"<code>style</code> is not a <xref href=\\\"System.Globalization.NumberStyles\\\"></xref> value.  \\n  \\n -or-  \\n  \\n <code>style</code> is the <xref href=\\\"System.Globalization.NumberStyles.AllowHexSpecifier\\\"></xref> value.\"\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Decimal.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Decimal.TryParse(System.String,System.Decimal@)\n  commentId: M:System.Decimal.TryParse(System.String,System.Decimal@)\n  id: TryParse(System.String,System.Decimal@)\n  parent: System.Decimal\n  langs:\n  - csharp\n  name: TryParse(String, Decimal)\n  nameWithType: Decimal.TryParse(String, Decimal)\n  fullName: Decimal.TryParse(String, Decimal)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Converts the string representation of a number to its <xref href=\"System.Decimal\"></xref> equivalent. A return value indicates whether the conversion succeeded or failed.\n  remarks: \"This overload differs from the <xref:System.Decimal.Parse%28System.String%29?displayProperty=fullName> method by returning a Boolean value that indicates whether the parse operation succeeded instead of returning the parsed numeric value. It eliminates the need to use exception handling to test for a <xref:System.FormatException> in the event that `s` is invalid and cannot be successfully parsed.  \\n  \\n Parameter `s` contains a number of the form:  \\n  \\n [ws][sign][digits,]digits[.fractional-digits][ws]  \\n  \\n Elements in square brackets ([ and ]) are optional. The following table describes each element.  \\n  \\n|Element|Description|  \\n|-------------|-----------------|  \\n|*ws*|Optional white space.|  \\n|*sign*|An optional sign.|  \\n|*digits*|A sequence of digits ranging from 0 to 9.|  \\n|*,*|A culture-specific thousands separator symbol.|  \\n|*.*|A culture-specific decimal point symbol.|  \\n|*fractional-digits*|A sequence of digits ranging from 0 to 9.|  \\n  \\n Parameter `s` is interpreted using the <xref:System.Globalization.NumberStyles?displayProperty=fullName> style. This means that white space and thousands separators are allowed but currency symbols are not. To explicitly define the elements (such as currency symbols, thousands separators, and white space) that can be present in `s`, use the <xref:System.Decimal.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Decimal%40%29?displayProperty=fullName> method overload.  \\n  \\n Parameter `s` is parsed using the formatting information in a <xref:System.Globalization.NumberFormatInfo> object initialized for the current system culture. For more information, see <xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A>. To parse a string using the formatting information of some other specified culture, use the <xref:System.Decimal.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Decimal%40%29?displayProperty=fullName> method overload.  \\n  \\n If necessary, the value of `s` is rounded using rounding to nearest.  \\n  \\n A <xref:System.Decimal> object has 29 digits of precision. If `s` represents a number that has more than 29 digits, but has a fractional part and is within the range of <xref:System.Decimal.MaxValue> and <xref:System.Decimal.MinValue>, the number is rounded, not truncated, to 29 digits using rounding to nearest.  \\n  \\n If during a parse operation a separator is encountered in the `s` parameter, and the applicable currency or number decimal and group separators are the same, the parse operation assumes that the separator is a decimal separator rather than a group separator. For more information about separators, see <xref:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator%2A>, <xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator%2A>, <xref:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator%2A>, and <xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A>.\"\n  example:\n  - \"The following example uses the <xref:System.Decimal.TryParse%28System.String%2CSystem.Decimal%40%29?displayProperty=fullName> method to convert the string representations of numeric values to <xref:System.Decimal> values. It assumes that en-US is the current culture.  \\n  \\n [!code-csharp[System.Decimal.TryParse#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Decimal.TryParse/cs/TryParse.cs#1)]\\n [!code-vb[System.Decimal.TryParse#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Decimal.TryParse/vb/TryParse.vb#1)]\"\n  syntax:\n    content: public static bool TryParse (string s, out decimal result);\n    parameters:\n    - id: s\n      type: System.String\n      description: The string representation of the number to convert.\n    - id: result\n      type: System.Decimal\n      description: ''\n    return:\n      type: System.Boolean\n      description: '`true` if <code>s</code> was converted successfully; otherwise, `false`.'\n  overload: System.Decimal.TryParse*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Decimal.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Decimal.Zero\n  commentId: F:System.Decimal.Zero\n  id: Zero\n  parent: System.Decimal\n  langs:\n  - csharp\n  name: Zero\n  nameWithType: Decimal.Zero\n  fullName: Decimal.Zero\n  type: Field\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Represents the number zero (0).\n  remarks: ''\n  example:\n  - \"The following code example illustrates the use of the `Zero` field.  \\n  \\n [!code-cpp[System.Decimal.Fields#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Decimal.Fields/CPP/fields.cpp#1)]\\n [!code-csharp[System.Decimal.Fields#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Decimal.Fields/CS/fields.cs#1)]\\n [!code-vb[System.Decimal.Fields#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Decimal.Fields/VB/fields.vb#1)]\"\n  syntax:\n    content: public static readonly decimal Zero;\n    return:\n      type: System.Decimal\n      description: ''\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Decimal.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Decimal.System#IComparable#CompareTo(System.Object)\n  commentId: M:System.Decimal.System#IComparable#CompareTo(System.Object)\n  id: System#IComparable#CompareTo(System.Object)\n  isEii: true\n  parent: System.Decimal\n  langs:\n  - csharp\n  name: IComparable.CompareTo(Object)\n  nameWithType: Decimal.IComparable.CompareTo(Object)\n  fullName: Decimal.IComparable.CompareTo(Object)\n  type: Method\n  assemblies:\n  - System.Runtime\n  namespace: System\n  syntax:\n    content: int IComparable.CompareTo (object value);\n    parameters:\n    - id: value\n      type: System.Object\n      description: ''\n    return:\n      type: System.Int32\n      description: ''\n  overload: System.Decimal.System#IComparable#CompareTo*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Decimal.xml\n- uid: System.Decimal.System#IConvertible#GetTypeCode\n  commentId: M:System.Decimal.System#IConvertible#GetTypeCode\n  id: System#IConvertible#GetTypeCode\n  isEii: true\n  parent: System.Decimal\n  langs:\n  - csharp\n  name: IConvertible.GetTypeCode()\n  nameWithType: Decimal.IConvertible.GetTypeCode()\n  fullName: Decimal.IConvertible.GetTypeCode()\n  type: Method\n  assemblies:\n  - System.Runtime\n  namespace: System\n  syntax:\n    content: TypeCode IConvertible.GetTypeCode ();\n    parameters: []\n    return:\n      type: System.TypeCode\n      description: ''\n  overload: System.Decimal.System#IConvertible#GetTypeCode*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Decimal.xml\n- uid: System.Decimal.System#IConvertible#ToBoolean(System.IFormatProvider)\n  commentId: M:System.Decimal.System#IConvertible#ToBoolean(System.IFormatProvider)\n  id: System#IConvertible#ToBoolean(System.IFormatProvider)\n  isEii: true\n  parent: System.Decimal\n  langs:\n  - csharp\n  name: IConvertible.ToBoolean(IFormatProvider)\n  nameWithType: Decimal.IConvertible.ToBoolean(IFormatProvider)\n  fullName: Decimal.IConvertible.ToBoolean(IFormatProvider)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: For a description of this member, see <xref href=\"System.IConvertible.ToBoolean(System.IFormatProvider)\"></xref>.\n  remarks: This member is an explicit interface member implementation. It can be used only when the <xref:System.Decimal> instance is cast to an <xref:System.IConvertible> interface. The recommended alternative is to call the <xref:System.Convert.ToBoolean%28System.Decimal%29?displayProperty=fullName> method.\n  syntax:\n    content: bool IConvertible.ToBoolean (IFormatProvider provider);\n    parameters:\n    - id: provider\n      type: System.IFormatProvider\n      description: This parameter is ignored.\n    return:\n      type: System.Boolean\n      description: '`true` if the value of the current instance is not zero; otherwise, `false`.'\n  overload: System.Decimal.System#IConvertible#ToBoolean*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Decimal.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Decimal.System#IConvertible#ToByte(System.IFormatProvider)\n  commentId: M:System.Decimal.System#IConvertible#ToByte(System.IFormatProvider)\n  id: System#IConvertible#ToByte(System.IFormatProvider)\n  isEii: true\n  parent: System.Decimal\n  langs:\n  - csharp\n  name: IConvertible.ToByte(IFormatProvider)\n  nameWithType: Decimal.IConvertible.ToByte(IFormatProvider)\n  fullName: Decimal.IConvertible.ToByte(IFormatProvider)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: For a description of this member, see <xref href=\"System.IConvertible.ToByte(System.IFormatProvider)\"></xref>.\n  remarks: This member is an explicit interface member implementation. It can be used only when the <xref:System.Decimal> instance is cast to an <xref:System.IConvertible> interface. The recommended alternative is to call either the <xref:System.Decimal.ToByte%2A?displayProperty=fullName> method or the <xref:System.Convert.ToByte%2A?displayProperty=fullName> method.\n  syntax:\n    content: byte IConvertible.ToByte (IFormatProvider provider);\n    parameters:\n    - id: provider\n      type: System.IFormatProvider\n      description: This parameter is ignored.\n    return:\n      type: System.Byte\n      description: The value of the current instance, converted to a <xref href=\"System.Byte\"></xref>.\n  overload: System.Decimal.System#IConvertible#ToByte*\n  exceptions:\n  - type: System.OverflowException\n    commentId: T:System.OverflowException\n    description: The resulting integer value is less than <xref href=\"System.Byte.MinValue\"></xref> or greater than <xref href=\"System.Byte.MaxValue\"></xref>.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Decimal.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Decimal.System#IConvertible#ToChar(System.IFormatProvider)\n  commentId: M:System.Decimal.System#IConvertible#ToChar(System.IFormatProvider)\n  id: System#IConvertible#ToChar(System.IFormatProvider)\n  isEii: true\n  parent: System.Decimal\n  langs:\n  - csharp\n  name: IConvertible.ToChar(IFormatProvider)\n  nameWithType: Decimal.IConvertible.ToChar(IFormatProvider)\n  fullName: Decimal.IConvertible.ToChar(IFormatProvider)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: This conversion is not supported. Attempting to use this method throws an <xref href=\"System.InvalidCastException\"></xref>.\n  syntax:\n    content: char IConvertible.ToChar (IFormatProvider provider);\n    parameters:\n    - id: provider\n      type: System.IFormatProvider\n      description: This parameter is ignored.\n    return:\n      type: System.Char\n      description: None. This conversion is not supported.\n  overload: System.Decimal.System#IConvertible#ToChar*\n  exceptions:\n  - type: System.InvalidCastException\n    commentId: T:System.InvalidCastException\n    description: In all cases.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Decimal.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Decimal.System#IConvertible#ToDateTime(System.IFormatProvider)\n  commentId: M:System.Decimal.System#IConvertible#ToDateTime(System.IFormatProvider)\n  id: System#IConvertible#ToDateTime(System.IFormatProvider)\n  isEii: true\n  parent: System.Decimal\n  langs:\n  - csharp\n  name: IConvertible.ToDateTime(IFormatProvider)\n  nameWithType: Decimal.IConvertible.ToDateTime(IFormatProvider)\n  fullName: Decimal.IConvertible.ToDateTime(IFormatProvider)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: This conversion is not supported. Attempting to use this method throws an <xref href=\"System.InvalidCastException\"></xref>.\n  syntax:\n    content: DateTime IConvertible.ToDateTime (IFormatProvider provider);\n    parameters:\n    - id: provider\n      type: System.IFormatProvider\n      description: This parameter is ignored.\n    return:\n      type: System.DateTime\n      description: None. This conversion is not supported.\n  overload: System.Decimal.System#IConvertible#ToDateTime*\n  exceptions:\n  - type: System.InvalidCastException\n    commentId: T:System.InvalidCastException\n    description: In all cases.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Decimal.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Decimal.System#IConvertible#ToDecimal(System.IFormatProvider)\n  commentId: M:System.Decimal.System#IConvertible#ToDecimal(System.IFormatProvider)\n  id: System#IConvertible#ToDecimal(System.IFormatProvider)\n  isEii: true\n  parent: System.Decimal\n  langs:\n  - csharp\n  name: IConvertible.ToDecimal(IFormatProvider)\n  nameWithType: Decimal.IConvertible.ToDecimal(IFormatProvider)\n  fullName: Decimal.IConvertible.ToDecimal(IFormatProvider)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: For a description of this member, see <xref href=\"System.IConvertible.ToDecimal(System.IFormatProvider)\"></xref>.\n  remarks: This member is an explicit interface member implementation. It can be used only when the <xref:System.Decimal> instance is cast to an <xref:System.IConvertible> interface.\n  syntax:\n    content: decimal IConvertible.ToDecimal (IFormatProvider provider);\n    parameters:\n    - id: provider\n      type: System.IFormatProvider\n      description: This parameter is ignored.\n    return:\n      type: System.Decimal\n      description: The value of the current instance, unchanged.\n  overload: System.Decimal.System#IConvertible#ToDecimal*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Decimal.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Decimal.System#IConvertible#ToDouble(System.IFormatProvider)\n  commentId: M:System.Decimal.System#IConvertible#ToDouble(System.IFormatProvider)\n  id: System#IConvertible#ToDouble(System.IFormatProvider)\n  isEii: true\n  parent: System.Decimal\n  langs:\n  - csharp\n  name: IConvertible.ToDouble(IFormatProvider)\n  nameWithType: Decimal.IConvertible.ToDouble(IFormatProvider)\n  fullName: Decimal.IConvertible.ToDouble(IFormatProvider)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: For a description of this member, see <xref href=\"System.IConvertible.ToDouble(System.IFormatProvider)\"></xref>.\n  remarks: \"This member is an explicit interface member implementation. It can be used only when the <xref:System.Decimal> instance is cast to an <xref:System.IConvertible> interface. The recommended alternative is to call either the <xref:System.Decimal.ToDouble%2A?displayProperty=fullName> method or the <xref:System.Convert.ToDouble%2A?displayProperty=fullName> method.  \\n  \\n Because a <xref:System.Double> has fewer significant digits than a <xref:System.Decimal>, this operation may produce round-off errors.\"\n  syntax:\n    content: double IConvertible.ToDouble (IFormatProvider provider);\n    parameters:\n    - id: provider\n      type: System.IFormatProvider\n      description: This parameter is ignored.\n    return:\n      type: System.Double\n      description: The value of the current instance, converted to a <xref href=\"System.Double\"></xref>.\n  overload: System.Decimal.System#IConvertible#ToDouble*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Decimal.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Decimal.System#IConvertible#ToInt16(System.IFormatProvider)\n  commentId: M:System.Decimal.System#IConvertible#ToInt16(System.IFormatProvider)\n  id: System#IConvertible#ToInt16(System.IFormatProvider)\n  isEii: true\n  parent: System.Decimal\n  langs:\n  - csharp\n  name: IConvertible.ToInt16(IFormatProvider)\n  nameWithType: Decimal.IConvertible.ToInt16(IFormatProvider)\n  fullName: Decimal.IConvertible.ToInt16(IFormatProvider)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: For a description of this member, see <xref href=\"System.IConvertible.ToInt16(System.IFormatProvider)\"></xref>.\n  remarks: \"This member is an explicit interface member implementation. It can be used only when the <xref:System.Decimal> instance is cast to an <xref:System.IConvertible> interface. The recommended alternative is to call either the <xref:System.Decimal.ToInt16%2A?displayProperty=fullName> method or the <xref:System.Convert.ToInt16%2A?displayProperty=fullName> method.  \\n  \\n The <xref:System.Decimal> value is rounded toward zero to the nearest integer value.\"\n  syntax:\n    content: short IConvertible.ToInt16 (IFormatProvider provider);\n    parameters:\n    - id: provider\n      type: System.IFormatProvider\n      description: This parameter is ignored.\n    return:\n      type: System.Int16\n      description: The value of the current instance, converted to a <xref href=\"System.Int16\"></xref>.\n  overload: System.Decimal.System#IConvertible#ToInt16*\n  exceptions:\n  - type: System.OverflowException\n    commentId: T:System.OverflowException\n    description: The resulting integer value is less than <xref href=\"System.Int16.MinValue\"></xref> or greater than <xref href=\"System.Int16.MaxValue\"></xref>.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Decimal.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Decimal.System#IConvertible#ToInt32(System.IFormatProvider)\n  commentId: M:System.Decimal.System#IConvertible#ToInt32(System.IFormatProvider)\n  id: System#IConvertible#ToInt32(System.IFormatProvider)\n  isEii: true\n  parent: System.Decimal\n  langs:\n  - csharp\n  name: IConvertible.ToInt32(IFormatProvider)\n  nameWithType: Decimal.IConvertible.ToInt32(IFormatProvider)\n  fullName: Decimal.IConvertible.ToInt32(IFormatProvider)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: For a description of this member, see <xref href=\"System.IConvertible.ToInt32(System.IFormatProvider)\"></xref>.\n  remarks: \"This member is an explicit interface member implementation. It can be used only when the <xref:System.Decimal> instance is cast to an <xref:System.IConvertible> interface. The recommended alternative is to call either the <xref:System.Decimal.ToInt32%2A?displayProperty=fullName> method or the <xref:System.Convert.ToInt32%2A?displayProperty=fullName> method.  \\n  \\n The <xref:System.Decimal> value is rounded toward zero to the nearest integer value.\"\n  syntax:\n    content: int IConvertible.ToInt32 (IFormatProvider provider);\n    parameters:\n    - id: provider\n      type: System.IFormatProvider\n      description: The parameter is ignored.\n    return:\n      type: System.Int32\n      description: The value of the current instance, converted to a <xref href=\"System.Int32\"></xref>.\n  overload: System.Decimal.System#IConvertible#ToInt32*\n  exceptions:\n  - type: System.OverflowException\n    commentId: T:System.OverflowException\n    description: The resulting integer value is less than <xref href=\"System.Int32.MinValue\"></xref> or greater than <xref href=\"System.Int32.MaxValue\"></xref>.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Decimal.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Decimal.System#IConvertible#ToInt64(System.IFormatProvider)\n  commentId: M:System.Decimal.System#IConvertible#ToInt64(System.IFormatProvider)\n  id: System#IConvertible#ToInt64(System.IFormatProvider)\n  isEii: true\n  parent: System.Decimal\n  langs:\n  - csharp\n  name: IConvertible.ToInt64(IFormatProvider)\n  nameWithType: Decimal.IConvertible.ToInt64(IFormatProvider)\n  fullName: Decimal.IConvertible.ToInt64(IFormatProvider)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: For a description of this member, see <xref href=\"System.IConvertible.ToInt64(System.IFormatProvider)\"></xref>.\n  remarks: This member is an explicit interface member implementation. It can be used only when the <xref:System.Decimal> instance is cast to an <xref:System.IConvertible> interface. The recommended alternative is to call either the <xref:System.Decimal.ToInt64%2A?displayProperty=fullName> method or the <xref:System.Convert.ToInt64%2A?displayProperty=fullName> method.\n  syntax:\n    content: long IConvertible.ToInt64 (IFormatProvider provider);\n    parameters:\n    - id: provider\n      type: System.IFormatProvider\n      description: This parameter is ignored.\n    return:\n      type: System.Int64\n      description: The value of the current instance, converted to a <xref href=\"System.Int64\"></xref>.\n  overload: System.Decimal.System#IConvertible#ToInt64*\n  exceptions:\n  - type: System.OverflowException\n    commentId: T:System.OverflowException\n    description: The resulting integer value is less than <xref href=\"System.Int64.MinValue\"></xref> or greater than <xref href=\"System.Int64.MaxValue\"></xref>.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Decimal.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Decimal.System#IConvertible#ToSByte(System.IFormatProvider)\n  commentId: M:System.Decimal.System#IConvertible#ToSByte(System.IFormatProvider)\n  id: System#IConvertible#ToSByte(System.IFormatProvider)\n  isEii: true\n  parent: System.Decimal\n  langs:\n  - csharp\n  name: IConvertible.ToSByte(IFormatProvider)\n  nameWithType: Decimal.IConvertible.ToSByte(IFormatProvider)\n  fullName: Decimal.IConvertible.ToSByte(IFormatProvider)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: For a description of this member, see <xref href=\"System.IConvertible.ToSByte(System.IFormatProvider)\"></xref>.\n  remarks: This member is an explicit interface member implementation. It can be used only when the <xref:System.Decimal> instance is cast to an <xref:System.IConvertible> interface. The recommended alternative is to call either the <xref:System.Decimal.ToSByte%2A?displayProperty=fullName> method or the <xref:System.Convert.ToSByte%2A?displayProperty=fullName> method.\n  syntax:\n    content: sbyte IConvertible.ToSByte (IFormatProvider provider);\n    parameters:\n    - id: provider\n      type: System.IFormatProvider\n      description: This parameter is ignored.\n    return:\n      type: System.SByte\n      description: The value of the current instance, converted to a <xref href=\"System.SByte\"></xref>.\n  overload: System.Decimal.System#IConvertible#ToSByte*\n  exceptions:\n  - type: System.OverflowException\n    commentId: T:System.OverflowException\n    description: The resulting integer value is less than <xref href=\"System.SByte.MinValue\"></xref> or greater than <xref href=\"System.SByte.MaxValue\"></xref>.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Decimal.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Decimal.System#IConvertible#ToSingle(System.IFormatProvider)\n  commentId: M:System.Decimal.System#IConvertible#ToSingle(System.IFormatProvider)\n  id: System#IConvertible#ToSingle(System.IFormatProvider)\n  isEii: true\n  parent: System.Decimal\n  langs:\n  - csharp\n  name: IConvertible.ToSingle(IFormatProvider)\n  nameWithType: Decimal.IConvertible.ToSingle(IFormatProvider)\n  fullName: Decimal.IConvertible.ToSingle(IFormatProvider)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: For a description of this member, see <xref href=\"System.IConvertible.ToSingle(System.IFormatProvider)\"></xref>.\n  remarks: This member is an explicit interface member implementation. It can be used only when the <xref:System.Decimal> instance is cast to an <xref:System.IConvertible> interface. The recommended alternative is to call either the <xref:System.Decimal.ToSingle%2A?displayProperty=fullName> method or the <xref:System.Convert.ToSingle%2A?displayProperty=fullName> method.\n  syntax:\n    content: float IConvertible.ToSingle (IFormatProvider provider);\n    parameters:\n    - id: provider\n      type: System.IFormatProvider\n      description: This parameter is ignored.\n    return:\n      type: System.Single\n      description: The value of the current instance, converted to a <xref href=\"System.Single\"></xref>.\n  overload: System.Decimal.System#IConvertible#ToSingle*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Decimal.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Decimal.System#IConvertible#ToType(System.Type,System.IFormatProvider)\n  commentId: M:System.Decimal.System#IConvertible#ToType(System.Type,System.IFormatProvider)\n  id: System#IConvertible#ToType(System.Type,System.IFormatProvider)\n  isEii: true\n  parent: System.Decimal\n  langs:\n  - csharp\n  name: IConvertible.ToType(Type, IFormatProvider)\n  nameWithType: Decimal.IConvertible.ToType(Type, IFormatProvider)\n  fullName: Decimal.IConvertible.ToType(Type, IFormatProvider)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: For a description of this member, see <xref href=\"System.IConvertible.ToType(System.Type,System.IFormatProvider)\"></xref>.\n  remarks: This member is an explicit interface member implementation. It can be used only when the <xref:System.Decimal> instance is cast to an <xref:System.IConvertible> interface. The recommended alternative is to call the `static` (`Shared` in Visual Basic) <xref:System.Convert.ChangeType%2A?displayProperty=fullName> method instead.\n  syntax:\n    content: object IConvertible.ToType (Type type, IFormatProvider provider);\n    parameters:\n    - id: type\n      type: System.Type\n      description: The type to which to convert the value of this <xref href=\"System.Decimal\"></xref> instance.\n    - id: provider\n      type: System.IFormatProvider\n      description: An <xref href=\"System.IFormatProvider\"></xref> implementation that supplies culture-specific information about the format of the returned value.\n    return:\n      type: System.Object\n      description: The value of the current instance, converted to a <code>type</code>.\n  overload: System.Decimal.System#IConvertible#ToType*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>type</code> is `null`.\n  - type: System.InvalidCastException\n    commentId: T:System.InvalidCastException\n    description: The requested type conversion is not supported.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Decimal.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Decimal.System#IConvertible#ToUInt16(System.IFormatProvider)\n  commentId: M:System.Decimal.System#IConvertible#ToUInt16(System.IFormatProvider)\n  id: System#IConvertible#ToUInt16(System.IFormatProvider)\n  isEii: true\n  parent: System.Decimal\n  langs:\n  - csharp\n  name: IConvertible.ToUInt16(IFormatProvider)\n  nameWithType: Decimal.IConvertible.ToUInt16(IFormatProvider)\n  fullName: Decimal.IConvertible.ToUInt16(IFormatProvider)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: For a description of this member, see <xref href=\"System.IConvertible.ToUInt16(System.IFormatProvider)\"></xref>.\n  remarks: This member is an explicit interface member implementation. It can be used only when the <xref:System.Decimal> instance is cast to an <xref:System.IConvertible> interface. The recommended alternative is to call either the <xref:System.Decimal.ToUInt16%2A?displayProperty=fullName> method or the <xref:System.Convert.ToUInt16%2A?displayProperty=fullName> method.\n  syntax:\n    content: ushort IConvertible.ToUInt16 (IFormatProvider provider);\n    parameters:\n    - id: provider\n      type: System.IFormatProvider\n      description: This parameter is ignored.\n    return:\n      type: System.UInt16\n      description: The value of the current instance, converted to a <xref href=\"System.UInt16\"></xref>.\n  overload: System.Decimal.System#IConvertible#ToUInt16*\n  exceptions:\n  - type: System.OverflowException\n    commentId: T:System.OverflowException\n    description: The resulting integer value is less than <xref href=\"System.UInt16.MinValue\"></xref> or greater than <xref href=\"System.UInt16.MaxValue\"></xref>.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Decimal.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Decimal.System#IConvertible#ToUInt32(System.IFormatProvider)\n  commentId: M:System.Decimal.System#IConvertible#ToUInt32(System.IFormatProvider)\n  id: System#IConvertible#ToUInt32(System.IFormatProvider)\n  isEii: true\n  parent: System.Decimal\n  langs:\n  - csharp\n  name: IConvertible.ToUInt32(IFormatProvider)\n  nameWithType: Decimal.IConvertible.ToUInt32(IFormatProvider)\n  fullName: Decimal.IConvertible.ToUInt32(IFormatProvider)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: For a description of this member, see <xref href=\"System.IConvertible.ToInt32(System.IFormatProvider)\"></xref>.\n  remarks: \"This member is an explicit interface member implementation. It can be used only when the <xref:System.Decimal> instance is cast to an <xref:System.IConvertible> interface. The recommended alternative is to call either the <xref:System.Decimal.ToUInt32%2A?displayProperty=fullName> method or the <xref:System.Convert.ToUInt32%2A?displayProperty=fullName> method.  \\n  \\n The <xref:System.Decimal> value is rounded toward zero to the nearest integer value.\"\n  syntax:\n    content: uint IConvertible.ToUInt32 (IFormatProvider provider);\n    parameters:\n    - id: provider\n      type: System.IFormatProvider\n      description: This parameter is ignored.\n    return:\n      type: System.UInt32\n      description: The value of the current instance, converted to a <xref href=\"System.UInt32\"></xref>.\n  overload: System.Decimal.System#IConvertible#ToUInt32*\n  exceptions:\n  - type: System.OverflowException\n    commentId: T:System.OverflowException\n    description: The resulting integer value is less than <xref href=\"System.UInt32.MinValue\"></xref> or greater than <xref href=\"System.UInt32.MaxValue\"></xref>.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Decimal.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Decimal.System#IConvertible#ToUInt64(System.IFormatProvider)\n  commentId: M:System.Decimal.System#IConvertible#ToUInt64(System.IFormatProvider)\n  id: System#IConvertible#ToUInt64(System.IFormatProvider)\n  isEii: true\n  parent: System.Decimal\n  langs:\n  - csharp\n  name: IConvertible.ToUInt64(IFormatProvider)\n  nameWithType: Decimal.IConvertible.ToUInt64(IFormatProvider)\n  fullName: Decimal.IConvertible.ToUInt64(IFormatProvider)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: For a description of this member, see <xref href=\"System.IConvertible.ToInt64(System.IFormatProvider)\"></xref>.\n  remarks: \"This member is an explicit interface member implementation. It can be used only when the <xref:System.Decimal> instance is cast to an <xref:System.IConvertible> interface. The recommended alternative is to call either the <xref:System.Decimal.ToUInt64%2A?displayProperty=fullName> method or the <xref:System.Convert.ToUInt64%2A?displayProperty=fullName> method.  \\n  \\n The <xref:System.Decimal> value is rounded toward zero to the nearest integer value.\"\n  syntax:\n    content: ulong IConvertible.ToUInt64 (IFormatProvider provider);\n    parameters:\n    - id: provider\n      type: System.IFormatProvider\n      description: This parameter is ignored.\n    return:\n      type: System.UInt64\n      description: The value of the current instance, converted to a <xref href=\"System.UInt64\"></xref>.\n  overload: System.Decimal.System#IConvertible#ToUInt64*\n  exceptions:\n  - type: System.OverflowException\n    commentId: T:System.OverflowException\n    description: The resulting integer value is less than <xref href=\"System.UInt64.MinValue\"></xref> or greater than <xref href=\"System.UInt64.MaxValue\"></xref>.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Decimal.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Decimal.System#Runtime#Serialization#IDeserializationCallback#OnDeserialization(System.Object)\n  commentId: M:System.Decimal.System#Runtime#Serialization#IDeserializationCallback#OnDeserialization(System.Object)\n  id: System#Runtime#Serialization#IDeserializationCallback#OnDeserialization(System.Object)\n  isEii: true\n  parent: System.Decimal\n  langs:\n  - csharp\n  name: IDeserializationCallback.OnDeserialization(Object)\n  nameWithType: Decimal.IDeserializationCallback.OnDeserialization(Object)\n  fullName: Decimal.IDeserializationCallback.OnDeserialization(Object)\n  type: Method\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System\n  summary: Runs when the deserialization of an object has been completed.\n  syntax:\n    content: void IDeserializationCallback.OnDeserialization (object sender);\n    parameters:\n    - id: sender\n      type: System.Object\n      description: The object that initiated the callback. The functionality for this parameter is not currently implemented.\n  overload: System.Decimal.System#Runtime#Serialization#IDeserializationCallback#OnDeserialization*\n  exceptions:\n  - type: System.Runtime.Serialization.SerializationException\n    commentId: T:System.Runtime.Serialization.SerializationException\n    description: The <xref href=\"System.Decimal\"></xref> object contains invalid or corrupted data.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Decimal.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\nreferences:\n- uid: System.ValueType\n  parent: System\n  isExternal: false\n  name: ValueType\n  nameWithType: ValueType\n  fullName: System.ValueType\n- uid: System.OverflowException\n  parent: System\n  isExternal: false\n  name: OverflowException\n  nameWithType: OverflowException\n  fullName: System.OverflowException\n- uid: System.ArgumentNullException\n  parent: System\n  isExternal: false\n  name: ArgumentNullException\n  nameWithType: ArgumentNullException\n  fullName: System.ArgumentNullException\n- uid: System.ArgumentException\n  parent: System\n  isExternal: false\n  name: ArgumentException\n  nameWithType: ArgumentException\n  fullName: System.ArgumentException\n- uid: System.ArgumentOutOfRangeException\n  parent: System\n  isExternal: false\n  name: ArgumentOutOfRangeException\n  nameWithType: ArgumentOutOfRangeException\n  fullName: System.ArgumentOutOfRangeException\n- uid: System.DivideByZeroException\n  parent: System\n  isExternal: false\n  name: DivideByZeroException\n  nameWithType: DivideByZeroException\n  fullName: System.DivideByZeroException\n- uid: System.FormatException\n  parent: System\n  isExternal: false\n  name: FormatException\n  nameWithType: FormatException\n  fullName: System.FormatException\n- uid: System.InvalidCastException\n  parent: System\n  isExternal: false\n  name: InvalidCastException\n  nameWithType: InvalidCastException\n  fullName: System.InvalidCastException\n- uid: System.Runtime.Serialization.SerializationException\n  parent: System.Runtime.Serialization\n  isExternal: false\n  name: SerializationException\n  nameWithType: SerializationException\n  fullName: System.Runtime.Serialization.SerializationException\n- uid: System.Decimal.#ctor(System.Double)\n  parent: System.Decimal\n  isExternal: false\n  name: Decimal(Double)\n  nameWithType: Decimal.Decimal(Double)\n  fullName: Decimal.Decimal(Double)\n- uid: System.Double\n  parent: System\n  isExternal: false\n  name: Double\n  nameWithType: Double\n  fullName: System.Double\n- uid: System.Decimal.#ctor(System.Int32)\n  parent: System.Decimal\n  isExternal: false\n  name: Decimal(Int32)\n  nameWithType: Decimal.Decimal(Int32)\n  fullName: Decimal.Decimal(Int32)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Decimal.#ctor(System.Int32[])\n  parent: System.Decimal\n  isExternal: false\n  name: Decimal(Int32[])\n  nameWithType: Decimal.Decimal(Int32[])\n  fullName: Decimal.Decimal(Int32[])\n- uid: System.Int32[]\n  parent: System\n  isExternal: false\n  name: Int32[]\n  nameWithType: Int32[]\n  fullName: System.Int32[]\n  spec.csharp:\n  - uid: System.Int32\n    name: Int32\n    nameWithType: Int32\n    fullName: System.Int32\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Decimal.#ctor(System.Int64)\n  parent: System.Decimal\n  isExternal: false\n  name: Decimal(Int64)\n  nameWithType: Decimal.Decimal(Int64)\n  fullName: Decimal.Decimal(Int64)\n- uid: System.Int64\n  parent: System\n  isExternal: false\n  name: Int64\n  nameWithType: Int64\n  fullName: System.Int64\n- uid: System.Decimal.#ctor(System.Single)\n  parent: System.Decimal\n  isExternal: false\n  name: Decimal(Single)\n  nameWithType: Decimal.Decimal(Single)\n  fullName: Decimal.Decimal(Single)\n- uid: System.Single\n  parent: System\n  isExternal: false\n  name: Single\n  nameWithType: Single\n  fullName: System.Single\n- uid: System.Decimal.#ctor(System.UInt32)\n  parent: System.Decimal\n  isExternal: false\n  name: Decimal(UInt32)\n  nameWithType: Decimal.Decimal(UInt32)\n  fullName: Decimal.Decimal(UInt32)\n- uid: System.UInt32\n  parent: System\n  isExternal: false\n  name: UInt32\n  nameWithType: UInt32\n  fullName: System.UInt32\n- uid: System.Decimal.#ctor(System.UInt64)\n  parent: System.Decimal\n  isExternal: false\n  name: Decimal(UInt64)\n  nameWithType: Decimal.Decimal(UInt64)\n  fullName: Decimal.Decimal(UInt64)\n- uid: System.UInt64\n  parent: System\n  isExternal: false\n  name: UInt64\n  nameWithType: UInt64\n  fullName: System.UInt64\n- uid: System.Decimal.#ctor(System.Int32,System.Int32,System.Int32,System.Boolean,System.Byte)\n  parent: System.Decimal\n  isExternal: false\n  name: Decimal(Int32, Int32, Int32, Boolean, Byte)\n  nameWithType: Decimal.Decimal(Int32, Int32, Int32, Boolean, Byte)\n  fullName: Decimal.Decimal(Int32, Int32, Int32, Boolean, Byte)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte\n- uid: System.Decimal.Add(System.Decimal,System.Decimal)\n  parent: System.Decimal\n  isExternal: false\n  name: Add(Decimal, Decimal)\n  nameWithType: Decimal.Add(Decimal, Decimal)\n  fullName: Decimal.Add(Decimal, Decimal)\n- uid: System.Decimal\n  parent: System\n  isExternal: false\n  name: Decimal\n  nameWithType: Decimal\n  fullName: System.Decimal\n- uid: System.Decimal.Ceiling(System.Decimal)\n  parent: System.Decimal\n  isExternal: false\n  name: Ceiling(Decimal)\n  nameWithType: Decimal.Ceiling(Decimal)\n  fullName: Decimal.Ceiling(Decimal)\n- uid: System.Decimal.Compare(System.Decimal,System.Decimal)\n  parent: System.Decimal\n  isExternal: false\n  name: Compare(Decimal, Decimal)\n  nameWithType: Decimal.Compare(Decimal, Decimal)\n  fullName: Decimal.Compare(Decimal, Decimal)\n- uid: System.Decimal.CompareTo(System.Object)\n  parent: System.Decimal\n  isExternal: false\n  name: CompareTo(Object)\n  nameWithType: Decimal.CompareTo(Object)\n  fullName: Decimal.CompareTo(Object)\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Decimal.CompareTo(System.Decimal)\n  parent: System.Decimal\n  isExternal: false\n  name: CompareTo(Decimal)\n  nameWithType: Decimal.CompareTo(Decimal)\n  fullName: Decimal.CompareTo(Decimal)\n- uid: System.Decimal.Divide(System.Decimal,System.Decimal)\n  parent: System.Decimal\n  isExternal: false\n  name: Divide(Decimal, Decimal)\n  nameWithType: Decimal.Divide(Decimal, Decimal)\n  fullName: Decimal.Divide(Decimal, Decimal)\n- uid: System.Decimal.Equals(System.Decimal)\n  parent: System.Decimal\n  isExternal: false\n  name: Equals(Decimal)\n  nameWithType: Decimal.Equals(Decimal)\n  fullName: Decimal.Equals(Decimal)\n- uid: System.Decimal.Equals(System.Object)\n  parent: System.Decimal\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Decimal.Equals(Object)\n  fullName: Decimal.Equals(Object)\n- uid: System.Decimal.Equals(System.Decimal,System.Decimal)\n  parent: System.Decimal\n  isExternal: false\n  name: Equals(Decimal, Decimal)\n  nameWithType: Decimal.Equals(Decimal, Decimal)\n  fullName: Decimal.Equals(Decimal, Decimal)\n- uid: System.Decimal.Floor(System.Decimal)\n  parent: System.Decimal\n  isExternal: false\n  name: Floor(Decimal)\n  nameWithType: Decimal.Floor(Decimal)\n  fullName: Decimal.Floor(Decimal)\n- uid: System.Decimal.FromOACurrency(System.Int64)\n  parent: System.Decimal\n  isExternal: false\n  name: FromOACurrency(Int64)\n  nameWithType: Decimal.FromOACurrency(Int64)\n  fullName: Decimal.FromOACurrency(Int64)\n- uid: System.Decimal.GetBits(System.Decimal)\n  parent: System.Decimal\n  isExternal: false\n  name: GetBits(Decimal)\n  nameWithType: Decimal.GetBits(Decimal)\n  fullName: Decimal.GetBits(Decimal)\n- uid: System.Decimal.GetHashCode\n  parent: System.Decimal\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Decimal.GetHashCode()\n  fullName: Decimal.GetHashCode()\n- uid: System.Decimal.GetTypeCode\n  parent: System.Decimal\n  isExternal: false\n  name: GetTypeCode()\n  nameWithType: Decimal.GetTypeCode()\n  fullName: Decimal.GetTypeCode()\n- uid: System.TypeCode\n  parent: System\n  isExternal: false\n  name: TypeCode\n  nameWithType: TypeCode\n  fullName: System.TypeCode\n- uid: System.Decimal.MaxValue\n  parent: System.Decimal\n  isExternal: false\n  name: MaxValue\n  nameWithType: Decimal.MaxValue\n  fullName: Decimal.MaxValue\n- uid: System.Decimal.MinusOne\n  parent: System.Decimal\n  isExternal: false\n  name: MinusOne\n  nameWithType: Decimal.MinusOne\n  fullName: Decimal.MinusOne\n- uid: System.Decimal.MinValue\n  parent: System.Decimal\n  isExternal: false\n  name: MinValue\n  nameWithType: Decimal.MinValue\n  fullName: Decimal.MinValue\n- uid: System.Decimal.Multiply(System.Decimal,System.Decimal)\n  parent: System.Decimal\n  isExternal: false\n  name: Multiply(Decimal, Decimal)\n  nameWithType: Decimal.Multiply(Decimal, Decimal)\n  fullName: Decimal.Multiply(Decimal, Decimal)\n- uid: System.Decimal.Negate(System.Decimal)\n  parent: System.Decimal\n  isExternal: false\n  name: Negate(Decimal)\n  nameWithType: Decimal.Negate(Decimal)\n  fullName: Decimal.Negate(Decimal)\n- uid: System.Decimal.One\n  parent: System.Decimal\n  isExternal: false\n  name: One\n  nameWithType: Decimal.One\n  fullName: Decimal.One\n- uid: System.Decimal.op_Addition(System.Decimal,System.Decimal)\n  parent: System.Decimal\n  isExternal: false\n  name: op_Addition(Decimal, Decimal)\n  nameWithType: Decimal.op_Addition(Decimal, Decimal)\n  fullName: Decimal.op_Addition(Decimal, Decimal)\n- uid: System.Decimal.op_Decrement(System.Decimal)\n  parent: System.Decimal\n  isExternal: false\n  name: op_Decrement(Decimal)\n  nameWithType: Decimal.op_Decrement(Decimal)\n  fullName: Decimal.op_Decrement(Decimal)\n- uid: System.Decimal.op_Division(System.Decimal,System.Decimal)\n  parent: System.Decimal\n  isExternal: false\n  name: op_Division(Decimal, Decimal)\n  nameWithType: Decimal.op_Division(Decimal, Decimal)\n  fullName: Decimal.op_Division(Decimal, Decimal)\n- uid: System.Decimal.op_Equality(System.Decimal,System.Decimal)\n  parent: System.Decimal\n  isExternal: false\n  name: op_Equality(Decimal, Decimal)\n  nameWithType: Decimal.op_Equality(Decimal, Decimal)\n  fullName: Decimal.op_Equality(Decimal, Decimal)\n- uid: System.Decimal.op_Explicit(System.Single to System.Decimal)\n  parent: System.Decimal\n  isExternal: false\n  name: op_Explicit(Single to Decimal)\n  nameWithType: Decimal.op_Explicit(Single to Decimal)\n  fullName: Decimal.op_Explicit(Single to Decimal)\n- uid: System.Decimal.op_Explicit(System.Double to System.Decimal)\n  parent: System.Decimal\n  isExternal: false\n  name: op_Explicit(Double to Decimal)\n  nameWithType: Decimal.op_Explicit(Double to Decimal)\n  fullName: Decimal.op_Explicit(Double to Decimal)\n- uid: System.Decimal.op_Explicit(System.Decimal to System.UInt64)\n  parent: System.Decimal\n  isExternal: false\n  name: op_Explicit(Decimal to UInt64)\n  nameWithType: Decimal.op_Explicit(Decimal to UInt64)\n  fullName: Decimal.op_Explicit(Decimal to UInt64)\n- uid: System.Decimal.op_Explicit(System.Decimal to System.UInt32)\n  parent: System.Decimal\n  isExternal: false\n  name: op_Explicit(Decimal to UInt32)\n  nameWithType: Decimal.op_Explicit(Decimal to UInt32)\n  fullName: Decimal.op_Explicit(Decimal to UInt32)\n- uid: System.Decimal.op_Explicit(System.Decimal to System.UInt16)\n  parent: System.Decimal\n  isExternal: false\n  name: op_Explicit(Decimal to UInt16)\n  nameWithType: Decimal.op_Explicit(Decimal to UInt16)\n  fullName: Decimal.op_Explicit(Decimal to UInt16)\n- uid: System.UInt16\n  parent: System\n  isExternal: false\n  name: UInt16\n  nameWithType: UInt16\n  fullName: System.UInt16\n- uid: System.Decimal.op_Explicit(System.Decimal to System.Single)\n  parent: System.Decimal\n  isExternal: false\n  name: op_Explicit(Decimal to Single)\n  nameWithType: Decimal.op_Explicit(Decimal to Single)\n  fullName: Decimal.op_Explicit(Decimal to Single)\n- uid: System.Decimal.op_Explicit(System.Decimal to System.SByte)\n  parent: System.Decimal\n  isExternal: false\n  name: op_Explicit(Decimal to SByte)\n  nameWithType: Decimal.op_Explicit(Decimal to SByte)\n  fullName: Decimal.op_Explicit(Decimal to SByte)\n- uid: System.SByte\n  parent: System\n  isExternal: false\n  name: SByte\n  nameWithType: SByte\n  fullName: System.SByte\n- uid: System.Decimal.op_Explicit(System.Decimal to System.Int64)\n  parent: System.Decimal\n  isExternal: false\n  name: op_Explicit(Decimal to Int64)\n  nameWithType: Decimal.op_Explicit(Decimal to Int64)\n  fullName: Decimal.op_Explicit(Decimal to Int64)\n- uid: System.Decimal.op_Explicit(System.Decimal to System.Int32)\n  parent: System.Decimal\n  isExternal: false\n  name: op_Explicit(Decimal to Int32)\n  nameWithType: Decimal.op_Explicit(Decimal to Int32)\n  fullName: Decimal.op_Explicit(Decimal to Int32)\n- uid: System.Decimal.op_Explicit(System.Decimal to System.Int16)\n  parent: System.Decimal\n  isExternal: false\n  name: op_Explicit(Decimal to Int16)\n  nameWithType: Decimal.op_Explicit(Decimal to Int16)\n  fullName: Decimal.op_Explicit(Decimal to Int16)\n- uid: System.Int16\n  parent: System\n  isExternal: false\n  name: Int16\n  nameWithType: Int16\n  fullName: System.Int16\n- uid: System.Decimal.op_Explicit(System.Decimal to System.Double)\n  parent: System.Decimal\n  isExternal: false\n  name: op_Explicit(Decimal to Double)\n  nameWithType: Decimal.op_Explicit(Decimal to Double)\n  fullName: Decimal.op_Explicit(Decimal to Double)\n- uid: System.Decimal.op_Explicit(System.Decimal to System.Char)\n  parent: System.Decimal\n  isExternal: false\n  name: op_Explicit(Decimal to Char)\n  nameWithType: Decimal.op_Explicit(Decimal to Char)\n  fullName: Decimal.op_Explicit(Decimal to Char)\n- uid: System.Char\n  parent: System\n  isExternal: false\n  name: Char\n  nameWithType: Char\n  fullName: System.Char\n- uid: System.Decimal.op_Explicit(System.Decimal to System.Byte)\n  parent: System.Decimal\n  isExternal: false\n  name: op_Explicit(Decimal to Byte)\n  nameWithType: Decimal.op_Explicit(Decimal to Byte)\n  fullName: Decimal.op_Explicit(Decimal to Byte)\n- uid: System.Decimal.op_GreaterThan(System.Decimal,System.Decimal)\n  parent: System.Decimal\n  isExternal: false\n  name: op_GreaterThan(Decimal, Decimal)\n  nameWithType: Decimal.op_GreaterThan(Decimal, Decimal)\n  fullName: Decimal.op_GreaterThan(Decimal, Decimal)\n- uid: System.Decimal.op_GreaterThanOrEqual(System.Decimal,System.Decimal)\n  parent: System.Decimal\n  isExternal: false\n  name: op_GreaterThanOrEqual(Decimal, Decimal)\n  nameWithType: Decimal.op_GreaterThanOrEqual(Decimal, Decimal)\n  fullName: Decimal.op_GreaterThanOrEqual(Decimal, Decimal)\n- uid: System.Decimal.op_Implicit(System.UInt32 to System.Decimal)\n  parent: System.Decimal\n  isExternal: false\n  name: op_Implicit(UInt32 to Decimal)\n  nameWithType: Decimal.op_Implicit(UInt32 to Decimal)\n  fullName: Decimal.op_Implicit(UInt32 to Decimal)\n- uid: System.Decimal.op_Implicit(System.UInt16 to System.Decimal)\n  parent: System.Decimal\n  isExternal: false\n  name: op_Implicit(UInt16 to Decimal)\n  nameWithType: Decimal.op_Implicit(UInt16 to Decimal)\n  fullName: Decimal.op_Implicit(UInt16 to Decimal)\n- uid: System.Decimal.op_Implicit(System.SByte to System.Decimal)\n  parent: System.Decimal\n  isExternal: false\n  name: op_Implicit(SByte to Decimal)\n  nameWithType: Decimal.op_Implicit(SByte to Decimal)\n  fullName: Decimal.op_Implicit(SByte to Decimal)\n- uid: System.Decimal.op_Implicit(System.Int64 to System.Decimal)\n  parent: System.Decimal\n  isExternal: false\n  name: op_Implicit(Int64 to Decimal)\n  nameWithType: Decimal.op_Implicit(Int64 to Decimal)\n  fullName: Decimal.op_Implicit(Int64 to Decimal)\n- uid: System.Decimal.op_Implicit(System.UInt64 to System.Decimal)\n  parent: System.Decimal\n  isExternal: false\n  name: op_Implicit(UInt64 to Decimal)\n  nameWithType: Decimal.op_Implicit(UInt64 to Decimal)\n  fullName: Decimal.op_Implicit(UInt64 to Decimal)\n- uid: System.Decimal.op_Implicit(System.Int16 to System.Decimal)\n  parent: System.Decimal\n  isExternal: false\n  name: op_Implicit(Int16 to Decimal)\n  nameWithType: Decimal.op_Implicit(Int16 to Decimal)\n  fullName: Decimal.op_Implicit(Int16 to Decimal)\n- uid: System.Decimal.op_Implicit(System.Char to System.Decimal)\n  parent: System.Decimal\n  isExternal: false\n  name: op_Implicit(Char to Decimal)\n  nameWithType: Decimal.op_Implicit(Char to Decimal)\n  fullName: Decimal.op_Implicit(Char to Decimal)\n- uid: System.Decimal.op_Implicit(System.Byte to System.Decimal)\n  parent: System.Decimal\n  isExternal: false\n  name: op_Implicit(Byte to Decimal)\n  nameWithType: Decimal.op_Implicit(Byte to Decimal)\n  fullName: Decimal.op_Implicit(Byte to Decimal)\n- uid: System.Decimal.op_Implicit(System.Int32 to System.Decimal)\n  parent: System.Decimal\n  isExternal: false\n  name: op_Implicit(Int32 to Decimal)\n  nameWithType: Decimal.op_Implicit(Int32 to Decimal)\n  fullName: Decimal.op_Implicit(Int32 to Decimal)\n- uid: System.Decimal.op_Increment(System.Decimal)\n  parent: System.Decimal\n  isExternal: false\n  name: op_Increment(Decimal)\n  nameWithType: Decimal.op_Increment(Decimal)\n  fullName: Decimal.op_Increment(Decimal)\n- uid: System.Decimal.op_Inequality(System.Decimal,System.Decimal)\n  parent: System.Decimal\n  isExternal: false\n  name: op_Inequality(Decimal, Decimal)\n  nameWithType: Decimal.op_Inequality(Decimal, Decimal)\n  fullName: Decimal.op_Inequality(Decimal, Decimal)\n- uid: System.Decimal.op_LessThan(System.Decimal,System.Decimal)\n  parent: System.Decimal\n  isExternal: false\n  name: op_LessThan(Decimal, Decimal)\n  nameWithType: Decimal.op_LessThan(Decimal, Decimal)\n  fullName: Decimal.op_LessThan(Decimal, Decimal)\n- uid: System.Decimal.op_LessThanOrEqual(System.Decimal,System.Decimal)\n  parent: System.Decimal\n  isExternal: false\n  name: op_LessThanOrEqual(Decimal, Decimal)\n  nameWithType: Decimal.op_LessThanOrEqual(Decimal, Decimal)\n  fullName: Decimal.op_LessThanOrEqual(Decimal, Decimal)\n- uid: System.Decimal.op_Modulus(System.Decimal,System.Decimal)\n  parent: System.Decimal\n  isExternal: false\n  name: op_Modulus(Decimal, Decimal)\n  nameWithType: Decimal.op_Modulus(Decimal, Decimal)\n  fullName: Decimal.op_Modulus(Decimal, Decimal)\n- uid: System.Decimal.op_Multiply(System.Decimal,System.Decimal)\n  parent: System.Decimal\n  isExternal: false\n  name: op_Multiply(Decimal, Decimal)\n  nameWithType: Decimal.op_Multiply(Decimal, Decimal)\n  fullName: Decimal.op_Multiply(Decimal, Decimal)\n- uid: System.Decimal.op_Subtraction(System.Decimal,System.Decimal)\n  parent: System.Decimal\n  isExternal: false\n  name: op_Subtraction(Decimal, Decimal)\n  nameWithType: Decimal.op_Subtraction(Decimal, Decimal)\n  fullName: Decimal.op_Subtraction(Decimal, Decimal)\n- uid: System.Decimal.op_UnaryNegation(System.Decimal)\n  parent: System.Decimal\n  isExternal: false\n  name: op_UnaryNegation(Decimal)\n  nameWithType: Decimal.op_UnaryNegation(Decimal)\n  fullName: Decimal.op_UnaryNegation(Decimal)\n- uid: System.Decimal.op_UnaryPlus(System.Decimal)\n  parent: System.Decimal\n  isExternal: false\n  name: op_UnaryPlus(Decimal)\n  nameWithType: Decimal.op_UnaryPlus(Decimal)\n  fullName: Decimal.op_UnaryPlus(Decimal)\n- uid: System.Decimal.Parse(System.String)\n  parent: System.Decimal\n  isExternal: false\n  name: Parse(String)\n  nameWithType: Decimal.Parse(String)\n  fullName: Decimal.Parse(String)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Decimal.Parse(System.String,System.Globalization.NumberStyles)\n  parent: System.Decimal\n  isExternal: false\n  name: Parse(String, NumberStyles)\n  nameWithType: Decimal.Parse(String, NumberStyles)\n  fullName: Decimal.Parse(String, NumberStyles)\n- uid: System.Globalization.NumberStyles\n  parent: System.Globalization\n  isExternal: false\n  name: NumberStyles\n  nameWithType: NumberStyles\n  fullName: System.Globalization.NumberStyles\n- uid: System.Decimal.Parse(System.String,System.IFormatProvider)\n  parent: System.Decimal\n  isExternal: false\n  name: Parse(String, IFormatProvider)\n  nameWithType: Decimal.Parse(String, IFormatProvider)\n  fullName: Decimal.Parse(String, IFormatProvider)\n- uid: System.IFormatProvider\n  parent: System\n  isExternal: false\n  name: IFormatProvider\n  nameWithType: IFormatProvider\n  fullName: System.IFormatProvider\n- uid: System.Decimal.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)\n  parent: System.Decimal\n  isExternal: false\n  name: Parse(String, NumberStyles, IFormatProvider)\n  nameWithType: Decimal.Parse(String, NumberStyles, IFormatProvider)\n  fullName: Decimal.Parse(String, NumberStyles, IFormatProvider)\n- uid: System.Decimal.Remainder(System.Decimal,System.Decimal)\n  parent: System.Decimal\n  isExternal: false\n  name: Remainder(Decimal, Decimal)\n  nameWithType: Decimal.Remainder(Decimal, Decimal)\n  fullName: Decimal.Remainder(Decimal, Decimal)\n- uid: System.Decimal.Round(System.Decimal,System.Int32,System.MidpointRounding)\n  parent: System.Decimal\n  isExternal: false\n  name: Round(Decimal, Int32, MidpointRounding)\n  nameWithType: Decimal.Round(Decimal, Int32, MidpointRounding)\n  fullName: Decimal.Round(Decimal, Int32, MidpointRounding)\n- uid: System.MidpointRounding\n  parent: System\n  isExternal: false\n  name: MidpointRounding\n  nameWithType: MidpointRounding\n  fullName: System.MidpointRounding\n- uid: System.Decimal.Round(System.Decimal,System.MidpointRounding)\n  parent: System.Decimal\n  isExternal: false\n  name: Round(Decimal, MidpointRounding)\n  nameWithType: Decimal.Round(Decimal, MidpointRounding)\n  fullName: Decimal.Round(Decimal, MidpointRounding)\n- uid: System.Decimal.Round(System.Decimal)\n  parent: System.Decimal\n  isExternal: false\n  name: Round(Decimal)\n  nameWithType: Decimal.Round(Decimal)\n  fullName: Decimal.Round(Decimal)\n- uid: System.Decimal.Round(System.Decimal,System.Int32)\n  parent: System.Decimal\n  isExternal: false\n  name: Round(Decimal, Int32)\n  nameWithType: Decimal.Round(Decimal, Int32)\n  fullName: Decimal.Round(Decimal, Int32)\n- uid: System.Decimal.Subtract(System.Decimal,System.Decimal)\n  parent: System.Decimal\n  isExternal: false\n  name: Subtract(Decimal, Decimal)\n  nameWithType: Decimal.Subtract(Decimal, Decimal)\n  fullName: Decimal.Subtract(Decimal, Decimal)\n- uid: System.Decimal.ToByte(System.Decimal)\n  parent: System.Decimal\n  isExternal: false\n  name: ToByte(Decimal)\n  nameWithType: Decimal.ToByte(Decimal)\n  fullName: Decimal.ToByte(Decimal)\n- uid: System.Decimal.ToDouble(System.Decimal)\n  parent: System.Decimal\n  isExternal: false\n  name: ToDouble(Decimal)\n  nameWithType: Decimal.ToDouble(Decimal)\n  fullName: Decimal.ToDouble(Decimal)\n- uid: System.Decimal.ToInt16(System.Decimal)\n  parent: System.Decimal\n  isExternal: false\n  name: ToInt16(Decimal)\n  nameWithType: Decimal.ToInt16(Decimal)\n  fullName: Decimal.ToInt16(Decimal)\n- uid: System.Decimal.ToInt32(System.Decimal)\n  parent: System.Decimal\n  isExternal: false\n  name: ToInt32(Decimal)\n  nameWithType: Decimal.ToInt32(Decimal)\n  fullName: Decimal.ToInt32(Decimal)\n- uid: System.Decimal.ToInt64(System.Decimal)\n  parent: System.Decimal\n  isExternal: false\n  name: ToInt64(Decimal)\n  nameWithType: Decimal.ToInt64(Decimal)\n  fullName: Decimal.ToInt64(Decimal)\n- uid: System.Decimal.ToOACurrency(System.Decimal)\n  parent: System.Decimal\n  isExternal: false\n  name: ToOACurrency(Decimal)\n  nameWithType: Decimal.ToOACurrency(Decimal)\n  fullName: Decimal.ToOACurrency(Decimal)\n- uid: System.Decimal.ToSByte(System.Decimal)\n  parent: System.Decimal\n  isExternal: false\n  name: ToSByte(Decimal)\n  nameWithType: Decimal.ToSByte(Decimal)\n  fullName: Decimal.ToSByte(Decimal)\n- uid: System.Decimal.ToSingle(System.Decimal)\n  parent: System.Decimal\n  isExternal: false\n  name: ToSingle(Decimal)\n  nameWithType: Decimal.ToSingle(Decimal)\n  fullName: Decimal.ToSingle(Decimal)\n- uid: System.Decimal.ToString(System.String,System.IFormatProvider)\n  parent: System.Decimal\n  isExternal: false\n  name: ToString(String, IFormatProvider)\n  nameWithType: Decimal.ToString(String, IFormatProvider)\n  fullName: Decimal.ToString(String, IFormatProvider)\n- uid: System.Decimal.ToString(System.IFormatProvider)\n  parent: System.Decimal\n  isExternal: false\n  name: ToString(IFormatProvider)\n  nameWithType: Decimal.ToString(IFormatProvider)\n  fullName: Decimal.ToString(IFormatProvider)\n- uid: System.Decimal.ToString\n  parent: System.Decimal\n  isExternal: false\n  name: ToString()\n  nameWithType: Decimal.ToString()\n  fullName: Decimal.ToString()\n- uid: System.Decimal.ToString(System.String)\n  parent: System.Decimal\n  isExternal: false\n  name: ToString(String)\n  nameWithType: Decimal.ToString(String)\n  fullName: Decimal.ToString(String)\n- uid: System.Decimal.ToUInt16(System.Decimal)\n  parent: System.Decimal\n  isExternal: false\n  name: ToUInt16(Decimal)\n  nameWithType: Decimal.ToUInt16(Decimal)\n  fullName: Decimal.ToUInt16(Decimal)\n- uid: System.Decimal.ToUInt32(System.Decimal)\n  parent: System.Decimal\n  isExternal: false\n  name: ToUInt32(Decimal)\n  nameWithType: Decimal.ToUInt32(Decimal)\n  fullName: Decimal.ToUInt32(Decimal)\n- uid: System.Decimal.ToUInt64(System.Decimal)\n  parent: System.Decimal\n  isExternal: false\n  name: ToUInt64(Decimal)\n  nameWithType: Decimal.ToUInt64(Decimal)\n  fullName: Decimal.ToUInt64(Decimal)\n- uid: System.Decimal.Truncate(System.Decimal)\n  parent: System.Decimal\n  isExternal: false\n  name: Truncate(Decimal)\n  nameWithType: Decimal.Truncate(Decimal)\n  fullName: Decimal.Truncate(Decimal)\n- uid: System.Decimal.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Decimal@)\n  parent: System.Decimal\n  isExternal: false\n  name: TryParse(String, NumberStyles, IFormatProvider, Decimal)\n  nameWithType: Decimal.TryParse(String, NumberStyles, IFormatProvider, Decimal)\n  fullName: Decimal.TryParse(String, NumberStyles, IFormatProvider, Decimal)\n- uid: System.Decimal.TryParse(System.String,System.Decimal@)\n  parent: System.Decimal\n  isExternal: false\n  name: TryParse(String, Decimal)\n  nameWithType: Decimal.TryParse(String, Decimal)\n  fullName: Decimal.TryParse(String, Decimal)\n- uid: System.Decimal.Zero\n  parent: System.Decimal\n  isExternal: false\n  name: Zero\n  nameWithType: Decimal.Zero\n  fullName: Decimal.Zero\n- uid: System.Decimal.System#IComparable#CompareTo(System.Object)\n  parent: System.Decimal\n  isExternal: false\n  name: IComparable.CompareTo(Object)\n  nameWithType: Decimal.IComparable.CompareTo(Object)\n  fullName: Decimal.IComparable.CompareTo(Object)\n- uid: System.Decimal.System#IConvertible#GetTypeCode\n  parent: System.Decimal\n  isExternal: false\n  name: IConvertible.GetTypeCode()\n  nameWithType: Decimal.IConvertible.GetTypeCode()\n  fullName: Decimal.IConvertible.GetTypeCode()\n- uid: System.Decimal.System#IConvertible#ToBoolean(System.IFormatProvider)\n  parent: System.Decimal\n  isExternal: false\n  name: IConvertible.ToBoolean(IFormatProvider)\n  nameWithType: Decimal.IConvertible.ToBoolean(IFormatProvider)\n  fullName: Decimal.IConvertible.ToBoolean(IFormatProvider)\n- uid: System.Decimal.System#IConvertible#ToByte(System.IFormatProvider)\n  parent: System.Decimal\n  isExternal: false\n  name: IConvertible.ToByte(IFormatProvider)\n  nameWithType: Decimal.IConvertible.ToByte(IFormatProvider)\n  fullName: Decimal.IConvertible.ToByte(IFormatProvider)\n- uid: System.Decimal.System#IConvertible#ToChar(System.IFormatProvider)\n  parent: System.Decimal\n  isExternal: false\n  name: IConvertible.ToChar(IFormatProvider)\n  nameWithType: Decimal.IConvertible.ToChar(IFormatProvider)\n  fullName: Decimal.IConvertible.ToChar(IFormatProvider)\n- uid: System.Decimal.System#IConvertible#ToDateTime(System.IFormatProvider)\n  parent: System.Decimal\n  isExternal: false\n  name: IConvertible.ToDateTime(IFormatProvider)\n  nameWithType: Decimal.IConvertible.ToDateTime(IFormatProvider)\n  fullName: Decimal.IConvertible.ToDateTime(IFormatProvider)\n- uid: System.DateTime\n  parent: System\n  isExternal: false\n  name: DateTime\n  nameWithType: DateTime\n  fullName: System.DateTime\n- uid: System.Decimal.System#IConvertible#ToDecimal(System.IFormatProvider)\n  parent: System.Decimal\n  isExternal: false\n  name: IConvertible.ToDecimal(IFormatProvider)\n  nameWithType: Decimal.IConvertible.ToDecimal(IFormatProvider)\n  fullName: Decimal.IConvertible.ToDecimal(IFormatProvider)\n- uid: System.Decimal.System#IConvertible#ToDouble(System.IFormatProvider)\n  parent: System.Decimal\n  isExternal: false\n  name: IConvertible.ToDouble(IFormatProvider)\n  nameWithType: Decimal.IConvertible.ToDouble(IFormatProvider)\n  fullName: Decimal.IConvertible.ToDouble(IFormatProvider)\n- uid: System.Decimal.System#IConvertible#ToInt16(System.IFormatProvider)\n  parent: System.Decimal\n  isExternal: false\n  name: IConvertible.ToInt16(IFormatProvider)\n  nameWithType: Decimal.IConvertible.ToInt16(IFormatProvider)\n  fullName: Decimal.IConvertible.ToInt16(IFormatProvider)\n- uid: System.Decimal.System#IConvertible#ToInt32(System.IFormatProvider)\n  parent: System.Decimal\n  isExternal: false\n  name: IConvertible.ToInt32(IFormatProvider)\n  nameWithType: Decimal.IConvertible.ToInt32(IFormatProvider)\n  fullName: Decimal.IConvertible.ToInt32(IFormatProvider)\n- uid: System.Decimal.System#IConvertible#ToInt64(System.IFormatProvider)\n  parent: System.Decimal\n  isExternal: false\n  name: IConvertible.ToInt64(IFormatProvider)\n  nameWithType: Decimal.IConvertible.ToInt64(IFormatProvider)\n  fullName: Decimal.IConvertible.ToInt64(IFormatProvider)\n- uid: System.Decimal.System#IConvertible#ToSByte(System.IFormatProvider)\n  parent: System.Decimal\n  isExternal: false\n  name: IConvertible.ToSByte(IFormatProvider)\n  nameWithType: Decimal.IConvertible.ToSByte(IFormatProvider)\n  fullName: Decimal.IConvertible.ToSByte(IFormatProvider)\n- uid: System.Decimal.System#IConvertible#ToSingle(System.IFormatProvider)\n  parent: System.Decimal\n  isExternal: false\n  name: IConvertible.ToSingle(IFormatProvider)\n  nameWithType: Decimal.IConvertible.ToSingle(IFormatProvider)\n  fullName: Decimal.IConvertible.ToSingle(IFormatProvider)\n- uid: System.Decimal.System#IConvertible#ToType(System.Type,System.IFormatProvider)\n  parent: System.Decimal\n  isExternal: false\n  name: IConvertible.ToType(Type, IFormatProvider)\n  nameWithType: Decimal.IConvertible.ToType(Type, IFormatProvider)\n  fullName: Decimal.IConvertible.ToType(Type, IFormatProvider)\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.Decimal.System#IConvertible#ToUInt16(System.IFormatProvider)\n  parent: System.Decimal\n  isExternal: false\n  name: IConvertible.ToUInt16(IFormatProvider)\n  nameWithType: Decimal.IConvertible.ToUInt16(IFormatProvider)\n  fullName: Decimal.IConvertible.ToUInt16(IFormatProvider)\n- uid: System.Decimal.System#IConvertible#ToUInt32(System.IFormatProvider)\n  parent: System.Decimal\n  isExternal: false\n  name: IConvertible.ToUInt32(IFormatProvider)\n  nameWithType: Decimal.IConvertible.ToUInt32(IFormatProvider)\n  fullName: Decimal.IConvertible.ToUInt32(IFormatProvider)\n- uid: System.Decimal.System#IConvertible#ToUInt64(System.IFormatProvider)\n  parent: System.Decimal\n  isExternal: false\n  name: IConvertible.ToUInt64(IFormatProvider)\n  nameWithType: Decimal.IConvertible.ToUInt64(IFormatProvider)\n  fullName: Decimal.IConvertible.ToUInt64(IFormatProvider)\n- uid: System.Decimal.System#Runtime#Serialization#IDeserializationCallback#OnDeserialization(System.Object)\n  parent: System.Decimal\n  isExternal: false\n  name: IDeserializationCallback.OnDeserialization(Object)\n  nameWithType: Decimal.IDeserializationCallback.OnDeserialization(Object)\n  fullName: Decimal.IDeserializationCallback.OnDeserialization(Object)\n- uid: System.Decimal.op_Implicit*\n  parent: System.Decimal\n  isExternal: false\n  name: op_Implicit\n  nameWithType: Decimal.op_Implicit\n  fullName: Decimal.op_Implicit\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Decimal.xml\n- uid: System.Decimal.#ctor*\n  parent: System.Decimal\n  isExternal: false\n  name: Decimal\n  nameWithType: Decimal.Decimal\n  fullName: Decimal.Decimal\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Decimal.xml\n- uid: System.Decimal.Add*\n  parent: System.Decimal\n  isExternal: false\n  name: Add\n  nameWithType: Decimal.Add\n  fullName: Decimal.Add\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Decimal.xml\n- uid: System.Decimal.Ceiling*\n  parent: System.Decimal\n  isExternal: false\n  name: Ceiling\n  nameWithType: Decimal.Ceiling\n  fullName: Decimal.Ceiling\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Decimal.xml\n- uid: System.Decimal.Compare*\n  parent: System.Decimal\n  isExternal: false\n  name: Compare\n  nameWithType: Decimal.Compare\n  fullName: Decimal.Compare\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Decimal.xml\n- uid: System.Decimal.CompareTo*\n  parent: System.Decimal\n  isExternal: false\n  name: CompareTo\n  nameWithType: Decimal.CompareTo\n  fullName: Decimal.CompareTo\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Decimal.xml\n- uid: System.Decimal.Divide*\n  parent: System.Decimal\n  isExternal: false\n  name: Divide\n  nameWithType: Decimal.Divide\n  fullName: Decimal.Divide\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Decimal.xml\n- uid: System.Decimal.Equals*\n  parent: System.Decimal\n  isExternal: false\n  name: Equals\n  nameWithType: Decimal.Equals\n  fullName: Decimal.Equals\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Decimal.xml\n- uid: System.Decimal.Floor*\n  parent: System.Decimal\n  isExternal: false\n  name: Floor\n  nameWithType: Decimal.Floor\n  fullName: Decimal.Floor\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Decimal.xml\n- uid: System.Decimal.FromOACurrency*\n  parent: System.Decimal\n  isExternal: false\n  name: FromOACurrency\n  nameWithType: Decimal.FromOACurrency\n  fullName: Decimal.FromOACurrency\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Decimal.xml\n- uid: System.Decimal.GetBits*\n  parent: System.Decimal\n  isExternal: false\n  name: GetBits\n  nameWithType: Decimal.GetBits\n  fullName: Decimal.GetBits\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Decimal.xml\n- uid: System.Decimal.GetHashCode*\n  parent: System.Decimal\n  isExternal: false\n  name: GetHashCode\n  nameWithType: Decimal.GetHashCode\n  fullName: Decimal.GetHashCode\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Decimal.xml\n- uid: System.Decimal.GetTypeCode*\n  parent: System.Decimal\n  isExternal: false\n  name: GetTypeCode\n  nameWithType: Decimal.GetTypeCode\n  fullName: Decimal.GetTypeCode\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Decimal.xml\n- uid: System.Decimal.Multiply*\n  parent: System.Decimal\n  isExternal: false\n  name: Multiply\n  nameWithType: Decimal.Multiply\n  fullName: Decimal.Multiply\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Decimal.xml\n- uid: System.Decimal.Negate*\n  parent: System.Decimal\n  isExternal: false\n  name: Negate\n  nameWithType: Decimal.Negate\n  fullName: Decimal.Negate\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Decimal.xml\n- uid: System.Decimal.op_Addition*\n  parent: System.Decimal\n  isExternal: false\n  name: op_Addition\n  nameWithType: Decimal.op_Addition\n  fullName: Decimal.op_Addition\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Decimal.xml\n- uid: System.Decimal.op_Decrement*\n  parent: System.Decimal\n  isExternal: false\n  name: op_Decrement\n  nameWithType: Decimal.op_Decrement\n  fullName: Decimal.op_Decrement\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Decimal.xml\n- uid: System.Decimal.op_Division*\n  parent: System.Decimal\n  isExternal: false\n  name: op_Division\n  nameWithType: Decimal.op_Division\n  fullName: Decimal.op_Division\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Decimal.xml\n- uid: System.Decimal.op_Equality*\n  parent: System.Decimal\n  isExternal: false\n  name: op_Equality\n  nameWithType: Decimal.op_Equality\n  fullName: Decimal.op_Equality\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Decimal.xml\n- uid: System.Decimal.op_Explicit*\n  parent: System.Decimal\n  isExternal: false\n  name: op_Explicit\n  nameWithType: Decimal.op_Explicit\n  fullName: Decimal.op_Explicit\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Decimal.xml\n- uid: System.Decimal.op_GreaterThan*\n  parent: System.Decimal\n  isExternal: false\n  name: op_GreaterThan\n  nameWithType: Decimal.op_GreaterThan\n  fullName: Decimal.op_GreaterThan\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Decimal.xml\n- uid: System.Decimal.op_GreaterThanOrEqual*\n  parent: System.Decimal\n  isExternal: false\n  name: op_GreaterThanOrEqual\n  nameWithType: Decimal.op_GreaterThanOrEqual\n  fullName: Decimal.op_GreaterThanOrEqual\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Decimal.xml\n- uid: System.Decimal.op_Increment*\n  parent: System.Decimal\n  isExternal: false\n  name: op_Increment\n  nameWithType: Decimal.op_Increment\n  fullName: Decimal.op_Increment\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Decimal.xml\n- uid: System.Decimal.op_Inequality*\n  parent: System.Decimal\n  isExternal: false\n  name: op_Inequality\n  nameWithType: Decimal.op_Inequality\n  fullName: Decimal.op_Inequality\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Decimal.xml\n- uid: System.Decimal.op_LessThan*\n  parent: System.Decimal\n  isExternal: false\n  name: op_LessThan\n  nameWithType: Decimal.op_LessThan\n  fullName: Decimal.op_LessThan\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Decimal.xml\n- uid: System.Decimal.op_LessThanOrEqual*\n  parent: System.Decimal\n  isExternal: false\n  name: op_LessThanOrEqual\n  nameWithType: Decimal.op_LessThanOrEqual\n  fullName: Decimal.op_LessThanOrEqual\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Decimal.xml\n- uid: System.Decimal.op_Modulus*\n  parent: System.Decimal\n  isExternal: false\n  name: op_Modulus\n  nameWithType: Decimal.op_Modulus\n  fullName: Decimal.op_Modulus\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Decimal.xml\n- uid: System.Decimal.op_Multiply*\n  parent: System.Decimal\n  isExternal: false\n  name: op_Multiply\n  nameWithType: Decimal.op_Multiply\n  fullName: Decimal.op_Multiply\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Decimal.xml\n- uid: System.Decimal.op_Subtraction*\n  parent: System.Decimal\n  isExternal: false\n  name: op_Subtraction\n  nameWithType: Decimal.op_Subtraction\n  fullName: Decimal.op_Subtraction\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Decimal.xml\n- uid: System.Decimal.op_UnaryNegation*\n  parent: System.Decimal\n  isExternal: false\n  name: op_UnaryNegation\n  nameWithType: Decimal.op_UnaryNegation\n  fullName: Decimal.op_UnaryNegation\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Decimal.xml\n- uid: System.Decimal.op_UnaryPlus*\n  parent: System.Decimal\n  isExternal: false\n  name: op_UnaryPlus\n  nameWithType: Decimal.op_UnaryPlus\n  fullName: Decimal.op_UnaryPlus\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Decimal.xml\n- uid: System.Decimal.Parse*\n  parent: System.Decimal\n  isExternal: false\n  name: Parse\n  nameWithType: Decimal.Parse\n  fullName: Decimal.Parse\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Decimal.xml\n- uid: System.Decimal.Remainder*\n  parent: System.Decimal\n  isExternal: false\n  name: Remainder\n  nameWithType: Decimal.Remainder\n  fullName: Decimal.Remainder\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Decimal.xml\n- uid: System.Decimal.Round*\n  parent: System.Decimal\n  isExternal: false\n  name: Round\n  nameWithType: Decimal.Round\n  fullName: Decimal.Round\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Decimal.xml\n- uid: System.Decimal.Subtract*\n  parent: System.Decimal\n  isExternal: false\n  name: Subtract\n  nameWithType: Decimal.Subtract\n  fullName: Decimal.Subtract\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Decimal.xml\n- uid: System.Decimal.ToByte*\n  parent: System.Decimal\n  isExternal: false\n  name: ToByte\n  nameWithType: Decimal.ToByte\n  fullName: Decimal.ToByte\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Decimal.xml\n- uid: System.Decimal.ToDouble*\n  parent: System.Decimal\n  isExternal: false\n  name: ToDouble\n  nameWithType: Decimal.ToDouble\n  fullName: Decimal.ToDouble\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Decimal.xml\n- uid: System.Decimal.ToInt16*\n  parent: System.Decimal\n  isExternal: false\n  name: ToInt16\n  nameWithType: Decimal.ToInt16\n  fullName: Decimal.ToInt16\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Decimal.xml\n- uid: System.Decimal.ToInt32*\n  parent: System.Decimal\n  isExternal: false\n  name: ToInt32\n  nameWithType: Decimal.ToInt32\n  fullName: Decimal.ToInt32\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Decimal.xml\n- uid: System.Decimal.ToInt64*\n  parent: System.Decimal\n  isExternal: false\n  name: ToInt64\n  nameWithType: Decimal.ToInt64\n  fullName: Decimal.ToInt64\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Decimal.xml\n- uid: System.Decimal.ToOACurrency*\n  parent: System.Decimal\n  isExternal: false\n  name: ToOACurrency\n  nameWithType: Decimal.ToOACurrency\n  fullName: Decimal.ToOACurrency\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Decimal.xml\n- uid: System.Decimal.ToSByte*\n  parent: System.Decimal\n  isExternal: false\n  name: ToSByte\n  nameWithType: Decimal.ToSByte\n  fullName: Decimal.ToSByte\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Decimal.xml\n- uid: System.Decimal.ToSingle*\n  parent: System.Decimal\n  isExternal: false\n  name: ToSingle\n  nameWithType: Decimal.ToSingle\n  fullName: Decimal.ToSingle\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Decimal.xml\n- uid: System.Decimal.ToString*\n  parent: System.Decimal\n  isExternal: false\n  name: ToString\n  nameWithType: Decimal.ToString\n  fullName: Decimal.ToString\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Decimal.xml\n- uid: System.Decimal.ToUInt16*\n  parent: System.Decimal\n  isExternal: false\n  name: ToUInt16\n  nameWithType: Decimal.ToUInt16\n  fullName: Decimal.ToUInt16\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Decimal.xml\n- uid: System.Decimal.ToUInt32*\n  parent: System.Decimal\n  isExternal: false\n  name: ToUInt32\n  nameWithType: Decimal.ToUInt32\n  fullName: Decimal.ToUInt32\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Decimal.xml\n- uid: System.Decimal.ToUInt64*\n  parent: System.Decimal\n  isExternal: false\n  name: ToUInt64\n  nameWithType: Decimal.ToUInt64\n  fullName: Decimal.ToUInt64\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Decimal.xml\n- uid: System.Decimal.Truncate*\n  parent: System.Decimal\n  isExternal: false\n  name: Truncate\n  nameWithType: Decimal.Truncate\n  fullName: Decimal.Truncate\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Decimal.xml\n- uid: System.Decimal.TryParse*\n  parent: System.Decimal\n  isExternal: false\n  name: TryParse\n  nameWithType: Decimal.TryParse\n  fullName: Decimal.TryParse\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Decimal.xml\n- uid: System.Decimal.System#IComparable#CompareTo*\n  parent: System.Decimal\n  isExternal: false\n  name: System.IComparable.CompareTo\n  nameWithType: Decimal.System.IComparable.CompareTo\n  fullName: Decimal.System.IComparable.CompareTo\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Decimal.xml\n- uid: System.Decimal.System#IConvertible#GetTypeCode*\n  parent: System.Decimal\n  isExternal: false\n  name: System.IConvertible.GetTypeCode\n  nameWithType: Decimal.System.IConvertible.GetTypeCode\n  fullName: Decimal.System.IConvertible.GetTypeCode\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Decimal.xml\n- uid: System.Decimal.System#IConvertible#ToBoolean*\n  parent: System.Decimal\n  isExternal: false\n  name: System.IConvertible.ToBoolean\n  nameWithType: Decimal.System.IConvertible.ToBoolean\n  fullName: Decimal.System.IConvertible.ToBoolean\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Decimal.xml\n- uid: System.Decimal.System#IConvertible#ToByte*\n  parent: System.Decimal\n  isExternal: false\n  name: System.IConvertible.ToByte\n  nameWithType: Decimal.System.IConvertible.ToByte\n  fullName: Decimal.System.IConvertible.ToByte\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Decimal.xml\n- uid: System.Decimal.System#IConvertible#ToChar*\n  parent: System.Decimal\n  isExternal: false\n  name: System.IConvertible.ToChar\n  nameWithType: Decimal.System.IConvertible.ToChar\n  fullName: Decimal.System.IConvertible.ToChar\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Decimal.xml\n- uid: System.Decimal.System#IConvertible#ToDateTime*\n  parent: System.Decimal\n  isExternal: false\n  name: System.IConvertible.ToDateTime\n  nameWithType: Decimal.System.IConvertible.ToDateTime\n  fullName: Decimal.System.IConvertible.ToDateTime\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Decimal.xml\n- uid: System.Decimal.System#IConvertible#ToDecimal*\n  parent: System.Decimal\n  isExternal: false\n  name: System.IConvertible.ToDecimal\n  nameWithType: Decimal.System.IConvertible.ToDecimal\n  fullName: Decimal.System.IConvertible.ToDecimal\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Decimal.xml\n- uid: System.Decimal.System#IConvertible#ToDouble*\n  parent: System.Decimal\n  isExternal: false\n  name: System.IConvertible.ToDouble\n  nameWithType: Decimal.System.IConvertible.ToDouble\n  fullName: Decimal.System.IConvertible.ToDouble\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Decimal.xml\n- uid: System.Decimal.System#IConvertible#ToInt16*\n  parent: System.Decimal\n  isExternal: false\n  name: System.IConvertible.ToInt16\n  nameWithType: Decimal.System.IConvertible.ToInt16\n  fullName: Decimal.System.IConvertible.ToInt16\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Decimal.xml\n- uid: System.Decimal.System#IConvertible#ToInt32*\n  parent: System.Decimal\n  isExternal: false\n  name: System.IConvertible.ToInt32\n  nameWithType: Decimal.System.IConvertible.ToInt32\n  fullName: Decimal.System.IConvertible.ToInt32\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Decimal.xml\n- uid: System.Decimal.System#IConvertible#ToInt64*\n  parent: System.Decimal\n  isExternal: false\n  name: System.IConvertible.ToInt64\n  nameWithType: Decimal.System.IConvertible.ToInt64\n  fullName: Decimal.System.IConvertible.ToInt64\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Decimal.xml\n- uid: System.Decimal.System#IConvertible#ToSByte*\n  parent: System.Decimal\n  isExternal: false\n  name: System.IConvertible.ToSByte\n  nameWithType: Decimal.System.IConvertible.ToSByte\n  fullName: Decimal.System.IConvertible.ToSByte\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Decimal.xml\n- uid: System.Decimal.System#IConvertible#ToSingle*\n  parent: System.Decimal\n  isExternal: false\n  name: System.IConvertible.ToSingle\n  nameWithType: Decimal.System.IConvertible.ToSingle\n  fullName: Decimal.System.IConvertible.ToSingle\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Decimal.xml\n- uid: System.Decimal.System#IConvertible#ToType*\n  parent: System.Decimal\n  isExternal: false\n  name: System.IConvertible.ToType\n  nameWithType: Decimal.System.IConvertible.ToType\n  fullName: Decimal.System.IConvertible.ToType\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Decimal.xml\n- uid: System.Decimal.System#IConvertible#ToUInt16*\n  parent: System.Decimal\n  isExternal: false\n  name: System.IConvertible.ToUInt16\n  nameWithType: Decimal.System.IConvertible.ToUInt16\n  fullName: Decimal.System.IConvertible.ToUInt16\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Decimal.xml\n- uid: System.Decimal.System#IConvertible#ToUInt32*\n  parent: System.Decimal\n  isExternal: false\n  name: System.IConvertible.ToUInt32\n  nameWithType: Decimal.System.IConvertible.ToUInt32\n  fullName: Decimal.System.IConvertible.ToUInt32\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Decimal.xml\n- uid: System.Decimal.System#IConvertible#ToUInt64*\n  parent: System.Decimal\n  isExternal: false\n  name: System.IConvertible.ToUInt64\n  nameWithType: Decimal.System.IConvertible.ToUInt64\n  fullName: Decimal.System.IConvertible.ToUInt64\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Decimal.xml\n- uid: System.Decimal.System#Runtime#Serialization#IDeserializationCallback#OnDeserialization*\n  parent: System.Decimal\n  isExternal: false\n  name: System.Runtime.Serialization.IDeserializationCallback.OnDeserialization\n  nameWithType: Decimal.System.Runtime.Serialization.IDeserializationCallback.OnDeserialization\n  fullName: Decimal.System.Runtime.Serialization.IDeserializationCallback.OnDeserialization\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Decimal.xml\n- uid: System.IComparable\n  parent: System\n  isExternal: false\n  name: IComparable\n  nameWithType: IComparable\n  fullName: System.IComparable\n- uid: System.IComparable`1\n  name: IComparable<T>\n  nameWithType: IComparable<T>\n  fullName: System.IComparable<T>\n- uid: System.IComparable{System.Decimal}\n  parent: System\n  isExternal: false\n  name: IComparable<Decimal>\n  nameWithType: IComparable<Decimal>\n  fullName: System.IComparable<System.Decimal>\n  spec.csharp:\n  - uid: System.IComparable`1\n    name: IComparable\n    nameWithType: IComparable\n    fullName: System.IComparable\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Decimal\n    name: Decimal\n    nameWithType: Decimal\n    fullName: System.Decimal\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.IConvertible\n  parent: System\n  isExternal: false\n  name: IConvertible\n  nameWithType: IConvertible\n  fullName: System.IConvertible\n- uid: System.IEquatable`1\n  name: IEquatable<T>\n  nameWithType: IEquatable<T>\n  fullName: System.IEquatable<T>\n- uid: System.IEquatable{System.Decimal}\n  parent: System\n  isExternal: false\n  name: IEquatable<Decimal>\n  nameWithType: IEquatable<Decimal>\n  fullName: System.IEquatable<System.Decimal>\n  spec.csharp:\n  - uid: System.IEquatable`1\n    name: IEquatable\n    nameWithType: IEquatable\n    fullName: System.IEquatable\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Decimal\n    name: Decimal\n    nameWithType: Decimal\n    fullName: System.Decimal\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.IFormattable\n  parent: System\n  isExternal: false\n  name: IFormattable\n  nameWithType: IFormattable\n  fullName: System.IFormattable\n- uid: System.Runtime.Serialization.IDeserializationCallback\n  parent: System.Runtime.Serialization\n  isExternal: false\n  name: IDeserializationCallback\n  nameWithType: IDeserializationCallback\n  fullName: System.Runtime.Serialization.IDeserializationCallback\n"}