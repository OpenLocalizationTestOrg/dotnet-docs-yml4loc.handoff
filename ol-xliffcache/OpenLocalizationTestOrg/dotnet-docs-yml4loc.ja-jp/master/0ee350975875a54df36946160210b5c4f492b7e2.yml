### YamlMime:ManagedReference
items:
- uid: System.Security.Cryptography.DSASignatureDeformatter
  commentId: T:System.Security.Cryptography.DSASignatureDeformatter
  id: DSASignatureDeformatter
  children:
  - System.Security.Cryptography.DSASignatureDeformatter.#ctor
  - System.Security.Cryptography.DSASignatureDeformatter.#ctor(System.Security.Cryptography.AsymmetricAlgorithm)
  - System.Security.Cryptography.DSASignatureDeformatter.SetHashAlgorithm(System.String)
  - System.Security.Cryptography.DSASignatureDeformatter.SetKey(System.Security.Cryptography.AsymmetricAlgorithm)
  - System.Security.Cryptography.DSASignatureDeformatter.VerifySignature(System.Byte[],System.Byte[])
  langs:
  - csharp
  name: DSASignatureDeformatter
  nameWithType: DSASignatureDeformatter
  fullName: System.Security.Cryptography.DSASignatureDeformatter
  type: Class
  assemblies:
  - mscorlib
  - netstandard
  - System.Security.Cryptography.Algorithms
  namespace: System.Security.Cryptography
  summary: Verifies a Digital Signature Algorithm (<xref href="System.Security.Cryptography.DSA"></xref>) PKCS#1 v1.5 signature.
  remarks: ''
  example:
  - >-
    [!code-cpp[System.Security.Cryptography.DSASignatureDeformatter#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.DSASignatureDeformatter/CPP/sample.cpp#1)]
     [!code-csharp[System.Security.Cryptography.DSASignatureDeformatter#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.DSASignatureDeformatter/CS/sample.cs#1)]
     [!code-vb[System.Security.Cryptography.DSASignatureDeformatter#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.DSASignatureDeformatter/VB/sample.vb#1)]
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public class DSASignatureDeformatter : System.Security.Cryptography.AsymmetricSignatureDeformatter
  inheritance:
  - System.Object
  - System.Security.Cryptography.AsymmetricSignatureDeformatter
  implements: []
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  - System.Security.Cryptography.AsymmetricSignatureDeformatter.VerifySignature(System.Security.Cryptography.HashAlgorithm,System.Byte[])
  attributes:
  - type: System.Runtime.InteropServices.ComVisibleAttribute
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/DSASignatureDeformatter.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.Cryptography.DSASignatureDeformatter.#ctor
  commentId: M:System.Security.Cryptography.DSASignatureDeformatter.#ctor
  id: '#ctor'
  parent: System.Security.Cryptography.DSASignatureDeformatter
  langs:
  - csharp
  name: DSASignatureDeformatter()
  nameWithType: DSASignatureDeformatter.DSASignatureDeformatter()
  fullName: DSASignatureDeformatter.DSASignatureDeformatter()
  type: Constructor
  assemblies:
  - mscorlib
  - netstandard
  - System.Security.Cryptography.Algorithms
  namespace: System.Security.Cryptography
  summary: Initializes a new instance of the <xref href="System.Security.Cryptography.DSASignatureDeformatter"></xref> class.
  remarks: ''
  example:
  - >-
    [!code-cpp[System.Security.Cryptography.DSASignatureDeformatter#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.DSASignatureDeformatter/CPP/sample.cpp#1)]
     [!code-csharp[System.Security.Cryptography.DSASignatureDeformatter#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.DSASignatureDeformatter/CS/sample.cs#1)]
     [!code-vb[System.Security.Cryptography.DSASignatureDeformatter#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.DSASignatureDeformatter/VB/sample.vb#1)]
  syntax:
    content: public DSASignatureDeformatter ();
    parameters: []
  overload: System.Security.Cryptography.DSASignatureDeformatter.#ctor*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/DSASignatureDeformatter.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.Cryptography.DSASignatureDeformatter.#ctor(System.Security.Cryptography.AsymmetricAlgorithm)
  commentId: M:System.Security.Cryptography.DSASignatureDeformatter.#ctor(System.Security.Cryptography.AsymmetricAlgorithm)
  id: '#ctor(System.Security.Cryptography.AsymmetricAlgorithm)'
  parent: System.Security.Cryptography.DSASignatureDeformatter
  langs:
  - csharp
  name: DSASignatureDeformatter(AsymmetricAlgorithm)
  nameWithType: DSASignatureDeformatter.DSASignatureDeformatter(AsymmetricAlgorithm)
  fullName: DSASignatureDeformatter.DSASignatureDeformatter(AsymmetricAlgorithm)
  type: Constructor
  assemblies:
  - mscorlib
  - netstandard
  - System.Security.Cryptography.Algorithms
  namespace: System.Security.Cryptography
  summary: Initializes a new instance of the <xref href="System.Security.Cryptography.DSASignatureDeformatter"></xref> class with the specified key.
  syntax:
    content: public DSASignatureDeformatter (System.Security.Cryptography.AsymmetricAlgorithm key);
    parameters:
    - id: key
      type: System.Security.Cryptography.AsymmetricAlgorithm
      description: The instance of Digital Signature Algorithm (<xref href="System.Security.Cryptography.DSA"></xref>) that holds the key.
  overload: System.Security.Cryptography.DSASignatureDeformatter.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>key</code> is `null`.
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/DSASignatureDeformatter.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.Cryptography.DSASignatureDeformatter.SetHashAlgorithm(System.String)
  commentId: M:System.Security.Cryptography.DSASignatureDeformatter.SetHashAlgorithm(System.String)
  id: SetHashAlgorithm(System.String)
  parent: System.Security.Cryptography.DSASignatureDeformatter
  langs:
  - csharp
  name: SetHashAlgorithm(String)
  nameWithType: DSASignatureDeformatter.SetHashAlgorithm(String)
  fullName: DSASignatureDeformatter.SetHashAlgorithm(String)
  type: Method
  assemblies:
  - mscorlib
  - netstandard
  - System.Security.Cryptography.Algorithms
  namespace: System.Security.Cryptography
  summary: Specifies the hash algorithm for the Digital Signature Algorithm (<xref href="System.Security.Cryptography.DSA"></xref>) signature deformatter.
  remarks: ''
  example:
  - >-
    [!code-cpp[System.Security.Cryptography.DSASignatureDeformatter#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.DSASignatureDeformatter/CPP/sample.cpp#1)]
     [!code-csharp[System.Security.Cryptography.DSASignatureDeformatter#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.DSASignatureDeformatter/CS/sample.cs#1)]
     [!code-vb[System.Security.Cryptography.DSASignatureDeformatter#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.DSASignatureDeformatter/VB/sample.vb#1)]
  syntax:
    content: public override void SetHashAlgorithm (string strName);
    parameters:
    - id: strName
      type: System.String
      description: The name of the hash algorithm to use for the signature deformatter.
  overload: System.Security.Cryptography.DSASignatureDeformatter.SetHashAlgorithm*
  exceptions:
  - type: System.Security.Cryptography.CryptographicUnexpectedOperationException
    commentId: T:System.Security.Cryptography.CryptographicUnexpectedOperationException
    description: The <code>strName</code> parameter does not map to the <xref href="System.Security.Cryptography.SHA1"></xref> hash algorithm.
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/DSASignatureDeformatter.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.Cryptography.DSASignatureDeformatter.SetKey(System.Security.Cryptography.AsymmetricAlgorithm)
  commentId: M:System.Security.Cryptography.DSASignatureDeformatter.SetKey(System.Security.Cryptography.AsymmetricAlgorithm)
  id: SetKey(System.Security.Cryptography.AsymmetricAlgorithm)
  parent: System.Security.Cryptography.DSASignatureDeformatter
  langs:
  - csharp
  name: SetKey(AsymmetricAlgorithm)
  nameWithType: DSASignatureDeformatter.SetKey(AsymmetricAlgorithm)
  fullName: DSASignatureDeformatter.SetKey(AsymmetricAlgorithm)
  type: Method
  assemblies:
  - mscorlib
  - netstandard
  - System.Security.Cryptography.Algorithms
  namespace: System.Security.Cryptography
  summary: Specifies the key to be used for the Digital Signature Algorithm (<xref href="System.Security.Cryptography.DSA"></xref>) signature deformatter.
  syntax:
    content: public override void SetKey (System.Security.Cryptography.AsymmetricAlgorithm key);
    parameters:
    - id: key
      type: System.Security.Cryptography.AsymmetricAlgorithm
      description: The instance of <xref href="System.Security.Cryptography.DSA"></xref> that holds the key.
  overload: System.Security.Cryptography.DSASignatureDeformatter.SetKey*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>key</code> is `null`.
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/DSASignatureDeformatter.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.Cryptography.DSASignatureDeformatter.VerifySignature(System.Byte[],System.Byte[])
  commentId: M:System.Security.Cryptography.DSASignatureDeformatter.VerifySignature(System.Byte[],System.Byte[])
  id: VerifySignature(System.Byte[],System.Byte[])
  parent: System.Security.Cryptography.DSASignatureDeformatter
  langs:
  - csharp
  name: VerifySignature(Byte[], Byte[])
  nameWithType: DSASignatureDeformatter.VerifySignature(Byte[], Byte[])
  fullName: DSASignatureDeformatter.VerifySignature(Byte[], Byte[])
  type: Method
  assemblies:
  - mscorlib
  - netstandard
  - System.Security.Cryptography.Algorithms
  namespace: System.Security.Cryptography
  summary: Verifies the Digital Signature Algorithm (<xref href="System.Security.Cryptography.DSA"></xref>) signature on the data.
  remarks: ''
  example:
  - >-
    [!code-cpp[System.Security.Cryptography.DSASignatureDeformatter#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Cryptography.DSASignatureDeformatter/CPP/sample.cpp#1)]
     [!code-csharp[System.Security.Cryptography.DSASignatureDeformatter#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Cryptography.DSASignatureDeformatter/CS/sample.cs#1)]
     [!code-vb[System.Security.Cryptography.DSASignatureDeformatter#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Cryptography.DSASignatureDeformatter/VB/sample.vb#1)]
  syntax:
    content: public override bool VerifySignature (byte[] rgbHash, byte[] rgbSignature);
    parameters:
    - id: rgbHash
      type: System.Byte[]
      description: The data signed with <code>rgbSignature</code>.
    - id: rgbSignature
      type: System.Byte[]
      description: The signature to be verified for <code>rgbHash</code>.
    return:
      type: System.Boolean
      description: '`true` if the signature is valid for the data; otherwise, `false`.'
  overload: System.Security.Cryptography.DSASignatureDeformatter.VerifySignature*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>rgbHash</code> is `null`.  \n  \n -or-  \n  \n <code>rgbSignature</code> is `null`."
  - type: System.Security.Cryptography.CryptographicUnexpectedOperationException
    commentId: T:System.Security.Cryptography.CryptographicUnexpectedOperationException
    description: The DSA key is missing.
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/DSASignatureDeformatter.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
references:
- uid: System.Security.Cryptography.AsymmetricSignatureDeformatter
  parent: System.Security.Cryptography
  isExternal: false
  name: AsymmetricSignatureDeformatter
  nameWithType: AsymmetricSignatureDeformatter
  fullName: System.Security.Cryptography.AsymmetricSignatureDeformatter
- uid: System.ArgumentNullException
  parent: System
  isExternal: false
  name: ArgumentNullException
  nameWithType: ArgumentNullException
  fullName: System.ArgumentNullException
- uid: System.Security.Cryptography.CryptographicUnexpectedOperationException
  parent: System.Security.Cryptography
  isExternal: false
  name: CryptographicUnexpectedOperationException
  nameWithType: CryptographicUnexpectedOperationException
  fullName: System.Security.Cryptography.CryptographicUnexpectedOperationException
- uid: System.Security.Cryptography.DSASignatureDeformatter.#ctor
  parent: System.Security.Cryptography.DSASignatureDeformatter
  isExternal: false
  name: DSASignatureDeformatter()
  nameWithType: DSASignatureDeformatter.DSASignatureDeformatter()
  fullName: DSASignatureDeformatter.DSASignatureDeformatter()
- uid: System.Security.Cryptography.DSASignatureDeformatter.#ctor(System.Security.Cryptography.AsymmetricAlgorithm)
  parent: System.Security.Cryptography.DSASignatureDeformatter
  isExternal: false
  name: DSASignatureDeformatter(AsymmetricAlgorithm)
  nameWithType: DSASignatureDeformatter.DSASignatureDeformatter(AsymmetricAlgorithm)
  fullName: DSASignatureDeformatter.DSASignatureDeformatter(AsymmetricAlgorithm)
- uid: System.Security.Cryptography.AsymmetricAlgorithm
  parent: System.Security.Cryptography
  isExternal: false
  name: AsymmetricAlgorithm
  nameWithType: AsymmetricAlgorithm
  fullName: System.Security.Cryptography.AsymmetricAlgorithm
- uid: System.Security.Cryptography.DSASignatureDeformatter.SetHashAlgorithm(System.String)
  parent: System.Security.Cryptography.DSASignatureDeformatter
  isExternal: false
  name: SetHashAlgorithm(String)
  nameWithType: DSASignatureDeformatter.SetHashAlgorithm(String)
  fullName: DSASignatureDeformatter.SetHashAlgorithm(String)
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.Cryptography.DSASignatureDeformatter.SetKey(System.Security.Cryptography.AsymmetricAlgorithm)
  parent: System.Security.Cryptography.DSASignatureDeformatter
  isExternal: false
  name: SetKey(AsymmetricAlgorithm)
  nameWithType: DSASignatureDeformatter.SetKey(AsymmetricAlgorithm)
  fullName: DSASignatureDeformatter.SetKey(AsymmetricAlgorithm)
- uid: System.Security.Cryptography.DSASignatureDeformatter.VerifySignature(System.Byte[],System.Byte[])
  parent: System.Security.Cryptography.DSASignatureDeformatter
  isExternal: false
  name: VerifySignature(Byte[], Byte[])
  nameWithType: DSASignatureDeformatter.VerifySignature(Byte[], Byte[])
  fullName: DSASignatureDeformatter.VerifySignature(Byte[], Byte[])
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Byte
  name: Byte
  nameWithType: Byte
  fullName: System.Byte
- uid: System.Byte[]
  parent: System
  isExternal: false
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Security.Cryptography.DSASignatureDeformatter.#ctor*
  parent: System.Security.Cryptography.DSASignatureDeformatter
  isExternal: false
  name: DSASignatureDeformatter
  nameWithType: DSASignatureDeformatter.DSASignatureDeformatter
  fullName: DSASignatureDeformatter.DSASignatureDeformatter
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/DSASignatureDeformatter.xml
- uid: System.Security.Cryptography.DSASignatureDeformatter.SetHashAlgorithm*
  parent: System.Security.Cryptography.DSASignatureDeformatter
  isExternal: false
  name: SetHashAlgorithm
  nameWithType: DSASignatureDeformatter.SetHashAlgorithm
  fullName: DSASignatureDeformatter.SetHashAlgorithm
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/DSASignatureDeformatter.xml
- uid: System.Security.Cryptography.DSASignatureDeformatter.SetKey*
  parent: System.Security.Cryptography.DSASignatureDeformatter
  isExternal: false
  name: SetKey
  nameWithType: DSASignatureDeformatter.SetKey
  fullName: DSASignatureDeformatter.SetKey
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/DSASignatureDeformatter.xml
- uid: System.Security.Cryptography.DSASignatureDeformatter.VerifySignature*
  parent: System.Security.Cryptography.DSASignatureDeformatter
  isExternal: false
  name: VerifySignature
  nameWithType: DSASignatureDeformatter.VerifySignature
  fullName: DSASignatureDeformatter.VerifySignature
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/DSASignatureDeformatter.xml
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: Object.Equals(Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: Object.Equals(Object, Object)
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: false
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: Object.GetHashCode()
- uid: System.Object.GetType
  parent: System.Object
  isExternal: false
  name: GetType()
  nameWithType: Object.GetType()
  fullName: Object.GetType()
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: false
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: Object.MemberwiseClone()
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: Object.ReferenceEquals(Object, Object)
- uid: System.Object.ToString
  parent: System.Object
  isExternal: false
  name: ToString()
  nameWithType: Object.ToString()
  fullName: Object.ToString()
- uid: System.Security.Cryptography.AsymmetricSignatureDeformatter.VerifySignature(System.Security.Cryptography.HashAlgorithm,System.Byte[])
  parent: System.Security.Cryptography.AsymmetricSignatureDeformatter
  isExternal: false
  name: VerifySignature(HashAlgorithm, Byte[])
  nameWithType: AsymmetricSignatureDeformatter.VerifySignature(HashAlgorithm, Byte[])
  fullName: AsymmetricSignatureDeformatter.VerifySignature(HashAlgorithm, Byte[])
