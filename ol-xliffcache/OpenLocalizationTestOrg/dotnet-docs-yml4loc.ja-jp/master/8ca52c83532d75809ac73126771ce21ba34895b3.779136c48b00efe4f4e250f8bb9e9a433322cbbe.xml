{"nodes":[{"content":"Encapsulates the name of an encryption algorithm group.","nodes":[{"pos":[0,55],"content":"Encapsulates the name of an encryption algorithm group.","nodes":[{"content":"Encapsulates the name of an encryption algorithm group.","pos":[0,55]}]}],"pos":[1534,1590],"yaml":true},{"content":"The <xref:System.Security.Cryptography.CngAlgorithmGroup> class is a utility class. It consists of static properties, comparison methods, and a private, internally maintained string that defines an algorithm group name.  \n  \n The static properties return <xref:System.Security.Cryptography.CngAlgorithmGroup> objects. Each object's internal string is initialized to the algorithm group name that corresponds to the name of the static property.  \n  \n You can also use this class to create objects for algorithm groups that are not covered by the static properties.  \n  \n Several Cryptography Next Generation (CNG) classes (such as <xref:System.Security.Cryptography.CngKey>) return <xref:System.Security.Cryptography.CngAlgorithmGroup> objects. Classes that receive <xref:System.Security.Cryptography.CngAlgorithm> objects can retrieve the embedded algorithm group name by calling the object's <xref:System.Security.Cryptography.CngKey.AlgorithmGroup%2A> property.  \n  \n Therefore, <xref:System.Security.Cryptography.CngAlgorithmGroup> serves as an enumeration of well-known algorithm groups. It lets you specify an algorithm group name by using a strongly typed value instead of a string.","nodes":[{"pos":[0,219],"content":"The <xref:System.Security.Cryptography.CngAlgorithmGroup> class is a utility class. It consists of static properties, comparison methods, and a private, internally maintained string that defines an algorithm group name.","nodes":[{"content":"The <xref:System.Security.Cryptography.CngAlgorithmGroup> class is a utility class. It consists of static properties, comparison methods, and a private, internally maintained string that defines an algorithm group name.","pos":[0,219],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.CngAlgorithmGroup&gt;</ph> class is a utility class.","pos":[0,83],"source":"The <xref:System.Security.Cryptography.CngAlgorithmGroup> class is a utility class."},{"content":"It consists of static properties, comparison methods, and a private, internally maintained string that defines an algorithm group name.","pos":[84,219]}]}]},{"pos":[226,443],"content":"The static properties return <xref:System.Security.Cryptography.CngAlgorithmGroup> objects. Each object's internal string is initialized to the algorithm group name that corresponds to the name of the static property.","nodes":[{"content":"The static properties return <xref:System.Security.Cryptography.CngAlgorithmGroup> objects. Each object's internal string is initialized to the algorithm group name that corresponds to the name of the static property.","pos":[0,217],"nodes":[{"content":"The static properties return <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.CngAlgorithmGroup&gt;</ph> objects.","pos":[0,91],"source":"The static properties return <xref:System.Security.Cryptography.CngAlgorithmGroup> objects."},{"content":"Each object's internal string is initialized to the algorithm group name that corresponds to the name of the static property.","pos":[92,217]}]}]},{"pos":[450,563],"content":"You can also use this class to create objects for algorithm groups that are not covered by the static properties.","nodes":[{"content":"You can also use this class to create objects for algorithm groups that are not covered by the static properties.","pos":[0,113]}]},{"pos":[570,963],"content":"Several Cryptography Next Generation (CNG) classes (such as <xref:System.Security.Cryptography.CngKey>) return <xref:System.Security.Cryptography.CngAlgorithmGroup> objects. Classes that receive <xref:System.Security.Cryptography.CngAlgorithm> objects can retrieve the embedded algorithm group name by calling the object's <xref:System.Security.Cryptography.CngKey.AlgorithmGroup%2A> property.","nodes":[{"content":"Several Cryptography Next Generation (CNG) classes (such as <xref:System.Security.Cryptography.CngKey>) return <xref:System.Security.Cryptography.CngAlgorithmGroup> objects. Classes that receive <xref:System.Security.Cryptography.CngAlgorithm> objects can retrieve the embedded algorithm group name by calling the object's <xref:System.Security.Cryptography.CngKey.AlgorithmGroup%2A> property.","pos":[0,393],"nodes":[{"content":"Several Cryptography Next Generation (CNG) classes (such as <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.CngKey&gt;</ph>) return <ph id=\"ph2\">&lt;xref:System.Security.Cryptography.CngAlgorithmGroup&gt;</ph> objects.","pos":[0,173],"source":"Several Cryptography Next Generation (CNG) classes (such as <xref:System.Security.Cryptography.CngKey>) return <xref:System.Security.Cryptography.CngAlgorithmGroup> objects."},{"content":"Classes that receive <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.CngAlgorithm&gt;</ph> objects can retrieve the embedded algorithm group name by calling the object's <ph id=\"ph2\">&lt;xref:System.Security.Cryptography.CngKey.AlgorithmGroup%2A&gt;</ph> property.","pos":[174,393],"source":" Classes that receive <xref:System.Security.Cryptography.CngAlgorithm> objects can retrieve the embedded algorithm group name by calling the object's <xref:System.Security.Cryptography.CngKey.AlgorithmGroup%2A> property."}]}]},{"pos":[970,1188],"content":"Therefore, <xref:System.Security.Cryptography.CngAlgorithmGroup> serves as an enumeration of well-known algorithm groups. It lets you specify an algorithm group name by using a strongly typed value instead of a string.","nodes":[{"content":"Therefore, <xref:System.Security.Cryptography.CngAlgorithmGroup> serves as an enumeration of well-known algorithm groups. It lets you specify an algorithm group name by using a strongly typed value instead of a string.","pos":[0,218],"nodes":[{"content":"Therefore, <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.CngAlgorithmGroup&gt;</ph> serves as an enumeration of well-known algorithm groups.","pos":[0,121],"source":"Therefore, <xref:System.Security.Cryptography.CngAlgorithmGroup> serves as an enumeration of well-known algorithm groups."},{"content":"It lets you specify an algorithm group name by using a strongly typed value instead of a string.","pos":[122,218]}]}]}],"pos":[1601,2800],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.Security.Cryptography.CngAlgorithmGroup\"></xref> class.","nodes":[{"pos":[0,108],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.CngAlgorithmGroup\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.Security.Cryptography.CngAlgorithmGroup\"></xref> class."}],"pos":[4572,4681],"yaml":true},{"content":"Instances of the <xref:System.Security.Cryptography.CngAlgorithmGroup> class internally maintain the algorithm group name that is specified by the `algorithmGroup` parameter.  \n  \n The primary purpose of this constructor is to provide a method for creating <xref:System.Security.Cryptography.CngAlgorithmGroup> objects for algorithm groups that are not represented by the static properties of the <xref:System.Security.Cryptography.CngAlgorithmGroup> class. This capacity enables future [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] releases, service packs, and third-party developers to add new algorithm groups, which can be accessed just like the algorithm groups that are currently available.","nodes":[{"pos":[0,174],"content":"Instances of the <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.CngAlgorithmGroup&gt;</ph> class internally maintain the algorithm group name that is specified by the <ph id=\"ph2\">`algorithmGroup`</ph> parameter.","source":"Instances of the <xref:System.Security.Cryptography.CngAlgorithmGroup> class internally maintain the algorithm group name that is specified by the `algorithmGroup` parameter."},{"pos":[181,704],"content":"The primary purpose of this constructor is to provide a method for creating <xref:System.Security.Cryptography.CngAlgorithmGroup> objects for algorithm groups that are not represented by the static properties of the <xref:System.Security.Cryptography.CngAlgorithmGroup> class. This capacity enables future [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] releases, service packs, and third-party developers to add new algorithm groups, which can be accessed just like the algorithm groups that are currently available.","nodes":[{"content":"The primary purpose of this constructor is to provide a method for creating <ph id=\"ph1\">&lt;xref:System.Security.Cryptography.CngAlgorithmGroup&gt;</ph> objects for algorithm groups that are not represented by the static properties of the <ph id=\"ph2\">&lt;xref:System.Security.Cryptography.CngAlgorithmGroup&gt;</ph> class.","pos":[0,276],"source":"The primary purpose of this constructor is to provide a method for creating <xref:System.Security.Cryptography.CngAlgorithmGroup> objects for algorithm groups that are not represented by the static properties of the <xref:System.Security.Cryptography.CngAlgorithmGroup> class."},{"content":"This capacity enables future <ph id=\"ph1\">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph> releases, service packs, and third-party developers to add new algorithm groups, which can be accessed just like the algorithm groups that are currently available.","pos":[277,523],"source":" This capacity enables future [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] releases, service packs, and third-party developers to add new algorithm groups, which can be accessed just like the algorithm groups that are currently available."}]}],"pos":[4692,5401],"yaml":true,"extradata":"MT"},{"content":"The name of the algorithm group to initialize.","nodes":[{"pos":[0,46],"content":"The name of the algorithm group to initialize.","nodes":[{"content":"The name of the algorithm group to initialize.","pos":[0,46]}]}],"pos":[5560,5607],"yaml":true},{"content":"The <code>algorithmGroup</code> parameter is `null`.","nodes":[{"pos":[0,52],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">algorithmGroup</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <ph id=\"ph2\">`null`</ph>.","source":"The <code>algorithmGroup</code> parameter is `null`."}],"pos":[5789,5842],"yaml":true},{"content":"The <code>algorithmGroup</code> parameter length is 0 (zero).","nodes":[{"pos":[0,61],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">algorithmGroup</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter length is 0 (zero).","source":"The <code>algorithmGroup</code> parameter length is 0 (zero)."}],"pos":[5936,5998],"yaml":true},{"content":"Gets the name of the algorithm group that the current <xref href=\"System.Security.Cryptography.CngAlgorithm\"></xref> object specifies.","nodes":[{"pos":[0,134],"content":"Gets the name of the algorithm group that the current <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.CngAlgorithm\"&gt;&lt;/xref&gt;</ph> object specifies.","source":"Gets the name of the algorithm group that the current <xref href=\"System.Security.Cryptography.CngAlgorithm\"></xref> object specifies."}],"pos":[7276,7411],"yaml":true},{"content":"The embedded algorithm group name.","nodes":[{"pos":[0,34],"content":"The embedded algorithm group name.","nodes":[{"content":"The embedded algorithm group name.","pos":[0,34]}]}],"pos":[7529,7564],"yaml":true},{"content":"Gets a <xref href=\"System.Security.Cryptography.CngAlgorithmGroup\"></xref> object that specifies the Diffie-Hellman family of algorithms.","nodes":[{"pos":[0,137],"content":"Gets a <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.CngAlgorithmGroup\"&gt;&lt;/xref&gt;</ph> object that specifies the Diffie-Hellman family of algorithms.","source":"Gets a <xref href=\"System.Security.Cryptography.CngAlgorithmGroup\"></xref> object that specifies the Diffie-Hellman family of algorithms."}],"pos":[8928,9066],"yaml":true},{"content":"An object that specifies the Diffie-Hellman family of algorithms.","nodes":[{"pos":[0,65],"content":"An object that specifies the Diffie-Hellman family of algorithms.","nodes":[{"content":"An object that specifies the Diffie-Hellman family of algorithms.","pos":[0,65]}]}],"pos":[9263,9329],"yaml":true},{"content":"Gets a <xref href=\"System.Security.Cryptography.CngAlgorithmGroup\"></xref> object that specifies the Digital Signature Algorithm (DSA) family of algorithms.","nodes":[{"pos":[0,156],"content":"Gets a <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.CngAlgorithmGroup\"&gt;&lt;/xref&gt;</ph> object that specifies the Digital Signature Algorithm (DSA) family of algorithms.","source":"Gets a <xref href=\"System.Security.Cryptography.CngAlgorithmGroup\"></xref> object that specifies the Digital Signature Algorithm (DSA) family of algorithms."}],"pos":[10632,10789],"yaml":true},{"content":"An object that specifies the DSA family of algorithms.","nodes":[{"pos":[0,54],"content":"An object that specifies the DSA family of algorithms.","nodes":[{"content":"An object that specifies the DSA family of algorithms.","pos":[0,54]}]}],"pos":[10976,11031],"yaml":true},{"content":"Gets a <xref href=\"System.Security.Cryptography.CngAlgorithmGroup\"></xref> object that specifies the Elliptic Curve Diffie-Hellman (ECDH) family of algorithms.","nodes":[{"pos":[0,159],"content":"Gets a <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.CngAlgorithmGroup\"&gt;&lt;/xref&gt;</ph> object that specifies the Elliptic Curve Diffie-Hellman (ECDH) family of algorithms.","source":"Gets a <xref href=\"System.Security.Cryptography.CngAlgorithmGroup\"></xref> object that specifies the Elliptic Curve Diffie-Hellman (ECDH) family of algorithms."}],"pos":[12396,12556],"yaml":true},{"content":"An object that specifies the ECDH family of algorithms.","nodes":[{"pos":[0,55],"content":"An object that specifies the ECDH family of algorithms.","nodes":[{"content":"An object that specifies the ECDH family of algorithms.","pos":[0,55]}]}],"pos":[12755,12811],"yaml":true},{"content":"Gets a <xref href=\"System.Security.Cryptography.CngAlgorithmGroup\"></xref> object that specifies the Elliptic Curve Digital Signature Algorithm (ECDSA) family of algorithms.","nodes":[{"pos":[0,173],"content":"Gets a <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.CngAlgorithmGroup\"&gt;&lt;/xref&gt;</ph> object that specifies the Elliptic Curve Digital Signature Algorithm (ECDSA) family of algorithms.","source":"Gets a <xref href=\"System.Security.Cryptography.CngAlgorithmGroup\"></xref> object that specifies the Elliptic Curve Digital Signature Algorithm (ECDSA) family of algorithms."}],"pos":[14128,14302],"yaml":true},{"content":"An object that specifies the ECDSA family of algorithms.","nodes":[{"pos":[0,56],"content":"An object that specifies the ECDSA family of algorithms.","nodes":[{"content":"An object that specifies the ECDSA family of algorithms.","pos":[0,56]}]}],"pos":[14491,14548],"yaml":true},{"content":"Compares the specified object to the current <xref href=\"System.Security.Cryptography.CngAlgorithmGroup\"></xref> object.","nodes":[{"pos":[0,120],"content":"Compares the specified object to the current <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.CngAlgorithmGroup\"&gt;&lt;/xref&gt;</ph> object.","source":"Compares the specified object to the current <xref href=\"System.Security.Cryptography.CngAlgorithmGroup\"></xref> object."}],"pos":[15928,16049],"yaml":true},{"content":"An object to be compared to the current <xref href=\"System.Security.Cryptography.CngAlgorithmGroup\"></xref> object.","nodes":[{"pos":[0,115],"content":"An object to be compared to the current <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.CngAlgorithmGroup\"&gt;&lt;/xref&gt;</ph> object.","source":"An object to be compared to the current <xref href=\"System.Security.Cryptography.CngAlgorithmGroup\"></xref> object."}],"pos":[16189,16305],"yaml":true},{"content":"`true` if the <code>obj</code> parameter is a <xref href=\"System.Security.Cryptography.CngAlgorithmGroup\"></xref> that specifies the same algorithm group as the current object; otherwise, `false`.","nodes":[{"pos":[0,196],"content":"<ph id=\"ph1\">`true`</ph> if the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">obj</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is a <ph id=\"ph3\">&lt;xref href=\"System.Security.Cryptography.CngAlgorithmGroup\"&gt;&lt;/xref&gt;</ph> that specifies the same algorithm group as the current object; otherwise, <ph id=\"ph4\">`false`</ph>.","source":"`true` if the <code>obj</code> parameter is a <xref href=\"System.Security.Cryptography.CngAlgorithmGroup\"></xref> that specifies the same algorithm group as the current object; otherwise, `false`."}],"pos":[16363,16562],"yaml":true},{"content":"Compares the specified <xref href=\"System.Security.Cryptography.CngAlgorithmGroup\"></xref> object to the current <xref href=\"System.Security.Cryptography.CngAlgorithmGroup\"></xref> object.","nodes":[{"pos":[0,188],"content":"Compares the specified <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.CngAlgorithmGroup\"&gt;&lt;/xref&gt;</ph> object to the current <ph id=\"ph2\">&lt;xref href=\"System.Security.Cryptography.CngAlgorithmGroup\"&gt;&lt;/xref&gt;</ph> object.","source":"Compares the specified <xref href=\"System.Security.Cryptography.CngAlgorithmGroup\"></xref> object to the current <xref href=\"System.Security.Cryptography.CngAlgorithmGroup\"></xref> object."}],"pos":[18075,18264],"yaml":true},{"content":"An object to be compared to the current <xref href=\"System.Security.Cryptography.CngAlgorithmGroup\"></xref> object.","nodes":[{"pos":[0,115],"content":"An object to be compared to the current <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.CngAlgorithmGroup\"&gt;&lt;/xref&gt;</ph> object.","source":"An object to be compared to the current <xref href=\"System.Security.Cryptography.CngAlgorithmGroup\"></xref> object."}],"pos":[18472,18588],"yaml":true},{"content":"`true` if the <code>other</code> parameter specifies the same algorithm group as the current object; otherwise, `false`.","nodes":[{"pos":[0,120],"content":"<ph id=\"ph1\">`true`</ph> if the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">other</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter specifies the same algorithm group as the current object; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` if the <code>other</code> parameter specifies the same algorithm group as the current object; otherwise, `false`."}],"pos":[18646,18769],"yaml":true},{"content":"Generates a hash value for the algorithm group name that is embedded in the current <xref href=\"System.Security.Cryptography.CngAlgorithmGroup\"></xref> object.","nodes":[{"pos":[0,159],"content":"Generates a hash value for the algorithm group name that is embedded in the current <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.CngAlgorithmGroup\"&gt;&lt;/xref&gt;</ph> object.","source":"Generates a hash value for the algorithm group name that is embedded in the current <xref href=\"System.Security.Cryptography.CngAlgorithmGroup\"></xref> object."}],"pos":[20117,20277],"yaml":true},{"content":"The hash value of the embedded algorithm group name.","nodes":[{"pos":[0,52],"content":"The hash value of the embedded algorithm group name.","nodes":[{"content":"The hash value of the embedded algorithm group name.","pos":[0,52]}]}],"pos":[20411,20464],"yaml":true},{"content":"Determines whether two <xref href=\"System.Security.Cryptography.CngAlgorithmGroup\"></xref> objects specify the same algorithm group.","nodes":[{"pos":[0,132],"content":"Determines whether two <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.CngAlgorithmGroup\"&gt;&lt;/xref&gt;</ph> objects specify the same algorithm group.","source":"Determines whether two <xref href=\"System.Security.Cryptography.CngAlgorithmGroup\"></xref> objects specify the same algorithm group."}],"pos":[22212,22345],"yaml":true},{"content":"An object that specifies an algorithm group.","nodes":[{"pos":[0,44],"content":"An object that specifies an algorithm group.","nodes":[{"content":"An object that specifies an algorithm group.","pos":[0,44]}]}],"pos":[22617,22662],"yaml":true},{"content":"A second object, to be compared to the object that is identified by the <code>left</code> parameter.","nodes":[{"pos":[0,100],"content":"A second object, to be compared to the object that is identified by the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">left</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter.","source":"A second object, to be compared to the object that is identified by the <code>left</code> parameter."}],"pos":[22756,22857],"yaml":true},{"content":"`true` if the two objects specify the same algorithm group; otherwise, `false`.","nodes":[{"pos":[0,79],"content":"<ph id=\"ph1\">`true`</ph> if the two objects specify the same algorithm group; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the two objects specify the same algorithm group; otherwise, `false`."}],"pos":[22915,22997],"yaml":true},{"content":"Determines whether two <xref href=\"System.Security.Cryptography.CngAlgorithmGroup\"></xref> objects do not specify the same algorithm group.","nodes":[{"pos":[0,139],"content":"Determines whether two <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.CngAlgorithmGroup\"&gt;&lt;/xref&gt;</ph> objects do not specify the same algorithm group.","source":"Determines whether two <xref href=\"System.Security.Cryptography.CngAlgorithmGroup\"></xref> objects do not specify the same algorithm group."}],"pos":[24757,24897],"yaml":true},{"content":"An object that specifies an algorithm group.","nodes":[{"pos":[0,44],"content":"An object that specifies an algorithm group.","nodes":[{"content":"An object that specifies an algorithm group.","pos":[0,44]}]}],"pos":[25171,25216],"yaml":true},{"content":"A second object, to be compared to the object that is identified by the <code>left</code> parameter.","nodes":[{"pos":[0,100],"content":"A second object, to be compared to the object that is identified by the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">left</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter.","source":"A second object, to be compared to the object that is identified by the <code>left</code> parameter."}],"pos":[25310,25411],"yaml":true},{"content":"`true` if the two objects do not specify the same algorithm group; otherwise, `false`.","nodes":[{"pos":[0,86],"content":"<ph id=\"ph1\">`true`</ph> if the two objects do not specify the same algorithm group; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the two objects do not specify the same algorithm group; otherwise, `false`."}],"pos":[25469,25558],"yaml":true},{"content":"Gets a <xref href=\"System.Security.Cryptography.CngAlgorithmGroup\"></xref> object that specifies the Rivest-Shamir-Adleman (RSA) family of algorithms.","nodes":[{"pos":[0,150],"content":"Gets a <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.CngAlgorithmGroup\"&gt;&lt;/xref&gt;</ph> object that specifies the Rivest-Shamir-Adleman (RSA) family of algorithms.","source":"Gets a <xref href=\"System.Security.Cryptography.CngAlgorithmGroup\"></xref> object that specifies the Rivest-Shamir-Adleman (RSA) family of algorithms."}],"pos":[26861,27012],"yaml":true},{"content":"An object that specifies the RSA family of algorithms.","nodes":[{"pos":[0,54],"content":"An object that specifies the RSA family of algorithms.","nodes":[{"content":"An object that specifies the RSA family of algorithms.","pos":[0,54]}]}],"pos":[27199,27254],"yaml":true},{"content":"Gets the name of the algorithm group that the current <xref href=\"System.Security.Cryptography.CngAlgorithm\"></xref> object specifies.","nodes":[{"pos":[0,134],"content":"Gets the name of the algorithm group that the current <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.CngAlgorithm\"&gt;&lt;/xref&gt;</ph> object specifies.","source":"Gets the name of the algorithm group that the current <xref href=\"System.Security.Cryptography.CngAlgorithm\"></xref> object specifies."}],"pos":[28581,28716],"yaml":true},{"content":"The embedded algorithm group name.","nodes":[{"pos":[0,34],"content":"The embedded algorithm group name.","nodes":[{"content":"The embedded algorithm group name.","pos":[0,34]}]}],"pos":[28851,28886],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Security.Cryptography.CngAlgorithmGroup\n  commentId: T:System.Security.Cryptography.CngAlgorithmGroup\n  id: CngAlgorithmGroup\n  children:\n  - System.Security.Cryptography.CngAlgorithmGroup.#ctor(System.String)\n  - System.Security.Cryptography.CngAlgorithmGroup.AlgorithmGroup\n  - System.Security.Cryptography.CngAlgorithmGroup.DiffieHellman\n  - System.Security.Cryptography.CngAlgorithmGroup.Dsa\n  - System.Security.Cryptography.CngAlgorithmGroup.ECDiffieHellman\n  - System.Security.Cryptography.CngAlgorithmGroup.ECDsa\n  - System.Security.Cryptography.CngAlgorithmGroup.Equals(System.Object)\n  - System.Security.Cryptography.CngAlgorithmGroup.Equals(System.Security.Cryptography.CngAlgorithmGroup)\n  - System.Security.Cryptography.CngAlgorithmGroup.GetHashCode\n  - System.Security.Cryptography.CngAlgorithmGroup.op_Equality(System.Security.Cryptography.CngAlgorithmGroup,System.Security.Cryptography.CngAlgorithmGroup)\n  - System.Security.Cryptography.CngAlgorithmGroup.op_Inequality(System.Security.Cryptography.CngAlgorithmGroup,System.Security.Cryptography.CngAlgorithmGroup)\n  - System.Security.Cryptography.CngAlgorithmGroup.Rsa\n  - System.Security.Cryptography.CngAlgorithmGroup.ToString\n  langs:\n  - csharp\n  name: CngAlgorithmGroup\n  nameWithType: CngAlgorithmGroup\n  fullName: System.Security.Cryptography.CngAlgorithmGroup\n  type: Class\n  assemblies:\n  - System.Security.Cryptography.Cng\n  - System.Core\n  - netstandard\n  namespace: System.Security.Cryptography\n  summary: Encapsulates the name of an encryption algorithm group.\n  remarks: \"The <xref:System.Security.Cryptography.CngAlgorithmGroup> class is a utility class. It consists of static properties, comparison methods, and a private, internally maintained string that defines an algorithm group name.  \\n  \\n The static properties return <xref:System.Security.Cryptography.CngAlgorithmGroup> objects. Each object's internal string is initialized to the algorithm group name that corresponds to the name of the static property.  \\n  \\n You can also use this class to create objects for algorithm groups that are not covered by the static properties.  \\n  \\n Several Cryptography Next Generation (CNG) classes (such as <xref:System.Security.Cryptography.CngKey>) return <xref:System.Security.Cryptography.CngAlgorithmGroup> objects. Classes that receive <xref:System.Security.Cryptography.CngAlgorithm> objects can retrieve the embedded algorithm group name by calling the object's <xref:System.Security.Cryptography.CngKey.AlgorithmGroup%2A> property.  \\n  \\n Therefore, <xref:System.Security.Cryptography.CngAlgorithmGroup> serves as an enumeration of well-known algorithm groups. It lets you specify an algorithm group name by using a strongly typed value instead of a string.\"\n  syntax:\n    content: 'public sealed class CngAlgorithmGroup : IEquatable<System.Security.Cryptography.CngAlgorithmGroup>'\n  inheritance:\n  - System.Object\n  implements:\n  - System.IEquatable{System.Security.Cryptography.CngAlgorithmGroup}\n  inheritedMembers:\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/CngAlgorithmGroup.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.CngAlgorithmGroup.#ctor(System.String)\n  commentId: M:System.Security.Cryptography.CngAlgorithmGroup.#ctor(System.String)\n  id: '#ctor(System.String)'\n  parent: System.Security.Cryptography.CngAlgorithmGroup\n  langs:\n  - csharp\n  name: CngAlgorithmGroup(String)\n  nameWithType: CngAlgorithmGroup.CngAlgorithmGroup(String)\n  fullName: CngAlgorithmGroup.CngAlgorithmGroup(String)\n  type: Constructor\n  assemblies:\n  - System.Security.Cryptography.Cng\n  - System.Core\n  - netstandard\n  namespace: System.Security.Cryptography\n  summary: Initializes a new instance of the <xref href=\"System.Security.Cryptography.CngAlgorithmGroup\"></xref> class.\n  remarks: \"Instances of the <xref:System.Security.Cryptography.CngAlgorithmGroup> class internally maintain the algorithm group name that is specified by the `algorithmGroup` parameter.  \\n  \\n The primary purpose of this constructor is to provide a method for creating <xref:System.Security.Cryptography.CngAlgorithmGroup> objects for algorithm groups that are not represented by the static properties of the <xref:System.Security.Cryptography.CngAlgorithmGroup> class. This capacity enables future [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] releases, service packs, and third-party developers to add new algorithm groups, which can be accessed just like the algorithm groups that are currently available.\"\n  syntax:\n    content: public CngAlgorithmGroup (string algorithmGroup);\n    parameters:\n    - id: algorithmGroup\n      type: System.String\n      description: The name of the algorithm group to initialize.\n  overload: System.Security.Cryptography.CngAlgorithmGroup.#ctor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <code>algorithmGroup</code> parameter is `null`.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The <code>algorithmGroup</code> parameter length is 0 (zero).\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/CngAlgorithmGroup.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.CngAlgorithmGroup.AlgorithmGroup\n  commentId: P:System.Security.Cryptography.CngAlgorithmGroup.AlgorithmGroup\n  id: AlgorithmGroup\n  parent: System.Security.Cryptography.CngAlgorithmGroup\n  langs:\n  - csharp\n  name: AlgorithmGroup\n  nameWithType: CngAlgorithmGroup.AlgorithmGroup\n  fullName: CngAlgorithmGroup.AlgorithmGroup\n  type: Property\n  assemblies:\n  - System.Security.Cryptography.Cng\n  - System.Core\n  - netstandard\n  namespace: System.Security.Cryptography\n  summary: Gets the name of the algorithm group that the current <xref href=\"System.Security.Cryptography.CngAlgorithm\"></xref> object specifies.\n  syntax:\n    content: public string AlgorithmGroup { get; }\n    return:\n      type: System.String\n      description: The embedded algorithm group name.\n  overload: System.Security.Cryptography.CngAlgorithmGroup.AlgorithmGroup*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/CngAlgorithmGroup.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.CngAlgorithmGroup.DiffieHellman\n  commentId: P:System.Security.Cryptography.CngAlgorithmGroup.DiffieHellman\n  id: DiffieHellman\n  parent: System.Security.Cryptography.CngAlgorithmGroup\n  langs:\n  - csharp\n  name: DiffieHellman\n  nameWithType: CngAlgorithmGroup.DiffieHellman\n  fullName: CngAlgorithmGroup.DiffieHellman\n  type: Property\n  assemblies:\n  - System.Security.Cryptography.Cng\n  - System.Core\n  - netstandard\n  namespace: System.Security.Cryptography\n  summary: Gets a <xref href=\"System.Security.Cryptography.CngAlgorithmGroup\"></xref> object that specifies the Diffie-Hellman family of algorithms.\n  syntax:\n    content: public static System.Security.Cryptography.CngAlgorithmGroup DiffieHellman { get; }\n    return:\n      type: System.Security.Cryptography.CngAlgorithmGroup\n      description: An object that specifies the Diffie-Hellman family of algorithms.\n  overload: System.Security.Cryptography.CngAlgorithmGroup.DiffieHellman*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/CngAlgorithmGroup.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.CngAlgorithmGroup.Dsa\n  commentId: P:System.Security.Cryptography.CngAlgorithmGroup.Dsa\n  id: Dsa\n  parent: System.Security.Cryptography.CngAlgorithmGroup\n  langs:\n  - csharp\n  name: Dsa\n  nameWithType: CngAlgorithmGroup.Dsa\n  fullName: CngAlgorithmGroup.Dsa\n  type: Property\n  assemblies:\n  - System.Security.Cryptography.Cng\n  - System.Core\n  - netstandard\n  namespace: System.Security.Cryptography\n  summary: Gets a <xref href=\"System.Security.Cryptography.CngAlgorithmGroup\"></xref> object that specifies the Digital Signature Algorithm (DSA) family of algorithms.\n  syntax:\n    content: public static System.Security.Cryptography.CngAlgorithmGroup Dsa { get; }\n    return:\n      type: System.Security.Cryptography.CngAlgorithmGroup\n      description: An object that specifies the DSA family of algorithms.\n  overload: System.Security.Cryptography.CngAlgorithmGroup.Dsa*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/CngAlgorithmGroup.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.CngAlgorithmGroup.ECDiffieHellman\n  commentId: P:System.Security.Cryptography.CngAlgorithmGroup.ECDiffieHellman\n  id: ECDiffieHellman\n  parent: System.Security.Cryptography.CngAlgorithmGroup\n  langs:\n  - csharp\n  name: ECDiffieHellman\n  nameWithType: CngAlgorithmGroup.ECDiffieHellman\n  fullName: CngAlgorithmGroup.ECDiffieHellman\n  type: Property\n  assemblies:\n  - System.Security.Cryptography.Cng\n  - System.Core\n  - netstandard\n  namespace: System.Security.Cryptography\n  summary: Gets a <xref href=\"System.Security.Cryptography.CngAlgorithmGroup\"></xref> object that specifies the Elliptic Curve Diffie-Hellman (ECDH) family of algorithms.\n  syntax:\n    content: public static System.Security.Cryptography.CngAlgorithmGroup ECDiffieHellman { get; }\n    return:\n      type: System.Security.Cryptography.CngAlgorithmGroup\n      description: An object that specifies the ECDH family of algorithms.\n  overload: System.Security.Cryptography.CngAlgorithmGroup.ECDiffieHellman*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/CngAlgorithmGroup.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.CngAlgorithmGroup.ECDsa\n  commentId: P:System.Security.Cryptography.CngAlgorithmGroup.ECDsa\n  id: ECDsa\n  parent: System.Security.Cryptography.CngAlgorithmGroup\n  langs:\n  - csharp\n  name: ECDsa\n  nameWithType: CngAlgorithmGroup.ECDsa\n  fullName: CngAlgorithmGroup.ECDsa\n  type: Property\n  assemblies:\n  - System.Security.Cryptography.Cng\n  - System.Core\n  - netstandard\n  namespace: System.Security.Cryptography\n  summary: Gets a <xref href=\"System.Security.Cryptography.CngAlgorithmGroup\"></xref> object that specifies the Elliptic Curve Digital Signature Algorithm (ECDSA) family of algorithms.\n  syntax:\n    content: public static System.Security.Cryptography.CngAlgorithmGroup ECDsa { get; }\n    return:\n      type: System.Security.Cryptography.CngAlgorithmGroup\n      description: An object that specifies the ECDSA family of algorithms.\n  overload: System.Security.Cryptography.CngAlgorithmGroup.ECDsa*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/CngAlgorithmGroup.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.CngAlgorithmGroup.Equals(System.Object)\n  commentId: M:System.Security.Cryptography.CngAlgorithmGroup.Equals(System.Object)\n  id: Equals(System.Object)\n  parent: System.Security.Cryptography.CngAlgorithmGroup\n  langs:\n  - csharp\n  name: Equals(Object)\n  nameWithType: CngAlgorithmGroup.Equals(Object)\n  fullName: CngAlgorithmGroup.Equals(Object)\n  type: Method\n  assemblies:\n  - System.Security.Cryptography.Cng\n  - System.Core\n  - netstandard\n  namespace: System.Security.Cryptography\n  summary: Compares the specified object to the current <xref href=\"System.Security.Cryptography.CngAlgorithmGroup\"></xref> object.\n  syntax:\n    content: public override bool Equals (object obj);\n    parameters:\n    - id: obj\n      type: System.Object\n      description: An object to be compared to the current <xref href=\"System.Security.Cryptography.CngAlgorithmGroup\"></xref> object.\n    return:\n      type: System.Boolean\n      description: '`true` if the <code>obj</code> parameter is a <xref href=\"System.Security.Cryptography.CngAlgorithmGroup\"></xref> that specifies the same algorithm group as the current object; otherwise, `false`.'\n  overload: System.Security.Cryptography.CngAlgorithmGroup.Equals*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/CngAlgorithmGroup.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.CngAlgorithmGroup.Equals(System.Security.Cryptography.CngAlgorithmGroup)\n  commentId: M:System.Security.Cryptography.CngAlgorithmGroup.Equals(System.Security.Cryptography.CngAlgorithmGroup)\n  id: Equals(System.Security.Cryptography.CngAlgorithmGroup)\n  parent: System.Security.Cryptography.CngAlgorithmGroup\n  langs:\n  - csharp\n  name: Equals(CngAlgorithmGroup)\n  nameWithType: CngAlgorithmGroup.Equals(CngAlgorithmGroup)\n  fullName: CngAlgorithmGroup.Equals(CngAlgorithmGroup)\n  type: Method\n  assemblies:\n  - System.Security.Cryptography.Cng\n  - System.Core\n  - netstandard\n  namespace: System.Security.Cryptography\n  summary: Compares the specified <xref href=\"System.Security.Cryptography.CngAlgorithmGroup\"></xref> object to the current <xref href=\"System.Security.Cryptography.CngAlgorithmGroup\"></xref> object.\n  syntax:\n    content: public bool Equals (System.Security.Cryptography.CngAlgorithmGroup other);\n    parameters:\n    - id: other\n      type: System.Security.Cryptography.CngAlgorithmGroup\n      description: An object to be compared to the current <xref href=\"System.Security.Cryptography.CngAlgorithmGroup\"></xref> object.\n    return:\n      type: System.Boolean\n      description: '`true` if the <code>other</code> parameter specifies the same algorithm group as the current object; otherwise, `false`.'\n  overload: System.Security.Cryptography.CngAlgorithmGroup.Equals*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/CngAlgorithmGroup.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.CngAlgorithmGroup.GetHashCode\n  commentId: M:System.Security.Cryptography.CngAlgorithmGroup.GetHashCode\n  id: GetHashCode\n  parent: System.Security.Cryptography.CngAlgorithmGroup\n  langs:\n  - csharp\n  name: GetHashCode()\n  nameWithType: CngAlgorithmGroup.GetHashCode()\n  fullName: CngAlgorithmGroup.GetHashCode()\n  type: Method\n  assemblies:\n  - System.Security.Cryptography.Cng\n  - System.Core\n  - netstandard\n  namespace: System.Security.Cryptography\n  summary: Generates a hash value for the algorithm group name that is embedded in the current <xref href=\"System.Security.Cryptography.CngAlgorithmGroup\"></xref> object.\n  syntax:\n    content: public override int GetHashCode ();\n    parameters: []\n    return:\n      type: System.Int32\n      description: The hash value of the embedded algorithm group name.\n  overload: System.Security.Cryptography.CngAlgorithmGroup.GetHashCode*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/CngAlgorithmGroup.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.CngAlgorithmGroup.op_Equality(System.Security.Cryptography.CngAlgorithmGroup,System.Security.Cryptography.CngAlgorithmGroup)\n  commentId: M:System.Security.Cryptography.CngAlgorithmGroup.op_Equality(System.Security.Cryptography.CngAlgorithmGroup,System.Security.Cryptography.CngAlgorithmGroup)\n  id: op_Equality(System.Security.Cryptography.CngAlgorithmGroup,System.Security.Cryptography.CngAlgorithmGroup)\n  parent: System.Security.Cryptography.CngAlgorithmGroup\n  langs:\n  - csharp\n  name: op_Equality(CngAlgorithmGroup, CngAlgorithmGroup)\n  nameWithType: CngAlgorithmGroup.op_Equality(CngAlgorithmGroup, CngAlgorithmGroup)\n  fullName: CngAlgorithmGroup.op_Equality(CngAlgorithmGroup, CngAlgorithmGroup)\n  type: Operator\n  assemblies:\n  - System.Security.Cryptography.Cng\n  - System.Core\n  - netstandard\n  namespace: System.Security.Cryptography\n  summary: Determines whether two <xref href=\"System.Security.Cryptography.CngAlgorithmGroup\"></xref> objects specify the same algorithm group.\n  syntax:\n    content: public static bool op_Equality (System.Security.Cryptography.CngAlgorithmGroup left, System.Security.Cryptography.CngAlgorithmGroup right);\n    parameters:\n    - id: left\n      type: System.Security.Cryptography.CngAlgorithmGroup\n      description: An object that specifies an algorithm group.\n    - id: right\n      type: System.Security.Cryptography.CngAlgorithmGroup\n      description: A second object, to be compared to the object that is identified by the <code>left</code> parameter.\n    return:\n      type: System.Boolean\n      description: '`true` if the two objects specify the same algorithm group; otherwise, `false`.'\n  overload: System.Security.Cryptography.CngAlgorithmGroup.op_Equality*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/CngAlgorithmGroup.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.CngAlgorithmGroup.op_Inequality(System.Security.Cryptography.CngAlgorithmGroup,System.Security.Cryptography.CngAlgorithmGroup)\n  commentId: M:System.Security.Cryptography.CngAlgorithmGroup.op_Inequality(System.Security.Cryptography.CngAlgorithmGroup,System.Security.Cryptography.CngAlgorithmGroup)\n  id: op_Inequality(System.Security.Cryptography.CngAlgorithmGroup,System.Security.Cryptography.CngAlgorithmGroup)\n  parent: System.Security.Cryptography.CngAlgorithmGroup\n  langs:\n  - csharp\n  name: op_Inequality(CngAlgorithmGroup, CngAlgorithmGroup)\n  nameWithType: CngAlgorithmGroup.op_Inequality(CngAlgorithmGroup, CngAlgorithmGroup)\n  fullName: CngAlgorithmGroup.op_Inequality(CngAlgorithmGroup, CngAlgorithmGroup)\n  type: Operator\n  assemblies:\n  - System.Security.Cryptography.Cng\n  - System.Core\n  - netstandard\n  namespace: System.Security.Cryptography\n  summary: Determines whether two <xref href=\"System.Security.Cryptography.CngAlgorithmGroup\"></xref> objects do not specify the same algorithm group.\n  syntax:\n    content: public static bool op_Inequality (System.Security.Cryptography.CngAlgorithmGroup left, System.Security.Cryptography.CngAlgorithmGroup right);\n    parameters:\n    - id: left\n      type: System.Security.Cryptography.CngAlgorithmGroup\n      description: An object that specifies an algorithm group.\n    - id: right\n      type: System.Security.Cryptography.CngAlgorithmGroup\n      description: A second object, to be compared to the object that is identified by the <code>left</code> parameter.\n    return:\n      type: System.Boolean\n      description: '`true` if the two objects do not specify the same algorithm group; otherwise, `false`.'\n  overload: System.Security.Cryptography.CngAlgorithmGroup.op_Inequality*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/CngAlgorithmGroup.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.CngAlgorithmGroup.Rsa\n  commentId: P:System.Security.Cryptography.CngAlgorithmGroup.Rsa\n  id: Rsa\n  parent: System.Security.Cryptography.CngAlgorithmGroup\n  langs:\n  - csharp\n  name: Rsa\n  nameWithType: CngAlgorithmGroup.Rsa\n  fullName: CngAlgorithmGroup.Rsa\n  type: Property\n  assemblies:\n  - System.Security.Cryptography.Cng\n  - System.Core\n  - netstandard\n  namespace: System.Security.Cryptography\n  summary: Gets a <xref href=\"System.Security.Cryptography.CngAlgorithmGroup\"></xref> object that specifies the Rivest-Shamir-Adleman (RSA) family of algorithms.\n  syntax:\n    content: public static System.Security.Cryptography.CngAlgorithmGroup Rsa { get; }\n    return:\n      type: System.Security.Cryptography.CngAlgorithmGroup\n      description: An object that specifies the RSA family of algorithms.\n  overload: System.Security.Cryptography.CngAlgorithmGroup.Rsa*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/CngAlgorithmGroup.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.CngAlgorithmGroup.ToString\n  commentId: M:System.Security.Cryptography.CngAlgorithmGroup.ToString\n  id: ToString\n  parent: System.Security.Cryptography.CngAlgorithmGroup\n  langs:\n  - csharp\n  name: ToString()\n  nameWithType: CngAlgorithmGroup.ToString()\n  fullName: CngAlgorithmGroup.ToString()\n  type: Method\n  assemblies:\n  - System.Security.Cryptography.Cng\n  - System.Core\n  - netstandard\n  namespace: System.Security.Cryptography\n  summary: Gets the name of the algorithm group that the current <xref href=\"System.Security.Cryptography.CngAlgorithm\"></xref> object specifies.\n  syntax:\n    content: public override string ToString ();\n    parameters: []\n    return:\n      type: System.String\n      description: The embedded algorithm group name.\n  overload: System.Security.Cryptography.CngAlgorithmGroup.ToString*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/CngAlgorithmGroup.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\nreferences:\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.ArgumentNullException\n  parent: System\n  isExternal: false\n  name: ArgumentNullException\n  nameWithType: ArgumentNullException\n  fullName: System.ArgumentNullException\n- uid: System.ArgumentException\n  parent: System\n  isExternal: false\n  name: ArgumentException\n  nameWithType: ArgumentException\n  fullName: System.ArgumentException\n- uid: System.Security.Cryptography.CngAlgorithmGroup.#ctor(System.String)\n  parent: System.Security.Cryptography.CngAlgorithmGroup\n  isExternal: false\n  name: CngAlgorithmGroup(String)\n  nameWithType: CngAlgorithmGroup.CngAlgorithmGroup(String)\n  fullName: CngAlgorithmGroup.CngAlgorithmGroup(String)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Security.Cryptography.CngAlgorithmGroup.AlgorithmGroup\n  parent: System.Security.Cryptography.CngAlgorithmGroup\n  isExternal: false\n  name: AlgorithmGroup\n  nameWithType: CngAlgorithmGroup.AlgorithmGroup\n  fullName: CngAlgorithmGroup.AlgorithmGroup\n- uid: System.Security.Cryptography.CngAlgorithmGroup.DiffieHellman\n  parent: System.Security.Cryptography.CngAlgorithmGroup\n  isExternal: false\n  name: DiffieHellman\n  nameWithType: CngAlgorithmGroup.DiffieHellman\n  fullName: CngAlgorithmGroup.DiffieHellman\n- uid: System.Security.Cryptography.CngAlgorithmGroup\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: CngAlgorithmGroup\n  nameWithType: CngAlgorithmGroup\n  fullName: System.Security.Cryptography.CngAlgorithmGroup\n- uid: System.Security.Cryptography.CngAlgorithmGroup.Dsa\n  parent: System.Security.Cryptography.CngAlgorithmGroup\n  isExternal: false\n  name: Dsa\n  nameWithType: CngAlgorithmGroup.Dsa\n  fullName: CngAlgorithmGroup.Dsa\n- uid: System.Security.Cryptography.CngAlgorithmGroup.ECDiffieHellman\n  parent: System.Security.Cryptography.CngAlgorithmGroup\n  isExternal: false\n  name: ECDiffieHellman\n  nameWithType: CngAlgorithmGroup.ECDiffieHellman\n  fullName: CngAlgorithmGroup.ECDiffieHellman\n- uid: System.Security.Cryptography.CngAlgorithmGroup.ECDsa\n  parent: System.Security.Cryptography.CngAlgorithmGroup\n  isExternal: false\n  name: ECDsa\n  nameWithType: CngAlgorithmGroup.ECDsa\n  fullName: CngAlgorithmGroup.ECDsa\n- uid: System.Security.Cryptography.CngAlgorithmGroup.Equals(System.Object)\n  parent: System.Security.Cryptography.CngAlgorithmGroup\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: CngAlgorithmGroup.Equals(Object)\n  fullName: CngAlgorithmGroup.Equals(Object)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Security.Cryptography.CngAlgorithmGroup.Equals(System.Security.Cryptography.CngAlgorithmGroup)\n  parent: System.Security.Cryptography.CngAlgorithmGroup\n  isExternal: false\n  name: Equals(CngAlgorithmGroup)\n  nameWithType: CngAlgorithmGroup.Equals(CngAlgorithmGroup)\n  fullName: CngAlgorithmGroup.Equals(CngAlgorithmGroup)\n- uid: System.Security.Cryptography.CngAlgorithmGroup.GetHashCode\n  parent: System.Security.Cryptography.CngAlgorithmGroup\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: CngAlgorithmGroup.GetHashCode()\n  fullName: CngAlgorithmGroup.GetHashCode()\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Security.Cryptography.CngAlgorithmGroup.op_Equality(System.Security.Cryptography.CngAlgorithmGroup,System.Security.Cryptography.CngAlgorithmGroup)\n  parent: System.Security.Cryptography.CngAlgorithmGroup\n  isExternal: false\n  name: op_Equality(CngAlgorithmGroup, CngAlgorithmGroup)\n  nameWithType: CngAlgorithmGroup.op_Equality(CngAlgorithmGroup, CngAlgorithmGroup)\n  fullName: CngAlgorithmGroup.op_Equality(CngAlgorithmGroup, CngAlgorithmGroup)\n- uid: System.Security.Cryptography.CngAlgorithmGroup.op_Inequality(System.Security.Cryptography.CngAlgorithmGroup,System.Security.Cryptography.CngAlgorithmGroup)\n  parent: System.Security.Cryptography.CngAlgorithmGroup\n  isExternal: false\n  name: op_Inequality(CngAlgorithmGroup, CngAlgorithmGroup)\n  nameWithType: CngAlgorithmGroup.op_Inequality(CngAlgorithmGroup, CngAlgorithmGroup)\n  fullName: CngAlgorithmGroup.op_Inequality(CngAlgorithmGroup, CngAlgorithmGroup)\n- uid: System.Security.Cryptography.CngAlgorithmGroup.Rsa\n  parent: System.Security.Cryptography.CngAlgorithmGroup\n  isExternal: false\n  name: Rsa\n  nameWithType: CngAlgorithmGroup.Rsa\n  fullName: CngAlgorithmGroup.Rsa\n- uid: System.Security.Cryptography.CngAlgorithmGroup.ToString\n  parent: System.Security.Cryptography.CngAlgorithmGroup\n  isExternal: false\n  name: ToString()\n  nameWithType: CngAlgorithmGroup.ToString()\n  fullName: CngAlgorithmGroup.ToString()\n- uid: System.Security.Cryptography.CngAlgorithmGroup.#ctor*\n  parent: System.Security.Cryptography.CngAlgorithmGroup\n  isExternal: false\n  name: CngAlgorithmGroup\n  nameWithType: CngAlgorithmGroup.CngAlgorithmGroup\n  fullName: CngAlgorithmGroup.CngAlgorithmGroup\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/CngAlgorithmGroup.xml\n- uid: System.Security.Cryptography.CngAlgorithmGroup.AlgorithmGroup*\n  parent: System.Security.Cryptography.CngAlgorithmGroup\n  isExternal: false\n  name: AlgorithmGroup\n  nameWithType: CngAlgorithmGroup.AlgorithmGroup\n  fullName: CngAlgorithmGroup.AlgorithmGroup\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/CngAlgorithmGroup.xml\n- uid: System.Security.Cryptography.CngAlgorithmGroup.DiffieHellman*\n  parent: System.Security.Cryptography.CngAlgorithmGroup\n  isExternal: false\n  name: DiffieHellman\n  nameWithType: CngAlgorithmGroup.DiffieHellman\n  fullName: CngAlgorithmGroup.DiffieHellman\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/CngAlgorithmGroup.xml\n- uid: System.Security.Cryptography.CngAlgorithmGroup.Dsa*\n  parent: System.Security.Cryptography.CngAlgorithmGroup\n  isExternal: false\n  name: Dsa\n  nameWithType: CngAlgorithmGroup.Dsa\n  fullName: CngAlgorithmGroup.Dsa\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/CngAlgorithmGroup.xml\n- uid: System.Security.Cryptography.CngAlgorithmGroup.ECDiffieHellman*\n  parent: System.Security.Cryptography.CngAlgorithmGroup\n  isExternal: false\n  name: ECDiffieHellman\n  nameWithType: CngAlgorithmGroup.ECDiffieHellman\n  fullName: CngAlgorithmGroup.ECDiffieHellman\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/CngAlgorithmGroup.xml\n- uid: System.Security.Cryptography.CngAlgorithmGroup.ECDsa*\n  parent: System.Security.Cryptography.CngAlgorithmGroup\n  isExternal: false\n  name: ECDsa\n  nameWithType: CngAlgorithmGroup.ECDsa\n  fullName: CngAlgorithmGroup.ECDsa\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/CngAlgorithmGroup.xml\n- uid: System.Security.Cryptography.CngAlgorithmGroup.Equals*\n  parent: System.Security.Cryptography.CngAlgorithmGroup\n  isExternal: false\n  name: Equals\n  nameWithType: CngAlgorithmGroup.Equals\n  fullName: CngAlgorithmGroup.Equals\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/CngAlgorithmGroup.xml\n- uid: System.Security.Cryptography.CngAlgorithmGroup.GetHashCode*\n  parent: System.Security.Cryptography.CngAlgorithmGroup\n  isExternal: false\n  name: GetHashCode\n  nameWithType: CngAlgorithmGroup.GetHashCode\n  fullName: CngAlgorithmGroup.GetHashCode\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/CngAlgorithmGroup.xml\n- uid: System.Security.Cryptography.CngAlgorithmGroup.op_Equality*\n  parent: System.Security.Cryptography.CngAlgorithmGroup\n  isExternal: false\n  name: op_Equality\n  nameWithType: CngAlgorithmGroup.op_Equality\n  fullName: CngAlgorithmGroup.op_Equality\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/CngAlgorithmGroup.xml\n- uid: System.Security.Cryptography.CngAlgorithmGroup.op_Inequality*\n  parent: System.Security.Cryptography.CngAlgorithmGroup\n  isExternal: false\n  name: op_Inequality\n  nameWithType: CngAlgorithmGroup.op_Inequality\n  fullName: CngAlgorithmGroup.op_Inequality\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/CngAlgorithmGroup.xml\n- uid: System.Security.Cryptography.CngAlgorithmGroup.Rsa*\n  parent: System.Security.Cryptography.CngAlgorithmGroup\n  isExternal: false\n  name: Rsa\n  nameWithType: CngAlgorithmGroup.Rsa\n  fullName: CngAlgorithmGroup.Rsa\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/CngAlgorithmGroup.xml\n- uid: System.Security.Cryptography.CngAlgorithmGroup.ToString*\n  parent: System.Security.Cryptography.CngAlgorithmGroup\n  isExternal: false\n  name: ToString\n  nameWithType: CngAlgorithmGroup.ToString\n  fullName: CngAlgorithmGroup.ToString\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/CngAlgorithmGroup.xml\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.IEquatable`1\n  name: IEquatable<T>\n  nameWithType: IEquatable<T>\n  fullName: System.IEquatable<T>\n- uid: System.IEquatable{System.Security.Cryptography.CngAlgorithmGroup}\n  parent: System\n  isExternal: false\n  name: IEquatable<CngAlgorithmGroup>\n  nameWithType: IEquatable<CngAlgorithmGroup>\n  fullName: System.IEquatable<System.Security.Cryptography.CngAlgorithmGroup>\n  spec.csharp:\n  - uid: System.IEquatable`1\n    name: IEquatable\n    nameWithType: IEquatable\n    fullName: System.IEquatable\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Security.Cryptography.CngAlgorithmGroup\n    name: CngAlgorithmGroup\n    nameWithType: CngAlgorithmGroup\n    fullName: System.Security.Cryptography.CngAlgorithmGroup\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n"}