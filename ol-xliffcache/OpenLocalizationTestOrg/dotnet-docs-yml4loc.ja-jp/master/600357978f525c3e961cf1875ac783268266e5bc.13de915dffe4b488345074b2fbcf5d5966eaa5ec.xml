{"nodes":[{"content":"Evaluates JScript code. This class belongs to the abstract syntax tree category.","nodes":[{"pos":[0,80],"content":"Evaluates JScript code. This class belongs to the abstract syntax tree category.","nodes":[{"content":"Evaluates JScript code. This class belongs to the abstract syntax tree category.","pos":[0,80],"nodes":[{"content":"Evaluates JScript code.","pos":[0,23]},{"content":"This class belongs to the abstract syntax tree category.","pos":[24,80]}]}]}],"pos":[502,583],"yaml":true},{"content":"Evaluates the specified JScript code by using the specified engine.","nodes":[{"pos":[0,67],"content":"Evaluates the specified JScript code by using the specified engine.","nodes":[{"content":"Evaluates the specified JScript code by using the specified engine.","pos":[0,67]}]}],"pos":[2059,2127],"yaml":true},{"content":"The code to evaluate.","nodes":[{"pos":[0,21],"content":"The code to evaluate.","nodes":[{"content":"The code to evaluate.","pos":[0,21]}]}],"pos":[2322,2344],"yaml":true},{"content":"A reference to the scripting engine to use to evaluate <code>source</code>.","nodes":[{"pos":[0,75],"content":"A reference to the scripting engine to use to evaluate <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">source</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"A reference to the scripting engine to use to evaluate <code>source</code>."}],"pos":[2424,2500],"yaml":true},{"content":"The result of the evaluation. If <code>source</code> is not a string, return value is <code>source</code>.","nodes":[{"pos":[0,106],"content":"The result of the evaluation. If <code>source</code> is not a string, return value is <code>source</code>.","nodes":[{"content":"The result of the evaluation.","pos":[0,29]},{"content":"If <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">source</ph><ept id=\"p1\">&lt;/code&gt;</ept> is not a string, return value is <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">source</ph><ept id=\"p2\">&lt;/code&gt;</ept>.","pos":[30,106],"source":" If <code>source</code> is not a string, return value is <code>source</code>."}]}],"pos":[2557,2664],"yaml":true},{"content":"Evaluates the specified JScript code by using the specified engine and safety option.","nodes":[{"pos":[0,85],"content":"Evaluates the specified JScript code by using the specified engine and safety option.","nodes":[{"content":"Evaluates the specified JScript code by using the specified engine and safety option.","pos":[0,85]}]}],"pos":[3831,3917],"yaml":true},{"content":"The code to evaluate.","nodes":[{"pos":[0,21],"content":"The code to evaluate.","nodes":[{"content":"The code to evaluate.","pos":[0,21]}]}],"pos":[4133,4155],"yaml":true},{"content":"The string literal <code>unsafe</code> to enable unsafe evaluation; otherwise, `false`.","nodes":[{"pos":[0,87],"content":"The string literal <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">unsafe</ph><ept id=\"p1\">&lt;/code&gt;</ept> to enable unsafe evaluation; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"The string literal <code>unsafe</code> to enable unsafe evaluation; otherwise, `false`."}],"pos":[4223,4311],"yaml":true},{"content":"A reference to the scripting engine to use to evaluate <code>source</code>.","nodes":[{"pos":[0,75],"content":"A reference to the scripting engine to use to evaluate <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">source</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"A reference to the scripting engine to use to evaluate <code>source</code>."}],"pos":[4391,4467],"yaml":true},{"content":"The result of the evaluation. If <code>source</code> is not a string, return value is <code>source</code>.","nodes":[{"pos":[0,106],"content":"The result of the evaluation. If <code>source</code> is not a string, return value is <code>source</code>.","nodes":[{"content":"The result of the evaluation.","pos":[0,29]},{"content":"If <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">source</ph><ept id=\"p1\">&lt;/code&gt;</ept> is not a string, return value is <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">source</ph><ept id=\"p2\">&lt;/code&gt;</ept>.","pos":[30,106],"source":" If <code>source</code> is not a string, return value is <code>source</code>."}]}],"pos":[4524,4631],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: Microsoft.JScript.Eval\n  commentId: T:Microsoft.JScript.Eval\n  id: Eval\n  children:\n  - Microsoft.JScript.Eval.JScriptEvaluate(System.Object,Microsoft.JScript.Vsa.VsaEngine)\n  - Microsoft.JScript.Eval.JScriptEvaluate(System.Object,System.Object,Microsoft.JScript.Vsa.VsaEngine)\n  langs:\n  - csharp\n  name: Eval\n  nameWithType: Eval\n  fullName: Microsoft.JScript.Eval\n  type: Class\n  assemblies:\n  - Microsoft.JScript\n  namespace: Microsoft.JScript\n  summary: Evaluates JScript code. This class belongs to the abstract syntax tree category.\n  syntax:\n    content: 'public sealed class Eval : Microsoft.JScript.AST'\n  inheritance:\n  - System.Object\n  - Microsoft.JScript.AST\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  internal_use_only: true\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.JScript/Eval.xml\n  ms.author: mikejo\n- uid: Microsoft.JScript.Eval.JScriptEvaluate(System.Object,Microsoft.JScript.Vsa.VsaEngine)\n  commentId: M:Microsoft.JScript.Eval.JScriptEvaluate(System.Object,Microsoft.JScript.Vsa.VsaEngine)\n  id: JScriptEvaluate(System.Object,Microsoft.JScript.Vsa.VsaEngine)\n  parent: Microsoft.JScript.Eval\n  langs:\n  - csharp\n  name: JScriptEvaluate(Object, VsaEngine)\n  nameWithType: Eval.JScriptEvaluate(Object, VsaEngine)\n  fullName: Eval.JScriptEvaluate(Object, VsaEngine)\n  type: Method\n  assemblies:\n  - Microsoft.JScript\n  namespace: Microsoft.JScript\n  summary: Evaluates the specified JScript code by using the specified engine.\n  syntax:\n    content: public static object JScriptEvaluate (object source, Microsoft.JScript.Vsa.VsaEngine engine);\n    parameters:\n    - id: source\n      type: System.Object\n      description: The code to evaluate.\n    - id: engine\n      type: Microsoft.JScript.Vsa.VsaEngine\n      description: A reference to the scripting engine to use to evaluate <code>source</code>.\n    return:\n      type: System.Object\n      description: The result of the evaluation. If <code>source</code> is not a string, return value is <code>source</code>.\n  overload: Microsoft.JScript.Eval.JScriptEvaluate*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  internal_use_only: true\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.JScript/Eval.xml\n  ms.author: mikejo\n- uid: Microsoft.JScript.Eval.JScriptEvaluate(System.Object,System.Object,Microsoft.JScript.Vsa.VsaEngine)\n  commentId: M:Microsoft.JScript.Eval.JScriptEvaluate(System.Object,System.Object,Microsoft.JScript.Vsa.VsaEngine)\n  id: JScriptEvaluate(System.Object,System.Object,Microsoft.JScript.Vsa.VsaEngine)\n  parent: Microsoft.JScript.Eval\n  langs:\n  - csharp\n  name: JScriptEvaluate(Object, Object, VsaEngine)\n  nameWithType: Eval.JScriptEvaluate(Object, Object, VsaEngine)\n  fullName: Eval.JScriptEvaluate(Object, Object, VsaEngine)\n  type: Method\n  assemblies:\n  - Microsoft.JScript\n  namespace: Microsoft.JScript\n  summary: Evaluates the specified JScript code by using the specified engine and safety option.\n  syntax:\n    content: public static object JScriptEvaluate (object source, object unsafeOption, Microsoft.JScript.Vsa.VsaEngine engine);\n    parameters:\n    - id: source\n      type: System.Object\n      description: The code to evaluate.\n    - id: unsafeOption\n      type: System.Object\n      description: The string literal <code>unsafe</code> to enable unsafe evaluation; otherwise, `false`.\n    - id: engine\n      type: Microsoft.JScript.Vsa.VsaEngine\n      description: A reference to the scripting engine to use to evaluate <code>source</code>.\n    return:\n      type: System.Object\n      description: The result of the evaluation. If <code>source</code> is not a string, return value is <code>source</code>.\n  overload: Microsoft.JScript.Eval.JScriptEvaluate*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  internal_use_only: true\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.JScript/Eval.xml\n  ms.author: mikejo\nreferences:\n- uid: Microsoft.JScript.AST\n  parent: Microsoft.JScript\n  isExternal: false\n  name: AST\n  nameWithType: AST\n  fullName: Microsoft.JScript.AST\n- uid: Microsoft.JScript.Eval.JScriptEvaluate(System.Object,Microsoft.JScript.Vsa.VsaEngine)\n  parent: Microsoft.JScript.Eval\n  isExternal: false\n  name: JScriptEvaluate(Object, VsaEngine)\n  nameWithType: Eval.JScriptEvaluate(Object, VsaEngine)\n  fullName: Eval.JScriptEvaluate(Object, VsaEngine)\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: Microsoft.JScript.Vsa.VsaEngine\n  parent: Microsoft.JScript.Vsa\n  isExternal: false\n  name: VsaEngine\n  nameWithType: VsaEngine\n  fullName: Microsoft.JScript.Vsa.VsaEngine\n- uid: Microsoft.JScript.Eval.JScriptEvaluate(System.Object,System.Object,Microsoft.JScript.Vsa.VsaEngine)\n  parent: Microsoft.JScript.Eval\n  isExternal: false\n  name: JScriptEvaluate(Object, Object, VsaEngine)\n  nameWithType: Eval.JScriptEvaluate(Object, Object, VsaEngine)\n  fullName: Eval.JScriptEvaluate(Object, Object, VsaEngine)\n- uid: Microsoft.JScript.Eval.JScriptEvaluate*\n  parent: Microsoft.JScript.Eval\n  isExternal: false\n  name: JScriptEvaluate\n  nameWithType: Eval.JScriptEvaluate\n  fullName: Eval.JScriptEvaluate\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.JScript/Eval.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n"}