<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">06d1197d02f1f29fef9735cc4b1da03c90cd5d15</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">System.Windows.Input.CanExecuteRoutedEventHandler.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2365b09e2465a2580ca7e68f8b87abbdb158d852</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">0b2ce43d8957c88953fa39f96f4f8df7d3806361</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Represents the method that will handle the <ph id="ph1">&lt;xref href="System.Windows.Input.CommandBinding.CanExecute"&gt;&lt;/xref&gt;</ph> event.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Input.CanExecuteRoutedEventHandler&gt;</ph> determines if the command associated with the event source is able to execute on the command target.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the command has a command source that specifies a target, then the target information can be obtained through <ph id="ph1">`sender`</ph>.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">&lt;xref:System.Windows.Input.ICommandSource.CommandTarget%2A&gt;</ph> is not set, the element with keyboard focus is the target, and can also be obtained through <ph id="ph2">`sender`</ph>.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>If it is determined that the command can execute on the target, then the <ph id="ph1">&lt;xref:System.Windows.Input.CanExecuteRoutedEventArgs.CanExecute%2A?displayProperty=fullName&gt;</ph> property should be set to <ph id="ph2">`true`</ph>; otherwise, set it to <ph id="ph3">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>You do not need to rely on event data to determine the command, source, and target.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can limit the usage of the handler to known possible command invocations, although this is more difficult to accomplish if your command structure relies extensively on the command routing to execute the same command on successive potential targets in an event route.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>