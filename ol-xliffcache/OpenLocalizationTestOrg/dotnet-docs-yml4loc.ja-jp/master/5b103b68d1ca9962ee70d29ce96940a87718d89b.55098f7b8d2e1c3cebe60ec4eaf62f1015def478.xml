{"nodes":[{"content":"Determines whether Internet Protocol version 6 is enabled on the local computer. This class cannot be inherited.","nodes":[{"pos":[0,112],"content":"Determines whether Internet Protocol version 6 is enabled on the local computer. This class cannot be inherited.","nodes":[{"content":"Determines whether Internet Protocol version 6 is enabled on the local computer. This class cannot be inherited.","pos":[0,112],"nodes":[{"content":"Determines whether Internet Protocol version 6 is enabled on the local computer.","pos":[0,80]},{"content":"This class cannot be inherited.","pos":[81,112]}]}]}],"pos":[515,628],"yaml":true},{"content":"This class corresponds to the `enabled` attribute of the [\\&lt;ipv6\\&gt; Element (Network Settings)](~/docs/framework/configure-apps/file-schema/network/ipv6-element-network-settings.md) configuration element.  \n  \n This class is used to specify whether the IPv6 protocol is supported on the local computer. IPv6 is disabled by default.  \n  \n This class provides programmatic access to information that can be stored in configuration files.","nodes":[{"pos":[0,209],"content":"This class corresponds to the <ph id=\"ph1\">`enabled`</ph> attribute of the <bpt id=\"p1\">[</bpt><ph id=\"ph2\">\\&amp;</ph>lt;ipv6<ph id=\"ph3\">\\&amp;</ph>gt; Element (Network Settings)<ept id=\"p1\">](~/docs/framework/configure-apps/file-schema/network/ipv6-element-network-settings.md)</ept> configuration element.","source":"This class corresponds to the `enabled` attribute of the [\\&lt;ipv6\\&gt; Element (Network Settings)](~/docs/framework/configure-apps/file-schema/network/ipv6-element-network-settings.md) configuration element."},{"pos":[216,336],"content":"This class is used to specify whether the IPv6 protocol is supported on the local computer. IPv6 is disabled by default.","nodes":[{"content":"This class is used to specify whether the IPv6 protocol is supported on the local computer. IPv6 is disabled by default.","pos":[0,120],"nodes":[{"content":"This class is used to specify whether the IPv6 protocol is supported on the local computer.","pos":[0,91]},{"content":"IPv6 is disabled by default.","pos":[92,120]}]}]},{"pos":[343,440],"content":"This class provides programmatic access to information that can be stored in configuration files.","nodes":[{"content":"This class provides programmatic access to information that can be stored in configuration files.","pos":[0,97]}]}],"pos":[639,1088],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.Net.Configuration.Ipv6Element\"></xref> class.","nodes":[{"pos":[0,98],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Net.Configuration.Ipv6Element\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.Net.Configuration.Ipv6Element\"></xref> class."}],"pos":[5105,5204],"yaml":true},{"content":"This constructor adds the <xref:System.Net.Configuration.Ipv6Element.Enabled%2A> property to the <xref:System.Configuration.ConfigurationElement.Properties%2A> collection.","nodes":[{"pos":[0,171],"content":"This constructor adds the <xref:System.Net.Configuration.Ipv6Element.Enabled%2A> property to the <xref:System.Configuration.ConfigurationElement.Properties%2A> collection.","nodes":[{"content":"This constructor adds the <ph id=\"ph1\">&lt;xref:System.Net.Configuration.Ipv6Element.Enabled%2A&gt;</ph> property to the <ph id=\"ph2\">&lt;xref:System.Configuration.ConfigurationElement.Properties%2A&gt;</ph> collection.","pos":[0,171],"source":"This constructor adds the <xref:System.Net.Configuration.Ipv6Element.Enabled%2A> property to the <xref:System.Configuration.ConfigurationElement.Properties%2A> collection."}]}],"pos":[5215,5387],"yaml":true,"extradata":"MT"},{"content":"Gets or sets a Boolean value that indicates whether Internet Protocol version 6 is enabled on the local computer.","nodes":[{"pos":[0,113],"content":"Gets or sets a Boolean value that indicates whether Internet Protocol version 6 is enabled on the local computer.","nodes":[{"content":"Gets or sets a Boolean value that indicates whether Internet Protocol version 6 is enabled on the local computer.","pos":[0,113]}]}],"pos":[6408,6522],"yaml":true},{"content":"`true` if IPv6 is enabled; otherwise, `false`.","nodes":[{"pos":[0,46],"content":"<ph id=\"ph1\">`true`</ph> if IPv6 is enabled; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if IPv6 is enabled; otherwise, `false`."}],"pos":[6758,6807],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Net.Configuration.Ipv6Element\n  commentId: T:System.Net.Configuration.Ipv6Element\n  id: Ipv6Element\n  children:\n  - System.Net.Configuration.Ipv6Element.#ctor\n  - System.Net.Configuration.Ipv6Element.Enabled\n  - System.Net.Configuration.Ipv6Element.Properties\n  langs:\n  - csharp\n  name: Ipv6Element\n  nameWithType: Ipv6Element\n  fullName: System.Net.Configuration.Ipv6Element\n  type: Class\n  assemblies:\n  - System\n  namespace: System.Net.Configuration\n  summary: Determines whether Internet Protocol version 6 is enabled on the local computer. This class cannot be inherited.\n  remarks: \"This class corresponds to the `enabled` attribute of the [\\\\&lt;ipv6\\\\&gt; Element (Network Settings)](~/docs/framework/configure-apps/file-schema/network/ipv6-element-network-settings.md) configuration element.  \\n  \\n This class is used to specify whether the IPv6 protocol is supported on the local computer. IPv6 is disabled by default.  \\n  \\n This class provides programmatic access to information that can be stored in configuration files.\"\n  syntax:\n    content: 'public sealed class Ipv6Element : System.Configuration.ConfigurationElement'\n  inheritance:\n  - System.Object\n  - System.Configuration.ConfigurationElement\n  implements: []\n  inheritedMembers:\n  - System.Configuration.ConfigurationElement.CurrentConfiguration\n  - System.Configuration.ConfigurationElement.DeserializeElement(System.Xml.XmlReader,System.Boolean)\n  - System.Configuration.ConfigurationElement.ElementInformation\n  - System.Configuration.ConfigurationElement.ElementProperty\n  - System.Configuration.ConfigurationElement.Equals(System.Object)\n  - System.Configuration.ConfigurationElement.EvaluationContext\n  - System.Configuration.ConfigurationElement.GetHashCode\n  - System.Configuration.ConfigurationElement.GetTransformedAssemblyString(System.String)\n  - System.Configuration.ConfigurationElement.GetTransformedTypeString(System.String)\n  - System.Configuration.ConfigurationElement.HasContext\n  - System.Configuration.ConfigurationElement.Init\n  - System.Configuration.ConfigurationElement.InitializeDefault\n  - System.Configuration.ConfigurationElement.IsModified\n  - System.Configuration.ConfigurationElement.IsReadOnly\n  - System.Configuration.ConfigurationElement.Item(System.Configuration.ConfigurationProperty)\n  - System.Configuration.ConfigurationElement.Item(System.String)\n  - System.Configuration.ConfigurationElement.ListErrors(System.Collections.IList)\n  - System.Configuration.ConfigurationElement.LockAllAttributesExcept\n  - System.Configuration.ConfigurationElement.LockAllElementsExcept\n  - System.Configuration.ConfigurationElement.LockAttributes\n  - System.Configuration.ConfigurationElement.LockElements\n  - System.Configuration.ConfigurationElement.LockItem\n  - System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedAttribute(System.String,System.String)\n  - System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)\n  - System.Configuration.ConfigurationElement.OnRequiredPropertyNotFound(System.String)\n  - System.Configuration.ConfigurationElement.PostDeserialize\n  - System.Configuration.ConfigurationElement.PreSerialize(System.Xml.XmlWriter)\n  - System.Configuration.ConfigurationElement.Reset(System.Configuration.ConfigurationElement)\n  - System.Configuration.ConfigurationElement.ResetModified\n  - System.Configuration.ConfigurationElement.SerializeElement(System.Xml.XmlWriter,System.Boolean)\n  - System.Configuration.ConfigurationElement.SerializeToXmlElement(System.Xml.XmlWriter,System.String)\n  - System.Configuration.ConfigurationElement.SetPropertyValue(System.Configuration.ConfigurationProperty,System.Object,System.Boolean)\n  - System.Configuration.ConfigurationElement.SetReadOnly\n  - System.Configuration.ConfigurationElement.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Configuration/Ipv6Element.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.Configuration.Ipv6Element.#ctor\n  commentId: M:System.Net.Configuration.Ipv6Element.#ctor\n  id: '#ctor'\n  parent: System.Net.Configuration.Ipv6Element\n  langs:\n  - csharp\n  name: Ipv6Element()\n  nameWithType: Ipv6Element.Ipv6Element()\n  fullName: Ipv6Element.Ipv6Element()\n  type: Constructor\n  assemblies:\n  - System\n  namespace: System.Net.Configuration\n  summary: Initializes a new instance of the <xref href=\"System.Net.Configuration.Ipv6Element\"></xref> class.\n  remarks: This constructor adds the <xref:System.Net.Configuration.Ipv6Element.Enabled%2A> property to the <xref:System.Configuration.ConfigurationElement.Properties%2A> collection.\n  syntax:\n    content: public Ipv6Element ();\n    parameters: []\n  overload: System.Net.Configuration.Ipv6Element.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Configuration/Ipv6Element.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.Configuration.Ipv6Element.Enabled\n  commentId: P:System.Net.Configuration.Ipv6Element.Enabled\n  id: Enabled\n  parent: System.Net.Configuration.Ipv6Element\n  langs:\n  - csharp\n  name: Enabled\n  nameWithType: Ipv6Element.Enabled\n  fullName: Ipv6Element.Enabled\n  type: Property\n  assemblies:\n  - System\n  namespace: System.Net.Configuration\n  summary: Gets or sets a Boolean value that indicates whether Internet Protocol version 6 is enabled on the local computer.\n  syntax:\n    content: >-\n      [System.Configuration.ConfigurationProperty(\"enabled\", DefaultValue=Mono.Cecil.CustomAttributeArgument)]\n\n      public bool Enabled { get; set; }\n    return:\n      type: System.Boolean\n      description: '`true` if IPv6 is enabled; otherwise, `false`.'\n  overload: System.Net.Configuration.Ipv6Element.Enabled*\n  exceptions: []\n  attributes:\n  - type: System.Configuration.ConfigurationPropertyAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Configuration/Ipv6Element.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.Configuration.Ipv6Element.Properties\n  commentId: P:System.Net.Configuration.Ipv6Element.Properties\n  id: Properties\n  parent: System.Net.Configuration.Ipv6Element\n  langs:\n  - csharp\n  name: Properties\n  nameWithType: Ipv6Element.Properties\n  fullName: Ipv6Element.Properties\n  type: Property\n  assemblies:\n  - System\n  namespace: System.Net.Configuration\n  syntax:\n    content: protected override System.Configuration.ConfigurationPropertyCollection Properties { get; }\n    return:\n      type: System.Configuration.ConfigurationPropertyCollection\n      description: ''\n  overload: System.Net.Configuration.Ipv6Element.Properties*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Configuration/Ipv6Element.xml\nreferences:\n- uid: System.Configuration.ConfigurationElement\n  parent: System.Configuration\n  isExternal: false\n  name: ConfigurationElement\n  nameWithType: ConfigurationElement\n  fullName: System.Configuration.ConfigurationElement\n- uid: System.Net.Configuration.Ipv6Element.#ctor\n  parent: System.Net.Configuration.Ipv6Element\n  isExternal: false\n  name: Ipv6Element()\n  nameWithType: Ipv6Element.Ipv6Element()\n  fullName: Ipv6Element.Ipv6Element()\n- uid: System.Net.Configuration.Ipv6Element.Enabled\n  parent: System.Net.Configuration.Ipv6Element\n  isExternal: false\n  name: Enabled\n  nameWithType: Ipv6Element.Enabled\n  fullName: Ipv6Element.Enabled\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Net.Configuration.Ipv6Element.Properties\n  parent: System.Net.Configuration.Ipv6Element\n  isExternal: false\n  name: Properties\n  nameWithType: Ipv6Element.Properties\n  fullName: Ipv6Element.Properties\n- uid: System.Configuration.ConfigurationPropertyCollection\n  parent: System.Configuration\n  isExternal: false\n  name: ConfigurationPropertyCollection\n  nameWithType: ConfigurationPropertyCollection\n  fullName: System.Configuration.ConfigurationPropertyCollection\n- uid: System.Net.Configuration.Ipv6Element.#ctor*\n  parent: System.Net.Configuration.Ipv6Element\n  isExternal: false\n  name: Ipv6Element\n  nameWithType: Ipv6Element.Ipv6Element\n  fullName: Ipv6Element.Ipv6Element\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Configuration/Ipv6Element.xml\n- uid: System.Net.Configuration.Ipv6Element.Enabled*\n  parent: System.Net.Configuration.Ipv6Element\n  isExternal: false\n  name: Enabled\n  nameWithType: Ipv6Element.Enabled\n  fullName: Ipv6Element.Enabled\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Configuration/Ipv6Element.xml\n- uid: System.Net.Configuration.Ipv6Element.Properties*\n  parent: System.Net.Configuration.Ipv6Element\n  isExternal: false\n  name: Properties\n  nameWithType: Ipv6Element.Properties\n  fullName: Ipv6Element.Properties\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Configuration/Ipv6Element.xml\n- uid: System.Configuration.ConfigurationElement.Equals(System.Object)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: ConfigurationElement.Equals(Object)\n  fullName: ConfigurationElement.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Configuration.ConfigurationElement.GetHashCode\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: ConfigurationElement.GetHashCode()\n  fullName: ConfigurationElement.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.Configuration.ConfigurationElement.CurrentConfiguration\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: CurrentConfiguration\n  nameWithType: ConfigurationElement.CurrentConfiguration\n  fullName: ConfigurationElement.CurrentConfiguration\n- uid: System.Configuration.ConfigurationElement.DeserializeElement(System.Xml.XmlReader,System.Boolean)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: DeserializeElement(XmlReader, Boolean)\n  nameWithType: ConfigurationElement.DeserializeElement(XmlReader, Boolean)\n  fullName: ConfigurationElement.DeserializeElement(XmlReader, Boolean)\n- uid: System.Configuration.ConfigurationElement.ElementInformation\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: ElementInformation\n  nameWithType: ConfigurationElement.ElementInformation\n  fullName: ConfigurationElement.ElementInformation\n- uid: System.Configuration.ConfigurationElement.ElementProperty\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: ElementProperty\n  nameWithType: ConfigurationElement.ElementProperty\n  fullName: ConfigurationElement.ElementProperty\n- uid: System.Configuration.ConfigurationElement.EvaluationContext\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: EvaluationContext\n  nameWithType: ConfigurationElement.EvaluationContext\n  fullName: ConfigurationElement.EvaluationContext\n- uid: System.Configuration.ConfigurationElement.GetTransformedAssemblyString(System.String)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: GetTransformedAssemblyString(String)\n  nameWithType: ConfigurationElement.GetTransformedAssemblyString(String)\n  fullName: ConfigurationElement.GetTransformedAssemblyString(String)\n- uid: System.Configuration.ConfigurationElement.GetTransformedTypeString(System.String)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: GetTransformedTypeString(String)\n  nameWithType: ConfigurationElement.GetTransformedTypeString(String)\n  fullName: ConfigurationElement.GetTransformedTypeString(String)\n- uid: System.Configuration.ConfigurationElement.HasContext\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: HasContext\n  nameWithType: ConfigurationElement.HasContext\n  fullName: ConfigurationElement.HasContext\n- uid: System.Configuration.ConfigurationElement.Init\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: Init()\n  nameWithType: ConfigurationElement.Init()\n  fullName: ConfigurationElement.Init()\n- uid: System.Configuration.ConfigurationElement.InitializeDefault\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: InitializeDefault()\n  nameWithType: ConfigurationElement.InitializeDefault()\n  fullName: ConfigurationElement.InitializeDefault()\n- uid: System.Configuration.ConfigurationElement.IsModified\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: IsModified()\n  nameWithType: ConfigurationElement.IsModified()\n  fullName: ConfigurationElement.IsModified()\n- uid: System.Configuration.ConfigurationElement.IsReadOnly\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: IsReadOnly()\n  nameWithType: ConfigurationElement.IsReadOnly()\n  fullName: ConfigurationElement.IsReadOnly()\n- uid: System.Configuration.ConfigurationElement.Item(System.Configuration.ConfigurationProperty)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: Item(ConfigurationProperty)\n  nameWithType: ConfigurationElement.Item(ConfigurationProperty)\n  fullName: ConfigurationElement.Item(ConfigurationProperty)\n- uid: System.Configuration.ConfigurationElement.Item(System.String)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: Item(String)\n  nameWithType: ConfigurationElement.Item(String)\n  fullName: ConfigurationElement.Item(String)\n- uid: System.Configuration.ConfigurationElement.ListErrors(System.Collections.IList)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: ListErrors(IList)\n  nameWithType: ConfigurationElement.ListErrors(IList)\n  fullName: ConfigurationElement.ListErrors(IList)\n- uid: System.Configuration.ConfigurationElement.LockAllAttributesExcept\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: LockAllAttributesExcept\n  nameWithType: ConfigurationElement.LockAllAttributesExcept\n  fullName: ConfigurationElement.LockAllAttributesExcept\n- uid: System.Configuration.ConfigurationElement.LockAllElementsExcept\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: LockAllElementsExcept\n  nameWithType: ConfigurationElement.LockAllElementsExcept\n  fullName: ConfigurationElement.LockAllElementsExcept\n- uid: System.Configuration.ConfigurationElement.LockAttributes\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: LockAttributes\n  nameWithType: ConfigurationElement.LockAttributes\n  fullName: ConfigurationElement.LockAttributes\n- uid: System.Configuration.ConfigurationElement.LockElements\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: LockElements\n  nameWithType: ConfigurationElement.LockElements\n  fullName: ConfigurationElement.LockElements\n- uid: System.Configuration.ConfigurationElement.LockItem\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: LockItem\n  nameWithType: ConfigurationElement.LockItem\n  fullName: ConfigurationElement.LockItem\n- uid: System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedAttribute(System.String,System.String)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: OnDeserializeUnrecognizedAttribute(String, String)\n  nameWithType: ConfigurationElement.OnDeserializeUnrecognizedAttribute(String, String)\n  fullName: ConfigurationElement.OnDeserializeUnrecognizedAttribute(String, String)\n- uid: System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: OnDeserializeUnrecognizedElement(String, XmlReader)\n  nameWithType: ConfigurationElement.OnDeserializeUnrecognizedElement(String, XmlReader)\n  fullName: ConfigurationElement.OnDeserializeUnrecognizedElement(String, XmlReader)\n- uid: System.Configuration.ConfigurationElement.OnRequiredPropertyNotFound(System.String)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: OnRequiredPropertyNotFound(String)\n  nameWithType: ConfigurationElement.OnRequiredPropertyNotFound(String)\n  fullName: ConfigurationElement.OnRequiredPropertyNotFound(String)\n- uid: System.Configuration.ConfigurationElement.PostDeserialize\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: PostDeserialize()\n  nameWithType: ConfigurationElement.PostDeserialize()\n  fullName: ConfigurationElement.PostDeserialize()\n- uid: System.Configuration.ConfigurationElement.PreSerialize(System.Xml.XmlWriter)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: PreSerialize(XmlWriter)\n  nameWithType: ConfigurationElement.PreSerialize(XmlWriter)\n  fullName: ConfigurationElement.PreSerialize(XmlWriter)\n- uid: System.Configuration.ConfigurationElement.Reset(System.Configuration.ConfigurationElement)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: Reset(ConfigurationElement)\n  nameWithType: ConfigurationElement.Reset(ConfigurationElement)\n  fullName: ConfigurationElement.Reset(ConfigurationElement)\n- uid: System.Configuration.ConfigurationElement.ResetModified\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: ResetModified()\n  nameWithType: ConfigurationElement.ResetModified()\n  fullName: ConfigurationElement.ResetModified()\n- uid: System.Configuration.ConfigurationElement.SerializeElement(System.Xml.XmlWriter,System.Boolean)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: SerializeElement(XmlWriter, Boolean)\n  nameWithType: ConfigurationElement.SerializeElement(XmlWriter, Boolean)\n  fullName: ConfigurationElement.SerializeElement(XmlWriter, Boolean)\n- uid: System.Configuration.ConfigurationElement.SerializeToXmlElement(System.Xml.XmlWriter,System.String)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: SerializeToXmlElement(XmlWriter, String)\n  nameWithType: ConfigurationElement.SerializeToXmlElement(XmlWriter, String)\n  fullName: ConfigurationElement.SerializeToXmlElement(XmlWriter, String)\n- uid: System.Configuration.ConfigurationElement.SetPropertyValue(System.Configuration.ConfigurationProperty,System.Object,System.Boolean)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: SetPropertyValue(ConfigurationProperty, Object, Boolean)\n  nameWithType: ConfigurationElement.SetPropertyValue(ConfigurationProperty, Object, Boolean)\n  fullName: ConfigurationElement.SetPropertyValue(ConfigurationProperty, Object, Boolean)\n- uid: System.Configuration.ConfigurationElement.SetReadOnly\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: SetReadOnly()\n  nameWithType: ConfigurationElement.SetReadOnly()\n  fullName: ConfigurationElement.SetReadOnly()\n- uid: System.Configuration.ConfigurationElement.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: Unmerge(ConfigurationElement, ConfigurationElement, ConfigurationSaveMode)\n  nameWithType: ConfigurationElement.Unmerge(ConfigurationElement, ConfigurationElement, ConfigurationSaveMode)\n  fullName: ConfigurationElement.Unmerge(ConfigurationElement, ConfigurationElement, ConfigurationSaveMode)\n"}