{"nodes":[{"content":"Provides extension methods to create and retrieve reflection-based parts.","nodes":[{"pos":[0,73],"content":"Provides extension methods to create and retrieve reflection-based parts.","nodes":[{"content":"Provides extension methods to create and retrieve reflection-based parts.","pos":[0,73]}]}],"pos":[5702,5776],"yaml":true},{"content":"Creates an export definition from the specified member, with the specified contract name, metadata, and origin.","nodes":[{"pos":[0,111],"content":"Creates an export definition from the specified member, with the specified contract name, metadata, and origin.","nodes":[{"content":"Creates an export definition from the specified member, with the specified contract name, metadata, and origin.","pos":[0,111]}]}],"pos":[8443,8555],"yaml":true},{"content":"The member to export.","nodes":[{"pos":[0,21],"content":"The member to export.","nodes":[{"content":"The member to export.","pos":[0,21]}]}],"pos":[9063,9085],"yaml":true},{"content":"The contract name to use for the export.","nodes":[{"pos":[0,40],"content":"The contract name to use for the export.","nodes":[{"content":"The contract name to use for the export.","pos":[0,40]}]}],"pos":[9153,9194],"yaml":true},{"content":"The metadata for the export.","nodes":[{"pos":[0,28],"content":"The metadata for the export.","nodes":[{"content":"The metadata for the export.","pos":[0,28]}]}],"pos":[9325,9354],"yaml":true},{"content":"The object that the export originates from.","nodes":[{"pos":[0,43],"content":"The object that the export originates from.","nodes":[{"content":"The object that the export originates from.","pos":[0,43]}]}],"pos":[9467,9511],"yaml":true},{"content":"An export definition created from the specified parameters.","nodes":[{"pos":[0,59],"content":"An export definition created from the specified parameters.","nodes":[{"content":"An export definition created from the specified parameters.","pos":[0,59]}]}],"pos":[9616,9676],"yaml":true},{"content":"Creates an import definition for the specified parameter by using the specified contract name, type identity, import metadata, cardinality, and creation policy.","nodes":[{"pos":[0,160],"content":"Creates an import definition for the specified parameter by using the specified contract name, type identity, import metadata, cardinality, and creation policy.","nodes":[{"content":"Creates an import definition for the specified parameter by using the specified contract name, type identity, import metadata, cardinality, and creation policy.","pos":[0,160]}]}],"pos":[12617,12778],"yaml":true},{"content":"The parameter to import.","nodes":[{"pos":[0,24],"content":"The parameter to import.","nodes":[{"content":"The parameter to import.","pos":[0,24]}]}],"pos":[13459,13484],"yaml":true},{"content":"The contract name to use for the import.","nodes":[{"pos":[0,40],"content":"The contract name to use for the import.","nodes":[{"content":"The contract name to use for the import.","pos":[0,40]}]}],"pos":[13552,13593],"yaml":true},{"content":"The required type identity for the import.","nodes":[{"pos":[0,42],"content":"The required type identity for the import.","nodes":[{"content":"The required type identity for the import.","pos":[0,42]}]}],"pos":[13669,13712],"yaml":true},{"content":"The required metadata for the import.","nodes":[{"pos":[0,37],"content":"The required metadata for the import.","nodes":[{"content":"The required metadata for the import.","pos":[0,37]}]}],"pos":[13877,13915],"yaml":true},{"content":"The cardinality of the import.","nodes":[{"pos":[0,30],"content":"The cardinality of the import.","nodes":[{"content":"The cardinality of the import.","pos":[0,30]}]}],"pos":[14031,14062],"yaml":true},{"content":"One of the enumeration values that specifies the import's creation policy.","nodes":[{"pos":[0,74],"content":"One of the enumeration values that specifies the import's creation policy.","nodes":[{"content":"One of the enumeration values that specifies the import's creation policy.","pos":[0,74]}]}],"pos":[14175,14250],"yaml":true},{"content":"The object to import into.","nodes":[{"pos":[0,26],"content":"The object to import into.","nodes":[{"content":"The object to import into.","pos":[0,26]}]}],"pos":[14363,14390],"yaml":true},{"content":"An import definition created from the specified parameters.","nodes":[{"pos":[0,59],"content":"An import definition created from the specified parameters.","nodes":[{"content":"An import definition created from the specified parameters.","pos":[0,59]}]}],"pos":[14508,14568],"yaml":true},{"content":"Creates an import definition for the specified member by using the specified contract name, type identity, import metadata, cardinality, recomposition policy, and creation policy.","nodes":[{"pos":[0,179],"content":"Creates an import definition for the specified member by using the specified contract name, type identity, import metadata, cardinality, recomposition policy, and creation policy.","nodes":[{"content":"Creates an import definition for the specified member by using the specified contract name, type identity, import metadata, cardinality, recomposition policy, and creation policy.","pos":[0,179]}]}],"pos":[17626,17806],"yaml":true},{"content":"The member to import into.","nodes":[{"pos":[0,26],"content":"The member to import into.","nodes":[{"content":"The member to import into.","pos":[0,26]}]}],"pos":[18567,18594],"yaml":true},{"content":"The contract name to use for the import.","nodes":[{"pos":[0,40],"content":"The contract name to use for the import.","nodes":[{"content":"The contract name to use for the import.","pos":[0,40]}]}],"pos":[18662,18703],"yaml":true},{"content":"The required type identity for the import.","nodes":[{"pos":[0,42],"content":"The required type identity for the import.","nodes":[{"content":"The required type identity for the import.","pos":[0,42]}]}],"pos":[18779,18822],"yaml":true},{"content":"The required metadata for the import.","nodes":[{"pos":[0,37],"content":"The required metadata for the import.","nodes":[{"content":"The required metadata for the import.","pos":[0,37]}]}],"pos":[18987,19025],"yaml":true},{"content":"The cardinality of the import.","nodes":[{"pos":[0,30],"content":"The cardinality of the import.","nodes":[{"content":"The cardinality of the import.","pos":[0,30]}]}],"pos":[19141,19172],"yaml":true},{"content":"`true` to indicate that the import is recomposable; otherwise, `false`.","nodes":[{"pos":[0,71],"content":"<ph id=\"ph1\">`true`</ph> to indicate that the import is recomposable; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` to indicate that the import is recomposable; otherwise, `false`."}],"pos":[19243,19317],"yaml":true},{"content":"One of the enumeration values that specifies the import's creation policy.","nodes":[{"pos":[0,74],"content":"One of the enumeration values that specifies the import's creation policy.","nodes":[{"content":"One of the enumeration values that specifies the import's creation policy.","pos":[0,74]}]}],"pos":[19430,19505],"yaml":true},{"content":"The object to import into.","nodes":[{"pos":[0,26],"content":"The object to import into.","nodes":[{"content":"The object to import into.","pos":[0,26]}]}],"pos":[19618,19645],"yaml":true},{"content":"An import definition created from the specified parameters.","nodes":[{"pos":[0,59],"content":"An import definition created from the specified parameters.","nodes":[{"content":"An import definition created from the specified parameters.","pos":[0,59]}]}],"pos":[19763,19823],"yaml":true},{"content":"Creates an import definition for the specified parameter by using the specified contract name, type identity, import and contract metadata, cardinality, and creation policy.","nodes":[{"pos":[0,173],"content":"Creates an import definition for the specified parameter by using the specified contract name, type identity, import and contract metadata, cardinality, and creation policy.","nodes":[{"content":"Creates an import definition for the specified parameter by using the specified contract name, type identity, import and contract metadata, cardinality, and creation policy.","pos":[0,173]}]}],"pos":[23124,23298],"yaml":true},{"content":"The parameter to import.","nodes":[{"pos":[0,24],"content":"The parameter to import.","nodes":[{"content":"The parameter to import.","pos":[0,24]}]}],"pos":[24065,24090],"yaml":true},{"content":"The contract name to use for the import.","nodes":[{"pos":[0,40],"content":"The contract name to use for the import.","nodes":[{"content":"The contract name to use for the import.","pos":[0,40]}]}],"pos":[24158,24199],"yaml":true},{"content":"The required type identity for the import.","nodes":[{"pos":[0,42],"content":"The required type identity for the import.","nodes":[{"content":"The required type identity for the import.","pos":[0,42]}]}],"pos":[24275,24318],"yaml":true},{"content":"The required metadata for the import.","nodes":[{"pos":[0,37],"content":"The required metadata for the import.","nodes":[{"content":"The required metadata for the import.","pos":[0,37]}]}],"pos":[24483,24521],"yaml":true},{"content":"The cardinality of the import.","nodes":[{"pos":[0,30],"content":"The cardinality of the import.","nodes":[{"content":"The cardinality of the import.","pos":[0,30]}]}],"pos":[24637,24668],"yaml":true},{"content":"One of the enumeration values that specifies the import's creation policy.","nodes":[{"pos":[0,74],"content":"One of the enumeration values that specifies the import's creation policy.","nodes":[{"content":"One of the enumeration values that specifies the import's creation policy.","pos":[0,74]}]}],"pos":[24781,24856],"yaml":true},{"content":"The contract metadata","nodes":[{"pos":[0,21],"content":"The contract metadata","nodes":[{"content":"The contract metadata","pos":[0,21]}]}],"pos":[24974,24996],"yaml":true},{"content":"`true` to indicate that the import represents an <xref href=\"System.ComponentModel.Composition.ExportFactory`1\"></xref>; otherwise, `false`.","nodes":[{"pos":[0,140],"content":"<ph id=\"ph1\">`true`</ph> to indicate that the import represents an <ph id=\"ph2\">&lt;xref href=\"System.ComponentModel.Composition.ExportFactory`1\"&gt;&lt;/xref&gt;</ph>; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` to indicate that the import represents an <xref href=\"System.ComponentModel.Composition.ExportFactory`1\"></xref>; otherwise, `false`."}],"pos":[25068,25211],"yaml":true},{"content":"The object to import into.","nodes":[{"pos":[0,26],"content":"The object to import into.","nodes":[{"content":"The object to import into.","pos":[0,26]}]}],"pos":[25324,25351],"yaml":true},{"content":"An import definition created from the specified parameters.","nodes":[{"pos":[0,59],"content":"An import definition created from the specified parameters.","nodes":[{"content":"An import definition created from the specified parameters.","pos":[0,59]}]}],"pos":[25469,25529],"yaml":true},{"content":"Creates an import definition for the specified member by using the specified contract name, type identity, import and contract metadata, cardinality, recomposition policy, and creation policy.","nodes":[{"pos":[0,192],"content":"Creates an import definition for the specified member by using the specified contract name, type identity, import and contract metadata, cardinality, recomposition policy, and creation policy.","nodes":[{"content":"Creates an import definition for the specified member by using the specified contract name, type identity, import and contract metadata, cardinality, recomposition policy, and creation policy.","pos":[0,192]}]}],"pos":[28947,29140],"yaml":true},{"content":"The member to import into.","nodes":[{"pos":[0,26],"content":"The member to import into.","nodes":[{"content":"The member to import into.","pos":[0,26]}]}],"pos":[29987,30014],"yaml":true},{"content":"The contract name to use for the import.","nodes":[{"pos":[0,40],"content":"The contract name to use for the import.","nodes":[{"content":"The contract name to use for the import.","pos":[0,40]}]}],"pos":[30082,30123],"yaml":true},{"content":"The required type identity for the import.","nodes":[{"pos":[0,42],"content":"The required type identity for the import.","nodes":[{"content":"The required type identity for the import.","pos":[0,42]}]}],"pos":[30199,30242],"yaml":true},{"content":"The required metadata for the import.","nodes":[{"pos":[0,37],"content":"The required metadata for the import.","nodes":[{"content":"The required metadata for the import.","pos":[0,37]}]}],"pos":[30407,30445],"yaml":true},{"content":"The cardinality of the import.","nodes":[{"pos":[0,30],"content":"The cardinality of the import.","nodes":[{"content":"The cardinality of the import.","pos":[0,30]}]}],"pos":[30561,30592],"yaml":true},{"content":"`true` to indicate that the import is recomposable; otherwise, `false`.","nodes":[{"pos":[0,71],"content":"<ph id=\"ph1\">`true`</ph> to indicate that the import is recomposable; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` to indicate that the import is recomposable; otherwise, `false`."}],"pos":[30663,30737],"yaml":true},{"content":"One of the enumeration values that specifies the import's creation policy.","nodes":[{"pos":[0,74],"content":"One of the enumeration values that specifies the import's creation policy.","nodes":[{"content":"One of the enumeration values that specifies the import's creation policy.","pos":[0,74]}]}],"pos":[30850,30925],"yaml":true},{"content":"The contract metadata.","nodes":[{"pos":[0,22],"content":"The contract metadata.","nodes":[{"content":"The contract metadata.","pos":[0,22]}]}],"pos":[31043,31066],"yaml":true},{"content":"`true` to indicate that the import represents an <xref href=\"System.ComponentModel.Composition.ExportFactory`1\"></xref>; otherwise, `false`.","nodes":[{"pos":[0,140],"content":"<ph id=\"ph1\">`true`</ph> to indicate that the import represents an <ph id=\"ph2\">&lt;xref href=\"System.ComponentModel.Composition.ExportFactory`1\"&gt;&lt;/xref&gt;</ph>; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` to indicate that the import represents an <xref href=\"System.ComponentModel.Composition.ExportFactory`1\"></xref>; otherwise, `false`."}],"pos":[31138,31281],"yaml":true},{"content":"The object to import into.","nodes":[{"pos":[0,26],"content":"The object to import into.","nodes":[{"content":"The object to import into.","pos":[0,26]}]}],"pos":[31394,31421],"yaml":true},{"content":"An import definition created from the specified parameters.","nodes":[{"pos":[0,59],"content":"An import definition created from the specified parameters.","nodes":[{"content":"An import definition created from the specified parameters.","pos":[0,59]}]}],"pos":[31539,31599],"yaml":true},{"content":"Creates an import definition for the specified member by using the specified contract name, type identity, import and contract metadata, cardinality, recomposition policy, and creation policy.","nodes":[{"pos":[0,192],"content":"Creates an import definition for the specified member by using the specified contract name, type identity, import and contract metadata, cardinality, recomposition policy, and creation policy.","nodes":[{"content":"Creates an import definition for the specified member by using the specified contract name, type identity, import and contract metadata, cardinality, recomposition policy, and creation policy.","pos":[0,192]}]}],"pos":[35089,35282],"yaml":true},{"content":"The member to import into.","nodes":[{"pos":[0,26],"content":"The member to import into.","nodes":[{"content":"The member to import into.","pos":[0,26]}]}],"pos":[36150,36177],"yaml":true},{"content":"The contract name to use for the import.","nodes":[{"pos":[0,40],"content":"The contract name to use for the import.","nodes":[{"content":"The contract name to use for the import.","pos":[0,40]}]}],"pos":[36245,36286],"yaml":true},{"content":"The required type identity for the import.","nodes":[{"pos":[0,42],"content":"The required type identity for the import.","nodes":[{"content":"The required type identity for the import.","pos":[0,42]}]}],"pos":[36362,36405],"yaml":true},{"content":"The required metadata for the import.","nodes":[{"pos":[0,37],"content":"The required metadata for the import.","nodes":[{"content":"The required metadata for the import.","pos":[0,37]}]}],"pos":[36570,36608],"yaml":true},{"content":"The cardinality of the import.","nodes":[{"pos":[0,30],"content":"The cardinality of the import.","nodes":[{"content":"The cardinality of the import.","pos":[0,30]}]}],"pos":[36724,36755],"yaml":true},{"content":"`true` to indicate that the import is recomposable; otherwise, `false`.","nodes":[{"pos":[0,71],"content":"<ph id=\"ph1\">`true`</ph> to indicate that the import is recomposable; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` to indicate that the import is recomposable; otherwise, `false`."}],"pos":[36826,36900],"yaml":true},{"content":"`true` to indicate that the import is a prerequisite; otherwise, `false`.","nodes":[{"pos":[0,73],"content":"<ph id=\"ph1\">`true`</ph> to indicate that the import is a prerequisite; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` to indicate that the import is a prerequisite; otherwise, `false`."}],"pos":[36971,37047],"yaml":true},{"content":"One of the enumeration values that specifies the import's creation policy.","nodes":[{"pos":[0,74],"content":"One of the enumeration values that specifies the import's creation policy.","nodes":[{"content":"One of the enumeration values that specifies the import's creation policy.","pos":[0,74]}]}],"pos":[37160,37235],"yaml":true},{"content":"The contract metadata.","nodes":[{"pos":[0,22],"content":"The contract metadata.","nodes":[{"content":"The contract metadata.","pos":[0,22]}]}],"pos":[37353,37376],"yaml":true},{"content":"`true` to indicate that the import represents an <xref href=\"System.ComponentModel.Composition.ExportFactory`1\"></xref>; otherwise, `false`.","nodes":[{"pos":[0,140],"content":"<ph id=\"ph1\">`true`</ph> to indicate that the import represents an <ph id=\"ph2\">&lt;xref href=\"System.ComponentModel.Composition.ExportFactory`1\"&gt;&lt;/xref&gt;</ph>; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` to indicate that the import represents an <xref href=\"System.ComponentModel.Composition.ExportFactory`1\"></xref>; otherwise, `false`."}],"pos":[37448,37591],"yaml":true},{"content":"The object to import into.","nodes":[{"pos":[0,26],"content":"The object to import into.","nodes":[{"content":"The object to import into.","pos":[0,26]}]}],"pos":[37704,37731],"yaml":true},{"content":"An import definition created from the specified parameters.","nodes":[{"pos":[0,59],"content":"An import definition created from the specified parameters.","nodes":[{"content":"An import definition created from the specified parameters.","pos":[0,59]}]}],"pos":[37849,37909],"yaml":true},{"content":"Creates a part definition with the specified part type, imports, exports, metadata, and origin.","nodes":[{"pos":[0,95],"content":"Creates a part definition with the specified part type, imports, exports, metadata, and origin.","nodes":[{"content":"Creates a part definition with the specified part type, imports, exports, metadata, and origin.","pos":[0,95]}]}],"pos":[41066,41162],"yaml":true},{"content":"The type of the part.","nodes":[{"pos":[0,21],"content":"The type of the part.","nodes":[{"content":"The type of the part.","pos":[0,21]}]}],"pos":[41806,41828],"yaml":true},{"content":"`true` if the part requires disposal; otherwise, `false`.","nodes":[{"pos":[0,57],"content":"<ph id=\"ph1\">`true`</ph> if the part requires disposal; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the part requires disposal; otherwise, `false`."}],"pos":[41903,41963],"yaml":true},{"content":"A collection of the part's imports.","nodes":[{"pos":[0,35],"content":"A collection of the part's imports.","nodes":[{"content":"A collection of the part's imports.","pos":[0,35]}]}],"pos":[42127,42163],"yaml":true},{"content":"A collection of the part's exports.","nodes":[{"pos":[0,35],"content":"A collection of the part's exports.","nodes":[{"content":"A collection of the part's exports.","pos":[0,35]}]}],"pos":[42327,42363],"yaml":true},{"content":"The part's metadata.","nodes":[{"pos":[0,20],"content":"The part's metadata.","nodes":[{"content":"The part's metadata.","pos":[0,20]}]}],"pos":[42494,42515],"yaml":true},{"content":"The part's origin.","nodes":[{"pos":[0,18],"content":"The part's origin.","nodes":[{"content":"The part's origin.","pos":[0,18]}]}],"pos":[42628,42647],"yaml":true},{"content":"A part definition created from the specified parameters.","nodes":[{"pos":[0,56],"content":"A part definition created from the specified parameters.","nodes":[{"content":"A part definition created from the specified parameters.","pos":[0,56]}]}],"pos":[42760,42817],"yaml":true},{"content":"Returns a representation of an import definition as an export factory product.","nodes":[{"pos":[0,78],"content":"Returns a representation of an import definition as an export factory product.","nodes":[{"content":"Returns a representation of an import definition as an export factory product.","pos":[0,78]}]}],"pos":[44628,44707],"yaml":true},{"content":"The import definition to represent.","nodes":[{"pos":[0,35],"content":"The import definition to represent.","nodes":[{"content":"The import definition to represent.","pos":[0,35]}]}],"pos":[45077,45113],"yaml":true},{"content":"The representation of the import definition.","nodes":[{"pos":[0,44],"content":"The representation of the import definition.","nodes":[{"content":"The representation of the import definition.","pos":[0,44]}]}],"pos":[45231,45276],"yaml":true},{"content":"Gets the exporting member from a specified export definition.","nodes":[{"pos":[0,61],"content":"Gets the exporting member from a specified export definition.","nodes":[{"content":"Gets the exporting member from a specified export definition.","pos":[0,61]}]}],"pos":[46980,47042],"yaml":true},{"content":"The export definition to examine.","nodes":[{"pos":[0,33],"content":"The export definition to examine.","nodes":[{"content":"The export definition to examine.","pos":[0,33]}]}],"pos":[47381,47415],"yaml":true},{"content":"The member specified in the export definition.","nodes":[{"pos":[0,46],"content":"The member specified in the export definition.","nodes":[{"content":"The member specified in the export definition.","pos":[0,46]}]}],"pos":[47523,47570],"yaml":true},{"content":"<code>exportDefinition</code> is `null`.","nodes":[{"pos":[0,40],"content":"<ph id=\"ph1\">&lt;code&gt;exportDefinition&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>exportDefinition</code> is `null`."}],"pos":[47784,47825],"yaml":true},{"content":"Gets the importing member from a specified import definition.","nodes":[{"pos":[0,61],"content":"Gets the importing member from a specified import definition.","nodes":[{"content":"Gets the importing member from a specified import definition.","pos":[0,61]}]}],"pos":[49385,49447],"yaml":true},{"content":"The import definition to examine.","nodes":[{"pos":[0,33],"content":"The import definition to examine.","nodes":[{"content":"The import definition to examine.","pos":[0,33]}]}],"pos":[49786,49820],"yaml":true},{"content":"The member specified in the import definition.","nodes":[{"pos":[0,46],"content":"The member specified in the import definition.","nodes":[{"content":"The member specified in the import definition.","pos":[0,46]}]}],"pos":[49928,49975],"yaml":true},{"content":"<code>importDefinition</code> is `null`.","nodes":[{"pos":[0,40],"content":"<ph id=\"ph1\">&lt;code&gt;importDefinition&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>importDefinition</code> is `null`."}],"pos":[50189,50230],"yaml":true},{"content":"Gets the importing parameter from a specified import definition.","nodes":[{"pos":[0,64],"content":"Gets the importing parameter from a specified import definition.","nodes":[{"content":"Gets the importing parameter from a specified import definition.","pos":[0,64]}]}],"pos":[51808,51873],"yaml":true},{"content":"The import definition to examine.","nodes":[{"pos":[0,33],"content":"The import definition to examine.","nodes":[{"content":"The import definition to examine.","pos":[0,33]}]}],"pos":[52188,52222],"yaml":true},{"content":"The parameter specified in the import definition.","nodes":[{"pos":[0,49],"content":"The parameter specified in the import definition.","nodes":[{"content":"The parameter specified in the import definition.","pos":[0,49]}]}],"pos":[52310,52360],"yaml":true},{"content":"<code>importDefinition</code> is `null`.","nodes":[{"pos":[0,40],"content":"<ph id=\"ph1\">&lt;code&gt;importDefinition&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>importDefinition</code> is `null`."}],"pos":[52577,52618],"yaml":true},{"content":"Gets the type of a part from a specified part definition.","nodes":[{"pos":[0,57],"content":"Gets the type of a part from a specified part definition.","nodes":[{"content":"Gets the type of a part from a specified part definition.","pos":[0,57]}]}],"pos":[54184,54242],"yaml":true},{"content":"The part definition to examine.","nodes":[{"pos":[0,31],"content":"The part definition to examine.","nodes":[{"content":"The part definition to examine.","pos":[0,31]}]}],"pos":[54532,54564],"yaml":true},{"content":"The type of the defined part.","nodes":[{"pos":[0,29],"content":"The type of the defined part.","nodes":[{"content":"The type of the defined part.","pos":[0,29]}]}],"pos":[54632,54662],"yaml":true},{"content":"<code>partDefinition</code> is `null`.","nodes":[{"pos":[0,38],"content":"<ph id=\"ph1\">&lt;code&gt;partDefinition&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>partDefinition</code> is `null`."}],"pos":[54869,54908],"yaml":true},{"content":"Determines whether the specified part requires disposal.","nodes":[{"pos":[0,56],"content":"Determines whether the specified part requires disposal.","nodes":[{"content":"Determines whether the specified part requires disposal.","pos":[0,56]}]}],"pos":[56516,56573],"yaml":true},{"content":"The part to examine.","nodes":[{"pos":[0,20],"content":"The part to examine.","nodes":[{"content":"The part to examine.","pos":[0,20]}]}],"pos":[56864,56885],"yaml":true},{"content":"`true` if the part requires disposal; otherwise, `false`.","nodes":[{"pos":[0,57],"content":"<ph id=\"ph1\">`true`</ph> if the part requires disposal; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the part requires disposal; otherwise, `false`."}],"pos":[56943,57003],"yaml":true},{"content":"<code>partDefinition</code> is `null`.","nodes":[{"pos":[0,38],"content":"<ph id=\"ph1\">&lt;code&gt;partDefinition&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>partDefinition</code> is `null`."}],"pos":[57217,57256],"yaml":true},{"content":"Indicates whether a specified import definition represents an export factory (<xref href=\"System.ComponentModel.Composition.ExportFactory`1\"></xref> or <xref href=\"System.ComponentModel.Composition.ExportFactory`2\"></xref> object).","nodes":[{"pos":[0,231],"content":"Indicates whether a specified import definition represents an export factory (<ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.Composition.ExportFactory`1\"&gt;&lt;/xref&gt;</ph> or <ph id=\"ph2\">&lt;xref href=\"System.ComponentModel.Composition.ExportFactory`2\"&gt;&lt;/xref&gt;</ph> object).","source":"Indicates whether a specified import definition represents an export factory (<xref href=\"System.ComponentModel.Composition.ExportFactory`1\"></xref> or <xref href=\"System.ComponentModel.Composition.ExportFactory`2\"></xref> object)."}],"pos":[58894,59126],"yaml":true},{"content":"The import definition to check.","nodes":[{"pos":[0,31],"content":"The import definition to check.","nodes":[{"content":"The import definition to check.","pos":[0,31]}]}],"pos":[59418,59450],"yaml":true},{"content":"`true` if the specified import definition represents an export factory; otherwise, `false`.","nodes":[{"pos":[0,91],"content":"<ph id=\"ph1\">`true`</ph> if the specified import definition represents an export factory; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the specified import definition represents an export factory; otherwise, `false`."}],"pos":[59508,59602],"yaml":true},{"content":"Determines whether an import definition represents a member or a parameter.","nodes":[{"pos":[0,75],"content":"Determines whether an import definition represents a member or a parameter.","nodes":[{"content":"Determines whether an import definition represents a member or a parameter.","pos":[0,75]}]}],"pos":[61310,61386],"yaml":true},{"content":"The import definition to examine.","nodes":[{"pos":[0,33],"content":"The import definition to examine.","nodes":[{"content":"The import definition to examine.","pos":[0,33]}]}],"pos":[61667,61701],"yaml":true},{"content":"`true` if the import definition represents a parameter; otherwise, `false`.","nodes":[{"pos":[0,75],"content":"<ph id=\"ph1\">`true`</ph> if the import definition represents a parameter; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the import definition represents a parameter; otherwise, `false`."}],"pos":[61759,61837],"yaml":true},{"content":"<code>importDefinition</code> is `null`.","nodes":[{"pos":[0,40],"content":"<ph id=\"ph1\">&lt;code&gt;importDefinition&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>importDefinition</code> is `null`."}],"pos":[62053,62094],"yaml":true},{"content":"Indicates whether a generic part definition can be specialized with the provided parameters.","nodes":[{"pos":[0,92],"content":"Indicates whether a generic part definition can be specialized with the provided parameters.","nodes":[{"content":"Indicates whether a generic part definition can be specialized with the provided parameters.","pos":[0,92]}]}],"pos":[64266,64359],"yaml":true},{"content":"The part definition.","nodes":[{"pos":[0,20],"content":"The part definition.","nodes":[{"content":"The part definition.","pos":[0,20]}]}],"pos":[64814,64835],"yaml":true},{"content":"A collection of types to specify the generic parameters.","nodes":[{"pos":[0,56],"content":"A collection of types to specify the generic parameters.","nodes":[{"content":"A collection of types to specify the generic parameters.","pos":[0,56]}]}],"pos":[64946,65003],"yaml":true},{"content":"When this method returns, contains the specialized part definition. This parameter is treated as uninitialized.","nodes":[{"pos":[0,111],"content":"When this method returns, contains the specialized part definition. This parameter is treated as uninitialized.","nodes":[{"content":"When this method returns, contains the specialized part definition. This parameter is treated as uninitialized.","pos":[0,111],"nodes":[{"content":"When this method returns, contains the specialized part definition.","pos":[0,67]},{"content":"This parameter is treated as uninitialized.","pos":[68,111]}]}]}],"pos":[65129,65241],"yaml":true},{"content":"`true` if the specialization succeeds; otherwise, `false`.","nodes":[{"pos":[0,58],"content":"<ph id=\"ph1\">`true`</ph> if the specialization succeeds; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the specialization succeeds; otherwise, `false`."}],"pos":[65299,65360],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices\n  commentId: T:System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices\n  id: ReflectionModelServices\n  children:\n  - System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices.CreateExportDefinition(System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo,System.String,System.Lazy{System.Collections.Generic.IDictionary{System.String,System.Object}},System.ComponentModel.Composition.Primitives.ICompositionElement)\n  - System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices.CreateImportDefinition(System.Lazy{System.Reflection.ParameterInfo},System.String,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Type}},System.ComponentModel.Composition.Primitives.ImportCardinality,System.ComponentModel.Composition.CreationPolicy,System.ComponentModel.Composition.Primitives.ICompositionElement)\n  - System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices.CreateImportDefinition(System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo,System.String,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Type}},System.ComponentModel.Composition.Primitives.ImportCardinality,System.Boolean,System.ComponentModel.Composition.CreationPolicy,System.ComponentModel.Composition.Primitives.ICompositionElement)\n  - System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices.CreateImportDefinition(System.Lazy{System.Reflection.ParameterInfo},System.String,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Type}},System.ComponentModel.Composition.Primitives.ImportCardinality,System.ComponentModel.Composition.CreationPolicy,System.Collections.Generic.IDictionary{System.String,System.Object},System.Boolean,System.ComponentModel.Composition.Primitives.ICompositionElement)\n  - System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices.CreateImportDefinition(System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo,System.String,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Type}},System.ComponentModel.Composition.Primitives.ImportCardinality,System.Boolean,System.ComponentModel.Composition.CreationPolicy,System.Collections.Generic.IDictionary{System.String,System.Object},System.Boolean,System.ComponentModel.Composition.Primitives.ICompositionElement)\n  - System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices.CreateImportDefinition(System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo,System.String,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Type}},System.ComponentModel.Composition.Primitives.ImportCardinality,System.Boolean,System.Boolean,System.ComponentModel.Composition.CreationPolicy,System.Collections.Generic.IDictionary{System.String,System.Object},System.Boolean,System.ComponentModel.Composition.Primitives.ICompositionElement)\n  - System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices.CreatePartDefinition(System.Lazy{System.Type},System.Boolean,System.Lazy{System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.Primitives.ImportDefinition}},System.Lazy{System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.Primitives.ExportDefinition}},System.Lazy{System.Collections.Generic.IDictionary{System.String,System.Object}},System.ComponentModel.Composition.Primitives.ICompositionElement)\n  - System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices.GetExportFactoryProductImportDefinition(System.ComponentModel.Composition.Primitives.ImportDefinition)\n  - System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices.GetExportingMember(System.ComponentModel.Composition.Primitives.ExportDefinition)\n  - System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices.GetImportingMember(System.ComponentModel.Composition.Primitives.ImportDefinition)\n  - System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices.GetImportingParameter(System.ComponentModel.Composition.Primitives.ImportDefinition)\n  - System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices.GetPartType(System.ComponentModel.Composition.Primitives.ComposablePartDefinition)\n  - System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices.IsDisposalRequired(System.ComponentModel.Composition.Primitives.ComposablePartDefinition)\n  - System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices.IsExportFactoryImportDefinition(System.ComponentModel.Composition.Primitives.ImportDefinition)\n  - System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices.IsImportingParameter(System.ComponentModel.Composition.Primitives.ImportDefinition)\n  - System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices.TryMakeGenericPartDefinition(System.ComponentModel.Composition.Primitives.ComposablePartDefinition,System.Collections.Generic.IEnumerable{System.Type},System.ComponentModel.Composition.Primitives.ComposablePartDefinition@)\n  langs:\n  - csharp\n  name: ReflectionModelServices\n  nameWithType: ReflectionModelServices\n  fullName: System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices\n  type: Class\n  assemblies:\n  - System.ComponentModel.Composition\n  namespace: System.ComponentModel.Composition.ReflectionModel\n  summary: Provides extension methods to create and retrieve reflection-based parts.\n  syntax:\n    content: public static class ReflectionModelServices\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Composition.ReflectionModel/ReflectionModelServices.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices.CreateExportDefinition(System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo,System.String,System.Lazy{System.Collections.Generic.IDictionary{System.String,System.Object}},System.ComponentModel.Composition.Primitives.ICompositionElement)\n  commentId: M:System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices.CreateExportDefinition(System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo,System.String,System.Lazy{System.Collections.Generic.IDictionary{System.String,System.Object}},System.ComponentModel.Composition.Primitives.ICompositionElement)\n  id: CreateExportDefinition(System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo,System.String,System.Lazy{System.Collections.Generic.IDictionary{System.String,System.Object}},System.ComponentModel.Composition.Primitives.ICompositionElement)\n  parent: System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices\n  langs:\n  - csharp\n  name: CreateExportDefinition(LazyMemberInfo, String, Lazy<IDictionary<String,Object>>, ICompositionElement)\n  nameWithType: ReflectionModelServices.CreateExportDefinition(LazyMemberInfo, String, Lazy<IDictionary<String,Object>>, ICompositionElement)\n  fullName: ReflectionModelServices.CreateExportDefinition(LazyMemberInfo, String, Lazy<IDictionary<String,Object>>, ICompositionElement)\n  type: Method\n  assemblies:\n  - System.ComponentModel.Composition\n  namespace: System.ComponentModel.Composition.ReflectionModel\n  summary: Creates an export definition from the specified member, with the specified contract name, metadata, and origin.\n  syntax:\n    content: public static System.ComponentModel.Composition.Primitives.ExportDefinition CreateExportDefinition (System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo exportingMember, string contractName, Lazy<System.Collections.Generic.IDictionary<string,object>> metadata, System.ComponentModel.Composition.Primitives.ICompositionElement origin);\n    parameters:\n    - id: exportingMember\n      type: System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo\n      description: The member to export.\n    - id: contractName\n      type: System.String\n      description: The contract name to use for the export.\n    - id: metadata\n      type: System.Lazy{System.Collections.Generic.IDictionary{System.String,System.Object}}\n      description: The metadata for the export.\n    - id: origin\n      type: System.ComponentModel.Composition.Primitives.ICompositionElement\n      description: The object that the export originates from.\n    return:\n      type: System.ComponentModel.Composition.Primitives.ExportDefinition\n      description: An export definition created from the specified parameters.\n  overload: System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices.CreateExportDefinition*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Composition.ReflectionModel/ReflectionModelServices.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices.CreateImportDefinition(System.Lazy{System.Reflection.ParameterInfo},System.String,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Type}},System.ComponentModel.Composition.Primitives.ImportCardinality,System.ComponentModel.Composition.CreationPolicy,System.ComponentModel.Composition.Primitives.ICompositionElement)\n  commentId: M:System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices.CreateImportDefinition(System.Lazy{System.Reflection.ParameterInfo},System.String,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Type}},System.ComponentModel.Composition.Primitives.ImportCardinality,System.ComponentModel.Composition.CreationPolicy,System.ComponentModel.Composition.Primitives.ICompositionElement)\n  id: CreateImportDefinition(System.Lazy{System.Reflection.ParameterInfo},System.String,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Type}},System.ComponentModel.Composition.Primitives.ImportCardinality,System.ComponentModel.Composition.CreationPolicy,System.ComponentModel.Composition.Primitives.ICompositionElement)\n  parent: System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices\n  langs:\n  - csharp\n  name: CreateImportDefinition(Lazy<ParameterInfo>, String, String, IEnumerable<KeyValuePair<String,Type>>, ImportCardinality, CreationPolicy, ICompositionElement)\n  nameWithType: ReflectionModelServices.CreateImportDefinition(Lazy<ParameterInfo>, String, String, IEnumerable<KeyValuePair<String,Type>>, ImportCardinality, CreationPolicy, ICompositionElement)\n  fullName: ReflectionModelServices.CreateImportDefinition(Lazy<ParameterInfo>, String, String, IEnumerable<KeyValuePair<String,Type>>, ImportCardinality, CreationPolicy, ICompositionElement)\n  type: Method\n  assemblies:\n  - System.ComponentModel.Composition\n  namespace: System.ComponentModel.Composition.ReflectionModel\n  summary: Creates an import definition for the specified parameter by using the specified contract name, type identity, import metadata, cardinality, and creation policy.\n  syntax:\n    content: public static System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition CreateImportDefinition (Lazy<System.Reflection.ParameterInfo> parameter, string contractName, string requiredTypeIdentity, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string,Type>> requiredMetadata, System.ComponentModel.Composition.Primitives.ImportCardinality cardinality, System.ComponentModel.Composition.CreationPolicy requiredCreationPolicy, System.ComponentModel.Composition.Primitives.ICompositionElement origin);\n    parameters:\n    - id: parameter\n      type: System.Lazy{System.Reflection.ParameterInfo}\n      description: The parameter to import.\n    - id: contractName\n      type: System.String\n      description: The contract name to use for the import.\n    - id: requiredTypeIdentity\n      type: System.String\n      description: The required type identity for the import.\n    - id: requiredMetadata\n      type: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Type}}\n      description: The required metadata for the import.\n    - id: cardinality\n      type: System.ComponentModel.Composition.Primitives.ImportCardinality\n      description: The cardinality of the import.\n    - id: requiredCreationPolicy\n      type: System.ComponentModel.Composition.CreationPolicy\n      description: One of the enumeration values that specifies the import's creation policy.\n    - id: origin\n      type: System.ComponentModel.Composition.Primitives.ICompositionElement\n      description: The object to import into.\n    return:\n      type: System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition\n      description: An import definition created from the specified parameters.\n  overload: System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices.CreateImportDefinition*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Composition.ReflectionModel/ReflectionModelServices.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices.CreateImportDefinition(System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo,System.String,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Type}},System.ComponentModel.Composition.Primitives.ImportCardinality,System.Boolean,System.ComponentModel.Composition.CreationPolicy,System.ComponentModel.Composition.Primitives.ICompositionElement)\n  commentId: M:System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices.CreateImportDefinition(System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo,System.String,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Type}},System.ComponentModel.Composition.Primitives.ImportCardinality,System.Boolean,System.ComponentModel.Composition.CreationPolicy,System.ComponentModel.Composition.Primitives.ICompositionElement)\n  id: CreateImportDefinition(System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo,System.String,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Type}},System.ComponentModel.Composition.Primitives.ImportCardinality,System.Boolean,System.ComponentModel.Composition.CreationPolicy,System.ComponentModel.Composition.Primitives.ICompositionElement)\n  parent: System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices\n  langs:\n  - csharp\n  name: CreateImportDefinition(LazyMemberInfo, String, String, IEnumerable<KeyValuePair<String,Type>>, ImportCardinality, Boolean, CreationPolicy, ICompositionElement)\n  nameWithType: ReflectionModelServices.CreateImportDefinition(LazyMemberInfo, String, String, IEnumerable<KeyValuePair<String,Type>>, ImportCardinality, Boolean, CreationPolicy, ICompositionElement)\n  fullName: ReflectionModelServices.CreateImportDefinition(LazyMemberInfo, String, String, IEnumerable<KeyValuePair<String,Type>>, ImportCardinality, Boolean, CreationPolicy, ICompositionElement)\n  type: Method\n  assemblies:\n  - System.ComponentModel.Composition\n  namespace: System.ComponentModel.Composition.ReflectionModel\n  summary: Creates an import definition for the specified member by using the specified contract name, type identity, import metadata, cardinality, recomposition policy, and creation policy.\n  syntax:\n    content: public static System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition CreateImportDefinition (System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo importingMember, string contractName, string requiredTypeIdentity, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string,Type>> requiredMetadata, System.ComponentModel.Composition.Primitives.ImportCardinality cardinality, bool isRecomposable, System.ComponentModel.Composition.CreationPolicy requiredCreationPolicy, System.ComponentModel.Composition.Primitives.ICompositionElement origin);\n    parameters:\n    - id: importingMember\n      type: System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo\n      description: The member to import into.\n    - id: contractName\n      type: System.String\n      description: The contract name to use for the import.\n    - id: requiredTypeIdentity\n      type: System.String\n      description: The required type identity for the import.\n    - id: requiredMetadata\n      type: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Type}}\n      description: The required metadata for the import.\n    - id: cardinality\n      type: System.ComponentModel.Composition.Primitives.ImportCardinality\n      description: The cardinality of the import.\n    - id: isRecomposable\n      type: System.Boolean\n      description: '`true` to indicate that the import is recomposable; otherwise, `false`.'\n    - id: requiredCreationPolicy\n      type: System.ComponentModel.Composition.CreationPolicy\n      description: One of the enumeration values that specifies the import's creation policy.\n    - id: origin\n      type: System.ComponentModel.Composition.Primitives.ICompositionElement\n      description: The object to import into.\n    return:\n      type: System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition\n      description: An import definition created from the specified parameters.\n  overload: System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices.CreateImportDefinition*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Composition.ReflectionModel/ReflectionModelServices.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices.CreateImportDefinition(System.Lazy{System.Reflection.ParameterInfo},System.String,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Type}},System.ComponentModel.Composition.Primitives.ImportCardinality,System.ComponentModel.Composition.CreationPolicy,System.Collections.Generic.IDictionary{System.String,System.Object},System.Boolean,System.ComponentModel.Composition.Primitives.ICompositionElement)\n  commentId: M:System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices.CreateImportDefinition(System.Lazy{System.Reflection.ParameterInfo},System.String,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Type}},System.ComponentModel.Composition.Primitives.ImportCardinality,System.ComponentModel.Composition.CreationPolicy,System.Collections.Generic.IDictionary{System.String,System.Object},System.Boolean,System.ComponentModel.Composition.Primitives.ICompositionElement)\n  id: CreateImportDefinition(System.Lazy{System.Reflection.ParameterInfo},System.String,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Type}},System.ComponentModel.Composition.Primitives.ImportCardinality,System.ComponentModel.Composition.CreationPolicy,System.Collections.Generic.IDictionary{System.String,System.Object},System.Boolean,System.ComponentModel.Composition.Primitives.ICompositionElement)\n  parent: System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices\n  langs:\n  - csharp\n  name: CreateImportDefinition(Lazy<ParameterInfo>, String, String, IEnumerable<KeyValuePair<String,Type>>, ImportCardinality, CreationPolicy, IDictionary<String,Object>, Boolean, ICompositionElement)\n  nameWithType: ReflectionModelServices.CreateImportDefinition(Lazy<ParameterInfo>, String, String, IEnumerable<KeyValuePair<String,Type>>, ImportCardinality, CreationPolicy, IDictionary<String,Object>, Boolean, ICompositionElement)\n  fullName: ReflectionModelServices.CreateImportDefinition(Lazy<ParameterInfo>, String, String, IEnumerable<KeyValuePair<String,Type>>, ImportCardinality, CreationPolicy, IDictionary<String,Object>, Boolean, ICompositionElement)\n  type: Method\n  assemblies:\n  - System.ComponentModel.Composition\n  namespace: System.ComponentModel.Composition.ReflectionModel\n  summary: Creates an import definition for the specified parameter by using the specified contract name, type identity, import and contract metadata, cardinality, and creation policy.\n  syntax:\n    content: public static System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition CreateImportDefinition (Lazy<System.Reflection.ParameterInfo> parameter, string contractName, string requiredTypeIdentity, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string,Type>> requiredMetadata, System.ComponentModel.Composition.Primitives.ImportCardinality cardinality, System.ComponentModel.Composition.CreationPolicy requiredCreationPolicy, System.Collections.Generic.IDictionary<string,object> metadata, bool isExportFactory, System.ComponentModel.Composition.Primitives.ICompositionElement origin);\n    parameters:\n    - id: parameter\n      type: System.Lazy{System.Reflection.ParameterInfo}\n      description: The parameter to import.\n    - id: contractName\n      type: System.String\n      description: The contract name to use for the import.\n    - id: requiredTypeIdentity\n      type: System.String\n      description: The required type identity for the import.\n    - id: requiredMetadata\n      type: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Type}}\n      description: The required metadata for the import.\n    - id: cardinality\n      type: System.ComponentModel.Composition.Primitives.ImportCardinality\n      description: The cardinality of the import.\n    - id: requiredCreationPolicy\n      type: System.ComponentModel.Composition.CreationPolicy\n      description: One of the enumeration values that specifies the import's creation policy.\n    - id: metadata\n      type: System.Collections.Generic.IDictionary{System.String,System.Object}\n      description: The contract metadata\n    - id: isExportFactory\n      type: System.Boolean\n      description: '`true` to indicate that the import represents an <xref href=\"System.ComponentModel.Composition.ExportFactory`1\"></xref>; otherwise, `false`.'\n    - id: origin\n      type: System.ComponentModel.Composition.Primitives.ICompositionElement\n      description: The object to import into.\n    return:\n      type: System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition\n      description: An import definition created from the specified parameters.\n  overload: System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices.CreateImportDefinition*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Composition.ReflectionModel/ReflectionModelServices.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices.CreateImportDefinition(System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo,System.String,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Type}},System.ComponentModel.Composition.Primitives.ImportCardinality,System.Boolean,System.ComponentModel.Composition.CreationPolicy,System.Collections.Generic.IDictionary{System.String,System.Object},System.Boolean,System.ComponentModel.Composition.Primitives.ICompositionElement)\n  commentId: M:System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices.CreateImportDefinition(System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo,System.String,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Type}},System.ComponentModel.Composition.Primitives.ImportCardinality,System.Boolean,System.ComponentModel.Composition.CreationPolicy,System.Collections.Generic.IDictionary{System.String,System.Object},System.Boolean,System.ComponentModel.Composition.Primitives.ICompositionElement)\n  id: CreateImportDefinition(System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo,System.String,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Type}},System.ComponentModel.Composition.Primitives.ImportCardinality,System.Boolean,System.ComponentModel.Composition.CreationPolicy,System.Collections.Generic.IDictionary{System.String,System.Object},System.Boolean,System.ComponentModel.Composition.Primitives.ICompositionElement)\n  parent: System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices\n  langs:\n  - csharp\n  name: CreateImportDefinition(LazyMemberInfo, String, String, IEnumerable<KeyValuePair<String,Type>>, ImportCardinality, Boolean, CreationPolicy, IDictionary<String,Object>, Boolean, ICompositionElement)\n  nameWithType: ReflectionModelServices.CreateImportDefinition(LazyMemberInfo, String, String, IEnumerable<KeyValuePair<String,Type>>, ImportCardinality, Boolean, CreationPolicy, IDictionary<String,Object>, Boolean, ICompositionElement)\n  fullName: ReflectionModelServices.CreateImportDefinition(LazyMemberInfo, String, String, IEnumerable<KeyValuePair<String,Type>>, ImportCardinality, Boolean, CreationPolicy, IDictionary<String,Object>, Boolean, ICompositionElement)\n  type: Method\n  assemblies:\n  - System.ComponentModel.Composition\n  namespace: System.ComponentModel.Composition.ReflectionModel\n  summary: Creates an import definition for the specified member by using the specified contract name, type identity, import and contract metadata, cardinality, recomposition policy, and creation policy.\n  syntax:\n    content: public static System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition CreateImportDefinition (System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo importingMember, string contractName, string requiredTypeIdentity, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string,Type>> requiredMetadata, System.ComponentModel.Composition.Primitives.ImportCardinality cardinality, bool isRecomposable, System.ComponentModel.Composition.CreationPolicy requiredCreationPolicy, System.Collections.Generic.IDictionary<string,object> metadata, bool isExportFactory, System.ComponentModel.Composition.Primitives.ICompositionElement origin);\n    parameters:\n    - id: importingMember\n      type: System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo\n      description: The member to import into.\n    - id: contractName\n      type: System.String\n      description: The contract name to use for the import.\n    - id: requiredTypeIdentity\n      type: System.String\n      description: The required type identity for the import.\n    - id: requiredMetadata\n      type: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Type}}\n      description: The required metadata for the import.\n    - id: cardinality\n      type: System.ComponentModel.Composition.Primitives.ImportCardinality\n      description: The cardinality of the import.\n    - id: isRecomposable\n      type: System.Boolean\n      description: '`true` to indicate that the import is recomposable; otherwise, `false`.'\n    - id: requiredCreationPolicy\n      type: System.ComponentModel.Composition.CreationPolicy\n      description: One of the enumeration values that specifies the import's creation policy.\n    - id: metadata\n      type: System.Collections.Generic.IDictionary{System.String,System.Object}\n      description: The contract metadata.\n    - id: isExportFactory\n      type: System.Boolean\n      description: '`true` to indicate that the import represents an <xref href=\"System.ComponentModel.Composition.ExportFactory`1\"></xref>; otherwise, `false`.'\n    - id: origin\n      type: System.ComponentModel.Composition.Primitives.ICompositionElement\n      description: The object to import into.\n    return:\n      type: System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition\n      description: An import definition created from the specified parameters.\n  overload: System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices.CreateImportDefinition*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Composition.ReflectionModel/ReflectionModelServices.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices.CreateImportDefinition(System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo,System.String,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Type}},System.ComponentModel.Composition.Primitives.ImportCardinality,System.Boolean,System.Boolean,System.ComponentModel.Composition.CreationPolicy,System.Collections.Generic.IDictionary{System.String,System.Object},System.Boolean,System.ComponentModel.Composition.Primitives.ICompositionElement)\n  commentId: M:System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices.CreateImportDefinition(System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo,System.String,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Type}},System.ComponentModel.Composition.Primitives.ImportCardinality,System.Boolean,System.Boolean,System.ComponentModel.Composition.CreationPolicy,System.Collections.Generic.IDictionary{System.String,System.Object},System.Boolean,System.ComponentModel.Composition.Primitives.ICompositionElement)\n  id: CreateImportDefinition(System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo,System.String,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Type}},System.ComponentModel.Composition.Primitives.ImportCardinality,System.Boolean,System.Boolean,System.ComponentModel.Composition.CreationPolicy,System.Collections.Generic.IDictionary{System.String,System.Object},System.Boolean,System.ComponentModel.Composition.Primitives.ICompositionElement)\n  parent: System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices\n  langs:\n  - csharp\n  name: CreateImportDefinition(LazyMemberInfo, String, String, IEnumerable<KeyValuePair<String,Type>>, ImportCardinality, Boolean, Boolean, CreationPolicy, IDictionary<String,Object>, Boolean, ICompositionElement)\n  nameWithType: ReflectionModelServices.CreateImportDefinition(LazyMemberInfo, String, String, IEnumerable<KeyValuePair<String,Type>>, ImportCardinality, Boolean, Boolean, CreationPolicy, IDictionary<String,Object>, Boolean, ICompositionElement)\n  fullName: ReflectionModelServices.CreateImportDefinition(LazyMemberInfo, String, String, IEnumerable<KeyValuePair<String,Type>>, ImportCardinality, Boolean, Boolean, CreationPolicy, IDictionary<String,Object>, Boolean, ICompositionElement)\n  type: Method\n  assemblies:\n  - System.ComponentModel.Composition\n  namespace: System.ComponentModel.Composition.ReflectionModel\n  summary: Creates an import definition for the specified member by using the specified contract name, type identity, import and contract metadata, cardinality, recomposition policy, and creation policy.\n  syntax:\n    content: public static System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition CreateImportDefinition (System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo importingMember, string contractName, string requiredTypeIdentity, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string,Type>> requiredMetadata, System.ComponentModel.Composition.Primitives.ImportCardinality cardinality, bool isRecomposable, bool isPreRequisite, System.ComponentModel.Composition.CreationPolicy requiredCreationPolicy, System.Collections.Generic.IDictionary<string,object> metadata, bool isExportFactory, System.ComponentModel.Composition.Primitives.ICompositionElement origin);\n    parameters:\n    - id: importingMember\n      type: System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo\n      description: The member to import into.\n    - id: contractName\n      type: System.String\n      description: The contract name to use for the import.\n    - id: requiredTypeIdentity\n      type: System.String\n      description: The required type identity for the import.\n    - id: requiredMetadata\n      type: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Type}}\n      description: The required metadata for the import.\n    - id: cardinality\n      type: System.ComponentModel.Composition.Primitives.ImportCardinality\n      description: The cardinality of the import.\n    - id: isRecomposable\n      type: System.Boolean\n      description: '`true` to indicate that the import is recomposable; otherwise, `false`.'\n    - id: isPreRequisite\n      type: System.Boolean\n      description: '`true` to indicate that the import is a prerequisite; otherwise, `false`.'\n    - id: requiredCreationPolicy\n      type: System.ComponentModel.Composition.CreationPolicy\n      description: One of the enumeration values that specifies the import's creation policy.\n    - id: metadata\n      type: System.Collections.Generic.IDictionary{System.String,System.Object}\n      description: The contract metadata.\n    - id: isExportFactory\n      type: System.Boolean\n      description: '`true` to indicate that the import represents an <xref href=\"System.ComponentModel.Composition.ExportFactory`1\"></xref>; otherwise, `false`.'\n    - id: origin\n      type: System.ComponentModel.Composition.Primitives.ICompositionElement\n      description: The object to import into.\n    return:\n      type: System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition\n      description: An import definition created from the specified parameters.\n  overload: System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices.CreateImportDefinition*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Composition.ReflectionModel/ReflectionModelServices.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices.CreatePartDefinition(System.Lazy{System.Type},System.Boolean,System.Lazy{System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.Primitives.ImportDefinition}},System.Lazy{System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.Primitives.ExportDefinition}},System.Lazy{System.Collections.Generic.IDictionary{System.String,System.Object}},System.ComponentModel.Composition.Primitives.ICompositionElement)\n  commentId: M:System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices.CreatePartDefinition(System.Lazy{System.Type},System.Boolean,System.Lazy{System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.Primitives.ImportDefinition}},System.Lazy{System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.Primitives.ExportDefinition}},System.Lazy{System.Collections.Generic.IDictionary{System.String,System.Object}},System.ComponentModel.Composition.Primitives.ICompositionElement)\n  id: CreatePartDefinition(System.Lazy{System.Type},System.Boolean,System.Lazy{System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.Primitives.ImportDefinition}},System.Lazy{System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.Primitives.ExportDefinition}},System.Lazy{System.Collections.Generic.IDictionary{System.String,System.Object}},System.ComponentModel.Composition.Primitives.ICompositionElement)\n  parent: System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices\n  langs:\n  - csharp\n  name: CreatePartDefinition(Lazy<Type>, Boolean, Lazy<IEnumerable<ImportDefinition>>, Lazy<IEnumerable<ExportDefinition>>, Lazy<IDictionary<String,Object>>, ICompositionElement)\n  nameWithType: ReflectionModelServices.CreatePartDefinition(Lazy<Type>, Boolean, Lazy<IEnumerable<ImportDefinition>>, Lazy<IEnumerable<ExportDefinition>>, Lazy<IDictionary<String,Object>>, ICompositionElement)\n  fullName: ReflectionModelServices.CreatePartDefinition(Lazy<Type>, Boolean, Lazy<IEnumerable<ImportDefinition>>, Lazy<IEnumerable<ExportDefinition>>, Lazy<IDictionary<String,Object>>, ICompositionElement)\n  type: Method\n  assemblies:\n  - System.ComponentModel.Composition\n  namespace: System.ComponentModel.Composition.ReflectionModel\n  summary: Creates a part definition with the specified part type, imports, exports, metadata, and origin.\n  syntax:\n    content: public static System.ComponentModel.Composition.Primitives.ComposablePartDefinition CreatePartDefinition (Lazy<Type> partType, bool isDisposalRequired, Lazy<System.Collections.Generic.IEnumerable<System.ComponentModel.Composition.Primitives.ImportDefinition>> imports, Lazy<System.Collections.Generic.IEnumerable<System.ComponentModel.Composition.Primitives.ExportDefinition>> exports, Lazy<System.Collections.Generic.IDictionary<string,object>> metadata, System.ComponentModel.Composition.Primitives.ICompositionElement origin);\n    parameters:\n    - id: partType\n      type: System.Lazy{System.Type}\n      description: The type of the part.\n    - id: isDisposalRequired\n      type: System.Boolean\n      description: '`true` if the part requires disposal; otherwise, `false`.'\n    - id: imports\n      type: System.Lazy{System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.Primitives.ImportDefinition}}\n      description: A collection of the part's imports.\n    - id: exports\n      type: System.Lazy{System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.Primitives.ExportDefinition}}\n      description: A collection of the part's exports.\n    - id: metadata\n      type: System.Lazy{System.Collections.Generic.IDictionary{System.String,System.Object}}\n      description: The part's metadata.\n    - id: origin\n      type: System.ComponentModel.Composition.Primitives.ICompositionElement\n      description: The part's origin.\n    return:\n      type: System.ComponentModel.Composition.Primitives.ComposablePartDefinition\n      description: A part definition created from the specified parameters.\n  overload: System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices.CreatePartDefinition*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Composition.ReflectionModel/ReflectionModelServices.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices.GetExportFactoryProductImportDefinition(System.ComponentModel.Composition.Primitives.ImportDefinition)\n  commentId: M:System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices.GetExportFactoryProductImportDefinition(System.ComponentModel.Composition.Primitives.ImportDefinition)\n  id: GetExportFactoryProductImportDefinition(System.ComponentModel.Composition.Primitives.ImportDefinition)\n  parent: System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices\n  langs:\n  - csharp\n  name: GetExportFactoryProductImportDefinition(ImportDefinition)\n  nameWithType: ReflectionModelServices.GetExportFactoryProductImportDefinition(ImportDefinition)\n  fullName: ReflectionModelServices.GetExportFactoryProductImportDefinition(ImportDefinition)\n  type: Method\n  assemblies:\n  - System.ComponentModel.Composition\n  namespace: System.ComponentModel.Composition.ReflectionModel\n  summary: Returns a representation of an import definition as an export factory product.\n  syntax:\n    content: public static System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition GetExportFactoryProductImportDefinition (System.ComponentModel.Composition.Primitives.ImportDefinition importDefinition);\n    parameters:\n    - id: importDefinition\n      type: System.ComponentModel.Composition.Primitives.ImportDefinition\n      description: The import definition to represent.\n    return:\n      type: System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition\n      description: The representation of the import definition.\n  overload: System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices.GetExportFactoryProductImportDefinition*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Composition.ReflectionModel/ReflectionModelServices.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices.GetExportingMember(System.ComponentModel.Composition.Primitives.ExportDefinition)\n  commentId: M:System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices.GetExportingMember(System.ComponentModel.Composition.Primitives.ExportDefinition)\n  id: GetExportingMember(System.ComponentModel.Composition.Primitives.ExportDefinition)\n  parent: System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices\n  langs:\n  - csharp\n  name: GetExportingMember(ExportDefinition)\n  nameWithType: ReflectionModelServices.GetExportingMember(ExportDefinition)\n  fullName: ReflectionModelServices.GetExportingMember(ExportDefinition)\n  type: Method\n  assemblies:\n  - System.ComponentModel.Composition\n  namespace: System.ComponentModel.Composition.ReflectionModel\n  summary: Gets the exporting member from a specified export definition.\n  syntax:\n    content: public static System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo GetExportingMember (System.ComponentModel.Composition.Primitives.ExportDefinition exportDefinition);\n    parameters:\n    - id: exportDefinition\n      type: System.ComponentModel.Composition.Primitives.ExportDefinition\n      description: The export definition to examine.\n    return:\n      type: System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo\n      description: The member specified in the export definition.\n  overload: System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices.GetExportingMember*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>exportDefinition</code> is `null`.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Composition.ReflectionModel/ReflectionModelServices.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices.GetImportingMember(System.ComponentModel.Composition.Primitives.ImportDefinition)\n  commentId: M:System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices.GetImportingMember(System.ComponentModel.Composition.Primitives.ImportDefinition)\n  id: GetImportingMember(System.ComponentModel.Composition.Primitives.ImportDefinition)\n  parent: System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices\n  langs:\n  - csharp\n  name: GetImportingMember(ImportDefinition)\n  nameWithType: ReflectionModelServices.GetImportingMember(ImportDefinition)\n  fullName: ReflectionModelServices.GetImportingMember(ImportDefinition)\n  type: Method\n  assemblies:\n  - System.ComponentModel.Composition\n  namespace: System.ComponentModel.Composition.ReflectionModel\n  summary: Gets the importing member from a specified import definition.\n  syntax:\n    content: public static System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo GetImportingMember (System.ComponentModel.Composition.Primitives.ImportDefinition importDefinition);\n    parameters:\n    - id: importDefinition\n      type: System.ComponentModel.Composition.Primitives.ImportDefinition\n      description: The import definition to examine.\n    return:\n      type: System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo\n      description: The member specified in the import definition.\n  overload: System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices.GetImportingMember*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>importDefinition</code> is `null`.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Composition.ReflectionModel/ReflectionModelServices.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices.GetImportingParameter(System.ComponentModel.Composition.Primitives.ImportDefinition)\n  commentId: M:System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices.GetImportingParameter(System.ComponentModel.Composition.Primitives.ImportDefinition)\n  id: GetImportingParameter(System.ComponentModel.Composition.Primitives.ImportDefinition)\n  parent: System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices\n  langs:\n  - csharp\n  name: GetImportingParameter(ImportDefinition)\n  nameWithType: ReflectionModelServices.GetImportingParameter(ImportDefinition)\n  fullName: ReflectionModelServices.GetImportingParameter(ImportDefinition)\n  type: Method\n  assemblies:\n  - System.ComponentModel.Composition\n  namespace: System.ComponentModel.Composition.ReflectionModel\n  summary: Gets the importing parameter from a specified import definition.\n  syntax:\n    content: public static Lazy<System.Reflection.ParameterInfo> GetImportingParameter (System.ComponentModel.Composition.Primitives.ImportDefinition importDefinition);\n    parameters:\n    - id: importDefinition\n      type: System.ComponentModel.Composition.Primitives.ImportDefinition\n      description: The import definition to examine.\n    return:\n      type: System.Lazy{System.Reflection.ParameterInfo}\n      description: The parameter specified in the import definition.\n  overload: System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices.GetImportingParameter*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>importDefinition</code> is `null`.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Composition.ReflectionModel/ReflectionModelServices.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices.GetPartType(System.ComponentModel.Composition.Primitives.ComposablePartDefinition)\n  commentId: M:System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices.GetPartType(System.ComponentModel.Composition.Primitives.ComposablePartDefinition)\n  id: GetPartType(System.ComponentModel.Composition.Primitives.ComposablePartDefinition)\n  parent: System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices\n  langs:\n  - csharp\n  name: GetPartType(ComposablePartDefinition)\n  nameWithType: ReflectionModelServices.GetPartType(ComposablePartDefinition)\n  fullName: ReflectionModelServices.GetPartType(ComposablePartDefinition)\n  type: Method\n  assemblies:\n  - System.ComponentModel.Composition\n  namespace: System.ComponentModel.Composition.ReflectionModel\n  summary: Gets the type of a part from a specified part definition.\n  syntax:\n    content: public static Lazy<Type> GetPartType (System.ComponentModel.Composition.Primitives.ComposablePartDefinition partDefinition);\n    parameters:\n    - id: partDefinition\n      type: System.ComponentModel.Composition.Primitives.ComposablePartDefinition\n      description: The part definition to examine.\n    return:\n      type: System.Lazy{System.Type}\n      description: The type of the defined part.\n  overload: System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices.GetPartType*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>partDefinition</code> is `null`.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Composition.ReflectionModel/ReflectionModelServices.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices.IsDisposalRequired(System.ComponentModel.Composition.Primitives.ComposablePartDefinition)\n  commentId: M:System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices.IsDisposalRequired(System.ComponentModel.Composition.Primitives.ComposablePartDefinition)\n  id: IsDisposalRequired(System.ComponentModel.Composition.Primitives.ComposablePartDefinition)\n  parent: System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices\n  langs:\n  - csharp\n  name: IsDisposalRequired(ComposablePartDefinition)\n  nameWithType: ReflectionModelServices.IsDisposalRequired(ComposablePartDefinition)\n  fullName: ReflectionModelServices.IsDisposalRequired(ComposablePartDefinition)\n  type: Method\n  assemblies:\n  - System.ComponentModel.Composition\n  namespace: System.ComponentModel.Composition.ReflectionModel\n  summary: Determines whether the specified part requires disposal.\n  syntax:\n    content: public static bool IsDisposalRequired (System.ComponentModel.Composition.Primitives.ComposablePartDefinition partDefinition);\n    parameters:\n    - id: partDefinition\n      type: System.ComponentModel.Composition.Primitives.ComposablePartDefinition\n      description: The part to examine.\n    return:\n      type: System.Boolean\n      description: '`true` if the part requires disposal; otherwise, `false`.'\n  overload: System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices.IsDisposalRequired*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>partDefinition</code> is `null`.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Composition.ReflectionModel/ReflectionModelServices.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices.IsExportFactoryImportDefinition(System.ComponentModel.Composition.Primitives.ImportDefinition)\n  commentId: M:System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices.IsExportFactoryImportDefinition(System.ComponentModel.Composition.Primitives.ImportDefinition)\n  id: IsExportFactoryImportDefinition(System.ComponentModel.Composition.Primitives.ImportDefinition)\n  parent: System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices\n  langs:\n  - csharp\n  name: IsExportFactoryImportDefinition(ImportDefinition)\n  nameWithType: ReflectionModelServices.IsExportFactoryImportDefinition(ImportDefinition)\n  fullName: ReflectionModelServices.IsExportFactoryImportDefinition(ImportDefinition)\n  type: Method\n  assemblies:\n  - System.ComponentModel.Composition\n  namespace: System.ComponentModel.Composition.ReflectionModel\n  summary: Indicates whether a specified import definition represents an export factory (<xref href=\"System.ComponentModel.Composition.ExportFactory`1\"></xref> or <xref href=\"System.ComponentModel.Composition.ExportFactory`2\"></xref> object).\n  syntax:\n    content: public static bool IsExportFactoryImportDefinition (System.ComponentModel.Composition.Primitives.ImportDefinition importDefinition);\n    parameters:\n    - id: importDefinition\n      type: System.ComponentModel.Composition.Primitives.ImportDefinition\n      description: The import definition to check.\n    return:\n      type: System.Boolean\n      description: '`true` if the specified import definition represents an export factory; otherwise, `false`.'\n  overload: System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices.IsExportFactoryImportDefinition*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Composition.ReflectionModel/ReflectionModelServices.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices.IsImportingParameter(System.ComponentModel.Composition.Primitives.ImportDefinition)\n  commentId: M:System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices.IsImportingParameter(System.ComponentModel.Composition.Primitives.ImportDefinition)\n  id: IsImportingParameter(System.ComponentModel.Composition.Primitives.ImportDefinition)\n  parent: System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices\n  langs:\n  - csharp\n  name: IsImportingParameter(ImportDefinition)\n  nameWithType: ReflectionModelServices.IsImportingParameter(ImportDefinition)\n  fullName: ReflectionModelServices.IsImportingParameter(ImportDefinition)\n  type: Method\n  assemblies:\n  - System.ComponentModel.Composition\n  namespace: System.ComponentModel.Composition.ReflectionModel\n  summary: Determines whether an import definition represents a member or a parameter.\n  syntax:\n    content: public static bool IsImportingParameter (System.ComponentModel.Composition.Primitives.ImportDefinition importDefinition);\n    parameters:\n    - id: importDefinition\n      type: System.ComponentModel.Composition.Primitives.ImportDefinition\n      description: The import definition to examine.\n    return:\n      type: System.Boolean\n      description: '`true` if the import definition represents a parameter; otherwise, `false`.'\n  overload: System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices.IsImportingParameter*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>importDefinition</code> is `null`.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Composition.ReflectionModel/ReflectionModelServices.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices.TryMakeGenericPartDefinition(System.ComponentModel.Composition.Primitives.ComposablePartDefinition,System.Collections.Generic.IEnumerable{System.Type},System.ComponentModel.Composition.Primitives.ComposablePartDefinition@)\n  commentId: M:System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices.TryMakeGenericPartDefinition(System.ComponentModel.Composition.Primitives.ComposablePartDefinition,System.Collections.Generic.IEnumerable{System.Type},System.ComponentModel.Composition.Primitives.ComposablePartDefinition@)\n  id: TryMakeGenericPartDefinition(System.ComponentModel.Composition.Primitives.ComposablePartDefinition,System.Collections.Generic.IEnumerable{System.Type},System.ComponentModel.Composition.Primitives.ComposablePartDefinition@)\n  parent: System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices\n  langs:\n  - csharp\n  name: TryMakeGenericPartDefinition(ComposablePartDefinition, IEnumerable<Type>, ComposablePartDefinition)\n  nameWithType: ReflectionModelServices.TryMakeGenericPartDefinition(ComposablePartDefinition, IEnumerable<Type>, ComposablePartDefinition)\n  fullName: ReflectionModelServices.TryMakeGenericPartDefinition(ComposablePartDefinition, IEnumerable<Type>, ComposablePartDefinition)\n  type: Method\n  assemblies:\n  - System.ComponentModel.Composition\n  namespace: System.ComponentModel.Composition.ReflectionModel\n  summary: Indicates whether a generic part definition can be specialized with the provided parameters.\n  syntax:\n    content: public static bool TryMakeGenericPartDefinition (System.ComponentModel.Composition.Primitives.ComposablePartDefinition partDefinition, System.Collections.Generic.IEnumerable<Type> genericParameters, out System.ComponentModel.Composition.Primitives.ComposablePartDefinition specialization);\n    parameters:\n    - id: partDefinition\n      type: System.ComponentModel.Composition.Primitives.ComposablePartDefinition\n      description: The part definition.\n    - id: genericParameters\n      type: System.Collections.Generic.IEnumerable{System.Type}\n      description: A collection of types to specify the generic parameters.\n    - id: specialization\n      type: System.ComponentModel.Composition.Primitives.ComposablePartDefinition\n      description: When this method returns, contains the specialized part definition. This parameter is treated as uninitialized.\n    return:\n      type: System.Boolean\n      description: '`true` if the specialization succeeds; otherwise, `false`.'\n  overload: System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices.TryMakeGenericPartDefinition*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Composition.ReflectionModel/ReflectionModelServices.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\nreferences:\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.ArgumentException\n  parent: System\n  isExternal: false\n  name: ArgumentException\n  nameWithType: ArgumentException\n  fullName: System.ArgumentException\n- uid: System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices.CreateExportDefinition(System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo,System.String,System.Lazy{System.Collections.Generic.IDictionary{System.String,System.Object}},System.ComponentModel.Composition.Primitives.ICompositionElement)\n  parent: System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices\n  isExternal: false\n  name: CreateExportDefinition(LazyMemberInfo, String, Lazy<IDictionary<String,Object>>, ICompositionElement)\n  nameWithType: ReflectionModelServices.CreateExportDefinition(LazyMemberInfo, String, Lazy<IDictionary<String,Object>>, ICompositionElement)\n  fullName: ReflectionModelServices.CreateExportDefinition(LazyMemberInfo, String, Lazy<IDictionary<String,Object>>, ICompositionElement)\n- uid: System.ComponentModel.Composition.Primitives.ExportDefinition\n  parent: System.ComponentModel.Composition.Primitives\n  isExternal: false\n  name: ExportDefinition\n  nameWithType: ExportDefinition\n  fullName: System.ComponentModel.Composition.Primitives.ExportDefinition\n- uid: System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo\n  parent: System.ComponentModel.Composition.ReflectionModel\n  isExternal: false\n  name: LazyMemberInfo\n  nameWithType: LazyMemberInfo\n  fullName: System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Lazy`1\n  name: Lazy<T>\n  nameWithType: Lazy<T>\n  fullName: System.Lazy<T>\n- uid: System.Collections.Generic.IDictionary`2\n  name: IDictionary<TKey,TValue>\n  nameWithType: IDictionary<TKey,TValue>\n  fullName: System.Collections.Generic.IDictionary<TKey,TValue>\n- uid: System.Lazy{System.Collections.Generic.IDictionary{System.String,System.Object}}\n  parent: System\n  isExternal: false\n  name: Lazy<IDictionary<String,Object>>\n  nameWithType: Lazy<IDictionary<String,Object>>\n  fullName: System.Lazy<System.Collections.Generic.IDictionary<System.String,System.Object>>\n  spec.csharp:\n  - uid: System.Lazy`1\n    name: Lazy\n    nameWithType: Lazy\n    fullName: System.Lazy\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Collections.Generic.IDictionary`2\n    name: IDictionary\n    nameWithType: IDictionary\n    fullName: System.Collections.Generic.IDictionary\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.String\n    name: String\n    nameWithType: String\n    fullName: System.String\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: System.Object\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.ComponentModel.Composition.Primitives.ICompositionElement\n  parent: System.ComponentModel.Composition.Primitives\n  isExternal: false\n  name: ICompositionElement\n  nameWithType: ICompositionElement\n  fullName: System.ComponentModel.Composition.Primitives.ICompositionElement\n- uid: System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices.CreateImportDefinition(System.Lazy{System.Reflection.ParameterInfo},System.String,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Type}},System.ComponentModel.Composition.Primitives.ImportCardinality,System.ComponentModel.Composition.CreationPolicy,System.ComponentModel.Composition.Primitives.ICompositionElement)\n  parent: System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices\n  isExternal: false\n  name: CreateImportDefinition(Lazy<ParameterInfo>, String, String, IEnumerable<KeyValuePair<String,Type>>, ImportCardinality, CreationPolicy, ICompositionElement)\n  nameWithType: ReflectionModelServices.CreateImportDefinition(Lazy<ParameterInfo>, String, String, IEnumerable<KeyValuePair<String,Type>>, ImportCardinality, CreationPolicy, ICompositionElement)\n  fullName: ReflectionModelServices.CreateImportDefinition(Lazy<ParameterInfo>, String, String, IEnumerable<KeyValuePair<String,Type>>, ImportCardinality, CreationPolicy, ICompositionElement)\n- uid: System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition\n  parent: System.ComponentModel.Composition.Primitives\n  isExternal: false\n  name: ContractBasedImportDefinition\n  nameWithType: ContractBasedImportDefinition\n  fullName: System.ComponentModel.Composition.Primitives.ContractBasedImportDefinition\n- uid: System.Reflection.ParameterInfo\n  name: ParameterInfo\n  nameWithType: ParameterInfo\n  fullName: System.Reflection.ParameterInfo\n- uid: System.Lazy{System.Reflection.ParameterInfo}\n  parent: System\n  isExternal: false\n  name: Lazy<ParameterInfo>\n  nameWithType: Lazy<ParameterInfo>\n  fullName: System.Lazy<System.Reflection.ParameterInfo>\n  spec.csharp:\n  - uid: System.Lazy`1\n    name: Lazy\n    nameWithType: Lazy\n    fullName: System.Lazy\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Reflection.ParameterInfo\n    name: ParameterInfo\n    nameWithType: ParameterInfo\n    fullName: System.Reflection.ParameterInfo\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Collections.Generic.IEnumerable`1\n  name: IEnumerable<T>\n  nameWithType: IEnumerable<T>\n  fullName: System.Collections.Generic.IEnumerable<T>\n- uid: System.Collections.Generic.KeyValuePair`2\n  name: KeyValuePair<TKey,TValue>\n  nameWithType: KeyValuePair<TKey,TValue>\n  fullName: System.Collections.Generic.KeyValuePair<TKey,TValue>\n- uid: System.Type\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Type}}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IEnumerable<KeyValuePair<String,Type>>\n  nameWithType: IEnumerable<KeyValuePair<String,Type>>\n  fullName: System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.String,System.Type>>\n  spec.csharp:\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    nameWithType: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Collections.Generic.KeyValuePair`2\n    name: KeyValuePair\n    nameWithType: KeyValuePair\n    fullName: System.Collections.Generic.KeyValuePair\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.String\n    name: String\n    nameWithType: String\n    fullName: System.String\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: System.Type\n    name: Type\n    nameWithType: Type\n    fullName: System.Type\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.ComponentModel.Composition.Primitives.ImportCardinality\n  parent: System.ComponentModel.Composition.Primitives\n  isExternal: false\n  name: ImportCardinality\n  nameWithType: ImportCardinality\n  fullName: System.ComponentModel.Composition.Primitives.ImportCardinality\n- uid: System.ComponentModel.Composition.CreationPolicy\n  parent: System.ComponentModel.Composition\n  isExternal: false\n  name: CreationPolicy\n  nameWithType: CreationPolicy\n  fullName: System.ComponentModel.Composition.CreationPolicy\n- uid: System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices.CreateImportDefinition(System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo,System.String,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Type}},System.ComponentModel.Composition.Primitives.ImportCardinality,System.Boolean,System.ComponentModel.Composition.CreationPolicy,System.ComponentModel.Composition.Primitives.ICompositionElement)\n  parent: System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices\n  isExternal: false\n  name: CreateImportDefinition(LazyMemberInfo, String, String, IEnumerable<KeyValuePair<String,Type>>, ImportCardinality, Boolean, CreationPolicy, ICompositionElement)\n  nameWithType: ReflectionModelServices.CreateImportDefinition(LazyMemberInfo, String, String, IEnumerable<KeyValuePair<String,Type>>, ImportCardinality, Boolean, CreationPolicy, ICompositionElement)\n  fullName: ReflectionModelServices.CreateImportDefinition(LazyMemberInfo, String, String, IEnumerable<KeyValuePair<String,Type>>, ImportCardinality, Boolean, CreationPolicy, ICompositionElement)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices.CreateImportDefinition(System.Lazy{System.Reflection.ParameterInfo},System.String,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Type}},System.ComponentModel.Composition.Primitives.ImportCardinality,System.ComponentModel.Composition.CreationPolicy,System.Collections.Generic.IDictionary{System.String,System.Object},System.Boolean,System.ComponentModel.Composition.Primitives.ICompositionElement)\n  parent: System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices\n  isExternal: false\n  name: CreateImportDefinition(Lazy<ParameterInfo>, String, String, IEnumerable<KeyValuePair<String,Type>>, ImportCardinality, CreationPolicy, IDictionary<String,Object>, Boolean, ICompositionElement)\n  nameWithType: ReflectionModelServices.CreateImportDefinition(Lazy<ParameterInfo>, String, String, IEnumerable<KeyValuePair<String,Type>>, ImportCardinality, CreationPolicy, IDictionary<String,Object>, Boolean, ICompositionElement)\n  fullName: ReflectionModelServices.CreateImportDefinition(Lazy<ParameterInfo>, String, String, IEnumerable<KeyValuePair<String,Type>>, ImportCardinality, CreationPolicy, IDictionary<String,Object>, Boolean, ICompositionElement)\n- uid: System.Collections.Generic.IDictionary{System.String,System.Object}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IDictionary<String,Object>\n  nameWithType: IDictionary<String,Object>\n  fullName: System.Collections.Generic.IDictionary<System.String,System.Object>\n  spec.csharp:\n  - uid: System.Collections.Generic.IDictionary`2\n    name: IDictionary\n    nameWithType: IDictionary\n    fullName: System.Collections.Generic.IDictionary\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.String\n    name: String\n    nameWithType: String\n    fullName: System.String\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: System.Object\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices.CreateImportDefinition(System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo,System.String,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Type}},System.ComponentModel.Composition.Primitives.ImportCardinality,System.Boolean,System.ComponentModel.Composition.CreationPolicy,System.Collections.Generic.IDictionary{System.String,System.Object},System.Boolean,System.ComponentModel.Composition.Primitives.ICompositionElement)\n  parent: System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices\n  isExternal: false\n  name: CreateImportDefinition(LazyMemberInfo, String, String, IEnumerable<KeyValuePair<String,Type>>, ImportCardinality, Boolean, CreationPolicy, IDictionary<String,Object>, Boolean, ICompositionElement)\n  nameWithType: ReflectionModelServices.CreateImportDefinition(LazyMemberInfo, String, String, IEnumerable<KeyValuePair<String,Type>>, ImportCardinality, Boolean, CreationPolicy, IDictionary<String,Object>, Boolean, ICompositionElement)\n  fullName: ReflectionModelServices.CreateImportDefinition(LazyMemberInfo, String, String, IEnumerable<KeyValuePair<String,Type>>, ImportCardinality, Boolean, CreationPolicy, IDictionary<String,Object>, Boolean, ICompositionElement)\n- uid: System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices.CreateImportDefinition(System.ComponentModel.Composition.ReflectionModel.LazyMemberInfo,System.String,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.Type}},System.ComponentModel.Composition.Primitives.ImportCardinality,System.Boolean,System.Boolean,System.ComponentModel.Composition.CreationPolicy,System.Collections.Generic.IDictionary{System.String,System.Object},System.Boolean,System.ComponentModel.Composition.Primitives.ICompositionElement)\n  parent: System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices\n  isExternal: false\n  name: CreateImportDefinition(LazyMemberInfo, String, String, IEnumerable<KeyValuePair<String,Type>>, ImportCardinality, Boolean, Boolean, CreationPolicy, IDictionary<String,Object>, Boolean, ICompositionElement)\n  nameWithType: ReflectionModelServices.CreateImportDefinition(LazyMemberInfo, String, String, IEnumerable<KeyValuePair<String,Type>>, ImportCardinality, Boolean, Boolean, CreationPolicy, IDictionary<String,Object>, Boolean, ICompositionElement)\n  fullName: ReflectionModelServices.CreateImportDefinition(LazyMemberInfo, String, String, IEnumerable<KeyValuePair<String,Type>>, ImportCardinality, Boolean, Boolean, CreationPolicy, IDictionary<String,Object>, Boolean, ICompositionElement)\n- uid: System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices.CreatePartDefinition(System.Lazy{System.Type},System.Boolean,System.Lazy{System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.Primitives.ImportDefinition}},System.Lazy{System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.Primitives.ExportDefinition}},System.Lazy{System.Collections.Generic.IDictionary{System.String,System.Object}},System.ComponentModel.Composition.Primitives.ICompositionElement)\n  parent: System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices\n  isExternal: false\n  name: CreatePartDefinition(Lazy<Type>, Boolean, Lazy<IEnumerable<ImportDefinition>>, Lazy<IEnumerable<ExportDefinition>>, Lazy<IDictionary<String,Object>>, ICompositionElement)\n  nameWithType: ReflectionModelServices.CreatePartDefinition(Lazy<Type>, Boolean, Lazy<IEnumerable<ImportDefinition>>, Lazy<IEnumerable<ExportDefinition>>, Lazy<IDictionary<String,Object>>, ICompositionElement)\n  fullName: ReflectionModelServices.CreatePartDefinition(Lazy<Type>, Boolean, Lazy<IEnumerable<ImportDefinition>>, Lazy<IEnumerable<ExportDefinition>>, Lazy<IDictionary<String,Object>>, ICompositionElement)\n- uid: System.ComponentModel.Composition.Primitives.ComposablePartDefinition\n  parent: System.ComponentModel.Composition.Primitives\n  isExternal: false\n  name: ComposablePartDefinition\n  nameWithType: ComposablePartDefinition\n  fullName: System.ComponentModel.Composition.Primitives.ComposablePartDefinition\n- uid: System.Lazy{System.Type}\n  parent: System\n  isExternal: false\n  name: Lazy<Type>\n  nameWithType: Lazy<Type>\n  fullName: System.Lazy<System.Type>\n  spec.csharp:\n  - uid: System.Lazy`1\n    name: Lazy\n    nameWithType: Lazy\n    fullName: System.Lazy\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Type\n    name: Type\n    nameWithType: Type\n    fullName: System.Type\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.ComponentModel.Composition.Primitives.ImportDefinition\n  name: ImportDefinition\n  nameWithType: ImportDefinition\n  fullName: System.ComponentModel.Composition.Primitives.ImportDefinition\n- uid: System.Lazy{System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.Primitives.ImportDefinition}}\n  parent: System\n  isExternal: false\n  name: Lazy<IEnumerable<ImportDefinition>>\n  nameWithType: Lazy<IEnumerable<ImportDefinition>>\n  fullName: System.Lazy<System.Collections.Generic.IEnumerable<System.ComponentModel.Composition.Primitives.ImportDefinition>>\n  spec.csharp:\n  - uid: System.Lazy`1\n    name: Lazy\n    nameWithType: Lazy\n    fullName: System.Lazy\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    nameWithType: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.ComponentModel.Composition.Primitives.ImportDefinition\n    name: ImportDefinition\n    nameWithType: ImportDefinition\n    fullName: System.ComponentModel.Composition.Primitives.ImportDefinition\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Lazy{System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.Primitives.ExportDefinition}}\n  parent: System\n  isExternal: false\n  name: Lazy<IEnumerable<ExportDefinition>>\n  nameWithType: Lazy<IEnumerable<ExportDefinition>>\n  fullName: System.Lazy<System.Collections.Generic.IEnumerable<System.ComponentModel.Composition.Primitives.ExportDefinition>>\n  spec.csharp:\n  - uid: System.Lazy`1\n    name: Lazy\n    nameWithType: Lazy\n    fullName: System.Lazy\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    nameWithType: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.ComponentModel.Composition.Primitives.ExportDefinition\n    name: ExportDefinition\n    nameWithType: ExportDefinition\n    fullName: System.ComponentModel.Composition.Primitives.ExportDefinition\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices.GetExportFactoryProductImportDefinition(System.ComponentModel.Composition.Primitives.ImportDefinition)\n  parent: System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices\n  isExternal: false\n  name: GetExportFactoryProductImportDefinition(ImportDefinition)\n  nameWithType: ReflectionModelServices.GetExportFactoryProductImportDefinition(ImportDefinition)\n  fullName: ReflectionModelServices.GetExportFactoryProductImportDefinition(ImportDefinition)\n- uid: System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices.GetExportingMember(System.ComponentModel.Composition.Primitives.ExportDefinition)\n  parent: System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices\n  isExternal: false\n  name: GetExportingMember(ExportDefinition)\n  nameWithType: ReflectionModelServices.GetExportingMember(ExportDefinition)\n  fullName: ReflectionModelServices.GetExportingMember(ExportDefinition)\n- uid: System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices.GetImportingMember(System.ComponentModel.Composition.Primitives.ImportDefinition)\n  parent: System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices\n  isExternal: false\n  name: GetImportingMember(ImportDefinition)\n  nameWithType: ReflectionModelServices.GetImportingMember(ImportDefinition)\n  fullName: ReflectionModelServices.GetImportingMember(ImportDefinition)\n- uid: System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices.GetImportingParameter(System.ComponentModel.Composition.Primitives.ImportDefinition)\n  parent: System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices\n  isExternal: false\n  name: GetImportingParameter(ImportDefinition)\n  nameWithType: ReflectionModelServices.GetImportingParameter(ImportDefinition)\n  fullName: ReflectionModelServices.GetImportingParameter(ImportDefinition)\n- uid: System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices.GetPartType(System.ComponentModel.Composition.Primitives.ComposablePartDefinition)\n  parent: System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices\n  isExternal: false\n  name: GetPartType(ComposablePartDefinition)\n  nameWithType: ReflectionModelServices.GetPartType(ComposablePartDefinition)\n  fullName: ReflectionModelServices.GetPartType(ComposablePartDefinition)\n- uid: System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices.IsDisposalRequired(System.ComponentModel.Composition.Primitives.ComposablePartDefinition)\n  parent: System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices\n  isExternal: false\n  name: IsDisposalRequired(ComposablePartDefinition)\n  nameWithType: ReflectionModelServices.IsDisposalRequired(ComposablePartDefinition)\n  fullName: ReflectionModelServices.IsDisposalRequired(ComposablePartDefinition)\n- uid: System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices.IsExportFactoryImportDefinition(System.ComponentModel.Composition.Primitives.ImportDefinition)\n  parent: System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices\n  isExternal: false\n  name: IsExportFactoryImportDefinition(ImportDefinition)\n  nameWithType: ReflectionModelServices.IsExportFactoryImportDefinition(ImportDefinition)\n  fullName: ReflectionModelServices.IsExportFactoryImportDefinition(ImportDefinition)\n- uid: System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices.IsImportingParameter(System.ComponentModel.Composition.Primitives.ImportDefinition)\n  parent: System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices\n  isExternal: false\n  name: IsImportingParameter(ImportDefinition)\n  nameWithType: ReflectionModelServices.IsImportingParameter(ImportDefinition)\n  fullName: ReflectionModelServices.IsImportingParameter(ImportDefinition)\n- uid: System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices.TryMakeGenericPartDefinition(System.ComponentModel.Composition.Primitives.ComposablePartDefinition,System.Collections.Generic.IEnumerable{System.Type},System.ComponentModel.Composition.Primitives.ComposablePartDefinition@)\n  parent: System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices\n  isExternal: false\n  name: TryMakeGenericPartDefinition(ComposablePartDefinition, IEnumerable<Type>, ComposablePartDefinition)\n  nameWithType: ReflectionModelServices.TryMakeGenericPartDefinition(ComposablePartDefinition, IEnumerable<Type>, ComposablePartDefinition)\n  fullName: ReflectionModelServices.TryMakeGenericPartDefinition(ComposablePartDefinition, IEnumerable<Type>, ComposablePartDefinition)\n- uid: System.Collections.Generic.IEnumerable{System.Type}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IEnumerable<Type>\n  nameWithType: IEnumerable<Type>\n  fullName: System.Collections.Generic.IEnumerable<System.Type>\n  spec.csharp:\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    nameWithType: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Type\n    name: Type\n    nameWithType: Type\n    fullName: System.Type\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices.CreateExportDefinition*\n  parent: System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices\n  isExternal: false\n  name: CreateExportDefinition\n  nameWithType: ReflectionModelServices.CreateExportDefinition\n  fullName: ReflectionModelServices.CreateExportDefinition\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Composition.ReflectionModel/ReflectionModelServices.xml\n- uid: System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices.CreateImportDefinition*\n  parent: System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices\n  isExternal: false\n  name: CreateImportDefinition\n  nameWithType: ReflectionModelServices.CreateImportDefinition\n  fullName: ReflectionModelServices.CreateImportDefinition\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Composition.ReflectionModel/ReflectionModelServices.xml\n- uid: System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices.CreatePartDefinition*\n  parent: System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices\n  isExternal: false\n  name: CreatePartDefinition\n  nameWithType: ReflectionModelServices.CreatePartDefinition\n  fullName: ReflectionModelServices.CreatePartDefinition\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Composition.ReflectionModel/ReflectionModelServices.xml\n- uid: System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices.GetExportFactoryProductImportDefinition*\n  parent: System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices\n  isExternal: false\n  name: GetExportFactoryProductImportDefinition\n  nameWithType: ReflectionModelServices.GetExportFactoryProductImportDefinition\n  fullName: ReflectionModelServices.GetExportFactoryProductImportDefinition\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Composition.ReflectionModel/ReflectionModelServices.xml\n- uid: System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices.GetExportingMember*\n  parent: System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices\n  isExternal: false\n  name: GetExportingMember\n  nameWithType: ReflectionModelServices.GetExportingMember\n  fullName: ReflectionModelServices.GetExportingMember\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Composition.ReflectionModel/ReflectionModelServices.xml\n- uid: System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices.GetImportingMember*\n  parent: System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices\n  isExternal: false\n  name: GetImportingMember\n  nameWithType: ReflectionModelServices.GetImportingMember\n  fullName: ReflectionModelServices.GetImportingMember\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Composition.ReflectionModel/ReflectionModelServices.xml\n- uid: System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices.GetImportingParameter*\n  parent: System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices\n  isExternal: false\n  name: GetImportingParameter\n  nameWithType: ReflectionModelServices.GetImportingParameter\n  fullName: ReflectionModelServices.GetImportingParameter\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Composition.ReflectionModel/ReflectionModelServices.xml\n- uid: System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices.GetPartType*\n  parent: System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices\n  isExternal: false\n  name: GetPartType\n  nameWithType: ReflectionModelServices.GetPartType\n  fullName: ReflectionModelServices.GetPartType\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Composition.ReflectionModel/ReflectionModelServices.xml\n- uid: System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices.IsDisposalRequired*\n  parent: System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices\n  isExternal: false\n  name: IsDisposalRequired\n  nameWithType: ReflectionModelServices.IsDisposalRequired\n  fullName: ReflectionModelServices.IsDisposalRequired\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Composition.ReflectionModel/ReflectionModelServices.xml\n- uid: System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices.IsExportFactoryImportDefinition*\n  parent: System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices\n  isExternal: false\n  name: IsExportFactoryImportDefinition\n  nameWithType: ReflectionModelServices.IsExportFactoryImportDefinition\n  fullName: ReflectionModelServices.IsExportFactoryImportDefinition\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Composition.ReflectionModel/ReflectionModelServices.xml\n- uid: System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices.IsImportingParameter*\n  parent: System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices\n  isExternal: false\n  name: IsImportingParameter\n  nameWithType: ReflectionModelServices.IsImportingParameter\n  fullName: ReflectionModelServices.IsImportingParameter\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Composition.ReflectionModel/ReflectionModelServices.xml\n- uid: System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices.TryMakeGenericPartDefinition*\n  parent: System.ComponentModel.Composition.ReflectionModel.ReflectionModelServices\n  isExternal: false\n  name: TryMakeGenericPartDefinition\n  nameWithType: ReflectionModelServices.TryMakeGenericPartDefinition\n  fullName: ReflectionModelServices.TryMakeGenericPartDefinition\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Composition.ReflectionModel/ReflectionModelServices.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n"}