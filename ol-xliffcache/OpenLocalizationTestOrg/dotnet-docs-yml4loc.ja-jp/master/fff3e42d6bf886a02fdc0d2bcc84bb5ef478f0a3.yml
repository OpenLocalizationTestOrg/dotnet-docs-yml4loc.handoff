### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.Activation.ServiceHostFactory
  commentId: T:System.ServiceModel.Activation.ServiceHostFactory
  id: ServiceHostFactory
  children:
  - System.ServiceModel.Activation.ServiceHostFactory.#ctor
  - System.ServiceModel.Activation.ServiceHostFactory.CreateServiceHost(System.String,System.Uri[])
  - System.ServiceModel.Activation.ServiceHostFactory.CreateServiceHost(System.Type,System.Uri[])
  langs:
  - csharp
  name: ServiceHostFactory
  nameWithType: ServiceHostFactory
  fullName: System.ServiceModel.Activation.ServiceHostFactory
  type: Class
  assemblies:
  - System.ServiceModel.Activation
  namespace: System.ServiceModel.Activation
  summary: Factory that provides instances of <xref href="System.ServiceModel.ServiceHost"></xref> in managed hosting environments where the host instance is created dynamically in response to incoming messages.
  remarks: "The managed hosting environments that support dynamic activation are Internet Information Services (IIS) and Windows Process Activation Service (WAS).  \n  \n If you have implemented a custom derivative of <xref:System.ServiceModel.ServiceHost>, consider also implementing a factory that derives from the <xref:System.ServiceModel.Activation.ServiceHostFactory> class.  \n  \n If you have implemented a custom derivative of <xref:System.ServiceModel.ServiceHostBase> instead, then consider also implementing a factory that derives your factory from <xref:System.ServiceModel.Activation.ServiceHostFactoryBase> directly."
  example:
  - "This examples show how to use the <xref:System.ServiceModel.Activation.ServiceHostFactory> class:  \n  \n [!code-csharp[ServiceHostFactory#0](~/samples/snippets/csharp/VS_Snippets_CFX/servicehostfactory/cs/program.cs#0)]\n [!code-vb[ServiceHostFactory#0](~/samples/snippets/visualbasic/VS_Snippets_CFX/servicehostfactory/vb/program.vb#0)]"
  syntax:
    content: 'public class ServiceHostFactory : System.ServiceModel.Activation.ServiceHostFactoryBase'
  inheritance:
  - System.Object
  - System.ServiceModel.Activation.ServiceHostFactoryBase
  derivedClasses:
  - System.Data.Services.DataServiceHostFactory
  - System.ServiceModel.Activation.WebScriptServiceHostFactory
  - System.ServiceModel.Activation.WebServiceHostFactory
  - System.Web.ApplicationServices.ApplicationServicesHostFactory
  implements: []
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  attributes: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Activation/ServiceHostFactory.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.ServiceModel.Activation.ServiceHostFactory.#ctor
  commentId: M:System.ServiceModel.Activation.ServiceHostFactory.#ctor
  id: '#ctor'
  parent: System.ServiceModel.Activation.ServiceHostFactory
  langs:
  - csharp
  name: ServiceHostFactory()
  nameWithType: ServiceHostFactory.ServiceHostFactory()
  fullName: ServiceHostFactory.ServiceHostFactory()
  type: Constructor
  assemblies:
  - System.ServiceModel.Activation
  namespace: System.ServiceModel.Activation
  summary: Initializes a new instance of the <xref href="System.ServiceModel.Activation.ServiceHostFactory"></xref> class.
  remarks: ''
  example:
  - "This examples show how to use the <xref:System.ServiceModel.Activation.ServiceHostFactory.%23ctor%2A>:  \n  \n [!code-csharp[ServiceHostFactory#1](~/samples/snippets/csharp/VS_Snippets_CFX/servicehostfactory/cs/program.cs#1)]\n [!code-vb[ServiceHostFactory#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/servicehostfactory/vb/program.vb#1)]"
  syntax:
    content: public ServiceHostFactory ();
    parameters: []
  overload: System.ServiceModel.Activation.ServiceHostFactory.#ctor*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Activation/ServiceHostFactory.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.ServiceModel.Activation.ServiceHostFactory.CreateServiceHost(System.String,System.Uri[])
  commentId: M:System.ServiceModel.Activation.ServiceHostFactory.CreateServiceHost(System.String,System.Uri[])
  id: CreateServiceHost(System.String,System.Uri[])
  parent: System.ServiceModel.Activation.ServiceHostFactory
  langs:
  - csharp
  name: CreateServiceHost(String, Uri[])
  nameWithType: ServiceHostFactory.CreateServiceHost(String, Uri[])
  fullName: ServiceHostFactory.CreateServiceHost(String, Uri[])
  type: Method
  assemblies:
  - System.ServiceModel.Activation
  namespace: System.ServiceModel.Activation
  summary: Creates a <xref href="System.ServiceModel.ServiceHost"></xref> with specific base addresses and initializes it with specified data.
  remarks: ''
  example:
  - "This example shows how to use the <xref:System.ServiceModel.Activation.ServiceHostFactory.CreateServiceHost%28System.String%2CSystem.Uri%5B%5D%29> method:  \n  \n [!code-csharp[ServiceHostFactory#3](~/samples/snippets/csharp/VS_Snippets_CFX/servicehostfactory/cs/program.cs#3)]\n [!code-vb[ServiceHostFactory#3](~/samples/snippets/visualbasic/VS_Snippets_CFX/servicehostfactory/vb/program.vb#3)]"
  syntax:
    content: public override System.ServiceModel.ServiceHostBase CreateServiceHost (string constructorString, Uri[] baseAddresses);
    parameters:
    - id: constructorString
      type: System.String
      description: The initialization data passed to the <xref href="System.ServiceModel.ServiceHostBase"></xref> instance being constructed by the factory.
    - id: baseAddresses
      type: System.Uri[]
      description: The <xref href="System.Array"></xref> of type <xref href="System.Uri"></xref> that contains the base addresses for the service hosted.
    return:
      type: System.ServiceModel.ServiceHostBase
      description: A <xref href="System.ServiceModel.ServiceHost"></xref> with specific base addresses.
  overload: System.ServiceModel.Activation.ServiceHostFactory.CreateServiceHost*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>baseAddress</code> is `null`.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: There is no hosting context provided or <code>constructorString</code> is `null` or empty.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Activation/ServiceHostFactory.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.ServiceModel.Activation.ServiceHostFactory.CreateServiceHost(System.Type,System.Uri[])
  commentId: M:System.ServiceModel.Activation.ServiceHostFactory.CreateServiceHost(System.Type,System.Uri[])
  id: CreateServiceHost(System.Type,System.Uri[])
  parent: System.ServiceModel.Activation.ServiceHostFactory
  langs:
  - csharp
  name: CreateServiceHost(Type, Uri[])
  nameWithType: ServiceHostFactory.CreateServiceHost(Type, Uri[])
  fullName: ServiceHostFactory.CreateServiceHost(Type, Uri[])
  type: Method
  assemblies:
  - System.ServiceModel.Activation
  namespace: System.ServiceModel.Activation
  summary: Creates a <xref href="System.ServiceModel.ServiceHost"></xref> for a specified type of service with a specific base address.
  remarks: ''
  example:
  - 'This example shows how to create an override implementation of the <xref:System.ServiceModel.Activation.ServiceHostFactory.CreateServiceHost%28System.Type%2CSystem.Uri%5B%5D%29> method:'
  syntax:
    content: protected virtual System.ServiceModel.ServiceHost CreateServiceHost (Type serviceType, Uri[] baseAddresses);
    parameters:
    - id: serviceType
      type: System.Type
      description: Specifies the type of service to host.
    - id: baseAddresses
      type: System.Uri[]
      description: The <xref href="System.Array"></xref> of type <xref href="System.Uri"></xref> that contains the base addresses for the service hosted.
    return:
      type: System.ServiceModel.ServiceHost
      description: A <xref href="System.ServiceModel.ServiceHost"></xref> for the type of service specified with a specific base address.
  overload: System.ServiceModel.Activation.ServiceHostFactory.CreateServiceHost*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Activation/ServiceHostFactory.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
references:
- uid: System.ServiceModel.Activation.ServiceHostFactoryBase
  parent: System.ServiceModel.Activation
  isExternal: false
  name: ServiceHostFactoryBase
  nameWithType: ServiceHostFactoryBase
  fullName: System.ServiceModel.Activation.ServiceHostFactoryBase
- uid: System.ArgumentNullException
  parent: System
  isExternal: false
  name: ArgumentNullException
  nameWithType: ArgumentNullException
  fullName: System.ArgumentNullException
- uid: System.InvalidOperationException
  parent: System
  isExternal: false
  name: InvalidOperationException
  nameWithType: InvalidOperationException
  fullName: System.InvalidOperationException
- uid: System.ServiceModel.Activation.ServiceHostFactory.#ctor
  parent: System.ServiceModel.Activation.ServiceHostFactory
  isExternal: false
  name: ServiceHostFactory()
  nameWithType: ServiceHostFactory.ServiceHostFactory()
  fullName: ServiceHostFactory.ServiceHostFactory()
- uid: System.ServiceModel.Activation.ServiceHostFactory.CreateServiceHost(System.String,System.Uri[])
  parent: System.ServiceModel.Activation.ServiceHostFactory
  isExternal: false
  name: CreateServiceHost(String, Uri[])
  nameWithType: ServiceHostFactory.CreateServiceHost(String, Uri[])
  fullName: ServiceHostFactory.CreateServiceHost(String, Uri[])
- uid: System.ServiceModel.ServiceHostBase
  parent: System.ServiceModel
  isExternal: false
  name: ServiceHostBase
  nameWithType: ServiceHostBase
  fullName: System.ServiceModel.ServiceHostBase
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Uri
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.Uri[]
  parent: System
  isExternal: false
  name: Uri[]
  nameWithType: Uri[]
  fullName: System.Uri[]
  spec.csharp:
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: System.Uri
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.ServiceModel.Activation.ServiceHostFactory.CreateServiceHost(System.Type,System.Uri[])
  parent: System.ServiceModel.Activation.ServiceHostFactory
  isExternal: false
  name: CreateServiceHost(Type, Uri[])
  nameWithType: ServiceHostFactory.CreateServiceHost(Type, Uri[])
  fullName: ServiceHostFactory.CreateServiceHost(Type, Uri[])
- uid: System.ServiceModel.ServiceHost
  parent: System.ServiceModel
  isExternal: false
  name: ServiceHost
  nameWithType: ServiceHost
  fullName: System.ServiceModel.ServiceHost
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.ServiceModel.Activation.ServiceHostFactory.#ctor*
  parent: System.ServiceModel.Activation.ServiceHostFactory
  isExternal: false
  name: ServiceHostFactory
  nameWithType: ServiceHostFactory.ServiceHostFactory
  fullName: ServiceHostFactory.ServiceHostFactory
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Activation/ServiceHostFactory.xml
- uid: System.ServiceModel.Activation.ServiceHostFactory.CreateServiceHost*
  parent: System.ServiceModel.Activation.ServiceHostFactory
  isExternal: false
  name: CreateServiceHost
  nameWithType: ServiceHostFactory.CreateServiceHost
  fullName: ServiceHostFactory.CreateServiceHost
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Activation/ServiceHostFactory.xml
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: Object.Equals(Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: Object.Equals(Object, Object)
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: false
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: Object.GetHashCode()
- uid: System.Object.GetType
  parent: System.Object
  isExternal: false
  name: GetType()
  nameWithType: Object.GetType()
  fullName: Object.GetType()
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: false
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: Object.MemberwiseClone()
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: Object.ReferenceEquals(Object, Object)
- uid: System.Object.ToString
  parent: System.Object
  isExternal: false
  name: ToString()
  nameWithType: Object.ToString()
  fullName: Object.ToString()
