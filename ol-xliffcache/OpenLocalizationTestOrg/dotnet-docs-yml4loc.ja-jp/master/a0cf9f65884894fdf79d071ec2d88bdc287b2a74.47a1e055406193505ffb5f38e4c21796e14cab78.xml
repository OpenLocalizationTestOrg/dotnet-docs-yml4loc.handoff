{"nodes":[{"content":"Represents a base class for key identifier clauses that are based upon binary data.","nodes":[{"pos":[0,83],"content":"Represents a base class for key identifier clauses that are based upon binary data.","nodes":[{"content":"Represents a base class for key identifier clauses that are based upon binary data.","pos":[0,83]}]}],"pos":[1157,1241],"yaml":true},{"content":"Typically, the <xref:System.IdentityModel.Tokens.BinaryKeyIdentifierClause> does not need to be used, other than when a custom security token service is created. When a security token service returns a security token, the issued security token contains references to attached and unattached security tokens. Attached references refer to security tokens that are contained within the security header of a SOAP message and unattached references are security tokens that are not included within the security header of the SOAP message. These references typically affirm the authenticity of the issued security token.","nodes":[{"pos":[0,613],"content":"Typically, the <xref:System.IdentityModel.Tokens.BinaryKeyIdentifierClause> does not need to be used, other than when a custom security token service is created. When a security token service returns a security token, the issued security token contains references to attached and unattached security tokens. Attached references refer to security tokens that are contained within the security header of a SOAP message and unattached references are security tokens that are not included within the security header of the SOAP message. These references typically affirm the authenticity of the issued security token.","nodes":[{"content":"Typically, the <xref:System.IdentityModel.Tokens.BinaryKeyIdentifierClause> does not need to be used, other than when a custom security token service is created. When a security token service returns a security token, the issued security token contains references to attached and unattached security tokens. Attached references refer to security tokens that are contained within the security header of a SOAP message and unattached references are security tokens that are not included within the security header of the SOAP message. These references typically affirm the authenticity of the issued security token.","pos":[0,613],"nodes":[{"content":"Typically, the <ph id=\"ph1\">&lt;xref:System.IdentityModel.Tokens.BinaryKeyIdentifierClause&gt;</ph> does not need to be used, other than when a custom security token service is created.","pos":[0,161],"source":"Typically, the <xref:System.IdentityModel.Tokens.BinaryKeyIdentifierClause> does not need to be used, other than when a custom security token service is created."},{"content":"When a security token service returns a security token, the issued security token contains references to attached and unattached security tokens.","pos":[162,307]},{"content":"Attached references refer to security tokens that are contained within the security header of a SOAP message and unattached references are security tokens that are not included within the security header of the SOAP message.","pos":[308,532]},{"content":"These references typically affirm the authenticity of the issued security token.","pos":[533,613]}]}]}],"pos":[1252,1866],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.IdentityModel.Tokens.BinaryKeyIdentifierClause\"></xref> class using the specified key identifier clause type, binary data and a value that indicates whether the binary data must be cloned.","nodes":[{"pos":[0,241],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.IdentityModel.Tokens.BinaryKeyIdentifierClause\"&gt;&lt;/xref&gt;</ph> class using the specified key identifier clause type, binary data and a value that indicates whether the binary data must be cloned.","source":"Initializes a new instance of the <xref href=\"System.IdentityModel.Tokens.BinaryKeyIdentifierClause\"></xref> class using the specified key identifier clause type, binary data and a value that indicates whether the binary data must be cloned."}],"pos":[4537,4779],"yaml":true},{"content":"The key identifier clause type. Sets the value of the <xref href=\"System.IdentityModel.Tokens.SecurityKeyIdentifierClause.ClauseType\"></xref> property.","nodes":[{"pos":[0,151],"content":"The key identifier clause type. Sets the value of the <xref href=\"System.IdentityModel.Tokens.SecurityKeyIdentifierClause.ClauseType\"></xref> property.","nodes":[{"content":"The key identifier clause type.","pos":[0,31]},{"content":"Sets the value of the <ph id=\"ph1\">&lt;xref href=\"System.IdentityModel.Tokens.SecurityKeyIdentifierClause.ClauseType\"&gt;&lt;/xref&gt;</ph> property.","pos":[32,151],"source":" Sets the value of the <xref href=\"System.IdentityModel.Tokens.SecurityKeyIdentifierClause.ClauseType\"></xref> property."}]}],"pos":[4986,5138],"yaml":true},{"content":"An array of <xref href=\"System.Byte\"></xref> that contains the binary data that represents the key identifier.","nodes":[{"pos":[0,110],"content":"An array of <ph id=\"ph1\">&lt;xref href=\"System.Byte\"&gt;&lt;/xref&gt;</ph> that contains the binary data that represents the key identifier.","source":"An array of <xref href=\"System.Byte\"></xref> that contains the binary data that represents the key identifier."}],"pos":[5212,5323],"yaml":true},{"content":"`true` to clone the array passed into the <code>identificationData</code> parameter; otherwise, `false`.","nodes":[{"pos":[0,104],"content":"<ph id=\"ph1\">`true`</ph> to clone the array passed into the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">identificationData</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` to clone the array passed into the <code>identificationData</code> parameter; otherwise, `false`."}],"pos":[5391,5498],"yaml":true},{"content":"<code>identificationData</code> is `null`.","nodes":[{"pos":[0,42],"content":"<ph id=\"ph1\">&lt;code&gt;identificationData&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>identificationData</code> is `null`."}],"pos":[5687,5730],"yaml":true},{"content":"<code>identificationData</code> is zero length.","nodes":[{"pos":[0,47],"content":"<ph id=\"ph1\">&lt;code&gt;identificationData&lt;/code&gt;</ph> is zero length.","source":"<code>identificationData</code> is zero length."}],"pos":[5844,5892],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.IdentityModel.Tokens.BinaryKeyIdentifierClause\"></xref> class using the specified key identifier clause type, binary data, a value that indicates whether the binary data must be cloned, a nonce and the key length.","nodes":[{"pos":[0,266],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.IdentityModel.Tokens.BinaryKeyIdentifierClause\"&gt;&lt;/xref&gt;</ph> class using the specified key identifier clause type, binary data, a value that indicates whether the binary data must be cloned, a nonce and the key length.","source":"Initializes a new instance of the <xref href=\"System.IdentityModel.Tokens.BinaryKeyIdentifierClause\"></xref> class using the specified key identifier clause type, binary data, a value that indicates whether the binary data must be cloned, a nonce and the key length."}],"pos":[7315,7582],"yaml":true},{"content":"When the `derivationNonce` and `derivationLength` parameters are specified, the implied derived key is used instead of the direct security key of the token.  \n  \n Regardless of the value passed into the `cloneBuffer` parameter, the <xref:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer%2A> method always returns a clone of the array passed into the `identificationData` parameter.","nodes":[{"pos":[0,156],"content":"When the <ph id=\"ph1\">`derivationNonce`</ph> and <ph id=\"ph2\">`derivationLength`</ph> parameters are specified, the implied derived key is used instead of the direct security key of the token.","source":"When the `derivationNonce` and `derivationLength` parameters are specified, the implied derived key is used instead of the direct security key of the token."},{"pos":[163,396],"content":"Regardless of the value passed into the <ph id=\"ph1\">`cloneBuffer`</ph> parameter, the <ph id=\"ph2\">&lt;xref:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer%2A&gt;</ph> method always returns a clone of the array passed into the <ph id=\"ph3\">`identificationData`</ph> parameter.","source":"Regardless of the value passed into the `cloneBuffer` parameter, the <xref:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer%2A> method always returns a clone of the array passed into the `identificationData` parameter."}],"pos":[7593,7994],"yaml":true,"extradata":"MT"},{"content":"The key identifier clause type. Sets the value of the <xref href=\"System.IdentityModel.Tokens.SecurityKeyIdentifierClause.ClauseType\"></xref> property.","nodes":[{"pos":[0,151],"content":"The key identifier clause type. Sets the value of the <xref href=\"System.IdentityModel.Tokens.SecurityKeyIdentifierClause.ClauseType\"></xref> property.","nodes":[{"content":"The key identifier clause type.","pos":[0,31]},{"content":"Sets the value of the <ph id=\"ph1\">&lt;xref href=\"System.IdentityModel.Tokens.SecurityKeyIdentifierClause.ClauseType\"&gt;&lt;/xref&gt;</ph> property.","pos":[32,151],"source":" Sets the value of the <xref href=\"System.IdentityModel.Tokens.SecurityKeyIdentifierClause.ClauseType\"></xref> property."}]}],"pos":[8247,8399],"yaml":true},{"content":"An array of <xref href=\"System.Byte\"></xref> that contains the binary data that represents the key identifier. Sets the binary data that is returned by the <xref href=\"System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer\"></xref> method.","nodes":[{"pos":[0,248],"content":"An array of <xref href=\"System.Byte\"></xref> that contains the binary data that represents the key identifier. Sets the binary data that is returned by the <xref href=\"System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer\"></xref> method.","nodes":[{"content":"An array of <ph id=\"ph1\">&lt;xref href=\"System.Byte\"&gt;&lt;/xref&gt;</ph> that contains the binary data that represents the key identifier.","pos":[0,110],"source":"An array of <xref href=\"System.Byte\"></xref> that contains the binary data that represents the key identifier."},{"content":"Sets the binary data that is returned by the <ph id=\"ph1\">&lt;xref href=\"System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer\"&gt;&lt;/xref&gt;</ph> method.","pos":[111,248],"source":" Sets the binary data that is returned by the <xref href=\"System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer\"></xref> method."}]}],"pos":[8473,8722],"yaml":true},{"content":"`true` to clone the array passed into the <code>identificationData</code> parameter; otherwise, `false`.","nodes":[{"pos":[0,104],"content":"<ph id=\"ph1\">`true`</ph> to clone the array passed into the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">identificationData</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` to clone the array passed into the <code>identificationData</code> parameter; otherwise, `false`."}],"pos":[8790,8897],"yaml":true},{"content":"An array of <xref href=\"System.Byte\"></xref> that contains the nonce that was used to create a derived key. Sets the value that is returned by the <xref href=\"System.IdentityModel.Tokens.SecurityKeyIdentifierClause.GetDerivationNonce\"></xref> method.","nodes":[{"pos":[0,250],"content":"An array of <xref href=\"System.Byte\"></xref> that contains the nonce that was used to create a derived key. Sets the value that is returned by the <xref href=\"System.IdentityModel.Tokens.SecurityKeyIdentifierClause.GetDerivationNonce\"></xref> method.","nodes":[{"content":"An array of <ph id=\"ph1\">&lt;xref href=\"System.Byte\"&gt;&lt;/xref&gt;</ph> that contains the nonce that was used to create a derived key.","pos":[0,107],"source":"An array of <xref href=\"System.Byte\"></xref> that contains the nonce that was used to create a derived key."},{"content":"Sets the value that is returned by the <ph id=\"ph1\">&lt;xref href=\"System.IdentityModel.Tokens.SecurityKeyIdentifierClause.GetDerivationNonce\"&gt;&lt;/xref&gt;</ph> method.","pos":[108,250],"source":" Sets the value that is returned by the <xref href=\"System.IdentityModel.Tokens.SecurityKeyIdentifierClause.GetDerivationNonce\"></xref> method."}]}],"pos":[8968,9219],"yaml":true},{"content":"The size of the derived key. Sets the value of the <xref href=\"System.IdentityModel.Tokens.SecurityKeyIdentifierClause.DerivationLength\"></xref> property.","nodes":[{"pos":[0,154],"content":"The size of the derived key. Sets the value of the <xref href=\"System.IdentityModel.Tokens.SecurityKeyIdentifierClause.DerivationLength\"></xref> property.","nodes":[{"content":"The size of the derived key.","pos":[0,28]},{"content":"Sets the value of the <ph id=\"ph1\">&lt;xref href=\"System.IdentityModel.Tokens.SecurityKeyIdentifierClause.DerivationLength\"&gt;&lt;/xref&gt;</ph> property.","pos":[29,154],"source":" Sets the value of the <xref href=\"System.IdentityModel.Tokens.SecurityKeyIdentifierClause.DerivationLength\"></xref> property."}]}],"pos":[9290,9445],"yaml":true},{"content":"<code>identificationData</code> is `null`.","nodes":[{"pos":[0,42],"content":"<ph id=\"ph1\">&lt;code&gt;identificationData&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>identificationData</code> is `null`."}],"pos":[9634,9677],"yaml":true},{"content":"<code>identificationData</code> is zero length.","nodes":[{"pos":[0,47],"content":"<ph id=\"ph1\">&lt;code&gt;identificationData&lt;/code&gt;</ph> is zero length.","source":"<code>identificationData</code> is zero length."}],"pos":[9791,9839],"yaml":true},{"content":"Gets the binary data that represents the key identifier.","nodes":[{"pos":[0,56],"content":"Gets the binary data that represents the key identifier.","nodes":[{"content":"Gets the binary data that represents the key identifier.","pos":[0,56]}]}],"pos":[10892,10949],"yaml":true},{"content":"Regardless of the value passed into the constructor's `cloneBuffer` parameter, the <xref:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer%2A> method always returns a clone of the array passed into the constructor's `identificationData` parameter.","nodes":[{"pos":[0,261],"content":"Regardless of the value passed into the constructor's <ph id=\"ph1\">`cloneBuffer`</ph> parameter, the <ph id=\"ph2\">&lt;xref:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer%2A&gt;</ph> method always returns a clone of the array passed into the constructor's <ph id=\"ph3\">`identificationData`</ph> parameter.","source":"Regardless of the value passed into the constructor's `cloneBuffer` parameter, the <xref:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer%2A> method always returns a clone of the array passed into the constructor's `identificationData` parameter."}],"pos":[10960,11222],"yaml":true,"extradata":"MT"},{"content":"An array of <xref href=\"System.Byte\"></xref> that contains the binary data that represents the key identifier.","nodes":[{"pos":[0,110],"content":"An array of <ph id=\"ph1\">&lt;xref href=\"System.Byte\"&gt;&lt;/xref&gt;</ph> that contains the binary data that represents the key identifier.","source":"An array of <xref href=\"System.Byte\"></xref> that contains the binary data that represents the key identifier."}],"pos":[11349,11460],"yaml":true},{"content":"Gets the binary data that represents the key identifier.","nodes":[{"pos":[0,56],"content":"Gets the binary data that represents the key identifier.","nodes":[{"content":"Gets the binary data that represents the key identifier.","pos":[0,56]}]}],"pos":[12625,12682],"yaml":true},{"content":"The array returned by the <xref:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetRawBuffer%2A> method is a clone of the constructor's `identificationData` parameter when the value passed into the `cloneBuffer` is `true`; otherwise it is same array.  \n  \n The <xref:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer%2A> method always returns a clone of the array passed into the constructor's `identificationData` parameter.","nodes":[{"pos":[0,256],"content":"The array returned by the <ph id=\"ph1\">&lt;xref:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetRawBuffer%2A&gt;</ph> method is a clone of the constructor's <ph id=\"ph2\">`identificationData`</ph> parameter when the value passed into the <ph id=\"ph3\">`cloneBuffer`</ph> is <ph id=\"ph4\">`true`</ph>; otherwise it is same array.","source":"The array returned by the <xref:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetRawBuffer%2A> method is a clone of the constructor's `identificationData` parameter when the value passed into the `cloneBuffer` is `true`; otherwise it is same array."},{"pos":[263,445],"content":"The <ph id=\"ph1\">&lt;xref:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer%2A&gt;</ph> method always returns a clone of the array passed into the constructor's <ph id=\"ph2\">`identificationData`</ph> parameter.","source":"The <xref:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer%2A> method always returns a clone of the array passed into the constructor's `identificationData` parameter."}],"pos":[12693,13143],"yaml":true,"extradata":"MT"},{"content":"An array of <xref href=\"System.Byte\"></xref> that contains the binary data that represents the key identifier.","nodes":[{"pos":[0,110],"content":"An array of <ph id=\"ph1\">&lt;xref href=\"System.Byte\"&gt;&lt;/xref&gt;</ph> that contains the binary data that represents the key identifier.","source":"An array of <xref href=\"System.Byte\"></xref> that contains the binary data that represents the key identifier."}],"pos":[13276,13387],"yaml":true},{"content":"Returns a value that indicates whether the binary data for the current instance matches the specified binary data.","nodes":[{"pos":[0,114],"content":"Returns a value that indicates whether the binary data for the current instance matches the specified binary data.","nodes":[{"content":"Returns a value that indicates whether the binary data for the current instance matches the specified binary data.","pos":[0,114]}]}],"pos":[14588,14703],"yaml":true},{"content":"An array of <xref href=\"System.Byte\"></xref> to compare to.","nodes":[{"pos":[0,59],"content":"An array of <ph id=\"ph1\">&lt;xref href=\"System.Byte\"&gt;&lt;/xref&gt;</ph> to compare to.","source":"An array of <xref href=\"System.Byte\"></xref> to compare to."}],"pos":[14837,14897],"yaml":true},{"content":"`true` if <code>data</code> is equivalent to the binary data returned by the <xref href=\"System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer\"></xref> method; otherwise, `false`.","nodes":[{"pos":[0,189],"content":"<ph id=\"ph1\">`true`</ph> if <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">data</ph><ept id=\"p1\">&lt;/code&gt;</ept> is equivalent to the binary data returned by the <ph id=\"ph3\">&lt;xref href=\"System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer\"&gt;&lt;/xref&gt;</ph> method; otherwise, <ph id=\"ph4\">`false`</ph>.","source":"`true` if <code>data</code> is equivalent to the binary data returned by the <xref href=\"System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer\"></xref> method; otherwise, `false`."}],"pos":[14955,15147],"yaml":true},{"content":"Returns a value that indicates whether the key identifier for this instance is equivalent to the specified key identifier clause.","nodes":[{"pos":[0,129],"content":"Returns a value that indicates whether the key identifier for this instance is equivalent to the specified key identifier clause.","nodes":[{"content":"Returns a value that indicates whether the key identifier for this instance is equivalent to the specified key identifier clause.","pos":[0,129]}]}],"pos":[16532,16662],"yaml":true},{"content":"`true` if <code>clause</code> is of type <xref href=\"System.IdentityModel.Tokens.BinaryKeyIdentifierClause\"></xref> and the binary data returned by the <xref href=\"System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer\"></xref> method is identical for the <code>clause</code> parameter and the current instance; otherwise, `false`.","nodes":[{"pos":[0,340],"content":"<ph id=\"ph1\">`true`</ph> if <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">clause</ph><ept id=\"p1\">&lt;/code&gt;</ept> is of type <ph id=\"ph3\">&lt;xref href=\"System.IdentityModel.Tokens.BinaryKeyIdentifierClause\"&gt;&lt;/xref&gt;</ph> and the binary data returned by the <ph id=\"ph4\">&lt;xref href=\"System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer\"&gt;&lt;/xref&gt;</ph> method is identical for the <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph5\">clause</ph><ept id=\"p2\">&lt;/code&gt;</ept> parameter and the current instance; otherwise, <ph id=\"ph6\">`false`</ph>.","source":"`true` if <code>clause</code> is of type <xref href=\"System.IdentityModel.Tokens.BinaryKeyIdentifierClause\"></xref> and the binary data returned by the <xref href=\"System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer\"></xref> method is identical for the <code>clause</code> parameter and the current instance; otherwise, `false`."}],"pos":[16974,17317],"yaml":true},{"content":"Returns a value that indicates whether the binary data for the current instance is equivalent to the specified binary data at the specified offset.","nodes":[{"pos":[0,147],"content":"Returns a value that indicates whether the binary data for the current instance is equivalent to the specified binary data at the specified offset.","nodes":[{"content":"Returns a value that indicates whether the binary data for the current instance is equivalent to the specified binary data at the specified offset.","pos":[0,147]}]}],"pos":[18573,18721],"yaml":true},{"content":"An array of <xref href=\"System.Byte\"></xref> to compare to.","nodes":[{"pos":[0,59],"content":"An array of <ph id=\"ph1\">&lt;xref href=\"System.Byte\"&gt;&lt;/xref&gt;</ph> to compare to.","source":"An array of <xref href=\"System.Byte\"></xref> to compare to."}],"pos":[18867,18927],"yaml":true},{"content":"The index in the array at which the comparison starts.","nodes":[{"pos":[0,54],"content":"The index in the array at which the comparison starts.","nodes":[{"content":"The index in the array at which the comparison starts.","pos":[0,54]}]}],"pos":[18988,19043],"yaml":true},{"content":"`true` if the binary data in the <code>data</code> parameter starting at the index specified in the <code>offset</code> parameter is equivalent to the binary data returned by the <xref href=\"System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer\"></xref> method (starting at index zero); otherwise, `false`.","nodes":[{"pos":[0,316],"content":"<ph id=\"ph1\">`true`</ph> if the binary data in the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">data</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter starting at the index specified in the <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph3\">offset</ph><ept id=\"p2\">&lt;/code&gt;</ept> parameter is equivalent to the binary data returned by the <ph id=\"ph4\">&lt;xref href=\"System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer\"&gt;&lt;/xref&gt;</ph> method (starting at index zero); otherwise, <ph id=\"ph5\">`false`</ph>.","source":"`true` if the binary data in the <code>data</code> parameter starting at the index specified in the <code>offset</code> parameter is equivalent to the binary data returned by the <xref href=\"System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer\"></xref> method (starting at index zero); otherwise, `false`."}],"pos":[19101,19420],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.IdentityModel.Tokens.BinaryKeyIdentifierClause\n  commentId: T:System.IdentityModel.Tokens.BinaryKeyIdentifierClause\n  id: BinaryKeyIdentifierClause\n  children:\n  - System.IdentityModel.Tokens.BinaryKeyIdentifierClause.#ctor(System.String,System.Byte[],System.Boolean)\n  - System.IdentityModel.Tokens.BinaryKeyIdentifierClause.#ctor(System.String,System.Byte[],System.Boolean,System.Byte[],System.Int32)\n  - System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer\n  - System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetRawBuffer\n  - System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(System.Byte[])\n  - System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)\n  - System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(System.Byte[],System.Int32)\n  langs:\n  - csharp\n  name: BinaryKeyIdentifierClause\n  nameWithType: BinaryKeyIdentifierClause\n  fullName: System.IdentityModel.Tokens.BinaryKeyIdentifierClause\n  type: Class\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Represents a base class for key identifier clauses that are based upon binary data.\n  remarks: Typically, the <xref:System.IdentityModel.Tokens.BinaryKeyIdentifierClause> does not need to be used, other than when a custom security token service is created. When a security token service returns a security token, the issued security token contains references to attached and unattached security tokens. Attached references refer to security tokens that are contained within the security header of a SOAP message and unattached references are security tokens that are not included within the security header of the SOAP message. These references typically affirm the authenticity of the issued security token.\n  syntax:\n    content: 'public abstract class BinaryKeyIdentifierClause : System.IdentityModel.Tokens.SecurityKeyIdentifierClause'\n  inheritance:\n  - System.Object\n  - System.IdentityModel.Tokens.SecurityKeyIdentifierClause\n  derivedClasses:\n  - System.IdentityModel.Tokens.EncryptedKeyIdentifierClause\n  - System.IdentityModel.Tokens.KerberosTicketHashKeyIdentifierClause\n  - System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause\n  - System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause\n  - System.IdentityModel.Tokens.X509ThumbprintKeyIdentifierClause\n  - System.ServiceModel.Security.BinarySecretKeyIdentifierClause\n  implements: []\n  inheritedMembers:\n  - System.IdentityModel.Tokens.SecurityKeyIdentifierClause.CanCreateKey\n  - System.IdentityModel.Tokens.SecurityKeyIdentifierClause.ClauseType\n  - System.IdentityModel.Tokens.SecurityKeyIdentifierClause.CreateKey\n  - System.IdentityModel.Tokens.SecurityKeyIdentifierClause.DerivationLength\n  - System.IdentityModel.Tokens.SecurityKeyIdentifierClause.GetDerivationNonce\n  - System.IdentityModel.Tokens.SecurityKeyIdentifierClause.Id\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/BinaryKeyIdentifierClause.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: v-jibran\n  manager: markgal\n- uid: System.IdentityModel.Tokens.BinaryKeyIdentifierClause.#ctor(System.String,System.Byte[],System.Boolean)\n  commentId: M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.#ctor(System.String,System.Byte[],System.Boolean)\n  id: '#ctor(System.String,System.Byte[],System.Boolean)'\n  parent: System.IdentityModel.Tokens.BinaryKeyIdentifierClause\n  langs:\n  - csharp\n  name: BinaryKeyIdentifierClause(String, Byte[], Boolean)\n  nameWithType: BinaryKeyIdentifierClause.BinaryKeyIdentifierClause(String, Byte[], Boolean)\n  fullName: BinaryKeyIdentifierClause.BinaryKeyIdentifierClause(String, Byte[], Boolean)\n  type: Constructor\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Initializes a new instance of the <xref href=\"System.IdentityModel.Tokens.BinaryKeyIdentifierClause\"></xref> class using the specified key identifier clause type, binary data and a value that indicates whether the binary data must be cloned.\n  syntax:\n    content: protected BinaryKeyIdentifierClause (string clauseType, byte[] identificationData, bool cloneBuffer);\n    parameters:\n    - id: clauseType\n      type: System.String\n      description: The key identifier clause type. Sets the value of the <xref href=\"System.IdentityModel.Tokens.SecurityKeyIdentifierClause.ClauseType\"></xref> property.\n    - id: identificationData\n      type: System.Byte[]\n      description: An array of <xref href=\"System.Byte\"></xref> that contains the binary data that represents the key identifier.\n    - id: cloneBuffer\n      type: System.Boolean\n      description: '`true` to clone the array passed into the <code>identificationData</code> parameter; otherwise, `false`.'\n  overload: System.IdentityModel.Tokens.BinaryKeyIdentifierClause.#ctor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>identificationData</code> is `null`.\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: <code>identificationData</code> is zero length.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/BinaryKeyIdentifierClause.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: v-jibran\n  manager: markgal\n- uid: System.IdentityModel.Tokens.BinaryKeyIdentifierClause.#ctor(System.String,System.Byte[],System.Boolean,System.Byte[],System.Int32)\n  commentId: M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.#ctor(System.String,System.Byte[],System.Boolean,System.Byte[],System.Int32)\n  id: '#ctor(System.String,System.Byte[],System.Boolean,System.Byte[],System.Int32)'\n  parent: System.IdentityModel.Tokens.BinaryKeyIdentifierClause\n  langs:\n  - csharp\n  name: BinaryKeyIdentifierClause(String, Byte[], Boolean, Byte[], Int32)\n  nameWithType: BinaryKeyIdentifierClause.BinaryKeyIdentifierClause(String, Byte[], Boolean, Byte[], Int32)\n  fullName: BinaryKeyIdentifierClause.BinaryKeyIdentifierClause(String, Byte[], Boolean, Byte[], Int32)\n  type: Constructor\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Initializes a new instance of the <xref href=\"System.IdentityModel.Tokens.BinaryKeyIdentifierClause\"></xref> class using the specified key identifier clause type, binary data, a value that indicates whether the binary data must be cloned, a nonce and the key length.\n  remarks: \"When the `derivationNonce` and `derivationLength` parameters are specified, the implied derived key is used instead of the direct security key of the token.  \\n  \\n Regardless of the value passed into the `cloneBuffer` parameter, the <xref:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer%2A> method always returns a clone of the array passed into the `identificationData` parameter.\"\n  syntax:\n    content: protected BinaryKeyIdentifierClause (string clauseType, byte[] identificationData, bool cloneBuffer, byte[] derivationNonce, int derivationLength);\n    parameters:\n    - id: clauseType\n      type: System.String\n      description: The key identifier clause type. Sets the value of the <xref href=\"System.IdentityModel.Tokens.SecurityKeyIdentifierClause.ClauseType\"></xref> property.\n    - id: identificationData\n      type: System.Byte[]\n      description: An array of <xref href=\"System.Byte\"></xref> that contains the binary data that represents the key identifier. Sets the binary data that is returned by the <xref href=\"System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer\"></xref> method.\n    - id: cloneBuffer\n      type: System.Boolean\n      description: '`true` to clone the array passed into the <code>identificationData</code> parameter; otherwise, `false`.'\n    - id: derivationNonce\n      type: System.Byte[]\n      description: An array of <xref href=\"System.Byte\"></xref> that contains the nonce that was used to create a derived key. Sets the value that is returned by the <xref href=\"System.IdentityModel.Tokens.SecurityKeyIdentifierClause.GetDerivationNonce\"></xref> method.\n    - id: derivationLength\n      type: System.Int32\n      description: The size of the derived key. Sets the value of the <xref href=\"System.IdentityModel.Tokens.SecurityKeyIdentifierClause.DerivationLength\"></xref> property.\n  overload: System.IdentityModel.Tokens.BinaryKeyIdentifierClause.#ctor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>identificationData</code> is `null`.\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: <code>identificationData</code> is zero length.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/BinaryKeyIdentifierClause.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: v-jibran\n  manager: markgal\n- uid: System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer\n  commentId: M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer\n  id: GetBuffer\n  parent: System.IdentityModel.Tokens.BinaryKeyIdentifierClause\n  langs:\n  - csharp\n  name: GetBuffer()\n  nameWithType: BinaryKeyIdentifierClause.GetBuffer()\n  fullName: BinaryKeyIdentifierClause.GetBuffer()\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Gets the binary data that represents the key identifier.\n  remarks: Regardless of the value passed into the constructor's `cloneBuffer` parameter, the <xref:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer%2A> method always returns a clone of the array passed into the constructor's `identificationData` parameter.\n  syntax:\n    content: public byte[] GetBuffer ();\n    parameters: []\n    return:\n      type: System.Byte[]\n      description: An array of <xref href=\"System.Byte\"></xref> that contains the binary data that represents the key identifier.\n  overload: System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/BinaryKeyIdentifierClause.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: v-jibran\n  manager: markgal\n- uid: System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetRawBuffer\n  commentId: M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetRawBuffer\n  id: GetRawBuffer\n  parent: System.IdentityModel.Tokens.BinaryKeyIdentifierClause\n  langs:\n  - csharp\n  name: GetRawBuffer()\n  nameWithType: BinaryKeyIdentifierClause.GetRawBuffer()\n  fullName: BinaryKeyIdentifierClause.GetRawBuffer()\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Gets the binary data that represents the key identifier.\n  remarks: \"The array returned by the <xref:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetRawBuffer%2A> method is a clone of the constructor's `identificationData` parameter when the value passed into the `cloneBuffer` is `true`; otherwise it is same array.  \\n  \\n The <xref:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer%2A> method always returns a clone of the array passed into the constructor's `identificationData` parameter.\"\n  syntax:\n    content: protected byte[] GetRawBuffer ();\n    parameters: []\n    return:\n      type: System.Byte[]\n      description: An array of <xref href=\"System.Byte\"></xref> that contains the binary data that represents the key identifier.\n  overload: System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetRawBuffer*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/BinaryKeyIdentifierClause.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: v-jibran\n  manager: markgal\n- uid: System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(System.Byte[])\n  commentId: M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(System.Byte[])\n  id: Matches(System.Byte[])\n  parent: System.IdentityModel.Tokens.BinaryKeyIdentifierClause\n  langs:\n  - csharp\n  name: Matches(Byte[])\n  nameWithType: BinaryKeyIdentifierClause.Matches(Byte[])\n  fullName: BinaryKeyIdentifierClause.Matches(Byte[])\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Returns a value that indicates whether the binary data for the current instance matches the specified binary data.\n  syntax:\n    content: public bool Matches (byte[] data);\n    parameters:\n    - id: data\n      type: System.Byte[]\n      description: An array of <xref href=\"System.Byte\"></xref> to compare to.\n    return:\n      type: System.Boolean\n      description: '`true` if <code>data</code> is equivalent to the binary data returned by the <xref href=\"System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer\"></xref> method; otherwise, `false`.'\n  overload: System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/BinaryKeyIdentifierClause.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: v-jibran\n  manager: markgal\n- uid: System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)\n  commentId: M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)\n  id: Matches(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)\n  parent: System.IdentityModel.Tokens.BinaryKeyIdentifierClause\n  langs:\n  - csharp\n  name: Matches(SecurityKeyIdentifierClause)\n  nameWithType: BinaryKeyIdentifierClause.Matches(SecurityKeyIdentifierClause)\n  fullName: BinaryKeyIdentifierClause.Matches(SecurityKeyIdentifierClause)\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Returns a value that indicates whether the key identifier for this instance is equivalent to the specified key identifier clause.\n  syntax:\n    content: public override bool Matches (System.IdentityModel.Tokens.SecurityKeyIdentifierClause clause);\n    parameters:\n    - id: keyIdentifierClause\n      type: System.IdentityModel.Tokens.SecurityKeyIdentifierClause\n      description: ''\n    return:\n      type: System.Boolean\n      description: '`true` if <code>clause</code> is of type <xref href=\"System.IdentityModel.Tokens.BinaryKeyIdentifierClause\"></xref> and the binary data returned by the <xref href=\"System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer\"></xref> method is identical for the <code>clause</code> parameter and the current instance; otherwise, `false`.'\n  overload: System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/BinaryKeyIdentifierClause.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: v-jibran\n  manager: markgal\n- uid: System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(System.Byte[],System.Int32)\n  commentId: M:System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(System.Byte[],System.Int32)\n  id: Matches(System.Byte[],System.Int32)\n  parent: System.IdentityModel.Tokens.BinaryKeyIdentifierClause\n  langs:\n  - csharp\n  name: Matches(Byte[], Int32)\n  nameWithType: BinaryKeyIdentifierClause.Matches(Byte[], Int32)\n  fullName: BinaryKeyIdentifierClause.Matches(Byte[], Int32)\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Returns a value that indicates whether the binary data for the current instance is equivalent to the specified binary data at the specified offset.\n  syntax:\n    content: public bool Matches (byte[] data, int offset);\n    parameters:\n    - id: data\n      type: System.Byte[]\n      description: An array of <xref href=\"System.Byte\"></xref> to compare to.\n    - id: offset\n      type: System.Int32\n      description: The index in the array at which the comparison starts.\n    return:\n      type: System.Boolean\n      description: '`true` if the binary data in the <code>data</code> parameter starting at the index specified in the <code>offset</code> parameter is equivalent to the binary data returned by the <xref href=\"System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer\"></xref> method (starting at index zero); otherwise, `false`.'\n  overload: System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/BinaryKeyIdentifierClause.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: v-jibran\n  manager: markgal\nreferences:\n- uid: System.IdentityModel.Tokens.SecurityKeyIdentifierClause\n  parent: System.IdentityModel.Tokens\n  isExternal: false\n  name: SecurityKeyIdentifierClause\n  nameWithType: SecurityKeyIdentifierClause\n  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifierClause\n- uid: System.ArgumentNullException\n  parent: System\n  isExternal: false\n  name: ArgumentNullException\n  nameWithType: ArgumentNullException\n  fullName: System.ArgumentNullException\n- uid: System.ArgumentOutOfRangeException\n  parent: System\n  isExternal: false\n  name: ArgumentOutOfRangeException\n  nameWithType: ArgumentOutOfRangeException\n  fullName: System.ArgumentOutOfRangeException\n- uid: System.IdentityModel.Tokens.BinaryKeyIdentifierClause.#ctor(System.String,System.Byte[],System.Boolean)\n  parent: System.IdentityModel.Tokens.BinaryKeyIdentifierClause\n  isExternal: false\n  name: BinaryKeyIdentifierClause(String, Byte[], Boolean)\n  nameWithType: BinaryKeyIdentifierClause.BinaryKeyIdentifierClause(String, Byte[], Boolean)\n  fullName: BinaryKeyIdentifierClause.BinaryKeyIdentifierClause(String, Byte[], Boolean)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Byte\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte\n- uid: System.Byte[]\n  parent: System\n  isExternal: false\n  name: Byte[]\n  nameWithType: Byte[]\n  fullName: System.Byte[]\n  spec.csharp:\n  - uid: System.Byte\n    name: Byte\n    nameWithType: Byte\n    fullName: System.Byte\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.IdentityModel.Tokens.BinaryKeyIdentifierClause.#ctor(System.String,System.Byte[],System.Boolean,System.Byte[],System.Int32)\n  parent: System.IdentityModel.Tokens.BinaryKeyIdentifierClause\n  isExternal: false\n  name: BinaryKeyIdentifierClause(String, Byte[], Boolean, Byte[], Int32)\n  nameWithType: BinaryKeyIdentifierClause.BinaryKeyIdentifierClause(String, Byte[], Boolean, Byte[], Int32)\n  fullName: BinaryKeyIdentifierClause.BinaryKeyIdentifierClause(String, Byte[], Boolean, Byte[], Int32)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer\n  parent: System.IdentityModel.Tokens.BinaryKeyIdentifierClause\n  isExternal: false\n  name: GetBuffer()\n  nameWithType: BinaryKeyIdentifierClause.GetBuffer()\n  fullName: BinaryKeyIdentifierClause.GetBuffer()\n- uid: System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetRawBuffer\n  parent: System.IdentityModel.Tokens.BinaryKeyIdentifierClause\n  isExternal: false\n  name: GetRawBuffer()\n  nameWithType: BinaryKeyIdentifierClause.GetRawBuffer()\n  fullName: BinaryKeyIdentifierClause.GetRawBuffer()\n- uid: System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(System.Byte[])\n  parent: System.IdentityModel.Tokens.BinaryKeyIdentifierClause\n  isExternal: false\n  name: Matches(Byte[])\n  nameWithType: BinaryKeyIdentifierClause.Matches(Byte[])\n  fullName: BinaryKeyIdentifierClause.Matches(Byte[])\n- uid: System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)\n  parent: System.IdentityModel.Tokens.BinaryKeyIdentifierClause\n  isExternal: false\n  name: Matches(SecurityKeyIdentifierClause)\n  nameWithType: BinaryKeyIdentifierClause.Matches(SecurityKeyIdentifierClause)\n  fullName: BinaryKeyIdentifierClause.Matches(SecurityKeyIdentifierClause)\n- uid: System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(System.Byte[],System.Int32)\n  parent: System.IdentityModel.Tokens.BinaryKeyIdentifierClause\n  isExternal: false\n  name: Matches(Byte[], Int32)\n  nameWithType: BinaryKeyIdentifierClause.Matches(Byte[], Int32)\n  fullName: BinaryKeyIdentifierClause.Matches(Byte[], Int32)\n- uid: System.IdentityModel.Tokens.BinaryKeyIdentifierClause.#ctor*\n  parent: System.IdentityModel.Tokens.BinaryKeyIdentifierClause\n  isExternal: false\n  name: BinaryKeyIdentifierClause\n  nameWithType: BinaryKeyIdentifierClause.BinaryKeyIdentifierClause\n  fullName: BinaryKeyIdentifierClause.BinaryKeyIdentifierClause\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/BinaryKeyIdentifierClause.xml\n- uid: System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer*\n  parent: System.IdentityModel.Tokens.BinaryKeyIdentifierClause\n  isExternal: false\n  name: GetBuffer\n  nameWithType: BinaryKeyIdentifierClause.GetBuffer\n  fullName: BinaryKeyIdentifierClause.GetBuffer\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/BinaryKeyIdentifierClause.xml\n- uid: System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetRawBuffer*\n  parent: System.IdentityModel.Tokens.BinaryKeyIdentifierClause\n  isExternal: false\n  name: GetRawBuffer\n  nameWithType: BinaryKeyIdentifierClause.GetRawBuffer\n  fullName: BinaryKeyIdentifierClause.GetRawBuffer\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/BinaryKeyIdentifierClause.xml\n- uid: System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches*\n  parent: System.IdentityModel.Tokens.BinaryKeyIdentifierClause\n  isExternal: false\n  name: Matches\n  nameWithType: BinaryKeyIdentifierClause.Matches\n  fullName: BinaryKeyIdentifierClause.Matches\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/BinaryKeyIdentifierClause.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.IdentityModel.Tokens.SecurityKeyIdentifierClause.CanCreateKey\n  parent: System.IdentityModel.Tokens.SecurityKeyIdentifierClause\n  isExternal: false\n  name: CanCreateKey\n  nameWithType: SecurityKeyIdentifierClause.CanCreateKey\n  fullName: SecurityKeyIdentifierClause.CanCreateKey\n- uid: System.IdentityModel.Tokens.SecurityKeyIdentifierClause.ClauseType\n  parent: System.IdentityModel.Tokens.SecurityKeyIdentifierClause\n  isExternal: false\n  name: ClauseType\n  nameWithType: SecurityKeyIdentifierClause.ClauseType\n  fullName: SecurityKeyIdentifierClause.ClauseType\n- uid: System.IdentityModel.Tokens.SecurityKeyIdentifierClause.CreateKey\n  parent: System.IdentityModel.Tokens.SecurityKeyIdentifierClause\n  isExternal: false\n  name: CreateKey()\n  nameWithType: SecurityKeyIdentifierClause.CreateKey()\n  fullName: SecurityKeyIdentifierClause.CreateKey()\n- uid: System.IdentityModel.Tokens.SecurityKeyIdentifierClause.DerivationLength\n  parent: System.IdentityModel.Tokens.SecurityKeyIdentifierClause\n  isExternal: false\n  name: DerivationLength\n  nameWithType: SecurityKeyIdentifierClause.DerivationLength\n  fullName: SecurityKeyIdentifierClause.DerivationLength\n- uid: System.IdentityModel.Tokens.SecurityKeyIdentifierClause.GetDerivationNonce\n  parent: System.IdentityModel.Tokens.SecurityKeyIdentifierClause\n  isExternal: false\n  name: GetDerivationNonce()\n  nameWithType: SecurityKeyIdentifierClause.GetDerivationNonce()\n  fullName: SecurityKeyIdentifierClause.GetDerivationNonce()\n- uid: System.IdentityModel.Tokens.SecurityKeyIdentifierClause.Id\n  parent: System.IdentityModel.Tokens.SecurityKeyIdentifierClause\n  isExternal: false\n  name: Id\n  nameWithType: SecurityKeyIdentifierClause.Id\n  fullName: SecurityKeyIdentifierClause.Id\n"}