{"nodes":[{"content":"Filters the classes represented in an array of <xref href=\"System.Type\"></xref> objects.","nodes":[{"pos":[0,88],"content":"Filters the classes represented in an array of <ph id=\"ph1\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph> objects.","source":"Filters the classes represented in an array of <xref href=\"System.Type\"></xref> objects."}],"pos":[383,472],"yaml":true},{"content":"The `TypeFilter` delegate is used to filter a list of classes. Specifically, you use it to filter the classes represented in an array of <xref:System.Type> objects. The <xref:System.Type.FindInterfaces%2A?displayProperty=fullName> method uses this delegate to filter the list of interfaces that it returns. Every derived class of <xref:System.Delegate> and <xref:System.MulticastDelegate> has a constructor and a `DynamicInvoke` method. See the Visual C++ code example given in the description for `Delegate`.","nodes":[{"pos":[0,509],"content":"The `TypeFilter` delegate is used to filter a list of classes. Specifically, you use it to filter the classes represented in an array of <xref:System.Type> objects. The <xref:System.Type.FindInterfaces%2A?displayProperty=fullName> method uses this delegate to filter the list of interfaces that it returns. Every derived class of <xref:System.Delegate> and <xref:System.MulticastDelegate> has a constructor and a `DynamicInvoke` method. See the Visual C++ code example given in the description for `Delegate`.","nodes":[{"content":"The <ph id=\"ph1\">`TypeFilter`</ph> delegate is used to filter a list of classes.","pos":[0,62],"source":"The `TypeFilter` delegate is used to filter a list of classes."},{"content":"Specifically, you use it to filter the classes represented in an array of <ph id=\"ph1\">&lt;xref:System.Type&gt;</ph> objects.","pos":[63,164],"source":" Specifically, you use it to filter the classes represented in an array of <xref:System.Type> objects."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Type.FindInterfaces%2A?displayProperty=fullName&gt;</ph> method uses this delegate to filter the list of interfaces that it returns.","pos":[165,306],"source":" The <xref:System.Type.FindInterfaces%2A?displayProperty=fullName> method uses this delegate to filter the list of interfaces that it returns."},{"content":"Every derived class of <ph id=\"ph1\">&lt;xref:System.Delegate&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.MulticastDelegate&gt;</ph> has a constructor and a <ph id=\"ph3\">`DynamicInvoke`</ph> method.","pos":[307,436],"source":" Every derived class of <xref:System.Delegate> and <xref:System.MulticastDelegate> has a constructor and a `DynamicInvoke` method."},{"content":"See the Visual C++ code example given in the description for <ph id=\"ph1\">`Delegate`</ph>.","pos":[437,509],"source":" See the Visual C++ code example given in the description for `Delegate`."}]}],"pos":[483,993],"yaml":true,"extradata":"MT"}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Reflection.TypeFilter\n  commentId: T:System.Reflection.TypeFilter\n  id: TypeFilter\n  langs:\n  - csharp\n  name: TypeFilter\n  nameWithType: TypeFilter\n  fullName: System.Reflection.TypeFilter\n  type: Delegate\n  assemblies:\n  - System.Reflection\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Reflection\n  summary: Filters the classes represented in an array of <xref href=\"System.Type\"></xref> objects.\n  remarks: The `TypeFilter` delegate is used to filter a list of classes. Specifically, you use it to filter the classes represented in an array of <xref:System.Type> objects. The <xref:System.Type.FindInterfaces%2A?displayProperty=fullName> method uses this delegate to filter the list of interfaces that it returns. Every derived class of <xref:System.Delegate> and <xref:System.MulticastDelegate> has a constructor and a `DynamicInvoke` method. See the Visual C++ code example given in the description for `Delegate`.\n  example:\n  - \"This example shows how to define a method matching the <xref:System.Reflection.TypeFilter> delegate prototype allowing you to use reflection to filter or return a subset of matching entries.  \\n  \\n [!code-vb[Typefilter#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/TypeFilter/VB/Typefilter.vb#1)]\"\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public delegate bool TypeFilter(Type m, object filterCriteria);\n  inheritance:\n  - System.Object\n  - System.Delegate\n  extensionMethods:\n  - System.Reflection.RuntimeReflectionExtensions.GetMethodInfo(System.Delegate)\n  attributes:\n  - type: System.Runtime.InteropServices.ComVisibleAttribute\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/TypeFilter.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\nreferences:\n- uid: System.Delegate\n  parent: System\n  isExternal: false\n  name: Delegate\n  nameWithType: Delegate\n  fullName: System.Delegate\n- uid: System.Reflection.RuntimeReflectionExtensions.GetMethodInfo(System.Delegate)\n  parent: System.Reflection.RuntimeReflectionExtensions\n  isExternal: false\n  name: GetMethodInfo(Delegate)\n  nameWithType: RuntimeReflectionExtensions.GetMethodInfo(Delegate)\n  fullName: RuntimeReflectionExtensions.GetMethodInfo(Delegate)\n"}