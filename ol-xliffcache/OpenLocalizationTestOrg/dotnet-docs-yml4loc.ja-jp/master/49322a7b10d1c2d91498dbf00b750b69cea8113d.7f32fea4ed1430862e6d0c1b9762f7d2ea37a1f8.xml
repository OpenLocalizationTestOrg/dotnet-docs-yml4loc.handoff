{"nodes":[{"content":"Implements a File Transfer Protocol (FTP) client.","nodes":[{"pos":[0,49],"content":"Implements a File Transfer Protocol (FTP) client.","nodes":[{"content":"Implements a File Transfer Protocol (FTP) client.","pos":[0,49]}]}],"pos":[1666,1716],"yaml":true},{"content":"To obtain an instance of <xref:System.Net.FtpWebRequest>, use the <xref:System.Net.WebRequest.Create%2A> method. You can also use the <xref:System.Net.WebClient> class to upload and download information from an FTP server. Using either of these approaches, when you specify a network resource that uses the FTP scheme (for example, `\"ftp://contoso.com\"`) the <xref:System.Net.FtpWebRequest> class provides the ability to programmatically interact with FTP servers.  \n  \n The URI may be relative or absolute. If the URI is of the form `\"ftp://contoso.com/%2fpath\"` (%2f is an escaped '/'), then the URI is absolute, and the current directory is `/path`. If, however, the URI is of the form `\"ftp://contoso.com/path\"`, first the .NET Framework logs into the FTP server (using the user name and password set by the <xref:System.Net.FtpWebRequest.Credentials%2A> property), then the current directory is set to `<UserLoginDirectory>/path`.  \n  \n You must have a valid user name and password for the server or the server must allow anonymous logon. You can specify the credentials used to connect to the server by setting the <xref:System.Net.FtpWebRequest.Credentials%2A> property or you can include them in the <xref:System.Uri.UserInfo%2A> portion of the URI passed to the <xref:System.Net.WebRequest.Create%2A> method. If you include <xref:System.Uri.UserInfo%2A> information in the URI, the <xref:System.Net.FtpWebRequest.Credentials%2A> property is set to a new network credential with the specified user name and password information.  \n  \n> [!CAUTION]\n>  Unless the <xref:System.Net.FtpWebRequest.EnableSsl%2A> property is `true`, all data and commands, including your user name and password information, are sent to the server in clear text. Anyone monitoring network traffic can view your credentials and use them to connect to the server. If you are connecting to an FTP server that requires credentials and supports Secure Sockets Layer (SSL), you should set <xref:System.Net.FtpWebRequest.EnableSsl%2A> to `true`.  \n  \n You must have <xref:System.Net.WebPermission> to access the FTP resource; otherwise, a <xref:System.Security.SecurityException> exception is thrown.  \n  \n Specify the FTP command to send to the server by setting the <xref:System.Net.FtpWebRequest.Method%2A> property to a value defined in the <xref:System.Net.WebRequestMethods.Ftp> structure. To transmit text data, change the <xref:System.Net.FtpWebRequest.UseBinary%2A> property from its default value (`true`) to `false`. For details and restrictions, see <xref:System.Net.FtpWebRequest.Method%2A>.  \n  \n When using an <xref:System.Net.FtpWebRequest> object to upload a file to a server, you must write the file content to the request stream obtained by calling the <xref:System.Net.FtpWebRequest.GetRequestStream%2A> method or its asynchronous counterparts, the <xref:System.Net.FtpWebRequest.BeginGetRequestStream%2A> and <xref:System.Net.FtpWebRequest.EndGetRequestStream%2A> methods. You must write to the stream and close the stream before sending the request.  \n  \n Requests are sent to the server by calling the <xref:System.Net.FtpWebRequest.GetResponse%2A> method or its asynchronous counterparts, the <xref:System.Net.FtpWebRequest.BeginGetResponse%2A> and <xref:System.Net.FtpWebRequest.EndGetResponse%2A> methods. When the requested operation completes, an <xref:System.Net.FtpWebResponse> object is returned. The <xref:System.Net.FtpWebResponse> object provides the status of the operation and any data downloaded from the server.  \n  \n You can set a time-out value for reading or writing to the server by using the <xref:System.Net.FtpWebRequest.ReadWriteTimeout%2A> property. If the time-out period is exceeded, the calling method throws a <xref:System.Net.WebException> with <xref:System.Net.WebExceptionStatus> set to <xref:System.Net.WebExceptionStatus.Timeout>.  \n  \n When downloading a file from an FTP server, if the command was successful, the contents of the requested file are available in the response object's stream. You can access this stream by calling the <xref:System.Net.FtpWebResponse.GetResponseStream%2A> method. For more information, see <xref:System.Net.FtpWebResponse>.  \n  \n If the <xref:System.Net.FtpWebRequest.Proxy%2A> property is set, either directly or in a configuration file, communications with the FTP server are made through the specified proxy. If the specified proxy is an HTTP proxy, only the <xref:System.Net.WebRequestMethods.Ftp.DownloadFile>, <xref:System.Net.WebRequestMethods.Ftp.ListDirectory>, and <xref:System.Net.WebRequestMethods.Ftp.ListDirectoryDetails> commands are supported.  \n  \n Only downloaded binary content is cached; that is, content received using the <xref:System.Net.WebRequestMethods.Ftp.DownloadFile> command with the <xref:System.Net.FtpWebRequest.UseBinary%2A> property set to `true`.  \n  \n Multiple <xref:System.Net.FtpWebRequest>s reuse existing connections, if possible.  \n  \n For more information about the FTP protocol, see RFC 959, \"File Transfer Protocol,\" available at [http://www.rfc-editor.org/](http://www.ietf.org/rfc/rfc959.txt).","nodes":[{"pos":[0,464],"content":"To obtain an instance of <xref:System.Net.FtpWebRequest>, use the <xref:System.Net.WebRequest.Create%2A> method. You can also use the <xref:System.Net.WebClient> class to upload and download information from an FTP server. Using either of these approaches, when you specify a network resource that uses the FTP scheme (for example, `\"ftp://contoso.com\"`) the <xref:System.Net.FtpWebRequest> class provides the ability to programmatically interact with FTP servers.","nodes":[{"content":"To obtain an instance of <ph id=\"ph1\">&lt;xref:System.Net.FtpWebRequest&gt;</ph>, use the <ph id=\"ph2\">&lt;xref:System.Net.WebRequest.Create%2A&gt;</ph> method.","pos":[0,112],"source":"To obtain an instance of <xref:System.Net.FtpWebRequest>, use the <xref:System.Net.WebRequest.Create%2A> method."},{"content":"You can also use the <ph id=\"ph1\">&lt;xref:System.Net.WebClient&gt;</ph> class to upload and download information from an FTP server.","pos":[113,222],"source":" You can also use the <xref:System.Net.WebClient> class to upload and download information from an FTP server."},{"content":"Using either of these approaches, when you specify a network resource that uses the FTP scheme (for example, <ph id=\"ph1\">`\"ftp://contoso.com\"`</ph>) the <ph id=\"ph2\">&lt;xref:System.Net.FtpWebRequest&gt;</ph> class provides the ability to programmatically interact with FTP servers.","pos":[223,464],"source":" Using either of these approaches, when you specify a network resource that uses the FTP scheme (for example, `\"ftp://contoso.com\"`) the <xref:System.Net.FtpWebRequest> class provides the ability to programmatically interact with FTP servers."}]},{"pos":[471,935],"content":"The URI may be relative or absolute. If the URI is of the form `\"ftp://contoso.com/%2fpath\"` (%2f is an escaped '/'), then the URI is absolute, and the current directory is `/path`. If, however, the URI is of the form `\"ftp://contoso.com/path\"`, first the .NET Framework logs into the FTP server (using the user name and password set by the <xref:System.Net.FtpWebRequest.Credentials%2A> property), then the current directory is set to `<UserLoginDirectory>/path`.","nodes":[{"content":"The URI may be relative or absolute.","pos":[0,36]},{"content":"If the URI is of the form <ph id=\"ph1\">`\"ftp://contoso.com/%2fpath\"`</ph> (%2f is an escaped '/'), then the URI is absolute, and the current directory is <ph id=\"ph2\">`/path`</ph>.","pos":[37,181],"source":" If the URI is of the form `\"ftp://contoso.com/%2fpath\"` (%2f is an escaped '/'), then the URI is absolute, and the current directory is `/path`."},{"content":"If, however, the URI is of the form <ph id=\"ph1\">`\"ftp://contoso.com/path\"`</ph>, first the .NET Framework logs into the FTP server (using the user name and password set by the <ph id=\"ph2\">&lt;xref:System.Net.FtpWebRequest.Credentials%2A&gt;</ph> property), then the current directory is set to <ph id=\"ph3\">`&lt;UserLoginDirectory&gt;/path`</ph>.","pos":[182,464],"source":" If, however, the URI is of the form `\"ftp://contoso.com/path\"`, first the .NET Framework logs into the FTP server (using the user name and password set by the <xref:System.Net.FtpWebRequest.Credentials%2A> property), then the current directory is set to `<UserLoginDirectory>/path`."}]},{"pos":[942,1536],"content":"You must have a valid user name and password for the server or the server must allow anonymous logon. You can specify the credentials used to connect to the server by setting the <xref:System.Net.FtpWebRequest.Credentials%2A> property or you can include them in the <xref:System.Uri.UserInfo%2A> portion of the URI passed to the <xref:System.Net.WebRequest.Create%2A> method. If you include <xref:System.Uri.UserInfo%2A> information in the URI, the <xref:System.Net.FtpWebRequest.Credentials%2A> property is set to a new network credential with the specified user name and password information.","nodes":[{"content":"You must have a valid user name and password for the server or the server must allow anonymous logon. You can specify the credentials used to connect to the server by setting the <xref:System.Net.FtpWebRequest.Credentials%2A> property or you can include them in the <xref:System.Uri.UserInfo%2A> portion of the URI passed to the <xref:System.Net.WebRequest.Create%2A> method. If you include <xref:System.Uri.UserInfo%2A> information in the URI, the <xref:System.Net.FtpWebRequest.Credentials%2A> property is set to a new network credential with the specified user name and password information.","pos":[0,594],"nodes":[{"content":"You must have a valid user name and password for the server or the server must allow anonymous logon.","pos":[0,101]},{"content":"You can specify the credentials used to connect to the server by setting the <ph id=\"ph1\">&lt;xref:System.Net.FtpWebRequest.Credentials%2A&gt;</ph> property or you can include them in the <ph id=\"ph2\">&lt;xref:System.Uri.UserInfo%2A&gt;</ph> portion of the URI passed to the <ph id=\"ph3\">&lt;xref:System.Net.WebRequest.Create%2A&gt;</ph> method.","pos":[102,375],"source":" You can specify the credentials used to connect to the server by setting the <xref:System.Net.FtpWebRequest.Credentials%2A> property or you can include them in the <xref:System.Uri.UserInfo%2A> portion of the URI passed to the <xref:System.Net.WebRequest.Create%2A> method."},{"content":"If you include <ph id=\"ph1\">&lt;xref:System.Uri.UserInfo%2A&gt;</ph> information in the URI, the <ph id=\"ph2\">&lt;xref:System.Net.FtpWebRequest.Credentials%2A&gt;</ph> property is set to a new network credential with the specified user name and password information.","pos":[376,594],"source":" If you include <xref:System.Uri.UserInfo%2A> information in the URI, the <xref:System.Net.FtpWebRequest.Credentials%2A> property is set to a new network credential with the specified user name and password information."}]}]},{"pos":[1544,2021],"content":"[!CAUTION]\n Unless the <xref:System.Net.FtpWebRequest.EnableSsl%2A> property is `true`, all data and commands, including your user name and password information, are sent to the server in clear text. Anyone monitoring network traffic can view your credentials and use them to connect to the server. If you are connecting to an FTP server that requires credentials and supports Secure Sockets Layer (SSL), you should set <xref:System.Net.FtpWebRequest.EnableSsl%2A> to `true`.","leadings":["","> "],"nodes":[{"content":" Unless the <xref:System.Net.FtpWebRequest.EnableSsl%2A> property is `true`, all data and commands, including your user name and password information, are sent to the server in clear text. Anyone monitoring network traffic can view your credentials and use them to connect to the server. If you are connecting to an FTP server that requires credentials and supports Secure Sockets Layer (SSL), you should set <xref:System.Net.FtpWebRequest.EnableSsl%2A> to `true`.","pos":[11,475],"nodes":[{"content":"Unless the <ph id=\"ph1\">&lt;xref:System.Net.FtpWebRequest.EnableSsl%2A&gt;</ph> property is <ph id=\"ph2\">`true`</ph>, all data and commands, including your user name and password information, are sent to the server in clear text.","pos":[1,188],"source":" Unless the <xref:System.Net.FtpWebRequest.EnableSsl%2A> property is `true`, all data and commands, including your user name and password information, are sent to the server in clear text."},{"content":"Anyone monitoring network traffic can view your credentials and use them to connect to the server.","pos":[189,287]},{"content":"If you are connecting to an FTP server that requires credentials and supports Secure Sockets Layer (SSL), you should set <ph id=\"ph1\">&lt;xref:System.Net.FtpWebRequest.EnableSsl%2A&gt;</ph> to <ph id=\"ph2\">`true`</ph>.","pos":[288,464],"source":" If you are connecting to an FTP server that requires credentials and supports Secure Sockets Layer (SSL), you should set <xref:System.Net.FtpWebRequest.EnableSsl%2A> to `true`."}]}]},{"pos":[2028,2176],"content":"You must have <xref:System.Net.WebPermission> to access the FTP resource; otherwise, a <xref:System.Security.SecurityException> exception is thrown.","nodes":[{"content":"You must have <ph id=\"ph1\">&lt;xref:System.Net.WebPermission&gt;</ph> to access the FTP resource; otherwise, a <ph id=\"ph2\">&lt;xref:System.Security.SecurityException&gt;</ph> exception is thrown.","pos":[0,148],"source":"You must have <xref:System.Net.WebPermission> to access the FTP resource; otherwise, a <xref:System.Security.SecurityException> exception is thrown."}]},{"pos":[2183,2580],"content":"Specify the FTP command to send to the server by setting the <xref:System.Net.FtpWebRequest.Method%2A> property to a value defined in the <xref:System.Net.WebRequestMethods.Ftp> structure. To transmit text data, change the <xref:System.Net.FtpWebRequest.UseBinary%2A> property from its default value (`true`) to `false`. For details and restrictions, see <xref:System.Net.FtpWebRequest.Method%2A>.","nodes":[{"content":"Specify the FTP command to send to the server by setting the <ph id=\"ph1\">&lt;xref:System.Net.FtpWebRequest.Method%2A&gt;</ph> property to a value defined in the <ph id=\"ph2\">&lt;xref:System.Net.WebRequestMethods.Ftp&gt;</ph> structure.","pos":[0,188],"source":"Specify the FTP command to send to the server by setting the <xref:System.Net.FtpWebRequest.Method%2A> property to a value defined in the <xref:System.Net.WebRequestMethods.Ftp> structure."},{"content":"To transmit text data, change the <ph id=\"ph1\">&lt;xref:System.Net.FtpWebRequest.UseBinary%2A&gt;</ph> property from its default value (<ph id=\"ph2\">`true`</ph>) to <ph id=\"ph3\">`false`</ph>.","pos":[189,320],"source":" To transmit text data, change the <xref:System.Net.FtpWebRequest.UseBinary%2A> property from its default value (`true`) to `false`."},{"content":"For details and restrictions, see <ph id=\"ph1\">&lt;xref:System.Net.FtpWebRequest.Method%2A&gt;</ph>.","pos":[321,397],"source":" For details and restrictions, see <xref:System.Net.FtpWebRequest.Method%2A>."}]},{"pos":[2587,3047],"content":"When using an <xref:System.Net.FtpWebRequest> object to upload a file to a server, you must write the file content to the request stream obtained by calling the <xref:System.Net.FtpWebRequest.GetRequestStream%2A> method or its asynchronous counterparts, the <xref:System.Net.FtpWebRequest.BeginGetRequestStream%2A> and <xref:System.Net.FtpWebRequest.EndGetRequestStream%2A> methods. You must write to the stream and close the stream before sending the request.","nodes":[{"content":"When using an <xref:System.Net.FtpWebRequest> object to upload a file to a server, you must write the file content to the request stream obtained by calling the <xref:System.Net.FtpWebRequest.GetRequestStream%2A> method or its asynchronous counterparts, the <xref:System.Net.FtpWebRequest.BeginGetRequestStream%2A> and <xref:System.Net.FtpWebRequest.EndGetRequestStream%2A> methods. You must write to the stream and close the stream before sending the request.","pos":[0,460],"nodes":[{"content":"When using an <ph id=\"ph1\">&lt;xref:System.Net.FtpWebRequest&gt;</ph> object to upload a file to a server, you must write the file content to the request stream obtained by calling the <ph id=\"ph2\">&lt;xref:System.Net.FtpWebRequest.GetRequestStream%2A&gt;</ph> method or its asynchronous counterparts, the <ph id=\"ph3\">&lt;xref:System.Net.FtpWebRequest.BeginGetRequestStream%2A&gt;</ph> and <ph id=\"ph4\">&lt;xref:System.Net.FtpWebRequest.EndGetRequestStream%2A&gt;</ph> methods.","pos":[0,382],"source":"When using an <xref:System.Net.FtpWebRequest> object to upload a file to a server, you must write the file content to the request stream obtained by calling the <xref:System.Net.FtpWebRequest.GetRequestStream%2A> method or its asynchronous counterparts, the <xref:System.Net.FtpWebRequest.BeginGetRequestStream%2A> and <xref:System.Net.FtpWebRequest.EndGetRequestStream%2A> methods."},{"content":"You must write to the stream and close the stream before sending the request.","pos":[383,460]}]}]},{"pos":[3054,3525],"content":"Requests are sent to the server by calling the <xref:System.Net.FtpWebRequest.GetResponse%2A> method or its asynchronous counterparts, the <xref:System.Net.FtpWebRequest.BeginGetResponse%2A> and <xref:System.Net.FtpWebRequest.EndGetResponse%2A> methods. When the requested operation completes, an <xref:System.Net.FtpWebResponse> object is returned. The <xref:System.Net.FtpWebResponse> object provides the status of the operation and any data downloaded from the server.","nodes":[{"content":"Requests are sent to the server by calling the <xref:System.Net.FtpWebRequest.GetResponse%2A> method or its asynchronous counterparts, the <xref:System.Net.FtpWebRequest.BeginGetResponse%2A> and <xref:System.Net.FtpWebRequest.EndGetResponse%2A> methods. When the requested operation completes, an <xref:System.Net.FtpWebResponse> object is returned. The <xref:System.Net.FtpWebResponse> object provides the status of the operation and any data downloaded from the server.","pos":[0,471],"nodes":[{"content":"Requests are sent to the server by calling the <ph id=\"ph1\">&lt;xref:System.Net.FtpWebRequest.GetResponse%2A&gt;</ph> method or its asynchronous counterparts, the <ph id=\"ph2\">&lt;xref:System.Net.FtpWebRequest.BeginGetResponse%2A&gt;</ph> and <ph id=\"ph3\">&lt;xref:System.Net.FtpWebRequest.EndGetResponse%2A&gt;</ph> methods.","pos":[0,253],"source":"Requests are sent to the server by calling the <xref:System.Net.FtpWebRequest.GetResponse%2A> method or its asynchronous counterparts, the <xref:System.Net.FtpWebRequest.BeginGetResponse%2A> and <xref:System.Net.FtpWebRequest.EndGetResponse%2A> methods."},{"content":"When the requested operation completes, an <ph id=\"ph1\">&lt;xref:System.Net.FtpWebResponse&gt;</ph> object is returned.","pos":[254,349],"source":" When the requested operation completes, an <xref:System.Net.FtpWebResponse> object is returned."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Net.FtpWebResponse&gt;</ph> object provides the status of the operation and any data downloaded from the server.","pos":[350,471],"source":" The <xref:System.Net.FtpWebResponse> object provides the status of the operation and any data downloaded from the server."}]}]},{"pos":[3532,3862],"content":"You can set a time-out value for reading or writing to the server by using the <xref:System.Net.FtpWebRequest.ReadWriteTimeout%2A> property. If the time-out period is exceeded, the calling method throws a <xref:System.Net.WebException> with <xref:System.Net.WebExceptionStatus> set to <xref:System.Net.WebExceptionStatus.Timeout>.","nodes":[{"content":"You can set a time-out value for reading or writing to the server by using the <xref:System.Net.FtpWebRequest.ReadWriteTimeout%2A> property. If the time-out period is exceeded, the calling method throws a <xref:System.Net.WebException> with <xref:System.Net.WebExceptionStatus> set to <xref:System.Net.WebExceptionStatus.Timeout>.","pos":[0,330],"nodes":[{"content":"You can set a time-out value for reading or writing to the server by using the <ph id=\"ph1\">&lt;xref:System.Net.FtpWebRequest.ReadWriteTimeout%2A&gt;</ph> property.","pos":[0,140],"source":"You can set a time-out value for reading or writing to the server by using the <xref:System.Net.FtpWebRequest.ReadWriteTimeout%2A> property."},{"content":"If the time-out period is exceeded, the calling method throws a <ph id=\"ph1\">&lt;xref:System.Net.WebException&gt;</ph> with <ph id=\"ph2\">&lt;xref:System.Net.WebExceptionStatus&gt;</ph> set to <ph id=\"ph3\">&lt;xref:System.Net.WebExceptionStatus.Timeout&gt;</ph>.","pos":[141,330],"source":" If the time-out period is exceeded, the calling method throws a <xref:System.Net.WebException> with <xref:System.Net.WebExceptionStatus> set to <xref:System.Net.WebExceptionStatus.Timeout>."}]}]},{"pos":[3869,4189],"content":"When downloading a file from an FTP server, if the command was successful, the contents of the requested file are available in the response object's stream. You can access this stream by calling the <xref:System.Net.FtpWebResponse.GetResponseStream%2A> method. For more information, see <xref:System.Net.FtpWebResponse>.","nodes":[{"content":"When downloading a file from an FTP server, if the command was successful, the contents of the requested file are available in the response object's stream. You can access this stream by calling the <xref:System.Net.FtpWebResponse.GetResponseStream%2A> method. For more information, see <xref:System.Net.FtpWebResponse>.","pos":[0,320],"nodes":[{"content":"When downloading a file from an FTP server, if the command was successful, the contents of the requested file are available in the response object's stream.","pos":[0,156]},{"content":"You can access this stream by calling the <ph id=\"ph1\">&lt;xref:System.Net.FtpWebResponse.GetResponseStream%2A&gt;</ph> method.","pos":[157,260],"source":" You can access this stream by calling the <xref:System.Net.FtpWebResponse.GetResponseStream%2A> method."},{"content":"For more information, see <ph id=\"ph1\">&lt;xref:System.Net.FtpWebResponse&gt;</ph>.","pos":[261,320],"source":" For more information, see <xref:System.Net.FtpWebResponse>."}]}]},{"pos":[4196,4625],"content":"If the <xref:System.Net.FtpWebRequest.Proxy%2A> property is set, either directly or in a configuration file, communications with the FTP server are made through the specified proxy. If the specified proxy is an HTTP proxy, only the <xref:System.Net.WebRequestMethods.Ftp.DownloadFile>, <xref:System.Net.WebRequestMethods.Ftp.ListDirectory>, and <xref:System.Net.WebRequestMethods.Ftp.ListDirectoryDetails> commands are supported.","nodes":[{"content":"If the <xref:System.Net.FtpWebRequest.Proxy%2A> property is set, either directly or in a configuration file, communications with the FTP server are made through the specified proxy. If the specified proxy is an HTTP proxy, only the <xref:System.Net.WebRequestMethods.Ftp.DownloadFile>, <xref:System.Net.WebRequestMethods.Ftp.ListDirectory>, and <xref:System.Net.WebRequestMethods.Ftp.ListDirectoryDetails> commands are supported.","pos":[0,429],"nodes":[{"content":"If the <ph id=\"ph1\">&lt;xref:System.Net.FtpWebRequest.Proxy%2A&gt;</ph> property is set, either directly or in a configuration file, communications with the FTP server are made through the specified proxy.","pos":[0,181],"source":"If the <xref:System.Net.FtpWebRequest.Proxy%2A> property is set, either directly or in a configuration file, communications with the FTP server are made through the specified proxy."},{"content":"If the specified proxy is an HTTP proxy, only the <ph id=\"ph1\">&lt;xref:System.Net.WebRequestMethods.Ftp.DownloadFile&gt;</ph>, <ph id=\"ph2\">&lt;xref:System.Net.WebRequestMethods.Ftp.ListDirectory&gt;</ph>, and <ph id=\"ph3\">&lt;xref:System.Net.WebRequestMethods.Ftp.ListDirectoryDetails&gt;</ph> commands are supported.","pos":[182,429],"source":" If the specified proxy is an HTTP proxy, only the <xref:System.Net.WebRequestMethods.Ftp.DownloadFile>, <xref:System.Net.WebRequestMethods.Ftp.ListDirectory>, and <xref:System.Net.WebRequestMethods.Ftp.ListDirectoryDetails> commands are supported."}]}]},{"pos":[4632,4848],"content":"Only downloaded binary content is cached; that is, content received using the <ph id=\"ph1\">&lt;xref:System.Net.WebRequestMethods.Ftp.DownloadFile&gt;</ph> command with the <ph id=\"ph2\">&lt;xref:System.Net.FtpWebRequest.UseBinary%2A&gt;</ph> property set to <ph id=\"ph3\">`true`</ph>.","source":"Only downloaded binary content is cached; that is, content received using the <xref:System.Net.WebRequestMethods.Ftp.DownloadFile> command with the <xref:System.Net.FtpWebRequest.UseBinary%2A> property set to `true`."},{"pos":[4855,4937],"content":"Multiple <xref:System.Net.FtpWebRequest>s reuse existing connections, if possible.","nodes":[{"content":"Multiple <ph id=\"ph1\">&lt;xref:System.Net.FtpWebRequest&gt;</ph>s reuse existing connections, if possible.","pos":[0,82],"source":"Multiple <xref:System.Net.FtpWebRequest>s reuse existing connections, if possible."}]},{"pos":[4944,5106],"content":"For more information about the FTP protocol, see RFC 959, \"File Transfer Protocol,\" available at <bpt id=\"p1\">[</bpt>http://www.rfc-editor.org/<ept id=\"p1\">](http://www.ietf.org/rfc/rfc959.txt)</ept>.","source":"For more information about the FTP protocol, see RFC 959, \"File Transfer Protocol,\" available at [http://www.rfc-editor.org/](http://www.ietf.org/rfc/rfc959.txt)."}],"pos":[1727,6871],"yaml":true,"extradata":"MT"},{"content":"Terminates an asynchronous FTP operation.","nodes":[{"pos":[0,41],"content":"Terminates an asynchronous FTP operation.","nodes":[{"content":"Terminates an asynchronous FTP operation.","pos":[0,41]}]}],"pos":[10421,10463],"yaml":true},{"content":"If there is no operation in progress, this method does nothing. If a file transfer is in progress, this method terminates the transfer.  \n  \n> [!NOTE]\n>  This member outputs trace information when you enable network tracing in your application. For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).","nodes":[{"pos":[0,135],"content":"If there is no operation in progress, this method does nothing. If a file transfer is in progress, this method terminates the transfer.","nodes":[{"content":"If there is no operation in progress, this method does nothing. If a file transfer is in progress, this method terminates the transfer.","pos":[0,135],"nodes":[{"content":"If there is no operation in progress, this method does nothing.","pos":[0,63]},{"content":"If a file transfer is in progress, this method terminates the transfer.","pos":[64,135]}]}]},{"pos":[143,368],"content":"[!NOTE]\n This member outputs trace information when you enable network tracing in your application. For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).","leadings":["","> "],"nodes":[{"content":" This member outputs trace information when you enable network tracing in your application. For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).","pos":[8,223],"nodes":[{"content":"This member outputs trace information when you enable network tracing in your application.","pos":[1,91]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Network Tracing in the .NET Framework<ept id=\"p1\">](~/docs/framework/network-programming/network-tracing.md)</ept>.","pos":[92,215],"source":" For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md)."}]}]}],"pos":[10474,10848],"yaml":true,"extradata":"MT"},{"content":"Begins asynchronously opening a request's content stream for writing.","nodes":[{"pos":[0,69],"content":"Begins asynchronously opening a request's content stream for writing.","nodes":[{"content":"Begins asynchronously opening a request's content stream for writing.","pos":[0,69]}]}],"pos":[12649,12719],"yaml":true},{"content":"You must complete the asynchronous operation by calling the <xref:System.Net.FtpWebRequest.EndGetRequestStream%2A> method. Typically, <xref:System.Net.FtpWebRequest.EndGetRequestStream%2A> is called by the method referenced by `callback`. To determine the state of the operation, check the properties in the <xref:System.IAsyncResult> object returned by this method.  \n  \n This method does not block while waiting for the stream. To block, call <xref:System.Net.FtpWebRequest.GetRequestStream%2A> in place of this method.  \n  \n For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).  \n  \n> [!NOTE]\n>  This member outputs trace information when you enable network tracing in your application. For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).","nodes":[{"pos":[0,366],"content":"You must complete the asynchronous operation by calling the <xref:System.Net.FtpWebRequest.EndGetRequestStream%2A> method. Typically, <xref:System.Net.FtpWebRequest.EndGetRequestStream%2A> is called by the method referenced by `callback`. To determine the state of the operation, check the properties in the <xref:System.IAsyncResult> object returned by this method.","nodes":[{"content":"You must complete the asynchronous operation by calling the <ph id=\"ph1\">&lt;xref:System.Net.FtpWebRequest.EndGetRequestStream%2A&gt;</ph> method.","pos":[0,122],"source":"You must complete the asynchronous operation by calling the <xref:System.Net.FtpWebRequest.EndGetRequestStream%2A> method."},{"content":"Typically, <ph id=\"ph1\">&lt;xref:System.Net.FtpWebRequest.EndGetRequestStream%2A&gt;</ph> is called by the method referenced by <ph id=\"ph2\">`callback`</ph>.","pos":[123,238],"source":" Typically, <xref:System.Net.FtpWebRequest.EndGetRequestStream%2A> is called by the method referenced by `callback`."},{"content":"To determine the state of the operation, check the properties in the <ph id=\"ph1\">&lt;xref:System.IAsyncResult&gt;</ph> object returned by this method.","pos":[239,366],"source":" To determine the state of the operation, check the properties in the <xref:System.IAsyncResult> object returned by this method."}]},{"pos":[373,521],"content":"This method does not block while waiting for the stream. To block, call <xref:System.Net.FtpWebRequest.GetRequestStream%2A> in place of this method.","nodes":[{"content":"This method does not block while waiting for the stream. To block, call <xref:System.Net.FtpWebRequest.GetRequestStream%2A> in place of this method.","pos":[0,148],"nodes":[{"content":"This method does not block while waiting for the stream.","pos":[0,56]},{"content":"To block, call <ph id=\"ph1\">&lt;xref:System.Net.FtpWebRequest.GetRequestStream%2A&gt;</ph> in place of this method.","pos":[57,148],"source":" To block, call <xref:System.Net.FtpWebRequest.GetRequestStream%2A> in place of this method."}]}]},{"pos":[528,747],"content":"For detailed information about using the asynchronous programming model, see <bpt id=\"p1\">[</bpt>Calling Synchronous Methods Asynchronously<ept id=\"p1\">](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</ept>.","source":"For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)."},{"pos":[755,980],"content":"[!NOTE]\n This member outputs trace information when you enable network tracing in your application. For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).","leadings":["","> "],"nodes":[{"content":" This member outputs trace information when you enable network tracing in your application. For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).","pos":[8,223],"nodes":[{"content":"This member outputs trace information when you enable network tracing in your application.","pos":[1,91]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Network Tracing in the .NET Framework<ept id=\"p1\">](~/docs/framework/network-programming/network-tracing.md)</ept>.","pos":[92,215],"source":" For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md)."}]}]}],"pos":[12730,13720],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.AsyncCallback\"></xref> delegate that references the method to invoke when the operation is complete.","nodes":[{"pos":[0,122],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.AsyncCallback\"&gt;&lt;/xref&gt;</ph> delegate that references the method to invoke when the operation is complete.","source":"An <xref href=\"System.AsyncCallback\"></xref> delegate that references the method to invoke when the operation is complete."}],"pos":[14366,14489],"yaml":true},{"content":"A user-defined object that contains information about the operation. This object is passed to the <code>callback</code> delegate when the operation completes.","nodes":[{"pos":[0,158],"content":"A user-defined object that contains information about the operation. This object is passed to the <code>callback</code> delegate when the operation completes.","nodes":[{"content":"A user-defined object that contains information about the operation.","pos":[0,68]},{"content":"This object is passed to the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">callback</ph><ept id=\"p1\">&lt;/code&gt;</ept> delegate when the operation completes.","pos":[69,158],"source":" This object is passed to the <code>callback</code> delegate when the operation completes."}]}],"pos":[14550,14709],"yaml":true},{"content":"An <xref href=\"System.IAsyncResult\"></xref> instance that indicates the status of the operation.","nodes":[{"pos":[0,96],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.IAsyncResult\"&gt;&lt;/xref&gt;</ph> instance that indicates the status of the operation.","source":"An <xref href=\"System.IAsyncResult\"></xref> instance that indicates the status of the operation."}],"pos":[14772,14869],"yaml":true},{"content":"A previous call to this method or <xref href=\"System.Net.FtpWebRequest.GetRequestStream\"></xref> has not yet completed.","nodes":[{"pos":[0,119],"content":"A previous call to this method or <ph id=\"ph1\">&lt;xref href=\"System.Net.FtpWebRequest.GetRequestStream\"&gt;&lt;/xref&gt;</ph> has not yet completed.","source":"A previous call to this method or <xref href=\"System.Net.FtpWebRequest.GetRequestStream\"></xref> has not yet completed."}],"pos":[15053,15173],"yaml":true},{"content":"A connection to the FTP server could not be established.","nodes":[{"pos":[0,56],"content":"A connection to the FTP server could not be established.","nodes":[{"content":"A connection to the FTP server could not be established.","pos":[0,56]}]}],"pos":[15265,15322],"yaml":true},{"content":"The <xref href=\"System.Net.FtpWebRequest.Method\"></xref> property is not set to <xref href=\"System.Net.WebRequestMethods.Ftp.UploadFile\"></xref>.","nodes":[{"pos":[0,145],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Net.FtpWebRequest.Method\"&gt;&lt;/xref&gt;</ph> property is not set to <ph id=\"ph2\">&lt;xref href=\"System.Net.WebRequestMethods.Ftp.UploadFile\"&gt;&lt;/xref&gt;</ph>.","source":"The <xref href=\"System.Net.FtpWebRequest.Method\"></xref> property is not set to <xref href=\"System.Net.WebRequestMethods.Ftp.UploadFile\"></xref>."}],"pos":[15442,15588],"yaml":true},{"content":"Begins sending a request and receiving a response from an FTP server asynchronously.","nodes":[{"pos":[0,84],"content":"Begins sending a request and receiving a response from an FTP server asynchronously.","nodes":[{"content":"Begins sending a request and receiving a response from an FTP server asynchronously.","pos":[0,84]}]}],"pos":[16840,16925],"yaml":true},{"content":"You must complete the asynchronous operation by calling the <xref:System.Net.FtpWebRequest.EndGetResponse%2A> method. Typically, <xref:System.Net.FtpWebRequest.EndGetResponse%2A> is called by the method referenced by `callback`. To determine the state of the operation, check the properties in the <xref:System.IAsyncResult> object returned by the <xref:System.Net.FtpWebRequest.BeginGetResponse%2A> method.  \n  \n If the <xref:System.Net.FtpWebRequest.Proxy%2A> property is set, either directly or in a configuration file, communications with the FTP server are made through the specified proxy.  \n  \n <xref:System.Net.FtpWebRequest.BeginGetResponse%2A> does not block while waiting for the response from the server. To block, call the <xref:System.Net.FtpWebRequest.GetResponse%2A> method in place of <xref:System.Net.FtpWebRequest.BeginGetResponse%2A>.  \n  \n For more information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).  \n  \n This member outputs trace information when you enable network tracing in your application. For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).  \n  \n> [!NOTE]\n>  If a <xref:System.Net.WebException> is thrown, use the <xref:System.Net.WebException.Response%2A> and <xref:System.Net.WebException.Status%2A> properties of the exception to determine the response from the server.","nodes":[{"pos":[0,407],"content":"You must complete the asynchronous operation by calling the <xref:System.Net.FtpWebRequest.EndGetResponse%2A> method. Typically, <xref:System.Net.FtpWebRequest.EndGetResponse%2A> is called by the method referenced by `callback`. To determine the state of the operation, check the properties in the <xref:System.IAsyncResult> object returned by the <xref:System.Net.FtpWebRequest.BeginGetResponse%2A> method.","nodes":[{"content":"You must complete the asynchronous operation by calling the <ph id=\"ph1\">&lt;xref:System.Net.FtpWebRequest.EndGetResponse%2A&gt;</ph> method.","pos":[0,117],"source":"You must complete the asynchronous operation by calling the <xref:System.Net.FtpWebRequest.EndGetResponse%2A> method."},{"content":"Typically, <ph id=\"ph1\">&lt;xref:System.Net.FtpWebRequest.EndGetResponse%2A&gt;</ph> is called by the method referenced by <ph id=\"ph2\">`callback`</ph>.","pos":[118,228],"source":" Typically, <xref:System.Net.FtpWebRequest.EndGetResponse%2A> is called by the method referenced by `callback`."},{"content":"To determine the state of the operation, check the properties in the <ph id=\"ph1\">&lt;xref:System.IAsyncResult&gt;</ph> object returned by the <ph id=\"ph2\">&lt;xref:System.Net.FtpWebRequest.BeginGetResponse%2A&gt;</ph> method.","pos":[229,407],"source":" To determine the state of the operation, check the properties in the <xref:System.IAsyncResult> object returned by the <xref:System.Net.FtpWebRequest.BeginGetResponse%2A> method."}]},{"pos":[414,595],"content":"If the <xref:System.Net.FtpWebRequest.Proxy%2A> property is set, either directly or in a configuration file, communications with the FTP server are made through the specified proxy.","nodes":[{"content":"If the <ph id=\"ph1\">&lt;xref:System.Net.FtpWebRequest.Proxy%2A&gt;</ph> property is set, either directly or in a configuration file, communications with the FTP server are made through the specified proxy.","pos":[0,181],"source":"If the <xref:System.Net.FtpWebRequest.Proxy%2A> property is set, either directly or in a configuration file, communications with the FTP server are made through the specified proxy."}]},{"pos":[602,854],"content":"<xref:System.Net.FtpWebRequest.BeginGetResponse%2A> does not block while waiting for the response from the server. To block, call the <xref:System.Net.FtpWebRequest.GetResponse%2A> method in place of <xref:System.Net.FtpWebRequest.BeginGetResponse%2A>.","nodes":[{"content":"<xref:System.Net.FtpWebRequest.BeginGetResponse%2A> does not block while waiting for the response from the server. To block, call the <xref:System.Net.FtpWebRequest.GetResponse%2A> method in place of <xref:System.Net.FtpWebRequest.BeginGetResponse%2A>.","pos":[0,252],"nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Net.FtpWebRequest.BeginGetResponse%2A&gt;</ph> does not block while waiting for the response from the server.","pos":[0,114],"source":"<xref:System.Net.FtpWebRequest.BeginGetResponse%2A> does not block while waiting for the response from the server."},{"content":"To block, call the <ph id=\"ph1\">&lt;xref:System.Net.FtpWebRequest.GetResponse%2A&gt;</ph> method in place of <ph id=\"ph2\">&lt;xref:System.Net.FtpWebRequest.BeginGetResponse%2A&gt;</ph>.","pos":[115,252],"source":" To block, call the <xref:System.Net.FtpWebRequest.GetResponse%2A> method in place of <xref:System.Net.FtpWebRequest.BeginGetResponse%2A>."}]}]},{"pos":[861,1076],"content":"For more information about using the asynchronous programming model, see <bpt id=\"p1\">[</bpt>Calling Synchronous Methods Asynchronously<ept id=\"p1\">](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</ept>.","source":"For more information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)."},{"pos":[1083,1297],"content":"This member outputs trace information when you enable network tracing in your application. For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).","nodes":[{"content":"This member outputs trace information when you enable network tracing in your application.","pos":[0,90]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Network Tracing in the .NET Framework<ept id=\"p1\">](~/docs/framework/network-programming/network-tracing.md)</ept>.","pos":[91,214],"source":" For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md)."}]},{"pos":[1305,1529],"content":"[!NOTE]\n If a <xref:System.Net.WebException> is thrown, use the <xref:System.Net.WebException.Response%2A> and <xref:System.Net.WebException.Status%2A> properties of the exception to determine the response from the server.","leadings":["","> "],"nodes":[{"content":"If a <ph id=\"ph1\">&lt;xref:System.Net.WebException&gt;</ph> is thrown, use the <ph id=\"ph2\">&lt;xref:System.Net.WebException.Response%2A&gt;</ph> and <ph id=\"ph3\">&lt;xref:System.Net.WebException.Status%2A&gt;</ph> properties of the exception to determine the response from the server.","pos":[9,222],"source":" If a <xref:System.Net.WebException> is thrown, use the <xref:System.Net.WebException.Response%2A> and <xref:System.Net.WebException.Status%2A> properties of the exception to determine the response from the server."}]}],"pos":[16936,18479],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.AsyncCallback\"></xref> delegate that references the method to invoke when the operation is complete.","nodes":[{"pos":[0,122],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.AsyncCallback\"&gt;&lt;/xref&gt;</ph> delegate that references the method to invoke when the operation is complete.","source":"An <xref href=\"System.AsyncCallback\"></xref> delegate that references the method to invoke when the operation is complete."}],"pos":[19166,19289],"yaml":true},{"content":"A user-defined object that contains information about the operation. This object is passed to the <code>callback</code> delegate when the operation completes.","nodes":[{"pos":[0,158],"content":"A user-defined object that contains information about the operation. This object is passed to the <code>callback</code> delegate when the operation completes.","nodes":[{"content":"A user-defined object that contains information about the operation.","pos":[0,68]},{"content":"This object is passed to the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">callback</ph><ept id=\"p1\">&lt;/code&gt;</ept> delegate when the operation completes.","pos":[69,158],"source":" This object is passed to the <code>callback</code> delegate when the operation completes."}]}],"pos":[19350,19509],"yaml":true},{"content":"An <xref href=\"System.IAsyncResult\"></xref> instance that indicates the status of the operation.","nodes":[{"pos":[0,96],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.IAsyncResult\"&gt;&lt;/xref&gt;</ph> instance that indicates the status of the operation.","source":"An <xref href=\"System.IAsyncResult\"></xref> instance that indicates the status of the operation."}],"pos":[19572,19669],"yaml":true},{"content":"<xref href=\"System.Net.FtpWebRequest.GetResponse\"></xref> or <xref href=\"System.Net.FtpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)\"></xref> has already been called for this instance.","nodes":[{"pos":[0,202],"content":"<ph id=\"ph1\">&lt;xref href=\"System.Net.FtpWebRequest.GetResponse\"&gt;&lt;/xref&gt;</ph> or <ph id=\"ph2\">&lt;xref href=\"System.Net.FtpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)\"&gt;&lt;/xref&gt;</ph> has already been called for this instance.","source":"<xref href=\"System.Net.FtpWebRequest.GetResponse\"></xref> or <xref href=\"System.Net.FtpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)\"></xref> has already been called for this instance."}],"pos":[19848,20051],"yaml":true},{"content":"Gets or sets the certificates used for establishing an encrypted connection to the FTP server.","nodes":[{"pos":[0,94],"content":"Gets or sets the certificates used for establishing an encrypted connection to the FTP server.","nodes":[{"content":"Gets or sets the certificates used for establishing an encrypted connection to the FTP server.","pos":[0,94]}]}],"pos":[21140,21235],"yaml":true},{"content":"Client certificates are used to authenticate the client during the initial SSL connection negotiation. For more information, see <xref:System.Net.FtpWebRequest.EnableSsl%2A>.  \n  \n> [!NOTE]\n>  The .NET Framework caches SSL sessions as they are created and attempts to reuse a cached session for a new request, if possible. When attempting to reuse an SSL session, the .NET Framework uses the first element of <xref:System.Net.HttpWebRequest.ClientCertificates%2A> (if there is one), or tries to reuse an anonymous session if <xref:System.Net.HttpWebRequest.ClientCertificates%2A> is empty.","nodes":[{"pos":[0,174],"content":"Client certificates are used to authenticate the client during the initial SSL connection negotiation. For more information, see <xref:System.Net.FtpWebRequest.EnableSsl%2A>.","nodes":[{"content":"Client certificates are used to authenticate the client during the initial SSL connection negotiation. For more information, see <xref:System.Net.FtpWebRequest.EnableSsl%2A>.","pos":[0,174],"nodes":[{"content":"Client certificates are used to authenticate the client during the initial SSL connection negotiation.","pos":[0,102]},{"content":"For more information, see <ph id=\"ph1\">&lt;xref:System.Net.FtpWebRequest.EnableSsl%2A&gt;</ph>.","pos":[103,174],"source":" For more information, see <xref:System.Net.FtpWebRequest.EnableSsl%2A>."}]}]},{"pos":[182,589],"content":"[!NOTE]\n The .NET Framework caches SSL sessions as they are created and attempts to reuse a cached session for a new request, if possible. When attempting to reuse an SSL session, the .NET Framework uses the first element of <xref:System.Net.HttpWebRequest.ClientCertificates%2A> (if there is one), or tries to reuse an anonymous session if <xref:System.Net.HttpWebRequest.ClientCertificates%2A> is empty.","leadings":["","> "],"nodes":[{"content":" The .NET Framework caches SSL sessions as they are created and attempts to reuse a cached session for a new request, if possible. When attempting to reuse an SSL session, the .NET Framework uses the first element of <xref:System.Net.HttpWebRequest.ClientCertificates%2A> (if there is one), or tries to reuse an anonymous session if <xref:System.Net.HttpWebRequest.ClientCertificates%2A> is empty.","pos":[8,405],"nodes":[{"content":"The .NET Framework caches SSL sessions as they are created and attempts to reuse a cached session for a new request, if possible.","pos":[1,130]},{"content":"When attempting to reuse an SSL session, the .NET Framework uses the first element of <ph id=\"ph1\">&lt;xref:System.Net.HttpWebRequest.ClientCertificates%2A&gt;</ph> (if there is one), or tries to reuse an anonymous session if <ph id=\"ph2\">&lt;xref:System.Net.HttpWebRequest.ClientCertificates%2A&gt;</ph> is empty.","pos":[131,397],"source":" When attempting to reuse an SSL session, the .NET Framework uses the first element of <xref:System.Net.HttpWebRequest.ClientCertificates%2A> (if there is one), or tries to reuse an anonymous session if <xref:System.Net.HttpWebRequest.ClientCertificates%2A> is empty."}]}]}],"pos":[21246,21841],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.Security.Cryptography.X509Certificates.X509CertificateCollection\"></xref> object that contains the client certificates.","nodes":[{"pos":[0,141],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.X509Certificates.X509CertificateCollection\"&gt;&lt;/xref&gt;</ph> object that contains the client certificates.","source":"An <xref href=\"System.Security.Cryptography.X509Certificates.X509CertificateCollection\"></xref> object that contains the client certificates."}],"pos":[22125,22267],"yaml":true},{"content":"The value specified for a set operation is `null`.","nodes":[{"pos":[0,50],"content":"The value specified for a set operation is <ph id=\"ph1\">`null`</ph>.","source":"The value specified for a set operation is `null`."}],"pos":[22440,22491],"yaml":true},{"content":"Gets or sets the name of the connection group that contains the service point used to send the current request.","nodes":[{"pos":[0,111],"content":"Gets or sets the name of the connection group that contains the service point used to send the current request.","nodes":[{"content":"Gets or sets the name of the connection group that contains the service point used to send the current request.","pos":[0,111]}]}],"pos":[23626,23738],"yaml":true},{"content":"Connection groups associate a set of requests with a particular connection or set of connections. The connections in a connection group can be reused only by requests originating in the same application domain, when the credentials on the request are the same and the request specifies the connection group name. When a request does not specify a connection group name, any existing connection to the requested server that is not associated with a connection group can be used. When the credentials are not the same, the existing connection is closed and the new request must be reauthenticated.  \n  \n Using connection groups can improve performance because this allows all of the requests for a user to reuse the connection authenticated with the user's credentials.  \n  \n Changing the <xref:System.Net.FtpWebRequest.ConnectionGroupName%2A> property after calling the <xref:System.Net.FtpWebRequest.GetRequestStream%2A>, <xref:System.Net.FtpWebRequest.BeginGetRequestStream%2A>, <xref:System.Net.FtpWebRequest.GetResponse%2A>, or <xref:System.Net.FtpWebRequest.BeginGetResponse%2A> method causes an <xref:System.InvalidOperationException> exception.","nodes":[{"pos":[0,595],"content":"Connection groups associate a set of requests with a particular connection or set of connections. The connections in a connection group can be reused only by requests originating in the same application domain, when the credentials on the request are the same and the request specifies the connection group name. When a request does not specify a connection group name, any existing connection to the requested server that is not associated with a connection group can be used. When the credentials are not the same, the existing connection is closed and the new request must be reauthenticated.","nodes":[{"content":"Connection groups associate a set of requests with a particular connection or set of connections. The connections in a connection group can be reused only by requests originating in the same application domain, when the credentials on the request are the same and the request specifies the connection group name. When a request does not specify a connection group name, any existing connection to the requested server that is not associated with a connection group can be used. When the credentials are not the same, the existing connection is closed and the new request must be reauthenticated.","pos":[0,595],"nodes":[{"content":"Connection groups associate a set of requests with a particular connection or set of connections.","pos":[0,97]},{"content":"The connections in a connection group can be reused only by requests originating in the same application domain, when the credentials on the request are the same and the request specifies the connection group name.","pos":[98,312]},{"content":"When a request does not specify a connection group name, any existing connection to the requested server that is not associated with a connection group can be used.","pos":[313,477]},{"content":"When the credentials are not the same, the existing connection is closed and the new request must be reauthenticated.","pos":[478,595]}]}]},{"pos":[602,767],"content":"Using connection groups can improve performance because this allows all of the requests for a user to reuse the connection authenticated with the user's credentials.","nodes":[{"content":"Using connection groups can improve performance because this allows all of the requests for a user to reuse the connection authenticated with the user's credentials.","pos":[0,165]}]},{"pos":[774,1150],"content":"Changing the <xref:System.Net.FtpWebRequest.ConnectionGroupName%2A> property after calling the <xref:System.Net.FtpWebRequest.GetRequestStream%2A>, <xref:System.Net.FtpWebRequest.BeginGetRequestStream%2A>, <xref:System.Net.FtpWebRequest.GetResponse%2A>, or <xref:System.Net.FtpWebRequest.BeginGetResponse%2A> method causes an <xref:System.InvalidOperationException> exception.","nodes":[{"content":"Changing the <ph id=\"ph1\">&lt;xref:System.Net.FtpWebRequest.ConnectionGroupName%2A&gt;</ph> property after calling the <ph id=\"ph2\">&lt;xref:System.Net.FtpWebRequest.GetRequestStream%2A&gt;</ph>, <ph id=\"ph3\">&lt;xref:System.Net.FtpWebRequest.BeginGetRequestStream%2A&gt;</ph>, <ph id=\"ph4\">&lt;xref:System.Net.FtpWebRequest.GetResponse%2A&gt;</ph>, or <ph id=\"ph5\">&lt;xref:System.Net.FtpWebRequest.BeginGetResponse%2A&gt;</ph> method causes an <ph id=\"ph6\">&lt;xref:System.InvalidOperationException&gt;</ph> exception.","pos":[0,376],"source":"Changing the <xref:System.Net.FtpWebRequest.ConnectionGroupName%2A> property after calling the <xref:System.Net.FtpWebRequest.GetRequestStream%2A>, <xref:System.Net.FtpWebRequest.BeginGetRequestStream%2A>, <xref:System.Net.FtpWebRequest.GetResponse%2A>, or <xref:System.Net.FtpWebRequest.BeginGetResponse%2A> method causes an <xref:System.InvalidOperationException> exception."}]}],"pos":[23749,24906],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.String\"></xref> value that contains a connection group name.","nodes":[{"pos":[0,81],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.String\"&gt;&lt;/xref&gt;</ph> value that contains a connection group name.","source":"A <xref href=\"System.String\"></xref> value that contains a connection group name."}],"pos":[25387,25469],"yaml":true},{"content":"A new value was specified for this property for a request that is already in progress.","nodes":[{"pos":[0,86],"content":"A new value was specified for this property for a request that is already in progress.","nodes":[{"content":"A new value was specified for this property for a request that is already in progress.","pos":[0,86]}]}],"pos":[25651,25738],"yaml":true},{"content":"Gets or sets a value that is ignored by the <xref href=\"System.Net.FtpWebRequest\"></xref> class.","nodes":[{"pos":[0,96],"content":"Gets or sets a value that is ignored by the <ph id=\"ph1\">&lt;xref href=\"System.Net.FtpWebRequest\"&gt;&lt;/xref&gt;</ph> class.","source":"Gets or sets a value that is ignored by the <xref href=\"System.Net.FtpWebRequest\"></xref> class."}],"pos":[26837,26934],"yaml":true},{"content":"The <xref:System.Net.FtpWebRequest.ContentLength%2A> property is provided only for compatibility with other implementations of the <xref:System.Net.WebRequest> and <xref:System.Net.WebResponse> classes. There is no reason to use <xref:System.Net.FtpWebRequest.ContentLength%2A>.","nodes":[{"pos":[0,278],"content":"The <xref:System.Net.FtpWebRequest.ContentLength%2A> property is provided only for compatibility with other implementations of the <xref:System.Net.WebRequest> and <xref:System.Net.WebResponse> classes. There is no reason to use <xref:System.Net.FtpWebRequest.ContentLength%2A>.","nodes":[{"content":"The <xref:System.Net.FtpWebRequest.ContentLength%2A> property is provided only for compatibility with other implementations of the <xref:System.Net.WebRequest> and <xref:System.Net.WebResponse> classes. There is no reason to use <xref:System.Net.FtpWebRequest.ContentLength%2A>.","pos":[0,278],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Net.FtpWebRequest.ContentLength%2A&gt;</ph> property is provided only for compatibility with other implementations of the <ph id=\"ph2\">&lt;xref:System.Net.WebRequest&gt;</ph> and <ph id=\"ph3\">&lt;xref:System.Net.WebResponse&gt;</ph> classes.","pos":[0,202],"source":"The <xref:System.Net.FtpWebRequest.ContentLength%2A> property is provided only for compatibility with other implementations of the <xref:System.Net.WebRequest> and <xref:System.Net.WebResponse> classes."},{"content":"There is no reason to use <ph id=\"ph1\">&lt;xref:System.Net.FtpWebRequest.ContentLength%2A&gt;</ph>.","pos":[203,278],"source":" There is no reason to use <xref:System.Net.FtpWebRequest.ContentLength%2A>."}]}]}],"pos":[26945,27224],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.Int64\"></xref> value that should be ignored.","nodes":[{"pos":[0,66],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Int64\"&gt;&lt;/xref&gt;</ph> value that should be ignored.","source":"An <xref href=\"System.Int64\"></xref> value that should be ignored."}],"pos":[27352,27419],"yaml":true},{"content":"Gets or sets a byte offset into the file being downloaded by this request.","nodes":[{"pos":[0,74],"content":"Gets or sets a byte offset into the file being downloaded by this request.","nodes":[{"content":"Gets or sets a byte offset into the file being downloaded by this request.","pos":[0,74]}]}],"pos":[28547,28622],"yaml":true},{"content":"Set the <xref:System.Net.FtpWebRequest.ContentOffset%2A> property when downloading a file from an FTP server. This offset indicates the position in the server's file that marks the start of the data to be downloaded. The offset is specified as the number of bytes from the start of the file; the offset of the first byte is zero.  \n  \n Setting <xref:System.Net.FtpWebRequest.ContentOffset%2A> causes the <xref:System.Net.FtpWebRequest> to send a restart (`REST`) command to the server. This command is ignored by most FTP server implementations if you are uploading data to the server.  \n  \n Changing <xref:System.Net.FtpWebRequest.ContentOffset%2A> after calling the <xref:System.Net.FtpWebRequest.GetRequestStream%2A>, <xref:System.Net.FtpWebRequest.BeginGetRequestStream%2A>, <xref:System.Net.FtpWebRequest.GetResponse%2A>, or <xref:System.Net.FtpWebRequest.BeginGetResponse%2A> method causes an <xref:System.InvalidOperationException> exception.","nodes":[{"pos":[0,329],"content":"Set the <xref:System.Net.FtpWebRequest.ContentOffset%2A> property when downloading a file from an FTP server. This offset indicates the position in the server's file that marks the start of the data to be downloaded. The offset is specified as the number of bytes from the start of the file; the offset of the first byte is zero.","nodes":[{"content":"Set the <xref:System.Net.FtpWebRequest.ContentOffset%2A> property when downloading a file from an FTP server. This offset indicates the position in the server's file that marks the start of the data to be downloaded. The offset is specified as the number of bytes from the start of the file; the offset of the first byte is zero.","pos":[0,329],"nodes":[{"content":"Set the <ph id=\"ph1\">&lt;xref:System.Net.FtpWebRequest.ContentOffset%2A&gt;</ph> property when downloading a file from an FTP server.","pos":[0,109],"source":"Set the <xref:System.Net.FtpWebRequest.ContentOffset%2A> property when downloading a file from an FTP server."},{"content":"This offset indicates the position in the server's file that marks the start of the data to be downloaded.","pos":[110,216]},{"content":"The offset is specified as the number of bytes from the start of the file; the offset of the first byte is zero.","pos":[217,329]}]}]},{"pos":[336,585],"content":"Setting <xref:System.Net.FtpWebRequest.ContentOffset%2A> causes the <xref:System.Net.FtpWebRequest> to send a restart (`REST`) command to the server. This command is ignored by most FTP server implementations if you are uploading data to the server.","nodes":[{"content":"Setting <ph id=\"ph1\">&lt;xref:System.Net.FtpWebRequest.ContentOffset%2A&gt;</ph> causes the <ph id=\"ph2\">&lt;xref:System.Net.FtpWebRequest&gt;</ph> to send a restart (<ph id=\"ph3\">`REST`</ph>) command to the server.","pos":[0,149],"source":"Setting <xref:System.Net.FtpWebRequest.ContentOffset%2A> causes the <xref:System.Net.FtpWebRequest> to send a restart (`REST`) command to the server."},{"content":"This command is ignored by most FTP server implementations if you are uploading data to the server.","pos":[150,249]}]},{"pos":[592,949],"content":"Changing <xref:System.Net.FtpWebRequest.ContentOffset%2A> after calling the <xref:System.Net.FtpWebRequest.GetRequestStream%2A>, <xref:System.Net.FtpWebRequest.BeginGetRequestStream%2A>, <xref:System.Net.FtpWebRequest.GetResponse%2A>, or <xref:System.Net.FtpWebRequest.BeginGetResponse%2A> method causes an <xref:System.InvalidOperationException> exception.","nodes":[{"content":"Changing <ph id=\"ph1\">&lt;xref:System.Net.FtpWebRequest.ContentOffset%2A&gt;</ph> after calling the <ph id=\"ph2\">&lt;xref:System.Net.FtpWebRequest.GetRequestStream%2A&gt;</ph>, <ph id=\"ph3\">&lt;xref:System.Net.FtpWebRequest.BeginGetRequestStream%2A&gt;</ph>, <ph id=\"ph4\">&lt;xref:System.Net.FtpWebRequest.GetResponse%2A&gt;</ph>, or <ph id=\"ph5\">&lt;xref:System.Net.FtpWebRequest.BeginGetResponse%2A&gt;</ph> method causes an <ph id=\"ph6\">&lt;xref:System.InvalidOperationException&gt;</ph> exception.","pos":[0,357],"source":"Changing <xref:System.Net.FtpWebRequest.ContentOffset%2A> after calling the <xref:System.Net.FtpWebRequest.GetRequestStream%2A>, <xref:System.Net.FtpWebRequest.BeginGetRequestStream%2A>, <xref:System.Net.FtpWebRequest.GetResponse%2A>, or <xref:System.Net.FtpWebRequest.BeginGetResponse%2A> method causes an <xref:System.InvalidOperationException> exception."}]}],"pos":[28633,29589],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.Int64\"></xref> instance that specifies the file offset, in bytes. The default value is zero.","nodes":[{"pos":[0,114],"content":"An <xref href=\"System.Int64\"></xref> instance that specifies the file offset, in bytes. The default value is zero.","nodes":[{"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Int64\"&gt;&lt;/xref&gt;</ph> instance that specifies the file offset, in bytes.","pos":[0,87],"source":"An <xref href=\"System.Int64\"></xref> instance that specifies the file offset, in bytes."},{"content":"The default value is zero.","pos":[88,114]}]}],"pos":[30081,30196],"yaml":true},{"content":"A new value was specified for this property for a request that is already in progress.","nodes":[{"pos":[0,86],"content":"A new value was specified for this property for a request that is already in progress.","nodes":[{"content":"A new value was specified for this property for a request that is already in progress.","pos":[0,86]}]}],"pos":[30372,30459],"yaml":true},{"content":"The value specified for this property is less than zero.","nodes":[{"pos":[0,56],"content":"The value specified for this property is less than zero.","nodes":[{"content":"The value specified for this property is less than zero.","pos":[0,56]}]}],"pos":[30573,30630],"yaml":true},{"content":"Always throws a <xref href=\"System.NotSupportedException\"></xref>.","nodes":[{"pos":[0,66],"content":"Always throws a <ph id=\"ph1\">&lt;xref href=\"System.NotSupportedException\"&gt;&lt;/xref&gt;</ph>.","source":"Always throws a <xref href=\"System.NotSupportedException\"></xref>."}],"pos":[31677,31744],"yaml":true},{"content":"The <xref:System.Net.FtpWebRequest.ContentType%2A> property is provided only for compatibility with other implementations of the <xref:System.Net.WebRequest> and <xref:System.Net.WebResponse> classes. There is no reason to use <xref:System.Net.FtpWebRequest.ContentType%2A>.","nodes":[{"pos":[0,274],"content":"The <xref:System.Net.FtpWebRequest.ContentType%2A> property is provided only for compatibility with other implementations of the <xref:System.Net.WebRequest> and <xref:System.Net.WebResponse> classes. There is no reason to use <xref:System.Net.FtpWebRequest.ContentType%2A>.","nodes":[{"content":"The <xref:System.Net.FtpWebRequest.ContentType%2A> property is provided only for compatibility with other implementations of the <xref:System.Net.WebRequest> and <xref:System.Net.WebResponse> classes. There is no reason to use <xref:System.Net.FtpWebRequest.ContentType%2A>.","pos":[0,274],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Net.FtpWebRequest.ContentType%2A&gt;</ph> property is provided only for compatibility with other implementations of the <ph id=\"ph2\">&lt;xref:System.Net.WebRequest&gt;</ph> and <ph id=\"ph3\">&lt;xref:System.Net.WebResponse&gt;</ph> classes.","pos":[0,200],"source":"The <xref:System.Net.FtpWebRequest.ContentType%2A> property is provided only for compatibility with other implementations of the <xref:System.Net.WebRequest> and <xref:System.Net.WebResponse> classes."},{"content":"There is no reason to use <ph id=\"ph1\">&lt;xref:System.Net.FtpWebRequest.ContentType%2A&gt;</ph>.","pos":[201,274],"source":" There is no reason to use <xref:System.Net.FtpWebRequest.ContentType%2A>."}]}]}],"pos":[31755,32030],"yaml":true,"extradata":"MT"},{"content":"Always throws a <xref href=\"System.NotSupportedException\"></xref>.","nodes":[{"pos":[0,66],"content":"Always throws a <ph id=\"ph1\">&lt;xref href=\"System.NotSupportedException\"&gt;&lt;/xref&gt;</ph>.","source":"Always throws a <xref href=\"System.NotSupportedException\"></xref>."}],"pos":[32159,32226],"yaml":true},{"content":"Content type information is not supported for FTP.","nodes":[{"pos":[0,50],"content":"Content type information is not supported for FTP.","nodes":[{"content":"Content type information is not supported for FTP.","pos":[0,50]}]}],"pos":[32392,32443],"yaml":true},{"content":"Gets or sets the credentials used to communicate with the FTP server.","nodes":[{"pos":[0,69],"content":"Gets or sets the credentials used to communicate with the FTP server.","nodes":[{"content":"Gets or sets the credentials used to communicate with the FTP server.","pos":[0,69]}]}],"pos":[33490,33560],"yaml":true},{"content":"You are not required to specify credentials when connecting using anonymous logon. You must set the <xref:System.Net.FtpWebRequest.Credentials%2A> property by using a credential of type <xref:System.Net.NetworkCredential>; this ensures that the user name and password can be read and sent to the server.  \n  \n> [!CAUTION]\n>  Credentials information is not encrypted when transmitted to the server unless the <xref:System.Net.FtpWebRequest.EnableSsl%2A> property is set to `true`.  \n  \n Changing <xref:System.Net.FtpWebRequest.Credentials%2A> after calling the <xref:System.Net.FtpWebRequest.GetRequestStream%2A>, <xref:System.Net.FtpWebRequest.BeginGetRequestStream%2A>, <xref:System.Net.FtpWebRequest.GetResponse%2A>, or <xref:System.Net.FtpWebRequest.BeginGetResponse%2A> method causes an <xref:System.InvalidOperationException> exception.","nodes":[{"pos":[0,303],"content":"You are not required to specify credentials when connecting using anonymous logon. You must set the <xref:System.Net.FtpWebRequest.Credentials%2A> property by using a credential of type <xref:System.Net.NetworkCredential>; this ensures that the user name and password can be read and sent to the server.","nodes":[{"content":"You are not required to specify credentials when connecting using anonymous logon. You must set the <xref:System.Net.FtpWebRequest.Credentials%2A> property by using a credential of type <xref:System.Net.NetworkCredential>; this ensures that the user name and password can be read and sent to the server.","pos":[0,303],"nodes":[{"content":"You are not required to specify credentials when connecting using anonymous logon.","pos":[0,82]},{"content":"You must set the <ph id=\"ph1\">&lt;xref:System.Net.FtpWebRequest.Credentials%2A&gt;</ph> property by using a credential of type <ph id=\"ph2\">&lt;xref:System.Net.NetworkCredential&gt;</ph>; this ensures that the user name and password can be read and sent to the server.","pos":[83,303],"source":" You must set the <xref:System.Net.FtpWebRequest.Credentials%2A> property by using a credential of type <xref:System.Net.NetworkCredential>; this ensures that the user name and password can be read and sent to the server."}]}]},{"pos":[311,479],"content":"[!CAUTION]\n Credentials information is not encrypted when transmitted to the server unless the <xref:System.Net.FtpWebRequest.EnableSsl%2A> property is set to `true`.","leadings":["","> "],"nodes":[{"content":"Credentials information is not encrypted when transmitted to the server unless the <ph id=\"ph1\">&lt;xref:System.Net.FtpWebRequest.EnableSsl%2A&gt;</ph> property is set to <ph id=\"ph2\">`true`</ph>.","pos":[12,166],"source":" Credentials information is not encrypted when transmitted to the server unless the <xref:System.Net.FtpWebRequest.EnableSsl%2A> property is set to `true`."}]},{"pos":[486,841],"content":"Changing <xref:System.Net.FtpWebRequest.Credentials%2A> after calling the <xref:System.Net.FtpWebRequest.GetRequestStream%2A>, <xref:System.Net.FtpWebRequest.BeginGetRequestStream%2A>, <xref:System.Net.FtpWebRequest.GetResponse%2A>, or <xref:System.Net.FtpWebRequest.BeginGetResponse%2A> method causes an <xref:System.InvalidOperationException> exception.","nodes":[{"content":"Changing <ph id=\"ph1\">&lt;xref:System.Net.FtpWebRequest.Credentials%2A&gt;</ph> after calling the <ph id=\"ph2\">&lt;xref:System.Net.FtpWebRequest.GetRequestStream%2A&gt;</ph>, <ph id=\"ph3\">&lt;xref:System.Net.FtpWebRequest.BeginGetRequestStream%2A&gt;</ph>, <ph id=\"ph4\">&lt;xref:System.Net.FtpWebRequest.GetResponse%2A&gt;</ph>, or <ph id=\"ph5\">&lt;xref:System.Net.FtpWebRequest.BeginGetResponse%2A&gt;</ph> method causes an <ph id=\"ph6\">&lt;xref:System.InvalidOperationException&gt;</ph> exception.","pos":[0,355],"source":"Changing <xref:System.Net.FtpWebRequest.Credentials%2A> after calling the <xref:System.Net.FtpWebRequest.GetRequestStream%2A>, <xref:System.Net.FtpWebRequest.BeginGetRequestStream%2A>, <xref:System.Net.FtpWebRequest.GetResponse%2A>, or <xref:System.Net.FtpWebRequest.BeginGetResponse%2A> method causes an <xref:System.InvalidOperationException> exception."}]}],"pos":[33571,34420],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.Net.ICredentials\"></xref> instance; otherwise, `null` if the property has not been set.","nodes":[{"pos":[0,109],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Net.ICredentials\"&gt;&lt;/xref&gt;</ph> instance; otherwise, <ph id=\"ph2\">`null`</ph> if the property has not been set.","source":"An <xref href=\"System.Net.ICredentials\"></xref> instance; otherwise, `null` if the property has not been set."}],"pos":[34923,35033],"yaml":true},{"content":"The value specified for a set operation is `null`.","nodes":[{"pos":[0,50],"content":"The value specified for a set operation is <ph id=\"ph1\">`null`</ph>.","source":"The value specified for a set operation is `null`."}],"pos":[35199,35250],"yaml":true},{"content":"An <xref href=\"System.Net.ICredentials\"></xref> of a type other than <xref href=\"System.Net.NetworkCredential\"></xref> was specified for a set operation.","nodes":[{"pos":[0,153],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Net.ICredentials\"&gt;&lt;/xref&gt;</ph> of a type other than <ph id=\"ph2\">&lt;xref href=\"System.Net.NetworkCredential\"&gt;&lt;/xref&gt;</ph> was specified for a set operation.","source":"An <xref href=\"System.Net.ICredentials\"></xref> of a type other than <xref href=\"System.Net.NetworkCredential\"></xref> was specified for a set operation."}],"pos":[35344,35498],"yaml":true},{"content":"A new value was specified for this property for a request that is already in progress.","nodes":[{"pos":[0,86],"content":"A new value was specified for this property for a request that is already in progress.","nodes":[{"content":"A new value was specified for this property for a request that is already in progress.","pos":[0,86]}]}],"pos":[35608,35695],"yaml":true},{"content":"Defines the default cache policy for all FTP requests.","nodes":[{"pos":[0,54],"content":"Defines the default cache policy for all FTP requests.","nodes":[{"content":"Defines the default cache policy for all FTP requests.","pos":[0,54]}]}],"pos":[36784,36839],"yaml":true},{"content":"Only content received using the <xref:System.Net.WebRequestMethods.Ftp.DownloadFile> command is cached.  \n  \n The following table describes the effects of FTP caching policies on <xref:System.Net.FtpWebRequest>.  \n  \n|Policy|Effect|  \n|------------|------------|  \n|<xref:System.Net.Cache.RequestCacheLevel.Default>|Returns the cached resource if the resource is fresh, the content length is accurate, and the expiration, modification, and content length attributes are present.|  \n|<xref:System.Net.Cache.RequestCacheLevel.BypassCache>|Returns the resource from the server.|  \n|<xref:System.Net.Cache.RequestCacheLevel.CacheOnly>|Returns the cached resource if the content length is present and matches the entry size; otherwise, throws a <xref:System.Net.WebException>.|  \n|<xref:System.Net.Cache.RequestCacheLevel.CacheIfAvailable>|Returns the cached resource if the content length is provided and matches the entry size; otherwise, the resource is downloaded from the server and is returned to the caller.|  \n|<xref:System.Net.Cache.RequestCacheLevel.Revalidate>|Returns the cached resource if the timestamp of the cached resource is the same as the time stamp of the resource on the server; otherwise, the resource is downloaded from the server, stored in the cache, and returned to the caller.|  \n|<xref:System.Net.Cache.RequestCacheLevel.Reload>|Downloads the resource from the server, stores it in the cache, and returns the resource to the caller.|  \n|<xref:System.Net.Cache.RequestCacheLevel.NoCacheNoStore>|If a cached resource exists, it is deleted. The resource is downloaded from the server and is returned to the caller.|  \n  \n> [!NOTE]\n>  Setting <xref:System.Net.FtpWebRequest.DefaultCachePolicy%2A> overrides any configuration setting.","nodes":[{"pos":[0,103],"content":"Only content received using the <xref:System.Net.WebRequestMethods.Ftp.DownloadFile> command is cached.","nodes":[{"content":"Only content received using the <ph id=\"ph1\">&lt;xref:System.Net.WebRequestMethods.Ftp.DownloadFile&gt;</ph> command is cached.","pos":[0,103],"source":"Only content received using the <xref:System.Net.WebRequestMethods.Ftp.DownloadFile> command is cached."}]},{"pos":[110,211],"content":"The following table describes the effects of FTP caching policies on <xref:System.Net.FtpWebRequest>.","nodes":[{"content":"The following table describes the effects of FTP caching policies on <ph id=\"ph1\">&lt;xref:System.Net.FtpWebRequest&gt;</ph>.","pos":[0,101],"source":"The following table describes the effects of FTP caching policies on <xref:System.Net.FtpWebRequest>."}]},{"pos":[218,224],"content":"Policy","nodes":[{"content":"Policy","pos":[0,6]}]},{"pos":[225,231],"content":"Effect","nodes":[{"content":"Effect","pos":[0,6]}]},{"pos":[266,315],"content":"<xref:System.Net.Cache.RequestCacheLevel.Default>","nodes":[]},{"pos":[316,478],"content":"Returns the cached resource if the resource is fresh, the content length is accurate, and the expiration, modification, and content length attributes are present.","nodes":[{"content":"Returns the cached resource if the resource is fresh, the content length is accurate, and the expiration, modification, and content length attributes are present.","pos":[0,162]}]},{"pos":[483,536],"content":"<xref:System.Net.Cache.RequestCacheLevel.BypassCache>","nodes":[]},{"pos":[537,574],"content":"Returns the resource from the server.","nodes":[{"content":"Returns the resource from the server.","pos":[0,37]}]},{"pos":[579,630],"content":"<xref:System.Net.Cache.RequestCacheLevel.CacheOnly>","nodes":[]},{"pos":[631,771],"content":"Returns the cached resource if the content length is present and matches the entry size; otherwise, throws a <xref:System.Net.WebException>.","nodes":[{"content":"Returns the cached resource if the content length is present and matches the entry size; otherwise, throws a <ph id=\"ph1\">&lt;xref:System.Net.WebException&gt;</ph>.","pos":[0,140],"source":"Returns the cached resource if the content length is present and matches the entry size; otherwise, throws a <xref:System.Net.WebException>."}]},{"pos":[776,834],"content":"<xref:System.Net.Cache.RequestCacheLevel.CacheIfAvailable>","nodes":[]},{"pos":[835,1009],"content":"Returns the cached resource if the content length is provided and matches the entry size; otherwise, the resource is downloaded from the server and is returned to the caller.","nodes":[{"content":"Returns the cached resource if the content length is provided and matches the entry size; otherwise, the resource is downloaded from the server and is returned to the caller.","pos":[0,174]}]},{"pos":[1014,1066],"content":"<xref:System.Net.Cache.RequestCacheLevel.Revalidate>","nodes":[]},{"pos":[1067,1299],"content":"Returns the cached resource if the timestamp of the cached resource is the same as the time stamp of the resource on the server; otherwise, the resource is downloaded from the server, stored in the cache, and returned to the caller.","nodes":[{"content":"Returns the cached resource if the timestamp of the cached resource is the same as the time stamp of the resource on the server; otherwise, the resource is downloaded from the server, stored in the cache, and returned to the caller.","pos":[0,232]}]},{"pos":[1304,1352],"content":"<xref:System.Net.Cache.RequestCacheLevel.Reload>","nodes":[]},{"pos":[1353,1456],"content":"Downloads the resource from the server, stores it in the cache, and returns the resource to the caller.","nodes":[{"content":"Downloads the resource from the server, stores it in the cache, and returns the resource to the caller.","pos":[0,103]}]},{"pos":[1461,1517],"content":"<xref:System.Net.Cache.RequestCacheLevel.NoCacheNoStore>","nodes":[]},{"pos":[1518,1635],"content":"If a cached resource exists, it is deleted. The resource is downloaded from the server and is returned to the caller.","nodes":[{"content":"If a cached resource exists, it is deleted. The resource is downloaded from the server and is returned to the caller.","pos":[0,117],"nodes":[{"content":"If a cached resource exists, it is deleted.","pos":[0,43]},{"content":"The resource is downloaded from the server and is returned to the caller.","pos":[44,117]}]}]},{"pos":[1644,1753],"content":"[!NOTE]\n Setting <xref:System.Net.FtpWebRequest.DefaultCachePolicy%2A> overrides any configuration setting.","leadings":["","> "],"nodes":[{"content":"Setting <ph id=\"ph1\">&lt;xref:System.Net.FtpWebRequest.DefaultCachePolicy%2A&gt;</ph> overrides any configuration setting.","pos":[9,107],"source":" Setting <xref:System.Net.FtpWebRequest.DefaultCachePolicy%2A> overrides any configuration setting."}]}],"pos":[36850,38621],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Net.Cache.RequestCachePolicy\"></xref> that defines the cache policy for FTP requests.","nodes":[{"pos":[0,106],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Net.Cache.RequestCachePolicy\"&gt;&lt;/xref&gt;</ph> that defines the cache policy for FTP requests.","source":"A <xref href=\"System.Net.Cache.RequestCachePolicy\"></xref> that defines the cache policy for FTP requests."}],"pos":[38840,38947],"yaml":true},{"content":"The caller tried to set this property to `null`.","nodes":[{"pos":[0,48],"content":"The caller tried to set this property to <ph id=\"ph1\">`null`</ph>.","source":"The caller tried to set this property to `null`."}],"pos":[39120,39169],"yaml":true},{"content":"Gets or sets a <xref href=\"System.Boolean\"></xref> that specifies that an SSL connection should be used.","nodes":[{"pos":[0,104],"content":"Gets or sets a <ph id=\"ph1\">&lt;xref href=\"System.Boolean\"&gt;&lt;/xref&gt;</ph> that specifies that an SSL connection should be used.","source":"Gets or sets a <xref href=\"System.Boolean\"></xref> that specifies that an SSL connection should be used."}],"pos":[40158,40263],"yaml":true},{"content":"> [!CAUTION]\n>  Unless the <xref:System.Net.FtpWebRequest.EnableSsl%2A> property is `true`, all data and commands, including your user name and password information, are sent to the server in clear text. Anyone monitoring network traffic can view your credentials and use them to connect to the server. If you are connecting to an FTP server that requires credentials and supports SSL, you should set <xref:System.Net.FtpWebRequest.EnableSsl%2A> to `true`.  \n  \n The `\"AUTH TLS\"` command is sent to the server to request an encrypted session. If the server does not recognize this command, you receive a <xref:System.Net.WebException> exception.","nodes":[{"pos":[2,456],"content":"[!CAUTION]\n Unless the <xref:System.Net.FtpWebRequest.EnableSsl%2A> property is `true`, all data and commands, including your user name and password information, are sent to the server in clear text. Anyone monitoring network traffic can view your credentials and use them to connect to the server. If you are connecting to an FTP server that requires credentials and supports SSL, you should set <xref:System.Net.FtpWebRequest.EnableSsl%2A> to `true`.","leadings":["","> "],"nodes":[{"content":" Unless the <xref:System.Net.FtpWebRequest.EnableSsl%2A> property is `true`, all data and commands, including your user name and password information, are sent to the server in clear text. Anyone monitoring network traffic can view your credentials and use them to connect to the server. If you are connecting to an FTP server that requires credentials and supports SSL, you should set <xref:System.Net.FtpWebRequest.EnableSsl%2A> to `true`.","pos":[11,452],"nodes":[{"content":"Unless the <ph id=\"ph1\">&lt;xref:System.Net.FtpWebRequest.EnableSsl%2A&gt;</ph> property is <ph id=\"ph2\">`true`</ph>, all data and commands, including your user name and password information, are sent to the server in clear text.","pos":[1,188],"source":" Unless the <xref:System.Net.FtpWebRequest.EnableSsl%2A> property is `true`, all data and commands, including your user name and password information, are sent to the server in clear text."},{"content":"Anyone monitoring network traffic can view your credentials and use them to connect to the server.","pos":[189,287]},{"content":"If you are connecting to an FTP server that requires credentials and supports SSL, you should set <ph id=\"ph1\">&lt;xref:System.Net.FtpWebRequest.EnableSsl%2A&gt;</ph> to <ph id=\"ph2\">`true`</ph>.","pos":[288,441],"source":" If you are connecting to an FTP server that requires credentials and supports SSL, you should set <xref:System.Net.FtpWebRequest.EnableSsl%2A> to `true`."}]}]},{"pos":[463,645],"content":"The `\"AUTH TLS\"` command is sent to the server to request an encrypted session. If the server does not recognize this command, you receive a <xref:System.Net.WebException> exception.","nodes":[{"content":"The <ph id=\"ph1\">`\"AUTH TLS\"`</ph> command is sent to the server to request an encrypted session.","pos":[0,79],"source":"The `\"AUTH TLS\"` command is sent to the server to request an encrypted session."},{"content":"If the server does not recognize this command, you receive a <ph id=\"ph1\">&lt;xref:System.Net.WebException&gt;</ph> exception.","pos":[80,182],"source":" If the server does not recognize this command, you receive a <xref:System.Net.WebException> exception."}]}],"pos":[40274,40927],"yaml":true,"extradata":"MT"},{"content":"`true` if control and data transmissions are encrypted; otherwise, `false`. The default value is `false`.","nodes":[{"pos":[0,105],"content":"`true` if control and data transmissions are encrypted; otherwise, `false`. The default value is `false`.","nodes":[{"content":"<ph id=\"ph1\">`true`</ph> if control and data transmissions are encrypted; otherwise, <ph id=\"ph2\">`false`</ph>.","pos":[0,75],"source":"`true` if control and data transmissions are encrypted; otherwise, `false`."},{"content":"The default value is <ph id=\"ph1\">`false`</ph>.","pos":[76,105],"source":" The default value is `false`."}]}],"pos":[41395,41503],"yaml":true},{"content":"The connection to the FTP server has already been established.","nodes":[{"pos":[0,62],"content":"The connection to the FTP server has already been established.","nodes":[{"content":"The connection to the FTP server has already been established.","pos":[0,62]}]}],"pos":[41675,41738],"yaml":true},{"content":"Ends a pending asynchronous operation started with <xref href=\"System.Net.FtpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)\"></xref>.","nodes":[{"pos":[0,155],"content":"Ends a pending asynchronous operation started with <ph id=\"ph1\">&lt;xref href=\"System.Net.FtpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)\"&gt;&lt;/xref&gt;</ph>.","source":"Ends a pending asynchronous operation started with <xref href=\"System.Net.FtpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)\"></xref>."}],"pos":[42936,43092],"yaml":true},{"content":"If the operation has not completed, the <xref:System.Net.FtpWebRequest.EndGetRequestStream%2A> method blocks until the operation completes. To determine whether the operation has completed, check the <xref:System.IAsyncResult.IsCompleted%2A> property before calling <xref:System.Net.FtpWebRequest.EndGetRequestStream%2A>.  \n  \n In addition to the exceptions noted in \"Exceptions,\" <xref:System.Net.FtpWebRequest.EndGetRequestStream%2A> rethrows exceptions that were thrown while opening the stream for writing.  \n  \n> [!NOTE]\n>  This member outputs trace information when you enable network tracing in your application. For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).","nodes":[{"pos":[0,321],"content":"If the operation has not completed, the <xref:System.Net.FtpWebRequest.EndGetRequestStream%2A> method blocks until the operation completes. To determine whether the operation has completed, check the <xref:System.IAsyncResult.IsCompleted%2A> property before calling <xref:System.Net.FtpWebRequest.EndGetRequestStream%2A>.","nodes":[{"content":"If the operation has not completed, the <xref:System.Net.FtpWebRequest.EndGetRequestStream%2A> method blocks until the operation completes. To determine whether the operation has completed, check the <xref:System.IAsyncResult.IsCompleted%2A> property before calling <xref:System.Net.FtpWebRequest.EndGetRequestStream%2A>.","pos":[0,321],"nodes":[{"content":"If the operation has not completed, the <ph id=\"ph1\">&lt;xref:System.Net.FtpWebRequest.EndGetRequestStream%2A&gt;</ph> method blocks until the operation completes.","pos":[0,139],"source":"If the operation has not completed, the <xref:System.Net.FtpWebRequest.EndGetRequestStream%2A> method blocks until the operation completes."},{"content":"To determine whether the operation has completed, check the <ph id=\"ph1\">&lt;xref:System.IAsyncResult.IsCompleted%2A&gt;</ph> property before calling <ph id=\"ph2\">&lt;xref:System.Net.FtpWebRequest.EndGetRequestStream%2A&gt;</ph>.","pos":[140,321],"source":" To determine whether the operation has completed, check the <xref:System.IAsyncResult.IsCompleted%2A> property before calling <xref:System.Net.FtpWebRequest.EndGetRequestStream%2A>."}]}]},{"pos":[328,510],"content":"In addition to the exceptions noted in \"Exceptions,\" <xref:System.Net.FtpWebRequest.EndGetRequestStream%2A> rethrows exceptions that were thrown while opening the stream for writing.","nodes":[{"content":"In addition to the exceptions noted in \"Exceptions,\" <ph id=\"ph1\">&lt;xref:System.Net.FtpWebRequest.EndGetRequestStream%2A&gt;</ph> rethrows exceptions that were thrown while opening the stream for writing.","pos":[0,182],"source":"In addition to the exceptions noted in \"Exceptions,\" <xref:System.Net.FtpWebRequest.EndGetRequestStream%2A> rethrows exceptions that were thrown while opening the stream for writing."}]},{"pos":[518,743],"content":"[!NOTE]\n This member outputs trace information when you enable network tracing in your application. For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).","leadings":["","> "],"nodes":[{"content":" This member outputs trace information when you enable network tracing in your application. For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).","pos":[8,223],"nodes":[{"content":"This member outputs trace information when you enable network tracing in your application.","pos":[1,91]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Network Tracing in the .NET Framework<ept id=\"p1\">](~/docs/framework/network-programming/network-tracing.md)</ept>.","pos":[92,215],"source":" For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md)."}]}]}],"pos":[43103,43856],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.IAsyncResult\"></xref> object that was returned when the operation started.","nodes":[{"pos":[0,97],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.IAsyncResult\"&gt;&lt;/xref&gt;</ph> object that was returned when the operation started.","source":"The <xref href=\"System.IAsyncResult\"></xref> object that was returned when the operation started."}],"pos":[44491,44589],"yaml":true},{"content":"A writable <xref href=\"System.IO.Stream\"></xref> instance associated with this instance.","nodes":[{"pos":[0,88],"content":"A writable <ph id=\"ph1\">&lt;xref href=\"System.IO.Stream\"&gt;&lt;/xref&gt;</ph> instance associated with this instance.","source":"A writable <xref href=\"System.IO.Stream\"></xref> instance associated with this instance."}],"pos":[44649,44738],"yaml":true},{"content":"<code>asyncResult</code> is `null`.","nodes":[{"pos":[0,35],"content":"<ph id=\"ph1\">&lt;code&gt;asyncResult&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>asyncResult</code> is `null`."}],"pos":[44912,44948],"yaml":true},{"content":"<code>asyncResult</code> was not obtained by calling <xref href=\"System.Net.FtpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)\"></xref>.","nodes":[{"pos":[0,157],"content":"<ph id=\"ph1\">&lt;code&gt;asyncResult&lt;/code&gt;</ph> was not obtained by calling <ph id=\"ph2\">&lt;xref href=\"System.Net.FtpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)\"&gt;&lt;/xref&gt;</ph>.","source":"<code>asyncResult</code> was not obtained by calling <xref href=\"System.Net.FtpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)\"></xref>."}],"pos":[45042,45200],"yaml":true},{"content":"This method was already called for the operation identified by <code>asyncResult</code>.","nodes":[{"pos":[0,88],"content":"This method was already called for the operation identified by <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">asyncResult</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"This method was already called for the operation identified by <code>asyncResult</code>."}],"pos":[45310,45399],"yaml":true},{"content":"Ends a pending asynchronous operation started with <xref href=\"System.Net.FtpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)\"></xref>.","nodes":[{"pos":[0,150],"content":"Ends a pending asynchronous operation started with <ph id=\"ph1\">&lt;xref href=\"System.Net.FtpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)\"&gt;&lt;/xref&gt;</ph>.","source":"Ends a pending asynchronous operation started with <xref href=\"System.Net.FtpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)\"></xref>."}],"pos":[46567,46718],"yaml":true},{"content":"If the operation has not completed at the time the <xref:System.Net.FtpWebRequest.EndGetResponse%2A> method is called, <xref:System.Net.FtpWebRequest.EndGetResponse%2A> blocks until the operation completes. To prevent blocking, check the <xref:System.IAsyncResult.IsCompleted%2A> property before calling <xref:System.Net.FtpWebRequest.EndGetResponse%2A>.  \n  \n In addition to the exceptions noted in \"Exceptions,\" <xref:System.Net.FtpWebRequest.EndGetResponse%2A> rethrows exceptions that were thrown while communicating with the server.  \n  \n> [!NOTE]\n>  This member outputs trace information when you enable network tracing in your application. For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).","nodes":[{"pos":[0,354],"content":"If the operation has not completed at the time the <xref:System.Net.FtpWebRequest.EndGetResponse%2A> method is called, <xref:System.Net.FtpWebRequest.EndGetResponse%2A> blocks until the operation completes. To prevent blocking, check the <xref:System.IAsyncResult.IsCompleted%2A> property before calling <xref:System.Net.FtpWebRequest.EndGetResponse%2A>.","nodes":[{"content":"If the operation has not completed at the time the <xref:System.Net.FtpWebRequest.EndGetResponse%2A> method is called, <xref:System.Net.FtpWebRequest.EndGetResponse%2A> blocks until the operation completes. To prevent blocking, check the <xref:System.IAsyncResult.IsCompleted%2A> property before calling <xref:System.Net.FtpWebRequest.EndGetResponse%2A>.","pos":[0,354],"nodes":[{"content":"If the operation has not completed at the time the <ph id=\"ph1\">&lt;xref:System.Net.FtpWebRequest.EndGetResponse%2A&gt;</ph> method is called, <ph id=\"ph2\">&lt;xref:System.Net.FtpWebRequest.EndGetResponse%2A&gt;</ph> blocks until the operation completes.","pos":[0,206],"source":"If the operation has not completed at the time the <xref:System.Net.FtpWebRequest.EndGetResponse%2A> method is called, <xref:System.Net.FtpWebRequest.EndGetResponse%2A> blocks until the operation completes."},{"content":"To prevent blocking, check the <ph id=\"ph1\">&lt;xref:System.IAsyncResult.IsCompleted%2A&gt;</ph> property before calling <ph id=\"ph2\">&lt;xref:System.Net.FtpWebRequest.EndGetResponse%2A&gt;</ph>.","pos":[207,354],"source":" To prevent blocking, check the <xref:System.IAsyncResult.IsCompleted%2A> property before calling <xref:System.Net.FtpWebRequest.EndGetResponse%2A>."}]}]},{"pos":[361,537],"content":"In addition to the exceptions noted in \"Exceptions,\" <xref:System.Net.FtpWebRequest.EndGetResponse%2A> rethrows exceptions that were thrown while communicating with the server.","nodes":[{"content":"In addition to the exceptions noted in \"Exceptions,\" <ph id=\"ph1\">&lt;xref:System.Net.FtpWebRequest.EndGetResponse%2A&gt;</ph> rethrows exceptions that were thrown while communicating with the server.","pos":[0,176],"source":"In addition to the exceptions noted in \"Exceptions,\" <xref:System.Net.FtpWebRequest.EndGetResponse%2A> rethrows exceptions that were thrown while communicating with the server."}]},{"pos":[545,770],"content":"[!NOTE]\n This member outputs trace information when you enable network tracing in your application. For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).","leadings":["","> "],"nodes":[{"content":" This member outputs trace information when you enable network tracing in your application. For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).","pos":[8,223],"nodes":[{"content":"This member outputs trace information when you enable network tracing in your application.","pos":[1,91]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Network Tracing in the .NET Framework<ept id=\"p1\">](~/docs/framework/network-programming/network-tracing.md)</ept>.","pos":[92,215],"source":" For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md)."}]}]}],"pos":[46729,47509],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.IAsyncResult\"></xref> that was returned when the operation started.","nodes":[{"pos":[0,90],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.IAsyncResult\"&gt;&lt;/xref&gt;</ph> that was returned when the operation started.","source":"The <xref href=\"System.IAsyncResult\"></xref> that was returned when the operation started."}],"pos":[48137,48228],"yaml":true},{"content":"A <xref href=\"System.Net.WebResponse\"></xref> reference that contains an <xref href=\"System.Net.FtpWebResponse\"></xref> instance. This object contains the FTP server's response to the request.","nodes":[{"pos":[0,192],"content":"A <xref href=\"System.Net.WebResponse\"></xref> reference that contains an <xref href=\"System.Net.FtpWebResponse\"></xref> instance. This object contains the FTP server's response to the request.","nodes":[{"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Net.WebResponse\"&gt;&lt;/xref&gt;</ph> reference that contains an <ph id=\"ph2\">&lt;xref href=\"System.Net.FtpWebResponse\"&gt;&lt;/xref&gt;</ph> instance.","pos":[0,129],"source":"A <xref href=\"System.Net.WebResponse\"></xref> reference that contains an <xref href=\"System.Net.FtpWebResponse\"></xref> instance."},{"content":"This object contains the FTP server's response to the request.","pos":[130,192]}]}],"pos":[48294,48487],"yaml":true},{"content":"<code>asyncResult</code> is `null`.","nodes":[{"pos":[0,35],"content":"<ph id=\"ph1\">&lt;code&gt;asyncResult&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>asyncResult</code> is `null`."}],"pos":[48656,48692],"yaml":true},{"content":"<code>asyncResult</code> was not obtained by calling <xref href=\"System.Net.FtpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)\"></xref>.","nodes":[{"pos":[0,152],"content":"<ph id=\"ph1\">&lt;code&gt;asyncResult&lt;/code&gt;</ph> was not obtained by calling <ph id=\"ph2\">&lt;xref href=\"System.Net.FtpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)\"&gt;&lt;/xref&gt;</ph>.","source":"<code>asyncResult</code> was not obtained by calling <xref href=\"System.Net.FtpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)\"></xref>."}],"pos":[48786,48939],"yaml":true},{"content":"This method was already called for the operation identified by <code>asyncResult</code>.","nodes":[{"pos":[0,88],"content":"This method was already called for the operation identified by <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">asyncResult</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"This method was already called for the operation identified by <code>asyncResult</code>."}],"pos":[49049,49138],"yaml":true},{"content":"An error occurred using an HTTP proxy.","nodes":[{"pos":[0,38],"content":"An error occurred using an HTTP proxy.","nodes":[{"content":"An error occurred using an HTTP proxy.","pos":[0,38]}]}],"pos":[49230,49269],"yaml":true},{"content":"Retrieves the stream used to upload data to an FTP server.","nodes":[{"pos":[0,58],"content":"Retrieves the stream used to upload data to an FTP server.","nodes":[{"content":"Retrieves the stream used to upload data to an FTP server.","pos":[0,58]}]}],"pos":[50350,50409],"yaml":true},{"content":"Set the request properties before calling the <xref:System.Net.FtpWebRequest.GetRequestStream%2A> method. After writing the data to the stream, you must close the stream prior to sending the request.  \n  \n If you have not set the <xref:System.Net.FtpWebRequest.Method%2A> property to <xref:System.Net.WebRequestMethods.Ftp.UploadFile> or <xref:System.Net.WebRequestMethods.Ftp.AppendFile>, you cannot get the stream.  \n  \n <xref:System.Net.FtpWebRequest.GetRequestStream%2A> blocks while waiting for the stream. To prevent this, call the <xref:System.Net.FtpWebRequest.BeginGetRequestStream%2A> method in place of <xref:System.Net.FtpWebRequest.GetRequestStream%2A>.  \n  \n> [!NOTE]\n>  This member outputs trace information when you enable network tracing in your application. For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).","nodes":[{"pos":[0,199],"content":"Set the request properties before calling the <xref:System.Net.FtpWebRequest.GetRequestStream%2A> method. After writing the data to the stream, you must close the stream prior to sending the request.","nodes":[{"content":"Set the request properties before calling the <xref:System.Net.FtpWebRequest.GetRequestStream%2A> method. After writing the data to the stream, you must close the stream prior to sending the request.","pos":[0,199],"nodes":[{"content":"Set the request properties before calling the <ph id=\"ph1\">&lt;xref:System.Net.FtpWebRequest.GetRequestStream%2A&gt;</ph> method.","pos":[0,105],"source":"Set the request properties before calling the <xref:System.Net.FtpWebRequest.GetRequestStream%2A> method."},{"content":"After writing the data to the stream, you must close the stream prior to sending the request.","pos":[106,199]}]}]},{"pos":[206,416],"content":"If you have not set the <xref:System.Net.FtpWebRequest.Method%2A> property to <xref:System.Net.WebRequestMethods.Ftp.UploadFile> or <xref:System.Net.WebRequestMethods.Ftp.AppendFile>, you cannot get the stream.","nodes":[{"content":"If you have not set the <ph id=\"ph1\">&lt;xref:System.Net.FtpWebRequest.Method%2A&gt;</ph> property to <ph id=\"ph2\">&lt;xref:System.Net.WebRequestMethods.Ftp.UploadFile&gt;</ph> or <ph id=\"ph3\">&lt;xref:System.Net.WebRequestMethods.Ftp.AppendFile&gt;</ph>, you cannot get the stream.","pos":[0,210],"source":"If you have not set the <xref:System.Net.FtpWebRequest.Method%2A> property to <xref:System.Net.WebRequestMethods.Ftp.UploadFile> or <xref:System.Net.WebRequestMethods.Ftp.AppendFile>, you cannot get the stream."}]},{"pos":[423,666],"content":"<xref:System.Net.FtpWebRequest.GetRequestStream%2A> blocks while waiting for the stream. To prevent this, call the <xref:System.Net.FtpWebRequest.BeginGetRequestStream%2A> method in place of <xref:System.Net.FtpWebRequest.GetRequestStream%2A>.","nodes":[{"content":"<xref:System.Net.FtpWebRequest.GetRequestStream%2A> blocks while waiting for the stream. To prevent this, call the <xref:System.Net.FtpWebRequest.BeginGetRequestStream%2A> method in place of <xref:System.Net.FtpWebRequest.GetRequestStream%2A>.","pos":[0,243],"nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Net.FtpWebRequest.GetRequestStream%2A&gt;</ph> blocks while waiting for the stream.","pos":[0,88],"source":"<xref:System.Net.FtpWebRequest.GetRequestStream%2A> blocks while waiting for the stream."},{"content":"To prevent this, call the <ph id=\"ph1\">&lt;xref:System.Net.FtpWebRequest.BeginGetRequestStream%2A&gt;</ph> method in place of <ph id=\"ph2\">&lt;xref:System.Net.FtpWebRequest.GetRequestStream%2A&gt;</ph>.","pos":[89,243],"source":" To prevent this, call the <xref:System.Net.FtpWebRequest.BeginGetRequestStream%2A> method in place of <xref:System.Net.FtpWebRequest.GetRequestStream%2A>."}]}]},{"pos":[674,899],"content":"[!NOTE]\n This member outputs trace information when you enable network tracing in your application. For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).","leadings":["","> "],"nodes":[{"content":" This member outputs trace information when you enable network tracing in your application. For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).","pos":[8,223],"nodes":[{"content":"This member outputs trace information when you enable network tracing in your application.","pos":[1,91]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Network Tracing in the .NET Framework<ept id=\"p1\">](~/docs/framework/network-programming/network-tracing.md)</ept>.","pos":[92,215],"source":" For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md)."}]}]}],"pos":[50420,51329],"yaml":true,"extradata":"MT"},{"content":"A writable <xref href=\"System.IO.Stream\"></xref> instance used to store data to be sent to the server by the current request.","nodes":[{"pos":[0,125],"content":"A writable <ph id=\"ph1\">&lt;xref href=\"System.IO.Stream\"&gt;&lt;/xref&gt;</ph> instance used to store data to be sent to the server by the current request.","source":"A writable <xref href=\"System.IO.Stream\"></xref> instance used to store data to be sent to the server by the current request."}],"pos":[51888,52014],"yaml":true},{"content":"<xref href=\"System.Net.FtpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)\"></xref> has been called and has not completed.  \n  \n \\- or -  \n  \n An HTTP proxy is enabled, and you attempted to use an FTP command other than <xref href=\"System.Net.WebRequestMethods.Ftp.DownloadFile\"></xref>, <xref href=\"System.Net.WebRequestMethods.Ftp.ListDirectory\"></xref>, or <xref href=\"System.Net.WebRequestMethods.Ftp.ListDirectoryDetails\"></xref>.","nodes":[{"pos":[0,142],"content":"<ph id=\"ph1\">&lt;xref href=\"System.Net.FtpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)\"&gt;&lt;/xref&gt;</ph> has been called and has not completed.","source":"<xref href=\"System.Net.FtpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)\"></xref> has been called and has not completed."},{"pos":[149,156],"content":"\\- or -","nodes":[{"content":"<ph id=\"ph1\">\\-</ph> or -","pos":[0,7],"source":"\\- or -"}]},{"pos":[163,455],"content":"An HTTP proxy is enabled, and you attempted to use an FTP command other than <ph id=\"ph1\">&lt;xref href=\"System.Net.WebRequestMethods.Ftp.DownloadFile\"&gt;&lt;/xref&gt;</ph>, <ph id=\"ph2\">&lt;xref href=\"System.Net.WebRequestMethods.Ftp.ListDirectory\"&gt;&lt;/xref&gt;</ph>, or <ph id=\"ph3\">&lt;xref href=\"System.Net.WebRequestMethods.Ftp.ListDirectoryDetails\"&gt;&lt;/xref&gt;</ph>.","source":"An HTTP proxy is enabled, and you attempted to use an FTP command other than <xref href=\"System.Net.WebRequestMethods.Ftp.DownloadFile\"></xref>, <xref href=\"System.Net.WebRequestMethods.Ftp.ListDirectory\"></xref>, or <xref href=\"System.Net.WebRequestMethods.Ftp.ListDirectoryDetails\"></xref>."}],"pos":[52193,52664],"yaml":true},{"content":"A connection to the FTP server could not be established.","nodes":[{"pos":[0,56],"content":"A connection to the FTP server could not be established.","nodes":[{"content":"A connection to the FTP server could not be established.","pos":[0,56]}]}],"pos":[52756,52813],"yaml":true},{"content":"The <xref href=\"System.Net.FtpWebRequest.Method\"></xref> property is not set to <xref href=\"System.Net.WebRequestMethods.Ftp.UploadFile\"></xref> or <xref href=\"System.Net.WebRequestMethods.Ftp.AppendFile\"></xref>.","nodes":[{"pos":[0,213],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Net.FtpWebRequest.Method\"&gt;&lt;/xref&gt;</ph> property is not set to <ph id=\"ph2\">&lt;xref href=\"System.Net.WebRequestMethods.Ftp.UploadFile\"&gt;&lt;/xref&gt;</ph> or <ph id=\"ph3\">&lt;xref href=\"System.Net.WebRequestMethods.Ftp.AppendFile\"&gt;&lt;/xref&gt;</ph>.","source":"The <xref href=\"System.Net.FtpWebRequest.Method\"></xref> property is not set to <xref href=\"System.Net.WebRequestMethods.Ftp.UploadFile\"></xref> or <xref href=\"System.Net.WebRequestMethods.Ftp.AppendFile\"></xref>."}],"pos":[52933,53147],"yaml":true},{"content":"Returns the FTP server response.","nodes":[{"pos":[0,32],"content":"Returns the FTP server response.","nodes":[{"content":"Returns the FTP server response.","pos":[0,32]}]}],"pos":[54198,54231],"yaml":true},{"content":"To access the FTP-specific properties, you must cast the <xref:System.Net.WebResponse> object returned by this method to <xref:System.Net.FtpWebResponse>.  \n  \n <xref:System.Net.FtpWebRequest.GetResponse%2A> causes a control connection to be established, and might also create a data connection. <xref:System.Net.FtpWebRequest.GetResponse%2A> blocks until the response is received. To prevent this, you can perform this operation asynchronously by calling the <xref:System.Net.FtpWebRequest.BeginGetResponse%2A> and <xref:System.Net.FtpWebRequest.EndGetResponse%2A> methods in place of <xref:System.Net.FtpWebRequest.GetResponse%2A>.  \n  \n If the <xref:System.Net.FtpWebRequest.Proxy%2A> property is set, either directly or in a configuration file, communications with the FTP server are made through the proxy.  \n  \n If a <xref:System.Net.WebException> is thrown, use the <xref:System.Net.WebException.Response%2A> and <xref:System.Net.WebException.Status%2A> properties of the exception to determine the response from the server.  \n  \n This member outputs trace information when you enable network tracing in your application. For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).  \n  \n> [!NOTE]\n>  Multiple calls to <xref:System.Net.FtpWebRequest.GetResponse%2A> return the same response object; the request is not reissued.","nodes":[{"pos":[0,154],"content":"To access the FTP-specific properties, you must cast the <xref:System.Net.WebResponse> object returned by this method to <xref:System.Net.FtpWebResponse>.","nodes":[{"content":"To access the FTP-specific properties, you must cast the <ph id=\"ph1\">&lt;xref:System.Net.WebResponse&gt;</ph> object returned by this method to <ph id=\"ph2\">&lt;xref:System.Net.FtpWebResponse&gt;</ph>.","pos":[0,154],"source":"To access the FTP-specific properties, you must cast the <xref:System.Net.WebResponse> object returned by this method to <xref:System.Net.FtpWebResponse>."}]},{"pos":[161,633],"content":"<xref:System.Net.FtpWebRequest.GetResponse%2A> causes a control connection to be established, and might also create a data connection. <xref:System.Net.FtpWebRequest.GetResponse%2A> blocks until the response is received. To prevent this, you can perform this operation asynchronously by calling the <xref:System.Net.FtpWebRequest.BeginGetResponse%2A> and <xref:System.Net.FtpWebRequest.EndGetResponse%2A> methods in place of <xref:System.Net.FtpWebRequest.GetResponse%2A>.","nodes":[{"content":"<xref:System.Net.FtpWebRequest.GetResponse%2A> causes a control connection to be established, and might also create a data connection. <xref:System.Net.FtpWebRequest.GetResponse%2A> blocks until the response is received. To prevent this, you can perform this operation asynchronously by calling the <xref:System.Net.FtpWebRequest.BeginGetResponse%2A> and <xref:System.Net.FtpWebRequest.EndGetResponse%2A> methods in place of <xref:System.Net.FtpWebRequest.GetResponse%2A>.","pos":[0,472],"nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Net.FtpWebRequest.GetResponse%2A&gt;</ph> causes a control connection to be established, and might also create a data connection.","pos":[0,134],"source":"<xref:System.Net.FtpWebRequest.GetResponse%2A> causes a control connection to be established, and might also create a data connection."},{"content":"<ph id=\"ph1\">&lt;xref:System.Net.FtpWebRequest.GetResponse%2A&gt;</ph> blocks until the response is received.","pos":[135,220],"source":" <xref:System.Net.FtpWebRequest.GetResponse%2A> blocks until the response is received."},{"content":"To prevent this, you can perform this operation asynchronously by calling the <ph id=\"ph1\">&lt;xref:System.Net.FtpWebRequest.BeginGetResponse%2A&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Net.FtpWebRequest.EndGetResponse%2A&gt;</ph> methods in place of <ph id=\"ph3\">&lt;xref:System.Net.FtpWebRequest.GetResponse%2A&gt;</ph>.","pos":[221,472],"source":" To prevent this, you can perform this operation asynchronously by calling the <xref:System.Net.FtpWebRequest.BeginGetResponse%2A> and <xref:System.Net.FtpWebRequest.EndGetResponse%2A> methods in place of <xref:System.Net.FtpWebRequest.GetResponse%2A>."}]}]},{"pos":[640,811],"content":"If the <xref:System.Net.FtpWebRequest.Proxy%2A> property is set, either directly or in a configuration file, communications with the FTP server are made through the proxy.","nodes":[{"content":"If the <ph id=\"ph1\">&lt;xref:System.Net.FtpWebRequest.Proxy%2A&gt;</ph> property is set, either directly or in a configuration file, communications with the FTP server are made through the proxy.","pos":[0,171],"source":"If the <xref:System.Net.FtpWebRequest.Proxy%2A> property is set, either directly or in a configuration file, communications with the FTP server are made through the proxy."}]},{"pos":[818,1031],"content":"If a <xref:System.Net.WebException> is thrown, use the <xref:System.Net.WebException.Response%2A> and <xref:System.Net.WebException.Status%2A> properties of the exception to determine the response from the server.","nodes":[{"content":"If a <ph id=\"ph1\">&lt;xref:System.Net.WebException&gt;</ph> is thrown, use the <ph id=\"ph2\">&lt;xref:System.Net.WebException.Response%2A&gt;</ph> and <ph id=\"ph3\">&lt;xref:System.Net.WebException.Status%2A&gt;</ph> properties of the exception to determine the response from the server.","pos":[0,213],"source":"If a <xref:System.Net.WebException> is thrown, use the <xref:System.Net.WebException.Response%2A> and <xref:System.Net.WebException.Status%2A> properties of the exception to determine the response from the server."}]},{"pos":[1038,1252],"content":"This member outputs trace information when you enable network tracing in your application. For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).","nodes":[{"content":"This member outputs trace information when you enable network tracing in your application.","pos":[0,90]},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Network Tracing in the .NET Framework<ept id=\"p1\">](~/docs/framework/network-programming/network-tracing.md)</ept>.","pos":[91,214],"source":" For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md)."}]},{"pos":[1260,1397],"content":"[!NOTE]\n Multiple calls to <xref:System.Net.FtpWebRequest.GetResponse%2A> return the same response object; the request is not reissued.","leadings":["","> "],"nodes":[{"content":"Multiple calls to <ph id=\"ph1\">&lt;xref:System.Net.FtpWebRequest.GetResponse%2A&gt;</ph> return the same response object; the request is not reissued.","pos":[9,135],"source":" Multiple calls to <xref:System.Net.FtpWebRequest.GetResponse%2A> return the same response object; the request is not reissued."}]}],"pos":[54242,55653],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Net.WebResponse\"></xref> reference that contains an <xref href=\"System.Net.FtpWebResponse\"></xref> instance. This object contains the FTP server's response to the request.","nodes":[{"pos":[0,192],"content":"A <xref href=\"System.Net.WebResponse\"></xref> reference that contains an <xref href=\"System.Net.FtpWebResponse\"></xref> instance. This object contains the FTP server's response to the request.","nodes":[{"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Net.WebResponse\"&gt;&lt;/xref&gt;</ph> reference that contains an <ph id=\"ph2\">&lt;xref href=\"System.Net.FtpWebResponse\"&gt;&lt;/xref&gt;</ph> instance.","pos":[0,129],"source":"A <xref href=\"System.Net.WebResponse\"></xref> reference that contains an <xref href=\"System.Net.FtpWebResponse\"></xref> instance."},{"content":"This object contains the FTP server's response to the request.","pos":[130,192]}]}],"pos":[56342,56535],"yaml":true},{"content":"<xref href=\"System.Net.FtpWebRequest.GetResponse\"></xref> or <xref href=\"System.Net.FtpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)\"></xref> has already been called for this instance.  \n  \n \\- or -  \n  \n An HTTP proxy is enabled, and you attempted to use an FTP command other than <xref href=\"System.Net.WebRequestMethods.Ftp.DownloadFile\"></xref>, <xref href=\"System.Net.WebRequestMethods.Ftp.ListDirectory\"></xref>, or <xref href=\"System.Net.WebRequestMethods.Ftp.ListDirectoryDetails\"></xref>.","nodes":[{"pos":[0,202],"content":"<ph id=\"ph1\">&lt;xref href=\"System.Net.FtpWebRequest.GetResponse\"&gt;&lt;/xref&gt;</ph> or <ph id=\"ph2\">&lt;xref href=\"System.Net.FtpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)\"&gt;&lt;/xref&gt;</ph> has already been called for this instance.","source":"<xref href=\"System.Net.FtpWebRequest.GetResponse\"></xref> or <xref href=\"System.Net.FtpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)\"></xref> has already been called for this instance."},{"pos":[209,216],"content":"\\- or -","nodes":[{"content":"<ph id=\"ph1\">\\-</ph> or -","pos":[0,7],"source":"\\- or -"}]},{"pos":[223,515],"content":"An HTTP proxy is enabled, and you attempted to use an FTP command other than <ph id=\"ph1\">&lt;xref href=\"System.Net.WebRequestMethods.Ftp.DownloadFile\"&gt;&lt;/xref&gt;</ph>, <ph id=\"ph2\">&lt;xref href=\"System.Net.WebRequestMethods.Ftp.ListDirectory\"&gt;&lt;/xref&gt;</ph>, or <ph id=\"ph3\">&lt;xref href=\"System.Net.WebRequestMethods.Ftp.ListDirectoryDetails\"&gt;&lt;/xref&gt;</ph>.","source":"An HTTP proxy is enabled, and you attempted to use an FTP command other than <xref href=\"System.Net.WebRequestMethods.Ftp.DownloadFile\"></xref>, <xref href=\"System.Net.WebRequestMethods.Ftp.ListDirectory\"></xref>, or <xref href=\"System.Net.WebRequestMethods.Ftp.ListDirectoryDetails\"></xref>."}],"pos":[56709,57242],"yaml":true},{"content":"<xref href=\"System.Net.FtpWebRequest.EnableSsl\"></xref> is set to `true`, but the server does not support this feature.  \n  \n \\- or -  \n  \n A <xref href=\"System.Net.FtpWebRequest.Timeout\"></xref> was specified and the timeout has expired.","nodes":[{"pos":[0,119],"content":"<ph id=\"ph1\">&lt;xref href=\"System.Net.FtpWebRequest.EnableSsl\"&gt;&lt;/xref&gt;</ph> is set to <ph id=\"ph2\">`true`</ph>, but the server does not support this feature.","source":"<xref href=\"System.Net.FtpWebRequest.EnableSsl\"></xref> is set to `true`, but the server does not support this feature."},{"pos":[126,133],"content":"\\- or -","nodes":[{"content":"<ph id=\"ph1\">\\-</ph> or -","pos":[0,7],"source":"\\- or -"}]},{"pos":[140,238],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Net.FtpWebRequest.Timeout\"&gt;&lt;/xref&gt;</ph> was specified and the timeout has expired.","source":"A <xref href=\"System.Net.FtpWebRequest.Timeout\"></xref> was specified and the timeout has expired."}],"pos":[57334,57584],"yaml":true},{"content":"Gets an empty <xref href=\"System.Net.WebHeaderCollection\"></xref> object.","nodes":[{"pos":[0,73],"content":"Gets an empty <ph id=\"ph1\">&lt;xref href=\"System.Net.WebHeaderCollection\"&gt;&lt;/xref&gt;</ph> object.","source":"Gets an empty <xref href=\"System.Net.WebHeaderCollection\"></xref> object."}],"pos":[58607,58681],"yaml":true},{"content":"The <xref:System.Net.FtpWebRequest.Headers%2A> property is provided only for compatibility with other implementations of the <xref:System.Net.WebRequest> and <xref:System.Net.WebResponse> classes. There is no reason to use <xref:System.Net.FtpWebRequest.Headers%2A>.","nodes":[{"pos":[0,266],"content":"The <xref:System.Net.FtpWebRequest.Headers%2A> property is provided only for compatibility with other implementations of the <xref:System.Net.WebRequest> and <xref:System.Net.WebResponse> classes. There is no reason to use <xref:System.Net.FtpWebRequest.Headers%2A>.","nodes":[{"content":"The <xref:System.Net.FtpWebRequest.Headers%2A> property is provided only for compatibility with other implementations of the <xref:System.Net.WebRequest> and <xref:System.Net.WebResponse> classes. There is no reason to use <xref:System.Net.FtpWebRequest.Headers%2A>.","pos":[0,266],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Net.FtpWebRequest.Headers%2A&gt;</ph> property is provided only for compatibility with other implementations of the <ph id=\"ph2\">&lt;xref:System.Net.WebRequest&gt;</ph> and <ph id=\"ph3\">&lt;xref:System.Net.WebResponse&gt;</ph> classes.","pos":[0,196],"source":"The <xref:System.Net.FtpWebRequest.Headers%2A> property is provided only for compatibility with other implementations of the <xref:System.Net.WebRequest> and <xref:System.Net.WebResponse> classes."},{"content":"There is no reason to use <ph id=\"ph1\">&lt;xref:System.Net.FtpWebRequest.Headers%2A&gt;</ph>.","pos":[197,266],"source":" There is no reason to use <xref:System.Net.FtpWebRequest.Headers%2A>."}]}]}],"pos":[58692,58959],"yaml":true,"extradata":"MT"},{"content":"An empty <xref href=\"System.Net.WebHeaderCollection\"></xref> object.","nodes":[{"pos":[0,68],"content":"An empty <ph id=\"ph1\">&lt;xref href=\"System.Net.WebHeaderCollection\"&gt;&lt;/xref&gt;</ph> object.","source":"An empty <xref href=\"System.Net.WebHeaderCollection\"></xref> object."}],"pos":[59159,59228],"yaml":true},{"content":"Gets or sets a <xref href=\"System.Boolean\"></xref> value that specifies whether the control connection to the FTP server is closed after the request completes.","nodes":[{"pos":[0,159],"content":"Gets or sets a <ph id=\"ph1\">&lt;xref href=\"System.Boolean\"&gt;&lt;/xref&gt;</ph> value that specifies whether the control connection to the FTP server is closed after the request completes.","source":"Gets or sets a <xref href=\"System.Boolean\"></xref> value that specifies whether the control connection to the FTP server is closed after the request completes."}],"pos":[60366,60526],"yaml":true},{"content":"When the <xref:System.Net.FtpWebRequest.KeepAlive%2A> property is set to `false`, the control connection is closed when you call the <xref:System.Net.FtpWebResponse.Close%2A> method.  \n  \n Changing <xref:System.Net.FtpWebRequest.KeepAlive%2A> after calling the <xref:System.Net.FtpWebRequest.GetRequestStream%2A>, <xref:System.Net.FtpWebRequest.BeginGetRequestStream%2A>, <xref:System.Net.FtpWebRequest.GetResponse%2A>, or <xref:System.Net.FtpWebRequest.BeginGetResponse%2A> method causes an <xref:System.InvalidOperationException> exception.","nodes":[{"pos":[0,182],"content":"When the <ph id=\"ph1\">&lt;xref:System.Net.FtpWebRequest.KeepAlive%2A&gt;</ph> property is set to <ph id=\"ph2\">`false`</ph>, the control connection is closed when you call the <ph id=\"ph3\">&lt;xref:System.Net.FtpWebResponse.Close%2A&gt;</ph> method.","source":"When the <xref:System.Net.FtpWebRequest.KeepAlive%2A> property is set to `false`, the control connection is closed when you call the <xref:System.Net.FtpWebResponse.Close%2A> method."},{"pos":[189,542],"content":"Changing <xref:System.Net.FtpWebRequest.KeepAlive%2A> after calling the <xref:System.Net.FtpWebRequest.GetRequestStream%2A>, <xref:System.Net.FtpWebRequest.BeginGetRequestStream%2A>, <xref:System.Net.FtpWebRequest.GetResponse%2A>, or <xref:System.Net.FtpWebRequest.BeginGetResponse%2A> method causes an <xref:System.InvalidOperationException> exception.","nodes":[{"content":"Changing <ph id=\"ph1\">&lt;xref:System.Net.FtpWebRequest.KeepAlive%2A&gt;</ph> after calling the <ph id=\"ph2\">&lt;xref:System.Net.FtpWebRequest.GetRequestStream%2A&gt;</ph>, <ph id=\"ph3\">&lt;xref:System.Net.FtpWebRequest.BeginGetRequestStream%2A&gt;</ph>, <ph id=\"ph4\">&lt;xref:System.Net.FtpWebRequest.GetResponse%2A&gt;</ph>, or <ph id=\"ph5\">&lt;xref:System.Net.FtpWebRequest.BeginGetResponse%2A&gt;</ph> method causes an <ph id=\"ph6\">&lt;xref:System.InvalidOperationException&gt;</ph> exception.","pos":[0,353],"source":"Changing <xref:System.Net.FtpWebRequest.KeepAlive%2A> after calling the <xref:System.Net.FtpWebRequest.GetRequestStream%2A>, <xref:System.Net.FtpWebRequest.BeginGetRequestStream%2A>, <xref:System.Net.FtpWebRequest.GetResponse%2A>, or <xref:System.Net.FtpWebRequest.BeginGetResponse%2A> method causes an <xref:System.InvalidOperationException> exception."}]}],"pos":[60537,61084],"yaml":true,"extradata":"MT"},{"content":"`true` if the connection to the server should not be destroyed; otherwise, `false`. The default value is `true`.","nodes":[{"pos":[0,112],"content":"`true` if the connection to the server should not be destroyed; otherwise, `false`. The default value is `true`.","nodes":[{"content":"<ph id=\"ph1\">`true`</ph> if the connection to the server should not be destroyed; otherwise, <ph id=\"ph2\">`false`</ph>.","pos":[0,83],"source":"`true` if the connection to the server should not be destroyed; otherwise, `false`."},{"content":"The default value is <ph id=\"ph1\">`true`</ph>.","pos":[84,112],"source":" The default value is `true`."}]}],"pos":[61639,61754],"yaml":true},{"content":"A new value was specified for this property for a request that is already in progress.","nodes":[{"pos":[0,86],"content":"A new value was specified for this property for a request that is already in progress.","nodes":[{"content":"A new value was specified for this property for a request that is already in progress.","pos":[0,86]}]}],"pos":[61926,62013],"yaml":true},{"content":"Gets or sets the command to send to the FTP server.","nodes":[{"pos":[0,51],"content":"Gets or sets the command to send to the FTP server.","nodes":[{"content":"Gets or sets the command to send to the FTP server.","pos":[0,51]}]}],"pos":[63070,63122],"yaml":true},{"content":"The <xref:System.Net.FtpWebRequest.Method%2A> property determines which command is sent to the server. You set the <xref:System.Net.FtpWebRequest.Method%2A> by using the strings defined in the public field members of the <xref:System.Net.WebRequestMethods.Ftp> class. Note that the strings defined in the <xref:System.Net.WebRequestMethods.Ftp> class are the only supported options for the <xref:System.Net.FtpWebRequest.Method%2A> property. Setting the <xref:System.Net.FtpWebRequest.Method%2A> property to any other value will result in an <xref:System.ArgumentException> exception.  \n  \n When setting <xref:System.Net.FtpWebRequest.Method%2A> to <xref:System.Net.WebRequestMethods.Ftp.UploadFile>, you must do so before calling the <xref:System.Net.FtpWebRequest.GetRequestStream%2A> method. Failure to call these members in the correct order causes a <xref:System.Net.ProtocolViolationException> exception when you attempt to get the request stream.  \n  \n The credentials supplied for the <xref:System.Net.FtpWebRequest> object must have permission to perform the specified method. If not, the FTP command fails.  \n  \n To determine the success or failure of a command, check the <xref:System.Net.FtpWebResponse.StatusCode%2A> and <xref:System.Net.FtpWebResponse.StatusDescription%2A> properties.","nodes":[{"pos":[0,584],"content":"The <xref:System.Net.FtpWebRequest.Method%2A> property determines which command is sent to the server. You set the <xref:System.Net.FtpWebRequest.Method%2A> by using the strings defined in the public field members of the <xref:System.Net.WebRequestMethods.Ftp> class. Note that the strings defined in the <xref:System.Net.WebRequestMethods.Ftp> class are the only supported options for the <xref:System.Net.FtpWebRequest.Method%2A> property. Setting the <xref:System.Net.FtpWebRequest.Method%2A> property to any other value will result in an <xref:System.ArgumentException> exception.","nodes":[{"content":"The <xref:System.Net.FtpWebRequest.Method%2A> property determines which command is sent to the server. You set the <xref:System.Net.FtpWebRequest.Method%2A> by using the strings defined in the public field members of the <xref:System.Net.WebRequestMethods.Ftp> class. Note that the strings defined in the <xref:System.Net.WebRequestMethods.Ftp> class are the only supported options for the <xref:System.Net.FtpWebRequest.Method%2A> property. Setting the <xref:System.Net.FtpWebRequest.Method%2A> property to any other value will result in an <xref:System.ArgumentException> exception.","pos":[0,584],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Net.FtpWebRequest.Method%2A&gt;</ph> property determines which command is sent to the server.","pos":[0,102],"source":"The <xref:System.Net.FtpWebRequest.Method%2A> property determines which command is sent to the server."},{"content":"You set the <ph id=\"ph1\">&lt;xref:System.Net.FtpWebRequest.Method%2A&gt;</ph> by using the strings defined in the public field members of the <ph id=\"ph2\">&lt;xref:System.Net.WebRequestMethods.Ftp&gt;</ph> class.","pos":[103,267],"source":" You set the <xref:System.Net.FtpWebRequest.Method%2A> by using the strings defined in the public field members of the <xref:System.Net.WebRequestMethods.Ftp> class."},{"content":"Note that the strings defined in the <ph id=\"ph1\">&lt;xref:System.Net.WebRequestMethods.Ftp&gt;</ph> class are the only supported options for the <ph id=\"ph2\">&lt;xref:System.Net.FtpWebRequest.Method%2A&gt;</ph> property.","pos":[268,441],"source":" Note that the strings defined in the <xref:System.Net.WebRequestMethods.Ftp> class are the only supported options for the <xref:System.Net.FtpWebRequest.Method%2A> property."},{"content":"Setting the <ph id=\"ph1\">&lt;xref:System.Net.FtpWebRequest.Method%2A&gt;</ph> property to any other value will result in an <ph id=\"ph2\">&lt;xref:System.ArgumentException&gt;</ph> exception.","pos":[442,584],"source":" Setting the <xref:System.Net.FtpWebRequest.Method%2A> property to any other value will result in an <xref:System.ArgumentException> exception."}]}]},{"pos":[591,953],"content":"When setting <xref:System.Net.FtpWebRequest.Method%2A> to <xref:System.Net.WebRequestMethods.Ftp.UploadFile>, you must do so before calling the <xref:System.Net.FtpWebRequest.GetRequestStream%2A> method. Failure to call these members in the correct order causes a <xref:System.Net.ProtocolViolationException> exception when you attempt to get the request stream.","nodes":[{"content":"When setting <xref:System.Net.FtpWebRequest.Method%2A> to <xref:System.Net.WebRequestMethods.Ftp.UploadFile>, you must do so before calling the <xref:System.Net.FtpWebRequest.GetRequestStream%2A> method. Failure to call these members in the correct order causes a <xref:System.Net.ProtocolViolationException> exception when you attempt to get the request stream.","pos":[0,362],"nodes":[{"content":"When setting <ph id=\"ph1\">&lt;xref:System.Net.FtpWebRequest.Method%2A&gt;</ph> to <ph id=\"ph2\">&lt;xref:System.Net.WebRequestMethods.Ftp.UploadFile&gt;</ph>, you must do so before calling the <ph id=\"ph3\">&lt;xref:System.Net.FtpWebRequest.GetRequestStream%2A&gt;</ph> method.","pos":[0,203],"source":"When setting <xref:System.Net.FtpWebRequest.Method%2A> to <xref:System.Net.WebRequestMethods.Ftp.UploadFile>, you must do so before calling the <xref:System.Net.FtpWebRequest.GetRequestStream%2A> method."},{"content":"Failure to call these members in the correct order causes a <ph id=\"ph1\">&lt;xref:System.Net.ProtocolViolationException&gt;</ph> exception when you attempt to get the request stream.","pos":[204,362],"source":" Failure to call these members in the correct order causes a <xref:System.Net.ProtocolViolationException> exception when you attempt to get the request stream."}]}]},{"pos":[960,1116],"content":"The credentials supplied for the <xref:System.Net.FtpWebRequest> object must have permission to perform the specified method. If not, the FTP command fails.","nodes":[{"content":"The credentials supplied for the <xref:System.Net.FtpWebRequest> object must have permission to perform the specified method. If not, the FTP command fails.","pos":[0,156],"nodes":[{"content":"The credentials supplied for the <ph id=\"ph1\">&lt;xref:System.Net.FtpWebRequest&gt;</ph> object must have permission to perform the specified method.","pos":[0,125],"source":"The credentials supplied for the <xref:System.Net.FtpWebRequest> object must have permission to perform the specified method."},{"content":"If not, the FTP command fails.","pos":[126,156]}]}]},{"pos":[1123,1299],"content":"To determine the success or failure of a command, check the <xref:System.Net.FtpWebResponse.StatusCode%2A> and <xref:System.Net.FtpWebResponse.StatusDescription%2A> properties.","nodes":[{"content":"To determine the success or failure of a command, check the <ph id=\"ph1\">&lt;xref:System.Net.FtpWebResponse.StatusCode%2A&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Net.FtpWebResponse.StatusDescription%2A&gt;</ph> properties.","pos":[0,176],"source":"To determine the success or failure of a command, check the <xref:System.Net.FtpWebResponse.StatusCode%2A> and <xref:System.Net.FtpWebResponse.StatusDescription%2A> properties."}]}],"pos":[63133,64441],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.String\"></xref> value that contains the FTP command to send to the server. The default value is <xref href=\"System.Net.WebRequestMethods.Ftp.DownloadFile\"></xref>.","nodes":[{"pos":[0,184],"content":"A <xref href=\"System.String\"></xref> value that contains the FTP command to send to the server. The default value is <xref href=\"System.Net.WebRequestMethods.Ftp.DownloadFile\"></xref>.","nodes":[{"content":"A <ph id=\"ph1\">&lt;xref href=\"System.String\"&gt;&lt;/xref&gt;</ph> value that contains the FTP command to send to the server.","pos":[0,95],"source":"A <xref href=\"System.String\"></xref> value that contains the FTP command to send to the server."},{"content":"The default value is <ph id=\"ph1\">&lt;xref href=\"System.Net.WebRequestMethods.Ftp.DownloadFile\"&gt;&lt;/xref&gt;</ph>.","pos":[96,184],"source":" The default value is <xref href=\"System.Net.WebRequestMethods.Ftp.DownloadFile\"></xref>."}]}],"pos":[64907,65092],"yaml":true},{"content":"A new value was specified for this property for a request that is already in progress.","nodes":[{"pos":[0,86],"content":"A new value was specified for this property for a request that is already in progress.","nodes":[{"content":"A new value was specified for this property for a request that is already in progress.","pos":[0,86]}]}],"pos":[65261,65348],"yaml":true},{"content":"The method is invalid.  \n  \n \\- or -  \n  \n The method is not supported.  \n  \n \\- or -  \n  \n Multiple methods were specified.","nodes":[{"pos":[0,22],"content":"The method is invalid.","nodes":[{"content":"The method is invalid.","pos":[0,22]}]},{"pos":[29,36],"content":"\\- or -","nodes":[{"content":"<ph id=\"ph1\">\\-</ph> or -","pos":[0,7],"source":"\\- or -"}]},{"pos":[43,71],"content":"The method is not supported.","nodes":[{"content":"The method is not supported.","pos":[0,28]}]},{"pos":[78,85],"content":"\\- or -","nodes":[{"content":"<ph id=\"ph1\">\\-</ph> or -","pos":[0,7],"source":"\\- or -"}]},{"pos":[92,124],"content":"Multiple methods were specified.","nodes":[{"content":"Multiple methods were specified.","pos":[0,32]}]}],"pos":[65442,65579],"yaml":true},{"content":"Always throws a <xref href=\"System.NotSupportedException\"></xref>.","nodes":[{"pos":[0,66],"content":"Always throws a <ph id=\"ph1\">&lt;xref href=\"System.NotSupportedException\"&gt;&lt;/xref&gt;</ph>.","source":"Always throws a <xref href=\"System.NotSupportedException\"></xref>."}],"pos":[66650,66717],"yaml":true},{"content":"The <xref:System.Net.FtpWebRequest.PreAuthenticate%2A> property is provided only for compatibility with other implementations of the <xref:System.Net.WebRequest> and <xref:System.Net.WebResponse> classes.","nodes":[{"pos":[0,204],"content":"The <xref:System.Net.FtpWebRequest.PreAuthenticate%2A> property is provided only for compatibility with other implementations of the <xref:System.Net.WebRequest> and <xref:System.Net.WebResponse> classes.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Net.FtpWebRequest.PreAuthenticate%2A&gt;</ph> property is provided only for compatibility with other implementations of the <ph id=\"ph2\">&lt;xref:System.Net.WebRequest&gt;</ph> and <ph id=\"ph3\">&lt;xref:System.Net.WebResponse&gt;</ph> classes.","pos":[0,204],"source":"The <xref:System.Net.FtpWebRequest.PreAuthenticate%2A> property is provided only for compatibility with other implementations of the <xref:System.Net.WebRequest> and <xref:System.Net.WebResponse> classes."}]}],"pos":[66728,66933],"yaml":true,"extradata":"MT"},{"content":"Always throws a <xref href=\"System.NotSupportedException\"></xref>.","nodes":[{"pos":[0,66],"content":"Always throws a <ph id=\"ph1\">&lt;xref href=\"System.NotSupportedException\"&gt;&lt;/xref&gt;</ph>.","source":"Always throws a <xref href=\"System.NotSupportedException\"></xref>."}],"pos":[67065,67132],"yaml":true},{"content":"Preauthentication is not supported for FTP.","nodes":[{"pos":[0,43],"content":"Preauthentication is not supported for FTP.","nodes":[{"content":"Preauthentication is not supported for FTP.","pos":[0,43]}]}],"pos":[67302,67346],"yaml":true},{"content":"Gets or sets the proxy used to communicate with the FTP server.","nodes":[{"pos":[0,63],"content":"Gets or sets the proxy used to communicate with the FTP server.","nodes":[{"content":"Gets or sets the proxy used to communicate with the FTP server.","pos":[0,63]}]}],"pos":[68357,68421],"yaml":true},{"content":"The <xref:System.Net.FtpWebRequest.Proxy%2A> property identifies the <xref:System.Net.IWebProxy> instance that communicates with the FTP server. The proxy is set by the system by using configuration files and the Internet Explorer Local Area Network settings. To specify that no proxy should be used, set <xref:System.Net.FtpWebRequest.Proxy%2A> to the proxy instance returned by the <xref:System.Net.GlobalProxySelection.GetEmptyWebProxy%2A?displayProperty=fullName> method. For more information about automatic proxy detection, see [Automatic Proxy Detection](~/docs/framework/network-programming/automatic-proxy-detection.md).  \n  \n You must set <xref:System.Net.FtpWebRequest.Proxy%2A> before writing data to the request's stream or getting the response. Changing <xref:System.Net.FtpWebRequest.Proxy%2A> after calling the <xref:System.Net.FtpWebRequest.GetRequestStream%2A>, <xref:System.Net.FtpWebRequest.BeginGetRequestStream%2A>, <xref:System.Net.FtpWebRequest.GetResponse%2A>, or <xref:System.Net.FtpWebRequest.BeginGetResponse%2A> method causes an <xref:System.InvalidOperationException> exception.  \n  \n The <xref:System.Net.FtpWebRequest> class supports HTTP and ISA Firewall Client proxies.  \n  \n If the specified proxy is an HTTP proxy, only the <xref:System.Net.WebRequestMethods.Ftp.DownloadFile>, <xref:System.Net.WebRequestMethods.Ftp.ListDirectory>, and <xref:System.Net.WebRequestMethods.Ftp.ListDirectoryDetails> commands are supported.","nodes":[{"pos":[0,629],"content":"The <xref:System.Net.FtpWebRequest.Proxy%2A> property identifies the <xref:System.Net.IWebProxy> instance that communicates with the FTP server. The proxy is set by the system by using configuration files and the Internet Explorer Local Area Network settings. To specify that no proxy should be used, set <xref:System.Net.FtpWebRequest.Proxy%2A> to the proxy instance returned by the <xref:System.Net.GlobalProxySelection.GetEmptyWebProxy%2A?displayProperty=fullName> method. For more information about automatic proxy detection, see [Automatic Proxy Detection](~/docs/framework/network-programming/automatic-proxy-detection.md).","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Net.FtpWebRequest.Proxy%2A&gt;</ph> property identifies the <ph id=\"ph2\">&lt;xref:System.Net.IWebProxy&gt;</ph> instance that communicates with the FTP server.","pos":[0,144],"source":"The <xref:System.Net.FtpWebRequest.Proxy%2A> property identifies the <xref:System.Net.IWebProxy> instance that communicates with the FTP server."},{"content":"The proxy is set by the system by using configuration files and the Internet Explorer Local Area Network settings.","pos":[145,259]},{"content":"To specify that no proxy should be used, set <ph id=\"ph1\">&lt;xref:System.Net.FtpWebRequest.Proxy%2A&gt;</ph> to the proxy instance returned by the <ph id=\"ph2\">&lt;xref:System.Net.GlobalProxySelection.GetEmptyWebProxy%2A?displayProperty=fullName&gt;</ph> method.","pos":[260,475],"source":" To specify that no proxy should be used, set <xref:System.Net.FtpWebRequest.Proxy%2A> to the proxy instance returned by the <xref:System.Net.GlobalProxySelection.GetEmptyWebProxy%2A?displayProperty=fullName> method."},{"content":"For more information about automatic proxy detection, see <bpt id=\"p1\">[</bpt>Automatic Proxy Detection<ept id=\"p1\">](~/docs/framework/network-programming/automatic-proxy-detection.md)</ept>.","pos":[476,629],"source":" For more information about automatic proxy detection, see [Automatic Proxy Detection](~/docs/framework/network-programming/automatic-proxy-detection.md)."}]},{"pos":[636,1108],"content":"You must set <xref:System.Net.FtpWebRequest.Proxy%2A> before writing data to the request's stream or getting the response. Changing <xref:System.Net.FtpWebRequest.Proxy%2A> after calling the <xref:System.Net.FtpWebRequest.GetRequestStream%2A>, <xref:System.Net.FtpWebRequest.BeginGetRequestStream%2A>, <xref:System.Net.FtpWebRequest.GetResponse%2A>, or <xref:System.Net.FtpWebRequest.BeginGetResponse%2A> method causes an <xref:System.InvalidOperationException> exception.","nodes":[{"content":"You must set <xref:System.Net.FtpWebRequest.Proxy%2A> before writing data to the request's stream or getting the response. Changing <xref:System.Net.FtpWebRequest.Proxy%2A> after calling the <xref:System.Net.FtpWebRequest.GetRequestStream%2A>, <xref:System.Net.FtpWebRequest.BeginGetRequestStream%2A>, <xref:System.Net.FtpWebRequest.GetResponse%2A>, or <xref:System.Net.FtpWebRequest.BeginGetResponse%2A> method causes an <xref:System.InvalidOperationException> exception.","pos":[0,472],"nodes":[{"content":"You must set <ph id=\"ph1\">&lt;xref:System.Net.FtpWebRequest.Proxy%2A&gt;</ph> before writing data to the request's stream or getting the response.","pos":[0,122],"source":"You must set <xref:System.Net.FtpWebRequest.Proxy%2A> before writing data to the request's stream or getting the response."},{"content":"Changing <ph id=\"ph1\">&lt;xref:System.Net.FtpWebRequest.Proxy%2A&gt;</ph> after calling the <ph id=\"ph2\">&lt;xref:System.Net.FtpWebRequest.GetRequestStream%2A&gt;</ph>, <ph id=\"ph3\">&lt;xref:System.Net.FtpWebRequest.BeginGetRequestStream%2A&gt;</ph>, <ph id=\"ph4\">&lt;xref:System.Net.FtpWebRequest.GetResponse%2A&gt;</ph>, or <ph id=\"ph5\">&lt;xref:System.Net.FtpWebRequest.BeginGetResponse%2A&gt;</ph> method causes an <ph id=\"ph6\">&lt;xref:System.InvalidOperationException&gt;</ph> exception.","pos":[123,472],"source":" Changing <xref:System.Net.FtpWebRequest.Proxy%2A> after calling the <xref:System.Net.FtpWebRequest.GetRequestStream%2A>, <xref:System.Net.FtpWebRequest.BeginGetRequestStream%2A>, <xref:System.Net.FtpWebRequest.GetResponse%2A>, or <xref:System.Net.FtpWebRequest.BeginGetResponse%2A> method causes an <xref:System.InvalidOperationException> exception."}]}]},{"pos":[1115,1203],"content":"The <xref:System.Net.FtpWebRequest> class supports HTTP and ISA Firewall Client proxies.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Net.FtpWebRequest&gt;</ph> class supports HTTP and ISA Firewall Client proxies.","pos":[0,88],"source":"The <xref:System.Net.FtpWebRequest> class supports HTTP and ISA Firewall Client proxies."}]},{"pos":[1210,1457],"content":"If the specified proxy is an HTTP proxy, only the <xref:System.Net.WebRequestMethods.Ftp.DownloadFile>, <xref:System.Net.WebRequestMethods.Ftp.ListDirectory>, and <xref:System.Net.WebRequestMethods.Ftp.ListDirectoryDetails> commands are supported.","nodes":[{"content":"If the specified proxy is an HTTP proxy, only the <ph id=\"ph1\">&lt;xref:System.Net.WebRequestMethods.Ftp.DownloadFile&gt;</ph>, <ph id=\"ph2\">&lt;xref:System.Net.WebRequestMethods.Ftp.ListDirectory&gt;</ph>, and <ph id=\"ph3\">&lt;xref:System.Net.WebRequestMethods.Ftp.ListDirectoryDetails&gt;</ph> commands are supported.","pos":[0,247],"source":"If the specified proxy is an HTTP proxy, only the <xref:System.Net.WebRequestMethods.Ftp.DownloadFile>, <xref:System.Net.WebRequestMethods.Ftp.ListDirectory>, and <xref:System.Net.WebRequestMethods.Ftp.ListDirectoryDetails> commands are supported."}]}],"pos":[68432,69898],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.Net.IWebProxy\"></xref> instance responsible for communicating with the FTP server.","nodes":[{"pos":[0,104],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Net.IWebProxy\"&gt;&lt;/xref&gt;</ph> instance responsible for communicating with the FTP server.","source":"An <xref href=\"System.Net.IWebProxy\"></xref> instance responsible for communicating with the FTP server."}],"pos":[70344,70449],"yaml":true},{"content":"This property cannot be set to `null`.","nodes":[{"pos":[0,38],"content":"This property cannot be set to <ph id=\"ph1\">`null`</ph>.","source":"This property cannot be set to `null`."}],"pos":[70609,70648],"yaml":true},{"content":"A new value was specified for this property for a request that is already in progress.","nodes":[{"pos":[0,86],"content":"A new value was specified for this property for a request that is already in progress.","nodes":[{"content":"A new value was specified for this property for a request that is already in progress.","pos":[0,86]}]}],"pos":[70758,70845],"yaml":true},{"content":"Gets or sets a time-out when reading from or writing to a stream.","nodes":[{"pos":[0,65],"content":"Gets or sets a time-out when reading from or writing to a stream.","nodes":[{"content":"Gets or sets a time-out when reading from or writing to a stream.","pos":[0,65]}]}],"pos":[71922,71988],"yaml":true},{"content":"The <xref:System.Net.FtpWebRequest.ReadWriteTimeout%2A> is used when writing to the stream returned by the <xref:System.Net.FtpWebRequest.GetRequestStream%2A> method or reading from the stream returned by the <xref:System.Net.FtpWebResponse.GetResponseStream%2A> method.  \n  \n Specifically, the <xref:System.Net.FtpWebRequest.ReadWriteTimeout%2A> property controls the time-out for the <xref:System.IO.Stream.Read%2A> method, which is used to read the stream returned by the <xref:System.Net.FtpWebResponse.GetResponseStream%2A> method, and for the <xref:System.IO.Stream.Write%2A> method, which is used to write to the stream returned by the <xref:System.Net.FtpWebRequest.GetRequestStream%2A> method. If the time-out period is exceeded, the calling method throws a <xref:System.Net.WebException> with <xref:System.Net.WebExceptionStatus> set to <xref:System.Net.WebExceptionStatus.Timeout>.  \n  \n To specify the amount of time to wait for the request to complete, use the <xref:System.Net.FtpWebRequest.Timeout%2A> property.","nodes":[{"pos":[0,270],"content":"The <xref:System.Net.FtpWebRequest.ReadWriteTimeout%2A> is used when writing to the stream returned by the <xref:System.Net.FtpWebRequest.GetRequestStream%2A> method or reading from the stream returned by the <xref:System.Net.FtpWebResponse.GetResponseStream%2A> method.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Net.FtpWebRequest.ReadWriteTimeout%2A&gt;</ph> is used when writing to the stream returned by the <ph id=\"ph2\">&lt;xref:System.Net.FtpWebRequest.GetRequestStream%2A&gt;</ph> method or reading from the stream returned by the <ph id=\"ph3\">&lt;xref:System.Net.FtpWebResponse.GetResponseStream%2A&gt;</ph> method.","pos":[0,270],"source":"The <xref:System.Net.FtpWebRequest.ReadWriteTimeout%2A> is used when writing to the stream returned by the <xref:System.Net.FtpWebRequest.GetRequestStream%2A> method or reading from the stream returned by the <xref:System.Net.FtpWebResponse.GetResponseStream%2A> method."}]},{"pos":[277,892],"content":"Specifically, the <xref:System.Net.FtpWebRequest.ReadWriteTimeout%2A> property controls the time-out for the <xref:System.IO.Stream.Read%2A> method, which is used to read the stream returned by the <xref:System.Net.FtpWebResponse.GetResponseStream%2A> method, and for the <xref:System.IO.Stream.Write%2A> method, which is used to write to the stream returned by the <xref:System.Net.FtpWebRequest.GetRequestStream%2A> method. If the time-out period is exceeded, the calling method throws a <xref:System.Net.WebException> with <xref:System.Net.WebExceptionStatus> set to <xref:System.Net.WebExceptionStatus.Timeout>.","nodes":[{"content":"Specifically, the <xref:System.Net.FtpWebRequest.ReadWriteTimeout%2A> property controls the time-out for the <xref:System.IO.Stream.Read%2A> method, which is used to read the stream returned by the <xref:System.Net.FtpWebResponse.GetResponseStream%2A> method, and for the <xref:System.IO.Stream.Write%2A> method, which is used to write to the stream returned by the <xref:System.Net.FtpWebRequest.GetRequestStream%2A> method. If the time-out period is exceeded, the calling method throws a <xref:System.Net.WebException> with <xref:System.Net.WebExceptionStatus> set to <xref:System.Net.WebExceptionStatus.Timeout>.","pos":[0,615],"nodes":[{"content":"Specifically, the <ph id=\"ph1\">&lt;xref:System.Net.FtpWebRequest.ReadWriteTimeout%2A&gt;</ph> property controls the time-out for the <ph id=\"ph2\">&lt;xref:System.IO.Stream.Read%2A&gt;</ph> method, which is used to read the stream returned by the <ph id=\"ph3\">&lt;xref:System.Net.FtpWebResponse.GetResponseStream%2A&gt;</ph> method, and for the <ph id=\"ph4\">&lt;xref:System.IO.Stream.Write%2A&gt;</ph> method, which is used to write to the stream returned by the <ph id=\"ph5\">&lt;xref:System.Net.FtpWebRequest.GetRequestStream%2A&gt;</ph> method.","pos":[0,425],"source":"Specifically, the <xref:System.Net.FtpWebRequest.ReadWriteTimeout%2A> property controls the time-out for the <xref:System.IO.Stream.Read%2A> method, which is used to read the stream returned by the <xref:System.Net.FtpWebResponse.GetResponseStream%2A> method, and for the <xref:System.IO.Stream.Write%2A> method, which is used to write to the stream returned by the <xref:System.Net.FtpWebRequest.GetRequestStream%2A> method."},{"content":"If the time-out period is exceeded, the calling method throws a <ph id=\"ph1\">&lt;xref:System.Net.WebException&gt;</ph> with <ph id=\"ph2\">&lt;xref:System.Net.WebExceptionStatus&gt;</ph> set to <ph id=\"ph3\">&lt;xref:System.Net.WebExceptionStatus.Timeout&gt;</ph>.","pos":[426,615],"source":" If the time-out period is exceeded, the calling method throws a <xref:System.Net.WebException> with <xref:System.Net.WebExceptionStatus> set to <xref:System.Net.WebExceptionStatus.Timeout>."}]}]},{"pos":[899,1026],"content":"To specify the amount of time to wait for the request to complete, use the <xref:System.Net.FtpWebRequest.Timeout%2A> property.","nodes":[{"content":"To specify the amount of time to wait for the request to complete, use the <ph id=\"ph1\">&lt;xref:System.Net.FtpWebRequest.Timeout%2A&gt;</ph> property.","pos":[0,127],"source":"To specify the amount of time to wait for the request to complete, use the <xref:System.Net.FtpWebRequest.Timeout%2A> property."}]}],"pos":[71999,73032],"yaml":true,"extradata":"MT"},{"content":"The number of milliseconds before the reading or writing times out. The default value is 300,000 milliseconds (5 minutes).","nodes":[{"pos":[0,122],"content":"The number of milliseconds before the reading or writing times out. The default value is 300,000 milliseconds (5 minutes).","nodes":[{"content":"The number of milliseconds before the reading or writing times out. The default value is 300,000 milliseconds (5 minutes).","pos":[0,122],"nodes":[{"content":"The number of milliseconds before the reading or writing times out.","pos":[0,67]},{"content":"The default value is 300,000 milliseconds (5 minutes).","pos":[68,122]}]}]}],"pos":[73153,73276],"yaml":true},{"content":"The request has already been sent.","nodes":[{"pos":[0,34],"content":"The request has already been sent.","nodes":[{"content":"The request has already been sent.","pos":[0,34]}]}],"pos":[73455,73490],"yaml":true},{"content":"The value specified for a set operation is less than or equal to zero and is not equal to <xref href=\"System.Threading.Timeout.Infinite\"></xref>.","nodes":[{"pos":[0,145],"content":"The value specified for a set operation is less than or equal to zero and is not equal to <ph id=\"ph1\">&lt;xref href=\"System.Threading.Timeout.Infinite\"&gt;&lt;/xref&gt;</ph>.","source":"The value specified for a set operation is less than or equal to zero and is not equal to <xref href=\"System.Threading.Timeout.Infinite\"></xref>."}],"pos":[73604,73750],"yaml":true},{"content":"Gets or sets the new name of a file being renamed.","nodes":[{"pos":[0,50],"content":"Gets or sets the new name of a file being renamed.","nodes":[{"content":"Gets or sets the new name of a file being renamed.","pos":[0,50]}]}],"pos":[74779,74830],"yaml":true},{"content":"The new name of the file being renamed.","nodes":[{"pos":[0,39],"content":"The new name of the file being renamed.","nodes":[{"content":"The new name of the file being renamed.","pos":[0,39]}]}],"pos":[74947,74987],"yaml":true},{"content":"The value specified for a set operation is `null` or an empty string.","nodes":[{"pos":[0,69],"content":"The value specified for a set operation is <ph id=\"ph1\">`null`</ph> or an empty string.","source":"The value specified for a set operation is `null` or an empty string."}],"pos":[75142,75212],"yaml":true},{"content":"A new value was specified for this property for a request that is already in progress.","nodes":[{"pos":[0,86],"content":"A new value was specified for this property for a request that is already in progress.","nodes":[{"content":"A new value was specified for this property for a request that is already in progress.","pos":[0,86]}]}],"pos":[75322,75409],"yaml":true},{"content":"Gets the URI requested by this instance.","nodes":[{"pos":[0,40],"content":"Gets the URI requested by this instance.","nodes":[{"content":"Gets the URI requested by this instance.","pos":[0,40]}]}],"pos":[76450,76491],"yaml":true},{"content":"The value of the <xref:System.Net.FtpWebRequest.RequestUri%2A> property is the URI specified when the <xref:System.Net.WebRequest.Create%2A> method was called to obtain this instance.","nodes":[{"pos":[0,183],"content":"The value of the <xref:System.Net.FtpWebRequest.RequestUri%2A> property is the URI specified when the <xref:System.Net.WebRequest.Create%2A> method was called to obtain this instance.","nodes":[{"content":"The value of the <ph id=\"ph1\">&lt;xref:System.Net.FtpWebRequest.RequestUri%2A&gt;</ph> property is the URI specified when the <ph id=\"ph2\">&lt;xref:System.Net.WebRequest.Create%2A&gt;</ph> method was called to obtain this instance.","pos":[0,183],"source":"The value of the <xref:System.Net.FtpWebRequest.RequestUri%2A> property is the URI specified when the <xref:System.Net.WebRequest.Create%2A> method was called to obtain this instance."}]}],"pos":[76502,76686],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Uri\"></xref> instance that identifies a resource that is accessed using the File Transfer Protocol.","nodes":[{"pos":[0,120],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Uri\"&gt;&lt;/xref&gt;</ph> instance that identifies a resource that is accessed using the File Transfer Protocol.","source":"A <xref href=\"System.Uri\"></xref> instance that identifies a resource that is accessed using the File Transfer Protocol."}],"pos":[77105,77226],"yaml":true},{"content":"Gets the <xref href=\"System.Net.ServicePoint\"></xref> object used to connect to the FTP server.","nodes":[{"pos":[0,95],"content":"Gets the <ph id=\"ph1\">&lt;xref href=\"System.Net.ServicePoint\"&gt;&lt;/xref&gt;</ph> object used to connect to the FTP server.","source":"Gets the <xref href=\"System.Net.ServicePoint\"></xref> object used to connect to the FTP server."}],"pos":[78345,78441],"yaml":true},{"content":"If no <xref:System.Net.ServicePoint> object exists, one is created for the FTP server. To set the maximum number of connections that can be open for an FTP server, set the <xref:System.Net.ServicePoint.ConnectionLimit%2A> property of the <xref:System.Net.ServicePoint> instance returned by this property.","nodes":[{"pos":[0,304],"content":"If no <xref:System.Net.ServicePoint> object exists, one is created for the FTP server. To set the maximum number of connections that can be open for an FTP server, set the <xref:System.Net.ServicePoint.ConnectionLimit%2A> property of the <xref:System.Net.ServicePoint> instance returned by this property.","nodes":[{"content":"If no <xref:System.Net.ServicePoint> object exists, one is created for the FTP server. To set the maximum number of connections that can be open for an FTP server, set the <xref:System.Net.ServicePoint.ConnectionLimit%2A> property of the <xref:System.Net.ServicePoint> instance returned by this property.","pos":[0,304],"nodes":[{"content":"If no <ph id=\"ph1\">&lt;xref:System.Net.ServicePoint&gt;</ph> object exists, one is created for the FTP server.","pos":[0,86],"source":"If no <xref:System.Net.ServicePoint> object exists, one is created for the FTP server."},{"content":"To set the maximum number of connections that can be open for an FTP server, set the <ph id=\"ph1\">&lt;xref:System.Net.ServicePoint.ConnectionLimit%2A&gt;</ph> property of the <ph id=\"ph2\">&lt;xref:System.Net.ServicePoint&gt;</ph> instance returned by this property.","pos":[87,304],"source":" To set the maximum number of connections that can be open for an FTP server, set the <xref:System.Net.ServicePoint.ConnectionLimit%2A> property of the <xref:System.Net.ServicePoint> instance returned by this property."}]}]}],"pos":[78452,78757],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Net.ServicePoint\"></xref> object that can be used to customize connection behavior.","nodes":[{"pos":[0,104],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Net.ServicePoint\"&gt;&lt;/xref&gt;</ph> object that can be used to customize connection behavior.","source":"A <xref href=\"System.Net.ServicePoint\"></xref> object that can be used to customize connection behavior."}],"pos":[79262,79367],"yaml":true},{"content":"Gets or sets the number of milliseconds to wait for a request.","nodes":[{"pos":[0,62],"content":"Gets or sets the number of milliseconds to wait for a request.","nodes":[{"content":"Gets or sets the number of milliseconds to wait for a request.","pos":[0,62]}]}],"pos":[80458,80521],"yaml":true},{"content":"To specify an infinite value, set the <xref:System.Net.FtpWebRequest.Timeout%2A> property to <xref:System.Threading.Timeout.Infinite> (-1). This is the default value.  \n  \n <xref:System.Net.FtpWebRequest.Timeout%2A> is the number of milliseconds that a synchronous request made with the <xref:System.Net.FtpWebRequest.GetResponse%2A> method waits for a response and that the <xref:System.Net.FtpWebRequest.GetRequestStream%2A> method waits for a stream. If a resource does not respond within the time-out period, the request throws a <xref:System.Net.WebException> with the <xref:System.Net.WebException.Status%2A> property set to <xref:System.Net.WebExceptionStatus.Timeout>.  \n  \n Changing <xref:System.Net.FtpWebRequest.Timeout%2A> after calling the <xref:System.Net.FtpWebRequest.GetRequestStream%2A>, <xref:System.Net.FtpWebRequest.BeginGetRequestStream%2A>, <xref:System.Net.FtpWebRequest.GetResponse%2A>, or <xref:System.Net.FtpWebRequest.BeginGetResponse%2A> method causes an <xref:System.InvalidOperationException> exception.  \n  \n A Domain Name System (DNS) query may take up to 15 seconds to return or time out. If your request contains a host name that requires resolution and you set <xref:System.Net.FtpWebRequest.Timeout%2A> to a value less than 15 seconds, it may take 15 seconds or more before a <xref:System.Net.WebException> is thrown to indicate a time-out on your request.","nodes":[{"pos":[0,166],"content":"To specify an infinite value, set the <xref:System.Net.FtpWebRequest.Timeout%2A> property to <xref:System.Threading.Timeout.Infinite> (-1). This is the default value.","nodes":[{"content":"To specify an infinite value, set the <xref:System.Net.FtpWebRequest.Timeout%2A> property to <xref:System.Threading.Timeout.Infinite> (-1). This is the default value.","pos":[0,166],"nodes":[{"content":"To specify an infinite value, set the <ph id=\"ph1\">&lt;xref:System.Net.FtpWebRequest.Timeout%2A&gt;</ph> property to <ph id=\"ph2\">&lt;xref:System.Threading.Timeout.Infinite&gt;</ph> (-1).","pos":[0,139],"source":"To specify an infinite value, set the <xref:System.Net.FtpWebRequest.Timeout%2A> property to <xref:System.Threading.Timeout.Infinite> (-1)."},{"content":"This is the default value.","pos":[140,166]}]}]},{"pos":[173,676],"content":"<xref:System.Net.FtpWebRequest.Timeout%2A> is the number of milliseconds that a synchronous request made with the <xref:System.Net.FtpWebRequest.GetResponse%2A> method waits for a response and that the <xref:System.Net.FtpWebRequest.GetRequestStream%2A> method waits for a stream. If a resource does not respond within the time-out period, the request throws a <xref:System.Net.WebException> with the <xref:System.Net.WebException.Status%2A> property set to <xref:System.Net.WebExceptionStatus.Timeout>.","nodes":[{"content":"<xref:System.Net.FtpWebRequest.Timeout%2A> is the number of milliseconds that a synchronous request made with the <xref:System.Net.FtpWebRequest.GetResponse%2A> method waits for a response and that the <xref:System.Net.FtpWebRequest.GetRequestStream%2A> method waits for a stream. If a resource does not respond within the time-out period, the request throws a <xref:System.Net.WebException> with the <xref:System.Net.WebException.Status%2A> property set to <xref:System.Net.WebExceptionStatus.Timeout>.","pos":[0,503],"nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Net.FtpWebRequest.Timeout%2A&gt;</ph> is the number of milliseconds that a synchronous request made with the <ph id=\"ph2\">&lt;xref:System.Net.FtpWebRequest.GetResponse%2A&gt;</ph> method waits for a response and that the <ph id=\"ph3\">&lt;xref:System.Net.FtpWebRequest.GetRequestStream%2A&gt;</ph> method waits for a stream.","pos":[0,280],"source":"<xref:System.Net.FtpWebRequest.Timeout%2A> is the number of milliseconds that a synchronous request made with the <xref:System.Net.FtpWebRequest.GetResponse%2A> method waits for a response and that the <xref:System.Net.FtpWebRequest.GetRequestStream%2A> method waits for a stream."},{"content":"If a resource does not respond within the time-out period, the request throws a <ph id=\"ph1\">&lt;xref:System.Net.WebException&gt;</ph> with the <ph id=\"ph2\">&lt;xref:System.Net.WebException.Status%2A&gt;</ph> property set to <ph id=\"ph3\">&lt;xref:System.Net.WebExceptionStatus.Timeout&gt;</ph>.","pos":[281,503],"source":" If a resource does not respond within the time-out period, the request throws a <xref:System.Net.WebException> with the <xref:System.Net.WebException.Status%2A> property set to <xref:System.Net.WebExceptionStatus.Timeout>."}]}]},{"pos":[683,1034],"content":"Changing <xref:System.Net.FtpWebRequest.Timeout%2A> after calling the <xref:System.Net.FtpWebRequest.GetRequestStream%2A>, <xref:System.Net.FtpWebRequest.BeginGetRequestStream%2A>, <xref:System.Net.FtpWebRequest.GetResponse%2A>, or <xref:System.Net.FtpWebRequest.BeginGetResponse%2A> method causes an <xref:System.InvalidOperationException> exception.","nodes":[{"content":"Changing <ph id=\"ph1\">&lt;xref:System.Net.FtpWebRequest.Timeout%2A&gt;</ph> after calling the <ph id=\"ph2\">&lt;xref:System.Net.FtpWebRequest.GetRequestStream%2A&gt;</ph>, <ph id=\"ph3\">&lt;xref:System.Net.FtpWebRequest.BeginGetRequestStream%2A&gt;</ph>, <ph id=\"ph4\">&lt;xref:System.Net.FtpWebRequest.GetResponse%2A&gt;</ph>, or <ph id=\"ph5\">&lt;xref:System.Net.FtpWebRequest.BeginGetResponse%2A&gt;</ph> method causes an <ph id=\"ph6\">&lt;xref:System.InvalidOperationException&gt;</ph> exception.","pos":[0,351],"source":"Changing <xref:System.Net.FtpWebRequest.Timeout%2A> after calling the <xref:System.Net.FtpWebRequest.GetRequestStream%2A>, <xref:System.Net.FtpWebRequest.BeginGetRequestStream%2A>, <xref:System.Net.FtpWebRequest.GetResponse%2A>, or <xref:System.Net.FtpWebRequest.BeginGetResponse%2A> method causes an <xref:System.InvalidOperationException> exception."}]},{"pos":[1041,1393],"content":"A Domain Name System (DNS) query may take up to 15 seconds to return or time out. If your request contains a host name that requires resolution and you set <xref:System.Net.FtpWebRequest.Timeout%2A> to a value less than 15 seconds, it may take 15 seconds or more before a <xref:System.Net.WebException> is thrown to indicate a time-out on your request.","nodes":[{"content":"A Domain Name System (DNS) query may take up to 15 seconds to return or time out. If your request contains a host name that requires resolution and you set <xref:System.Net.FtpWebRequest.Timeout%2A> to a value less than 15 seconds, it may take 15 seconds or more before a <xref:System.Net.WebException> is thrown to indicate a time-out on your request.","pos":[0,352],"nodes":[{"content":"A Domain Name System (DNS) query may take up to 15 seconds to return or time out.","pos":[0,81]},{"content":"If your request contains a host name that requires resolution and you set <ph id=\"ph1\">&lt;xref:System.Net.FtpWebRequest.Timeout%2A&gt;</ph> to a value less than 15 seconds, it may take 15 seconds or more before a <ph id=\"ph2\">&lt;xref:System.Net.WebException&gt;</ph> is thrown to indicate a time-out on your request.","pos":[82,352],"source":" If your request contains a host name that requires resolution and you set <xref:System.Net.FtpWebRequest.Timeout%2A> to a value less than 15 seconds, it may take 15 seconds or more before a <xref:System.Net.WebException> is thrown to indicate a time-out on your request."}]}]}],"pos":[80532,81934],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.Int32\"></xref> value that contains the number of milliseconds to wait before a request times out. The default value is <xref href=\"System.Threading.Timeout.Infinite\"></xref>.","nodes":[{"pos":[0,196],"content":"An <xref href=\"System.Int32\"></xref> value that contains the number of milliseconds to wait before a request times out. The default value is <xref href=\"System.Threading.Timeout.Infinite\"></xref>.","nodes":[{"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Int32\"&gt;&lt;/xref&gt;</ph> value that contains the number of milliseconds to wait before a request times out.","pos":[0,119],"source":"An <xref href=\"System.Int32\"></xref> value that contains the number of milliseconds to wait before a request times out."},{"content":"The default value is <ph id=\"ph1\">&lt;xref href=\"System.Threading.Timeout.Infinite\"&gt;&lt;/xref&gt;</ph>.","pos":[120,196],"source":" The default value is <xref href=\"System.Threading.Timeout.Infinite\"></xref>."}]}],"pos":[82347,82544],"yaml":true},{"content":"The value specified is less than zero and is not <xref href=\"System.Threading.Timeout.Infinite\"></xref>.","nodes":[{"pos":[0,104],"content":"The value specified is less than zero and is not <ph id=\"ph1\">&lt;xref href=\"System.Threading.Timeout.Infinite\"&gt;&lt;/xref&gt;</ph>.","source":"The value specified is less than zero and is not <xref href=\"System.Threading.Timeout.Infinite\"></xref>."}],"pos":[82718,82823],"yaml":true},{"content":"A new value was specified for this property for a request that is already in progress.","nodes":[{"pos":[0,86],"content":"A new value was specified for this property for a request that is already in progress.","nodes":[{"content":"A new value was specified for this property for a request that is already in progress.","pos":[0,86]}]}],"pos":[82933,83020],"yaml":true},{"content":"Gets or sets a <xref href=\"System.Boolean\"></xref> value that specifies the data type for file transfers.","nodes":[{"pos":[0,105],"content":"Gets or sets a <ph id=\"ph1\">&lt;xref href=\"System.Boolean\"&gt;&lt;/xref&gt;</ph> value that specifies the data type for file transfers.","source":"Gets or sets a <xref href=\"System.Boolean\"></xref> value that specifies the data type for file transfers."}],"pos":[84055,84161],"yaml":true},{"content":"If you are sending binary data, such as an image, set this property to `true`. If you are sending text, set the property to `false`. Specifying `true` causes the <xref:System.Net.FtpWebRequest> to send a `\"TYPE I\"` command to the server. Specifying `false` causes the <xref:System.Net.FtpWebRequest> to send a `\"Type A\"` command to the server. FTP servers can ignore these commands.  \n  \n Changing <xref:System.Net.FtpWebRequest.UseBinary%2A> after calling the <xref:System.Net.FtpWebRequest.GetRequestStream%2A>, <xref:System.Net.FtpWebRequest.BeginGetRequestStream%2A>, <xref:System.Net.FtpWebRequest.GetResponse%2A>, or <xref:System.Net.FtpWebRequest.BeginGetResponse%2A> method causes an <xref:System.InvalidOperationException> exception.","nodes":[{"pos":[0,382],"content":"If you are sending binary data, such as an image, set this property to `true`. If you are sending text, set the property to `false`. Specifying `true` causes the <xref:System.Net.FtpWebRequest> to send a `\"TYPE I\"` command to the server. Specifying `false` causes the <xref:System.Net.FtpWebRequest> to send a `\"Type A\"` command to the server. FTP servers can ignore these commands.","nodes":[{"content":"If you are sending binary data, such as an image, set this property to <ph id=\"ph1\">`true`</ph>.","pos":[0,78],"source":"If you are sending binary data, such as an image, set this property to `true`."},{"content":"If you are sending text, set the property to <ph id=\"ph1\">`false`</ph>.","pos":[79,132],"source":" If you are sending text, set the property to `false`."},{"content":"Specifying <ph id=\"ph1\">`true`</ph> causes the <ph id=\"ph2\">&lt;xref:System.Net.FtpWebRequest&gt;</ph> to send a <ph id=\"ph3\">`\"TYPE I\"`</ph> command to the server.","pos":[133,237],"source":" Specifying `true` causes the <xref:System.Net.FtpWebRequest> to send a `\"TYPE I\"` command to the server."},{"content":"Specifying <ph id=\"ph1\">`false`</ph> causes the <ph id=\"ph2\">&lt;xref:System.Net.FtpWebRequest&gt;</ph> to send a <ph id=\"ph3\">`\"Type A\"`</ph> command to the server.","pos":[238,343],"source":" Specifying `false` causes the <xref:System.Net.FtpWebRequest> to send a `\"Type A\"` command to the server."},{"content":"FTP servers can ignore these commands.","pos":[344,382]}]},{"pos":[389,742],"content":"Changing <xref:System.Net.FtpWebRequest.UseBinary%2A> after calling the <xref:System.Net.FtpWebRequest.GetRequestStream%2A>, <xref:System.Net.FtpWebRequest.BeginGetRequestStream%2A>, <xref:System.Net.FtpWebRequest.GetResponse%2A>, or <xref:System.Net.FtpWebRequest.BeginGetResponse%2A> method causes an <xref:System.InvalidOperationException> exception.","nodes":[{"content":"Changing <ph id=\"ph1\">&lt;xref:System.Net.FtpWebRequest.UseBinary%2A&gt;</ph> after calling the <ph id=\"ph2\">&lt;xref:System.Net.FtpWebRequest.GetRequestStream%2A&gt;</ph>, <ph id=\"ph3\">&lt;xref:System.Net.FtpWebRequest.BeginGetRequestStream%2A&gt;</ph>, <ph id=\"ph4\">&lt;xref:System.Net.FtpWebRequest.GetResponse%2A&gt;</ph>, or <ph id=\"ph5\">&lt;xref:System.Net.FtpWebRequest.BeginGetResponse%2A&gt;</ph> method causes an <ph id=\"ph6\">&lt;xref:System.InvalidOperationException&gt;</ph> exception.","pos":[0,353],"source":"Changing <xref:System.Net.FtpWebRequest.UseBinary%2A> after calling the <xref:System.Net.FtpWebRequest.GetRequestStream%2A>, <xref:System.Net.FtpWebRequest.BeginGetRequestStream%2A>, <xref:System.Net.FtpWebRequest.GetResponse%2A>, or <xref:System.Net.FtpWebRequest.BeginGetResponse%2A> method causes an <xref:System.InvalidOperationException> exception."}]}],"pos":[84172,84923],"yaml":true,"extradata":"MT"},{"content":"`true` to indicate to the server that the data to be transferred is binary; `false` to indicate that the data is text. The default value is `true`.","nodes":[{"pos":[0,147],"content":"`true` to indicate to the server that the data to be transferred is binary; `false` to indicate that the data is text. The default value is `true`.","nodes":[{"content":"<ph id=\"ph1\">`true`</ph> to indicate to the server that the data to be transferred is binary; <ph id=\"ph2\">`false`</ph> to indicate that the data is text.","pos":[0,118],"source":"`true` to indicate to the server that the data to be transferred is binary; `false` to indicate that the data is text."},{"content":"The default value is <ph id=\"ph1\">`true`</ph>.","pos":[119,147],"source":" The default value is `true`."}]}],"pos":[85407,85557],"yaml":true},{"content":"A new value was specified for this property for a request that is already in progress.","nodes":[{"pos":[0,86],"content":"A new value was specified for this property for a request that is already in progress.","nodes":[{"content":"A new value was specified for this property for a request that is already in progress.","pos":[0,86]}]}],"pos":[85729,85816],"yaml":true},{"content":"Always throws a <xref href=\"System.NotSupportedException\"></xref>.","nodes":[{"pos":[0,66],"content":"Always throws a <ph id=\"ph1\">&lt;xref href=\"System.NotSupportedException\"&gt;&lt;/xref&gt;</ph>.","source":"Always throws a <xref href=\"System.NotSupportedException\"></xref>."}],"pos":[86923,86990],"yaml":true},{"content":"The <xref:System.Net.FtpWebRequest.UseDefaultCredentials%2A> property is provided only for compatibility with other implementations of the <xref:System.Net.WebRequest> and <xref:System.Net.WebResponse> classes. There is no reason to use <xref:System.Net.FtpWebRequest.UseDefaultCredentials%2A>.","nodes":[{"pos":[0,294],"content":"The <xref:System.Net.FtpWebRequest.UseDefaultCredentials%2A> property is provided only for compatibility with other implementations of the <xref:System.Net.WebRequest> and <xref:System.Net.WebResponse> classes. There is no reason to use <xref:System.Net.FtpWebRequest.UseDefaultCredentials%2A>.","nodes":[{"content":"The <xref:System.Net.FtpWebRequest.UseDefaultCredentials%2A> property is provided only for compatibility with other implementations of the <xref:System.Net.WebRequest> and <xref:System.Net.WebResponse> classes. There is no reason to use <xref:System.Net.FtpWebRequest.UseDefaultCredentials%2A>.","pos":[0,294],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Net.FtpWebRequest.UseDefaultCredentials%2A&gt;</ph> property is provided only for compatibility with other implementations of the <ph id=\"ph2\">&lt;xref:System.Net.WebRequest&gt;</ph> and <ph id=\"ph3\">&lt;xref:System.Net.WebResponse&gt;</ph> classes.","pos":[0,210],"source":"The <xref:System.Net.FtpWebRequest.UseDefaultCredentials%2A> property is provided only for compatibility with other implementations of the <xref:System.Net.WebRequest> and <xref:System.Net.WebResponse> classes."},{"content":"There is no reason to use <ph id=\"ph1\">&lt;xref:System.Net.FtpWebRequest.UseDefaultCredentials%2A&gt;</ph>.","pos":[211,294],"source":" There is no reason to use <xref:System.Net.FtpWebRequest.UseDefaultCredentials%2A>."}]}]}],"pos":[87001,87296],"yaml":true,"extradata":"MT"},{"content":"Always throws a <xref href=\"System.NotSupportedException\"></xref>.","nodes":[{"pos":[0,66],"content":"Always throws a <ph id=\"ph1\">&lt;xref href=\"System.NotSupportedException\"&gt;&lt;/xref&gt;</ph>.","source":"Always throws a <xref href=\"System.NotSupportedException\"></xref>."}],"pos":[87468,87535],"yaml":true},{"content":"Default credentials are not supported for FTP.","nodes":[{"pos":[0,46],"content":"Default credentials are not supported for FTP.","nodes":[{"content":"Default credentials are not supported for FTP.","pos":[0,46]}]}],"pos":[87711,87758],"yaml":true},{"content":"Gets or sets the behavior of a client application's data transfer process.","nodes":[{"pos":[0,74],"content":"Gets or sets the behavior of a client application's data transfer process.","nodes":[{"content":"Gets or sets the behavior of a client application's data transfer process.","pos":[0,74]}]}],"pos":[88839,88914],"yaml":true},{"content":"Setting the <xref:System.Net.FtpWebRequest.UsePassive%2A> property to `true` sends the \"`PASV\"` command to the server. This command requests the server to listen on a data port and to wait for a connection rather than initiate one upon receipt of a transfer command.  \n  \n For a description of the behaviors that are specified using <xref:System.Net.FtpWebRequest.UsePassive%2A>, see RFC 959, \"File Transfer Protocol,\" Section 3.2, \"Establishing Data Connections\" and Section 4.1.2, \"Transfer Parameter Commands,\" available at [http://www.rfc-editor.org/](http://www.ietf.org/rfc/rfc959.txt).  \n  \n Changing <xref:System.Net.FtpWebRequest.UsePassive%2A> after calling the <xref:System.Net.FtpWebRequest.GetRequestStream%2A>, <xref:System.Net.FtpWebRequest.BeginGetRequestStream%2A>, <xref:System.Net.FtpWebRequest.GetResponse%2A>, or <xref:System.Net.FtpWebRequest.BeginGetResponse%2A> method causes an <xref:System.InvalidOperationException> exception.  \n  \n If <xref:System.Net.FtpWebRequest.UsePassive%2A> is set to `true`, the FTP server may not send the size of the file, and download progress can always be zero. If <xref:System.Net.FtpWebRequest.UsePassive%2A> is set to `false`, a firewall can raise an alert and block the file download.","nodes":[{"pos":[0,266],"content":"Setting the <xref:System.Net.FtpWebRequest.UsePassive%2A> property to `true` sends the \"`PASV\"` command to the server. This command requests the server to listen on a data port and to wait for a connection rather than initiate one upon receipt of a transfer command.","nodes":[{"content":"Setting the <ph id=\"ph1\">&lt;xref:System.Net.FtpWebRequest.UsePassive%2A&gt;</ph> property to <ph id=\"ph2\">`true`</ph> sends the \"<ph id=\"ph3\">`PASV\"`</ph> command to the server.","pos":[0,118],"source":"Setting the <xref:System.Net.FtpWebRequest.UsePassive%2A> property to `true` sends the \"`PASV\"` command to the server."},{"content":"This command requests the server to listen on a data port and to wait for a connection rather than initiate one upon receipt of a transfer command.","pos":[119,266]}]},{"pos":[273,592],"content":"For a description of the behaviors that are specified using <ph id=\"ph1\">&lt;xref:System.Net.FtpWebRequest.UsePassive%2A&gt;</ph>, see RFC 959, \"File Transfer Protocol,\" Section 3.2, \"Establishing Data Connections\" and Section 4.1.2, \"Transfer Parameter Commands,\" available at <bpt id=\"p1\">[</bpt>http://www.rfc-editor.org/<ept id=\"p1\">](http://www.ietf.org/rfc/rfc959.txt)</ept>.","source":"For a description of the behaviors that are specified using <xref:System.Net.FtpWebRequest.UsePassive%2A>, see RFC 959, \"File Transfer Protocol,\" Section 3.2, \"Establishing Data Connections\" and Section 4.1.2, \"Transfer Parameter Commands,\" available at [http://www.rfc-editor.org/](http://www.ietf.org/rfc/rfc959.txt)."},{"pos":[599,953],"content":"Changing <xref:System.Net.FtpWebRequest.UsePassive%2A> after calling the <xref:System.Net.FtpWebRequest.GetRequestStream%2A>, <xref:System.Net.FtpWebRequest.BeginGetRequestStream%2A>, <xref:System.Net.FtpWebRequest.GetResponse%2A>, or <xref:System.Net.FtpWebRequest.BeginGetResponse%2A> method causes an <xref:System.InvalidOperationException> exception.","nodes":[{"content":"Changing <ph id=\"ph1\">&lt;xref:System.Net.FtpWebRequest.UsePassive%2A&gt;</ph> after calling the <ph id=\"ph2\">&lt;xref:System.Net.FtpWebRequest.GetRequestStream%2A&gt;</ph>, <ph id=\"ph3\">&lt;xref:System.Net.FtpWebRequest.BeginGetRequestStream%2A&gt;</ph>, <ph id=\"ph4\">&lt;xref:System.Net.FtpWebRequest.GetResponse%2A&gt;</ph>, or <ph id=\"ph5\">&lt;xref:System.Net.FtpWebRequest.BeginGetResponse%2A&gt;</ph> method causes an <ph id=\"ph6\">&lt;xref:System.InvalidOperationException&gt;</ph> exception.","pos":[0,354],"source":"Changing <xref:System.Net.FtpWebRequest.UsePassive%2A> after calling the <xref:System.Net.FtpWebRequest.GetRequestStream%2A>, <xref:System.Net.FtpWebRequest.BeginGetRequestStream%2A>, <xref:System.Net.FtpWebRequest.GetResponse%2A>, or <xref:System.Net.FtpWebRequest.BeginGetResponse%2A> method causes an <xref:System.InvalidOperationException> exception."}]},{"pos":[960,1245],"content":"If <xref:System.Net.FtpWebRequest.UsePassive%2A> is set to `true`, the FTP server may not send the size of the file, and download progress can always be zero. If <xref:System.Net.FtpWebRequest.UsePassive%2A> is set to `false`, a firewall can raise an alert and block the file download.","nodes":[{"content":"If <ph id=\"ph1\">&lt;xref:System.Net.FtpWebRequest.UsePassive%2A&gt;</ph> is set to <ph id=\"ph2\">`true`</ph>, the FTP server may not send the size of the file, and download progress can always be zero.","pos":[0,158],"source":"If <xref:System.Net.FtpWebRequest.UsePassive%2A> is set to `true`, the FTP server may not send the size of the file, and download progress can always be zero."},{"content":"If <ph id=\"ph1\">&lt;xref:System.Net.FtpWebRequest.UsePassive%2A&gt;</ph> is set to <ph id=\"ph2\">`false`</ph>, a firewall can raise an alert and block the file download.","pos":[159,285],"source":" If <xref:System.Net.FtpWebRequest.UsePassive%2A> is set to `false`, a firewall can raise an alert and block the file download."}]}],"pos":[88925,90187],"yaml":true,"extradata":"MT"},{"content":"`false` if the client application's data transfer process listens for a connection on the data port; otherwise, `true` if the client should initiate a connection on the data port. The default value is `true`.","nodes":[{"pos":[0,208],"content":"`false` if the client application's data transfer process listens for a connection on the data port; otherwise, `true` if the client should initiate a connection on the data port. The default value is `true`.","nodes":[{"content":"<ph id=\"ph1\">`false`</ph> if the client application's data transfer process listens for a connection on the data port; otherwise, <ph id=\"ph2\">`true`</ph> if the client should initiate a connection on the data port.","pos":[0,179],"source":"`false` if the client application's data transfer process listens for a connection on the data port; otherwise, `true` if the client should initiate a connection on the data port."},{"content":"The default value is <ph id=\"ph1\">`true`</ph>.","pos":[180,208],"source":" The default value is `true`."}]}],"pos":[90668,90879],"yaml":true},{"content":"A new value was specified for this property for a request that is already in progress.","nodes":[{"pos":[0,86],"content":"A new value was specified for this property for a request that is already in progress.","nodes":[{"content":"A new value was specified for this property for a request that is already in progress.","pos":[0,86]}]}],"pos":[91052,91139],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Net.FtpWebRequest\n  commentId: T:System.Net.FtpWebRequest\n  id: FtpWebRequest\n  children:\n  - System.Net.FtpWebRequest.Abort\n  - System.Net.FtpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)\n  - System.Net.FtpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)\n  - System.Net.FtpWebRequest.ClientCertificates\n  - System.Net.FtpWebRequest.ConnectionGroupName\n  - System.Net.FtpWebRequest.ContentLength\n  - System.Net.FtpWebRequest.ContentOffset\n  - System.Net.FtpWebRequest.ContentType\n  - System.Net.FtpWebRequest.Credentials\n  - System.Net.FtpWebRequest.DefaultCachePolicy\n  - System.Net.FtpWebRequest.EnableSsl\n  - System.Net.FtpWebRequest.EndGetRequestStream(System.IAsyncResult)\n  - System.Net.FtpWebRequest.EndGetResponse(System.IAsyncResult)\n  - System.Net.FtpWebRequest.GetRequestStream\n  - System.Net.FtpWebRequest.GetResponse\n  - System.Net.FtpWebRequest.Headers\n  - System.Net.FtpWebRequest.KeepAlive\n  - System.Net.FtpWebRequest.Method\n  - System.Net.FtpWebRequest.PreAuthenticate\n  - System.Net.FtpWebRequest.Proxy\n  - System.Net.FtpWebRequest.ReadWriteTimeout\n  - System.Net.FtpWebRequest.RenameTo\n  - System.Net.FtpWebRequest.RequestUri\n  - System.Net.FtpWebRequest.ServicePoint\n  - System.Net.FtpWebRequest.Timeout\n  - System.Net.FtpWebRequest.UseBinary\n  - System.Net.FtpWebRequest.UseDefaultCredentials\n  - System.Net.FtpWebRequest.UsePassive\n  langs:\n  - csharp\n  name: FtpWebRequest\n  nameWithType: FtpWebRequest\n  fullName: System.Net.FtpWebRequest\n  type: Class\n  assemblies:\n  - System\n  - netstandard\n  - System.Net.Requests\n  namespace: System.Net\n  summary: Implements a File Transfer Protocol (FTP) client.\n  remarks: \"To obtain an instance of <xref:System.Net.FtpWebRequest>, use the <xref:System.Net.WebRequest.Create%2A> method. You can also use the <xref:System.Net.WebClient> class to upload and download information from an FTP server. Using either of these approaches, when you specify a network resource that uses the FTP scheme (for example, `\\\"ftp://contoso.com\\\"`) the <xref:System.Net.FtpWebRequest> class provides the ability to programmatically interact with FTP servers.  \\n  \\n The URI may be relative or absolute. If the URI is of the form `\\\"ftp://contoso.com/%2fpath\\\"` (%2f is an escaped '/'), then the URI is absolute, and the current directory is `/path`. If, however, the URI is of the form `\\\"ftp://contoso.com/path\\\"`, first the .NET Framework logs into the FTP server (using the user name and password set by the <xref:System.Net.FtpWebRequest.Credentials%2A> property), then the current directory is set to `<UserLoginDirectory>/path`.  \\n  \\n You must have a valid user name and password for the server or the server must allow anonymous logon. You can specify the credentials used to connect to the server by setting the <xref:System.Net.FtpWebRequest.Credentials%2A> property or you can include them in the <xref:System.Uri.UserInfo%2A> portion of the URI passed to the <xref:System.Net.WebRequest.Create%2A> method. If you include <xref:System.Uri.UserInfo%2A> information in the URI, the <xref:System.Net.FtpWebRequest.Credentials%2A> property is set to a new network credential with the specified user name and password information.  \\n  \\n> [!CAUTION]\\n>  Unless the <xref:System.Net.FtpWebRequest.EnableSsl%2A> property is `true`, all data and commands, including your user name and password information, are sent to the server in clear text. Anyone monitoring network traffic can view your credentials and use them to connect to the server. If you are connecting to an FTP server that requires credentials and supports Secure Sockets Layer (SSL), you should set <xref:System.Net.FtpWebRequest.EnableSsl%2A> to `true`.  \\n  \\n You must have <xref:System.Net.WebPermission> to access the FTP resource; otherwise, a <xref:System.Security.SecurityException> exception is thrown.  \\n  \\n Specify the FTP command to send to the server by setting the <xref:System.Net.FtpWebRequest.Method%2A> property to a value defined in the <xref:System.Net.WebRequestMethods.Ftp> structure. To transmit text data, change the <xref:System.Net.FtpWebRequest.UseBinary%2A> property from its default value (`true`) to `false`. For details and restrictions, see <xref:System.Net.FtpWebRequest.Method%2A>.  \\n  \\n When using an <xref:System.Net.FtpWebRequest> object to upload a file to a server, you must write the file content to the request stream obtained by calling the <xref:System.Net.FtpWebRequest.GetRequestStream%2A> method or its asynchronous counterparts, the <xref:System.Net.FtpWebRequest.BeginGetRequestStream%2A> and <xref:System.Net.FtpWebRequest.EndGetRequestStream%2A> methods. You must write to the stream and close the stream before sending the request.  \\n  \\n Requests are sent to the server by calling the <xref:System.Net.FtpWebRequest.GetResponse%2A> method or its asynchronous counterparts, the <xref:System.Net.FtpWebRequest.BeginGetResponse%2A> and <xref:System.Net.FtpWebRequest.EndGetResponse%2A> methods. When the requested operation completes, an <xref:System.Net.FtpWebResponse> object is returned. The <xref:System.Net.FtpWebResponse> object provides the status of the operation and any data downloaded from the server.  \\n  \\n You can set a time-out value for reading or writing to the server by using the <xref:System.Net.FtpWebRequest.ReadWriteTimeout%2A> property. If the time-out period is exceeded, the calling method throws a <xref:System.Net.WebException> with <xref:System.Net.WebExceptionStatus> set to <xref:System.Net.WebExceptionStatus.Timeout>.  \\n  \\n When downloading a file from an FTP server, if the command was successful, the contents of the requested file are available in the response object's stream. You can access this stream by calling the <xref:System.Net.FtpWebResponse.GetResponseStream%2A> method. For more information, see <xref:System.Net.FtpWebResponse>.  \\n  \\n If the <xref:System.Net.FtpWebRequest.Proxy%2A> property is set, either directly or in a configuration file, communications with the FTP server are made through the specified proxy. If the specified proxy is an HTTP proxy, only the <xref:System.Net.WebRequestMethods.Ftp.DownloadFile>, <xref:System.Net.WebRequestMethods.Ftp.ListDirectory>, and <xref:System.Net.WebRequestMethods.Ftp.ListDirectoryDetails> commands are supported.  \\n  \\n Only downloaded binary content is cached; that is, content received using the <xref:System.Net.WebRequestMethods.Ftp.DownloadFile> command with the <xref:System.Net.FtpWebRequest.UseBinary%2A> property set to `true`.  \\n  \\n Multiple <xref:System.Net.FtpWebRequest>s reuse existing connections, if possible.  \\n  \\n For more information about the FTP protocol, see RFC 959, \\\"File Transfer Protocol,\\\" available at [http://www.rfc-editor.org/](http://www.ietf.org/rfc/rfc959.txt).\"\n  example:\n  - \"The following code example demonstrates deleting a file from an FTP server.  \\n  \\n [!code-cpp[NCLFtpClient#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLFtpClient/CPP/ftptests.cpp#4)]\\n [!code-csharp[NCLFtpClient#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLFtpClient/CS/ftptests.cs#4)]  \\n  \\n The following code example demonstrates downloading a file from an FTP server by using the <xref:System.Net.WebClient> class.  \\n  \\n [!code-cpp[NCLFtpClient#5](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLFtpClient/CPP/ftptests.cpp#5)]\\n [!code-csharp[NCLFtpClient#5](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLFtpClient/CS/ftptests.cs#5)]  \\n  \\n The following code example demonstrates using asynchronous operations to upload a file to an FTP server.  \\n  \\n [!code-cpp[NCLFtpAsync#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLFtpAsync/CPP/async.cpp#1)]\\n [!code-csharp[NCLFtpAsync#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLFtpAsync/CS/async.cs#1)]\"\n  syntax:\n    content: 'public sealed class FtpWebRequest : System.Net.WebRequest'\n  inheritance:\n  - System.Object\n  - System.Net.WebRequest\n  implements: []\n  inheritedMembers:\n  - System.Net.WebRequest.AuthenticationLevel\n  - System.Net.WebRequest.CachePolicy\n  - System.Net.WebRequest.Create(System.String)\n  - System.Net.WebRequest.Create(System.Uri)\n  - System.Net.WebRequest.CreateDefault(System.Uri)\n  - System.Net.WebRequest.CreateHttp(System.String)\n  - System.Net.WebRequest.CreateHttp(System.Uri)\n  - System.Net.WebRequest.CreatorInstance\n  - System.Net.WebRequest.DefaultWebProxy\n  - System.Net.WebRequest.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  - System.Net.WebRequest.GetRequestStreamAsync\n  - System.Net.WebRequest.GetResponseAsync\n  - System.Net.WebRequest.GetSystemWebProxy\n  - System.Net.WebRequest.ImpersonationLevel\n  - System.Net.WebRequest.RegisterPortableWebRequestCreator(System.Net.IWebRequestCreate)\n  - System.Net.WebRequest.RegisterPrefix(System.String,System.Net.IWebRequestCreate)\n  - System.Net.WebRequest.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/FtpWebRequest.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.FtpWebRequest.Abort\n  commentId: M:System.Net.FtpWebRequest.Abort\n  id: Abort\n  parent: System.Net.FtpWebRequest\n  langs:\n  - csharp\n  name: Abort()\n  nameWithType: FtpWebRequest.Abort()\n  fullName: FtpWebRequest.Abort()\n  type: Method\n  assemblies:\n  - System\n  - netstandard\n  - System.Net.Requests\n  namespace: System.Net\n  summary: Terminates an asynchronous FTP operation.\n  remarks: \"If there is no operation in progress, this method does nothing. If a file transfer is in progress, this method terminates the transfer.  \\n  \\n> [!NOTE]\\n>  This member outputs trace information when you enable network tracing in your application. For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).\"\n  example:\n  - \"The following code example demonstrates how the user can terminate an asynchronous upload of a file from the local directory to the server.  \\n  \\n [!code-cpp[NCLFtpClient#10](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLFtpClient/CPP/ftptests.cpp#10)]\\n [!code-csharp[NCLFtpClient#10](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLFtpClient/CS/ftptests.cs#10)]\"\n  syntax:\n    content: public override void Abort ();\n    parameters: []\n  overload: System.Net.FtpWebRequest.Abort*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/FtpWebRequest.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.FtpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)\n  commentId: M:System.Net.FtpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)\n  id: BeginGetRequestStream(System.AsyncCallback,System.Object)\n  parent: System.Net.FtpWebRequest\n  langs:\n  - csharp\n  name: BeginGetRequestStream(AsyncCallback, Object)\n  nameWithType: FtpWebRequest.BeginGetRequestStream(AsyncCallback, Object)\n  fullName: FtpWebRequest.BeginGetRequestStream(AsyncCallback, Object)\n  type: Method\n  assemblies:\n  - System\n  - netstandard\n  - System.Net.Requests\n  namespace: System.Net\n  summary: Begins asynchronously opening a request's content stream for writing.\n  remarks: \"You must complete the asynchronous operation by calling the <xref:System.Net.FtpWebRequest.EndGetRequestStream%2A> method. Typically, <xref:System.Net.FtpWebRequest.EndGetRequestStream%2A> is called by the method referenced by `callback`. To determine the state of the operation, check the properties in the <xref:System.IAsyncResult> object returned by this method.  \\n  \\n This method does not block while waiting for the stream. To block, call <xref:System.Net.FtpWebRequest.GetRequestStream%2A> in place of this method.  \\n  \\n For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).  \\n  \\n> [!NOTE]\\n>  This member outputs trace information when you enable network tracing in your application. For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).\"\n  example:\n  - \"The following code example demonstrates beginning an asynchronous operation to get a request's stream. This code example is part of a larger example provided for the <xref:System.Net.FtpWebRequest> class overview.  \\n  \\n [!code-cpp[NCLFtpAsync#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLFtpAsync/CPP/async.cpp#4)]\\n [!code-csharp[NCLFtpAsync#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLFtpAsync/CS/async.cs#4)]\"\n  syntax:\n    content: public override IAsyncResult BeginGetRequestStream (AsyncCallback callback, object state);\n    parameters:\n    - id: callback\n      type: System.AsyncCallback\n      description: An <xref href=\"System.AsyncCallback\"></xref> delegate that references the method to invoke when the operation is complete.\n    - id: state\n      type: System.Object\n      description: A user-defined object that contains information about the operation. This object is passed to the <code>callback</code> delegate when the operation completes.\n    return:\n      type: System.IAsyncResult\n      description: An <xref href=\"System.IAsyncResult\"></xref> instance that indicates the status of the operation.\n  overload: System.Net.FtpWebRequest.BeginGetRequestStream*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: A previous call to this method or <xref href=\"System.Net.FtpWebRequest.GetRequestStream\"></xref> has not yet completed.\n  - type: System.Net.WebException\n    commentId: T:System.Net.WebException\n    description: A connection to the FTP server could not be established.\n  - type: System.Net.ProtocolViolationException\n    commentId: T:System.Net.ProtocolViolationException\n    description: The <xref href=\"System.Net.FtpWebRequest.Method\"></xref> property is not set to <xref href=\"System.Net.WebRequestMethods.Ftp.UploadFile\"></xref>.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/FtpWebRequest.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.FtpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)\n  commentId: M:System.Net.FtpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)\n  id: BeginGetResponse(System.AsyncCallback,System.Object)\n  parent: System.Net.FtpWebRequest\n  langs:\n  - csharp\n  name: BeginGetResponse(AsyncCallback, Object)\n  nameWithType: FtpWebRequest.BeginGetResponse(AsyncCallback, Object)\n  fullName: FtpWebRequest.BeginGetResponse(AsyncCallback, Object)\n  type: Method\n  assemblies:\n  - System\n  - netstandard\n  - System.Net.Requests\n  namespace: System.Net\n  summary: Begins sending a request and receiving a response from an FTP server asynchronously.\n  remarks: \"You must complete the asynchronous operation by calling the <xref:System.Net.FtpWebRequest.EndGetResponse%2A> method. Typically, <xref:System.Net.FtpWebRequest.EndGetResponse%2A> is called by the method referenced by `callback`. To determine the state of the operation, check the properties in the <xref:System.IAsyncResult> object returned by the <xref:System.Net.FtpWebRequest.BeginGetResponse%2A> method.  \\n  \\n If the <xref:System.Net.FtpWebRequest.Proxy%2A> property is set, either directly or in a configuration file, communications with the FTP server are made through the specified proxy.  \\n  \\n <xref:System.Net.FtpWebRequest.BeginGetResponse%2A> does not block while waiting for the response from the server. To block, call the <xref:System.Net.FtpWebRequest.GetResponse%2A> method in place of <xref:System.Net.FtpWebRequest.BeginGetResponse%2A>.  \\n  \\n For more information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).  \\n  \\n This member outputs trace information when you enable network tracing in your application. For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).  \\n  \\n> [!NOTE]\\n>  If a <xref:System.Net.WebException> is thrown, use the <xref:System.Net.WebException.Response%2A> and <xref:System.Net.WebException.Status%2A> properties of the exception to determine the response from the server.\"\n  example:\n  - \"The following code example demonstrates ending an asynchronous operation to get a request's stream, and then starting a request to get the response. This code example is part of a larger example provided for the <xref:System.Net.FtpWebRequest> class overview.  \\n  \\n [!code-cpp[NCLFtpAsync#5](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLFtpAsync/CPP/async.cpp#5)]\\n [!code-csharp[NCLFtpAsync#5](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLFtpAsync/CS/async.cs#5)]\"\n  syntax:\n    content: public override IAsyncResult BeginGetResponse (AsyncCallback callback, object state);\n    parameters:\n    - id: callback\n      type: System.AsyncCallback\n      description: An <xref href=\"System.AsyncCallback\"></xref> delegate that references the method to invoke when the operation is complete.\n    - id: state\n      type: System.Object\n      description: A user-defined object that contains information about the operation. This object is passed to the <code>callback</code> delegate when the operation completes.\n    return:\n      type: System.IAsyncResult\n      description: An <xref href=\"System.IAsyncResult\"></xref> instance that indicates the status of the operation.\n  overload: System.Net.FtpWebRequest.BeginGetResponse*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: <xref href=\"System.Net.FtpWebRequest.GetResponse\"></xref> or <xref href=\"System.Net.FtpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)\"></xref> has already been called for this instance.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/FtpWebRequest.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.FtpWebRequest.ClientCertificates\n  commentId: P:System.Net.FtpWebRequest.ClientCertificates\n  id: ClientCertificates\n  parent: System.Net.FtpWebRequest\n  langs:\n  - csharp\n  name: ClientCertificates\n  nameWithType: FtpWebRequest.ClientCertificates\n  fullName: FtpWebRequest.ClientCertificates\n  type: Property\n  assemblies:\n  - System\n  - netstandard\n  - System.Net.Requests\n  namespace: System.Net\n  summary: Gets or sets the certificates used for establishing an encrypted connection to the FTP server.\n  remarks: \"Client certificates are used to authenticate the client during the initial SSL connection negotiation. For more information, see <xref:System.Net.FtpWebRequest.EnableSsl%2A>.  \\n  \\n> [!NOTE]\\n>  The .NET Framework caches SSL sessions as they are created and attempts to reuse a cached session for a new request, if possible. When attempting to reuse an SSL session, the .NET Framework uses the first element of <xref:System.Net.HttpWebRequest.ClientCertificates%2A> (if there is one), or tries to reuse an anonymous session if <xref:System.Net.HttpWebRequest.ClientCertificates%2A> is empty.\"\n  syntax:\n    content: >-\n      [System.MonoTODO]\n\n      public System.Security.Cryptography.X509Certificates.X509CertificateCollection ClientCertificates { get; set; }\n    return:\n      type: System.Security.Cryptography.X509Certificates.X509CertificateCollection\n      description: An <xref href=\"System.Security.Cryptography.X509Certificates.X509CertificateCollection\"></xref> object that contains the client certificates.\n  overload: System.Net.FtpWebRequest.ClientCertificates*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The value specified for a set operation is `null`.\n  attributes:\n  - type: System.MonoTODO\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/FtpWebRequest.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.FtpWebRequest.ConnectionGroupName\n  commentId: P:System.Net.FtpWebRequest.ConnectionGroupName\n  id: ConnectionGroupName\n  parent: System.Net.FtpWebRequest\n  langs:\n  - csharp\n  name: ConnectionGroupName\n  nameWithType: FtpWebRequest.ConnectionGroupName\n  fullName: FtpWebRequest.ConnectionGroupName\n  type: Property\n  assemblies:\n  - System\n  - netstandard\n  - System.Net.Requests\n  namespace: System.Net\n  summary: Gets or sets the name of the connection group that contains the service point used to send the current request.\n  remarks: \"Connection groups associate a set of requests with a particular connection or set of connections. The connections in a connection group can be reused only by requests originating in the same application domain, when the credentials on the request are the same and the request specifies the connection group name. When a request does not specify a connection group name, any existing connection to the requested server that is not associated with a connection group can be used. When the credentials are not the same, the existing connection is closed and the new request must be reauthenticated.  \\n  \\n Using connection groups can improve performance because this allows all of the requests for a user to reuse the connection authenticated with the user's credentials.  \\n  \\n Changing the <xref:System.Net.FtpWebRequest.ConnectionGroupName%2A> property after calling the <xref:System.Net.FtpWebRequest.GetRequestStream%2A>, <xref:System.Net.FtpWebRequest.BeginGetRequestStream%2A>, <xref:System.Net.FtpWebRequest.GetResponse%2A>, or <xref:System.Net.FtpWebRequest.BeginGetResponse%2A> method causes an <xref:System.InvalidOperationException> exception.\"\n  example:\n  - \"The following code example retrieves the value of this property.  \\n  \\n [!code-cpp[NCLFtpClient#16](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLFtpClient/CPP/ftptests.cpp#16)]\\n [!code-csharp[NCLFtpClient#16](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLFtpClient/CS/ftptests.cs#16)]\"\n  syntax:\n    content: >-\n      [System.MonoTODO]\n\n      public override string ConnectionGroupName { get; set; }\n    return:\n      type: System.String\n      description: A <xref href=\"System.String\"></xref> value that contains a connection group name.\n  overload: System.Net.FtpWebRequest.ConnectionGroupName*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: A new value was specified for this property for a request that is already in progress.\n  attributes:\n  - type: System.MonoTODO\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/FtpWebRequest.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.FtpWebRequest.ContentLength\n  commentId: P:System.Net.FtpWebRequest.ContentLength\n  id: ContentLength\n  parent: System.Net.FtpWebRequest\n  langs:\n  - csharp\n  name: ContentLength\n  nameWithType: FtpWebRequest.ContentLength\n  fullName: FtpWebRequest.ContentLength\n  type: Property\n  assemblies:\n  - System\n  - netstandard\n  - System.Net.Requests\n  namespace: System.Net\n  summary: Gets or sets a value that is ignored by the <xref href=\"System.Net.FtpWebRequest\"></xref> class.\n  remarks: The <xref:System.Net.FtpWebRequest.ContentLength%2A> property is provided only for compatibility with other implementations of the <xref:System.Net.WebRequest> and <xref:System.Net.WebResponse> classes. There is no reason to use <xref:System.Net.FtpWebRequest.ContentLength%2A>.\n  syntax:\n    content: public override long ContentLength { get; set; }\n    return:\n      type: System.Int64\n      description: An <xref href=\"System.Int64\"></xref> value that should be ignored.\n  overload: System.Net.FtpWebRequest.ContentLength*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/FtpWebRequest.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.FtpWebRequest.ContentOffset\n  commentId: P:System.Net.FtpWebRequest.ContentOffset\n  id: ContentOffset\n  parent: System.Net.FtpWebRequest\n  langs:\n  - csharp\n  name: ContentOffset\n  nameWithType: FtpWebRequest.ContentOffset\n  fullName: FtpWebRequest.ContentOffset\n  type: Property\n  assemblies:\n  - System\n  - netstandard\n  - System.Net.Requests\n  namespace: System.Net\n  summary: Gets or sets a byte offset into the file being downloaded by this request.\n  remarks: \"Set the <xref:System.Net.FtpWebRequest.ContentOffset%2A> property when downloading a file from an FTP server. This offset indicates the position in the server's file that marks the start of the data to be downloaded. The offset is specified as the number of bytes from the start of the file; the offset of the first byte is zero.  \\n  \\n Setting <xref:System.Net.FtpWebRequest.ContentOffset%2A> causes the <xref:System.Net.FtpWebRequest> to send a restart (`REST`) command to the server. This command is ignored by most FTP server implementations if you are uploading data to the server.  \\n  \\n Changing <xref:System.Net.FtpWebRequest.ContentOffset%2A> after calling the <xref:System.Net.FtpWebRequest.GetRequestStream%2A>, <xref:System.Net.FtpWebRequest.BeginGetRequestStream%2A>, <xref:System.Net.FtpWebRequest.GetResponse%2A>, or <xref:System.Net.FtpWebRequest.BeginGetResponse%2A> method causes an <xref:System.InvalidOperationException> exception.\"\n  example:\n  - \"The following code example demonstrates downloading part of a file from a server and appending the downloaded data to a local file.  \\n  \\n [!code-cpp[NclFtpClient#7](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLFtpClient/CPP/ftptests.cpp#7)]\\n [!code-csharp[NclFtpClient#7](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLFtpClient/CS/ftptests.cs#7)]\"\n  syntax:\n    content: public long ContentOffset { get; set; }\n    return:\n      type: System.Int64\n      description: An <xref href=\"System.Int64\"></xref> instance that specifies the file offset, in bytes. The default value is zero.\n  overload: System.Net.FtpWebRequest.ContentOffset*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: A new value was specified for this property for a request that is already in progress.\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: The value specified for this property is less than zero.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/FtpWebRequest.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.FtpWebRequest.ContentType\n  commentId: P:System.Net.FtpWebRequest.ContentType\n  id: ContentType\n  parent: System.Net.FtpWebRequest\n  langs:\n  - csharp\n  name: ContentType\n  nameWithType: FtpWebRequest.ContentType\n  fullName: FtpWebRequest.ContentType\n  type: Property\n  assemblies:\n  - System\n  - netstandard\n  - System.Net.Requests\n  namespace: System.Net\n  summary: Always throws a <xref href=\"System.NotSupportedException\"></xref>.\n  remarks: The <xref:System.Net.FtpWebRequest.ContentType%2A> property is provided only for compatibility with other implementations of the <xref:System.Net.WebRequest> and <xref:System.Net.WebResponse> classes. There is no reason to use <xref:System.Net.FtpWebRequest.ContentType%2A>.\n  syntax:\n    content: public override string ContentType { get; set; }\n    return:\n      type: System.String\n      description: Always throws a <xref href=\"System.NotSupportedException\"></xref>.\n  overload: System.Net.FtpWebRequest.ContentType*\n  exceptions:\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: Content type information is not supported for FTP.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/FtpWebRequest.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.FtpWebRequest.Credentials\n  commentId: P:System.Net.FtpWebRequest.Credentials\n  id: Credentials\n  parent: System.Net.FtpWebRequest\n  langs:\n  - csharp\n  name: Credentials\n  nameWithType: FtpWebRequest.Credentials\n  fullName: FtpWebRequest.Credentials\n  type: Property\n  assemblies:\n  - System\n  - netstandard\n  - System.Net.Requests\n  namespace: System.Net\n  summary: Gets or sets the credentials used to communicate with the FTP server.\n  remarks: \"You are not required to specify credentials when connecting using anonymous logon. You must set the <xref:System.Net.FtpWebRequest.Credentials%2A> property by using a credential of type <xref:System.Net.NetworkCredential>; this ensures that the user name and password can be read and sent to the server.  \\n  \\n> [!CAUTION]\\n>  Credentials information is not encrypted when transmitted to the server unless the <xref:System.Net.FtpWebRequest.EnableSsl%2A> property is set to `true`.  \\n  \\n Changing <xref:System.Net.FtpWebRequest.Credentials%2A> after calling the <xref:System.Net.FtpWebRequest.GetRequestStream%2A>, <xref:System.Net.FtpWebRequest.BeginGetRequestStream%2A>, <xref:System.Net.FtpWebRequest.GetResponse%2A>, or <xref:System.Net.FtpWebRequest.BeginGetResponse%2A> method causes an <xref:System.InvalidOperationException> exception.\"\n  example:\n  - \"The following code example retrieves the value of this property and uses it to display the user name.  \\n  \\n [!code-cpp[NCLFtpClient#14](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLFtpClient/CPP/ftptests.cpp#14)]\\n [!code-csharp[NCLFtpClient#14](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLFtpClient/CS/ftptests.cs#14)]\"\n  syntax:\n    content: public override System.Net.ICredentials Credentials { get; set; }\n    return:\n      type: System.Net.ICredentials\n      description: An <xref href=\"System.Net.ICredentials\"></xref> instance; otherwise, `null` if the property has not been set.\n  overload: System.Net.FtpWebRequest.Credentials*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The value specified for a set operation is `null`.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: An <xref href=\"System.Net.ICredentials\"></xref> of a type other than <xref href=\"System.Net.NetworkCredential\"></xref> was specified for a set operation.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: A new value was specified for this property for a request that is already in progress.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/FtpWebRequest.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.FtpWebRequest.DefaultCachePolicy\n  commentId: P:System.Net.FtpWebRequest.DefaultCachePolicy\n  id: DefaultCachePolicy\n  parent: System.Net.FtpWebRequest\n  langs:\n  - csharp\n  name: DefaultCachePolicy\n  nameWithType: FtpWebRequest.DefaultCachePolicy\n  fullName: FtpWebRequest.DefaultCachePolicy\n  type: Property\n  assemblies:\n  - System\n  - netstandard\n  - System.Net.Requests\n  namespace: System.Net\n  summary: Defines the default cache policy for all FTP requests.\n  remarks: \"Only content received using the <xref:System.Net.WebRequestMethods.Ftp.DownloadFile> command is cached.  \\n  \\n The following table describes the effects of FTP caching policies on <xref:System.Net.FtpWebRequest>.  \\n  \\n|Policy|Effect|  \\n|------------|------------|  \\n|<xref:System.Net.Cache.RequestCacheLevel.Default>|Returns the cached resource if the resource is fresh, the content length is accurate, and the expiration, modification, and content length attributes are present.|  \\n|<xref:System.Net.Cache.RequestCacheLevel.BypassCache>|Returns the resource from the server.|  \\n|<xref:System.Net.Cache.RequestCacheLevel.CacheOnly>|Returns the cached resource if the content length is present and matches the entry size; otherwise, throws a <xref:System.Net.WebException>.|  \\n|<xref:System.Net.Cache.RequestCacheLevel.CacheIfAvailable>|Returns the cached resource if the content length is provided and matches the entry size; otherwise, the resource is downloaded from the server and is returned to the caller.|  \\n|<xref:System.Net.Cache.RequestCacheLevel.Revalidate>|Returns the cached resource if the timestamp of the cached resource is the same as the time stamp of the resource on the server; otherwise, the resource is downloaded from the server, stored in the cache, and returned to the caller.|  \\n|<xref:System.Net.Cache.RequestCacheLevel.Reload>|Downloads the resource from the server, stores it in the cache, and returns the resource to the caller.|  \\n|<xref:System.Net.Cache.RequestCacheLevel.NoCacheNoStore>|If a cached resource exists, it is deleted. The resource is downloaded from the server and is returned to the caller.|  \\n  \\n> [!NOTE]\\n>  Setting <xref:System.Net.FtpWebRequest.DefaultCachePolicy%2A> overrides any configuration setting.\"\n  syntax:\n    content: >-\n      [System.MonoTODO]\n\n      public static System.Net.Cache.RequestCachePolicy DefaultCachePolicy { get; set; }\n    return:\n      type: System.Net.Cache.RequestCachePolicy\n      description: A <xref href=\"System.Net.Cache.RequestCachePolicy\"></xref> that defines the cache policy for FTP requests.\n  overload: System.Net.FtpWebRequest.DefaultCachePolicy*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The caller tried to set this property to `null`.\n  attributes:\n  - type: System.MonoTODO\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/FtpWebRequest.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.FtpWebRequest.EnableSsl\n  commentId: P:System.Net.FtpWebRequest.EnableSsl\n  id: EnableSsl\n  parent: System.Net.FtpWebRequest\n  langs:\n  - csharp\n  name: EnableSsl\n  nameWithType: FtpWebRequest.EnableSsl\n  fullName: FtpWebRequest.EnableSsl\n  type: Property\n  assemblies:\n  - System\n  - netstandard\n  - System.Net.Requests\n  namespace: System.Net\n  summary: Gets or sets a <xref href=\"System.Boolean\"></xref> that specifies that an SSL connection should be used.\n  remarks: \"> [!CAUTION]\\n>  Unless the <xref:System.Net.FtpWebRequest.EnableSsl%2A> property is `true`, all data and commands, including your user name and password information, are sent to the server in clear text. Anyone monitoring network traffic can view your credentials and use them to connect to the server. If you are connecting to an FTP server that requires credentials and supports SSL, you should set <xref:System.Net.FtpWebRequest.EnableSsl%2A> to `true`.  \\n  \\n The `\\\"AUTH TLS\\\"` command is sent to the server to request an encrypted session. If the server does not recognize this command, you receive a <xref:System.Net.WebException> exception.\"\n  example:\n  - \"The following code example uses an encrypted connection to download the directory listing from an FTP server.  \\n  \\n [!code-cpp[NCLFtpClient#8](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLFtpClient/CPP/ftptests.cpp#8)]\\n [!code-csharp[NCLFtpClient#8](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLFtpClient/CS/ftptests.cs#8)]\"\n  syntax:\n    content: public bool EnableSsl { get; set; }\n    return:\n      type: System.Boolean\n      description: '`true` if control and data transmissions are encrypted; otherwise, `false`. The default value is `false`.'\n  overload: System.Net.FtpWebRequest.EnableSsl*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The connection to the FTP server has already been established.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/FtpWebRequest.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.FtpWebRequest.EndGetRequestStream(System.IAsyncResult)\n  commentId: M:System.Net.FtpWebRequest.EndGetRequestStream(System.IAsyncResult)\n  id: EndGetRequestStream(System.IAsyncResult)\n  parent: System.Net.FtpWebRequest\n  langs:\n  - csharp\n  name: EndGetRequestStream(IAsyncResult)\n  nameWithType: FtpWebRequest.EndGetRequestStream(IAsyncResult)\n  fullName: FtpWebRequest.EndGetRequestStream(IAsyncResult)\n  type: Method\n  assemblies:\n  - System\n  - netstandard\n  - System.Net.Requests\n  namespace: System.Net\n  summary: Ends a pending asynchronous operation started with <xref href=\"System.Net.FtpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)\"></xref>.\n  remarks: \"If the operation has not completed, the <xref:System.Net.FtpWebRequest.EndGetRequestStream%2A> method blocks until the operation completes. To determine whether the operation has completed, check the <xref:System.IAsyncResult.IsCompleted%2A> property before calling <xref:System.Net.FtpWebRequest.EndGetRequestStream%2A>.  \\n  \\n In addition to the exceptions noted in \\\"Exceptions,\\\" <xref:System.Net.FtpWebRequest.EndGetRequestStream%2A> rethrows exceptions that were thrown while opening the stream for writing.  \\n  \\n> [!NOTE]\\n>  This member outputs trace information when you enable network tracing in your application. For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).\"\n  example:\n  - \"The following code example demonstrates ending an asynchronous operation to get a request's stream. This code example is part of a larger example provided for the <xref:System.Net.FtpWebRequest> class overview.  \\n  \\n [!code-cpp[NCLFtpAsync#5](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLFtpAsync/CPP/async.cpp#5)]\\n [!code-csharp[NCLFtpAsync#5](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLFtpAsync/CS/async.cs#5)]\"\n  syntax:\n    content: public override System.IO.Stream EndGetRequestStream (IAsyncResult asyncResult);\n    parameters:\n    - id: asyncResult\n      type: System.IAsyncResult\n      description: The <xref href=\"System.IAsyncResult\"></xref> object that was returned when the operation started.\n    return:\n      type: System.IO.Stream\n      description: A writable <xref href=\"System.IO.Stream\"></xref> instance associated with this instance.\n  overload: System.Net.FtpWebRequest.EndGetRequestStream*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>asyncResult</code> is `null`.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>asyncResult</code> was not obtained by calling <xref href=\"System.Net.FtpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)\"></xref>.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: This method was already called for the operation identified by <code>asyncResult</code>.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/FtpWebRequest.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.FtpWebRequest.EndGetResponse(System.IAsyncResult)\n  commentId: M:System.Net.FtpWebRequest.EndGetResponse(System.IAsyncResult)\n  id: EndGetResponse(System.IAsyncResult)\n  parent: System.Net.FtpWebRequest\n  langs:\n  - csharp\n  name: EndGetResponse(IAsyncResult)\n  nameWithType: FtpWebRequest.EndGetResponse(IAsyncResult)\n  fullName: FtpWebRequest.EndGetResponse(IAsyncResult)\n  type: Method\n  assemblies:\n  - System\n  - netstandard\n  - System.Net.Requests\n  namespace: System.Net\n  summary: Ends a pending asynchronous operation started with <xref href=\"System.Net.FtpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)\"></xref>.\n  remarks: \"If the operation has not completed at the time the <xref:System.Net.FtpWebRequest.EndGetResponse%2A> method is called, <xref:System.Net.FtpWebRequest.EndGetResponse%2A> blocks until the operation completes. To prevent blocking, check the <xref:System.IAsyncResult.IsCompleted%2A> property before calling <xref:System.Net.FtpWebRequest.EndGetResponse%2A>.  \\n  \\n In addition to the exceptions noted in \\\"Exceptions,\\\" <xref:System.Net.FtpWebRequest.EndGetResponse%2A> rethrows exceptions that were thrown while communicating with the server.  \\n  \\n> [!NOTE]\\n>  This member outputs trace information when you enable network tracing in your application. For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).\"\n  example:\n  - \"The following code example demonstrates ending an asynchronous operation to get a response. This code example is part of a larger example provided for the <xref:System.Net.FtpWebRequest> class overview.  \\n  \\n [!code-cpp[NCLFtpAsync#6](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLFtpAsync/CPP/async.cpp#6)]\\n [!code-csharp[NCLFtpAsync#6](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLFtpAsync/CS/async.cs#6)]\"\n  syntax:\n    content: public override System.Net.WebResponse EndGetResponse (IAsyncResult asyncResult);\n    parameters:\n    - id: asyncResult\n      type: System.IAsyncResult\n      description: The <xref href=\"System.IAsyncResult\"></xref> that was returned when the operation started.\n    return:\n      type: System.Net.WebResponse\n      description: A <xref href=\"System.Net.WebResponse\"></xref> reference that contains an <xref href=\"System.Net.FtpWebResponse\"></xref> instance. This object contains the FTP server's response to the request.\n  overload: System.Net.FtpWebRequest.EndGetResponse*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>asyncResult</code> is `null`.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>asyncResult</code> was not obtained by calling <xref href=\"System.Net.FtpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)\"></xref>.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: This method was already called for the operation identified by <code>asyncResult</code>.\n  - type: System.Net.WebException\n    commentId: T:System.Net.WebException\n    description: An error occurred using an HTTP proxy.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/FtpWebRequest.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.FtpWebRequest.GetRequestStream\n  commentId: M:System.Net.FtpWebRequest.GetRequestStream\n  id: GetRequestStream\n  parent: System.Net.FtpWebRequest\n  langs:\n  - csharp\n  name: GetRequestStream()\n  nameWithType: FtpWebRequest.GetRequestStream()\n  fullName: FtpWebRequest.GetRequestStream()\n  type: Method\n  assemblies:\n  - System\n  - netstandard\n  - System.Net.Requests\n  namespace: System.Net\n  summary: Retrieves the stream used to upload data to an FTP server.\n  remarks: \"Set the request properties before calling the <xref:System.Net.FtpWebRequest.GetRequestStream%2A> method. After writing the data to the stream, you must close the stream prior to sending the request.  \\n  \\n If you have not set the <xref:System.Net.FtpWebRequest.Method%2A> property to <xref:System.Net.WebRequestMethods.Ftp.UploadFile> or <xref:System.Net.WebRequestMethods.Ftp.AppendFile>, you cannot get the stream.  \\n  \\n <xref:System.Net.FtpWebRequest.GetRequestStream%2A> blocks while waiting for the stream. To prevent this, call the <xref:System.Net.FtpWebRequest.BeginGetRequestStream%2A> method in place of <xref:System.Net.FtpWebRequest.GetRequestStream%2A>.  \\n  \\n> [!NOTE]\\n>  This member outputs trace information when you enable network tracing in your application. For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).\"\n  example:\n  - \"The following code example demonstrates copying a file to a request's data stream and sending a request to the server to upload the data and append it to a file.  \\n  \\n [!code-cpp[NCLFtpClient#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLFtpClient/CPP/ftptests.cpp#3)]\\n [!code-csharp[NCLFtpClient#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLFtpClient/CS/ftptests.cs#3)]\"\n  syntax:\n    content: public override System.IO.Stream GetRequestStream ();\n    parameters: []\n    return:\n      type: System.IO.Stream\n      description: A writable <xref href=\"System.IO.Stream\"></xref> instance used to store data to be sent to the server by the current request.\n  overload: System.Net.FtpWebRequest.GetRequestStream*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"<xref href=\\\"System.Net.FtpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)\\\"></xref> has been called and has not completed.  \\n  \\n \\\\- or -  \\n  \\n An HTTP proxy is enabled, and you attempted to use an FTP command other than <xref href=\\\"System.Net.WebRequestMethods.Ftp.DownloadFile\\\"></xref>, <xref href=\\\"System.Net.WebRequestMethods.Ftp.ListDirectory\\\"></xref>, or <xref href=\\\"System.Net.WebRequestMethods.Ftp.ListDirectoryDetails\\\"></xref>.\"\n  - type: System.Net.WebException\n    commentId: T:System.Net.WebException\n    description: A connection to the FTP server could not be established.\n  - type: System.Net.ProtocolViolationException\n    commentId: T:System.Net.ProtocolViolationException\n    description: The <xref href=\"System.Net.FtpWebRequest.Method\"></xref> property is not set to <xref href=\"System.Net.WebRequestMethods.Ftp.UploadFile\"></xref> or <xref href=\"System.Net.WebRequestMethods.Ftp.AppendFile\"></xref>.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/FtpWebRequest.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.FtpWebRequest.GetResponse\n  commentId: M:System.Net.FtpWebRequest.GetResponse\n  id: GetResponse\n  parent: System.Net.FtpWebRequest\n  langs:\n  - csharp\n  name: GetResponse()\n  nameWithType: FtpWebRequest.GetResponse()\n  fullName: FtpWebRequest.GetResponse()\n  type: Method\n  assemblies:\n  - System\n  - netstandard\n  - System.Net.Requests\n  namespace: System.Net\n  summary: Returns the FTP server response.\n  remarks: \"To access the FTP-specific properties, you must cast the <xref:System.Net.WebResponse> object returned by this method to <xref:System.Net.FtpWebResponse>.  \\n  \\n <xref:System.Net.FtpWebRequest.GetResponse%2A> causes a control connection to be established, and might also create a data connection. <xref:System.Net.FtpWebRequest.GetResponse%2A> blocks until the response is received. To prevent this, you can perform this operation asynchronously by calling the <xref:System.Net.FtpWebRequest.BeginGetResponse%2A> and <xref:System.Net.FtpWebRequest.EndGetResponse%2A> methods in place of <xref:System.Net.FtpWebRequest.GetResponse%2A>.  \\n  \\n If the <xref:System.Net.FtpWebRequest.Proxy%2A> property is set, either directly or in a configuration file, communications with the FTP server are made through the proxy.  \\n  \\n If a <xref:System.Net.WebException> is thrown, use the <xref:System.Net.WebException.Response%2A> and <xref:System.Net.WebException.Status%2A> properties of the exception to determine the response from the server.  \\n  \\n This member outputs trace information when you enable network tracing in your application. For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).  \\n  \\n> [!NOTE]\\n>  Multiple calls to <xref:System.Net.FtpWebRequest.GetResponse%2A> return the same response object; the request is not reissued.\"\n  example:\n  - \"The following code example demonstrates copying a file to a request's data stream and sending a request to append data to a file to the server. The example calls <xref:System.Net.FtpWebRequest.GetResponse%2A> to send the request and block until the response is returned by the server.  \\n  \\n [!code-cpp[NCLFtpClient#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLFtpClient/CPP/ftptests.cpp#3)]\\n [!code-csharp[NCLFtpClient#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLFtpClient/CS/ftptests.cs#3)]\"\n  syntax:\n    content: public override System.Net.WebResponse GetResponse ();\n    parameters: []\n    return:\n      type: System.Net.WebResponse\n      description: A <xref href=\"System.Net.WebResponse\"></xref> reference that contains an <xref href=\"System.Net.FtpWebResponse\"></xref> instance. This object contains the FTP server's response to the request.\n  overload: System.Net.FtpWebRequest.GetResponse*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"<xref href=\\\"System.Net.FtpWebRequest.GetResponse\\\"></xref> or <xref href=\\\"System.Net.FtpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)\\\"></xref> has already been called for this instance.  \\n  \\n \\\\- or -  \\n  \\n An HTTP proxy is enabled, and you attempted to use an FTP command other than <xref href=\\\"System.Net.WebRequestMethods.Ftp.DownloadFile\\\"></xref>, <xref href=\\\"System.Net.WebRequestMethods.Ftp.ListDirectory\\\"></xref>, or <xref href=\\\"System.Net.WebRequestMethods.Ftp.ListDirectoryDetails\\\"></xref>.\"\n  - type: System.Net.WebException\n    commentId: T:System.Net.WebException\n    description: \"<xref href=\\\"System.Net.FtpWebRequest.EnableSsl\\\"></xref> is set to `true`, but the server does not support this feature.  \\n  \\n \\\\- or -  \\n  \\n A <xref href=\\\"System.Net.FtpWebRequest.Timeout\\\"></xref> was specified and the timeout has expired.\"\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/FtpWebRequest.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.FtpWebRequest.Headers\n  commentId: P:System.Net.FtpWebRequest.Headers\n  id: Headers\n  parent: System.Net.FtpWebRequest\n  langs:\n  - csharp\n  name: Headers\n  nameWithType: FtpWebRequest.Headers\n  fullName: FtpWebRequest.Headers\n  type: Property\n  assemblies:\n  - System\n  - netstandard\n  - System.Net.Requests\n  namespace: System.Net\n  summary: Gets an empty <xref href=\"System.Net.WebHeaderCollection\"></xref> object.\n  remarks: The <xref:System.Net.FtpWebRequest.Headers%2A> property is provided only for compatibility with other implementations of the <xref:System.Net.WebRequest> and <xref:System.Net.WebResponse> classes. There is no reason to use <xref:System.Net.FtpWebRequest.Headers%2A>.\n  syntax:\n    content: >-\n      [System.MonoTODO]\n\n      public override System.Net.WebHeaderCollection Headers { get; set; }\n    return:\n      type: System.Net.WebHeaderCollection\n      description: An empty <xref href=\"System.Net.WebHeaderCollection\"></xref> object.\n  overload: System.Net.FtpWebRequest.Headers*\n  exceptions: []\n  attributes:\n  - type: System.MonoTODO\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/FtpWebRequest.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.FtpWebRequest.KeepAlive\n  commentId: P:System.Net.FtpWebRequest.KeepAlive\n  id: KeepAlive\n  parent: System.Net.FtpWebRequest\n  langs:\n  - csharp\n  name: KeepAlive\n  nameWithType: FtpWebRequest.KeepAlive\n  fullName: FtpWebRequest.KeepAlive\n  type: Property\n  assemblies:\n  - System\n  - netstandard\n  - System.Net.Requests\n  namespace: System.Net\n  summary: Gets or sets a <xref href=\"System.Boolean\"></xref> value that specifies whether the control connection to the FTP server is closed after the request completes.\n  remarks: \"When the <xref:System.Net.FtpWebRequest.KeepAlive%2A> property is set to `false`, the control connection is closed when you call the <xref:System.Net.FtpWebResponse.Close%2A> method.  \\n  \\n Changing <xref:System.Net.FtpWebRequest.KeepAlive%2A> after calling the <xref:System.Net.FtpWebRequest.GetRequestStream%2A>, <xref:System.Net.FtpWebRequest.BeginGetRequestStream%2A>, <xref:System.Net.FtpWebRequest.GetResponse%2A>, or <xref:System.Net.FtpWebRequest.BeginGetResponse%2A> method causes an <xref:System.InvalidOperationException> exception.\"\n  example:\n  - \"The following code example retrieves and displays property values for a specified <xref:System.Net.FtpWebRequest> object.  \\n  \\n [!code-cpp[NCLFtpClient#15](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLFtpClient/CPP/ftptests.cpp#15)]\\n [!code-csharp[NCLFtpClient#15](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLFtpClient/CS/ftptests.cs#15)]\"\n  syntax:\n    content: >-\n      [System.MonoTODO(\"We don't support KeepAlive = true\")]\n\n      public bool KeepAlive { get; set; }\n    return:\n      type: System.Boolean\n      description: '`true` if the connection to the server should not be destroyed; otherwise, `false`. The default value is `true`.'\n  overload: System.Net.FtpWebRequest.KeepAlive*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: A new value was specified for this property for a request that is already in progress.\n  attributes:\n  - type: System.MonoTODO\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/FtpWebRequest.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.FtpWebRequest.Method\n  commentId: P:System.Net.FtpWebRequest.Method\n  id: Method\n  parent: System.Net.FtpWebRequest\n  langs:\n  - csharp\n  name: Method\n  nameWithType: FtpWebRequest.Method\n  fullName: FtpWebRequest.Method\n  type: Property\n  assemblies:\n  - System\n  - netstandard\n  - System.Net.Requests\n  namespace: System.Net\n  summary: Gets or sets the command to send to the FTP server.\n  remarks: \"The <xref:System.Net.FtpWebRequest.Method%2A> property determines which command is sent to the server. You set the <xref:System.Net.FtpWebRequest.Method%2A> by using the strings defined in the public field members of the <xref:System.Net.WebRequestMethods.Ftp> class. Note that the strings defined in the <xref:System.Net.WebRequestMethods.Ftp> class are the only supported options for the <xref:System.Net.FtpWebRequest.Method%2A> property. Setting the <xref:System.Net.FtpWebRequest.Method%2A> property to any other value will result in an <xref:System.ArgumentException> exception.  \\n  \\n When setting <xref:System.Net.FtpWebRequest.Method%2A> to <xref:System.Net.WebRequestMethods.Ftp.UploadFile>, you must do so before calling the <xref:System.Net.FtpWebRequest.GetRequestStream%2A> method. Failure to call these members in the correct order causes a <xref:System.Net.ProtocolViolationException> exception when you attempt to get the request stream.  \\n  \\n The credentials supplied for the <xref:System.Net.FtpWebRequest> object must have permission to perform the specified method. If not, the FTP command fails.  \\n  \\n To determine the success or failure of a command, check the <xref:System.Net.FtpWebResponse.StatusCode%2A> and <xref:System.Net.FtpWebResponse.StatusDescription%2A> properties.\"\n  example:\n  - \"The following code example sets this property to <xref:System.Net.WebRequestMethods.Ftp.DeleteFile>.  \\n  \\n [!code-cpp[NCLFtpClient#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLFtpClient/CPP/ftptests.cpp#4)]\\n [!code-csharp[NCLFtpClient#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLFtpClient/CS/ftptests.cs#4)]\"\n  syntax:\n    content: public override string Method { get; set; }\n    return:\n      type: System.String\n      description: A <xref href=\"System.String\"></xref> value that contains the FTP command to send to the server. The default value is <xref href=\"System.Net.WebRequestMethods.Ftp.DownloadFile\"></xref>.\n  overload: System.Net.FtpWebRequest.Method*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: A new value was specified for this property for a request that is already in progress.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"The method is invalid.  \\n  \\n \\\\- or -  \\n  \\n The method is not supported.  \\n  \\n \\\\- or -  \\n  \\n Multiple methods were specified.\"\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/FtpWebRequest.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.FtpWebRequest.PreAuthenticate\n  commentId: P:System.Net.FtpWebRequest.PreAuthenticate\n  id: PreAuthenticate\n  parent: System.Net.FtpWebRequest\n  langs:\n  - csharp\n  name: PreAuthenticate\n  nameWithType: FtpWebRequest.PreAuthenticate\n  fullName: FtpWebRequest.PreAuthenticate\n  type: Property\n  assemblies:\n  - System\n  - netstandard\n  - System.Net.Requests\n  namespace: System.Net\n  summary: Always throws a <xref href=\"System.NotSupportedException\"></xref>.\n  remarks: The <xref:System.Net.FtpWebRequest.PreAuthenticate%2A> property is provided only for compatibility with other implementations of the <xref:System.Net.WebRequest> and <xref:System.Net.WebResponse> classes.\n  syntax:\n    content: public override bool PreAuthenticate { get; set; }\n    return:\n      type: System.Boolean\n      description: Always throws a <xref href=\"System.NotSupportedException\"></xref>.\n  overload: System.Net.FtpWebRequest.PreAuthenticate*\n  exceptions:\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: Preauthentication is not supported for FTP.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/FtpWebRequest.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.FtpWebRequest.Proxy\n  commentId: P:System.Net.FtpWebRequest.Proxy\n  id: Proxy\n  parent: System.Net.FtpWebRequest\n  langs:\n  - csharp\n  name: Proxy\n  nameWithType: FtpWebRequest.Proxy\n  fullName: FtpWebRequest.Proxy\n  type: Property\n  assemblies:\n  - System\n  - netstandard\n  - System.Net.Requests\n  namespace: System.Net\n  summary: Gets or sets the proxy used to communicate with the FTP server.\n  remarks: \"The <xref:System.Net.FtpWebRequest.Proxy%2A> property identifies the <xref:System.Net.IWebProxy> instance that communicates with the FTP server. The proxy is set by the system by using configuration files and the Internet Explorer Local Area Network settings. To specify that no proxy should be used, set <xref:System.Net.FtpWebRequest.Proxy%2A> to the proxy instance returned by the <xref:System.Net.GlobalProxySelection.GetEmptyWebProxy%2A?displayProperty=fullName> method. For more information about automatic proxy detection, see [Automatic Proxy Detection](~/docs/framework/network-programming/automatic-proxy-detection.md).  \\n  \\n You must set <xref:System.Net.FtpWebRequest.Proxy%2A> before writing data to the request's stream or getting the response. Changing <xref:System.Net.FtpWebRequest.Proxy%2A> after calling the <xref:System.Net.FtpWebRequest.GetRequestStream%2A>, <xref:System.Net.FtpWebRequest.BeginGetRequestStream%2A>, <xref:System.Net.FtpWebRequest.GetResponse%2A>, or <xref:System.Net.FtpWebRequest.BeginGetResponse%2A> method causes an <xref:System.InvalidOperationException> exception.  \\n  \\n The <xref:System.Net.FtpWebRequest> class supports HTTP and ISA Firewall Client proxies.  \\n  \\n If the specified proxy is an HTTP proxy, only the <xref:System.Net.WebRequestMethods.Ftp.DownloadFile>, <xref:System.Net.WebRequestMethods.Ftp.ListDirectory>, and <xref:System.Net.WebRequestMethods.Ftp.ListDirectoryDetails> commands are supported.\"\n  example:\n  - \"The following code example displays this property value.  \\n  \\n [!code-cpp[NCLFtpClient#16](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLFtpClient/CPP/ftptests.cpp#16)]\\n [!code-csharp[NCLFtpClient#16](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLFtpClient/CS/ftptests.cs#16)]\"\n  syntax:\n    content: public override System.Net.IWebProxy Proxy { get; set; }\n    return:\n      type: System.Net.IWebProxy\n      description: An <xref href=\"System.Net.IWebProxy\"></xref> instance responsible for communicating with the FTP server.\n  overload: System.Net.FtpWebRequest.Proxy*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: This property cannot be set to `null`.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: A new value was specified for this property for a request that is already in progress.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/FtpWebRequest.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.FtpWebRequest.ReadWriteTimeout\n  commentId: P:System.Net.FtpWebRequest.ReadWriteTimeout\n  id: ReadWriteTimeout\n  parent: System.Net.FtpWebRequest\n  langs:\n  - csharp\n  name: ReadWriteTimeout\n  nameWithType: FtpWebRequest.ReadWriteTimeout\n  fullName: FtpWebRequest.ReadWriteTimeout\n  type: Property\n  assemblies:\n  - System\n  - netstandard\n  - System.Net.Requests\n  namespace: System.Net\n  summary: Gets or sets a time-out when reading from or writing to a stream.\n  remarks: \"The <xref:System.Net.FtpWebRequest.ReadWriteTimeout%2A> is used when writing to the stream returned by the <xref:System.Net.FtpWebRequest.GetRequestStream%2A> method or reading from the stream returned by the <xref:System.Net.FtpWebResponse.GetResponseStream%2A> method.  \\n  \\n Specifically, the <xref:System.Net.FtpWebRequest.ReadWriteTimeout%2A> property controls the time-out for the <xref:System.IO.Stream.Read%2A> method, which is used to read the stream returned by the <xref:System.Net.FtpWebResponse.GetResponseStream%2A> method, and for the <xref:System.IO.Stream.Write%2A> method, which is used to write to the stream returned by the <xref:System.Net.FtpWebRequest.GetRequestStream%2A> method. If the time-out period is exceeded, the calling method throws a <xref:System.Net.WebException> with <xref:System.Net.WebExceptionStatus> set to <xref:System.Net.WebExceptionStatus.Timeout>.  \\n  \\n To specify the amount of time to wait for the request to complete, use the <xref:System.Net.FtpWebRequest.Timeout%2A> property.\"\n  syntax:\n    content: public int ReadWriteTimeout { get; set; }\n    return:\n      type: System.Int32\n      description: The number of milliseconds before the reading or writing times out. The default value is 300,000 milliseconds (5 minutes).\n  overload: System.Net.FtpWebRequest.ReadWriteTimeout*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The request has already been sent.\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: The value specified for a set operation is less than or equal to zero and is not equal to <xref href=\"System.Threading.Timeout.Infinite\"></xref>.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/FtpWebRequest.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.FtpWebRequest.RenameTo\n  commentId: P:System.Net.FtpWebRequest.RenameTo\n  id: RenameTo\n  parent: System.Net.FtpWebRequest\n  langs:\n  - csharp\n  name: RenameTo\n  nameWithType: FtpWebRequest.RenameTo\n  fullName: FtpWebRequest.RenameTo\n  type: Property\n  assemblies:\n  - System\n  - netstandard\n  - System.Net.Requests\n  namespace: System.Net\n  summary: Gets or sets the new name of a file being renamed.\n  syntax:\n    content: public string RenameTo { get; set; }\n    return:\n      type: System.String\n      description: The new name of the file being renamed.\n  overload: System.Net.FtpWebRequest.RenameTo*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The value specified for a set operation is `null` or an empty string.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: A new value was specified for this property for a request that is already in progress.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/FtpWebRequest.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.FtpWebRequest.RequestUri\n  commentId: P:System.Net.FtpWebRequest.RequestUri\n  id: RequestUri\n  parent: System.Net.FtpWebRequest\n  langs:\n  - csharp\n  name: RequestUri\n  nameWithType: FtpWebRequest.RequestUri\n  fullName: FtpWebRequest.RequestUri\n  type: Property\n  assemblies:\n  - System\n  - netstandard\n  - System.Net.Requests\n  namespace: System.Net\n  summary: Gets the URI requested by this instance.\n  remarks: The value of the <xref:System.Net.FtpWebRequest.RequestUri%2A> property is the URI specified when the <xref:System.Net.WebRequest.Create%2A> method was called to obtain this instance.\n  example:\n  - \"The following code example displays this property value.  \\n  \\n [!code-cpp[NCLFtpClient#14](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLFtpClient/CPP/ftptests.cpp#14)]\\n [!code-csharp[NCLFtpClient#14](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLFtpClient/CS/ftptests.cs#14)]\"\n  syntax:\n    content: public override Uri RequestUri { get; }\n    return:\n      type: System.Uri\n      description: A <xref href=\"System.Uri\"></xref> instance that identifies a resource that is accessed using the File Transfer Protocol.\n  overload: System.Net.FtpWebRequest.RequestUri*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/FtpWebRequest.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.FtpWebRequest.ServicePoint\n  commentId: P:System.Net.FtpWebRequest.ServicePoint\n  id: ServicePoint\n  parent: System.Net.FtpWebRequest\n  langs:\n  - csharp\n  name: ServicePoint\n  nameWithType: FtpWebRequest.ServicePoint\n  fullName: FtpWebRequest.ServicePoint\n  type: Property\n  assemblies:\n  - System\n  - netstandard\n  - System.Net.Requests\n  namespace: System.Net\n  summary: Gets the <xref href=\"System.Net.ServicePoint\"></xref> object used to connect to the FTP server.\n  remarks: If no <xref:System.Net.ServicePoint> object exists, one is created for the FTP server. To set the maximum number of connections that can be open for an FTP server, set the <xref:System.Net.ServicePoint.ConnectionLimit%2A> property of the <xref:System.Net.ServicePoint> instance returned by this property.\n  example:\n  - \"The following code example retrieves the service point from a request and sets the maximum number of connections to one.  \\n  \\n [!code-cpp[NCLFtpClient#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLFtpClient/CPP/ftptests.cpp#1)]\\n [!code-csharp[NCLFtpClient#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLFtpClient/CS/ftptests.cs#1)]\"\n  syntax:\n    content: public System.Net.ServicePoint ServicePoint { get; }\n    return:\n      type: System.Net.ServicePoint\n      description: A <xref href=\"System.Net.ServicePoint\"></xref> object that can be used to customize connection behavior.\n  overload: System.Net.FtpWebRequest.ServicePoint*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/FtpWebRequest.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.FtpWebRequest.Timeout\n  commentId: P:System.Net.FtpWebRequest.Timeout\n  id: Timeout\n  parent: System.Net.FtpWebRequest\n  langs:\n  - csharp\n  name: Timeout\n  nameWithType: FtpWebRequest.Timeout\n  fullName: FtpWebRequest.Timeout\n  type: Property\n  assemblies:\n  - System\n  - netstandard\n  - System.Net.Requests\n  namespace: System.Net\n  summary: Gets or sets the number of milliseconds to wait for a request.\n  remarks: \"To specify an infinite value, set the <xref:System.Net.FtpWebRequest.Timeout%2A> property to <xref:System.Threading.Timeout.Infinite> (-1). This is the default value.  \\n  \\n <xref:System.Net.FtpWebRequest.Timeout%2A> is the number of milliseconds that a synchronous request made with the <xref:System.Net.FtpWebRequest.GetResponse%2A> method waits for a response and that the <xref:System.Net.FtpWebRequest.GetRequestStream%2A> method waits for a stream. If a resource does not respond within the time-out period, the request throws a <xref:System.Net.WebException> with the <xref:System.Net.WebException.Status%2A> property set to <xref:System.Net.WebExceptionStatus.Timeout>.  \\n  \\n Changing <xref:System.Net.FtpWebRequest.Timeout%2A> after calling the <xref:System.Net.FtpWebRequest.GetRequestStream%2A>, <xref:System.Net.FtpWebRequest.BeginGetRequestStream%2A>, <xref:System.Net.FtpWebRequest.GetResponse%2A>, or <xref:System.Net.FtpWebRequest.BeginGetResponse%2A> method causes an <xref:System.InvalidOperationException> exception.  \\n  \\n A Domain Name System (DNS) query may take up to 15 seconds to return or time out. If your request contains a host name that requires resolution and you set <xref:System.Net.FtpWebRequest.Timeout%2A> to a value less than 15 seconds, it may take 15 seconds or more before a <xref:System.Net.WebException> is thrown to indicate a time-out on your request.\"\n  example:\n  - \"The following code example sets this property.  \\n  \\n [!code-cpp[NCLFtpClient#23](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLFtpClient/CPP/ftptests.cpp#23)]\\n [!code-csharp[NCLFtpClient#23](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLFtpClient/CS/ftptests.cs#23)]\"\n  syntax:\n    content: public override int Timeout { get; set; }\n    return:\n      type: System.Int32\n      description: An <xref href=\"System.Int32\"></xref> value that contains the number of milliseconds to wait before a request times out. The default value is <xref href=\"System.Threading.Timeout.Infinite\"></xref>.\n  overload: System.Net.FtpWebRequest.Timeout*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: The value specified is less than zero and is not <xref href=\"System.Threading.Timeout.Infinite\"></xref>.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: A new value was specified for this property for a request that is already in progress.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/FtpWebRequest.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.FtpWebRequest.UseBinary\n  commentId: P:System.Net.FtpWebRequest.UseBinary\n  id: UseBinary\n  parent: System.Net.FtpWebRequest\n  langs:\n  - csharp\n  name: UseBinary\n  nameWithType: FtpWebRequest.UseBinary\n  fullName: FtpWebRequest.UseBinary\n  type: Property\n  assemblies:\n  - System\n  - netstandard\n  - System.Net.Requests\n  namespace: System.Net\n  summary: Gets or sets a <xref href=\"System.Boolean\"></xref> value that specifies the data type for file transfers.\n  remarks: \"If you are sending binary data, such as an image, set this property to `true`. If you are sending text, set the property to `false`. Specifying `true` causes the <xref:System.Net.FtpWebRequest> to send a `\\\"TYPE I\\\"` command to the server. Specifying `false` causes the <xref:System.Net.FtpWebRequest> to send a `\\\"Type A\\\"` command to the server. FTP servers can ignore these commands.  \\n  \\n Changing <xref:System.Net.FtpWebRequest.UseBinary%2A> after calling the <xref:System.Net.FtpWebRequest.GetRequestStream%2A>, <xref:System.Net.FtpWebRequest.BeginGetRequestStream%2A>, <xref:System.Net.FtpWebRequest.GetResponse%2A>, or <xref:System.Net.FtpWebRequest.BeginGetResponse%2A> method causes an <xref:System.InvalidOperationException> exception.\"\n  example:\n  - \"The following code example retrieves and displays property values for a specified <xref:System.Net.FtpWebRequest> object.  \\n  \\n [!code-cpp[NCLFtpClient#15](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLFtpClient/CPP/ftptests.cpp#15)]\\n [!code-csharp[NCLFtpClient#15](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLFtpClient/CS/ftptests.cs#15)]\"\n  syntax:\n    content: public bool UseBinary { get; set; }\n    return:\n      type: System.Boolean\n      description: '`true` to indicate to the server that the data to be transferred is binary; `false` to indicate that the data is text. The default value is `true`.'\n  overload: System.Net.FtpWebRequest.UseBinary*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: A new value was specified for this property for a request that is already in progress.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/FtpWebRequest.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.FtpWebRequest.UseDefaultCredentials\n  commentId: P:System.Net.FtpWebRequest.UseDefaultCredentials\n  id: UseDefaultCredentials\n  parent: System.Net.FtpWebRequest\n  langs:\n  - csharp\n  name: UseDefaultCredentials\n  nameWithType: FtpWebRequest.UseDefaultCredentials\n  fullName: FtpWebRequest.UseDefaultCredentials\n  type: Property\n  assemblies:\n  - System\n  - netstandard\n  - System.Net.Requests\n  namespace: System.Net\n  summary: Always throws a <xref href=\"System.NotSupportedException\"></xref>.\n  remarks: The <xref:System.Net.FtpWebRequest.UseDefaultCredentials%2A> property is provided only for compatibility with other implementations of the <xref:System.Net.WebRequest> and <xref:System.Net.WebResponse> classes. There is no reason to use <xref:System.Net.FtpWebRequest.UseDefaultCredentials%2A>.\n  syntax:\n    content: >-\n      [System.MonoTODO]\n\n      public override bool UseDefaultCredentials { get; set; }\n    return:\n      type: System.Boolean\n      description: Always throws a <xref href=\"System.NotSupportedException\"></xref>.\n  overload: System.Net.FtpWebRequest.UseDefaultCredentials*\n  exceptions:\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: Default credentials are not supported for FTP.\n  attributes:\n  - type: System.MonoTODO\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/FtpWebRequest.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.FtpWebRequest.UsePassive\n  commentId: P:System.Net.FtpWebRequest.UsePassive\n  id: UsePassive\n  parent: System.Net.FtpWebRequest\n  langs:\n  - csharp\n  name: UsePassive\n  nameWithType: FtpWebRequest.UsePassive\n  fullName: FtpWebRequest.UsePassive\n  type: Property\n  assemblies:\n  - System\n  - netstandard\n  - System.Net.Requests\n  namespace: System.Net\n  summary: Gets or sets the behavior of a client application's data transfer process.\n  remarks: \"Setting the <xref:System.Net.FtpWebRequest.UsePassive%2A> property to `true` sends the \\\"`PASV\\\"` command to the server. This command requests the server to listen on a data port and to wait for a connection rather than initiate one upon receipt of a transfer command.  \\n  \\n For a description of the behaviors that are specified using <xref:System.Net.FtpWebRequest.UsePassive%2A>, see RFC 959, \\\"File Transfer Protocol,\\\" Section 3.2, \\\"Establishing Data Connections\\\" and Section 4.1.2, \\\"Transfer Parameter Commands,\\\" available at [http://www.rfc-editor.org/](http://www.ietf.org/rfc/rfc959.txt).  \\n  \\n Changing <xref:System.Net.FtpWebRequest.UsePassive%2A> after calling the <xref:System.Net.FtpWebRequest.GetRequestStream%2A>, <xref:System.Net.FtpWebRequest.BeginGetRequestStream%2A>, <xref:System.Net.FtpWebRequest.GetResponse%2A>, or <xref:System.Net.FtpWebRequest.BeginGetResponse%2A> method causes an <xref:System.InvalidOperationException> exception.  \\n  \\n If <xref:System.Net.FtpWebRequest.UsePassive%2A> is set to `true`, the FTP server may not send the size of the file, and download progress can always be zero. If <xref:System.Net.FtpWebRequest.UsePassive%2A> is set to `false`, a firewall can raise an alert and block the file download.\"\n  example:\n  - \"The following code example retrieves and displays property values for a specified <xref:System.Net.FtpWebRequest> object.  \\n  \\n [!code-cpp[NCLFtpClient#6](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLFtpClient/CPP/ftptests.cpp#6)]\\n [!code-csharp[NCLFtpClient#6](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLFtpClient/CS/ftptests.cs#6)]\"\n  syntax:\n    content: public bool UsePassive { get; set; }\n    return:\n      type: System.Boolean\n      description: \"`false` if the client application's data transfer process listens for a connection on the data port; otherwise, `true` if the client should initiate a connection on the data port. The default value is `true`.\"\n  overload: System.Net.FtpWebRequest.UsePassive*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: A new value was specified for this property for a request that is already in progress.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/FtpWebRequest.xml\n  ms.author: bobdel\n  manager: markl\nreferences:\n- uid: System.Net.WebRequest\n  parent: System.Net\n  isExternal: false\n  name: WebRequest\n  nameWithType: WebRequest\n  fullName: System.Net.WebRequest\n- uid: System.InvalidOperationException\n  parent: System\n  isExternal: false\n  name: InvalidOperationException\n  nameWithType: InvalidOperationException\n  fullName: System.InvalidOperationException\n- uid: System.Net.WebException\n  parent: System.Net\n  isExternal: false\n  name: WebException\n  nameWithType: WebException\n  fullName: System.Net.WebException\n- uid: System.Net.ProtocolViolationException\n  parent: System.Net\n  isExternal: false\n  name: ProtocolViolationException\n  nameWithType: ProtocolViolationException\n  fullName: System.Net.ProtocolViolationException\n- uid: System.ArgumentNullException\n  parent: System\n  isExternal: false\n  name: ArgumentNullException\n  nameWithType: ArgumentNullException\n  fullName: System.ArgumentNullException\n- uid: System.ArgumentOutOfRangeException\n  parent: System\n  isExternal: false\n  name: ArgumentOutOfRangeException\n  nameWithType: ArgumentOutOfRangeException\n  fullName: System.ArgumentOutOfRangeException\n- uid: System.NotSupportedException\n  parent: System\n  isExternal: false\n  name: NotSupportedException\n  nameWithType: NotSupportedException\n  fullName: System.NotSupportedException\n- uid: System.ArgumentException\n  parent: System\n  isExternal: false\n  name: ArgumentException\n  nameWithType: ArgumentException\n  fullName: System.ArgumentException\n- uid: System.Net.FtpWebRequest.Abort\n  parent: System.Net.FtpWebRequest\n  isExternal: false\n  name: Abort()\n  nameWithType: FtpWebRequest.Abort()\n  fullName: FtpWebRequest.Abort()\n- uid: System.Net.FtpWebRequest.BeginGetRequestStream(System.AsyncCallback,System.Object)\n  parent: System.Net.FtpWebRequest\n  isExternal: false\n  name: BeginGetRequestStream(AsyncCallback, Object)\n  nameWithType: FtpWebRequest.BeginGetRequestStream(AsyncCallback, Object)\n  fullName: FtpWebRequest.BeginGetRequestStream(AsyncCallback, Object)\n- uid: System.IAsyncResult\n  parent: System\n  isExternal: false\n  name: IAsyncResult\n  nameWithType: IAsyncResult\n  fullName: System.IAsyncResult\n- uid: System.AsyncCallback\n  parent: System\n  isExternal: false\n  name: AsyncCallback\n  nameWithType: AsyncCallback\n  fullName: System.AsyncCallback\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Net.FtpWebRequest.BeginGetResponse(System.AsyncCallback,System.Object)\n  parent: System.Net.FtpWebRequest\n  isExternal: false\n  name: BeginGetResponse(AsyncCallback, Object)\n  nameWithType: FtpWebRequest.BeginGetResponse(AsyncCallback, Object)\n  fullName: FtpWebRequest.BeginGetResponse(AsyncCallback, Object)\n- uid: System.Net.FtpWebRequest.ClientCertificates\n  parent: System.Net.FtpWebRequest\n  isExternal: false\n  name: ClientCertificates\n  nameWithType: FtpWebRequest.ClientCertificates\n  fullName: FtpWebRequest.ClientCertificates\n- uid: System.Security.Cryptography.X509Certificates.X509CertificateCollection\n  parent: System.Security.Cryptography.X509Certificates\n  isExternal: false\n  name: X509CertificateCollection\n  nameWithType: X509CertificateCollection\n  fullName: System.Security.Cryptography.X509Certificates.X509CertificateCollection\n- uid: System.Net.FtpWebRequest.ConnectionGroupName\n  parent: System.Net.FtpWebRequest\n  isExternal: false\n  name: ConnectionGroupName\n  nameWithType: FtpWebRequest.ConnectionGroupName\n  fullName: FtpWebRequest.ConnectionGroupName\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Net.FtpWebRequest.ContentLength\n  parent: System.Net.FtpWebRequest\n  isExternal: false\n  name: ContentLength\n  nameWithType: FtpWebRequest.ContentLength\n  fullName: FtpWebRequest.ContentLength\n- uid: System.Int64\n  parent: System\n  isExternal: false\n  name: Int64\n  nameWithType: Int64\n  fullName: System.Int64\n- uid: System.Net.FtpWebRequest.ContentOffset\n  parent: System.Net.FtpWebRequest\n  isExternal: false\n  name: ContentOffset\n  nameWithType: FtpWebRequest.ContentOffset\n  fullName: FtpWebRequest.ContentOffset\n- uid: System.Net.FtpWebRequest.ContentType\n  parent: System.Net.FtpWebRequest\n  isExternal: false\n  name: ContentType\n  nameWithType: FtpWebRequest.ContentType\n  fullName: FtpWebRequest.ContentType\n- uid: System.Net.FtpWebRequest.Credentials\n  parent: System.Net.FtpWebRequest\n  isExternal: false\n  name: Credentials\n  nameWithType: FtpWebRequest.Credentials\n  fullName: FtpWebRequest.Credentials\n- uid: System.Net.ICredentials\n  parent: System.Net\n  isExternal: false\n  name: ICredentials\n  nameWithType: ICredentials\n  fullName: System.Net.ICredentials\n- uid: System.Net.FtpWebRequest.DefaultCachePolicy\n  parent: System.Net.FtpWebRequest\n  isExternal: false\n  name: DefaultCachePolicy\n  nameWithType: FtpWebRequest.DefaultCachePolicy\n  fullName: FtpWebRequest.DefaultCachePolicy\n- uid: System.Net.Cache.RequestCachePolicy\n  parent: System.Net.Cache\n  isExternal: false\n  name: RequestCachePolicy\n  nameWithType: RequestCachePolicy\n  fullName: System.Net.Cache.RequestCachePolicy\n- uid: System.Net.FtpWebRequest.EnableSsl\n  parent: System.Net.FtpWebRequest\n  isExternal: false\n  name: EnableSsl\n  nameWithType: FtpWebRequest.EnableSsl\n  fullName: FtpWebRequest.EnableSsl\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Net.FtpWebRequest.EndGetRequestStream(System.IAsyncResult)\n  parent: System.Net.FtpWebRequest\n  isExternal: false\n  name: EndGetRequestStream(IAsyncResult)\n  nameWithType: FtpWebRequest.EndGetRequestStream(IAsyncResult)\n  fullName: FtpWebRequest.EndGetRequestStream(IAsyncResult)\n- uid: System.IO.Stream\n  parent: System.IO\n  isExternal: false\n  name: Stream\n  nameWithType: Stream\n  fullName: System.IO.Stream\n- uid: System.Net.FtpWebRequest.EndGetResponse(System.IAsyncResult)\n  parent: System.Net.FtpWebRequest\n  isExternal: false\n  name: EndGetResponse(IAsyncResult)\n  nameWithType: FtpWebRequest.EndGetResponse(IAsyncResult)\n  fullName: FtpWebRequest.EndGetResponse(IAsyncResult)\n- uid: System.Net.WebResponse\n  parent: System.Net\n  isExternal: false\n  name: WebResponse\n  nameWithType: WebResponse\n  fullName: System.Net.WebResponse\n- uid: System.Net.FtpWebRequest.GetRequestStream\n  parent: System.Net.FtpWebRequest\n  isExternal: false\n  name: GetRequestStream()\n  nameWithType: FtpWebRequest.GetRequestStream()\n  fullName: FtpWebRequest.GetRequestStream()\n- uid: System.Net.FtpWebRequest.GetResponse\n  parent: System.Net.FtpWebRequest\n  isExternal: false\n  name: GetResponse()\n  nameWithType: FtpWebRequest.GetResponse()\n  fullName: FtpWebRequest.GetResponse()\n- uid: System.Net.FtpWebRequest.Headers\n  parent: System.Net.FtpWebRequest\n  isExternal: false\n  name: Headers\n  nameWithType: FtpWebRequest.Headers\n  fullName: FtpWebRequest.Headers\n- uid: System.Net.WebHeaderCollection\n  parent: System.Net\n  isExternal: false\n  name: WebHeaderCollection\n  nameWithType: WebHeaderCollection\n  fullName: System.Net.WebHeaderCollection\n- uid: System.Net.FtpWebRequest.KeepAlive\n  parent: System.Net.FtpWebRequest\n  isExternal: false\n  name: KeepAlive\n  nameWithType: FtpWebRequest.KeepAlive\n  fullName: FtpWebRequest.KeepAlive\n- uid: System.Net.FtpWebRequest.Method\n  parent: System.Net.FtpWebRequest\n  isExternal: false\n  name: Method\n  nameWithType: FtpWebRequest.Method\n  fullName: FtpWebRequest.Method\n- uid: System.Net.FtpWebRequest.PreAuthenticate\n  parent: System.Net.FtpWebRequest\n  isExternal: false\n  name: PreAuthenticate\n  nameWithType: FtpWebRequest.PreAuthenticate\n  fullName: FtpWebRequest.PreAuthenticate\n- uid: System.Net.FtpWebRequest.Proxy\n  parent: System.Net.FtpWebRequest\n  isExternal: false\n  name: Proxy\n  nameWithType: FtpWebRequest.Proxy\n  fullName: FtpWebRequest.Proxy\n- uid: System.Net.IWebProxy\n  parent: System.Net\n  isExternal: false\n  name: IWebProxy\n  nameWithType: IWebProxy\n  fullName: System.Net.IWebProxy\n- uid: System.Net.FtpWebRequest.ReadWriteTimeout\n  parent: System.Net.FtpWebRequest\n  isExternal: false\n  name: ReadWriteTimeout\n  nameWithType: FtpWebRequest.ReadWriteTimeout\n  fullName: FtpWebRequest.ReadWriteTimeout\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Net.FtpWebRequest.RenameTo\n  parent: System.Net.FtpWebRequest\n  isExternal: false\n  name: RenameTo\n  nameWithType: FtpWebRequest.RenameTo\n  fullName: FtpWebRequest.RenameTo\n- uid: System.Net.FtpWebRequest.RequestUri\n  parent: System.Net.FtpWebRequest\n  isExternal: false\n  name: RequestUri\n  nameWithType: FtpWebRequest.RequestUri\n  fullName: FtpWebRequest.RequestUri\n- uid: System.Uri\n  parent: System\n  isExternal: false\n  name: Uri\n  nameWithType: Uri\n  fullName: System.Uri\n- uid: System.Net.FtpWebRequest.ServicePoint\n  parent: System.Net.FtpWebRequest\n  isExternal: false\n  name: ServicePoint\n  nameWithType: FtpWebRequest.ServicePoint\n  fullName: FtpWebRequest.ServicePoint\n- uid: System.Net.ServicePoint\n  parent: System.Net\n  isExternal: false\n  name: ServicePoint\n  nameWithType: ServicePoint\n  fullName: System.Net.ServicePoint\n- uid: System.Net.FtpWebRequest.Timeout\n  parent: System.Net.FtpWebRequest\n  isExternal: false\n  name: Timeout\n  nameWithType: FtpWebRequest.Timeout\n  fullName: FtpWebRequest.Timeout\n- uid: System.Net.FtpWebRequest.UseBinary\n  parent: System.Net.FtpWebRequest\n  isExternal: false\n  name: UseBinary\n  nameWithType: FtpWebRequest.UseBinary\n  fullName: FtpWebRequest.UseBinary\n- uid: System.Net.FtpWebRequest.UseDefaultCredentials\n  parent: System.Net.FtpWebRequest\n  isExternal: false\n  name: UseDefaultCredentials\n  nameWithType: FtpWebRequest.UseDefaultCredentials\n  fullName: FtpWebRequest.UseDefaultCredentials\n- uid: System.Net.FtpWebRequest.UsePassive\n  parent: System.Net.FtpWebRequest\n  isExternal: false\n  name: UsePassive\n  nameWithType: FtpWebRequest.UsePassive\n  fullName: FtpWebRequest.UsePassive\n- uid: System.Net.FtpWebRequest.Abort*\n  parent: System.Net.FtpWebRequest\n  isExternal: false\n  name: Abort\n  nameWithType: FtpWebRequest.Abort\n  fullName: FtpWebRequest.Abort\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/FtpWebRequest.xml\n- uid: System.Net.FtpWebRequest.BeginGetRequestStream*\n  parent: System.Net.FtpWebRequest\n  isExternal: false\n  name: BeginGetRequestStream\n  nameWithType: FtpWebRequest.BeginGetRequestStream\n  fullName: FtpWebRequest.BeginGetRequestStream\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/FtpWebRequest.xml\n- uid: System.Net.FtpWebRequest.BeginGetResponse*\n  parent: System.Net.FtpWebRequest\n  isExternal: false\n  name: BeginGetResponse\n  nameWithType: FtpWebRequest.BeginGetResponse\n  fullName: FtpWebRequest.BeginGetResponse\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/FtpWebRequest.xml\n- uid: System.Net.FtpWebRequest.ClientCertificates*\n  parent: System.Net.FtpWebRequest\n  isExternal: false\n  name: ClientCertificates\n  nameWithType: FtpWebRequest.ClientCertificates\n  fullName: FtpWebRequest.ClientCertificates\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/FtpWebRequest.xml\n- uid: System.Net.FtpWebRequest.ConnectionGroupName*\n  parent: System.Net.FtpWebRequest\n  isExternal: false\n  name: ConnectionGroupName\n  nameWithType: FtpWebRequest.ConnectionGroupName\n  fullName: FtpWebRequest.ConnectionGroupName\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/FtpWebRequest.xml\n- uid: System.Net.FtpWebRequest.ContentLength*\n  parent: System.Net.FtpWebRequest\n  isExternal: false\n  name: ContentLength\n  nameWithType: FtpWebRequest.ContentLength\n  fullName: FtpWebRequest.ContentLength\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/FtpWebRequest.xml\n- uid: System.Net.FtpWebRequest.ContentOffset*\n  parent: System.Net.FtpWebRequest\n  isExternal: false\n  name: ContentOffset\n  nameWithType: FtpWebRequest.ContentOffset\n  fullName: FtpWebRequest.ContentOffset\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/FtpWebRequest.xml\n- uid: System.Net.FtpWebRequest.ContentType*\n  parent: System.Net.FtpWebRequest\n  isExternal: false\n  name: ContentType\n  nameWithType: FtpWebRequest.ContentType\n  fullName: FtpWebRequest.ContentType\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/FtpWebRequest.xml\n- uid: System.Net.FtpWebRequest.Credentials*\n  parent: System.Net.FtpWebRequest\n  isExternal: false\n  name: Credentials\n  nameWithType: FtpWebRequest.Credentials\n  fullName: FtpWebRequest.Credentials\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/FtpWebRequest.xml\n- uid: System.Net.FtpWebRequest.DefaultCachePolicy*\n  parent: System.Net.FtpWebRequest\n  isExternal: false\n  name: DefaultCachePolicy\n  nameWithType: FtpWebRequest.DefaultCachePolicy\n  fullName: FtpWebRequest.DefaultCachePolicy\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/FtpWebRequest.xml\n- uid: System.Net.FtpWebRequest.EnableSsl*\n  parent: System.Net.FtpWebRequest\n  isExternal: false\n  name: EnableSsl\n  nameWithType: FtpWebRequest.EnableSsl\n  fullName: FtpWebRequest.EnableSsl\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/FtpWebRequest.xml\n- uid: System.Net.FtpWebRequest.EndGetRequestStream*\n  parent: System.Net.FtpWebRequest\n  isExternal: false\n  name: EndGetRequestStream\n  nameWithType: FtpWebRequest.EndGetRequestStream\n  fullName: FtpWebRequest.EndGetRequestStream\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/FtpWebRequest.xml\n- uid: System.Net.FtpWebRequest.EndGetResponse*\n  parent: System.Net.FtpWebRequest\n  isExternal: false\n  name: EndGetResponse\n  nameWithType: FtpWebRequest.EndGetResponse\n  fullName: FtpWebRequest.EndGetResponse\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/FtpWebRequest.xml\n- uid: System.Net.FtpWebRequest.GetRequestStream*\n  parent: System.Net.FtpWebRequest\n  isExternal: false\n  name: GetRequestStream\n  nameWithType: FtpWebRequest.GetRequestStream\n  fullName: FtpWebRequest.GetRequestStream\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/FtpWebRequest.xml\n- uid: System.Net.FtpWebRequest.GetResponse*\n  parent: System.Net.FtpWebRequest\n  isExternal: false\n  name: GetResponse\n  nameWithType: FtpWebRequest.GetResponse\n  fullName: FtpWebRequest.GetResponse\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/FtpWebRequest.xml\n- uid: System.Net.FtpWebRequest.Headers*\n  parent: System.Net.FtpWebRequest\n  isExternal: false\n  name: Headers\n  nameWithType: FtpWebRequest.Headers\n  fullName: FtpWebRequest.Headers\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/FtpWebRequest.xml\n- uid: System.Net.FtpWebRequest.KeepAlive*\n  parent: System.Net.FtpWebRequest\n  isExternal: false\n  name: KeepAlive\n  nameWithType: FtpWebRequest.KeepAlive\n  fullName: FtpWebRequest.KeepAlive\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/FtpWebRequest.xml\n- uid: System.Net.FtpWebRequest.Method*\n  parent: System.Net.FtpWebRequest\n  isExternal: false\n  name: Method\n  nameWithType: FtpWebRequest.Method\n  fullName: FtpWebRequest.Method\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/FtpWebRequest.xml\n- uid: System.Net.FtpWebRequest.PreAuthenticate*\n  parent: System.Net.FtpWebRequest\n  isExternal: false\n  name: PreAuthenticate\n  nameWithType: FtpWebRequest.PreAuthenticate\n  fullName: FtpWebRequest.PreAuthenticate\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/FtpWebRequest.xml\n- uid: System.Net.FtpWebRequest.Proxy*\n  parent: System.Net.FtpWebRequest\n  isExternal: false\n  name: Proxy\n  nameWithType: FtpWebRequest.Proxy\n  fullName: FtpWebRequest.Proxy\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/FtpWebRequest.xml\n- uid: System.Net.FtpWebRequest.ReadWriteTimeout*\n  parent: System.Net.FtpWebRequest\n  isExternal: false\n  name: ReadWriteTimeout\n  nameWithType: FtpWebRequest.ReadWriteTimeout\n  fullName: FtpWebRequest.ReadWriteTimeout\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/FtpWebRequest.xml\n- uid: System.Net.FtpWebRequest.RenameTo*\n  parent: System.Net.FtpWebRequest\n  isExternal: false\n  name: RenameTo\n  nameWithType: FtpWebRequest.RenameTo\n  fullName: FtpWebRequest.RenameTo\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/FtpWebRequest.xml\n- uid: System.Net.FtpWebRequest.RequestUri*\n  parent: System.Net.FtpWebRequest\n  isExternal: false\n  name: RequestUri\n  nameWithType: FtpWebRequest.RequestUri\n  fullName: FtpWebRequest.RequestUri\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/FtpWebRequest.xml\n- uid: System.Net.FtpWebRequest.ServicePoint*\n  parent: System.Net.FtpWebRequest\n  isExternal: false\n  name: ServicePoint\n  nameWithType: FtpWebRequest.ServicePoint\n  fullName: FtpWebRequest.ServicePoint\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/FtpWebRequest.xml\n- uid: System.Net.FtpWebRequest.Timeout*\n  parent: System.Net.FtpWebRequest\n  isExternal: false\n  name: Timeout\n  nameWithType: FtpWebRequest.Timeout\n  fullName: FtpWebRequest.Timeout\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/FtpWebRequest.xml\n- uid: System.Net.FtpWebRequest.UseBinary*\n  parent: System.Net.FtpWebRequest\n  isExternal: false\n  name: UseBinary\n  nameWithType: FtpWebRequest.UseBinary\n  fullName: FtpWebRequest.UseBinary\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/FtpWebRequest.xml\n- uid: System.Net.FtpWebRequest.UseDefaultCredentials*\n  parent: System.Net.FtpWebRequest\n  isExternal: false\n  name: UseDefaultCredentials\n  nameWithType: FtpWebRequest.UseDefaultCredentials\n  fullName: FtpWebRequest.UseDefaultCredentials\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/FtpWebRequest.xml\n- uid: System.Net.FtpWebRequest.UsePassive*\n  parent: System.Net.FtpWebRequest\n  isExternal: false\n  name: UsePassive\n  nameWithType: FtpWebRequest.UsePassive\n  fullName: FtpWebRequest.UsePassive\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/FtpWebRequest.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.Net.WebRequest.AuthenticationLevel\n  parent: System.Net.WebRequest\n  isExternal: false\n  name: AuthenticationLevel\n  nameWithType: WebRequest.AuthenticationLevel\n  fullName: WebRequest.AuthenticationLevel\n- uid: System.Net.WebRequest.CachePolicy\n  parent: System.Net.WebRequest\n  isExternal: false\n  name: CachePolicy\n  nameWithType: WebRequest.CachePolicy\n  fullName: WebRequest.CachePolicy\n- uid: System.Net.WebRequest.Create(System.String)\n  parent: System.Net.WebRequest\n  isExternal: false\n  name: Create(String)\n  nameWithType: WebRequest.Create(String)\n  fullName: WebRequest.Create(String)\n- uid: System.Net.WebRequest.Create(System.Uri)\n  parent: System.Net.WebRequest\n  isExternal: false\n  name: Create(Uri)\n  nameWithType: WebRequest.Create(Uri)\n  fullName: WebRequest.Create(Uri)\n- uid: System.Net.WebRequest.CreateDefault(System.Uri)\n  parent: System.Net.WebRequest\n  isExternal: false\n  name: CreateDefault(Uri)\n  nameWithType: WebRequest.CreateDefault(Uri)\n  fullName: WebRequest.CreateDefault(Uri)\n- uid: System.Net.WebRequest.CreateHttp(System.String)\n  parent: System.Net.WebRequest\n  isExternal: false\n  name: CreateHttp(String)\n  nameWithType: WebRequest.CreateHttp(String)\n  fullName: WebRequest.CreateHttp(String)\n- uid: System.Net.WebRequest.CreateHttp(System.Uri)\n  parent: System.Net.WebRequest\n  isExternal: false\n  name: CreateHttp(Uri)\n  nameWithType: WebRequest.CreateHttp(Uri)\n  fullName: WebRequest.CreateHttp(Uri)\n- uid: System.Net.WebRequest.CreatorInstance\n  parent: System.Net.WebRequest\n  isExternal: false\n  name: CreatorInstance\n  nameWithType: WebRequest.CreatorInstance\n  fullName: WebRequest.CreatorInstance\n- uid: System.Net.WebRequest.DefaultWebProxy\n  parent: System.Net.WebRequest\n  isExternal: false\n  name: DefaultWebProxy\n  nameWithType: WebRequest.DefaultWebProxy\n  fullName: WebRequest.DefaultWebProxy\n- uid: System.Net.WebRequest.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  parent: System.Net.WebRequest\n  isExternal: false\n  name: GetObjectData(SerializationInfo, StreamingContext)\n  nameWithType: WebRequest.GetObjectData(SerializationInfo, StreamingContext)\n  fullName: WebRequest.GetObjectData(SerializationInfo, StreamingContext)\n- uid: System.Net.WebRequest.GetRequestStreamAsync\n  parent: System.Net.WebRequest\n  isExternal: false\n  name: GetRequestStreamAsync()\n  nameWithType: WebRequest.GetRequestStreamAsync()\n  fullName: WebRequest.GetRequestStreamAsync()\n- uid: System.Net.WebRequest.GetResponseAsync\n  parent: System.Net.WebRequest\n  isExternal: false\n  name: GetResponseAsync()\n  nameWithType: WebRequest.GetResponseAsync()\n  fullName: WebRequest.GetResponseAsync()\n- uid: System.Net.WebRequest.GetSystemWebProxy\n  parent: System.Net.WebRequest\n  isExternal: false\n  name: GetSystemWebProxy()\n  nameWithType: WebRequest.GetSystemWebProxy()\n  fullName: WebRequest.GetSystemWebProxy()\n- uid: System.Net.WebRequest.ImpersonationLevel\n  parent: System.Net.WebRequest\n  isExternal: false\n  name: ImpersonationLevel\n  nameWithType: WebRequest.ImpersonationLevel\n  fullName: WebRequest.ImpersonationLevel\n- uid: System.Net.WebRequest.RegisterPortableWebRequestCreator(System.Net.IWebRequestCreate)\n  parent: System.Net.WebRequest\n  isExternal: false\n  name: RegisterPortableWebRequestCreator(IWebRequestCreate)\n  nameWithType: WebRequest.RegisterPortableWebRequestCreator(IWebRequestCreate)\n  fullName: WebRequest.RegisterPortableWebRequestCreator(IWebRequestCreate)\n- uid: System.Net.WebRequest.RegisterPrefix(System.String,System.Net.IWebRequestCreate)\n  parent: System.Net.WebRequest\n  isExternal: false\n  name: RegisterPrefix(String, IWebRequestCreate)\n  nameWithType: WebRequest.RegisterPrefix(String, IWebRequestCreate)\n  fullName: WebRequest.RegisterPrefix(String, IWebRequestCreate)\n- uid: System.Net.WebRequest.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  parent: System.Net.WebRequest\n  isExternal: false\n  name: ISerializable.GetObjectData(SerializationInfo, StreamingContext)\n  nameWithType: WebRequest.ISerializable.GetObjectData(SerializationInfo, StreamingContext)\n  fullName: WebRequest.ISerializable.GetObjectData(SerializationInfo, StreamingContext)\n"}