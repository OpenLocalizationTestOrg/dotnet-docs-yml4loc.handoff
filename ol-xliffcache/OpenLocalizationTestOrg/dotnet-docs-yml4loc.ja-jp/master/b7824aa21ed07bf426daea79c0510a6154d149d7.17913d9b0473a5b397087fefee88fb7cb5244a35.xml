{"nodes":[{"content":"Provides a mechanism to implement your own thread pool to execute the workflow and manage in-memory timer registration and events.","nodes":[{"pos":[0,130],"content":"Provides a mechanism to implement your own thread pool to execute the workflow and manage in-memory timer registration and events.","nodes":[{"content":"Provides a mechanism to implement your own thread pool to execute the workflow and manage in-memory timer registration and events.","pos":[0,130]}]}],"pos":[892,1023],"yaml":true},{"content":"> [!NOTE]\n>  [!INCLUDE[DeprecatedContent](~/includes/deprecatedcontent-md.md)]  \n  \n <xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService> is that base class for all classes that create threads that run workflow instances on the workflow runtime engine host. These include <xref:System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService> and <xref:System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService>.","nodes":[{"pos":[2,78],"content":"[!NOTE]\n [!INCLUDE[DeprecatedContent](~/includes/deprecatedcontent-md.md)]","leadings":["","> "],"nodes":[]},{"pos":[85,428],"content":"<xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService> is that base class for all classes that create threads that run workflow instances on the workflow runtime engine host. These include <xref:System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService> and <xref:System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService>.","nodes":[{"content":"<xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService> is that base class for all classes that create threads that run workflow instances on the workflow runtime engine host. These include <xref:System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService> and <xref:System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService>.","pos":[0,343],"nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService&gt;</ph> is that base class for all classes that create threads that run workflow instances on the workflow runtime engine host.","pos":[0,183],"source":"<xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService> is that base class for all classes that create threads that run workflow instances on the workflow runtime engine host."},{"content":"These include <ph id=\"ph1\">&lt;xref:System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService&gt;</ph>.","pos":[184,343],"source":" These include <xref:System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService> and <xref:System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService>."}]}]}],"pos":[1034,1468],"yaml":true,"extradata":"MT"},{"content":"When implemented in a derived class, initializes a new instance of the <xref href=\"System.Workflow.Runtime.Hosting.WorkflowSchedulerService\"></xref> class.","nodes":[{"pos":[0,155],"content":"When implemented in a derived class, initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Workflow.Runtime.Hosting.WorkflowSchedulerService\"&gt;&lt;/xref&gt;</ph> class.","source":"When implemented in a derived class, initializes a new instance of the <xref href=\"System.Workflow.Runtime.Hosting.WorkflowSchedulerService\"></xref> class."}],"pos":[3916,4072],"yaml":true},{"content":"When overridden in a derived class, cancels the scheduled work item with the given <code>timerId</code>.","nodes":[{"pos":[0,104],"content":"When overridden in a derived class, cancels the scheduled work item with the given <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">timerId</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"When overridden in a derived class, cancels the scheduled work item with the given <code>timerId</code>."}],"pos":[6017,6122],"yaml":true},{"content":"<xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService.Cancel%2A> removes from the pending work items queue a previous request to schedule a workflow instance.","nodes":[{"pos":[0,167],"content":"<xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService.Cancel%2A> removes from the pending work items queue a previous request to schedule a workflow instance.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService.Cancel%2A&gt;</ph> removes from the pending work items queue a previous request to schedule a workflow instance.","pos":[0,167],"source":"<xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService.Cancel%2A> removes from the pending work items queue a previous request to schedule a workflow instance."}]}],"pos":[6133,6301],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.Guid\"></xref> associated with the existing scheduled thread to cancel.","nodes":[{"pos":[0,93],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Guid\"&gt;&lt;/xref&gt;</ph> associated with the existing scheduled thread to cancel.","source":"The <xref href=\"System.Guid\"></xref> associated with the existing scheduled thread to cancel."}],"pos":[6448,6542],"yaml":true},{"content":"When overridden in a derived class, this method is called by the runtime to schedule a work item (callback) for a particular instance ID.","nodes":[{"pos":[0,137],"content":"When overridden in a derived class, this method is called by the runtime to schedule a work item (callback) for a particular instance ID.","nodes":[{"content":"When overridden in a derived class, this method is called by the runtime to schedule a work item (callback) for a particular instance ID.","pos":[0,137]}]}],"pos":[7822,7960],"yaml":true},{"content":"Use the <xref:System.Threading.WaitCallback> constructor to create your delegate method to run in the new thread.","nodes":[{"pos":[0,113],"content":"Use the <xref:System.Threading.WaitCallback> constructor to create your delegate method to run in the new thread.","nodes":[{"content":"Use the <ph id=\"ph1\">&lt;xref:System.Threading.WaitCallback&gt;</ph> constructor to create your delegate method to run in the new thread.","pos":[0,113],"source":"Use the <xref:System.Threading.WaitCallback> constructor to create your delegate method to run in the new thread."}]}],"pos":[7971,8085],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Threading.WaitCallback\"></xref> multicast delegate that represents the method to run.","nodes":[{"pos":[0,106],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Threading.WaitCallback\"&gt;&lt;/xref&gt;</ph> multicast delegate that represents the method to run.","source":"A <xref href=\"System.Threading.WaitCallback\"></xref> multicast delegate that represents the method to run."}],"pos":[8304,8411],"yaml":true},{"content":"A <xref href=\"System.Guid\"></xref> that represents the workflow instance.","nodes":[{"pos":[0,73],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Guid\"&gt;&lt;/xref&gt;</ph> that represents the workflow instance.","source":"A <xref href=\"System.Guid\"></xref> that represents the workflow instance."}],"pos":[8483,8557],"yaml":true},{"content":"When overridden in a derived class, this method is called by the runtime to schedule a work item (callback) for a particular workflow instance to be done at the given time (<xref href=\"System.DateTime\"></xref>).","nodes":[{"pos":[0,211],"content":"When overridden in a derived class, this method is called by the runtime to schedule a work item (callback) for a particular workflow instance to be done at the given time (<ph id=\"ph1\">&lt;xref href=\"System.DateTime\"&gt;&lt;/xref&gt;</ph>).","source":"When overridden in a derived class, this method is called by the runtime to schedule a work item (callback) for a particular workflow instance to be done at the given time (<xref href=\"System.DateTime\"></xref>)."}],"pos":[9971,10183],"yaml":true},{"content":"A <xref href=\"System.Threading.WaitCallback\"></xref> multicast delegate that represents the method to run.","nodes":[{"pos":[0,106],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Threading.WaitCallback\"&gt;&lt;/xref&gt;</ph> multicast delegate that represents the method to run.","source":"A <xref href=\"System.Threading.WaitCallback\"></xref> multicast delegate that represents the method to run."}],"pos":[10434,10541],"yaml":true},{"content":"A <xref href=\"System.Guid\"></xref> that represents the workflow instance to add.","nodes":[{"pos":[0,80],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Guid\"&gt;&lt;/xref&gt;</ph> that represents the workflow instance to add.","source":"A <xref href=\"System.Guid\"></xref> that represents the workflow instance to add."}],"pos":[10613,10694],"yaml":true},{"content":"The <xref href=\"System.DateTime\"></xref> to begin running the workflow item.","nodes":[{"pos":[0,76],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.DateTime\"&gt;&lt;/xref&gt;</ph> to begin running the workflow item.","source":"The <xref href=\"System.DateTime\"></xref> to begin running the workflow item."}],"pos":[10759,10836],"yaml":true},{"content":"A <xref href=\"System.Guid\"></xref> that represents the scheduled timer.","nodes":[{"pos":[0,71],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Guid\"&gt;&lt;/xref&gt;</ph> that represents the scheduled timer.","source":"A <xref href=\"System.Guid\"></xref> that represents the scheduled timer."}],"pos":[10897,10969],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Workflow.Runtime.Hosting.WorkflowSchedulerService\n  commentId: T:System.Workflow.Runtime.Hosting.WorkflowSchedulerService\n  id: WorkflowSchedulerService\n  children:\n  - System.Workflow.Runtime.Hosting.WorkflowSchedulerService.#ctor\n  - System.Workflow.Runtime.Hosting.WorkflowSchedulerService.Cancel(System.Guid)\n  - System.Workflow.Runtime.Hosting.WorkflowSchedulerService.Schedule(System.Threading.WaitCallback,System.Guid)\n  - System.Workflow.Runtime.Hosting.WorkflowSchedulerService.Schedule(System.Threading.WaitCallback,System.Guid,System.DateTime,System.Guid)\n  langs:\n  - csharp\n  name: WorkflowSchedulerService\n  nameWithType: WorkflowSchedulerService\n  fullName: System.Workflow.Runtime.Hosting.WorkflowSchedulerService\n  type: Class\n  assemblies:\n  - System.Workflow.Runtime\n  namespace: System.Workflow.Runtime.Hosting\n  summary: Provides a mechanism to implement your own thread pool to execute the workflow and manage in-memory timer registration and events.\n  remarks: \"> [!NOTE]\\n>  [!INCLUDE[DeprecatedContent](~/includes/deprecatedcontent-md.md)]  \\n  \\n <xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService> is that base class for all classes that create threads that run workflow instances on the workflow runtime engine host. These include <xref:System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService> and <xref:System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService>.\"\n  syntax:\n    content: >-\n      [System.Obsolete(\"The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*\")]\n\n      public abstract class WorkflowSchedulerService : System.Workflow.Runtime.Hosting.WorkflowRuntimeService\n  inheritance:\n  - System.Object\n  - System.Workflow.Runtime.Hosting.WorkflowRuntimeService\n  derivedClasses:\n  - System.Workflow.Runtime.Hosting.DefaultWorkflowSchedulerService\n  - System.Workflow.Runtime.Hosting.ManualWorkflowSchedulerService\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  - System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStarted\n  - System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped\n  - System.Workflow.Runtime.Hosting.WorkflowRuntimeService.RaiseServicesExceptionNotHandledEvent(System.Exception,System.Guid)\n  - System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Runtime\n  - System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start\n  - System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State\n  - System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop\n  attributes:\n  - type: System.ObsoleteAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.Runtime.Hosting/WorkflowSchedulerService.xml\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Workflow.Runtime.Hosting.WorkflowSchedulerService.#ctor\n  commentId: M:System.Workflow.Runtime.Hosting.WorkflowSchedulerService.#ctor\n  id: '#ctor'\n  parent: System.Workflow.Runtime.Hosting.WorkflowSchedulerService\n  langs:\n  - csharp\n  name: WorkflowSchedulerService()\n  nameWithType: WorkflowSchedulerService.WorkflowSchedulerService()\n  fullName: WorkflowSchedulerService.WorkflowSchedulerService()\n  type: Constructor\n  assemblies:\n  - System.Workflow.Runtime\n  namespace: System.Workflow.Runtime.Hosting\n  summary: When implemented in a derived class, initializes a new instance of the <xref href=\"System.Workflow.Runtime.Hosting.WorkflowSchedulerService\"></xref> class.\n  remarks: ''\n  example:\n  - \"The following example demonstrates creating an instance of a <xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService> object (that inherits from <xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService>) and adding it to the runtime. This example is from the Nested Exception Handlers SDK sample, from the Program.cs file. For more information, see [Nested Exception Handlers Sample](http://msdn.microsoft.com/en-us/d1da0209-842b-41c8-9b7c-0cbaa1034265).  \\n  \\n [!code-csharp[WF_Samples#161](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets11.cs#161)]\\n [!code-vb[WF_Samples#161](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets11.vb#161)]\"\n  syntax:\n    content: protected WorkflowSchedulerService ();\n    parameters: []\n  overload: System.Workflow.Runtime.Hosting.WorkflowSchedulerService.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.Runtime.Hosting/WorkflowSchedulerService.xml\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Workflow.Runtime.Hosting.WorkflowSchedulerService.Cancel(System.Guid)\n  commentId: M:System.Workflow.Runtime.Hosting.WorkflowSchedulerService.Cancel(System.Guid)\n  id: Cancel(System.Guid)\n  parent: System.Workflow.Runtime.Hosting.WorkflowSchedulerService\n  langs:\n  - csharp\n  name: Cancel(Guid)\n  nameWithType: WorkflowSchedulerService.Cancel(Guid)\n  fullName: WorkflowSchedulerService.Cancel(Guid)\n  type: Method\n  assemblies:\n  - System.Workflow.Runtime\n  namespace: System.Workflow.Runtime.Hosting\n  summary: When overridden in a derived class, cancels the scheduled work item with the given <code>timerId</code>.\n  remarks: <xref:System.Workflow.Runtime.Hosting.WorkflowSchedulerService.Cancel%2A> removes from the pending work items queue a previous request to schedule a workflow instance.\n  syntax:\n    content: protected abstract void Cancel (Guid timerId);\n    parameters:\n    - id: timerId\n      type: System.Guid\n      description: The <xref href=\"System.Guid\"></xref> associated with the existing scheduled thread to cancel.\n  overload: System.Workflow.Runtime.Hosting.WorkflowSchedulerService.Cancel*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.Runtime.Hosting/WorkflowSchedulerService.xml\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Workflow.Runtime.Hosting.WorkflowSchedulerService.Schedule(System.Threading.WaitCallback,System.Guid)\n  commentId: M:System.Workflow.Runtime.Hosting.WorkflowSchedulerService.Schedule(System.Threading.WaitCallback,System.Guid)\n  id: Schedule(System.Threading.WaitCallback,System.Guid)\n  parent: System.Workflow.Runtime.Hosting.WorkflowSchedulerService\n  langs:\n  - csharp\n  name: Schedule(WaitCallback, Guid)\n  nameWithType: WorkflowSchedulerService.Schedule(WaitCallback, Guid)\n  fullName: WorkflowSchedulerService.Schedule(WaitCallback, Guid)\n  type: Method\n  assemblies:\n  - System.Workflow.Runtime\n  namespace: System.Workflow.Runtime.Hosting\n  summary: When overridden in a derived class, this method is called by the runtime to schedule a work item (callback) for a particular instance ID.\n  remarks: Use the <xref:System.Threading.WaitCallback> constructor to create your delegate method to run in the new thread.\n  syntax:\n    content: protected abstract void Schedule (System.Threading.WaitCallback callback, Guid workflowInstanceId);\n    parameters:\n    - id: callback\n      type: System.Threading.WaitCallback\n      description: A <xref href=\"System.Threading.WaitCallback\"></xref> multicast delegate that represents the method to run.\n    - id: workflowInstanceId\n      type: System.Guid\n      description: A <xref href=\"System.Guid\"></xref> that represents the workflow instance.\n  overload: System.Workflow.Runtime.Hosting.WorkflowSchedulerService.Schedule*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.Runtime.Hosting/WorkflowSchedulerService.xml\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Workflow.Runtime.Hosting.WorkflowSchedulerService.Schedule(System.Threading.WaitCallback,System.Guid,System.DateTime,System.Guid)\n  commentId: M:System.Workflow.Runtime.Hosting.WorkflowSchedulerService.Schedule(System.Threading.WaitCallback,System.Guid,System.DateTime,System.Guid)\n  id: Schedule(System.Threading.WaitCallback,System.Guid,System.DateTime,System.Guid)\n  parent: System.Workflow.Runtime.Hosting.WorkflowSchedulerService\n  langs:\n  - csharp\n  name: Schedule(WaitCallback, Guid, DateTime, Guid)\n  nameWithType: WorkflowSchedulerService.Schedule(WaitCallback, Guid, DateTime, Guid)\n  fullName: WorkflowSchedulerService.Schedule(WaitCallback, Guid, DateTime, Guid)\n  type: Method\n  assemblies:\n  - System.Workflow.Runtime\n  namespace: System.Workflow.Runtime.Hosting\n  summary: When overridden in a derived class, this method is called by the runtime to schedule a work item (callback) for a particular workflow instance to be done at the given time (<xref href=\"System.DateTime\"></xref>).\n  syntax:\n    content: protected abstract void Schedule (System.Threading.WaitCallback callback, Guid workflowInstanceId, DateTime whenUtc, Guid timerId);\n    parameters:\n    - id: callback\n      type: System.Threading.WaitCallback\n      description: A <xref href=\"System.Threading.WaitCallback\"></xref> multicast delegate that represents the method to run.\n    - id: workflowInstanceId\n      type: System.Guid\n      description: A <xref href=\"System.Guid\"></xref> that represents the workflow instance to add.\n    - id: whenUtc\n      type: System.DateTime\n      description: The <xref href=\"System.DateTime\"></xref> to begin running the workflow item.\n    - id: timerId\n      type: System.Guid\n      description: A <xref href=\"System.Guid\"></xref> that represents the scheduled timer.\n  overload: System.Workflow.Runtime.Hosting.WorkflowSchedulerService.Schedule*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.Runtime.Hosting/WorkflowSchedulerService.xml\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\nreferences:\n- uid: System.Workflow.Runtime.Hosting.WorkflowRuntimeService\n  parent: System.Workflow.Runtime.Hosting\n  isExternal: false\n  name: WorkflowRuntimeService\n  nameWithType: WorkflowRuntimeService\n  fullName: System.Workflow.Runtime.Hosting.WorkflowRuntimeService\n- uid: System.Workflow.Runtime.Hosting.WorkflowSchedulerService.#ctor\n  parent: System.Workflow.Runtime.Hosting.WorkflowSchedulerService\n  isExternal: false\n  name: WorkflowSchedulerService()\n  nameWithType: WorkflowSchedulerService.WorkflowSchedulerService()\n  fullName: WorkflowSchedulerService.WorkflowSchedulerService()\n- uid: System.Workflow.Runtime.Hosting.WorkflowSchedulerService.Cancel(System.Guid)\n  parent: System.Workflow.Runtime.Hosting.WorkflowSchedulerService\n  isExternal: false\n  name: Cancel(Guid)\n  nameWithType: WorkflowSchedulerService.Cancel(Guid)\n  fullName: WorkflowSchedulerService.Cancel(Guid)\n- uid: System.Guid\n  parent: System\n  isExternal: false\n  name: Guid\n  nameWithType: Guid\n  fullName: System.Guid\n- uid: System.Workflow.Runtime.Hosting.WorkflowSchedulerService.Schedule(System.Threading.WaitCallback,System.Guid)\n  parent: System.Workflow.Runtime.Hosting.WorkflowSchedulerService\n  isExternal: false\n  name: Schedule(WaitCallback, Guid)\n  nameWithType: WorkflowSchedulerService.Schedule(WaitCallback, Guid)\n  fullName: WorkflowSchedulerService.Schedule(WaitCallback, Guid)\n- uid: System.Threading.WaitCallback\n  parent: System.Threading\n  isExternal: false\n  name: WaitCallback\n  nameWithType: WaitCallback\n  fullName: System.Threading.WaitCallback\n- uid: System.Workflow.Runtime.Hosting.WorkflowSchedulerService.Schedule(System.Threading.WaitCallback,System.Guid,System.DateTime,System.Guid)\n  parent: System.Workflow.Runtime.Hosting.WorkflowSchedulerService\n  isExternal: false\n  name: Schedule(WaitCallback, Guid, DateTime, Guid)\n  nameWithType: WorkflowSchedulerService.Schedule(WaitCallback, Guid, DateTime, Guid)\n  fullName: WorkflowSchedulerService.Schedule(WaitCallback, Guid, DateTime, Guid)\n- uid: System.DateTime\n  parent: System\n  isExternal: false\n  name: DateTime\n  nameWithType: DateTime\n  fullName: System.DateTime\n- uid: System.Workflow.Runtime.Hosting.WorkflowSchedulerService.#ctor*\n  parent: System.Workflow.Runtime.Hosting.WorkflowSchedulerService\n  isExternal: false\n  name: WorkflowSchedulerService\n  nameWithType: WorkflowSchedulerService.WorkflowSchedulerService\n  fullName: WorkflowSchedulerService.WorkflowSchedulerService\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.Runtime.Hosting/WorkflowSchedulerService.xml\n- uid: System.Workflow.Runtime.Hosting.WorkflowSchedulerService.Cancel*\n  parent: System.Workflow.Runtime.Hosting.WorkflowSchedulerService\n  isExternal: false\n  name: Cancel\n  nameWithType: WorkflowSchedulerService.Cancel\n  fullName: WorkflowSchedulerService.Cancel\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.Runtime.Hosting/WorkflowSchedulerService.xml\n- uid: System.Workflow.Runtime.Hosting.WorkflowSchedulerService.Schedule*\n  parent: System.Workflow.Runtime.Hosting.WorkflowSchedulerService\n  isExternal: false\n  name: Schedule\n  nameWithType: WorkflowSchedulerService.Schedule\n  fullName: WorkflowSchedulerService.Schedule\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.Runtime.Hosting/WorkflowSchedulerService.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStarted\n  parent: System.Workflow.Runtime.Hosting.WorkflowRuntimeService\n  isExternal: false\n  name: OnStarted()\n  nameWithType: WorkflowRuntimeService.OnStarted()\n  fullName: WorkflowRuntimeService.OnStarted()\n- uid: System.Workflow.Runtime.Hosting.WorkflowRuntimeService.OnStopped\n  parent: System.Workflow.Runtime.Hosting.WorkflowRuntimeService\n  isExternal: false\n  name: OnStopped()\n  nameWithType: WorkflowRuntimeService.OnStopped()\n  fullName: WorkflowRuntimeService.OnStopped()\n- uid: System.Workflow.Runtime.Hosting.WorkflowRuntimeService.RaiseServicesExceptionNotHandledEvent(System.Exception,System.Guid)\n  parent: System.Workflow.Runtime.Hosting.WorkflowRuntimeService\n  isExternal: false\n  name: RaiseServicesExceptionNotHandledEvent(Exception, Guid)\n  nameWithType: WorkflowRuntimeService.RaiseServicesExceptionNotHandledEvent(Exception, Guid)\n  fullName: WorkflowRuntimeService.RaiseServicesExceptionNotHandledEvent(Exception, Guid)\n- uid: System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Runtime\n  parent: System.Workflow.Runtime.Hosting.WorkflowRuntimeService\n  isExternal: false\n  name: Runtime\n  nameWithType: WorkflowRuntimeService.Runtime\n  fullName: WorkflowRuntimeService.Runtime\n- uid: System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Start\n  parent: System.Workflow.Runtime.Hosting.WorkflowRuntimeService\n  isExternal: false\n  name: Start()\n  nameWithType: WorkflowRuntimeService.Start()\n  fullName: WorkflowRuntimeService.Start()\n- uid: System.Workflow.Runtime.Hosting.WorkflowRuntimeService.State\n  parent: System.Workflow.Runtime.Hosting.WorkflowRuntimeService\n  isExternal: false\n  name: State\n  nameWithType: WorkflowRuntimeService.State\n  fullName: WorkflowRuntimeService.State\n- uid: System.Workflow.Runtime.Hosting.WorkflowRuntimeService.Stop\n  parent: System.Workflow.Runtime.Hosting.WorkflowRuntimeService\n  isExternal: false\n  name: Stop()\n  nameWithType: WorkflowRuntimeService.Stop()\n  fullName: WorkflowRuntimeService.Stop()\n"}