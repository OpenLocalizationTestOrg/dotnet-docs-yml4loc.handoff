{"nodes":[{"content":"Determines if and how a member is displayed in the debugger variable windows. This class cannot be inherited.","nodes":[{"pos":[0,109],"content":"Determines if and how a member is displayed in the debugger variable windows. This class cannot be inherited.","nodes":[{"content":"Determines if and how a member is displayed in the debugger variable windows. This class cannot be inherited.","pos":[0,109],"nodes":[{"content":"Determines if and how a member is displayed in the debugger variable windows.","pos":[0,77]},{"content":"This class cannot be inherited.","pos":[78,109]}]}]}],"pos":[635,745],"yaml":true},{"content":"> [!NOTE]\n>  In .NET Framework version 2.0, the <xref:System.Diagnostics.DebuggerBrowsableAttribute> class is not supported by Visual Basic. Using C#, you can add expansions for custom data using the <xref:System.Diagnostics.DebuggerTypeProxyAttribute>, <xref:System.Diagnostics.DebuggerDisplayAttribute>, and <xref:System.Diagnostics.DebuggerBrowsableAttribute>. Visual Basic supports the <xref:System.Diagnostics.DebuggerDisplayAttribute> attribute but not the <xref:System.Diagnostics.DebuggerBrowsableAttribute> attribute.  \n  \n This attribute can be applied only as a single instance to properties and fields. It cannot be applied to assemblies.  \n  \n The constructor for this attribute takes one of the <xref:System.Diagnostics.DebuggerBrowsableState> enumeration values, which specifies one of the following states:  \n  \n-   <xref:System.Diagnostics.DebuggerBrowsableState.Never> indicates that the member is not displayed in the data window.  For example, using this value for the <xref:System.Diagnostics.DebuggerBrowsableAttribute> on a field removes the field from the hierarchy; the field is not displayed when you expand the enclosing type by clicking the plus sign (+) for the type instance.  \n  \n-   <xref:System.Diagnostics.DebuggerBrowsableState.Collapsed> indicates that the member is displayed but not expanded by default.  This is the default behavior.  \n  \n-   <xref:System.Diagnostics.DebuggerBrowsableState.RootHidden> indicates that the member itself is not shown, but its constituent objects are displayed if it is an array or collection.  \n  \n For an example of the use of this attribute and the <xref:System.Diagnostics.DebuggerDisplayAttribute> and <xref:System.Diagnostics.DebuggerTypeProxyAttribute> attributes, see the example provided for the <xref:System.Diagnostics.DebuggerDisplayAttribute> class.","nodes":[{"pos":[2,526],"content":"[!NOTE]\n In .NET Framework version 2.0, the <xref:System.Diagnostics.DebuggerBrowsableAttribute> class is not supported by Visual Basic. Using C#, you can add expansions for custom data using the <xref:System.Diagnostics.DebuggerTypeProxyAttribute>, <xref:System.Diagnostics.DebuggerDisplayAttribute>, and <xref:System.Diagnostics.DebuggerBrowsableAttribute>. Visual Basic supports the <xref:System.Diagnostics.DebuggerDisplayAttribute> attribute but not the <xref:System.Diagnostics.DebuggerBrowsableAttribute> attribute.","leadings":["","> "],"nodes":[{"content":" In .NET Framework version 2.0, the <xref:System.Diagnostics.DebuggerBrowsableAttribute> class is not supported by Visual Basic. Using C#, you can add expansions for custom data using the <xref:System.Diagnostics.DebuggerTypeProxyAttribute>, <xref:System.Diagnostics.DebuggerDisplayAttribute>, and <xref:System.Diagnostics.DebuggerBrowsableAttribute>. Visual Basic supports the <xref:System.Diagnostics.DebuggerDisplayAttribute> attribute but not the <xref:System.Diagnostics.DebuggerBrowsableAttribute> attribute.","pos":[8,522],"nodes":[{"content":"In .NET Framework version 2.0, the <ph id=\"ph1\">&lt;xref:System.Diagnostics.DebuggerBrowsableAttribute&gt;</ph> class is not supported by Visual Basic.","pos":[1,128],"source":" In .NET Framework version 2.0, the <xref:System.Diagnostics.DebuggerBrowsableAttribute> class is not supported by Visual Basic."},{"content":"Using C#, you can add expansions for custom data using the <ph id=\"ph1\">&lt;xref:System.Diagnostics.DebuggerTypeProxyAttribute&gt;</ph>, <ph id=\"ph2\">&lt;xref:System.Diagnostics.DebuggerDisplayAttribute&gt;</ph>, and <ph id=\"ph3\">&lt;xref:System.Diagnostics.DebuggerBrowsableAttribute&gt;</ph>.","pos":[129,351],"source":" Using C#, you can add expansions for custom data using the <xref:System.Diagnostics.DebuggerTypeProxyAttribute>, <xref:System.Diagnostics.DebuggerDisplayAttribute>, and <xref:System.Diagnostics.DebuggerBrowsableAttribute>."},{"content":"Visual Basic supports the <ph id=\"ph1\">&lt;xref:System.Diagnostics.DebuggerDisplayAttribute&gt;</ph> attribute but not the <ph id=\"ph2\">&lt;xref:System.Diagnostics.DebuggerBrowsableAttribute&gt;</ph> attribute.","pos":[352,514],"source":" Visual Basic supports the <xref:System.Diagnostics.DebuggerDisplayAttribute> attribute but not the <xref:System.Diagnostics.DebuggerBrowsableAttribute> attribute."}]}]},{"pos":[533,650],"content":"This attribute can be applied only as a single instance to properties and fields. It cannot be applied to assemblies.","nodes":[{"content":"This attribute can be applied only as a single instance to properties and fields. It cannot be applied to assemblies.","pos":[0,117],"nodes":[{"content":"This attribute can be applied only as a single instance to properties and fields.","pos":[0,81]},{"content":"It cannot be applied to assemblies.","pos":[82,117]}]}]},{"pos":[657,822],"content":"The constructor for this attribute takes one of the <xref:System.Diagnostics.DebuggerBrowsableState> enumeration values, which specifies one of the following states:","nodes":[{"content":"The constructor for this attribute takes one of the <ph id=\"ph1\">&lt;xref:System.Diagnostics.DebuggerBrowsableState&gt;</ph> enumeration values, which specifies one of the following states:","pos":[0,165],"source":"The constructor for this attribute takes one of the <xref:System.Diagnostics.DebuggerBrowsableState> enumeration values, which specifies one of the following states:"}]},{"pos":[832,1205],"content":"<xref:System.Diagnostics.DebuggerBrowsableState.Never> indicates that the member is not displayed in the data window.  For example, using this value for the <xref:System.Diagnostics.DebuggerBrowsableAttribute> on a field removes the field from the hierarchy; the field is not displayed when you expand the enclosing type by clicking the plus sign (+) for the type instance.","nodes":[{"content":"<xref:System.Diagnostics.DebuggerBrowsableState.Never> indicates that the member is not displayed in the data window.  For example, using this value for the <xref:System.Diagnostics.DebuggerBrowsableAttribute> on a field removes the field from the hierarchy; the field is not displayed when you expand the enclosing type by clicking the plus sign (+) for the type instance.","pos":[0,373],"nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Diagnostics.DebuggerBrowsableState.Never&gt;</ph> indicates that the member is not displayed in the data window.","pos":[0,117],"source":"<xref:System.Diagnostics.DebuggerBrowsableState.Never> indicates that the member is not displayed in the data window."},{"content":"For example, using this value for the <ph id=\"ph1\">&lt;xref:System.Diagnostics.DebuggerBrowsableAttribute&gt;</ph> on a field removes the field from the hierarchy; the field is not displayed when you expand the enclosing type by clicking the plus sign (+) for the type instance.","pos":[119,373],"source":"  For example, using this value for the <xref:System.Diagnostics.DebuggerBrowsableAttribute> on a field removes the field from the hierarchy; the field is not displayed when you expand the enclosing type by clicking the plus sign (+) for the type instance."}]}]},{"pos":[1215,1372],"content":"<xref:System.Diagnostics.DebuggerBrowsableState.Collapsed> indicates that the member is displayed but not expanded by default.  This is the default behavior.","nodes":[{"content":"<xref:System.Diagnostics.DebuggerBrowsableState.Collapsed> indicates that the member is displayed but not expanded by default.  This is the default behavior.","pos":[0,157],"nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Diagnostics.DebuggerBrowsableState.Collapsed&gt;</ph> indicates that the member is displayed but not expanded by default.","pos":[0,126],"source":"<xref:System.Diagnostics.DebuggerBrowsableState.Collapsed> indicates that the member is displayed but not expanded by default."},{"content":"This is the default behavior.","pos":[128,157]}]}]},{"pos":[1382,1563],"content":"<xref:System.Diagnostics.DebuggerBrowsableState.RootHidden> indicates that the member itself is not shown, but its constituent objects are displayed if it is an array or collection.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Diagnostics.DebuggerBrowsableState.RootHidden&gt;</ph> indicates that the member itself is not shown, but its constituent objects are displayed if it is an array or collection.","pos":[0,181],"source":"<xref:System.Diagnostics.DebuggerBrowsableState.RootHidden> indicates that the member itself is not shown, but its constituent objects are displayed if it is an array or collection."}]},{"pos":[1570,1832],"content":"For an example of the use of this attribute and the <xref:System.Diagnostics.DebuggerDisplayAttribute> and <xref:System.Diagnostics.DebuggerTypeProxyAttribute> attributes, see the example provided for the <xref:System.Diagnostics.DebuggerDisplayAttribute> class.","nodes":[{"content":"For an example of the use of this attribute and the <ph id=\"ph1\">&lt;xref:System.Diagnostics.DebuggerDisplayAttribute&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Diagnostics.DebuggerTypeProxyAttribute&gt;</ph> attributes, see the example provided for the <ph id=\"ph3\">&lt;xref:System.Diagnostics.DebuggerDisplayAttribute&gt;</ph> class.","pos":[0,262],"source":"For an example of the use of this attribute and the <xref:System.Diagnostics.DebuggerDisplayAttribute> and <xref:System.Diagnostics.DebuggerTypeProxyAttribute> attributes, see the example provided for the <xref:System.Diagnostics.DebuggerDisplayAttribute> class."}]}],"pos":[756,2604],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.Diagnostics.DebuggerBrowsableAttribute\"></xref> class.","nodes":[{"pos":[0,107],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Diagnostics.DebuggerBrowsableAttribute\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.Diagnostics.DebuggerBrowsableAttribute\"></xref> class."}],"pos":[8463,8571],"yaml":true},{"content":"This attribute can be applied only to properties and fields.","nodes":[{"pos":[0,60],"content":"This attribute can be applied only to properties and fields.","nodes":[{"content":"This attribute can be applied only to properties and fields.","pos":[0,60]}]}],"pos":[8582,8643],"yaml":true,"extradata":"MT"},{"content":"One of the <xref href=\"System.Diagnostics.DebuggerBrowsableState\"></xref> values that specifies how to display the member.","nodes":[{"pos":[0,122],"content":"One of the <ph id=\"ph1\">&lt;xref href=\"System.Diagnostics.DebuggerBrowsableState\"&gt;&lt;/xref&gt;</ph> values that specifies how to display the member.","source":"One of the <xref href=\"System.Diagnostics.DebuggerBrowsableState\"></xref> values that specifies how to display the member."}],"pos":[9788,9911],"yaml":true},{"content":"<code>state</code> is not one of the <xref href=\"System.Diagnostics.DebuggerBrowsableState\"></xref> values.","nodes":[{"pos":[0,107],"content":"<ph id=\"ph1\">&lt;code&gt;state&lt;/code&gt;</ph> is not one of the <ph id=\"ph2\">&lt;xref href=\"System.Diagnostics.DebuggerBrowsableState\"&gt;&lt;/xref&gt;</ph> values.","source":"<code>state</code> is not one of the <xref href=\"System.Diagnostics.DebuggerBrowsableState\"></xref> values."}],"pos":[10104,10212],"yaml":true},{"content":"Gets the display state for the attribute.","nodes":[{"pos":[0,41],"content":"Gets the display state for the attribute.","nodes":[{"content":"Gets the display state for the attribute.","pos":[0,41]}]}],"pos":[11709,11751],"yaml":true},{"content":"The <xref:System.Diagnostics.DebuggerBrowsableAttribute.%23ctor%2A> constructor uses the value of the `state` parameter to set this value.","nodes":[{"pos":[0,138],"content":"The <ph id=\"ph1\">&lt;xref:System.Diagnostics.DebuggerBrowsableAttribute.%23ctor%2A&gt;</ph> constructor uses the value of the <ph id=\"ph2\">`state`</ph> parameter to set this value.","source":"The <xref:System.Diagnostics.DebuggerBrowsableAttribute.%23ctor%2A> constructor uses the value of the `state` parameter to set this value."}],"pos":[11762,11901],"yaml":true,"extradata":"MT"},{"content":"One of the <xref href=\"System.Diagnostics.DebuggerBrowsableState\"></xref> values.","nodes":[{"pos":[0,81],"content":"One of the <ph id=\"ph1\">&lt;xref href=\"System.Diagnostics.DebuggerBrowsableState\"&gt;&lt;/xref&gt;</ph> values.","source":"One of the <xref href=\"System.Diagnostics.DebuggerBrowsableState\"></xref> values."}],"pos":[12073,12155],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Diagnostics.DebuggerBrowsableAttribute\n  commentId: T:System.Diagnostics.DebuggerBrowsableAttribute\n  id: DebuggerBrowsableAttribute\n  children:\n  - System.Diagnostics.DebuggerBrowsableAttribute.#ctor(System.Diagnostics.DebuggerBrowsableState)\n  - System.Diagnostics.DebuggerBrowsableAttribute.State\n  langs:\n  - csharp\n  name: DebuggerBrowsableAttribute\n  nameWithType: DebuggerBrowsableAttribute\n  fullName: System.Diagnostics.DebuggerBrowsableAttribute\n  type: Class\n  assemblies:\n  - System.Diagnostics.Debug\n  - mscorlib\n  - netstandard\n  namespace: System.Diagnostics\n  summary: Determines if and how a member is displayed in the debugger variable windows. This class cannot be inherited.\n  remarks: \"> [!NOTE]\\n>  In .NET Framework version 2.0, the <xref:System.Diagnostics.DebuggerBrowsableAttribute> class is not supported by Visual Basic. Using C#, you can add expansions for custom data using the <xref:System.Diagnostics.DebuggerTypeProxyAttribute>, <xref:System.Diagnostics.DebuggerDisplayAttribute>, and <xref:System.Diagnostics.DebuggerBrowsableAttribute>. Visual Basic supports the <xref:System.Diagnostics.DebuggerDisplayAttribute> attribute but not the <xref:System.Diagnostics.DebuggerBrowsableAttribute> attribute.  \\n  \\n This attribute can be applied only as a single instance to properties and fields. It cannot be applied to assemblies.  \\n  \\n The constructor for this attribute takes one of the <xref:System.Diagnostics.DebuggerBrowsableState> enumeration values, which specifies one of the following states:  \\n  \\n-   <xref:System.Diagnostics.DebuggerBrowsableState.Never> indicates that the member is not displayed in the data window.  For example, using this value for the <xref:System.Diagnostics.DebuggerBrowsableAttribute> on a field removes the field from the hierarchy; the field is not displayed when you expand the enclosing type by clicking the plus sign (+) for the type instance.  \\n  \\n-   <xref:System.Diagnostics.DebuggerBrowsableState.Collapsed> indicates that the member is displayed but not expanded by default.  This is the default behavior.  \\n  \\n-   <xref:System.Diagnostics.DebuggerBrowsableState.RootHidden> indicates that the member itself is not shown, but its constituent objects are displayed if it is an array or collection.  \\n  \\n For an example of the use of this attribute and the <xref:System.Diagnostics.DebuggerDisplayAttribute> and <xref:System.Diagnostics.DebuggerTypeProxyAttribute> attributes, see the example provided for the <xref:System.Diagnostics.DebuggerDisplayAttribute> class.\"\n  syntax:\n    content: >-\n      [System.AttributeUsage(System.AttributeTargets.Property | System.AttributeTargets.Field, AllowMultiple=false)]\n\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public sealed class DebuggerBrowsableAttribute : Attribute\n  inheritance:\n  - System.Object\n  - System.Attribute\n  implements: []\n  inheritedMembers:\n  - System.Attribute.Equals(System.Object)\n  - System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type)\n  - System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)\n  - System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type)\n  - System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type)\n  - System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo)\n  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)\n  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Module)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo)\n  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type)\n  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  - System.Attribute.GetHashCode\n  - System.Attribute.IsDefaultAttribute\n  - System.Attribute.IsDefined(System.Reflection.Assembly,System.Type)\n  - System.Attribute.IsDefined(System.Reflection.Assembly,System.Type,System.Boolean)\n  - System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type)\n  - System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  - System.Attribute.IsDefined(System.Reflection.Module,System.Type)\n  - System.Attribute.IsDefined(System.Reflection.Module,System.Type,System.Boolean)\n  - System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type)\n  - System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  - System.Attribute.Match(System.Object)\n  - System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)\n  - System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)\n  - System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)\n  - System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)\n  - System.Attribute.TypeId\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  attributes:\n  - type: System.AttributeUsageAttribute\n  - type: System.Runtime.InteropServices.ComVisibleAttribute\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/DebuggerBrowsableAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Diagnostics.DebuggerBrowsableAttribute.#ctor(System.Diagnostics.DebuggerBrowsableState)\n  commentId: M:System.Diagnostics.DebuggerBrowsableAttribute.#ctor(System.Diagnostics.DebuggerBrowsableState)\n  id: '#ctor(System.Diagnostics.DebuggerBrowsableState)'\n  parent: System.Diagnostics.DebuggerBrowsableAttribute\n  langs:\n  - csharp\n  name: DebuggerBrowsableAttribute(DebuggerBrowsableState)\n  nameWithType: DebuggerBrowsableAttribute.DebuggerBrowsableAttribute(DebuggerBrowsableState)\n  fullName: DebuggerBrowsableAttribute.DebuggerBrowsableAttribute(DebuggerBrowsableState)\n  type: Constructor\n  assemblies:\n  - System.Diagnostics.Debug\n  - mscorlib\n  - netstandard\n  namespace: System.Diagnostics\n  summary: Initializes a new instance of the <xref href=\"System.Diagnostics.DebuggerBrowsableAttribute\"></xref> class.\n  remarks: This attribute can be applied only to properties and fields.\n  example:\n  - \"The following code example shows the use of a <xref:System.Diagnostics.DebuggerBrowsableAttribute> attribute to instruct the debugger to not display the root (property name) of the `Keys` property, but to display the elements of the array that `Keys` gets. This code example is part of a larger example provided for the <xref:System.Diagnostics.DebuggerDisplayAttribute> class.  \\n  \\n [!code-cpp[System.Diagnostics.DebuggerBrowsableAttribute#6](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Diagnostics.DebuggerBrowsableAttribute/cpp/program.cpp#6)]\\n [!code-csharp[System.Diagnostics.DebuggerBrowsableAttribute#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Diagnostics.DebuggerBrowsableAttribute/CS/program.cs#6)]\\n [!code-vb[System.Diagnostics.DebuggerBrowsableAttribute#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Diagnostics.DebuggerBrowsableAttribute/VB/module1.vb#6)]\"\n  syntax:\n    content: public DebuggerBrowsableAttribute (System.Diagnostics.DebuggerBrowsableState state);\n    parameters:\n    - id: state\n      type: System.Diagnostics.DebuggerBrowsableState\n      description: One of the <xref href=\"System.Diagnostics.DebuggerBrowsableState\"></xref> values that specifies how to display the member.\n  overload: System.Diagnostics.DebuggerBrowsableAttribute.#ctor*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: <code>state</code> is not one of the <xref href=\"System.Diagnostics.DebuggerBrowsableState\"></xref> values.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/DebuggerBrowsableAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Diagnostics.DebuggerBrowsableAttribute.State\n  commentId: P:System.Diagnostics.DebuggerBrowsableAttribute.State\n  id: State\n  parent: System.Diagnostics.DebuggerBrowsableAttribute\n  langs:\n  - csharp\n  name: State\n  nameWithType: DebuggerBrowsableAttribute.State\n  fullName: DebuggerBrowsableAttribute.State\n  type: Property\n  assemblies:\n  - System.Diagnostics.Debug\n  - mscorlib\n  - netstandard\n  namespace: System.Diagnostics\n  summary: Gets the display state for the attribute.\n  remarks: The <xref:System.Diagnostics.DebuggerBrowsableAttribute.%23ctor%2A> constructor uses the value of the `state` parameter to set this value.\n  syntax:\n    content: public System.Diagnostics.DebuggerBrowsableState State { get; }\n    return:\n      type: System.Diagnostics.DebuggerBrowsableState\n      description: One of the <xref href=\"System.Diagnostics.DebuggerBrowsableState\"></xref> values.\n  overload: System.Diagnostics.DebuggerBrowsableAttribute.State*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/DebuggerBrowsableAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\nreferences:\n- uid: System.Attribute\n  parent: System\n  isExternal: false\n  name: Attribute\n  nameWithType: Attribute\n  fullName: System.Attribute\n- uid: System.ArgumentOutOfRangeException\n  parent: System\n  isExternal: false\n  name: ArgumentOutOfRangeException\n  nameWithType: ArgumentOutOfRangeException\n  fullName: System.ArgumentOutOfRangeException\n- uid: System.Diagnostics.DebuggerBrowsableAttribute.#ctor(System.Diagnostics.DebuggerBrowsableState)\n  parent: System.Diagnostics.DebuggerBrowsableAttribute\n  isExternal: false\n  name: DebuggerBrowsableAttribute(DebuggerBrowsableState)\n  nameWithType: DebuggerBrowsableAttribute.DebuggerBrowsableAttribute(DebuggerBrowsableState)\n  fullName: DebuggerBrowsableAttribute.DebuggerBrowsableAttribute(DebuggerBrowsableState)\n- uid: System.Diagnostics.DebuggerBrowsableState\n  parent: System.Diagnostics\n  isExternal: false\n  name: DebuggerBrowsableState\n  nameWithType: DebuggerBrowsableState\n  fullName: System.Diagnostics.DebuggerBrowsableState\n- uid: System.Diagnostics.DebuggerBrowsableAttribute.State\n  parent: System.Diagnostics.DebuggerBrowsableAttribute\n  isExternal: false\n  name: State\n  nameWithType: DebuggerBrowsableAttribute.State\n  fullName: DebuggerBrowsableAttribute.State\n- uid: System.Diagnostics.DebuggerBrowsableAttribute.#ctor*\n  parent: System.Diagnostics.DebuggerBrowsableAttribute\n  isExternal: false\n  name: DebuggerBrowsableAttribute\n  nameWithType: DebuggerBrowsableAttribute.DebuggerBrowsableAttribute\n  fullName: DebuggerBrowsableAttribute.DebuggerBrowsableAttribute\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/DebuggerBrowsableAttribute.xml\n- uid: System.Diagnostics.DebuggerBrowsableAttribute.State*\n  parent: System.Diagnostics.DebuggerBrowsableAttribute\n  isExternal: false\n  name: State\n  nameWithType: DebuggerBrowsableAttribute.State\n  fullName: DebuggerBrowsableAttribute.State\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/DebuggerBrowsableAttribute.xml\n- uid: System.Attribute.Equals(System.Object)\n  parent: System.Attribute\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Attribute.Equals(Object)\n  fullName: Attribute.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Attribute.GetHashCode\n  parent: System.Attribute\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Attribute.GetHashCode()\n  fullName: Attribute.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(ParameterInfo, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttribute(ParameterInfo, Type, Boolean)\n  fullName: Attribute.GetCustomAttribute(ParameterInfo, Type, Boolean)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(MemberInfo, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttribute(MemberInfo, Type, Boolean)\n  fullName: Attribute.GetCustomAttribute(MemberInfo, Type, Boolean)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(Assembly, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttribute(Assembly, Type, Boolean)\n  fullName: Attribute.GetCustomAttribute(Assembly, Type, Boolean)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(Module, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttribute(Module, Type, Boolean)\n  fullName: Attribute.GetCustomAttribute(Module, Type, Boolean)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(Module, Type)\n  nameWithType: Attribute.GetCustomAttribute(Module, Type)\n  fullName: Attribute.GetCustomAttribute(Module, Type)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(MemberInfo, Type)\n  nameWithType: Attribute.GetCustomAttribute(MemberInfo, Type)\n  fullName: Attribute.GetCustomAttribute(MemberInfo, Type)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(Assembly, Type)\n  nameWithType: Attribute.GetCustomAttribute(Assembly, Type)\n  fullName: Attribute.GetCustomAttribute(Assembly, Type)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(ParameterInfo, Type)\n  nameWithType: Attribute.GetCustomAttribute(ParameterInfo, Type)\n  fullName: Attribute.GetCustomAttribute(ParameterInfo, Type)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Module, Type)\n  nameWithType: Attribute.GetCustomAttributes(Module, Type)\n  fullName: Attribute.GetCustomAttributes(Module, Type)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(ParameterInfo, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(ParameterInfo, Type, Boolean)\n  fullName: Attribute.GetCustomAttributes(ParameterInfo, Type, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Module, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(Module, Type, Boolean)\n  fullName: Attribute.GetCustomAttributes(Module, Type, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(MemberInfo, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(MemberInfo, Type, Boolean)\n  fullName: Attribute.GetCustomAttributes(MemberInfo, Type, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Assembly, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(Assembly, Type, Boolean)\n  fullName: Attribute.GetCustomAttributes(Assembly, Type, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(ParameterInfo, Type)\n  nameWithType: Attribute.GetCustomAttributes(ParameterInfo, Type)\n  fullName: Attribute.GetCustomAttributes(ParameterInfo, Type)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Module, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(Module, Boolean)\n  fullName: Attribute.GetCustomAttributes(Module, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(ParameterInfo, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(ParameterInfo, Boolean)\n  fullName: Attribute.GetCustomAttributes(ParameterInfo, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(MemberInfo, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(MemberInfo, Boolean)\n  fullName: Attribute.GetCustomAttributes(MemberInfo, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Assembly, Type)\n  nameWithType: Attribute.GetCustomAttributes(Assembly, Type)\n  fullName: Attribute.GetCustomAttributes(Assembly, Type)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Assembly, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(Assembly, Boolean)\n  fullName: Attribute.GetCustomAttributes(Assembly, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(ParameterInfo)\n  nameWithType: Attribute.GetCustomAttributes(ParameterInfo)\n  fullName: Attribute.GetCustomAttributes(ParameterInfo)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Module)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Module)\n  nameWithType: Attribute.GetCustomAttributes(Module)\n  fullName: Attribute.GetCustomAttributes(Module)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(MemberInfo)\n  nameWithType: Attribute.GetCustomAttributes(MemberInfo)\n  fullName: Attribute.GetCustomAttributes(MemberInfo)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Assembly)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Assembly)\n  nameWithType: Attribute.GetCustomAttributes(Assembly)\n  fullName: Attribute.GetCustomAttributes(Assembly)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(MemberInfo, Type)\n  nameWithType: Attribute.GetCustomAttributes(MemberInfo, Type)\n  fullName: Attribute.GetCustomAttributes(MemberInfo, Type)\n- uid: System.Attribute.IsDefaultAttribute\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefaultAttribute()\n  nameWithType: Attribute.IsDefaultAttribute()\n  fullName: Attribute.IsDefaultAttribute()\n- uid: System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(ParameterInfo, Type, Boolean)\n  nameWithType: Attribute.IsDefined(ParameterInfo, Type, Boolean)\n  fullName: Attribute.IsDefined(ParameterInfo, Type, Boolean)\n- uid: System.Attribute.IsDefined(System.Reflection.Module,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(Module, Type, Boolean)\n  nameWithType: Attribute.IsDefined(Module, Type, Boolean)\n  fullName: Attribute.IsDefined(Module, Type, Boolean)\n- uid: System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(MemberInfo, Type, Boolean)\n  nameWithType: Attribute.IsDefined(MemberInfo, Type, Boolean)\n  fullName: Attribute.IsDefined(MemberInfo, Type, Boolean)\n- uid: System.Attribute.IsDefined(System.Reflection.Assembly,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(Assembly, Type, Boolean)\n  nameWithType: Attribute.IsDefined(Assembly, Type, Boolean)\n  fullName: Attribute.IsDefined(Assembly, Type, Boolean)\n- uid: System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(MemberInfo, Type)\n  nameWithType: Attribute.IsDefined(MemberInfo, Type)\n  fullName: Attribute.IsDefined(MemberInfo, Type)\n- uid: System.Attribute.IsDefined(System.Reflection.Module,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(Module, Type)\n  nameWithType: Attribute.IsDefined(Module, Type)\n  fullName: Attribute.IsDefined(Module, Type)\n- uid: System.Attribute.IsDefined(System.Reflection.Assembly,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(Assembly, Type)\n  nameWithType: Attribute.IsDefined(Assembly, Type)\n  fullName: Attribute.IsDefined(Assembly, Type)\n- uid: System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(ParameterInfo, Type)\n  nameWithType: Attribute.IsDefined(ParameterInfo, Type)\n  fullName: Attribute.IsDefined(ParameterInfo, Type)\n- uid: System.Attribute.Match(System.Object)\n  parent: System.Attribute\n  isExternal: false\n  name: Match(Object)\n  nameWithType: Attribute.Match(Object)\n  fullName: Attribute.Match(Object)\n- uid: System.Attribute.TypeId\n  parent: System.Attribute\n  isExternal: false\n  name: TypeId\n  nameWithType: Attribute.TypeId\n  fullName: Attribute.TypeId\n- uid: System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)\n  parent: System.Attribute\n  isExternal: false\n  name: _Attribute.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)\n  nameWithType: Attribute._Attribute.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)\n  fullName: Attribute._Attribute.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)\n- uid: System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)\n  parent: System.Attribute\n  isExternal: false\n  name: _Attribute.GetTypeInfo(UInt32, UInt32, IntPtr)\n  nameWithType: Attribute._Attribute.GetTypeInfo(UInt32, UInt32, IntPtr)\n  fullName: Attribute._Attribute.GetTypeInfo(UInt32, UInt32, IntPtr)\n- uid: System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)\n  parent: System.Attribute\n  isExternal: false\n  name: _Attribute.GetTypeInfoCount(UInt32)\n  nameWithType: Attribute._Attribute.GetTypeInfoCount(UInt32)\n  fullName: Attribute._Attribute.GetTypeInfoCount(UInt32)\n- uid: System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)\n  parent: System.Attribute\n  isExternal: false\n  name: _Attribute.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)\n  nameWithType: Attribute._Attribute.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)\n  fullName: Attribute._Attribute.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)\n"}