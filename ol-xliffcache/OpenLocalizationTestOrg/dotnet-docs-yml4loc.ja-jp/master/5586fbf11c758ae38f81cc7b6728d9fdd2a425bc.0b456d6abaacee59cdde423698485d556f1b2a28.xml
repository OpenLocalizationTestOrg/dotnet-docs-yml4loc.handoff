{"nodes":[{"content":"Provides information about a network interface's multicast address.","nodes":[{"pos":[0,67],"content":"Provides information about a network interface's multicast address.","nodes":[{"content":"Provides information about a network interface's multicast address.","pos":[0,67]}]}],"pos":[1120,1188],"yaml":true},{"content":"You do not create instances of this class; instances are returned in the array returned by the <xref:System.Net.NetworkInformation.IPInterfaceProperties.MulticastAddresses%2A> property.","nodes":[{"pos":[0,185],"content":"You do not create instances of this class; instances are returned in the array returned by the <xref:System.Net.NetworkInformation.IPInterfaceProperties.MulticastAddresses%2A> property.","nodes":[{"content":"You do not create instances of this class; instances are returned in the array returned by the <ph id=\"ph1\">&lt;xref:System.Net.NetworkInformation.IPInterfaceProperties.MulticastAddresses%2A&gt;</ph> property.","pos":[0,185],"source":"You do not create instances of this class; instances are returned in the array returned by the <xref:System.Net.NetworkInformation.IPInterfaceProperties.MulticastAddresses%2A> property."}]}],"pos":[1199,1385],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.Net.NetworkInformation.MulticastIPAddressInformation\"></xref> class.","nodes":[{"pos":[0,121],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Net.NetworkInformation.MulticastIPAddressInformation\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.Net.NetworkInformation.MulticastIPAddressInformation\"></xref> class."}],"pos":[3472,3594],"yaml":true},{"content":"This constructor can be called only by classes that derive from the <xref:System.Net.NetworkInformation.MulticastIPAddressInformation> class.","nodes":[{"pos":[0,141],"content":"This constructor can be called only by classes that derive from the <xref:System.Net.NetworkInformation.MulticastIPAddressInformation> class.","nodes":[{"content":"This constructor can be called only by classes that derive from the <ph id=\"ph1\">&lt;xref:System.Net.NetworkInformation.MulticastIPAddressInformation&gt;</ph> class.","pos":[0,141],"source":"This constructor can be called only by classes that derive from the <xref:System.Net.NetworkInformation.MulticastIPAddressInformation> class."}]}],"pos":[3605,3747],"yaml":true,"extradata":"MT"},{"content":"Gets the number of seconds remaining during which this address is the preferred address.","nodes":[{"pos":[0,88],"content":"Gets the number of seconds remaining during which this address is the preferred address.","nodes":[{"content":"Gets the number of seconds remaining during which this address is the preferred address.","pos":[0,88]}]}],"pos":[5319,5408],"yaml":true},{"content":"Use the value returned by this property to determine how long the preferred address remains valid. Whenever possible, applications should use a preferred address. Use <xref:System.Net.NetworkInformation.MulticastIPAddressInformation.DuplicateAddressDetectionState%2A> to determine the preferred address.","nodes":[{"pos":[0,303],"content":"Use the value returned by this property to determine how long the preferred address remains valid. Whenever possible, applications should use a preferred address. Use <xref:System.Net.NetworkInformation.MulticastIPAddressInformation.DuplicateAddressDetectionState%2A> to determine the preferred address.","nodes":[{"content":"Use the value returned by this property to determine how long the preferred address remains valid. Whenever possible, applications should use a preferred address. Use <xref:System.Net.NetworkInformation.MulticastIPAddressInformation.DuplicateAddressDetectionState%2A> to determine the preferred address.","pos":[0,303],"nodes":[{"content":"Use the value returned by this property to determine how long the preferred address remains valid.","pos":[0,98]},{"content":"Whenever possible, applications should use a preferred address.","pos":[99,162]},{"content":"Use <ph id=\"ph1\">&lt;xref:System.Net.NetworkInformation.MulticastIPAddressInformation.DuplicateAddressDetectionState%2A&gt;</ph> to determine the preferred address.","pos":[163,303],"source":" Use <xref:System.Net.NetworkInformation.MulticastIPAddressInformation.DuplicateAddressDetectionState%2A> to determine the preferred address."}]}]}],"pos":[5419,5723],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.Int64\"></xref> value that specifies the number of seconds left for this address to remain preferred.","nodes":[{"pos":[0,122],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Int64\"&gt;&lt;/xref&gt;</ph> value that specifies the number of seconds left for this address to remain preferred.","source":"An <xref href=\"System.Int64\"></xref> value that specifies the number of seconds left for this address to remain preferred."}],"pos":[5857,5980],"yaml":true},{"content":"This property is not valid on computers running operating systems earlier than Windows XP.","nodes":[{"pos":[0,90],"content":"This property is not valid on computers running operating systems earlier than Windows XP.","nodes":[{"content":"This property is not valid on computers running operating systems earlier than Windows XP.","pos":[0,90]}]}],"pos":[6210,6301],"yaml":true},{"content":"Gets the number of seconds remaining during which this address is valid.","nodes":[{"pos":[0,72],"content":"Gets the number of seconds remaining during which this address is valid.","nodes":[{"content":"Gets the number of seconds remaining during which this address is valid.","pos":[0,72]}]}],"pos":[7667,7740],"yaml":true},{"content":"Use the value returned by this property to determine whether this address can be used by your application. Whenever possible, applications should use a preferred address. Use <xref:System.Net.NetworkInformation.MulticastIPAddressInformation.DuplicateAddressDetectionState%2A> to determine the preferred address.","nodes":[{"pos":[0,311],"content":"Use the value returned by this property to determine whether this address can be used by your application. Whenever possible, applications should use a preferred address. Use <xref:System.Net.NetworkInformation.MulticastIPAddressInformation.DuplicateAddressDetectionState%2A> to determine the preferred address.","nodes":[{"content":"Use the value returned by this property to determine whether this address can be used by your application. Whenever possible, applications should use a preferred address. Use <xref:System.Net.NetworkInformation.MulticastIPAddressInformation.DuplicateAddressDetectionState%2A> to determine the preferred address.","pos":[0,311],"nodes":[{"content":"Use the value returned by this property to determine whether this address can be used by your application.","pos":[0,106]},{"content":"Whenever possible, applications should use a preferred address.","pos":[107,170]},{"content":"Use <ph id=\"ph1\">&lt;xref:System.Net.NetworkInformation.MulticastIPAddressInformation.DuplicateAddressDetectionState%2A&gt;</ph> to determine the preferred address.","pos":[171,311],"source":" Use <xref:System.Net.NetworkInformation.MulticastIPAddressInformation.DuplicateAddressDetectionState%2A> to determine the preferred address."}]}]}],"pos":[7751,8063],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.Int64\"></xref> value that specifies the number of seconds left for this address to remain assigned.","nodes":[{"pos":[0,121],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Int64\"&gt;&lt;/xref&gt;</ph> value that specifies the number of seconds left for this address to remain assigned.","source":"An <xref href=\"System.Int64\"></xref> value that specifies the number of seconds left for this address to remain assigned."}],"pos":[8193,8315],"yaml":true},{"content":"This property is not valid on computers running operating systems earlier than Windows XP.","nodes":[{"pos":[0,90],"content":"This property is not valid on computers running operating systems earlier than Windows XP.","nodes":[{"content":"This property is not valid on computers running operating systems earlier than Windows XP.","pos":[0,90]}]}],"pos":[8541,8632],"yaml":true},{"content":"Specifies the amount of time remaining on the Dynamic Host Configuration Protocol (DHCP) lease for this IP address.","nodes":[{"pos":[0,115],"content":"Specifies the amount of time remaining on the Dynamic Host Configuration Protocol (DHCP) lease for this IP address.","nodes":[{"content":"Specifies the amount of time remaining on the Dynamic Host Configuration Protocol (DHCP) lease for this IP address.","pos":[0,115]}]}],"pos":[9980,10096],"yaml":true},{"content":"Dynamic Host Configuration Protocol (DHCP) allows a computer to obtain a network address from a DHCP server, as opposed to using a static (fixed) network address. The DHCP server does not permanently assign addresses; instead, it \"leases\" one of a number of available addresses to the computer. Within a specified amount of time, known as the lease lifetime for the address, the computer releases the address, leaving the DHCP server free to assign it to a different computer.  \n  \n This property returns the number of seconds left in the lease lifetime for the IP address identified in the <xref:System.Net.NetworkInformation.IPAddressInformation.Address%2A> property. Note that the computer can send requests to the DHCP server to extend its lease, so the lease lifetime can increase over time.","nodes":[{"pos":[0,476],"content":"Dynamic Host Configuration Protocol (DHCP) allows a computer to obtain a network address from a DHCP server, as opposed to using a static (fixed) network address. The DHCP server does not permanently assign addresses; instead, it \"leases\" one of a number of available addresses to the computer. Within a specified amount of time, known as the lease lifetime for the address, the computer releases the address, leaving the DHCP server free to assign it to a different computer.","nodes":[{"content":"Dynamic Host Configuration Protocol (DHCP) allows a computer to obtain a network address from a DHCP server, as opposed to using a static (fixed) network address. The DHCP server does not permanently assign addresses; instead, it \"leases\" one of a number of available addresses to the computer. Within a specified amount of time, known as the lease lifetime for the address, the computer releases the address, leaving the DHCP server free to assign it to a different computer.","pos":[0,476],"nodes":[{"content":"Dynamic Host Configuration Protocol (DHCP) allows a computer to obtain a network address from a DHCP server, as opposed to using a static (fixed) network address.","pos":[0,162]},{"content":"The DHCP server does not permanently assign addresses; instead, it \"leases\" one of a number of available addresses to the computer.","pos":[163,294]},{"content":"Within a specified amount of time, known as the lease lifetime for the address, the computer releases the address, leaving the DHCP server free to assign it to a different computer.","pos":[295,476]}]}]},{"pos":[483,796],"content":"This property returns the number of seconds left in the lease lifetime for the IP address identified in the <xref:System.Net.NetworkInformation.IPAddressInformation.Address%2A> property. Note that the computer can send requests to the DHCP server to extend its lease, so the lease lifetime can increase over time.","nodes":[{"content":"This property returns the number of seconds left in the lease lifetime for the IP address identified in the <xref:System.Net.NetworkInformation.IPAddressInformation.Address%2A> property. Note that the computer can send requests to the DHCP server to extend its lease, so the lease lifetime can increase over time.","pos":[0,313],"nodes":[{"content":"This property returns the number of seconds left in the lease lifetime for the IP address identified in the <ph id=\"ph1\">&lt;xref:System.Net.NetworkInformation.IPAddressInformation.Address%2A&gt;</ph> property.","pos":[0,186],"source":"This property returns the number of seconds left in the lease lifetime for the IP address identified in the <xref:System.Net.NetworkInformation.IPAddressInformation.Address%2A> property."},{"content":"Note that the computer can send requests to the DHCP server to extend its lease, so the lease lifetime can increase over time.","pos":[187,313]}]}]}],"pos":[10107,10910],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.Int64\"></xref> value that contains the number of seconds remaining before the computer must release the <xref href=\"System.Net.IPAddress\"></xref> instance.","nodes":[{"pos":[0,177],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Int64\"&gt;&lt;/xref&gt;</ph> value that contains the number of seconds remaining before the computer must release the <ph id=\"ph2\">&lt;xref href=\"System.Net.IPAddress\"&gt;&lt;/xref&gt;</ph> instance.","source":"An <xref href=\"System.Int64\"></xref> value that contains the number of seconds remaining before the computer must release the <xref href=\"System.Net.IPAddress\"></xref> instance."}],"pos":[11037,11215],"yaml":true},{"content":"Gets a value that indicates the state of the duplicate address detection algorithm.","nodes":[{"pos":[0,83],"content":"Gets a value that indicates the state of the duplicate address detection algorithm.","nodes":[{"content":"Gets a value that indicates the state of the duplicate address detection algorithm.","pos":[0,83]}]}],"pos":[12749,12833],"yaml":true},{"content":"To ensure that all network interfaces on a network have a unique address, the interface host is responsible for running a \"duplicate address detection\" algorithm on Multicast addresses. The purpose of this algorithm is to attempt to prevent non-unique addresses on the network. This process is defined in IETF RFC 1971.","nodes":[{"pos":[0,319],"content":"To ensure that all network interfaces on a network have a unique address, the interface host is responsible for running a \"duplicate address detection\" algorithm on Multicast addresses. The purpose of this algorithm is to attempt to prevent non-unique addresses on the network. This process is defined in IETF RFC 1971.","nodes":[{"content":"To ensure that all network interfaces on a network have a unique address, the interface host is responsible for running a \"duplicate address detection\" algorithm on Multicast addresses. The purpose of this algorithm is to attempt to prevent non-unique addresses on the network. This process is defined in IETF RFC 1971.","pos":[0,319],"nodes":[{"content":"To ensure that all network interfaces on a network have a unique address, the interface host is responsible for running a \"duplicate address detection\" algorithm on Multicast addresses.","pos":[0,185]},{"content":"The purpose of this algorithm is to attempt to prevent non-unique addresses on the network.","pos":[186,277]},{"content":"This process is defined in IETF RFC 1971.","pos":[278,319]}]}]}],"pos":[12844,13164],"yaml":true,"extradata":"MT"},{"content":"One of the <xref href=\"System.Net.NetworkInformation.DuplicateAddressDetectionState\"></xref> values that indicates the progress of the algorithm in determining the uniqueness of this IP address.","nodes":[{"pos":[0,194],"content":"One of the <ph id=\"ph1\">&lt;xref href=\"System.Net.NetworkInformation.DuplicateAddressDetectionState\"&gt;&lt;/xref&gt;</ph> values that indicates the progress of the algorithm in determining the uniqueness of this IP address.","source":"One of the <xref href=\"System.Net.NetworkInformation.DuplicateAddressDetectionState\"></xref> values that indicates the progress of the algorithm in determining the uniqueness of this IP address."}],"pos":[13408,13603],"yaml":true},{"content":"This property is not valid on computers running operating systems earlier than Windows XP.","nodes":[{"pos":[0,90],"content":"This property is not valid on computers running operating systems earlier than Windows XP.","nodes":[{"content":"This property is not valid on computers running operating systems earlier than Windows XP.","pos":[0,90]}]}],"pos":[13839,13930],"yaml":true},{"content":"Gets a value that identifies the source of a Multicast Internet Protocol (IP) address prefix.","nodes":[{"pos":[0,93],"content":"Gets a value that identifies the source of a Multicast Internet Protocol (IP) address prefix.","nodes":[{"content":"Gets a value that identifies the source of a Multicast Internet Protocol (IP) address prefix.","pos":[0,93]}]}],"pos":[15248,15342],"yaml":true},{"content":"IP addresses are divided into two parts: the prefix and the suffix. The address prefix identifies the network portion of an IP address, and the address suffix identifies the host portion. Prefixes are assigned by global authorities, and suffixes are assigned by local system administrators.","nodes":[{"pos":[0,290],"content":"IP addresses are divided into two parts: the prefix and the suffix. The address prefix identifies the network portion of an IP address, and the address suffix identifies the host portion. Prefixes are assigned by global authorities, and suffixes are assigned by local system administrators.","nodes":[{"content":"IP addresses are divided into two parts: the prefix and the suffix. The address prefix identifies the network portion of an IP address, and the address suffix identifies the host portion. Prefixes are assigned by global authorities, and suffixes are assigned by local system administrators.","pos":[0,290],"nodes":[{"content":"IP addresses are divided into two parts: the prefix and the suffix.","pos":[0,67]},{"content":"The address prefix identifies the network portion of an IP address, and the address suffix identifies the host portion.","pos":[68,187]},{"content":"Prefixes are assigned by global authorities, and suffixes are assigned by local system administrators.","pos":[188,290]}]}]}],"pos":[15353,15646],"yaml":true,"extradata":"MT"},{"content":"One of the <xref href=\"System.Net.NetworkInformation.PrefixOrigin\"></xref> values that identifies how the prefix information was obtained.","nodes":[{"pos":[0,138],"content":"One of the <ph id=\"ph1\">&lt;xref href=\"System.Net.NetworkInformation.PrefixOrigin\"&gt;&lt;/xref&gt;</ph> values that identifies how the prefix information was obtained.","source":"One of the <xref href=\"System.Net.NetworkInformation.PrefixOrigin\"></xref> values that identifies how the prefix information was obtained."}],"pos":[15836,15975],"yaml":true},{"content":"This property is not valid on computers running operating systems earlier than Windows XP.","nodes":[{"pos":[0,90],"content":"This property is not valid on computers running operating systems earlier than Windows XP.","nodes":[{"content":"This property is not valid on computers running operating systems earlier than Windows XP.","pos":[0,90]}]}],"pos":[16193,16284],"yaml":true},{"content":"Gets a value that identifies the source of a Multicast Internet Protocol (IP) address suffix.","nodes":[{"pos":[0,93],"content":"Gets a value that identifies the source of a Multicast Internet Protocol (IP) address suffix.","nodes":[{"content":"Gets a value that identifies the source of a Multicast Internet Protocol (IP) address suffix.","pos":[0,93]}]}],"pos":[17602,17696],"yaml":true},{"content":"IP addresses are divided into two parts: the prefix and the suffix. The address prefix identifies the network portion of an IP address, and the address suffix identifies the host portion. Prefixes are assigned by global authorities, and suffixes are assigned by local system administrators.","nodes":[{"pos":[0,290],"content":"IP addresses are divided into two parts: the prefix and the suffix. The address prefix identifies the network portion of an IP address, and the address suffix identifies the host portion. Prefixes are assigned by global authorities, and suffixes are assigned by local system administrators.","nodes":[{"content":"IP addresses are divided into two parts: the prefix and the suffix. The address prefix identifies the network portion of an IP address, and the address suffix identifies the host portion. Prefixes are assigned by global authorities, and suffixes are assigned by local system administrators.","pos":[0,290],"nodes":[{"content":"IP addresses are divided into two parts: the prefix and the suffix.","pos":[0,67]},{"content":"The address prefix identifies the network portion of an IP address, and the address suffix identifies the host portion.","pos":[68,187]},{"content":"Prefixes are assigned by global authorities, and suffixes are assigned by local system administrators.","pos":[188,290]}]}]}],"pos":[17707,18000],"yaml":true,"extradata":"MT"},{"content":"One of the <xref href=\"System.Net.NetworkInformation.SuffixOrigin\"></xref> values that identifies how the suffix information was obtained.","nodes":[{"pos":[0,138],"content":"One of the <ph id=\"ph1\">&lt;xref href=\"System.Net.NetworkInformation.SuffixOrigin\"&gt;&lt;/xref&gt;</ph> values that identifies how the suffix information was obtained.","source":"One of the <xref href=\"System.Net.NetworkInformation.SuffixOrigin\"></xref> values that identifies how the suffix information was obtained."}],"pos":[18190,18329],"yaml":true},{"content":"This property is not valid on computers running operating systems earlier than Windows XP.","nodes":[{"pos":[0,90],"content":"This property is not valid on computers running operating systems earlier than Windows XP.","nodes":[{"content":"This property is not valid on computers running operating systems earlier than Windows XP.","pos":[0,90]}]}],"pos":[18547,18638],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Net.NetworkInformation.MulticastIPAddressInformation\n  commentId: T:System.Net.NetworkInformation.MulticastIPAddressInformation\n  id: MulticastIPAddressInformation\n  children:\n  - System.Net.NetworkInformation.MulticastIPAddressInformation.#ctor\n  - System.Net.NetworkInformation.MulticastIPAddressInformation.AddressPreferredLifetime\n  - System.Net.NetworkInformation.MulticastIPAddressInformation.AddressValidLifetime\n  - System.Net.NetworkInformation.MulticastIPAddressInformation.DhcpLeaseLifetime\n  - System.Net.NetworkInformation.MulticastIPAddressInformation.DuplicateAddressDetectionState\n  - System.Net.NetworkInformation.MulticastIPAddressInformation.PrefixOrigin\n  - System.Net.NetworkInformation.MulticastIPAddressInformation.SuffixOrigin\n  langs:\n  - csharp\n  name: MulticastIPAddressInformation\n  nameWithType: MulticastIPAddressInformation\n  fullName: System.Net.NetworkInformation.MulticastIPAddressInformation\n  type: Class\n  assemblies:\n  - System.Net.NetworkInformation\n  - System\n  - netstandard\n  namespace: System.Net.NetworkInformation\n  summary: Provides information about a network interface's multicast address.\n  remarks: You do not create instances of this class; instances are returned in the array returned by the <xref:System.Net.NetworkInformation.IPInterfaceProperties.MulticastAddresses%2A> property.\n  syntax:\n    content: 'public abstract class MulticastIPAddressInformation : System.Net.NetworkInformation.IPAddressInformation'\n  inheritance:\n  - System.Object\n  - System.Net.NetworkInformation.IPAddressInformation\n  implements: []\n  inheritedMembers:\n  - System.Net.NetworkInformation.IPAddressInformation.Address\n  - System.Net.NetworkInformation.IPAddressInformation.IsDnsEligible\n  - System.Net.NetworkInformation.IPAddressInformation.IsTransient\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.NetworkInformation/MulticastIPAddressInformation.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.NetworkInformation.MulticastIPAddressInformation.#ctor\n  commentId: M:System.Net.NetworkInformation.MulticastIPAddressInformation.#ctor\n  id: '#ctor'\n  parent: System.Net.NetworkInformation.MulticastIPAddressInformation\n  langs:\n  - csharp\n  name: MulticastIPAddressInformation()\n  nameWithType: MulticastIPAddressInformation.MulticastIPAddressInformation()\n  fullName: MulticastIPAddressInformation.MulticastIPAddressInformation()\n  type: Constructor\n  assemblies:\n  - System.Net.NetworkInformation\n  - System\n  - netstandard\n  namespace: System.Net.NetworkInformation\n  summary: Initializes a new instance of the <xref href=\"System.Net.NetworkInformation.MulticastIPAddressInformation\"></xref> class.\n  remarks: This constructor can be called only by classes that derive from the <xref:System.Net.NetworkInformation.MulticastIPAddressInformation> class.\n  syntax:\n    content: protected MulticastIPAddressInformation ();\n    parameters: []\n  overload: System.Net.NetworkInformation.MulticastIPAddressInformation.#ctor*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.NetworkInformation/MulticastIPAddressInformation.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.NetworkInformation.MulticastIPAddressInformation.AddressPreferredLifetime\n  commentId: P:System.Net.NetworkInformation.MulticastIPAddressInformation.AddressPreferredLifetime\n  id: AddressPreferredLifetime\n  parent: System.Net.NetworkInformation.MulticastIPAddressInformation\n  langs:\n  - csharp\n  name: AddressPreferredLifetime\n  nameWithType: MulticastIPAddressInformation.AddressPreferredLifetime\n  fullName: MulticastIPAddressInformation.AddressPreferredLifetime\n  type: Property\n  assemblies:\n  - System.Net.NetworkInformation\n  - System\n  - netstandard\n  namespace: System.Net.NetworkInformation\n  summary: Gets the number of seconds remaining during which this address is the preferred address.\n  remarks: Use the value returned by this property to determine how long the preferred address remains valid. Whenever possible, applications should use a preferred address. Use <xref:System.Net.NetworkInformation.MulticastIPAddressInformation.DuplicateAddressDetectionState%2A> to determine the preferred address.\n  syntax:\n    content: public abstract long AddressPreferredLifetime { get; }\n    return:\n      type: System.Int64\n      description: An <xref href=\"System.Int64\"></xref> value that specifies the number of seconds left for this address to remain preferred.\n  overload: System.Net.NetworkInformation.MulticastIPAddressInformation.AddressPreferredLifetime*\n  exceptions:\n  - type: System.PlatformNotSupportedException\n    commentId: T:System.PlatformNotSupportedException\n    description: This property is not valid on computers running operating systems earlier than Windows XP.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.NetworkInformation/MulticastIPAddressInformation.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.NetworkInformation.MulticastIPAddressInformation.AddressValidLifetime\n  commentId: P:System.Net.NetworkInformation.MulticastIPAddressInformation.AddressValidLifetime\n  id: AddressValidLifetime\n  parent: System.Net.NetworkInformation.MulticastIPAddressInformation\n  langs:\n  - csharp\n  name: AddressValidLifetime\n  nameWithType: MulticastIPAddressInformation.AddressValidLifetime\n  fullName: MulticastIPAddressInformation.AddressValidLifetime\n  type: Property\n  assemblies:\n  - System.Net.NetworkInformation\n  - System\n  - netstandard\n  namespace: System.Net.NetworkInformation\n  summary: Gets the number of seconds remaining during which this address is valid.\n  remarks: Use the value returned by this property to determine whether this address can be used by your application. Whenever possible, applications should use a preferred address. Use <xref:System.Net.NetworkInformation.MulticastIPAddressInformation.DuplicateAddressDetectionState%2A> to determine the preferred address.\n  syntax:\n    content: public abstract long AddressValidLifetime { get; }\n    return:\n      type: System.Int64\n      description: An <xref href=\"System.Int64\"></xref> value that specifies the number of seconds left for this address to remain assigned.\n  overload: System.Net.NetworkInformation.MulticastIPAddressInformation.AddressValidLifetime*\n  exceptions:\n  - type: System.PlatformNotSupportedException\n    commentId: T:System.PlatformNotSupportedException\n    description: This property is not valid on computers running operating systems earlier than Windows XP.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.NetworkInformation/MulticastIPAddressInformation.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.NetworkInformation.MulticastIPAddressInformation.DhcpLeaseLifetime\n  commentId: P:System.Net.NetworkInformation.MulticastIPAddressInformation.DhcpLeaseLifetime\n  id: DhcpLeaseLifetime\n  parent: System.Net.NetworkInformation.MulticastIPAddressInformation\n  langs:\n  - csharp\n  name: DhcpLeaseLifetime\n  nameWithType: MulticastIPAddressInformation.DhcpLeaseLifetime\n  fullName: MulticastIPAddressInformation.DhcpLeaseLifetime\n  type: Property\n  assemblies:\n  - System.Net.NetworkInformation\n  - System\n  - netstandard\n  namespace: System.Net.NetworkInformation\n  summary: Specifies the amount of time remaining on the Dynamic Host Configuration Protocol (DHCP) lease for this IP address.\n  remarks: \"Dynamic Host Configuration Protocol (DHCP) allows a computer to obtain a network address from a DHCP server, as opposed to using a static (fixed) network address. The DHCP server does not permanently assign addresses; instead, it \\\"leases\\\" one of a number of available addresses to the computer. Within a specified amount of time, known as the lease lifetime for the address, the computer releases the address, leaving the DHCP server free to assign it to a different computer.  \\n  \\n This property returns the number of seconds left in the lease lifetime for the IP address identified in the <xref:System.Net.NetworkInformation.IPAddressInformation.Address%2A> property. Note that the computer can send requests to the DHCP server to extend its lease, so the lease lifetime can increase over time.\"\n  syntax:\n    content: public abstract long DhcpLeaseLifetime { get; }\n    return:\n      type: System.Int64\n      description: An <xref href=\"System.Int64\"></xref> value that contains the number of seconds remaining before the computer must release the <xref href=\"System.Net.IPAddress\"></xref> instance.\n  overload: System.Net.NetworkInformation.MulticastIPAddressInformation.DhcpLeaseLifetime*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.NetworkInformation/MulticastIPAddressInformation.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.NetworkInformation.MulticastIPAddressInformation.DuplicateAddressDetectionState\n  commentId: P:System.Net.NetworkInformation.MulticastIPAddressInformation.DuplicateAddressDetectionState\n  id: DuplicateAddressDetectionState\n  parent: System.Net.NetworkInformation.MulticastIPAddressInformation\n  langs:\n  - csharp\n  name: DuplicateAddressDetectionState\n  nameWithType: MulticastIPAddressInformation.DuplicateAddressDetectionState\n  fullName: MulticastIPAddressInformation.DuplicateAddressDetectionState\n  type: Property\n  assemblies:\n  - System.Net.NetworkInformation\n  - System\n  - netstandard\n  namespace: System.Net.NetworkInformation\n  summary: Gets a value that indicates the state of the duplicate address detection algorithm.\n  remarks: To ensure that all network interfaces on a network have a unique address, the interface host is responsible for running a \"duplicate address detection\" algorithm on Multicast addresses. The purpose of this algorithm is to attempt to prevent non-unique addresses on the network. This process is defined in IETF RFC 1971.\n  syntax:\n    content: public abstract System.Net.NetworkInformation.DuplicateAddressDetectionState DuplicateAddressDetectionState { get; }\n    return:\n      type: System.Net.NetworkInformation.DuplicateAddressDetectionState\n      description: One of the <xref href=\"System.Net.NetworkInformation.DuplicateAddressDetectionState\"></xref> values that indicates the progress of the algorithm in determining the uniqueness of this IP address.\n  overload: System.Net.NetworkInformation.MulticastIPAddressInformation.DuplicateAddressDetectionState*\n  exceptions:\n  - type: System.PlatformNotSupportedException\n    commentId: T:System.PlatformNotSupportedException\n    description: This property is not valid on computers running operating systems earlier than Windows XP.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.NetworkInformation/MulticastIPAddressInformation.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.NetworkInformation.MulticastIPAddressInformation.PrefixOrigin\n  commentId: P:System.Net.NetworkInformation.MulticastIPAddressInformation.PrefixOrigin\n  id: PrefixOrigin\n  parent: System.Net.NetworkInformation.MulticastIPAddressInformation\n  langs:\n  - csharp\n  name: PrefixOrigin\n  nameWithType: MulticastIPAddressInformation.PrefixOrigin\n  fullName: MulticastIPAddressInformation.PrefixOrigin\n  type: Property\n  assemblies:\n  - System.Net.NetworkInformation\n  - System\n  - netstandard\n  namespace: System.Net.NetworkInformation\n  summary: Gets a value that identifies the source of a Multicast Internet Protocol (IP) address prefix.\n  remarks: 'IP addresses are divided into two parts: the prefix and the suffix. The address prefix identifies the network portion of an IP address, and the address suffix identifies the host portion. Prefixes are assigned by global authorities, and suffixes are assigned by local system administrators.'\n  syntax:\n    content: public abstract System.Net.NetworkInformation.PrefixOrigin PrefixOrigin { get; }\n    return:\n      type: System.Net.NetworkInformation.PrefixOrigin\n      description: One of the <xref href=\"System.Net.NetworkInformation.PrefixOrigin\"></xref> values that identifies how the prefix information was obtained.\n  overload: System.Net.NetworkInformation.MulticastIPAddressInformation.PrefixOrigin*\n  exceptions:\n  - type: System.PlatformNotSupportedException\n    commentId: T:System.PlatformNotSupportedException\n    description: This property is not valid on computers running operating systems earlier than Windows XP.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.NetworkInformation/MulticastIPAddressInformation.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.NetworkInformation.MulticastIPAddressInformation.SuffixOrigin\n  commentId: P:System.Net.NetworkInformation.MulticastIPAddressInformation.SuffixOrigin\n  id: SuffixOrigin\n  parent: System.Net.NetworkInformation.MulticastIPAddressInformation\n  langs:\n  - csharp\n  name: SuffixOrigin\n  nameWithType: MulticastIPAddressInformation.SuffixOrigin\n  fullName: MulticastIPAddressInformation.SuffixOrigin\n  type: Property\n  assemblies:\n  - System.Net.NetworkInformation\n  - System\n  - netstandard\n  namespace: System.Net.NetworkInformation\n  summary: Gets a value that identifies the source of a Multicast Internet Protocol (IP) address suffix.\n  remarks: 'IP addresses are divided into two parts: the prefix and the suffix. The address prefix identifies the network portion of an IP address, and the address suffix identifies the host portion. Prefixes are assigned by global authorities, and suffixes are assigned by local system administrators.'\n  syntax:\n    content: public abstract System.Net.NetworkInformation.SuffixOrigin SuffixOrigin { get; }\n    return:\n      type: System.Net.NetworkInformation.SuffixOrigin\n      description: One of the <xref href=\"System.Net.NetworkInformation.SuffixOrigin\"></xref> values that identifies how the suffix information was obtained.\n  overload: System.Net.NetworkInformation.MulticastIPAddressInformation.SuffixOrigin*\n  exceptions:\n  - type: System.PlatformNotSupportedException\n    commentId: T:System.PlatformNotSupportedException\n    description: This property is not valid on computers running operating systems earlier than Windows XP.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.NetworkInformation/MulticastIPAddressInformation.xml\n  ms.author: bobdel\n  manager: markl\nreferences:\n- uid: System.Net.NetworkInformation.IPAddressInformation\n  parent: System.Net.NetworkInformation\n  isExternal: false\n  name: IPAddressInformation\n  nameWithType: IPAddressInformation\n  fullName: System.Net.NetworkInformation.IPAddressInformation\n- uid: System.PlatformNotSupportedException\n  parent: System\n  isExternal: false\n  name: PlatformNotSupportedException\n  nameWithType: PlatformNotSupportedException\n  fullName: System.PlatformNotSupportedException\n- uid: System.Net.NetworkInformation.MulticastIPAddressInformation.#ctor\n  parent: System.Net.NetworkInformation.MulticastIPAddressInformation\n  isExternal: false\n  name: MulticastIPAddressInformation()\n  nameWithType: MulticastIPAddressInformation.MulticastIPAddressInformation()\n  fullName: MulticastIPAddressInformation.MulticastIPAddressInformation()\n- uid: System.Net.NetworkInformation.MulticastIPAddressInformation.AddressPreferredLifetime\n  parent: System.Net.NetworkInformation.MulticastIPAddressInformation\n  isExternal: false\n  name: AddressPreferredLifetime\n  nameWithType: MulticastIPAddressInformation.AddressPreferredLifetime\n  fullName: MulticastIPAddressInformation.AddressPreferredLifetime\n- uid: System.Int64\n  parent: System\n  isExternal: false\n  name: Int64\n  nameWithType: Int64\n  fullName: System.Int64\n- uid: System.Net.NetworkInformation.MulticastIPAddressInformation.AddressValidLifetime\n  parent: System.Net.NetworkInformation.MulticastIPAddressInformation\n  isExternal: false\n  name: AddressValidLifetime\n  nameWithType: MulticastIPAddressInformation.AddressValidLifetime\n  fullName: MulticastIPAddressInformation.AddressValidLifetime\n- uid: System.Net.NetworkInformation.MulticastIPAddressInformation.DhcpLeaseLifetime\n  parent: System.Net.NetworkInformation.MulticastIPAddressInformation\n  isExternal: false\n  name: DhcpLeaseLifetime\n  nameWithType: MulticastIPAddressInformation.DhcpLeaseLifetime\n  fullName: MulticastIPAddressInformation.DhcpLeaseLifetime\n- uid: System.Net.NetworkInformation.MulticastIPAddressInformation.DuplicateAddressDetectionState\n  parent: System.Net.NetworkInformation.MulticastIPAddressInformation\n  isExternal: false\n  name: DuplicateAddressDetectionState\n  nameWithType: MulticastIPAddressInformation.DuplicateAddressDetectionState\n  fullName: MulticastIPAddressInformation.DuplicateAddressDetectionState\n- uid: System.Net.NetworkInformation.DuplicateAddressDetectionState\n  parent: System.Net.NetworkInformation\n  isExternal: false\n  name: DuplicateAddressDetectionState\n  nameWithType: DuplicateAddressDetectionState\n  fullName: System.Net.NetworkInformation.DuplicateAddressDetectionState\n- uid: System.Net.NetworkInformation.MulticastIPAddressInformation.PrefixOrigin\n  parent: System.Net.NetworkInformation.MulticastIPAddressInformation\n  isExternal: false\n  name: PrefixOrigin\n  nameWithType: MulticastIPAddressInformation.PrefixOrigin\n  fullName: MulticastIPAddressInformation.PrefixOrigin\n- uid: System.Net.NetworkInformation.PrefixOrigin\n  parent: System.Net.NetworkInformation\n  isExternal: false\n  name: PrefixOrigin\n  nameWithType: PrefixOrigin\n  fullName: System.Net.NetworkInformation.PrefixOrigin\n- uid: System.Net.NetworkInformation.MulticastIPAddressInformation.SuffixOrigin\n  parent: System.Net.NetworkInformation.MulticastIPAddressInformation\n  isExternal: false\n  name: SuffixOrigin\n  nameWithType: MulticastIPAddressInformation.SuffixOrigin\n  fullName: MulticastIPAddressInformation.SuffixOrigin\n- uid: System.Net.NetworkInformation.SuffixOrigin\n  parent: System.Net.NetworkInformation\n  isExternal: false\n  name: SuffixOrigin\n  nameWithType: SuffixOrigin\n  fullName: System.Net.NetworkInformation.SuffixOrigin\n- uid: System.Net.NetworkInformation.MulticastIPAddressInformation.#ctor*\n  parent: System.Net.NetworkInformation.MulticastIPAddressInformation\n  isExternal: false\n  name: MulticastIPAddressInformation\n  nameWithType: MulticastIPAddressInformation.MulticastIPAddressInformation\n  fullName: MulticastIPAddressInformation.MulticastIPAddressInformation\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.NetworkInformation/MulticastIPAddressInformation.xml\n- uid: System.Net.NetworkInformation.MulticastIPAddressInformation.AddressPreferredLifetime*\n  parent: System.Net.NetworkInformation.MulticastIPAddressInformation\n  isExternal: false\n  name: AddressPreferredLifetime\n  nameWithType: MulticastIPAddressInformation.AddressPreferredLifetime\n  fullName: MulticastIPAddressInformation.AddressPreferredLifetime\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.NetworkInformation/MulticastIPAddressInformation.xml\n- uid: System.Net.NetworkInformation.MulticastIPAddressInformation.AddressValidLifetime*\n  parent: System.Net.NetworkInformation.MulticastIPAddressInformation\n  isExternal: false\n  name: AddressValidLifetime\n  nameWithType: MulticastIPAddressInformation.AddressValidLifetime\n  fullName: MulticastIPAddressInformation.AddressValidLifetime\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.NetworkInformation/MulticastIPAddressInformation.xml\n- uid: System.Net.NetworkInformation.MulticastIPAddressInformation.DhcpLeaseLifetime*\n  parent: System.Net.NetworkInformation.MulticastIPAddressInformation\n  isExternal: false\n  name: DhcpLeaseLifetime\n  nameWithType: MulticastIPAddressInformation.DhcpLeaseLifetime\n  fullName: MulticastIPAddressInformation.DhcpLeaseLifetime\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.NetworkInformation/MulticastIPAddressInformation.xml\n- uid: System.Net.NetworkInformation.MulticastIPAddressInformation.DuplicateAddressDetectionState*\n  parent: System.Net.NetworkInformation.MulticastIPAddressInformation\n  isExternal: false\n  name: DuplicateAddressDetectionState\n  nameWithType: MulticastIPAddressInformation.DuplicateAddressDetectionState\n  fullName: MulticastIPAddressInformation.DuplicateAddressDetectionState\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.NetworkInformation/MulticastIPAddressInformation.xml\n- uid: System.Net.NetworkInformation.MulticastIPAddressInformation.PrefixOrigin*\n  parent: System.Net.NetworkInformation.MulticastIPAddressInformation\n  isExternal: false\n  name: PrefixOrigin\n  nameWithType: MulticastIPAddressInformation.PrefixOrigin\n  fullName: MulticastIPAddressInformation.PrefixOrigin\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.NetworkInformation/MulticastIPAddressInformation.xml\n- uid: System.Net.NetworkInformation.MulticastIPAddressInformation.SuffixOrigin*\n  parent: System.Net.NetworkInformation.MulticastIPAddressInformation\n  isExternal: false\n  name: SuffixOrigin\n  nameWithType: MulticastIPAddressInformation.SuffixOrigin\n  fullName: MulticastIPAddressInformation.SuffixOrigin\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.NetworkInformation/MulticastIPAddressInformation.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.Net.NetworkInformation.IPAddressInformation.Address\n  parent: System.Net.NetworkInformation.IPAddressInformation\n  isExternal: false\n  name: Address\n  nameWithType: IPAddressInformation.Address\n  fullName: IPAddressInformation.Address\n- uid: System.Net.NetworkInformation.IPAddressInformation.IsDnsEligible\n  parent: System.Net.NetworkInformation.IPAddressInformation\n  isExternal: false\n  name: IsDnsEligible\n  nameWithType: IPAddressInformation.IsDnsEligible\n  fullName: IPAddressInformation.IsDnsEligible\n- uid: System.Net.NetworkInformation.IPAddressInformation.IsTransient\n  parent: System.Net.NetworkInformation.IPAddressInformation\n  isExternal: false\n  name: IsTransient\n  nameWithType: IPAddressInformation.IsTransient\n  fullName: IPAddressInformation.IsTransient\n"}