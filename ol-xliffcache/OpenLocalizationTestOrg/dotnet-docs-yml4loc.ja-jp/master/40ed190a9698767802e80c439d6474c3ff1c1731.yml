### YamlMime:ManagedReference
items:
- uid: System.Windows.Input.ICommand
  commentId: T:System.Windows.Input.ICommand
  id: ICommand
  children:
  - System.Windows.Input.ICommand.CanExecute(System.Object)
  - System.Windows.Input.ICommand.CanExecuteChanged
  - System.Windows.Input.ICommand.Execute(System.Object)
  langs:
  - csharp
  name: ICommand
  nameWithType: ICommand
  fullName: System.Windows.Input.ICommand
  type: Interface
  assemblies:
  - System.ObjectModel
  - System
  - netstandard
  namespace: System.Windows.Input
  summary: Defines a command.
  remarks: "<xref:System.Windows.Input.RoutedCommand> and <xref:System.Windows.Input.RoutedUICommand> are two implementations of the <xref:System.Windows.Input.ICommand> interface in [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)].  \n  \n## ICommand in Windows Runtime apps  \n The <xref:System.Windows.Input.ICommand> interface is the code contract for commands that are written in .NET for Windows Runtime apps. These commands provide the commanding behavior for UI elements such as a Windows Runtime XAML `Button` and in particular an `AppBarButton`. If you're defining commands for Windows Runtime apps you use basically the same techniques you'd use for defining commands for a .NET app. Implement the command by defining a class that implements <xref:System.Windows.Input.ICommand> and specifically implement the <xref:System.Windows.Input.ICommand.Execute%2A> method.  \n  \n XAML for Windows Runtime does not support x`:Static`, so don't attempt to use the `x:Static` markup extension if the command is used from Windows Runtime XAML. Also, the Windows Runtime does not have any predefined command libraries, so the XAML syntax shown here doesn't really apply for the case where you're implementing the interface and defining the command for Windows Runtime usage.  \n  \n<a name=\"xamlTextUsage_ICommand\"></a>   \n## XAML Attribute Usage  \n \\<*object property*=\"*predefinedCommandName*\"/>  \n  \n \\- or -  \n  \n \\<*object property*=\"*predefinedCommandName.predefinedCommandName*\"/>  \n  \n \\- or -  \n  \n \\<*object property*=\"{ *customClassName.customCommandName*}\"/>  \n  \n<a name=\"xamlValues_ICommand\"></a>   \n## XAML Values  \n *predefinedClassName*  \n One of the predefined command classes.  \n  \n *predefinedCommandName*  \n One of the predefined commands.  \n  \n *customClassName*  \n A custom class that contains the custom command. Custom classes generally require an `xlmns` prefix mapping; see [XAML Namespaces and Namespace Mapping for WPF XAML](~/docs/framework/wpf/advanced/xaml-namespaces-and-namespace-mapping-for-wpf-xaml.md).  \n  \n *customCommandName*  \n A custom command."
  syntax:
    content: public interface ICommand
  derivedClasses:
  - Microsoft.Windows.Input.IPreviewCommand
  - System.Windows.Input.RoutedCommand
  implements: []
  attributes: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/ICommand.xml
  ms.technology:
  - dotnet-wpf
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.Windows.Input.ICommand.CanExecute(System.Object)
  commentId: M:System.Windows.Input.ICommand.CanExecute(System.Object)
  id: CanExecute(System.Object)
  parent: System.Windows.Input.ICommand
  langs:
  - csharp
  name: CanExecute(Object)
  nameWithType: ICommand.CanExecute(Object)
  fullName: ICommand.CanExecute(Object)
  type: Method
  assemblies:
  - System.ObjectModel
  - System
  - netstandard
  namespace: System.Windows.Input
  summary: Defines the method that determines whether the command can execute in its current state.
  remarks: Typically, a command source calls the <xref:System.Windows.Input.ICommand.CanExecute%2A> method when the <xref:System.Windows.Input.ICommand.CanExecuteChanged> event is raised.
  syntax:
    content: public bool CanExecute (object parameter);
    parameters:
    - id: parameter
      type: System.Object
      description: Data used by the command.  If the command does not require data to be passed, this object can be set to `null`.
    return:
      type: System.Boolean
      description: '`true` if this command can be executed; otherwise, `false`.'
  overload: System.Windows.Input.ICommand.CanExecute*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/ICommand.xml
  ms.technology:
  - dotnet-wpf
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.Windows.Input.ICommand.CanExecuteChanged
  commentId: E:System.Windows.Input.ICommand.CanExecuteChanged
  id: CanExecuteChanged
  parent: System.Windows.Input.ICommand
  langs:
  - csharp
  name: CanExecuteChanged
  nameWithType: ICommand.CanExecuteChanged
  fullName: ICommand.CanExecuteChanged
  type: Event
  assemblies:
  - System.ObjectModel
  - System
  - netstandard
  namespace: System.Windows.Input
  summary: Occurs when changes occur that affect whether or not the command should execute.
  remarks: "Normally, a command source calls <xref:System.Windows.Input.ICommand.CanExecute%2A> on the command when this event occurs.  \n  \n Normally, if the command cannot execute, the command source disables itself."
  syntax:
    content: public event EventHandler CanExecuteChanged;
    return:
      type: System.EventHandler
      description: ''
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/ICommand.xml
  ms.technology:
  - dotnet-wpf
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.Windows.Input.ICommand.Execute(System.Object)
  commentId: M:System.Windows.Input.ICommand.Execute(System.Object)
  id: Execute(System.Object)
  parent: System.Windows.Input.ICommand
  langs:
  - csharp
  name: Execute(Object)
  nameWithType: ICommand.Execute(Object)
  fullName: ICommand.Execute(Object)
  type: Method
  assemblies:
  - System.ObjectModel
  - System
  - netstandard
  namespace: System.Windows.Input
  summary: Defines the method to be called when the command is invoked.
  syntax:
    content: public void Execute (object parameter);
    parameters:
    - id: parameter
      type: System.Object
      description: Data used by the command.  If the command does not require data to be passed, this object can be set to `null`.
  overload: System.Windows.Input.ICommand.Execute*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/ICommand.xml
  ms.technology:
  - dotnet-wpf
  author: stevehoag
  ms.author: shoag
  manager: wpickett
references:
- uid: System.Windows.Input.ICommand.CanExecute(System.Object)
  parent: System.Windows.Input.ICommand
  isExternal: false
  name: CanExecute(Object)
  nameWithType: ICommand.CanExecute(Object)
  fullName: ICommand.CanExecute(Object)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Windows.Input.ICommand.CanExecuteChanged
  parent: System.Windows.Input.ICommand
  isExternal: false
  name: CanExecuteChanged
  nameWithType: ICommand.CanExecuteChanged
  fullName: ICommand.CanExecuteChanged
- uid: System.EventHandler
  parent: System
  isExternal: false
  name: EventHandler
  nameWithType: EventHandler
  fullName: System.EventHandler
- uid: System.Windows.Input.ICommand.Execute(System.Object)
  parent: System.Windows.Input.ICommand
  isExternal: false
  name: Execute(Object)
  nameWithType: ICommand.Execute(Object)
  fullName: ICommand.Execute(Object)
- uid: System.Windows.Input.ICommand.CanExecute*
  parent: System.Windows.Input.ICommand
  isExternal: false
  name: CanExecute
  nameWithType: ICommand.CanExecute
  fullName: ICommand.CanExecute
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/ICommand.xml
- uid: System.Windows.Input.ICommand.Execute*
  parent: System.Windows.Input.ICommand
  isExternal: false
  name: Execute
  nameWithType: ICommand.Execute
  fullName: ICommand.Execute
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/ICommand.xml
