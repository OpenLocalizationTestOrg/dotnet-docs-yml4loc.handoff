{"nodes":[{"content":"Specifies whether the Visual Studio Custom Action Installer or the [Installutil.exe (Installer Tool)](~/docs/framework/tools/installutil-exe-installer-tool.md) should be invoked when the assembly is installed.","nodes":[{"pos":[0,209],"content":"Specifies whether the Visual Studio Custom Action Installer or the <bpt id=\"p1\">[</bpt>Installutil.exe (Installer Tool)<ept id=\"p1\">](~/docs/framework/tools/installutil-exe-installer-tool.md)</ept> should be invoked when the assembly is installed.","source":"Specifies whether the Visual Studio Custom Action Installer or the [Installutil.exe (Installer Tool)](~/docs/framework/tools/installutil-exe-installer-tool.md) should be invoked when the assembly is installed."}],"pos":[958,1168],"yaml":true},{"content":"If a class that inherits from <xref:System.Configuration.Install.Installer> is marked with the <xref:System.ComponentModel.RunInstallerAttribute> set to `true`, Visual Studio's Custom Action Installer or the InstallUtil.exe will be invoked when the assembly is installed. Members marked with the <xref:System.ComponentModel.RunInstallerAttribute> set to `false` will not invoke an installer. The default is `true`.  \n  \n> [!NOTE]\n>  When you mark a property with the <xref:System.ComponentModel.RunInstallerAttribute> set to `true`, the value of this attribute is set to the constant member <xref:System.ComponentModel.RunInstallerAttribute.Yes>. For a property marked with the <xref:System.ComponentModel.RunInstallerAttribute> set to `false`, the value is <xref:System.ComponentModel.RunInstallerAttribute.No>. Therefore, when you want to check the value of this attribute in your code, you must specify the attribute as <xref:System.ComponentModel.RunInstallerAttribute.Yes?displayProperty=fullName> or <xref:System.ComponentModel.RunInstallerAttribute.No?displayProperty=fullName>.  \n  \n For more information, see [Attributes](http://msdn.microsoft.com/library/30386922-1e00-4602-9ebf-526b271a8b87).","nodes":[{"pos":[0,414],"content":"If a class that inherits from <xref:System.Configuration.Install.Installer> is marked with the <xref:System.ComponentModel.RunInstallerAttribute> set to `true`, Visual Studio's Custom Action Installer or the InstallUtil.exe will be invoked when the assembly is installed. Members marked with the <xref:System.ComponentModel.RunInstallerAttribute> set to `false` will not invoke an installer. The default is `true`.","nodes":[{"content":"If a class that inherits from <ph id=\"ph1\">&lt;xref:System.Configuration.Install.Installer&gt;</ph> is marked with the <ph id=\"ph2\">&lt;xref:System.ComponentModel.RunInstallerAttribute&gt;</ph> set to <ph id=\"ph3\">`true`</ph>, Visual Studio's Custom Action Installer or the InstallUtil.exe will be invoked when the assembly is installed.","pos":[0,271],"source":"If a class that inherits from <xref:System.Configuration.Install.Installer> is marked with the <xref:System.ComponentModel.RunInstallerAttribute> set to `true`, Visual Studio's Custom Action Installer or the InstallUtil.exe will be invoked when the assembly is installed."},{"content":"Members marked with the <ph id=\"ph1\">&lt;xref:System.ComponentModel.RunInstallerAttribute&gt;</ph> set to <ph id=\"ph2\">`false`</ph> will not invoke an installer.","pos":[272,391],"source":" Members marked with the <xref:System.ComponentModel.RunInstallerAttribute> set to `false` will not invoke an installer."},{"content":"The default is <ph id=\"ph1\">`true`</ph>.","pos":[392,414],"source":" The default is `true`."}]},{"pos":[422,1085],"content":"[!NOTE]\n When you mark a property with the <xref:System.ComponentModel.RunInstallerAttribute> set to `true`, the value of this attribute is set to the constant member <xref:System.ComponentModel.RunInstallerAttribute.Yes>. For a property marked with the <xref:System.ComponentModel.RunInstallerAttribute> set to `false`, the value is <xref:System.ComponentModel.RunInstallerAttribute.No>. Therefore, when you want to check the value of this attribute in your code, you must specify the attribute as <xref:System.ComponentModel.RunInstallerAttribute.Yes?displayProperty=fullName> or <xref:System.ComponentModel.RunInstallerAttribute.No?displayProperty=fullName>.","leadings":["","> "],"nodes":[{"content":" When you mark a property with the <xref:System.ComponentModel.RunInstallerAttribute> set to `true`, the value of this attribute is set to the constant member <xref:System.ComponentModel.RunInstallerAttribute.Yes>. For a property marked with the <xref:System.ComponentModel.RunInstallerAttribute> set to `false`, the value is <xref:System.ComponentModel.RunInstallerAttribute.No>. Therefore, when you want to check the value of this attribute in your code, you must specify the attribute as <xref:System.ComponentModel.RunInstallerAttribute.Yes?displayProperty=fullName> or <xref:System.ComponentModel.RunInstallerAttribute.No?displayProperty=fullName>.","pos":[8,661],"nodes":[{"content":"When you mark a property with the <ph id=\"ph1\">&lt;xref:System.ComponentModel.RunInstallerAttribute&gt;</ph> set to <ph id=\"ph2\">`true`</ph>, the value of this attribute is set to the constant member <ph id=\"ph3\">&lt;xref:System.ComponentModel.RunInstallerAttribute.Yes&gt;</ph>.","pos":[1,214],"source":" When you mark a property with the <xref:System.ComponentModel.RunInstallerAttribute> set to `true`, the value of this attribute is set to the constant member <xref:System.ComponentModel.RunInstallerAttribute.Yes>."},{"content":"For a property marked with the <ph id=\"ph1\">&lt;xref:System.ComponentModel.RunInstallerAttribute&gt;</ph> set to <ph id=\"ph2\">`false`</ph>, the value is <ph id=\"ph3\">&lt;xref:System.ComponentModel.RunInstallerAttribute.No&gt;</ph>.","pos":[215,380],"source":" For a property marked with the <xref:System.ComponentModel.RunInstallerAttribute> set to `false`, the value is <xref:System.ComponentModel.RunInstallerAttribute.No>."},{"content":"Therefore, when you want to check the value of this attribute in your code, you must specify the attribute as <ph id=\"ph1\">&lt;xref:System.ComponentModel.RunInstallerAttribute.Yes?displayProperty=fullName&gt;</ph> or <ph id=\"ph2\">&lt;xref:System.ComponentModel.RunInstallerAttribute.No?displayProperty=fullName&gt;</ph>.","pos":[381,653],"source":" Therefore, when you want to check the value of this attribute in your code, you must specify the attribute as <xref:System.ComponentModel.RunInstallerAttribute.Yes?displayProperty=fullName> or <xref:System.ComponentModel.RunInstallerAttribute.No?displayProperty=fullName>."}]}]},{"pos":[1092,1203],"content":"For more information, see <bpt id=\"p1\">[</bpt>Attributes<ept id=\"p1\">](http://msdn.microsoft.com/library/30386922-1e00-4602-9ebf-526b271a8b87)</ept>.","source":"For more information, see [Attributes](http://msdn.microsoft.com/library/30386922-1e00-4602-9ebf-526b271a8b87)."}],"pos":[1179,2390],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.ComponentModel.RunInstallerAttribute\"></xref> class.","nodes":[{"pos":[0,105],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.RunInstallerAttribute\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.ComponentModel.RunInstallerAttribute\"></xref> class."}],"pos":[8785,8891],"yaml":true},{"content":"`true` if an installer should be invoked during installation of an assembly; otherwise, `false`.","nodes":[{"pos":[0,96],"content":"<ph id=\"ph1\">`true`</ph> if an installer should be invoked during installation of an assembly; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if an installer should be invoked during installation of an assembly; otherwise, `false`."}],"pos":[9049,9148],"yaml":true},{"content":"Specifies the default visiblity, which is <xref href=\"System.ComponentModel.RunInstallerAttribute.No\"></xref>. This `static` field is read-only.","nodes":[{"pos":[0,144],"content":"Specifies the default visiblity, which is <xref href=\"System.ComponentModel.RunInstallerAttribute.No\"></xref>. This `static` field is read-only.","nodes":[{"content":"Specifies the default visiblity, which is <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.RunInstallerAttribute.No\"&gt;&lt;/xref&gt;</ph>.","pos":[0,110],"source":"Specifies the default visiblity, which is <xref href=\"System.ComponentModel.RunInstallerAttribute.No\"></xref>."},{"content":"This <ph id=\"ph1\">`static`</ph> field is read-only.","pos":[111,144],"source":" This `static` field is read-only."}]}],"pos":[10426,10571],"yaml":true},{"content":"When you mark a property with this value, this attribute is set to the constant member <xref:System.ComponentModel.RunInstallerAttribute.No>. Therefore, when you want to check whether the attribute is set to this value in your code, you must specify the attribute as <xref:System.ComponentModel.RunInstallerAttribute?displayProperty=fullName>.","nodes":[{"pos":[0,343],"content":"When you mark a property with this value, this attribute is set to the constant member <xref:System.ComponentModel.RunInstallerAttribute.No>. Therefore, when you want to check whether the attribute is set to this value in your code, you must specify the attribute as <xref:System.ComponentModel.RunInstallerAttribute?displayProperty=fullName>.","nodes":[{"content":"When you mark a property with this value, this attribute is set to the constant member <xref:System.ComponentModel.RunInstallerAttribute.No>. Therefore, when you want to check whether the attribute is set to this value in your code, you must specify the attribute as <xref:System.ComponentModel.RunInstallerAttribute?displayProperty=fullName>.","pos":[0,343],"nodes":[{"content":"When you mark a property with this value, this attribute is set to the constant member <ph id=\"ph1\">&lt;xref:System.ComponentModel.RunInstallerAttribute.No&gt;</ph>.","pos":[0,141],"source":"When you mark a property with this value, this attribute is set to the constant member <xref:System.ComponentModel.RunInstallerAttribute.No>."},{"content":"Therefore, when you want to check whether the attribute is set to this value in your code, you must specify the attribute as <ph id=\"ph1\">&lt;xref:System.ComponentModel.RunInstallerAttribute?displayProperty=fullName&gt;</ph>.","pos":[142,343],"source":" Therefore, when you want to check whether the attribute is set to this value in your code, you must specify the attribute as <xref:System.ComponentModel.RunInstallerAttribute?displayProperty=fullName>."}]}]}],"pos":[10582,10926],"yaml":true,"extradata":"MT"},{"content":"Determines whether the value of the specified <xref href=\"System.ComponentModel.RunInstallerAttribute\"></xref> is equivalent to the current <xref href=\"System.ComponentModel.RunInstallerAttribute\"></xref>.","nodes":[{"pos":[0,205],"content":"Determines whether the value of the specified <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.RunInstallerAttribute\"&gt;&lt;/xref&gt;</ph> is equivalent to the current <ph id=\"ph2\">&lt;xref href=\"System.ComponentModel.RunInstallerAttribute\"&gt;&lt;/xref&gt;</ph>.","source":"Determines whether the value of the specified <xref href=\"System.ComponentModel.RunInstallerAttribute\"></xref> is equivalent to the current <xref href=\"System.ComponentModel.RunInstallerAttribute\"></xref>."}],"pos":[12394,12600],"yaml":true},{"content":"The object to compare.","nodes":[{"pos":[0,22],"content":"The object to compare.","nodes":[{"content":"The object to compare.","pos":[0,22]}]}],"pos":[12740,12763],"yaml":true},{"content":"`true` if the specified <xref href=\"System.ComponentModel.RunInstallerAttribute\"></xref> is equal to the current <xref href=\"System.ComponentModel.RunInstallerAttribute\"></xref>; otherwise, `false`.","nodes":[{"pos":[0,198],"content":"<ph id=\"ph1\">`true`</ph> if the specified <ph id=\"ph2\">&lt;xref href=\"System.ComponentModel.RunInstallerAttribute\"&gt;&lt;/xref&gt;</ph> is equal to the current <ph id=\"ph3\">&lt;xref href=\"System.ComponentModel.RunInstallerAttribute\"&gt;&lt;/xref&gt;</ph>; otherwise, <ph id=\"ph4\">`false`</ph>.","source":"`true` if the specified <xref href=\"System.ComponentModel.RunInstallerAttribute\"></xref> is equal to the current <xref href=\"System.ComponentModel.RunInstallerAttribute\"></xref>; otherwise, `false`."}],"pos":[12821,13022],"yaml":true},{"content":"Generates a hash code for the current <xref href=\"System.ComponentModel.RunInstallerAttribute\"></xref>.","nodes":[{"pos":[0,103],"content":"Generates a hash code for the current <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.RunInstallerAttribute\"&gt;&lt;/xref&gt;</ph>.","source":"Generates a hash code for the current <xref href=\"System.ComponentModel.RunInstallerAttribute\"></xref>."}],"pos":[14332,14436],"yaml":true},{"content":"A hash code for the current <xref href=\"System.ComponentModel.RunInstallerAttribute\"></xref>.","nodes":[{"pos":[0,93],"content":"A hash code for the current <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.RunInstallerAttribute\"&gt;&lt;/xref&gt;</ph>.","source":"A hash code for the current <xref href=\"System.ComponentModel.RunInstallerAttribute\"></xref>."}],"pos":[14570,14664],"yaml":true},{"content":"Determines if this attribute is the default.","nodes":[{"pos":[0,44],"content":"Determines if this attribute is the default.","nodes":[{"content":"Determines if this attribute is the default.","pos":[0,44]}]}],"pos":[16021,16066],"yaml":true},{"content":"`true` if the attribute is the default value for this attribute class; otherwise, `false`.","nodes":[{"pos":[0,90],"content":"<ph id=\"ph1\">`true`</ph> if the attribute is the default value for this attribute class; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the attribute is the default value for this attribute class; otherwise, `false`."}],"pos":[16210,16303],"yaml":true},{"content":"Specifies that the Visual Studio Custom Action Installer or the [Installutil.exe (Installer Tool)](~/docs/framework/tools/installutil-exe-installer-tool.md) should not be invoked when the assembly is installed. This `static` field is read-only.","nodes":[{"pos":[0,244],"content":"Specifies that the Visual Studio Custom Action Installer or the [Installutil.exe (Installer Tool)](~/docs/framework/tools/installutil-exe-installer-tool.md) should not be invoked when the assembly is installed. This `static` field is read-only.","nodes":[{"content":"Specifies that the Visual Studio Custom Action Installer or the <bpt id=\"p1\">[</bpt>Installutil.exe (Installer Tool)<ept id=\"p1\">](~/docs/framework/tools/installutil-exe-installer-tool.md)</ept> should not be invoked when the assembly is installed.","pos":[0,210],"source":"Specifies that the Visual Studio Custom Action Installer or the [Installutil.exe (Installer Tool)](~/docs/framework/tools/installutil-exe-installer-tool.md) should not be invoked when the assembly is installed."},{"content":"This <ph id=\"ph1\">`static`</ph> field is read-only.","pos":[211,244],"source":" This `static` field is read-only."}]}],"pos":[17564,17809],"yaml":true},{"content":"This field is the default setting for this attribute.  \n  \n When you mark a property with the <xref:System.ComponentModel.RunInstallerAttribute> set to `false`, the value of this attribute is set to the constant member <xref:System.ComponentModel.RunInstallerAttribute.No>. Therefore, when you want to check whether the attribute is set to this value in your code, you must specify the attribute as <xref:System.ComponentModel.RunInstallerAttribute.No?displayProperty=fullName>.","nodes":[{"pos":[0,53],"content":"This field is the default setting for this attribute.","nodes":[{"content":"This field is the default setting for this attribute.","pos":[0,53]}]},{"pos":[60,478],"content":"When you mark a property with the <xref:System.ComponentModel.RunInstallerAttribute> set to `false`, the value of this attribute is set to the constant member <xref:System.ComponentModel.RunInstallerAttribute.No>. Therefore, when you want to check whether the attribute is set to this value in your code, you must specify the attribute as <xref:System.ComponentModel.RunInstallerAttribute.No?displayProperty=fullName>.","nodes":[{"content":"When you mark a property with the <ph id=\"ph1\">&lt;xref:System.ComponentModel.RunInstallerAttribute&gt;</ph> set to <ph id=\"ph2\">`false`</ph>, the value of this attribute is set to the constant member <ph id=\"ph3\">&lt;xref:System.ComponentModel.RunInstallerAttribute.No&gt;</ph>.","pos":[0,213],"source":"When you mark a property with the <xref:System.ComponentModel.RunInstallerAttribute> set to `false`, the value of this attribute is set to the constant member <xref:System.ComponentModel.RunInstallerAttribute.No>."},{"content":"Therefore, when you want to check whether the attribute is set to this value in your code, you must specify the attribute as <ph id=\"ph1\">&lt;xref:System.ComponentModel.RunInstallerAttribute.No?displayProperty=fullName&gt;</ph>.","pos":[214,418],"source":" Therefore, when you want to check whether the attribute is set to this value in your code, you must specify the attribute as <xref:System.ComponentModel.RunInstallerAttribute.No?displayProperty=fullName>."}]}],"pos":[17820,18303],"yaml":true,"extradata":"MT"},{"content":"Gets a value indicating whether an installer should be invoked during installation of an assembly.","nodes":[{"pos":[0,98],"content":"Gets a value indicating whether an installer should be invoked during installation of an assembly.","nodes":[{"content":"Gets a value indicating whether an installer should be invoked during installation of an assembly.","pos":[0,98]}]}],"pos":[19735,19834],"yaml":true},{"content":"`true` if an installer should be invoked during installation of an assembly; otherwise, `false`.","nodes":[{"pos":[0,96],"content":"<ph id=\"ph1\">`true`</ph> if an installer should be invoked during installation of an assembly; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if an installer should be invoked during installation of an assembly; otherwise, `false`."}],"pos":[19949,20048],"yaml":true},{"content":"Specifies that the Visual Studio Custom Action Installer or the [Installutil.exe (Installer Tool)](~/docs/framework/tools/installutil-exe-installer-tool.md) should be invoked when the assembly is installed. This `static` field is read-only.","nodes":[{"pos":[0,240],"content":"Specifies that the Visual Studio Custom Action Installer or the [Installutil.exe (Installer Tool)](~/docs/framework/tools/installutil-exe-installer-tool.md) should be invoked when the assembly is installed. This `static` field is read-only.","nodes":[{"content":"Specifies that the Visual Studio Custom Action Installer or the <bpt id=\"p1\">[</bpt>Installutil.exe (Installer Tool)<ept id=\"p1\">](~/docs/framework/tools/installutil-exe-installer-tool.md)</ept> should be invoked when the assembly is installed.","pos":[0,206],"source":"Specifies that the Visual Studio Custom Action Installer or the [Installutil.exe (Installer Tool)](~/docs/framework/tools/installutil-exe-installer-tool.md) should be invoked when the assembly is installed."},{"content":"This <ph id=\"ph1\">`static`</ph> field is read-only.","pos":[207,240],"source":" This `static` field is read-only."}]}],"pos":[21309,21550],"yaml":true},{"content":"When you mark a property with the <xref:System.ComponentModel.RunInstallerAttribute> set to `true`, the value of this attribute is set to the constant member <xref:System.ComponentModel.RunInstallerAttribute.Yes>. Therefore, when you want to check whether the attribute is set to this value in your code, you must specify the attribute as <xref:System.ComponentModel.RunInstallerAttribute.Yes?displayProperty=fullName>.","nodes":[{"pos":[0,419],"content":"When you mark a property with the <xref:System.ComponentModel.RunInstallerAttribute> set to `true`, the value of this attribute is set to the constant member <xref:System.ComponentModel.RunInstallerAttribute.Yes>. Therefore, when you want to check whether the attribute is set to this value in your code, you must specify the attribute as <xref:System.ComponentModel.RunInstallerAttribute.Yes?displayProperty=fullName>.","nodes":[{"content":"When you mark a property with the <ph id=\"ph1\">&lt;xref:System.ComponentModel.RunInstallerAttribute&gt;</ph> set to <ph id=\"ph2\">`true`</ph>, the value of this attribute is set to the constant member <ph id=\"ph3\">&lt;xref:System.ComponentModel.RunInstallerAttribute.Yes&gt;</ph>.","pos":[0,213],"source":"When you mark a property with the <xref:System.ComponentModel.RunInstallerAttribute> set to `true`, the value of this attribute is set to the constant member <xref:System.ComponentModel.RunInstallerAttribute.Yes>."},{"content":"Therefore, when you want to check whether the attribute is set to this value in your code, you must specify the attribute as <ph id=\"ph1\">&lt;xref:System.ComponentModel.RunInstallerAttribute.Yes?displayProperty=fullName&gt;</ph>.","pos":[214,419],"source":" Therefore, when you want to check whether the attribute is set to this value in your code, you must specify the attribute as <xref:System.ComponentModel.RunInstallerAttribute.Yes?displayProperty=fullName>."}]}],"pos":[21561,21981],"yaml":true,"extradata":"MT"}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.ComponentModel.RunInstallerAttribute\n  commentId: T:System.ComponentModel.RunInstallerAttribute\n  id: RunInstallerAttribute\n  children:\n  - System.ComponentModel.RunInstallerAttribute.#ctor(System.Boolean)\n  - System.ComponentModel.RunInstallerAttribute.Default\n  - System.ComponentModel.RunInstallerAttribute.Equals(System.Object)\n  - System.ComponentModel.RunInstallerAttribute.GetHashCode\n  - System.ComponentModel.RunInstallerAttribute.IsDefaultAttribute\n  - System.ComponentModel.RunInstallerAttribute.No\n  - System.ComponentModel.RunInstallerAttribute.RunInstaller\n  - System.ComponentModel.RunInstallerAttribute.Yes\n  langs:\n  - csharp\n  name: RunInstallerAttribute\n  nameWithType: RunInstallerAttribute\n  fullName: System.ComponentModel.RunInstallerAttribute\n  type: Class\n  assemblies:\n  - System\n  - netstandard\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel\n  summary: Specifies whether the Visual Studio Custom Action Installer or the [Installutil.exe (Installer Tool)](~/docs/framework/tools/installutil-exe-installer-tool.md) should be invoked when the assembly is installed.\n  remarks: \"If a class that inherits from <xref:System.Configuration.Install.Installer> is marked with the <xref:System.ComponentModel.RunInstallerAttribute> set to `true`, Visual Studio's Custom Action Installer or the InstallUtil.exe will be invoked when the assembly is installed. Members marked with the <xref:System.ComponentModel.RunInstallerAttribute> set to `false` will not invoke an installer. The default is `true`.  \\n  \\n> [!NOTE]\\n>  When you mark a property with the <xref:System.ComponentModel.RunInstallerAttribute> set to `true`, the value of this attribute is set to the constant member <xref:System.ComponentModel.RunInstallerAttribute.Yes>. For a property marked with the <xref:System.ComponentModel.RunInstallerAttribute> set to `false`, the value is <xref:System.ComponentModel.RunInstallerAttribute.No>. Therefore, when you want to check the value of this attribute in your code, you must specify the attribute as <xref:System.ComponentModel.RunInstallerAttribute.Yes?displayProperty=fullName> or <xref:System.ComponentModel.RunInstallerAttribute.No?displayProperty=fullName>.  \\n  \\n For more information, see [Attributes](http://msdn.microsoft.com/library/30386922-1e00-4602-9ebf-526b271a8b87).\"\n  example:\n  - \"The following example specifies that the installer should be run for `MyProjectInstaller`.  \\n  \\n [!code-cpp[Classic RunInstallerAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic RunInstallerAttribute Example/CPP/source.cpp#1)]\\n [!code-csharp[Classic RunInstallerAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic RunInstallerAttribute Example/CS/source.cs#1)]\\n [!code-vb[Classic RunInstallerAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic RunInstallerAttribute Example/VB/source.vb#1)]  \\n  \\n The next example creates an instance of `MyProjectInstaller`. Then it gets the attributes for the class, extracts the <xref:System.ComponentModel.RunInstallerAttribute>, and prints whether to run the installer.  \\n  \\n [!code-cpp[Classic RunInstallerAttribute Example#2](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic RunInstallerAttribute Example/CPP/source.cpp#2)]\\n [!code-csharp[Classic RunInstallerAttribute Example#2](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic RunInstallerAttribute Example/CS/source.cs#2)]\\n [!code-vb[Classic RunInstallerAttribute Example#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic RunInstallerAttribute Example/VB/source.vb#2)]\"\n  syntax:\n    content: >-\n      [System.AttributeUsage(System.AttributeTargets.Class)]\n\n      public class RunInstallerAttribute : Attribute\n  inheritance:\n  - System.Object\n  - System.Attribute\n  implements: []\n  inheritedMembers:\n  - System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type)\n  - System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)\n  - System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type)\n  - System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type)\n  - System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo)\n  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)\n  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Module)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo)\n  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type)\n  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  - System.Attribute.IsDefined(System.Reflection.Assembly,System.Type)\n  - System.Attribute.IsDefined(System.Reflection.Assembly,System.Type,System.Boolean)\n  - System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type)\n  - System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  - System.Attribute.IsDefined(System.Reflection.Module,System.Type)\n  - System.Attribute.IsDefined(System.Reflection.Module,System.Type,System.Boolean)\n  - System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type)\n  - System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  - System.Attribute.Match(System.Object)\n  - System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)\n  - System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)\n  - System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)\n  - System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)\n  - System.Attribute.TypeId\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  attributes:\n  - type: System.AttributeUsageAttribute\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/RunInstallerAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.RunInstallerAttribute.#ctor(System.Boolean)\n  commentId: M:System.ComponentModel.RunInstallerAttribute.#ctor(System.Boolean)\n  id: '#ctor(System.Boolean)'\n  parent: System.ComponentModel.RunInstallerAttribute\n  langs:\n  - csharp\n  name: RunInstallerAttribute(Boolean)\n  nameWithType: RunInstallerAttribute.RunInstallerAttribute(Boolean)\n  fullName: RunInstallerAttribute.RunInstallerAttribute(Boolean)\n  type: Constructor\n  assemblies:\n  - System\n  - netstandard\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel\n  summary: Initializes a new instance of the <xref href=\"System.ComponentModel.RunInstallerAttribute\"></xref> class.\n  syntax:\n    content: public RunInstallerAttribute (bool runInstaller);\n    parameters:\n    - id: runInstaller\n      type: System.Boolean\n      description: '`true` if an installer should be invoked during installation of an assembly; otherwise, `false`.'\n  overload: System.ComponentModel.RunInstallerAttribute.#ctor*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/RunInstallerAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.RunInstallerAttribute.Default\n  commentId: F:System.ComponentModel.RunInstallerAttribute.Default\n  id: Default\n  parent: System.ComponentModel.RunInstallerAttribute\n  langs:\n  - csharp\n  name: Default\n  nameWithType: RunInstallerAttribute.Default\n  fullName: RunInstallerAttribute.Default\n  type: Field\n  assemblies:\n  - System\n  - netstandard\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel\n  summary: Specifies the default visiblity, which is <xref href=\"System.ComponentModel.RunInstallerAttribute.No\"></xref>. This `static` field is read-only.\n  remarks: When you mark a property with this value, this attribute is set to the constant member <xref:System.ComponentModel.RunInstallerAttribute.No>. Therefore, when you want to check whether the attribute is set to this value in your code, you must specify the attribute as <xref:System.ComponentModel.RunInstallerAttribute?displayProperty=fullName>.\n  syntax:\n    content: public static readonly System.ComponentModel.RunInstallerAttribute Default;\n    return:\n      type: System.ComponentModel.RunInstallerAttribute\n      description: ''\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/RunInstallerAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.RunInstallerAttribute.Equals(System.Object)\n  commentId: M:System.ComponentModel.RunInstallerAttribute.Equals(System.Object)\n  id: Equals(System.Object)\n  parent: System.ComponentModel.RunInstallerAttribute\n  langs:\n  - csharp\n  name: Equals(Object)\n  nameWithType: RunInstallerAttribute.Equals(Object)\n  fullName: RunInstallerAttribute.Equals(Object)\n  type: Method\n  assemblies:\n  - System\n  - netstandard\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel\n  summary: Determines whether the value of the specified <xref href=\"System.ComponentModel.RunInstallerAttribute\"></xref> is equivalent to the current <xref href=\"System.ComponentModel.RunInstallerAttribute\"></xref>.\n  syntax:\n    content: public override bool Equals (object obj);\n    parameters:\n    - id: obj\n      type: System.Object\n      description: The object to compare.\n    return:\n      type: System.Boolean\n      description: '`true` if the specified <xref href=\"System.ComponentModel.RunInstallerAttribute\"></xref> is equal to the current <xref href=\"System.ComponentModel.RunInstallerAttribute\"></xref>; otherwise, `false`.'\n  overload: System.ComponentModel.RunInstallerAttribute.Equals*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/RunInstallerAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.RunInstallerAttribute.GetHashCode\n  commentId: M:System.ComponentModel.RunInstallerAttribute.GetHashCode\n  id: GetHashCode\n  parent: System.ComponentModel.RunInstallerAttribute\n  langs:\n  - csharp\n  name: GetHashCode()\n  nameWithType: RunInstallerAttribute.GetHashCode()\n  fullName: RunInstallerAttribute.GetHashCode()\n  type: Method\n  assemblies:\n  - System\n  - netstandard\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel\n  summary: Generates a hash code for the current <xref href=\"System.ComponentModel.RunInstallerAttribute\"></xref>.\n  syntax:\n    content: public override int GetHashCode ();\n    parameters: []\n    return:\n      type: System.Int32\n      description: A hash code for the current <xref href=\"System.ComponentModel.RunInstallerAttribute\"></xref>.\n  overload: System.ComponentModel.RunInstallerAttribute.GetHashCode*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/RunInstallerAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.RunInstallerAttribute.IsDefaultAttribute\n  commentId: M:System.ComponentModel.RunInstallerAttribute.IsDefaultAttribute\n  id: IsDefaultAttribute\n  parent: System.ComponentModel.RunInstallerAttribute\n  langs:\n  - csharp\n  name: IsDefaultAttribute()\n  nameWithType: RunInstallerAttribute.IsDefaultAttribute()\n  fullName: RunInstallerAttribute.IsDefaultAttribute()\n  type: Method\n  assemblies:\n  - System\n  - netstandard\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel\n  summary: Determines if this attribute is the default.\n  syntax:\n    content: public override bool IsDefaultAttribute ();\n    parameters: []\n    return:\n      type: System.Boolean\n      description: '`true` if the attribute is the default value for this attribute class; otherwise, `false`.'\n  overload: System.ComponentModel.RunInstallerAttribute.IsDefaultAttribute*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/RunInstallerAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.RunInstallerAttribute.No\n  commentId: F:System.ComponentModel.RunInstallerAttribute.No\n  id: No\n  parent: System.ComponentModel.RunInstallerAttribute\n  langs:\n  - csharp\n  name: No\n  nameWithType: RunInstallerAttribute.No\n  fullName: RunInstallerAttribute.No\n  type: Field\n  assemblies:\n  - System\n  - netstandard\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel\n  summary: Specifies that the Visual Studio Custom Action Installer or the [Installutil.exe (Installer Tool)](~/docs/framework/tools/installutil-exe-installer-tool.md) should not be invoked when the assembly is installed. This `static` field is read-only.\n  remarks: \"This field is the default setting for this attribute.  \\n  \\n When you mark a property with the <xref:System.ComponentModel.RunInstallerAttribute> set to `false`, the value of this attribute is set to the constant member <xref:System.ComponentModel.RunInstallerAttribute.No>. Therefore, when you want to check whether the attribute is set to this value in your code, you must specify the attribute as <xref:System.ComponentModel.RunInstallerAttribute.No?displayProperty=fullName>.\"\n  syntax:\n    content: public static readonly System.ComponentModel.RunInstallerAttribute No;\n    return:\n      type: System.ComponentModel.RunInstallerAttribute\n      description: ''\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/RunInstallerAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.RunInstallerAttribute.RunInstaller\n  commentId: P:System.ComponentModel.RunInstallerAttribute.RunInstaller\n  id: RunInstaller\n  parent: System.ComponentModel.RunInstallerAttribute\n  langs:\n  - csharp\n  name: RunInstaller\n  nameWithType: RunInstallerAttribute.RunInstaller\n  fullName: RunInstallerAttribute.RunInstaller\n  type: Property\n  assemblies:\n  - System\n  - netstandard\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel\n  summary: Gets a value indicating whether an installer should be invoked during installation of an assembly.\n  syntax:\n    content: public bool RunInstaller { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if an installer should be invoked during installation of an assembly; otherwise, `false`.'\n  overload: System.ComponentModel.RunInstallerAttribute.RunInstaller*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/RunInstallerAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.RunInstallerAttribute.Yes\n  commentId: F:System.ComponentModel.RunInstallerAttribute.Yes\n  id: Yes\n  parent: System.ComponentModel.RunInstallerAttribute\n  langs:\n  - csharp\n  name: Yes\n  nameWithType: RunInstallerAttribute.Yes\n  fullName: RunInstallerAttribute.Yes\n  type: Field\n  assemblies:\n  - System\n  - netstandard\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel\n  summary: Specifies that the Visual Studio Custom Action Installer or the [Installutil.exe (Installer Tool)](~/docs/framework/tools/installutil-exe-installer-tool.md) should be invoked when the assembly is installed. This `static` field is read-only.\n  remarks: When you mark a property with the <xref:System.ComponentModel.RunInstallerAttribute> set to `true`, the value of this attribute is set to the constant member <xref:System.ComponentModel.RunInstallerAttribute.Yes>. Therefore, when you want to check whether the attribute is set to this value in your code, you must specify the attribute as <xref:System.ComponentModel.RunInstallerAttribute.Yes?displayProperty=fullName>.\n  syntax:\n    content: public static readonly System.ComponentModel.RunInstallerAttribute Yes;\n    return:\n      type: System.ComponentModel.RunInstallerAttribute\n      description: ''\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/RunInstallerAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\nreferences:\n- uid: System.Attribute\n  parent: System\n  isExternal: false\n  name: Attribute\n  nameWithType: Attribute\n  fullName: System.Attribute\n- uid: System.ComponentModel.RunInstallerAttribute.#ctor(System.Boolean)\n  parent: System.ComponentModel.RunInstallerAttribute\n  isExternal: false\n  name: RunInstallerAttribute(Boolean)\n  nameWithType: RunInstallerAttribute.RunInstallerAttribute(Boolean)\n  fullName: RunInstallerAttribute.RunInstallerAttribute(Boolean)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.ComponentModel.RunInstallerAttribute.Default\n  parent: System.ComponentModel.RunInstallerAttribute\n  isExternal: false\n  name: Default\n  nameWithType: RunInstallerAttribute.Default\n  fullName: RunInstallerAttribute.Default\n- uid: System.ComponentModel.RunInstallerAttribute\n  parent: System.ComponentModel\n  isExternal: false\n  name: RunInstallerAttribute\n  nameWithType: RunInstallerAttribute\n  fullName: System.ComponentModel.RunInstallerAttribute\n- uid: System.ComponentModel.RunInstallerAttribute.Equals(System.Object)\n  parent: System.ComponentModel.RunInstallerAttribute\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: RunInstallerAttribute.Equals(Object)\n  fullName: RunInstallerAttribute.Equals(Object)\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.ComponentModel.RunInstallerAttribute.GetHashCode\n  parent: System.ComponentModel.RunInstallerAttribute\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: RunInstallerAttribute.GetHashCode()\n  fullName: RunInstallerAttribute.GetHashCode()\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.ComponentModel.RunInstallerAttribute.IsDefaultAttribute\n  parent: System.ComponentModel.RunInstallerAttribute\n  isExternal: false\n  name: IsDefaultAttribute()\n  nameWithType: RunInstallerAttribute.IsDefaultAttribute()\n  fullName: RunInstallerAttribute.IsDefaultAttribute()\n- uid: System.ComponentModel.RunInstallerAttribute.No\n  parent: System.ComponentModel.RunInstallerAttribute\n  isExternal: false\n  name: No\n  nameWithType: RunInstallerAttribute.No\n  fullName: RunInstallerAttribute.No\n- uid: System.ComponentModel.RunInstallerAttribute.RunInstaller\n  parent: System.ComponentModel.RunInstallerAttribute\n  isExternal: false\n  name: RunInstaller\n  nameWithType: RunInstallerAttribute.RunInstaller\n  fullName: RunInstallerAttribute.RunInstaller\n- uid: System.ComponentModel.RunInstallerAttribute.Yes\n  parent: System.ComponentModel.RunInstallerAttribute\n  isExternal: false\n  name: Yes\n  nameWithType: RunInstallerAttribute.Yes\n  fullName: RunInstallerAttribute.Yes\n- uid: System.ComponentModel.RunInstallerAttribute.#ctor*\n  parent: System.ComponentModel.RunInstallerAttribute\n  isExternal: false\n  name: RunInstallerAttribute\n  nameWithType: RunInstallerAttribute.RunInstallerAttribute\n  fullName: RunInstallerAttribute.RunInstallerAttribute\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/RunInstallerAttribute.xml\n- uid: System.ComponentModel.RunInstallerAttribute.Equals*\n  parent: System.ComponentModel.RunInstallerAttribute\n  isExternal: false\n  name: Equals\n  nameWithType: RunInstallerAttribute.Equals\n  fullName: RunInstallerAttribute.Equals\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/RunInstallerAttribute.xml\n- uid: System.ComponentModel.RunInstallerAttribute.GetHashCode*\n  parent: System.ComponentModel.RunInstallerAttribute\n  isExternal: false\n  name: GetHashCode\n  nameWithType: RunInstallerAttribute.GetHashCode\n  fullName: RunInstallerAttribute.GetHashCode\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/RunInstallerAttribute.xml\n- uid: System.ComponentModel.RunInstallerAttribute.IsDefaultAttribute*\n  parent: System.ComponentModel.RunInstallerAttribute\n  isExternal: false\n  name: IsDefaultAttribute\n  nameWithType: RunInstallerAttribute.IsDefaultAttribute\n  fullName: RunInstallerAttribute.IsDefaultAttribute\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/RunInstallerAttribute.xml\n- uid: System.ComponentModel.RunInstallerAttribute.RunInstaller*\n  parent: System.ComponentModel.RunInstallerAttribute\n  isExternal: false\n  name: RunInstaller\n  nameWithType: RunInstallerAttribute.RunInstaller\n  fullName: RunInstallerAttribute.RunInstaller\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/RunInstallerAttribute.xml\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(ParameterInfo, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttribute(ParameterInfo, Type, Boolean)\n  fullName: Attribute.GetCustomAttribute(ParameterInfo, Type, Boolean)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(MemberInfo, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttribute(MemberInfo, Type, Boolean)\n  fullName: Attribute.GetCustomAttribute(MemberInfo, Type, Boolean)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(Assembly, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttribute(Assembly, Type, Boolean)\n  fullName: Attribute.GetCustomAttribute(Assembly, Type, Boolean)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(Module, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttribute(Module, Type, Boolean)\n  fullName: Attribute.GetCustomAttribute(Module, Type, Boolean)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(Module, Type)\n  nameWithType: Attribute.GetCustomAttribute(Module, Type)\n  fullName: Attribute.GetCustomAttribute(Module, Type)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(MemberInfo, Type)\n  nameWithType: Attribute.GetCustomAttribute(MemberInfo, Type)\n  fullName: Attribute.GetCustomAttribute(MemberInfo, Type)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(Assembly, Type)\n  nameWithType: Attribute.GetCustomAttribute(Assembly, Type)\n  fullName: Attribute.GetCustomAttribute(Assembly, Type)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(ParameterInfo, Type)\n  nameWithType: Attribute.GetCustomAttribute(ParameterInfo, Type)\n  fullName: Attribute.GetCustomAttribute(ParameterInfo, Type)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Module, Type)\n  nameWithType: Attribute.GetCustomAttributes(Module, Type)\n  fullName: Attribute.GetCustomAttributes(Module, Type)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(ParameterInfo, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(ParameterInfo, Type, Boolean)\n  fullName: Attribute.GetCustomAttributes(ParameterInfo, Type, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Module, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(Module, Type, Boolean)\n  fullName: Attribute.GetCustomAttributes(Module, Type, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(MemberInfo, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(MemberInfo, Type, Boolean)\n  fullName: Attribute.GetCustomAttributes(MemberInfo, Type, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Assembly, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(Assembly, Type, Boolean)\n  fullName: Attribute.GetCustomAttributes(Assembly, Type, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(ParameterInfo, Type)\n  nameWithType: Attribute.GetCustomAttributes(ParameterInfo, Type)\n  fullName: Attribute.GetCustomAttributes(ParameterInfo, Type)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Module, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(Module, Boolean)\n  fullName: Attribute.GetCustomAttributes(Module, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(ParameterInfo, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(ParameterInfo, Boolean)\n  fullName: Attribute.GetCustomAttributes(ParameterInfo, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(MemberInfo, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(MemberInfo, Boolean)\n  fullName: Attribute.GetCustomAttributes(MemberInfo, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Assembly, Type)\n  nameWithType: Attribute.GetCustomAttributes(Assembly, Type)\n  fullName: Attribute.GetCustomAttributes(Assembly, Type)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Assembly, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(Assembly, Boolean)\n  fullName: Attribute.GetCustomAttributes(Assembly, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(ParameterInfo)\n  nameWithType: Attribute.GetCustomAttributes(ParameterInfo)\n  fullName: Attribute.GetCustomAttributes(ParameterInfo)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Module)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Module)\n  nameWithType: Attribute.GetCustomAttributes(Module)\n  fullName: Attribute.GetCustomAttributes(Module)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(MemberInfo)\n  nameWithType: Attribute.GetCustomAttributes(MemberInfo)\n  fullName: Attribute.GetCustomAttributes(MemberInfo)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Assembly)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Assembly)\n  nameWithType: Attribute.GetCustomAttributes(Assembly)\n  fullName: Attribute.GetCustomAttributes(Assembly)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(MemberInfo, Type)\n  nameWithType: Attribute.GetCustomAttributes(MemberInfo, Type)\n  fullName: Attribute.GetCustomAttributes(MemberInfo, Type)\n- uid: System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(ParameterInfo, Type, Boolean)\n  nameWithType: Attribute.IsDefined(ParameterInfo, Type, Boolean)\n  fullName: Attribute.IsDefined(ParameterInfo, Type, Boolean)\n- uid: System.Attribute.IsDefined(System.Reflection.Module,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(Module, Type, Boolean)\n  nameWithType: Attribute.IsDefined(Module, Type, Boolean)\n  fullName: Attribute.IsDefined(Module, Type, Boolean)\n- uid: System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(MemberInfo, Type, Boolean)\n  nameWithType: Attribute.IsDefined(MemberInfo, Type, Boolean)\n  fullName: Attribute.IsDefined(MemberInfo, Type, Boolean)\n- uid: System.Attribute.IsDefined(System.Reflection.Assembly,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(Assembly, Type, Boolean)\n  nameWithType: Attribute.IsDefined(Assembly, Type, Boolean)\n  fullName: Attribute.IsDefined(Assembly, Type, Boolean)\n- uid: System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(MemberInfo, Type)\n  nameWithType: Attribute.IsDefined(MemberInfo, Type)\n  fullName: Attribute.IsDefined(MemberInfo, Type)\n- uid: System.Attribute.IsDefined(System.Reflection.Module,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(Module, Type)\n  nameWithType: Attribute.IsDefined(Module, Type)\n  fullName: Attribute.IsDefined(Module, Type)\n- uid: System.Attribute.IsDefined(System.Reflection.Assembly,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(Assembly, Type)\n  nameWithType: Attribute.IsDefined(Assembly, Type)\n  fullName: Attribute.IsDefined(Assembly, Type)\n- uid: System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(ParameterInfo, Type)\n  nameWithType: Attribute.IsDefined(ParameterInfo, Type)\n  fullName: Attribute.IsDefined(ParameterInfo, Type)\n- uid: System.Attribute.Match(System.Object)\n  parent: System.Attribute\n  isExternal: false\n  name: Match(Object)\n  nameWithType: Attribute.Match(Object)\n  fullName: Attribute.Match(Object)\n- uid: System.Attribute.TypeId\n  parent: System.Attribute\n  isExternal: false\n  name: TypeId\n  nameWithType: Attribute.TypeId\n  fullName: Attribute.TypeId\n- uid: System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)\n  parent: System.Attribute\n  isExternal: false\n  name: _Attribute.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)\n  nameWithType: Attribute._Attribute.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)\n  fullName: Attribute._Attribute.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)\n- uid: System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)\n  parent: System.Attribute\n  isExternal: false\n  name: _Attribute.GetTypeInfo(UInt32, UInt32, IntPtr)\n  nameWithType: Attribute._Attribute.GetTypeInfo(UInt32, UInt32, IntPtr)\n  fullName: Attribute._Attribute.GetTypeInfo(UInt32, UInt32, IntPtr)\n- uid: System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)\n  parent: System.Attribute\n  isExternal: false\n  name: _Attribute.GetTypeInfoCount(UInt32)\n  nameWithType: Attribute._Attribute.GetTypeInfoCount(UInt32)\n  fullName: Attribute._Attribute.GetTypeInfoCount(UInt32)\n- uid: System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)\n  parent: System.Attribute\n  isExternal: false\n  name: _Attribute.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)\n  nameWithType: Attribute._Attribute.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)\n  fullName: Attribute._Attribute.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)\n"}