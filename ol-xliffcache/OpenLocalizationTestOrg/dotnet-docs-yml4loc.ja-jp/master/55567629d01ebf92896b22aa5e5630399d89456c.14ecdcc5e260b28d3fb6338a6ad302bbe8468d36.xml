{"nodes":[{"content":"Wraps an <xref href=\"System.Workflow.ComponentModel.Activity\"></xref> whose execution is initialized by an event. This class cannot be inherited.","nodes":[{"pos":[0,145],"content":"Wraps an <xref href=\"System.Workflow.ComponentModel.Activity\"></xref> whose execution is initialized by an event. This class cannot be inherited.","nodes":[{"content":"Wraps an <ph id=\"ph1\">&lt;xref href=\"System.Workflow.ComponentModel.Activity\"&gt;&lt;/xref&gt;</ph> whose execution is initialized by an event.","pos":[0,113],"source":"Wraps an <xref href=\"System.Workflow.ComponentModel.Activity\"></xref> whose execution is initialized by an event."},{"content":"This class cannot be inherited.","pos":[114,145]}]}],"pos":[637,783],"yaml":true},{"content":"> [!NOTE]\n>  [!INCLUDE[DeprecatedContent](~/includes/deprecatedcontent-md.md)]  \n  \n It is a <xref:System.Workflow.ComponentModel.CompositeActivity> that is used to handle an event; typically it can be raised from the host or by the runtime in response to a delay timer expiring. <xref:System.Workflow.Activities.EventDrivenActivity> is inherited from <xref:System.Workflow.Activities.SequenceActivity>; therefore, it is a sequence that has the additional restriction that the first activity should be an <xref:System.Workflow.Activities.IEventActivity>.  \n  \n The <xref:System.Workflow.Activities.EventDrivenActivity> is a <xref:System.Workflow.ComponentModel.CompositeActivity>, which means the <xref:System.Workflow.Activities.EventDrivenActivity> can contain other activities. The <xref:System.Workflow.Activities.EventDrivenActivity> is similar to the <xref:System.Workflow.Activities.SequenceActivity> activity, with some additional characteristics.  \n  \n An <xref:System.Workflow.Activities.EventDrivenActivity> must have a parent that is either a <xref:System.Workflow.Activities.ListenActivity>, <xref:System.Workflow.Activities.StateActivity>, or <xref:System.Workflow.Activities.StateMachineWorkflowActivity>.  \n  \n The first child of an <xref:System.Workflow.Activities.EventDrivenActivity> activity must be an activity that inherits from <xref:System.Workflow.Activities.IEventActivity>. All subsequent children can be activities of any type. The <xref:System.Workflow.Activities.IEventActivity> blocks and waits for the pending occurrence of some events, such as starting a timer or the arrival of a message. When the event occurs, the <xref:System.Workflow.Activities.IEventActivity> finishes running and then all subsequent activities are executed.  \n  \n When the <xref:System.Workflow.Activities.StateMachineWorkflowActivity> contains an <xref:System.Workflow.Activities.EventDrivenActivity>, the <xref:System.Workflow.Activities.EventDrivenActivity> has some restrictions:  \n  \n-   The <xref:System.Workflow.Activities.EventDrivenActivity> may contain one, and only one, activity of type <xref:System.Workflow.Activities.IEventActivity>.  \n  \n-   The <xref:System.Workflow.Activities.HandleExternalEventActivity> must be the first child activity. An <xref:System.Workflow.Activities.HandleExternalEventActivity> cannot be in the event handler for a child activity and cannot be a child to the <xref:System.Workflow.Activities.EventDrivenActivity> if the <xref:System.Workflow.Activities.HandleExternalEventActivity> is not the first child.  \n  \n-   As long as the first activity is the <xref:System.Workflow.Activities.HandleExternalEventActivity>, the event handler can contain any activities. If an activity other than <xref:System.Workflow.Activities.HandleExternalEventActivity> is contained in <xref:System.Workflow.Activities.EventDrivenActivity>, that activity cannot have an event handler.  \n  \n For example, an activity that supports event handling can be used inside the <xref:System.Workflow.Activities.EventDrivenActivity> but the activity cannot have event handlers attached to itself.  \n  \n Another example is that the <xref:System.Workflow.Activities.EventDrivenActivity> can contain a <xref:System.Workflow.Activities.ConditionedActivityGroup>, but the <xref:System.Workflow.Activities.ConditionedActivityGroup> itself cannot contain any <xref:System.Workflow.Activities.HandleExternalEventActivity> classes.","nodes":[{"pos":[2,78],"content":"[!NOTE]\n [!INCLUDE[DeprecatedContent](~/includes/deprecatedcontent-md.md)]","leadings":["","> "],"nodes":[]},{"pos":[85,554],"content":"It is a <xref:System.Workflow.ComponentModel.CompositeActivity> that is used to handle an event; typically it can be raised from the host or by the runtime in response to a delay timer expiring. <xref:System.Workflow.Activities.EventDrivenActivity> is inherited from <xref:System.Workflow.Activities.SequenceActivity>; therefore, it is a sequence that has the additional restriction that the first activity should be an <xref:System.Workflow.Activities.IEventActivity>.","nodes":[{"content":"It is a <xref:System.Workflow.ComponentModel.CompositeActivity> that is used to handle an event; typically it can be raised from the host or by the runtime in response to a delay timer expiring. <xref:System.Workflow.Activities.EventDrivenActivity> is inherited from <xref:System.Workflow.Activities.SequenceActivity>; therefore, it is a sequence that has the additional restriction that the first activity should be an <xref:System.Workflow.Activities.IEventActivity>.","pos":[0,469],"nodes":[{"content":"It is a <ph id=\"ph1\">&lt;xref:System.Workflow.ComponentModel.CompositeActivity&gt;</ph> that is used to handle an event; typically it can be raised from the host or by the runtime in response to a delay timer expiring.","pos":[0,194],"source":"It is a <xref:System.Workflow.ComponentModel.CompositeActivity> that is used to handle an event; typically it can be raised from the host or by the runtime in response to a delay timer expiring."},{"content":"<ph id=\"ph1\">&lt;xref:System.Workflow.Activities.EventDrivenActivity&gt;</ph> is inherited from <ph id=\"ph2\">&lt;xref:System.Workflow.Activities.SequenceActivity&gt;</ph>; therefore, it is a sequence that has the additional restriction that the first activity should be an <ph id=\"ph3\">&lt;xref:System.Workflow.Activities.IEventActivity&gt;</ph>.","pos":[195,469],"source":" <xref:System.Workflow.Activities.EventDrivenActivity> is inherited from <xref:System.Workflow.Activities.SequenceActivity>; therefore, it is a sequence that has the additional restriction that the first activity should be an <xref:System.Workflow.Activities.IEventActivity>."}]}]},{"pos":[561,955],"content":"The <xref:System.Workflow.Activities.EventDrivenActivity> is a <xref:System.Workflow.ComponentModel.CompositeActivity>, which means the <xref:System.Workflow.Activities.EventDrivenActivity> can contain other activities. The <xref:System.Workflow.Activities.EventDrivenActivity> is similar to the <xref:System.Workflow.Activities.SequenceActivity> activity, with some additional characteristics.","nodes":[{"content":"The <xref:System.Workflow.Activities.EventDrivenActivity> is a <xref:System.Workflow.ComponentModel.CompositeActivity>, which means the <xref:System.Workflow.Activities.EventDrivenActivity> can contain other activities. The <xref:System.Workflow.Activities.EventDrivenActivity> is similar to the <xref:System.Workflow.Activities.SequenceActivity> activity, with some additional characteristics.","pos":[0,394],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Workflow.Activities.EventDrivenActivity&gt;</ph> is a <ph id=\"ph2\">&lt;xref:System.Workflow.ComponentModel.CompositeActivity&gt;</ph>, which means the <ph id=\"ph3\">&lt;xref:System.Workflow.Activities.EventDrivenActivity&gt;</ph> can contain other activities.","pos":[0,219],"source":"The <xref:System.Workflow.Activities.EventDrivenActivity> is a <xref:System.Workflow.ComponentModel.CompositeActivity>, which means the <xref:System.Workflow.Activities.EventDrivenActivity> can contain other activities."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Workflow.Activities.EventDrivenActivity&gt;</ph> is similar to the <ph id=\"ph2\">&lt;xref:System.Workflow.Activities.SequenceActivity&gt;</ph> activity, with some additional characteristics.","pos":[220,394],"source":" The <xref:System.Workflow.Activities.EventDrivenActivity> is similar to the <xref:System.Workflow.Activities.SequenceActivity> activity, with some additional characteristics."}]}]},{"pos":[962,1220],"content":"An <xref:System.Workflow.Activities.EventDrivenActivity> must have a parent that is either a <xref:System.Workflow.Activities.ListenActivity>, <xref:System.Workflow.Activities.StateActivity>, or <xref:System.Workflow.Activities.StateMachineWorkflowActivity>.","nodes":[{"content":"An <ph id=\"ph1\">&lt;xref:System.Workflow.Activities.EventDrivenActivity&gt;</ph> must have a parent that is either a <ph id=\"ph2\">&lt;xref:System.Workflow.Activities.ListenActivity&gt;</ph>, <ph id=\"ph3\">&lt;xref:System.Workflow.Activities.StateActivity&gt;</ph>, or <ph id=\"ph4\">&lt;xref:System.Workflow.Activities.StateMachineWorkflowActivity&gt;</ph>.","pos":[0,258],"source":"An <xref:System.Workflow.Activities.EventDrivenActivity> must have a parent that is either a <xref:System.Workflow.Activities.ListenActivity>, <xref:System.Workflow.Activities.StateActivity>, or <xref:System.Workflow.Activities.StateMachineWorkflowActivity>."}]},{"pos":[1227,1764],"content":"The first child of an <xref:System.Workflow.Activities.EventDrivenActivity> activity must be an activity that inherits from <xref:System.Workflow.Activities.IEventActivity>. All subsequent children can be activities of any type. The <xref:System.Workflow.Activities.IEventActivity> blocks and waits for the pending occurrence of some events, such as starting a timer or the arrival of a message. When the event occurs, the <xref:System.Workflow.Activities.IEventActivity> finishes running and then all subsequent activities are executed.","nodes":[{"content":"The first child of an <xref:System.Workflow.Activities.EventDrivenActivity> activity must be an activity that inherits from <xref:System.Workflow.Activities.IEventActivity>. All subsequent children can be activities of any type. The <xref:System.Workflow.Activities.IEventActivity> blocks and waits for the pending occurrence of some events, such as starting a timer or the arrival of a message. When the event occurs, the <xref:System.Workflow.Activities.IEventActivity> finishes running and then all subsequent activities are executed.","pos":[0,537],"nodes":[{"content":"The first child of an <ph id=\"ph1\">&lt;xref:System.Workflow.Activities.EventDrivenActivity&gt;</ph> activity must be an activity that inherits from <ph id=\"ph2\">&lt;xref:System.Workflow.Activities.IEventActivity&gt;</ph>.","pos":[0,173],"source":"The first child of an <xref:System.Workflow.Activities.EventDrivenActivity> activity must be an activity that inherits from <xref:System.Workflow.Activities.IEventActivity>."},{"content":"All subsequent children can be activities of any type.","pos":[174,228]},{"content":"The <ph id=\"ph1\">&lt;xref:System.Workflow.Activities.IEventActivity&gt;</ph> blocks and waits for the pending occurrence of some events, such as starting a timer or the arrival of a message.","pos":[229,395],"source":" The <xref:System.Workflow.Activities.IEventActivity> blocks and waits for the pending occurrence of some events, such as starting a timer or the arrival of a message."},{"content":"When the event occurs, the <ph id=\"ph1\">&lt;xref:System.Workflow.Activities.IEventActivity&gt;</ph> finishes running and then all subsequent activities are executed.","pos":[396,537],"source":" When the event occurs, the <xref:System.Workflow.Activities.IEventActivity> finishes running and then all subsequent activities are executed."}]}]},{"pos":[1771,1990],"content":"When the <xref:System.Workflow.Activities.StateMachineWorkflowActivity> contains an <xref:System.Workflow.Activities.EventDrivenActivity>, the <xref:System.Workflow.Activities.EventDrivenActivity> has some restrictions:","nodes":[{"content":"When the <ph id=\"ph1\">&lt;xref:System.Workflow.Activities.StateMachineWorkflowActivity&gt;</ph> contains an <ph id=\"ph2\">&lt;xref:System.Workflow.Activities.EventDrivenActivity&gt;</ph>, the <ph id=\"ph3\">&lt;xref:System.Workflow.Activities.EventDrivenActivity&gt;</ph> has some restrictions:","pos":[0,219],"source":"When the <xref:System.Workflow.Activities.StateMachineWorkflowActivity> contains an <xref:System.Workflow.Activities.EventDrivenActivity>, the <xref:System.Workflow.Activities.EventDrivenActivity> has some restrictions:"}]},{"pos":[2000,2155],"content":"The <xref:System.Workflow.Activities.EventDrivenActivity> may contain one, and only one, activity of type <xref:System.Workflow.Activities.IEventActivity>.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Workflow.Activities.EventDrivenActivity&gt;</ph> may contain one, and only one, activity of type <ph id=\"ph2\">&lt;xref:System.Workflow.Activities.IEventActivity&gt;</ph>.","pos":[0,155],"source":"The <xref:System.Workflow.Activities.EventDrivenActivity> may contain one, and only one, activity of type <xref:System.Workflow.Activities.IEventActivity>."}]},{"pos":[2165,2557],"content":"The <xref:System.Workflow.Activities.HandleExternalEventActivity> must be the first child activity. An <xref:System.Workflow.Activities.HandleExternalEventActivity> cannot be in the event handler for a child activity and cannot be a child to the <xref:System.Workflow.Activities.EventDrivenActivity> if the <xref:System.Workflow.Activities.HandleExternalEventActivity> is not the first child.","nodes":[{"content":"The <xref:System.Workflow.Activities.HandleExternalEventActivity> must be the first child activity. An <xref:System.Workflow.Activities.HandleExternalEventActivity> cannot be in the event handler for a child activity and cannot be a child to the <xref:System.Workflow.Activities.EventDrivenActivity> if the <xref:System.Workflow.Activities.HandleExternalEventActivity> is not the first child.","pos":[0,392],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Workflow.Activities.HandleExternalEventActivity&gt;</ph> must be the first child activity.","pos":[0,99],"source":"The <xref:System.Workflow.Activities.HandleExternalEventActivity> must be the first child activity."},{"content":"An <ph id=\"ph1\">&lt;xref:System.Workflow.Activities.HandleExternalEventActivity&gt;</ph> cannot be in the event handler for a child activity and cannot be a child to the <ph id=\"ph2\">&lt;xref:System.Workflow.Activities.EventDrivenActivity&gt;</ph> if the <ph id=\"ph3\">&lt;xref:System.Workflow.Activities.HandleExternalEventActivity&gt;</ph> is not the first child.","pos":[100,392],"source":" An <xref:System.Workflow.Activities.HandleExternalEventActivity> cannot be in the event handler for a child activity and cannot be a child to the <xref:System.Workflow.Activities.EventDrivenActivity> if the <xref:System.Workflow.Activities.HandleExternalEventActivity> is not the first child."}]}]},{"pos":[2567,2915],"content":"As long as the first activity is the <xref:System.Workflow.Activities.HandleExternalEventActivity>, the event handler can contain any activities. If an activity other than <xref:System.Workflow.Activities.HandleExternalEventActivity> is contained in <xref:System.Workflow.Activities.EventDrivenActivity>, that activity cannot have an event handler.","nodes":[{"content":"As long as the first activity is the <xref:System.Workflow.Activities.HandleExternalEventActivity>, the event handler can contain any activities. If an activity other than <xref:System.Workflow.Activities.HandleExternalEventActivity> is contained in <xref:System.Workflow.Activities.EventDrivenActivity>, that activity cannot have an event handler.","pos":[0,348],"nodes":[{"content":"As long as the first activity is the <ph id=\"ph1\">&lt;xref:System.Workflow.Activities.HandleExternalEventActivity&gt;</ph>, the event handler can contain any activities.","pos":[0,145],"source":"As long as the first activity is the <xref:System.Workflow.Activities.HandleExternalEventActivity>, the event handler can contain any activities."},{"content":"If an activity other than <ph id=\"ph1\">&lt;xref:System.Workflow.Activities.HandleExternalEventActivity&gt;</ph> is contained in <ph id=\"ph2\">&lt;xref:System.Workflow.Activities.EventDrivenActivity&gt;</ph>, that activity cannot have an event handler.","pos":[146,348],"source":" If an activity other than <xref:System.Workflow.Activities.HandleExternalEventActivity> is contained in <xref:System.Workflow.Activities.EventDrivenActivity>, that activity cannot have an event handler."}]}]},{"pos":[2922,3116],"content":"For example, an activity that supports event handling can be used inside the <xref:System.Workflow.Activities.EventDrivenActivity> but the activity cannot have event handlers attached to itself.","nodes":[{"content":"For example, an activity that supports event handling can be used inside the <ph id=\"ph1\">&lt;xref:System.Workflow.Activities.EventDrivenActivity&gt;</ph> but the activity cannot have event handlers attached to itself.","pos":[0,194],"source":"For example, an activity that supports event handling can be used inside the <xref:System.Workflow.Activities.EventDrivenActivity> but the activity cannot have event handlers attached to itself."}]},{"pos":[3123,3442],"content":"Another example is that the <xref:System.Workflow.Activities.EventDrivenActivity> can contain a <xref:System.Workflow.Activities.ConditionedActivityGroup>, but the <xref:System.Workflow.Activities.ConditionedActivityGroup> itself cannot contain any <xref:System.Workflow.Activities.HandleExternalEventActivity> classes.","nodes":[{"content":"Another example is that the <ph id=\"ph1\">&lt;xref:System.Workflow.Activities.EventDrivenActivity&gt;</ph> can contain a <ph id=\"ph2\">&lt;xref:System.Workflow.Activities.ConditionedActivityGroup&gt;</ph>, but the <ph id=\"ph3\">&lt;xref:System.Workflow.Activities.ConditionedActivityGroup&gt;</ph> itself cannot contain any <ph id=\"ph4\">&lt;xref:System.Workflow.Activities.HandleExternalEventActivity&gt;</ph> classes.","pos":[0,319],"source":"Another example is that the <xref:System.Workflow.Activities.EventDrivenActivity> can contain a <xref:System.Workflow.Activities.ConditionedActivityGroup>, but the <xref:System.Workflow.Activities.ConditionedActivityGroup> itself cannot contain any <xref:System.Workflow.Activities.HandleExternalEventActivity> classes."}]}],"pos":[794,4260],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.Workflow.Activities.EventDrivenActivity\"></xref> class.","nodes":[{"pos":[0,108],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Workflow.Activities.EventDrivenActivity\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.Workflow.Activities.EventDrivenActivity\"></xref> class."}],"pos":[14896,15005],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Workflow.Activities.EventDrivenActivity\"></xref> class using the name of the activity.","nodes":[{"pos":[0,139],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Workflow.Activities.EventDrivenActivity\"&gt;&lt;/xref&gt;</ph> class using the name of the activity.","source":"Initializes a new instance of the <xref href=\"System.Workflow.Activities.EventDrivenActivity\"></xref> class using the name of the activity."}],"pos":[16844,16984],"yaml":true},{"content":"The user-identified name of the activity.","nodes":[{"pos":[0,41],"content":"The user-identified name of the activity.","nodes":[{"content":"The user-identified name of the activity.","pos":[0,41]}]}],"pos":[17125,17167],"yaml":true},{"content":"Gets the event activity that drives the change.","nodes":[{"pos":[0,47],"content":"Gets the event activity that drives the change.","nodes":[{"content":"Gets the event activity that drives the change.","pos":[0,47]}]}],"pos":[18227,18275],"yaml":true},{"content":"The event activity that drives the change.","nodes":[{"pos":[0,42],"content":"The event activity that drives the change.","nodes":[{"content":"The event activity that drives the change.","pos":[0,42]}]}],"pos":[18512,18555],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Workflow.Activities.EventDrivenActivity\n  commentId: T:System.Workflow.Activities.EventDrivenActivity\n  id: EventDrivenActivity\n  children:\n  - System.Workflow.Activities.EventDrivenActivity.#ctor\n  - System.Workflow.Activities.EventDrivenActivity.#ctor(System.String)\n  - System.Workflow.Activities.EventDrivenActivity.EventActivity\n  langs:\n  - csharp\n  name: EventDrivenActivity\n  nameWithType: EventDrivenActivity\n  fullName: System.Workflow.Activities.EventDrivenActivity\n  type: Class\n  assemblies:\n  - System.Workflow.Activities\n  namespace: System.Workflow.Activities\n  summary: Wraps an <xref href=\"System.Workflow.ComponentModel.Activity\"></xref> whose execution is initialized by an event. This class cannot be inherited.\n  remarks: \"> [!NOTE]\\n>  [!INCLUDE[DeprecatedContent](~/includes/deprecatedcontent-md.md)]  \\n  \\n It is a <xref:System.Workflow.ComponentModel.CompositeActivity> that is used to handle an event; typically it can be raised from the host or by the runtime in response to a delay timer expiring. <xref:System.Workflow.Activities.EventDrivenActivity> is inherited from <xref:System.Workflow.Activities.SequenceActivity>; therefore, it is a sequence that has the additional restriction that the first activity should be an <xref:System.Workflow.Activities.IEventActivity>.  \\n  \\n The <xref:System.Workflow.Activities.EventDrivenActivity> is a <xref:System.Workflow.ComponentModel.CompositeActivity>, which means the <xref:System.Workflow.Activities.EventDrivenActivity> can contain other activities. The <xref:System.Workflow.Activities.EventDrivenActivity> is similar to the <xref:System.Workflow.Activities.SequenceActivity> activity, with some additional characteristics.  \\n  \\n An <xref:System.Workflow.Activities.EventDrivenActivity> must have a parent that is either a <xref:System.Workflow.Activities.ListenActivity>, <xref:System.Workflow.Activities.StateActivity>, or <xref:System.Workflow.Activities.StateMachineWorkflowActivity>.  \\n  \\n The first child of an <xref:System.Workflow.Activities.EventDrivenActivity> activity must be an activity that inherits from <xref:System.Workflow.Activities.IEventActivity>. All subsequent children can be activities of any type. The <xref:System.Workflow.Activities.IEventActivity> blocks and waits for the pending occurrence of some events, such as starting a timer or the arrival of a message. When the event occurs, the <xref:System.Workflow.Activities.IEventActivity> finishes running and then all subsequent activities are executed.  \\n  \\n When the <xref:System.Workflow.Activities.StateMachineWorkflowActivity> contains an <xref:System.Workflow.Activities.EventDrivenActivity>, the <xref:System.Workflow.Activities.EventDrivenActivity> has some restrictions:  \\n  \\n-   The <xref:System.Workflow.Activities.EventDrivenActivity> may contain one, and only one, activity of type <xref:System.Workflow.Activities.IEventActivity>.  \\n  \\n-   The <xref:System.Workflow.Activities.HandleExternalEventActivity> must be the first child activity. An <xref:System.Workflow.Activities.HandleExternalEventActivity> cannot be in the event handler for a child activity and cannot be a child to the <xref:System.Workflow.Activities.EventDrivenActivity> if the <xref:System.Workflow.Activities.HandleExternalEventActivity> is not the first child.  \\n  \\n-   As long as the first activity is the <xref:System.Workflow.Activities.HandleExternalEventActivity>, the event handler can contain any activities. If an activity other than <xref:System.Workflow.Activities.HandleExternalEventActivity> is contained in <xref:System.Workflow.Activities.EventDrivenActivity>, that activity cannot have an event handler.  \\n  \\n For example, an activity that supports event handling can be used inside the <xref:System.Workflow.Activities.EventDrivenActivity> but the activity cannot have event handlers attached to itself.  \\n  \\n Another example is that the <xref:System.Workflow.Activities.EventDrivenActivity> can contain a <xref:System.Workflow.Activities.ConditionedActivityGroup>, but the <xref:System.Workflow.Activities.ConditionedActivityGroup> itself cannot contain any <xref:System.Workflow.Activities.HandleExternalEventActivity> classes.\"\n  example:\n  - \"The following code example shows how to use the <xref:System.Workflow.Activities.EventDrivenActivity> to perform state machine transitions. This code example is part of the SimpleStateMachineWorkflow SDK sample from the StateMachineWorkflow.cs file. [!INCLUDE[crdefault](~/includes/crdefault-md.md)][Simple State Machine](http://msdn.microsoft.com/en-us/1974edbd-253d-4e01-9095-38ff9c3e749e).  \\n  \\n [!code-csharp[wf_samples#185](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets19.cs#185)]\\n [!code-vb[wf_samples#185](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets19.vb#185)]\"\n  syntax:\n    content: >-\n      [System.Drawing.ToolboxBitmap(typeof(System.Workflow.Activities.EventDrivenActivity), \"Resources.EventDriven.png\")]\n\n      [System.Obsolete(\"The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*\")]\n\n      [System.Workflow.ComponentModel.Compiler.ActivityValidator(typeof(System.Workflow.Activities.EventDrivenValidator))]\n\n      public sealed class EventDrivenActivity : System.Workflow.Activities.SequenceActivity\n  inheritance:\n  - System.Object\n  - System.Workflow.ComponentModel.DependencyObject\n  - System.Workflow.ComponentModel.Activity\n  - System.Workflow.ComponentModel.CompositeActivity\n  - System.Workflow.Activities.SequenceActivity\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Workflow.Activities.SequenceActivity.Cancel(System.Workflow.ComponentModel.ActivityExecutionContext)\n  - System.Workflow.Activities.SequenceActivity.Execute(System.Workflow.ComponentModel.ActivityExecutionContext)\n  - System.Workflow.Activities.SequenceActivity.HandleFault(System.Workflow.ComponentModel.ActivityExecutionContext,System.Exception)\n  - System.Workflow.Activities.SequenceActivity.OnActivityChangeRemove(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.Activity)\n  - System.Workflow.Activities.SequenceActivity.OnSequenceComplete(System.Workflow.ComponentModel.ActivityExecutionContext)\n  - System.Workflow.Activities.SequenceActivity.OnWorkflowChangesCompleted(System.Workflow.ComponentModel.ActivityExecutionContext)\n  - System.Workflow.Activities.SequenceActivity.System#Workflow#ComponentModel#IActivityEventListener{System#Workflow#ComponentModel#ActivityExecutionStatusChangedEventArgs}#OnEvent(System.Object,System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs)\n  - System.Workflow.ComponentModel.Activity.ActivityContextGuidProperty\n  - System.Workflow.ComponentModel.Activity.Canceling\n  - System.Workflow.ComponentModel.Activity.CancelingEvent\n  - System.Workflow.ComponentModel.Activity.Clone\n  - System.Workflow.ComponentModel.Activity.Closed\n  - System.Workflow.ComponentModel.Activity.ClosedEvent\n  - System.Workflow.ComponentModel.Activity.Compensating\n  - System.Workflow.ComponentModel.Activity.CompensatingEvent\n  - System.Workflow.ComponentModel.Activity.Description\n  - System.Workflow.ComponentModel.Activity.Enabled\n  - System.Workflow.ComponentModel.Activity.Executing\n  - System.Workflow.ComponentModel.Activity.ExecutingEvent\n  - System.Workflow.ComponentModel.Activity.ExecutionResult\n  - System.Workflow.ComponentModel.Activity.ExecutionStatus\n  - System.Workflow.ComponentModel.Activity.Faulting\n  - System.Workflow.ComponentModel.Activity.FaultingEvent\n  - System.Workflow.ComponentModel.Activity.GetActivityByName(System.String)\n  - System.Workflow.ComponentModel.Activity.GetActivityByName(System.String,System.Boolean)\n  - System.Workflow.ComponentModel.Activity.Invoke``1(System.EventHandler{``0},``0)\n  - System.Workflow.ComponentModel.Activity.Invoke``1(System.Workflow.ComponentModel.IActivityEventListener{``0},``0)\n  - System.Workflow.ComponentModel.Activity.IsDynamicActivity\n  - System.Workflow.ComponentModel.Activity.Load(System.IO.Stream,System.Workflow.ComponentModel.Activity)\n  - System.Workflow.ComponentModel.Activity.Load(System.IO.Stream,System.Workflow.ComponentModel.Activity,System.Runtime.Serialization.IFormatter)\n  - System.Workflow.ComponentModel.Activity.Name\n  - System.Workflow.ComponentModel.Activity.OnClosed(System.IServiceProvider)\n  - System.Workflow.ComponentModel.Activity.Parent\n  - System.Workflow.ComponentModel.Activity.QualifiedName\n  - System.Workflow.ComponentModel.Activity.RaiseEvent(System.Workflow.ComponentModel.DependencyProperty,System.Object,System.EventArgs)\n  - System.Workflow.ComponentModel.Activity.RaiseGenericEvent``1(System.Workflow.ComponentModel.DependencyProperty,System.Object,``0)\n  - System.Workflow.ComponentModel.Activity.RegisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})\n  - System.Workflow.ComponentModel.Activity.Save(System.IO.Stream)\n  - System.Workflow.ComponentModel.Activity.Save(System.IO.Stream,System.Runtime.Serialization.IFormatter)\n  - System.Workflow.ComponentModel.Activity.StatusChanged\n  - System.Workflow.ComponentModel.Activity.StatusChangedEvent\n  - System.Workflow.ComponentModel.Activity.ToString\n  - System.Workflow.ComponentModel.Activity.TrackData(System.Object)\n  - System.Workflow.ComponentModel.Activity.TrackData(System.String,System.Object)\n  - System.Workflow.ComponentModel.Activity.UnregisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})\n  - System.Workflow.ComponentModel.Activity.WorkflowInstanceId\n  - System.Workflow.ComponentModel.CompositeActivity.Activities\n  - System.Workflow.ComponentModel.CompositeActivity.ApplyWorkflowChanges(System.Workflow.ComponentModel.WorkflowChanges)\n  - System.Workflow.ComponentModel.CompositeActivity.CanModifyActivities\n  - System.Workflow.ComponentModel.CompositeActivity.Dispose(System.Boolean)\n  - System.Workflow.ComponentModel.CompositeActivity.EnabledActivities\n  - System.Workflow.ComponentModel.CompositeActivity.GetDynamicActivities(System.Workflow.ComponentModel.Activity)\n  - System.Workflow.ComponentModel.CompositeActivity.Initialize(System.IServiceProvider)\n  - System.Workflow.ComponentModel.CompositeActivity.OnActivityChangeAdd(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.Activity)\n  - System.Workflow.ComponentModel.CompositeActivity.OnActivityExecutionContextLoad(System.IServiceProvider)\n  - System.Workflow.ComponentModel.CompositeActivity.OnActivityExecutionContextUnload(System.IServiceProvider)\n  - System.Workflow.ComponentModel.CompositeActivity.OnListChanged(System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs)\n  - System.Workflow.ComponentModel.CompositeActivity.OnListChanging(System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs)\n  - System.Workflow.ComponentModel.CompositeActivity.Uninitialize(System.IServiceProvider)\n  - System.Workflow.ComponentModel.DependencyObject.AddHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)\n  - System.Workflow.ComponentModel.DependencyObject.DesignMode\n  - System.Workflow.ComponentModel.DependencyObject.Dispose\n  - System.Workflow.ComponentModel.DependencyObject.GetBinding(System.Workflow.ComponentModel.DependencyProperty)\n  - System.Workflow.ComponentModel.DependencyObject.GetBoundValue(System.Workflow.ComponentModel.ActivityBind,System.Type)\n  - System.Workflow.ComponentModel.DependencyObject.GetInvocationList``1(System.Workflow.ComponentModel.DependencyProperty)\n  - System.Workflow.ComponentModel.DependencyObject.GetValue(System.Workflow.ComponentModel.DependencyProperty)\n  - System.Workflow.ComponentModel.DependencyObject.GetValueBase(System.Workflow.ComponentModel.DependencyProperty)\n  - System.Workflow.ComponentModel.DependencyObject.InitializeProperties\n  - System.Workflow.ComponentModel.DependencyObject.IsBindingSet(System.Workflow.ComponentModel.DependencyProperty)\n  - System.Workflow.ComponentModel.DependencyObject.MetaEquals(System.Workflow.ComponentModel.DependencyObject)\n  - System.Workflow.ComponentModel.DependencyObject.ParentDependencyObject\n  - System.Workflow.ComponentModel.DependencyObject.RemoveHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)\n  - System.Workflow.ComponentModel.DependencyObject.RemoveProperty(System.Workflow.ComponentModel.DependencyProperty)\n  - System.Workflow.ComponentModel.DependencyObject.SetBinding(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.ActivityBind)\n  - System.Workflow.ComponentModel.DependencyObject.SetBoundValue(System.Workflow.ComponentModel.ActivityBind,System.Object)\n  - System.Workflow.ComponentModel.DependencyObject.SetReadOnlyPropertyValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)\n  - System.Workflow.ComponentModel.DependencyObject.SetValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)\n  - System.Workflow.ComponentModel.DependencyObject.SetValueBase(System.Workflow.ComponentModel.DependencyProperty,System.Object)\n  - System.Workflow.ComponentModel.DependencyObject.Site\n  - System.Workflow.ComponentModel.DependencyObject.UserData\n  attributes:\n  - type: System.Drawing.ToolboxBitmapAttribute\n  - type: System.ObsoleteAttribute\n  - type: System.Workflow.ComponentModel.Compiler.ActivityValidatorAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.Activities/EventDrivenActivity.xml\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Workflow.Activities.EventDrivenActivity.#ctor\n  commentId: M:System.Workflow.Activities.EventDrivenActivity.#ctor\n  id: '#ctor'\n  parent: System.Workflow.Activities.EventDrivenActivity\n  langs:\n  - csharp\n  name: EventDrivenActivity()\n  nameWithType: EventDrivenActivity.EventDrivenActivity()\n  fullName: EventDrivenActivity.EventDrivenActivity()\n  type: Constructor\n  assemblies:\n  - System.Workflow.Activities\n  namespace: System.Workflow.Activities\n  summary: Initializes a new instance of the <xref href=\"System.Workflow.Activities.EventDrivenActivity\"></xref> class.\n  remarks: ''\n  example:\n  - \"The following code example shows how to create a new instance of the <xref:System.Workflow.Activities.EventDrivenActivity> class.  This code example is part of the SimpleStateMachineWorkflow SDK sample from the StateMachineWorkflow.cs file. [!INCLUDE[crdefault](~/includes/crdefault-md.md)][Simple State Machine](http://msdn.microsoft.com/en-us/1974edbd-253d-4e01-9095-38ff9c3e749e).  \\n  \\n [!code-csharp[wf_samples#187](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets19.cs#187)]\\n [!code-vb[wf_samples#187](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets19.vb#187)]\"\n  syntax:\n    content: public EventDrivenActivity ();\n    parameters: []\n  overload: System.Workflow.Activities.EventDrivenActivity.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.Activities/EventDrivenActivity.xml\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Workflow.Activities.EventDrivenActivity.#ctor(System.String)\n  commentId: M:System.Workflow.Activities.EventDrivenActivity.#ctor(System.String)\n  id: '#ctor(System.String)'\n  parent: System.Workflow.Activities.EventDrivenActivity\n  langs:\n  - csharp\n  name: EventDrivenActivity(String)\n  nameWithType: EventDrivenActivity.EventDrivenActivity(String)\n  fullName: EventDrivenActivity.EventDrivenActivity(String)\n  type: Constructor\n  assemblies:\n  - System.Workflow.Activities\n  namespace: System.Workflow.Activities\n  summary: Initializes a new instance of the <xref href=\"System.Workflow.Activities.EventDrivenActivity\"></xref> class using the name of the activity.\n  syntax:\n    content: public EventDrivenActivity (string name);\n    parameters:\n    - id: name\n      type: System.String\n      description: The user-identified name of the activity.\n  overload: System.Workflow.Activities.EventDrivenActivity.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.Activities/EventDrivenActivity.xml\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Workflow.Activities.EventDrivenActivity.EventActivity\n  commentId: P:System.Workflow.Activities.EventDrivenActivity.EventActivity\n  id: EventActivity\n  parent: System.Workflow.Activities.EventDrivenActivity\n  langs:\n  - csharp\n  name: EventActivity\n  nameWithType: EventDrivenActivity.EventActivity\n  fullName: EventDrivenActivity.EventActivity\n  type: Property\n  assemblies:\n  - System.Workflow.Activities\n  namespace: System.Workflow.Activities\n  summary: Gets the event activity that drives the change.\n  syntax:\n    content: >-\n      [System.ComponentModel.Browsable(false)]\n\n      public System.Workflow.Activities.IEventActivity EventActivity { get; }\n    return:\n      type: System.Workflow.Activities.IEventActivity\n      description: The event activity that drives the change.\n  overload: System.Workflow.Activities.EventDrivenActivity.EventActivity*\n  exceptions: []\n  attributes:\n  - type: System.ComponentModel.BrowsableAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.Activities/EventDrivenActivity.xml\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\nreferences:\n- uid: System.Workflow.Activities.SequenceActivity\n  parent: System.Workflow.Activities\n  isExternal: false\n  name: SequenceActivity\n  nameWithType: SequenceActivity\n  fullName: System.Workflow.Activities.SequenceActivity\n- uid: System.Workflow.Activities.EventDrivenActivity.#ctor\n  parent: System.Workflow.Activities.EventDrivenActivity\n  isExternal: false\n  name: EventDrivenActivity()\n  nameWithType: EventDrivenActivity.EventDrivenActivity()\n  fullName: EventDrivenActivity.EventDrivenActivity()\n- uid: System.Workflow.Activities.EventDrivenActivity.#ctor(System.String)\n  parent: System.Workflow.Activities.EventDrivenActivity\n  isExternal: false\n  name: EventDrivenActivity(String)\n  nameWithType: EventDrivenActivity.EventDrivenActivity(String)\n  fullName: EventDrivenActivity.EventDrivenActivity(String)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Workflow.Activities.EventDrivenActivity.EventActivity\n  parent: System.Workflow.Activities.EventDrivenActivity\n  isExternal: false\n  name: EventActivity\n  nameWithType: EventDrivenActivity.EventActivity\n  fullName: EventDrivenActivity.EventActivity\n- uid: System.Workflow.Activities.IEventActivity\n  parent: System.Workflow.Activities\n  isExternal: false\n  name: IEventActivity\n  nameWithType: IEventActivity\n  fullName: System.Workflow.Activities.IEventActivity\n- uid: System.Workflow.Activities.EventDrivenActivity.#ctor*\n  parent: System.Workflow.Activities.EventDrivenActivity\n  isExternal: false\n  name: EventDrivenActivity\n  nameWithType: EventDrivenActivity.EventDrivenActivity\n  fullName: EventDrivenActivity.EventDrivenActivity\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.Activities/EventDrivenActivity.xml\n- uid: System.Workflow.Activities.EventDrivenActivity.EventActivity*\n  parent: System.Workflow.Activities.EventDrivenActivity\n  isExternal: false\n  name: EventActivity\n  nameWithType: EventDrivenActivity.EventActivity\n  fullName: EventDrivenActivity.EventActivity\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.Activities/EventDrivenActivity.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Workflow.ComponentModel.Activity.ToString\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: ToString()\n  nameWithType: Activity.ToString()\n  fullName: Activity.ToString()\n- uid: System.Workflow.ComponentModel.DependencyObject.AddHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)\n  parent: System.Workflow.ComponentModel.DependencyObject\n  isExternal: false\n  name: AddHandler(DependencyProperty, Object)\n  nameWithType: DependencyObject.AddHandler(DependencyProperty, Object)\n  fullName: DependencyObject.AddHandler(DependencyProperty, Object)\n- uid: System.Workflow.ComponentModel.DependencyObject.DesignMode\n  parent: System.Workflow.ComponentModel.DependencyObject\n  isExternal: false\n  name: DesignMode\n  nameWithType: DependencyObject.DesignMode\n  fullName: DependencyObject.DesignMode\n- uid: System.Workflow.ComponentModel.DependencyObject.Dispose\n  parent: System.Workflow.ComponentModel.DependencyObject\n  isExternal: false\n  name: Dispose()\n  nameWithType: DependencyObject.Dispose()\n  fullName: DependencyObject.Dispose()\n- uid: System.Workflow.ComponentModel.CompositeActivity.Dispose(System.Boolean)\n  parent: System.Workflow.ComponentModel.CompositeActivity\n  isExternal: false\n  name: Dispose(Boolean)\n  nameWithType: CompositeActivity.Dispose(Boolean)\n  fullName: CompositeActivity.Dispose(Boolean)\n- uid: System.Workflow.ComponentModel.DependencyObject.GetBinding(System.Workflow.ComponentModel.DependencyProperty)\n  parent: System.Workflow.ComponentModel.DependencyObject\n  isExternal: false\n  name: GetBinding(DependencyProperty)\n  nameWithType: DependencyObject.GetBinding(DependencyProperty)\n  fullName: DependencyObject.GetBinding(DependencyProperty)\n- uid: System.Workflow.ComponentModel.DependencyObject.GetBoundValue(System.Workflow.ComponentModel.ActivityBind,System.Type)\n  parent: System.Workflow.ComponentModel.DependencyObject\n  isExternal: false\n  name: GetBoundValue(ActivityBind, Type)\n  nameWithType: DependencyObject.GetBoundValue(ActivityBind, Type)\n  fullName: DependencyObject.GetBoundValue(ActivityBind, Type)\n- uid: System.Workflow.ComponentModel.DependencyObject.GetInvocationList``1(System.Workflow.ComponentModel.DependencyProperty)\n  parent: System.Workflow.ComponentModel.DependencyObject\n  isExternal: false\n  name: GetInvocationList<T>(DependencyProperty)\n  nameWithType: DependencyObject.GetInvocationList<T>(DependencyProperty)\n  fullName: DependencyObject.GetInvocationList<T>(DependencyProperty)\n- uid: System.Workflow.ComponentModel.DependencyObject.GetValue(System.Workflow.ComponentModel.DependencyProperty)\n  parent: System.Workflow.ComponentModel.DependencyObject\n  isExternal: false\n  name: GetValue(DependencyProperty)\n  nameWithType: DependencyObject.GetValue(DependencyProperty)\n  fullName: DependencyObject.GetValue(DependencyProperty)\n- uid: System.Workflow.ComponentModel.DependencyObject.GetValueBase(System.Workflow.ComponentModel.DependencyProperty)\n  parent: System.Workflow.ComponentModel.DependencyObject\n  isExternal: false\n  name: GetValueBase(DependencyProperty)\n  nameWithType: DependencyObject.GetValueBase(DependencyProperty)\n  fullName: DependencyObject.GetValueBase(DependencyProperty)\n- uid: System.Workflow.ComponentModel.DependencyObject.InitializeProperties\n  parent: System.Workflow.ComponentModel.DependencyObject\n  isExternal: false\n  name: InitializeProperties()\n  nameWithType: DependencyObject.InitializeProperties()\n  fullName: DependencyObject.InitializeProperties()\n- uid: System.Workflow.ComponentModel.DependencyObject.IsBindingSet(System.Workflow.ComponentModel.DependencyProperty)\n  parent: System.Workflow.ComponentModel.DependencyObject\n  isExternal: false\n  name: IsBindingSet(DependencyProperty)\n  nameWithType: DependencyObject.IsBindingSet(DependencyProperty)\n  fullName: DependencyObject.IsBindingSet(DependencyProperty)\n- uid: System.Workflow.ComponentModel.DependencyObject.MetaEquals(System.Workflow.ComponentModel.DependencyObject)\n  parent: System.Workflow.ComponentModel.DependencyObject\n  isExternal: false\n  name: MetaEquals(DependencyObject)\n  nameWithType: DependencyObject.MetaEquals(DependencyObject)\n  fullName: DependencyObject.MetaEquals(DependencyObject)\n- uid: System.Workflow.ComponentModel.DependencyObject.ParentDependencyObject\n  parent: System.Workflow.ComponentModel.DependencyObject\n  isExternal: false\n  name: ParentDependencyObject\n  nameWithType: DependencyObject.ParentDependencyObject\n  fullName: DependencyObject.ParentDependencyObject\n- uid: System.Workflow.ComponentModel.DependencyObject.RemoveHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)\n  parent: System.Workflow.ComponentModel.DependencyObject\n  isExternal: false\n  name: RemoveHandler(DependencyProperty, Object)\n  nameWithType: DependencyObject.RemoveHandler(DependencyProperty, Object)\n  fullName: DependencyObject.RemoveHandler(DependencyProperty, Object)\n- uid: System.Workflow.ComponentModel.DependencyObject.RemoveProperty(System.Workflow.ComponentModel.DependencyProperty)\n  parent: System.Workflow.ComponentModel.DependencyObject\n  isExternal: false\n  name: RemoveProperty(DependencyProperty)\n  nameWithType: DependencyObject.RemoveProperty(DependencyProperty)\n  fullName: DependencyObject.RemoveProperty(DependencyProperty)\n- uid: System.Workflow.ComponentModel.DependencyObject.SetBinding(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.ActivityBind)\n  parent: System.Workflow.ComponentModel.DependencyObject\n  isExternal: false\n  name: SetBinding(DependencyProperty, ActivityBind)\n  nameWithType: DependencyObject.SetBinding(DependencyProperty, ActivityBind)\n  fullName: DependencyObject.SetBinding(DependencyProperty, ActivityBind)\n- uid: System.Workflow.ComponentModel.DependencyObject.SetBoundValue(System.Workflow.ComponentModel.ActivityBind,System.Object)\n  parent: System.Workflow.ComponentModel.DependencyObject\n  isExternal: false\n  name: SetBoundValue(ActivityBind, Object)\n  nameWithType: DependencyObject.SetBoundValue(ActivityBind, Object)\n  fullName: DependencyObject.SetBoundValue(ActivityBind, Object)\n- uid: System.Workflow.ComponentModel.DependencyObject.SetReadOnlyPropertyValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)\n  parent: System.Workflow.ComponentModel.DependencyObject\n  isExternal: false\n  name: SetReadOnlyPropertyValue(DependencyProperty, Object)\n  nameWithType: DependencyObject.SetReadOnlyPropertyValue(DependencyProperty, Object)\n  fullName: DependencyObject.SetReadOnlyPropertyValue(DependencyProperty, Object)\n- uid: System.Workflow.ComponentModel.DependencyObject.SetValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)\n  parent: System.Workflow.ComponentModel.DependencyObject\n  isExternal: false\n  name: SetValue(DependencyProperty, Object)\n  nameWithType: DependencyObject.SetValue(DependencyProperty, Object)\n  fullName: DependencyObject.SetValue(DependencyProperty, Object)\n- uid: System.Workflow.ComponentModel.DependencyObject.SetValueBase(System.Workflow.ComponentModel.DependencyProperty,System.Object)\n  parent: System.Workflow.ComponentModel.DependencyObject\n  isExternal: false\n  name: SetValueBase(DependencyProperty, Object)\n  nameWithType: DependencyObject.SetValueBase(DependencyProperty, Object)\n  fullName: DependencyObject.SetValueBase(DependencyProperty, Object)\n- uid: System.Workflow.ComponentModel.DependencyObject.Site\n  parent: System.Workflow.ComponentModel.DependencyObject\n  isExternal: false\n  name: Site\n  nameWithType: DependencyObject.Site\n  fullName: DependencyObject.Site\n- uid: System.Workflow.ComponentModel.DependencyObject.UserData\n  parent: System.Workflow.ComponentModel.DependencyObject\n  isExternal: false\n  name: UserData\n  nameWithType: DependencyObject.UserData\n  fullName: DependencyObject.UserData\n- uid: System.Workflow.ComponentModel.Activity.ActivityContextGuidProperty\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: ActivityContextGuidProperty\n  nameWithType: Activity.ActivityContextGuidProperty\n  fullName: Activity.ActivityContextGuidProperty\n- uid: System.Workflow.Activities.SequenceActivity.Cancel(System.Workflow.ComponentModel.ActivityExecutionContext)\n  parent: System.Workflow.Activities.SequenceActivity\n  isExternal: false\n  name: Cancel(ActivityExecutionContext)\n  nameWithType: SequenceActivity.Cancel(ActivityExecutionContext)\n  fullName: SequenceActivity.Cancel(ActivityExecutionContext)\n- uid: System.Workflow.ComponentModel.Activity.Canceling\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: Canceling\n  nameWithType: Activity.Canceling\n  fullName: Activity.Canceling\n- uid: System.Workflow.ComponentModel.Activity.CancelingEvent\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: CancelingEvent\n  nameWithType: Activity.CancelingEvent\n  fullName: Activity.CancelingEvent\n- uid: System.Workflow.ComponentModel.Activity.Clone\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: Clone()\n  nameWithType: Activity.Clone()\n  fullName: Activity.Clone()\n- uid: System.Workflow.ComponentModel.Activity.Closed\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: Closed\n  nameWithType: Activity.Closed\n  fullName: Activity.Closed\n- uid: System.Workflow.ComponentModel.Activity.ClosedEvent\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: ClosedEvent\n  nameWithType: Activity.ClosedEvent\n  fullName: Activity.ClosedEvent\n- uid: System.Workflow.ComponentModel.Activity.Compensating\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: Compensating\n  nameWithType: Activity.Compensating\n  fullName: Activity.Compensating\n- uid: System.Workflow.ComponentModel.Activity.CompensatingEvent\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: CompensatingEvent\n  nameWithType: Activity.CompensatingEvent\n  fullName: Activity.CompensatingEvent\n- uid: System.Workflow.ComponentModel.Activity.Description\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: Description\n  nameWithType: Activity.Description\n  fullName: Activity.Description\n- uid: System.Workflow.ComponentModel.Activity.Enabled\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: Enabled\n  nameWithType: Activity.Enabled\n  fullName: Activity.Enabled\n- uid: System.Workflow.Activities.SequenceActivity.Execute(System.Workflow.ComponentModel.ActivityExecutionContext)\n  parent: System.Workflow.Activities.SequenceActivity\n  isExternal: false\n  name: Execute(ActivityExecutionContext)\n  nameWithType: SequenceActivity.Execute(ActivityExecutionContext)\n  fullName: SequenceActivity.Execute(ActivityExecutionContext)\n- uid: System.Workflow.ComponentModel.Activity.Executing\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: Executing\n  nameWithType: Activity.Executing\n  fullName: Activity.Executing\n- uid: System.Workflow.ComponentModel.Activity.ExecutingEvent\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: ExecutingEvent\n  nameWithType: Activity.ExecutingEvent\n  fullName: Activity.ExecutingEvent\n- uid: System.Workflow.ComponentModel.Activity.ExecutionResult\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: ExecutionResult\n  nameWithType: Activity.ExecutionResult\n  fullName: Activity.ExecutionResult\n- uid: System.Workflow.ComponentModel.Activity.ExecutionStatus\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: ExecutionStatus\n  nameWithType: Activity.ExecutionStatus\n  fullName: Activity.ExecutionStatus\n- uid: System.Workflow.ComponentModel.Activity.Faulting\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: Faulting\n  nameWithType: Activity.Faulting\n  fullName: Activity.Faulting\n- uid: System.Workflow.ComponentModel.Activity.FaultingEvent\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: FaultingEvent\n  nameWithType: Activity.FaultingEvent\n  fullName: Activity.FaultingEvent\n- uid: System.Workflow.ComponentModel.Activity.GetActivityByName(System.String)\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: GetActivityByName(String)\n  nameWithType: Activity.GetActivityByName(String)\n  fullName: Activity.GetActivityByName(String)\n- uid: System.Workflow.ComponentModel.Activity.GetActivityByName(System.String,System.Boolean)\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: GetActivityByName(String, Boolean)\n  nameWithType: Activity.GetActivityByName(String, Boolean)\n  fullName: Activity.GetActivityByName(String, Boolean)\n- uid: System.Workflow.Activities.SequenceActivity.HandleFault(System.Workflow.ComponentModel.ActivityExecutionContext,System.Exception)\n  parent: System.Workflow.Activities.SequenceActivity\n  isExternal: false\n  name: HandleFault(ActivityExecutionContext, Exception)\n  nameWithType: SequenceActivity.HandleFault(ActivityExecutionContext, Exception)\n  fullName: SequenceActivity.HandleFault(ActivityExecutionContext, Exception)\n- uid: System.Workflow.ComponentModel.CompositeActivity.Initialize(System.IServiceProvider)\n  parent: System.Workflow.ComponentModel.CompositeActivity\n  isExternal: false\n  name: Initialize(IServiceProvider)\n  nameWithType: CompositeActivity.Initialize(IServiceProvider)\n  fullName: CompositeActivity.Initialize(IServiceProvider)\n- uid: System.Workflow.ComponentModel.Activity.Invoke``1(System.EventHandler{``0},``0)\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: Invoke<T>(EventHandler<T>, T)\n  nameWithType: Activity.Invoke<T>(EventHandler<T>, T)\n  fullName: Activity.Invoke<T>(EventHandler<T>, T)\n- uid: System.Workflow.ComponentModel.Activity.Invoke``1(System.Workflow.ComponentModel.IActivityEventListener{``0},``0)\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: Invoke<T>(IActivityEventListener<T>, T)\n  nameWithType: Activity.Invoke<T>(IActivityEventListener<T>, T)\n  fullName: Activity.Invoke<T>(IActivityEventListener<T>, T)\n- uid: System.Workflow.ComponentModel.Activity.IsDynamicActivity\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: IsDynamicActivity\n  nameWithType: Activity.IsDynamicActivity\n  fullName: Activity.IsDynamicActivity\n- uid: System.Workflow.ComponentModel.Activity.Load(System.IO.Stream,System.Workflow.ComponentModel.Activity)\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: Load(Stream, Activity)\n  nameWithType: Activity.Load(Stream, Activity)\n  fullName: Activity.Load(Stream, Activity)\n- uid: System.Workflow.ComponentModel.Activity.Load(System.IO.Stream,System.Workflow.ComponentModel.Activity,System.Runtime.Serialization.IFormatter)\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: Load(Stream, Activity, IFormatter)\n  nameWithType: Activity.Load(Stream, Activity, IFormatter)\n  fullName: Activity.Load(Stream, Activity, IFormatter)\n- uid: System.Workflow.ComponentModel.Activity.Name\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: Name\n  nameWithType: Activity.Name\n  fullName: Activity.Name\n- uid: System.Workflow.ComponentModel.CompositeActivity.OnActivityExecutionContextLoad(System.IServiceProvider)\n  parent: System.Workflow.ComponentModel.CompositeActivity\n  isExternal: false\n  name: OnActivityExecutionContextLoad(IServiceProvider)\n  nameWithType: CompositeActivity.OnActivityExecutionContextLoad(IServiceProvider)\n  fullName: CompositeActivity.OnActivityExecutionContextLoad(IServiceProvider)\n- uid: System.Workflow.ComponentModel.CompositeActivity.OnActivityExecutionContextUnload(System.IServiceProvider)\n  parent: System.Workflow.ComponentModel.CompositeActivity\n  isExternal: false\n  name: OnActivityExecutionContextUnload(IServiceProvider)\n  nameWithType: CompositeActivity.OnActivityExecutionContextUnload(IServiceProvider)\n  fullName: CompositeActivity.OnActivityExecutionContextUnload(IServiceProvider)\n- uid: System.Workflow.ComponentModel.Activity.OnClosed(System.IServiceProvider)\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: OnClosed(IServiceProvider)\n  nameWithType: Activity.OnClosed(IServiceProvider)\n  fullName: Activity.OnClosed(IServiceProvider)\n- uid: System.Workflow.ComponentModel.Activity.Parent\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: Parent\n  nameWithType: Activity.Parent\n  fullName: Activity.Parent\n- uid: System.Workflow.ComponentModel.Activity.QualifiedName\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: QualifiedName\n  nameWithType: Activity.QualifiedName\n  fullName: Activity.QualifiedName\n- uid: System.Workflow.ComponentModel.Activity.RaiseEvent(System.Workflow.ComponentModel.DependencyProperty,System.Object,System.EventArgs)\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: RaiseEvent(DependencyProperty, Object, EventArgs)\n  nameWithType: Activity.RaiseEvent(DependencyProperty, Object, EventArgs)\n  fullName: Activity.RaiseEvent(DependencyProperty, Object, EventArgs)\n- uid: System.Workflow.ComponentModel.Activity.RaiseGenericEvent``1(System.Workflow.ComponentModel.DependencyProperty,System.Object,``0)\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: RaiseGenericEvent<T>(DependencyProperty, Object, T)\n  nameWithType: Activity.RaiseGenericEvent<T>(DependencyProperty, Object, T)\n  fullName: Activity.RaiseGenericEvent<T>(DependencyProperty, Object, T)\n- uid: System.Workflow.ComponentModel.Activity.RegisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: RegisterForStatusChange(DependencyProperty, IActivityEventListener<ActivityExecutionStatusChangedEventArgs>)\n  nameWithType: Activity.RegisterForStatusChange(DependencyProperty, IActivityEventListener<ActivityExecutionStatusChangedEventArgs>)\n  fullName: Activity.RegisterForStatusChange(DependencyProperty, IActivityEventListener<ActivityExecutionStatusChangedEventArgs>)\n- uid: System.Workflow.ComponentModel.Activity.Save(System.IO.Stream)\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: Save(Stream)\n  nameWithType: Activity.Save(Stream)\n  fullName: Activity.Save(Stream)\n- uid: System.Workflow.ComponentModel.Activity.Save(System.IO.Stream,System.Runtime.Serialization.IFormatter)\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: Save(Stream, IFormatter)\n  nameWithType: Activity.Save(Stream, IFormatter)\n  fullName: Activity.Save(Stream, IFormatter)\n- uid: System.Workflow.ComponentModel.Activity.StatusChanged\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: StatusChanged\n  nameWithType: Activity.StatusChanged\n  fullName: Activity.StatusChanged\n- uid: System.Workflow.ComponentModel.Activity.StatusChangedEvent\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: StatusChangedEvent\n  nameWithType: Activity.StatusChangedEvent\n  fullName: Activity.StatusChangedEvent\n- uid: System.Workflow.ComponentModel.Activity.TrackData(System.Object)\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: TrackData(Object)\n  nameWithType: Activity.TrackData(Object)\n  fullName: Activity.TrackData(Object)\n- uid: System.Workflow.ComponentModel.Activity.TrackData(System.String,System.Object)\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: TrackData(String, Object)\n  nameWithType: Activity.TrackData(String, Object)\n  fullName: Activity.TrackData(String, Object)\n- uid: System.Workflow.ComponentModel.CompositeActivity.Uninitialize(System.IServiceProvider)\n  parent: System.Workflow.ComponentModel.CompositeActivity\n  isExternal: false\n  name: Uninitialize(IServiceProvider)\n  nameWithType: CompositeActivity.Uninitialize(IServiceProvider)\n  fullName: CompositeActivity.Uninitialize(IServiceProvider)\n- uid: System.Workflow.ComponentModel.Activity.UnregisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: UnregisterForStatusChange(DependencyProperty, IActivityEventListener<ActivityExecutionStatusChangedEventArgs>)\n  nameWithType: Activity.UnregisterForStatusChange(DependencyProperty, IActivityEventListener<ActivityExecutionStatusChangedEventArgs>)\n  fullName: Activity.UnregisterForStatusChange(DependencyProperty, IActivityEventListener<ActivityExecutionStatusChangedEventArgs>)\n- uid: System.Workflow.ComponentModel.Activity.WorkflowInstanceId\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: WorkflowInstanceId\n  nameWithType: Activity.WorkflowInstanceId\n  fullName: Activity.WorkflowInstanceId\n- uid: System.Workflow.ComponentModel.CompositeActivity.Activities\n  parent: System.Workflow.ComponentModel.CompositeActivity\n  isExternal: false\n  name: Activities\n  nameWithType: CompositeActivity.Activities\n  fullName: CompositeActivity.Activities\n- uid: System.Workflow.ComponentModel.CompositeActivity.ApplyWorkflowChanges(System.Workflow.ComponentModel.WorkflowChanges)\n  parent: System.Workflow.ComponentModel.CompositeActivity\n  isExternal: false\n  name: ApplyWorkflowChanges(WorkflowChanges)\n  nameWithType: CompositeActivity.ApplyWorkflowChanges(WorkflowChanges)\n  fullName: CompositeActivity.ApplyWorkflowChanges(WorkflowChanges)\n- uid: System.Workflow.ComponentModel.CompositeActivity.CanModifyActivities\n  parent: System.Workflow.ComponentModel.CompositeActivity\n  isExternal: false\n  name: CanModifyActivities\n  nameWithType: CompositeActivity.CanModifyActivities\n  fullName: CompositeActivity.CanModifyActivities\n- uid: System.Workflow.ComponentModel.CompositeActivity.EnabledActivities\n  parent: System.Workflow.ComponentModel.CompositeActivity\n  isExternal: false\n  name: EnabledActivities\n  nameWithType: CompositeActivity.EnabledActivities\n  fullName: CompositeActivity.EnabledActivities\n- uid: System.Workflow.ComponentModel.CompositeActivity.GetDynamicActivities(System.Workflow.ComponentModel.Activity)\n  parent: System.Workflow.ComponentModel.CompositeActivity\n  isExternal: false\n  name: GetDynamicActivities(Activity)\n  nameWithType: CompositeActivity.GetDynamicActivities(Activity)\n  fullName: CompositeActivity.GetDynamicActivities(Activity)\n- uid: System.Workflow.ComponentModel.CompositeActivity.OnActivityChangeAdd(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.Activity)\n  parent: System.Workflow.ComponentModel.CompositeActivity\n  isExternal: false\n  name: OnActivityChangeAdd(ActivityExecutionContext, Activity)\n  nameWithType: CompositeActivity.OnActivityChangeAdd(ActivityExecutionContext, Activity)\n  fullName: CompositeActivity.OnActivityChangeAdd(ActivityExecutionContext, Activity)\n- uid: System.Workflow.Activities.SequenceActivity.OnActivityChangeRemove(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.Activity)\n  parent: System.Workflow.Activities.SequenceActivity\n  isExternal: false\n  name: OnActivityChangeRemove(ActivityExecutionContext, Activity)\n  nameWithType: SequenceActivity.OnActivityChangeRemove(ActivityExecutionContext, Activity)\n  fullName: SequenceActivity.OnActivityChangeRemove(ActivityExecutionContext, Activity)\n- uid: System.Workflow.ComponentModel.CompositeActivity.OnListChanged(System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs)\n  parent: System.Workflow.ComponentModel.CompositeActivity\n  isExternal: false\n  name: OnListChanged(ActivityCollectionChangeEventArgs)\n  nameWithType: CompositeActivity.OnListChanged(ActivityCollectionChangeEventArgs)\n  fullName: CompositeActivity.OnListChanged(ActivityCollectionChangeEventArgs)\n- uid: System.Workflow.ComponentModel.CompositeActivity.OnListChanging(System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs)\n  parent: System.Workflow.ComponentModel.CompositeActivity\n  isExternal: false\n  name: OnListChanging(ActivityCollectionChangeEventArgs)\n  nameWithType: CompositeActivity.OnListChanging(ActivityCollectionChangeEventArgs)\n  fullName: CompositeActivity.OnListChanging(ActivityCollectionChangeEventArgs)\n- uid: System.Workflow.Activities.SequenceActivity.OnWorkflowChangesCompleted(System.Workflow.ComponentModel.ActivityExecutionContext)\n  parent: System.Workflow.Activities.SequenceActivity\n  isExternal: false\n  name: OnWorkflowChangesCompleted(ActivityExecutionContext)\n  nameWithType: SequenceActivity.OnWorkflowChangesCompleted(ActivityExecutionContext)\n  fullName: SequenceActivity.OnWorkflowChangesCompleted(ActivityExecutionContext)\n- uid: System.Workflow.Activities.SequenceActivity.OnSequenceComplete(System.Workflow.ComponentModel.ActivityExecutionContext)\n  parent: System.Workflow.Activities.SequenceActivity\n  isExternal: false\n  name: OnSequenceComplete(ActivityExecutionContext)\n  nameWithType: SequenceActivity.OnSequenceComplete(ActivityExecutionContext)\n  fullName: SequenceActivity.OnSequenceComplete(ActivityExecutionContext)\n- uid: System.Workflow.Activities.SequenceActivity.System#Workflow#ComponentModel#IActivityEventListener{System#Workflow#ComponentModel#ActivityExecutionStatusChangedEventArgs}#OnEvent(System.Object,System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs)\n  parent: System.Workflow.Activities.SequenceActivity\n  isExternal: false\n  name: IActivityEventListener<ActivityExecutionStatusChangedEventArgs>.OnEvent(Object, ActivityExecutionStatusChangedEventArgs)\n  nameWithType: SequenceActivity.IActivityEventListener<ActivityExecutionStatusChangedEventArgs>.OnEvent(Object, ActivityExecutionStatusChangedEventArgs)\n  fullName: SequenceActivity.IActivityEventListener<ActivityExecutionStatusChangedEventArgs>.OnEvent(Object, ActivityExecutionStatusChangedEventArgs)\n"}