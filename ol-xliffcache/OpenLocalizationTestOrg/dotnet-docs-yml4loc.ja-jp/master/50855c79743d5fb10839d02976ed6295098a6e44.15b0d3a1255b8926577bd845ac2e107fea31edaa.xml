{"nodes":[{"content":"Provides a base implementation for managing the default timeouts that are associated with channel and listener factories.","nodes":[{"pos":[0,121],"content":"Provides a base implementation for managing the default timeouts that are associated with channel and listener factories.","nodes":[{"content":"Provides a base implementation for managing the default timeouts that are associated with channel and listener factories.","pos":[0,121]}]}],"pos":[1101,1223],"yaml":true},{"content":"Specifically, this class provides a common base implementation for the <xref:System.ServiceModel.Channels.ChannelFactoryBase> and <xref:System.ServiceModel.Channels.ChannelListenerBase> channel manager classes for managing the default timeouts that are associated with the channel factories and listeners. Channels are added to the list maintained by the manager by using one of the <xref:System.ServiceModel.Channels.ChannelFactoryBase%601.CreateChannel%2A> methods. Abstract properties for send and receive timeouts used by the channels and listeners that are produced are specified to coordinate the values set for the derived channel and listener factories.  \n  \n The <xref:System.ServiceModel.Channels.ChannelBase>, which provides the base implementation for custom channels, gets its default communication timeouts for the open, close, send and receive operations from the <xref:System.ServiceModel.Channels.ChannelManagerBase> associated with it.  \n  \n The <xref:System.ServiceModel.Channels.ChannelBase> also takes care of managing the manager for you. In addition to exposing a reference to the manager, the base class also notifies the manager when channels are created and destroyed. But the reference to the manager is only good until the channel is destroyed.","nodes":[{"pos":[0,661],"content":"Specifically, this class provides a common base implementation for the <xref:System.ServiceModel.Channels.ChannelFactoryBase> and <xref:System.ServiceModel.Channels.ChannelListenerBase> channel manager classes for managing the default timeouts that are associated with the channel factories and listeners. Channels are added to the list maintained by the manager by using one of the <xref:System.ServiceModel.Channels.ChannelFactoryBase%601.CreateChannel%2A> methods. Abstract properties for send and receive timeouts used by the channels and listeners that are produced are specified to coordinate the values set for the derived channel and listener factories.","nodes":[{"content":"Specifically, this class provides a common base implementation for the <xref:System.ServiceModel.Channels.ChannelFactoryBase> and <xref:System.ServiceModel.Channels.ChannelListenerBase> channel manager classes for managing the default timeouts that are associated with the channel factories and listeners. Channels are added to the list maintained by the manager by using one of the <xref:System.ServiceModel.Channels.ChannelFactoryBase%601.CreateChannel%2A> methods. Abstract properties for send and receive timeouts used by the channels and listeners that are produced are specified to coordinate the values set for the derived channel and listener factories.","pos":[0,661],"nodes":[{"content":"Specifically, this class provides a common base implementation for the <ph id=\"ph1\">&lt;xref:System.ServiceModel.Channels.ChannelFactoryBase&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.ServiceModel.Channels.ChannelListenerBase&gt;</ph> channel manager classes for managing the default timeouts that are associated with the channel factories and listeners.","pos":[0,305],"source":"Specifically, this class provides a common base implementation for the <xref:System.ServiceModel.Channels.ChannelFactoryBase> and <xref:System.ServiceModel.Channels.ChannelListenerBase> channel manager classes for managing the default timeouts that are associated with the channel factories and listeners."},{"content":"Channels are added to the list maintained by the manager by using one of the <ph id=\"ph1\">&lt;xref:System.ServiceModel.Channels.ChannelFactoryBase%601.CreateChannel%2A&gt;</ph> methods.","pos":[306,467],"source":" Channels are added to the list maintained by the manager by using one of the <xref:System.ServiceModel.Channels.ChannelFactoryBase%601.CreateChannel%2A> methods."},{"content":"Abstract properties for send and receive timeouts used by the channels and listeners that are produced are specified to coordinate the values set for the derived channel and listener factories.","pos":[468,661]}]}]},{"pos":[668,953],"content":"The <xref:System.ServiceModel.Channels.ChannelBase>, which provides the base implementation for custom channels, gets its default communication timeouts for the open, close, send and receive operations from the <xref:System.ServiceModel.Channels.ChannelManagerBase> associated with it.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.ServiceModel.Channels.ChannelBase&gt;</ph>, which provides the base implementation for custom channels, gets its default communication timeouts for the open, close, send and receive operations from the <ph id=\"ph2\">&lt;xref:System.ServiceModel.Channels.ChannelManagerBase&gt;</ph> associated with it.","pos":[0,285],"source":"The <xref:System.ServiceModel.Channels.ChannelBase>, which provides the base implementation for custom channels, gets its default communication timeouts for the open, close, send and receive operations from the <xref:System.ServiceModel.Channels.ChannelManagerBase> associated with it."}]},{"pos":[960,1272],"content":"The <xref:System.ServiceModel.Channels.ChannelBase> also takes care of managing the manager for you. In addition to exposing a reference to the manager, the base class also notifies the manager when channels are created and destroyed. But the reference to the manager is only good until the channel is destroyed.","nodes":[{"content":"The <xref:System.ServiceModel.Channels.ChannelBase> also takes care of managing the manager for you. In addition to exposing a reference to the manager, the base class also notifies the manager when channels are created and destroyed. But the reference to the manager is only good until the channel is destroyed.","pos":[0,312],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.ServiceModel.Channels.ChannelBase&gt;</ph> also takes care of managing the manager for you.","pos":[0,100],"source":"The <xref:System.ServiceModel.Channels.ChannelBase> also takes care of managing the manager for you."},{"content":"In addition to exposing a reference to the manager, the base class also notifies the manager when channels are created and destroyed.","pos":[101,234]},{"content":"But the reference to the manager is only good until the channel is destroyed.","pos":[235,312]}]}]}],"pos":[1234,2513],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.ServiceModel.Channels.ChannelManagerBase\"></xref> class.","nodes":[{"pos":[0,109],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Channels.ChannelManagerBase\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.ServiceModel.Channels.ChannelManagerBase\"></xref> class."}],"pos":[7243,7353],"yaml":true},{"content":"When overridden in a derived class, gets the default interval of time a channel has to complete the reception of a message.","nodes":[{"pos":[0,123],"content":"When overridden in a derived class, gets the default interval of time a channel has to complete the reception of a message.","nodes":[{"content":"When overridden in a derived class, gets the default interval of time a channel has to complete the reception of a message.","pos":[0,123]}]}],"pos":[8695,8819],"yaml":true},{"content":"All operations that are potentially lengthy must have a timeout. Methods that do not take explicit timeouts, must delegate to methods that do with default timeouts or must not do any work that blocks. Timeouts are the total limit for high-level operations for which they are to complete, so any retries must be limited to the time not already accessed by earlier tries.","nodes":[{"pos":[0,369],"content":"All operations that are potentially lengthy must have a timeout. Methods that do not take explicit timeouts, must delegate to methods that do with default timeouts or must not do any work that blocks. Timeouts are the total limit for high-level operations for which they are to complete, so any retries must be limited to the time not already accessed by earlier tries.","nodes":[{"content":"All operations that are potentially lengthy must have a timeout. Methods that do not take explicit timeouts, must delegate to methods that do with default timeouts or must not do any work that blocks. Timeouts are the total limit for high-level operations for which they are to complete, so any retries must be limited to the time not already accessed by earlier tries.","pos":[0,369],"nodes":[{"content":"All operations that are potentially lengthy must have a timeout.","pos":[0,64]},{"content":"Methods that do not take explicit timeouts, must delegate to methods that do with default timeouts or must not do any work that blocks.","pos":[65,200]},{"content":"Timeouts are the total limit for high-level operations for which they are to complete, so any retries must be limited to the time not already accessed by earlier tries.","pos":[201,369]}]}]}],"pos":[8830,9200],"yaml":true,"extradata":"MT"},{"content":"The default <xref href=\"System.TimeSpan\"></xref> that specifies how long the channel has to complete the reception of a message before timing out once the receive method has been invoked.","nodes":[{"pos":[0,187],"content":"The default <ph id=\"ph1\">&lt;xref href=\"System.TimeSpan\"&gt;&lt;/xref&gt;</ph> that specifies how long the channel has to complete the reception of a message before timing out once the receive method has been invoked.","source":"The default <xref href=\"System.TimeSpan\"></xref> that specifies how long the channel has to complete the reception of a message before timing out once the receive method has been invoked."}],"pos":[9341,9529],"yaml":true},{"content":"When overridden in a derived class, gets the default interval of time a channel has to complete the sending of a message.","nodes":[{"pos":[0,121],"content":"When overridden in a derived class, gets the default interval of time a channel has to complete the sending of a message.","nodes":[{"content":"When overridden in a derived class, gets the default interval of time a channel has to complete the sending of a message.","pos":[0,121]}]}],"pos":[10794,10916],"yaml":true},{"content":"All operations that are potentially lengthy must have a timeout. Methods that do not take explicit timeouts, must delegate to methods that do with default timeouts or must not do any work that blocks. Timeouts are the total limit for high-level operations for which they are to complete, so any retries must be limited to the time not already accessed by earlier tries.","nodes":[{"pos":[0,369],"content":"All operations that are potentially lengthy must have a timeout. Methods that do not take explicit timeouts, must delegate to methods that do with default timeouts or must not do any work that blocks. Timeouts are the total limit for high-level operations for which they are to complete, so any retries must be limited to the time not already accessed by earlier tries.","nodes":[{"content":"All operations that are potentially lengthy must have a timeout. Methods that do not take explicit timeouts, must delegate to methods that do with default timeouts or must not do any work that blocks. Timeouts are the total limit for high-level operations for which they are to complete, so any retries must be limited to the time not already accessed by earlier tries.","pos":[0,369],"nodes":[{"content":"All operations that are potentially lengthy must have a timeout.","pos":[0,64]},{"content":"Methods that do not take explicit timeouts, must delegate to methods that do with default timeouts or must not do any work that blocks.","pos":[65,200]},{"content":"Timeouts are the total limit for high-level operations for which they are to complete, so any retries must be limited to the time not already accessed by earlier tries.","pos":[201,369]}]}]}],"pos":[10927,11297],"yaml":true,"extradata":"MT"},{"content":"The default <xref href=\"System.TimeSpan\"></xref> that specifies how long the channel has to complete the sending of a message before timing out once the send method has been invoked.","nodes":[{"pos":[0,182],"content":"The default <ph id=\"ph1\">&lt;xref href=\"System.TimeSpan\"&gt;&lt;/xref&gt;</ph> that specifies how long the channel has to complete the sending of a message before timing out once the send method has been invoked.","source":"The default <xref href=\"System.TimeSpan\"></xref> that specifies how long the channel has to complete the sending of a message before timing out once the send method has been invoked."}],"pos":[11435,11618],"yaml":true},{"content":"Gets the interval of time after which the close method, invoked by a communication object, times out.","nodes":[{"pos":[0,101],"content":"Gets the interval of time after which the close method, invoked by a communication object, times out.","nodes":[{"content":"Gets the interval of time after which the close method, invoked by a communication object, times out.","pos":[0,101]}]}],"pos":[13098,13200],"yaml":true},{"content":"All operations that are potentially lengthy must have a timeout. Methods that do not take explicit timeouts, must delegate to methods that do with default timeouts or must not do any work that blocks. Timeouts are the total limit for high-level operations for which they are to complete, so any retries must be limited to the time not already accessed by earlier tries.","nodes":[{"pos":[0,369],"content":"All operations that are potentially lengthy must have a timeout. Methods that do not take explicit timeouts, must delegate to methods that do with default timeouts or must not do any work that blocks. Timeouts are the total limit for high-level operations for which they are to complete, so any retries must be limited to the time not already accessed by earlier tries.","nodes":[{"content":"All operations that are potentially lengthy must have a timeout. Methods that do not take explicit timeouts, must delegate to methods that do with default timeouts or must not do any work that blocks. Timeouts are the total limit for high-level operations for which they are to complete, so any retries must be limited to the time not already accessed by earlier tries.","pos":[0,369],"nodes":[{"content":"All operations that are potentially lengthy must have a timeout.","pos":[0,64]},{"content":"Methods that do not take explicit timeouts, must delegate to methods that do with default timeouts or must not do any work that blocks.","pos":[65,200]},{"content":"Timeouts are the total limit for high-level operations for which they are to complete, so any retries must be limited to the time not already accessed by earlier tries.","pos":[201,369]}]}]}],"pos":[13211,13581],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.Timespan\"></xref> that specifies the interval of time to wait for the close method to time out.","nodes":[{"pos":[0,118],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Timespan\"&gt;&lt;/xref&gt;</ph> that specifies the interval of time to wait for the close method to time out.","source":"The <xref href=\"System.Timespan\"></xref> that specifies the interval of time to wait for the close method to time out."}],"pos":[13744,13863],"yaml":true},{"content":"Gets the interval of time after which the open method, invoked by a communication object, times out.","nodes":[{"pos":[0,100],"content":"Gets the interval of time after which the open method, invoked by a communication object, times out.","nodes":[{"content":"Gets the interval of time after which the open method, invoked by a communication object, times out.","pos":[0,100]}]}],"pos":[15344,15445],"yaml":true},{"content":"All operations that are potentially lengthy must have a timeout. Methods that do not take explicit timeouts, must delegate to methods that do with default timeouts or must not do any work that blocks. Timeouts are the total limit for high-level operations for which they are to complete, so any retries must be limited to the time not already accessed by earlier tries.","nodes":[{"pos":[0,369],"content":"All operations that are potentially lengthy must have a timeout. Methods that do not take explicit timeouts, must delegate to methods that do with default timeouts or must not do any work that blocks. Timeouts are the total limit for high-level operations for which they are to complete, so any retries must be limited to the time not already accessed by earlier tries.","nodes":[{"content":"All operations that are potentially lengthy must have a timeout. Methods that do not take explicit timeouts, must delegate to methods that do with default timeouts or must not do any work that blocks. Timeouts are the total limit for high-level operations for which they are to complete, so any retries must be limited to the time not already accessed by earlier tries.","pos":[0,369],"nodes":[{"content":"All operations that are potentially lengthy must have a timeout.","pos":[0,64]},{"content":"Methods that do not take explicit timeouts, must delegate to methods that do with default timeouts or must not do any work that blocks.","pos":[65,200]},{"content":"Timeouts are the total limit for high-level operations for which they are to complete, so any retries must be limited to the time not already accessed by earlier tries.","pos":[201,369]}]}]}],"pos":[15456,15826],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.Timespan\"></xref> that specifies the interval of time to wait for the open method to time out.","nodes":[{"pos":[0,117],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Timespan\"&gt;&lt;/xref&gt;</ph> that specifies the interval of time to wait for the open method to time out.","source":"The <xref href=\"System.Timespan\"></xref> that specifies the interval of time to wait for the open method to time out."}],"pos":[15988,16106],"yaml":true},{"content":"Gets the interval of time after which the receive method, invoked by a communication object, times out.","nodes":[{"pos":[0,103],"content":"Gets the interval of time after which the receive method, invoked by a communication object, times out.","nodes":[{"content":"Gets the interval of time after which the receive method, invoked by a communication object, times out.","pos":[0,103]}]}],"pos":[17604,17708],"yaml":true},{"content":"<xref:System.ServiceModel.Channels.ChannelManagerBase.System.ServiceModel.IDefaultCommunicationTimeouts.ReceiveTimeout%2A> calls <xref:System.ServiceModel.Channels.ChannelManagerBase.DefaultReceiveTimeout%2A>.","nodes":[{"pos":[0,209],"content":"<xref:System.ServiceModel.Channels.ChannelManagerBase.System.ServiceModel.IDefaultCommunicationTimeouts.ReceiveTimeout%2A> calls <xref:System.ServiceModel.Channels.ChannelManagerBase.DefaultReceiveTimeout%2A>.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.ServiceModel.Channels.ChannelManagerBase.System.ServiceModel.IDefaultCommunicationTimeouts.ReceiveTimeout%2A&gt;</ph> calls <ph id=\"ph2\">&lt;xref:System.ServiceModel.Channels.ChannelManagerBase.DefaultReceiveTimeout%2A&gt;</ph>.","pos":[0,209],"source":"<xref:System.ServiceModel.Channels.ChannelManagerBase.System.ServiceModel.IDefaultCommunicationTimeouts.ReceiveTimeout%2A> calls <xref:System.ServiceModel.Channels.ChannelManagerBase.DefaultReceiveTimeout%2A>."}]}],"pos":[17719,17929],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.Timespan\"></xref> that specifies the interval of time to wait for the receive method to time out.","nodes":[{"pos":[0,120],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Timespan\"&gt;&lt;/xref&gt;</ph> that specifies the interval of time to wait for the receive method to time out.","source":"The <xref href=\"System.Timespan\"></xref> that specifies the interval of time to wait for the receive method to time out."}],"pos":[18094,18215],"yaml":true},{"content":"Gets the interval of time after which the send method, invoked by a communication object, times out.","nodes":[{"pos":[0,100],"content":"Gets the interval of time after which the send method, invoked by a communication object, times out.","nodes":[{"content":"Gets the interval of time after which the send method, invoked by a communication object, times out.","pos":[0,100]}]}],"pos":[19698,19799],"yaml":true},{"content":"<xref:System.ServiceModel.Channels.ChannelManagerBase.System.ServiceModel.IDefaultCommunicationTimeouts.SendTimeout%2A> calls <xref:System.ServiceModel.Channels.ChannelManagerBase.DefaultSendTimeout%2A>.","nodes":[{"pos":[0,203],"content":"<xref:System.ServiceModel.Channels.ChannelManagerBase.System.ServiceModel.IDefaultCommunicationTimeouts.SendTimeout%2A> calls <xref:System.ServiceModel.Channels.ChannelManagerBase.DefaultSendTimeout%2A>.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.ServiceModel.Channels.ChannelManagerBase.System.ServiceModel.IDefaultCommunicationTimeouts.SendTimeout%2A&gt;</ph> calls <ph id=\"ph2\">&lt;xref:System.ServiceModel.Channels.ChannelManagerBase.DefaultSendTimeout%2A&gt;</ph>.","pos":[0,203],"source":"<xref:System.ServiceModel.Channels.ChannelManagerBase.System.ServiceModel.IDefaultCommunicationTimeouts.SendTimeout%2A> calls <xref:System.ServiceModel.Channels.ChannelManagerBase.DefaultSendTimeout%2A>."}]}],"pos":[19810,20014],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.Timespan\"></xref> that specifies the interval of time to wait for the send method to time out.","nodes":[{"pos":[0,117],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Timespan\"&gt;&lt;/xref&gt;</ph> that specifies the interval of time to wait for the send method to time out.","source":"The <xref href=\"System.Timespan\"></xref> that specifies the interval of time to wait for the send method to time out."}],"pos":[20176,20294],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.ServiceModel.Channels.ChannelManagerBase\n  commentId: T:System.ServiceModel.Channels.ChannelManagerBase\n  id: ChannelManagerBase\n  children:\n  - System.ServiceModel.Channels.ChannelManagerBase.#ctor\n  - System.ServiceModel.Channels.ChannelManagerBase.DefaultReceiveTimeout\n  - System.ServiceModel.Channels.ChannelManagerBase.DefaultSendTimeout\n  - System.ServiceModel.Channels.ChannelManagerBase.System#ServiceModel#IDefaultCommunicationTimeouts#CloseTimeout\n  - System.ServiceModel.Channels.ChannelManagerBase.System#ServiceModel#IDefaultCommunicationTimeouts#OpenTimeout\n  - System.ServiceModel.Channels.ChannelManagerBase.System#ServiceModel#IDefaultCommunicationTimeouts#ReceiveTimeout\n  - System.ServiceModel.Channels.ChannelManagerBase.System#ServiceModel#IDefaultCommunicationTimeouts#SendTimeout\n  langs:\n  - csharp\n  name: ChannelManagerBase\n  nameWithType: ChannelManagerBase\n  fullName: System.ServiceModel.Channels.ChannelManagerBase\n  type: Class\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Channels\n  summary: Provides a base implementation for managing the default timeouts that are associated with channel and listener factories.\n  remarks: \"Specifically, this class provides a common base implementation for the <xref:System.ServiceModel.Channels.ChannelFactoryBase> and <xref:System.ServiceModel.Channels.ChannelListenerBase> channel manager classes for managing the default timeouts that are associated with the channel factories and listeners. Channels are added to the list maintained by the manager by using one of the <xref:System.ServiceModel.Channels.ChannelFactoryBase%601.CreateChannel%2A> methods. Abstract properties for send and receive timeouts used by the channels and listeners that are produced are specified to coordinate the values set for the derived channel and listener factories.  \\n  \\n The <xref:System.ServiceModel.Channels.ChannelBase>, which provides the base implementation for custom channels, gets its default communication timeouts for the open, close, send and receive operations from the <xref:System.ServiceModel.Channels.ChannelManagerBase> associated with it.  \\n  \\n The <xref:System.ServiceModel.Channels.ChannelBase> also takes care of managing the manager for you. In addition to exposing a reference to the manager, the base class also notifies the manager when channels are created and destroyed. But the reference to the manager is only good until the channel is destroyed.\"\n  syntax:\n    content: 'public abstract class ChannelManagerBase : System.ServiceModel.Channels.CommunicationObject, System.ServiceModel.IDefaultCommunicationTimeouts'\n  inheritance:\n  - System.Object\n  - System.ServiceModel.Channels.CommunicationObject\n  derivedClasses:\n  - System.ServiceModel.Channels.ChannelFactoryBase\n  - System.ServiceModel.Channels.ChannelListenerBase\n  implements:\n  - System.ServiceModel.IDefaultCommunicationTimeouts\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  - System.ServiceModel.Channels.CommunicationObject.Abort\n  - System.ServiceModel.Channels.CommunicationObject.BeginClose(System.AsyncCallback,System.Object)\n  - System.ServiceModel.Channels.CommunicationObject.BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)\n  - System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.AsyncCallback,System.Object)\n  - System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)\n  - System.ServiceModel.Channels.CommunicationObject.Close\n  - System.ServiceModel.Channels.CommunicationObject.Close(System.TimeSpan)\n  - System.ServiceModel.Channels.CommunicationObject.Closed\n  - System.ServiceModel.Channels.CommunicationObject.Closing\n  - System.ServiceModel.Channels.CommunicationObject.DefaultCloseTimeout\n  - System.ServiceModel.Channels.CommunicationObject.DefaultOpenTimeout\n  - System.ServiceModel.Channels.CommunicationObject.EndClose(System.IAsyncResult)\n  - System.ServiceModel.Channels.CommunicationObject.EndOpen(System.IAsyncResult)\n  - System.ServiceModel.Channels.CommunicationObject.Fault\n  - System.ServiceModel.Channels.CommunicationObject.Faulted\n  - System.ServiceModel.Channels.CommunicationObject.GetCommunicationObjectType\n  - System.ServiceModel.Channels.CommunicationObject.IsDisposed\n  - System.ServiceModel.Channels.CommunicationObject.OnAbort\n  - System.ServiceModel.Channels.CommunicationObject.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)\n  - System.ServiceModel.Channels.CommunicationObject.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)\n  - System.ServiceModel.Channels.CommunicationObject.OnClose(System.TimeSpan)\n  - System.ServiceModel.Channels.CommunicationObject.OnClosed\n  - System.ServiceModel.Channels.CommunicationObject.OnClosing\n  - System.ServiceModel.Channels.CommunicationObject.OnEndClose(System.IAsyncResult)\n  - System.ServiceModel.Channels.CommunicationObject.OnEndOpen(System.IAsyncResult)\n  - System.ServiceModel.Channels.CommunicationObject.OnFaulted\n  - System.ServiceModel.Channels.CommunicationObject.OnOpen(System.TimeSpan)\n  - System.ServiceModel.Channels.CommunicationObject.OnOpened\n  - System.ServiceModel.Channels.CommunicationObject.OnOpening\n  - System.ServiceModel.Channels.CommunicationObject.Open\n  - System.ServiceModel.Channels.CommunicationObject.Open(System.TimeSpan)\n  - System.ServiceModel.Channels.CommunicationObject.Opened\n  - System.ServiceModel.Channels.CommunicationObject.Opening\n  - System.ServiceModel.Channels.CommunicationObject.State\n  - System.ServiceModel.Channels.CommunicationObject.ThisLock\n  - System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposed\n  - System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposedOrImmutable\n  - System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposedOrNotOpen\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/ChannelManagerBase.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Channels.ChannelManagerBase.#ctor\n  commentId: M:System.ServiceModel.Channels.ChannelManagerBase.#ctor\n  id: '#ctor'\n  parent: System.ServiceModel.Channels.ChannelManagerBase\n  langs:\n  - csharp\n  name: ChannelManagerBase()\n  nameWithType: ChannelManagerBase.ChannelManagerBase()\n  fullName: ChannelManagerBase.ChannelManagerBase()\n  type: Constructor\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Channels\n  summary: Initializes a new instance of the <xref href=\"System.ServiceModel.Channels.ChannelManagerBase\"></xref> class.\n  syntax:\n    content: protected ChannelManagerBase ();\n    parameters: []\n  overload: System.ServiceModel.Channels.ChannelManagerBase.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/ChannelManagerBase.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Channels.ChannelManagerBase.DefaultReceiveTimeout\n  commentId: P:System.ServiceModel.Channels.ChannelManagerBase.DefaultReceiveTimeout\n  id: DefaultReceiveTimeout\n  parent: System.ServiceModel.Channels.ChannelManagerBase\n  langs:\n  - csharp\n  name: DefaultReceiveTimeout\n  nameWithType: ChannelManagerBase.DefaultReceiveTimeout\n  fullName: ChannelManagerBase.DefaultReceiveTimeout\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Channels\n  summary: When overridden in a derived class, gets the default interval of time a channel has to complete the reception of a message.\n  remarks: All operations that are potentially lengthy must have a timeout. Methods that do not take explicit timeouts, must delegate to methods that do with default timeouts or must not do any work that blocks. Timeouts are the total limit for high-level operations for which they are to complete, so any retries must be limited to the time not already accessed by earlier tries.\n  syntax:\n    content: protected abstract TimeSpan DefaultReceiveTimeout { get; }\n    return:\n      type: System.TimeSpan\n      description: The default <xref href=\"System.TimeSpan\"></xref> that specifies how long the channel has to complete the reception of a message before timing out once the receive method has been invoked.\n  overload: System.ServiceModel.Channels.ChannelManagerBase.DefaultReceiveTimeout*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/ChannelManagerBase.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Channels.ChannelManagerBase.DefaultSendTimeout\n  commentId: P:System.ServiceModel.Channels.ChannelManagerBase.DefaultSendTimeout\n  id: DefaultSendTimeout\n  parent: System.ServiceModel.Channels.ChannelManagerBase\n  langs:\n  - csharp\n  name: DefaultSendTimeout\n  nameWithType: ChannelManagerBase.DefaultSendTimeout\n  fullName: ChannelManagerBase.DefaultSendTimeout\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Channels\n  summary: When overridden in a derived class, gets the default interval of time a channel has to complete the sending of a message.\n  remarks: All operations that are potentially lengthy must have a timeout. Methods that do not take explicit timeouts, must delegate to methods that do with default timeouts or must not do any work that blocks. Timeouts are the total limit for high-level operations for which they are to complete, so any retries must be limited to the time not already accessed by earlier tries.\n  syntax:\n    content: protected abstract TimeSpan DefaultSendTimeout { get; }\n    return:\n      type: System.TimeSpan\n      description: The default <xref href=\"System.TimeSpan\"></xref> that specifies how long the channel has to complete the sending of a message before timing out once the send method has been invoked.\n  overload: System.ServiceModel.Channels.ChannelManagerBase.DefaultSendTimeout*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/ChannelManagerBase.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Channels.ChannelManagerBase.System#ServiceModel#IDefaultCommunicationTimeouts#CloseTimeout\n  commentId: P:System.ServiceModel.Channels.ChannelManagerBase.System#ServiceModel#IDefaultCommunicationTimeouts#CloseTimeout\n  id: System#ServiceModel#IDefaultCommunicationTimeouts#CloseTimeout\n  isEii: true\n  parent: System.ServiceModel.Channels.ChannelManagerBase\n  langs:\n  - csharp\n  name: IDefaultCommunicationTimeouts.CloseTimeout\n  nameWithType: ChannelManagerBase.IDefaultCommunicationTimeouts.CloseTimeout\n  fullName: ChannelManagerBase.IDefaultCommunicationTimeouts.CloseTimeout\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Channels\n  summary: Gets the interval of time after which the close method, invoked by a communication object, times out.\n  remarks: All operations that are potentially lengthy must have a timeout. Methods that do not take explicit timeouts, must delegate to methods that do with default timeouts or must not do any work that blocks. Timeouts are the total limit for high-level operations for which they are to complete, so any retries must be limited to the time not already accessed by earlier tries.\n  syntax:\n    content: TimeSpan System.ServiceModel.IDefaultCommunicationTimeouts.CloseTimeout { get; }\n    return:\n      type: System.TimeSpan\n      description: The <xref href=\"System.Timespan\"></xref> that specifies the interval of time to wait for the close method to time out.\n  overload: System.ServiceModel.Channels.ChannelManagerBase.System#ServiceModel#IDefaultCommunicationTimeouts#CloseTimeout*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/ChannelManagerBase.xml\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Channels.ChannelManagerBase.System#ServiceModel#IDefaultCommunicationTimeouts#OpenTimeout\n  commentId: P:System.ServiceModel.Channels.ChannelManagerBase.System#ServiceModel#IDefaultCommunicationTimeouts#OpenTimeout\n  id: System#ServiceModel#IDefaultCommunicationTimeouts#OpenTimeout\n  isEii: true\n  parent: System.ServiceModel.Channels.ChannelManagerBase\n  langs:\n  - csharp\n  name: IDefaultCommunicationTimeouts.OpenTimeout\n  nameWithType: ChannelManagerBase.IDefaultCommunicationTimeouts.OpenTimeout\n  fullName: ChannelManagerBase.IDefaultCommunicationTimeouts.OpenTimeout\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Channels\n  summary: Gets the interval of time after which the open method, invoked by a communication object, times out.\n  remarks: All operations that are potentially lengthy must have a timeout. Methods that do not take explicit timeouts, must delegate to methods that do with default timeouts or must not do any work that blocks. Timeouts are the total limit for high-level operations for which they are to complete, so any retries must be limited to the time not already accessed by earlier tries.\n  syntax:\n    content: TimeSpan System.ServiceModel.IDefaultCommunicationTimeouts.OpenTimeout { get; }\n    return:\n      type: System.TimeSpan\n      description: The <xref href=\"System.Timespan\"></xref> that specifies the interval of time to wait for the open method to time out.\n  overload: System.ServiceModel.Channels.ChannelManagerBase.System#ServiceModel#IDefaultCommunicationTimeouts#OpenTimeout*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/ChannelManagerBase.xml\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Channels.ChannelManagerBase.System#ServiceModel#IDefaultCommunicationTimeouts#ReceiveTimeout\n  commentId: P:System.ServiceModel.Channels.ChannelManagerBase.System#ServiceModel#IDefaultCommunicationTimeouts#ReceiveTimeout\n  id: System#ServiceModel#IDefaultCommunicationTimeouts#ReceiveTimeout\n  isEii: true\n  parent: System.ServiceModel.Channels.ChannelManagerBase\n  langs:\n  - csharp\n  name: IDefaultCommunicationTimeouts.ReceiveTimeout\n  nameWithType: ChannelManagerBase.IDefaultCommunicationTimeouts.ReceiveTimeout\n  fullName: ChannelManagerBase.IDefaultCommunicationTimeouts.ReceiveTimeout\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Channels\n  summary: Gets the interval of time after which the receive method, invoked by a communication object, times out.\n  remarks: <xref:System.ServiceModel.Channels.ChannelManagerBase.System.ServiceModel.IDefaultCommunicationTimeouts.ReceiveTimeout%2A> calls <xref:System.ServiceModel.Channels.ChannelManagerBase.DefaultReceiveTimeout%2A>.\n  syntax:\n    content: TimeSpan System.ServiceModel.IDefaultCommunicationTimeouts.ReceiveTimeout { get; }\n    return:\n      type: System.TimeSpan\n      description: The <xref href=\"System.Timespan\"></xref> that specifies the interval of time to wait for the receive method to time out.\n  overload: System.ServiceModel.Channels.ChannelManagerBase.System#ServiceModel#IDefaultCommunicationTimeouts#ReceiveTimeout*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/ChannelManagerBase.xml\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Channels.ChannelManagerBase.System#ServiceModel#IDefaultCommunicationTimeouts#SendTimeout\n  commentId: P:System.ServiceModel.Channels.ChannelManagerBase.System#ServiceModel#IDefaultCommunicationTimeouts#SendTimeout\n  id: System#ServiceModel#IDefaultCommunicationTimeouts#SendTimeout\n  isEii: true\n  parent: System.ServiceModel.Channels.ChannelManagerBase\n  langs:\n  - csharp\n  name: IDefaultCommunicationTimeouts.SendTimeout\n  nameWithType: ChannelManagerBase.IDefaultCommunicationTimeouts.SendTimeout\n  fullName: ChannelManagerBase.IDefaultCommunicationTimeouts.SendTimeout\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Channels\n  summary: Gets the interval of time after which the send method, invoked by a communication object, times out.\n  remarks: <xref:System.ServiceModel.Channels.ChannelManagerBase.System.ServiceModel.IDefaultCommunicationTimeouts.SendTimeout%2A> calls <xref:System.ServiceModel.Channels.ChannelManagerBase.DefaultSendTimeout%2A>.\n  syntax:\n    content: TimeSpan System.ServiceModel.IDefaultCommunicationTimeouts.SendTimeout { get; }\n    return:\n      type: System.TimeSpan\n      description: The <xref href=\"System.Timespan\"></xref> that specifies the interval of time to wait for the send method to time out.\n  overload: System.ServiceModel.Channels.ChannelManagerBase.System#ServiceModel#IDefaultCommunicationTimeouts#SendTimeout*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/ChannelManagerBase.xml\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\nreferences:\n- uid: System.ServiceModel.Channels.CommunicationObject\n  parent: System.ServiceModel.Channels\n  isExternal: false\n  name: CommunicationObject\n  nameWithType: CommunicationObject\n  fullName: System.ServiceModel.Channels.CommunicationObject\n- uid: System.ServiceModel.Channels.ChannelManagerBase.#ctor\n  parent: System.ServiceModel.Channels.ChannelManagerBase\n  isExternal: false\n  name: ChannelManagerBase()\n  nameWithType: ChannelManagerBase.ChannelManagerBase()\n  fullName: ChannelManagerBase.ChannelManagerBase()\n- uid: System.ServiceModel.Channels.ChannelManagerBase.DefaultReceiveTimeout\n  parent: System.ServiceModel.Channels.ChannelManagerBase\n  isExternal: false\n  name: DefaultReceiveTimeout\n  nameWithType: ChannelManagerBase.DefaultReceiveTimeout\n  fullName: ChannelManagerBase.DefaultReceiveTimeout\n- uid: System.TimeSpan\n  parent: System\n  isExternal: false\n  name: TimeSpan\n  nameWithType: TimeSpan\n  fullName: System.TimeSpan\n- uid: System.ServiceModel.Channels.ChannelManagerBase.DefaultSendTimeout\n  parent: System.ServiceModel.Channels.ChannelManagerBase\n  isExternal: false\n  name: DefaultSendTimeout\n  nameWithType: ChannelManagerBase.DefaultSendTimeout\n  fullName: ChannelManagerBase.DefaultSendTimeout\n- uid: System.ServiceModel.Channels.ChannelManagerBase.System#ServiceModel#IDefaultCommunicationTimeouts#CloseTimeout\n  parent: System.ServiceModel.Channels.ChannelManagerBase\n  isExternal: false\n  name: IDefaultCommunicationTimeouts.CloseTimeout\n  nameWithType: ChannelManagerBase.IDefaultCommunicationTimeouts.CloseTimeout\n  fullName: ChannelManagerBase.IDefaultCommunicationTimeouts.CloseTimeout\n- uid: System.ServiceModel.Channels.ChannelManagerBase.System#ServiceModel#IDefaultCommunicationTimeouts#OpenTimeout\n  parent: System.ServiceModel.Channels.ChannelManagerBase\n  isExternal: false\n  name: IDefaultCommunicationTimeouts.OpenTimeout\n  nameWithType: ChannelManagerBase.IDefaultCommunicationTimeouts.OpenTimeout\n  fullName: ChannelManagerBase.IDefaultCommunicationTimeouts.OpenTimeout\n- uid: System.ServiceModel.Channels.ChannelManagerBase.System#ServiceModel#IDefaultCommunicationTimeouts#ReceiveTimeout\n  parent: System.ServiceModel.Channels.ChannelManagerBase\n  isExternal: false\n  name: IDefaultCommunicationTimeouts.ReceiveTimeout\n  nameWithType: ChannelManagerBase.IDefaultCommunicationTimeouts.ReceiveTimeout\n  fullName: ChannelManagerBase.IDefaultCommunicationTimeouts.ReceiveTimeout\n- uid: System.ServiceModel.Channels.ChannelManagerBase.System#ServiceModel#IDefaultCommunicationTimeouts#SendTimeout\n  parent: System.ServiceModel.Channels.ChannelManagerBase\n  isExternal: false\n  name: IDefaultCommunicationTimeouts.SendTimeout\n  nameWithType: ChannelManagerBase.IDefaultCommunicationTimeouts.SendTimeout\n  fullName: ChannelManagerBase.IDefaultCommunicationTimeouts.SendTimeout\n- uid: System.ServiceModel.Channels.ChannelManagerBase.#ctor*\n  parent: System.ServiceModel.Channels.ChannelManagerBase\n  isExternal: false\n  name: ChannelManagerBase\n  nameWithType: ChannelManagerBase.ChannelManagerBase\n  fullName: ChannelManagerBase.ChannelManagerBase\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/ChannelManagerBase.xml\n- uid: System.ServiceModel.Channels.ChannelManagerBase.DefaultReceiveTimeout*\n  parent: System.ServiceModel.Channels.ChannelManagerBase\n  isExternal: false\n  name: DefaultReceiveTimeout\n  nameWithType: ChannelManagerBase.DefaultReceiveTimeout\n  fullName: ChannelManagerBase.DefaultReceiveTimeout\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/ChannelManagerBase.xml\n- uid: System.ServiceModel.Channels.ChannelManagerBase.DefaultSendTimeout*\n  parent: System.ServiceModel.Channels.ChannelManagerBase\n  isExternal: false\n  name: DefaultSendTimeout\n  nameWithType: ChannelManagerBase.DefaultSendTimeout\n  fullName: ChannelManagerBase.DefaultSendTimeout\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/ChannelManagerBase.xml\n- uid: System.ServiceModel.Channels.ChannelManagerBase.System#ServiceModel#IDefaultCommunicationTimeouts#CloseTimeout*\n  parent: System.ServiceModel.Channels.ChannelManagerBase\n  isExternal: false\n  name: System.ServiceModel.IDefaultCommunicationTimeouts.CloseTimeout\n  nameWithType: ChannelManagerBase.System.ServiceModel.IDefaultCommunicationTimeouts.CloseTimeout\n  fullName: ChannelManagerBase.System.ServiceModel.IDefaultCommunicationTimeouts.CloseTimeout\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/ChannelManagerBase.xml\n- uid: System.ServiceModel.Channels.ChannelManagerBase.System#ServiceModel#IDefaultCommunicationTimeouts#OpenTimeout*\n  parent: System.ServiceModel.Channels.ChannelManagerBase\n  isExternal: false\n  name: System.ServiceModel.IDefaultCommunicationTimeouts.OpenTimeout\n  nameWithType: ChannelManagerBase.System.ServiceModel.IDefaultCommunicationTimeouts.OpenTimeout\n  fullName: ChannelManagerBase.System.ServiceModel.IDefaultCommunicationTimeouts.OpenTimeout\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/ChannelManagerBase.xml\n- uid: System.ServiceModel.Channels.ChannelManagerBase.System#ServiceModel#IDefaultCommunicationTimeouts#ReceiveTimeout*\n  parent: System.ServiceModel.Channels.ChannelManagerBase\n  isExternal: false\n  name: System.ServiceModel.IDefaultCommunicationTimeouts.ReceiveTimeout\n  nameWithType: ChannelManagerBase.System.ServiceModel.IDefaultCommunicationTimeouts.ReceiveTimeout\n  fullName: ChannelManagerBase.System.ServiceModel.IDefaultCommunicationTimeouts.ReceiveTimeout\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/ChannelManagerBase.xml\n- uid: System.ServiceModel.Channels.ChannelManagerBase.System#ServiceModel#IDefaultCommunicationTimeouts#SendTimeout*\n  parent: System.ServiceModel.Channels.ChannelManagerBase\n  isExternal: false\n  name: System.ServiceModel.IDefaultCommunicationTimeouts.SendTimeout\n  nameWithType: ChannelManagerBase.System.ServiceModel.IDefaultCommunicationTimeouts.SendTimeout\n  fullName: ChannelManagerBase.System.ServiceModel.IDefaultCommunicationTimeouts.SendTimeout\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/ChannelManagerBase.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.ServiceModel.Channels.CommunicationObject.Abort\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: Abort()\n  nameWithType: CommunicationObject.Abort()\n  fullName: CommunicationObject.Abort()\n- uid: System.ServiceModel.Channels.CommunicationObject.BeginClose(System.AsyncCallback,System.Object)\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: BeginClose(AsyncCallback, Object)\n  nameWithType: CommunicationObject.BeginClose(AsyncCallback, Object)\n  fullName: CommunicationObject.BeginClose(AsyncCallback, Object)\n- uid: System.ServiceModel.Channels.CommunicationObject.BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: BeginClose(TimeSpan, AsyncCallback, Object)\n  nameWithType: CommunicationObject.BeginClose(TimeSpan, AsyncCallback, Object)\n  fullName: CommunicationObject.BeginClose(TimeSpan, AsyncCallback, Object)\n- uid: System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.AsyncCallback,System.Object)\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: BeginOpen(AsyncCallback, Object)\n  nameWithType: CommunicationObject.BeginOpen(AsyncCallback, Object)\n  fullName: CommunicationObject.BeginOpen(AsyncCallback, Object)\n- uid: System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: BeginOpen(TimeSpan, AsyncCallback, Object)\n  nameWithType: CommunicationObject.BeginOpen(TimeSpan, AsyncCallback, Object)\n  fullName: CommunicationObject.BeginOpen(TimeSpan, AsyncCallback, Object)\n- uid: System.ServiceModel.Channels.CommunicationObject.Close\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: Close()\n  nameWithType: CommunicationObject.Close()\n  fullName: CommunicationObject.Close()\n- uid: System.ServiceModel.Channels.CommunicationObject.Close(System.TimeSpan)\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: Close(TimeSpan)\n  nameWithType: CommunicationObject.Close(TimeSpan)\n  fullName: CommunicationObject.Close(TimeSpan)\n- uid: System.ServiceModel.Channels.CommunicationObject.Closed\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: Closed\n  nameWithType: CommunicationObject.Closed\n  fullName: CommunicationObject.Closed\n- uid: System.ServiceModel.Channels.CommunicationObject.Closing\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: Closing\n  nameWithType: CommunicationObject.Closing\n  fullName: CommunicationObject.Closing\n- uid: System.ServiceModel.Channels.CommunicationObject.DefaultCloseTimeout\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: DefaultCloseTimeout\n  nameWithType: CommunicationObject.DefaultCloseTimeout\n  fullName: CommunicationObject.DefaultCloseTimeout\n- uid: System.ServiceModel.Channels.CommunicationObject.DefaultOpenTimeout\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: DefaultOpenTimeout\n  nameWithType: CommunicationObject.DefaultOpenTimeout\n  fullName: CommunicationObject.DefaultOpenTimeout\n- uid: System.ServiceModel.Channels.CommunicationObject.EndClose(System.IAsyncResult)\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: EndClose(IAsyncResult)\n  nameWithType: CommunicationObject.EndClose(IAsyncResult)\n  fullName: CommunicationObject.EndClose(IAsyncResult)\n- uid: System.ServiceModel.Channels.CommunicationObject.EndOpen(System.IAsyncResult)\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: EndOpen(IAsyncResult)\n  nameWithType: CommunicationObject.EndOpen(IAsyncResult)\n  fullName: CommunicationObject.EndOpen(IAsyncResult)\n- uid: System.ServiceModel.Channels.CommunicationObject.Fault\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: Fault()\n  nameWithType: CommunicationObject.Fault()\n  fullName: CommunicationObject.Fault()\n- uid: System.ServiceModel.Channels.CommunicationObject.Faulted\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: Faulted\n  nameWithType: CommunicationObject.Faulted\n  fullName: CommunicationObject.Faulted\n- uid: System.ServiceModel.Channels.CommunicationObject.GetCommunicationObjectType\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: GetCommunicationObjectType()\n  nameWithType: CommunicationObject.GetCommunicationObjectType()\n  fullName: CommunicationObject.GetCommunicationObjectType()\n- uid: System.ServiceModel.Channels.CommunicationObject.IsDisposed\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: IsDisposed\n  nameWithType: CommunicationObject.IsDisposed\n  fullName: CommunicationObject.IsDisposed\n- uid: System.ServiceModel.Channels.CommunicationObject.OnAbort\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: OnAbort()\n  nameWithType: CommunicationObject.OnAbort()\n  fullName: CommunicationObject.OnAbort()\n- uid: System.ServiceModel.Channels.CommunicationObject.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: OnBeginClose(TimeSpan, AsyncCallback, Object)\n  nameWithType: CommunicationObject.OnBeginClose(TimeSpan, AsyncCallback, Object)\n  fullName: CommunicationObject.OnBeginClose(TimeSpan, AsyncCallback, Object)\n- uid: System.ServiceModel.Channels.CommunicationObject.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: OnBeginOpen(TimeSpan, AsyncCallback, Object)\n  nameWithType: CommunicationObject.OnBeginOpen(TimeSpan, AsyncCallback, Object)\n  fullName: CommunicationObject.OnBeginOpen(TimeSpan, AsyncCallback, Object)\n- uid: System.ServiceModel.Channels.CommunicationObject.OnClose(System.TimeSpan)\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: OnClose(TimeSpan)\n  nameWithType: CommunicationObject.OnClose(TimeSpan)\n  fullName: CommunicationObject.OnClose(TimeSpan)\n- uid: System.ServiceModel.Channels.CommunicationObject.OnClosed\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: OnClosed()\n  nameWithType: CommunicationObject.OnClosed()\n  fullName: CommunicationObject.OnClosed()\n- uid: System.ServiceModel.Channels.CommunicationObject.OnClosing\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: OnClosing()\n  nameWithType: CommunicationObject.OnClosing()\n  fullName: CommunicationObject.OnClosing()\n- uid: System.ServiceModel.Channels.CommunicationObject.OnEndClose(System.IAsyncResult)\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: OnEndClose(IAsyncResult)\n  nameWithType: CommunicationObject.OnEndClose(IAsyncResult)\n  fullName: CommunicationObject.OnEndClose(IAsyncResult)\n- uid: System.ServiceModel.Channels.CommunicationObject.OnEndOpen(System.IAsyncResult)\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: OnEndOpen(IAsyncResult)\n  nameWithType: CommunicationObject.OnEndOpen(IAsyncResult)\n  fullName: CommunicationObject.OnEndOpen(IAsyncResult)\n- uid: System.ServiceModel.Channels.CommunicationObject.OnFaulted\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: OnFaulted()\n  nameWithType: CommunicationObject.OnFaulted()\n  fullName: CommunicationObject.OnFaulted()\n- uid: System.ServiceModel.Channels.CommunicationObject.OnOpen(System.TimeSpan)\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: OnOpen(TimeSpan)\n  nameWithType: CommunicationObject.OnOpen(TimeSpan)\n  fullName: CommunicationObject.OnOpen(TimeSpan)\n- uid: System.ServiceModel.Channels.CommunicationObject.OnOpened\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: OnOpened()\n  nameWithType: CommunicationObject.OnOpened()\n  fullName: CommunicationObject.OnOpened()\n- uid: System.ServiceModel.Channels.CommunicationObject.OnOpening\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: OnOpening()\n  nameWithType: CommunicationObject.OnOpening()\n  fullName: CommunicationObject.OnOpening()\n- uid: System.ServiceModel.Channels.CommunicationObject.Open\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: Open()\n  nameWithType: CommunicationObject.Open()\n  fullName: CommunicationObject.Open()\n- uid: System.ServiceModel.Channels.CommunicationObject.Open(System.TimeSpan)\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: Open(TimeSpan)\n  nameWithType: CommunicationObject.Open(TimeSpan)\n  fullName: CommunicationObject.Open(TimeSpan)\n- uid: System.ServiceModel.Channels.CommunicationObject.Opened\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: Opened\n  nameWithType: CommunicationObject.Opened\n  fullName: CommunicationObject.Opened\n- uid: System.ServiceModel.Channels.CommunicationObject.Opening\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: Opening\n  nameWithType: CommunicationObject.Opening\n  fullName: CommunicationObject.Opening\n- uid: System.ServiceModel.Channels.CommunicationObject.State\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: State\n  nameWithType: CommunicationObject.State\n  fullName: CommunicationObject.State\n- uid: System.ServiceModel.Channels.CommunicationObject.ThisLock\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: ThisLock\n  nameWithType: CommunicationObject.ThisLock\n  fullName: CommunicationObject.ThisLock\n- uid: System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposed\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: ThrowIfDisposed()\n  nameWithType: CommunicationObject.ThrowIfDisposed()\n  fullName: CommunicationObject.ThrowIfDisposed()\n- uid: System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposedOrImmutable\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: ThrowIfDisposedOrImmutable()\n  nameWithType: CommunicationObject.ThrowIfDisposedOrImmutable()\n  fullName: CommunicationObject.ThrowIfDisposedOrImmutable()\n- uid: System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposedOrNotOpen\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: ThrowIfDisposedOrNotOpen()\n  nameWithType: CommunicationObject.ThrowIfDisposedOrNotOpen()\n  fullName: CommunicationObject.ThrowIfDisposedOrNotOpen()\n- uid: System.ServiceModel.IDefaultCommunicationTimeouts\n  parent: System.ServiceModel\n  isExternal: false\n  name: IDefaultCommunicationTimeouts\n  nameWithType: IDefaultCommunicationTimeouts\n  fullName: System.ServiceModel.IDefaultCommunicationTimeouts\n"}