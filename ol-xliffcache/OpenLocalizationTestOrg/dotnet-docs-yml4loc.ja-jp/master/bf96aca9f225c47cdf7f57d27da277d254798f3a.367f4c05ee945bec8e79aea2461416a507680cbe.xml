{"nodes":[{"content":"Provides the base functionality for ASP.NET view state persistence mechanisms.","nodes":[{"pos":[0,78],"content":"Provides the base functionality for ASP.NET view state persistence mechanisms.","nodes":[{"content":"Provides the base functionality for ASP.NET view state persistence mechanisms.","pos":[0,78]}]}],"pos":[707,786],"yaml":true},{"content":"The HTTP requests and responses are inherently stateless. To maintain state information between HTTP requests, ASP.NET server pages can store <xref:System.Web.UI.Page> state. This state, called view state, consists of page and control settings and data that make the page and controls appear as if they are the same ones that the user saw and interacted with on their last round trip to the server. Several mechanisms exist to store view state between successive requests to the same page. The abstract <xref:System.Web.UI.PageStatePersister> class represents the base class for these state information storage mechanisms.  \n  \n The default view state persistence mechanism in ASP.NET is to maintain the state information as a Base64-encoded string in a hidden HTML element (an element with the `type` attribute set to `\"hidden\"`) on the page. An ASP.NET page uses a <xref:System.Web.UI.HiddenFieldPageStatePersister> object to perform this work, using an <xref:System.Web.UI.IStateFormatter> instance to serialize and deserialize object state information. Alternately, you can store the view state for your pages in the <xref:System.Web.HttpContext.Session%2A> object on the server using the <xref:System.Web.UI.SessionPageStatePersister> class for mobile clients with limited bandwidth and resources. In some cases, you might disable view state persistence altogether. If you do this, the result is that sometimes pages and controls that rely on state persistence do not behave correctly. For more information about page state management and view state, see [ASP.NET State Management Overview](http://msdn.microsoft.com/library/0218d965-5d30-445b-b6a6-8870e70e63ce).  \n  \n If you are writing controls, you can store state information for the controls in the <xref:System.Web.UI.Control.ViewState%2A> dictionary, which is a <xref:System.Web.UI.StateBag> object. A developer would retrieve the control state through the <xref:System.Web.UI.PageStatePersister.ControlState%2A> property. You assign keys and values to the <xref:System.Web.UI.Control.ViewState%2A> property, and the <xref:System.Web.UI.Page> object serializes the state information between requests. To perform custom state handling in your control, override the <xref:System.Web.UI.Control.LoadViewState%2A> and <xref:System.Web.UI.Control.SaveViewState%2A> methods. Any state information that is stored in this dictionary is lost when view state is disabled by a page developer. To mitigate this, in ASP.NET version 2.0 you can store critical state information in a separate object, called control state. The control state object is not affected when view state is disabled by a page developer. Storing state information in the control state object requires that the control override the <xref:System.Web.UI.Control.LoadControlState%2A> and <xref:System.Web.UI.Control.SaveControlState%2A> methods and that the control be registered to store state information in control state every time the control is initialized. You can register a control to use control state by overriding the <xref:System.Web.UI.Control.OnInit%2A> method and calling the <xref:System.Web.UI.Page.RegisterRequiresControlState%2A> method. For more information about using the <xref:System.Web.UI.Control.ViewState%2A> property and control state when developing controls, see [Developing Custom ASP.NET Server Controls](http://msdn.microsoft.com/library/fbe26c16-cff4-4089-b3dd-877411f0c0ef).  \n  \n To maintain view state on clients that cannot support the existing view state persistence mechanisms, you can extend the <xref:System.Web.UI.PageStatePersister> class to introduce your own view state persistence methods, and you can use page adapters to configure your ASP.NET application to use different view state persistence mechanisms based on the type of client to which a page is served. Classes that derive from the <xref:System.Web.UI.PageStatePersister> class must override the abstract <xref:System.Web.UI.PageStatePersister.Save%2A> method to store view state and control state in the persistence medium, and override the <xref:System.Web.UI.PageStatePersister.Load%2A> method to extract it. If you need to serialize view state and control state to a string, you can use the <xref:System.Web.UI.IStateFormatter> object that is accessed using the <xref:System.Web.UI.PageStatePersister.StateFormatter%2A> property. It efficiently serializes and deserializes object state information to a Base64-encoded string. You can also override the <xref:System.Web.UI.PageStatePersister.StateFormatter%2A> property to supply your own object state serialization mechanism.","nodes":[{"pos":[0,622],"content":"The HTTP requests and responses are inherently stateless. To maintain state information between HTTP requests, ASP.NET server pages can store <xref:System.Web.UI.Page> state. This state, called view state, consists of page and control settings and data that make the page and controls appear as if they are the same ones that the user saw and interacted with on their last round trip to the server. Several mechanisms exist to store view state between successive requests to the same page. The abstract <xref:System.Web.UI.PageStatePersister> class represents the base class for these state information storage mechanisms.","nodes":[{"content":"The HTTP requests and responses are inherently stateless. To maintain state information between HTTP requests, ASP.NET server pages can store <xref:System.Web.UI.Page> state. This state, called view state, consists of page and control settings and data that make the page and controls appear as if they are the same ones that the user saw and interacted with on their last round trip to the server. Several mechanisms exist to store view state between successive requests to the same page. The abstract <xref:System.Web.UI.PageStatePersister> class represents the base class for these state information storage mechanisms.","pos":[0,622],"nodes":[{"content":"The HTTP requests and responses are inherently stateless.","pos":[0,57]},{"content":"To maintain state information between HTTP requests, ASP.NET server pages can store <ph id=\"ph1\">&lt;xref:System.Web.UI.Page&gt;</ph> state.","pos":[58,174],"source":" To maintain state information between HTTP requests, ASP.NET server pages can store <xref:System.Web.UI.Page> state."},{"content":"This state, called view state, consists of page and control settings and data that make the page and controls appear as if they are the same ones that the user saw and interacted with on their last round trip to the server.","pos":[175,398]},{"content":"Several mechanisms exist to store view state between successive requests to the same page.","pos":[399,489]},{"content":"The abstract <ph id=\"ph1\">&lt;xref:System.Web.UI.PageStatePersister&gt;</ph> class represents the base class for these state information storage mechanisms.","pos":[490,622],"source":" The abstract <xref:System.Web.UI.PageStatePersister> class represents the base class for these state information storage mechanisms."}]}]},{"pos":[629,1668],"content":"The default view state persistence mechanism in ASP.NET is to maintain the state information as a Base64-encoded string in a hidden HTML element (an element with the `type` attribute set to `\"hidden\"`) on the page. An ASP.NET page uses a <xref:System.Web.UI.HiddenFieldPageStatePersister> object to perform this work, using an <xref:System.Web.UI.IStateFormatter> instance to serialize and deserialize object state information. Alternately, you can store the view state for your pages in the <xref:System.Web.HttpContext.Session%2A> object on the server using the <xref:System.Web.UI.SessionPageStatePersister> class for mobile clients with limited bandwidth and resources. In some cases, you might disable view state persistence altogether. If you do this, the result is that sometimes pages and controls that rely on state persistence do not behave correctly. For more information about page state management and view state, see [ASP.NET State Management Overview](http://msdn.microsoft.com/library/0218d965-5d30-445b-b6a6-8870e70e63ce).","nodes":[{"content":"The default view state persistence mechanism in ASP.NET is to maintain the state information as a Base64-encoded string in a hidden HTML element (an element with the <ph id=\"ph1\">`type`</ph> attribute set to <ph id=\"ph2\">`\"hidden\"`</ph>) on the page.","pos":[0,214],"source":"The default view state persistence mechanism in ASP.NET is to maintain the state information as a Base64-encoded string in a hidden HTML element (an element with the `type` attribute set to `\"hidden\"`) on the page."},{"content":"An ASP.NET page uses a <ph id=\"ph1\">&lt;xref:System.Web.UI.HiddenFieldPageStatePersister&gt;</ph> object to perform this work, using an <ph id=\"ph2\">&lt;xref:System.Web.UI.IStateFormatter&gt;</ph> instance to serialize and deserialize object state information.","pos":[215,427],"source":" An ASP.NET page uses a <xref:System.Web.UI.HiddenFieldPageStatePersister> object to perform this work, using an <xref:System.Web.UI.IStateFormatter> instance to serialize and deserialize object state information."},{"content":"Alternately, you can store the view state for your pages in the <ph id=\"ph1\">&lt;xref:System.Web.HttpContext.Session%2A&gt;</ph> object on the server using the <ph id=\"ph2\">&lt;xref:System.Web.UI.SessionPageStatePersister&gt;</ph> class for mobile clients with limited bandwidth and resources.","pos":[428,673],"source":" Alternately, you can store the view state for your pages in the <xref:System.Web.HttpContext.Session%2A> object on the server using the <xref:System.Web.UI.SessionPageStatePersister> class for mobile clients with limited bandwidth and resources."},{"content":"In some cases, you might disable view state persistence altogether.","pos":[674,741]},{"content":"If you do this, the result is that sometimes pages and controls that rely on state persistence do not behave correctly.","pos":[742,861]},{"content":"For more information about page state management and view state, see <bpt id=\"p1\">[</bpt>ASP.NET State Management Overview<ept id=\"p1\">](http://msdn.microsoft.com/library/0218d965-5d30-445b-b6a6-8870e70e63ce)</ept>.","pos":[862,1039],"source":" For more information about page state management and view state, see [ASP.NET State Management Overview](http://msdn.microsoft.com/library/0218d965-5d30-445b-b6a6-8870e70e63ce)."}]},{"pos":[1675,3428],"content":"If you are writing controls, you can store state information for the controls in the <xref:System.Web.UI.Control.ViewState%2A> dictionary, which is a <xref:System.Web.UI.StateBag> object. A developer would retrieve the control state through the <xref:System.Web.UI.PageStatePersister.ControlState%2A> property. You assign keys and values to the <xref:System.Web.UI.Control.ViewState%2A> property, and the <xref:System.Web.UI.Page> object serializes the state information between requests. To perform custom state handling in your control, override the <xref:System.Web.UI.Control.LoadViewState%2A> and <xref:System.Web.UI.Control.SaveViewState%2A> methods. Any state information that is stored in this dictionary is lost when view state is disabled by a page developer. To mitigate this, in ASP.NET version 2.0 you can store critical state information in a separate object, called control state. The control state object is not affected when view state is disabled by a page developer. Storing state information in the control state object requires that the control override the <xref:System.Web.UI.Control.LoadControlState%2A> and <xref:System.Web.UI.Control.SaveControlState%2A> methods and that the control be registered to store state information in control state every time the control is initialized. You can register a control to use control state by overriding the <xref:System.Web.UI.Control.OnInit%2A> method and calling the <xref:System.Web.UI.Page.RegisterRequiresControlState%2A> method. For more information about using the <xref:System.Web.UI.Control.ViewState%2A> property and control state when developing controls, see [Developing Custom ASP.NET Server Controls](http://msdn.microsoft.com/library/fbe26c16-cff4-4089-b3dd-877411f0c0ef).","nodes":[{"content":"If you are writing controls, you can store state information for the controls in the <ph id=\"ph1\">&lt;xref:System.Web.UI.Control.ViewState%2A&gt;</ph> dictionary, which is a <ph id=\"ph2\">&lt;xref:System.Web.UI.StateBag&gt;</ph> object.","pos":[0,187],"source":"If you are writing controls, you can store state information for the controls in the <xref:System.Web.UI.Control.ViewState%2A> dictionary, which is a <xref:System.Web.UI.StateBag> object."},{"content":"A developer would retrieve the control state through the <ph id=\"ph1\">&lt;xref:System.Web.UI.PageStatePersister.ControlState%2A&gt;</ph> property.","pos":[188,310],"source":" A developer would retrieve the control state through the <xref:System.Web.UI.PageStatePersister.ControlState%2A> property."},{"content":"You assign keys and values to the <ph id=\"ph1\">&lt;xref:System.Web.UI.Control.ViewState%2A&gt;</ph> property, and the <ph id=\"ph2\">&lt;xref:System.Web.UI.Page&gt;</ph> object serializes the state information between requests.","pos":[311,488],"source":" You assign keys and values to the <xref:System.Web.UI.Control.ViewState%2A> property, and the <xref:System.Web.UI.Page> object serializes the state information between requests."},{"content":"To perform custom state handling in your control, override the <ph id=\"ph1\">&lt;xref:System.Web.UI.Control.LoadViewState%2A&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Web.UI.Control.SaveViewState%2A&gt;</ph> methods.","pos":[489,656],"source":" To perform custom state handling in your control, override the <xref:System.Web.UI.Control.LoadViewState%2A> and <xref:System.Web.UI.Control.SaveViewState%2A> methods."},{"content":"Any state information that is stored in this dictionary is lost when view state is disabled by a page developer.","pos":[657,769]},{"content":"To mitigate this, in ASP.NET version 2.0 you can store critical state information in a separate object, called control state.","pos":[770,895]},{"content":"The control state object is not affected when view state is disabled by a page developer.","pos":[896,985]},{"content":"Storing state information in the control state object requires that the control override the <ph id=\"ph1\">&lt;xref:System.Web.UI.Control.LoadControlState%2A&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Web.UI.Control.SaveControlState%2A&gt;</ph> methods and that the control be registered to store state information in control state every time the control is initialized.","pos":[986,1306],"source":" Storing state information in the control state object requires that the control override the <xref:System.Web.UI.Control.LoadControlState%2A> and <xref:System.Web.UI.Control.SaveControlState%2A> methods and that the control be registered to store state information in control state every time the control is initialized."},{"content":"You can register a control to use control state by overriding the <ph id=\"ph1\">&lt;xref:System.Web.UI.Control.OnInit%2A&gt;</ph> method and calling the <ph id=\"ph2\">&lt;xref:System.Web.UI.Page.RegisterRequiresControlState%2A&gt;</ph> method.","pos":[1307,1500],"source":" You can register a control to use control state by overriding the <xref:System.Web.UI.Control.OnInit%2A> method and calling the <xref:System.Web.UI.Page.RegisterRequiresControlState%2A> method."},{"content":"For more information about using the <ph id=\"ph1\">&lt;xref:System.Web.UI.Control.ViewState%2A&gt;</ph> property and control state when developing controls, see <bpt id=\"p1\">[</bpt>Developing Custom ASP.NET Server Controls<ept id=\"p1\">](http://msdn.microsoft.com/library/fbe26c16-cff4-4089-b3dd-877411f0c0ef)</ept>.","pos":[1501,1753],"source":" For more information about using the <xref:System.Web.UI.Control.ViewState%2A> property and control state when developing controls, see [Developing Custom ASP.NET Server Controls](http://msdn.microsoft.com/library/fbe26c16-cff4-4089-b3dd-877411f0c0ef)."}]},{"pos":[3435,4606],"content":"To maintain view state on clients that cannot support the existing view state persistence mechanisms, you can extend the <xref:System.Web.UI.PageStatePersister> class to introduce your own view state persistence methods, and you can use page adapters to configure your ASP.NET application to use different view state persistence mechanisms based on the type of client to which a page is served. Classes that derive from the <xref:System.Web.UI.PageStatePersister> class must override the abstract <xref:System.Web.UI.PageStatePersister.Save%2A> method to store view state and control state in the persistence medium, and override the <xref:System.Web.UI.PageStatePersister.Load%2A> method to extract it. If you need to serialize view state and control state to a string, you can use the <xref:System.Web.UI.IStateFormatter> object that is accessed using the <xref:System.Web.UI.PageStatePersister.StateFormatter%2A> property. It efficiently serializes and deserializes object state information to a Base64-encoded string. You can also override the <xref:System.Web.UI.PageStatePersister.StateFormatter%2A> property to supply your own object state serialization mechanism.","nodes":[{"content":"To maintain view state on clients that cannot support the existing view state persistence mechanisms, you can extend the <xref:System.Web.UI.PageStatePersister> class to introduce your own view state persistence methods, and you can use page adapters to configure your ASP.NET application to use different view state persistence mechanisms based on the type of client to which a page is served. Classes that derive from the <xref:System.Web.UI.PageStatePersister> class must override the abstract <xref:System.Web.UI.PageStatePersister.Save%2A> method to store view state and control state in the persistence medium, and override the <xref:System.Web.UI.PageStatePersister.Load%2A> method to extract it. If you need to serialize view state and control state to a string, you can use the <xref:System.Web.UI.IStateFormatter> object that is accessed using the <xref:System.Web.UI.PageStatePersister.StateFormatter%2A> property. It efficiently serializes and deserializes object state information to a Base64-encoded string. You can also override the <xref:System.Web.UI.PageStatePersister.StateFormatter%2A> property to supply your own object state serialization mechanism.","pos":[0,1171],"nodes":[{"content":"To maintain view state on clients that cannot support the existing view state persistence mechanisms, you can extend the <ph id=\"ph1\">&lt;xref:System.Web.UI.PageStatePersister&gt;</ph> class to introduce your own view state persistence methods, and you can use page adapters to configure your ASP.NET application to use different view state persistence mechanisms based on the type of client to which a page is served.","pos":[0,394],"source":"To maintain view state on clients that cannot support the existing view state persistence mechanisms, you can extend the <xref:System.Web.UI.PageStatePersister> class to introduce your own view state persistence methods, and you can use page adapters to configure your ASP.NET application to use different view state persistence mechanisms based on the type of client to which a page is served."},{"content":"Classes that derive from the <ph id=\"ph1\">&lt;xref:System.Web.UI.PageStatePersister&gt;</ph> class must override the abstract <ph id=\"ph2\">&lt;xref:System.Web.UI.PageStatePersister.Save%2A&gt;</ph> method to store view state and control state in the persistence medium, and override the <ph id=\"ph3\">&lt;xref:System.Web.UI.PageStatePersister.Load%2A&gt;</ph> method to extract it.","pos":[395,703],"source":" Classes that derive from the <xref:System.Web.UI.PageStatePersister> class must override the abstract <xref:System.Web.UI.PageStatePersister.Save%2A> method to store view state and control state in the persistence medium, and override the <xref:System.Web.UI.PageStatePersister.Load%2A> method to extract it."},{"content":"If you need to serialize view state and control state to a string, you can use the <ph id=\"ph1\">&lt;xref:System.Web.UI.IStateFormatter&gt;</ph> object that is accessed using the <ph id=\"ph2\">&lt;xref:System.Web.UI.PageStatePersister.StateFormatter%2A&gt;</ph> property.","pos":[704,925],"source":" If you need to serialize view state and control state to a string, you can use the <xref:System.Web.UI.IStateFormatter> object that is accessed using the <xref:System.Web.UI.PageStatePersister.StateFormatter%2A> property."},{"content":"It efficiently serializes and deserializes object state information to a Base64-encoded string.","pos":[926,1021]},{"content":"You can also override the <ph id=\"ph1\">&lt;xref:System.Web.UI.PageStatePersister.StateFormatter%2A&gt;</ph> property to supply your own object state serialization mechanism.","pos":[1022,1171],"source":" You can also override the <xref:System.Web.UI.PageStatePersister.StateFormatter%2A> property to supply your own object state serialization mechanism."}]}]}],"pos":[797,5414],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.Web.UI.PageStatePersister\"></xref> class.","nodes":[{"pos":[0,94],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Web.UI.PageStatePersister\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.Web.UI.PageStatePersister\"></xref> class."}],"pos":[10160,10255],"yaml":true},{"content":"The <xref href=\"System.Web.UI.Page\"></xref> that the view state persistence mechanism is created for.","nodes":[{"pos":[0,101],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Web.UI.Page\"&gt;&lt;/xref&gt;</ph> that the view state persistence mechanism is created for.","source":"The <xref href=\"System.Web.UI.Page\"></xref> that the view state persistence mechanism is created for."}],"pos":[10415,10517],"yaml":true},{"content":"The <code>page</code> parameter is `null`.","nodes":[{"pos":[0,42],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">page</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <ph id=\"ph2\">`null`</ph>.","source":"The <code>page</code> parameter is `null`."}],"pos":[10685,10728],"yaml":true},{"content":"Gets or sets an object that represents the data that controls contained by the current <xref href=\"System.Web.UI.Page\"></xref> object use to persist across HTTP requests to the Web server.","nodes":[{"pos":[0,188],"content":"Gets or sets an object that represents the data that controls contained by the current <ph id=\"ph1\">&lt;xref href=\"System.Web.UI.Page\"&gt;&lt;/xref&gt;</ph> object use to persist across HTTP requests to the Web server.","source":"Gets or sets an object that represents the data that controls contained by the current <xref href=\"System.Web.UI.Page\"></xref> object use to persist across HTTP requests to the Web server."}],"pos":[11634,11823],"yaml":true},{"content":"Control state is an object comprised of critical view state data that Web server controls need to function, and is contained in a separate object from normal view state information. Control state data is not affected when view state is disabled at the <xref:System.Web.UI.Page> level, but requires extra implementation steps to use. For more information on using the <xref:System.Web.UI.Control.ViewState%2A> property and control state when developing controls, see [Developing Custom ASP.NET Server Controls](http://msdn.microsoft.com/library/fbe26c16-cff4-4089-b3dd-877411f0c0ef).","nodes":[{"pos":[0,582],"content":"Control state is an object comprised of critical view state data that Web server controls need to function, and is contained in a separate object from normal view state information. Control state data is not affected when view state is disabled at the <xref:System.Web.UI.Page> level, but requires extra implementation steps to use. For more information on using the <xref:System.Web.UI.Control.ViewState%2A> property and control state when developing controls, see [Developing Custom ASP.NET Server Controls](http://msdn.microsoft.com/library/fbe26c16-cff4-4089-b3dd-877411f0c0ef).","nodes":[{"content":"Control state is an object comprised of critical view state data that Web server controls need to function, and is contained in a separate object from normal view state information.","pos":[0,181]},{"content":"Control state data is not affected when view state is disabled at the <ph id=\"ph1\">&lt;xref:System.Web.UI.Page&gt;</ph> level, but requires extra implementation steps to use.","pos":[182,332],"source":" Control state data is not affected when view state is disabled at the <xref:System.Web.UI.Page> level, but requires extra implementation steps to use."},{"content":"For more information on using the <ph id=\"ph1\">&lt;xref:System.Web.UI.Control.ViewState%2A&gt;</ph> property and control state when developing controls, see <bpt id=\"p1\">[</bpt>Developing Custom ASP.NET Server Controls<ept id=\"p1\">](http://msdn.microsoft.com/library/fbe26c16-cff4-4089-b3dd-877411f0c0ef)</ept>.","pos":[333,582],"source":" For more information on using the <xref:System.Web.UI.Control.ViewState%2A> property and control state when developing controls, see [Developing Custom ASP.NET Server Controls](http://msdn.microsoft.com/library/fbe26c16-cff4-4089-b3dd-877411f0c0ef)."}]}],"pos":[11834,12417],"yaml":true,"extradata":"MT"},{"content":"An object that contains view state data.","nodes":[{"pos":[0,40],"content":"An object that contains view state data.","nodes":[{"content":"An object that contains view state data.","pos":[0,40]}]}],"pos":[13917,13958],"yaml":true},{"content":"Overridden by derived classes to deserialize and load persisted state information when a <xref href=\"System.Web.UI.Page\"></xref> object initializes its control hierarchy.","nodes":[{"pos":[0,170],"content":"Overridden by derived classes to deserialize and load persisted state information when a <ph id=\"ph1\">&lt;xref href=\"System.Web.UI.Page\"&gt;&lt;/xref&gt;</ph> object initializes its control hierarchy.","source":"Overridden by derived classes to deserialize and load persisted state information when a <xref href=\"System.Web.UI.Page\"></xref> object initializes its control hierarchy."}],"pos":[14896,15067],"yaml":true},{"content":"Classes that derive from the <xref:System.Web.UI.PageStatePersister> class implement the <xref:System.Web.UI.PageStatePersister.Load%2A> method to initialize the <xref:System.Web.UI.PageStatePersister.ViewState%2A> and <xref:System.Web.UI.PageStatePersister.ControlState%2A> properties from some persisted format.","nodes":[{"pos":[0,313],"content":"Classes that derive from the <xref:System.Web.UI.PageStatePersister> class implement the <xref:System.Web.UI.PageStatePersister.Load%2A> method to initialize the <xref:System.Web.UI.PageStatePersister.ViewState%2A> and <xref:System.Web.UI.PageStatePersister.ControlState%2A> properties from some persisted format.","nodes":[{"content":"Classes that derive from the <ph id=\"ph1\">&lt;xref:System.Web.UI.PageStatePersister&gt;</ph> class implement the <ph id=\"ph2\">&lt;xref:System.Web.UI.PageStatePersister.Load%2A&gt;</ph> method to initialize the <ph id=\"ph3\">&lt;xref:System.Web.UI.PageStatePersister.ViewState%2A&gt;</ph> and <ph id=\"ph4\">&lt;xref:System.Web.UI.PageStatePersister.ControlState%2A&gt;</ph> properties from some persisted format.","pos":[0,313],"source":"Classes that derive from the <xref:System.Web.UI.PageStatePersister> class implement the <xref:System.Web.UI.PageStatePersister.Load%2A> method to initialize the <xref:System.Web.UI.PageStatePersister.ViewState%2A> and <xref:System.Web.UI.PageStatePersister.ControlState%2A> properties from some persisted format."}]}],"pos":[15078,15392],"yaml":true,"extradata":"MT"},{"content":"Gets or sets the <xref href=\"System.Web.UI.Page\"></xref> object that the view state persistence mechanism is created for.","nodes":[{"pos":[0,121],"content":"Gets or sets the <ph id=\"ph1\">&lt;xref href=\"System.Web.UI.Page\"&gt;&lt;/xref&gt;</ph> object that the view state persistence mechanism is created for.","source":"Gets or sets the <xref href=\"System.Web.UI.Page\"></xref> object that the view state persistence mechanism is created for."}],"pos":[17517,17639],"yaml":true},{"content":"You can use the <xref:System.Web.UI.PageStatePersister.Page%2A> property to access the current <xref:System.Web.HttpContext> object.","nodes":[{"pos":[0,132],"content":"You can use the <xref:System.Web.UI.PageStatePersister.Page%2A> property to access the current <xref:System.Web.HttpContext> object.","nodes":[{"content":"You can use the <ph id=\"ph1\">&lt;xref:System.Web.UI.PageStatePersister.Page%2A&gt;</ph> property to access the current <ph id=\"ph2\">&lt;xref:System.Web.HttpContext&gt;</ph> object.","pos":[0,132],"source":"You can use the <xref:System.Web.UI.PageStatePersister.Page%2A> property to access the current <xref:System.Web.HttpContext> object."}]}],"pos":[17650,17783],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.Web.UI.Page\"></xref> that the <xref href=\"System.Web.UI.PageStatePersister\"></xref> is associated with.","nodes":[{"pos":[0,126],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Web.UI.Page\"&gt;&lt;/xref&gt;</ph> that the <ph id=\"ph2\">&lt;xref href=\"System.Web.UI.PageStatePersister\"&gt;&lt;/xref&gt;</ph> is associated with.","source":"The <xref href=\"System.Web.UI.Page\"></xref> that the <xref href=\"System.Web.UI.PageStatePersister\"></xref> is associated with."}],"pos":[17916,18043],"yaml":true},{"content":"Overridden by derived classes to serialize persisted state information when a <xref href=\"System.Web.UI.Page\"></xref> object is unloaded from memory.","nodes":[{"pos":[0,149],"content":"Overridden by derived classes to serialize persisted state information when a <ph id=\"ph1\">&lt;xref href=\"System.Web.UI.Page\"&gt;&lt;/xref&gt;</ph> object is unloaded from memory.","source":"Overridden by derived classes to serialize persisted state information when a <xref href=\"System.Web.UI.Page\"></xref> object is unloaded from memory."}],"pos":[18973,19123],"yaml":true},{"content":"Classes that derive from the <xref:System.Web.UI.PageStatePersister> class implement the <xref:System.Web.UI.PageStatePersister.Save%2A> method to persist the contents of the <xref:System.Web.UI.PageStatePersister.ViewState%2A> and <xref:System.Web.UI.PageStatePersister.ControlState%2A> properties to a persistence medium.","nodes":[{"pos":[0,323],"content":"Classes that derive from the <xref:System.Web.UI.PageStatePersister> class implement the <xref:System.Web.UI.PageStatePersister.Save%2A> method to persist the contents of the <xref:System.Web.UI.PageStatePersister.ViewState%2A> and <xref:System.Web.UI.PageStatePersister.ControlState%2A> properties to a persistence medium.","nodes":[{"content":"Classes that derive from the <ph id=\"ph1\">&lt;xref:System.Web.UI.PageStatePersister&gt;</ph> class implement the <ph id=\"ph2\">&lt;xref:System.Web.UI.PageStatePersister.Save%2A&gt;</ph> method to persist the contents of the <ph id=\"ph3\">&lt;xref:System.Web.UI.PageStatePersister.ViewState%2A&gt;</ph> and <ph id=\"ph4\">&lt;xref:System.Web.UI.PageStatePersister.ControlState%2A&gt;</ph> properties to a persistence medium.","pos":[0,323],"source":"Classes that derive from the <xref:System.Web.UI.PageStatePersister> class implement the <xref:System.Web.UI.PageStatePersister.Save%2A> method to persist the contents of the <xref:System.Web.UI.PageStatePersister.ViewState%2A> and <xref:System.Web.UI.PageStatePersister.ControlState%2A> properties to a persistence medium."}]}],"pos":[19134,19458],"yaml":true,"extradata":"MT"},{"content":"Gets an <xref href=\"System.Web.UI.IStateFormatter\"></xref> object that is used to serialize and deserialize the state information contained in the <xref href=\"System.Web.UI.PageStatePersister.ViewState\"></xref> and <xref href=\"System.Web.UI.PageStatePersister.ControlState\"></xref> properties during calls to the <xref href=\"System.Web.UI.PageStatePersister.Save\"></xref> and <xref href=\"System.Web.UI.PageStatePersister.Load\"></xref> methods.","nodes":[{"pos":[0,443],"content":"Gets an <ph id=\"ph1\">&lt;xref href=\"System.Web.UI.IStateFormatter\"&gt;&lt;/xref&gt;</ph> object that is used to serialize and deserialize the state information contained in the <ph id=\"ph2\">&lt;xref href=\"System.Web.UI.PageStatePersister.ViewState\"&gt;&lt;/xref&gt;</ph> and <ph id=\"ph3\">&lt;xref href=\"System.Web.UI.PageStatePersister.ControlState\"&gt;&lt;/xref&gt;</ph> properties during calls to the <ph id=\"ph4\">&lt;xref href=\"System.Web.UI.PageStatePersister.Save\"&gt;&lt;/xref&gt;</ph> and <ph id=\"ph5\">&lt;xref href=\"System.Web.UI.PageStatePersister.Load\"&gt;&lt;/xref&gt;</ph> methods.","source":"Gets an <xref href=\"System.Web.UI.IStateFormatter\"></xref> object that is used to serialize and deserialize the state information contained in the <xref href=\"System.Web.UI.PageStatePersister.ViewState\"></xref> and <xref href=\"System.Web.UI.PageStatePersister.ControlState\"></xref> properties during calls to the <xref href=\"System.Web.UI.PageStatePersister.Save\"></xref> and <xref href=\"System.Web.UI.PageStatePersister.Load\"></xref> methods."}],"pos":[21541,21985],"yaml":true},{"content":"You can override the <xref:System.Web.UI.PageStatePersister.StateFormatter%2A> property to provide your own view state formatter.","nodes":[{"pos":[0,129],"content":"You can override the <xref:System.Web.UI.PageStatePersister.StateFormatter%2A> property to provide your own view state formatter.","nodes":[{"content":"You can override the <ph id=\"ph1\">&lt;xref:System.Web.UI.PageStatePersister.StateFormatter%2A&gt;</ph> property to provide your own view state formatter.","pos":[0,129],"source":"You can override the <xref:System.Web.UI.PageStatePersister.StateFormatter%2A> property to provide your own view state formatter."}]}],"pos":[21996,22126],"yaml":true,"extradata":"MT"},{"content":"An instance of <xref href=\"System.Web.UI.IStateFormatter\"></xref> that is used to serialize and deserialize object state.","nodes":[{"pos":[0,121],"content":"An instance of <ph id=\"ph1\">&lt;xref href=\"System.Web.UI.IStateFormatter\"&gt;&lt;/xref&gt;</ph> that is used to serialize and deserialize object state.","source":"An instance of <xref href=\"System.Web.UI.IStateFormatter\"></xref> that is used to serialize and deserialize object state."}],"pos":[23237,23359],"yaml":true},{"content":"Gets or sets an object that represents the data that controls contained by the current <xref href=\"System.Web.UI.Page\"></xref> object use to persist across HTTP requests to the Web server.","nodes":[{"pos":[0,188],"content":"Gets or sets an object that represents the data that controls contained by the current <ph id=\"ph1\">&lt;xref href=\"System.Web.UI.Page\"&gt;&lt;/xref&gt;</ph> object use to persist across HTTP requests to the Web server.","source":"Gets or sets an object that represents the data that controls contained by the current <xref href=\"System.Web.UI.Page\"></xref> object use to persist across HTTP requests to the Web server."}],"pos":[24325,24514],"yaml":true},{"content":"View state is a dictionary of state data that Web server controls need to function and render themselves. Control developers typically access the view state object using the <xref:System.Web.UI.Control.ViewState%2A> property. View state is affected when view state is disabled at the <xref:System.Web.UI.Page> level, and as a result controls might not behave correctly in these scenarios. For more information on using <xref:System.Web.UI.Control.ViewState%2A> and control state when developing controls, see [Developing Custom ASP.NET Server Controls](http://msdn.microsoft.com/library/fbe26c16-cff4-4089-b3dd-877411f0c0ef).","nodes":[{"pos":[0,625],"content":"View state is a dictionary of state data that Web server controls need to function and render themselves. Control developers typically access the view state object using the <xref:System.Web.UI.Control.ViewState%2A> property. View state is affected when view state is disabled at the <xref:System.Web.UI.Page> level, and as a result controls might not behave correctly in these scenarios. For more information on using <xref:System.Web.UI.Control.ViewState%2A> and control state when developing controls, see [Developing Custom ASP.NET Server Controls](http://msdn.microsoft.com/library/fbe26c16-cff4-4089-b3dd-877411f0c0ef).","nodes":[{"content":"View state is a dictionary of state data that Web server controls need to function and render themselves.","pos":[0,105]},{"content":"Control developers typically access the view state object using the <ph id=\"ph1\">&lt;xref:System.Web.UI.Control.ViewState%2A&gt;</ph> property.","pos":[106,225],"source":" Control developers typically access the view state object using the <xref:System.Web.UI.Control.ViewState%2A> property."},{"content":"View state is affected when view state is disabled at the <ph id=\"ph1\">&lt;xref:System.Web.UI.Page&gt;</ph> level, and as a result controls might not behave correctly in these scenarios.","pos":[226,388],"source":" View state is affected when view state is disabled at the <xref:System.Web.UI.Page> level, and as a result controls might not behave correctly in these scenarios."},{"content":"For more information on using <ph id=\"ph1\">&lt;xref:System.Web.UI.Control.ViewState%2A&gt;</ph> and control state when developing controls, see <bpt id=\"p1\">[</bpt>Developing Custom ASP.NET Server Controls<ept id=\"p1\">](http://msdn.microsoft.com/library/fbe26c16-cff4-4089-b3dd-877411f0c0ef)</ept>.","pos":[389,625],"source":" For more information on using <xref:System.Web.UI.Control.ViewState%2A> and control state when developing controls, see [Developing Custom ASP.NET Server Controls](http://msdn.microsoft.com/library/fbe26c16-cff4-4089-b3dd-877411f0c0ef)."}]}],"pos":[24525,25151],"yaml":true,"extradata":"MT"},{"content":"An object that contains view state data.","nodes":[{"pos":[0,40],"content":"An object that contains view state data.","nodes":[{"content":"An object that contains view state data.","pos":[0,40]}]}],"pos":[26700,26741],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Web.UI.PageStatePersister\n  commentId: T:System.Web.UI.PageStatePersister\n  id: PageStatePersister\n  children:\n  - System.Web.UI.PageStatePersister.#ctor(System.Web.UI.Page)\n  - System.Web.UI.PageStatePersister.ControlState\n  - System.Web.UI.PageStatePersister.Load\n  - System.Web.UI.PageStatePersister.Page\n  - System.Web.UI.PageStatePersister.Save\n  - System.Web.UI.PageStatePersister.StateFormatter\n  - System.Web.UI.PageStatePersister.ViewState\n  langs:\n  - csharp\n  name: PageStatePersister\n  nameWithType: PageStatePersister\n  fullName: System.Web.UI.PageStatePersister\n  type: Class\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI\n  summary: Provides the base functionality for ASP.NET view state persistence mechanisms.\n  remarks: \"The HTTP requests and responses are inherently stateless. To maintain state information between HTTP requests, ASP.NET server pages can store <xref:System.Web.UI.Page> state. This state, called view state, consists of page and control settings and data that make the page and controls appear as if they are the same ones that the user saw and interacted with on their last round trip to the server. Several mechanisms exist to store view state between successive requests to the same page. The abstract <xref:System.Web.UI.PageStatePersister> class represents the base class for these state information storage mechanisms.  \\n  \\n The default view state persistence mechanism in ASP.NET is to maintain the state information as a Base64-encoded string in a hidden HTML element (an element with the `type` attribute set to `\\\"hidden\\\"`) on the page. An ASP.NET page uses a <xref:System.Web.UI.HiddenFieldPageStatePersister> object to perform this work, using an <xref:System.Web.UI.IStateFormatter> instance to serialize and deserialize object state information. Alternately, you can store the view state for your pages in the <xref:System.Web.HttpContext.Session%2A> object on the server using the <xref:System.Web.UI.SessionPageStatePersister> class for mobile clients with limited bandwidth and resources. In some cases, you might disable view state persistence altogether. If you do this, the result is that sometimes pages and controls that rely on state persistence do not behave correctly. For more information about page state management and view state, see [ASP.NET State Management Overview](http://msdn.microsoft.com/library/0218d965-5d30-445b-b6a6-8870e70e63ce).  \\n  \\n If you are writing controls, you can store state information for the controls in the <xref:System.Web.UI.Control.ViewState%2A> dictionary, which is a <xref:System.Web.UI.StateBag> object. A developer would retrieve the control state through the <xref:System.Web.UI.PageStatePersister.ControlState%2A> property. You assign keys and values to the <xref:System.Web.UI.Control.ViewState%2A> property, and the <xref:System.Web.UI.Page> object serializes the state information between requests. To perform custom state handling in your control, override the <xref:System.Web.UI.Control.LoadViewState%2A> and <xref:System.Web.UI.Control.SaveViewState%2A> methods. Any state information that is stored in this dictionary is lost when view state is disabled by a page developer. To mitigate this, in ASP.NET version 2.0 you can store critical state information in a separate object, called control state. The control state object is not affected when view state is disabled by a page developer. Storing state information in the control state object requires that the control override the <xref:System.Web.UI.Control.LoadControlState%2A> and <xref:System.Web.UI.Control.SaveControlState%2A> methods and that the control be registered to store state information in control state every time the control is initialized. You can register a control to use control state by overriding the <xref:System.Web.UI.Control.OnInit%2A> method and calling the <xref:System.Web.UI.Page.RegisterRequiresControlState%2A> method. For more information about using the <xref:System.Web.UI.Control.ViewState%2A> property and control state when developing controls, see [Developing Custom ASP.NET Server Controls](http://msdn.microsoft.com/library/fbe26c16-cff4-4089-b3dd-877411f0c0ef).  \\n  \\n To maintain view state on clients that cannot support the existing view state persistence mechanisms, you can extend the <xref:System.Web.UI.PageStatePersister> class to introduce your own view state persistence methods, and you can use page adapters to configure your ASP.NET application to use different view state persistence mechanisms based on the type of client to which a page is served. Classes that derive from the <xref:System.Web.UI.PageStatePersister> class must override the abstract <xref:System.Web.UI.PageStatePersister.Save%2A> method to store view state and control state in the persistence medium, and override the <xref:System.Web.UI.PageStatePersister.Load%2A> method to extract it. If you need to serialize view state and control state to a string, you can use the <xref:System.Web.UI.IStateFormatter> object that is accessed using the <xref:System.Web.UI.PageStatePersister.StateFormatter%2A> property. It efficiently serializes and deserializes object state information to a Base64-encoded string. You can also override the <xref:System.Web.UI.PageStatePersister.StateFormatter%2A> property to supply your own object state serialization mechanism.\"\n  example:\n  - \"The following code example demonstrates how to create a <xref:System.Web.UI.PageStatePersister> object that saves view and control state on the Web server. The `StreamPageStatePersister` demonstrates how to override the <xref:System.Web.UI.PageStatePersister.Load%2A> and <xref:System.Web.UI.PageStatePersister.Save%2A> methods to extract and save view state information. Because the state persistence mechanisms are related to adaptive rendering and client capabilities, the `MyPageAdapter` class is provided to activate the `StreamPageStatePersister` for an ASP.NET application. Finally, a browser capabilities (.browser) file is provided to enable the `MyPageAdapter` adapter for a specific class of clients (in this case, the default Web browser).  \\n  \\n [!code-csharp[Samples.AspNet.Alexkr.TextFilePageStatePersister_1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Samples.AspNet.Alexkr.TextFilePageStatePersister_1/CS/textfilepagestatepersister.cs#1)]\\n [!code-vb[Samples.AspNet.Alexkr.TextFilePageStatePersister_1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Samples.AspNet.Alexkr.TextFilePageStatePersister_1/VB/textfilepagestatepersister.vb#1)]  \\n  \\n The following code example demonstrates how to create a <xref:System.Web.UI.Adapters.PageAdapter> class that returns an instance of `StreamPageStatePersister`, which is used to persist view and control state for an ASP.NET Web page.  \\n  \\n [!code-csharp[Samples.AspNet.Alexkr.TextFilePageStatePersister_1#5](~/samples/snippets/csharp/VS_Snippets_WebNet/Samples.AspNet.Alexkr.TextFilePageStatePersister_1/CS/mypageadapter.cs#5)]\\n [!code-vb[Samples.AspNet.Alexkr.TextFilePageStatePersister_1#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Samples.AspNet.Alexkr.TextFilePageStatePersister_1/VB/mypageadapter.vb#5)]  \\n  \\n Compile these two classes into an assembly that you can use to run a sample, using the following compiler command line. Ensure that the compiled assembly is in the \\\\Bin directory underneath the ASP.NET application root.  \\n  \\n [!code-csharp[Samples.AspNet.Alexkr.TextFilePageStatePersister_1#6](~/samples/snippets/csharp/VS_Snippets_WebNet/Samples.AspNet.Alexkr.TextFilePageStatePersister_1/CS/mypageadapter.cs#6)]\\n [!code-vb[Samples.AspNet.Alexkr.TextFilePageStatePersister_1#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Samples.AspNet.Alexkr.TextFilePageStatePersister_1/VB/mypageadapter.vb#6)]  \\n  \\n Finally, to enable the `MyPageAdapter` adapter, you must create a directory named Browsers underneath the ASP.NET application root, and include a .browser file with configuration information. The `<refid>` element in the configuration file indicates that the configuration overrides the values specified for the default browser in the Default.browser configuration file. In this example, `MyPageAdapter` is used for ASP.NET Web pages (where normally no adapter is used).  \\n  \\n```  \\n<browsers>  \\n    <browser refid=\\\"Default\\\" >  \\n        <controlAdapters>  \\n            <adapter   \\n                controlType=\\\"System.Web.UI.Page\\\"                              \\n                adapterType=\\\"Samples.AspNet.CS.MyPageAdapter\\\" />  \\n        </controlAdapters>  \\n    </browser>  \\n</browsers>  \\n```\"\n  syntax:\n    content: public abstract class PageStatePersister\n  inheritance:\n  - System.Object\n  derivedClasses:\n  - System.Web.UI.HiddenFieldPageStatePersister\n  - System.Web.UI.SessionPageStatePersister\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI/PageStatePersister.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.UI.PageStatePersister.#ctor(System.Web.UI.Page)\n  commentId: M:System.Web.UI.PageStatePersister.#ctor(System.Web.UI.Page)\n  id: '#ctor(System.Web.UI.Page)'\n  parent: System.Web.UI.PageStatePersister\n  langs:\n  - csharp\n  name: PageStatePersister(Page)\n  nameWithType: PageStatePersister.PageStatePersister(Page)\n  fullName: PageStatePersister.PageStatePersister(Page)\n  type: Constructor\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI\n  summary: Initializes a new instance of the <xref href=\"System.Web.UI.PageStatePersister\"></xref> class.\n  syntax:\n    content: protected PageStatePersister (System.Web.UI.Page page);\n    parameters:\n    - id: page\n      type: System.Web.UI.Page\n      description: The <xref href=\"System.Web.UI.Page\"></xref> that the view state persistence mechanism is created for.\n  overload: System.Web.UI.PageStatePersister.#ctor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <code>page</code> parameter is `null`.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI/PageStatePersister.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.UI.PageStatePersister.ControlState\n  commentId: P:System.Web.UI.PageStatePersister.ControlState\n  id: ControlState\n  parent: System.Web.UI.PageStatePersister\n  langs:\n  - csharp\n  name: ControlState\n  nameWithType: PageStatePersister.ControlState\n  fullName: PageStatePersister.ControlState\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI\n  summary: Gets or sets an object that represents the data that controls contained by the current <xref href=\"System.Web.UI.Page\"></xref> object use to persist across HTTP requests to the Web server.\n  remarks: Control state is an object comprised of critical view state data that Web server controls need to function, and is contained in a separate object from normal view state information. Control state data is not affected when view state is disabled at the <xref:System.Web.UI.Page> level, but requires extra implementation steps to use. For more information on using the <xref:System.Web.UI.Control.ViewState%2A> property and control state when developing controls, see [Developing Custom ASP.NET Server Controls](http://msdn.microsoft.com/library/fbe26c16-cff4-4089-b3dd-877411f0c0ef).\n  example:\n  - \"The following code example demonstrates how a class that derives from the <xref:System.Web.UI.PageStatePersister> class initializes the <xref:System.Web.UI.PageStatePersister.ControlState%2A> property. In this example, the <xref:System.Web.UI.PageStatePersister.ControlState%2A> property has been assigned to the <xref:System.Web.UI.Pair.Second> field of a <xref:System.Web.UI.Pair> object, and serialized using the <xref:System.Web.UI.ObjectStateFormatter> class. When the <xref:System.Web.UI.PageStatePersister.Load%2A> method is called, the <xref:System.Web.UI.ObjectStateFormatter> class is used to deserialize view state and control state information, and the <xref:System.Web.UI.PageStatePersister.ControlState%2A> property is initialized from the resulting <xref:System.Web.UI.Pair> object's <xref:System.Web.UI.Pair.Second> field. This code example is part of a larger example provided for the <xref:System.Web.UI.PageStatePersister> class.  \\n  \\n [!code-csharp[Samples.AspNet.Alexkr.TextFilePageStatePersister_1#2](~/samples/snippets/csharp/VS_Snippets_WebNet/Samples.AspNet.Alexkr.TextFilePageStatePersister_1/CS/textfilepagestatepersister.cs#2)]\\n [!code-vb[Samples.AspNet.Alexkr.TextFilePageStatePersister_1#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Samples.AspNet.Alexkr.TextFilePageStatePersister_1/VB/textfilepagestatepersister.vb#2)]\"\n  syntax:\n    content: public object ControlState { get; set; }\n    return:\n      type: System.Object\n      description: An object that contains view state data.\n  overload: System.Web.UI.PageStatePersister.ControlState*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI/PageStatePersister.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.UI.PageStatePersister.Load\n  commentId: M:System.Web.UI.PageStatePersister.Load\n  id: Load\n  parent: System.Web.UI.PageStatePersister\n  langs:\n  - csharp\n  name: Load()\n  nameWithType: PageStatePersister.Load()\n  fullName: PageStatePersister.Load()\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI\n  summary: Overridden by derived classes to deserialize and load persisted state information when a <xref href=\"System.Web.UI.Page\"></xref> object initializes its control hierarchy.\n  remarks: Classes that derive from the <xref:System.Web.UI.PageStatePersister> class implement the <xref:System.Web.UI.PageStatePersister.Load%2A> method to initialize the <xref:System.Web.UI.PageStatePersister.ViewState%2A> and <xref:System.Web.UI.PageStatePersister.ControlState%2A> properties from some persisted format.\n  example:\n  - \"The following code example demonstrates how a class that derives from the <xref:System.Web.UI.PageStatePersister> class implements the <xref:System.Web.UI.PageStatePersister.Load%2A> method to load view state from a persistence medium. The `StreamPageStatePersister` attempts to read data from a stream. It uses an <xref:System.Web.UI.IStateFormatter> object to deserialize view state data and initialize the <xref:System.Web.UI.PageStatePersister.ViewState%2A> property and the <xref:System.Web.UI.PageStatePersister.ControlState%2A> property, which a page uses to initialize controls. This code example is part of a larger example provided for the <xref:System.Web.UI.PageStatePersister> class.  \\n  \\n [!code-csharp[Samples.AspNet.Alexkr.TextFilePageStatePersister_1#2](~/samples/snippets/csharp/VS_Snippets_WebNet/Samples.AspNet.Alexkr.TextFilePageStatePersister_1/CS/textfilepagestatepersister.cs#2)]\\n [!code-vb[Samples.AspNet.Alexkr.TextFilePageStatePersister_1#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Samples.AspNet.Alexkr.TextFilePageStatePersister_1/VB/textfilepagestatepersister.vb#2)]\"\n  syntax:\n    content: public abstract void Load ();\n    parameters: []\n  overload: System.Web.UI.PageStatePersister.Load*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI/PageStatePersister.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.UI.PageStatePersister.Page\n  commentId: P:System.Web.UI.PageStatePersister.Page\n  id: Page\n  parent: System.Web.UI.PageStatePersister\n  langs:\n  - csharp\n  name: Page\n  nameWithType: PageStatePersister.Page\n  fullName: PageStatePersister.Page\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI\n  summary: Gets or sets the <xref href=\"System.Web.UI.Page\"></xref> object that the view state persistence mechanism is created for.\n  remarks: You can use the <xref:System.Web.UI.PageStatePersister.Page%2A> property to access the current <xref:System.Web.HttpContext> object.\n  syntax:\n    content: protected System.Web.UI.Page Page { get; set; }\n    return:\n      type: System.Web.UI.Page\n      description: The <xref href=\"System.Web.UI.Page\"></xref> that the <xref href=\"System.Web.UI.PageStatePersister\"></xref> is associated with.\n  overload: System.Web.UI.PageStatePersister.Page*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI/PageStatePersister.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.UI.PageStatePersister.Save\n  commentId: M:System.Web.UI.PageStatePersister.Save\n  id: Save\n  parent: System.Web.UI.PageStatePersister\n  langs:\n  - csharp\n  name: Save()\n  nameWithType: PageStatePersister.Save()\n  fullName: PageStatePersister.Save()\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI\n  summary: Overridden by derived classes to serialize persisted state information when a <xref href=\"System.Web.UI.Page\"></xref> object is unloaded from memory.\n  remarks: Classes that derive from the <xref:System.Web.UI.PageStatePersister> class implement the <xref:System.Web.UI.PageStatePersister.Save%2A> method to persist the contents of the <xref:System.Web.UI.PageStatePersister.ViewState%2A> and <xref:System.Web.UI.PageStatePersister.ControlState%2A> properties to a persistence medium.\n  example:\n  - \"The following code example demonstrates how a class that derives from the <xref:System.Web.UI.PageStatePersister> class implements the <xref:System.Web.UI.PageStatePersister.Save%2A> method to persist view state to a persistence medium. The `StreamPageStatePersister` uses an <xref:System.Web.UI.IStateFormatter> object to serialize the contents of the <xref:System.Web.UI.PageStatePersister.ViewState%2A> property and <xref:System.Web.UI.PageStatePersister.ControlState%2A> property. This code example is part of a larger example provided for the <xref:System.Web.UI.PageStatePersister> class.  \\n  \\n [!code-csharp[Samples.AspNet.Alexkr.TextFilePageStatePersister_1#3](~/samples/snippets/csharp/VS_Snippets_WebNet/Samples.AspNet.Alexkr.TextFilePageStatePersister_1/CS/textfilepagestatepersister.cs#3)]\\n [!code-vb[Samples.AspNet.Alexkr.TextFilePageStatePersister_1#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Samples.AspNet.Alexkr.TextFilePageStatePersister_1/VB/textfilepagestatepersister.vb#3)]\"\n  syntax:\n    content: public abstract void Save ();\n    parameters: []\n  overload: System.Web.UI.PageStatePersister.Save*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI/PageStatePersister.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.UI.PageStatePersister.StateFormatter\n  commentId: P:System.Web.UI.PageStatePersister.StateFormatter\n  id: StateFormatter\n  parent: System.Web.UI.PageStatePersister\n  langs:\n  - csharp\n  name: StateFormatter\n  nameWithType: PageStatePersister.StateFormatter\n  fullName: PageStatePersister.StateFormatter\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI\n  summary: Gets an <xref href=\"System.Web.UI.IStateFormatter\"></xref> object that is used to serialize and deserialize the state information contained in the <xref href=\"System.Web.UI.PageStatePersister.ViewState\"></xref> and <xref href=\"System.Web.UI.PageStatePersister.ControlState\"></xref> properties during calls to the <xref href=\"System.Web.UI.PageStatePersister.Save\"></xref> and <xref href=\"System.Web.UI.PageStatePersister.Load\"></xref> methods.\n  remarks: You can override the <xref:System.Web.UI.PageStatePersister.StateFormatter%2A> property to provide your own view state formatter.\n  example:\n  - \"The following code example demonstrates how a class that derives from the <xref:System.Web.UI.PageStatePersister> class accesses the <xref:System.Web.UI.PageStatePersister.StateFormatter%2A> property to retrieve an <xref:System.Web.UI.ObjectStateFormatter> object, which is the default implementation of the <xref:System.Web.UI.IStateFormatter> interface, to serialize view state and control state to a stream. This code example is part of a larger example provided for the <xref:System.Web.UI.PageStatePersister> class.  \\n  \\n [!code-csharp[Samples.AspNet.Alexkr.TextFilePageStatePersister_1#3](~/samples/snippets/csharp/VS_Snippets_WebNet/Samples.AspNet.Alexkr.TextFilePageStatePersister_1/CS/textfilepagestatepersister.cs#3)]\\n [!code-vb[Samples.AspNet.Alexkr.TextFilePageStatePersister_1#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Samples.AspNet.Alexkr.TextFilePageStatePersister_1/VB/textfilepagestatepersister.vb#3)]\"\n  syntax:\n    content: protected System.Web.UI.IStateFormatter StateFormatter { get; }\n    return:\n      type: System.Web.UI.IStateFormatter\n      description: An instance of <xref href=\"System.Web.UI.IStateFormatter\"></xref> that is used to serialize and deserialize object state.\n  overload: System.Web.UI.PageStatePersister.StateFormatter*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI/PageStatePersister.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.UI.PageStatePersister.ViewState\n  commentId: P:System.Web.UI.PageStatePersister.ViewState\n  id: ViewState\n  parent: System.Web.UI.PageStatePersister\n  langs:\n  - csharp\n  name: ViewState\n  nameWithType: PageStatePersister.ViewState\n  fullName: PageStatePersister.ViewState\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI\n  summary: Gets or sets an object that represents the data that controls contained by the current <xref href=\"System.Web.UI.Page\"></xref> object use to persist across HTTP requests to the Web server.\n  remarks: View state is a dictionary of state data that Web server controls need to function and render themselves. Control developers typically access the view state object using the <xref:System.Web.UI.Control.ViewState%2A> property. View state is affected when view state is disabled at the <xref:System.Web.UI.Page> level, and as a result controls might not behave correctly in these scenarios. For more information on using <xref:System.Web.UI.Control.ViewState%2A> and control state when developing controls, see [Developing Custom ASP.NET Server Controls](http://msdn.microsoft.com/library/fbe26c16-cff4-4089-b3dd-877411f0c0ef).\n  example:\n  - \"The following code example demonstrates how a class that derives from the <xref:System.Web.UI.PageStatePersister> class initializes the <xref:System.Web.UI.PageStatePersister.ViewState%2A> property. In this example, the <xref:System.Web.UI.PageStatePersister.ViewState%2A> property has been assigned to the <xref:System.Web.UI.Pair.First> field of a <xref:System.Web.UI.Pair> object, and serialized using the <xref:System.Web.UI.ObjectStateFormatter> object, which is an instance of the <xref:System.Web.UI.IStateFormatter> interface. When the <xref:System.Web.UI.PageStatePersister.Load%2A> method is called, the <xref:System.Web.UI.ObjectStateFormatter> interface is used to deserialize view state information, and the <xref:System.Web.UI.PageStatePersister.ViewState%2A> property is initialized from the resulting <xref:System.Web.UI.Pair> object's <xref:System.Web.UI.Pair.First> field. This code example is part of a larger example provided for the <xref:System.Web.UI.PageStatePersister> class.  \\n  \\n [!code-csharp[Samples.AspNet.Alexkr.TextFilePageStatePersister_1#2](~/samples/snippets/csharp/VS_Snippets_WebNet/Samples.AspNet.Alexkr.TextFilePageStatePersister_1/CS/textfilepagestatepersister.cs#2)]\\n [!code-vb[Samples.AspNet.Alexkr.TextFilePageStatePersister_1#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Samples.AspNet.Alexkr.TextFilePageStatePersister_1/VB/textfilepagestatepersister.vb#2)]\"\n  syntax:\n    content: public object ViewState { get; set; }\n    return:\n      type: System.Object\n      description: An object that contains view state data.\n  overload: System.Web.UI.PageStatePersister.ViewState*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI/PageStatePersister.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\nreferences:\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.ArgumentNullException\n  parent: System\n  isExternal: false\n  name: ArgumentNullException\n  nameWithType: ArgumentNullException\n  fullName: System.ArgumentNullException\n- uid: System.Web.UI.PageStatePersister.#ctor(System.Web.UI.Page)\n  parent: System.Web.UI.PageStatePersister\n  isExternal: false\n  name: PageStatePersister(Page)\n  nameWithType: PageStatePersister.PageStatePersister(Page)\n  fullName: PageStatePersister.PageStatePersister(Page)\n- uid: System.Web.UI.Page\n  parent: System.Web.UI\n  isExternal: false\n  name: Page\n  nameWithType: Page\n  fullName: System.Web.UI.Page\n- uid: System.Web.UI.PageStatePersister.ControlState\n  parent: System.Web.UI.PageStatePersister\n  isExternal: false\n  name: ControlState\n  nameWithType: PageStatePersister.ControlState\n  fullName: PageStatePersister.ControlState\n- uid: System.Web.UI.PageStatePersister.Load\n  parent: System.Web.UI.PageStatePersister\n  isExternal: false\n  name: Load()\n  nameWithType: PageStatePersister.Load()\n  fullName: PageStatePersister.Load()\n- uid: System.Web.UI.PageStatePersister.Page\n  parent: System.Web.UI.PageStatePersister\n  isExternal: false\n  name: Page\n  nameWithType: PageStatePersister.Page\n  fullName: PageStatePersister.Page\n- uid: System.Web.UI.PageStatePersister.Save\n  parent: System.Web.UI.PageStatePersister\n  isExternal: false\n  name: Save()\n  nameWithType: PageStatePersister.Save()\n  fullName: PageStatePersister.Save()\n- uid: System.Web.UI.PageStatePersister.StateFormatter\n  parent: System.Web.UI.PageStatePersister\n  isExternal: false\n  name: StateFormatter\n  nameWithType: PageStatePersister.StateFormatter\n  fullName: PageStatePersister.StateFormatter\n- uid: System.Web.UI.IStateFormatter\n  parent: System.Web.UI\n  isExternal: false\n  name: IStateFormatter\n  nameWithType: IStateFormatter\n  fullName: System.Web.UI.IStateFormatter\n- uid: System.Web.UI.PageStatePersister.ViewState\n  parent: System.Web.UI.PageStatePersister\n  isExternal: false\n  name: ViewState\n  nameWithType: PageStatePersister.ViewState\n  fullName: PageStatePersister.ViewState\n- uid: System.Web.UI.PageStatePersister.#ctor*\n  parent: System.Web.UI.PageStatePersister\n  isExternal: false\n  name: PageStatePersister\n  nameWithType: PageStatePersister.PageStatePersister\n  fullName: PageStatePersister.PageStatePersister\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI/PageStatePersister.xml\n- uid: System.Web.UI.PageStatePersister.ControlState*\n  parent: System.Web.UI.PageStatePersister\n  isExternal: false\n  name: ControlState\n  nameWithType: PageStatePersister.ControlState\n  fullName: PageStatePersister.ControlState\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI/PageStatePersister.xml\n- uid: System.Web.UI.PageStatePersister.Load*\n  parent: System.Web.UI.PageStatePersister\n  isExternal: false\n  name: Load\n  nameWithType: PageStatePersister.Load\n  fullName: PageStatePersister.Load\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI/PageStatePersister.xml\n- uid: System.Web.UI.PageStatePersister.Page*\n  parent: System.Web.UI.PageStatePersister\n  isExternal: false\n  name: Page\n  nameWithType: PageStatePersister.Page\n  fullName: PageStatePersister.Page\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI/PageStatePersister.xml\n- uid: System.Web.UI.PageStatePersister.Save*\n  parent: System.Web.UI.PageStatePersister\n  isExternal: false\n  name: Save\n  nameWithType: PageStatePersister.Save\n  fullName: PageStatePersister.Save\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI/PageStatePersister.xml\n- uid: System.Web.UI.PageStatePersister.StateFormatter*\n  parent: System.Web.UI.PageStatePersister\n  isExternal: false\n  name: StateFormatter\n  nameWithType: PageStatePersister.StateFormatter\n  fullName: PageStatePersister.StateFormatter\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI/PageStatePersister.xml\n- uid: System.Web.UI.PageStatePersister.ViewState*\n  parent: System.Web.UI.PageStatePersister\n  isExternal: false\n  name: ViewState\n  nameWithType: PageStatePersister.ViewState\n  fullName: PageStatePersister.ViewState\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI/PageStatePersister.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n"}