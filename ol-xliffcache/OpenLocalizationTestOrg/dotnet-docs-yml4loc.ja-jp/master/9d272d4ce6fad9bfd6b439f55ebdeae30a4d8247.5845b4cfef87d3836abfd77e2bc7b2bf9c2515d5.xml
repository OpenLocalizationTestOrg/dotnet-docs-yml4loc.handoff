{"nodes":[{"content":"Defines the tag prefix used in a Web page to identify custom controls. This class cannot be inherited.","nodes":[{"pos":[0,102],"content":"Defines the tag prefix used in a Web page to identify custom controls. This class cannot be inherited.","nodes":[{"content":"Defines the tag prefix used in a Web page to identify custom controls. This class cannot be inherited.","pos":[0,102],"nodes":[{"content":"Defines the tag prefix used in a Web page to identify custom controls.","pos":[0,70]},{"content":"This class cannot be inherited.","pos":[71,102]}]}]}],"pos":[539,642],"yaml":true},{"content":"The <xref:System.Web.UI.TagPrefixAttribute> class defines an assembly-level attribute needed to specify tag prefix aliases for custom controls. This attribute is used by tools such as Microsoft Visual Studio to automatically generate a `Register` directive in the ASP.NET page where the custom controls are used.  \n  \n This directive registers the tag prefix with a namespace. Moreover, it specifies the assembly where the custom control code implementation resides. With this directive in place, you can use custom controls in a Web page declaratively.  \n  \n For more information about using attributes, see [Attributes](http://msdn.microsoft.com/library/30386922-1e00-4602-9ebf-526b271a8b87).","nodes":[{"pos":[0,312],"content":"The <xref:System.Web.UI.TagPrefixAttribute> class defines an assembly-level attribute needed to specify tag prefix aliases for custom controls. This attribute is used by tools such as Microsoft Visual Studio to automatically generate a `Register` directive in the ASP.NET page where the custom controls are used.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.UI.TagPrefixAttribute&gt;</ph> class defines an assembly-level attribute needed to specify tag prefix aliases for custom controls.","pos":[0,143],"source":"The <xref:System.Web.UI.TagPrefixAttribute> class defines an assembly-level attribute needed to specify tag prefix aliases for custom controls."},{"content":"This attribute is used by tools such as Microsoft Visual Studio to automatically generate a <ph id=\"ph1\">`Register`</ph> directive in the ASP.NET page where the custom controls are used.","pos":[144,312],"source":" This attribute is used by tools such as Microsoft Visual Studio to automatically generate a `Register` directive in the ASP.NET page where the custom controls are used."}]},{"pos":[319,553],"content":"This directive registers the tag prefix with a namespace. Moreover, it specifies the assembly where the custom control code implementation resides. With this directive in place, you can use custom controls in a Web page declaratively.","nodes":[{"content":"This directive registers the tag prefix with a namespace. Moreover, it specifies the assembly where the custom control code implementation resides. With this directive in place, you can use custom controls in a Web page declaratively.","pos":[0,234],"nodes":[{"content":"This directive registers the tag prefix with a namespace.","pos":[0,57]},{"content":"Moreover, it specifies the assembly where the custom control code implementation resides.","pos":[58,147]},{"content":"With this directive in place, you can use custom controls in a Web page declaratively.","pos":[148,234]}]}]},{"pos":[560,694],"content":"For more information about using attributes, see <bpt id=\"p1\">[</bpt>Attributes<ept id=\"p1\">](http://msdn.microsoft.com/library/30386922-1e00-4602-9ebf-526b271a8b87)</ept>.","source":"For more information about using attributes, see [Attributes](http://msdn.microsoft.com/library/30386922-1e00-4602-9ebf-526b271a8b87)."}],"pos":[653,1354],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.Web.UI.TagPrefixAttribute\"></xref> class.","nodes":[{"pos":[0,94],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Web.UI.TagPrefixAttribute\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.Web.UI.TagPrefixAttribute\"></xref> class."}],"pos":[6665,6760],"yaml":true},{"content":"In defining your custom control, and prior to any code, you should invoke this class constructor as follows:  \n  \n `[assembly:TagPrefix(namespace, tag)]`","nodes":[{"pos":[0,108],"content":"In defining your custom control, and prior to any code, you should invoke this class constructor as follows:","nodes":[{"content":"In defining your custom control, and prior to any code, you should invoke this class constructor as follows:","pos":[0,108]}]}],"pos":[6771,6929],"yaml":true,"extradata":"MT"},{"content":"A string that identifies the custom control namespace.","nodes":[{"pos":[0,54],"content":"A string that identifies the custom control namespace.","nodes":[{"content":"A string that identifies the custom control namespace.","pos":[0,54]}]}],"pos":[7747,7802],"yaml":true},{"content":"A string that identifies the custom control prefix.","nodes":[{"pos":[0,51],"content":"A string that identifies the custom control prefix.","nodes":[{"content":"A string that identifies the custom control prefix.","pos":[0,51]}]}],"pos":[7867,7919],"yaml":true},{"content":"The <code>namespaceName</code> or the <code>tagPrefix</code> is `null` or an empty string (\"\").","nodes":[{"pos":[0,95],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">namespaceName</ph><ept id=\"p1\">&lt;/code&gt;</ept> or the <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">tagPrefix</ph><ept id=\"p2\">&lt;/code&gt;</ept> is <ph id=\"ph3\">`null`</ph> or an empty string (\"\").","source":"The <code>namespaceName</code> or the <code>tagPrefix</code> is `null` or an empty string (\"\")."}],"pos":[8079,8175],"yaml":true},{"content":"Gets the namespace prefix for the specified control.","nodes":[{"pos":[0,52],"content":"Gets the namespace prefix for the specified control.","nodes":[{"content":"Gets the namespace prefix for the specified control.","pos":[0,52]}]}],"pos":[9087,9140],"yaml":true},{"content":"The namespace name.","nodes":[{"pos":[0,19],"content":"The namespace name.","nodes":[{"content":"The namespace name.","pos":[0,19]}]}],"pos":[9605,9625],"yaml":true},{"content":"Gets the tag prefix for the specified control.","nodes":[{"pos":[0,46],"content":"Gets the tag prefix for the specified control.","nodes":[{"content":"Gets the tag prefix for the specified control.","pos":[0,46]}]}],"pos":[10590,10637],"yaml":true},{"content":"The tag prefix.","nodes":[{"pos":[0,15],"content":"The tag prefix.","nodes":[{"content":"The tag prefix.","pos":[0,15]}]}],"pos":[11098,11114],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Web.UI.TagPrefixAttribute\n  commentId: T:System.Web.UI.TagPrefixAttribute\n  id: TagPrefixAttribute\n  children:\n  - System.Web.UI.TagPrefixAttribute.#ctor(System.String,System.String)\n  - System.Web.UI.TagPrefixAttribute.NamespaceName\n  - System.Web.UI.TagPrefixAttribute.TagPrefix\n  langs:\n  - csharp\n  name: TagPrefixAttribute\n  nameWithType: TagPrefixAttribute\n  fullName: System.Web.UI.TagPrefixAttribute\n  type: Class\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI\n  summary: Defines the tag prefix used in a Web page to identify custom controls. This class cannot be inherited.\n  remarks: \"The <xref:System.Web.UI.TagPrefixAttribute> class defines an assembly-level attribute needed to specify tag prefix aliases for custom controls. This attribute is used by tools such as Microsoft Visual Studio to automatically generate a `Register` directive in the ASP.NET page where the custom controls are used.  \\n  \\n This directive registers the tag prefix with a namespace. Moreover, it specifies the assembly where the custom control code implementation resides. With this directive in place, you can use custom controls in a Web page declaratively.  \\n  \\n For more information about using attributes, see [Attributes](http://msdn.microsoft.com/library/30386922-1e00-4602-9ebf-526b271a8b87).\"\n  example:\n  - >-\n    [!code-csharp[SystemWebUI_TagPrefixAttribute#1](~/samples/snippets/csharp/VS_Snippets_WebNet/SystemWebUI_TagPrefixAttribute/CS/tagprefixattribute.cs#1)]\n     [!code-vb[SystemWebUI_TagPrefixAttribute#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/SystemWebUI_TagPrefixAttribute/VB/tagprefixattribute.vb#1)]\n  syntax:\n    content: >-\n      [System.AttributeUsage(System.AttributeTargets.Assembly, AllowMultiple=true)]\n\n      public sealed class TagPrefixAttribute : Attribute\n  inheritance:\n  - System.Object\n  - System.Attribute\n  implements: []\n  inheritedMembers:\n  - System.Attribute.Equals(System.Object)\n  - System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type)\n  - System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)\n  - System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type)\n  - System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type)\n  - System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo)\n  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)\n  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Module)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo)\n  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type)\n  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  - System.Attribute.GetHashCode\n  - System.Attribute.IsDefaultAttribute\n  - System.Attribute.IsDefined(System.Reflection.Assembly,System.Type)\n  - System.Attribute.IsDefined(System.Reflection.Assembly,System.Type,System.Boolean)\n  - System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type)\n  - System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  - System.Attribute.IsDefined(System.Reflection.Module,System.Type)\n  - System.Attribute.IsDefined(System.Reflection.Module,System.Type,System.Boolean)\n  - System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type)\n  - System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  - System.Attribute.Match(System.Object)\n  - System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)\n  - System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)\n  - System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)\n  - System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)\n  - System.Attribute.TypeId\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  attributes:\n  - type: System.AttributeUsageAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI/TagPrefixAttribute.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.UI.TagPrefixAttribute.#ctor(System.String,System.String)\n  commentId: M:System.Web.UI.TagPrefixAttribute.#ctor(System.String,System.String)\n  id: '#ctor(System.String,System.String)'\n  parent: System.Web.UI.TagPrefixAttribute\n  langs:\n  - csharp\n  name: TagPrefixAttribute(String, String)\n  nameWithType: TagPrefixAttribute.TagPrefixAttribute(String, String)\n  fullName: TagPrefixAttribute.TagPrefixAttribute(String, String)\n  type: Constructor\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI\n  summary: Initializes a new instance of the <xref href=\"System.Web.UI.TagPrefixAttribute\"></xref> class.\n  remarks: \"In defining your custom control, and prior to any code, you should invoke this class constructor as follows:  \\n  \\n `[assembly:TagPrefix(namespace, tag)]`\"\n  example:\n  - \"The following code example shows how to define an assembly-level attribute that enables you to specify a tag prefix alias for a custom control. This attribute is used by tools such as Microsoft Visual Studio to automatically generate a `@ Register` directive in Web pages where the custom controls are used.  \\n  \\n [!code-csharp[SystemWebUI_TagPrefixAttribute#1](~/samples/snippets/csharp/VS_Snippets_WebNet/SystemWebUI_TagPrefixAttribute/CS/tagprefixattribute.cs#1)]\\n [!code-vb[SystemWebUI_TagPrefixAttribute#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/SystemWebUI_TagPrefixAttribute/VB/tagprefixattribute.vb#1)]\"\n  syntax:\n    content: public TagPrefixAttribute (string namespaceName, string tagPrefix);\n    parameters:\n    - id: namespaceName\n      type: System.String\n      description: A string that identifies the custom control namespace.\n    - id: tagPrefix\n      type: System.String\n      description: A string that identifies the custom control prefix.\n  overload: System.Web.UI.TagPrefixAttribute.#ctor*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The <code>namespaceName</code> or the <code>tagPrefix</code> is `null` or an empty string (\"\").\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI/TagPrefixAttribute.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.UI.TagPrefixAttribute.NamespaceName\n  commentId: P:System.Web.UI.TagPrefixAttribute.NamespaceName\n  id: NamespaceName\n  parent: System.Web.UI.TagPrefixAttribute\n  langs:\n  - csharp\n  name: NamespaceName\n  nameWithType: TagPrefixAttribute.NamespaceName\n  fullName: TagPrefixAttribute.NamespaceName\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI\n  summary: Gets the namespace prefix for the specified control.\n  remarks: ''\n  example:\n  - >-\n    [!code-csharp[SystemWebUI_TagPrefixAttribute#1](~/samples/snippets/csharp/VS_Snippets_WebNet/SystemWebUI_TagPrefixAttribute/CS/tagprefixattribute.cs#1)]\n     [!code-vb[SystemWebUI_TagPrefixAttribute#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/SystemWebUI_TagPrefixAttribute/VB/tagprefixattribute.vb#1)]\n  syntax:\n    content: public string NamespaceName { get; }\n    return:\n      type: System.String\n      description: The namespace name.\n  overload: System.Web.UI.TagPrefixAttribute.NamespaceName*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI/TagPrefixAttribute.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.UI.TagPrefixAttribute.TagPrefix\n  commentId: P:System.Web.UI.TagPrefixAttribute.TagPrefix\n  id: TagPrefix\n  parent: System.Web.UI.TagPrefixAttribute\n  langs:\n  - csharp\n  name: TagPrefix\n  nameWithType: TagPrefixAttribute.TagPrefix\n  fullName: TagPrefixAttribute.TagPrefix\n  type: Property\n  assemblies:\n  - System.Web\n  namespace: System.Web.UI\n  summary: Gets the tag prefix for the specified control.\n  remarks: ''\n  example:\n  - >-\n    [!code-csharp[SystemWebUI_TagPrefixAttribute#1](~/samples/snippets/csharp/VS_Snippets_WebNet/SystemWebUI_TagPrefixAttribute/CS/tagprefixattribute.cs#1)]\n     [!code-vb[SystemWebUI_TagPrefixAttribute#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/SystemWebUI_TagPrefixAttribute/VB/tagprefixattribute.vb#1)]\n  syntax:\n    content: public string TagPrefix { get; }\n    return:\n      type: System.String\n      description: The tag prefix.\n  overload: System.Web.UI.TagPrefixAttribute.TagPrefix*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI/TagPrefixAttribute.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\nreferences:\n- uid: System.Attribute\n  parent: System\n  isExternal: false\n  name: Attribute\n  nameWithType: Attribute\n  fullName: System.Attribute\n- uid: System.ArgumentException\n  parent: System\n  isExternal: false\n  name: ArgumentException\n  nameWithType: ArgumentException\n  fullName: System.ArgumentException\n- uid: System.Web.UI.TagPrefixAttribute.#ctor(System.String,System.String)\n  parent: System.Web.UI.TagPrefixAttribute\n  isExternal: false\n  name: TagPrefixAttribute(String, String)\n  nameWithType: TagPrefixAttribute.TagPrefixAttribute(String, String)\n  fullName: TagPrefixAttribute.TagPrefixAttribute(String, String)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Web.UI.TagPrefixAttribute.NamespaceName\n  parent: System.Web.UI.TagPrefixAttribute\n  isExternal: false\n  name: NamespaceName\n  nameWithType: TagPrefixAttribute.NamespaceName\n  fullName: TagPrefixAttribute.NamespaceName\n- uid: System.Web.UI.TagPrefixAttribute.TagPrefix\n  parent: System.Web.UI.TagPrefixAttribute\n  isExternal: false\n  name: TagPrefix\n  nameWithType: TagPrefixAttribute.TagPrefix\n  fullName: TagPrefixAttribute.TagPrefix\n- uid: System.Web.UI.TagPrefixAttribute.#ctor*\n  parent: System.Web.UI.TagPrefixAttribute\n  isExternal: false\n  name: TagPrefixAttribute\n  nameWithType: TagPrefixAttribute.TagPrefixAttribute\n  fullName: TagPrefixAttribute.TagPrefixAttribute\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI/TagPrefixAttribute.xml\n- uid: System.Web.UI.TagPrefixAttribute.NamespaceName*\n  parent: System.Web.UI.TagPrefixAttribute\n  isExternal: false\n  name: NamespaceName\n  nameWithType: TagPrefixAttribute.NamespaceName\n  fullName: TagPrefixAttribute.NamespaceName\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI/TagPrefixAttribute.xml\n- uid: System.Web.UI.TagPrefixAttribute.TagPrefix*\n  parent: System.Web.UI.TagPrefixAttribute\n  isExternal: false\n  name: TagPrefix\n  nameWithType: TagPrefixAttribute.TagPrefix\n  fullName: TagPrefixAttribute.TagPrefix\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI/TagPrefixAttribute.xml\n- uid: System.Attribute.Equals(System.Object)\n  parent: System.Attribute\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Attribute.Equals(Object)\n  fullName: Attribute.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Attribute.GetHashCode\n  parent: System.Attribute\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Attribute.GetHashCode()\n  fullName: Attribute.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(ParameterInfo, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttribute(ParameterInfo, Type, Boolean)\n  fullName: Attribute.GetCustomAttribute(ParameterInfo, Type, Boolean)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(MemberInfo, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttribute(MemberInfo, Type, Boolean)\n  fullName: Attribute.GetCustomAttribute(MemberInfo, Type, Boolean)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(Assembly, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttribute(Assembly, Type, Boolean)\n  fullName: Attribute.GetCustomAttribute(Assembly, Type, Boolean)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(Module, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttribute(Module, Type, Boolean)\n  fullName: Attribute.GetCustomAttribute(Module, Type, Boolean)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(Module, Type)\n  nameWithType: Attribute.GetCustomAttribute(Module, Type)\n  fullName: Attribute.GetCustomAttribute(Module, Type)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(MemberInfo, Type)\n  nameWithType: Attribute.GetCustomAttribute(MemberInfo, Type)\n  fullName: Attribute.GetCustomAttribute(MemberInfo, Type)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(Assembly, Type)\n  nameWithType: Attribute.GetCustomAttribute(Assembly, Type)\n  fullName: Attribute.GetCustomAttribute(Assembly, Type)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(ParameterInfo, Type)\n  nameWithType: Attribute.GetCustomAttribute(ParameterInfo, Type)\n  fullName: Attribute.GetCustomAttribute(ParameterInfo, Type)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Module, Type)\n  nameWithType: Attribute.GetCustomAttributes(Module, Type)\n  fullName: Attribute.GetCustomAttributes(Module, Type)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(ParameterInfo, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(ParameterInfo, Type, Boolean)\n  fullName: Attribute.GetCustomAttributes(ParameterInfo, Type, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Module, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(Module, Type, Boolean)\n  fullName: Attribute.GetCustomAttributes(Module, Type, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(MemberInfo, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(MemberInfo, Type, Boolean)\n  fullName: Attribute.GetCustomAttributes(MemberInfo, Type, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Assembly, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(Assembly, Type, Boolean)\n  fullName: Attribute.GetCustomAttributes(Assembly, Type, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(ParameterInfo, Type)\n  nameWithType: Attribute.GetCustomAttributes(ParameterInfo, Type)\n  fullName: Attribute.GetCustomAttributes(ParameterInfo, Type)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Module, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(Module, Boolean)\n  fullName: Attribute.GetCustomAttributes(Module, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(ParameterInfo, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(ParameterInfo, Boolean)\n  fullName: Attribute.GetCustomAttributes(ParameterInfo, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(MemberInfo, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(MemberInfo, Boolean)\n  fullName: Attribute.GetCustomAttributes(MemberInfo, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Assembly, Type)\n  nameWithType: Attribute.GetCustomAttributes(Assembly, Type)\n  fullName: Attribute.GetCustomAttributes(Assembly, Type)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Assembly, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(Assembly, Boolean)\n  fullName: Attribute.GetCustomAttributes(Assembly, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(ParameterInfo)\n  nameWithType: Attribute.GetCustomAttributes(ParameterInfo)\n  fullName: Attribute.GetCustomAttributes(ParameterInfo)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Module)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Module)\n  nameWithType: Attribute.GetCustomAttributes(Module)\n  fullName: Attribute.GetCustomAttributes(Module)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(MemberInfo)\n  nameWithType: Attribute.GetCustomAttributes(MemberInfo)\n  fullName: Attribute.GetCustomAttributes(MemberInfo)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Assembly)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Assembly)\n  nameWithType: Attribute.GetCustomAttributes(Assembly)\n  fullName: Attribute.GetCustomAttributes(Assembly)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(MemberInfo, Type)\n  nameWithType: Attribute.GetCustomAttributes(MemberInfo, Type)\n  fullName: Attribute.GetCustomAttributes(MemberInfo, Type)\n- uid: System.Attribute.IsDefaultAttribute\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefaultAttribute()\n  nameWithType: Attribute.IsDefaultAttribute()\n  fullName: Attribute.IsDefaultAttribute()\n- uid: System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(ParameterInfo, Type, Boolean)\n  nameWithType: Attribute.IsDefined(ParameterInfo, Type, Boolean)\n  fullName: Attribute.IsDefined(ParameterInfo, Type, Boolean)\n- uid: System.Attribute.IsDefined(System.Reflection.Module,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(Module, Type, Boolean)\n  nameWithType: Attribute.IsDefined(Module, Type, Boolean)\n  fullName: Attribute.IsDefined(Module, Type, Boolean)\n- uid: System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(MemberInfo, Type, Boolean)\n  nameWithType: Attribute.IsDefined(MemberInfo, Type, Boolean)\n  fullName: Attribute.IsDefined(MemberInfo, Type, Boolean)\n- uid: System.Attribute.IsDefined(System.Reflection.Assembly,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(Assembly, Type, Boolean)\n  nameWithType: Attribute.IsDefined(Assembly, Type, Boolean)\n  fullName: Attribute.IsDefined(Assembly, Type, Boolean)\n- uid: System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(MemberInfo, Type)\n  nameWithType: Attribute.IsDefined(MemberInfo, Type)\n  fullName: Attribute.IsDefined(MemberInfo, Type)\n- uid: System.Attribute.IsDefined(System.Reflection.Module,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(Module, Type)\n  nameWithType: Attribute.IsDefined(Module, Type)\n  fullName: Attribute.IsDefined(Module, Type)\n- uid: System.Attribute.IsDefined(System.Reflection.Assembly,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(Assembly, Type)\n  nameWithType: Attribute.IsDefined(Assembly, Type)\n  fullName: Attribute.IsDefined(Assembly, Type)\n- uid: System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(ParameterInfo, Type)\n  nameWithType: Attribute.IsDefined(ParameterInfo, Type)\n  fullName: Attribute.IsDefined(ParameterInfo, Type)\n- uid: System.Attribute.Match(System.Object)\n  parent: System.Attribute\n  isExternal: false\n  name: Match(Object)\n  nameWithType: Attribute.Match(Object)\n  fullName: Attribute.Match(Object)\n- uid: System.Attribute.TypeId\n  parent: System.Attribute\n  isExternal: false\n  name: TypeId\n  nameWithType: Attribute.TypeId\n  fullName: Attribute.TypeId\n- uid: System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)\n  parent: System.Attribute\n  isExternal: false\n  name: _Attribute.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)\n  nameWithType: Attribute._Attribute.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)\n  fullName: Attribute._Attribute.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)\n- uid: System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)\n  parent: System.Attribute\n  isExternal: false\n  name: _Attribute.GetTypeInfo(UInt32, UInt32, IntPtr)\n  nameWithType: Attribute._Attribute.GetTypeInfo(UInt32, UInt32, IntPtr)\n  fullName: Attribute._Attribute.GetTypeInfo(UInt32, UInt32, IntPtr)\n- uid: System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)\n  parent: System.Attribute\n  isExternal: false\n  name: _Attribute.GetTypeInfoCount(UInt32)\n  nameWithType: Attribute._Attribute.GetTypeInfoCount(UInt32)\n  fullName: Attribute._Attribute.GetTypeInfoCount(UInt32)\n- uid: System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)\n  parent: System.Attribute\n  isExternal: false\n  name: _Attribute.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)\n  nameWithType: Attribute._Attribute.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)\n  fullName: Attribute._Attribute.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)\n"}