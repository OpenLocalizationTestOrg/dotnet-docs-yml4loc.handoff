### YamlMime:ManagedReference
items:
- uid: System.Net.SocketAddress
  commentId: T:System.Net.SocketAddress
  id: SocketAddress
  children:
  - System.Net.SocketAddress.#ctor(System.Net.Sockets.AddressFamily)
  - System.Net.SocketAddress.#ctor(System.Net.Sockets.AddressFamily,System.Int32)
  - System.Net.SocketAddress.Equals(System.Object)
  - System.Net.SocketAddress.Family
  - System.Net.SocketAddress.GetHashCode
  - System.Net.SocketAddress.Item(System.Int32)
  - System.Net.SocketAddress.Size
  - System.Net.SocketAddress.ToString
  langs:
  - csharp
  name: SocketAddress
  nameWithType: SocketAddress
  fullName: System.Net.SocketAddress
  type: Class
  assemblies:
  - System.Net.Primitives
  - System
  - netstandard
  namespace: System.Net
  summary: Stores serialized information from <xref href="System.Net.EndPoint"></xref> derived classes.
  remarks: The first 2 bytes of the underlying buffer are reserved for the <xref:System.Net.Sockets.AddressFamily> enumerated value. When the <xref:System.Net.SocketAddress> is used to store a serialized <xref:System.Net.IPEndPoint>, the third and fourth bytes are used to store port number information. The next bytes are used to store the IP address. You can access any information within this underlying byte buffer by referring to its index position; the byte buffer uses zero-based indexing. You can also use the <xref:System.Net.SocketAddress.Family%2A> and <xref:System.Net.SocketAddress.Size%2A> properties to get the <xref:System.Net.Sockets.AddressFamily> value and the buffer size, respectively. To view any of this information as a string, use the <xref:System.Net.SocketAddress.ToString%2A> method.
  example:
  - "The following example demonstrates how to use <xref:System.Net.SocketAddress> to serialize an instance of the <xref:System.Net.EndPoint> class. After serialization, the underlying byte buffer of the <xref:System.Net.SocketAddress> contains all of the <xref:System.Net.IPEndPoint> state information.  \n  \n [!code-cpp[Classic SocketAddressExample#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic SocketAddressExample/CPP/source.cpp#1)]\n [!code-csharp[Classic SocketAddressExample#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic SocketAddressExample/CS/source.cs#1)]\n [!code-vb[Classic SocketAddressExample#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic SocketAddressExample/VB/source.vb#1)]"
  syntax:
    content: public class SocketAddress
  inheritance:
  - System.Object
  implements: []
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/SocketAddress.xml
  ms.author: bobdel
  manager: markl
- uid: System.Net.SocketAddress.#ctor(System.Net.Sockets.AddressFamily)
  commentId: M:System.Net.SocketAddress.#ctor(System.Net.Sockets.AddressFamily)
  id: '#ctor(System.Net.Sockets.AddressFamily)'
  parent: System.Net.SocketAddress
  langs:
  - csharp
  name: SocketAddress(AddressFamily)
  nameWithType: SocketAddress.SocketAddress(AddressFamily)
  fullName: SocketAddress.SocketAddress(AddressFamily)
  type: Constructor
  assemblies:
  - System.Net.Primitives
  - System
  - netstandard
  namespace: System.Net
  summary: Creates a new instance of the <xref href="System.Net.SocketAddress"></xref> class for the given address family.
  remarks: This overload sets the underlying buffer size to 32 bytes.
  syntax:
    content: public SocketAddress (System.Net.Sockets.AddressFamily family);
    parameters:
    - id: family
      type: System.Net.Sockets.AddressFamily
      description: An <xref href="System.Net.Sockets.AddressFamily"></xref> enumerated value.
  overload: System.Net.SocketAddress.#ctor*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/SocketAddress.xml
  ms.author: bobdel
  manager: markl
- uid: System.Net.SocketAddress.#ctor(System.Net.Sockets.AddressFamily,System.Int32)
  commentId: M:System.Net.SocketAddress.#ctor(System.Net.Sockets.AddressFamily,System.Int32)
  id: '#ctor(System.Net.Sockets.AddressFamily,System.Int32)'
  parent: System.Net.SocketAddress
  langs:
  - csharp
  name: SocketAddress(AddressFamily, Int32)
  nameWithType: SocketAddress.SocketAddress(AddressFamily, Int32)
  fullName: SocketAddress.SocketAddress(AddressFamily, Int32)
  type: Constructor
  assemblies:
  - System.Net.Primitives
  - System
  - netstandard
  namespace: System.Net
  summary: Creates a new instance of the <xref href="System.Net.SocketAddress"></xref> class using the specified address family and buffer size.
  remarks: Use this overload to create a new instance of the <xref:System.Net.SocketAddress> class with a particular underlying buffer size.
  syntax:
    content: public SocketAddress (System.Net.Sockets.AddressFamily family, int size);
    parameters:
    - id: family
      type: System.Net.Sockets.AddressFamily
      description: An <xref href="System.Net.Sockets.AddressFamily"></xref> enumerated value.
    - id: size
      type: System.Int32
      description: The number of bytes to allocate for the underlying buffer.
  overload: System.Net.SocketAddress.#ctor*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: <code>size</code> is less than 2. These 2 bytes are needed to store <code>family</code>.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/SocketAddress.xml
  ms.author: bobdel
  manager: markl
- uid: System.Net.SocketAddress.Equals(System.Object)
  commentId: M:System.Net.SocketAddress.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Net.SocketAddress
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: SocketAddress.Equals(Object)
  fullName: SocketAddress.Equals(Object)
  type: Method
  assemblies:
  - System.Net.Primitives
  - System
  - netstandard
  namespace: System.Net
  summary: Determines whether the specified `Object` is equal to the current `Object`.
  syntax:
    content: public override bool Equals (object comparand);
    parameters:
    - id: comparand
      type: System.Object
      description: The <xref href="System.Object"></xref> to compare with the current `Object`.
    return:
      type: System.Boolean
      description: '`true` if the specified `Object` is equal to the current `Object`; otherwise, `false`.'
  overload: System.Net.SocketAddress.Equals*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/SocketAddress.xml
  ms.author: bobdel
  manager: markl
- uid: System.Net.SocketAddress.Family
  commentId: P:System.Net.SocketAddress.Family
  id: Family
  parent: System.Net.SocketAddress
  langs:
  - csharp
  name: Family
  nameWithType: SocketAddress.Family
  fullName: SocketAddress.Family
  type: Property
  assemblies:
  - System.Net.Primitives
  - System
  - netstandard
  namespace: System.Net
  summary: Gets the <xref href="System.Net.Sockets.AddressFamily"></xref> enumerated value of the current <xref href="System.Net.SocketAddress"></xref>.
  remarks: This method gets the <xref:System.Net.Sockets.AddressFamily> enumerated value that represents the addressing scheme of the current <xref:System.Net.SocketAddress>. If you want to view the corresponding string representation of <xref:System.Net.Sockets.AddressFamily>, use the <xref:System.Net.SocketAddress.ToString%2A> method.
  syntax:
    content: public System.Net.Sockets.AddressFamily Family { get; }
    return:
      type: System.Net.Sockets.AddressFamily
      description: One of the <xref href="System.Net.Sockets.AddressFamily"></xref> enumerated values.
  overload: System.Net.SocketAddress.Family*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/SocketAddress.xml
  ms.author: bobdel
  manager: markl
- uid: System.Net.SocketAddress.GetHashCode
  commentId: M:System.Net.SocketAddress.GetHashCode
  id: GetHashCode
  parent: System.Net.SocketAddress
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: SocketAddress.GetHashCode()
  fullName: SocketAddress.GetHashCode()
  type: Method
  assemblies:
  - System.Net.Primitives
  - System
  - netstandard
  namespace: System.Net
  summary: Serves as a hash function for a particular type, suitable for use in hashing algorithms and data structures like a hash table.
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: A hash code for the current <xref href="System.Object"></xref>.
  overload: System.Net.SocketAddress.GetHashCode*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/SocketAddress.xml
  ms.author: bobdel
  manager: markl
- uid: System.Net.SocketAddress.Item(System.Int32)
  commentId: P:System.Net.SocketAddress.Item(System.Int32)
  id: Item(System.Int32)
  parent: System.Net.SocketAddress
  langs:
  - csharp
  name: Item(Int32)
  nameWithType: SocketAddress.Item(Int32)
  fullName: SocketAddress.Item(Int32)
  type: Property
  assemblies:
  - System.Net.Primitives
  - System
  - netstandard
  namespace: System.Net
  summary: Gets or sets the specified index element in the underlying buffer.
  remarks: "This property gets or sets the specified byte position in the underlying buffer.  \n  \n> [!NOTE]\n>  Be sure to call <xref:System.Net.SocketAddress.Size%2A> before referring to elements in the underlying buffer. Referring to an index that does not exist will cause the <xref:System.Net.SocketAddress> to throw an <xref:System.IndexOutOfRangeException>."
  syntax:
    content: public byte this[int offset] { get; set; }
    parameters:
    - id: offset
      type: System.Int32
      description: The array index element of the desired information.
    return:
      type: System.Byte
      description: The value of the specified index element in the underlying buffer.
  overload: System.Net.SocketAddress.Item*
  exceptions:
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: The specified index does not exist in the buffer.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/SocketAddress.xml
  ms.author: bobdel
  manager: markl
- uid: System.Net.SocketAddress.Size
  commentId: P:System.Net.SocketAddress.Size
  id: Size
  parent: System.Net.SocketAddress
  langs:
  - csharp
  name: Size
  nameWithType: SocketAddress.Size
  fullName: SocketAddress.Size
  type: Property
  assemblies:
  - System.Net.Primitives
  - System
  - netstandard
  namespace: System.Net
  summary: Gets the underlying buffer size of the <xref href="System.Net.SocketAddress"></xref>.
  remarks: This property gets the underlying buffer size of the <xref:System.Net.SocketAddress> in bytes.
  syntax:
    content: public int Size { get; }
    return:
      type: System.Int32
      description: The underlying buffer size of the <xref href="System.Net.SocketAddress"></xref>.
  overload: System.Net.SocketAddress.Size*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/SocketAddress.xml
  ms.author: bobdel
  manager: markl
- uid: System.Net.SocketAddress.ToString
  commentId: M:System.Net.SocketAddress.ToString
  id: ToString
  parent: System.Net.SocketAddress
  langs:
  - csharp
  name: ToString()
  nameWithType: SocketAddress.ToString()
  fullName: SocketAddress.ToString()
  type: Method
  assemblies:
  - System.Net.Primitives
  - System
  - netstandard
  namespace: System.Net
  summary: Returns information about the socket address.
  remarks: The <xref:System.Net.SocketAddress.ToString%2A> method returns a string that contains the <xref:System.Net.Sockets.AddressFamily> enumerated value, the size of the underlying buffer of the <xref:System.Net.SocketAddress> structure, and the remaining contents of the buffer.
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: A string that contains information about the <xref href="System.Net.SocketAddress"></xref>.
  overload: System.Net.SocketAddress.ToString*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/SocketAddress.xml
  ms.author: bobdel
  manager: markl
references:
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.ArgumentOutOfRangeException
  parent: System
  isExternal: false
  name: ArgumentOutOfRangeException
  nameWithType: ArgumentOutOfRangeException
  fullName: System.ArgumentOutOfRangeException
- uid: System.IndexOutOfRangeException
  parent: System
  isExternal: false
  name: IndexOutOfRangeException
  nameWithType: IndexOutOfRangeException
  fullName: System.IndexOutOfRangeException
- uid: System.Net.SocketAddress.#ctor(System.Net.Sockets.AddressFamily)
  parent: System.Net.SocketAddress
  isExternal: false
  name: SocketAddress(AddressFamily)
  nameWithType: SocketAddress.SocketAddress(AddressFamily)
  fullName: SocketAddress.SocketAddress(AddressFamily)
- uid: System.Net.Sockets.AddressFamily
  parent: System.Net.Sockets
  isExternal: false
  name: AddressFamily
  nameWithType: AddressFamily
  fullName: System.Net.Sockets.AddressFamily
- uid: System.Net.SocketAddress.#ctor(System.Net.Sockets.AddressFamily,System.Int32)
  parent: System.Net.SocketAddress
  isExternal: false
  name: SocketAddress(AddressFamily, Int32)
  nameWithType: SocketAddress.SocketAddress(AddressFamily, Int32)
  fullName: SocketAddress.SocketAddress(AddressFamily, Int32)
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Net.SocketAddress.Equals(System.Object)
  parent: System.Net.SocketAddress
  isExternal: false
  name: Equals(Object)
  nameWithType: SocketAddress.Equals(Object)
  fullName: SocketAddress.Equals(Object)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Net.SocketAddress.Family
  parent: System.Net.SocketAddress
  isExternal: false
  name: Family
  nameWithType: SocketAddress.Family
  fullName: SocketAddress.Family
- uid: System.Net.SocketAddress.GetHashCode
  parent: System.Net.SocketAddress
  isExternal: false
  name: GetHashCode()
  nameWithType: SocketAddress.GetHashCode()
  fullName: SocketAddress.GetHashCode()
- uid: System.Net.SocketAddress.Item(System.Int32)
  parent: System.Net.SocketAddress
  isExternal: false
  name: Item(Int32)
  nameWithType: SocketAddress.Item(Int32)
  fullName: SocketAddress.Item(Int32)
- uid: System.Byte
  parent: System
  isExternal: false
  name: Byte
  nameWithType: Byte
  fullName: System.Byte
- uid: System.Net.SocketAddress.Size
  parent: System.Net.SocketAddress
  isExternal: false
  name: Size
  nameWithType: SocketAddress.Size
  fullName: SocketAddress.Size
- uid: System.Net.SocketAddress.ToString
  parent: System.Net.SocketAddress
  isExternal: false
  name: ToString()
  nameWithType: SocketAddress.ToString()
  fullName: SocketAddress.ToString()
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Net.SocketAddress.#ctor*
  parent: System.Net.SocketAddress
  isExternal: false
  name: SocketAddress
  nameWithType: SocketAddress.SocketAddress
  fullName: SocketAddress.SocketAddress
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/SocketAddress.xml
- uid: System.Net.SocketAddress.Equals*
  parent: System.Net.SocketAddress
  isExternal: false
  name: Equals
  nameWithType: SocketAddress.Equals
  fullName: SocketAddress.Equals
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/SocketAddress.xml
- uid: System.Net.SocketAddress.Family*
  parent: System.Net.SocketAddress
  isExternal: false
  name: Family
  nameWithType: SocketAddress.Family
  fullName: SocketAddress.Family
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/SocketAddress.xml
- uid: System.Net.SocketAddress.GetHashCode*
  parent: System.Net.SocketAddress
  isExternal: false
  name: GetHashCode
  nameWithType: SocketAddress.GetHashCode
  fullName: SocketAddress.GetHashCode
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/SocketAddress.xml
- uid: System.Net.SocketAddress.Item*
  parent: System.Net.SocketAddress
  isExternal: false
  name: Item
  nameWithType: SocketAddress.Item
  fullName: SocketAddress.Item
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/SocketAddress.xml
- uid: System.Net.SocketAddress.Size*
  parent: System.Net.SocketAddress
  isExternal: false
  name: Size
  nameWithType: SocketAddress.Size
  fullName: SocketAddress.Size
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/SocketAddress.xml
- uid: System.Net.SocketAddress.ToString*
  parent: System.Net.SocketAddress
  isExternal: false
  name: ToString
  nameWithType: SocketAddress.ToString
  fullName: SocketAddress.ToString
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net/SocketAddress.xml
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: Object.Equals(Object, Object)
- uid: System.Object.GetType
  parent: System.Object
  isExternal: false
  name: GetType()
  nameWithType: Object.GetType()
  fullName: Object.GetType()
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: false
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: Object.MemberwiseClone()
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: Object.ReferenceEquals(Object, Object)
