{"nodes":[{"content":"Contains the actions to be executed after an exception is thrown in the corresponding `Try` block of a <xref href=\"System.Activities.Statements.TryCatchFinally\"></xref> activity.","nodes":[{"pos":[0,178],"content":"Contains the actions to be executed after an exception is thrown in the corresponding <ph id=\"ph1\">`Try`</ph> block of a <ph id=\"ph2\">&lt;xref href=\"System.Activities.Statements.TryCatchFinally\"&gt;&lt;/xref&gt;</ph> activity.","source":"Contains the actions to be executed after an exception is thrown in the corresponding `Try` block of a <xref href=\"System.Activities.Statements.TryCatchFinally\"></xref> activity."}],"pos":[411,590],"yaml":true},{"content":"Once placed in the designer, <xref:System.Activities.Statements.Catch> activities cannot be reordered in the designer.  To reorder the collection of <xref:System.Activities.Statements.Catch> activities, either delete and re-add them in the correct order, or use the xaml (code) view for the workflow.","nodes":[{"pos":[0,300],"content":"Once placed in the designer, <xref:System.Activities.Statements.Catch> activities cannot be reordered in the designer.  To reorder the collection of <xref:System.Activities.Statements.Catch> activities, either delete and re-add them in the correct order, or use the xaml (code) view for the workflow.","nodes":[{"content":"Once placed in the designer, <xref:System.Activities.Statements.Catch> activities cannot be reordered in the designer.  To reorder the collection of <xref:System.Activities.Statements.Catch> activities, either delete and re-add them in the correct order, or use the xaml (code) view for the workflow.","pos":[0,300],"nodes":[{"content":"Once placed in the designer, <ph id=\"ph1\">&lt;xref:System.Activities.Statements.Catch&gt;</ph> activities cannot be reordered in the designer.","pos":[0,118],"source":"Once placed in the designer, <xref:System.Activities.Statements.Catch> activities cannot be reordered in the designer."},{"content":"To reorder the collection of <ph id=\"ph1\">&lt;xref:System.Activities.Statements.Catch&gt;</ph> activities, either delete and re-add them in the correct order, or use the xaml (code) view for the workflow.","pos":[120,300],"source":"  To reorder the collection of <xref:System.Activities.Statements.Catch> activities, either delete and re-add them in the correct order, or use the xaml (code) view for the workflow."}]}]}],"pos":[601,902],"yaml":true,"extradata":"MT"},{"content":"The type of exception that the <xref href=\"System.Activities.Statements.Catch\"></xref> block is handling.","nodes":[{"pos":[0,105],"content":"The type of exception that the <ph id=\"ph1\">&lt;xref href=\"System.Activities.Statements.Catch\"&gt;&lt;/xref&gt;</ph> block is handling.","source":"The type of exception that the <xref href=\"System.Activities.Statements.Catch\"></xref> block is handling."}],"pos":[2287,2393],"yaml":true},{"content":"The exception type.","nodes":[{"pos":[0,19],"content":"The exception type.","nodes":[{"content":"The exception type.","pos":[0,19]}]}],"pos":[2515,2535],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Activities.Statements.Catch\n  commentId: T:System.Activities.Statements.Catch\n  id: Catch\n  children:\n  - System.Activities.Statements.Catch.ExceptionType\n  langs:\n  - csharp\n  name: Catch\n  nameWithType: Catch\n  fullName: System.Activities.Statements.Catch\n  type: Class\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Statements\n  summary: Contains the actions to be executed after an exception is thrown in the corresponding `Try` block of a <xref href=\"System.Activities.Statements.TryCatchFinally\"></xref> activity.\n  remarks: Once placed in the designer, <xref:System.Activities.Statements.Catch> activities cannot be reordered in the designer.  To reorder the collection of <xref:System.Activities.Statements.Catch> activities, either delete and re-add them in the correct order, or use the xaml (code) view for the workflow.\n  syntax:\n    content: public abstract class Catch\n  inheritance:\n  - System.Object\n  derivedClasses:\n  - System.Activities.Statements.Catch`1\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Statements/Catch.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Activities.Statements.Catch.ExceptionType\n  commentId: P:System.Activities.Statements.Catch.ExceptionType\n  id: ExceptionType\n  parent: System.Activities.Statements.Catch\n  langs:\n  - csharp\n  name: ExceptionType\n  nameWithType: Catch.ExceptionType\n  fullName: Catch.ExceptionType\n  type: Property\n  assemblies:\n  - System.Activities\n  namespace: System.Activities.Statements\n  summary: The type of exception that the <xref href=\"System.Activities.Statements.Catch\"></xref> block is handling.\n  syntax:\n    content: public abstract Type ExceptionType { get; }\n    return:\n      type: System.Type\n      description: The exception type.\n  overload: System.Activities.Statements.Catch.ExceptionType*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Statements/Catch.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\nreferences:\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Activities.Statements.Catch.ExceptionType\n  parent: System.Activities.Statements.Catch\n  isExternal: false\n  name: ExceptionType\n  nameWithType: Catch.ExceptionType\n  fullName: Catch.ExceptionType\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.Activities.Statements.Catch.ExceptionType*\n  parent: System.Activities.Statements.Catch\n  isExternal: false\n  name: ExceptionType\n  nameWithType: Catch.ExceptionType\n  fullName: Catch.ExceptionType\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Statements/Catch.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n"}