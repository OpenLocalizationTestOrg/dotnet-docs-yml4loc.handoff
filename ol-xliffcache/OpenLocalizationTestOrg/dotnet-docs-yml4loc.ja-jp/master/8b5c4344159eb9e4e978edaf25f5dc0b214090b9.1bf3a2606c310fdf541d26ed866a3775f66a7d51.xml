{"nodes":[{"content":"Controls the layout of an object when exported to unmanaged code.","nodes":[{"pos":[0,65],"content":"Controls the layout of an object when exported to unmanaged code.","nodes":[{"content":"Controls the layout of an object when exported to unmanaged code.","pos":[0,65]}]}],"pos":[584,650],"yaml":true},{"content":"This enumeration is used with <xref:System.Runtime.InteropServices.StructLayoutAttribute>. The common language runtime uses the `Auto` layout value by default. To reduce layout-related problems associated with the `Auto` value, C#, Visual Basic, and C++ compilers specify `Sequential` layout for value types.  \n  \n> [!IMPORTANT]\n>  The <xref:System.Runtime.InteropServices.StructLayoutAttribute.Pack?displayProperty=fullName> field controls the alignment of data fields, and thus affects the layout regardless of the <xref:System.Runtime.InteropServices.LayoutKind> value you specify. By default, the value of <xref:System.Runtime.InteropServices.StructLayoutAttribute.Pack> is 0, which indicates the default packing size for the current platform. For example, when you use the `Explicit` layout value and specify field alignments on byte boundaries, you must set <xref:System.Runtime.InteropServices.StructLayoutAttribute.Pack> to 1 to get the desired result.","nodes":[{"pos":[0,308],"content":"This enumeration is used with <xref:System.Runtime.InteropServices.StructLayoutAttribute>. The common language runtime uses the `Auto` layout value by default. To reduce layout-related problems associated with the `Auto` value, C#, Visual Basic, and C++ compilers specify `Sequential` layout for value types.","nodes":[{"content":"This enumeration is used with <ph id=\"ph1\">&lt;xref:System.Runtime.InteropServices.StructLayoutAttribute&gt;</ph>.","pos":[0,90],"source":"This enumeration is used with <xref:System.Runtime.InteropServices.StructLayoutAttribute>."},{"content":"The common language runtime uses the <ph id=\"ph1\">`Auto`</ph> layout value by default.","pos":[91,159],"source":" The common language runtime uses the `Auto` layout value by default."},{"content":"To reduce layout-related problems associated with the <ph id=\"ph1\">`Auto`</ph> value, C#, Visual Basic, and C++ compilers specify <ph id=\"ph2\">`Sequential`</ph> layout for value types.","pos":[160,308],"source":" To reduce layout-related problems associated with the `Auto` value, C#, Visual Basic, and C++ compilers specify `Sequential` layout for value types."}]},{"pos":[316,960],"content":"[!IMPORTANT]\n The <xref:System.Runtime.InteropServices.StructLayoutAttribute.Pack?displayProperty=fullName> field controls the alignment of data fields, and thus affects the layout regardless of the <xref:System.Runtime.InteropServices.LayoutKind> value you specify. By default, the value of <xref:System.Runtime.InteropServices.StructLayoutAttribute.Pack> is 0, which indicates the default packing size for the current platform. For example, when you use the `Explicit` layout value and specify field alignments on byte boundaries, you must set <xref:System.Runtime.InteropServices.StructLayoutAttribute.Pack> to 1 to get the desired result.","leadings":["","> "],"nodes":[{"content":" The <xref:System.Runtime.InteropServices.StructLayoutAttribute.Pack?displayProperty=fullName> field controls the alignment of data fields, and thus affects the layout regardless of the <xref:System.Runtime.InteropServices.LayoutKind> value you specify. By default, the value of <xref:System.Runtime.InteropServices.StructLayoutAttribute.Pack> is 0, which indicates the default packing size for the current platform. For example, when you use the `Explicit` layout value and specify field alignments on byte boundaries, you must set <xref:System.Runtime.InteropServices.StructLayoutAttribute.Pack> to 1 to get the desired result.","pos":[13,642],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Runtime.InteropServices.StructLayoutAttribute.Pack?displayProperty=fullName&gt;</ph> field controls the alignment of data fields, and thus affects the layout regardless of the <ph id=\"ph2\">&lt;xref:System.Runtime.InteropServices.LayoutKind&gt;</ph> value you specify.","pos":[1,253],"source":" The <xref:System.Runtime.InteropServices.StructLayoutAttribute.Pack?displayProperty=fullName> field controls the alignment of data fields, and thus affects the layout regardless of the <xref:System.Runtime.InteropServices.LayoutKind> value you specify."},{"content":"By default, the value of <ph id=\"ph1\">&lt;xref:System.Runtime.InteropServices.StructLayoutAttribute.Pack&gt;</ph> is 0, which indicates the default packing size for the current platform.","pos":[254,416],"source":" By default, the value of <xref:System.Runtime.InteropServices.StructLayoutAttribute.Pack> is 0, which indicates the default packing size for the current platform."},{"content":"For example, when you use the <ph id=\"ph1\">`Explicit`</ph> layout value and specify field alignments on byte boundaries, you must set <ph id=\"ph2\">&lt;xref:System.Runtime.InteropServices.StructLayoutAttribute.Pack&gt;</ph> to 1 to get the desired result.","pos":[417,629],"source":" For example, when you use the `Explicit` layout value and specify field alignments on byte boundaries, you must set <xref:System.Runtime.InteropServices.StructLayoutAttribute.Pack> to 1 to get the desired result."}]}]}],"pos":[661,1627],"yaml":true,"extradata":"MT"},{"content":"The runtime automatically chooses an appropriate layout for the members of an object in unmanaged memory. Objects defined with this enumeration member cannot be exposed outside of managed code. Attempting to do so generates an exception.","nodes":[{"pos":[0,237],"content":"The runtime automatically chooses an appropriate layout for the members of an object in unmanaged memory. Objects defined with this enumeration member cannot be exposed outside of managed code. Attempting to do so generates an exception.","nodes":[{"content":"The runtime automatically chooses an appropriate layout for the members of an object in unmanaged memory. Objects defined with this enumeration member cannot be exposed outside of managed code. Attempting to do so generates an exception.","pos":[0,237],"nodes":[{"content":"The runtime automatically chooses an appropriate layout for the members of an object in unmanaged memory.","pos":[0,105]},{"content":"Objects defined with this enumeration member cannot be exposed outside of managed code.","pos":[106,193]},{"content":"Attempting to do so generates an exception.","pos":[194,237]}]}]}],"pos":[3935,4173],"yaml":true},{"content":"The precise position of each member of an object in unmanaged memory is explicitly controlled, subject to the setting of the <xref href=\"System.Runtime.InteropServices.StructLayoutAttribute.Pack\"></xref> field. Each member must use the <xref href=\"System.Runtime.InteropServices.FieldOffsetAttribute\"></xref> to indicate the position of that field within the type.","nodes":[{"pos":[0,364],"content":"The precise position of each member of an object in unmanaged memory is explicitly controlled, subject to the setting of the <xref href=\"System.Runtime.InteropServices.StructLayoutAttribute.Pack\"></xref> field. Each member must use the <xref href=\"System.Runtime.InteropServices.FieldOffsetAttribute\"></xref> to indicate the position of that field within the type.","nodes":[{"content":"The precise position of each member of an object in unmanaged memory is explicitly controlled, subject to the setting of the <ph id=\"ph1\">&lt;xref href=\"System.Runtime.InteropServices.StructLayoutAttribute.Pack\"&gt;&lt;/xref&gt;</ph> field.","pos":[0,210],"source":"The precise position of each member of an object in unmanaged memory is explicitly controlled, subject to the setting of the <xref href=\"System.Runtime.InteropServices.StructLayoutAttribute.Pack\"></xref> field."},{"content":"Each member must use the <ph id=\"ph1\">&lt;xref href=\"System.Runtime.InteropServices.FieldOffsetAttribute\"&gt;&lt;/xref&gt;</ph> to indicate the position of that field within the type.","pos":[211,364],"source":" Each member must use the <xref href=\"System.Runtime.InteropServices.FieldOffsetAttribute\"></xref> to indicate the position of that field within the type."}]}],"pos":[5718,6083],"yaml":true},{"content":"The members of the object are laid out sequentially, in the order in which they appear when exported to unmanaged memory. The members are laid out according to the packing specified in <xref href=\"System.Runtime.InteropServices.StructLayoutAttribute.Pack\"></xref>, and can be noncontiguous.","nodes":[{"pos":[0,290],"content":"The members of the object are laid out sequentially, in the order in which they appear when exported to unmanaged memory. The members are laid out according to the packing specified in <xref href=\"System.Runtime.InteropServices.StructLayoutAttribute.Pack\"></xref>, and can be noncontiguous.","nodes":[{"content":"The members of the object are laid out sequentially, in the order in which they appear when exported to unmanaged memory.","pos":[0,121]},{"content":"The members are laid out according to the packing specified in <ph id=\"ph1\">&lt;xref href=\"System.Runtime.InteropServices.StructLayoutAttribute.Pack\"&gt;&lt;/xref&gt;</ph>, and can be noncontiguous.","pos":[122,290],"source":" The members are laid out according to the packing specified in <xref href=\"System.Runtime.InteropServices.StructLayoutAttribute.Pack\"></xref>, and can be noncontiguous."}]}],"pos":[7644,7935],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Runtime.InteropServices.LayoutKind\n  commentId: T:System.Runtime.InteropServices.LayoutKind\n  id: LayoutKind\n  children:\n  - System.Runtime.InteropServices.LayoutKind.Auto\n  - System.Runtime.InteropServices.LayoutKind.Explicit\n  - System.Runtime.InteropServices.LayoutKind.Sequential\n  langs:\n  - csharp\n  name: LayoutKind\n  nameWithType: LayoutKind\n  fullName: System.Runtime.InteropServices.LayoutKind\n  type: Enum\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System.Runtime.InteropServices\n  summary: Controls the layout of an object when exported to unmanaged code.\n  remarks: \"This enumeration is used with <xref:System.Runtime.InteropServices.StructLayoutAttribute>. The common language runtime uses the `Auto` layout value by default. To reduce layout-related problems associated with the `Auto` value, C#, Visual Basic, and C++ compilers specify `Sequential` layout for value types.  \\n  \\n> [!IMPORTANT]\\n>  The <xref:System.Runtime.InteropServices.StructLayoutAttribute.Pack?displayProperty=fullName> field controls the alignment of data fields, and thus affects the layout regardless of the <xref:System.Runtime.InteropServices.LayoutKind> value you specify. By default, the value of <xref:System.Runtime.InteropServices.StructLayoutAttribute.Pack> is 0, which indicates the default packing size for the current platform. For example, when you use the `Explicit` layout value and specify field alignments on byte boundaries, you must set <xref:System.Runtime.InteropServices.StructLayoutAttribute.Pack> to 1 to get the desired result.\"\n  example:\n  - \"The following example shows the managed declaration of the `PtInRect` function, which checks whether a point lies within a rectangle, and defines a `Point` structure with Sequential layout and a `Rect` structure with Explicit layout.  \\n  \\n [!code-cpp[LayoutKind#1](~/samples/snippets/cpp/VS_Snippets_CLR/LayoutKind/CPP/layoutkind.cpp#1)]\\n [!code-csharp[LayoutKind#1](~/samples/snippets/csharp/VS_Snippets_CLR/LayoutKind/CS/layoutkind.cs#1)]\\n [!code-vb[LayoutKind#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/LayoutKind/VB/layoutkind.vb#1)]\"\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public enum LayoutKind\n  inheritance:\n  - System.Object\n  - System.ValueType\n  - System.Enum\n  attributes:\n  - type: System.Runtime.InteropServices.ComVisibleAttribute\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/LayoutKind.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Runtime.InteropServices.LayoutKind.Auto\n  commentId: F:System.Runtime.InteropServices.LayoutKind.Auto\n  id: Auto\n  parent: System.Runtime.InteropServices.LayoutKind\n  langs:\n  - csharp\n  name: Auto\n  nameWithType: LayoutKind.Auto\n  fullName: LayoutKind.Auto\n  type: Field\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System.Runtime.InteropServices\n  summary: The runtime automatically chooses an appropriate layout for the members of an object in unmanaged memory. Objects defined with this enumeration member cannot be exposed outside of managed code. Attempting to do so generates an exception.\n  syntax:\n    content: Auto\n    return:\n      type: System.Runtime.InteropServices.LayoutKind\n      description: ''\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/LayoutKind.xml\n- uid: System.Runtime.InteropServices.LayoutKind.Explicit\n  commentId: F:System.Runtime.InteropServices.LayoutKind.Explicit\n  id: Explicit\n  parent: System.Runtime.InteropServices.LayoutKind\n  langs:\n  - csharp\n  name: Explicit\n  nameWithType: LayoutKind.Explicit\n  fullName: LayoutKind.Explicit\n  type: Field\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System.Runtime.InteropServices\n  summary: The precise position of each member of an object in unmanaged memory is explicitly controlled, subject to the setting of the <xref href=\"System.Runtime.InteropServices.StructLayoutAttribute.Pack\"></xref> field. Each member must use the <xref href=\"System.Runtime.InteropServices.FieldOffsetAttribute\"></xref> to indicate the position of that field within the type.\n  syntax:\n    content: Explicit\n    return:\n      type: System.Runtime.InteropServices.LayoutKind\n      description: ''\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/LayoutKind.xml\n- uid: System.Runtime.InteropServices.LayoutKind.Sequential\n  commentId: F:System.Runtime.InteropServices.LayoutKind.Sequential\n  id: Sequential\n  parent: System.Runtime.InteropServices.LayoutKind\n  langs:\n  - csharp\n  name: Sequential\n  nameWithType: LayoutKind.Sequential\n  fullName: LayoutKind.Sequential\n  type: Field\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System.Runtime.InteropServices\n  summary: The members of the object are laid out sequentially, in the order in which they appear when exported to unmanaged memory. The members are laid out according to the packing specified in <xref href=\"System.Runtime.InteropServices.StructLayoutAttribute.Pack\"></xref>, and can be noncontiguous.\n  syntax:\n    content: Sequential\n    return:\n      type: System.Runtime.InteropServices.LayoutKind\n      description: ''\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/LayoutKind.xml\nreferences:\n- uid: System.Enum\n  parent: System\n  isExternal: false\n  name: Enum\n  nameWithType: Enum\n  fullName: System.Enum\n- uid: System.Runtime.InteropServices.LayoutKind.Auto\n  parent: System.Runtime.InteropServices.LayoutKind\n  isExternal: false\n  name: Auto\n  nameWithType: LayoutKind.Auto\n  fullName: LayoutKind.Auto\n- uid: System.Runtime.InteropServices.LayoutKind\n  parent: System.Runtime.InteropServices\n  isExternal: false\n  name: LayoutKind\n  nameWithType: LayoutKind\n  fullName: System.Runtime.InteropServices.LayoutKind\n- uid: System.Runtime.InteropServices.LayoutKind.Explicit\n  parent: System.Runtime.InteropServices.LayoutKind\n  isExternal: false\n  name: Explicit\n  nameWithType: LayoutKind.Explicit\n  fullName: LayoutKind.Explicit\n- uid: System.Runtime.InteropServices.LayoutKind.Sequential\n  parent: System.Runtime.InteropServices.LayoutKind\n  isExternal: false\n  name: Sequential\n  nameWithType: LayoutKind.Sequential\n  fullName: LayoutKind.Sequential\n"}