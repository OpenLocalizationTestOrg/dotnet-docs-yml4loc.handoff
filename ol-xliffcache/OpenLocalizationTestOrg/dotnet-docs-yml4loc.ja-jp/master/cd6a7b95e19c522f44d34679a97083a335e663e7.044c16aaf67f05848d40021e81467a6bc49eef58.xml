{"nodes":[{"content":"Represents a 32-bit signed integer.","nodes":[{"pos":[0,35],"content":"Represents a 32-bit signed integer.","nodes":[{"content":"Represents a 32-bit signed integer.","pos":[0,35]}]}],"pos":[2347,2383],"yaml":true},{"content":"> [!NOTE]\n>  To view the .NET Framework source code for this type, see the [Reference Source](http://referencesource.microsoft.com/#mscorlib/system/int32.cs#225942ed7b7a3252). You can browse through the source code online, download the reference for offline viewing, and step through the sources (including patches and updates) during debugging; see [instructions](http://referencesource.microsoft.com/).  \n  \n <xref:System.Int32> is an immutable value type that represents signed integers with values that range from negative 2,147,483,648 (which is represented by the <xref:System.Int32.MinValue?displayProperty=fullName> constant) through positive 2,147,483,647 (which is represented by the <xref:System.Int32.MaxValue?displayProperty=fullName> constant. The .NET Framework also includes an unsigned 32-bit integer value type, <xref:System.UInt32>, which represents values that range from 0 to 4,294,967,295.  \n  \n## Instantiating an Int32 Value  \n You can instantiate an <xref:System.Int32> value in several ways:  \n  \n-   You can declare an <xref:System.Int32> variable and assign it a literal integer value that is within the range of the <xref:System.Int32> data type. The following example declares two <xref:System.Int32> variables and assigns them values in this way.  \n  \n     [!code-csharp[System.Int32.Instantiation#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Int32.Instantiation/cs/Instantiate1.cs#1)]\n     [!code-vb[System.Int32.Instantiation#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Int32.Instantiation/vb/Instantiate1.vb#1)]  \n  \n-   You can assign the value of an integer type whose range is a subset of the <xref:System.Int32> type. This is a widening conversion that does not require a cast operator in C# or a conversion method in Visual Basic.  \n  \n     [!code-csharp[System.Int32.Instantiation#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Int32.Instantiation/cs/Instantiate1.cs#4)]\n     [!code-vb[System.Int32.Instantiation#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Int32.Instantiation/vb/Instantiate1.vb#4)]  \n  \n-   You can assign the value of a numeric type whose range exceeds that of the <xref:System.Int32> type. This is a narrowing conversion, so it requires a cast operator in C# and a conversion method in Visual Basic if `Option Strict` is on. If the numeric value is a <xref:System.Single>, <xref:System.Double>, or <xref:System.Decimal> value that includes a fractional component, the handling of its fractional part depends on the compiler performing the conversion. The following example performs narrowing conversions to assign several numeric values to <xref:System.Int32> variables.  \n  \n     [!code-csharp[System.Int32.Instantiation#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Int32.Instantiation/cs/Instantiate1.cs#2)]\n     [!code-vb[System.Int32.Instantiation#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Int32.Instantiation/vb/Instantiate1.vb#2)]  \n  \n-   You can call a method of the <xref:System.Convert> class to convert any supported type to an <xref:System.Int32> value. This is possible because <xref:System.Int32> supports the <xref:System.IConvertible> interface. The following example illustrates the conversion of an array of <xref:System.Decimal> values to <xref:System.Int32> values.  \n  \n     [!code-csharp[System.Convert.ToInt32#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.toint32/cs/toint32_1.cs#4)]\n     [!code-vb[System.Convert.ToInt32#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.toint32/vb/toint32_1.vb#4)]  \n  \n-   You can call the <xref:System.Int32.Parse%2A> or <xref:System.Int32.TryParse%2A> method to convert the string representation of an <xref:System.Int32> value to an <xref:System.Int32>. The string can contain either decimal or hexadecimal digits. The following example illustrates the parse operation by using both a decimal and a hexadecimal string.  \n  \n     [!code-csharp[System.Int32.Instantiation#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Int32.Instantiation/cs/Instantiate1.cs#3)]\n     [!code-vb[System.Int32.Instantiation#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Int32.Instantiation/vb/Instantiate1.vb#3)]  \n  \n## Performing Operations on Int32 Values  \n The <xref:System.Int32> type supports standard mathematical operations such as addition, subtraction, division, multiplication, negation, and unary negation. Like the other integral types, the <xref:System.Int32> type also supports the bitwise `AND`, `OR`, `XOR`, left shift, and right shift operators.  \n  \n You can use the standard numeric operators to compare two <xref:System.Int32> values, or you can call the <xref:System.Int32.CompareTo%2A> or <xref:System.Int32.Equals%2A> method.  \n  \n You can also call the members of the <xref:System.Math> class to perform a wide range of numeric operations, including getting the absolute value of a number, calculating the quotient and remainder from integral division, determining the maximum or minimum value of two integers, getting the sign of a number, and rounding a number.  \n  \n## Representing an Int32 as a String  \n The <xref:System.Int32> type provides full support for standard and custom numeric format strings. (For more information, see [Formatting Types](~/docs/standard/base-types/formatting-types.md), [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md), and [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md).)  \n  \n To format an <xref:System.Int32> value as an integral string with no leading zeros, you can call the parameterless <xref:System.Int32.ToString> method. By using the \"D\" format specifier, you can also include a specified number of leading zeros in the string representation. By using the \"N\" format specifier, you can include group separators and specify the number of decimal digits to appear in the string representation of the number. By using the \"X\" format specifier, you can represent an <xref:System.Int32> value as a hexadecimal string. The following example formats the elements in an array of <xref:System.Int32> values in these four ways.  \n  \n [!code-csharp[System.Int32.Formatting#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Int32.Formatting/cs/Formatting1.cs#1)]\n [!code-vb[System.Int32.Formatting#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Int32.Formatting/vb/Formatting1.vb#1)]  \n  \n You can also format an <xref:System.Int32> value as a binary, octal, decimal, or hexadecimal string by calling the <xref:System.Convert.ToString%28System.Int32%2CSystem.Int32%29> method and supplying the base as the method's second parameter. The following example calls this method to display the binary, octal, and hexadecimal representations of an array of integer values.  \n  \n [!code-csharp[System.Int32.Formatting#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Int32.Formatting/cs/Formatting1.cs#2)]\n [!code-vb[System.Int32.Formatting#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Int32.Formatting/vb/Formatting1.vb#2)]  \n  \n## Working with Non-Decimal 32-Bit Integer Values  \n In addition to working with individual integers as decimal values, you may want to perform bitwise operations with integer values, or work with the binary or hexadecimal representations of integer values. <xref:System.Int32> values are represented in 31 bits, with the thirty-second bit used as a sign bit. Positive values are represented by using sign-and-magnitude representation. Negative values are in two's complement representation. This is important to keep in mind when you perform bitwise operations on <xref:System.Int32> values or when you work with individual bits. In order to perform a numeric, Boolean, or comparison operation on any two non-decimal values, both values must use the same representation.","nodes":[{"pos":[2,404],"content":"[!NOTE]\n To view the .NET Framework source code for this type, see the [Reference Source](http://referencesource.microsoft.com/#mscorlib/system/int32.cs#225942ed7b7a3252). You can browse through the source code online, download the reference for offline viewing, and step through the sources (including patches and updates) during debugging; see [instructions](http://referencesource.microsoft.com/).","leadings":["","> "],"nodes":[{"content":" To view the .NET Framework source code for this type, see the [Reference Source](http://referencesource.microsoft.com/#mscorlib/system/int32.cs#225942ed7b7a3252). You can browse through the source code online, download the reference for offline viewing, and step through the sources (including patches and updates) during debugging; see [instructions](http://referencesource.microsoft.com/).","pos":[8,400],"nodes":[{"content":"To view the .NET Framework source code for this type, see the <bpt id=\"p1\">[</bpt>Reference Source<ept id=\"p1\">](http://referencesource.microsoft.com/#mscorlib/system/int32.cs#225942ed7b7a3252)</ept>.","pos":[1,163],"source":" To view the .NET Framework source code for this type, see the [Reference Source](http://referencesource.microsoft.com/#mscorlib/system/int32.cs#225942ed7b7a3252)."},{"content":"You can browse through the source code online, download the reference for offline viewing, and step through the sources (including patches and updates) during debugging; see <bpt id=\"p1\">[</bpt>instructions<ept id=\"p1\">](http://referencesource.microsoft.com/)</ept>.","pos":[164,392],"source":" You can browse through the source code online, download the reference for offline viewing, and step through the sources (including patches and updates) during debugging; see [instructions](http://referencesource.microsoft.com/)."}]}]},{"pos":[411,911],"content":"<xref:System.Int32> is an immutable value type that represents signed integers with values that range from negative 2,147,483,648 (which is represented by the <xref:System.Int32.MinValue?displayProperty=fullName> constant) through positive 2,147,483,647 (which is represented by the <xref:System.Int32.MaxValue?displayProperty=fullName> constant. The .NET Framework also includes an unsigned 32-bit integer value type, <xref:System.UInt32>, which represents values that range from 0 to 4,294,967,295.","nodes":[{"content":"<xref:System.Int32> is an immutable value type that represents signed integers with values that range from negative 2,147,483,648 (which is represented by the <xref:System.Int32.MinValue?displayProperty=fullName> constant) through positive 2,147,483,647 (which is represented by the <xref:System.Int32.MaxValue?displayProperty=fullName> constant. The .NET Framework also includes an unsigned 32-bit integer value type, <xref:System.UInt32>, which represents values that range from 0 to 4,294,967,295.","pos":[0,500],"nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Int32&gt;</ph> is an immutable value type that represents signed integers with values that range from negative 2,147,483,648 (which is represented by the <ph id=\"ph2\">&lt;xref:System.Int32.MinValue?displayProperty=fullName&gt;</ph> constant) through positive 2,147,483,647 (which is represented by the <ph id=\"ph3\">&lt;xref:System.Int32.MaxValue?displayProperty=fullName&gt;</ph> constant.","pos":[0,346],"source":"<xref:System.Int32> is an immutable value type that represents signed integers with values that range from negative 2,147,483,648 (which is represented by the <xref:System.Int32.MinValue?displayProperty=fullName> constant) through positive 2,147,483,647 (which is represented by the <xref:System.Int32.MaxValue?displayProperty=fullName> constant."},{"content":"The .NET Framework also includes an unsigned 32-bit integer value type, <ph id=\"ph1\">&lt;xref:System.UInt32&gt;</ph>, which represents values that range from 0 to 4,294,967,295.","pos":[347,500],"source":" The .NET Framework also includes an unsigned 32-bit integer value type, <xref:System.UInt32>, which represents values that range from 0 to 4,294,967,295."}]}]},{"pos":[920,948],"content":"Instantiating an Int32 Value","linkify":"Instantiating an Int32 Value","nodes":[{"content":"Instantiating an Int32 Value","pos":[0,28]}]},{"pos":[952,1017],"content":"You can instantiate an <xref:System.Int32> value in several ways:","nodes":[{"content":"You can instantiate an <ph id=\"ph1\">&lt;xref:System.Int32&gt;</ph> value in several ways:","pos":[0,65],"source":"You can instantiate an <xref:System.Int32> value in several ways:"}]},{"pos":[1027,1277],"content":"You can declare an <xref:System.Int32> variable and assign it a literal integer value that is within the range of the <xref:System.Int32> data type. The following example declares two <xref:System.Int32> variables and assigns them values in this way.","nodes":[{"content":"You can declare an <xref:System.Int32> variable and assign it a literal integer value that is within the range of the <xref:System.Int32> data type. The following example declares two <xref:System.Int32> variables and assigns them values in this way.","pos":[0,250],"nodes":[{"content":"You can declare an <ph id=\"ph1\">&lt;xref:System.Int32&gt;</ph> variable and assign it a literal integer value that is within the range of the <ph id=\"ph2\">&lt;xref:System.Int32&gt;</ph> data type.","pos":[0,148],"source":"You can declare an <xref:System.Int32> variable and assign it a literal integer value that is within the range of the <xref:System.Int32> data type."},{"content":"The following example declares two <ph id=\"ph1\">&lt;xref:System.Int32&gt;</ph> variables and assigns them values in this way.","pos":[149,250],"source":" The following example declares two <xref:System.Int32> variables and assigns them values in this way."}]}]},{"pos":[1288,1579],"content":"<bpt id=\"p1\">[!code-csharp</bpt><bpt id=\"p2\">[</bpt>System.Int32.Instantiation#1<ept id=\"p2\">](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Int32.Instantiation/cs/Instantiate1.cs#1)</ept><ept id=\"p1\">]</ept>  <bpt id=\"p3\">[!code-vb</bpt><bpt id=\"p4\">[</bpt>System.Int32.Instantiation#1<ept id=\"p4\">](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Int32.Instantiation/vb/Instantiate1.vb#1)</ept><ept id=\"p3\">]</ept>","leadings":["","    "],"source":"[!code-csharp[System.Int32.Instantiation#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Int32.Instantiation/cs/Instantiate1.cs#1)]\n [!code-vb[System.Int32.Instantiation#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Int32.Instantiation/vb/Instantiate1.vb#1)]"},{"pos":[1589,1803],"content":"You can assign the value of an integer type whose range is a subset of the <xref:System.Int32> type. This is a widening conversion that does not require a cast operator in C# or a conversion method in Visual Basic.","nodes":[{"content":"You can assign the value of an integer type whose range is a subset of the <xref:System.Int32> type. This is a widening conversion that does not require a cast operator in C# or a conversion method in Visual Basic.","pos":[0,214],"nodes":[{"content":"You can assign the value of an integer type whose range is a subset of the <ph id=\"ph1\">&lt;xref:System.Int32&gt;</ph> type.","pos":[0,100],"source":"You can assign the value of an integer type whose range is a subset of the <xref:System.Int32> type."},{"content":"This is a widening conversion that does not require a cast operator in C# or a conversion method in Visual Basic.","pos":[101,214]}]}]},{"pos":[1814,2105],"content":"<bpt id=\"p1\">[!code-csharp</bpt><bpt id=\"p2\">[</bpt>System.Int32.Instantiation#4<ept id=\"p2\">](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Int32.Instantiation/cs/Instantiate1.cs#4)</ept><ept id=\"p1\">]</ept>  <bpt id=\"p3\">[!code-vb</bpt><bpt id=\"p4\">[</bpt>System.Int32.Instantiation#4<ept id=\"p4\">](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Int32.Instantiation/vb/Instantiate1.vb#4)</ept><ept id=\"p3\">]</ept>","leadings":["","    "],"source":"[!code-csharp[System.Int32.Instantiation#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Int32.Instantiation/cs/Instantiate1.cs#4)]\n [!code-vb[System.Int32.Instantiation#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Int32.Instantiation/vb/Instantiate1.vb#4)]"},{"pos":[2115,2696],"content":"You can assign the value of a numeric type whose range exceeds that of the <xref:System.Int32> type. This is a narrowing conversion, so it requires a cast operator in C# and a conversion method in Visual Basic if `Option Strict` is on. If the numeric value is a <xref:System.Single>, <xref:System.Double>, or <xref:System.Decimal> value that includes a fractional component, the handling of its fractional part depends on the compiler performing the conversion. The following example performs narrowing conversions to assign several numeric values to <xref:System.Int32> variables.","nodes":[{"content":"You can assign the value of a numeric type whose range exceeds that of the <ph id=\"ph1\">&lt;xref:System.Int32&gt;</ph> type.","pos":[0,100],"source":"You can assign the value of a numeric type whose range exceeds that of the <xref:System.Int32> type."},{"content":"This is a narrowing conversion, so it requires a cast operator in C# and a conversion method in Visual Basic if <ph id=\"ph1\">`Option Strict`</ph> is on.","pos":[101,235],"source":" This is a narrowing conversion, so it requires a cast operator in C# and a conversion method in Visual Basic if `Option Strict` is on."},{"content":"If the numeric value is a <ph id=\"ph1\">&lt;xref:System.Single&gt;</ph>, <ph id=\"ph2\">&lt;xref:System.Double&gt;</ph>, or <ph id=\"ph3\">&lt;xref:System.Decimal&gt;</ph> value that includes a fractional component, the handling of its fractional part depends on the compiler performing the conversion.","pos":[236,461],"source":" If the numeric value is a <xref:System.Single>, <xref:System.Double>, or <xref:System.Decimal> value that includes a fractional component, the handling of its fractional part depends on the compiler performing the conversion."},{"content":"The following example performs narrowing conversions to assign several numeric values to <ph id=\"ph1\">&lt;xref:System.Int32&gt;</ph> variables.","pos":[462,581],"source":" The following example performs narrowing conversions to assign several numeric values to <xref:System.Int32> variables."}]},{"pos":[2707,2998],"content":"<bpt id=\"p1\">[!code-csharp</bpt><bpt id=\"p2\">[</bpt>System.Int32.Instantiation#2<ept id=\"p2\">](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Int32.Instantiation/cs/Instantiate1.cs#2)</ept><ept id=\"p1\">]</ept>  <bpt id=\"p3\">[!code-vb</bpt><bpt id=\"p4\">[</bpt>System.Int32.Instantiation#2<ept id=\"p4\">](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Int32.Instantiation/vb/Instantiate1.vb#2)</ept><ept id=\"p3\">]</ept>","leadings":["","    "],"source":"[!code-csharp[System.Int32.Instantiation#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Int32.Instantiation/cs/Instantiate1.cs#2)]\n [!code-vb[System.Int32.Instantiation#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Int32.Instantiation/vb/Instantiate1.vb#2)]"},{"pos":[3008,3347],"content":"You can call a method of the <xref:System.Convert> class to convert any supported type to an <xref:System.Int32> value. This is possible because <xref:System.Int32> supports the <xref:System.IConvertible> interface. The following example illustrates the conversion of an array of <xref:System.Decimal> values to <xref:System.Int32> values.","nodes":[{"content":"You can call a method of the <xref:System.Convert> class to convert any supported type to an <xref:System.Int32> value. This is possible because <xref:System.Int32> supports the <xref:System.IConvertible> interface. The following example illustrates the conversion of an array of <xref:System.Decimal> values to <xref:System.Int32> values.","pos":[0,339],"nodes":[{"content":"You can call a method of the <ph id=\"ph1\">&lt;xref:System.Convert&gt;</ph> class to convert any supported type to an <ph id=\"ph2\">&lt;xref:System.Int32&gt;</ph> value.","pos":[0,119],"source":"You can call a method of the <xref:System.Convert> class to convert any supported type to an <xref:System.Int32> value."},{"content":"This is possible because <ph id=\"ph1\">&lt;xref:System.Int32&gt;</ph> supports the <ph id=\"ph2\">&lt;xref:System.IConvertible&gt;</ph> interface.","pos":[120,215],"source":" This is possible because <xref:System.Int32> supports the <xref:System.IConvertible> interface."},{"content":"The following example illustrates the conversion of an array of <ph id=\"ph1\">&lt;xref:System.Decimal&gt;</ph> values to <ph id=\"ph2\">&lt;xref:System.Int32&gt;</ph> values.","pos":[216,339],"source":" The following example illustrates the conversion of an array of <xref:System.Decimal> values to <xref:System.Int32> values."}]}]},{"pos":[3358,3627],"content":"<bpt id=\"p1\">[!code-csharp</bpt><bpt id=\"p2\">[</bpt>System.Convert.ToInt32#4<ept id=\"p2\">](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.toint32/cs/toint32_1.cs#4)</ept><ept id=\"p1\">]</ept>  <bpt id=\"p3\">[!code-vb</bpt><bpt id=\"p4\">[</bpt>System.Convert.ToInt32#4<ept id=\"p4\">](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.toint32/vb/toint32_1.vb#4)</ept><ept id=\"p3\">]</ept>","leadings":["","    "],"source":"[!code-csharp[System.Convert.ToInt32#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.toint32/cs/toint32_1.cs#4)]\n [!code-vb[System.Convert.ToInt32#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.toint32/vb/toint32_1.vb#4)]"},{"pos":[3637,3985],"content":"You can call the <xref:System.Int32.Parse%2A> or <xref:System.Int32.TryParse%2A> method to convert the string representation of an <xref:System.Int32> value to an <xref:System.Int32>. The string can contain either decimal or hexadecimal digits. The following example illustrates the parse operation by using both a decimal and a hexadecimal string.","nodes":[{"content":"You can call the <xref:System.Int32.Parse%2A> or <xref:System.Int32.TryParse%2A> method to convert the string representation of an <xref:System.Int32> value to an <xref:System.Int32>. The string can contain either decimal or hexadecimal digits. The following example illustrates the parse operation by using both a decimal and a hexadecimal string.","pos":[0,348],"nodes":[{"content":"You can call the <ph id=\"ph1\">&lt;xref:System.Int32.Parse%2A&gt;</ph> or <ph id=\"ph2\">&lt;xref:System.Int32.TryParse%2A&gt;</ph> method to convert the string representation of an <ph id=\"ph3\">&lt;xref:System.Int32&gt;</ph> value to an <ph id=\"ph4\">&lt;xref:System.Int32&gt;</ph>.","pos":[0,183],"source":"You can call the <xref:System.Int32.Parse%2A> or <xref:System.Int32.TryParse%2A> method to convert the string representation of an <xref:System.Int32> value to an <xref:System.Int32>."},{"content":"The string can contain either decimal or hexadecimal digits.","pos":[184,244]},{"content":"The following example illustrates the parse operation by using both a decimal and a hexadecimal string.","pos":[245,348]}]}]},{"pos":[3996,4287],"content":"<bpt id=\"p1\">[!code-csharp</bpt><bpt id=\"p2\">[</bpt>System.Int32.Instantiation#3<ept id=\"p2\">](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Int32.Instantiation/cs/Instantiate1.cs#3)</ept><ept id=\"p1\">]</ept>  <bpt id=\"p3\">[!code-vb</bpt><bpt id=\"p4\">[</bpt>System.Int32.Instantiation#3<ept id=\"p4\">](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Int32.Instantiation/vb/Instantiate1.vb#3)</ept><ept id=\"p3\">]</ept>","leadings":["","    "],"source":"[!code-csharp[System.Int32.Instantiation#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Int32.Instantiation/cs/Instantiate1.cs#3)]\n [!code-vb[System.Int32.Instantiation#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Int32.Instantiation/vb/Instantiate1.vb#3)]"},{"pos":[4296,4333],"content":"Performing Operations on Int32 Values","linkify":"Performing Operations on Int32 Values","nodes":[{"content":"Performing Operations on Int32 Values","pos":[0,37]}]},{"pos":[4337,4639],"content":"The <xref:System.Int32> type supports standard mathematical operations such as addition, subtraction, division, multiplication, negation, and unary negation. Like the other integral types, the <xref:System.Int32> type also supports the bitwise `AND`, `OR`, `XOR`, left shift, and right shift operators.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Int32&gt;</ph> type supports standard mathematical operations such as addition, subtraction, division, multiplication, negation, and unary negation.","pos":[0,157],"source":"The <xref:System.Int32> type supports standard mathematical operations such as addition, subtraction, division, multiplication, negation, and unary negation."},{"content":"Like the other integral types, the <ph id=\"ph1\">&lt;xref:System.Int32&gt;</ph> type also supports the bitwise <ph id=\"ph2\">`AND`</ph>, <ph id=\"ph3\">`OR`</ph>, <ph id=\"ph4\">`XOR`</ph>, left shift, and right shift operators.","pos":[158,302],"source":" Like the other integral types, the <xref:System.Int32> type also supports the bitwise `AND`, `OR`, `XOR`, left shift, and right shift operators."}]},{"pos":[4646,4825],"content":"You can use the standard numeric operators to compare two <xref:System.Int32> values, or you can call the <xref:System.Int32.CompareTo%2A> or <xref:System.Int32.Equals%2A> method.","nodes":[{"content":"You can use the standard numeric operators to compare two <ph id=\"ph1\">&lt;xref:System.Int32&gt;</ph> values, or you can call the <ph id=\"ph2\">&lt;xref:System.Int32.CompareTo%2A&gt;</ph> or <ph id=\"ph3\">&lt;xref:System.Int32.Equals%2A&gt;</ph> method.","pos":[0,179],"source":"You can use the standard numeric operators to compare two <xref:System.Int32> values, or you can call the <xref:System.Int32.CompareTo%2A> or <xref:System.Int32.Equals%2A> method."}]},{"pos":[4832,5164],"content":"You can also call the members of the <xref:System.Math> class to perform a wide range of numeric operations, including getting the absolute value of a number, calculating the quotient and remainder from integral division, determining the maximum or minimum value of two integers, getting the sign of a number, and rounding a number.","nodes":[{"content":"You can also call the members of the <ph id=\"ph1\">&lt;xref:System.Math&gt;</ph> class to perform a wide range of numeric operations, including getting the absolute value of a number, calculating the quotient and remainder from integral division, determining the maximum or minimum value of two integers, getting the sign of a number, and rounding a number.","pos":[0,332],"source":"You can also call the members of the <xref:System.Math> class to perform a wide range of numeric operations, including getting the absolute value of a number, calculating the quotient and remainder from integral division, determining the maximum or minimum value of two integers, getting the sign of a number, and rounding a number."}]},{"pos":[5173,5206],"content":"Representing an Int32 as a String","linkify":"Representing an Int32 as a String","nodes":[{"content":"Representing an Int32 as a String","pos":[0,33]}]},{"pos":[5210,5600],"content":"The <xref:System.Int32> type provides full support for standard and custom numeric format strings. (For more information, see [Formatting Types](~/docs/standard/base-types/formatting-types.md), [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md), and [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md).)","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Int32&gt;</ph> type provides full support for standard and custom numeric format strings.","pos":[0,98],"source":"The <xref:System.Int32> type provides full support for standard and custom numeric format strings."},{"content":"(For more information, see <bpt id=\"p1\">[</bpt>Formatting Types<ept id=\"p1\">](~/docs/standard/base-types/formatting-types.md)</ept>, <bpt id=\"p2\">[</bpt>Standard Numeric Format Strings<ept id=\"p2\">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept>, and <bpt id=\"p3\">[</bpt>Custom Numeric Format Strings<ept id=\"p3\">](~/docs/standard/base-types/custom-numeric-format-strings.md)</ept>.)","pos":[99,390],"source":" (For more information, see [Formatting Types](~/docs/standard/base-types/formatting-types.md), [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md), and [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md).)"}]},{"pos":[5607,6255],"content":"To format an <xref:System.Int32> value as an integral string with no leading zeros, you can call the parameterless <xref:System.Int32.ToString> method. By using the \"D\" format specifier, you can also include a specified number of leading zeros in the string representation. By using the \"N\" format specifier, you can include group separators and specify the number of decimal digits to appear in the string representation of the number. By using the \"X\" format specifier, you can represent an <xref:System.Int32> value as a hexadecimal string. The following example formats the elements in an array of <xref:System.Int32> values in these four ways.","nodes":[{"content":"To format an <xref:System.Int32> value as an integral string with no leading zeros, you can call the parameterless <xref:System.Int32.ToString> method. By using the \"D\" format specifier, you can also include a specified number of leading zeros in the string representation. By using the \"N\" format specifier, you can include group separators and specify the number of decimal digits to appear in the string representation of the number. By using the \"X\" format specifier, you can represent an <xref:System.Int32> value as a hexadecimal string. The following example formats the elements in an array of <xref:System.Int32> values in these four ways.","pos":[0,648],"nodes":[{"content":"To format an <ph id=\"ph1\">&lt;xref:System.Int32&gt;</ph> value as an integral string with no leading zeros, you can call the parameterless <ph id=\"ph2\">&lt;xref:System.Int32.ToString&gt;</ph> method.","pos":[0,151],"source":"To format an <xref:System.Int32> value as an integral string with no leading zeros, you can call the parameterless <xref:System.Int32.ToString> method."},{"content":"By using the \"D\" format specifier, you can also include a specified number of leading zeros in the string representation.","pos":[152,273]},{"content":"By using the \"N\" format specifier, you can include group separators and specify the number of decimal digits to appear in the string representation of the number.","pos":[274,436]},{"content":"By using the \"X\" format specifier, you can represent an <ph id=\"ph1\">&lt;xref:System.Int32&gt;</ph> value as a hexadecimal string.","pos":[437,543],"source":" By using the \"X\" format specifier, you can represent an <xref:System.Int32> value as a hexadecimal string."},{"content":"The following example formats the elements in an array of <ph id=\"ph1\">&lt;xref:System.Int32&gt;</ph> values in these four ways.","pos":[544,648],"source":" The following example formats the elements in an array of <xref:System.Int32> values in these four ways."}]}]},{"pos":[6262,6535],"content":"<bpt id=\"p1\">[!code-csharp</bpt><bpt id=\"p2\">[</bpt>System.Int32.Formatting#1<ept id=\"p2\">](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Int32.Formatting/cs/Formatting1.cs#1)</ept><ept id=\"p1\">]</ept> <bpt id=\"p3\">[!code-vb</bpt><bpt id=\"p4\">[</bpt>System.Int32.Formatting#1<ept id=\"p4\">](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Int32.Formatting/vb/Formatting1.vb#1)</ept><ept id=\"p3\">]</ept>","source":"[!code-csharp[System.Int32.Formatting#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Int32.Formatting/cs/Formatting1.cs#1)]\n [!code-vb[System.Int32.Formatting#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Int32.Formatting/vb/Formatting1.vb#1)]"},{"pos":[6542,6917],"content":"You can also format an <xref:System.Int32> value as a binary, octal, decimal, or hexadecimal string by calling the <xref:System.Convert.ToString%28System.Int32%2CSystem.Int32%29> method and supplying the base as the method's second parameter. The following example calls this method to display the binary, octal, and hexadecimal representations of an array of integer values.","nodes":[{"content":"You can also format an <xref:System.Int32> value as a binary, octal, decimal, or hexadecimal string by calling the <xref:System.Convert.ToString%28System.Int32%2CSystem.Int32%29> method and supplying the base as the method's second parameter. The following example calls this method to display the binary, octal, and hexadecimal representations of an array of integer values.","pos":[0,375],"nodes":[{"content":"You can also format an <ph id=\"ph1\">&lt;xref:System.Int32&gt;</ph> value as a binary, octal, decimal, or hexadecimal string by calling the <ph id=\"ph2\">&lt;xref:System.Convert.ToString%28System.Int32%2CSystem.Int32%29&gt;</ph> method and supplying the base as the method's second parameter.","pos":[0,242],"source":"You can also format an <xref:System.Int32> value as a binary, octal, decimal, or hexadecimal string by calling the <xref:System.Convert.ToString%28System.Int32%2CSystem.Int32%29> method and supplying the base as the method's second parameter."},{"content":"The following example calls this method to display the binary, octal, and hexadecimal representations of an array of integer values.","pos":[243,375]}]}]},{"pos":[6924,7197],"content":"<bpt id=\"p1\">[!code-csharp</bpt><bpt id=\"p2\">[</bpt>System.Int32.Formatting#2<ept id=\"p2\">](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Int32.Formatting/cs/Formatting1.cs#2)</ept><ept id=\"p1\">]</ept> <bpt id=\"p3\">[!code-vb</bpt><bpt id=\"p4\">[</bpt>System.Int32.Formatting#2<ept id=\"p4\">](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Int32.Formatting/vb/Formatting1.vb#2)</ept><ept id=\"p3\">]</ept>","source":"[!code-csharp[System.Int32.Formatting#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Int32.Formatting/cs/Formatting1.cs#2)]\n [!code-vb[System.Int32.Formatting#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Int32.Formatting/vb/Formatting1.vb#2)]"},{"pos":[7206,7252],"content":"Working with Non-Decimal 32-Bit Integer Values","linkify":"Working with Non-Decimal 32-Bit Integer Values","nodes":[{"content":"Working with Non-Decimal 32-Bit Integer Values","pos":[0,46]}]},{"pos":[7256,7974],"content":"In addition to working with individual integers as decimal values, you may want to perform bitwise operations with integer values, or work with the binary or hexadecimal representations of integer values. <xref:System.Int32> values are represented in 31 bits, with the thirty-second bit used as a sign bit. Positive values are represented by using sign-and-magnitude representation. Negative values are in two's complement representation. This is important to keep in mind when you perform bitwise operations on <xref:System.Int32> values or when you work with individual bits. In order to perform a numeric, Boolean, or comparison operation on any two non-decimal values, both values must use the same representation.","nodes":[{"content":"In addition to working with individual integers as decimal values, you may want to perform bitwise operations with integer values, or work with the binary or hexadecimal representations of integer values. <xref:System.Int32> values are represented in 31 bits, with the thirty-second bit used as a sign bit. Positive values are represented by using sign-and-magnitude representation. Negative values are in two's complement representation. This is important to keep in mind when you perform bitwise operations on <xref:System.Int32> values or when you work with individual bits. In order to perform a numeric, Boolean, or comparison operation on any two non-decimal values, both values must use the same representation.","pos":[0,718],"nodes":[{"content":"In addition to working with individual integers as decimal values, you may want to perform bitwise operations with integer values, or work with the binary or hexadecimal representations of integer values.","pos":[0,204]},{"content":"<ph id=\"ph1\">&lt;xref:System.Int32&gt;</ph> values are represented in 31 bits, with the thirty-second bit used as a sign bit.","pos":[205,306],"source":" <xref:System.Int32> values are represented in 31 bits, with the thirty-second bit used as a sign bit."},{"content":"Positive values are represented by using sign-and-magnitude representation.","pos":[307,382]},{"content":"Negative values are in two's complement representation.","pos":[383,438]},{"content":"This is important to keep in mind when you perform bitwise operations on <ph id=\"ph1\">&lt;xref:System.Int32&gt;</ph> values or when you work with individual bits.","pos":[439,577],"source":" This is important to keep in mind when you perform bitwise operations on <xref:System.Int32> values or when you work with individual bits."},{"content":"In order to perform a numeric, Boolean, or comparison operation on any two non-decimal values, both values must use the same representation.","pos":[578,718]}]}]}],"pos":[2394,10431],"yaml":true,"extradata":"MT"},{"content":"Compares this instance to a specified 32-bit signed integer and returns an indication of their relative values.","nodes":[{"pos":[0,111],"content":"Compares this instance to a specified 32-bit signed integer and returns an indication of their relative values.","nodes":[{"content":"Compares this instance to a specified 32-bit signed integer and returns an indication of their relative values.","pos":[0,111]}]}],"pos":[12333,12445],"yaml":true},{"content":"This method implements the <xref:System.IComparable%601?displayProperty=fullName> interface and performs slightly better than the <xref:System.Int32.CompareTo%2A?displayProperty=fullName> method because it does not have to convert the `value` parameter to an object.  \n  \n Depending on your programming language, it might be possible to code a <xref:System.Int32.CompareTo%2A> method where the parameter type has fewer bits (is narrower) than the instance type. This is possible because some programming languages perform an implicit widening conversion that represents the parameter as a type with as many bits as the instance.  \n  \n For example, suppose the instance type is <xref:System.Int32> and the parameter type is <xref:System.Byte>. The Microsoft C# compiler generates instructions to represent the value of the parameter as an <xref:System.Int32>, then generates a <xref:System.Int32.CompareTo%2A?displayProperty=fullName> method that compares the values of the <xref:System.Int32> instance and the <xref:System.Int32> parameter representation.  \n  \n Consult your programming language's documentation to determine whether its compiler performs implicit widening conversions on numeric types.","nodes":[{"pos":[0,266],"content":"This method implements the <ph id=\"ph1\">&lt;xref:System.IComparable%601?displayProperty=fullName&gt;</ph> interface and performs slightly better than the <ph id=\"ph2\">&lt;xref:System.Int32.CompareTo%2A?displayProperty=fullName&gt;</ph> method because it does not have to convert the <ph id=\"ph3\">`value`</ph> parameter to an object.","source":"This method implements the <xref:System.IComparable%601?displayProperty=fullName> interface and performs slightly better than the <xref:System.Int32.CompareTo%2A?displayProperty=fullName> method because it does not have to convert the `value` parameter to an object."},{"pos":[273,628],"content":"Depending on your programming language, it might be possible to code a <xref:System.Int32.CompareTo%2A> method where the parameter type has fewer bits (is narrower) than the instance type. This is possible because some programming languages perform an implicit widening conversion that represents the parameter as a type with as many bits as the instance.","nodes":[{"content":"Depending on your programming language, it might be possible to code a <xref:System.Int32.CompareTo%2A> method where the parameter type has fewer bits (is narrower) than the instance type. This is possible because some programming languages perform an implicit widening conversion that represents the parameter as a type with as many bits as the instance.","pos":[0,355],"nodes":[{"content":"Depending on your programming language, it might be possible to code a <ph id=\"ph1\">&lt;xref:System.Int32.CompareTo%2A&gt;</ph> method where the parameter type has fewer bits (is narrower) than the instance type.","pos":[0,188],"source":"Depending on your programming language, it might be possible to code a <xref:System.Int32.CompareTo%2A> method where the parameter type has fewer bits (is narrower) than the instance type."},{"content":"This is possible because some programming languages perform an implicit widening conversion that represents the parameter as a type with as many bits as the instance.","pos":[189,355]}]}]},{"pos":[635,1055],"content":"For example, suppose the instance type is <xref:System.Int32> and the parameter type is <xref:System.Byte>. The Microsoft C# compiler generates instructions to represent the value of the parameter as an <xref:System.Int32>, then generates a <xref:System.Int32.CompareTo%2A?displayProperty=fullName> method that compares the values of the <xref:System.Int32> instance and the <xref:System.Int32> parameter representation.","nodes":[{"content":"For example, suppose the instance type is <xref:System.Int32> and the parameter type is <xref:System.Byte>. The Microsoft C# compiler generates instructions to represent the value of the parameter as an <xref:System.Int32>, then generates a <xref:System.Int32.CompareTo%2A?displayProperty=fullName> method that compares the values of the <xref:System.Int32> instance and the <xref:System.Int32> parameter representation.","pos":[0,420],"nodes":[{"content":"For example, suppose the instance type is <ph id=\"ph1\">&lt;xref:System.Int32&gt;</ph> and the parameter type is <ph id=\"ph2\">&lt;xref:System.Byte&gt;</ph>.","pos":[0,107],"source":"For example, suppose the instance type is <xref:System.Int32> and the parameter type is <xref:System.Byte>."},{"content":"The Microsoft C# compiler generates instructions to represent the value of the parameter as an <ph id=\"ph1\">&lt;xref:System.Int32&gt;</ph>, then generates a <ph id=\"ph2\">&lt;xref:System.Int32.CompareTo%2A?displayProperty=fullName&gt;</ph> method that compares the values of the <ph id=\"ph3\">&lt;xref:System.Int32&gt;</ph> instance and the <ph id=\"ph4\">&lt;xref:System.Int32&gt;</ph> parameter representation.","pos":[108,420],"source":" The Microsoft C# compiler generates instructions to represent the value of the parameter as an <xref:System.Int32>, then generates a <xref:System.Int32.CompareTo%2A?displayProperty=fullName> method that compares the values of the <xref:System.Int32> instance and the <xref:System.Int32> parameter representation."}]}]},{"pos":[1062,1202],"content":"Consult your programming language's documentation to determine whether its compiler performs implicit widening conversions on numeric types.","nodes":[{"content":"Consult your programming language's documentation to determine whether its compiler performs implicit widening conversions on numeric types.","pos":[0,140]}]}],"pos":[12456,13667],"yaml":true,"extradata":"MT"},{"content":"An integer to compare.","nodes":[{"pos":[0,22],"content":"An integer to compare.","nodes":[{"content":"An integer to compare.","pos":[0,22]}]}],"pos":[14416,14439],"yaml":true},{"content":"A signed number indicating the relative values of this instance and <code>value</code>.  \n  \n <table><thead><tr><th> Return Value  \n  \n </th><th> Description  \n  \n </th></tr></thead><tbody><tr><td> Less than zero  \n  \n </td><td> This instance is less than <code>value</code>.  \n  \n </td></tr><tr><td> Zero  \n  \n </td><td> This instance is equal to <code>value</code>.  \n  \n </td></tr><tr><td> Greater than zero  \n  \n </td><td> This instance is greater than <code>value</code>.  \n  \n </td></tr></tbody></table>","nodes":[{"pos":[0,87],"content":"A signed number indicating the relative values of this instance and <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">value</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"A signed number indicating the relative values of this instance and <code>value</code>."},{"pos":[94,510],"content":"<table><thead><tr><th> Return Value  \n  \n </th><th> Description  \n  \n </th></tr></thead><tbody><tr><td> Less than zero  \n  \n </td><td> This instance is less than <code>value</code>.  \n  \n </td></tr><tr><td> Zero  \n  \n </td><td> This instance is equal to <code>value</code>.  \n  \n </td></tr><tr><td> Greater than zero  \n  \n </td><td> This instance is greater than <code>value</code>.  \n  \n </td></tr></tbody></table>","nodes":[{"content":"Return Value","pos":[23,40],"source":" Return Value  \n  \n "},{"content":"Description","pos":[52,68],"source":" Description  \n  \n "},{"content":"Less than zero","pos":[104,123],"source":" Less than zero  \n  \n "},{"content":" This instance is less than <code>value</code>.  \n  \n ","pos":[134,188],"nodes":[{"content":"This instance is less than <ph id=\"ph1\">&lt;code&gt;value&lt;/code&gt;</ph>.","pos":[1,47],"source":" This instance is less than <code>value</code>."}]},{"content":"Zero","pos":[207,216],"source":" Zero  \n  \n "},{"content":" This instance is equal to <code>value</code>.  \n  \n ","pos":[227,280],"nodes":[{"content":"This instance is equal to <ph id=\"ph1\">&lt;code&gt;value&lt;/code&gt;</ph>.","pos":[1,46],"source":" This instance is equal to <code>value</code>."}]},{"content":"Greater than zero","pos":[299,321],"source":" Greater than zero  \n  \n "},{"content":" This instance is greater than <code>value</code>.  \n  \n ","pos":[332,389],"nodes":[{"content":"This instance is greater than <ph id=\"ph1\">&lt;code&gt;value&lt;/code&gt;</ph>.","pos":[1,50],"source":" This instance is greater than <code>value</code>."}]}]}],"pos":[14495,15025],"yaml":true},{"content":"Compares this instance to a specified object and returns an indication of their relative values.","nodes":[{"pos":[0,96],"content":"Compares this instance to a specified object and returns an indication of their relative values.","nodes":[{"content":"Compares this instance to a specified object and returns an indication of their relative values.","pos":[0,96]}]}],"pos":[16513,16610],"yaml":true},{"content":"Any instance of <xref:System.Int32>, regardless of its value, is considered greater than `null`.  \n  \n `value` must be `null` or an instance of <xref:System.Int32>; otherwise, an exception is thrown.","nodes":[{"pos":[0,96],"content":"Any instance of <ph id=\"ph1\">&lt;xref:System.Int32&gt;</ph>, regardless of its value, is considered greater than <ph id=\"ph2\">`null`</ph>.","source":"Any instance of <xref:System.Int32>, regardless of its value, is considered greater than `null`."},{"pos":[103,199],"content":"<ph id=\"ph1\">`value`</ph> must be <ph id=\"ph2\">`null`</ph> or an instance of <ph id=\"ph3\">&lt;xref:System.Int32&gt;</ph>; otherwise, an exception is thrown.","source":"`value` must be `null` or an instance of <xref:System.Int32>; otherwise, an exception is thrown."}],"pos":[16621,16825],"yaml":true,"extradata":"MT"},{"content":"An object to compare, or `null`.","nodes":[{"pos":[0,32],"content":"An object to compare, or <ph id=\"ph1\">`null`</ph>.","source":"An object to compare, or `null`."}],"pos":[16962,16995],"yaml":true},{"content":"A signed number indicating the relative values of this instance and <code>value</code>.  \n  \n <table><thead><tr><th> Return Value  \n  \n </th><th> Description  \n  \n </th></tr></thead><tbody><tr><td> Less than zero  \n  \n </td><td> This instance is less than <code>value</code>.  \n  \n </td></tr><tr><td> Zero  \n  \n </td><td> This instance is equal to <code>value</code>.  \n  \n </td></tr><tr><td> Greater than zero  \n  \n </td><td> This instance is greater than <code>value</code>.  \n  \n -or-  \n  \n <code>value</code> is `null`.  \n  \n </td></tr></tbody></table>","nodes":[{"pos":[0,87],"content":"A signed number indicating the relative values of this instance and <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">value</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"A signed number indicating the relative values of this instance and <code>value</code>."},{"pos":[94,476],"content":"<table><thead><tr><th> Return Value  \n  \n </th><th> Description  \n  \n </th></tr></thead><tbody><tr><td> Less than zero  \n  \n </td><td> This instance is less than <code>value</code>.  \n  \n </td></tr><tr><td> Zero  \n  \n </td><td> This instance is equal to <code>value</code>.  \n  \n </td></tr><tr><td> Greater than zero  \n  \n </td><td> This instance is greater than <code>value</code>.","nodes":[{"content":"Return Value","pos":[23,40],"source":" Return Value  \n  \n "},{"content":"Description","pos":[52,68],"source":" Description  \n  \n "},{"content":"Less than zero","pos":[104,123],"source":" Less than zero  \n  \n "},{"content":" This instance is less than <code>value</code>.  \n  \n ","pos":[134,188],"nodes":[{"content":"This instance is less than <ph id=\"ph1\">&lt;code&gt;value&lt;/code&gt;</ph>.","pos":[1,47],"source":" This instance is less than <code>value</code>."}]},{"content":"Zero","pos":[207,216],"source":" Zero  \n  \n "},{"content":" This instance is equal to <code>value</code>.  \n  \n ","pos":[227,280],"nodes":[{"content":"This instance is equal to <ph id=\"ph1\">&lt;code&gt;value&lt;/code&gt;</ph>.","pos":[1,46],"source":" This instance is equal to <code>value</code>."}]},{"content":"Greater than zero","pos":[299,321],"source":" Greater than zero  \n  \n "},{"content":"This instance is greater than <ph id=\"ph1\">&lt;code&gt;value&lt;/code&gt;</ph>.","pos":[333,382],"source":" This instance is greater than <code>value</code>."}]},{"pos":[483,487],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[494,557],"content":"<code>value</code> is `null`.  \n  \n </td></tr></tbody></table>","nodes":[{"content":"<code>value</code> is `null`.  \n  \n ","pos":[0,36],"nodes":[{"content":"<ph id=\"ph1\">&lt;code&gt;value&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","pos":[0,29],"source":"<code>value</code> is `null`."}]}]}],"pos":[17051,17632],"yaml":true},{"content":"<code>value</code> is not an <xref href=\"System.Int32\"></xref>.","nodes":[{"pos":[0,63],"content":"<ph id=\"ph1\">&lt;code&gt;value&lt;/code&gt;</ph> is not an <ph id=\"ph2\">&lt;xref href=\"System.Int32\"&gt;&lt;/xref&gt;</ph>.","source":"<code>value</code> is not an <xref href=\"System.Int32\"></xref>."}],"pos":[17776,17840],"yaml":true},{"content":"Returns a value indicating whether this instance is equal to a specified <xref href=\"System.Int32\"></xref> value.","nodes":[{"pos":[0,113],"content":"Returns a value indicating whether this instance is equal to a specified <ph id=\"ph1\">&lt;xref href=\"System.Int32\"&gt;&lt;/xref&gt;</ph> value.","source":"Returns a value indicating whether this instance is equal to a specified <xref href=\"System.Int32\"></xref> value."}],"pos":[18907,19021],"yaml":true},{"content":"This method implements the <xref:System.IEquatable%601?displayProperty=fullName> interface, and performs slightly better than <xref:System.Int32.Equals%28System.Object%29?displayProperty=fullName> because it does not have to convert the `obj` parameter to an object.","nodes":[{"pos":[0,266],"content":"This method implements the <ph id=\"ph1\">&lt;xref:System.IEquatable%601?displayProperty=fullName&gt;</ph> interface, and performs slightly better than <ph id=\"ph2\">&lt;xref:System.Int32.Equals%28System.Object%29?displayProperty=fullName&gt;</ph> because it does not have to convert the <ph id=\"ph3\">`obj`</ph> parameter to an object.","source":"This method implements the <xref:System.IEquatable%601?displayProperty=fullName> interface, and performs slightly better than <xref:System.Int32.Equals%28System.Object%29?displayProperty=fullName> because it does not have to convert the `obj` parameter to an object."}],"pos":[19032,19299],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.Int32\"></xref> value to compare to this instance.","nodes":[{"pos":[0,71],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Int32\"&gt;&lt;/xref&gt;</ph> value to compare to this instance.","source":"An <xref href=\"System.Int32\"></xref> value to compare to this instance."}],"pos":[19426,19498],"yaml":true},{"content":"`true` if <code>obj</code> has the same value as this instance; otherwise, `false`.","nodes":[{"pos":[0,83],"content":"<ph id=\"ph1\">`true`</ph> if <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">obj</ph><ept id=\"p1\">&lt;/code&gt;</ept> has the same value as this instance; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` if <code>obj</code> has the same value as this instance; otherwise, `false`."}],"pos":[19556,19642],"yaml":true},{"content":"Returns a value indicating whether this instance is equal to a specified object.","nodes":[{"pos":[0,80],"content":"Returns a value indicating whether this instance is equal to a specified object.","nodes":[{"content":"Returns a value indicating whether this instance is equal to a specified object.","pos":[0,80]}]}],"pos":[21109,21190],"yaml":true},{"content":"An object to compare with this instance.","nodes":[{"pos":[0,40],"content":"An object to compare with this instance.","nodes":[{"content":"An object to compare with this instance.","pos":[0,40]}]}],"pos":[21885,21926],"yaml":true},{"content":"`true` if <code>obj</code> is an instance of <xref href=\"System.Int32\"></xref> and equals the value of this instance; otherwise, `false`.","nodes":[{"pos":[0,137],"content":"<ph id=\"ph1\">`true`</ph> if <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">obj</ph><ept id=\"p1\">&lt;/code&gt;</ept> is an instance of <ph id=\"ph3\">&lt;xref href=\"System.Int32\"&gt;&lt;/xref&gt;</ph> and equals the value of this instance; otherwise, <ph id=\"ph4\">`false`</ph>.","source":"`true` if <code>obj</code> is an instance of <xref href=\"System.Int32\"></xref> and equals the value of this instance; otherwise, `false`."}],"pos":[21984,22124],"yaml":true},{"content":"Returns the hash code for this instance.","nodes":[{"pos":[0,40],"content":"Returns the hash code for this instance.","nodes":[{"content":"Returns the hash code for this instance.","pos":[0,40]}]}],"pos":[23558,23599],"yaml":true},{"content":"A 32-bit signed integer hash code.","nodes":[{"pos":[0,34],"content":"A 32-bit signed integer hash code.","nodes":[{"content":"A 32-bit signed integer hash code.","pos":[0,34]}]}],"pos":[23733,23768],"yaml":true},{"content":"Returns the <xref href=\"System.TypeCode\"></xref> for value type <xref href=\"System.Int32\"></xref>.","nodes":[{"pos":[0,98],"content":"Returns the <ph id=\"ph1\">&lt;xref href=\"System.TypeCode\"&gt;&lt;/xref&gt;</ph> for value type <ph id=\"ph2\">&lt;xref href=\"System.Int32\"&gt;&lt;/xref&gt;</ph>.","source":"Returns the <xref href=\"System.TypeCode\"></xref> for value type <xref href=\"System.Int32\"></xref>."}],"pos":[25207,25306],"yaml":true},{"content":"The enumerated constant, <xref href=\"System.TypeCode.Int32\"></xref>.","nodes":[{"pos":[0,68],"content":"The enumerated constant, <ph id=\"ph1\">&lt;xref href=\"System.TypeCode.Int32\"&gt;&lt;/xref&gt;</ph>.","source":"The enumerated constant, <xref href=\"System.TypeCode.Int32\"></xref>."}],"pos":[25439,25508],"yaml":true},{"content":"Represents the largest possible value of an <xref href=\"System.Int32\"></xref>. This field is constant.","nodes":[{"pos":[0,102],"content":"Represents the largest possible value of an <xref href=\"System.Int32\"></xref>. This field is constant.","nodes":[{"content":"Represents the largest possible value of an <ph id=\"ph1\">&lt;xref href=\"System.Int32\"&gt;&lt;/xref&gt;</ph>.","pos":[0,78],"source":"Represents the largest possible value of an <xref href=\"System.Int32\"></xref>."},{"content":"This field is constant.","pos":[79,102]}]}],"pos":[26578,26681],"yaml":true},{"content":"The value of this constant is 2,147,483,647; that is, hexadecimal 0x7FFFFFFF.","nodes":[{"pos":[0,77],"content":"The value of this constant is 2,147,483,647; that is, hexadecimal 0x7FFFFFFF.","nodes":[{"content":"The value of this constant is 2,147,483,647; that is, hexadecimal 0x7FFFFFFF.","pos":[0,77]}]}],"pos":[26692,26770],"yaml":true,"extradata":"MT"},{"content":"Represents the smallest possible value of <xref href=\"System.Int32\"></xref>. This field is constant.","nodes":[{"pos":[0,100],"content":"Represents the smallest possible value of <xref href=\"System.Int32\"></xref>. This field is constant.","nodes":[{"content":"Represents the smallest possible value of <ph id=\"ph1\">&lt;xref href=\"System.Int32\"&gt;&lt;/xref&gt;</ph>.","pos":[0,76],"source":"Represents the smallest possible value of <xref href=\"System.Int32\"></xref>."},{"content":"This field is constant.","pos":[77,100]}]}],"pos":[28848,28949],"yaml":true},{"content":"The value of this constant is -2,147,483,648; that is, hexadecimal 0x80000000.","nodes":[{"pos":[0,78],"content":"The value of this constant is -2,147,483,648; that is, hexadecimal 0x80000000.","nodes":[{"content":"The value of this constant is -2,147,483,648; that is, hexadecimal 0x80000000.","pos":[0,78]}]}],"pos":[28960,29039],"yaml":true,"extradata":"MT"},{"content":"Converts the string representation of a number in a specified style and culture-specific format to its 32-bit signed integer equivalent.","nodes":[{"pos":[0,136],"content":"Converts the string representation of a number in a specified style and culture-specific format to its 32-bit signed integer equivalent.","nodes":[{"content":"Converts the string representation of a number in a specified style and culture-specific format to its 32-bit signed integer equivalent.","pos":[0,136]}]}],"pos":[31434,31571],"yaml":true},{"content":"The `style` parameter defines the style elements (such as white space or the positive sign) that are allowed in the `s` parameter for the parse operation to succeed. It must be a combination of bit flags from the <xref:System.Globalization.NumberStyles> enumeration. Depending on the value of `style`, the `s` parameter may include the following elements:  \n  \n [ws][$][sign][digits,]digits[.fractional_digist][e[sign]exponential_digits][ws]  \n  \n Or, if `style` includes <xref:System.Globalization.NumberStyles.AllowHexSpecifier>:  \n  \n [ws]hexdigits[ws]  \n  \n Items in square brackets ([ and ]) are optional. The following table describes each element.  \n  \n|Element|Description|  \n|-------------|-----------------|  \n|*ws*|Optional white space. White space can appear at the beginning of `s` if `style` includes the <xref:System.Globalization.NumberStyles?displayProperty=fullName> flag, and it can appear at the end of `s` if `style` includes the <xref:System.Globalization.NumberStyles?displayProperty=fullName> flag.|  \n|*$*|A culture-specific currency symbol. Its position in the string is defined by the <xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A?displayProperty=fullName> property of the <xref:System.Globalization.NumberFormatInfo> object returned by the <xref:System.IFormatProvider.GetFormat%2A> method of the `provider` parameter. The currency symbol can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles?displayProperty=fullName> flag.|  \n|*sign*|An optional sign. The sign can appear at the beginning of `s` if `style` includes the <xref:System.Globalization.NumberStyles?displayProperty=fullName> flag or at the end of `s` if `style` includes the <xref:System.Globalization.NumberStyles?displayProperty=fullName> flag. Parentheses can be used in `s` to indicate a negative value if `style` includes the <xref:System.Globalization.NumberStyles?displayProperty=fullName> flag.|  \n|*digits*<br /><br /> *fractional_digits*<br /><br /> *exponential_digits*|A sequence of digits from 0 through 9. For *fractional_digits*, only the digit 0 is valid.|  \n|*,*|A culture-specific thousands separator symbol. The thousands separator of the culture specified by `provider` can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles?displayProperty=fullName> flag.|  \n|*.*|A culture-specific decimal point symbol. The decimal point symbol of the culture specified by `provider` can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles?displayProperty=fullName> flag.<br /><br /> Only the digit 0 can appear as a fractional digit for the parse operation to succeed; if *fractional_digits* includes any other digit, an <xref:System.OverflowException> is thrown.|  \n|*e*|The 'e' or 'E' character, which indicates that the value is represented in exponential notation. The `s` parameter can represent a number in exponential notation if `style` includes the <xref:System.Globalization.NumberStyles?displayProperty=fullName> flag.|  \n|*hexdigits*|A sequence of hexadecimal digits from 0 through f, or 0 through F.|  \n  \n A string with decimal digits only (which corresponds to the <xref:System.Globalization.NumberStyles?displayProperty=fullName> style) always parses successfully if it is in the range of the <xref:System.Int32> type. Most of the remaining <xref:System.Globalization.NumberStyles> members control elements that may be but are not required to be present in this input string. The following table indicates how individual <xref:System.Globalization.NumberStyles> members affect the elements that may be present in `s`.  \n  \n|Non-composite NumberStyles values|Elements permitted in s in addition to digits|  \n|----------------------------------------|---------------------------------------------------|  \n|<xref:System.Globalization.NumberStyles?displayProperty=fullName>|Decimal digits only.|  \n|<xref:System.Globalization.NumberStyles?displayProperty=fullName>|The decimal point ( *.* ) and *fractional-digits* elements. However, *fractional-digits* must consist of only one or more 0 digits or an <xref:System.OverflowException> is thrown.|  \n|<xref:System.Globalization.NumberStyles?displayProperty=fullName>|The `s` parameter can also use exponential notation. If `s` represents a number in exponential notation, it must represent an integer within the range of the <xref:System.Int32> data type without a non-zero, fractional component.|  \n|<xref:System.Globalization.NumberStyles?displayProperty=fullName>|The *ws* element at the beginning of `s`.|  \n|<xref:System.Globalization.NumberStyles?displayProperty=fullName>|The *ws* element at the end of `s`.|  \n|<xref:System.Globalization.NumberStyles?displayProperty=fullName>|A positive sign can appear before *digits*.|  \n|<xref:System.Globalization.NumberStyles?displayProperty=fullName>|A positive sign can appear after *digits*.|  \n|<xref:System.Globalization.NumberStyles?displayProperty=fullName>|The *sign* element in the form of parentheses enclosing the numeric value.|  \n|<xref:System.Globalization.NumberStyles?displayProperty=fullName>|The thousands separator ( *,* ) element.|  \n|<xref:System.Globalization.NumberStyles?displayProperty=fullName>|The *$* element.|  \n  \n If the <xref:System.Globalization.NumberStyles?displayProperty=fullName> flag is used, `s` must be a hexadecimal value without a prefix. For example, \"C9AF3\" parses successfully, but \"0xC9AF3\" does not. The only other flags that can be present in `style` are <xref:System.Globalization.NumberStyles?displayProperty=fullName> and <xref:System.Globalization.NumberStyles?displayProperty=fullName>. (The <xref:System.Globalization.NumberStyles> enumeration has a composite number style, <xref:System.Globalization.NumberStyles?displayProperty=fullName>, that includes both white space flags.)  \n  \n The `provider` parameter is an <xref:System.IFormatProvider> implementation, such as a <xref:System.Globalization.NumberFormatInfo> or <xref:System.Globalization.CultureInfo> object. The `provider` parameter supplies culture-specific information used in parsing. If `provider` is `null`, the <xref:System.Globalization.NumberFormatInfo> object for the current culture is used.","nodes":[{"pos":[0,355],"content":"The `style` parameter defines the style elements (such as white space or the positive sign) that are allowed in the `s` parameter for the parse operation to succeed. It must be a combination of bit flags from the <xref:System.Globalization.NumberStyles> enumeration. Depending on the value of `style`, the `s` parameter may include the following elements:","nodes":[{"content":"The <ph id=\"ph1\">`style`</ph> parameter defines the style elements (such as white space or the positive sign) that are allowed in the <ph id=\"ph2\">`s`</ph> parameter for the parse operation to succeed.","pos":[0,165],"source":"The `style` parameter defines the style elements (such as white space or the positive sign) that are allowed in the `s` parameter for the parse operation to succeed."},{"content":"It must be a combination of bit flags from the <ph id=\"ph1\">&lt;xref:System.Globalization.NumberStyles&gt;</ph> enumeration.","pos":[166,266],"source":" It must be a combination of bit flags from the <xref:System.Globalization.NumberStyles> enumeration."},{"content":"Depending on the value of <ph id=\"ph1\">`style`</ph>, the <ph id=\"ph2\">`s`</ph> parameter may include the following elements:","pos":[267,355],"source":" Depending on the value of `style`, the `s` parameter may include the following elements:"}]},{"pos":[362,441],"content":"[ws][$][sign][digits,]digits[.fractional_digist][e[sign]exponential_digits][ws]","nodes":[{"content":"[ws][$][sign][digits,]digits[.fractional_digist][e[sign]exponential_digits][ws]","pos":[0,79]}]},{"pos":[448,531],"content":"Or, if <ph id=\"ph1\">`style`</ph> includes <ph id=\"ph2\">&lt;xref:System.Globalization.NumberStyles.AllowHexSpecifier&gt;</ph>:","source":"Or, if `style` includes <xref:System.Globalization.NumberStyles.AllowHexSpecifier>:"},{"pos":[538,555],"content":"[ws]hexdigits[ws]","nodes":[{"content":"[ws]hexdigits[ws]","pos":[0,17]}]},{"pos":[562,654],"content":"Items in square brackets ([ and ]) are optional. The following table describes each element.","nodes":[{"content":"Items in square brackets ([ and ]) are optional. The following table describes each element.","pos":[0,92],"nodes":[{"content":"Items in square brackets ([ and ]) are optional.","pos":[0,48]},{"content":"The following table describes each element.","pos":[49,92]}]}]},{"pos":[661,668],"content":"Element","nodes":[{"content":"Element","pos":[0,7]}]},{"pos":[669,680],"content":"Description","nodes":[{"content":"Description","pos":[0,11]}]},{"pos":[721,725],"content":"<bpt id=\"p1\">*</bpt>ws<ept id=\"p1\">*</ept>","source":"*ws*"},{"pos":[726,1022],"content":"Optional white space. White space can appear at the beginning of `s` if `style` includes the <xref:System.Globalization.NumberStyles?displayProperty=fullName> flag, and it can appear at the end of `s` if `style` includes the <xref:System.Globalization.NumberStyles?displayProperty=fullName> flag.","nodes":[{"content":"Optional white space.","pos":[0,21]},{"content":"White space can appear at the beginning of <ph id=\"ph1\">`s`</ph> if <ph id=\"ph2\">`style`</ph> includes the <ph id=\"ph3\">&lt;xref:System.Globalization.NumberStyles?displayProperty=fullName&gt;</ph> flag, and it can appear at the end of <ph id=\"ph4\">`s`</ph> if <ph id=\"ph5\">`style`</ph> includes the <ph id=\"ph6\">&lt;xref:System.Globalization.NumberStyles?displayProperty=fullName&gt;</ph> flag.","pos":[22,296],"source":" White space can appear at the beginning of `s` if `style` includes the <xref:System.Globalization.NumberStyles?displayProperty=fullName> flag, and it can appear at the end of `s` if `style` includes the <xref:System.Globalization.NumberStyles?displayProperty=fullName> flag."}]},{"pos":[1031,1505],"content":"A culture-specific currency symbol. Its position in the string is defined by the <xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A?displayProperty=fullName> property of the <xref:System.Globalization.NumberFormatInfo> object returned by the <xref:System.IFormatProvider.GetFormat%2A> method of the `provider` parameter. The currency symbol can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles?displayProperty=fullName> flag.","nodes":[{"content":"A culture-specific currency symbol.","pos":[0,35]},{"content":"Its position in the string is defined by the <ph id=\"ph1\">&lt;xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A?displayProperty=fullName&gt;</ph> property of the <ph id=\"ph2\">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object returned by the <ph id=\"ph3\">&lt;xref:System.IFormatProvider.GetFormat%2A&gt;</ph> method of the <ph id=\"ph4\">`provider`</ph> parameter.","pos":[36,340],"source":" Its position in the string is defined by the <xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A?displayProperty=fullName> property of the <xref:System.Globalization.NumberFormatInfo> object returned by the <xref:System.IFormatProvider.GetFormat%2A> method of the `provider` parameter."},{"content":"The currency symbol can appear in <ph id=\"ph1\">`s`</ph> if <ph id=\"ph2\">`style`</ph> includes the <ph id=\"ph3\">&lt;xref:System.Globalization.NumberStyles?displayProperty=fullName&gt;</ph> flag.","pos":[341,474],"source":" The currency symbol can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles?displayProperty=fullName> flag."}]},{"pos":[1510,1516],"content":"<bpt id=\"p1\">*</bpt>sign<ept id=\"p1\">*</ept>","source":"*sign*"},{"pos":[1517,1946],"content":"An optional sign. The sign can appear at the beginning of `s` if `style` includes the <xref:System.Globalization.NumberStyles?displayProperty=fullName> flag or at the end of `s` if `style` includes the <xref:System.Globalization.NumberStyles?displayProperty=fullName> flag. Parentheses can be used in `s` to indicate a negative value if `style` includes the <xref:System.Globalization.NumberStyles?displayProperty=fullName> flag.","nodes":[{"content":"An optional sign.","pos":[0,17]},{"content":"The sign can appear at the beginning of <ph id=\"ph1\">`s`</ph> if <ph id=\"ph2\">`style`</ph> includes the <ph id=\"ph3\">&lt;xref:System.Globalization.NumberStyles?displayProperty=fullName&gt;</ph> flag or at the end of <ph id=\"ph4\">`s`</ph> if <ph id=\"ph5\">`style`</ph> includes the <ph id=\"ph6\">&lt;xref:System.Globalization.NumberStyles?displayProperty=fullName&gt;</ph> flag.","pos":[18,273],"source":" The sign can appear at the beginning of `s` if `style` includes the <xref:System.Globalization.NumberStyles?displayProperty=fullName> flag or at the end of `s` if `style` includes the <xref:System.Globalization.NumberStyles?displayProperty=fullName> flag."},{"content":"Parentheses can be used in <ph id=\"ph1\">`s`</ph> to indicate a negative value if <ph id=\"ph2\">`style`</ph> includes the <ph id=\"ph3\">&lt;xref:System.Globalization.NumberStyles?displayProperty=fullName&gt;</ph> flag.","pos":[274,429],"source":" Parentheses can be used in `s` to indicate a negative value if `style` includes the <xref:System.Globalization.NumberStyles?displayProperty=fullName> flag."}]},{"pos":[1951,2024],"content":"*digits*<br /><br /> *fractional_digits*<br /><br /> *exponential_digits*","nodes":[{"content":"<bpt id=\"p1\">*</bpt>digits<ept id=\"p1\">*</ept>","pos":[0,8],"source":"*digits*"},{"content":"<bpt id=\"p1\">*</bpt>fractional_digits<ept id=\"p1\">*</ept>","pos":[21,40],"source":"*fractional_digits*"},{"content":"<bpt id=\"p1\">*</bpt>exponential_digits<ept id=\"p1\">*</ept>","pos":[53,73],"source":"*exponential_digits*"}]},{"pos":[2025,2115],"content":"A sequence of digits from 0 through 9. For *fractional_digits*, only the digit 0 is valid.","nodes":[{"content":"A sequence of digits from 0 through 9.","pos":[0,38]},{"content":"For <bpt id=\"p1\">*</bpt>fractional_digits<ept id=\"p1\">*</ept>, only the digit 0 is valid.","pos":[39,90],"source":" For *fractional_digits*, only the digit 0 is valid."}]},{"pos":[2120,2123],"content":"<bpt id=\"p1\">*</bpt>,<ept id=\"p1\">*</ept>","source":"*,*"},{"pos":[2124,2347],"content":"A culture-specific thousands separator symbol. The thousands separator of the culture specified by `provider` can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles?displayProperty=fullName> flag.","nodes":[{"content":"A culture-specific thousands separator symbol.","pos":[0,46]},{"content":"The thousands separator of the culture specified by <ph id=\"ph1\">`provider`</ph> can appear in <ph id=\"ph2\">`s`</ph> if <ph id=\"ph3\">`style`</ph> includes the <ph id=\"ph4\">&lt;xref:System.Globalization.NumberStyles?displayProperty=fullName&gt;</ph> flag.","pos":[47,223],"source":" The thousands separator of the culture specified by `provider` can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles?displayProperty=fullName> flag."}]},{"pos":[2352,2355],"content":"<bpt id=\"p1\">*</bpt>.<ept id=\"p1\">*</ept>","source":"*.*"},{"pos":[2356,2767],"content":"A culture-specific decimal point symbol. The decimal point symbol of the culture specified by `provider` can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles?displayProperty=fullName> flag.<br /><br /> Only the digit 0 can appear as a fractional digit for the parse operation to succeed; if *fractional_digits* includes any other digit, an <xref:System.OverflowException> is thrown.","nodes":[{"content":"A culture-specific decimal point symbol. The decimal point symbol of the culture specified by `provider` can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles?displayProperty=fullName> flag.","pos":[0,218],"nodes":[{"content":"A culture-specific decimal point symbol.","pos":[0,40]},{"content":"The decimal point symbol of the culture specified by <ph id=\"ph1\">`provider`</ph> can appear in <ph id=\"ph2\">`s`</ph> if <ph id=\"ph3\">`style`</ph> includes the <ph id=\"ph4\">&lt;xref:System.Globalization.NumberStyles?displayProperty=fullName&gt;</ph> flag.","pos":[41,218],"source":" The decimal point symbol of the culture specified by `provider` can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles?displayProperty=fullName> flag."}]},{"content":"Only the digit 0 can appear as a fractional digit for the parse operation to succeed; if <bpt id=\"p1\">*</bpt>fractional_digits<ept id=\"p1\">*</ept> includes any other digit, an <ph id=\"ph1\">&lt;xref:System.OverflowException&gt;</ph> is thrown.","pos":[231,411],"source":" Only the digit 0 can appear as a fractional digit for the parse operation to succeed; if *fractional_digits* includes any other digit, an <xref:System.OverflowException> is thrown."}]},{"pos":[2772,2775],"content":"<bpt id=\"p1\">*</bpt>e<ept id=\"p1\">*</ept>","source":"*e*"},{"pos":[2776,3033],"content":"The 'e' or 'E' character, which indicates that the value is represented in exponential notation. The `s` parameter can represent a number in exponential notation if `style` includes the <xref:System.Globalization.NumberStyles?displayProperty=fullName> flag.","nodes":[{"content":"The 'e' or 'E' character, which indicates that the value is represented in exponential notation.","pos":[0,96]},{"content":"The <ph id=\"ph1\">`s`</ph> parameter can represent a number in exponential notation if <ph id=\"ph2\">`style`</ph> includes the <ph id=\"ph3\">&lt;xref:System.Globalization.NumberStyles?displayProperty=fullName&gt;</ph> flag.","pos":[97,257],"source":" The `s` parameter can represent a number in exponential notation if `style` includes the <xref:System.Globalization.NumberStyles?displayProperty=fullName> flag."}]},{"pos":[3038,3049],"content":"<bpt id=\"p1\">*</bpt>hexdigits<ept id=\"p1\">*</ept>","source":"*hexdigits*"},{"pos":[3050,3116],"content":"A sequence of hexadecimal digits from 0 through f, or 0 through F.","nodes":[{"content":"A sequence of hexadecimal digits from 0 through f, or 0 through F.","pos":[0,66]}]},{"pos":[3124,3637],"content":"A string with decimal digits only (which corresponds to the <xref:System.Globalization.NumberStyles?displayProperty=fullName> style) always parses successfully if it is in the range of the <xref:System.Int32> type. Most of the remaining <xref:System.Globalization.NumberStyles> members control elements that may be but are not required to be present in this input string. The following table indicates how individual <xref:System.Globalization.NumberStyles> members affect the elements that may be present in `s`.","nodes":[{"content":"A string with decimal digits only (which corresponds to the <ph id=\"ph1\">&lt;xref:System.Globalization.NumberStyles?displayProperty=fullName&gt;</ph> style) always parses successfully if it is in the range of the <ph id=\"ph2\">&lt;xref:System.Int32&gt;</ph> type.","pos":[0,214],"source":"A string with decimal digits only (which corresponds to the <xref:System.Globalization.NumberStyles?displayProperty=fullName> style) always parses successfully if it is in the range of the <xref:System.Int32> type."},{"content":"Most of the remaining <ph id=\"ph1\">&lt;xref:System.Globalization.NumberStyles&gt;</ph> members control elements that may be but are not required to be present in this input string.","pos":[215,371],"source":" Most of the remaining <xref:System.Globalization.NumberStyles> members control elements that may be but are not required to be present in this input string."},{"content":"The following table indicates how individual <ph id=\"ph1\">&lt;xref:System.Globalization.NumberStyles&gt;</ph> members affect the elements that may be present in <ph id=\"ph2\">`s`</ph>.","pos":[372,513],"source":" The following table indicates how individual <xref:System.Globalization.NumberStyles> members affect the elements that may be present in `s`."}]},{"pos":[3644,3677],"content":"Non-composite NumberStyles values","nodes":[{"content":"Non-composite NumberStyles values","pos":[0,33]}]},{"pos":[3678,3723],"content":"Elements permitted in s in addition to digits","nodes":[{"content":"Elements permitted in s in addition to digits","pos":[0,45]}]},{"pos":[3825,3890],"content":"<xref:System.Globalization.NumberStyles?displayProperty=fullName>","nodes":[]},{"pos":[3891,3911],"content":"Decimal digits only.","nodes":[{"content":"Decimal digits only.","pos":[0,20]}]},{"pos":[3916,3981],"content":"<xref:System.Globalization.NumberStyles?displayProperty=fullName>","nodes":[]},{"pos":[3982,4161],"content":"The decimal point ( *.* ) and *fractional-digits* elements. However, *fractional-digits* must consist of only one or more 0 digits or an <xref:System.OverflowException> is thrown.","nodes":[{"content":"The decimal point ( <bpt id=\"p1\">*</bpt>.<ept id=\"p1\">*</ept>","pos":[0,23],"source":"The decimal point ( *.*"},{"content":") and <bpt id=\"p1\">*</bpt>fractional-digits<ept id=\"p1\">*</ept> elements.","pos":[24,59],"source":" ) and *fractional-digits* elements."},{"content":"However, <bpt id=\"p1\">*</bpt>fractional-digits<ept id=\"p1\">*</ept> must consist of only one or more 0 digits or an <ph id=\"ph1\">&lt;xref:System.OverflowException&gt;</ph> is thrown.","pos":[60,179],"source":" However, *fractional-digits* must consist of only one or more 0 digits or an <xref:System.OverflowException> is thrown."}]},{"pos":[4166,4231],"content":"<xref:System.Globalization.NumberStyles?displayProperty=fullName>","nodes":[]},{"pos":[4232,4461],"content":"The `s` parameter can also use exponential notation. If `s` represents a number in exponential notation, it must represent an integer within the range of the <xref:System.Int32> data type without a non-zero, fractional component.","nodes":[{"content":"The <ph id=\"ph1\">`s`</ph> parameter can also use exponential notation.","pos":[0,52],"source":"The `s` parameter can also use exponential notation."},{"content":"If <ph id=\"ph1\">`s`</ph> represents a number in exponential notation, it must represent an integer within the range of the <ph id=\"ph2\">&lt;xref:System.Int32&gt;</ph> data type without a non-zero, fractional component.","pos":[53,229],"source":" If `s` represents a number in exponential notation, it must represent an integer within the range of the <xref:System.Int32> data type without a non-zero, fractional component."}]},{"pos":[4466,4531],"content":"<xref:System.Globalization.NumberStyles?displayProperty=fullName>","nodes":[]},{"pos":[4532,4573],"content":"The <bpt id=\"p1\">*</bpt>ws<ept id=\"p1\">*</ept> element at the beginning of <ph id=\"ph1\">`s`</ph>.","source":"The *ws* element at the beginning of `s`."},{"pos":[4578,4643],"content":"<xref:System.Globalization.NumberStyles?displayProperty=fullName>","nodes":[]},{"pos":[4644,4679],"content":"The <bpt id=\"p1\">*</bpt>ws<ept id=\"p1\">*</ept> element at the end of <ph id=\"ph1\">`s`</ph>.","source":"The *ws* element at the end of `s`."},{"pos":[4684,4749],"content":"<xref:System.Globalization.NumberStyles?displayProperty=fullName>","nodes":[]},{"pos":[4750,4793],"content":"A positive sign can appear before <bpt id=\"p1\">*</bpt>digits<ept id=\"p1\">*</ept>.","source":"A positive sign can appear before *digits*."},{"pos":[4798,4863],"content":"<xref:System.Globalization.NumberStyles?displayProperty=fullName>","nodes":[]},{"pos":[4864,4906],"content":"A positive sign can appear after <bpt id=\"p1\">*</bpt>digits<ept id=\"p1\">*</ept>.","source":"A positive sign can appear after *digits*."},{"pos":[4911,4976],"content":"<xref:System.Globalization.NumberStyles?displayProperty=fullName>","nodes":[]},{"pos":[4977,5051],"content":"The <bpt id=\"p1\">*</bpt>sign<ept id=\"p1\">*</ept> element in the form of parentheses enclosing the numeric value.","source":"The *sign* element in the form of parentheses enclosing the numeric value."},{"pos":[5056,5121],"content":"<xref:System.Globalization.NumberStyles?displayProperty=fullName>","nodes":[]},{"pos":[5122,5162],"content":"The thousands separator ( <bpt id=\"p1\">*</bpt>,<ept id=\"p1\">*</ept> ) element.","source":"The thousands separator ( *,* ) element."},{"pos":[5167,5232],"content":"<xref:System.Globalization.NumberStyles?displayProperty=fullName>","nodes":[]},{"pos":[5233,5249],"content":"The <bpt id=\"p1\">*</bpt><ph id=\"ph1\">$</ph><ept id=\"p1\">*</ept> element.","source":"The *$* element."},{"pos":[5257,5846],"content":"If the <xref:System.Globalization.NumberStyles?displayProperty=fullName> flag is used, `s` must be a hexadecimal value without a prefix. For example, \"C9AF3\" parses successfully, but \"0xC9AF3\" does not. The only other flags that can be present in `style` are <xref:System.Globalization.NumberStyles?displayProperty=fullName> and <xref:System.Globalization.NumberStyles?displayProperty=fullName>. (The <xref:System.Globalization.NumberStyles> enumeration has a composite number style, <xref:System.Globalization.NumberStyles?displayProperty=fullName>, that includes both white space flags.)","nodes":[{"content":"If the <ph id=\"ph1\">&lt;xref:System.Globalization.NumberStyles?displayProperty=fullName&gt;</ph> flag is used, <ph id=\"ph2\">`s`</ph> must be a hexadecimal value without a prefix.","pos":[0,136],"source":"If the <xref:System.Globalization.NumberStyles?displayProperty=fullName> flag is used, `s` must be a hexadecimal value without a prefix."},{"content":"For example, \"C9AF3\" parses successfully, but \"0xC9AF3\" does not.","pos":[137,202]},{"content":"The only other flags that can be present in <ph id=\"ph1\">`style`</ph> are <ph id=\"ph2\">&lt;xref:System.Globalization.NumberStyles?displayProperty=fullName&gt;</ph> and <ph id=\"ph3\">&lt;xref:System.Globalization.NumberStyles?displayProperty=fullName&gt;</ph>.","pos":[203,395],"source":" The only other flags that can be present in `style` are <xref:System.Globalization.NumberStyles?displayProperty=fullName> and <xref:System.Globalization.NumberStyles?displayProperty=fullName>."},{"content":"(The <ph id=\"ph1\">&lt;xref:System.Globalization.NumberStyles&gt;</ph> enumeration has a composite number style, <ph id=\"ph2\">&lt;xref:System.Globalization.NumberStyles?displayProperty=fullName&gt;</ph>, that includes both white space flags.)","pos":[396,589],"source":" (The <xref:System.Globalization.NumberStyles> enumeration has a composite number style, <xref:System.Globalization.NumberStyles?displayProperty=fullName>, that includes both white space flags.)"}]},{"pos":[5853,6229],"content":"The `provider` parameter is an <xref:System.IFormatProvider> implementation, such as a <xref:System.Globalization.NumberFormatInfo> or <xref:System.Globalization.CultureInfo> object. The `provider` parameter supplies culture-specific information used in parsing. If `provider` is `null`, the <xref:System.Globalization.NumberFormatInfo> object for the current culture is used.","nodes":[{"content":"The <ph id=\"ph1\">`provider`</ph> parameter is an <ph id=\"ph2\">&lt;xref:System.IFormatProvider&gt;</ph> implementation, such as a <ph id=\"ph3\">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> or <ph id=\"ph4\">&lt;xref:System.Globalization.CultureInfo&gt;</ph> object.","pos":[0,182],"source":"The `provider` parameter is an <xref:System.IFormatProvider> implementation, such as a <xref:System.Globalization.NumberFormatInfo> or <xref:System.Globalization.CultureInfo> object."},{"content":"The <ph id=\"ph1\">`provider`</ph> parameter supplies culture-specific information used in parsing.","pos":[183,262],"source":" The `provider` parameter supplies culture-specific information used in parsing."},{"content":"If <ph id=\"ph1\">`provider`</ph> is <ph id=\"ph2\">`null`</ph>, the <ph id=\"ph3\">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object for the current culture is used.","pos":[263,376],"source":" If `provider` is `null`, the <xref:System.Globalization.NumberFormatInfo> object for the current culture is used."}]}],"pos":[31582,37856],"yaml":true,"extradata":"MT"},{"content":"A string containing a number to convert.","nodes":[{"pos":[0,40],"content":"A string containing a number to convert.","nodes":[{"content":"A string containing a number to convert.","pos":[0,40]}]}],"pos":[38756,38797],"yaml":true},{"content":"A bitwise combination of enumeration values that indicates the style elements that can be present in <code>s</code>. A typical value to specify is <xref href=\"System.Globalization.NumberStyles.Integer\"></xref>.","nodes":[{"pos":[0,210],"content":"A bitwise combination of enumeration values that indicates the style elements that can be present in <code>s</code>. A typical value to specify is <xref href=\"System.Globalization.NumberStyles.Integer\"></xref>.","nodes":[{"content":"A bitwise combination of enumeration values that indicates the style elements that can be present in <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">s</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","pos":[0,116],"source":"A bitwise combination of enumeration values that indicates the style elements that can be present in <code>s</code>."},{"content":"A typical value to specify is <ph id=\"ph1\">&lt;xref href=\"System.Globalization.NumberStyles.Integer\"&gt;&lt;/xref&gt;</ph>.","pos":[117,210],"source":" A typical value to specify is <xref href=\"System.Globalization.NumberStyles.Integer\"></xref>."}]}],"pos":[38878,39089],"yaml":true},{"content":"An object that supplies culture-specific information about the format of <code>s</code>.","nodes":[{"pos":[0,88],"content":"An object that supplies culture-specific information about the format of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">s</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"An object that supplies culture-specific information about the format of <code>s</code>."}],"pos":[39162,39251],"yaml":true},{"content":"A 32-bit signed integer equivalent to the number specified in <code>s</code>.","nodes":[{"pos":[0,77],"content":"A 32-bit signed integer equivalent to the number specified in <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">s</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"A 32-bit signed integer equivalent to the number specified in <code>s</code>."}],"pos":[39307,39385],"yaml":true},{"content":"<code>s</code> is `null`.","nodes":[{"pos":[0,25],"content":"<ph id=\"ph1\">&lt;code&gt;s&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>s</code> is `null`."}],"pos":[39533,39559],"yaml":true},{"content":"<code>style</code> is not a <xref href=\"System.Globalization.NumberStyles\"></xref> value.  \n  \n -or-  \n  \n <code>style</code> is not a combination of <xref href=\"System.Globalization.NumberStyles.AllowHexSpecifier\"></xref> and <xref href=\"System.Globalization.NumberStyles.HexNumber\"></xref> values.","nodes":[{"pos":[0,89],"content":"<ph id=\"ph1\">&lt;code&gt;style&lt;/code&gt;</ph> is not a <ph id=\"ph2\">&lt;xref href=\"System.Globalization.NumberStyles\"&gt;&lt;/xref&gt;</ph> value.","source":"<code>style</code> is not a <xref href=\"System.Globalization.NumberStyles\"></xref> value."},{"pos":[96,100],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[107,299],"content":"<ph id=\"ph1\">&lt;code&gt;style&lt;/code&gt;</ph> is not a combination of <ph id=\"ph2\">&lt;xref href=\"System.Globalization.NumberStyles.AllowHexSpecifier\"&gt;&lt;/xref&gt;</ph> and <ph id=\"ph3\">&lt;xref href=\"System.Globalization.NumberStyles.HexNumber\"&gt;&lt;/xref&gt;</ph> values.","source":"<code>style</code> is not a combination of <xref href=\"System.Globalization.NumberStyles.AllowHexSpecifier\"></xref> and <xref href=\"System.Globalization.NumberStyles.HexNumber\"></xref> values."}],"pos":[39653,39965],"yaml":true},{"content":"<code>s</code> is not in a format compliant with <code>style</code>.","nodes":[{"pos":[0,68],"content":"<ph id=\"ph1\">&lt;code&gt;s&lt;/code&gt;</ph> is not in a format compliant with <ph id=\"ph2\">&lt;code&gt;style&lt;/code&gt;</ph>.","source":"<code>s</code> is not in a format compliant with <code>style</code>."}],"pos":[40055,40124],"yaml":true},{"content":"<code>s</code> represents a number less than <xref href=\"System.Int32.MinValue\"></xref> or greater than <xref href=\"System.Int32.MaxValue\"></xref>.  \n  \n -or-  \n  \n <code>s</code> includes non-zero, fractional digits.","nodes":[{"pos":[0,147],"content":"<ph id=\"ph1\">&lt;code&gt;s&lt;/code&gt;</ph> represents a number less than <ph id=\"ph2\">&lt;xref href=\"System.Int32.MinValue\"&gt;&lt;/xref&gt;</ph> or greater than <ph id=\"ph3\">&lt;xref href=\"System.Int32.MaxValue\"&gt;&lt;/xref&gt;</ph>.","source":"<code>s</code> represents a number less than <xref href=\"System.Int32.MinValue\"></xref> or greater than <xref href=\"System.Int32.MaxValue\"></xref>."},{"pos":[154,158],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[165,217],"content":"<ph id=\"ph1\">&lt;code&gt;s&lt;/code&gt;</ph> includes non-zero, fractional digits.","source":"<code>s</code> includes non-zero, fractional digits."}],"pos":[40218,40446],"yaml":true},{"content":"Converts the string representation of a number in a specified culture-specific format to its 32-bit signed integer equivalent.","nodes":[{"pos":[0,126],"content":"Converts the string representation of a number in a specified culture-specific format to its 32-bit signed integer equivalent.","nodes":[{"content":"Converts the string representation of a number in a specified culture-specific format to its 32-bit signed integer equivalent.","pos":[0,126]}]}],"pos":[41977,42104],"yaml":true},{"content":"This overload of the <xref:System.Int32.Parse%28System.String%2CSystem.IFormatProvider%29> method is typically used to convert text that can be formatted in a variety of ways to an <xref:System.Int32> value. For example, it can be used to convert the text entered by a user into an HTML text box to a numeric value.  \n  \n The `s` parameter contains a number of the form:  \n  \n [ws][sign]digits[ws]  \n  \n Items in square brackets ([ and ]) are optional. The following table describes each element.  \n  \n|Element|Description|  \n|-------------|-----------------|  \n|*ws*|Optional white space.|  \n|*sign*|An optional sign.|  \n|*digits*|A sequence of digits ranging from 0 to 9.|  \n  \n The `s` parameter is interpreted using the <xref:System.Globalization.NumberStyles?displayProperty=fullName> style. In addition to decimal digits, only leading and trailing spaces together with a leading sign are allowed. To explicitly define the style elements that can be present in `s`, use the <xref:System.Int32.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=fullName> method.  \n  \n The `provider` parameter is an <xref:System.IFormatProvider> implementation, such as a <xref:System.Globalization.NumberFormatInfo> or <xref:System.Globalization.CultureInfo> object. The `provider` parameter supplies culture-specific information about the format of `s`. If `provider` is `null`, the <xref:System.Globalization.NumberFormatInfo> object for the current culture is used.","nodes":[{"pos":[0,315],"content":"This overload of the <xref:System.Int32.Parse%28System.String%2CSystem.IFormatProvider%29> method is typically used to convert text that can be formatted in a variety of ways to an <xref:System.Int32> value. For example, it can be used to convert the text entered by a user into an HTML text box to a numeric value.","nodes":[{"content":"This overload of the <xref:System.Int32.Parse%28System.String%2CSystem.IFormatProvider%29> method is typically used to convert text that can be formatted in a variety of ways to an <xref:System.Int32> value. For example, it can be used to convert the text entered by a user into an HTML text box to a numeric value.","pos":[0,315],"nodes":[{"content":"This overload of the <ph id=\"ph1\">&lt;xref:System.Int32.Parse%28System.String%2CSystem.IFormatProvider%29&gt;</ph> method is typically used to convert text that can be formatted in a variety of ways to an <ph id=\"ph2\">&lt;xref:System.Int32&gt;</ph> value.","pos":[0,207],"source":"This overload of the <xref:System.Int32.Parse%28System.String%2CSystem.IFormatProvider%29> method is typically used to convert text that can be formatted in a variety of ways to an <xref:System.Int32> value."},{"content":"For example, it can be used to convert the text entered by a user into an HTML text box to a numeric value.","pos":[208,315]}]}]},{"pos":[322,370],"content":"The <ph id=\"ph1\">`s`</ph> parameter contains a number of the form:","source":"The `s` parameter contains a number of the form:"},{"pos":[377,397],"content":"[ws][sign]digits[ws]","nodes":[{"content":"[ws][sign]digits[ws]","pos":[0,20]}]},{"pos":[404,496],"content":"Items in square brackets ([ and ]) are optional. The following table describes each element.","nodes":[{"content":"Items in square brackets ([ and ]) are optional. The following table describes each element.","pos":[0,92],"nodes":[{"content":"Items in square brackets ([ and ]) are optional.","pos":[0,48]},{"content":"The following table describes each element.","pos":[49,92]}]}]},{"pos":[503,510],"content":"Element","nodes":[{"content":"Element","pos":[0,7]}]},{"pos":[511,522],"content":"Description","nodes":[{"content":"Description","pos":[0,11]}]},{"pos":[563,567],"content":"<bpt id=\"p1\">*</bpt>ws<ept id=\"p1\">*</ept>","source":"*ws*"},{"pos":[568,589],"content":"Optional white space.","nodes":[{"content":"Optional white space.","pos":[0,21]}]},{"pos":[594,600],"content":"<bpt id=\"p1\">*</bpt>sign<ept id=\"p1\">*</ept>","source":"*sign*"},{"pos":[601,618],"content":"An optional sign.","nodes":[{"content":"An optional sign.","pos":[0,17]}]},{"pos":[623,631],"content":"<bpt id=\"p1\">*</bpt>digits<ept id=\"p1\">*</ept>","source":"*digits*"},{"pos":[632,673],"content":"A sequence of digits ranging from 0 to 9.","nodes":[{"content":"A sequence of digits ranging from 0 to 9.","pos":[0,41]}]},{"pos":[681,1117],"content":"The `s` parameter is interpreted using the <xref:System.Globalization.NumberStyles?displayProperty=fullName> style. In addition to decimal digits, only leading and trailing spaces together with a leading sign are allowed. To explicitly define the style elements that can be present in `s`, use the <xref:System.Int32.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=fullName> method.","nodes":[{"content":"The <ph id=\"ph1\">`s`</ph> parameter is interpreted using the <ph id=\"ph2\">&lt;xref:System.Globalization.NumberStyles?displayProperty=fullName&gt;</ph> style.","pos":[0,115],"source":"The `s` parameter is interpreted using the <xref:System.Globalization.NumberStyles?displayProperty=fullName> style."},{"content":"In addition to decimal digits, only leading and trailing spaces together with a leading sign are allowed.","pos":[116,221]},{"content":"To explicitly define the style elements that can be present in <ph id=\"ph1\">`s`</ph>, use the <ph id=\"ph2\">&lt;xref:System.Int32.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=fullName&gt;</ph> method.","pos":[222,436],"source":" To explicitly define the style elements that can be present in `s`, use the <xref:System.Int32.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=fullName> method."}]},{"pos":[1124,1508],"content":"The `provider` parameter is an <xref:System.IFormatProvider> implementation, such as a <xref:System.Globalization.NumberFormatInfo> or <xref:System.Globalization.CultureInfo> object. The `provider` parameter supplies culture-specific information about the format of `s`. If `provider` is `null`, the <xref:System.Globalization.NumberFormatInfo> object for the current culture is used.","nodes":[{"content":"The <ph id=\"ph1\">`provider`</ph> parameter is an <ph id=\"ph2\">&lt;xref:System.IFormatProvider&gt;</ph> implementation, such as a <ph id=\"ph3\">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> or <ph id=\"ph4\">&lt;xref:System.Globalization.CultureInfo&gt;</ph> object.","pos":[0,182],"source":"The `provider` parameter is an <xref:System.IFormatProvider> implementation, such as a <xref:System.Globalization.NumberFormatInfo> or <xref:System.Globalization.CultureInfo> object."},{"content":"The <ph id=\"ph1\">`provider`</ph> parameter supplies culture-specific information about the format of <ph id=\"ph2\">`s`</ph>.","pos":[183,270],"source":" The `provider` parameter supplies culture-specific information about the format of `s`."},{"content":"If <ph id=\"ph1\">`provider`</ph> is <ph id=\"ph2\">`null`</ph>, the <ph id=\"ph3\">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object for the current culture is used.","pos":[271,384],"source":" If `provider` is `null`, the <xref:System.Globalization.NumberFormatInfo> object for the current culture is used."}]}],"pos":[42115,43642],"yaml":true,"extradata":"MT"},{"content":"A string containing a number to convert.","nodes":[{"pos":[0,40],"content":"A string containing a number to convert.","nodes":[{"content":"A string containing a number to convert.","pos":[0,40]}]}],"pos":[44645,44686],"yaml":true},{"content":"An object that supplies culture-specific formatting information about <code>s</code>.","nodes":[{"pos":[0,85],"content":"An object that supplies culture-specific formatting information about <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">s</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"An object that supplies culture-specific formatting information about <code>s</code>."}],"pos":[44759,44845],"yaml":true},{"content":"A 32-bit signed integer equivalent to the number specified in <code>s</code>.","nodes":[{"pos":[0,77],"content":"A 32-bit signed integer equivalent to the number specified in <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">s</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"A 32-bit signed integer equivalent to the number specified in <code>s</code>."}],"pos":[44901,44979],"yaml":true},{"content":"<code>s</code> is `null`.","nodes":[{"pos":[0,25],"content":"<ph id=\"ph1\">&lt;code&gt;s&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>s</code> is `null`."}],"pos":[45127,45153],"yaml":true},{"content":"<code>s</code> is not of the correct format.","nodes":[{"pos":[0,44],"content":"<ph id=\"ph1\">&lt;code&gt;s&lt;/code&gt;</ph> is not of the correct format.","source":"<code>s</code> is not of the correct format."}],"pos":[45243,45288],"yaml":true},{"content":"<code>s</code> represents a number less than <xref href=\"System.Int32.MinValue\"></xref> or greater than <xref href=\"System.Int32.MaxValue\"></xref>.","nodes":[{"pos":[0,147],"content":"<ph id=\"ph1\">&lt;code&gt;s&lt;/code&gt;</ph> represents a number less than <ph id=\"ph2\">&lt;xref href=\"System.Int32.MinValue\"&gt;&lt;/xref&gt;</ph> or greater than <ph id=\"ph3\">&lt;xref href=\"System.Int32.MaxValue\"&gt;&lt;/xref&gt;</ph>.","source":"<code>s</code> represents a number less than <xref href=\"System.Int32.MinValue\"></xref> or greater than <xref href=\"System.Int32.MaxValue\"></xref>."}],"pos":[45382,45530],"yaml":true},{"content":"Converts the string representation of a number to its 32-bit signed integer equivalent.","nodes":[{"pos":[0,87],"content":"Converts the string representation of a number to its 32-bit signed integer equivalent.","nodes":[{"content":"Converts the string representation of a number to its 32-bit signed integer equivalent.","pos":[0,87]}]}],"pos":[46941,47029],"yaml":true},{"content":"The `s` parameter contains a number of the form:  \n  \n [ws][sign]digits[ws]  \n  \n Items in square brackets ([ and ]) are optional. The following table describes each element.  \n  \n|Element|Description|  \n|-------------|-----------------|  \n|ws|Optional white space.|  \n|sign|An optional sign.|  \n|digits|A sequence of digits ranging from 0 to 9.|  \n  \n The `s` parameter is interpreted using the <xref:System.Globalization.NumberStyles?displayProperty=fullName> style. In addition to decimal digits, only leading and trailing spaces together with a leading sign are allowed. To explicitly define the style elements that can be present in `s`, use either the <xref:System.Int32.Parse%28System.String%2CSystem.Globalization.NumberStyles%29?displayProperty=fullName> or the <xref:System.Int32.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=fullName> method.  \n  \n The `s` parameter is parsed using the formatting information in a <xref:System.Globalization.NumberFormatInfo> object initialized for the current system culture. For more information, see <xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A>. To parse a string using the formatting information of some other culture, use the <xref:System.Int32.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=fullName> method.","nodes":[{"pos":[0,48],"content":"The <ph id=\"ph1\">`s`</ph> parameter contains a number of the form:","source":"The `s` parameter contains a number of the form:"},{"pos":[55,75],"content":"[ws][sign]digits[ws]","nodes":[{"content":"[ws][sign]digits[ws]","pos":[0,20]}]},{"pos":[82,174],"content":"Items in square brackets ([ and ]) are optional. The following table describes each element.","nodes":[{"content":"Items in square brackets ([ and ]) are optional. The following table describes each element.","pos":[0,92],"nodes":[{"content":"Items in square brackets ([ and ]) are optional.","pos":[0,48]},{"content":"The following table describes each element.","pos":[49,92]}]}]},{"pos":[181,188],"content":"Element","nodes":[{"content":"Element","pos":[0,7]}]},{"pos":[189,200],"content":"Description","nodes":[{"content":"Description","pos":[0,11]}]},{"pos":[241,243],"content":"ws","nodes":[{"content":"ws","pos":[0,2]}]},{"pos":[244,265],"content":"Optional white space.","nodes":[{"content":"Optional white space.","pos":[0,21]}]},{"pos":[270,274],"content":"sign","nodes":[{"content":"sign","pos":[0,4]}]},{"pos":[275,292],"content":"An optional sign.","nodes":[{"content":"An optional sign.","pos":[0,17]}]},{"pos":[297,303],"content":"digits","nodes":[{"content":"digits","pos":[0,6]}]},{"pos":[304,345],"content":"A sequence of digits ranging from 0 to 9.","nodes":[{"content":"A sequence of digits ranging from 0 to 9.","pos":[0,41]}]},{"pos":[353,909],"content":"The `s` parameter is interpreted using the <xref:System.Globalization.NumberStyles?displayProperty=fullName> style. In addition to decimal digits, only leading and trailing spaces together with a leading sign are allowed. To explicitly define the style elements that can be present in `s`, use either the <xref:System.Int32.Parse%28System.String%2CSystem.Globalization.NumberStyles%29?displayProperty=fullName> or the <xref:System.Int32.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=fullName> method.","nodes":[{"content":"The <ph id=\"ph1\">`s`</ph> parameter is interpreted using the <ph id=\"ph2\">&lt;xref:System.Globalization.NumberStyles?displayProperty=fullName&gt;</ph> style.","pos":[0,115],"source":"The `s` parameter is interpreted using the <xref:System.Globalization.NumberStyles?displayProperty=fullName> style."},{"content":"In addition to decimal digits, only leading and trailing spaces together with a leading sign are allowed.","pos":[116,221]},{"content":"To explicitly define the style elements that can be present in <ph id=\"ph1\">`s`</ph>, use either the <ph id=\"ph2\">&lt;xref:System.Int32.Parse%28System.String%2CSystem.Globalization.NumberStyles%29?displayProperty=fullName&gt;</ph> or the <ph id=\"ph3\">&lt;xref:System.Int32.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=fullName&gt;</ph> method.","pos":[222,556],"source":" To explicitly define the style elements that can be present in `s`, use either the <xref:System.Int32.Parse%28System.String%2CSystem.Globalization.NumberStyles%29?displayProperty=fullName> or the <xref:System.Int32.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=fullName> method."}]},{"pos":[916,1385],"content":"The `s` parameter is parsed using the formatting information in a <xref:System.Globalization.NumberFormatInfo> object initialized for the current system culture. For more information, see <xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A>. To parse a string using the formatting information of some other culture, use the <xref:System.Int32.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=fullName> method.","nodes":[{"content":"The <ph id=\"ph1\">`s`</ph> parameter is parsed using the formatting information in a <ph id=\"ph2\">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object initialized for the current system culture.","pos":[0,161],"source":"The `s` parameter is parsed using the formatting information in a <xref:System.Globalization.NumberFormatInfo> object initialized for the current system culture."},{"content":"For more information, see <ph id=\"ph1\">&lt;xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A&gt;</ph>.","pos":[162,248],"source":" For more information, see <xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A>."},{"content":"To parse a string using the formatting information of some other culture, use the <ph id=\"ph1\">&lt;xref:System.Int32.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=fullName&gt;</ph> method.","pos":[249,469],"source":" To parse a string using the formatting information of some other culture, use the <xref:System.Int32.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=fullName> method."}]}],"pos":[47040,48442],"yaml":true,"extradata":"MT"},{"content":"A string containing a number to convert.","nodes":[{"pos":[0,40],"content":"A string containing a number to convert.","nodes":[{"content":"A string containing a number to convert.","pos":[0,40]}]}],"pos":[49213,49254],"yaml":true},{"content":"A 32-bit signed integer equivalent to the number contained in <code>s</code>.","nodes":[{"pos":[0,77],"content":"A 32-bit signed integer equivalent to the number contained in <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">s</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"A 32-bit signed integer equivalent to the number contained in <code>s</code>."}],"pos":[49310,49388],"yaml":true},{"content":"<code>s</code> is `null`.","nodes":[{"pos":[0,25],"content":"<ph id=\"ph1\">&lt;code&gt;s&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>s</code> is `null`."}],"pos":[49536,49562],"yaml":true},{"content":"<code>s</code> is not in the correct format.","nodes":[{"pos":[0,44],"content":"<ph id=\"ph1\">&lt;code&gt;s&lt;/code&gt;</ph> is not in the correct format.","source":"<code>s</code> is not in the correct format."}],"pos":[49652,49697],"yaml":true},{"content":"<code>s</code> represents a number less than <xref href=\"System.Int32.MinValue\"></xref> or greater than <xref href=\"System.Int32.MaxValue\"></xref>.","nodes":[{"pos":[0,147],"content":"<ph id=\"ph1\">&lt;code&gt;s&lt;/code&gt;</ph> represents a number less than <ph id=\"ph2\">&lt;xref href=\"System.Int32.MinValue\"&gt;&lt;/xref&gt;</ph> or greater than <ph id=\"ph3\">&lt;xref href=\"System.Int32.MaxValue\"&gt;&lt;/xref&gt;</ph>.","source":"<code>s</code> represents a number less than <xref href=\"System.Int32.MinValue\"></xref> or greater than <xref href=\"System.Int32.MaxValue\"></xref>."}],"pos":[49791,49939],"yaml":true},{"content":"Converts the string representation of a number in a specified style to its 32-bit signed integer equivalent.","nodes":[{"pos":[0,108],"content":"Converts the string representation of a number in a specified style to its 32-bit signed integer equivalent.","nodes":[{"content":"Converts the string representation of a number in a specified style to its 32-bit signed integer equivalent.","pos":[0,108]}]}],"pos":[51494,51603],"yaml":true},{"content":"The `style` parameter defines the style elements (such as white space, the positive or negative sign symbol, or the thousands separator symbol) that are allowed in the `s` parameter for the parse operation to succeed. It must be a combination of bit flags from the <xref:System.Globalization.NumberStyles> enumeration. Depending on the value of `style`, the `s` parameter may include the following elements:  \n  \n [ws][$][sign][digits,]digits[.fractional_digits][e[sign]exponential_digits][ws]  \n  \n Or, if `style` includes <xref:System.Globalization.NumberStyles.AllowHexSpecifier>:  \n  \n [ws]hexdigits[ws]  \n  \n Items in square brackets ([ and ]) are optional. The following table describes each element.  \n  \n|Element|Description|  \n|-------------|-----------------|  \n|*ws*|Optional white space. White space can appear at the beginning of `s` if `style` includes the <xref:System.Globalization.NumberStyles?displayProperty=fullName> flag, and it can appear at the end of `s` if `style` includes the <xref:System.Globalization.NumberStyles?displayProperty=fullName> flag.|  \n|*$*|A culture-specific currency symbol. Its position in the string is defined by the <xref:System.Globalization.NumberFormatInfo.CurrencyNegativePattern%2A?displayProperty=fullName> and <xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A?displayProperty=fullName> properties of the current culture. The current culture's currency symbol can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles?displayProperty=fullName> flag.|  \n|*sign*|An optional sign. The sign can appear at the beginning of `s` if `style` includes the <xref:System.Globalization.NumberStyles?displayProperty=fullName> flag, and it can appear at the end of `s` if `style` includes the <xref:System.Globalization.NumberStyles?displayProperty=fullName> flag. Parentheses can be used in `s` to indicate a negative value if `style` includes the <xref:System.Globalization.NumberStyles?displayProperty=fullName> flag.|  \n|*digits*<br /><br /> *fractional_digits*<br /><br /> *exponential_digits*|A sequence of digits from 0 through 9. For *fractional_digits*, only the digit 0 is valid.|  \n|*,*|A culture-specific thousands separator symbol. The current culture's thousands separator can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles?displayProperty=fullName> flag.|  \n|*.*|A culture-specific decimal point symbol. The current culture's decimal point symbol can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles?displayProperty=fullName> flag. Only the digit 0 can appear as a fractional digit for the parse operation to succeed; if *fractional_digits* includes any other digit, an <xref:System.OverflowException> is thrown.|  \n|*e*|The 'e' or 'E' character, which indicates that the value is represented in exponential notation. The `s` parameter can represent a number in exponential notation if `style` includes the <xref:System.Globalization.NumberStyles?displayProperty=fullName> flag.|  \n|*hexdigits*|A sequence of hexadecimal digits from 0 through f, or 0 through F.|  \n  \n A string with digits only (which corresponds to the <xref:System.Globalization.NumberStyles?displayProperty=fullName> style) always parses successfully. Most of the remaining <xref:System.Globalization.NumberStyles> members control elements that may be but are not required to be present in the input string. The following table indicates how individual <xref:System.Globalization.NumberStyles> members affect the elements that may be present in `s`.  \n  \n|NumberStyles value|Elements permitted in s in addition to digits|  \n|------------------------|---------------------------------------------------|  \n|<xref:System.Globalization.NumberStyles.None>|The *digits* element only.|  \n|<xref:System.Globalization.NumberStyles.AllowDecimalPoint>|The decimal point ( *.* ) and *fractional-digits* elements.|  \n|<xref:System.Globalization.NumberStyles.AllowExponent>|The `s` parameter can also use exponential notation.|  \n|<xref:System.Globalization.NumberStyles.AllowLeadingWhite>|The *ws* element at the beginning of `s`.|  \n|<xref:System.Globalization.NumberStyles.AllowTrailingWhite>|The *ws* element at the end of `s`.|  \n|<xref:System.Globalization.NumberStyles.AllowLeadingSign>|The *sign* element at the beginning of `s`.|  \n|<xref:System.Globalization.NumberStyles.AllowTrailingSign>|The *sign* element at the end of `s`.|  \n|<xref:System.Globalization.NumberStyles.AllowParentheses>|The *sign* element in the form of parentheses enclosing the numeric value.|  \n|<xref:System.Globalization.NumberStyles.AllowThousands>|The thousands separator ( *,* ) element.|  \n|<xref:System.Globalization.NumberStyles.AllowCurrencySymbol>|The *$* element.|  \n|<xref:System.Globalization.NumberStyles.Currency>|All. The `s` parameter cannot represent a hexadecimal number or a number in exponential notation.|  \n|<xref:System.Globalization.NumberStyles.Float>|The *ws* element at the beginning or end of `s`, *sign* at the beginning of `s`, and the decimal point ( *.* ) symbol. The `s` parameter can also use exponential notation.|  \n|<xref:System.Globalization.NumberStyles.Number>|The `ws`, `sign`, thousands separator ( *,* ), and decimal point ( *.* ) elements.|  \n|<xref:System.Globalization.NumberStyles.Any>|All styles, except `s` cannot represent a hexadecimal number.|  \n  \n If the <xref:System.Globalization.NumberStyles?displayProperty=fullName> flag is used, `s` must be a hexadecimal value without a prefix. For example, \"C9AF3\" parses successfully, but \"0xC9AF3\" does not. The only other flags that can be combined with the `s` parameter it are <xref:System.Globalization.NumberStyles?displayProperty=fullName> and <xref:System.Globalization.NumberStyles?displayProperty=fullName>. (The <xref:System.Globalization.NumberStyles> enumeration includes a composite number style, <xref:System.Globalization.NumberStyles?displayProperty=fullName>, that includes both white space flags.)  \n  \n The `s` parameter is parsed using the formatting information in a <xref:System.Globalization.NumberFormatInfo> object that is initialized for the current system culture. To specify the culture whose formatting information is used for the parse operation, call the <xref:System.Int32.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=fullName> overload.","nodes":[{"pos":[0,407],"content":"The `style` parameter defines the style elements (such as white space, the positive or negative sign symbol, or the thousands separator symbol) that are allowed in the `s` parameter for the parse operation to succeed. It must be a combination of bit flags from the <xref:System.Globalization.NumberStyles> enumeration. Depending on the value of `style`, the `s` parameter may include the following elements:","nodes":[{"content":"The <ph id=\"ph1\">`style`</ph> parameter defines the style elements (such as white space, the positive or negative sign symbol, or the thousands separator symbol) that are allowed in the <ph id=\"ph2\">`s`</ph> parameter for the parse operation to succeed.","pos":[0,217],"source":"The `style` parameter defines the style elements (such as white space, the positive or negative sign symbol, or the thousands separator symbol) that are allowed in the `s` parameter for the parse operation to succeed."},{"content":"It must be a combination of bit flags from the <ph id=\"ph1\">&lt;xref:System.Globalization.NumberStyles&gt;</ph> enumeration.","pos":[218,318],"source":" It must be a combination of bit flags from the <xref:System.Globalization.NumberStyles> enumeration."},{"content":"Depending on the value of <ph id=\"ph1\">`style`</ph>, the <ph id=\"ph2\">`s`</ph> parameter may include the following elements:","pos":[319,407],"source":" Depending on the value of `style`, the `s` parameter may include the following elements:"}]},{"pos":[414,493],"content":"[ws][$][sign][digits,]digits[.fractional_digits][e[sign]exponential_digits][ws]","nodes":[{"content":"[ws][$][sign][digits,]digits[.fractional_digits][e[sign]exponential_digits][ws]","pos":[0,79]}]},{"pos":[500,583],"content":"Or, if <ph id=\"ph1\">`style`</ph> includes <ph id=\"ph2\">&lt;xref:System.Globalization.NumberStyles.AllowHexSpecifier&gt;</ph>:","source":"Or, if `style` includes <xref:System.Globalization.NumberStyles.AllowHexSpecifier>:"},{"pos":[590,607],"content":"[ws]hexdigits[ws]","nodes":[{"content":"[ws]hexdigits[ws]","pos":[0,17]}]},{"pos":[614,706],"content":"Items in square brackets ([ and ]) are optional. The following table describes each element.","nodes":[{"content":"Items in square brackets ([ and ]) are optional. The following table describes each element.","pos":[0,92],"nodes":[{"content":"Items in square brackets ([ and ]) are optional.","pos":[0,48]},{"content":"The following table describes each element.","pos":[49,92]}]}]},{"pos":[713,720],"content":"Element","nodes":[{"content":"Element","pos":[0,7]}]},{"pos":[721,732],"content":"Description","nodes":[{"content":"Description","pos":[0,11]}]},{"pos":[773,777],"content":"<bpt id=\"p1\">*</bpt>ws<ept id=\"p1\">*</ept>","source":"*ws*"},{"pos":[778,1074],"content":"Optional white space. White space can appear at the beginning of `s` if `style` includes the <xref:System.Globalization.NumberStyles?displayProperty=fullName> flag, and it can appear at the end of `s` if `style` includes the <xref:System.Globalization.NumberStyles?displayProperty=fullName> flag.","nodes":[{"content":"Optional white space.","pos":[0,21]},{"content":"White space can appear at the beginning of <ph id=\"ph1\">`s`</ph> if <ph id=\"ph2\">`style`</ph> includes the <ph id=\"ph3\">&lt;xref:System.Globalization.NumberStyles?displayProperty=fullName&gt;</ph> flag, and it can appear at the end of <ph id=\"ph4\">`s`</ph> if <ph id=\"ph5\">`style`</ph> includes the <ph id=\"ph6\">&lt;xref:System.Globalization.NumberStyles?displayProperty=fullName&gt;</ph> flag.","pos":[22,296],"source":" White space can appear at the beginning of `s` if `style` includes the <xref:System.Globalization.NumberStyles?displayProperty=fullName> flag, and it can appear at the end of `s` if `style` includes the <xref:System.Globalization.NumberStyles?displayProperty=fullName> flag."}]},{"pos":[1083,1548],"content":"A culture-specific currency symbol. Its position in the string is defined by the <xref:System.Globalization.NumberFormatInfo.CurrencyNegativePattern%2A?displayProperty=fullName> and <xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A?displayProperty=fullName> properties of the current culture. The current culture's currency symbol can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles?displayProperty=fullName> flag.","nodes":[{"content":"A culture-specific currency symbol.","pos":[0,35]},{"content":"Its position in the string is defined by the <ph id=\"ph1\">&lt;xref:System.Globalization.NumberFormatInfo.CurrencyNegativePattern%2A?displayProperty=fullName&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A?displayProperty=fullName&gt;</ph> properties of the current culture.","pos":[36,313],"source":" Its position in the string is defined by the <xref:System.Globalization.NumberFormatInfo.CurrencyNegativePattern%2A?displayProperty=fullName> and <xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A?displayProperty=fullName> properties of the current culture."},{"content":"The current culture's currency symbol can appear in <ph id=\"ph1\">`s`</ph> if <ph id=\"ph2\">`style`</ph> includes the <ph id=\"ph3\">&lt;xref:System.Globalization.NumberStyles?displayProperty=fullName&gt;</ph> flag.","pos":[314,465],"source":" The current culture's currency symbol can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles?displayProperty=fullName> flag."}]},{"pos":[1553,1559],"content":"<bpt id=\"p1\">*</bpt>sign<ept id=\"p1\">*</ept>","source":"*sign*"},{"pos":[1560,2005],"content":"An optional sign. The sign can appear at the beginning of `s` if `style` includes the <xref:System.Globalization.NumberStyles?displayProperty=fullName> flag, and it can appear at the end of `s` if `style` includes the <xref:System.Globalization.NumberStyles?displayProperty=fullName> flag. Parentheses can be used in `s` to indicate a negative value if `style` includes the <xref:System.Globalization.NumberStyles?displayProperty=fullName> flag.","nodes":[{"content":"An optional sign.","pos":[0,17]},{"content":"The sign can appear at the beginning of <ph id=\"ph1\">`s`</ph> if <ph id=\"ph2\">`style`</ph> includes the <ph id=\"ph3\">&lt;xref:System.Globalization.NumberStyles?displayProperty=fullName&gt;</ph> flag, and it can appear at the end of <ph id=\"ph4\">`s`</ph> if <ph id=\"ph5\">`style`</ph> includes the <ph id=\"ph6\">&lt;xref:System.Globalization.NumberStyles?displayProperty=fullName&gt;</ph> flag.","pos":[18,289],"source":" The sign can appear at the beginning of `s` if `style` includes the <xref:System.Globalization.NumberStyles?displayProperty=fullName> flag, and it can appear at the end of `s` if `style` includes the <xref:System.Globalization.NumberStyles?displayProperty=fullName> flag."},{"content":"Parentheses can be used in <ph id=\"ph1\">`s`</ph> to indicate a negative value if <ph id=\"ph2\">`style`</ph> includes the <ph id=\"ph3\">&lt;xref:System.Globalization.NumberStyles?displayProperty=fullName&gt;</ph> flag.","pos":[290,445],"source":" Parentheses can be used in `s` to indicate a negative value if `style` includes the <xref:System.Globalization.NumberStyles?displayProperty=fullName> flag."}]},{"pos":[2010,2083],"content":"*digits*<br /><br /> *fractional_digits*<br /><br /> *exponential_digits*","nodes":[{"content":"<bpt id=\"p1\">*</bpt>digits<ept id=\"p1\">*</ept>","pos":[0,8],"source":"*digits*"},{"content":"<bpt id=\"p1\">*</bpt>fractional_digits<ept id=\"p1\">*</ept>","pos":[21,40],"source":"*fractional_digits*"},{"content":"<bpt id=\"p1\">*</bpt>exponential_digits<ept id=\"p1\">*</ept>","pos":[53,73],"source":"*exponential_digits*"}]},{"pos":[2084,2174],"content":"A sequence of digits from 0 through 9. For *fractional_digits*, only the digit 0 is valid.","nodes":[{"content":"A sequence of digits from 0 through 9.","pos":[0,38]},{"content":"For <bpt id=\"p1\">*</bpt>fractional_digits<ept id=\"p1\">*</ept>, only the digit 0 is valid.","pos":[39,90],"source":" For *fractional_digits*, only the digit 0 is valid."}]},{"pos":[2179,2182],"content":"<bpt id=\"p1\">*</bpt>,<ept id=\"p1\">*</ept>","source":"*,*"},{"pos":[2183,2385],"content":"A culture-specific thousands separator symbol. The current culture's thousands separator can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles?displayProperty=fullName> flag.","nodes":[{"content":"A culture-specific thousands separator symbol.","pos":[0,46]},{"content":"The current culture's thousands separator can appear in <ph id=\"ph1\">`s`</ph> if <ph id=\"ph2\">`style`</ph> includes the <ph id=\"ph3\">&lt;xref:System.Globalization.NumberStyles?displayProperty=fullName&gt;</ph> flag.","pos":[47,202],"source":" The current culture's thousands separator can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles?displayProperty=fullName> flag."}]},{"pos":[2390,2393],"content":"<bpt id=\"p1\">*</bpt>.<ept id=\"p1\">*</ept>","source":"*.*"},{"pos":[2394,2772],"content":"A culture-specific decimal point symbol. The current culture's decimal point symbol can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles?displayProperty=fullName> flag. Only the digit 0 can appear as a fractional digit for the parse operation to succeed; if *fractional_digits* includes any other digit, an <xref:System.OverflowException> is thrown.","nodes":[{"content":"A culture-specific decimal point symbol.","pos":[0,40]},{"content":"The current culture's decimal point symbol can appear in <ph id=\"ph1\">`s`</ph> if <ph id=\"ph2\">`style`</ph> includes the <ph id=\"ph3\">&lt;xref:System.Globalization.NumberStyles?displayProperty=fullName&gt;</ph> flag.","pos":[41,197],"source":" The current culture's decimal point symbol can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles?displayProperty=fullName> flag."},{"content":"Only the digit 0 can appear as a fractional digit for the parse operation to succeed; if <bpt id=\"p1\">*</bpt>fractional_digits<ept id=\"p1\">*</ept> includes any other digit, an <ph id=\"ph1\">&lt;xref:System.OverflowException&gt;</ph> is thrown.","pos":[198,378],"source":" Only the digit 0 can appear as a fractional digit for the parse operation to succeed; if *fractional_digits* includes any other digit, an <xref:System.OverflowException> is thrown."}]},{"pos":[2777,2780],"content":"<bpt id=\"p1\">*</bpt>e<ept id=\"p1\">*</ept>","source":"*e*"},{"pos":[2781,3038],"content":"The 'e' or 'E' character, which indicates that the value is represented in exponential notation. The `s` parameter can represent a number in exponential notation if `style` includes the <xref:System.Globalization.NumberStyles?displayProperty=fullName> flag.","nodes":[{"content":"The 'e' or 'E' character, which indicates that the value is represented in exponential notation.","pos":[0,96]},{"content":"The <ph id=\"ph1\">`s`</ph> parameter can represent a number in exponential notation if <ph id=\"ph2\">`style`</ph> includes the <ph id=\"ph3\">&lt;xref:System.Globalization.NumberStyles?displayProperty=fullName&gt;</ph> flag.","pos":[97,257],"source":" The `s` parameter can represent a number in exponential notation if `style` includes the <xref:System.Globalization.NumberStyles?displayProperty=fullName> flag."}]},{"pos":[3043,3054],"content":"<bpt id=\"p1\">*</bpt>hexdigits<ept id=\"p1\">*</ept>","source":"*hexdigits*"},{"pos":[3055,3121],"content":"A sequence of hexadecimal digits from 0 through f, or 0 through F.","nodes":[{"content":"A sequence of hexadecimal digits from 0 through f, or 0 through F.","pos":[0,66]}]},{"pos":[3129,3579],"content":"A string with digits only (which corresponds to the <xref:System.Globalization.NumberStyles?displayProperty=fullName> style) always parses successfully. Most of the remaining <xref:System.Globalization.NumberStyles> members control elements that may be but are not required to be present in the input string. The following table indicates how individual <xref:System.Globalization.NumberStyles> members affect the elements that may be present in `s`.","nodes":[{"content":"A string with digits only (which corresponds to the <ph id=\"ph1\">&lt;xref:System.Globalization.NumberStyles?displayProperty=fullName&gt;</ph> style) always parses successfully.","pos":[0,152],"source":"A string with digits only (which corresponds to the <xref:System.Globalization.NumberStyles?displayProperty=fullName> style) always parses successfully."},{"content":"Most of the remaining <ph id=\"ph1\">&lt;xref:System.Globalization.NumberStyles&gt;</ph> members control elements that may be but are not required to be present in the input string.","pos":[153,308],"source":" Most of the remaining <xref:System.Globalization.NumberStyles> members control elements that may be but are not required to be present in the input string."},{"content":"The following table indicates how individual <ph id=\"ph1\">&lt;xref:System.Globalization.NumberStyles&gt;</ph> members affect the elements that may be present in <ph id=\"ph2\">`s`</ph>.","pos":[309,450],"source":" The following table indicates how individual <xref:System.Globalization.NumberStyles> members affect the elements that may be present in `s`."}]},{"pos":[3586,3604],"content":"NumberStyles value","nodes":[{"content":"NumberStyles value","pos":[0,18]}]},{"pos":[3605,3650],"content":"Elements permitted in s in addition to digits","nodes":[{"content":"Elements permitted in s in addition to digits","pos":[0,45]}]},{"pos":[3736,3781],"content":"<xref:System.Globalization.NumberStyles.None>","nodes":[]},{"pos":[3782,3808],"content":"The <bpt id=\"p1\">*</bpt>digits<ept id=\"p1\">*</ept> element only.","source":"The *digits* element only."},{"pos":[3813,3871],"content":"<xref:System.Globalization.NumberStyles.AllowDecimalPoint>","nodes":[]},{"pos":[3872,3931],"content":"The decimal point ( *.* ) and *fractional-digits* elements.","nodes":[{"content":"The decimal point ( <bpt id=\"p1\">*</bpt>.<ept id=\"p1\">*</ept>","pos":[0,23],"source":"The decimal point ( *.*"},{"content":") and <bpt id=\"p1\">*</bpt>fractional-digits<ept id=\"p1\">*</ept> elements.","pos":[24,59],"source":" ) and *fractional-digits* elements."}]},{"pos":[3936,3990],"content":"<xref:System.Globalization.NumberStyles.AllowExponent>","nodes":[]},{"pos":[3991,4043],"content":"The <ph id=\"ph1\">`s`</ph> parameter can also use exponential notation.","source":"The `s` parameter can also use exponential notation."},{"pos":[4048,4106],"content":"<xref:System.Globalization.NumberStyles.AllowLeadingWhite>","nodes":[]},{"pos":[4107,4148],"content":"The <bpt id=\"p1\">*</bpt>ws<ept id=\"p1\">*</ept> element at the beginning of <ph id=\"ph1\">`s`</ph>.","source":"The *ws* element at the beginning of `s`."},{"pos":[4153,4212],"content":"<xref:System.Globalization.NumberStyles.AllowTrailingWhite>","nodes":[]},{"pos":[4213,4248],"content":"The <bpt id=\"p1\">*</bpt>ws<ept id=\"p1\">*</ept> element at the end of <ph id=\"ph1\">`s`</ph>.","source":"The *ws* element at the end of `s`."},{"pos":[4253,4310],"content":"<xref:System.Globalization.NumberStyles.AllowLeadingSign>","nodes":[]},{"pos":[4311,4354],"content":"The <bpt id=\"p1\">*</bpt>sign<ept id=\"p1\">*</ept> element at the beginning of <ph id=\"ph1\">`s`</ph>.","source":"The *sign* element at the beginning of `s`."},{"pos":[4359,4417],"content":"<xref:System.Globalization.NumberStyles.AllowTrailingSign>","nodes":[]},{"pos":[4418,4455],"content":"The <bpt id=\"p1\">*</bpt>sign<ept id=\"p1\">*</ept> element at the end of <ph id=\"ph1\">`s`</ph>.","source":"The *sign* element at the end of `s`."},{"pos":[4460,4517],"content":"<xref:System.Globalization.NumberStyles.AllowParentheses>","nodes":[]},{"pos":[4518,4592],"content":"The <bpt id=\"p1\">*</bpt>sign<ept id=\"p1\">*</ept> element in the form of parentheses enclosing the numeric value.","source":"The *sign* element in the form of parentheses enclosing the numeric value."},{"pos":[4597,4652],"content":"<xref:System.Globalization.NumberStyles.AllowThousands>","nodes":[]},{"pos":[4653,4693],"content":"The thousands separator ( <bpt id=\"p1\">*</bpt>,<ept id=\"p1\">*</ept> ) element.","source":"The thousands separator ( *,* ) element."},{"pos":[4698,4758],"content":"<xref:System.Globalization.NumberStyles.AllowCurrencySymbol>","nodes":[]},{"pos":[4759,4775],"content":"The <bpt id=\"p1\">*</bpt><ph id=\"ph1\">$</ph><ept id=\"p1\">*</ept> element.","source":"The *$* element."},{"pos":[4780,4829],"content":"<xref:System.Globalization.NumberStyles.Currency>","nodes":[]},{"pos":[4830,4927],"content":"All. The `s` parameter cannot represent a hexadecimal number or a number in exponential notation.","nodes":[{"content":"All.","pos":[0,4]},{"content":"The <ph id=\"ph1\">`s`</ph> parameter cannot represent a hexadecimal number or a number in exponential notation.","pos":[5,97],"source":" The `s` parameter cannot represent a hexadecimal number or a number in exponential notation."}]},{"pos":[4932,4978],"content":"<xref:System.Globalization.NumberStyles.Float>","nodes":[]},{"pos":[4979,5150],"content":"The *ws* element at the beginning or end of `s`, *sign* at the beginning of `s`, and the decimal point ( *.* ) symbol. The `s` parameter can also use exponential notation.","nodes":[{"content":"The <bpt id=\"p1\">*</bpt>ws<ept id=\"p1\">*</ept> element at the beginning or end of <ph id=\"ph1\">`s`</ph>, <bpt id=\"p2\">*</bpt>sign<ept id=\"p2\">*</ept> at the beginning of <ph id=\"ph2\">`s`</ph>, and the decimal point ( <bpt id=\"p3\">*</bpt>.<ept id=\"p3\">*</ept>","pos":[0,108],"source":"The *ws* element at the beginning or end of `s`, *sign* at the beginning of `s`, and the decimal point ( *.*"},{"content":") symbol.","pos":[109,118]},{"content":"The <ph id=\"ph1\">`s`</ph> parameter can also use exponential notation.","pos":[119,171],"source":" The `s` parameter can also use exponential notation."}]},{"pos":[5155,5202],"content":"<xref:System.Globalization.NumberStyles.Number>","nodes":[]},{"pos":[5203,5285],"content":"The `ws`, `sign`, thousands separator ( *,* ), and decimal point ( *.* ) elements.","nodes":[{"content":"The <ph id=\"ph1\">`ws`</ph>, <ph id=\"ph2\">`sign`</ph>, thousands separator ( <bpt id=\"p1\">*</bpt>,<ept id=\"p1\">*</ept> ), and decimal point ( <bpt id=\"p2\">*</bpt>.<ept id=\"p2\">*</ept>","pos":[0,70],"source":"The `ws`, `sign`, thousands separator ( *,* ), and decimal point ( *.*"},{"content":") elements.","pos":[71,82]}]},{"pos":[5290,5334],"content":"<xref:System.Globalization.NumberStyles.Any>","nodes":[]},{"pos":[5335,5396],"content":"All styles, except <ph id=\"ph1\">`s`</ph> cannot represent a hexadecimal number.","source":"All styles, except `s` cannot represent a hexadecimal number."},{"pos":[5404,6014],"content":"If the <xref:System.Globalization.NumberStyles?displayProperty=fullName> flag is used, `s` must be a hexadecimal value without a prefix. For example, \"C9AF3\" parses successfully, but \"0xC9AF3\" does not. The only other flags that can be combined with the `s` parameter it are <xref:System.Globalization.NumberStyles?displayProperty=fullName> and <xref:System.Globalization.NumberStyles?displayProperty=fullName>. (The <xref:System.Globalization.NumberStyles> enumeration includes a composite number style, <xref:System.Globalization.NumberStyles?displayProperty=fullName>, that includes both white space flags.)","nodes":[{"content":"If the <ph id=\"ph1\">&lt;xref:System.Globalization.NumberStyles?displayProperty=fullName&gt;</ph> flag is used, <ph id=\"ph2\">`s`</ph> must be a hexadecimal value without a prefix.","pos":[0,136],"source":"If the <xref:System.Globalization.NumberStyles?displayProperty=fullName> flag is used, `s` must be a hexadecimal value without a prefix."},{"content":"For example, \"C9AF3\" parses successfully, but \"0xC9AF3\" does not.","pos":[137,202]},{"content":"The only other flags that can be combined with the <ph id=\"ph1\">`s`</ph> parameter it are <ph id=\"ph2\">&lt;xref:System.Globalization.NumberStyles?displayProperty=fullName&gt;</ph> and <ph id=\"ph3\">&lt;xref:System.Globalization.NumberStyles?displayProperty=fullName&gt;</ph>.","pos":[203,411],"source":" The only other flags that can be combined with the `s` parameter it are <xref:System.Globalization.NumberStyles?displayProperty=fullName> and <xref:System.Globalization.NumberStyles?displayProperty=fullName>."},{"content":"(The <ph id=\"ph1\">&lt;xref:System.Globalization.NumberStyles&gt;</ph> enumeration includes a composite number style, <ph id=\"ph2\">&lt;xref:System.Globalization.NumberStyles?displayProperty=fullName&gt;</ph>, that includes both white space flags.)","pos":[412,610],"source":" (The <xref:System.Globalization.NumberStyles> enumeration includes a composite number style, <xref:System.Globalization.NumberStyles?displayProperty=fullName>, that includes both white space flags.)"}]},{"pos":[6021,6425],"content":"The `s` parameter is parsed using the formatting information in a <xref:System.Globalization.NumberFormatInfo> object that is initialized for the current system culture. To specify the culture whose formatting information is used for the parse operation, call the <xref:System.Int32.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=fullName> overload.","nodes":[{"content":"The <ph id=\"ph1\">`s`</ph> parameter is parsed using the formatting information in a <ph id=\"ph2\">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object that is initialized for the current system culture.","pos":[0,169],"source":"The `s` parameter is parsed using the formatting information in a <xref:System.Globalization.NumberFormatInfo> object that is initialized for the current system culture."},{"content":"To specify the culture whose formatting information is used for the parse operation, call the <ph id=\"ph1\">&lt;xref:System.Int32.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=fullName&gt;</ph> overload.","pos":[170,404],"source":" To specify the culture whose formatting information is used for the parse operation, call the <xref:System.Int32.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=fullName> overload."}]}],"pos":[51614,58088],"yaml":true,"extradata":"MT"},{"content":"A string containing a number to convert.","nodes":[{"pos":[0,40],"content":"A string containing a number to convert.","nodes":[{"content":"A string containing a number to convert.","pos":[0,40]}]}],"pos":[58915,58956],"yaml":true},{"content":"A bitwise combination of the enumeration values that indicates the style elements that can be present in <code>s</code>. A typical value to specify is <xref href=\"System.Globalization.NumberStyles.Integer\"></xref>.","nodes":[{"pos":[0,214],"content":"A bitwise combination of the enumeration values that indicates the style elements that can be present in <code>s</code>. A typical value to specify is <xref href=\"System.Globalization.NumberStyles.Integer\"></xref>.","nodes":[{"content":"A bitwise combination of the enumeration values that indicates the style elements that can be present in <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">s</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","pos":[0,120],"source":"A bitwise combination of the enumeration values that indicates the style elements that can be present in <code>s</code>."},{"content":"A typical value to specify is <ph id=\"ph1\">&lt;xref href=\"System.Globalization.NumberStyles.Integer\"&gt;&lt;/xref&gt;</ph>.","pos":[121,214],"source":" A typical value to specify is <xref href=\"System.Globalization.NumberStyles.Integer\"></xref>."}]}],"pos":[59037,59252],"yaml":true},{"content":"A 32-bit signed integer equivalent to the number specified in <code>s</code>.","nodes":[{"pos":[0,77],"content":"A 32-bit signed integer equivalent to the number specified in <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">s</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"A 32-bit signed integer equivalent to the number specified in <code>s</code>."}],"pos":[59308,59386],"yaml":true},{"content":"<code>s</code> is `null`.","nodes":[{"pos":[0,25],"content":"<ph id=\"ph1\">&lt;code&gt;s&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>s</code> is `null`."}],"pos":[59534,59560],"yaml":true},{"content":"<code>style</code> is not a <xref href=\"System.Globalization.NumberStyles\"></xref> value.  \n  \n -or-  \n  \n <code>style</code> is not a combination of <xref href=\"System.Globalization.NumberStyles.AllowHexSpecifier\"></xref> and <xref href=\"System.Globalization.NumberStyles.HexNumber\"></xref> values.","nodes":[{"pos":[0,89],"content":"<ph id=\"ph1\">&lt;code&gt;style&lt;/code&gt;</ph> is not a <ph id=\"ph2\">&lt;xref href=\"System.Globalization.NumberStyles\"&gt;&lt;/xref&gt;</ph> value.","source":"<code>style</code> is not a <xref href=\"System.Globalization.NumberStyles\"></xref> value."},{"pos":[96,100],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[107,299],"content":"<ph id=\"ph1\">&lt;code&gt;style&lt;/code&gt;</ph> is not a combination of <ph id=\"ph2\">&lt;xref href=\"System.Globalization.NumberStyles.AllowHexSpecifier\"&gt;&lt;/xref&gt;</ph> and <ph id=\"ph3\">&lt;xref href=\"System.Globalization.NumberStyles.HexNumber\"&gt;&lt;/xref&gt;</ph> values.","source":"<code>style</code> is not a combination of <xref href=\"System.Globalization.NumberStyles.AllowHexSpecifier\"></xref> and <xref href=\"System.Globalization.NumberStyles.HexNumber\"></xref> values."}],"pos":[59654,59966],"yaml":true},{"content":"<code>s</code> is not in a format compliant with <code>style</code>.","nodes":[{"pos":[0,68],"content":"<ph id=\"ph1\">&lt;code&gt;s&lt;/code&gt;</ph> is not in a format compliant with <ph id=\"ph2\">&lt;code&gt;style&lt;/code&gt;</ph>.","source":"<code>s</code> is not in a format compliant with <code>style</code>."}],"pos":[60056,60125],"yaml":true},{"content":"<code>s</code> represents a number less than <xref href=\"System.Int32.MinValue\"></xref> or greater than <xref href=\"System.Int32.MaxValue\"></xref>.  \n  \n -or-  \n  \n <code>s</code> includes non-zero, fractional digits.","nodes":[{"pos":[0,147],"content":"<ph id=\"ph1\">&lt;code&gt;s&lt;/code&gt;</ph> represents a number less than <ph id=\"ph2\">&lt;xref href=\"System.Int32.MinValue\"&gt;&lt;/xref&gt;</ph> or greater than <ph id=\"ph3\">&lt;xref href=\"System.Int32.MaxValue\"&gt;&lt;/xref&gt;</ph>.","source":"<code>s</code> represents a number less than <xref href=\"System.Int32.MinValue\"></xref> or greater than <xref href=\"System.Int32.MaxValue\"></xref>."},{"pos":[154,158],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[165,217],"content":"<ph id=\"ph1\">&lt;code&gt;s&lt;/code&gt;</ph> includes non-zero, fractional digits.","source":"<code>s</code> includes non-zero, fractional digits."}],"pos":[60219,60447],"yaml":true},{"content":"Converts the numeric value of this instance to its equivalent string representation.","nodes":[{"pos":[0,84],"content":"Converts the numeric value of this instance to its equivalent string representation.","nodes":[{"content":"Converts the numeric value of this instance to its equivalent string representation.","pos":[0,84]}]}],"pos":[61813,61898],"yaml":true},{"content":"The <xref:System.Int32.ToString> method formats an <xref:System.Int32> value in the default (\"G\", or general) format by using the <xref:System.Globalization.NumberFormatInfo> object of the current culture. If you want to specify a different format or culture, use the other overloads of the <xref:System.Int32.ToString%2A> method, as follows:  \n  \n|To use format|For culture|Use the overload|  \n|-------------------|-----------------|----------------------|  \n|Default (\"G\") format|A specific culture|<xref:System.Int32.ToString%28System.IFormatProvider%29>|  \n|A specific format|Default (current) culture|<xref:System.Int32.ToString%28System.String%29>|  \n|A specific format|A specific culture|<xref:System.Int32.ToString%28System.String%2CSystem.IFormatProvider%29>|  \n  \n The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics:  \n  \n-   For more information about numeric format specifiers, see [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) and [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md).  \n  \n-   For more information about formatting, see [Formatting Types](~/docs/standard/base-types/formatting-types.md).","nodes":[{"pos":[0,342],"content":"The <xref:System.Int32.ToString> method formats an <xref:System.Int32> value in the default (\"G\", or general) format by using the <xref:System.Globalization.NumberFormatInfo> object of the current culture. If you want to specify a different format or culture, use the other overloads of the <xref:System.Int32.ToString%2A> method, as follows:","nodes":[{"content":"The <xref:System.Int32.ToString> method formats an <xref:System.Int32> value in the default (\"G\", or general) format by using the <xref:System.Globalization.NumberFormatInfo> object of the current culture. If you want to specify a different format or culture, use the other overloads of the <xref:System.Int32.ToString%2A> method, as follows:","pos":[0,342],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Int32.ToString&gt;</ph> method formats an <ph id=\"ph2\">&lt;xref:System.Int32&gt;</ph> value in the default (\"G\", or general) format by using the <ph id=\"ph3\">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object of the current culture.","pos":[0,205],"source":"The <xref:System.Int32.ToString> method formats an <xref:System.Int32> value in the default (\"G\", or general) format by using the <xref:System.Globalization.NumberFormatInfo> object of the current culture."},{"content":"If you want to specify a different format or culture, use the other overloads of the <ph id=\"ph1\">&lt;xref:System.Int32.ToString%2A&gt;</ph> method, as follows:","pos":[206,342],"source":" If you want to specify a different format or culture, use the other overloads of the <xref:System.Int32.ToString%2A> method, as follows:"}]}]},{"pos":[349,362],"content":"To use format","nodes":[{"content":"To use format","pos":[0,13]}]},{"pos":[363,374],"content":"For culture","nodes":[{"content":"For culture","pos":[0,11]}]},{"pos":[375,391],"content":"Use the overload","nodes":[{"content":"Use the overload","pos":[0,16]}]},{"pos":[461,481],"content":"Default (\"G\") format","nodes":[{"content":"Default (\"G\") format","pos":[0,20]}]},{"pos":[482,500],"content":"A specific culture","nodes":[{"content":"A specific culture","pos":[0,18]}]},{"pos":[501,557],"content":"<xref:System.Int32.ToString%28System.IFormatProvider%29>","nodes":[]},{"pos":[562,579],"content":"A specific format","nodes":[{"content":"A specific format","pos":[0,17]}]},{"pos":[580,605],"content":"Default (current) culture","nodes":[{"content":"Default (current) culture","pos":[0,25]}]},{"pos":[606,653],"content":"<xref:System.Int32.ToString%28System.String%29>","nodes":[]},{"pos":[658,675],"content":"A specific format","nodes":[{"content":"A specific format","pos":[0,17]}]},{"pos":[676,694],"content":"A specific culture","nodes":[{"content":"A specific culture","pos":[0,18]}]},{"pos":[695,767],"content":"<xref:System.Int32.ToString%28System.String%2CSystem.IFormatProvider%29>","nodes":[]},{"pos":[775,905],"content":"The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics:","nodes":[{"content":"The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics:","pos":[0,130]}]},{"pos":[915,1167],"content":"For more information about numeric format specifiers, see <bpt id=\"p1\">[</bpt>Standard Numeric Format Strings<ept id=\"p1\">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept> and <bpt id=\"p2\">[</bpt>Custom Numeric Format Strings<ept id=\"p2\">](~/docs/standard/base-types/custom-numeric-format-strings.md)</ept>.","source":"For more information about numeric format specifiers, see [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) and [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md)."},{"pos":[1177,1287],"content":"For more information about formatting, see <bpt id=\"p1\">[</bpt>Formatting Types<ept id=\"p1\">](~/docs/standard/base-types/formatting-types.md)</ept>.","source":"For more information about formatting, see [Formatting Types](~/docs/standard/base-types/formatting-types.md)."}],"pos":[61909,63215],"yaml":true,"extradata":"MT"},{"content":"The string representation of the value of this instance, consisting of a negative sign if the value is negative, and a sequence of digits ranging from 0 to 9 with no leading zeroes.","nodes":[{"pos":[0,181],"content":"The string representation of the value of this instance, consisting of a negative sign if the value is negative, and a sequence of digits ranging from 0 to 9 with no leading zeroes.","nodes":[{"content":"The string representation of the value of this instance, consisting of a negative sign if the value is negative, and a sequence of digits ranging from 0 to 9 with no leading zeroes.","pos":[0,181]}]}],"pos":[64102,64284],"yaml":true},{"content":"Converts the numeric value of this instance to its equivalent string representation using the specified format and culture-specific format information.","nodes":[{"pos":[0,151],"content":"Converts the numeric value of this instance to its equivalent string representation using the specified format and culture-specific format information.","nodes":[{"content":"Converts the numeric value of this instance to its equivalent string representation using the specified format and culture-specific format information.","pos":[0,151]}]}],"pos":[65902,66054],"yaml":true},{"content":"The <xref:System.Int32.ToString%28System.String%2CSystem.IFormatProvider%29> method formats an <xref:System.Int32> value in a specified format by using the <xref:System.Globalization.NumberFormatInfo> object of a specified culture. If you want to use default format or culture settings, use the other overloads of the <xref:System.Int32.ToString%2A> method, as follows:  \n  \n|To use format|For culture|Use the overload|  \n|-------------------|-----------------|----------------------|  \n|Default (\"G\") format|Default (current) culture|<xref:System.Int32.ToString>|  \n|Default (\"G\") format|A specific culture|<xref:System.Int32.ToString%28System.IFormatProvider%29>|  \n|A specific format|Default (current) culture|<xref:System.Int32.ToString%28System.String%29>|  \n  \n The `format` parameter can be either a standard or a custom numeric format string. All standard numeric format strings other than \"R\" (or \"r\") are supported, as are all custom numeric format characters. If `format` is `null` or an empty string (\"\"), the return value for this instance is formatted with the general numeric format specifier (\"G\").  \n  \n The `provider` parameter is an object that implements the <xref:System.IFormatProvider> interface. Its <xref:System.IFormatProvider.GetFormat%2A> method returns a <xref:System.Globalization.NumberFormatInfo> object that provides culture-specific format information about the format of the string that is returned by this method. The object that implements <xref:System.IFormatProvider> can be any of the following:  \n  \n-   A <xref:System.Globalization.CultureInfo> object that represents the culture whose formatting rules are to be used.  \n  \n-   A <xref:System.Globalization.NumberFormatInfo> object that contains specific numeric formatting information for this value.  \n  \n-   A custom object that implements <xref:System.IFormatProvider> and whose <xref:System.IFormatProvider.GetFormat%2A> method returns a <xref:System.Globalization.NumberFormatInfo> object that provides formatting information.  \n  \n If `provider` is `null` or a <xref:System.Globalization.NumberFormatInfo> object cannot be obtained from `provider`, the return value for this instance is formatted with the <xref:System.Globalization.NumberFormatInfo> for the current culture.  \n  \n The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics:  \n  \n-   For more information about numeric format specifiers, see [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) and [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md).  \n  \n-   For more information about formatting, see [Formatting Types](~/docs/standard/base-types/formatting-types.md).","nodes":[{"pos":[0,369],"content":"The <xref:System.Int32.ToString%28System.String%2CSystem.IFormatProvider%29> method formats an <xref:System.Int32> value in a specified format by using the <xref:System.Globalization.NumberFormatInfo> object of a specified culture. If you want to use default format or culture settings, use the other overloads of the <xref:System.Int32.ToString%2A> method, as follows:","nodes":[{"content":"The <xref:System.Int32.ToString%28System.String%2CSystem.IFormatProvider%29> method formats an <xref:System.Int32> value in a specified format by using the <xref:System.Globalization.NumberFormatInfo> object of a specified culture. If you want to use default format or culture settings, use the other overloads of the <xref:System.Int32.ToString%2A> method, as follows:","pos":[0,369],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Int32.ToString%28System.String%2CSystem.IFormatProvider%29&gt;</ph> method formats an <ph id=\"ph2\">&lt;xref:System.Int32&gt;</ph> value in a specified format by using the <ph id=\"ph3\">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object of a specified culture.","pos":[0,231],"source":"The <xref:System.Int32.ToString%28System.String%2CSystem.IFormatProvider%29> method formats an <xref:System.Int32> value in a specified format by using the <xref:System.Globalization.NumberFormatInfo> object of a specified culture."},{"content":"If you want to use default format or culture settings, use the other overloads of the <ph id=\"ph1\">&lt;xref:System.Int32.ToString%2A&gt;</ph> method, as follows:","pos":[232,369],"source":" If you want to use default format or culture settings, use the other overloads of the <xref:System.Int32.ToString%2A> method, as follows:"}]}]},{"pos":[376,389],"content":"To use format","nodes":[{"content":"To use format","pos":[0,13]}]},{"pos":[390,401],"content":"For culture","nodes":[{"content":"For culture","pos":[0,11]}]},{"pos":[402,418],"content":"Use the overload","nodes":[{"content":"Use the overload","pos":[0,16]}]},{"pos":[488,508],"content":"Default (\"G\") format","nodes":[{"content":"Default (\"G\") format","pos":[0,20]}]},{"pos":[509,534],"content":"Default (current) culture","nodes":[{"content":"Default (current) culture","pos":[0,25]}]},{"pos":[535,563],"content":"<xref:System.Int32.ToString>","nodes":[]},{"pos":[568,588],"content":"Default (\"G\") format","nodes":[{"content":"Default (\"G\") format","pos":[0,20]}]},{"pos":[589,607],"content":"A specific culture","nodes":[{"content":"A specific culture","pos":[0,18]}]},{"pos":[608,664],"content":"<xref:System.Int32.ToString%28System.IFormatProvider%29>","nodes":[]},{"pos":[669,686],"content":"A specific format","nodes":[{"content":"A specific format","pos":[0,17]}]},{"pos":[687,712],"content":"Default (current) culture","nodes":[{"content":"Default (current) culture","pos":[0,25]}]},{"pos":[713,760],"content":"<xref:System.Int32.ToString%28System.String%29>","nodes":[]},{"pos":[768,1114],"content":"The `format` parameter can be either a standard or a custom numeric format string. All standard numeric format strings other than \"R\" (or \"r\") are supported, as are all custom numeric format characters. If `format` is `null` or an empty string (\"\"), the return value for this instance is formatted with the general numeric format specifier (\"G\").","nodes":[{"content":"The <ph id=\"ph1\">`format`</ph> parameter can be either a standard or a custom numeric format string.","pos":[0,82],"source":"The `format` parameter can be either a standard or a custom numeric format string."},{"content":"All standard numeric format strings other than \"R\" (or \"r\") are supported, as are all custom numeric format characters.","pos":[83,202]},{"content":"If <ph id=\"ph1\">`format`</ph> is <ph id=\"ph2\">`null`</ph> or an empty string (\"\"), the return value for this instance is formatted with the general numeric format specifier (\"G\").","pos":[203,346],"source":" If `format` is `null` or an empty string (\"\"), the return value for this instance is formatted with the general numeric format specifier (\"G\")."}]},{"pos":[1121,1535],"content":"The `provider` parameter is an object that implements the <xref:System.IFormatProvider> interface. Its <xref:System.IFormatProvider.GetFormat%2A> method returns a <xref:System.Globalization.NumberFormatInfo> object that provides culture-specific format information about the format of the string that is returned by this method. The object that implements <xref:System.IFormatProvider> can be any of the following:","nodes":[{"content":"The <ph id=\"ph1\">`provider`</ph> parameter is an object that implements the <ph id=\"ph2\">&lt;xref:System.IFormatProvider&gt;</ph> interface.","pos":[0,98],"source":"The `provider` parameter is an object that implements the <xref:System.IFormatProvider> interface."},{"content":"Its <ph id=\"ph1\">&lt;xref:System.IFormatProvider.GetFormat%2A&gt;</ph> method returns a <ph id=\"ph2\">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object that provides culture-specific format information about the format of the string that is returned by this method.","pos":[99,328],"source":" Its <xref:System.IFormatProvider.GetFormat%2A> method returns a <xref:System.Globalization.NumberFormatInfo> object that provides culture-specific format information about the format of the string that is returned by this method."},{"content":"The object that implements <ph id=\"ph1\">&lt;xref:System.IFormatProvider&gt;</ph> can be any of the following:","pos":[329,414],"source":" The object that implements <xref:System.IFormatProvider> can be any of the following:"}]},{"pos":[1545,1660],"content":"A <xref:System.Globalization.CultureInfo> object that represents the culture whose formatting rules are to be used.","nodes":[{"content":"A <ph id=\"ph1\">&lt;xref:System.Globalization.CultureInfo&gt;</ph> object that represents the culture whose formatting rules are to be used.","pos":[0,115],"source":"A <xref:System.Globalization.CultureInfo> object that represents the culture whose formatting rules are to be used."}]},{"pos":[1670,1793],"content":"A <xref:System.Globalization.NumberFormatInfo> object that contains specific numeric formatting information for this value.","nodes":[{"content":"A <ph id=\"ph1\">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object that contains specific numeric formatting information for this value.","pos":[0,123],"source":"A <xref:System.Globalization.NumberFormatInfo> object that contains specific numeric formatting information for this value."}]},{"pos":[1803,2024],"content":"A custom object that implements <xref:System.IFormatProvider> and whose <xref:System.IFormatProvider.GetFormat%2A> method returns a <xref:System.Globalization.NumberFormatInfo> object that provides formatting information.","nodes":[{"content":"A custom object that implements <ph id=\"ph1\">&lt;xref:System.IFormatProvider&gt;</ph> and whose <ph id=\"ph2\">&lt;xref:System.IFormatProvider.GetFormat%2A&gt;</ph> method returns a <ph id=\"ph3\">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object that provides formatting information.","pos":[0,221],"source":"A custom object that implements <xref:System.IFormatProvider> and whose <xref:System.IFormatProvider.GetFormat%2A> method returns a <xref:System.Globalization.NumberFormatInfo> object that provides formatting information."}]},{"pos":[2031,2274],"content":"If <ph id=\"ph1\">`provider`</ph> is <ph id=\"ph2\">`null`</ph> or a <ph id=\"ph3\">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object cannot be obtained from <ph id=\"ph4\">`provider`</ph>, the return value for this instance is formatted with the <ph id=\"ph5\">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> for the current culture.","source":"If `provider` is `null` or a <xref:System.Globalization.NumberFormatInfo> object cannot be obtained from `provider`, the return value for this instance is formatted with the <xref:System.Globalization.NumberFormatInfo> for the current culture."},{"pos":[2281,2411],"content":"The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics:","nodes":[{"content":"The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics:","pos":[0,130]}]},{"pos":[2421,2673],"content":"For more information about numeric format specifiers, see <bpt id=\"p1\">[</bpt>Standard Numeric Format Strings<ept id=\"p1\">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept> and <bpt id=\"p2\">[</bpt>Custom Numeric Format Strings<ept id=\"p2\">](~/docs/standard/base-types/custom-numeric-format-strings.md)</ept>.","source":"For more information about numeric format specifiers, see [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) and [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md)."},{"pos":[2683,2793],"content":"For more information about formatting, see <bpt id=\"p1\">[</bpt>Formatting Types<ept id=\"p1\">](~/docs/standard/base-types/formatting-types.md)</ept>.","source":"For more information about formatting, see [Formatting Types](~/docs/standard/base-types/formatting-types.md)."}],"pos":[66065,68897],"yaml":true,"extradata":"MT"},{"content":"A standard or custom numeric format string.","nodes":[{"pos":[0,43],"content":"A standard or custom numeric format string.","nodes":[{"content":"A standard or custom numeric format string.","pos":[0,43]}]}],"pos":[69634,69678],"yaml":true},{"content":"An object that supplies culture-specific formatting information.","nodes":[{"pos":[0,64],"content":"An object that supplies culture-specific formatting information.","nodes":[{"content":"An object that supplies culture-specific formatting information.","pos":[0,64]}]}],"pos":[69751,69816],"yaml":true},{"content":"The string representation of the value of this instance as specified by <code>format</code> and <code>provider</code>.","nodes":[{"pos":[0,118],"content":"The string representation of the value of this instance as specified by <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">format</ph><ept id=\"p1\">&lt;/code&gt;</ept> and <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">provider</ph><ept id=\"p2\">&lt;/code&gt;</ept>.","source":"The string representation of the value of this instance as specified by <code>format</code> and <code>provider</code>."}],"pos":[69873,69992],"yaml":true},{"content":"<code>format</code> is invalid or not supported.","nodes":[{"pos":[0,48],"content":"<ph id=\"ph1\">&lt;code&gt;format&lt;/code&gt;</ph> is invalid or not supported.","source":"<code>format</code> is invalid or not supported."}],"pos":[70131,70180],"yaml":true},{"content":"Converts the numeric value of this instance to its equivalent string representation, using the specified format.","nodes":[{"pos":[0,112],"content":"Converts the numeric value of this instance to its equivalent string representation, using the specified format.","nodes":[{"content":"Converts the numeric value of this instance to its equivalent string representation, using the specified format.","pos":[0,112]}]}],"pos":[71626,71739],"yaml":true},{"content":"The <xref:System.Int32.ToString%28System.String%29> method formats an <xref:System.Int32> value in a specified format by using a <xref:System.Globalization.NumberFormatInfo> object that represents the conventions of the current culture. If you want to use the default (\"G\", or general) format or specify a different culture, use the other overloads of the <xref:System.Int32.ToString%2A> method, as follows:  \n  \n|To use format|For culture|Use the overload|  \n|-------------------|-----------------|----------------------|  \n|Default (\"G\") format|Default (current) culture|<xref:System.Int32.ToString>|  \n|Default (\"G\") format|A specific culture|<xref:System.Int32.ToString%28System.IFormatProvider%29>|  \n|A specific format|A specific culture|<xref:System.Int32.ToString%28System.String%2CSystem.IFormatProvider%29>|  \n  \n The `format` parameter can be any valid standard numeric format specifier except for \"R\", as well as any combination of custom numeric format specifiers. If `format` is `null` or an empty string (\"\"), the return value of this instance is formatted with the general numeric format specifier (\"G\").  \n  \n The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics:  \n  \n-   For more information about numeric format specifiers, see [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) and [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md).  \n  \n-   For more information about formatting, see [Formatting Types](~/docs/standard/base-types/formatting-types.md).  \n  \n The return value of this instance is formatted with the <xref:System.Globalization.NumberFormatInfo> for the current culture.","nodes":[{"pos":[0,407],"content":"The <xref:System.Int32.ToString%28System.String%29> method formats an <xref:System.Int32> value in a specified format by using a <xref:System.Globalization.NumberFormatInfo> object that represents the conventions of the current culture. If you want to use the default (\"G\", or general) format or specify a different culture, use the other overloads of the <xref:System.Int32.ToString%2A> method, as follows:","nodes":[{"content":"The <xref:System.Int32.ToString%28System.String%29> method formats an <xref:System.Int32> value in a specified format by using a <xref:System.Globalization.NumberFormatInfo> object that represents the conventions of the current culture. If you want to use the default (\"G\", or general) format or specify a different culture, use the other overloads of the <xref:System.Int32.ToString%2A> method, as follows:","pos":[0,407],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Int32.ToString%28System.String%29&gt;</ph> method formats an <ph id=\"ph2\">&lt;xref:System.Int32&gt;</ph> value in a specified format by using a <ph id=\"ph3\">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object that represents the conventions of the current culture.","pos":[0,236],"source":"The <xref:System.Int32.ToString%28System.String%29> method formats an <xref:System.Int32> value in a specified format by using a <xref:System.Globalization.NumberFormatInfo> object that represents the conventions of the current culture."},{"content":"If you want to use the default (\"G\", or general) format or specify a different culture, use the other overloads of the <ph id=\"ph1\">&lt;xref:System.Int32.ToString%2A&gt;</ph> method, as follows:","pos":[237,407],"source":" If you want to use the default (\"G\", or general) format or specify a different culture, use the other overloads of the <xref:System.Int32.ToString%2A> method, as follows:"}]}]},{"pos":[414,427],"content":"To use format","nodes":[{"content":"To use format","pos":[0,13]}]},{"pos":[428,439],"content":"For culture","nodes":[{"content":"For culture","pos":[0,11]}]},{"pos":[440,456],"content":"Use the overload","nodes":[{"content":"Use the overload","pos":[0,16]}]},{"pos":[526,546],"content":"Default (\"G\") format","nodes":[{"content":"Default (\"G\") format","pos":[0,20]}]},{"pos":[547,572],"content":"Default (current) culture","nodes":[{"content":"Default (current) culture","pos":[0,25]}]},{"pos":[573,601],"content":"<xref:System.Int32.ToString>","nodes":[]},{"pos":[606,626],"content":"Default (\"G\") format","nodes":[{"content":"Default (\"G\") format","pos":[0,20]}]},{"pos":[627,645],"content":"A specific culture","nodes":[{"content":"A specific culture","pos":[0,18]}]},{"pos":[646,702],"content":"<xref:System.Int32.ToString%28System.IFormatProvider%29>","nodes":[]},{"pos":[707,724],"content":"A specific format","nodes":[{"content":"A specific format","pos":[0,17]}]},{"pos":[725,743],"content":"A specific culture","nodes":[{"content":"A specific culture","pos":[0,18]}]},{"pos":[744,816],"content":"<xref:System.Int32.ToString%28System.String%2CSystem.IFormatProvider%29>","nodes":[]},{"pos":[824,1120],"content":"The `format` parameter can be any valid standard numeric format specifier except for \"R\", as well as any combination of custom numeric format specifiers. If `format` is `null` or an empty string (\"\"), the return value of this instance is formatted with the general numeric format specifier (\"G\").","nodes":[{"content":"The <ph id=\"ph1\">`format`</ph> parameter can be any valid standard numeric format specifier except for \"R\", as well as any combination of custom numeric format specifiers.","pos":[0,153],"source":"The `format` parameter can be any valid standard numeric format specifier except for \"R\", as well as any combination of custom numeric format specifiers."},{"content":"If <ph id=\"ph1\">`format`</ph> is <ph id=\"ph2\">`null`</ph> or an empty string (\"\"), the return value of this instance is formatted with the general numeric format specifier (\"G\").","pos":[154,296],"source":" If `format` is `null` or an empty string (\"\"), the return value of this instance is formatted with the general numeric format specifier (\"G\")."}]},{"pos":[1127,1257],"content":"The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics:","nodes":[{"content":"The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics:","pos":[0,130]}]},{"pos":[1267,1519],"content":"For more information about numeric format specifiers, see <bpt id=\"p1\">[</bpt>Standard Numeric Format Strings<ept id=\"p1\">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept> and <bpt id=\"p2\">[</bpt>Custom Numeric Format Strings<ept id=\"p2\">](~/docs/standard/base-types/custom-numeric-format-strings.md)</ept>.","source":"For more information about numeric format specifiers, see [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) and [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md)."},{"pos":[1529,1639],"content":"For more information about formatting, see <bpt id=\"p1\">[</bpt>Formatting Types<ept id=\"p1\">](~/docs/standard/base-types/formatting-types.md)</ept>.","source":"For more information about formatting, see [Formatting Types](~/docs/standard/base-types/formatting-types.md)."},{"pos":[1646,1771],"content":"The return value of this instance is formatted with the <xref:System.Globalization.NumberFormatInfo> for the current culture.","nodes":[{"content":"The return value of this instance is formatted with the <ph id=\"ph1\">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> for the current culture.","pos":[0,125],"source":"The return value of this instance is formatted with the <xref:System.Globalization.NumberFormatInfo> for the current culture."}]}],"pos":[71750,73552],"yaml":true,"extradata":"MT"},{"content":"A standard or custom numeric format string.","nodes":[{"pos":[0,43],"content":"A standard or custom numeric format string.","nodes":[{"content":"A standard or custom numeric format string.","pos":[0,43]}]}],"pos":[74391,74435],"yaml":true},{"content":"The string representation of the value of this instance as specified by <code>format</code>.","nodes":[{"pos":[0,92],"content":"The string representation of the value of this instance as specified by <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">format</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"The string representation of the value of this instance as specified by <code>format</code>."}],"pos":[74492,74585],"yaml":true},{"content":"<code>format</code> is invalid or not supported.","nodes":[{"pos":[0,48],"content":"<ph id=\"ph1\">&lt;code&gt;format&lt;/code&gt;</ph> is invalid or not supported.","source":"<code>format</code> is invalid or not supported."}],"pos":[74724,74773],"yaml":true},{"content":"Converts the numeric value of this instance to its equivalent string representation using the specified culture-specific format information.","nodes":[{"pos":[0,140],"content":"Converts the numeric value of this instance to its equivalent string representation using the specified culture-specific format information.","nodes":[{"content":"Converts the numeric value of this instance to its equivalent string representation using the specified culture-specific format information.","pos":[0,140]}]}],"pos":[76273,76414],"yaml":true},{"content":"The <xref:System.Int32.ToString%28System.IFormatProvider%29> method formats an <xref:System.Int32> value in the default (\"G\", or general) format by using the <xref:System.Globalization.NumberFormatInfo> object of a specified culture. If you want to specify a different format or the current culture, use the other overloads of the <xref:System.Int32.ToString%2A> method, as follows:  \n  \n|To use format|For culture|Use the overload|  \n|-------------------|-----------------|----------------------|  \n|Default (\"G\") format|Default (current) culture|<xref:System.Int32.ToString>|  \n|A specific format|Default (current) culture|<xref:System.Int32.ToString%28System.String%29>|  \n|A specific format|A specific culture|<xref:System.Int32.ToString%28System.String%2CSystem.IFormatProvider%29>|  \n  \n The `provider` parameter is an object that implements the <xref:System.IFormatProvider> interface. Its <xref:System.IFormatProvider.GetFormat%2A> method returns a <xref:System.Globalization.NumberFormatInfo> object that provides culture-specific information about the format of the string that is returned by this method. The object that implements <xref:System.IFormatProvider> can be any of the following:  \n  \n-   A <xref:System.Globalization.CultureInfo> object that represents the culture whose formatting rules are to be used.  \n  \n-   A <xref:System.Globalization.NumberFormatInfo> object that contains specific numeric formatting information for this value.  \n  \n-   A custom object that implements <xref:System.IFormatProvider> and whose <xref:System.IFormatProvider.GetFormat%2A> method returns a <xref:System.Globalization.NumberFormatInfo> object that provides formatting information.  \n  \n If `provider` is `null` or a <xref:System.Globalization.NumberFormatInfo> object cannot be obtained from `provider`, the return value is formatted using the <xref:System.Globalization.NumberFormatInfo> object for the thread current culture. For information about the thread current culture, see <xref:System.Threading.Thread.CurrentCulture%2A?displayProperty=fullName>.  \n  \n The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics:  \n  \n-   For more information about numeric format specifiers, see [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) and [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md).  \n  \n-   For more information about formatting, see [Formatting Types](~/docs/standard/base-types/formatting-types.md).","nodes":[{"pos":[0,382],"content":"The <xref:System.Int32.ToString%28System.IFormatProvider%29> method formats an <xref:System.Int32> value in the default (\"G\", or general) format by using the <xref:System.Globalization.NumberFormatInfo> object of a specified culture. If you want to specify a different format or the current culture, use the other overloads of the <xref:System.Int32.ToString%2A> method, as follows:","nodes":[{"content":"The <xref:System.Int32.ToString%28System.IFormatProvider%29> method formats an <xref:System.Int32> value in the default (\"G\", or general) format by using the <xref:System.Globalization.NumberFormatInfo> object of a specified culture. If you want to specify a different format or the current culture, use the other overloads of the <xref:System.Int32.ToString%2A> method, as follows:","pos":[0,382],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Int32.ToString%28System.IFormatProvider%29&gt;</ph> method formats an <ph id=\"ph2\">&lt;xref:System.Int32&gt;</ph> value in the default (\"G\", or general) format by using the <ph id=\"ph3\">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object of a specified culture.","pos":[0,233],"source":"The <xref:System.Int32.ToString%28System.IFormatProvider%29> method formats an <xref:System.Int32> value in the default (\"G\", or general) format by using the <xref:System.Globalization.NumberFormatInfo> object of a specified culture."},{"content":"If you want to specify a different format or the current culture, use the other overloads of the <ph id=\"ph1\">&lt;xref:System.Int32.ToString%2A&gt;</ph> method, as follows:","pos":[234,382],"source":" If you want to specify a different format or the current culture, use the other overloads of the <xref:System.Int32.ToString%2A> method, as follows:"}]}]},{"pos":[389,402],"content":"To use format","nodes":[{"content":"To use format","pos":[0,13]}]},{"pos":[403,414],"content":"For culture","nodes":[{"content":"For culture","pos":[0,11]}]},{"pos":[415,431],"content":"Use the overload","nodes":[{"content":"Use the overload","pos":[0,16]}]},{"pos":[501,521],"content":"Default (\"G\") format","nodes":[{"content":"Default (\"G\") format","pos":[0,20]}]},{"pos":[522,547],"content":"Default (current) culture","nodes":[{"content":"Default (current) culture","pos":[0,25]}]},{"pos":[548,576],"content":"<xref:System.Int32.ToString>","nodes":[]},{"pos":[581,598],"content":"A specific format","nodes":[{"content":"A specific format","pos":[0,17]}]},{"pos":[599,624],"content":"Default (current) culture","nodes":[{"content":"Default (current) culture","pos":[0,25]}]},{"pos":[625,672],"content":"<xref:System.Int32.ToString%28System.String%29>","nodes":[]},{"pos":[677,694],"content":"A specific format","nodes":[{"content":"A specific format","pos":[0,17]}]},{"pos":[695,713],"content":"A specific culture","nodes":[{"content":"A specific culture","pos":[0,18]}]},{"pos":[714,786],"content":"<xref:System.Int32.ToString%28System.String%2CSystem.IFormatProvider%29>","nodes":[]},{"pos":[794,1201],"content":"The `provider` parameter is an object that implements the <xref:System.IFormatProvider> interface. Its <xref:System.IFormatProvider.GetFormat%2A> method returns a <xref:System.Globalization.NumberFormatInfo> object that provides culture-specific information about the format of the string that is returned by this method. The object that implements <xref:System.IFormatProvider> can be any of the following:","nodes":[{"content":"The <ph id=\"ph1\">`provider`</ph> parameter is an object that implements the <ph id=\"ph2\">&lt;xref:System.IFormatProvider&gt;</ph> interface.","pos":[0,98],"source":"The `provider` parameter is an object that implements the <xref:System.IFormatProvider> interface."},{"content":"Its <ph id=\"ph1\">&lt;xref:System.IFormatProvider.GetFormat%2A&gt;</ph> method returns a <ph id=\"ph2\">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object that provides culture-specific information about the format of the string that is returned by this method.","pos":[99,321],"source":" Its <xref:System.IFormatProvider.GetFormat%2A> method returns a <xref:System.Globalization.NumberFormatInfo> object that provides culture-specific information about the format of the string that is returned by this method."},{"content":"The object that implements <ph id=\"ph1\">&lt;xref:System.IFormatProvider&gt;</ph> can be any of the following:","pos":[322,407],"source":" The object that implements <xref:System.IFormatProvider> can be any of the following:"}]},{"pos":[1211,1326],"content":"A <xref:System.Globalization.CultureInfo> object that represents the culture whose formatting rules are to be used.","nodes":[{"content":"A <ph id=\"ph1\">&lt;xref:System.Globalization.CultureInfo&gt;</ph> object that represents the culture whose formatting rules are to be used.","pos":[0,115],"source":"A <xref:System.Globalization.CultureInfo> object that represents the culture whose formatting rules are to be used."}]},{"pos":[1336,1459],"content":"A <xref:System.Globalization.NumberFormatInfo> object that contains specific numeric formatting information for this value.","nodes":[{"content":"A <ph id=\"ph1\">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object that contains specific numeric formatting information for this value.","pos":[0,123],"source":"A <xref:System.Globalization.NumberFormatInfo> object that contains specific numeric formatting information for this value."}]},{"pos":[1469,1690],"content":"A custom object that implements <xref:System.IFormatProvider> and whose <xref:System.IFormatProvider.GetFormat%2A> method returns a <xref:System.Globalization.NumberFormatInfo> object that provides formatting information.","nodes":[{"content":"A custom object that implements <ph id=\"ph1\">&lt;xref:System.IFormatProvider&gt;</ph> and whose <ph id=\"ph2\">&lt;xref:System.IFormatProvider.GetFormat%2A&gt;</ph> method returns a <ph id=\"ph3\">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object that provides formatting information.","pos":[0,221],"source":"A custom object that implements <xref:System.IFormatProvider> and whose <xref:System.IFormatProvider.GetFormat%2A> method returns a <xref:System.Globalization.NumberFormatInfo> object that provides formatting information."}]},{"pos":[1697,2066],"content":"If `provider` is `null` or a <xref:System.Globalization.NumberFormatInfo> object cannot be obtained from `provider`, the return value is formatted using the <xref:System.Globalization.NumberFormatInfo> object for the thread current culture. For information about the thread current culture, see <xref:System.Threading.Thread.CurrentCulture%2A?displayProperty=fullName>.","nodes":[{"content":"If <ph id=\"ph1\">`provider`</ph> is <ph id=\"ph2\">`null`</ph> or a <ph id=\"ph3\">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object cannot be obtained from <ph id=\"ph4\">`provider`</ph>, the return value is formatted using the <ph id=\"ph5\">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object for the thread current culture.","pos":[0,240],"source":"If `provider` is `null` or a <xref:System.Globalization.NumberFormatInfo> object cannot be obtained from `provider`, the return value is formatted using the <xref:System.Globalization.NumberFormatInfo> object for the thread current culture."},{"content":"For information about the thread current culture, see <ph id=\"ph1\">&lt;xref:System.Threading.Thread.CurrentCulture%2A?displayProperty=fullName&gt;</ph>.","pos":[241,369],"source":" For information about the thread current culture, see <xref:System.Threading.Thread.CurrentCulture%2A?displayProperty=fullName>."}]},{"pos":[2073,2203],"content":"The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics:","nodes":[{"content":"The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics:","pos":[0,130]}]},{"pos":[2213,2465],"content":"For more information about numeric format specifiers, see <bpt id=\"p1\">[</bpt>Standard Numeric Format Strings<ept id=\"p1\">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept> and <bpt id=\"p2\">[</bpt>Custom Numeric Format Strings<ept id=\"p2\">](~/docs/standard/base-types/custom-numeric-format-strings.md)</ept>.","source":"For more information about numeric format specifiers, see [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) and [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md)."},{"pos":[2475,2585],"content":"For more information about formatting, see <bpt id=\"p1\">[</bpt>Formatting Types<ept id=\"p1\">](~/docs/standard/base-types/formatting-types.md)</ept>.","source":"For more information about formatting, see [Formatting Types](~/docs/standard/base-types/formatting-types.md)."}],"pos":[76425,79039],"yaml":true,"extradata":"MT"},{"content":"An object that supplies culture-specific formatting information.","nodes":[{"pos":[0,64],"content":"An object that supplies culture-specific formatting information.","nodes":[{"content":"An object that supplies culture-specific formatting information.","pos":[0,64]}]}],"pos":[79802,79867],"yaml":true},{"content":"The string representation of the value of this instance as specified by <code>provider</code>.","nodes":[{"pos":[0,94],"content":"The string representation of the value of this instance as specified by <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">provider</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"The string representation of the value of this instance as specified by <code>provider</code>."}],"pos":[79924,80019],"yaml":true},{"content":"Converts the string representation of a number to its 32-bit signed integer equivalent. A return value indicates whether the conversion succeeded.","nodes":[{"pos":[0,146],"content":"Converts the string representation of a number to its 32-bit signed integer equivalent. A return value indicates whether the conversion succeeded.","nodes":[{"content":"Converts the string representation of a number to its 32-bit signed integer equivalent. A return value indicates whether the conversion succeeded.","pos":[0,146],"nodes":[{"content":"Converts the string representation of a number to its 32-bit signed integer equivalent.","pos":[0,87]},{"content":"A return value indicates whether the conversion succeeded.","pos":[88,146]}]}]}],"pos":[81580,81727],"yaml":true},{"content":"The <xref:System.Int32.TryParse%2A> method is like the <xref:System.Int32.Parse%2A> method, except the <xref:System.Int32.TryParse%2A> method does not throw an exception if the conversion fails. It eliminates the need to use exception handling to test for a <xref:System.FormatException> in the event that `s` is invalid and cannot be successfully parsed.  \n  \n The `s` parameter contains a number of the form:  \n  \n [ws][sign]digits[ws]  \n  \n Items in square brackets ([ and ]) are optional. The following table describes each element.  \n  \n|Element|Description|  \n|-------------|-----------------|  \n|*ws*|Optional white space.|  \n|*sign*|An optional sign.|  \n|*digits*|A sequence of digits ranging from 0 to 9.|  \n  \n The `s` parameter is interpreted using the <xref:System.Globalization.NumberStyles?displayProperty=fullName> style. In addition to the decimal digits, only leading and trailing spaces together with a leading sign are allowed. To explicitly define the style elements together with the culture-specific formatting information that can be present in `s`, use the <xref:System.Int32.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Int32%40%29?displayProperty=fullName> method.  \n  \n The `s` parameter is parsed using the formatting information in a <xref:System.Globalization.NumberFormatInfo> object initialized for the current system culture. For more information, see <xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A>.  \n  \n This overload of the <xref:System.Int32.TryParse%2A> method interprets all digits in the `s` parameter as decimal digits. To parse the string representation of a hexadecimal number, call the <xref:System.Int32.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Int32%40%29?displayProperty=fullName> overload.","nodes":[{"pos":[0,355],"content":"The <xref:System.Int32.TryParse%2A> method is like the <xref:System.Int32.Parse%2A> method, except the <xref:System.Int32.TryParse%2A> method does not throw an exception if the conversion fails. It eliminates the need to use exception handling to test for a <xref:System.FormatException> in the event that `s` is invalid and cannot be successfully parsed.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Int32.TryParse%2A&gt;</ph> method is like the <ph id=\"ph2\">&lt;xref:System.Int32.Parse%2A&gt;</ph> method, except the <ph id=\"ph3\">&lt;xref:System.Int32.TryParse%2A&gt;</ph> method does not throw an exception if the conversion fails.","pos":[0,194],"source":"The <xref:System.Int32.TryParse%2A> method is like the <xref:System.Int32.Parse%2A> method, except the <xref:System.Int32.TryParse%2A> method does not throw an exception if the conversion fails."},{"content":"It eliminates the need to use exception handling to test for a <ph id=\"ph1\">&lt;xref:System.FormatException&gt;</ph> in the event that <ph id=\"ph2\">`s`</ph> is invalid and cannot be successfully parsed.","pos":[195,355],"source":" It eliminates the need to use exception handling to test for a <xref:System.FormatException> in the event that `s` is invalid and cannot be successfully parsed."}]},{"pos":[362,410],"content":"The <ph id=\"ph1\">`s`</ph> parameter contains a number of the form:","source":"The `s` parameter contains a number of the form:"},{"pos":[417,437],"content":"[ws][sign]digits[ws]","nodes":[{"content":"[ws][sign]digits[ws]","pos":[0,20]}]},{"pos":[444,536],"content":"Items in square brackets ([ and ]) are optional. The following table describes each element.","nodes":[{"content":"Items in square brackets ([ and ]) are optional. The following table describes each element.","pos":[0,92],"nodes":[{"content":"Items in square brackets ([ and ]) are optional.","pos":[0,48]},{"content":"The following table describes each element.","pos":[49,92]}]}]},{"pos":[543,550],"content":"Element","nodes":[{"content":"Element","pos":[0,7]}]},{"pos":[551,562],"content":"Description","nodes":[{"content":"Description","pos":[0,11]}]},{"pos":[603,607],"content":"<bpt id=\"p1\">*</bpt>ws<ept id=\"p1\">*</ept>","source":"*ws*"},{"pos":[608,629],"content":"Optional white space.","nodes":[{"content":"Optional white space.","pos":[0,21]}]},{"pos":[634,640],"content":"<bpt id=\"p1\">*</bpt>sign<ept id=\"p1\">*</ept>","source":"*sign*"},{"pos":[641,658],"content":"An optional sign.","nodes":[{"content":"An optional sign.","pos":[0,17]}]},{"pos":[663,671],"content":"<bpt id=\"p1\">*</bpt>digits<ept id=\"p1\">*</ept>","source":"*digits*"},{"pos":[672,713],"content":"A sequence of digits ranging from 0 to 9.","nodes":[{"content":"A sequence of digits ranging from 0 to 9.","pos":[0,41]}]},{"pos":[721,1240],"content":"The `s` parameter is interpreted using the <xref:System.Globalization.NumberStyles?displayProperty=fullName> style. In addition to the decimal digits, only leading and trailing spaces together with a leading sign are allowed. To explicitly define the style elements together with the culture-specific formatting information that can be present in `s`, use the <xref:System.Int32.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Int32%40%29?displayProperty=fullName> method.","nodes":[{"content":"The <ph id=\"ph1\">`s`</ph> parameter is interpreted using the <ph id=\"ph2\">&lt;xref:System.Globalization.NumberStyles?displayProperty=fullName&gt;</ph> style.","pos":[0,115],"source":"The `s` parameter is interpreted using the <xref:System.Globalization.NumberStyles?displayProperty=fullName> style."},{"content":"In addition to the decimal digits, only leading and trailing spaces together with a leading sign are allowed.","pos":[116,225]},{"content":"To explicitly define the style elements together with the culture-specific formatting information that can be present in <ph id=\"ph1\">`s`</ph>, use the <ph id=\"ph2\">&lt;xref:System.Int32.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Int32%40%29?displayProperty=fullName&gt;</ph> method.","pos":[226,519],"source":" To explicitly define the style elements together with the culture-specific formatting information that can be present in `s`, use the <xref:System.Int32.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Int32%40%29?displayProperty=fullName> method."}]},{"pos":[1247,1495],"content":"The `s` parameter is parsed using the formatting information in a <xref:System.Globalization.NumberFormatInfo> object initialized for the current system culture. For more information, see <xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A>.","nodes":[{"content":"The <ph id=\"ph1\">`s`</ph> parameter is parsed using the formatting information in a <ph id=\"ph2\">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object initialized for the current system culture.","pos":[0,161],"source":"The `s` parameter is parsed using the formatting information in a <xref:System.Globalization.NumberFormatInfo> object initialized for the current system culture."},{"content":"For more information, see <ph id=\"ph1\">&lt;xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A&gt;</ph>.","pos":[162,248],"source":" For more information, see <xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A>."}]},{"pos":[1502,1854],"content":"This overload of the <xref:System.Int32.TryParse%2A> method interprets all digits in the `s` parameter as decimal digits. To parse the string representation of a hexadecimal number, call the <xref:System.Int32.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Int32%40%29?displayProperty=fullName> overload.","nodes":[{"content":"This overload of the <ph id=\"ph1\">&lt;xref:System.Int32.TryParse%2A&gt;</ph> method interprets all digits in the <ph id=\"ph2\">`s`</ph> parameter as decimal digits.","pos":[0,121],"source":"This overload of the <xref:System.Int32.TryParse%2A> method interprets all digits in the `s` parameter as decimal digits."},{"content":"To parse the string representation of a hexadecimal number, call the <ph id=\"ph1\">&lt;xref:System.Int32.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Int32%40%29?displayProperty=fullName&gt;</ph> overload.","pos":[122,352],"source":" To parse the string representation of a hexadecimal number, call the <xref:System.Int32.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Int32%40%29?displayProperty=fullName> overload."}]}],"pos":[81738,83613],"yaml":true,"extradata":"MT"},{"content":"A string containing a number to convert.","nodes":[{"pos":[0,40],"content":"A string containing a number to convert.","nodes":[{"content":"A string containing a number to convert.","pos":[0,40]}]}],"pos":[85257,85298],"yaml":true},{"content":"When this method returns, contains the 32-bit signed integer value equivalent of the number contained in <code>s</code>, if the conversion succeeded, or zero if the conversion failed. The conversion fails if the <code>s</code> parameter is `null` or <xref href=\"System.String.Empty\"></xref>, is not of the correct format, or represents a number less than <xref href=\"System.Int32.MinValue\"></xref> or greater than <xref href=\"System.Int32.MaxValue\"></xref>. This parameter is passed uninitialized; any value originally supplied in <code>result</code> will be overwritten.","nodes":[{"pos":[0,571],"content":"When this method returns, contains the 32-bit signed integer value equivalent of the number contained in <code>s</code>, if the conversion succeeded, or zero if the conversion failed. The conversion fails if the <code>s</code> parameter is `null` or <xref href=\"System.String.Empty\"></xref>, is not of the correct format, or represents a number less than <xref href=\"System.Int32.MinValue\"></xref> or greater than <xref href=\"System.Int32.MaxValue\"></xref>. This parameter is passed uninitialized; any value originally supplied in <code>result</code> will be overwritten.","nodes":[{"content":"When this method returns, contains the 32-bit signed integer value equivalent of the number contained in <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">s</ph><ept id=\"p1\">&lt;/code&gt;</ept>, if the conversion succeeded, or zero if the conversion failed.","pos":[0,183],"source":"When this method returns, contains the 32-bit signed integer value equivalent of the number contained in <code>s</code>, if the conversion succeeded, or zero if the conversion failed."},{"content":"The conversion fails if the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">s</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <ph id=\"ph2\">`null`</ph> or <ph id=\"ph3\">&lt;xref href=\"System.String.Empty\"&gt;&lt;/xref&gt;</ph>, is not of the correct format, or represents a number less than <ph id=\"ph4\">&lt;xref href=\"System.Int32.MinValue\"&gt;&lt;/xref&gt;</ph> or greater than <ph id=\"ph5\">&lt;xref href=\"System.Int32.MaxValue\"&gt;&lt;/xref&gt;</ph>.","pos":[184,457],"source":" The conversion fails if the <code>s</code> parameter is `null` or <xref href=\"System.String.Empty\"></xref>, is not of the correct format, or represents a number less than <xref href=\"System.Int32.MinValue\"></xref> or greater than <xref href=\"System.Int32.MaxValue\"></xref>."},{"content":"This parameter is passed uninitialized; any value originally supplied in <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">result</ph><ept id=\"p1\">&lt;/code&gt;</ept> will be overwritten.","pos":[458,571],"source":" This parameter is passed uninitialized; any value originally supplied in <code>result</code> will be overwritten."}]}],"pos":[85359,85931],"yaml":true},{"content":"`true` if <code>s</code> was converted successfully; otherwise, `false`.","nodes":[{"pos":[0,72],"content":"<ph id=\"ph1\">`true`</ph> if <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">s</ph><ept id=\"p1\">&lt;/code&gt;</ept> was converted successfully; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` if <code>s</code> was converted successfully; otherwise, `false`."}],"pos":[85989,86064],"yaml":true},{"content":"Converts the string representation of a number in a specified style and culture-specific format to its 32-bit signed integer equivalent. A return value indicates whether the conversion succeeded.","nodes":[{"pos":[0,195],"content":"Converts the string representation of a number in a specified style and culture-specific format to its 32-bit signed integer equivalent. A return value indicates whether the conversion succeeded.","nodes":[{"content":"Converts the string representation of a number in a specified style and culture-specific format to its 32-bit signed integer equivalent. A return value indicates whether the conversion succeeded.","pos":[0,195],"nodes":[{"content":"Converts the string representation of a number in a specified style and culture-specific format to its 32-bit signed integer equivalent.","pos":[0,136]},{"content":"A return value indicates whether the conversion succeeded.","pos":[137,195]}]}]}],"pos":[87872,88068],"yaml":true},{"content":"The <xref:System.Int32.TryParse%2A> method is like the <xref:System.Int32.Parse%2A> method, except the <xref:System.Int32.TryParse%2A> method does not throw an exception if the conversion fails. It eliminates the need to use exception handling to test for a <xref:System.FormatException> in the event that `s` is invalid and cannot be parsed successfully.  \n  \n The `style` parameter defines the style elements (such as white space or a positive or negative sign) that are allowed in the `s` parameter for the parse operation to succeed. It must be a combination of bit flags from the <xref:System.Globalization.NumberStyles> enumeration. Depending on the value of `style`, the `s` parameter may include the following elements:  \n  \n [ws][$][sign][digits,]digits[.fractional_digits][e[sign]digits][ws]  \n  \n Or, if the `style` parameter includes <xref:System.Globalization.NumberStyles.AllowHexSpecifier>:  \n  \n [ws]hexdigits[ws]  \n  \n Items in square brackets ([ and ]) are optional. The following table describes each element.  \n  \n|Element|Description|  \n|-------------|-----------------|  \n|*ws*|Optional white space. White space can appear at the beginning of `s` if `style` includes the <xref:System.Globalization.NumberStyles?displayProperty=fullName> flag, or at the end of `s` if `style` includes the <xref:System.Globalization.NumberStyles?displayProperty=fullName> flag.|  \n|*$*|A culture-specific currency symbol. Its position in the string is defined by the <xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A> property of the <xref:System.Globalization.NumberFormatInfo> object returned by the <xref:System.IFormatProvider.GetFormat%2A> method of the `provider` parameter. The currency symbol can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles?displayProperty=fullName> flag.|  \n|*sign*|An optional sign. A sign symbol can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles?displayProperty=fullName> or <xref:System.Globalization.NumberStyles?displayProperty=fullName> flags.|  \n|*digits*|A sequence of digits from 0 through 9.|  \n|*,*|A culture-specific thousands separator. The thousands separator of the culture specified by `provider` can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles?displayProperty=fullName> flag.|  \n|*.*|A culture-specific decimal point symbol. The decimal point symbol of the culture specified by `provider` can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles?displayProperty=fullName> flag.|  \n|*fractional_digits*|One or more occurrences of the digit 0. Fractional digits can appear in `s` only if `style` includes the <xref:System.Globalization.NumberStyles?displayProperty=fullName> flag.|  \n|*e*|The 'e' or 'E' character, which indicates that the value is represented in exponential notation. The `s` parameter can represent a number in exponential notation if `style` includes the <xref:System.Globalization.NumberStyles?displayProperty=fullName> flag.|  \n|*hexdigits*|A sequence of hexadecimal digits from 0 through f, or 0 through F.|  \n  \n A string with decimal digits only (which corresponds to the <xref:System.Globalization.NumberStyles?displayProperty=fullName> flag) always parses successfully. Most of the remaining <xref:System.Globalization.NumberStyles> members control elements that may be but are not required to be present in this input string. The following table indicates how individual <xref:System.Globalization.NumberStyles> members affect the elements that may be present in `s`.  \n  \n|Non-composite NumberStyles values|Elements permitted in s in addition to digits|  \n|----------------------------------------|---------------------------------------------------|  \n|<xref:System.Globalization.NumberStyles?displayProperty=fullName>|Decimal digits only.|  \n|<xref:System.Globalization.NumberStyles?displayProperty=fullName>|The decimal point (*.*) and *fractional_digits* elements. However, *fractional_digits* must consist of only one or more 0 digits or the method returns `false`.|  \n|<xref:System.Globalization.NumberStyles?displayProperty=fullName>|The `s` parameter can also use exponential notation. If `s` represents a number in exponential notation, it must represent an integer within the range of the <xref:System.Int32> data type without a non-zero, fractional component.|  \n|<xref:System.Globalization.NumberStyles?displayProperty=fullName>|The *ws* element at the beginning of `s`.|  \n|<xref:System.Globalization.NumberStyles?displayProperty=fullName>|The *ws* element at the end of `s`.|  \n|<xref:System.Globalization.NumberStyles?displayProperty=fullName>|A sign can appear before *digits*.|  \n|<xref:System.Globalization.NumberStyles?displayProperty=fullName>|A sign can appear after *digits*.|  \n|<xref:System.Globalization.NumberStyles?displayProperty=fullName>|The *sign* element in the form of parentheses enclosing the numeric value.|  \n|<xref:System.Globalization.NumberStyles?displayProperty=fullName>|The thousands separator (*,*) element.|  \n|<xref:System.Globalization.NumberStyles?displayProperty=fullName>|The *$* element.|  \n|<xref:System.Globalization.NumberStyles?displayProperty=fullName>|All elements. The `s` parameter cannot represent a hexadecimal number or a number in exponential notation.|  \n|<xref:System.Globalization.NumberStyles?displayProperty=fullName>|The *ws* element at the beginning or end of `s`, *sign* at the beginning of `s`, and the decimal point (*.*) symbol. The `s` parameter can also use exponential notation.|  \n|<xref:System.Globalization.NumberStyles?displayProperty=fullName>|The *ws*, *sign*, thousands separator (*,*), and decimal point (*.*) elements.|  \n|<xref:System.Globalization.NumberStyles?displayProperty=fullName>|All styles, except `s` cannot represent a hexadecimal number.|  \n  \n If the <xref:System.Globalization.NumberStyles?displayProperty=fullName> flag is used, `s` must be a hexadecimal value without a prefix. For example, \"C9AF3\" parses successfully, but \"0xC9AF3\" does not. The only other flags that can be present in `style` are <xref:System.Globalization.NumberStyles?displayProperty=fullName> and <xref:System.Globalization.NumberStyles?displayProperty=fullName>. (The <xref:System.Globalization.NumberStyles> enumeration has a composite style, <xref:System.Globalization.NumberStyles?displayProperty=fullName>, that includes both white space flags.)  \n  \n The `provider` parameter is an <xref:System.IFormatProvider> implementation, such as a <xref:System.Globalization.CultureInfo> object or a <xref:System.Globalization.NumberFormatInfo> object, whose <xref:System.IFormatProvider.GetFormat%2A> method returns a <xref:System.Globalization.NumberFormatInfo> object. The <xref:System.Globalization.NumberFormatInfo> object provides culture-specific information about the format of `s`. If `provider` is `null`, the <xref:System.Globalization.NumberFormatInfo> object for the current culture is used.","nodes":[{"pos":[0,355],"content":"The <xref:System.Int32.TryParse%2A> method is like the <xref:System.Int32.Parse%2A> method, except the <xref:System.Int32.TryParse%2A> method does not throw an exception if the conversion fails. It eliminates the need to use exception handling to test for a <xref:System.FormatException> in the event that `s` is invalid and cannot be parsed successfully.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Int32.TryParse%2A&gt;</ph> method is like the <ph id=\"ph2\">&lt;xref:System.Int32.Parse%2A&gt;</ph> method, except the <ph id=\"ph3\">&lt;xref:System.Int32.TryParse%2A&gt;</ph> method does not throw an exception if the conversion fails.","pos":[0,194],"source":"The <xref:System.Int32.TryParse%2A> method is like the <xref:System.Int32.Parse%2A> method, except the <xref:System.Int32.TryParse%2A> method does not throw an exception if the conversion fails."},{"content":"It eliminates the need to use exception handling to test for a <ph id=\"ph1\">&lt;xref:System.FormatException&gt;</ph> in the event that <ph id=\"ph2\">`s`</ph> is invalid and cannot be parsed successfully.","pos":[195,355],"source":" It eliminates the need to use exception handling to test for a <xref:System.FormatException> in the event that `s` is invalid and cannot be parsed successfully."}]},{"pos":[362,727],"content":"The `style` parameter defines the style elements (such as white space or a positive or negative sign) that are allowed in the `s` parameter for the parse operation to succeed. It must be a combination of bit flags from the <xref:System.Globalization.NumberStyles> enumeration. Depending on the value of `style`, the `s` parameter may include the following elements:","nodes":[{"content":"The <ph id=\"ph1\">`style`</ph> parameter defines the style elements (such as white space or a positive or negative sign) that are allowed in the <ph id=\"ph2\">`s`</ph> parameter for the parse operation to succeed.","pos":[0,175],"source":"The `style` parameter defines the style elements (such as white space or a positive or negative sign) that are allowed in the `s` parameter for the parse operation to succeed."},{"content":"It must be a combination of bit flags from the <ph id=\"ph1\">&lt;xref:System.Globalization.NumberStyles&gt;</ph> enumeration.","pos":[176,276],"source":" It must be a combination of bit flags from the <xref:System.Globalization.NumberStyles> enumeration."},{"content":"Depending on the value of <ph id=\"ph1\">`style`</ph>, the <ph id=\"ph2\">`s`</ph> parameter may include the following elements:","pos":[277,365],"source":" Depending on the value of `style`, the `s` parameter may include the following elements:"}]},{"pos":[734,801],"content":"[ws][$][sign][digits,]digits[.fractional_digits][e[sign]digits][ws]","nodes":[{"content":"[ws][$][sign][digits,]digits[.fractional_digits][e[sign]digits][ws]","pos":[0,67]}]},{"pos":[808,905],"content":"Or, if the <ph id=\"ph1\">`style`</ph> parameter includes <ph id=\"ph2\">&lt;xref:System.Globalization.NumberStyles.AllowHexSpecifier&gt;</ph>:","source":"Or, if the `style` parameter includes <xref:System.Globalization.NumberStyles.AllowHexSpecifier>:"},{"pos":[912,929],"content":"[ws]hexdigits[ws]","nodes":[{"content":"[ws]hexdigits[ws]","pos":[0,17]}]},{"pos":[936,1028],"content":"Items in square brackets ([ and ]) are optional. The following table describes each element.","nodes":[{"content":"Items in square brackets ([ and ]) are optional. The following table describes each element.","pos":[0,92],"nodes":[{"content":"Items in square brackets ([ and ]) are optional.","pos":[0,48]},{"content":"The following table describes each element.","pos":[49,92]}]}]},{"pos":[1035,1042],"content":"Element","nodes":[{"content":"Element","pos":[0,7]}]},{"pos":[1043,1054],"content":"Description","nodes":[{"content":"Description","pos":[0,11]}]},{"pos":[1095,1099],"content":"<bpt id=\"p1\">*</bpt>ws<ept id=\"p1\">*</ept>","source":"*ws*"},{"pos":[1100,1381],"content":"Optional white space. White space can appear at the beginning of `s` if `style` includes the <xref:System.Globalization.NumberStyles?displayProperty=fullName> flag, or at the end of `s` if `style` includes the <xref:System.Globalization.NumberStyles?displayProperty=fullName> flag.","nodes":[{"content":"Optional white space.","pos":[0,21]},{"content":"White space can appear at the beginning of <ph id=\"ph1\">`s`</ph> if <ph id=\"ph2\">`style`</ph> includes the <ph id=\"ph3\">&lt;xref:System.Globalization.NumberStyles?displayProperty=fullName&gt;</ph> flag, or at the end of <ph id=\"ph4\">`s`</ph> if <ph id=\"ph5\">`style`</ph> includes the <ph id=\"ph6\">&lt;xref:System.Globalization.NumberStyles?displayProperty=fullName&gt;</ph> flag.","pos":[22,281],"source":" White space can appear at the beginning of `s` if `style` includes the <xref:System.Globalization.NumberStyles?displayProperty=fullName> flag, or at the end of `s` if `style` includes the <xref:System.Globalization.NumberStyles?displayProperty=fullName> flag."}]},{"pos":[1390,1839],"content":"A culture-specific currency symbol. Its position in the string is defined by the <xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A> property of the <xref:System.Globalization.NumberFormatInfo> object returned by the <xref:System.IFormatProvider.GetFormat%2A> method of the `provider` parameter. The currency symbol can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles?displayProperty=fullName> flag.","nodes":[{"content":"A culture-specific currency symbol.","pos":[0,35]},{"content":"Its position in the string is defined by the <ph id=\"ph1\">&lt;xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A&gt;</ph> property of the <ph id=\"ph2\">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object returned by the <ph id=\"ph3\">&lt;xref:System.IFormatProvider.GetFormat%2A&gt;</ph> method of the <ph id=\"ph4\">`provider`</ph> parameter.","pos":[36,315],"source":" Its position in the string is defined by the <xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A> property of the <xref:System.Globalization.NumberFormatInfo> object returned by the <xref:System.IFormatProvider.GetFormat%2A> method of the `provider` parameter."},{"content":"The currency symbol can appear in <ph id=\"ph1\">`s`</ph> if <ph id=\"ph2\">`style`</ph> includes the <ph id=\"ph3\">&lt;xref:System.Globalization.NumberStyles?displayProperty=fullName&gt;</ph> flag.","pos":[316,449],"source":" The currency symbol can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles?displayProperty=fullName> flag."}]},{"pos":[1844,1850],"content":"<bpt id=\"p1\">*</bpt>sign<ept id=\"p1\">*</ept>","source":"*sign*"},{"pos":[1851,2066],"content":"An optional sign. A sign symbol can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles?displayProperty=fullName> or <xref:System.Globalization.NumberStyles?displayProperty=fullName> flags.","nodes":[{"content":"An optional sign.","pos":[0,17]},{"content":"A sign symbol can appear in <ph id=\"ph1\">`s`</ph> if <ph id=\"ph2\">`style`</ph> includes the <ph id=\"ph3\">&lt;xref:System.Globalization.NumberStyles?displayProperty=fullName&gt;</ph> or <ph id=\"ph4\">&lt;xref:System.Globalization.NumberStyles?displayProperty=fullName&gt;</ph> flags.","pos":[18,215],"source":" A sign symbol can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles?displayProperty=fullName> or <xref:System.Globalization.NumberStyles?displayProperty=fullName> flags."}]},{"pos":[2071,2079],"content":"<bpt id=\"p1\">*</bpt>digits<ept id=\"p1\">*</ept>","source":"*digits*"},{"pos":[2080,2118],"content":"A sequence of digits from 0 through 9.","nodes":[{"content":"A sequence of digits from 0 through 9.","pos":[0,38]}]},{"pos":[2123,2126],"content":"<bpt id=\"p1\">*</bpt>,<ept id=\"p1\">*</ept>","source":"*,*"},{"pos":[2127,2343],"content":"A culture-specific thousands separator. The thousands separator of the culture specified by `provider` can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles?displayProperty=fullName> flag.","nodes":[{"content":"A culture-specific thousands separator.","pos":[0,39]},{"content":"The thousands separator of the culture specified by <ph id=\"ph1\">`provider`</ph> can appear in <ph id=\"ph2\">`s`</ph> if <ph id=\"ph3\">`style`</ph> includes the <ph id=\"ph4\">&lt;xref:System.Globalization.NumberStyles?displayProperty=fullName&gt;</ph> flag.","pos":[40,216],"source":" The thousands separator of the culture specified by `provider` can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles?displayProperty=fullName> flag."}]},{"pos":[2348,2351],"content":"<bpt id=\"p1\">*</bpt>.<ept id=\"p1\">*</ept>","source":"*.*"},{"pos":[2352,2570],"content":"A culture-specific decimal point symbol. The decimal point symbol of the culture specified by `provider` can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles?displayProperty=fullName> flag.","nodes":[{"content":"A culture-specific decimal point symbol.","pos":[0,40]},{"content":"The decimal point symbol of the culture specified by <ph id=\"ph1\">`provider`</ph> can appear in <ph id=\"ph2\">`s`</ph> if <ph id=\"ph3\">`style`</ph> includes the <ph id=\"ph4\">&lt;xref:System.Globalization.NumberStyles?displayProperty=fullName&gt;</ph> flag.","pos":[41,218],"source":" The decimal point symbol of the culture specified by `provider` can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles?displayProperty=fullName> flag."}]},{"pos":[2575,2594],"content":"<bpt id=\"p1\">*</bpt>fractional_digits<ept id=\"p1\">*</ept>","source":"*fractional_digits*"},{"pos":[2595,2771],"content":"One or more occurrences of the digit 0. Fractional digits can appear in `s` only if `style` includes the <xref:System.Globalization.NumberStyles?displayProperty=fullName> flag.","nodes":[{"content":"One or more occurrences of the digit 0.","pos":[0,39]},{"content":"Fractional digits can appear in <ph id=\"ph1\">`s`</ph> only if <ph id=\"ph2\">`style`</ph> includes the <ph id=\"ph3\">&lt;xref:System.Globalization.NumberStyles?displayProperty=fullName&gt;</ph> flag.","pos":[40,176],"source":" Fractional digits can appear in `s` only if `style` includes the <xref:System.Globalization.NumberStyles?displayProperty=fullName> flag."}]},{"pos":[2776,2779],"content":"<bpt id=\"p1\">*</bpt>e<ept id=\"p1\">*</ept>","source":"*e*"},{"pos":[2780,3037],"content":"The 'e' or 'E' character, which indicates that the value is represented in exponential notation. The `s` parameter can represent a number in exponential notation if `style` includes the <xref:System.Globalization.NumberStyles?displayProperty=fullName> flag.","nodes":[{"content":"The 'e' or 'E' character, which indicates that the value is represented in exponential notation.","pos":[0,96]},{"content":"The <ph id=\"ph1\">`s`</ph> parameter can represent a number in exponential notation if <ph id=\"ph2\">`style`</ph> includes the <ph id=\"ph3\">&lt;xref:System.Globalization.NumberStyles?displayProperty=fullName&gt;</ph> flag.","pos":[97,257],"source":" The `s` parameter can represent a number in exponential notation if `style` includes the <xref:System.Globalization.NumberStyles?displayProperty=fullName> flag."}]},{"pos":[3042,3053],"content":"<bpt id=\"p1\">*</bpt>hexdigits<ept id=\"p1\">*</ept>","source":"*hexdigits*"},{"pos":[3054,3120],"content":"A sequence of hexadecimal digits from 0 through f, or 0 through F.","nodes":[{"content":"A sequence of hexadecimal digits from 0 through f, or 0 through F.","pos":[0,66]}]},{"pos":[3128,3586],"content":"A string with decimal digits only (which corresponds to the <xref:System.Globalization.NumberStyles?displayProperty=fullName> flag) always parses successfully. Most of the remaining <xref:System.Globalization.NumberStyles> members control elements that may be but are not required to be present in this input string. The following table indicates how individual <xref:System.Globalization.NumberStyles> members affect the elements that may be present in `s`.","nodes":[{"content":"A string with decimal digits only (which corresponds to the <ph id=\"ph1\">&lt;xref:System.Globalization.NumberStyles?displayProperty=fullName&gt;</ph> flag) always parses successfully.","pos":[0,159],"source":"A string with decimal digits only (which corresponds to the <xref:System.Globalization.NumberStyles?displayProperty=fullName> flag) always parses successfully."},{"content":"Most of the remaining <ph id=\"ph1\">&lt;xref:System.Globalization.NumberStyles&gt;</ph> members control elements that may be but are not required to be present in this input string.","pos":[160,316],"source":" Most of the remaining <xref:System.Globalization.NumberStyles> members control elements that may be but are not required to be present in this input string."},{"content":"The following table indicates how individual <ph id=\"ph1\">&lt;xref:System.Globalization.NumberStyles&gt;</ph> members affect the elements that may be present in <ph id=\"ph2\">`s`</ph>.","pos":[317,458],"source":" The following table indicates how individual <xref:System.Globalization.NumberStyles> members affect the elements that may be present in `s`."}]},{"pos":[3593,3626],"content":"Non-composite NumberStyles values","nodes":[{"content":"Non-composite NumberStyles values","pos":[0,33]}]},{"pos":[3627,3672],"content":"Elements permitted in s in addition to digits","nodes":[{"content":"Elements permitted in s in addition to digits","pos":[0,45]}]},{"pos":[3774,3839],"content":"<xref:System.Globalization.NumberStyles?displayProperty=fullName>","nodes":[]},{"pos":[3840,3860],"content":"Decimal digits only.","nodes":[{"content":"Decimal digits only.","pos":[0,20]}]},{"pos":[3865,3930],"content":"<xref:System.Globalization.NumberStyles?displayProperty=fullName>","nodes":[]},{"pos":[3931,4090],"content":"The decimal point (*.*) and *fractional_digits* elements. However, *fractional_digits* must consist of only one or more 0 digits or the method returns `false`.","nodes":[{"content":"The decimal point (<bpt id=\"p1\">*</bpt>.<ept id=\"p1\">*</ept>) and <bpt id=\"p2\">*</bpt>fractional_digits<ept id=\"p2\">*</ept> elements.","pos":[0,57],"source":"The decimal point (*.*) and *fractional_digits* elements."},{"content":"However, <bpt id=\"p1\">*</bpt>fractional_digits<ept id=\"p1\">*</ept> must consist of only one or more 0 digits or the method returns <ph id=\"ph1\">`false`</ph>.","pos":[58,159],"source":" However, *fractional_digits* must consist of only one or more 0 digits or the method returns `false`."}]},{"pos":[4095,4160],"content":"<xref:System.Globalization.NumberStyles?displayProperty=fullName>","nodes":[]},{"pos":[4161,4390],"content":"The `s` parameter can also use exponential notation. If `s` represents a number in exponential notation, it must represent an integer within the range of the <xref:System.Int32> data type without a non-zero, fractional component.","nodes":[{"content":"The <ph id=\"ph1\">`s`</ph> parameter can also use exponential notation.","pos":[0,52],"source":"The `s` parameter can also use exponential notation."},{"content":"If <ph id=\"ph1\">`s`</ph> represents a number in exponential notation, it must represent an integer within the range of the <ph id=\"ph2\">&lt;xref:System.Int32&gt;</ph> data type without a non-zero, fractional component.","pos":[53,229],"source":" If `s` represents a number in exponential notation, it must represent an integer within the range of the <xref:System.Int32> data type without a non-zero, fractional component."}]},{"pos":[4395,4460],"content":"<xref:System.Globalization.NumberStyles?displayProperty=fullName>","nodes":[]},{"pos":[4461,4502],"content":"The <bpt id=\"p1\">*</bpt>ws<ept id=\"p1\">*</ept> element at the beginning of <ph id=\"ph1\">`s`</ph>.","source":"The *ws* element at the beginning of `s`."},{"pos":[4507,4572],"content":"<xref:System.Globalization.NumberStyles?displayProperty=fullName>","nodes":[]},{"pos":[4573,4608],"content":"The <bpt id=\"p1\">*</bpt>ws<ept id=\"p1\">*</ept> element at the end of <ph id=\"ph1\">`s`</ph>.","source":"The *ws* element at the end of `s`."},{"pos":[4613,4678],"content":"<xref:System.Globalization.NumberStyles?displayProperty=fullName>","nodes":[]},{"pos":[4679,4713],"content":"A sign can appear before <bpt id=\"p1\">*</bpt>digits<ept id=\"p1\">*</ept>.","source":"A sign can appear before *digits*."},{"pos":[4718,4783],"content":"<xref:System.Globalization.NumberStyles?displayProperty=fullName>","nodes":[]},{"pos":[4784,4817],"content":"A sign can appear after <bpt id=\"p1\">*</bpt>digits<ept id=\"p1\">*</ept>.","source":"A sign can appear after *digits*."},{"pos":[4822,4887],"content":"<xref:System.Globalization.NumberStyles?displayProperty=fullName>","nodes":[]},{"pos":[4888,4962],"content":"The <bpt id=\"p1\">*</bpt>sign<ept id=\"p1\">*</ept> element in the form of parentheses enclosing the numeric value.","source":"The *sign* element in the form of parentheses enclosing the numeric value."},{"pos":[4967,5032],"content":"<xref:System.Globalization.NumberStyles?displayProperty=fullName>","nodes":[]},{"pos":[5033,5071],"content":"The thousands separator (<bpt id=\"p1\">*</bpt>,<ept id=\"p1\">*</ept>) element.","source":"The thousands separator (*,*) element."},{"pos":[5076,5141],"content":"<xref:System.Globalization.NumberStyles?displayProperty=fullName>","nodes":[]},{"pos":[5142,5158],"content":"The <bpt id=\"p1\">*</bpt><ph id=\"ph1\">$</ph><ept id=\"p1\">*</ept> element.","source":"The *$* element."},{"pos":[5163,5228],"content":"<xref:System.Globalization.NumberStyles?displayProperty=fullName>","nodes":[]},{"pos":[5229,5335],"content":"All elements. The `s` parameter cannot represent a hexadecimal number or a number in exponential notation.","nodes":[{"content":"All elements.","pos":[0,13]},{"content":"The <ph id=\"ph1\">`s`</ph> parameter cannot represent a hexadecimal number or a number in exponential notation.","pos":[14,106],"source":" The `s` parameter cannot represent a hexadecimal number or a number in exponential notation."}]},{"pos":[5340,5405],"content":"<xref:System.Globalization.NumberStyles?displayProperty=fullName>","nodes":[]},{"pos":[5406,5575],"content":"The *ws* element at the beginning or end of `s`, *sign* at the beginning of `s`, and the decimal point (*.*) symbol. The `s` parameter can also use exponential notation.","nodes":[{"content":"The <bpt id=\"p1\">*</bpt>ws<ept id=\"p1\">*</ept> element at the beginning or end of <ph id=\"ph1\">`s`</ph>, <bpt id=\"p2\">*</bpt>sign<ept id=\"p2\">*</ept> at the beginning of <ph id=\"ph2\">`s`</ph>, and the decimal point (<bpt id=\"p3\">*</bpt>.<ept id=\"p3\">*</ept>) symbol.","pos":[0,116],"source":"The *ws* element at the beginning or end of `s`, *sign* at the beginning of `s`, and the decimal point (*.*) symbol."},{"content":"The <ph id=\"ph1\">`s`</ph> parameter can also use exponential notation.","pos":[117,169],"source":" The `s` parameter can also use exponential notation."}]},{"pos":[5580,5645],"content":"<xref:System.Globalization.NumberStyles?displayProperty=fullName>","nodes":[]},{"pos":[5646,5724],"content":"The <bpt id=\"p1\">*</bpt>ws<ept id=\"p1\">*</ept>, <bpt id=\"p2\">*</bpt>sign<ept id=\"p2\">*</ept>, thousands separator (<bpt id=\"p3\">*</bpt>,<ept id=\"p3\">*</ept>), and decimal point (<bpt id=\"p4\">*</bpt>.<ept id=\"p4\">*</ept>) elements.","source":"The *ws*, *sign*, thousands separator (*,*), and decimal point (*.*) elements."},{"pos":[5729,5794],"content":"<xref:System.Globalization.NumberStyles?displayProperty=fullName>","nodes":[]},{"pos":[5795,5856],"content":"All styles, except <ph id=\"ph1\">`s`</ph> cannot represent a hexadecimal number.","source":"All styles, except `s` cannot represent a hexadecimal number."},{"pos":[5864,6446],"content":"If the <xref:System.Globalization.NumberStyles?displayProperty=fullName> flag is used, `s` must be a hexadecimal value without a prefix. For example, \"C9AF3\" parses successfully, but \"0xC9AF3\" does not. The only other flags that can be present in `style` are <xref:System.Globalization.NumberStyles?displayProperty=fullName> and <xref:System.Globalization.NumberStyles?displayProperty=fullName>. (The <xref:System.Globalization.NumberStyles> enumeration has a composite style, <xref:System.Globalization.NumberStyles?displayProperty=fullName>, that includes both white space flags.)","nodes":[{"content":"If the <ph id=\"ph1\">&lt;xref:System.Globalization.NumberStyles?displayProperty=fullName&gt;</ph> flag is used, <ph id=\"ph2\">`s`</ph> must be a hexadecimal value without a prefix.","pos":[0,136],"source":"If the <xref:System.Globalization.NumberStyles?displayProperty=fullName> flag is used, `s` must be a hexadecimal value without a prefix."},{"content":"For example, \"C9AF3\" parses successfully, but \"0xC9AF3\" does not.","pos":[137,202]},{"content":"The only other flags that can be present in <ph id=\"ph1\">`style`</ph> are <ph id=\"ph2\">&lt;xref:System.Globalization.NumberStyles?displayProperty=fullName&gt;</ph> and <ph id=\"ph3\">&lt;xref:System.Globalization.NumberStyles?displayProperty=fullName&gt;</ph>.","pos":[203,395],"source":" The only other flags that can be present in `style` are <xref:System.Globalization.NumberStyles?displayProperty=fullName> and <xref:System.Globalization.NumberStyles?displayProperty=fullName>."},{"content":"(The <ph id=\"ph1\">&lt;xref:System.Globalization.NumberStyles&gt;</ph> enumeration has a composite style, <ph id=\"ph2\">&lt;xref:System.Globalization.NumberStyles?displayProperty=fullName&gt;</ph>, that includes both white space flags.)","pos":[396,582],"source":" (The <xref:System.Globalization.NumberStyles> enumeration has a composite style, <xref:System.Globalization.NumberStyles?displayProperty=fullName>, that includes both white space flags.)"}]},{"pos":[6453,6996],"content":"The `provider` parameter is an <xref:System.IFormatProvider> implementation, such as a <xref:System.Globalization.CultureInfo> object or a <xref:System.Globalization.NumberFormatInfo> object, whose <xref:System.IFormatProvider.GetFormat%2A> method returns a <xref:System.Globalization.NumberFormatInfo> object. The <xref:System.Globalization.NumberFormatInfo> object provides culture-specific information about the format of `s`. If `provider` is `null`, the <xref:System.Globalization.NumberFormatInfo> object for the current culture is used.","nodes":[{"content":"The <ph id=\"ph1\">`provider`</ph> parameter is an <ph id=\"ph2\">&lt;xref:System.IFormatProvider&gt;</ph> implementation, such as a <ph id=\"ph3\">&lt;xref:System.Globalization.CultureInfo&gt;</ph> object or a <ph id=\"ph4\">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object, whose <ph id=\"ph5\">&lt;xref:System.IFormatProvider.GetFormat%2A&gt;</ph> method returns a <ph id=\"ph6\">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object.","pos":[0,310],"source":"The `provider` parameter is an <xref:System.IFormatProvider> implementation, such as a <xref:System.Globalization.CultureInfo> object or a <xref:System.Globalization.NumberFormatInfo> object, whose <xref:System.IFormatProvider.GetFormat%2A> method returns a <xref:System.Globalization.NumberFormatInfo> object."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object provides culture-specific information about the format of <ph id=\"ph2\">`s`</ph>.","pos":[311,429],"source":" The <xref:System.Globalization.NumberFormatInfo> object provides culture-specific information about the format of `s`."},{"content":"If <ph id=\"ph1\">`provider`</ph> is <ph id=\"ph2\">`null`</ph>, the <ph id=\"ph3\">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object for the current culture is used.","pos":[430,543],"source":" If `provider` is `null`, the <xref:System.Globalization.NumberFormatInfo> object for the current culture is used."}]}],"pos":[88079,95127],"yaml":true,"extradata":"MT"},{"content":"A string containing a number to convert. The string is interpreted using the style specified by <code>style</code>.","nodes":[{"pos":[0,115],"content":"A string containing a number to convert. The string is interpreted using the style specified by <code>style</code>.","nodes":[{"content":"A string containing a number to convert.","pos":[0,40]},{"content":"The string is interpreted using the style specified by <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">style</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","pos":[41,115],"source":" The string is interpreted using the style specified by <code>style</code>."}]}],"pos":[96046,96162],"yaml":true},{"content":"A bitwise combination of enumeration values that indicates the style elements that can be present in <code>s</code>. A typical value to specify is <xref href=\"System.Globalization.NumberStyles.Integer\"></xref>.","nodes":[{"pos":[0,210],"content":"A bitwise combination of enumeration values that indicates the style elements that can be present in <code>s</code>. A typical value to specify is <xref href=\"System.Globalization.NumberStyles.Integer\"></xref>.","nodes":[{"content":"A bitwise combination of enumeration values that indicates the style elements that can be present in <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">s</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","pos":[0,116],"source":"A bitwise combination of enumeration values that indicates the style elements that can be present in <code>s</code>."},{"content":"A typical value to specify is <ph id=\"ph1\">&lt;xref href=\"System.Globalization.NumberStyles.Integer\"&gt;&lt;/xref&gt;</ph>.","pos":[117,210],"source":" A typical value to specify is <xref href=\"System.Globalization.NumberStyles.Integer\"></xref>."}]}],"pos":[96243,96454],"yaml":true},{"content":"An object that supplies culture-specific formatting information about <code>s</code>.","nodes":[{"pos":[0,85],"content":"An object that supplies culture-specific formatting information about <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">s</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"An object that supplies culture-specific formatting information about <code>s</code>."}],"pos":[96527,96613],"yaml":true},{"content":"When this method returns, contains the 32-bit signed integer value equivalent of the number contained in <code>s</code>, if the conversion succeeded, or zero if the conversion failed. The conversion fails if the <code>s</code> parameter is `null` or <xref href=\"System.String.Empty\"></xref>, is not in a format compliant with <code>style</code>, or represents a number less than <xref href=\"System.Int32.MinValue\"></xref> or greater than <xref href=\"System.Int32.MaxValue\"></xref>. This parameter is passed uninitialized; any value originally supplied in <code>result</code> will be overwritten.","nodes":[{"pos":[0,595],"content":"When this method returns, contains the 32-bit signed integer value equivalent of the number contained in <code>s</code>, if the conversion succeeded, or zero if the conversion failed. The conversion fails if the <code>s</code> parameter is `null` or <xref href=\"System.String.Empty\"></xref>, is not in a format compliant with <code>style</code>, or represents a number less than <xref href=\"System.Int32.MinValue\"></xref> or greater than <xref href=\"System.Int32.MaxValue\"></xref>. This parameter is passed uninitialized; any value originally supplied in <code>result</code> will be overwritten.","nodes":[{"content":"When this method returns, contains the 32-bit signed integer value equivalent of the number contained in <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">s</ph><ept id=\"p1\">&lt;/code&gt;</ept>, if the conversion succeeded, or zero if the conversion failed.","pos":[0,183],"source":"When this method returns, contains the 32-bit signed integer value equivalent of the number contained in <code>s</code>, if the conversion succeeded, or zero if the conversion failed."},{"content":"The conversion fails if the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">s</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <ph id=\"ph2\">`null`</ph> or <ph id=\"ph3\">&lt;xref href=\"System.String.Empty\"&gt;&lt;/xref&gt;</ph>, is not in a format compliant with <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph4\">style</ph><ept id=\"p2\">&lt;/code&gt;</ept>, or represents a number less than <ph id=\"ph5\">&lt;xref href=\"System.Int32.MinValue\"&gt;&lt;/xref&gt;</ph> or greater than <ph id=\"ph6\">&lt;xref href=\"System.Int32.MaxValue\"&gt;&lt;/xref&gt;</ph>.","pos":[184,481],"source":" The conversion fails if the <code>s</code> parameter is `null` or <xref href=\"System.String.Empty\"></xref>, is not in a format compliant with <code>style</code>, or represents a number less than <xref href=\"System.Int32.MinValue\"></xref> or greater than <xref href=\"System.Int32.MaxValue\"></xref>."},{"content":"This parameter is passed uninitialized; any value originally supplied in <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">result</ph><ept id=\"p1\">&lt;/code&gt;</ept> will be overwritten.","pos":[482,595],"source":" This parameter is passed uninitialized; any value originally supplied in <code>result</code> will be overwritten."}]}],"pos":[96674,97270],"yaml":true},{"content":"`true` if <code>s</code> was converted successfully; otherwise, `false`.","nodes":[{"pos":[0,72],"content":"<ph id=\"ph1\">`true`</ph> if <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">s</ph><ept id=\"p1\">&lt;/code&gt;</ept> was converted successfully; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` if <code>s</code> was converted successfully; otherwise, `false`."}],"pos":[97328,97403],"yaml":true},{"content":"<code>style</code> is not a <xref href=\"System.Globalization.NumberStyles\"></xref> value.  \n  \n -or-  \n  \n <code>style</code> is not a combination of <xref href=\"System.Globalization.NumberStyles.AllowHexSpecifier\"></xref> and <xref href=\"System.Globalization.NumberStyles.HexNumber\"></xref> values.","nodes":[{"pos":[0,89],"content":"<ph id=\"ph1\">&lt;code&gt;style&lt;/code&gt;</ph> is not a <ph id=\"ph2\">&lt;xref href=\"System.Globalization.NumberStyles\"&gt;&lt;/xref&gt;</ph> value.","source":"<code>style</code> is not a <xref href=\"System.Globalization.NumberStyles\"></xref> value."},{"pos":[96,100],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[107,299],"content":"<ph id=\"ph1\">&lt;code&gt;style&lt;/code&gt;</ph> is not a combination of <ph id=\"ph2\">&lt;xref href=\"System.Globalization.NumberStyles.AllowHexSpecifier\"&gt;&lt;/xref&gt;</ph> and <ph id=\"ph3\">&lt;xref href=\"System.Globalization.NumberStyles.HexNumber\"&gt;&lt;/xref&gt;</ph> values.","source":"<code>style</code> is not a combination of <xref href=\"System.Globalization.NumberStyles.AllowHexSpecifier\"></xref> and <xref href=\"System.Globalization.NumberStyles.HexNumber\"></xref> values."}],"pos":[97546,97858],"yaml":true},{"content":"For a description of this member, see <xref href=\"System.IConvertible.ToBoolean(System.IFormatProvider)\"></xref>.","nodes":[{"pos":[0,113],"content":"For a description of this member, see <ph id=\"ph1\">&lt;xref href=\"System.IConvertible.ToBoolean(System.IFormatProvider)\"&gt;&lt;/xref&gt;</ph>.","source":"For a description of this member, see <xref href=\"System.IConvertible.ToBoolean(System.IFormatProvider)\"></xref>."}],"pos":[101586,101700],"yaml":true},{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Int32> instance is cast to an <xref:System.IConvertible> interface. The recommended alternative is to call the <xref:System.Convert.ToBoolean%28System.Int32%29?displayProperty=fullName> method.","nodes":[{"pos":[0,295],"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Int32> instance is cast to an <xref:System.IConvertible> interface. The recommended alternative is to call the <xref:System.Convert.ToBoolean%28System.Int32%29?displayProperty=fullName> method.","nodes":[{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Int32> instance is cast to an <xref:System.IConvertible> interface. The recommended alternative is to call the <xref:System.Convert.ToBoolean%28System.Int32%29?displayProperty=fullName> method.","pos":[0,295],"nodes":[{"content":"This member is an explicit interface member implementation.","pos":[0,59]},{"content":"It can be used only when the <ph id=\"ph1\">&lt;xref:System.Int32&gt;</ph> instance is cast to an <ph id=\"ph2\">&lt;xref:System.IConvertible&gt;</ph> interface.","pos":[60,169],"source":" It can be used only when the <xref:System.Int32> instance is cast to an <xref:System.IConvertible> interface."},{"content":"The recommended alternative is to call the <ph id=\"ph1\">&lt;xref:System.Convert.ToBoolean%28System.Int32%29?displayProperty=fullName&gt;</ph> method.","pos":[170,295],"source":" The recommended alternative is to call the <xref:System.Convert.ToBoolean%28System.Int32%29?displayProperty=fullName> method."}]}]}],"pos":[101711,102007],"yaml":true,"extradata":"MT"},{"content":"This parameter is ignored.","nodes":[{"pos":[0,26],"content":"This parameter is ignored.","nodes":[{"content":"This parameter is ignored.","pos":[0,26]}]}],"pos":[102175,102202],"yaml":true},{"content":"`true` if the value of the current instance is not zero; otherwise, `false`.","nodes":[{"pos":[0,76],"content":"<ph id=\"ph1\">`true`</ph> if the value of the current instance is not zero; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the value of the current instance is not zero; otherwise, `false`."}],"pos":[102260,102339],"yaml":true},{"content":"For a description of this member, see <xref href=\"System.IConvertible.ToByte(System.IFormatProvider)\"></xref>.","nodes":[{"pos":[0,110],"content":"For a description of this member, see <ph id=\"ph1\">&lt;xref href=\"System.IConvertible.ToByte(System.IFormatProvider)\"&gt;&lt;/xref&gt;</ph>.","source":"For a description of this member, see <xref href=\"System.IConvertible.ToByte(System.IFormatProvider)\"></xref>."}],"pos":[103876,103987],"yaml":true},{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Int32> instance is cast to an <xref:System.IConvertible> interface. The recommended alternative is to call the <xref:System.Convert.ToByte%28System.Int32%29?displayProperty=fullName> method.","nodes":[{"pos":[0,292],"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Int32> instance is cast to an <xref:System.IConvertible> interface. The recommended alternative is to call the <xref:System.Convert.ToByte%28System.Int32%29?displayProperty=fullName> method.","nodes":[{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Int32> instance is cast to an <xref:System.IConvertible> interface. The recommended alternative is to call the <xref:System.Convert.ToByte%28System.Int32%29?displayProperty=fullName> method.","pos":[0,292],"nodes":[{"content":"This member is an explicit interface member implementation.","pos":[0,59]},{"content":"It can be used only when the <ph id=\"ph1\">&lt;xref:System.Int32&gt;</ph> instance is cast to an <ph id=\"ph2\">&lt;xref:System.IConvertible&gt;</ph> interface.","pos":[60,169],"source":" It can be used only when the <xref:System.Int32> instance is cast to an <xref:System.IConvertible> interface."},{"content":"The recommended alternative is to call the <ph id=\"ph1\">&lt;xref:System.Convert.ToByte%28System.Int32%29?displayProperty=fullName&gt;</ph> method.","pos":[170,292],"source":" The recommended alternative is to call the <xref:System.Convert.ToByte%28System.Int32%29?displayProperty=fullName> method."}]}]}],"pos":[103998,104291],"yaml":true,"extradata":"MT"},{"content":"This parameter is ignored.","nodes":[{"pos":[0,26],"content":"This parameter is ignored.","nodes":[{"content":"This parameter is ignored.","pos":[0,26]}]}],"pos":[104456,104483],"yaml":true},{"content":"The value of the current instance, converted to a <xref href=\"System.Byte\"></xref>.","nodes":[{"pos":[0,83],"content":"The value of the current instance, converted to a <ph id=\"ph1\">&lt;xref href=\"System.Byte\"&gt;&lt;/xref&gt;</ph>.","source":"The value of the current instance, converted to a <xref href=\"System.Byte\"></xref>."}],"pos":[104538,104622],"yaml":true},{"content":"For a description of this member, see <xref href=\"System.IConvertible.ToChar(System.IFormatProvider)\"></xref>.","nodes":[{"pos":[0,110],"content":"For a description of this member, see <ph id=\"ph1\">&lt;xref href=\"System.IConvertible.ToChar(System.IFormatProvider)\"&gt;&lt;/xref&gt;</ph>.","source":"For a description of this member, see <xref href=\"System.IConvertible.ToChar(System.IFormatProvider)\"></xref>."}],"pos":[106156,106267],"yaml":true},{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Int32> instance is cast to an <xref:System.IConvertible> interface. The recommended alternative is to call the <xref:System.Convert.ToChar%28System.Int32%29?displayProperty=fullName> method.","nodes":[{"pos":[0,292],"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Int32> instance is cast to an <xref:System.IConvertible> interface. The recommended alternative is to call the <xref:System.Convert.ToChar%28System.Int32%29?displayProperty=fullName> method.","nodes":[{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Int32> instance is cast to an <xref:System.IConvertible> interface. The recommended alternative is to call the <xref:System.Convert.ToChar%28System.Int32%29?displayProperty=fullName> method.","pos":[0,292],"nodes":[{"content":"This member is an explicit interface member implementation.","pos":[0,59]},{"content":"It can be used only when the <ph id=\"ph1\">&lt;xref:System.Int32&gt;</ph> instance is cast to an <ph id=\"ph2\">&lt;xref:System.IConvertible&gt;</ph> interface.","pos":[60,169],"source":" It can be used only when the <xref:System.Int32> instance is cast to an <xref:System.IConvertible> interface."},{"content":"The recommended alternative is to call the <ph id=\"ph1\">&lt;xref:System.Convert.ToChar%28System.Int32%29?displayProperty=fullName&gt;</ph> method.","pos":[170,292],"source":" The recommended alternative is to call the <xref:System.Convert.ToChar%28System.Int32%29?displayProperty=fullName> method."}]}]}],"pos":[106278,106571],"yaml":true,"extradata":"MT"},{"content":"This parameter is ignored.","nodes":[{"pos":[0,26],"content":"This parameter is ignored.","nodes":[{"content":"This parameter is ignored.","pos":[0,26]}]}],"pos":[106736,106763],"yaml":true},{"content":"The value of the current instance, converted to a <xref href=\"System.Char\"></xref>.","nodes":[{"pos":[0,83],"content":"The value of the current instance, converted to a <ph id=\"ph1\">&lt;xref href=\"System.Char\"&gt;&lt;/xref&gt;</ph>.","source":"The value of the current instance, converted to a <xref href=\"System.Char\"></xref>."}],"pos":[106818,106902],"yaml":true},{"content":"This conversion is not supported. Attempting to use this method throws an <xref href=\"System.InvalidCastException\"></xref>.","nodes":[{"pos":[0,123],"content":"This conversion is not supported. Attempting to use this method throws an <xref href=\"System.InvalidCastException\"></xref>.","nodes":[{"content":"This conversion is not supported.","pos":[0,33]},{"content":"Attempting to use this method throws an <ph id=\"ph1\">&lt;xref href=\"System.InvalidCastException\"&gt;&lt;/xref&gt;</ph>.","pos":[34,123],"source":" Attempting to use this method throws an <xref href=\"System.InvalidCastException\"></xref>."}]}],"pos":[108460,108584],"yaml":true},{"content":"This parameter is ignored.","nodes":[{"pos":[0,26],"content":"This parameter is ignored.","nodes":[{"content":"This parameter is ignored.","pos":[0,26]}]}],"pos":[108757,108784],"yaml":true},{"content":"This conversion is not supported. No value is returned.","nodes":[{"pos":[0,55],"content":"This conversion is not supported. No value is returned.","nodes":[{"content":"This conversion is not supported. No value is returned.","pos":[0,55],"nodes":[{"content":"This conversion is not supported.","pos":[0,33]},{"content":"No value is returned.","pos":[34,55]}]}]}],"pos":[108843,108899],"yaml":true},{"content":"In all cases.","nodes":[{"pos":[0,13],"content":"In all cases.","nodes":[{"content":"In all cases.","pos":[0,13]}]}],"pos":[109070,109084],"yaml":true},{"content":"For a description of this member, see <xref href=\"System.IConvertible.ToDecimal(System.IFormatProvider)\"></xref>.","nodes":[{"pos":[0,113],"content":"For a description of this member, see <ph id=\"ph1\">&lt;xref href=\"System.IConvertible.ToDecimal(System.IFormatProvider)\"&gt;&lt;/xref&gt;</ph>.","source":"For a description of this member, see <xref href=\"System.IConvertible.ToDecimal(System.IFormatProvider)\"></xref>."}],"pos":[110566,110680],"yaml":true},{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Int32> instance is cast to an <xref:System.IConvertible> interface. The recommended alternative is to call the <xref:System.Convert.ToDecimal%2A?displayProperty=fullName> method.","nodes":[{"pos":[0,280],"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Int32> instance is cast to an <xref:System.IConvertible> interface. The recommended alternative is to call the <xref:System.Convert.ToDecimal%2A?displayProperty=fullName> method.","nodes":[{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Int32> instance is cast to an <xref:System.IConvertible> interface. The recommended alternative is to call the <xref:System.Convert.ToDecimal%2A?displayProperty=fullName> method.","pos":[0,280],"nodes":[{"content":"This member is an explicit interface member implementation.","pos":[0,59]},{"content":"It can be used only when the <ph id=\"ph1\">&lt;xref:System.Int32&gt;</ph> instance is cast to an <ph id=\"ph2\">&lt;xref:System.IConvertible&gt;</ph> interface.","pos":[60,169],"source":" It can be used only when the <xref:System.Int32> instance is cast to an <xref:System.IConvertible> interface."},{"content":"The recommended alternative is to call the <ph id=\"ph1\">&lt;xref:System.Convert.ToDecimal%2A?displayProperty=fullName&gt;</ph> method.","pos":[170,280],"source":" The recommended alternative is to call the <xref:System.Convert.ToDecimal%2A?displayProperty=fullName> method."}]}]}],"pos":[110691,110972],"yaml":true,"extradata":"MT"},{"content":"This parameter is ignored.","nodes":[{"pos":[0,26],"content":"This parameter is ignored.","nodes":[{"content":"This parameter is ignored.","pos":[0,26]}]}],"pos":[111143,111170],"yaml":true},{"content":"The value of the current instance, converted to a <xref href=\"System.Decimal\"></xref>.","nodes":[{"pos":[0,86],"content":"The value of the current instance, converted to a <ph id=\"ph1\">&lt;xref href=\"System.Decimal\"&gt;&lt;/xref&gt;</ph>.","source":"The value of the current instance, converted to a <xref href=\"System.Decimal\"></xref>."}],"pos":[111228,111315],"yaml":true},{"content":"For a description of this member, see <xref href=\"System.IConvertible.ToDouble(System.IFormatProvider)\"></xref>.","nodes":[{"pos":[0,112],"content":"For a description of this member, see <ph id=\"ph1\">&lt;xref href=\"System.IConvertible.ToDouble(System.IFormatProvider)\"&gt;&lt;/xref&gt;</ph>.","source":"For a description of this member, see <xref href=\"System.IConvertible.ToDouble(System.IFormatProvider)\"></xref>."}],"pos":[112864,112977],"yaml":true},{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Int32> instance is cast to an <xref:System.IConvertible> interface. The recommended alternative is to call the <xref:System.Convert.ToDouble%28System.Int32%29?displayProperty=fullName> method.","nodes":[{"pos":[0,294],"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Int32> instance is cast to an <xref:System.IConvertible> interface. The recommended alternative is to call the <xref:System.Convert.ToDouble%28System.Int32%29?displayProperty=fullName> method.","nodes":[{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Int32> instance is cast to an <xref:System.IConvertible> interface. The recommended alternative is to call the <xref:System.Convert.ToDouble%28System.Int32%29?displayProperty=fullName> method.","pos":[0,294],"nodes":[{"content":"This member is an explicit interface member implementation.","pos":[0,59]},{"content":"It can be used only when the <ph id=\"ph1\">&lt;xref:System.Int32&gt;</ph> instance is cast to an <ph id=\"ph2\">&lt;xref:System.IConvertible&gt;</ph> interface.","pos":[60,169],"source":" It can be used only when the <xref:System.Int32> instance is cast to an <xref:System.IConvertible> interface."},{"content":"The recommended alternative is to call the <ph id=\"ph1\">&lt;xref:System.Convert.ToDouble%28System.Int32%29?displayProperty=fullName&gt;</ph> method.","pos":[170,294],"source":" The recommended alternative is to call the <xref:System.Convert.ToDouble%28System.Int32%29?displayProperty=fullName> method."}]}]}],"pos":[112988,113283],"yaml":true,"extradata":"MT"},{"content":"This parameter is ignored.","nodes":[{"pos":[0,26],"content":"This parameter is ignored.","nodes":[{"content":"This parameter is ignored.","pos":[0,26]}]}],"pos":[113452,113479],"yaml":true},{"content":"The value of the current instance, converted to a <xref href=\"System.Double\"></xref>.","nodes":[{"pos":[0,85],"content":"The value of the current instance, converted to a <ph id=\"ph1\">&lt;xref href=\"System.Double\"&gt;&lt;/xref&gt;</ph>.","source":"The value of the current instance, converted to a <xref href=\"System.Double\"></xref>."}],"pos":[113536,113622],"yaml":true},{"content":"For a description of this member, see <xref href=\"System.IConvertible.ToInt16(System.IFormatProvider)\"></xref>.","nodes":[{"pos":[0,111],"content":"For a description of this member, see <ph id=\"ph1\">&lt;xref href=\"System.IConvertible.ToInt16(System.IFormatProvider)\"&gt;&lt;/xref&gt;</ph>.","source":"For a description of this member, see <xref href=\"System.IConvertible.ToInt16(System.IFormatProvider)\"></xref>."}],"pos":[115164,115276],"yaml":true},{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Int32> instance is cast to an <xref:System.IConvertible> interface. The recommended alternative is to call the <xref:System.Convert.ToInt16%28System.Int32%29?displayProperty=fullName> method.","nodes":[{"pos":[0,293],"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Int32> instance is cast to an <xref:System.IConvertible> interface. The recommended alternative is to call the <xref:System.Convert.ToInt16%28System.Int32%29?displayProperty=fullName> method.","nodes":[{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Int32> instance is cast to an <xref:System.IConvertible> interface. The recommended alternative is to call the <xref:System.Convert.ToInt16%28System.Int32%29?displayProperty=fullName> method.","pos":[0,293],"nodes":[{"content":"This member is an explicit interface member implementation.","pos":[0,59]},{"content":"It can be used only when the <ph id=\"ph1\">&lt;xref:System.Int32&gt;</ph> instance is cast to an <ph id=\"ph2\">&lt;xref:System.IConvertible&gt;</ph> interface.","pos":[60,169],"source":" It can be used only when the <xref:System.Int32> instance is cast to an <xref:System.IConvertible> interface."},{"content":"The recommended alternative is to call the <ph id=\"ph1\">&lt;xref:System.Convert.ToInt16%28System.Int32%29?displayProperty=fullName&gt;</ph> method.","pos":[170,293],"source":" The recommended alternative is to call the <xref:System.Convert.ToInt16%28System.Int32%29?displayProperty=fullName> method."}]}]}],"pos":[115287,115581],"yaml":true,"extradata":"MT"},{"content":"This parameter is ignored.","nodes":[{"pos":[0,26],"content":"This parameter is ignored.","nodes":[{"content":"This parameter is ignored.","pos":[0,26]}]}],"pos":[115748,115775],"yaml":true},{"content":"The value of the current instance, converted to an <xref href=\"System.Int16\"></xref>.","nodes":[{"pos":[0,85],"content":"The value of the current instance, converted to an <ph id=\"ph1\">&lt;xref href=\"System.Int16\"&gt;&lt;/xref&gt;</ph>.","source":"The value of the current instance, converted to an <xref href=\"System.Int16\"></xref>."}],"pos":[115831,115917],"yaml":true},{"content":"For a description of this member, see <xref href=\"System.IConvertible.ToInt32(System.IFormatProvider)\"></xref>.","nodes":[{"pos":[0,111],"content":"For a description of this member, see <ph id=\"ph1\">&lt;xref href=\"System.IConvertible.ToInt32(System.IFormatProvider)\"&gt;&lt;/xref&gt;</ph>.","source":"For a description of this member, see <xref href=\"System.IConvertible.ToInt32(System.IFormatProvider)\"></xref>."}],"pos":[117458,117570],"yaml":true},{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Int32> instance is cast to an <xref:System.IConvertible> interface.","nodes":[{"pos":[0,169],"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Int32> instance is cast to an <xref:System.IConvertible> interface.","nodes":[{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Int32> instance is cast to an <xref:System.IConvertible> interface.","pos":[0,169],"nodes":[{"content":"This member is an explicit interface member implementation.","pos":[0,59]},{"content":"It can be used only when the <ph id=\"ph1\">&lt;xref:System.Int32&gt;</ph> instance is cast to an <ph id=\"ph2\">&lt;xref:System.IConvertible&gt;</ph> interface.","pos":[60,169],"source":" It can be used only when the <xref:System.Int32> instance is cast to an <xref:System.IConvertible> interface."}]}]}],"pos":[117581,117751],"yaml":true,"extradata":"MT"},{"content":"This parameter is ignored.","nodes":[{"pos":[0,26],"content":"This parameter is ignored.","nodes":[{"content":"This parameter is ignored.","pos":[0,26]}]}],"pos":[117916,117943],"yaml":true},{"content":"The value of the current instance, unchanged.","nodes":[{"pos":[0,45],"content":"The value of the current instance, unchanged.","nodes":[{"content":"The value of the current instance, unchanged.","pos":[0,45]}]}],"pos":[117999,118045],"yaml":true},{"content":"For a description of this member, see <xref href=\"System.IConvertible.ToInt64(System.IFormatProvider)\"></xref>.","nodes":[{"pos":[0,111],"content":"For a description of this member, see <ph id=\"ph1\">&lt;xref href=\"System.IConvertible.ToInt64(System.IFormatProvider)\"&gt;&lt;/xref&gt;</ph>.","source":"For a description of this member, see <xref href=\"System.IConvertible.ToInt64(System.IFormatProvider)\"></xref>."}],"pos":[119586,119698],"yaml":true},{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Int32> instance is cast to an <xref:System.IConvertible> interface. The recommended alternative is to call the <xref:System.Convert.ToInt64%28System.Int32%29?displayProperty=fullName> method.","nodes":[{"pos":[0,293],"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Int32> instance is cast to an <xref:System.IConvertible> interface. The recommended alternative is to call the <xref:System.Convert.ToInt64%28System.Int32%29?displayProperty=fullName> method.","nodes":[{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Int32> instance is cast to an <xref:System.IConvertible> interface. The recommended alternative is to call the <xref:System.Convert.ToInt64%28System.Int32%29?displayProperty=fullName> method.","pos":[0,293],"nodes":[{"content":"This member is an explicit interface member implementation.","pos":[0,59]},{"content":"It can be used only when the <ph id=\"ph1\">&lt;xref:System.Int32&gt;</ph> instance is cast to an <ph id=\"ph2\">&lt;xref:System.IConvertible&gt;</ph> interface.","pos":[60,169],"source":" It can be used only when the <xref:System.Int32> instance is cast to an <xref:System.IConvertible> interface."},{"content":"The recommended alternative is to call the <ph id=\"ph1\">&lt;xref:System.Convert.ToInt64%28System.Int32%29?displayProperty=fullName&gt;</ph> method.","pos":[170,293],"source":" The recommended alternative is to call the <xref:System.Convert.ToInt64%28System.Int32%29?displayProperty=fullName> method."}]}]}],"pos":[119709,120003],"yaml":true,"extradata":"MT"},{"content":"This parameter is ignored.","nodes":[{"pos":[0,26],"content":"This parameter is ignored.","nodes":[{"content":"This parameter is ignored.","pos":[0,26]}]}],"pos":[120169,120196],"yaml":true},{"content":"The value of the current instance, converted to an <xref href=\"System.Int64\"></xref>.","nodes":[{"pos":[0,85],"content":"The value of the current instance, converted to an <ph id=\"ph1\">&lt;xref href=\"System.Int64\"&gt;&lt;/xref&gt;</ph>.","source":"The value of the current instance, converted to an <xref href=\"System.Int64\"></xref>."}],"pos":[120252,120338],"yaml":true},{"content":"For a description of this member, see <xref href=\"System.IConvertible.ToSByte(System.IFormatProvider)\"></xref>.","nodes":[{"pos":[0,111],"content":"For a description of this member, see <ph id=\"ph1\">&lt;xref href=\"System.IConvertible.ToSByte(System.IFormatProvider)\"&gt;&lt;/xref&gt;</ph>.","source":"For a description of this member, see <xref href=\"System.IConvertible.ToSByte(System.IFormatProvider)\"></xref>."}],"pos":[121879,121991],"yaml":true},{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Int32> instance is cast to an <xref:System.IConvertible> interface. The recommended alternative is to call the <xref:System.Convert.ToSByte%28System.Int32%29?displayProperty=fullName> method.","nodes":[{"pos":[0,293],"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Int32> instance is cast to an <xref:System.IConvertible> interface. The recommended alternative is to call the <xref:System.Convert.ToSByte%28System.Int32%29?displayProperty=fullName> method.","nodes":[{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Int32> instance is cast to an <xref:System.IConvertible> interface. The recommended alternative is to call the <xref:System.Convert.ToSByte%28System.Int32%29?displayProperty=fullName> method.","pos":[0,293],"nodes":[{"content":"This member is an explicit interface member implementation.","pos":[0,59]},{"content":"It can be used only when the <ph id=\"ph1\">&lt;xref:System.Int32&gt;</ph> instance is cast to an <ph id=\"ph2\">&lt;xref:System.IConvertible&gt;</ph> interface.","pos":[60,169],"source":" It can be used only when the <xref:System.Int32> instance is cast to an <xref:System.IConvertible> interface."},{"content":"The recommended alternative is to call the <ph id=\"ph1\">&lt;xref:System.Convert.ToSByte%28System.Int32%29?displayProperty=fullName&gt;</ph> method.","pos":[170,293],"source":" The recommended alternative is to call the <xref:System.Convert.ToSByte%28System.Int32%29?displayProperty=fullName> method."}]}]}],"pos":[122002,122296],"yaml":true,"extradata":"MT"},{"content":"This parameter is ignored.","nodes":[{"pos":[0,26],"content":"This parameter is ignored.","nodes":[{"content":"This parameter is ignored.","pos":[0,26]}]}],"pos":[122463,122490],"yaml":true},{"content":"The value of the current instance, converted to an <xref href=\"System.SByte\"></xref>.","nodes":[{"pos":[0,85],"content":"The value of the current instance, converted to an <ph id=\"ph1\">&lt;xref href=\"System.SByte\"&gt;&lt;/xref&gt;</ph>.","source":"The value of the current instance, converted to an <xref href=\"System.SByte\"></xref>."}],"pos":[122546,122632],"yaml":true},{"content":"For a description of this member, see <xref href=\"System.IConvertible.ToSingle(System.IFormatProvider)\"></xref>.","nodes":[{"pos":[0,112],"content":"For a description of this member, see <ph id=\"ph1\">&lt;xref href=\"System.IConvertible.ToSingle(System.IFormatProvider)\"&gt;&lt;/xref&gt;</ph>.","source":"For a description of this member, see <xref href=\"System.IConvertible.ToSingle(System.IFormatProvider)\"></xref>."}],"pos":[124179,124292],"yaml":true},{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Int32> instance is cast to an <xref:System.IConvertible> interface. The recommended alternative is to call the <xref:System.Convert.ToSingle%28System.Int32%29?displayProperty=fullName> method.","nodes":[{"pos":[0,294],"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Int32> instance is cast to an <xref:System.IConvertible> interface. The recommended alternative is to call the <xref:System.Convert.ToSingle%28System.Int32%29?displayProperty=fullName> method.","nodes":[{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Int32> instance is cast to an <xref:System.IConvertible> interface. The recommended alternative is to call the <xref:System.Convert.ToSingle%28System.Int32%29?displayProperty=fullName> method.","pos":[0,294],"nodes":[{"content":"This member is an explicit interface member implementation.","pos":[0,59]},{"content":"It can be used only when the <ph id=\"ph1\">&lt;xref:System.Int32&gt;</ph> instance is cast to an <ph id=\"ph2\">&lt;xref:System.IConvertible&gt;</ph> interface.","pos":[60,169],"source":" It can be used only when the <xref:System.Int32> instance is cast to an <xref:System.IConvertible> interface."},{"content":"The recommended alternative is to call the <ph id=\"ph1\">&lt;xref:System.Convert.ToSingle%28System.Int32%29?displayProperty=fullName&gt;</ph> method.","pos":[170,294],"source":" The recommended alternative is to call the <xref:System.Convert.ToSingle%28System.Int32%29?displayProperty=fullName> method."}]}]}],"pos":[124303,124598],"yaml":true,"extradata":"MT"},{"content":"This parameter is ignored.","nodes":[{"pos":[0,26],"content":"This parameter is ignored.","nodes":[{"content":"This parameter is ignored.","pos":[0,26]}]}],"pos":[124766,124793],"yaml":true},{"content":"The value of the current instance, converted to a <xref href=\"System.Single\"></xref>.","nodes":[{"pos":[0,85],"content":"The value of the current instance, converted to a <ph id=\"ph1\">&lt;xref href=\"System.Single\"&gt;&lt;/xref&gt;</ph>.","source":"The value of the current instance, converted to a <xref href=\"System.Single\"></xref>."}],"pos":[124850,124936],"yaml":true},{"content":"For a description of this member, see <xref href=\"System.IConvertible.ToType(System.Type,System.IFormatProvider)\"></xref>.","nodes":[{"pos":[0,122],"content":"For a description of this member, see <ph id=\"ph1\">&lt;xref href=\"System.IConvertible.ToType(System.Type,System.IFormatProvider)\"&gt;&lt;/xref&gt;</ph>.","source":"For a description of this member, see <xref href=\"System.IConvertible.ToType(System.Type,System.IFormatProvider)\"></xref>."}],"pos":[126526,126649],"yaml":true},{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Int32> instance is cast to an <xref:System.IConvertible> interface. The recommended alternative is to call the `static` (`Shared` in Visual Basic) <xref:System.Convert.ChangeType%2A?displayProperty=fullName> method instead.","nodes":[{"pos":[0,325],"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Int32> instance is cast to an <xref:System.IConvertible> interface. The recommended alternative is to call the `static` (`Shared` in Visual Basic) <xref:System.Convert.ChangeType%2A?displayProperty=fullName> method instead.","nodes":[{"content":"This member is an explicit interface member implementation.","pos":[0,59]},{"content":"It can be used only when the <ph id=\"ph1\">&lt;xref:System.Int32&gt;</ph> instance is cast to an <ph id=\"ph2\">&lt;xref:System.IConvertible&gt;</ph> interface.","pos":[60,169],"source":" It can be used only when the <xref:System.Int32> instance is cast to an <xref:System.IConvertible> interface."},{"content":"The recommended alternative is to call the <ph id=\"ph1\">`static`</ph> (<ph id=\"ph2\">`Shared`</ph> in Visual Basic) <ph id=\"ph3\">&lt;xref:System.Convert.ChangeType%2A?displayProperty=fullName&gt;</ph> method instead.","pos":[170,325],"source":" The recommended alternative is to call the `static` (`Shared` in Visual Basic) <xref:System.Convert.ChangeType%2A?displayProperty=fullName> method instead."}]}],"pos":[126660,126986],"yaml":true,"extradata":"MT"},{"content":"The type to which to convert this <xref href=\"System.Int32\"></xref> value.","nodes":[{"pos":[0,74],"content":"The type to which to convert this <ph id=\"ph1\">&lt;xref href=\"System.Int32\"&gt;&lt;/xref&gt;</ph> value.","source":"The type to which to convert this <xref href=\"System.Int32\"></xref> value."}],"pos":[127149,127224],"yaml":true},{"content":"An object that provides information about the format of the returned value.","nodes":[{"pos":[0,75],"content":"An object that provides information about the format of the returned value.","nodes":[{"content":"An object that provides information about the format of the returned value.","pos":[0,75]}]}],"pos":[127297,127373],"yaml":true},{"content":"The value of the current instance, converted to <code>type</code>.","nodes":[{"pos":[0,66],"content":"The value of the current instance, converted to <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">type</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"The value of the current instance, converted to <code>type</code>."}],"pos":[127430,127497],"yaml":true},{"content":"For a description of this member, see <xref href=\"System.IConvertible.ToUInt16(System.IFormatProvider)\"></xref>.","nodes":[{"pos":[0,112],"content":"For a description of this member, see <ph id=\"ph1\">&lt;xref href=\"System.IConvertible.ToUInt16(System.IFormatProvider)\"&gt;&lt;/xref&gt;</ph>.","source":"For a description of this member, see <xref href=\"System.IConvertible.ToUInt16(System.IFormatProvider)\"></xref>."}],"pos":[129043,129156],"yaml":true},{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Int32> instance is cast to an <xref:System.IConvertible> interface. The recommended alternative is to call the <xref:System.Convert.ToUInt16%28System.Int32%29?displayProperty=fullName> method.","nodes":[{"pos":[0,294],"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Int32> instance is cast to an <xref:System.IConvertible> interface. The recommended alternative is to call the <xref:System.Convert.ToUInt16%28System.Int32%29?displayProperty=fullName> method.","nodes":[{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Int32> instance is cast to an <xref:System.IConvertible> interface. The recommended alternative is to call the <xref:System.Convert.ToUInt16%28System.Int32%29?displayProperty=fullName> method.","pos":[0,294],"nodes":[{"content":"This member is an explicit interface member implementation.","pos":[0,59]},{"content":"It can be used only when the <ph id=\"ph1\">&lt;xref:System.Int32&gt;</ph> instance is cast to an <ph id=\"ph2\">&lt;xref:System.IConvertible&gt;</ph> interface.","pos":[60,169],"source":" It can be used only when the <xref:System.Int32> instance is cast to an <xref:System.IConvertible> interface."},{"content":"The recommended alternative is to call the <ph id=\"ph1\">&lt;xref:System.Convert.ToUInt16%28System.Int32%29?displayProperty=fullName&gt;</ph> method.","pos":[170,294],"source":" The recommended alternative is to call the <xref:System.Convert.ToUInt16%28System.Int32%29?displayProperty=fullName> method."}]}]}],"pos":[129167,129462],"yaml":true,"extradata":"MT"},{"content":"This parameter is ignored.","nodes":[{"pos":[0,26],"content":"This parameter is ignored.","nodes":[{"content":"This parameter is ignored.","pos":[0,26]}]}],"pos":[129631,129658],"yaml":true},{"content":"The value of the current instance, converted to a <xref href=\"System.UInt16\"></xref>.","nodes":[{"pos":[0,85],"content":"The value of the current instance, converted to a <ph id=\"ph1\">&lt;xref href=\"System.UInt16\"&gt;&lt;/xref&gt;</ph>.","source":"The value of the current instance, converted to a <xref href=\"System.UInt16\"></xref>."}],"pos":[129715,129801],"yaml":true},{"content":"For a description of this member, see <xref href=\"System.IConvertible.ToUInt32(System.IFormatProvider)\"></xref>.","nodes":[{"pos":[0,112],"content":"For a description of this member, see <ph id=\"ph1\">&lt;xref href=\"System.IConvertible.ToUInt32(System.IFormatProvider)\"&gt;&lt;/xref&gt;</ph>.","source":"For a description of this member, see <xref href=\"System.IConvertible.ToUInt32(System.IFormatProvider)\"></xref>."}],"pos":[131349,131462],"yaml":true},{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Int32> instance is cast to an <xref:System.IConvertible> interface. The recommended alternative is to call the <xref:System.Convert.ToUInt32%28System.Int32%29?displayProperty=fullName> method.","nodes":[{"pos":[0,294],"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Int32> instance is cast to an <xref:System.IConvertible> interface. The recommended alternative is to call the <xref:System.Convert.ToUInt32%28System.Int32%29?displayProperty=fullName> method.","nodes":[{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Int32> instance is cast to an <xref:System.IConvertible> interface. The recommended alternative is to call the <xref:System.Convert.ToUInt32%28System.Int32%29?displayProperty=fullName> method.","pos":[0,294],"nodes":[{"content":"This member is an explicit interface member implementation.","pos":[0,59]},{"content":"It can be used only when the <ph id=\"ph1\">&lt;xref:System.Int32&gt;</ph> instance is cast to an <ph id=\"ph2\">&lt;xref:System.IConvertible&gt;</ph> interface.","pos":[60,169],"source":" It can be used only when the <xref:System.Int32> instance is cast to an <xref:System.IConvertible> interface."},{"content":"The recommended alternative is to call the <ph id=\"ph1\">&lt;xref:System.Convert.ToUInt32%28System.Int32%29?displayProperty=fullName&gt;</ph> method.","pos":[170,294],"source":" The recommended alternative is to call the <xref:System.Convert.ToUInt32%28System.Int32%29?displayProperty=fullName> method."}]}]}],"pos":[131473,131768],"yaml":true,"extradata":"MT"},{"content":"This parameter is ignored.","nodes":[{"pos":[0,26],"content":"This parameter is ignored.","nodes":[{"content":"This parameter is ignored.","pos":[0,26]}]}],"pos":[131935,131962],"yaml":true},{"content":"The value of the current instance, converted to a <xref href=\"System.UInt32\"></xref>.","nodes":[{"pos":[0,85],"content":"The value of the current instance, converted to a <ph id=\"ph1\">&lt;xref href=\"System.UInt32\"&gt;&lt;/xref&gt;</ph>.","source":"The value of the current instance, converted to a <xref href=\"System.UInt32\"></xref>."}],"pos":[132019,132105],"yaml":true},{"content":"For a description of this member, see <xref href=\"System.IConvertible.ToUInt64(System.IFormatProvider)\"></xref>.","nodes":[{"pos":[0,112],"content":"For a description of this member, see <ph id=\"ph1\">&lt;xref href=\"System.IConvertible.ToUInt64(System.IFormatProvider)\"&gt;&lt;/xref&gt;</ph>.","source":"For a description of this member, see <xref href=\"System.IConvertible.ToUInt64(System.IFormatProvider)\"></xref>."}],"pos":[133653,133766],"yaml":true},{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Int32> instance is cast to an <xref:System.IConvertible> interface. The recommended alternative is to call the <xref:System.Convert.ToUInt64%28System.Int32%29?displayProperty=fullName> method.","nodes":[{"pos":[0,294],"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Int32> instance is cast to an <xref:System.IConvertible> interface. The recommended alternative is to call the <xref:System.Convert.ToUInt64%28System.Int32%29?displayProperty=fullName> method.","nodes":[{"content":"This member is an explicit interface member implementation. It can be used only when the <xref:System.Int32> instance is cast to an <xref:System.IConvertible> interface. The recommended alternative is to call the <xref:System.Convert.ToUInt64%28System.Int32%29?displayProperty=fullName> method.","pos":[0,294],"nodes":[{"content":"This member is an explicit interface member implementation.","pos":[0,59]},{"content":"It can be used only when the <ph id=\"ph1\">&lt;xref:System.Int32&gt;</ph> instance is cast to an <ph id=\"ph2\">&lt;xref:System.IConvertible&gt;</ph> interface.","pos":[60,169],"source":" It can be used only when the <xref:System.Int32> instance is cast to an <xref:System.IConvertible> interface."},{"content":"The recommended alternative is to call the <ph id=\"ph1\">&lt;xref:System.Convert.ToUInt64%28System.Int32%29?displayProperty=fullName&gt;</ph> method.","pos":[170,294],"source":" The recommended alternative is to call the <xref:System.Convert.ToUInt64%28System.Int32%29?displayProperty=fullName> method."}]}]}],"pos":[133777,134072],"yaml":true,"extradata":"MT"},{"content":"This parameter is ignored.","nodes":[{"pos":[0,26],"content":"This parameter is ignored.","nodes":[{"content":"This parameter is ignored.","pos":[0,26]}]}],"pos":[134240,134267],"yaml":true},{"content":"The value of the current instance, converted to a <xref href=\"System.UInt64\"></xref>.","nodes":[{"pos":[0,85],"content":"The value of the current instance, converted to a <ph id=\"ph1\">&lt;xref href=\"System.UInt64\"&gt;&lt;/xref&gt;</ph>.","source":"The value of the current instance, converted to a <xref href=\"System.UInt64\"></xref>."}],"pos":[134324,134410],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Int32\n  commentId: T:System.Int32\n  id: Int32\n  children:\n  - System.Int32.CompareTo(System.Int32)\n  - System.Int32.CompareTo(System.Object)\n  - System.Int32.Equals(System.Int32)\n  - System.Int32.Equals(System.Object)\n  - System.Int32.GetHashCode\n  - System.Int32.GetTypeCode\n  - System.Int32.MaxValue\n  - System.Int32.MinValue\n  - System.Int32.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)\n  - System.Int32.Parse(System.String,System.IFormatProvider)\n  - System.Int32.Parse(System.String)\n  - System.Int32.Parse(System.String,System.Globalization.NumberStyles)\n  - System.Int32.ToString\n  - System.Int32.ToString(System.String,System.IFormatProvider)\n  - System.Int32.ToString(System.String)\n  - System.Int32.ToString(System.IFormatProvider)\n  - System.Int32.TryParse(System.String,System.Int32@)\n  - System.Int32.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Int32@)\n  - System.Int32.System#IComparable#CompareTo(System.Object)\n  - System.Int32.System#IConvertible#GetTypeCode\n  - System.Int32.System#IConvertible#ToBoolean(System.IFormatProvider)\n  - System.Int32.System#IConvertible#ToByte(System.IFormatProvider)\n  - System.Int32.System#IConvertible#ToChar(System.IFormatProvider)\n  - System.Int32.System#IConvertible#ToDateTime(System.IFormatProvider)\n  - System.Int32.System#IConvertible#ToDecimal(System.IFormatProvider)\n  - System.Int32.System#IConvertible#ToDouble(System.IFormatProvider)\n  - System.Int32.System#IConvertible#ToInt16(System.IFormatProvider)\n  - System.Int32.System#IConvertible#ToInt32(System.IFormatProvider)\n  - System.Int32.System#IConvertible#ToInt64(System.IFormatProvider)\n  - System.Int32.System#IConvertible#ToSByte(System.IFormatProvider)\n  - System.Int32.System#IConvertible#ToSingle(System.IFormatProvider)\n  - System.Int32.System#IConvertible#ToType(System.Type,System.IFormatProvider)\n  - System.Int32.System#IConvertible#ToUInt16(System.IFormatProvider)\n  - System.Int32.System#IConvertible#ToUInt32(System.IFormatProvider)\n  - System.Int32.System#IConvertible#ToUInt64(System.IFormatProvider)\n  langs:\n  - csharp\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n  type: Struct\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Represents a 32-bit signed integer.\n  remarks: \"> [!NOTE]\\n>  To view the .NET Framework source code for this type, see the [Reference Source](http://referencesource.microsoft.com/#mscorlib/system/int32.cs#225942ed7b7a3252). You can browse through the source code online, download the reference for offline viewing, and step through the sources (including patches and updates) during debugging; see [instructions](http://referencesource.microsoft.com/).  \\n  \\n <xref:System.Int32> is an immutable value type that represents signed integers with values that range from negative 2,147,483,648 (which is represented by the <xref:System.Int32.MinValue?displayProperty=fullName> constant) through positive 2,147,483,647 (which is represented by the <xref:System.Int32.MaxValue?displayProperty=fullName> constant. The .NET Framework also includes an unsigned 32-bit integer value type, <xref:System.UInt32>, which represents values that range from 0 to 4,294,967,295.  \\n  \\n## Instantiating an Int32 Value  \\n You can instantiate an <xref:System.Int32> value in several ways:  \\n  \\n-   You can declare an <xref:System.Int32> variable and assign it a literal integer value that is within the range of the <xref:System.Int32> data type. The following example declares two <xref:System.Int32> variables and assigns them values in this way.  \\n  \\n     [!code-csharp[System.Int32.Instantiation#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Int32.Instantiation/cs/Instantiate1.cs#1)]\\n     [!code-vb[System.Int32.Instantiation#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Int32.Instantiation/vb/Instantiate1.vb#1)]  \\n  \\n-   You can assign the value of an integer type whose range is a subset of the <xref:System.Int32> type. This is a widening conversion that does not require a cast operator in C# or a conversion method in Visual Basic.  \\n  \\n     [!code-csharp[System.Int32.Instantiation#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Int32.Instantiation/cs/Instantiate1.cs#4)]\\n     [!code-vb[System.Int32.Instantiation#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Int32.Instantiation/vb/Instantiate1.vb#4)]  \\n  \\n-   You can assign the value of a numeric type whose range exceeds that of the <xref:System.Int32> type. This is a narrowing conversion, so it requires a cast operator in C# and a conversion method in Visual Basic if `Option Strict` is on. If the numeric value is a <xref:System.Single>, <xref:System.Double>, or <xref:System.Decimal> value that includes a fractional component, the handling of its fractional part depends on the compiler performing the conversion. The following example performs narrowing conversions to assign several numeric values to <xref:System.Int32> variables.  \\n  \\n     [!code-csharp[System.Int32.Instantiation#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Int32.Instantiation/cs/Instantiate1.cs#2)]\\n     [!code-vb[System.Int32.Instantiation#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Int32.Instantiation/vb/Instantiate1.vb#2)]  \\n  \\n-   You can call a method of the <xref:System.Convert> class to convert any supported type to an <xref:System.Int32> value. This is possible because <xref:System.Int32> supports the <xref:System.IConvertible> interface. The following example illustrates the conversion of an array of <xref:System.Decimal> values to <xref:System.Int32> values.  \\n  \\n     [!code-csharp[System.Convert.ToInt32#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.toint32/cs/toint32_1.cs#4)]\\n     [!code-vb[System.Convert.ToInt32#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.toint32/vb/toint32_1.vb#4)]  \\n  \\n-   You can call the <xref:System.Int32.Parse%2A> or <xref:System.Int32.TryParse%2A> method to convert the string representation of an <xref:System.Int32> value to an <xref:System.Int32>. The string can contain either decimal or hexadecimal digits. The following example illustrates the parse operation by using both a decimal and a hexadecimal string.  \\n  \\n     [!code-csharp[System.Int32.Instantiation#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Int32.Instantiation/cs/Instantiate1.cs#3)]\\n     [!code-vb[System.Int32.Instantiation#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Int32.Instantiation/vb/Instantiate1.vb#3)]  \\n  \\n## Performing Operations on Int32 Values  \\n The <xref:System.Int32> type supports standard mathematical operations such as addition, subtraction, division, multiplication, negation, and unary negation. Like the other integral types, the <xref:System.Int32> type also supports the bitwise `AND`, `OR`, `XOR`, left shift, and right shift operators.  \\n  \\n You can use the standard numeric operators to compare two <xref:System.Int32> values, or you can call the <xref:System.Int32.CompareTo%2A> or <xref:System.Int32.Equals%2A> method.  \\n  \\n You can also call the members of the <xref:System.Math> class to perform a wide range of numeric operations, including getting the absolute value of a number, calculating the quotient and remainder from integral division, determining the maximum or minimum value of two integers, getting the sign of a number, and rounding a number.  \\n  \\n## Representing an Int32 as a String  \\n The <xref:System.Int32> type provides full support for standard and custom numeric format strings. (For more information, see [Formatting Types](~/docs/standard/base-types/formatting-types.md), [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md), and [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md).)  \\n  \\n To format an <xref:System.Int32> value as an integral string with no leading zeros, you can call the parameterless <xref:System.Int32.ToString> method. By using the \\\"D\\\" format specifier, you can also include a specified number of leading zeros in the string representation. By using the \\\"N\\\" format specifier, you can include group separators and specify the number of decimal digits to appear in the string representation of the number. By using the \\\"X\\\" format specifier, you can represent an <xref:System.Int32> value as a hexadecimal string. The following example formats the elements in an array of <xref:System.Int32> values in these four ways.  \\n  \\n [!code-csharp[System.Int32.Formatting#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Int32.Formatting/cs/Formatting1.cs#1)]\\n [!code-vb[System.Int32.Formatting#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Int32.Formatting/vb/Formatting1.vb#1)]  \\n  \\n You can also format an <xref:System.Int32> value as a binary, octal, decimal, or hexadecimal string by calling the <xref:System.Convert.ToString%28System.Int32%2CSystem.Int32%29> method and supplying the base as the method's second parameter. The following example calls this method to display the binary, octal, and hexadecimal representations of an array of integer values.  \\n  \\n [!code-csharp[System.Int32.Formatting#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Int32.Formatting/cs/Formatting1.cs#2)]\\n [!code-vb[System.Int32.Formatting#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Int32.Formatting/vb/Formatting1.vb#2)]  \\n  \\n## Working with Non-Decimal 32-Bit Integer Values  \\n In addition to working with individual integers as decimal values, you may want to perform bitwise operations with integer values, or work with the binary or hexadecimal representations of integer values. <xref:System.Int32> values are represented in 31 bits, with the thirty-second bit used as a sign bit. Positive values are represented by using sign-and-magnitude representation. Negative values are in two's complement representation. This is important to keep in mind when you perform bitwise operations on <xref:System.Int32> values or when you work with individual bits. In order to perform a numeric, Boolean, or comparison operation on any two non-decimal values, both values must use the same representation.\"\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public struct Int32 : IComparable, IComparable<int>, IConvertible, IEquatable<int>, IFormattable\n  inheritance:\n  - System.Object\n  - System.ValueType\n  implements:\n  - System.IComparable\n  - System.IComparable{System.Int32}\n  - System.IConvertible\n  - System.IEquatable{System.Int32}\n  - System.IFormattable\n  attributes:\n  - type: System.Runtime.InteropServices.ComVisibleAttribute\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Int32.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Int32.CompareTo(System.Int32)\n  commentId: M:System.Int32.CompareTo(System.Int32)\n  id: CompareTo(System.Int32)\n  parent: System.Int32\n  langs:\n  - csharp\n  name: CompareTo(Int32)\n  nameWithType: Int32.CompareTo(Int32)\n  fullName: Int32.CompareTo(Int32)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Compares this instance to a specified 32-bit signed integer and returns an indication of their relative values.\n  remarks: \"This method implements the <xref:System.IComparable%601?displayProperty=fullName> interface and performs slightly better than the <xref:System.Int32.CompareTo%2A?displayProperty=fullName> method because it does not have to convert the `value` parameter to an object.  \\n  \\n Depending on your programming language, it might be possible to code a <xref:System.Int32.CompareTo%2A> method where the parameter type has fewer bits (is narrower) than the instance type. This is possible because some programming languages perform an implicit widening conversion that represents the parameter as a type with as many bits as the instance.  \\n  \\n For example, suppose the instance type is <xref:System.Int32> and the parameter type is <xref:System.Byte>. The Microsoft C# compiler generates instructions to represent the value of the parameter as an <xref:System.Int32>, then generates a <xref:System.Int32.CompareTo%2A?displayProperty=fullName> method that compares the values of the <xref:System.Int32> instance and the <xref:System.Int32> parameter representation.  \\n  \\n Consult your programming language's documentation to determine whether its compiler performs implicit widening conversions on numeric types.\"\n  example:\n  - \"The following example demonstrates the <xref:System.Int32.CompareTo%28System.Int32%29?displayProperty=fullName> method. In addition to displaying the value returned by the method for four different comparisons, it converts the return value to a member of the custom `Comparison` enumeration, whose value it also displays.  \\n  \\n [!code-csharp[System.Int32.CompareTo#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Int32.CompareTo/cs/CompareTo1.cs#1)]\\n [!code-vb[System.Int32.CompareTo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Int32.CompareTo/vb/CompareTo1.vb#1)]\"\n  syntax:\n    content: public int CompareTo (int value);\n    parameters:\n    - id: value\n      type: System.Int32\n      description: An integer to compare.\n    return:\n      type: System.Int32\n      description: \"A signed number indicating the relative values of this instance and <code>value</code>.  \\n  \\n <table><thead><tr><th> Return Value  \\n  \\n </th><th> Description  \\n  \\n </th></tr></thead><tbody><tr><td> Less than zero  \\n  \\n </td><td> This instance is less than <code>value</code>.  \\n  \\n </td></tr><tr><td> Zero  \\n  \\n </td><td> This instance is equal to <code>value</code>.  \\n  \\n </td></tr><tr><td> Greater than zero  \\n  \\n </td><td> This instance is greater than <code>value</code>.  \\n  \\n </td></tr></tbody></table>\"\n  overload: System.Int32.CompareTo*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Int32.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Int32.CompareTo(System.Object)\n  commentId: M:System.Int32.CompareTo(System.Object)\n  id: CompareTo(System.Object)\n  parent: System.Int32\n  langs:\n  - csharp\n  name: CompareTo(Object)\n  nameWithType: Int32.CompareTo(Object)\n  fullName: Int32.CompareTo(Object)\n  type: Method\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System\n  summary: Compares this instance to a specified object and returns an indication of their relative values.\n  remarks: \"Any instance of <xref:System.Int32>, regardless of its value, is considered greater than `null`.  \\n  \\n `value` must be `null` or an instance of <xref:System.Int32>; otherwise, an exception is thrown.\"\n  syntax:\n    content: public int CompareTo (object value);\n    parameters:\n    - id: value\n      type: System.Object\n      description: An object to compare, or `null`.\n    return:\n      type: System.Int32\n      description: \"A signed number indicating the relative values of this instance and <code>value</code>.  \\n  \\n <table><thead><tr><th> Return Value  \\n  \\n </th><th> Description  \\n  \\n </th></tr></thead><tbody><tr><td> Less than zero  \\n  \\n </td><td> This instance is less than <code>value</code>.  \\n  \\n </td></tr><tr><td> Zero  \\n  \\n </td><td> This instance is equal to <code>value</code>.  \\n  \\n </td></tr><tr><td> Greater than zero  \\n  \\n </td><td> This instance is greater than <code>value</code>.  \\n  \\n -or-  \\n  \\n <code>value</code> is `null`.  \\n  \\n </td></tr></tbody></table>\"\n  overload: System.Int32.CompareTo*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>value</code> is not an <xref href=\"System.Int32\"></xref>.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Int32.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Int32.Equals(System.Int32)\n  commentId: M:System.Int32.Equals(System.Int32)\n  id: Equals(System.Int32)\n  parent: System.Int32\n  langs:\n  - csharp\n  name: Equals(Int32)\n  nameWithType: Int32.Equals(Int32)\n  fullName: Int32.Equals(Int32)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Returns a value indicating whether this instance is equal to a specified <xref href=\"System.Int32\"></xref> value.\n  remarks: This method implements the <xref:System.IEquatable%601?displayProperty=fullName> interface, and performs slightly better than <xref:System.Int32.Equals%28System.Object%29?displayProperty=fullName> because it does not have to convert the `obj` parameter to an object.\n  syntax:\n    content: public bool Equals (int obj);\n    parameters:\n    - id: obj\n      type: System.Int32\n      description: An <xref href=\"System.Int32\"></xref> value to compare to this instance.\n    return:\n      type: System.Boolean\n      description: '`true` if <code>obj</code> has the same value as this instance; otherwise, `false`.'\n  overload: System.Int32.Equals*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Int32.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Int32.Equals(System.Object)\n  commentId: M:System.Int32.Equals(System.Object)\n  id: Equals(System.Object)\n  parent: System.Int32\n  langs:\n  - csharp\n  name: Equals(Object)\n  nameWithType: Int32.Equals(Object)\n  fullName: Int32.Equals(Object)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Returns a value indicating whether this instance is equal to a specified object.\n  remarks: ''\n  example:\n  - \"The following example illustrates the use of `Equals` in the context of `Int32`, comparing two `int` values and returning `true` if they represent the same number, or `false` if they do not.  \\n  \\n [!code-cpp[Int32_Equals#1](~/samples/snippets/cpp/VS_Snippets_CLR/Int32_Equals/CPP/int32_equals.cpp#1)]\\n [!code-csharp[Int32_Equals#1](~/samples/snippets/csharp/VS_Snippets_CLR/Int32_Equals/CS/int32_equals.cs#1)]\\n [!code-vb[Int32_Equals#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Int32_Equals/VB/int32_equals.vb#1)]\"\n  syntax:\n    content: public override bool Equals (object obj);\n    parameters:\n    - id: obj\n      type: System.Object\n      description: An object to compare with this instance.\n    return:\n      type: System.Boolean\n      description: '`true` if <code>obj</code> is an instance of <xref href=\"System.Int32\"></xref> and equals the value of this instance; otherwise, `false`.'\n  overload: System.Int32.Equals*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Int32.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Int32.GetHashCode\n  commentId: M:System.Int32.GetHashCode\n  id: GetHashCode\n  parent: System.Int32\n  langs:\n  - csharp\n  name: GetHashCode()\n  nameWithType: Int32.GetHashCode()\n  fullName: Int32.GetHashCode()\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Returns the hash code for this instance.\n  syntax:\n    content: public override int GetHashCode ();\n    parameters: []\n    return:\n      type: System.Int32\n      description: A 32-bit signed integer hash code.\n  overload: System.Int32.GetHashCode*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Int32.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Int32.GetTypeCode\n  commentId: M:System.Int32.GetTypeCode\n  id: GetTypeCode\n  parent: System.Int32\n  langs:\n  - csharp\n  name: GetTypeCode()\n  nameWithType: Int32.GetTypeCode()\n  fullName: Int32.GetTypeCode()\n  type: Method\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System\n  summary: Returns the <xref href=\"System.TypeCode\"></xref> for value type <xref href=\"System.Int32\"></xref>.\n  syntax:\n    content: public TypeCode GetTypeCode ();\n    parameters: []\n    return:\n      type: System.TypeCode\n      description: The enumerated constant, <xref href=\"System.TypeCode.Int32\"></xref>.\n  overload: System.Int32.GetTypeCode*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Int32.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Int32.MaxValue\n  commentId: F:System.Int32.MaxValue\n  id: MaxValue\n  parent: System.Int32\n  langs:\n  - csharp\n  name: MaxValue\n  nameWithType: Int32.MaxValue\n  fullName: Int32.MaxValue\n  type: Field\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Represents the largest possible value of an <xref href=\"System.Int32\"></xref>. This field is constant.\n  remarks: The value of this constant is 2,147,483,647; that is, hexadecimal 0x7FFFFFFF.\n  example:\n  - \"The following example uses the <xref:System.Int32.MaxValue> property to prevent an <xref:System.OverflowException> when converting to an <xref:System.Int32> value.  \\n  \\n [!code-cpp[System.Int32.MaxValue#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.int32.maxvalue/cpp/maxvalue1.cpp#1)]\\n [!code-csharp[System.Int32.MaxValue#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.int32.maxvalue/cs/maxvalue1.cs#1)]\\n [!code-vb[System.Int32.MaxValue#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.int32.maxvalue/vb/maxvalue1.vb#1)]\"\n  syntax:\n    content: public const int MaxValue = 2147483647;\n    return:\n      type: System.Int32\n      description: ''\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Int32.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Int32.MinValue\n  commentId: F:System.Int32.MinValue\n  id: MinValue\n  parent: System.Int32\n  langs:\n  - csharp\n  name: MinValue\n  nameWithType: Int32.MinValue\n  fullName: Int32.MinValue\n  type: Field\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Represents the smallest possible value of <xref href=\"System.Int32\"></xref>. This field is constant.\n  remarks: The value of this constant is -2,147,483,648; that is, hexadecimal 0x80000000.\n  example:\n  - \"The following example uses the <xref:System.Int32.MinValue> property to prevent an <xref:System.OverflowException> when converting to an <xref:System.Int32> value.  \\n  \\n [!code-cpp[System.Int32.MaxValue#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.int32.maxvalue/cpp/maxvalue1.cpp#1)]\\n [!code-csharp[System.Int32.MaxValue#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.int32.maxvalue/cs/maxvalue1.cs#1)]\\n [!code-vb[System.Int32.MaxValue#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.int32.maxvalue/vb/maxvalue1.vb#1)]\"\n  syntax:\n    content: public const int MinValue = -2147483648;\n    return:\n      type: System.Int32\n      description: ''\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Int32.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Int32.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)\n  commentId: M:System.Int32.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)\n  id: Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)\n  parent: System.Int32\n  langs:\n  - csharp\n  name: Parse(String, NumberStyles, IFormatProvider)\n  nameWithType: Int32.Parse(String, NumberStyles, IFormatProvider)\n  fullName: Int32.Parse(String, NumberStyles, IFormatProvider)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Converts the string representation of a number in a specified style and culture-specific format to its 32-bit signed integer equivalent.\n  remarks: \"The `style` parameter defines the style elements (such as white space or the positive sign) that are allowed in the `s` parameter for the parse operation to succeed. It must be a combination of bit flags from the <xref:System.Globalization.NumberStyles> enumeration. Depending on the value of `style`, the `s` parameter may include the following elements:  \\n  \\n [ws][$][sign][digits,]digits[.fractional_digist][e[sign]exponential_digits][ws]  \\n  \\n Or, if `style` includes <xref:System.Globalization.NumberStyles.AllowHexSpecifier>:  \\n  \\n [ws]hexdigits[ws]  \\n  \\n Items in square brackets ([ and ]) are optional. The following table describes each element.  \\n  \\n|Element|Description|  \\n|-------------|-----------------|  \\n|*ws*|Optional white space. White space can appear at the beginning of `s` if `style` includes the <xref:System.Globalization.NumberStyles?displayProperty=fullName> flag, and it can appear at the end of `s` if `style` includes the <xref:System.Globalization.NumberStyles?displayProperty=fullName> flag.|  \\n|*$*|A culture-specific currency symbol. Its position in the string is defined by the <xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A?displayProperty=fullName> property of the <xref:System.Globalization.NumberFormatInfo> object returned by the <xref:System.IFormatProvider.GetFormat%2A> method of the `provider` parameter. The currency symbol can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles?displayProperty=fullName> flag.|  \\n|*sign*|An optional sign. The sign can appear at the beginning of `s` if `style` includes the <xref:System.Globalization.NumberStyles?displayProperty=fullName> flag or at the end of `s` if `style` includes the <xref:System.Globalization.NumberStyles?displayProperty=fullName> flag. Parentheses can be used in `s` to indicate a negative value if `style` includes the <xref:System.Globalization.NumberStyles?displayProperty=fullName> flag.|  \\n|*digits*<br /><br /> *fractional_digits*<br /><br /> *exponential_digits*|A sequence of digits from 0 through 9. For *fractional_digits*, only the digit 0 is valid.|  \\n|*,*|A culture-specific thousands separator symbol. The thousands separator of the culture specified by `provider` can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles?displayProperty=fullName> flag.|  \\n|*.*|A culture-specific decimal point symbol. The decimal point symbol of the culture specified by `provider` can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles?displayProperty=fullName> flag.<br /><br /> Only the digit 0 can appear as a fractional digit for the parse operation to succeed; if *fractional_digits* includes any other digit, an <xref:System.OverflowException> is thrown.|  \\n|*e*|The 'e' or 'E' character, which indicates that the value is represented in exponential notation. The `s` parameter can represent a number in exponential notation if `style` includes the <xref:System.Globalization.NumberStyles?displayProperty=fullName> flag.|  \\n|*hexdigits*|A sequence of hexadecimal digits from 0 through f, or 0 through F.|  \\n  \\n A string with decimal digits only (which corresponds to the <xref:System.Globalization.NumberStyles?displayProperty=fullName> style) always parses successfully if it is in the range of the <xref:System.Int32> type. Most of the remaining <xref:System.Globalization.NumberStyles> members control elements that may be but are not required to be present in this input string. The following table indicates how individual <xref:System.Globalization.NumberStyles> members affect the elements that may be present in `s`.  \\n  \\n|Non-composite NumberStyles values|Elements permitted in s in addition to digits|  \\n|----------------------------------------|---------------------------------------------------|  \\n|<xref:System.Globalization.NumberStyles?displayProperty=fullName>|Decimal digits only.|  \\n|<xref:System.Globalization.NumberStyles?displayProperty=fullName>|The decimal point ( *.* ) and *fractional-digits* elements. However, *fractional-digits* must consist of only one or more 0 digits or an <xref:System.OverflowException> is thrown.|  \\n|<xref:System.Globalization.NumberStyles?displayProperty=fullName>|The `s` parameter can also use exponential notation. If `s` represents a number in exponential notation, it must represent an integer within the range of the <xref:System.Int32> data type without a non-zero, fractional component.|  \\n|<xref:System.Globalization.NumberStyles?displayProperty=fullName>|The *ws* element at the beginning of `s`.|  \\n|<xref:System.Globalization.NumberStyles?displayProperty=fullName>|The *ws* element at the end of `s`.|  \\n|<xref:System.Globalization.NumberStyles?displayProperty=fullName>|A positive sign can appear before *digits*.|  \\n|<xref:System.Globalization.NumberStyles?displayProperty=fullName>|A positive sign can appear after *digits*.|  \\n|<xref:System.Globalization.NumberStyles?displayProperty=fullName>|The *sign* element in the form of parentheses enclosing the numeric value.|  \\n|<xref:System.Globalization.NumberStyles?displayProperty=fullName>|The thousands separator ( *,* ) element.|  \\n|<xref:System.Globalization.NumberStyles?displayProperty=fullName>|The *$* element.|  \\n  \\n If the <xref:System.Globalization.NumberStyles?displayProperty=fullName> flag is used, `s` must be a hexadecimal value without a prefix. For example, \\\"C9AF3\\\" parses successfully, but \\\"0xC9AF3\\\" does not. The only other flags that can be present in `style` are <xref:System.Globalization.NumberStyles?displayProperty=fullName> and <xref:System.Globalization.NumberStyles?displayProperty=fullName>. (The <xref:System.Globalization.NumberStyles> enumeration has a composite number style, <xref:System.Globalization.NumberStyles?displayProperty=fullName>, that includes both white space flags.)  \\n  \\n The `provider` parameter is an <xref:System.IFormatProvider> implementation, such as a <xref:System.Globalization.NumberFormatInfo> or <xref:System.Globalization.CultureInfo> object. The `provider` parameter supplies culture-specific information used in parsing. If `provider` is `null`, the <xref:System.Globalization.NumberFormatInfo> object for the current culture is used.\"\n  example:\n  - \"The following example uses a variety of `style` and `provider` parameters to parse the string representations of <xref:System.Int32> values. It also illustrates some of the different ways the same string can be interpreted depending on the culture whose formatting information is used for the parsing operation.  \\n  \\n [!code-cpp[System.Int32.Parse#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Int32.Parse/cpp/parse3.cpp#3)]\\n [!code-csharp[System.Int32.Parse#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Int32.Parse/cs/Parse3.cs#3)]\\n [!code-vb[System.Int32.Parse#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Int32.Parse/vb/Parse3.vb#3)]\"\n  syntax:\n    content: public static int Parse (string s, System.Globalization.NumberStyles style, IFormatProvider provider);\n    parameters:\n    - id: s\n      type: System.String\n      description: A string containing a number to convert.\n    - id: style\n      type: System.Globalization.NumberStyles\n      description: A bitwise combination of enumeration values that indicates the style elements that can be present in <code>s</code>. A typical value to specify is <xref href=\"System.Globalization.NumberStyles.Integer\"></xref>.\n    - id: provider\n      type: System.IFormatProvider\n      description: An object that supplies culture-specific information about the format of <code>s</code>.\n    return:\n      type: System.Int32\n      description: A 32-bit signed integer equivalent to the number specified in <code>s</code>.\n  overload: System.Int32.Parse*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>s</code> is `null`.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"<code>style</code> is not a <xref href=\\\"System.Globalization.NumberStyles\\\"></xref> value.  \\n  \\n -or-  \\n  \\n <code>style</code> is not a combination of <xref href=\\\"System.Globalization.NumberStyles.AllowHexSpecifier\\\"></xref> and <xref href=\\\"System.Globalization.NumberStyles.HexNumber\\\"></xref> values.\"\n  - type: System.FormatException\n    commentId: T:System.FormatException\n    description: <code>s</code> is not in a format compliant with <code>style</code>.\n  - type: System.OverflowException\n    commentId: T:System.OverflowException\n    description: \"<code>s</code> represents a number less than <xref href=\\\"System.Int32.MinValue\\\"></xref> or greater than <xref href=\\\"System.Int32.MaxValue\\\"></xref>.  \\n  \\n -or-  \\n  \\n <code>s</code> includes non-zero, fractional digits.\"\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Int32.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Int32.Parse(System.String,System.IFormatProvider)\n  commentId: M:System.Int32.Parse(System.String,System.IFormatProvider)\n  id: Parse(System.String,System.IFormatProvider)\n  parent: System.Int32\n  langs:\n  - csharp\n  name: Parse(String, IFormatProvider)\n  nameWithType: Int32.Parse(String, IFormatProvider)\n  fullName: Int32.Parse(String, IFormatProvider)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Converts the string representation of a number in a specified culture-specific format to its 32-bit signed integer equivalent.\n  remarks: \"This overload of the <xref:System.Int32.Parse%28System.String%2CSystem.IFormatProvider%29> method is typically used to convert text that can be formatted in a variety of ways to an <xref:System.Int32> value. For example, it can be used to convert the text entered by a user into an HTML text box to a numeric value.  \\n  \\n The `s` parameter contains a number of the form:  \\n  \\n [ws][sign]digits[ws]  \\n  \\n Items in square brackets ([ and ]) are optional. The following table describes each element.  \\n  \\n|Element|Description|  \\n|-------------|-----------------|  \\n|*ws*|Optional white space.|  \\n|*sign*|An optional sign.|  \\n|*digits*|A sequence of digits ranging from 0 to 9.|  \\n  \\n The `s` parameter is interpreted using the <xref:System.Globalization.NumberStyles?displayProperty=fullName> style. In addition to decimal digits, only leading and trailing spaces together with a leading sign are allowed. To explicitly define the style elements that can be present in `s`, use the <xref:System.Int32.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=fullName> method.  \\n  \\n The `provider` parameter is an <xref:System.IFormatProvider> implementation, such as a <xref:System.Globalization.NumberFormatInfo> or <xref:System.Globalization.CultureInfo> object. The `provider` parameter supplies culture-specific information about the format of `s`. If `provider` is `null`, the <xref:System.Globalization.NumberFormatInfo> object for the current culture is used.\"\n  example:\n  - \"The following example is the button click event handler of a Web form. It uses the array returned by the <xref:System.Web.HttpRequest.UserLanguages%2A?displayProperty=fullName> property to determine the user's locale. It then instantiates a <xref:System.Globalization.CultureInfo> object that corresponds to that locale. The <xref:System.Globalization.NumberFormatInfo> object that belongs to that <xref:System.Globalization.CultureInfo> object is then passed to the <xref:System.Int32.Parse%28System.String%2CSystem.IFormatProvider%29> method to convert the user's input to an <xref:System.Int32> value.  \\n  \\n [!code-csharp[ParseMethod#4](~/samples/snippets/csharp/VS_Snippets_CLR/ParseMethod/cs/Default.aspx.cs#4)]\\n [!code-vb[ParseMethod#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/ParseMethod/vb/Default.aspx.vb#4)]\"\n  syntax:\n    content: public static int Parse (string s, IFormatProvider provider);\n    parameters:\n    - id: s\n      type: System.String\n      description: A string containing a number to convert.\n    - id: provider\n      type: System.IFormatProvider\n      description: An object that supplies culture-specific formatting information about <code>s</code>.\n    return:\n      type: System.Int32\n      description: A 32-bit signed integer equivalent to the number specified in <code>s</code>.\n  overload: System.Int32.Parse*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>s</code> is `null`.\n  - type: System.FormatException\n    commentId: T:System.FormatException\n    description: <code>s</code> is not of the correct format.\n  - type: System.OverflowException\n    commentId: T:System.OverflowException\n    description: <code>s</code> represents a number less than <xref href=\"System.Int32.MinValue\"></xref> or greater than <xref href=\"System.Int32.MaxValue\"></xref>.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Int32.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Int32.Parse(System.String)\n  commentId: M:System.Int32.Parse(System.String)\n  id: Parse(System.String)\n  parent: System.Int32\n  langs:\n  - csharp\n  name: Parse(String)\n  nameWithType: Int32.Parse(String)\n  fullName: Int32.Parse(String)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Converts the string representation of a number to its 32-bit signed integer equivalent.\n  remarks: \"The `s` parameter contains a number of the form:  \\n  \\n [ws][sign]digits[ws]  \\n  \\n Items in square brackets ([ and ]) are optional. The following table describes each element.  \\n  \\n|Element|Description|  \\n|-------------|-----------------|  \\n|ws|Optional white space.|  \\n|sign|An optional sign.|  \\n|digits|A sequence of digits ranging from 0 to 9.|  \\n  \\n The `s` parameter is interpreted using the <xref:System.Globalization.NumberStyles?displayProperty=fullName> style. In addition to decimal digits, only leading and trailing spaces together with a leading sign are allowed. To explicitly define the style elements that can be present in `s`, use either the <xref:System.Int32.Parse%28System.String%2CSystem.Globalization.NumberStyles%29?displayProperty=fullName> or the <xref:System.Int32.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=fullName> method.  \\n  \\n The `s` parameter is parsed using the formatting information in a <xref:System.Globalization.NumberFormatInfo> object initialized for the current system culture. For more information, see <xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A>. To parse a string using the formatting information of some other culture, use the <xref:System.Int32.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=fullName> method.\"\n  example:\n  - \"The following example demonstrates how to convert a string value into a 32-bit signed integer value using the <xref:System.Int32.Parse%28System.String%29?displayProperty=fullName> method. The resulting integer value is then displayed to the console.  \\n  \\n [!code-cpp[System.Int32.Parse#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Int32.Parse/cpp/parse1.cpp#1)]\\n [!code-csharp[System.Int32.Parse#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Int32.Parse/cs/Parse1.cs#1)]\\n [!code-vb[System.Int32.Parse#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Int32.Parse/vb/Parse1.vb#1)]\"\n  syntax:\n    content: public static int Parse (string s);\n    parameters:\n    - id: s\n      type: System.String\n      description: A string containing a number to convert.\n    return:\n      type: System.Int32\n      description: A 32-bit signed integer equivalent to the number contained in <code>s</code>.\n  overload: System.Int32.Parse*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>s</code> is `null`.\n  - type: System.FormatException\n    commentId: T:System.FormatException\n    description: <code>s</code> is not in the correct format.\n  - type: System.OverflowException\n    commentId: T:System.OverflowException\n    description: <code>s</code> represents a number less than <xref href=\"System.Int32.MinValue\"></xref> or greater than <xref href=\"System.Int32.MaxValue\"></xref>.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Int32.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Int32.Parse(System.String,System.Globalization.NumberStyles)\n  commentId: M:System.Int32.Parse(System.String,System.Globalization.NumberStyles)\n  id: Parse(System.String,System.Globalization.NumberStyles)\n  parent: System.Int32\n  langs:\n  - csharp\n  name: Parse(String, NumberStyles)\n  nameWithType: Int32.Parse(String, NumberStyles)\n  fullName: Int32.Parse(String, NumberStyles)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Converts the string representation of a number in a specified style to its 32-bit signed integer equivalent.\n  remarks: \"The `style` parameter defines the style elements (such as white space, the positive or negative sign symbol, or the thousands separator symbol) that are allowed in the `s` parameter for the parse operation to succeed. It must be a combination of bit flags from the <xref:System.Globalization.NumberStyles> enumeration. Depending on the value of `style`, the `s` parameter may include the following elements:  \\n  \\n [ws][$][sign][digits,]digits[.fractional_digits][e[sign]exponential_digits][ws]  \\n  \\n Or, if `style` includes <xref:System.Globalization.NumberStyles.AllowHexSpecifier>:  \\n  \\n [ws]hexdigits[ws]  \\n  \\n Items in square brackets ([ and ]) are optional. The following table describes each element.  \\n  \\n|Element|Description|  \\n|-------------|-----------------|  \\n|*ws*|Optional white space. White space can appear at the beginning of `s` if `style` includes the <xref:System.Globalization.NumberStyles?displayProperty=fullName> flag, and it can appear at the end of `s` if `style` includes the <xref:System.Globalization.NumberStyles?displayProperty=fullName> flag.|  \\n|*$*|A culture-specific currency symbol. Its position in the string is defined by the <xref:System.Globalization.NumberFormatInfo.CurrencyNegativePattern%2A?displayProperty=fullName> and <xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A?displayProperty=fullName> properties of the current culture. The current culture's currency symbol can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles?displayProperty=fullName> flag.|  \\n|*sign*|An optional sign. The sign can appear at the beginning of `s` if `style` includes the <xref:System.Globalization.NumberStyles?displayProperty=fullName> flag, and it can appear at the end of `s` if `style` includes the <xref:System.Globalization.NumberStyles?displayProperty=fullName> flag. Parentheses can be used in `s` to indicate a negative value if `style` includes the <xref:System.Globalization.NumberStyles?displayProperty=fullName> flag.|  \\n|*digits*<br /><br /> *fractional_digits*<br /><br /> *exponential_digits*|A sequence of digits from 0 through 9. For *fractional_digits*, only the digit 0 is valid.|  \\n|*,*|A culture-specific thousands separator symbol. The current culture's thousands separator can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles?displayProperty=fullName> flag.|  \\n|*.*|A culture-specific decimal point symbol. The current culture's decimal point symbol can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles?displayProperty=fullName> flag. Only the digit 0 can appear as a fractional digit for the parse operation to succeed; if *fractional_digits* includes any other digit, an <xref:System.OverflowException> is thrown.|  \\n|*e*|The 'e' or 'E' character, which indicates that the value is represented in exponential notation. The `s` parameter can represent a number in exponential notation if `style` includes the <xref:System.Globalization.NumberStyles?displayProperty=fullName> flag.|  \\n|*hexdigits*|A sequence of hexadecimal digits from 0 through f, or 0 through F.|  \\n  \\n A string with digits only (which corresponds to the <xref:System.Globalization.NumberStyles?displayProperty=fullName> style) always parses successfully. Most of the remaining <xref:System.Globalization.NumberStyles> members control elements that may be but are not required to be present in the input string. The following table indicates how individual <xref:System.Globalization.NumberStyles> members affect the elements that may be present in `s`.  \\n  \\n|NumberStyles value|Elements permitted in s in addition to digits|  \\n|------------------------|---------------------------------------------------|  \\n|<xref:System.Globalization.NumberStyles.None>|The *digits* element only.|  \\n|<xref:System.Globalization.NumberStyles.AllowDecimalPoint>|The decimal point ( *.* ) and *fractional-digits* elements.|  \\n|<xref:System.Globalization.NumberStyles.AllowExponent>|The `s` parameter can also use exponential notation.|  \\n|<xref:System.Globalization.NumberStyles.AllowLeadingWhite>|The *ws* element at the beginning of `s`.|  \\n|<xref:System.Globalization.NumberStyles.AllowTrailingWhite>|The *ws* element at the end of `s`.|  \\n|<xref:System.Globalization.NumberStyles.AllowLeadingSign>|The *sign* element at the beginning of `s`.|  \\n|<xref:System.Globalization.NumberStyles.AllowTrailingSign>|The *sign* element at the end of `s`.|  \\n|<xref:System.Globalization.NumberStyles.AllowParentheses>|The *sign* element in the form of parentheses enclosing the numeric value.|  \\n|<xref:System.Globalization.NumberStyles.AllowThousands>|The thousands separator ( *,* ) element.|  \\n|<xref:System.Globalization.NumberStyles.AllowCurrencySymbol>|The *$* element.|  \\n|<xref:System.Globalization.NumberStyles.Currency>|All. The `s` parameter cannot represent a hexadecimal number or a number in exponential notation.|  \\n|<xref:System.Globalization.NumberStyles.Float>|The *ws* element at the beginning or end of `s`, *sign* at the beginning of `s`, and the decimal point ( *.* ) symbol. The `s` parameter can also use exponential notation.|  \\n|<xref:System.Globalization.NumberStyles.Number>|The `ws`, `sign`, thousands separator ( *,* ), and decimal point ( *.* ) elements.|  \\n|<xref:System.Globalization.NumberStyles.Any>|All styles, except `s` cannot represent a hexadecimal number.|  \\n  \\n If the <xref:System.Globalization.NumberStyles?displayProperty=fullName> flag is used, `s` must be a hexadecimal value without a prefix. For example, \\\"C9AF3\\\" parses successfully, but \\\"0xC9AF3\\\" does not. The only other flags that can be combined with the `s` parameter it are <xref:System.Globalization.NumberStyles?displayProperty=fullName> and <xref:System.Globalization.NumberStyles?displayProperty=fullName>. (The <xref:System.Globalization.NumberStyles> enumeration includes a composite number style, <xref:System.Globalization.NumberStyles?displayProperty=fullName>, that includes both white space flags.)  \\n  \\n The `s` parameter is parsed using the formatting information in a <xref:System.Globalization.NumberFormatInfo> object that is initialized for the current system culture. To specify the culture whose formatting information is used for the parse operation, call the <xref:System.Int32.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=fullName> overload.\"\n  example:\n  - \"The following example uses the <xref:System.Int32.Parse%28System.String%2CSystem.Globalization.NumberStyles%29?displayProperty=fullName> method to parse the string representations of several <xref:System.Int32> values. The current culture for the example is en-US.  \\n  \\n [!code-cpp[System.Int32.Parse#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Int32.Parse/cpp/parse2.cpp#2)]\\n [!code-csharp[System.Int32.Parse#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Int32.Parse/cs/Parse2.cs#2)]\\n [!code-vb[System.Int32.Parse#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Int32.Parse/vb/Parse2.vb#2)]\"\n  syntax:\n    content: public static int Parse (string s, System.Globalization.NumberStyles style);\n    parameters:\n    - id: s\n      type: System.String\n      description: A string containing a number to convert.\n    - id: style\n      type: System.Globalization.NumberStyles\n      description: A bitwise combination of the enumeration values that indicates the style elements that can be present in <code>s</code>. A typical value to specify is <xref href=\"System.Globalization.NumberStyles.Integer\"></xref>.\n    return:\n      type: System.Int32\n      description: A 32-bit signed integer equivalent to the number specified in <code>s</code>.\n  overload: System.Int32.Parse*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>s</code> is `null`.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"<code>style</code> is not a <xref href=\\\"System.Globalization.NumberStyles\\\"></xref> value.  \\n  \\n -or-  \\n  \\n <code>style</code> is not a combination of <xref href=\\\"System.Globalization.NumberStyles.AllowHexSpecifier\\\"></xref> and <xref href=\\\"System.Globalization.NumberStyles.HexNumber\\\"></xref> values.\"\n  - type: System.FormatException\n    commentId: T:System.FormatException\n    description: <code>s</code> is not in a format compliant with <code>style</code>.\n  - type: System.OverflowException\n    commentId: T:System.OverflowException\n    description: \"<code>s</code> represents a number less than <xref href=\\\"System.Int32.MinValue\\\"></xref> or greater than <xref href=\\\"System.Int32.MaxValue\\\"></xref>.  \\n  \\n -or-  \\n  \\n <code>s</code> includes non-zero, fractional digits.\"\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Int32.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Int32.ToString\n  commentId: M:System.Int32.ToString\n  id: ToString\n  parent: System.Int32\n  langs:\n  - csharp\n  name: ToString()\n  nameWithType: Int32.ToString()\n  fullName: Int32.ToString()\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Converts the numeric value of this instance to its equivalent string representation.\n  remarks: \"The <xref:System.Int32.ToString> method formats an <xref:System.Int32> value in the default (\\\"G\\\", or general) format by using the <xref:System.Globalization.NumberFormatInfo> object of the current culture. If you want to specify a different format or culture, use the other overloads of the <xref:System.Int32.ToString%2A> method, as follows:  \\n  \\n|To use format|For culture|Use the overload|  \\n|-------------------|-----------------|----------------------|  \\n|Default (\\\"G\\\") format|A specific culture|<xref:System.Int32.ToString%28System.IFormatProvider%29>|  \\n|A specific format|Default (current) culture|<xref:System.Int32.ToString%28System.String%29>|  \\n|A specific format|A specific culture|<xref:System.Int32.ToString%28System.String%2CSystem.IFormatProvider%29>|  \\n  \\n The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics:  \\n  \\n-   For more information about numeric format specifiers, see [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) and [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md).  \\n  \\n-   For more information about formatting, see [Formatting Types](~/docs/standard/base-types/formatting-types.md).\"\n  example:\n  - \"The following example displays an <xref:System.Int32> value using the default <xref:System.Int32.ToString> method. It also displays the string representations of the <xref:System.Int32> value that results from using a number of standard format specifiers. The examples are displayed using the formatting conventions of the en-US culture.  \\n  \\n [!code-cpp[System.Int32.ToString#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Int32.ToString/cpp/ToString1.cpp#1)]\\n [!code-csharp[System.Int32.ToString#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Int32.ToString/cs/ToString.cs#1)]\\n [!code-vb[System.Int32.ToString#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Int32.ToString/vb/ToString.vb#1)]\"\n  syntax:\n    content: public override string ToString ();\n    parameters: []\n    return:\n      type: System.String\n      description: The string representation of the value of this instance, consisting of a negative sign if the value is negative, and a sequence of digits ranging from 0 to 9 with no leading zeroes.\n  overload: System.Int32.ToString*\n  exceptions: []\n  attributes: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Int32.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Int32.ToString(System.String,System.IFormatProvider)\n  commentId: M:System.Int32.ToString(System.String,System.IFormatProvider)\n  id: ToString(System.String,System.IFormatProvider)\n  parent: System.Int32\n  langs:\n  - csharp\n  name: ToString(String, IFormatProvider)\n  nameWithType: Int32.ToString(String, IFormatProvider)\n  fullName: Int32.ToString(String, IFormatProvider)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Converts the numeric value of this instance to its equivalent string representation using the specified format and culture-specific format information.\n  remarks: \"The <xref:System.Int32.ToString%28System.String%2CSystem.IFormatProvider%29> method formats an <xref:System.Int32> value in a specified format by using the <xref:System.Globalization.NumberFormatInfo> object of a specified culture. If you want to use default format or culture settings, use the other overloads of the <xref:System.Int32.ToString%2A> method, as follows:  \\n  \\n|To use format|For culture|Use the overload|  \\n|-------------------|-----------------|----------------------|  \\n|Default (\\\"G\\\") format|Default (current) culture|<xref:System.Int32.ToString>|  \\n|Default (\\\"G\\\") format|A specific culture|<xref:System.Int32.ToString%28System.IFormatProvider%29>|  \\n|A specific format|Default (current) culture|<xref:System.Int32.ToString%28System.String%29>|  \\n  \\n The `format` parameter can be either a standard or a custom numeric format string. All standard numeric format strings other than \\\"R\\\" (or \\\"r\\\") are supported, as are all custom numeric format characters. If `format` is `null` or an empty string (\\\"\\\"), the return value for this instance is formatted with the general numeric format specifier (\\\"G\\\").  \\n  \\n The `provider` parameter is an object that implements the <xref:System.IFormatProvider> interface. Its <xref:System.IFormatProvider.GetFormat%2A> method returns a <xref:System.Globalization.NumberFormatInfo> object that provides culture-specific format information about the format of the string that is returned by this method. The object that implements <xref:System.IFormatProvider> can be any of the following:  \\n  \\n-   A <xref:System.Globalization.CultureInfo> object that represents the culture whose formatting rules are to be used.  \\n  \\n-   A <xref:System.Globalization.NumberFormatInfo> object that contains specific numeric formatting information for this value.  \\n  \\n-   A custom object that implements <xref:System.IFormatProvider> and whose <xref:System.IFormatProvider.GetFormat%2A> method returns a <xref:System.Globalization.NumberFormatInfo> object that provides formatting information.  \\n  \\n If `provider` is `null` or a <xref:System.Globalization.NumberFormatInfo> object cannot be obtained from `provider`, the return value for this instance is formatted with the <xref:System.Globalization.NumberFormatInfo> for the current culture.  \\n  \\n The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics:  \\n  \\n-   For more information about numeric format specifiers, see [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) and [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md).  \\n  \\n-   For more information about formatting, see [Formatting Types](~/docs/standard/base-types/formatting-types.md).\"\n  example:\n  - \"The following example displays a positive and a negative value using each of the supported standard numeric format specifiers for three different cultures.  \\n  \\n [!code-cpp[System.Int32.ToString#4](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Int32.ToString/cpp/ToString4.cpp#4)]\\n [!code-csharp[System.Int32.ToString#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Int32.ToString/cs/ToString.cs#4)]\\n [!code-vb[System.Int32.ToString#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Int32.ToString/vb/ToString.vb#4)]\"\n  syntax:\n    content: public string ToString (string format, IFormatProvider provider);\n    parameters:\n    - id: format\n      type: System.String\n      description: A standard or custom numeric format string.\n    - id: provider\n      type: System.IFormatProvider\n      description: An object that supplies culture-specific formatting information.\n    return:\n      type: System.String\n      description: The string representation of the value of this instance as specified by <code>format</code> and <code>provider</code>.\n  overload: System.Int32.ToString*\n  exceptions:\n  - type: System.FormatException\n    commentId: T:System.FormatException\n    description: <code>format</code> is invalid or not supported.\n  attributes: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Int32.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Int32.ToString(System.String)\n  commentId: M:System.Int32.ToString(System.String)\n  id: ToString(System.String)\n  parent: System.Int32\n  langs:\n  - csharp\n  name: ToString(String)\n  nameWithType: Int32.ToString(String)\n  fullName: Int32.ToString(String)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Converts the numeric value of this instance to its equivalent string representation, using the specified format.\n  remarks: \"The <xref:System.Int32.ToString%28System.String%29> method formats an <xref:System.Int32> value in a specified format by using a <xref:System.Globalization.NumberFormatInfo> object that represents the conventions of the current culture. If you want to use the default (\\\"G\\\", or general) format or specify a different culture, use the other overloads of the <xref:System.Int32.ToString%2A> method, as follows:  \\n  \\n|To use format|For culture|Use the overload|  \\n|-------------------|-----------------|----------------------|  \\n|Default (\\\"G\\\") format|Default (current) culture|<xref:System.Int32.ToString>|  \\n|Default (\\\"G\\\") format|A specific culture|<xref:System.Int32.ToString%28System.IFormatProvider%29>|  \\n|A specific format|A specific culture|<xref:System.Int32.ToString%28System.String%2CSystem.IFormatProvider%29>|  \\n  \\n The `format` parameter can be any valid standard numeric format specifier except for \\\"R\\\", as well as any combination of custom numeric format specifiers. If `format` is `null` or an empty string (\\\"\\\"), the return value of this instance is formatted with the general numeric format specifier (\\\"G\\\").  \\n  \\n The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics:  \\n  \\n-   For more information about numeric format specifiers, see [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) and [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md).  \\n  \\n-   For more information about formatting, see [Formatting Types](~/docs/standard/base-types/formatting-types.md).  \\n  \\n The return value of this instance is formatted with the <xref:System.Globalization.NumberFormatInfo> for the current culture.\"\n  example:\n  - \"The following example displays an <xref:System.Int32> value using each of the supported standard numeric format specifiers, together with two custom numeric format strings. In converting the numeric values to strings, the example uses the formatting conventions of the en-US culture.  \\n  \\n [!code-cpp[System.Int32.ToString#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Int32.ToString/cpp/ToString3.cpp#3)]\\n [!code-csharp[System.Int32.ToString#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Int32.ToString/cs/ToString.cs#3)]\\n [!code-vb[System.Int32.ToString#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Int32.ToString/vb/ToString.vb#3)]\"\n  syntax:\n    content: public string ToString (string format);\n    parameters:\n    - id: format\n      type: System.String\n      description: A standard or custom numeric format string.\n    return:\n      type: System.String\n      description: The string representation of the value of this instance as specified by <code>format</code>.\n  overload: System.Int32.ToString*\n  exceptions:\n  - type: System.FormatException\n    commentId: T:System.FormatException\n    description: <code>format</code> is invalid or not supported.\n  attributes: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Int32.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Int32.ToString(System.IFormatProvider)\n  commentId: M:System.Int32.ToString(System.IFormatProvider)\n  id: ToString(System.IFormatProvider)\n  parent: System.Int32\n  langs:\n  - csharp\n  name: ToString(IFormatProvider)\n  nameWithType: Int32.ToString(IFormatProvider)\n  fullName: Int32.ToString(IFormatProvider)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Converts the numeric value of this instance to its equivalent string representation using the specified culture-specific format information.\n  remarks: \"The <xref:System.Int32.ToString%28System.IFormatProvider%29> method formats an <xref:System.Int32> value in the default (\\\"G\\\", or general) format by using the <xref:System.Globalization.NumberFormatInfo> object of a specified culture. If you want to specify a different format or the current culture, use the other overloads of the <xref:System.Int32.ToString%2A> method, as follows:  \\n  \\n|To use format|For culture|Use the overload|  \\n|-------------------|-----------------|----------------------|  \\n|Default (\\\"G\\\") format|Default (current) culture|<xref:System.Int32.ToString>|  \\n|A specific format|Default (current) culture|<xref:System.Int32.ToString%28System.String%29>|  \\n|A specific format|A specific culture|<xref:System.Int32.ToString%28System.String%2CSystem.IFormatProvider%29>|  \\n  \\n The `provider` parameter is an object that implements the <xref:System.IFormatProvider> interface. Its <xref:System.IFormatProvider.GetFormat%2A> method returns a <xref:System.Globalization.NumberFormatInfo> object that provides culture-specific information about the format of the string that is returned by this method. The object that implements <xref:System.IFormatProvider> can be any of the following:  \\n  \\n-   A <xref:System.Globalization.CultureInfo> object that represents the culture whose formatting rules are to be used.  \\n  \\n-   A <xref:System.Globalization.NumberFormatInfo> object that contains specific numeric formatting information for this value.  \\n  \\n-   A custom object that implements <xref:System.IFormatProvider> and whose <xref:System.IFormatProvider.GetFormat%2A> method returns a <xref:System.Globalization.NumberFormatInfo> object that provides formatting information.  \\n  \\n If `provider` is `null` or a <xref:System.Globalization.NumberFormatInfo> object cannot be obtained from `provider`, the return value is formatted using the <xref:System.Globalization.NumberFormatInfo> object for the thread current culture. For information about the thread current culture, see <xref:System.Threading.Thread.CurrentCulture%2A?displayProperty=fullName>.  \\n  \\n The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics:  \\n  \\n-   For more information about numeric format specifiers, see [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) and [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md).  \\n  \\n-   For more information about formatting, see [Formatting Types](~/docs/standard/base-types/formatting-types.md).\"\n  example:\n  - \"The following example displays the string representation of an <xref:System.Int32> value using <xref:System.Globalization.CultureInfo> objects that represent several different cultures.  \\n  \\n [!code-cpp[System.Int32.ToString#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Int32.ToString/cpp/ToString2.cpp#2)]\\n [!code-csharp[System.Int32.ToString#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Int32.ToString/cs/ToString.cs#2)]\\n [!code-vb[System.Int32.ToString#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Int32.ToString/vb/ToString.vb#2)]\"\n  syntax:\n    content: public string ToString (IFormatProvider provider);\n    parameters:\n    - id: provider\n      type: System.IFormatProvider\n      description: An object that supplies culture-specific formatting information.\n    return:\n      type: System.String\n      description: The string representation of the value of this instance as specified by <code>provider</code>.\n  overload: System.Int32.ToString*\n  exceptions: []\n  attributes: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Int32.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Int32.TryParse(System.String,System.Int32@)\n  commentId: M:System.Int32.TryParse(System.String,System.Int32@)\n  id: TryParse(System.String,System.Int32@)\n  parent: System.Int32\n  langs:\n  - csharp\n  name: TryParse(String, Int32)\n  nameWithType: Int32.TryParse(String, Int32)\n  fullName: Int32.TryParse(String, Int32)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Converts the string representation of a number to its 32-bit signed integer equivalent. A return value indicates whether the conversion succeeded.\n  remarks: \"The <xref:System.Int32.TryParse%2A> method is like the <xref:System.Int32.Parse%2A> method, except the <xref:System.Int32.TryParse%2A> method does not throw an exception if the conversion fails. It eliminates the need to use exception handling to test for a <xref:System.FormatException> in the event that `s` is invalid and cannot be successfully parsed.  \\n  \\n The `s` parameter contains a number of the form:  \\n  \\n [ws][sign]digits[ws]  \\n  \\n Items in square brackets ([ and ]) are optional. The following table describes each element.  \\n  \\n|Element|Description|  \\n|-------------|-----------------|  \\n|*ws*|Optional white space.|  \\n|*sign*|An optional sign.|  \\n|*digits*|A sequence of digits ranging from 0 to 9.|  \\n  \\n The `s` parameter is interpreted using the <xref:System.Globalization.NumberStyles?displayProperty=fullName> style. In addition to the decimal digits, only leading and trailing spaces together with a leading sign are allowed. To explicitly define the style elements together with the culture-specific formatting information that can be present in `s`, use the <xref:System.Int32.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Int32%40%29?displayProperty=fullName> method.  \\n  \\n The `s` parameter is parsed using the formatting information in a <xref:System.Globalization.NumberFormatInfo> object initialized for the current system culture. For more information, see <xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A>.  \\n  \\n This overload of the <xref:System.Int32.TryParse%2A> method interprets all digits in the `s` parameter as decimal digits. To parse the string representation of a hexadecimal number, call the <xref:System.Int32.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Int32%40%29?displayProperty=fullName> overload.\"\n  example:\n  - \"The following example calls the <xref:System.Int32.TryParse%28System.String%2CSystem.Int32%40%29?displayProperty=fullName> method with a number of different string values.  \\n  \\n [!code-cpp[System.Int32.TryParse#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Int32.TryParse/cpp/int32.tryparse1.cpp#1)]\\n [!code-csharp[System.Int32.TryParse#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Int32.TryParse/cs/TryParse1.cs#1)]\\n [!code-vb[System.Int32.TryParse#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Int32.TryParse/vb/TryParse1.vb#1)]  \\n  \\n Some of the strings that the <xref:System.Int32.TryParse%28System.String%2CSystem.Int32%40%29> method is unable to convert in this example are:  \\n  \\n-   \\\"9432.0\\\". The conversion fails because the string cannot contain a decimal separator; it must contain integral digits only.  \\n  \\n-   \\\"16,667\\\". The conversion fails because the string cannot contain group separators; it must contain integral digits only.  \\n  \\n-   \\\"(100)\\\". The conversion fails because the string cannot contain a negative sign other than the one defined by the current culture's <xref:System.Globalization.NumberFormatInfo.NegativeSign%2A?displayProperty=fullName> and <xref:System.Globalization.NumberFormatInfo.NumberNegativePattern%2A?displayProperty=fullName> properties.  \\n  \\n-   \\\"01FA\\\". The conversion fails because the string cannot contain hexadecimal digits; it must contain decimal digits only.\"\n  syntax:\n    content: public static bool TryParse (string s, out int result);\n    parameters:\n    - id: s\n      type: System.String\n      description: A string containing a number to convert.\n    - id: result\n      type: System.Int32\n      description: When this method returns, contains the 32-bit signed integer value equivalent of the number contained in <code>s</code>, if the conversion succeeded, or zero if the conversion failed. The conversion fails if the <code>s</code> parameter is `null` or <xref href=\"System.String.Empty\"></xref>, is not of the correct format, or represents a number less than <xref href=\"System.Int32.MinValue\"></xref> or greater than <xref href=\"System.Int32.MaxValue\"></xref>. This parameter is passed uninitialized; any value originally supplied in <code>result</code> will be overwritten.\n    return:\n      type: System.Boolean\n      description: '`true` if <code>s</code> was converted successfully; otherwise, `false`.'\n  overload: System.Int32.TryParse*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Int32.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Int32.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Int32@)\n  commentId: M:System.Int32.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Int32@)\n  id: TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Int32@)\n  parent: System.Int32\n  langs:\n  - csharp\n  name: TryParse(String, NumberStyles, IFormatProvider, Int32)\n  nameWithType: Int32.TryParse(String, NumberStyles, IFormatProvider, Int32)\n  fullName: Int32.TryParse(String, NumberStyles, IFormatProvider, Int32)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: Converts the string representation of a number in a specified style and culture-specific format to its 32-bit signed integer equivalent. A return value indicates whether the conversion succeeded.\n  remarks: \"The <xref:System.Int32.TryParse%2A> method is like the <xref:System.Int32.Parse%2A> method, except the <xref:System.Int32.TryParse%2A> method does not throw an exception if the conversion fails. It eliminates the need to use exception handling to test for a <xref:System.FormatException> in the event that `s` is invalid and cannot be parsed successfully.  \\n  \\n The `style` parameter defines the style elements (such as white space or a positive or negative sign) that are allowed in the `s` parameter for the parse operation to succeed. It must be a combination of bit flags from the <xref:System.Globalization.NumberStyles> enumeration. Depending on the value of `style`, the `s` parameter may include the following elements:  \\n  \\n [ws][$][sign][digits,]digits[.fractional_digits][e[sign]digits][ws]  \\n  \\n Or, if the `style` parameter includes <xref:System.Globalization.NumberStyles.AllowHexSpecifier>:  \\n  \\n [ws]hexdigits[ws]  \\n  \\n Items in square brackets ([ and ]) are optional. The following table describes each element.  \\n  \\n|Element|Description|  \\n|-------------|-----------------|  \\n|*ws*|Optional white space. White space can appear at the beginning of `s` if `style` includes the <xref:System.Globalization.NumberStyles?displayProperty=fullName> flag, or at the end of `s` if `style` includes the <xref:System.Globalization.NumberStyles?displayProperty=fullName> flag.|  \\n|*$*|A culture-specific currency symbol. Its position in the string is defined by the <xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A> property of the <xref:System.Globalization.NumberFormatInfo> object returned by the <xref:System.IFormatProvider.GetFormat%2A> method of the `provider` parameter. The currency symbol can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles?displayProperty=fullName> flag.|  \\n|*sign*|An optional sign. A sign symbol can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles?displayProperty=fullName> or <xref:System.Globalization.NumberStyles?displayProperty=fullName> flags.|  \\n|*digits*|A sequence of digits from 0 through 9.|  \\n|*,*|A culture-specific thousands separator. The thousands separator of the culture specified by `provider` can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles?displayProperty=fullName> flag.|  \\n|*.*|A culture-specific decimal point symbol. The decimal point symbol of the culture specified by `provider` can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles?displayProperty=fullName> flag.|  \\n|*fractional_digits*|One or more occurrences of the digit 0. Fractional digits can appear in `s` only if `style` includes the <xref:System.Globalization.NumberStyles?displayProperty=fullName> flag.|  \\n|*e*|The 'e' or 'E' character, which indicates that the value is represented in exponential notation. The `s` parameter can represent a number in exponential notation if `style` includes the <xref:System.Globalization.NumberStyles?displayProperty=fullName> flag.|  \\n|*hexdigits*|A sequence of hexadecimal digits from 0 through f, or 0 through F.|  \\n  \\n A string with decimal digits only (which corresponds to the <xref:System.Globalization.NumberStyles?displayProperty=fullName> flag) always parses successfully. Most of the remaining <xref:System.Globalization.NumberStyles> members control elements that may be but are not required to be present in this input string. The following table indicates how individual <xref:System.Globalization.NumberStyles> members affect the elements that may be present in `s`.  \\n  \\n|Non-composite NumberStyles values|Elements permitted in s in addition to digits|  \\n|----------------------------------------|---------------------------------------------------|  \\n|<xref:System.Globalization.NumberStyles?displayProperty=fullName>|Decimal digits only.|  \\n|<xref:System.Globalization.NumberStyles?displayProperty=fullName>|The decimal point (*.*) and *fractional_digits* elements. However, *fractional_digits* must consist of only one or more 0 digits or the method returns `false`.|  \\n|<xref:System.Globalization.NumberStyles?displayProperty=fullName>|The `s` parameter can also use exponential notation. If `s` represents a number in exponential notation, it must represent an integer within the range of the <xref:System.Int32> data type without a non-zero, fractional component.|  \\n|<xref:System.Globalization.NumberStyles?displayProperty=fullName>|The *ws* element at the beginning of `s`.|  \\n|<xref:System.Globalization.NumberStyles?displayProperty=fullName>|The *ws* element at the end of `s`.|  \\n|<xref:System.Globalization.NumberStyles?displayProperty=fullName>|A sign can appear before *digits*.|  \\n|<xref:System.Globalization.NumberStyles?displayProperty=fullName>|A sign can appear after *digits*.|  \\n|<xref:System.Globalization.NumberStyles?displayProperty=fullName>|The *sign* element in the form of parentheses enclosing the numeric value.|  \\n|<xref:System.Globalization.NumberStyles?displayProperty=fullName>|The thousands separator (*,*) element.|  \\n|<xref:System.Globalization.NumberStyles?displayProperty=fullName>|The *$* element.|  \\n|<xref:System.Globalization.NumberStyles?displayProperty=fullName>|All elements. The `s` parameter cannot represent a hexadecimal number or a number in exponential notation.|  \\n|<xref:System.Globalization.NumberStyles?displayProperty=fullName>|The *ws* element at the beginning or end of `s`, *sign* at the beginning of `s`, and the decimal point (*.*) symbol. The `s` parameter can also use exponential notation.|  \\n|<xref:System.Globalization.NumberStyles?displayProperty=fullName>|The *ws*, *sign*, thousands separator (*,*), and decimal point (*.*) elements.|  \\n|<xref:System.Globalization.NumberStyles?displayProperty=fullName>|All styles, except `s` cannot represent a hexadecimal number.|  \\n  \\n If the <xref:System.Globalization.NumberStyles?displayProperty=fullName> flag is used, `s` must be a hexadecimal value without a prefix. For example, \\\"C9AF3\\\" parses successfully, but \\\"0xC9AF3\\\" does not. The only other flags that can be present in `style` are <xref:System.Globalization.NumberStyles?displayProperty=fullName> and <xref:System.Globalization.NumberStyles?displayProperty=fullName>. (The <xref:System.Globalization.NumberStyles> enumeration has a composite style, <xref:System.Globalization.NumberStyles?displayProperty=fullName>, that includes both white space flags.)  \\n  \\n The `provider` parameter is an <xref:System.IFormatProvider> implementation, such as a <xref:System.Globalization.CultureInfo> object or a <xref:System.Globalization.NumberFormatInfo> object, whose <xref:System.IFormatProvider.GetFormat%2A> method returns a <xref:System.Globalization.NumberFormatInfo> object. The <xref:System.Globalization.NumberFormatInfo> object provides culture-specific information about the format of `s`. If `provider` is `null`, the <xref:System.Globalization.NumberFormatInfo> object for the current culture is used.\"\n  example:\n  - \"The following example calls the <xref:System.Int32.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Int32%40%29?displayProperty=fullName> method with a number of different string and <xref:System.Globalization.NumberStyles> values.  \\n  \\n [!code-cpp[System.Int32.TryParse#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Int32.TryParse/cpp/int32.tryparse2.cpp#2)]\\n [!code-csharp[System.Int32.TryParse#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Int32.TryParse/cs/TryParse2.cs#2)]\\n [!code-vb[System.Int32.TryParse#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Int32.TryParse/vb/TryParse2.vb#2)]\"\n  syntax:\n    content: public static bool TryParse (string s, System.Globalization.NumberStyles style, IFormatProvider provider, out int result);\n    parameters:\n    - id: s\n      type: System.String\n      description: A string containing a number to convert. The string is interpreted using the style specified by <code>style</code>.\n    - id: style\n      type: System.Globalization.NumberStyles\n      description: A bitwise combination of enumeration values that indicates the style elements that can be present in <code>s</code>. A typical value to specify is <xref href=\"System.Globalization.NumberStyles.Integer\"></xref>.\n    - id: provider\n      type: System.IFormatProvider\n      description: An object that supplies culture-specific formatting information about <code>s</code>.\n    - id: result\n      type: System.Int32\n      description: When this method returns, contains the 32-bit signed integer value equivalent of the number contained in <code>s</code>, if the conversion succeeded, or zero if the conversion failed. The conversion fails if the <code>s</code> parameter is `null` or <xref href=\"System.String.Empty\"></xref>, is not in a format compliant with <code>style</code>, or represents a number less than <xref href=\"System.Int32.MinValue\"></xref> or greater than <xref href=\"System.Int32.MaxValue\"></xref>. This parameter is passed uninitialized; any value originally supplied in <code>result</code> will be overwritten.\n    return:\n      type: System.Boolean\n      description: '`true` if <code>s</code> was converted successfully; otherwise, `false`.'\n  overload: System.Int32.TryParse*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"<code>style</code> is not a <xref href=\\\"System.Globalization.NumberStyles\\\"></xref> value.  \\n  \\n -or-  \\n  \\n <code>style</code> is not a combination of <xref href=\\\"System.Globalization.NumberStyles.AllowHexSpecifier\\\"></xref> and <xref href=\\\"System.Globalization.NumberStyles.HexNumber\\\"></xref> values.\"\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Int32.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Int32.System#IComparable#CompareTo(System.Object)\n  commentId: M:System.Int32.System#IComparable#CompareTo(System.Object)\n  id: System#IComparable#CompareTo(System.Object)\n  isEii: true\n  parent: System.Int32\n  langs:\n  - csharp\n  name: IComparable.CompareTo(Object)\n  nameWithType: Int32.IComparable.CompareTo(Object)\n  fullName: Int32.IComparable.CompareTo(Object)\n  type: Method\n  assemblies:\n  - System.Runtime\n  namespace: System\n  syntax:\n    content: int IComparable.CompareTo (object value);\n    parameters:\n    - id: value\n      type: System.Object\n      description: ''\n    return:\n      type: System.Int32\n      description: ''\n  overload: System.Int32.System#IComparable#CompareTo*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Int32.xml\n- uid: System.Int32.System#IConvertible#GetTypeCode\n  commentId: M:System.Int32.System#IConvertible#GetTypeCode\n  id: System#IConvertible#GetTypeCode\n  isEii: true\n  parent: System.Int32\n  langs:\n  - csharp\n  name: IConvertible.GetTypeCode()\n  nameWithType: Int32.IConvertible.GetTypeCode()\n  fullName: Int32.IConvertible.GetTypeCode()\n  type: Method\n  assemblies:\n  - System.Runtime\n  namespace: System\n  syntax:\n    content: TypeCode IConvertible.GetTypeCode ();\n    parameters: []\n    return:\n      type: System.TypeCode\n      description: ''\n  overload: System.Int32.System#IConvertible#GetTypeCode*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Int32.xml\n- uid: System.Int32.System#IConvertible#ToBoolean(System.IFormatProvider)\n  commentId: M:System.Int32.System#IConvertible#ToBoolean(System.IFormatProvider)\n  id: System#IConvertible#ToBoolean(System.IFormatProvider)\n  isEii: true\n  parent: System.Int32\n  langs:\n  - csharp\n  name: IConvertible.ToBoolean(IFormatProvider)\n  nameWithType: Int32.IConvertible.ToBoolean(IFormatProvider)\n  fullName: Int32.IConvertible.ToBoolean(IFormatProvider)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: For a description of this member, see <xref href=\"System.IConvertible.ToBoolean(System.IFormatProvider)\"></xref>.\n  remarks: This member is an explicit interface member implementation. It can be used only when the <xref:System.Int32> instance is cast to an <xref:System.IConvertible> interface. The recommended alternative is to call the <xref:System.Convert.ToBoolean%28System.Int32%29?displayProperty=fullName> method.\n  syntax:\n    content: bool IConvertible.ToBoolean (IFormatProvider provider);\n    parameters:\n    - id: provider\n      type: System.IFormatProvider\n      description: This parameter is ignored.\n    return:\n      type: System.Boolean\n      description: '`true` if the value of the current instance is not zero; otherwise, `false`.'\n  overload: System.Int32.System#IConvertible#ToBoolean*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Int32.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Int32.System#IConvertible#ToByte(System.IFormatProvider)\n  commentId: M:System.Int32.System#IConvertible#ToByte(System.IFormatProvider)\n  id: System#IConvertible#ToByte(System.IFormatProvider)\n  isEii: true\n  parent: System.Int32\n  langs:\n  - csharp\n  name: IConvertible.ToByte(IFormatProvider)\n  nameWithType: Int32.IConvertible.ToByte(IFormatProvider)\n  fullName: Int32.IConvertible.ToByte(IFormatProvider)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: For a description of this member, see <xref href=\"System.IConvertible.ToByte(System.IFormatProvider)\"></xref>.\n  remarks: This member is an explicit interface member implementation. It can be used only when the <xref:System.Int32> instance is cast to an <xref:System.IConvertible> interface. The recommended alternative is to call the <xref:System.Convert.ToByte%28System.Int32%29?displayProperty=fullName> method.\n  syntax:\n    content: byte IConvertible.ToByte (IFormatProvider provider);\n    parameters:\n    - id: provider\n      type: System.IFormatProvider\n      description: This parameter is ignored.\n    return:\n      type: System.Byte\n      description: The value of the current instance, converted to a <xref href=\"System.Byte\"></xref>.\n  overload: System.Int32.System#IConvertible#ToByte*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Int32.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Int32.System#IConvertible#ToChar(System.IFormatProvider)\n  commentId: M:System.Int32.System#IConvertible#ToChar(System.IFormatProvider)\n  id: System#IConvertible#ToChar(System.IFormatProvider)\n  isEii: true\n  parent: System.Int32\n  langs:\n  - csharp\n  name: IConvertible.ToChar(IFormatProvider)\n  nameWithType: Int32.IConvertible.ToChar(IFormatProvider)\n  fullName: Int32.IConvertible.ToChar(IFormatProvider)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: For a description of this member, see <xref href=\"System.IConvertible.ToChar(System.IFormatProvider)\"></xref>.\n  remarks: This member is an explicit interface member implementation. It can be used only when the <xref:System.Int32> instance is cast to an <xref:System.IConvertible> interface. The recommended alternative is to call the <xref:System.Convert.ToChar%28System.Int32%29?displayProperty=fullName> method.\n  syntax:\n    content: char IConvertible.ToChar (IFormatProvider provider);\n    parameters:\n    - id: provider\n      type: System.IFormatProvider\n      description: This parameter is ignored.\n    return:\n      type: System.Char\n      description: The value of the current instance, converted to a <xref href=\"System.Char\"></xref>.\n  overload: System.Int32.System#IConvertible#ToChar*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Int32.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Int32.System#IConvertible#ToDateTime(System.IFormatProvider)\n  commentId: M:System.Int32.System#IConvertible#ToDateTime(System.IFormatProvider)\n  id: System#IConvertible#ToDateTime(System.IFormatProvider)\n  isEii: true\n  parent: System.Int32\n  langs:\n  - csharp\n  name: IConvertible.ToDateTime(IFormatProvider)\n  nameWithType: Int32.IConvertible.ToDateTime(IFormatProvider)\n  fullName: Int32.IConvertible.ToDateTime(IFormatProvider)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: This conversion is not supported. Attempting to use this method throws an <xref href=\"System.InvalidCastException\"></xref>.\n  syntax:\n    content: DateTime IConvertible.ToDateTime (IFormatProvider provider);\n    parameters:\n    - id: provider\n      type: System.IFormatProvider\n      description: This parameter is ignored.\n    return:\n      type: System.DateTime\n      description: This conversion is not supported. No value is returned.\n  overload: System.Int32.System#IConvertible#ToDateTime*\n  exceptions:\n  - type: System.InvalidCastException\n    commentId: T:System.InvalidCastException\n    description: In all cases.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Int32.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Int32.System#IConvertible#ToDecimal(System.IFormatProvider)\n  commentId: M:System.Int32.System#IConvertible#ToDecimal(System.IFormatProvider)\n  id: System#IConvertible#ToDecimal(System.IFormatProvider)\n  isEii: true\n  parent: System.Int32\n  langs:\n  - csharp\n  name: IConvertible.ToDecimal(IFormatProvider)\n  nameWithType: Int32.IConvertible.ToDecimal(IFormatProvider)\n  fullName: Int32.IConvertible.ToDecimal(IFormatProvider)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: For a description of this member, see <xref href=\"System.IConvertible.ToDecimal(System.IFormatProvider)\"></xref>.\n  remarks: This member is an explicit interface member implementation. It can be used only when the <xref:System.Int32> instance is cast to an <xref:System.IConvertible> interface. The recommended alternative is to call the <xref:System.Convert.ToDecimal%2A?displayProperty=fullName> method.\n  syntax:\n    content: decimal IConvertible.ToDecimal (IFormatProvider provider);\n    parameters:\n    - id: provider\n      type: System.IFormatProvider\n      description: This parameter is ignored.\n    return:\n      type: System.Decimal\n      description: The value of the current instance, converted to a <xref href=\"System.Decimal\"></xref>.\n  overload: System.Int32.System#IConvertible#ToDecimal*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Int32.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Int32.System#IConvertible#ToDouble(System.IFormatProvider)\n  commentId: M:System.Int32.System#IConvertible#ToDouble(System.IFormatProvider)\n  id: System#IConvertible#ToDouble(System.IFormatProvider)\n  isEii: true\n  parent: System.Int32\n  langs:\n  - csharp\n  name: IConvertible.ToDouble(IFormatProvider)\n  nameWithType: Int32.IConvertible.ToDouble(IFormatProvider)\n  fullName: Int32.IConvertible.ToDouble(IFormatProvider)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: For a description of this member, see <xref href=\"System.IConvertible.ToDouble(System.IFormatProvider)\"></xref>.\n  remarks: This member is an explicit interface member implementation. It can be used only when the <xref:System.Int32> instance is cast to an <xref:System.IConvertible> interface. The recommended alternative is to call the <xref:System.Convert.ToDouble%28System.Int32%29?displayProperty=fullName> method.\n  syntax:\n    content: double IConvertible.ToDouble (IFormatProvider provider);\n    parameters:\n    - id: provider\n      type: System.IFormatProvider\n      description: This parameter is ignored.\n    return:\n      type: System.Double\n      description: The value of the current instance, converted to a <xref href=\"System.Double\"></xref>.\n  overload: System.Int32.System#IConvertible#ToDouble*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Int32.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Int32.System#IConvertible#ToInt16(System.IFormatProvider)\n  commentId: M:System.Int32.System#IConvertible#ToInt16(System.IFormatProvider)\n  id: System#IConvertible#ToInt16(System.IFormatProvider)\n  isEii: true\n  parent: System.Int32\n  langs:\n  - csharp\n  name: IConvertible.ToInt16(IFormatProvider)\n  nameWithType: Int32.IConvertible.ToInt16(IFormatProvider)\n  fullName: Int32.IConvertible.ToInt16(IFormatProvider)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: For a description of this member, see <xref href=\"System.IConvertible.ToInt16(System.IFormatProvider)\"></xref>.\n  remarks: This member is an explicit interface member implementation. It can be used only when the <xref:System.Int32> instance is cast to an <xref:System.IConvertible> interface. The recommended alternative is to call the <xref:System.Convert.ToInt16%28System.Int32%29?displayProperty=fullName> method.\n  syntax:\n    content: short IConvertible.ToInt16 (IFormatProvider provider);\n    parameters:\n    - id: provider\n      type: System.IFormatProvider\n      description: This parameter is ignored.\n    return:\n      type: System.Int16\n      description: The value of the current instance, converted to an <xref href=\"System.Int16\"></xref>.\n  overload: System.Int32.System#IConvertible#ToInt16*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Int32.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Int32.System#IConvertible#ToInt32(System.IFormatProvider)\n  commentId: M:System.Int32.System#IConvertible#ToInt32(System.IFormatProvider)\n  id: System#IConvertible#ToInt32(System.IFormatProvider)\n  isEii: true\n  parent: System.Int32\n  langs:\n  - csharp\n  name: IConvertible.ToInt32(IFormatProvider)\n  nameWithType: Int32.IConvertible.ToInt32(IFormatProvider)\n  fullName: Int32.IConvertible.ToInt32(IFormatProvider)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: For a description of this member, see <xref href=\"System.IConvertible.ToInt32(System.IFormatProvider)\"></xref>.\n  remarks: This member is an explicit interface member implementation. It can be used only when the <xref:System.Int32> instance is cast to an <xref:System.IConvertible> interface.\n  syntax:\n    content: int IConvertible.ToInt32 (IFormatProvider provider);\n    parameters:\n    - id: provider\n      type: System.IFormatProvider\n      description: This parameter is ignored.\n    return:\n      type: System.Int32\n      description: The value of the current instance, unchanged.\n  overload: System.Int32.System#IConvertible#ToInt32*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Int32.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Int32.System#IConvertible#ToInt64(System.IFormatProvider)\n  commentId: M:System.Int32.System#IConvertible#ToInt64(System.IFormatProvider)\n  id: System#IConvertible#ToInt64(System.IFormatProvider)\n  isEii: true\n  parent: System.Int32\n  langs:\n  - csharp\n  name: IConvertible.ToInt64(IFormatProvider)\n  nameWithType: Int32.IConvertible.ToInt64(IFormatProvider)\n  fullName: Int32.IConvertible.ToInt64(IFormatProvider)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: For a description of this member, see <xref href=\"System.IConvertible.ToInt64(System.IFormatProvider)\"></xref>.\n  remarks: This member is an explicit interface member implementation. It can be used only when the <xref:System.Int32> instance is cast to an <xref:System.IConvertible> interface. The recommended alternative is to call the <xref:System.Convert.ToInt64%28System.Int32%29?displayProperty=fullName> method.\n  syntax:\n    content: long IConvertible.ToInt64 (IFormatProvider provider);\n    parameters:\n    - id: provider\n      type: System.IFormatProvider\n      description: This parameter is ignored.\n    return:\n      type: System.Int64\n      description: The value of the current instance, converted to an <xref href=\"System.Int64\"></xref>.\n  overload: System.Int32.System#IConvertible#ToInt64*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Int32.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Int32.System#IConvertible#ToSByte(System.IFormatProvider)\n  commentId: M:System.Int32.System#IConvertible#ToSByte(System.IFormatProvider)\n  id: System#IConvertible#ToSByte(System.IFormatProvider)\n  isEii: true\n  parent: System.Int32\n  langs:\n  - csharp\n  name: IConvertible.ToSByte(IFormatProvider)\n  nameWithType: Int32.IConvertible.ToSByte(IFormatProvider)\n  fullName: Int32.IConvertible.ToSByte(IFormatProvider)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: For a description of this member, see <xref href=\"System.IConvertible.ToSByte(System.IFormatProvider)\"></xref>.\n  remarks: This member is an explicit interface member implementation. It can be used only when the <xref:System.Int32> instance is cast to an <xref:System.IConvertible> interface. The recommended alternative is to call the <xref:System.Convert.ToSByte%28System.Int32%29?displayProperty=fullName> method.\n  syntax:\n    content: sbyte IConvertible.ToSByte (IFormatProvider provider);\n    parameters:\n    - id: provider\n      type: System.IFormatProvider\n      description: This parameter is ignored.\n    return:\n      type: System.SByte\n      description: The value of the current instance, converted to an <xref href=\"System.SByte\"></xref>.\n  overload: System.Int32.System#IConvertible#ToSByte*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Int32.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Int32.System#IConvertible#ToSingle(System.IFormatProvider)\n  commentId: M:System.Int32.System#IConvertible#ToSingle(System.IFormatProvider)\n  id: System#IConvertible#ToSingle(System.IFormatProvider)\n  isEii: true\n  parent: System.Int32\n  langs:\n  - csharp\n  name: IConvertible.ToSingle(IFormatProvider)\n  nameWithType: Int32.IConvertible.ToSingle(IFormatProvider)\n  fullName: Int32.IConvertible.ToSingle(IFormatProvider)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: For a description of this member, see <xref href=\"System.IConvertible.ToSingle(System.IFormatProvider)\"></xref>.\n  remarks: This member is an explicit interface member implementation. It can be used only when the <xref:System.Int32> instance is cast to an <xref:System.IConvertible> interface. The recommended alternative is to call the <xref:System.Convert.ToSingle%28System.Int32%29?displayProperty=fullName> method.\n  syntax:\n    content: float IConvertible.ToSingle (IFormatProvider provider);\n    parameters:\n    - id: provider\n      type: System.IFormatProvider\n      description: This parameter is ignored.\n    return:\n      type: System.Single\n      description: The value of the current instance, converted to a <xref href=\"System.Single\"></xref>.\n  overload: System.Int32.System#IConvertible#ToSingle*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Int32.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Int32.System#IConvertible#ToType(System.Type,System.IFormatProvider)\n  commentId: M:System.Int32.System#IConvertible#ToType(System.Type,System.IFormatProvider)\n  id: System#IConvertible#ToType(System.Type,System.IFormatProvider)\n  isEii: true\n  parent: System.Int32\n  langs:\n  - csharp\n  name: IConvertible.ToType(Type, IFormatProvider)\n  nameWithType: Int32.IConvertible.ToType(Type, IFormatProvider)\n  fullName: Int32.IConvertible.ToType(Type, IFormatProvider)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: For a description of this member, see <xref href=\"System.IConvertible.ToType(System.Type,System.IFormatProvider)\"></xref>.\n  remarks: This member is an explicit interface member implementation. It can be used only when the <xref:System.Int32> instance is cast to an <xref:System.IConvertible> interface. The recommended alternative is to call the `static` (`Shared` in Visual Basic) <xref:System.Convert.ChangeType%2A?displayProperty=fullName> method instead.\n  syntax:\n    content: object IConvertible.ToType (Type type, IFormatProvider provider);\n    parameters:\n    - id: type\n      type: System.Type\n      description: The type to which to convert this <xref href=\"System.Int32\"></xref> value.\n    - id: provider\n      type: System.IFormatProvider\n      description: An object that provides information about the format of the returned value.\n    return:\n      type: System.Object\n      description: The value of the current instance, converted to <code>type</code>.\n  overload: System.Int32.System#IConvertible#ToType*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Int32.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Int32.System#IConvertible#ToUInt16(System.IFormatProvider)\n  commentId: M:System.Int32.System#IConvertible#ToUInt16(System.IFormatProvider)\n  id: System#IConvertible#ToUInt16(System.IFormatProvider)\n  isEii: true\n  parent: System.Int32\n  langs:\n  - csharp\n  name: IConvertible.ToUInt16(IFormatProvider)\n  nameWithType: Int32.IConvertible.ToUInt16(IFormatProvider)\n  fullName: Int32.IConvertible.ToUInt16(IFormatProvider)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: For a description of this member, see <xref href=\"System.IConvertible.ToUInt16(System.IFormatProvider)\"></xref>.\n  remarks: This member is an explicit interface member implementation. It can be used only when the <xref:System.Int32> instance is cast to an <xref:System.IConvertible> interface. The recommended alternative is to call the <xref:System.Convert.ToUInt16%28System.Int32%29?displayProperty=fullName> method.\n  syntax:\n    content: ushort IConvertible.ToUInt16 (IFormatProvider provider);\n    parameters:\n    - id: provider\n      type: System.IFormatProvider\n      description: This parameter is ignored.\n    return:\n      type: System.UInt16\n      description: The value of the current instance, converted to a <xref href=\"System.UInt16\"></xref>.\n  overload: System.Int32.System#IConvertible#ToUInt16*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Int32.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Int32.System#IConvertible#ToUInt32(System.IFormatProvider)\n  commentId: M:System.Int32.System#IConvertible#ToUInt32(System.IFormatProvider)\n  id: System#IConvertible#ToUInt32(System.IFormatProvider)\n  isEii: true\n  parent: System.Int32\n  langs:\n  - csharp\n  name: IConvertible.ToUInt32(IFormatProvider)\n  nameWithType: Int32.IConvertible.ToUInt32(IFormatProvider)\n  fullName: Int32.IConvertible.ToUInt32(IFormatProvider)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: For a description of this member, see <xref href=\"System.IConvertible.ToUInt32(System.IFormatProvider)\"></xref>.\n  remarks: This member is an explicit interface member implementation. It can be used only when the <xref:System.Int32> instance is cast to an <xref:System.IConvertible> interface. The recommended alternative is to call the <xref:System.Convert.ToUInt32%28System.Int32%29?displayProperty=fullName> method.\n  syntax:\n    content: uint IConvertible.ToUInt32 (IFormatProvider provider);\n    parameters:\n    - id: provider\n      type: System.IFormatProvider\n      description: This parameter is ignored.\n    return:\n      type: System.UInt32\n      description: The value of the current instance, converted to a <xref href=\"System.UInt32\"></xref>.\n  overload: System.Int32.System#IConvertible#ToUInt32*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Int32.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Int32.System#IConvertible#ToUInt64(System.IFormatProvider)\n  commentId: M:System.Int32.System#IConvertible#ToUInt64(System.IFormatProvider)\n  id: System#IConvertible#ToUInt64(System.IFormatProvider)\n  isEii: true\n  parent: System.Int32\n  langs:\n  - csharp\n  name: IConvertible.ToUInt64(IFormatProvider)\n  nameWithType: Int32.IConvertible.ToUInt64(IFormatProvider)\n  fullName: Int32.IConvertible.ToUInt64(IFormatProvider)\n  type: Method\n  assemblies:\n  - System.Runtime\n  - mscorlib\n  - netstandard\n  namespace: System\n  summary: For a description of this member, see <xref href=\"System.IConvertible.ToUInt64(System.IFormatProvider)\"></xref>.\n  remarks: This member is an explicit interface member implementation. It can be used only when the <xref:System.Int32> instance is cast to an <xref:System.IConvertible> interface. The recommended alternative is to call the <xref:System.Convert.ToUInt64%28System.Int32%29?displayProperty=fullName> method.\n  syntax:\n    content: ulong IConvertible.ToUInt64 (IFormatProvider provider);\n    parameters:\n    - id: provider\n      type: System.IFormatProvider\n      description: This parameter is ignored.\n    return:\n      type: System.UInt64\n      description: The value of the current instance, converted to a <xref href=\"System.UInt64\"></xref>.\n  overload: System.Int32.System#IConvertible#ToUInt64*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Int32.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\nreferences:\n- uid: System.ValueType\n  parent: System\n  isExternal: false\n  name: ValueType\n  nameWithType: ValueType\n  fullName: System.ValueType\n- uid: System.ArgumentException\n  parent: System\n  isExternal: false\n  name: ArgumentException\n  nameWithType: ArgumentException\n  fullName: System.ArgumentException\n- uid: System.ArgumentNullException\n  parent: System\n  isExternal: false\n  name: ArgumentNullException\n  nameWithType: ArgumentNullException\n  fullName: System.ArgumentNullException\n- uid: System.FormatException\n  parent: System\n  isExternal: false\n  name: FormatException\n  nameWithType: FormatException\n  fullName: System.FormatException\n- uid: System.OverflowException\n  parent: System\n  isExternal: false\n  name: OverflowException\n  nameWithType: OverflowException\n  fullName: System.OverflowException\n- uid: System.InvalidCastException\n  parent: System\n  isExternal: false\n  name: InvalidCastException\n  nameWithType: InvalidCastException\n  fullName: System.InvalidCastException\n- uid: System.Int32.CompareTo(System.Int32)\n  parent: System.Int32\n  isExternal: false\n  name: CompareTo(Int32)\n  nameWithType: Int32.CompareTo(Int32)\n  fullName: Int32.CompareTo(Int32)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Int32.CompareTo(System.Object)\n  parent: System.Int32\n  isExternal: false\n  name: CompareTo(Object)\n  nameWithType: Int32.CompareTo(Object)\n  fullName: Int32.CompareTo(Object)\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Int32.Equals(System.Int32)\n  parent: System.Int32\n  isExternal: false\n  name: Equals(Int32)\n  nameWithType: Int32.Equals(Int32)\n  fullName: Int32.Equals(Int32)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Int32.Equals(System.Object)\n  parent: System.Int32\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Int32.Equals(Object)\n  fullName: Int32.Equals(Object)\n- uid: System.Int32.GetHashCode\n  parent: System.Int32\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Int32.GetHashCode()\n  fullName: Int32.GetHashCode()\n- uid: System.Int32.GetTypeCode\n  parent: System.Int32\n  isExternal: false\n  name: GetTypeCode()\n  nameWithType: Int32.GetTypeCode()\n  fullName: Int32.GetTypeCode()\n- uid: System.TypeCode\n  parent: System\n  isExternal: false\n  name: TypeCode\n  nameWithType: TypeCode\n  fullName: System.TypeCode\n- uid: System.Int32.MaxValue\n  parent: System.Int32\n  isExternal: false\n  name: MaxValue\n  nameWithType: Int32.MaxValue\n  fullName: Int32.MaxValue\n- uid: System.Int32.MinValue\n  parent: System.Int32\n  isExternal: false\n  name: MinValue\n  nameWithType: Int32.MinValue\n  fullName: Int32.MinValue\n- uid: System.Int32.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)\n  parent: System.Int32\n  isExternal: false\n  name: Parse(String, NumberStyles, IFormatProvider)\n  nameWithType: Int32.Parse(String, NumberStyles, IFormatProvider)\n  fullName: Int32.Parse(String, NumberStyles, IFormatProvider)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Globalization.NumberStyles\n  parent: System.Globalization\n  isExternal: false\n  name: NumberStyles\n  nameWithType: NumberStyles\n  fullName: System.Globalization.NumberStyles\n- uid: System.IFormatProvider\n  parent: System\n  isExternal: false\n  name: IFormatProvider\n  nameWithType: IFormatProvider\n  fullName: System.IFormatProvider\n- uid: System.Int32.Parse(System.String,System.IFormatProvider)\n  parent: System.Int32\n  isExternal: false\n  name: Parse(String, IFormatProvider)\n  nameWithType: Int32.Parse(String, IFormatProvider)\n  fullName: Int32.Parse(String, IFormatProvider)\n- uid: System.Int32.Parse(System.String)\n  parent: System.Int32\n  isExternal: false\n  name: Parse(String)\n  nameWithType: Int32.Parse(String)\n  fullName: Int32.Parse(String)\n- uid: System.Int32.Parse(System.String,System.Globalization.NumberStyles)\n  parent: System.Int32\n  isExternal: false\n  name: Parse(String, NumberStyles)\n  nameWithType: Int32.Parse(String, NumberStyles)\n  fullName: Int32.Parse(String, NumberStyles)\n- uid: System.Int32.ToString\n  parent: System.Int32\n  isExternal: false\n  name: ToString()\n  nameWithType: Int32.ToString()\n  fullName: Int32.ToString()\n- uid: System.Int32.ToString(System.String,System.IFormatProvider)\n  parent: System.Int32\n  isExternal: false\n  name: ToString(String, IFormatProvider)\n  nameWithType: Int32.ToString(String, IFormatProvider)\n  fullName: Int32.ToString(String, IFormatProvider)\n- uid: System.Int32.ToString(System.String)\n  parent: System.Int32\n  isExternal: false\n  name: ToString(String)\n  nameWithType: Int32.ToString(String)\n  fullName: Int32.ToString(String)\n- uid: System.Int32.ToString(System.IFormatProvider)\n  parent: System.Int32\n  isExternal: false\n  name: ToString(IFormatProvider)\n  nameWithType: Int32.ToString(IFormatProvider)\n  fullName: Int32.ToString(IFormatProvider)\n- uid: System.Int32.TryParse(System.String,System.Int32@)\n  parent: System.Int32\n  isExternal: false\n  name: TryParse(String, Int32)\n  nameWithType: Int32.TryParse(String, Int32)\n  fullName: Int32.TryParse(String, Int32)\n- uid: System.Int32.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Int32@)\n  parent: System.Int32\n  isExternal: false\n  name: TryParse(String, NumberStyles, IFormatProvider, Int32)\n  nameWithType: Int32.TryParse(String, NumberStyles, IFormatProvider, Int32)\n  fullName: Int32.TryParse(String, NumberStyles, IFormatProvider, Int32)\n- uid: System.Int32.System#IComparable#CompareTo(System.Object)\n  parent: System.Int32\n  isExternal: false\n  name: IComparable.CompareTo(Object)\n  nameWithType: Int32.IComparable.CompareTo(Object)\n  fullName: Int32.IComparable.CompareTo(Object)\n- uid: System.Int32.System#IConvertible#GetTypeCode\n  parent: System.Int32\n  isExternal: false\n  name: IConvertible.GetTypeCode()\n  nameWithType: Int32.IConvertible.GetTypeCode()\n  fullName: Int32.IConvertible.GetTypeCode()\n- uid: System.Int32.System#IConvertible#ToBoolean(System.IFormatProvider)\n  parent: System.Int32\n  isExternal: false\n  name: IConvertible.ToBoolean(IFormatProvider)\n  nameWithType: Int32.IConvertible.ToBoolean(IFormatProvider)\n  fullName: Int32.IConvertible.ToBoolean(IFormatProvider)\n- uid: System.Int32.System#IConvertible#ToByte(System.IFormatProvider)\n  parent: System.Int32\n  isExternal: false\n  name: IConvertible.ToByte(IFormatProvider)\n  nameWithType: Int32.IConvertible.ToByte(IFormatProvider)\n  fullName: Int32.IConvertible.ToByte(IFormatProvider)\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte\n- uid: System.Int32.System#IConvertible#ToChar(System.IFormatProvider)\n  parent: System.Int32\n  isExternal: false\n  name: IConvertible.ToChar(IFormatProvider)\n  nameWithType: Int32.IConvertible.ToChar(IFormatProvider)\n  fullName: Int32.IConvertible.ToChar(IFormatProvider)\n- uid: System.Char\n  parent: System\n  isExternal: false\n  name: Char\n  nameWithType: Char\n  fullName: System.Char\n- uid: System.Int32.System#IConvertible#ToDateTime(System.IFormatProvider)\n  parent: System.Int32\n  isExternal: false\n  name: IConvertible.ToDateTime(IFormatProvider)\n  nameWithType: Int32.IConvertible.ToDateTime(IFormatProvider)\n  fullName: Int32.IConvertible.ToDateTime(IFormatProvider)\n- uid: System.DateTime\n  parent: System\n  isExternal: false\n  name: DateTime\n  nameWithType: DateTime\n  fullName: System.DateTime\n- uid: System.Int32.System#IConvertible#ToDecimal(System.IFormatProvider)\n  parent: System.Int32\n  isExternal: false\n  name: IConvertible.ToDecimal(IFormatProvider)\n  nameWithType: Int32.IConvertible.ToDecimal(IFormatProvider)\n  fullName: Int32.IConvertible.ToDecimal(IFormatProvider)\n- uid: System.Decimal\n  parent: System\n  isExternal: false\n  name: Decimal\n  nameWithType: Decimal\n  fullName: System.Decimal\n- uid: System.Int32.System#IConvertible#ToDouble(System.IFormatProvider)\n  parent: System.Int32\n  isExternal: false\n  name: IConvertible.ToDouble(IFormatProvider)\n  nameWithType: Int32.IConvertible.ToDouble(IFormatProvider)\n  fullName: Int32.IConvertible.ToDouble(IFormatProvider)\n- uid: System.Double\n  parent: System\n  isExternal: false\n  name: Double\n  nameWithType: Double\n  fullName: System.Double\n- uid: System.Int32.System#IConvertible#ToInt16(System.IFormatProvider)\n  parent: System.Int32\n  isExternal: false\n  name: IConvertible.ToInt16(IFormatProvider)\n  nameWithType: Int32.IConvertible.ToInt16(IFormatProvider)\n  fullName: Int32.IConvertible.ToInt16(IFormatProvider)\n- uid: System.Int16\n  parent: System\n  isExternal: false\n  name: Int16\n  nameWithType: Int16\n  fullName: System.Int16\n- uid: System.Int32.System#IConvertible#ToInt32(System.IFormatProvider)\n  parent: System.Int32\n  isExternal: false\n  name: IConvertible.ToInt32(IFormatProvider)\n  nameWithType: Int32.IConvertible.ToInt32(IFormatProvider)\n  fullName: Int32.IConvertible.ToInt32(IFormatProvider)\n- uid: System.Int32.System#IConvertible#ToInt64(System.IFormatProvider)\n  parent: System.Int32\n  isExternal: false\n  name: IConvertible.ToInt64(IFormatProvider)\n  nameWithType: Int32.IConvertible.ToInt64(IFormatProvider)\n  fullName: Int32.IConvertible.ToInt64(IFormatProvider)\n- uid: System.Int64\n  parent: System\n  isExternal: false\n  name: Int64\n  nameWithType: Int64\n  fullName: System.Int64\n- uid: System.Int32.System#IConvertible#ToSByte(System.IFormatProvider)\n  parent: System.Int32\n  isExternal: false\n  name: IConvertible.ToSByte(IFormatProvider)\n  nameWithType: Int32.IConvertible.ToSByte(IFormatProvider)\n  fullName: Int32.IConvertible.ToSByte(IFormatProvider)\n- uid: System.SByte\n  parent: System\n  isExternal: false\n  name: SByte\n  nameWithType: SByte\n  fullName: System.SByte\n- uid: System.Int32.System#IConvertible#ToSingle(System.IFormatProvider)\n  parent: System.Int32\n  isExternal: false\n  name: IConvertible.ToSingle(IFormatProvider)\n  nameWithType: Int32.IConvertible.ToSingle(IFormatProvider)\n  fullName: Int32.IConvertible.ToSingle(IFormatProvider)\n- uid: System.Single\n  parent: System\n  isExternal: false\n  name: Single\n  nameWithType: Single\n  fullName: System.Single\n- uid: System.Int32.System#IConvertible#ToType(System.Type,System.IFormatProvider)\n  parent: System.Int32\n  isExternal: false\n  name: IConvertible.ToType(Type, IFormatProvider)\n  nameWithType: Int32.IConvertible.ToType(Type, IFormatProvider)\n  fullName: Int32.IConvertible.ToType(Type, IFormatProvider)\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.Int32.System#IConvertible#ToUInt16(System.IFormatProvider)\n  parent: System.Int32\n  isExternal: false\n  name: IConvertible.ToUInt16(IFormatProvider)\n  nameWithType: Int32.IConvertible.ToUInt16(IFormatProvider)\n  fullName: Int32.IConvertible.ToUInt16(IFormatProvider)\n- uid: System.UInt16\n  parent: System\n  isExternal: false\n  name: UInt16\n  nameWithType: UInt16\n  fullName: System.UInt16\n- uid: System.Int32.System#IConvertible#ToUInt32(System.IFormatProvider)\n  parent: System.Int32\n  isExternal: false\n  name: IConvertible.ToUInt32(IFormatProvider)\n  nameWithType: Int32.IConvertible.ToUInt32(IFormatProvider)\n  fullName: Int32.IConvertible.ToUInt32(IFormatProvider)\n- uid: System.UInt32\n  parent: System\n  isExternal: false\n  name: UInt32\n  nameWithType: UInt32\n  fullName: System.UInt32\n- uid: System.Int32.System#IConvertible#ToUInt64(System.IFormatProvider)\n  parent: System.Int32\n  isExternal: false\n  name: IConvertible.ToUInt64(IFormatProvider)\n  nameWithType: Int32.IConvertible.ToUInt64(IFormatProvider)\n  fullName: Int32.IConvertible.ToUInt64(IFormatProvider)\n- uid: System.UInt64\n  parent: System\n  isExternal: false\n  name: UInt64\n  nameWithType: UInt64\n  fullName: System.UInt64\n- uid: System.Int32.CompareTo*\n  parent: System.Int32\n  isExternal: false\n  name: CompareTo\n  nameWithType: Int32.CompareTo\n  fullName: Int32.CompareTo\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Int32.xml\n- uid: System.Int32.Equals*\n  parent: System.Int32\n  isExternal: false\n  name: Equals\n  nameWithType: Int32.Equals\n  fullName: Int32.Equals\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Int32.xml\n- uid: System.Int32.GetHashCode*\n  parent: System.Int32\n  isExternal: false\n  name: GetHashCode\n  nameWithType: Int32.GetHashCode\n  fullName: Int32.GetHashCode\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Int32.xml\n- uid: System.Int32.GetTypeCode*\n  parent: System.Int32\n  isExternal: false\n  name: GetTypeCode\n  nameWithType: Int32.GetTypeCode\n  fullName: Int32.GetTypeCode\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Int32.xml\n- uid: System.Int32.Parse*\n  parent: System.Int32\n  isExternal: false\n  name: Parse\n  nameWithType: Int32.Parse\n  fullName: Int32.Parse\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Int32.xml\n- uid: System.Int32.ToString*\n  parent: System.Int32\n  isExternal: false\n  name: ToString\n  nameWithType: Int32.ToString\n  fullName: Int32.ToString\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Int32.xml\n- uid: System.Int32.TryParse*\n  parent: System.Int32\n  isExternal: false\n  name: TryParse\n  nameWithType: Int32.TryParse\n  fullName: Int32.TryParse\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Int32.xml\n- uid: System.Int32.System#IComparable#CompareTo*\n  parent: System.Int32\n  isExternal: false\n  name: System.IComparable.CompareTo\n  nameWithType: Int32.System.IComparable.CompareTo\n  fullName: Int32.System.IComparable.CompareTo\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Int32.xml\n- uid: System.Int32.System#IConvertible#GetTypeCode*\n  parent: System.Int32\n  isExternal: false\n  name: System.IConvertible.GetTypeCode\n  nameWithType: Int32.System.IConvertible.GetTypeCode\n  fullName: Int32.System.IConvertible.GetTypeCode\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Int32.xml\n- uid: System.Int32.System#IConvertible#ToBoolean*\n  parent: System.Int32\n  isExternal: false\n  name: System.IConvertible.ToBoolean\n  nameWithType: Int32.System.IConvertible.ToBoolean\n  fullName: Int32.System.IConvertible.ToBoolean\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Int32.xml\n- uid: System.Int32.System#IConvertible#ToByte*\n  parent: System.Int32\n  isExternal: false\n  name: System.IConvertible.ToByte\n  nameWithType: Int32.System.IConvertible.ToByte\n  fullName: Int32.System.IConvertible.ToByte\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Int32.xml\n- uid: System.Int32.System#IConvertible#ToChar*\n  parent: System.Int32\n  isExternal: false\n  name: System.IConvertible.ToChar\n  nameWithType: Int32.System.IConvertible.ToChar\n  fullName: Int32.System.IConvertible.ToChar\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Int32.xml\n- uid: System.Int32.System#IConvertible#ToDateTime*\n  parent: System.Int32\n  isExternal: false\n  name: System.IConvertible.ToDateTime\n  nameWithType: Int32.System.IConvertible.ToDateTime\n  fullName: Int32.System.IConvertible.ToDateTime\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Int32.xml\n- uid: System.Int32.System#IConvertible#ToDecimal*\n  parent: System.Int32\n  isExternal: false\n  name: System.IConvertible.ToDecimal\n  nameWithType: Int32.System.IConvertible.ToDecimal\n  fullName: Int32.System.IConvertible.ToDecimal\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Int32.xml\n- uid: System.Int32.System#IConvertible#ToDouble*\n  parent: System.Int32\n  isExternal: false\n  name: System.IConvertible.ToDouble\n  nameWithType: Int32.System.IConvertible.ToDouble\n  fullName: Int32.System.IConvertible.ToDouble\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Int32.xml\n- uid: System.Int32.System#IConvertible#ToInt16*\n  parent: System.Int32\n  isExternal: false\n  name: System.IConvertible.ToInt16\n  nameWithType: Int32.System.IConvertible.ToInt16\n  fullName: Int32.System.IConvertible.ToInt16\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Int32.xml\n- uid: System.Int32.System#IConvertible#ToInt32*\n  parent: System.Int32\n  isExternal: false\n  name: System.IConvertible.ToInt32\n  nameWithType: Int32.System.IConvertible.ToInt32\n  fullName: Int32.System.IConvertible.ToInt32\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Int32.xml\n- uid: System.Int32.System#IConvertible#ToInt64*\n  parent: System.Int32\n  isExternal: false\n  name: System.IConvertible.ToInt64\n  nameWithType: Int32.System.IConvertible.ToInt64\n  fullName: Int32.System.IConvertible.ToInt64\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Int32.xml\n- uid: System.Int32.System#IConvertible#ToSByte*\n  parent: System.Int32\n  isExternal: false\n  name: System.IConvertible.ToSByte\n  nameWithType: Int32.System.IConvertible.ToSByte\n  fullName: Int32.System.IConvertible.ToSByte\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Int32.xml\n- uid: System.Int32.System#IConvertible#ToSingle*\n  parent: System.Int32\n  isExternal: false\n  name: System.IConvertible.ToSingle\n  nameWithType: Int32.System.IConvertible.ToSingle\n  fullName: Int32.System.IConvertible.ToSingle\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Int32.xml\n- uid: System.Int32.System#IConvertible#ToType*\n  parent: System.Int32\n  isExternal: false\n  name: System.IConvertible.ToType\n  nameWithType: Int32.System.IConvertible.ToType\n  fullName: Int32.System.IConvertible.ToType\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Int32.xml\n- uid: System.Int32.System#IConvertible#ToUInt16*\n  parent: System.Int32\n  isExternal: false\n  name: System.IConvertible.ToUInt16\n  nameWithType: Int32.System.IConvertible.ToUInt16\n  fullName: Int32.System.IConvertible.ToUInt16\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Int32.xml\n- uid: System.Int32.System#IConvertible#ToUInt32*\n  parent: System.Int32\n  isExternal: false\n  name: System.IConvertible.ToUInt32\n  nameWithType: Int32.System.IConvertible.ToUInt32\n  fullName: Int32.System.IConvertible.ToUInt32\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Int32.xml\n- uid: System.Int32.System#IConvertible#ToUInt64*\n  parent: System.Int32\n  isExternal: false\n  name: System.IConvertible.ToUInt64\n  nameWithType: Int32.System.IConvertible.ToUInt64\n  fullName: Int32.System.IConvertible.ToUInt64\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System/Int32.xml\n- uid: System.IComparable\n  parent: System\n  isExternal: false\n  name: IComparable\n  nameWithType: IComparable\n  fullName: System.IComparable\n- uid: System.IComparable`1\n  name: IComparable<T>\n  nameWithType: IComparable<T>\n  fullName: System.IComparable<T>\n- uid: System.IComparable{System.Int32}\n  parent: System\n  isExternal: false\n  name: IComparable<Int32>\n  nameWithType: IComparable<Int32>\n  fullName: System.IComparable<System.Int32>\n  spec.csharp:\n  - uid: System.IComparable`1\n    name: IComparable\n    nameWithType: IComparable\n    fullName: System.IComparable\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Int32\n    name: Int32\n    nameWithType: Int32\n    fullName: System.Int32\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.IConvertible\n  parent: System\n  isExternal: false\n  name: IConvertible\n  nameWithType: IConvertible\n  fullName: System.IConvertible\n- uid: System.IEquatable`1\n  name: IEquatable<T>\n  nameWithType: IEquatable<T>\n  fullName: System.IEquatable<T>\n- uid: System.IEquatable{System.Int32}\n  parent: System\n  isExternal: false\n  name: IEquatable<Int32>\n  nameWithType: IEquatable<Int32>\n  fullName: System.IEquatable<System.Int32>\n  spec.csharp:\n  - uid: System.IEquatable`1\n    name: IEquatable\n    nameWithType: IEquatable\n    fullName: System.IEquatable\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Int32\n    name: Int32\n    nameWithType: Int32\n    fullName: System.Int32\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.IFormattable\n  parent: System\n  isExternal: false\n  name: IFormattable\n  nameWithType: IFormattable\n  fullName: System.IFormattable\n"}