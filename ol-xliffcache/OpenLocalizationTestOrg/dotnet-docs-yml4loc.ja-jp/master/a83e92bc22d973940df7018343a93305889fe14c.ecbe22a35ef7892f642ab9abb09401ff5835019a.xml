{"nodes":[{"content":"Represents a visitor or rewriter for dynamic expression trees.","nodes":[{"pos":[0,62],"content":"Represents a visitor or rewriter for dynamic expression trees.","nodes":[{"content":"Represents a visitor or rewriter for dynamic expression trees.","pos":[0,62]}]}],"pos":[685,748],"yaml":true},{"content":"This class is designed to be inherited to create more specialized classes whose functionality requires traversing, examining, or copying a dynamic expression tree.","nodes":[{"pos":[0,163],"content":"This class is designed to be inherited to create more specialized classes whose functionality requires traversing, examining, or copying a dynamic expression tree.","nodes":[{"content":"This class is designed to be inherited to create more specialized classes whose functionality requires traversing, examining, or copying a dynamic expression tree.","pos":[0,163]}]}],"pos":[759,923],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of <xref href=\"System.Linq.Expressions.DynamicExpressionVisitor\"></xref>.","nodes":[{"pos":[0,100],"content":"Initializes a new instance of <ph id=\"ph1\">&lt;xref href=\"System.Linq.Expressions.DynamicExpressionVisitor\"&gt;&lt;/xref&gt;</ph>.","source":"Initializes a new instance of <xref href=\"System.Linq.Expressions.DynamicExpressionVisitor\"></xref>."}],"pos":[6775,6876],"yaml":true},{"content":"Visits the children of the <xref href=\"System.Linq.Expressions.DynamicExpression\"></xref>.","nodes":[{"pos":[0,90],"content":"Visits the children of the <ph id=\"ph1\">&lt;xref href=\"System.Linq.Expressions.DynamicExpression\"&gt;&lt;/xref&gt;</ph>.","source":"Visits the children of the <xref href=\"System.Linq.Expressions.DynamicExpression\"></xref>."}],"pos":[8571,8662],"yaml":true},{"content":"The expression to visit.","nodes":[{"pos":[0,24],"content":"The expression to visit.","nodes":[{"content":"The expression to visit.","pos":[0,24]}]}],"pos":[8906,8931],"yaml":true},{"content":"Returns <xref href=\"System.Linq.Expressions.Expression\"></xref>, the modified expression, if it or any subexpression is modified; otherwise, returns the original expression.","nodes":[{"pos":[0,173],"content":"Returns <ph id=\"ph1\">&lt;xref href=\"System.Linq.Expressions.Expression\"&gt;&lt;/xref&gt;</ph>, the modified expression, if it or any subexpression is modified; otherwise, returns the original expression.","source":"Returns <xref href=\"System.Linq.Expressions.Expression\"></xref>, the modified expression, if it or any subexpression is modified; otherwise, returns the original expression."}],"pos":[9009,9183],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Linq.Expressions.DynamicExpressionVisitor\n  commentId: T:System.Linq.Expressions.DynamicExpressionVisitor\n  id: DynamicExpressionVisitor\n  children:\n  - System.Linq.Expressions.DynamicExpressionVisitor.#ctor\n  - System.Linq.Expressions.DynamicExpressionVisitor.VisitDynamic(System.Linq.Expressions.DynamicExpression)\n  langs:\n  - csharp\n  name: DynamicExpressionVisitor\n  nameWithType: DynamicExpressionVisitor\n  fullName: System.Linq.Expressions.DynamicExpressionVisitor\n  type: Class\n  assemblies:\n  - System.Dynamic.Runtime\n  - System.Core\n  - netstandard\n  - System.Linq.Expressions\n  namespace: System.Linq.Expressions\n  summary: Represents a visitor or rewriter for dynamic expression trees.\n  remarks: This class is designed to be inherited to create more specialized classes whose functionality requires traversing, examining, or copying a dynamic expression tree.\n  syntax:\n    content: 'public abstract class DynamicExpressionVisitor : System.Linq.Expressions.ExpressionVisitor'\n  inheritance:\n  - System.Object\n  - System.Linq.Expressions.ExpressionVisitor\n  implements: []\n  inheritedMembers:\n  - System.Linq.Expressions.ExpressionVisitor.Visit(System.Collections.ObjectModel.ReadOnlyCollection{System.Linq.Expressions.Expression})\n  - System.Linq.Expressions.ExpressionVisitor.Visit(System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.ExpressionVisitor.Visit``1(System.Collections.ObjectModel.ReadOnlyCollection{``0},System.Func{``0,``0})\n  - System.Linq.Expressions.ExpressionVisitor.VisitAndConvert``1(``0,System.String)\n  - System.Linq.Expressions.ExpressionVisitor.VisitAndConvert``1(System.Collections.ObjectModel.ReadOnlyCollection{``0},System.String)\n  - System.Linq.Expressions.ExpressionVisitor.VisitBinary(System.Linq.Expressions.BinaryExpression)\n  - System.Linq.Expressions.ExpressionVisitor.VisitBlock(System.Linq.Expressions.BlockExpression)\n  - System.Linq.Expressions.ExpressionVisitor.VisitCatchBlock(System.Linq.Expressions.CatchBlock)\n  - System.Linq.Expressions.ExpressionVisitor.VisitConditional(System.Linq.Expressions.ConditionalExpression)\n  - System.Linq.Expressions.ExpressionVisitor.VisitConstant(System.Linq.Expressions.ConstantExpression)\n  - System.Linq.Expressions.ExpressionVisitor.VisitDebugInfo(System.Linq.Expressions.DebugInfoExpression)\n  - System.Linq.Expressions.ExpressionVisitor.VisitDefault(System.Linq.Expressions.DefaultExpression)\n  - System.Linq.Expressions.ExpressionVisitor.VisitElementInit(System.Linq.Expressions.ElementInit)\n  - System.Linq.Expressions.ExpressionVisitor.VisitExtension(System.Linq.Expressions.Expression)\n  - System.Linq.Expressions.ExpressionVisitor.VisitGoto(System.Linq.Expressions.GotoExpression)\n  - System.Linq.Expressions.ExpressionVisitor.VisitIndex(System.Linq.Expressions.IndexExpression)\n  - System.Linq.Expressions.ExpressionVisitor.VisitInvocation(System.Linq.Expressions.InvocationExpression)\n  - System.Linq.Expressions.ExpressionVisitor.VisitLabel(System.Linq.Expressions.LabelExpression)\n  - System.Linq.Expressions.ExpressionVisitor.VisitLabelTarget(System.Linq.Expressions.LabelTarget)\n  - System.Linq.Expressions.ExpressionVisitor.VisitLambda``1(System.Linq.Expressions.Expression{``0})\n  - System.Linq.Expressions.ExpressionVisitor.VisitListInit(System.Linq.Expressions.ListInitExpression)\n  - System.Linq.Expressions.ExpressionVisitor.VisitLoop(System.Linq.Expressions.LoopExpression)\n  - System.Linq.Expressions.ExpressionVisitor.VisitMember(System.Linq.Expressions.MemberExpression)\n  - System.Linq.Expressions.ExpressionVisitor.VisitMemberAssignment(System.Linq.Expressions.MemberAssignment)\n  - System.Linq.Expressions.ExpressionVisitor.VisitMemberBinding(System.Linq.Expressions.MemberBinding)\n  - System.Linq.Expressions.ExpressionVisitor.VisitMemberInit(System.Linq.Expressions.MemberInitExpression)\n  - System.Linq.Expressions.ExpressionVisitor.VisitMemberListBinding(System.Linq.Expressions.MemberListBinding)\n  - System.Linq.Expressions.ExpressionVisitor.VisitMemberMemberBinding(System.Linq.Expressions.MemberMemberBinding)\n  - System.Linq.Expressions.ExpressionVisitor.VisitMethodCall(System.Linq.Expressions.MethodCallExpression)\n  - System.Linq.Expressions.ExpressionVisitor.VisitNew(System.Linq.Expressions.NewExpression)\n  - System.Linq.Expressions.ExpressionVisitor.VisitNewArray(System.Linq.Expressions.NewArrayExpression)\n  - System.Linq.Expressions.ExpressionVisitor.VisitParameter(System.Linq.Expressions.ParameterExpression)\n  - System.Linq.Expressions.ExpressionVisitor.VisitRuntimeVariables(System.Linq.Expressions.RuntimeVariablesExpression)\n  - System.Linq.Expressions.ExpressionVisitor.VisitSwitch(System.Linq.Expressions.SwitchExpression)\n  - System.Linq.Expressions.ExpressionVisitor.VisitSwitchCase(System.Linq.Expressions.SwitchCase)\n  - System.Linq.Expressions.ExpressionVisitor.VisitTry(System.Linq.Expressions.TryExpression)\n  - System.Linq.Expressions.ExpressionVisitor.VisitTypeBinary(System.Linq.Expressions.TypeBinaryExpression)\n  - System.Linq.Expressions.ExpressionVisitor.VisitUnary(System.Linq.Expressions.UnaryExpression)\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq.Expressions/DynamicExpressionVisitor.xml\n  ms.technology:\n  - dotnet-standard\n  author: BillWagner\n  ms.author: wiwagn\n  manager: wpickett\n- uid: System.Linq.Expressions.DynamicExpressionVisitor.#ctor\n  commentId: M:System.Linq.Expressions.DynamicExpressionVisitor.#ctor\n  id: '#ctor'\n  parent: System.Linq.Expressions.DynamicExpressionVisitor\n  langs:\n  - csharp\n  name: DynamicExpressionVisitor()\n  nameWithType: DynamicExpressionVisitor.DynamicExpressionVisitor()\n  fullName: DynamicExpressionVisitor.DynamicExpressionVisitor()\n  type: Constructor\n  assemblies:\n  - System.Dynamic.Runtime\n  - System.Core\n  - netstandard\n  - System.Linq.Expressions\n  namespace: System.Linq.Expressions\n  summary: Initializes a new instance of <xref href=\"System.Linq.Expressions.DynamicExpressionVisitor\"></xref>.\n  syntax:\n    content: protected DynamicExpressionVisitor ();\n    parameters: []\n  overload: System.Linq.Expressions.DynamicExpressionVisitor.#ctor*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq.Expressions/DynamicExpressionVisitor.xml\n  ms.technology:\n  - dotnet-standard\n  author: BillWagner\n  ms.author: wiwagn\n  manager: wpickett\n- uid: System.Linq.Expressions.DynamicExpressionVisitor.VisitDynamic(System.Linq.Expressions.DynamicExpression)\n  commentId: M:System.Linq.Expressions.DynamicExpressionVisitor.VisitDynamic(System.Linq.Expressions.DynamicExpression)\n  id: VisitDynamic(System.Linq.Expressions.DynamicExpression)\n  parent: System.Linq.Expressions.DynamicExpressionVisitor\n  langs:\n  - csharp\n  name: VisitDynamic(DynamicExpression)\n  nameWithType: DynamicExpressionVisitor.VisitDynamic(DynamicExpression)\n  fullName: DynamicExpressionVisitor.VisitDynamic(DynamicExpression)\n  type: Method\n  assemblies:\n  - System.Dynamic.Runtime\n  - System.Core\n  - netstandard\n  - System.Linq.Expressions\n  namespace: System.Linq.Expressions\n  summary: Visits the children of the <xref href=\"System.Linq.Expressions.DynamicExpression\"></xref>.\n  syntax:\n    content: protected override System.Linq.Expressions.Expression VisitDynamic (System.Linq.Expressions.DynamicExpression node);\n    parameters:\n    - id: node\n      type: System.Linq.Expressions.DynamicExpression\n      description: The expression to visit.\n    return:\n      type: System.Linq.Expressions.Expression\n      description: Returns <xref href=\"System.Linq.Expressions.Expression\"></xref>, the modified expression, if it or any subexpression is modified; otherwise, returns the original expression.\n  overload: System.Linq.Expressions.DynamicExpressionVisitor.VisitDynamic*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq.Expressions/DynamicExpressionVisitor.xml\n  ms.technology:\n  - dotnet-standard\n  author: BillWagner\n  ms.author: wiwagn\n  manager: wpickett\nreferences:\n- uid: System.Linq.Expressions.ExpressionVisitor\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: ExpressionVisitor\n  nameWithType: ExpressionVisitor\n  fullName: System.Linq.Expressions.ExpressionVisitor\n- uid: System.Linq.Expressions.DynamicExpressionVisitor.#ctor\n  parent: System.Linq.Expressions.DynamicExpressionVisitor\n  isExternal: false\n  name: DynamicExpressionVisitor()\n  nameWithType: DynamicExpressionVisitor.DynamicExpressionVisitor()\n  fullName: DynamicExpressionVisitor.DynamicExpressionVisitor()\n- uid: System.Linq.Expressions.DynamicExpressionVisitor.VisitDynamic(System.Linq.Expressions.DynamicExpression)\n  parent: System.Linq.Expressions.DynamicExpressionVisitor\n  isExternal: false\n  name: VisitDynamic(DynamicExpression)\n  nameWithType: DynamicExpressionVisitor.VisitDynamic(DynamicExpression)\n  fullName: DynamicExpressionVisitor.VisitDynamic(DynamicExpression)\n- uid: System.Linq.Expressions.Expression\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: Expression\n  nameWithType: Expression\n  fullName: System.Linq.Expressions.Expression\n- uid: System.Linq.Expressions.DynamicExpression\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: DynamicExpression\n  nameWithType: DynamicExpression\n  fullName: System.Linq.Expressions.DynamicExpression\n- uid: System.Linq.Expressions.DynamicExpressionVisitor.#ctor*\n  parent: System.Linq.Expressions.DynamicExpressionVisitor\n  isExternal: false\n  name: DynamicExpressionVisitor\n  nameWithType: DynamicExpressionVisitor.DynamicExpressionVisitor\n  fullName: DynamicExpressionVisitor.DynamicExpressionVisitor\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq.Expressions/DynamicExpressionVisitor.xml\n- uid: System.Linq.Expressions.DynamicExpressionVisitor.VisitDynamic*\n  parent: System.Linq.Expressions.DynamicExpressionVisitor\n  isExternal: false\n  name: VisitDynamic\n  nameWithType: DynamicExpressionVisitor.VisitDynamic\n  fullName: DynamicExpressionVisitor.VisitDynamic\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Linq.Expressions/DynamicExpressionVisitor.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.Linq.Expressions.ExpressionVisitor.Visit(System.Collections.ObjectModel.ReadOnlyCollection{System.Linq.Expressions.Expression})\n  parent: System.Linq.Expressions.ExpressionVisitor\n  isExternal: false\n  name: Visit(ReadOnlyCollection<Expression>)\n  nameWithType: ExpressionVisitor.Visit(ReadOnlyCollection<Expression>)\n  fullName: ExpressionVisitor.Visit(ReadOnlyCollection<Expression>)\n- uid: System.Linq.Expressions.ExpressionVisitor.Visit(System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.ExpressionVisitor\n  isExternal: false\n  name: Visit(Expression)\n  nameWithType: ExpressionVisitor.Visit(Expression)\n  fullName: ExpressionVisitor.Visit(Expression)\n- uid: System.Linq.Expressions.ExpressionVisitor.Visit``1(System.Collections.ObjectModel.ReadOnlyCollection{``0},System.Func{``0,``0})\n  parent: System.Linq.Expressions.ExpressionVisitor\n  isExternal: false\n  name: Visit<T>(ReadOnlyCollection<T>, Func<T,T>)\n  nameWithType: ExpressionVisitor.Visit<T>(ReadOnlyCollection<T>, Func<T,T>)\n  fullName: ExpressionVisitor.Visit<T>(ReadOnlyCollection<T>, Func<T,T>)\n- uid: System.Linq.Expressions.ExpressionVisitor.VisitAndConvert``1(System.Collections.ObjectModel.ReadOnlyCollection{``0},System.String)\n  parent: System.Linq.Expressions.ExpressionVisitor\n  isExternal: false\n  name: VisitAndConvert<T>(ReadOnlyCollection<T>, String)\n  nameWithType: ExpressionVisitor.VisitAndConvert<T>(ReadOnlyCollection<T>, String)\n  fullName: ExpressionVisitor.VisitAndConvert<T>(ReadOnlyCollection<T>, String)\n- uid: System.Linq.Expressions.ExpressionVisitor.VisitAndConvert``1(``0,System.String)\n  parent: System.Linq.Expressions.ExpressionVisitor\n  isExternal: false\n  name: VisitAndConvert<T>(T, String)\n  nameWithType: ExpressionVisitor.VisitAndConvert<T>(T, String)\n  fullName: ExpressionVisitor.VisitAndConvert<T>(T, String)\n- uid: System.Linq.Expressions.ExpressionVisitor.VisitBinary(System.Linq.Expressions.BinaryExpression)\n  parent: System.Linq.Expressions.ExpressionVisitor\n  isExternal: false\n  name: VisitBinary(BinaryExpression)\n  nameWithType: ExpressionVisitor.VisitBinary(BinaryExpression)\n  fullName: ExpressionVisitor.VisitBinary(BinaryExpression)\n- uid: System.Linq.Expressions.ExpressionVisitor.VisitBlock(System.Linq.Expressions.BlockExpression)\n  parent: System.Linq.Expressions.ExpressionVisitor\n  isExternal: false\n  name: VisitBlock(BlockExpression)\n  nameWithType: ExpressionVisitor.VisitBlock(BlockExpression)\n  fullName: ExpressionVisitor.VisitBlock(BlockExpression)\n- uid: System.Linq.Expressions.ExpressionVisitor.VisitCatchBlock(System.Linq.Expressions.CatchBlock)\n  parent: System.Linq.Expressions.ExpressionVisitor\n  isExternal: false\n  name: VisitCatchBlock(CatchBlock)\n  nameWithType: ExpressionVisitor.VisitCatchBlock(CatchBlock)\n  fullName: ExpressionVisitor.VisitCatchBlock(CatchBlock)\n- uid: System.Linq.Expressions.ExpressionVisitor.VisitConditional(System.Linq.Expressions.ConditionalExpression)\n  parent: System.Linq.Expressions.ExpressionVisitor\n  isExternal: false\n  name: VisitConditional(ConditionalExpression)\n  nameWithType: ExpressionVisitor.VisitConditional(ConditionalExpression)\n  fullName: ExpressionVisitor.VisitConditional(ConditionalExpression)\n- uid: System.Linq.Expressions.ExpressionVisitor.VisitConstant(System.Linq.Expressions.ConstantExpression)\n  parent: System.Linq.Expressions.ExpressionVisitor\n  isExternal: false\n  name: VisitConstant(ConstantExpression)\n  nameWithType: ExpressionVisitor.VisitConstant(ConstantExpression)\n  fullName: ExpressionVisitor.VisitConstant(ConstantExpression)\n- uid: System.Linq.Expressions.ExpressionVisitor.VisitDebugInfo(System.Linq.Expressions.DebugInfoExpression)\n  parent: System.Linq.Expressions.ExpressionVisitor\n  isExternal: false\n  name: VisitDebugInfo(DebugInfoExpression)\n  nameWithType: ExpressionVisitor.VisitDebugInfo(DebugInfoExpression)\n  fullName: ExpressionVisitor.VisitDebugInfo(DebugInfoExpression)\n- uid: System.Linq.Expressions.ExpressionVisitor.VisitDefault(System.Linq.Expressions.DefaultExpression)\n  parent: System.Linq.Expressions.ExpressionVisitor\n  isExternal: false\n  name: VisitDefault(DefaultExpression)\n  nameWithType: ExpressionVisitor.VisitDefault(DefaultExpression)\n  fullName: ExpressionVisitor.VisitDefault(DefaultExpression)\n- uid: System.Linq.Expressions.ExpressionVisitor.VisitElementInit(System.Linq.Expressions.ElementInit)\n  parent: System.Linq.Expressions.ExpressionVisitor\n  isExternal: false\n  name: VisitElementInit(ElementInit)\n  nameWithType: ExpressionVisitor.VisitElementInit(ElementInit)\n  fullName: ExpressionVisitor.VisitElementInit(ElementInit)\n- uid: System.Linq.Expressions.ExpressionVisitor.VisitExtension(System.Linq.Expressions.Expression)\n  parent: System.Linq.Expressions.ExpressionVisitor\n  isExternal: false\n  name: VisitExtension(Expression)\n  nameWithType: ExpressionVisitor.VisitExtension(Expression)\n  fullName: ExpressionVisitor.VisitExtension(Expression)\n- uid: System.Linq.Expressions.ExpressionVisitor.VisitGoto(System.Linq.Expressions.GotoExpression)\n  parent: System.Linq.Expressions.ExpressionVisitor\n  isExternal: false\n  name: VisitGoto(GotoExpression)\n  nameWithType: ExpressionVisitor.VisitGoto(GotoExpression)\n  fullName: ExpressionVisitor.VisitGoto(GotoExpression)\n- uid: System.Linq.Expressions.ExpressionVisitor.VisitIndex(System.Linq.Expressions.IndexExpression)\n  parent: System.Linq.Expressions.ExpressionVisitor\n  isExternal: false\n  name: VisitIndex(IndexExpression)\n  nameWithType: ExpressionVisitor.VisitIndex(IndexExpression)\n  fullName: ExpressionVisitor.VisitIndex(IndexExpression)\n- uid: System.Linq.Expressions.ExpressionVisitor.VisitInvocation(System.Linq.Expressions.InvocationExpression)\n  parent: System.Linq.Expressions.ExpressionVisitor\n  isExternal: false\n  name: VisitInvocation(InvocationExpression)\n  nameWithType: ExpressionVisitor.VisitInvocation(InvocationExpression)\n  fullName: ExpressionVisitor.VisitInvocation(InvocationExpression)\n- uid: System.Linq.Expressions.ExpressionVisitor.VisitLabel(System.Linq.Expressions.LabelExpression)\n  parent: System.Linq.Expressions.ExpressionVisitor\n  isExternal: false\n  name: VisitLabel(LabelExpression)\n  nameWithType: ExpressionVisitor.VisitLabel(LabelExpression)\n  fullName: ExpressionVisitor.VisitLabel(LabelExpression)\n- uid: System.Linq.Expressions.ExpressionVisitor.VisitLabelTarget(System.Linq.Expressions.LabelTarget)\n  parent: System.Linq.Expressions.ExpressionVisitor\n  isExternal: false\n  name: VisitLabelTarget(LabelTarget)\n  nameWithType: ExpressionVisitor.VisitLabelTarget(LabelTarget)\n  fullName: ExpressionVisitor.VisitLabelTarget(LabelTarget)\n- uid: System.Linq.Expressions.ExpressionVisitor.VisitLambda``1(System.Linq.Expressions.Expression{``0})\n  parent: System.Linq.Expressions.ExpressionVisitor\n  isExternal: false\n  name: VisitLambda<T>(Expression<T>)\n  nameWithType: ExpressionVisitor.VisitLambda<T>(Expression<T>)\n  fullName: ExpressionVisitor.VisitLambda<T>(Expression<T>)\n- uid: System.Linq.Expressions.ExpressionVisitor.VisitListInit(System.Linq.Expressions.ListInitExpression)\n  parent: System.Linq.Expressions.ExpressionVisitor\n  isExternal: false\n  name: VisitListInit(ListInitExpression)\n  nameWithType: ExpressionVisitor.VisitListInit(ListInitExpression)\n  fullName: ExpressionVisitor.VisitListInit(ListInitExpression)\n- uid: System.Linq.Expressions.ExpressionVisitor.VisitLoop(System.Linq.Expressions.LoopExpression)\n  parent: System.Linq.Expressions.ExpressionVisitor\n  isExternal: false\n  name: VisitLoop(LoopExpression)\n  nameWithType: ExpressionVisitor.VisitLoop(LoopExpression)\n  fullName: ExpressionVisitor.VisitLoop(LoopExpression)\n- uid: System.Linq.Expressions.ExpressionVisitor.VisitMember(System.Linq.Expressions.MemberExpression)\n  parent: System.Linq.Expressions.ExpressionVisitor\n  isExternal: false\n  name: VisitMember(MemberExpression)\n  nameWithType: ExpressionVisitor.VisitMember(MemberExpression)\n  fullName: ExpressionVisitor.VisitMember(MemberExpression)\n- uid: System.Linq.Expressions.ExpressionVisitor.VisitMemberAssignment(System.Linq.Expressions.MemberAssignment)\n  parent: System.Linq.Expressions.ExpressionVisitor\n  isExternal: false\n  name: VisitMemberAssignment(MemberAssignment)\n  nameWithType: ExpressionVisitor.VisitMemberAssignment(MemberAssignment)\n  fullName: ExpressionVisitor.VisitMemberAssignment(MemberAssignment)\n- uid: System.Linq.Expressions.ExpressionVisitor.VisitMemberBinding(System.Linq.Expressions.MemberBinding)\n  parent: System.Linq.Expressions.ExpressionVisitor\n  isExternal: false\n  name: VisitMemberBinding(MemberBinding)\n  nameWithType: ExpressionVisitor.VisitMemberBinding(MemberBinding)\n  fullName: ExpressionVisitor.VisitMemberBinding(MemberBinding)\n- uid: System.Linq.Expressions.ExpressionVisitor.VisitMemberInit(System.Linq.Expressions.MemberInitExpression)\n  parent: System.Linq.Expressions.ExpressionVisitor\n  isExternal: false\n  name: VisitMemberInit(MemberInitExpression)\n  nameWithType: ExpressionVisitor.VisitMemberInit(MemberInitExpression)\n  fullName: ExpressionVisitor.VisitMemberInit(MemberInitExpression)\n- uid: System.Linq.Expressions.ExpressionVisitor.VisitMemberListBinding(System.Linq.Expressions.MemberListBinding)\n  parent: System.Linq.Expressions.ExpressionVisitor\n  isExternal: false\n  name: VisitMemberListBinding(MemberListBinding)\n  nameWithType: ExpressionVisitor.VisitMemberListBinding(MemberListBinding)\n  fullName: ExpressionVisitor.VisitMemberListBinding(MemberListBinding)\n- uid: System.Linq.Expressions.ExpressionVisitor.VisitMemberMemberBinding(System.Linq.Expressions.MemberMemberBinding)\n  parent: System.Linq.Expressions.ExpressionVisitor\n  isExternal: false\n  name: VisitMemberMemberBinding(MemberMemberBinding)\n  nameWithType: ExpressionVisitor.VisitMemberMemberBinding(MemberMemberBinding)\n  fullName: ExpressionVisitor.VisitMemberMemberBinding(MemberMemberBinding)\n- uid: System.Linq.Expressions.ExpressionVisitor.VisitMethodCall(System.Linq.Expressions.MethodCallExpression)\n  parent: System.Linq.Expressions.ExpressionVisitor\n  isExternal: false\n  name: VisitMethodCall(MethodCallExpression)\n  nameWithType: ExpressionVisitor.VisitMethodCall(MethodCallExpression)\n  fullName: ExpressionVisitor.VisitMethodCall(MethodCallExpression)\n- uid: System.Linq.Expressions.ExpressionVisitor.VisitNew(System.Linq.Expressions.NewExpression)\n  parent: System.Linq.Expressions.ExpressionVisitor\n  isExternal: false\n  name: VisitNew(NewExpression)\n  nameWithType: ExpressionVisitor.VisitNew(NewExpression)\n  fullName: ExpressionVisitor.VisitNew(NewExpression)\n- uid: System.Linq.Expressions.ExpressionVisitor.VisitNewArray(System.Linq.Expressions.NewArrayExpression)\n  parent: System.Linq.Expressions.ExpressionVisitor\n  isExternal: false\n  name: VisitNewArray(NewArrayExpression)\n  nameWithType: ExpressionVisitor.VisitNewArray(NewArrayExpression)\n  fullName: ExpressionVisitor.VisitNewArray(NewArrayExpression)\n- uid: System.Linq.Expressions.ExpressionVisitor.VisitParameter(System.Linq.Expressions.ParameterExpression)\n  parent: System.Linq.Expressions.ExpressionVisitor\n  isExternal: false\n  name: VisitParameter(ParameterExpression)\n  nameWithType: ExpressionVisitor.VisitParameter(ParameterExpression)\n  fullName: ExpressionVisitor.VisitParameter(ParameterExpression)\n- uid: System.Linq.Expressions.ExpressionVisitor.VisitRuntimeVariables(System.Linq.Expressions.RuntimeVariablesExpression)\n  parent: System.Linq.Expressions.ExpressionVisitor\n  isExternal: false\n  name: VisitRuntimeVariables(RuntimeVariablesExpression)\n  nameWithType: ExpressionVisitor.VisitRuntimeVariables(RuntimeVariablesExpression)\n  fullName: ExpressionVisitor.VisitRuntimeVariables(RuntimeVariablesExpression)\n- uid: System.Linq.Expressions.ExpressionVisitor.VisitSwitch(System.Linq.Expressions.SwitchExpression)\n  parent: System.Linq.Expressions.ExpressionVisitor\n  isExternal: false\n  name: VisitSwitch(SwitchExpression)\n  nameWithType: ExpressionVisitor.VisitSwitch(SwitchExpression)\n  fullName: ExpressionVisitor.VisitSwitch(SwitchExpression)\n- uid: System.Linq.Expressions.ExpressionVisitor.VisitSwitchCase(System.Linq.Expressions.SwitchCase)\n  parent: System.Linq.Expressions.ExpressionVisitor\n  isExternal: false\n  name: VisitSwitchCase(SwitchCase)\n  nameWithType: ExpressionVisitor.VisitSwitchCase(SwitchCase)\n  fullName: ExpressionVisitor.VisitSwitchCase(SwitchCase)\n- uid: System.Linq.Expressions.ExpressionVisitor.VisitTry(System.Linq.Expressions.TryExpression)\n  parent: System.Linq.Expressions.ExpressionVisitor\n  isExternal: false\n  name: VisitTry(TryExpression)\n  nameWithType: ExpressionVisitor.VisitTry(TryExpression)\n  fullName: ExpressionVisitor.VisitTry(TryExpression)\n- uid: System.Linq.Expressions.ExpressionVisitor.VisitTypeBinary(System.Linq.Expressions.TypeBinaryExpression)\n  parent: System.Linq.Expressions.ExpressionVisitor\n  isExternal: false\n  name: VisitTypeBinary(TypeBinaryExpression)\n  nameWithType: ExpressionVisitor.VisitTypeBinary(TypeBinaryExpression)\n  fullName: ExpressionVisitor.VisitTypeBinary(TypeBinaryExpression)\n- uid: System.Linq.Expressions.ExpressionVisitor.VisitUnary(System.Linq.Expressions.UnaryExpression)\n  parent: System.Linq.Expressions.ExpressionVisitor\n  isExternal: false\n  name: VisitUnary(UnaryExpression)\n  nameWithType: ExpressionVisitor.VisitUnary(UnaryExpression)\n  fullName: ExpressionVisitor.VisitUnary(UnaryExpression)\n"}