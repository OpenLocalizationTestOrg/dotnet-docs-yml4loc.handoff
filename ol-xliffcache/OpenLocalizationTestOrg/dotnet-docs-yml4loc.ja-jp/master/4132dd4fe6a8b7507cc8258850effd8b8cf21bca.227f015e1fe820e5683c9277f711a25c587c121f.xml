{"nodes":[{"content":"Controls the throughput of a service to optimize availability and performance.","nodes":[{"pos":[0,78],"content":"Controls the throughput of a service to optimize availability and performance.","nodes":[{"content":"Controls the throughput of a service to optimize availability and performance.","pos":[0,78]}]}],"pos":[645,724],"yaml":true},{"content":"Use the <xref:System.ServiceModel.Dispatcher.ServiceThrottle> to tune the performance characteristics of a service. The easiest way to configure the <xref:System.ServiceModel.Dispatcher.ServiceThrottle> for a service is to use the <xref:System.ServiceModel.Description.ServiceThrottlingBehavior>, especially from an application configuration file.  \n  \n The <xref:System.ServiceModel.Dispatcher.ServiceThrottle.MaxConcurrentCalls%2A> property specifies the maximum number of messages actively processing across all the dispatcher objects in a <xref:System.ServiceModel.ServiceHost> object.  \n  \n The <xref:System.ServiceModel.Dispatcher.ServiceThrottle.MaxConcurrentInstances%2A> property specifies the maximum number of <xref:System.ServiceModel.InstanceContext> objects in the service.  \n  \n The <xref:System.ServiceModel.Dispatcher.ServiceThrottle.MaxConcurrentSessions%2A> property specifies the maximum number of sessions a <xref:System.ServiceModel.ServiceHost> can accept.  \n  \n> [!NOTE]\n>  A trace is written when the first call, <xref:System.ServiceModel.InstanceContext>, or session is queued on the waitlist. The first trace is written as a warning.","nodes":[{"pos":[0,347],"content":"Use the <xref:System.ServiceModel.Dispatcher.ServiceThrottle> to tune the performance characteristics of a service. The easiest way to configure the <xref:System.ServiceModel.Dispatcher.ServiceThrottle> for a service is to use the <xref:System.ServiceModel.Description.ServiceThrottlingBehavior>, especially from an application configuration file.","nodes":[{"content":"Use the <xref:System.ServiceModel.Dispatcher.ServiceThrottle> to tune the performance characteristics of a service. The easiest way to configure the <xref:System.ServiceModel.Dispatcher.ServiceThrottle> for a service is to use the <xref:System.ServiceModel.Description.ServiceThrottlingBehavior>, especially from an application configuration file.","pos":[0,347],"nodes":[{"content":"Use the <ph id=\"ph1\">&lt;xref:System.ServiceModel.Dispatcher.ServiceThrottle&gt;</ph> to tune the performance characteristics of a service.","pos":[0,115],"source":"Use the <xref:System.ServiceModel.Dispatcher.ServiceThrottle> to tune the performance characteristics of a service."},{"content":"The easiest way to configure the <ph id=\"ph1\">&lt;xref:System.ServiceModel.Dispatcher.ServiceThrottle&gt;</ph> for a service is to use the <ph id=\"ph2\">&lt;xref:System.ServiceModel.Description.ServiceThrottlingBehavior&gt;</ph>, especially from an application configuration file.","pos":[116,347],"source":" The easiest way to configure the <xref:System.ServiceModel.Dispatcher.ServiceThrottle> for a service is to use the <xref:System.ServiceModel.Description.ServiceThrottlingBehavior>, especially from an application configuration file."}]}]},{"pos":[354,589],"content":"The <xref:System.ServiceModel.Dispatcher.ServiceThrottle.MaxConcurrentCalls%2A> property specifies the maximum number of messages actively processing across all the dispatcher objects in a <xref:System.ServiceModel.ServiceHost> object.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.ServiceModel.Dispatcher.ServiceThrottle.MaxConcurrentCalls%2A&gt;</ph> property specifies the maximum number of messages actively processing across all the dispatcher objects in a <ph id=\"ph2\">&lt;xref:System.ServiceModel.ServiceHost&gt;</ph> object.","pos":[0,235],"source":"The <xref:System.ServiceModel.Dispatcher.ServiceThrottle.MaxConcurrentCalls%2A> property specifies the maximum number of messages actively processing across all the dispatcher objects in a <xref:System.ServiceModel.ServiceHost> object."}]},{"pos":[596,787],"content":"The <xref:System.ServiceModel.Dispatcher.ServiceThrottle.MaxConcurrentInstances%2A> property specifies the maximum number of <xref:System.ServiceModel.InstanceContext> objects in the service.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.ServiceModel.Dispatcher.ServiceThrottle.MaxConcurrentInstances%2A&gt;</ph> property specifies the maximum number of <ph id=\"ph2\">&lt;xref:System.ServiceModel.InstanceContext&gt;</ph> objects in the service.","pos":[0,191],"source":"The <xref:System.ServiceModel.Dispatcher.ServiceThrottle.MaxConcurrentInstances%2A> property specifies the maximum number of <xref:System.ServiceModel.InstanceContext> objects in the service."}]},{"pos":[794,979],"content":"The <xref:System.ServiceModel.Dispatcher.ServiceThrottle.MaxConcurrentSessions%2A> property specifies the maximum number of sessions a <xref:System.ServiceModel.ServiceHost> can accept.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.ServiceModel.Dispatcher.ServiceThrottle.MaxConcurrentSessions%2A&gt;</ph> property specifies the maximum number of sessions a <ph id=\"ph2\">&lt;xref:System.ServiceModel.ServiceHost&gt;</ph> can accept.","pos":[0,185],"source":"The <xref:System.ServiceModel.Dispatcher.ServiceThrottle.MaxConcurrentSessions%2A> property specifies the maximum number of sessions a <xref:System.ServiceModel.ServiceHost> can accept."}]},{"pos":[987,1160],"content":"[!NOTE]\n A trace is written when the first call, <xref:System.ServiceModel.InstanceContext>, or session is queued on the waitlist. The first trace is written as a warning.","leadings":["","> "],"nodes":[{"content":" A trace is written when the first call, <xref:System.ServiceModel.InstanceContext>, or session is queued on the waitlist. The first trace is written as a warning.","pos":[8,171],"nodes":[{"content":"A trace is written when the first call, <ph id=\"ph1\">&lt;xref:System.ServiceModel.InstanceContext&gt;</ph>, or session is queued on the waitlist.","pos":[1,122],"source":" A trace is written when the first call, <xref:System.ServiceModel.InstanceContext>, or session is queued on the waitlist."},{"content":"The first trace is written as a warning.","pos":[123,163]}]}]}],"pos":[735,1907],"yaml":true,"extradata":"MT"},{"content":"Gets or sets the maximum number of messages actively processing across all dispatcher objects in a <xref href=\"System.ServiceModel.ServiceHost\"></xref>.","nodes":[{"pos":[0,152],"content":"Gets or sets the maximum number of messages actively processing across all dispatcher objects in a <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.ServiceHost\"&gt;&lt;/xref&gt;</ph>.","source":"Gets or sets the maximum number of messages actively processing across all dispatcher objects in a <xref href=\"System.ServiceModel.ServiceHost\"></xref>."}],"pos":[3968,4121],"yaml":true},{"content":"The <xref:System.ServiceModel.Dispatcher.ServiceThrottle.MaxConcurrentCalls%2A> property specifies the maximum number of messages actively processing across all the dispatcher objects in a <xref:System.ServiceModel.ServiceHost> object. Each channel can have one pending message that does not count against the value of <xref:System.ServiceModel.Dispatcher.ServiceThrottle.MaxConcurrentCalls%2A> until [!INCLUDE[indigo1](~/includes/indigo1-md.md)] begins to process it.  \n  \n> [!NOTE]\n>  A trace is written every time the value of this property is exceeded.","nodes":[{"pos":[0,468],"content":"The <xref:System.ServiceModel.Dispatcher.ServiceThrottle.MaxConcurrentCalls%2A> property specifies the maximum number of messages actively processing across all the dispatcher objects in a <xref:System.ServiceModel.ServiceHost> object. Each channel can have one pending message that does not count against the value of <xref:System.ServiceModel.Dispatcher.ServiceThrottle.MaxConcurrentCalls%2A> until [!INCLUDE[indigo1](~/includes/indigo1-md.md)] begins to process it.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.ServiceModel.Dispatcher.ServiceThrottle.MaxConcurrentCalls%2A&gt;</ph> property specifies the maximum number of messages actively processing across all the dispatcher objects in a <ph id=\"ph2\">&lt;xref:System.ServiceModel.ServiceHost&gt;</ph> object.","pos":[0,235],"source":"The <xref:System.ServiceModel.Dispatcher.ServiceThrottle.MaxConcurrentCalls%2A> property specifies the maximum number of messages actively processing across all the dispatcher objects in a <xref:System.ServiceModel.ServiceHost> object."},{"content":"Each channel can have one pending message that does not count against the value of <ph id=\"ph1\">&lt;xref:System.ServiceModel.Dispatcher.ServiceThrottle.MaxConcurrentCalls%2A&gt;</ph> until <ph id=\"ph2\">[!INCLUDE[indigo1](~/includes/indigo1-md.md)]</ph> begins to process it.","pos":[236,468],"source":" Each channel can have one pending message that does not count against the value of <xref:System.ServiceModel.Dispatcher.ServiceThrottle.MaxConcurrentCalls%2A> until [!INCLUDE[indigo1](~/includes/indigo1-md.md)] begins to process it."}]},{"pos":[476,556],"content":"[!NOTE]\n A trace is written every time the value of this property is exceeded.","leadings":["","> "],"nodes":[{"content":"A trace is written every time the value of this property is exceeded.","pos":[9,78]}]}],"pos":[4132,4694],"yaml":true,"extradata":"MT"},{"content":"The upper limit of active messages in the service. The default is 16 * number of processors in the computer.","nodes":[{"pos":[0,108],"content":"The upper limit of active messages in the service. The default is 16 * number of processors in the computer.","nodes":[{"content":"The upper limit of active messages in the service. The default is 16 * number of processors in the computer.","pos":[0,108],"nodes":[{"content":"The upper limit of active messages in the service.","pos":[0,50]},{"content":"The default is 16 * number of processors in the computer.","pos":[51,108]}]}]}],"pos":[5442,5551],"yaml":true},{"content":"Gets or sets the maximum number of service objects that can execute at one time.","nodes":[{"pos":[0,80],"content":"Gets or sets the maximum number of service objects that can execute at one time.","nodes":[{"content":"Gets or sets the maximum number of service objects that can execute at one time.","pos":[0,80]}]}],"pos":[6704,6785],"yaml":true},{"content":"The <xref:System.ServiceModel.Dispatcher.ServiceThrottle.MaxConcurrentInstances%2A> property specifies the maximum number of <xref:System.ServiceModel.InstanceContext> objects in the service. It is important to keep in mind the relationship between the <xref:System.ServiceModel.Dispatcher.ServiceThrottle.MaxConcurrentInstances%2A> property and the <xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode%2A> property. If <xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode%2A> is <xref:System.ServiceModel.InstanceContextMode.PerSession> the resulting value is the total number of sessions. If <xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode%2A> is <xref:System.ServiceModel.InstanceContextMode.PerCall>, the resulting value is the number of concurrent calls. If a message arrives while the maximum number of <xref:System.ServiceModel.InstanceContext> objects already exist, the message is held until an <xref:System.ServiceModel.InstanceContext> object closes.  \n  \n> [!NOTE]\n>  A trace is written every time the value of this property is exceeded. The first trace is written as a warning.","nodes":[{"pos":[0,1020],"content":"The <xref:System.ServiceModel.Dispatcher.ServiceThrottle.MaxConcurrentInstances%2A> property specifies the maximum number of <xref:System.ServiceModel.InstanceContext> objects in the service. It is important to keep in mind the relationship between the <xref:System.ServiceModel.Dispatcher.ServiceThrottle.MaxConcurrentInstances%2A> property and the <xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode%2A> property. If <xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode%2A> is <xref:System.ServiceModel.InstanceContextMode.PerSession> the resulting value is the total number of sessions. If <xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode%2A> is <xref:System.ServiceModel.InstanceContextMode.PerCall>, the resulting value is the number of concurrent calls. If a message arrives while the maximum number of <xref:System.ServiceModel.InstanceContext> objects already exist, the message is held until an <xref:System.ServiceModel.InstanceContext> object closes.","nodes":[{"content":"The <xref:System.ServiceModel.Dispatcher.ServiceThrottle.MaxConcurrentInstances%2A> property specifies the maximum number of <xref:System.ServiceModel.InstanceContext> objects in the service. It is important to keep in mind the relationship between the <xref:System.ServiceModel.Dispatcher.ServiceThrottle.MaxConcurrentInstances%2A> property and the <xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode%2A> property. If <xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode%2A> is <xref:System.ServiceModel.InstanceContextMode.PerSession> the resulting value is the total number of sessions. If <xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode%2A> is <xref:System.ServiceModel.InstanceContextMode.PerCall>, the resulting value is the number of concurrent calls. If a message arrives while the maximum number of <xref:System.ServiceModel.InstanceContext> objects already exist, the message is held until an <xref:System.ServiceModel.InstanceContext> object closes.","pos":[0,1020],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.ServiceModel.Dispatcher.ServiceThrottle.MaxConcurrentInstances%2A&gt;</ph> property specifies the maximum number of <ph id=\"ph2\">&lt;xref:System.ServiceModel.InstanceContext&gt;</ph> objects in the service.","pos":[0,191],"source":"The <xref:System.ServiceModel.Dispatcher.ServiceThrottle.MaxConcurrentInstances%2A> property specifies the maximum number of <xref:System.ServiceModel.InstanceContext> objects in the service."},{"content":"It is important to keep in mind the relationship between the <ph id=\"ph1\">&lt;xref:System.ServiceModel.Dispatcher.ServiceThrottle.MaxConcurrentInstances%2A&gt;</ph> property and the <ph id=\"ph2\">&lt;xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode%2A&gt;</ph> property.","pos":[192,434],"source":" It is important to keep in mind the relationship between the <xref:System.ServiceModel.Dispatcher.ServiceThrottle.MaxConcurrentInstances%2A> property and the <xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode%2A> property."},{"content":"If <ph id=\"ph1\">&lt;xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode%2A&gt;</ph> is <ph id=\"ph2\">&lt;xref:System.ServiceModel.InstanceContextMode.PerSession&gt;</ph> the resulting value is the total number of sessions.","pos":[435,626],"source":" If <xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode%2A> is <xref:System.ServiceModel.InstanceContextMode.PerSession> the resulting value is the total number of sessions."},{"content":"If <ph id=\"ph1\">&lt;xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode%2A&gt;</ph> is <ph id=\"ph2\">&lt;xref:System.ServiceModel.InstanceContextMode.PerCall&gt;</ph>, the resulting value is the number of concurrent calls.","pos":[627,818],"source":" If <xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode%2A> is <xref:System.ServiceModel.InstanceContextMode.PerCall>, the resulting value is the number of concurrent calls."},{"content":"If a message arrives while the maximum number of <ph id=\"ph1\">&lt;xref:System.ServiceModel.InstanceContext&gt;</ph> objects already exist, the message is held until an <ph id=\"ph2\">&lt;xref:System.ServiceModel.InstanceContext&gt;</ph> object closes.","pos":[819,1020],"source":" If a message arrives while the maximum number of <xref:System.ServiceModel.InstanceContext> objects already exist, the message is held until an <xref:System.ServiceModel.InstanceContext> object closes."}]}]},{"pos":[1028,1149],"content":"[!NOTE]\n A trace is written every time the value of this property is exceeded. The first trace is written as a warning.","leadings":["","> "],"nodes":[{"content":" A trace is written every time the value of this property is exceeded. The first trace is written as a warning.","pos":[8,119],"nodes":[{"content":"A trace is written every time the value of this property is exceeded.","pos":[1,70]},{"content":"The first trace is written as a warning.","pos":[71,111]}]}]}],"pos":[6796,7951],"yaml":true,"extradata":"MT"},{"content":"The maximum number of <xref href=\"System.ServiceModel.InstanceContext\"></xref> objects in the service at one time. The default is Maximum Concurrent Calls + Maximum Concurrent Sessions.","nodes":[{"pos":[0,185],"content":"The maximum number of <xref href=\"System.ServiceModel.InstanceContext\"></xref> objects in the service at one time. The default is Maximum Concurrent Calls + Maximum Concurrent Sessions.","nodes":[{"content":"The maximum number of <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.InstanceContext\"&gt;&lt;/xref&gt;</ph> objects in the service at one time.","pos":[0,114],"source":"The maximum number of <xref href=\"System.ServiceModel.InstanceContext\"></xref> objects in the service at one time."},{"content":"The default is Maximum Concurrent Calls + Maximum Concurrent Sessions.","pos":[115,185]}]}],"pos":[8703,8889],"yaml":true},{"content":"Gets or sets a value that specifies the maximum number of sessions a <xref href=\"System.ServiceModel.ServiceHost\"></xref> object can accept at one time.","nodes":[{"pos":[0,152],"content":"Gets or sets a value that specifies the maximum number of sessions a <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.ServiceHost\"&gt;&lt;/xref&gt;</ph> object can accept at one time.","source":"Gets or sets a value that specifies the maximum number of sessions a <xref href=\"System.ServiceModel.ServiceHost\"></xref> object can accept at one time."}],"pos":[10040,10193],"yaml":true},{"content":"The <xref:System.ServiceModel.Dispatcher.ServiceThrottle.MaxConcurrentSessions%2A> property specifies the maximum number of channels a <xref:System.ServiceModel.ServiceHost> can accept. Each listener object can have one pending channel that does not count against the value of <xref:System.ServiceModel.Dispatcher.ServiceThrottle.MaxConcurrentSessions%2A> until [!INCLUDE[indigo2](~/includes/indigo2-md.md)] accepts the channel and begins processing messages on it. This property is most useful in scenarios that make use of sessions.  \n  \n> [!NOTE]\n>  A trace is written every time the value of this property is exceeded. The first trace is written as a warning.  \n  \n For more information about sessions, see [Using Sessions](~/docs/framework/wcf/using-sessions.md).  \n  \n Typically, this property is set using the <xref:System.ServiceModel.Description.ServiceThrottlingBehavior.MaxConcurrentSessions%2A?displayProperty=fullName> property.","nodes":[{"pos":[0,534],"content":"The <xref:System.ServiceModel.Dispatcher.ServiceThrottle.MaxConcurrentSessions%2A> property specifies the maximum number of channels a <xref:System.ServiceModel.ServiceHost> can accept. Each listener object can have one pending channel that does not count against the value of <xref:System.ServiceModel.Dispatcher.ServiceThrottle.MaxConcurrentSessions%2A> until [!INCLUDE[indigo2](~/includes/indigo2-md.md)] accepts the channel and begins processing messages on it. This property is most useful in scenarios that make use of sessions.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.ServiceModel.Dispatcher.ServiceThrottle.MaxConcurrentSessions%2A&gt;</ph> property specifies the maximum number of channels a <ph id=\"ph2\">&lt;xref:System.ServiceModel.ServiceHost&gt;</ph> can accept.","pos":[0,185],"source":"The <xref:System.ServiceModel.Dispatcher.ServiceThrottle.MaxConcurrentSessions%2A> property specifies the maximum number of channels a <xref:System.ServiceModel.ServiceHost> can accept."},{"content":"Each listener object can have one pending channel that does not count against the value of <ph id=\"ph1\">&lt;xref:System.ServiceModel.Dispatcher.ServiceThrottle.MaxConcurrentSessions%2A&gt;</ph> until <ph id=\"ph2\">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph> accepts the channel and begins processing messages on it.","pos":[186,465],"source":" Each listener object can have one pending channel that does not count against the value of <xref:System.ServiceModel.Dispatcher.ServiceThrottle.MaxConcurrentSessions%2A> until [!INCLUDE[indigo2](~/includes/indigo2-md.md)] accepts the channel and begins processing messages on it."},{"content":"This property is most useful in scenarios that make use of sessions.","pos":[466,534]}]},{"pos":[542,663],"content":"[!NOTE]\n A trace is written every time the value of this property is exceeded. The first trace is written as a warning.","leadings":["","> "],"nodes":[{"content":" A trace is written every time the value of this property is exceeded. The first trace is written as a warning.","pos":[8,119],"nodes":[{"content":"A trace is written every time the value of this property is exceeded.","pos":[1,70]},{"content":"The first trace is written as a warning.","pos":[71,111]}]}]},{"pos":[670,768],"content":"For more information about sessions, see <bpt id=\"p1\">[</bpt>Using Sessions<ept id=\"p1\">](~/docs/framework/wcf/using-sessions.md)</ept>.","source":"For more information about sessions, see [Using Sessions](~/docs/framework/wcf/using-sessions.md)."},{"pos":[775,941],"content":"Typically, this property is set using the <xref:System.ServiceModel.Description.ServiceThrottlingBehavior.MaxConcurrentSessions%2A?displayProperty=fullName> property.","nodes":[{"content":"Typically, this property is set using the <ph id=\"ph1\">&lt;xref:System.ServiceModel.Description.ServiceThrottlingBehavior.MaxConcurrentSessions%2A?displayProperty=fullName&gt;</ph> property.","pos":[0,166],"source":"Typically, this property is set using the <xref:System.ServiceModel.Description.ServiceThrottlingBehavior.MaxConcurrentSessions%2A?displayProperty=fullName> property."}]}],"pos":[10204,11155],"yaml":true,"extradata":"MT"},{"content":"The maximum number of sessions a service host accepts. The default is 100 * number of processors in the computer.","nodes":[{"pos":[0,113],"content":"The maximum number of sessions a service host accepts. The default is 100 * number of processors in the computer.","nodes":[{"content":"The maximum number of sessions a service host accepts. The default is 100 * number of processors in the computer.","pos":[0,113],"nodes":[{"content":"The maximum number of sessions a service host accepts.","pos":[0,54]},{"content":"The default is 100 * number of processors in the computer.","pos":[55,113]}]}]}],"pos":[11906,12020],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.ServiceModel.Dispatcher.ServiceThrottle\n  commentId: T:System.ServiceModel.Dispatcher.ServiceThrottle\n  id: ServiceThrottle\n  children:\n  - System.ServiceModel.Dispatcher.ServiceThrottle.MaxConcurrentCalls\n  - System.ServiceModel.Dispatcher.ServiceThrottle.MaxConcurrentInstances\n  - System.ServiceModel.Dispatcher.ServiceThrottle.MaxConcurrentSessions\n  langs:\n  - csharp\n  name: ServiceThrottle\n  nameWithType: ServiceThrottle\n  fullName: System.ServiceModel.Dispatcher.ServiceThrottle\n  type: Class\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Dispatcher\n  summary: Controls the throughput of a service to optimize availability and performance.\n  remarks: \"Use the <xref:System.ServiceModel.Dispatcher.ServiceThrottle> to tune the performance characteristics of a service. The easiest way to configure the <xref:System.ServiceModel.Dispatcher.ServiceThrottle> for a service is to use the <xref:System.ServiceModel.Description.ServiceThrottlingBehavior>, especially from an application configuration file.  \\n  \\n The <xref:System.ServiceModel.Dispatcher.ServiceThrottle.MaxConcurrentCalls%2A> property specifies the maximum number of messages actively processing across all the dispatcher objects in a <xref:System.ServiceModel.ServiceHost> object.  \\n  \\n The <xref:System.ServiceModel.Dispatcher.ServiceThrottle.MaxConcurrentInstances%2A> property specifies the maximum number of <xref:System.ServiceModel.InstanceContext> objects in the service.  \\n  \\n The <xref:System.ServiceModel.Dispatcher.ServiceThrottle.MaxConcurrentSessions%2A> property specifies the maximum number of sessions a <xref:System.ServiceModel.ServiceHost> can accept.  \\n  \\n> [!NOTE]\\n>  A trace is written when the first call, <xref:System.ServiceModel.InstanceContext>, or session is queued on the waitlist. The first trace is written as a warning.\"\n  example:\n  - \"The following code example shows the typical use of the <xref:System.ServiceModel.Dispatcher.ServiceThrottle> by referencing the <xref:System.ServiceModel.Description.ServiceThrottlingBehavior> in an application configuration file. In this case, the values that are specified establish, at most, one message processing at one time from one connection to one <xref:System.ServiceModel.InstanceContext>. Real-world usage must be determined through experience.  \\n  \\n [!code-xml[ServiceThrottlingBehavior#3](~/samples/snippets/csharp/VS_Snippets_CFX/servicethrottlingbehavior/cs/hostapplication.exe.config#3)]\"\n  syntax:\n    content: public sealed class ServiceThrottle\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/ServiceThrottle.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Dispatcher.ServiceThrottle.MaxConcurrentCalls\n  commentId: P:System.ServiceModel.Dispatcher.ServiceThrottle.MaxConcurrentCalls\n  id: MaxConcurrentCalls\n  parent: System.ServiceModel.Dispatcher.ServiceThrottle\n  langs:\n  - csharp\n  name: MaxConcurrentCalls\n  nameWithType: ServiceThrottle.MaxConcurrentCalls\n  fullName: ServiceThrottle.MaxConcurrentCalls\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Dispatcher\n  summary: Gets or sets the maximum number of messages actively processing across all dispatcher objects in a <xref href=\"System.ServiceModel.ServiceHost\"></xref>.\n  remarks: \"The <xref:System.ServiceModel.Dispatcher.ServiceThrottle.MaxConcurrentCalls%2A> property specifies the maximum number of messages actively processing across all the dispatcher objects in a <xref:System.ServiceModel.ServiceHost> object. Each channel can have one pending message that does not count against the value of <xref:System.ServiceModel.Dispatcher.ServiceThrottle.MaxConcurrentCalls%2A> until [!INCLUDE[indigo1](~/includes/indigo1-md.md)] begins to process it.  \\n  \\n> [!NOTE]\\n>  A trace is written every time the value of this property is exceeded.\"\n  example:\n  - \"The following code example shows the typical use of the <xref:System.ServiceModel.Dispatcher.ServiceThrottle> by referencing the <xref:System.ServiceModel.Description.ServiceThrottlingBehavior> in an application configuration file. In this case, the values that are specified establish, at most, one message processing at one time from one connection to one <xref:System.ServiceModel.InstanceContext>. Real-world usage must be determined through experience.  \\n  \\n [!code-xml[ServiceThrottlingBehavior#3](~/samples/snippets/csharp/VS_Snippets_CFX/servicethrottlingbehavior/cs/hostapplication.exe.config#3)]\"\n  syntax:\n    content: public int MaxConcurrentCalls { get; set; }\n    return:\n      type: System.Int32\n      description: The upper limit of active messages in the service. The default is 16 * number of processors in the computer.\n  overload: System.ServiceModel.Dispatcher.ServiceThrottle.MaxConcurrentCalls*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/ServiceThrottle.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Dispatcher.ServiceThrottle.MaxConcurrentInstances\n  commentId: P:System.ServiceModel.Dispatcher.ServiceThrottle.MaxConcurrentInstances\n  id: MaxConcurrentInstances\n  parent: System.ServiceModel.Dispatcher.ServiceThrottle\n  langs:\n  - csharp\n  name: MaxConcurrentInstances\n  nameWithType: ServiceThrottle.MaxConcurrentInstances\n  fullName: ServiceThrottle.MaxConcurrentInstances\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Dispatcher\n  summary: Gets or sets the maximum number of service objects that can execute at one time.\n  remarks: \"The <xref:System.ServiceModel.Dispatcher.ServiceThrottle.MaxConcurrentInstances%2A> property specifies the maximum number of <xref:System.ServiceModel.InstanceContext> objects in the service. It is important to keep in mind the relationship between the <xref:System.ServiceModel.Dispatcher.ServiceThrottle.MaxConcurrentInstances%2A> property and the <xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode%2A> property. If <xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode%2A> is <xref:System.ServiceModel.InstanceContextMode.PerSession> the resulting value is the total number of sessions. If <xref:System.ServiceModel.ServiceBehaviorAttribute.InstanceContextMode%2A> is <xref:System.ServiceModel.InstanceContextMode.PerCall>, the resulting value is the number of concurrent calls. If a message arrives while the maximum number of <xref:System.ServiceModel.InstanceContext> objects already exist, the message is held until an <xref:System.ServiceModel.InstanceContext> object closes.  \\n  \\n> [!NOTE]\\n>  A trace is written every time the value of this property is exceeded. The first trace is written as a warning.\"\n  example:\n  - \"The following code example shows the typical use of the <xref:System.ServiceModel.Dispatcher.ServiceThrottle> by referencing the <xref:System.ServiceModel.Description.ServiceThrottlingBehavior> in an application configuration file. In this case, the values that are specified establish, at most, one message processing at one time from one connection to one <xref:System.ServiceModel.InstanceContext>. Real-world usage must be determined through experience.  \\n  \\n [!code-xml[ServiceThrottlingBehavior#3](~/samples/snippets/csharp/VS_Snippets_CFX/servicethrottlingbehavior/cs/hostapplication.exe.config#3)]\"\n  syntax:\n    content: public int MaxConcurrentInstances { get; set; }\n    return:\n      type: System.Int32\n      description: The maximum number of <xref href=\"System.ServiceModel.InstanceContext\"></xref> objects in the service at one time. The default is Maximum Concurrent Calls + Maximum Concurrent Sessions.\n  overload: System.ServiceModel.Dispatcher.ServiceThrottle.MaxConcurrentInstances*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/ServiceThrottle.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Dispatcher.ServiceThrottle.MaxConcurrentSessions\n  commentId: P:System.ServiceModel.Dispatcher.ServiceThrottle.MaxConcurrentSessions\n  id: MaxConcurrentSessions\n  parent: System.ServiceModel.Dispatcher.ServiceThrottle\n  langs:\n  - csharp\n  name: MaxConcurrentSessions\n  nameWithType: ServiceThrottle.MaxConcurrentSessions\n  fullName: ServiceThrottle.MaxConcurrentSessions\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Dispatcher\n  summary: Gets or sets a value that specifies the maximum number of sessions a <xref href=\"System.ServiceModel.ServiceHost\"></xref> object can accept at one time.\n  remarks: \"The <xref:System.ServiceModel.Dispatcher.ServiceThrottle.MaxConcurrentSessions%2A> property specifies the maximum number of channels a <xref:System.ServiceModel.ServiceHost> can accept. Each listener object can have one pending channel that does not count against the value of <xref:System.ServiceModel.Dispatcher.ServiceThrottle.MaxConcurrentSessions%2A> until [!INCLUDE[indigo2](~/includes/indigo2-md.md)] accepts the channel and begins processing messages on it. This property is most useful in scenarios that make use of sessions.  \\n  \\n> [!NOTE]\\n>  A trace is written every time the value of this property is exceeded. The first trace is written as a warning.  \\n  \\n For more information about sessions, see [Using Sessions](~/docs/framework/wcf/using-sessions.md).  \\n  \\n Typically, this property is set using the <xref:System.ServiceModel.Description.ServiceThrottlingBehavior.MaxConcurrentSessions%2A?displayProperty=fullName> property.\"\n  example:\n  - \"The following code example shows the typical use of the <xref:System.ServiceModel.Dispatcher.ServiceThrottle> by referencing the <xref:System.ServiceModel.Description.ServiceThrottlingBehavior> in an application configuration file. In this case, the values that are specified establish, at most, one message processing at one time from one connection to one <xref:System.ServiceModel.InstanceContext>. Real-world usage must be determined through experience.  \\n  \\n [!code-xml[ServiceThrottlingBehavior#3](~/samples/snippets/csharp/VS_Snippets_CFX/servicethrottlingbehavior/cs/hostapplication.exe.config#3)]\"\n  syntax:\n    content: public int MaxConcurrentSessions { get; set; }\n    return:\n      type: System.Int32\n      description: The maximum number of sessions a service host accepts. The default is 100 * number of processors in the computer.\n  overload: System.ServiceModel.Dispatcher.ServiceThrottle.MaxConcurrentSessions*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/ServiceThrottle.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\nreferences:\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.ServiceModel.Dispatcher.ServiceThrottle.MaxConcurrentCalls\n  parent: System.ServiceModel.Dispatcher.ServiceThrottle\n  isExternal: false\n  name: MaxConcurrentCalls\n  nameWithType: ServiceThrottle.MaxConcurrentCalls\n  fullName: ServiceThrottle.MaxConcurrentCalls\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.ServiceModel.Dispatcher.ServiceThrottle.MaxConcurrentInstances\n  parent: System.ServiceModel.Dispatcher.ServiceThrottle\n  isExternal: false\n  name: MaxConcurrentInstances\n  nameWithType: ServiceThrottle.MaxConcurrentInstances\n  fullName: ServiceThrottle.MaxConcurrentInstances\n- uid: System.ServiceModel.Dispatcher.ServiceThrottle.MaxConcurrentSessions\n  parent: System.ServiceModel.Dispatcher.ServiceThrottle\n  isExternal: false\n  name: MaxConcurrentSessions\n  nameWithType: ServiceThrottle.MaxConcurrentSessions\n  fullName: ServiceThrottle.MaxConcurrentSessions\n- uid: System.ServiceModel.Dispatcher.ServiceThrottle.MaxConcurrentCalls*\n  parent: System.ServiceModel.Dispatcher.ServiceThrottle\n  isExternal: false\n  name: MaxConcurrentCalls\n  nameWithType: ServiceThrottle.MaxConcurrentCalls\n  fullName: ServiceThrottle.MaxConcurrentCalls\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/ServiceThrottle.xml\n- uid: System.ServiceModel.Dispatcher.ServiceThrottle.MaxConcurrentInstances*\n  parent: System.ServiceModel.Dispatcher.ServiceThrottle\n  isExternal: false\n  name: MaxConcurrentInstances\n  nameWithType: ServiceThrottle.MaxConcurrentInstances\n  fullName: ServiceThrottle.MaxConcurrentInstances\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/ServiceThrottle.xml\n- uid: System.ServiceModel.Dispatcher.ServiceThrottle.MaxConcurrentSessions*\n  parent: System.ServiceModel.Dispatcher.ServiceThrottle\n  isExternal: false\n  name: MaxConcurrentSessions\n  nameWithType: ServiceThrottle.MaxConcurrentSessions\n  fullName: ServiceThrottle.MaxConcurrentSessions\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/ServiceThrottle.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n"}