{"nodes":[{"content":"Controls access to system and user environment variables. This class cannot be inherited.","nodes":[{"pos":[0,89],"content":"Controls access to system and user environment variables. This class cannot be inherited.","nodes":[{"content":"Controls access to system and user environment variables. This class cannot be inherited.","pos":[0,89],"nodes":[{"content":"Controls access to system and user environment variables.","pos":[0,57]},{"content":"This class cannot be inherited.","pos":[58,89]}]}]}],"pos":[1665,1755],"yaml":true},{"content":"Environment variable names are designated by one or more case-insensitive name lists separated by semicolons, with separate lists for read and write access to the named variables. Write access includes the ability to create and delete environment variables as well as to change existing values.  \n  \n> [!NOTE]\n>  In versions of the .NET Framework before the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], you could use the <xref:System.Security.CodeAccessPermission.Deny%2A?displayProperty=fullName> method to prevent inadvertent access to system resources by trusted code. <xref:System.Security.CodeAccessPermission.Deny%2A> is now obsolete, and access to resources is now determined solely by the granted permission set for an assembly. To limit access to files, you must run partially trusted code in a sandbox and assign it permissions only to resources that the code is allowed to access. For information about running an application in a sandbox, see [How to: Run Partially Trusted Code in a Sandbox](~/docs/framework/misc/how-to-run-partially-trusted-code-in-a-sandbox.md).","nodes":[{"pos":[0,294],"content":"Environment variable names are designated by one or more case-insensitive name lists separated by semicolons, with separate lists for read and write access to the named variables. Write access includes the ability to create and delete environment variables as well as to change existing values.","nodes":[{"content":"Environment variable names are designated by one or more case-insensitive name lists separated by semicolons, with separate lists for read and write access to the named variables. Write access includes the ability to create and delete environment variables as well as to change existing values.","pos":[0,294],"nodes":[{"content":"Environment variable names are designated by one or more case-insensitive name lists separated by semicolons, with separate lists for read and write access to the named variables.","pos":[0,179]},{"content":"Write access includes the ability to create and delete environment variables as well as to change existing values.","pos":[180,294]}]}]},{"pos":[302,1090],"content":"[!NOTE]\n In versions of the .NET Framework before the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], you could use the <xref:System.Security.CodeAccessPermission.Deny%2A?displayProperty=fullName> method to prevent inadvertent access to system resources by trusted code. <xref:System.Security.CodeAccessPermission.Deny%2A> is now obsolete, and access to resources is now determined solely by the granted permission set for an assembly. To limit access to files, you must run partially trusted code in a sandbox and assign it permissions only to resources that the code is allowed to access. For information about running an application in a sandbox, see [How to: Run Partially Trusted Code in a Sandbox](~/docs/framework/misc/how-to-run-partially-trusted-code-in-a-sandbox.md).","leadings":["","> "],"nodes":[{"content":" In versions of the .NET Framework before the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], you could use the <xref:System.Security.CodeAccessPermission.Deny%2A?displayProperty=fullName> method to prevent inadvertent access to system resources by trusted code. <xref:System.Security.CodeAccessPermission.Deny%2A> is now obsolete, and access to resources is now determined solely by the granted permission set for an assembly. To limit access to files, you must run partially trusted code in a sandbox and assign it permissions only to resources that the code is allowed to access. For information about running an application in a sandbox, see [How to: Run Partially Trusted Code in a Sandbox](~/docs/framework/misc/how-to-run-partially-trusted-code-in-a-sandbox.md).","pos":[8,786],"nodes":[{"content":"In versions of the .NET Framework before the <ph id=\"ph1\">[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]</ph>, you could use the <ph id=\"ph2\">&lt;xref:System.Security.CodeAccessPermission.Deny%2A?displayProperty=fullName&gt;</ph> method to prevent inadvertent access to system resources by trusted code.","pos":[1,271],"source":" In versions of the .NET Framework before the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], you could use the <xref:System.Security.CodeAccessPermission.Deny%2A?displayProperty=fullName> method to prevent inadvertent access to system resources by trusted code."},{"content":"<ph id=\"ph1\">&lt;xref:System.Security.CodeAccessPermission.Deny%2A&gt;</ph> is now obsolete, and access to resources is now determined solely by the granted permission set for an assembly.","pos":[272,436],"source":" <xref:System.Security.CodeAccessPermission.Deny%2A> is now obsolete, and access to resources is now determined solely by the granted permission set for an assembly."},{"content":"To limit access to files, you must run partially trusted code in a sandbox and assign it permissions only to resources that the code is allowed to access.","pos":[437,591]},{"content":"For information about running an application in a sandbox, see <bpt id=\"p1\">[</bpt>How to: Run Partially Trusted Code in a Sandbox<ept id=\"p1\">](~/docs/framework/misc/how-to-run-partially-trusted-code-in-a-sandbox.md)</ept>.","pos":[592,778],"source":" For information about running an application in a sandbox, see [How to: Run Partially Trusted Code in a Sandbox](~/docs/framework/misc/how-to-run-partially-trusted-code-in-a-sandbox.md)."}]}]}],"pos":[1766,2862],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.Security.Permissions.EnvironmentPermission\"></xref> class with either restricted or unrestricted permission as specified.","nodes":[{"pos":[0,174],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Security.Permissions.EnvironmentPermission\"&gt;&lt;/xref&gt;</ph> class with either restricted or unrestricted permission as specified.","source":"Initializes a new instance of the <xref href=\"System.Security.Permissions.EnvironmentPermission\"></xref> class with either restricted or unrestricted permission as specified."}],"pos":[5848,6023],"yaml":true},{"content":"Creates either fully restricted (`None`) or `Unrestricted` access to all environment variables.","nodes":[{"pos":[0,95],"content":"Creates either fully restricted (<ph id=\"ph1\">`None`</ph>) or <ph id=\"ph2\">`Unrestricted`</ph> access to all environment variables.","source":"Creates either fully restricted (`None`) or `Unrestricted` access to all environment variables."}],"pos":[6034,6130],"yaml":true,"extradata":"MT"},{"content":"One of the <xref href=\"System.Security.Permissions.PermissionState\"></xref> values.","nodes":[{"pos":[0,83],"content":"One of the <ph id=\"ph1\">&lt;xref href=\"System.Security.Permissions.PermissionState\"&gt;&lt;/xref&gt;</ph> values.","source":"One of the <xref href=\"System.Security.Permissions.PermissionState\"></xref> values."}],"pos":[6342,6426],"yaml":true},{"content":"The <code>state</code> parameter is not a valid value of <xref href=\"System.Security.Permissions.PermissionState\"></xref>.","nodes":[{"pos":[0,122],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">state</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is not a valid value of <ph id=\"ph2\">&lt;xref href=\"System.Security.Permissions.PermissionState\"&gt;&lt;/xref&gt;</ph>.","source":"The <code>state</code> parameter is not a valid value of <xref href=\"System.Security.Permissions.PermissionState\"></xref>."}],"pos":[6603,6726],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Security.Permissions.EnvironmentPermission\"></xref> class with the specified access to the specified environment variables.","nodes":[{"pos":[0,176],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Security.Permissions.EnvironmentPermission\"&gt;&lt;/xref&gt;</ph> class with the specified access to the specified environment variables.","source":"Initializes a new instance of the <xref href=\"System.Security.Permissions.EnvironmentPermission\"></xref> class with the specified access to the specified environment variables."}],"pos":[8258,8435],"yaml":true},{"content":"This constructor allows only one of the <xref:System.Security.Permissions.EnvironmentPermissionAccess> values to be specified. This access applies to all listed environment variables. Use <xref:System.Security.Permissions.EnvironmentPermission.AddPathList%2A> to define complex permissions.","nodes":[{"pos":[0,290],"content":"This constructor allows only one of the <xref:System.Security.Permissions.EnvironmentPermissionAccess> values to be specified. This access applies to all listed environment variables. Use <xref:System.Security.Permissions.EnvironmentPermission.AddPathList%2A> to define complex permissions.","nodes":[{"content":"This constructor allows only one of the <xref:System.Security.Permissions.EnvironmentPermissionAccess> values to be specified. This access applies to all listed environment variables. Use <xref:System.Security.Permissions.EnvironmentPermission.AddPathList%2A> to define complex permissions.","pos":[0,290],"nodes":[{"content":"This constructor allows only one of the <ph id=\"ph1\">&lt;xref:System.Security.Permissions.EnvironmentPermissionAccess&gt;</ph> values to be specified.","pos":[0,126],"source":"This constructor allows only one of the <xref:System.Security.Permissions.EnvironmentPermissionAccess> values to be specified."},{"content":"This access applies to all listed environment variables.","pos":[127,183]},{"content":"Use <ph id=\"ph1\">&lt;xref:System.Security.Permissions.EnvironmentPermission.AddPathList%2A&gt;</ph> to define complex permissions.","pos":[184,290],"source":" Use <xref:System.Security.Permissions.EnvironmentPermission.AddPathList%2A> to define complex permissions."}]}]}],"pos":[8446,8737],"yaml":true,"extradata":"MT"},{"content":"One of the <xref href=\"System.Security.Permissions.EnvironmentPermissionAccess\"></xref> values.","nodes":[{"pos":[0,95],"content":"One of the <ph id=\"ph1\">&lt;xref href=\"System.Security.Permissions.EnvironmentPermissionAccess\"&gt;&lt;/xref&gt;</ph> values.","source":"One of the <xref href=\"System.Security.Permissions.EnvironmentPermissionAccess\"></xref> values."}],"pos":[8988,9084],"yaml":true},{"content":"A list of environment variables (semicolon-separated) to which access is granted.","nodes":[{"pos":[0,81],"content":"A list of environment variables (semicolon-separated) to which access is granted.","nodes":[{"content":"A list of environment variables (semicolon-separated) to which access is granted.","pos":[0,81]}]}],"pos":[9148,9230],"yaml":true},{"content":"The <code>pathList</code> parameter is `null`.","nodes":[{"pos":[0,46],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">pathList</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <ph id=\"ph2\">`null`</ph>.","source":"The <code>pathList</code> parameter is `null`."}],"pos":[9415,9462],"yaml":true},{"content":"The <code>flag</code> parameter is not a valid value of <xref href=\"System.Security.Permissions.EnvironmentPermissionAccess\"></xref>.","nodes":[{"pos":[0,133],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">flag</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is not a valid value of <ph id=\"ph2\">&lt;xref href=\"System.Security.Permissions.EnvironmentPermissionAccess\"&gt;&lt;/xref&gt;</ph>.","source":"The <code>flag</code> parameter is not a valid value of <xref href=\"System.Security.Permissions.EnvironmentPermissionAccess\"></xref>."}],"pos":[9556,9690],"yaml":true},{"content":"Adds access for the specified environment variables to the existing state of the permission.","nodes":[{"pos":[0,92],"content":"Adds access for the specified environment variables to the existing state of the permission.","nodes":[{"content":"Adds access for the specified environment variables to the existing state of the permission.","pos":[0,92]}]}],"pos":[11203,11296],"yaml":true},{"content":"Use this method to modify environment variable access by adding to the state of the current permission.","nodes":[{"pos":[0,103],"content":"Use this method to modify environment variable access by adding to the state of the current permission.","nodes":[{"content":"Use this method to modify environment variable access by adding to the state of the current permission.","pos":[0,103]}]}],"pos":[11307,11411],"yaml":true,"extradata":"MT"},{"content":"One of the <xref href=\"System.Security.Permissions.EnvironmentPermissionAccess\"></xref> values.","nodes":[{"pos":[0,95],"content":"One of the <ph id=\"ph1\">&lt;xref href=\"System.Security.Permissions.EnvironmentPermissionAccess\"&gt;&lt;/xref&gt;</ph> values.","source":"One of the <xref href=\"System.Security.Permissions.EnvironmentPermissionAccess\"></xref> values."}],"pos":[12209,12305],"yaml":true},{"content":"A list of environment variables (semicolon-separated).","nodes":[{"pos":[0,54],"content":"A list of environment variables (semicolon-separated).","nodes":[{"content":"A list of environment variables (semicolon-separated).","pos":[0,54]}]}],"pos":[12369,12424],"yaml":true},{"content":"The <code>pathList</code> parameter is `null`.","nodes":[{"pos":[0,46],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">pathList</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <ph id=\"ph2\">`null`</ph>.","source":"The <code>pathList</code> parameter is `null`."}],"pos":[12615,12662],"yaml":true},{"content":"The <code>flag</code> parameter is not a valid value of <xref href=\"System.Security.Permissions.EnvironmentPermissionAccess\"></xref>.","nodes":[{"pos":[0,133],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">flag</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is not a valid value of <ph id=\"ph2\">&lt;xref href=\"System.Security.Permissions.EnvironmentPermissionAccess\"&gt;&lt;/xref&gt;</ph>.","source":"The <code>flag</code> parameter is not a valid value of <xref href=\"System.Security.Permissions.EnvironmentPermissionAccess\"></xref>."}],"pos":[12756,12890],"yaml":true},{"content":"Creates and returns an identical copy of the current permission.","nodes":[{"pos":[0,64],"content":"Creates and returns an identical copy of the current permission.","nodes":[{"content":"Creates and returns an identical copy of the current permission.","pos":[0,64]}]}],"pos":[14043,14108],"yaml":true},{"content":"A copy of a permission represents the same access to resources as the original permission.","nodes":[{"pos":[0,90],"content":"A copy of a permission represents the same access to resources as the original permission.","nodes":[{"content":"A copy of a permission represents the same access to resources as the original permission.","pos":[0,90]}]}],"pos":[14119,14210],"yaml":true,"extradata":"MT"},{"content":"A copy of the current permission.","nodes":[{"pos":[0,33],"content":"A copy of the current permission.","nodes":[{"content":"A copy of the current permission.","pos":[0,33]}]}],"pos":[14376,14410],"yaml":true},{"content":"Reconstructs a permission with a specified state from an XML encoding.","nodes":[{"pos":[0,70],"content":"Reconstructs a permission with a specified state from an XML encoding.","nodes":[{"content":"Reconstructs a permission with a specified state from an XML encoding.","pos":[0,70]}]}],"pos":[15810,15881],"yaml":true},{"content":"The XML encoding to use to reconstruct the permission.","nodes":[{"pos":[0,54],"content":"The XML encoding to use to reconstruct the permission.","nodes":[{"content":"The XML encoding to use to reconstruct the permission.","pos":[0,54]}]}],"pos":[16065,16120],"yaml":true},{"content":"The <code>esd</code> parameter is `null`.","nodes":[{"pos":[0,41],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">esd</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <ph id=\"ph2\">`null`</ph>.","source":"The <code>esd</code> parameter is `null`."}],"pos":[16307,16349],"yaml":true},{"content":"The <code>esd</code> parameter is not a valid permission element.  \n  \n -or-  \n  \n The <code>esd</code> parameter's version number is not valid.","nodes":[{"pos":[0,65],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">esd</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is not a valid permission element.","source":"The <code>esd</code> parameter is not a valid permission element."},{"pos":[72,76],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[83,144],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">esd</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter's version number is not valid.","source":"The <code>esd</code> parameter's version number is not valid."}],"pos":[16443,16594],"yaml":true},{"content":"Gets all environment variables with the specified <xref href=\"System.Security.Permissions.EnvironmentPermissionAccess\"></xref>.","nodes":[{"pos":[0,127],"content":"Gets all environment variables with the specified <ph id=\"ph1\">&lt;xref href=\"System.Security.Permissions.EnvironmentPermissionAccess\"&gt;&lt;/xref&gt;</ph>.","source":"Gets all environment variables with the specified <xref href=\"System.Security.Permissions.EnvironmentPermissionAccess\"></xref>."}],"pos":[18041,18169],"yaml":true},{"content":"Use this method to get the state of the current permission. To get both `Read` and `Write` access states requires two calls to this method.  \n  \n> [!NOTE]\n>  The `flag` parameter is limited to the values of <xref:System.Security.Permissions.EnvironmentPermissionAccess>, which represent single types of environment variable access. Those values are <xref:System.Security.Permissions.EnvironmentPermissionAccess.Read> and <xref:System.Security.Permissions.EnvironmentPermissionAccess.Write>. The values acceptable to `flag` do not include <xref:System.Security.Permissions.EnvironmentPermissionAccess.NoAccess> and <xref:System.Security.Permissions.EnvironmentPermissionAccess.AllAccess>, which do not represent single types of environment variable access.","nodes":[{"pos":[0,139],"content":"Use this method to get the state of the current permission. To get both `Read` and `Write` access states requires two calls to this method.","nodes":[{"content":"Use this method to get the state of the current permission.","pos":[0,59]},{"content":"To get both <ph id=\"ph1\">`Read`</ph> and <ph id=\"ph2\">`Write`</ph> access states requires two calls to this method.","pos":[60,139],"source":" To get both `Read` and `Write` access states requires two calls to this method."}]},{"pos":[147,755],"content":"[!NOTE]\n The `flag` parameter is limited to the values of <xref:System.Security.Permissions.EnvironmentPermissionAccess>, which represent single types of environment variable access. Those values are <xref:System.Security.Permissions.EnvironmentPermissionAccess.Read> and <xref:System.Security.Permissions.EnvironmentPermissionAccess.Write>. The values acceptable to `flag` do not include <xref:System.Security.Permissions.EnvironmentPermissionAccess.NoAccess> and <xref:System.Security.Permissions.EnvironmentPermissionAccess.AllAccess>, which do not represent single types of environment variable access.","leadings":["","> "],"nodes":[{"content":" The `flag` parameter is limited to the values of <xref:System.Security.Permissions.EnvironmentPermissionAccess>, which represent single types of environment variable access. Those values are <xref:System.Security.Permissions.EnvironmentPermissionAccess.Read> and <xref:System.Security.Permissions.EnvironmentPermissionAccess.Write>. The values acceptable to `flag` do not include <xref:System.Security.Permissions.EnvironmentPermissionAccess.NoAccess> and <xref:System.Security.Permissions.EnvironmentPermissionAccess.AllAccess>, which do not represent single types of environment variable access.","pos":[8,606],"nodes":[{"content":"The <ph id=\"ph1\">`flag`</ph> parameter is limited to the values of <ph id=\"ph2\">&lt;xref:System.Security.Permissions.EnvironmentPermissionAccess&gt;</ph>, which represent single types of environment variable access.","pos":[1,174],"source":" The `flag` parameter is limited to the values of <xref:System.Security.Permissions.EnvironmentPermissionAccess>, which represent single types of environment variable access."},{"content":"Those values are <ph id=\"ph1\">&lt;xref:System.Security.Permissions.EnvironmentPermissionAccess.Read&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Security.Permissions.EnvironmentPermissionAccess.Write&gt;</ph>.","pos":[175,333],"source":" Those values are <xref:System.Security.Permissions.EnvironmentPermissionAccess.Read> and <xref:System.Security.Permissions.EnvironmentPermissionAccess.Write>."},{"content":"The values acceptable to <ph id=\"ph1\">`flag`</ph> do not include <ph id=\"ph2\">&lt;xref:System.Security.Permissions.EnvironmentPermissionAccess.NoAccess&gt;</ph> and <ph id=\"ph3\">&lt;xref:System.Security.Permissions.EnvironmentPermissionAccess.AllAccess&gt;</ph>, which do not represent single types of environment variable access.","pos":[334,598],"source":" The values acceptable to `flag` do not include <xref:System.Security.Permissions.EnvironmentPermissionAccess.NoAccess> and <xref:System.Security.Permissions.EnvironmentPermissionAccess.AllAccess>, which do not represent single types of environment variable access."}]}]}],"pos":[18180,18941],"yaml":true,"extradata":"MT"},{"content":"One of the <xref href=\"System.Security.Permissions.EnvironmentPermissionAccess\"></xref> values that represents a single type of environment variable access.","nodes":[{"pos":[0,156],"content":"One of the <ph id=\"ph1\">&lt;xref href=\"System.Security.Permissions.EnvironmentPermissionAccess\"&gt;&lt;/xref&gt;</ph> values that represents a single type of environment variable access.","source":"One of the <xref href=\"System.Security.Permissions.EnvironmentPermissionAccess\"></xref> values that represents a single type of environment variable access."}],"pos":[19851,20008],"yaml":true},{"content":"A list of environment variables (semicolon-separated) for the selected flag.","nodes":[{"pos":[0,76],"content":"A list of environment variables (semicolon-separated) for the selected flag.","nodes":[{"content":"A list of environment variables (semicolon-separated) for the selected flag.","pos":[0,76]}]}],"pos":[20065,20142],"yaml":true},{"content":"<code>flag</code> is not a valid value of <xref href=\"System.Security.Permissions.EnvironmentPermissionAccess\"></xref>.  \n  \n -or-  \n  \n <code>flag</code> is <xref href=\"System.Security.Permissions.EnvironmentPermissionAccess.AllAccess\"></xref>, which represents more than one type of environment variable access, or <xref href=\"System.Security.Permissions.EnvironmentPermissionAccess.NoAccess\"></xref>, which does not represent any type of environment variable access.","nodes":[{"pos":[0,119],"content":"<ph id=\"ph1\">&lt;code&gt;flag&lt;/code&gt;</ph> is not a valid value of <ph id=\"ph2\">&lt;xref href=\"System.Security.Permissions.EnvironmentPermissionAccess\"&gt;&lt;/xref&gt;</ph>.","source":"<code>flag</code> is not a valid value of <xref href=\"System.Security.Permissions.EnvironmentPermissionAccess\"></xref>."},{"pos":[126,130],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[137,469],"content":"<ph id=\"ph1\">&lt;code&gt;flag&lt;/code&gt;</ph> is <ph id=\"ph2\">&lt;xref href=\"System.Security.Permissions.EnvironmentPermissionAccess.AllAccess\"&gt;&lt;/xref&gt;</ph>, which represents more than one type of environment variable access, or <ph id=\"ph3\">&lt;xref href=\"System.Security.Permissions.EnvironmentPermissionAccess.NoAccess\"&gt;&lt;/xref&gt;</ph>, which does not represent any type of environment variable access.","source":"<code>flag</code> is <xref href=\"System.Security.Permissions.EnvironmentPermissionAccess.AllAccess\"></xref>, which represents more than one type of environment variable access, or <xref href=\"System.Security.Permissions.EnvironmentPermissionAccess.NoAccess\"></xref>, which does not represent any type of environment variable access."}],"pos":[20325,20807],"yaml":true},{"content":"Creates and returns a permission that is the intersection of the current permission and the specified permission.","nodes":[{"pos":[0,113],"content":"Creates and returns a permission that is the intersection of the current permission and the specified permission.","nodes":[{"content":"Creates and returns a permission that is the intersection of the current permission and the specified permission.","pos":[0,113]}]}],"pos":[22110,22224],"yaml":true},{"content":"The intersection of two permissions is a permission that describes the state they both describe in common. Only a demand that passes both original permissions will pass the intersection.","nodes":[{"pos":[0,186],"content":"The intersection of two permissions is a permission that describes the state they both describe in common. Only a demand that passes both original permissions will pass the intersection.","nodes":[{"content":"The intersection of two permissions is a permission that describes the state they both describe in common. Only a demand that passes both original permissions will pass the intersection.","pos":[0,186],"nodes":[{"content":"The intersection of two permissions is a permission that describes the state they both describe in common.","pos":[0,106]},{"content":"Only a demand that passes both original permissions will pass the intersection.","pos":[107,186]}]}]}],"pos":[22235,22422],"yaml":true,"extradata":"MT"},{"content":"A permission to intersect with the current permission. It must be of the same type as the current permission.","nodes":[{"pos":[0,109],"content":"A permission to intersect with the current permission. It must be of the same type as the current permission.","nodes":[{"content":"A permission to intersect with the current permission. It must be of the same type as the current permission.","pos":[0,109],"nodes":[{"content":"A permission to intersect with the current permission.","pos":[0,54]},{"content":"It must be of the same type as the current permission.","pos":[55,109]}]}]}],"pos":[22629,22739],"yaml":true},{"content":"A new permission that represents the intersection of the current permission and the specified permission. This new permission is `null` if the intersection is empty.","nodes":[{"pos":[0,165],"content":"A new permission that represents the intersection of the current permission and the specified permission. This new permission is `null` if the intersection is empty.","nodes":[{"content":"A new permission that represents the intersection of the current permission and the specified permission.","pos":[0,105]},{"content":"This new permission is <ph id=\"ph1\">`null`</ph> if the intersection is empty.","pos":[106,165],"source":" This new permission is `null` if the intersection is empty."}]}],"pos":[22810,22976],"yaml":true},{"content":"The <code>target</code> parameter is not `null` and is not of the same type as the current permission.","nodes":[{"pos":[0,102],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">target</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is not <ph id=\"ph2\">`null`</ph> and is not of the same type as the current permission.","source":"The <code>target</code> parameter is not `null` and is not of the same type as the current permission."}],"pos":[23157,23260],"yaml":true},{"content":"Determines whether the current permission is a subset of the specified permission.","nodes":[{"pos":[0,82],"content":"Determines whether the current permission is a subset of the specified permission.","nodes":[{"content":"Determines whether the current permission is a subset of the specified permission.","pos":[0,82]}]}],"pos":[24569,24652],"yaml":true},{"content":"The current permission is a subset of the specified permission if the current permission specifies a state that is wholly contained by the specified permission. For example, a permission that represents access to C:\\example.txt is a subset of a permission that represents access to C:\\\\. If this method returns `true`, the current permission represents no more access to the protected resource than does the specified permission.","nodes":[{"pos":[0,429],"content":"The current permission is a subset of the specified permission if the current permission specifies a state that is wholly contained by the specified permission. For example, a permission that represents access to C:\\example.txt is a subset of a permission that represents access to C:\\\\. If this method returns `true`, the current permission represents no more access to the protected resource than does the specified permission.","nodes":[{"content":"The current permission is a subset of the specified permission if the current permission specifies a state that is wholly contained by the specified permission.","pos":[0,160]},{"content":"For example, a permission that represents access to C:\\example.txt is a subset of a permission that represents access to C:<ph id=\"ph1\">\\\\</ph>.","pos":[161,287],"source":" For example, a permission that represents access to C:\\example.txt is a subset of a permission that represents access to C:\\\\."},{"content":"If this method returns <ph id=\"ph1\">`true`</ph>, the current permission represents no more access to the protected resource than does the specified permission.","pos":[288,429],"source":" If this method returns `true`, the current permission represents no more access to the protected resource than does the specified permission."}]}],"pos":[24663,25093],"yaml":true,"extradata":"MT"},{"content":"A permission that is to be tested for the subset relationship. This permission must be of the same type as the current permission.","nodes":[{"pos":[0,130],"content":"A permission that is to be tested for the subset relationship. This permission must be of the same type as the current permission.","nodes":[{"content":"A permission that is to be tested for the subset relationship. This permission must be of the same type as the current permission.","pos":[0,130],"nodes":[{"content":"A permission that is to be tested for the subset relationship.","pos":[0,62]},{"content":"This permission must be of the same type as the current permission.","pos":[63,130]}]}]}],"pos":[25278,25409],"yaml":true},{"content":"`true` if the current permission is a subset of the specified permission; otherwise, `false`.","nodes":[{"pos":[0,93],"content":"<ph id=\"ph1\">`true`</ph> if the current permission is a subset of the specified permission; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the current permission is a subset of the specified permission; otherwise, `false`."}],"pos":[25467,25563],"yaml":true},{"content":"The <code>target</code> parameter is not `null` and is not of the same type as the current permission.","nodes":[{"pos":[0,102],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">target</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is not <ph id=\"ph2\">`null`</ph> and is not of the same type as the current permission.","source":"The <code>target</code> parameter is not `null` and is not of the same type as the current permission."}],"pos":[25745,25848],"yaml":true},{"content":"Returns a value indicating whether the current permission is unrestricted.","nodes":[{"pos":[0,74],"content":"Returns a value indicating whether the current permission is unrestricted.","nodes":[{"content":"Returns a value indicating whether the current permission is unrestricted.","pos":[0,74]}]}],"pos":[27061,27136],"yaml":true},{"content":"An unrestricted permission represents the union of all possible states of the permission.","nodes":[{"pos":[0,89],"content":"An unrestricted permission represents the union of all possible states of the permission.","nodes":[{"content":"An unrestricted permission represents the union of all possible states of the permission.","pos":[0,89]}]}],"pos":[27147,27237],"yaml":true,"extradata":"MT"},{"content":"`true` if the current permission is unrestricted; otherwise, `false`.","nodes":[{"pos":[0,69],"content":"<ph id=\"ph1\">`true`</ph> if the current permission is unrestricted; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the current permission is unrestricted; otherwise, `false`."}],"pos":[27368,27440],"yaml":true},{"content":"Sets the specified access to the specified environment variables to the existing state of the permission.","nodes":[{"pos":[0,105],"content":"Sets the specified access to the specified environment variables to the existing state of the permission.","nodes":[{"content":"Sets the specified access to the specified environment variables to the existing state of the permission.","pos":[0,105]}]}],"pos":[29048,29154],"yaml":true},{"content":"The previous state of the current permission is overwritten.","nodes":[{"pos":[0,60],"content":"The previous state of the current permission is overwritten.","nodes":[{"content":"The previous state of the current permission is overwritten.","pos":[0,60]}]}],"pos":[29165,29226],"yaml":true,"extradata":"MT"},{"content":"One of the <xref href=\"System.Security.Permissions.EnvironmentPermissionAccess\"></xref> values.","nodes":[{"pos":[0,95],"content":"One of the <ph id=\"ph1\">&lt;xref href=\"System.Security.Permissions.EnvironmentPermissionAccess\"&gt;&lt;/xref&gt;</ph> values.","source":"One of the <xref href=\"System.Security.Permissions.EnvironmentPermissionAccess\"></xref> values."}],"pos":[30151,30247],"yaml":true},{"content":"A list of environment variables (semicolon-separated).","nodes":[{"pos":[0,54],"content":"A list of environment variables (semicolon-separated).","nodes":[{"content":"A list of environment variables (semicolon-separated).","pos":[0,54]}]}],"pos":[30311,30366],"yaml":true},{"content":"The <code>pathList</code> parameter is `null`.","nodes":[{"pos":[0,46],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">pathList</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <ph id=\"ph2\">`null`</ph>.","source":"The <code>pathList</code> parameter is `null`."}],"pos":[30557,30604],"yaml":true},{"content":"The <code>flag</code> parameter is not a valid value of <xref href=\"System.Security.Permissions.EnvironmentPermissionAccess\"></xref>.","nodes":[{"pos":[0,133],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">flag</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is not a valid value of <ph id=\"ph2\">&lt;xref href=\"System.Security.Permissions.EnvironmentPermissionAccess\"&gt;&lt;/xref&gt;</ph>.","source":"The <code>flag</code> parameter is not a valid value of <xref href=\"System.Security.Permissions.EnvironmentPermissionAccess\"></xref>."}],"pos":[30698,30832],"yaml":true},{"content":"Creates an XML encoding of the permission and its current state.","nodes":[{"pos":[0,64],"content":"Creates an XML encoding of the permission and its current state.","nodes":[{"content":"Creates an XML encoding of the permission and its current state.","pos":[0,64]}]}],"pos":[31991,32056],"yaml":true},{"content":"An XML encoding of the permission, including any state information.","nodes":[{"pos":[0,67],"content":"An XML encoding of the permission, including any state information.","nodes":[{"content":"An XML encoding of the permission, including any state information.","pos":[0,67]}]}],"pos":[32231,32299],"yaml":true},{"content":"Creates a permission that is the union of the current permission and the specified permission.","nodes":[{"pos":[0,94],"content":"Creates a permission that is the union of the current permission and the specified permission.","nodes":[{"content":"Creates a permission that is the union of the current permission and the specified permission.","pos":[0,94]}]}],"pos":[33664,33759],"yaml":true},{"content":"The result of a call to <xref:System.Security.Permissions.EnvironmentPermission.Union%2A> is a permission that represents all the states represented by both the current permission and the specified permission. Any demand that passes either permission passes their union.","nodes":[{"pos":[0,270],"content":"The result of a call to <xref:System.Security.Permissions.EnvironmentPermission.Union%2A> is a permission that represents all the states represented by both the current permission and the specified permission. Any demand that passes either permission passes their union.","nodes":[{"content":"The result of a call to <xref:System.Security.Permissions.EnvironmentPermission.Union%2A> is a permission that represents all the states represented by both the current permission and the specified permission. Any demand that passes either permission passes their union.","pos":[0,270],"nodes":[{"content":"The result of a call to <ph id=\"ph1\">&lt;xref:System.Security.Permissions.EnvironmentPermission.Union%2A&gt;</ph> is a permission that represents all the states represented by both the current permission and the specified permission.","pos":[0,209],"source":"The result of a call to <xref:System.Security.Permissions.EnvironmentPermission.Union%2A> is a permission that represents all the states represented by both the current permission and the specified permission."},{"content":"Any demand that passes either permission passes their union.","pos":[210,270]}]}]}],"pos":[33770,34041],"yaml":true,"extradata":"MT"},{"content":"A permission to combine with the current permission. It must be of the same type as the current permission.","nodes":[{"pos":[0,107],"content":"A permission to combine with the current permission. It must be of the same type as the current permission.","nodes":[{"content":"A permission to combine with the current permission. It must be of the same type as the current permission.","pos":[0,107],"nodes":[{"content":"A permission to combine with the current permission.","pos":[0,52]},{"content":"It must be of the same type as the current permission.","pos":[53,107]}]}]}],"pos":[34242,34350],"yaml":true},{"content":"A new permission that represents the union of the current permission and the specified permission.","nodes":[{"pos":[0,98],"content":"A new permission that represents the union of the current permission and the specified permission.","nodes":[{"content":"A new permission that represents the union of the current permission and the specified permission.","pos":[0,98]}]}],"pos":[34421,34520],"yaml":true},{"content":"The <code>other</code> parameter is not `null` and is not of the same type as the current permission.","nodes":[{"pos":[0,101],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">other</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is not <ph id=\"ph2\">`null`</ph> and is not of the same type as the current permission.","source":"The <code>other</code> parameter is not `null` and is not of the same type as the current permission."}],"pos":[34697,34799],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Security.Permissions.EnvironmentPermission\n  commentId: T:System.Security.Permissions.EnvironmentPermission\n  id: EnvironmentPermission\n  children:\n  - System.Security.Permissions.EnvironmentPermission.#ctor(System.Security.Permissions.PermissionState)\n  - System.Security.Permissions.EnvironmentPermission.#ctor(System.Security.Permissions.EnvironmentPermissionAccess,System.String)\n  - System.Security.Permissions.EnvironmentPermission.AddPathList(System.Security.Permissions.EnvironmentPermissionAccess,System.String)\n  - System.Security.Permissions.EnvironmentPermission.Copy\n  - System.Security.Permissions.EnvironmentPermission.FromXml(System.Security.SecurityElement)\n  - System.Security.Permissions.EnvironmentPermission.GetPathList(System.Security.Permissions.EnvironmentPermissionAccess)\n  - System.Security.Permissions.EnvironmentPermission.Intersect(System.Security.IPermission)\n  - System.Security.Permissions.EnvironmentPermission.IsSubsetOf(System.Security.IPermission)\n  - System.Security.Permissions.EnvironmentPermission.IsUnrestricted\n  - System.Security.Permissions.EnvironmentPermission.SetPathList(System.Security.Permissions.EnvironmentPermissionAccess,System.String)\n  - System.Security.Permissions.EnvironmentPermission.ToXml\n  - System.Security.Permissions.EnvironmentPermission.Union(System.Security.IPermission)\n  langs:\n  - csharp\n  name: EnvironmentPermission\n  nameWithType: EnvironmentPermission\n  fullName: System.Security.Permissions.EnvironmentPermission\n  type: Class\n  assemblies:\n  - mscorlib\n  - System.Security.Permissions\n  namespace: System.Security.Permissions\n  summary: Controls access to system and user environment variables. This class cannot be inherited.\n  remarks: \"Environment variable names are designated by one or more case-insensitive name lists separated by semicolons, with separate lists for read and write access to the named variables. Write access includes the ability to create and delete environment variables as well as to change existing values.  \\n  \\n> [!NOTE]\\n>  In versions of the .NET Framework before the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], you could use the <xref:System.Security.CodeAccessPermission.Deny%2A?displayProperty=fullName> method to prevent inadvertent access to system resources by trusted code. <xref:System.Security.CodeAccessPermission.Deny%2A> is now obsolete, and access to resources is now determined solely by the granted permission set for an assembly. To limit access to files, you must run partially trusted code in a sandbox and assign it permissions only to resources that the code is allowed to access. For information about running an application in a sandbox, see [How to: Run Partially Trusted Code in a Sandbox](~/docs/framework/misc/how-to-run-partially-trusted-code-in-a-sandbox.md).\"\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public sealed class EnvironmentPermission : System.Security.CodeAccessPermission, System.Security.Permissions.IUnrestrictedPermission\n  inheritance:\n  - System.Object\n  - System.Security.CodeAccessPermission\n  implements:\n  - System.Security.Permissions.IUnrestrictedPermission\n  inheritedMembers:\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Security.CodeAccessPermission.Assert\n  - System.Security.CodeAccessPermission.Demand\n  - System.Security.CodeAccessPermission.Deny\n  - System.Security.CodeAccessPermission.Equals(System.Object)\n  - System.Security.CodeAccessPermission.GetHashCode\n  - System.Security.CodeAccessPermission.PermitOnly\n  - System.Security.CodeAccessPermission.RevertAll\n  - System.Security.CodeAccessPermission.RevertAssert\n  - System.Security.CodeAccessPermission.RevertDeny\n  - System.Security.CodeAccessPermission.RevertPermitOnly\n  - System.Security.CodeAccessPermission.System#Security#IPermission#Demand\n  - System.Security.CodeAccessPermission.System#Security#IStackWalk#Assert\n  - System.Security.CodeAccessPermission.System#Security#IStackWalk#Demand\n  - System.Security.CodeAccessPermission.System#Security#IStackWalk#Deny\n  - System.Security.CodeAccessPermission.System#Security#IStackWalk#PermitOnly\n  - System.Security.CodeAccessPermission.ToString\n  attributes:\n  - type: System.Runtime.InteropServices.ComVisibleAttribute\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/EnvironmentPermission.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Permissions.EnvironmentPermission.#ctor(System.Security.Permissions.PermissionState)\n  commentId: M:System.Security.Permissions.EnvironmentPermission.#ctor(System.Security.Permissions.PermissionState)\n  id: '#ctor(System.Security.Permissions.PermissionState)'\n  parent: System.Security.Permissions.EnvironmentPermission\n  langs:\n  - csharp\n  name: EnvironmentPermission(PermissionState)\n  nameWithType: EnvironmentPermission.EnvironmentPermission(PermissionState)\n  fullName: EnvironmentPermission.EnvironmentPermission(PermissionState)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  - System.Security.Permissions\n  namespace: System.Security.Permissions\n  summary: Initializes a new instance of the <xref href=\"System.Security.Permissions.EnvironmentPermission\"></xref> class with either restricted or unrestricted permission as specified.\n  remarks: Creates either fully restricted (`None`) or `Unrestricted` access to all environment variables.\n  syntax:\n    content: public EnvironmentPermission (System.Security.Permissions.PermissionState state);\n    parameters:\n    - id: state\n      type: System.Security.Permissions.PermissionState\n      description: One of the <xref href=\"System.Security.Permissions.PermissionState\"></xref> values.\n  overload: System.Security.Permissions.EnvironmentPermission.#ctor*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The <code>state</code> parameter is not a valid value of <xref href=\"System.Security.Permissions.PermissionState\"></xref>.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/EnvironmentPermission.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Permissions.EnvironmentPermission.#ctor(System.Security.Permissions.EnvironmentPermissionAccess,System.String)\n  commentId: M:System.Security.Permissions.EnvironmentPermission.#ctor(System.Security.Permissions.EnvironmentPermissionAccess,System.String)\n  id: '#ctor(System.Security.Permissions.EnvironmentPermissionAccess,System.String)'\n  parent: System.Security.Permissions.EnvironmentPermission\n  langs:\n  - csharp\n  name: EnvironmentPermission(EnvironmentPermissionAccess, String)\n  nameWithType: EnvironmentPermission.EnvironmentPermission(EnvironmentPermissionAccess, String)\n  fullName: EnvironmentPermission.EnvironmentPermission(EnvironmentPermissionAccess, String)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  - System.Security.Permissions\n  namespace: System.Security.Permissions\n  summary: Initializes a new instance of the <xref href=\"System.Security.Permissions.EnvironmentPermission\"></xref> class with the specified access to the specified environment variables.\n  remarks: This constructor allows only one of the <xref:System.Security.Permissions.EnvironmentPermissionAccess> values to be specified. This access applies to all listed environment variables. Use <xref:System.Security.Permissions.EnvironmentPermission.AddPathList%2A> to define complex permissions.\n  syntax:\n    content: public EnvironmentPermission (System.Security.Permissions.EnvironmentPermissionAccess flag, string pathList);\n    parameters:\n    - id: flag\n      type: System.Security.Permissions.EnvironmentPermissionAccess\n      description: One of the <xref href=\"System.Security.Permissions.EnvironmentPermissionAccess\"></xref> values.\n    - id: pathList\n      type: System.String\n      description: A list of environment variables (semicolon-separated) to which access is granted.\n  overload: System.Security.Permissions.EnvironmentPermission.#ctor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <code>pathList</code> parameter is `null`.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The <code>flag</code> parameter is not a valid value of <xref href=\"System.Security.Permissions.EnvironmentPermissionAccess\"></xref>.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/EnvironmentPermission.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Permissions.EnvironmentPermission.AddPathList(System.Security.Permissions.EnvironmentPermissionAccess,System.String)\n  commentId: M:System.Security.Permissions.EnvironmentPermission.AddPathList(System.Security.Permissions.EnvironmentPermissionAccess,System.String)\n  id: AddPathList(System.Security.Permissions.EnvironmentPermissionAccess,System.String)\n  parent: System.Security.Permissions.EnvironmentPermission\n  langs:\n  - csharp\n  name: AddPathList(EnvironmentPermissionAccess, String)\n  nameWithType: EnvironmentPermission.AddPathList(EnvironmentPermissionAccess, String)\n  fullName: EnvironmentPermission.AddPathList(EnvironmentPermissionAccess, String)\n  type: Method\n  assemblies:\n  - mscorlib\n  - System.Security.Permissions\n  namespace: System.Security.Permissions\n  summary: Adds access for the specified environment variables to the existing state of the permission.\n  remarks: Use this method to modify environment variable access by adding to the state of the current permission.\n  example:\n  - \"The following code example shows the use of the <xref:System.Security.Permissions.EnvironmentPermission.AddPathList%2A> method.  \\n  \\n [!code-csharp[System.Security.Permissions.EnvironmentPermission#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Permissions.EnvironmentPermission/CS/environmentpermission.cs#7)]\\n [!code-vb[System.Security.Permissions.EnvironmentPermission#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Permissions.EnvironmentPermission/VB/environmentpermission.vb#7)]\"\n  syntax:\n    content: public void AddPathList (System.Security.Permissions.EnvironmentPermissionAccess flag, string pathList);\n    parameters:\n    - id: flag\n      type: System.Security.Permissions.EnvironmentPermissionAccess\n      description: One of the <xref href=\"System.Security.Permissions.EnvironmentPermissionAccess\"></xref> values.\n    - id: pathList\n      type: System.String\n      description: A list of environment variables (semicolon-separated).\n  overload: System.Security.Permissions.EnvironmentPermission.AddPathList*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <code>pathList</code> parameter is `null`.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The <code>flag</code> parameter is not a valid value of <xref href=\"System.Security.Permissions.EnvironmentPermissionAccess\"></xref>.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/EnvironmentPermission.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Permissions.EnvironmentPermission.Copy\n  commentId: M:System.Security.Permissions.EnvironmentPermission.Copy\n  id: Copy\n  parent: System.Security.Permissions.EnvironmentPermission\n  langs:\n  - csharp\n  name: Copy()\n  nameWithType: EnvironmentPermission.Copy()\n  fullName: EnvironmentPermission.Copy()\n  type: Method\n  assemblies:\n  - mscorlib\n  - System.Security.Permissions\n  namespace: System.Security.Permissions\n  summary: Creates and returns an identical copy of the current permission.\n  remarks: A copy of a permission represents the same access to resources as the original permission.\n  syntax:\n    content: public override System.Security.IPermission Copy ();\n    parameters: []\n    return:\n      type: System.Security.IPermission\n      description: A copy of the current permission.\n  overload: System.Security.Permissions.EnvironmentPermission.Copy*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/EnvironmentPermission.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Permissions.EnvironmentPermission.FromXml(System.Security.SecurityElement)\n  commentId: M:System.Security.Permissions.EnvironmentPermission.FromXml(System.Security.SecurityElement)\n  id: FromXml(System.Security.SecurityElement)\n  parent: System.Security.Permissions.EnvironmentPermission\n  langs:\n  - csharp\n  name: FromXml(SecurityElement)\n  nameWithType: EnvironmentPermission.FromXml(SecurityElement)\n  fullName: EnvironmentPermission.FromXml(SecurityElement)\n  type: Method\n  assemblies:\n  - mscorlib\n  - System.Security.Permissions\n  namespace: System.Security.Permissions\n  summary: Reconstructs a permission with a specified state from an XML encoding.\n  syntax:\n    content: public override void FromXml (System.Security.SecurityElement esd);\n    parameters:\n    - id: esd\n      type: System.Security.SecurityElement\n      description: The XML encoding to use to reconstruct the permission.\n  overload: System.Security.Permissions.EnvironmentPermission.FromXml*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <code>esd</code> parameter is `null`.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"The <code>esd</code> parameter is not a valid permission element.  \\n  \\n -or-  \\n  \\n The <code>esd</code> parameter's version number is not valid.\"\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/EnvironmentPermission.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Permissions.EnvironmentPermission.GetPathList(System.Security.Permissions.EnvironmentPermissionAccess)\n  commentId: M:System.Security.Permissions.EnvironmentPermission.GetPathList(System.Security.Permissions.EnvironmentPermissionAccess)\n  id: GetPathList(System.Security.Permissions.EnvironmentPermissionAccess)\n  parent: System.Security.Permissions.EnvironmentPermission\n  langs:\n  - csharp\n  name: GetPathList(EnvironmentPermissionAccess)\n  nameWithType: EnvironmentPermission.GetPathList(EnvironmentPermissionAccess)\n  fullName: EnvironmentPermission.GetPathList(EnvironmentPermissionAccess)\n  type: Method\n  assemblies:\n  - mscorlib\n  - System.Security.Permissions\n  namespace: System.Security.Permissions\n  summary: Gets all environment variables with the specified <xref href=\"System.Security.Permissions.EnvironmentPermissionAccess\"></xref>.\n  remarks: \"Use this method to get the state of the current permission. To get both `Read` and `Write` access states requires two calls to this method.  \\n  \\n> [!NOTE]\\n>  The `flag` parameter is limited to the values of <xref:System.Security.Permissions.EnvironmentPermissionAccess>, which represent single types of environment variable access. Those values are <xref:System.Security.Permissions.EnvironmentPermissionAccess.Read> and <xref:System.Security.Permissions.EnvironmentPermissionAccess.Write>. The values acceptable to `flag` do not include <xref:System.Security.Permissions.EnvironmentPermissionAccess.NoAccess> and <xref:System.Security.Permissions.EnvironmentPermissionAccess.AllAccess>, which do not represent single types of environment variable access.\"\n  example:\n  - \"The following code example shows the use of the <xref:System.Security.Permissions.EnvironmentPermission.GetPathList%2A> method. This code example is part of a larger example provided for the <xref:System.Security.Permissions.EnvironmentPermission> class.  \\n  \\n [!code-csharp[System.Security.Permissions.EnvironmentPermission#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Permissions.EnvironmentPermission/CS/environmentpermission.cs#7)]\\n [!code-vb[System.Security.Permissions.EnvironmentPermission#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Permissions.EnvironmentPermission/VB/environmentpermission.vb#7)]\"\n  syntax:\n    content: public string GetPathList (System.Security.Permissions.EnvironmentPermissionAccess flag);\n    parameters:\n    - id: flag\n      type: System.Security.Permissions.EnvironmentPermissionAccess\n      description: One of the <xref href=\"System.Security.Permissions.EnvironmentPermissionAccess\"></xref> values that represents a single type of environment variable access.\n    return:\n      type: System.String\n      description: A list of environment variables (semicolon-separated) for the selected flag.\n  overload: System.Security.Permissions.EnvironmentPermission.GetPathList*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"<code>flag</code> is not a valid value of <xref href=\\\"System.Security.Permissions.EnvironmentPermissionAccess\\\"></xref>.  \\n  \\n -or-  \\n  \\n <code>flag</code> is <xref href=\\\"System.Security.Permissions.EnvironmentPermissionAccess.AllAccess\\\"></xref>, which represents more than one type of environment variable access, or <xref href=\\\"System.Security.Permissions.EnvironmentPermissionAccess.NoAccess\\\"></xref>, which does not represent any type of environment variable access.\"\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/EnvironmentPermission.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Permissions.EnvironmentPermission.Intersect(System.Security.IPermission)\n  commentId: M:System.Security.Permissions.EnvironmentPermission.Intersect(System.Security.IPermission)\n  id: Intersect(System.Security.IPermission)\n  parent: System.Security.Permissions.EnvironmentPermission\n  langs:\n  - csharp\n  name: Intersect(IPermission)\n  nameWithType: EnvironmentPermission.Intersect(IPermission)\n  fullName: EnvironmentPermission.Intersect(IPermission)\n  type: Method\n  assemblies:\n  - mscorlib\n  - System.Security.Permissions\n  namespace: System.Security.Permissions\n  summary: Creates and returns a permission that is the intersection of the current permission and the specified permission.\n  remarks: The intersection of two permissions is a permission that describes the state they both describe in common. Only a demand that passes both original permissions will pass the intersection.\n  syntax:\n    content: public override System.Security.IPermission Intersect (System.Security.IPermission target);\n    parameters:\n    - id: target\n      type: System.Security.IPermission\n      description: A permission to intersect with the current permission. It must be of the same type as the current permission.\n    return:\n      type: System.Security.IPermission\n      description: A new permission that represents the intersection of the current permission and the specified permission. This new permission is `null` if the intersection is empty.\n  overload: System.Security.Permissions.EnvironmentPermission.Intersect*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The <code>target</code> parameter is not `null` and is not of the same type as the current permission.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/EnvironmentPermission.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Permissions.EnvironmentPermission.IsSubsetOf(System.Security.IPermission)\n  commentId: M:System.Security.Permissions.EnvironmentPermission.IsSubsetOf(System.Security.IPermission)\n  id: IsSubsetOf(System.Security.IPermission)\n  parent: System.Security.Permissions.EnvironmentPermission\n  langs:\n  - csharp\n  name: IsSubsetOf(IPermission)\n  nameWithType: EnvironmentPermission.IsSubsetOf(IPermission)\n  fullName: EnvironmentPermission.IsSubsetOf(IPermission)\n  type: Method\n  assemblies:\n  - mscorlib\n  - System.Security.Permissions\n  namespace: System.Security.Permissions\n  summary: Determines whether the current permission is a subset of the specified permission.\n  remarks: The current permission is a subset of the specified permission if the current permission specifies a state that is wholly contained by the specified permission. For example, a permission that represents access to C:\\example.txt is a subset of a permission that represents access to C:\\\\. If this method returns `true`, the current permission represents no more access to the protected resource than does the specified permission.\n  syntax:\n    content: public override bool IsSubsetOf (System.Security.IPermission target);\n    parameters:\n    - id: target\n      type: System.Security.IPermission\n      description: A permission that is to be tested for the subset relationship. This permission must be of the same type as the current permission.\n    return:\n      type: System.Boolean\n      description: '`true` if the current permission is a subset of the specified permission; otherwise, `false`.'\n  overload: System.Security.Permissions.EnvironmentPermission.IsSubsetOf*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The <code>target</code> parameter is not `null` and is not of the same type as the current permission.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/EnvironmentPermission.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Permissions.EnvironmentPermission.IsUnrestricted\n  commentId: M:System.Security.Permissions.EnvironmentPermission.IsUnrestricted\n  id: IsUnrestricted\n  parent: System.Security.Permissions.EnvironmentPermission\n  langs:\n  - csharp\n  name: IsUnrestricted()\n  nameWithType: EnvironmentPermission.IsUnrestricted()\n  fullName: EnvironmentPermission.IsUnrestricted()\n  type: Method\n  assemblies:\n  - mscorlib\n  - System.Security.Permissions\n  namespace: System.Security.Permissions\n  summary: Returns a value indicating whether the current permission is unrestricted.\n  remarks: An unrestricted permission represents the union of all possible states of the permission.\n  syntax:\n    content: public bool IsUnrestricted ();\n    parameters: []\n    return:\n      type: System.Boolean\n      description: '`true` if the current permission is unrestricted; otherwise, `false`.'\n  overload: System.Security.Permissions.EnvironmentPermission.IsUnrestricted*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/EnvironmentPermission.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Permissions.EnvironmentPermission.SetPathList(System.Security.Permissions.EnvironmentPermissionAccess,System.String)\n  commentId: M:System.Security.Permissions.EnvironmentPermission.SetPathList(System.Security.Permissions.EnvironmentPermissionAccess,System.String)\n  id: SetPathList(System.Security.Permissions.EnvironmentPermissionAccess,System.String)\n  parent: System.Security.Permissions.EnvironmentPermission\n  langs:\n  - csharp\n  name: SetPathList(EnvironmentPermissionAccess, String)\n  nameWithType: EnvironmentPermission.SetPathList(EnvironmentPermissionAccess, String)\n  fullName: EnvironmentPermission.SetPathList(EnvironmentPermissionAccess, String)\n  type: Method\n  assemblies:\n  - mscorlib\n  - System.Security.Permissions\n  namespace: System.Security.Permissions\n  summary: Sets the specified access to the specified environment variables to the existing state of the permission.\n  remarks: The previous state of the current permission is overwritten.\n  example:\n  - \"The following code example shows the use of the <xref:System.Security.Permissions.EnvironmentPermission.SetPathList%2A> method. This code example is part of a larger example provided for the <xref:System.Security.Permissions.EnvironmentPermission> class.  \\n  \\n [!code-csharp[System.Security.Permissions.EnvironmentPermission#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Permissions.EnvironmentPermission/CS/environmentpermission.cs#7)]\\n [!code-vb[System.Security.Permissions.EnvironmentPermission#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Permissions.EnvironmentPermission/VB/environmentpermission.vb#7)]\"\n  syntax:\n    content: public void SetPathList (System.Security.Permissions.EnvironmentPermissionAccess flag, string pathList);\n    parameters:\n    - id: flag\n      type: System.Security.Permissions.EnvironmentPermissionAccess\n      description: One of the <xref href=\"System.Security.Permissions.EnvironmentPermissionAccess\"></xref> values.\n    - id: pathList\n      type: System.String\n      description: A list of environment variables (semicolon-separated).\n  overload: System.Security.Permissions.EnvironmentPermission.SetPathList*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <code>pathList</code> parameter is `null`.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The <code>flag</code> parameter is not a valid value of <xref href=\"System.Security.Permissions.EnvironmentPermissionAccess\"></xref>.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/EnvironmentPermission.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Permissions.EnvironmentPermission.ToXml\n  commentId: M:System.Security.Permissions.EnvironmentPermission.ToXml\n  id: ToXml\n  parent: System.Security.Permissions.EnvironmentPermission\n  langs:\n  - csharp\n  name: ToXml()\n  nameWithType: EnvironmentPermission.ToXml()\n  fullName: EnvironmentPermission.ToXml()\n  type: Method\n  assemblies:\n  - mscorlib\n  - System.Security.Permissions\n  namespace: System.Security.Permissions\n  summary: Creates an XML encoding of the permission and its current state.\n  syntax:\n    content: public override System.Security.SecurityElement ToXml ();\n    parameters: []\n    return:\n      type: System.Security.SecurityElement\n      description: An XML encoding of the permission, including any state information.\n  overload: System.Security.Permissions.EnvironmentPermission.ToXml*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/EnvironmentPermission.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Permissions.EnvironmentPermission.Union(System.Security.IPermission)\n  commentId: M:System.Security.Permissions.EnvironmentPermission.Union(System.Security.IPermission)\n  id: Union(System.Security.IPermission)\n  parent: System.Security.Permissions.EnvironmentPermission\n  langs:\n  - csharp\n  name: Union(IPermission)\n  nameWithType: EnvironmentPermission.Union(IPermission)\n  fullName: EnvironmentPermission.Union(IPermission)\n  type: Method\n  assemblies:\n  - mscorlib\n  - System.Security.Permissions\n  namespace: System.Security.Permissions\n  summary: Creates a permission that is the union of the current permission and the specified permission.\n  remarks: The result of a call to <xref:System.Security.Permissions.EnvironmentPermission.Union%2A> is a permission that represents all the states represented by both the current permission and the specified permission. Any demand that passes either permission passes their union.\n  syntax:\n    content: public override System.Security.IPermission Union (System.Security.IPermission other);\n    parameters:\n    - id: other\n      type: System.Security.IPermission\n      description: A permission to combine with the current permission. It must be of the same type as the current permission.\n    return:\n      type: System.Security.IPermission\n      description: A new permission that represents the union of the current permission and the specified permission.\n  overload: System.Security.Permissions.EnvironmentPermission.Union*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The <code>other</code> parameter is not `null` and is not of the same type as the current permission.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/EnvironmentPermission.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\nreferences:\n- uid: System.Security.CodeAccessPermission\n  parent: System.Security\n  isExternal: false\n  name: CodeAccessPermission\n  nameWithType: CodeAccessPermission\n  fullName: System.Security.CodeAccessPermission\n- uid: System.ArgumentException\n  parent: System\n  isExternal: false\n  name: ArgumentException\n  nameWithType: ArgumentException\n  fullName: System.ArgumentException\n- uid: System.ArgumentNullException\n  parent: System\n  isExternal: false\n  name: ArgumentNullException\n  nameWithType: ArgumentNullException\n  fullName: System.ArgumentNullException\n- uid: System.Security.Permissions.EnvironmentPermission.#ctor(System.Security.Permissions.PermissionState)\n  parent: System.Security.Permissions.EnvironmentPermission\n  isExternal: false\n  name: EnvironmentPermission(PermissionState)\n  nameWithType: EnvironmentPermission.EnvironmentPermission(PermissionState)\n  fullName: EnvironmentPermission.EnvironmentPermission(PermissionState)\n- uid: System.Security.Permissions.PermissionState\n  parent: System.Security.Permissions\n  isExternal: false\n  name: PermissionState\n  nameWithType: PermissionState\n  fullName: System.Security.Permissions.PermissionState\n- uid: System.Security.Permissions.EnvironmentPermission.#ctor(System.Security.Permissions.EnvironmentPermissionAccess,System.String)\n  parent: System.Security.Permissions.EnvironmentPermission\n  isExternal: false\n  name: EnvironmentPermission(EnvironmentPermissionAccess, String)\n  nameWithType: EnvironmentPermission.EnvironmentPermission(EnvironmentPermissionAccess, String)\n  fullName: EnvironmentPermission.EnvironmentPermission(EnvironmentPermissionAccess, String)\n- uid: System.Security.Permissions.EnvironmentPermissionAccess\n  parent: System.Security.Permissions\n  isExternal: false\n  name: EnvironmentPermissionAccess\n  nameWithType: EnvironmentPermissionAccess\n  fullName: System.Security.Permissions.EnvironmentPermissionAccess\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Security.Permissions.EnvironmentPermission.AddPathList(System.Security.Permissions.EnvironmentPermissionAccess,System.String)\n  parent: System.Security.Permissions.EnvironmentPermission\n  isExternal: false\n  name: AddPathList(EnvironmentPermissionAccess, String)\n  nameWithType: EnvironmentPermission.AddPathList(EnvironmentPermissionAccess, String)\n  fullName: EnvironmentPermission.AddPathList(EnvironmentPermissionAccess, String)\n- uid: System.Security.Permissions.EnvironmentPermission.Copy\n  parent: System.Security.Permissions.EnvironmentPermission\n  isExternal: false\n  name: Copy()\n  nameWithType: EnvironmentPermission.Copy()\n  fullName: EnvironmentPermission.Copy()\n- uid: System.Security.IPermission\n  parent: System.Security\n  isExternal: false\n  name: IPermission\n  nameWithType: IPermission\n  fullName: System.Security.IPermission\n- uid: System.Security.Permissions.EnvironmentPermission.FromXml(System.Security.SecurityElement)\n  parent: System.Security.Permissions.EnvironmentPermission\n  isExternal: false\n  name: FromXml(SecurityElement)\n  nameWithType: EnvironmentPermission.FromXml(SecurityElement)\n  fullName: EnvironmentPermission.FromXml(SecurityElement)\n- uid: System.Security.SecurityElement\n  parent: System.Security\n  isExternal: false\n  name: SecurityElement\n  nameWithType: SecurityElement\n  fullName: System.Security.SecurityElement\n- uid: System.Security.Permissions.EnvironmentPermission.GetPathList(System.Security.Permissions.EnvironmentPermissionAccess)\n  parent: System.Security.Permissions.EnvironmentPermission\n  isExternal: false\n  name: GetPathList(EnvironmentPermissionAccess)\n  nameWithType: EnvironmentPermission.GetPathList(EnvironmentPermissionAccess)\n  fullName: EnvironmentPermission.GetPathList(EnvironmentPermissionAccess)\n- uid: System.Security.Permissions.EnvironmentPermission.Intersect(System.Security.IPermission)\n  parent: System.Security.Permissions.EnvironmentPermission\n  isExternal: false\n  name: Intersect(IPermission)\n  nameWithType: EnvironmentPermission.Intersect(IPermission)\n  fullName: EnvironmentPermission.Intersect(IPermission)\n- uid: System.Security.Permissions.EnvironmentPermission.IsSubsetOf(System.Security.IPermission)\n  parent: System.Security.Permissions.EnvironmentPermission\n  isExternal: false\n  name: IsSubsetOf(IPermission)\n  nameWithType: EnvironmentPermission.IsSubsetOf(IPermission)\n  fullName: EnvironmentPermission.IsSubsetOf(IPermission)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Security.Permissions.EnvironmentPermission.IsUnrestricted\n  parent: System.Security.Permissions.EnvironmentPermission\n  isExternal: false\n  name: IsUnrestricted()\n  nameWithType: EnvironmentPermission.IsUnrestricted()\n  fullName: EnvironmentPermission.IsUnrestricted()\n- uid: System.Security.Permissions.EnvironmentPermission.SetPathList(System.Security.Permissions.EnvironmentPermissionAccess,System.String)\n  parent: System.Security.Permissions.EnvironmentPermission\n  isExternal: false\n  name: SetPathList(EnvironmentPermissionAccess, String)\n  nameWithType: EnvironmentPermission.SetPathList(EnvironmentPermissionAccess, String)\n  fullName: EnvironmentPermission.SetPathList(EnvironmentPermissionAccess, String)\n- uid: System.Security.Permissions.EnvironmentPermission.ToXml\n  parent: System.Security.Permissions.EnvironmentPermission\n  isExternal: false\n  name: ToXml()\n  nameWithType: EnvironmentPermission.ToXml()\n  fullName: EnvironmentPermission.ToXml()\n- uid: System.Security.Permissions.EnvironmentPermission.Union(System.Security.IPermission)\n  parent: System.Security.Permissions.EnvironmentPermission\n  isExternal: false\n  name: Union(IPermission)\n  nameWithType: EnvironmentPermission.Union(IPermission)\n  fullName: EnvironmentPermission.Union(IPermission)\n- uid: System.Security.Permissions.EnvironmentPermission.#ctor*\n  parent: System.Security.Permissions.EnvironmentPermission\n  isExternal: false\n  name: EnvironmentPermission\n  nameWithType: EnvironmentPermission.EnvironmentPermission\n  fullName: EnvironmentPermission.EnvironmentPermission\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/EnvironmentPermission.xml\n- uid: System.Security.Permissions.EnvironmentPermission.AddPathList*\n  parent: System.Security.Permissions.EnvironmentPermission\n  isExternal: false\n  name: AddPathList\n  nameWithType: EnvironmentPermission.AddPathList\n  fullName: EnvironmentPermission.AddPathList\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/EnvironmentPermission.xml\n- uid: System.Security.Permissions.EnvironmentPermission.Copy*\n  parent: System.Security.Permissions.EnvironmentPermission\n  isExternal: false\n  name: Copy\n  nameWithType: EnvironmentPermission.Copy\n  fullName: EnvironmentPermission.Copy\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/EnvironmentPermission.xml\n- uid: System.Security.Permissions.EnvironmentPermission.FromXml*\n  parent: System.Security.Permissions.EnvironmentPermission\n  isExternal: false\n  name: FromXml\n  nameWithType: EnvironmentPermission.FromXml\n  fullName: EnvironmentPermission.FromXml\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/EnvironmentPermission.xml\n- uid: System.Security.Permissions.EnvironmentPermission.GetPathList*\n  parent: System.Security.Permissions.EnvironmentPermission\n  isExternal: false\n  name: GetPathList\n  nameWithType: EnvironmentPermission.GetPathList\n  fullName: EnvironmentPermission.GetPathList\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/EnvironmentPermission.xml\n- uid: System.Security.Permissions.EnvironmentPermission.Intersect*\n  parent: System.Security.Permissions.EnvironmentPermission\n  isExternal: false\n  name: Intersect\n  nameWithType: EnvironmentPermission.Intersect\n  fullName: EnvironmentPermission.Intersect\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/EnvironmentPermission.xml\n- uid: System.Security.Permissions.EnvironmentPermission.IsSubsetOf*\n  parent: System.Security.Permissions.EnvironmentPermission\n  isExternal: false\n  name: IsSubsetOf\n  nameWithType: EnvironmentPermission.IsSubsetOf\n  fullName: EnvironmentPermission.IsSubsetOf\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/EnvironmentPermission.xml\n- uid: System.Security.Permissions.EnvironmentPermission.IsUnrestricted*\n  parent: System.Security.Permissions.EnvironmentPermission\n  isExternal: false\n  name: IsUnrestricted\n  nameWithType: EnvironmentPermission.IsUnrestricted\n  fullName: EnvironmentPermission.IsUnrestricted\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/EnvironmentPermission.xml\n- uid: System.Security.Permissions.EnvironmentPermission.SetPathList*\n  parent: System.Security.Permissions.EnvironmentPermission\n  isExternal: false\n  name: SetPathList\n  nameWithType: EnvironmentPermission.SetPathList\n  fullName: EnvironmentPermission.SetPathList\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/EnvironmentPermission.xml\n- uid: System.Security.Permissions.EnvironmentPermission.ToXml*\n  parent: System.Security.Permissions.EnvironmentPermission\n  isExternal: false\n  name: ToXml\n  nameWithType: EnvironmentPermission.ToXml\n  fullName: EnvironmentPermission.ToXml\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/EnvironmentPermission.xml\n- uid: System.Security.Permissions.EnvironmentPermission.Union*\n  parent: System.Security.Permissions.EnvironmentPermission\n  isExternal: false\n  name: Union\n  nameWithType: EnvironmentPermission.Union\n  fullName: EnvironmentPermission.Union\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/EnvironmentPermission.xml\n- uid: System.Security.CodeAccessPermission.Equals(System.Object)\n  parent: System.Security.CodeAccessPermission\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: CodeAccessPermission.Equals(Object)\n  fullName: CodeAccessPermission.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Security.CodeAccessPermission.GetHashCode\n  parent: System.Security.CodeAccessPermission\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: CodeAccessPermission.GetHashCode()\n  fullName: CodeAccessPermission.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Security.CodeAccessPermission.ToString\n  parent: System.Security.CodeAccessPermission\n  isExternal: false\n  name: ToString()\n  nameWithType: CodeAccessPermission.ToString()\n  fullName: CodeAccessPermission.ToString()\n- uid: System.Security.CodeAccessPermission.Assert\n  parent: System.Security.CodeAccessPermission\n  isExternal: false\n  name: Assert()\n  nameWithType: CodeAccessPermission.Assert()\n  fullName: CodeAccessPermission.Assert()\n- uid: System.Security.CodeAccessPermission.Demand\n  parent: System.Security.CodeAccessPermission\n  isExternal: false\n  name: Demand()\n  nameWithType: CodeAccessPermission.Demand()\n  fullName: CodeAccessPermission.Demand()\n- uid: System.Security.CodeAccessPermission.Deny\n  parent: System.Security.CodeAccessPermission\n  isExternal: false\n  name: Deny()\n  nameWithType: CodeAccessPermission.Deny()\n  fullName: CodeAccessPermission.Deny()\n- uid: System.Security.CodeAccessPermission.PermitOnly\n  parent: System.Security.CodeAccessPermission\n  isExternal: false\n  name: PermitOnly()\n  nameWithType: CodeAccessPermission.PermitOnly()\n  fullName: CodeAccessPermission.PermitOnly()\n- uid: System.Security.CodeAccessPermission.RevertAll\n  parent: System.Security.CodeAccessPermission\n  isExternal: false\n  name: RevertAll()\n  nameWithType: CodeAccessPermission.RevertAll()\n  fullName: CodeAccessPermission.RevertAll()\n- uid: System.Security.CodeAccessPermission.RevertAssert\n  parent: System.Security.CodeAccessPermission\n  isExternal: false\n  name: RevertAssert()\n  nameWithType: CodeAccessPermission.RevertAssert()\n  fullName: CodeAccessPermission.RevertAssert()\n- uid: System.Security.CodeAccessPermission.RevertDeny\n  parent: System.Security.CodeAccessPermission\n  isExternal: false\n  name: RevertDeny()\n  nameWithType: CodeAccessPermission.RevertDeny()\n  fullName: CodeAccessPermission.RevertDeny()\n- uid: System.Security.CodeAccessPermission.RevertPermitOnly\n  parent: System.Security.CodeAccessPermission\n  isExternal: false\n  name: RevertPermitOnly()\n  nameWithType: CodeAccessPermission.RevertPermitOnly()\n  fullName: CodeAccessPermission.RevertPermitOnly()\n- uid: System.Security.CodeAccessPermission.System#Security#IPermission#Demand\n  parent: System.Security.CodeAccessPermission\n  isExternal: false\n  name: IPermission.Demand()\n  nameWithType: CodeAccessPermission.IPermission.Demand()\n  fullName: CodeAccessPermission.IPermission.Demand()\n- uid: System.Security.CodeAccessPermission.System#Security#IStackWalk#Assert\n  parent: System.Security.CodeAccessPermission\n  isExternal: false\n  name: IStackWalk.Assert()\n  nameWithType: CodeAccessPermission.IStackWalk.Assert()\n  fullName: CodeAccessPermission.IStackWalk.Assert()\n- uid: System.Security.CodeAccessPermission.System#Security#IStackWalk#Demand\n  parent: System.Security.CodeAccessPermission\n  isExternal: false\n  name: IStackWalk.Demand()\n  nameWithType: CodeAccessPermission.IStackWalk.Demand()\n  fullName: CodeAccessPermission.IStackWalk.Demand()\n- uid: System.Security.CodeAccessPermission.System#Security#IStackWalk#Deny\n  parent: System.Security.CodeAccessPermission\n  isExternal: false\n  name: IStackWalk.Deny()\n  nameWithType: CodeAccessPermission.IStackWalk.Deny()\n  fullName: CodeAccessPermission.IStackWalk.Deny()\n- uid: System.Security.CodeAccessPermission.System#Security#IStackWalk#PermitOnly\n  parent: System.Security.CodeAccessPermission\n  isExternal: false\n  name: IStackWalk.PermitOnly()\n  nameWithType: CodeAccessPermission.IStackWalk.PermitOnly()\n  fullName: CodeAccessPermission.IStackWalk.PermitOnly()\n- uid: System.Security.Permissions.IUnrestrictedPermission\n  parent: System.Security.Permissions\n  isExternal: false\n  name: IUnrestrictedPermission\n  nameWithType: IUnrestrictedPermission\n  fullName: System.Security.Permissions.IUnrestrictedPermission\n"}