{"nodes":[{"content":"The base class for XML Web service client proxies that use the HTTP-GET protocol.","nodes":[{"pos":[0,81],"content":"The base class for XML Web service client proxies that use the HTTP-GET protocol.","nodes":[{"content":"The base class for XML Web service client proxies that use the HTTP-GET protocol.","pos":[0,81]}]}],"pos":[604,686],"yaml":true},{"content":"When an XML Web service client uses the HTTP-GET protocol, parameters are encoded within the URL and the response is returned in plain XML.  \n  \n If you are building an XML Web service client using ASP.NET, then a proxy class deriving indirectly or directly from <xref:System.Web.Services.Protocols.WebClientProtocol> needs to be created for the XML Web service you want to call. When the XML Web service client calls the XML Web service using HTTP, derive the proxy class from <xref:System.Web.Services.Protocols.HttpSimpleClientProtocol>, which in turn derives from <xref:System.Web.Services.Protocols.WebClientProtocol>.  \n  \n <xref:System.Web.Services.Protocols.HttpGetClientProtocol> and <xref:System.Web.Services.Protocols.HttpPostClientProtocol> derive from <xref:System.Web.Services.Protocols.HttpSimpleClientProtocol>, providing the support for calling an XML Web service method using the HTTP-GET and HTTP-POST protocols respectively. Clients calling an XML Web service using SOAP should derive from <xref:System.Web.Services.Protocols.SoapHttpClientProtocol>.  \n  \n For details on building a proxy class, see [&#91;\\<topic://cpconcreatingwebserviceproxy>&#93;](http://msdn.microsoft.com/en-us/142d91f5-3249-4cfc-a431-1f3acb76d756).","nodes":[{"pos":[0,139],"content":"When an XML Web service client uses the HTTP-GET protocol, parameters are encoded within the URL and the response is returned in plain XML.","nodes":[{"content":"When an XML Web service client uses the HTTP-GET protocol, parameters are encoded within the URL and the response is returned in plain XML.","pos":[0,139]}]},{"pos":[146,623],"content":"If you are building an XML Web service client using ASP.NET, then a proxy class deriving indirectly or directly from <xref:System.Web.Services.Protocols.WebClientProtocol> needs to be created for the XML Web service you want to call. When the XML Web service client calls the XML Web service using HTTP, derive the proxy class from <xref:System.Web.Services.Protocols.HttpSimpleClientProtocol>, which in turn derives from <xref:System.Web.Services.Protocols.WebClientProtocol>.","nodes":[{"content":"If you are building an XML Web service client using ASP.NET, then a proxy class deriving indirectly or directly from <xref:System.Web.Services.Protocols.WebClientProtocol> needs to be created for the XML Web service you want to call. When the XML Web service client calls the XML Web service using HTTP, derive the proxy class from <xref:System.Web.Services.Protocols.HttpSimpleClientProtocol>, which in turn derives from <xref:System.Web.Services.Protocols.WebClientProtocol>.","pos":[0,477],"nodes":[{"content":"If you are building an XML Web service client using ASP.NET, then a proxy class deriving indirectly or directly from <ph id=\"ph1\">&lt;xref:System.Web.Services.Protocols.WebClientProtocol&gt;</ph> needs to be created for the XML Web service you want to call.","pos":[0,233],"source":"If you are building an XML Web service client using ASP.NET, then a proxy class deriving indirectly or directly from <xref:System.Web.Services.Protocols.WebClientProtocol> needs to be created for the XML Web service you want to call."},{"content":"When the XML Web service client calls the XML Web service using HTTP, derive the proxy class from <ph id=\"ph1\">&lt;xref:System.Web.Services.Protocols.HttpSimpleClientProtocol&gt;</ph>, which in turn derives from <ph id=\"ph2\">&lt;xref:System.Web.Services.Protocols.WebClientProtocol&gt;</ph>.","pos":[234,477],"source":" When the XML Web service client calls the XML Web service using HTTP, derive the proxy class from <xref:System.Web.Services.Protocols.HttpSimpleClientProtocol>, which in turn derives from <xref:System.Web.Services.Protocols.WebClientProtocol>."}]}]},{"pos":[630,1070],"content":"<xref:System.Web.Services.Protocols.HttpGetClientProtocol> and <xref:System.Web.Services.Protocols.HttpPostClientProtocol> derive from <xref:System.Web.Services.Protocols.HttpSimpleClientProtocol>, providing the support for calling an XML Web service method using the HTTP-GET and HTTP-POST protocols respectively. Clients calling an XML Web service using SOAP should derive from <xref:System.Web.Services.Protocols.SoapHttpClientProtocol>.","nodes":[{"content":"<xref:System.Web.Services.Protocols.HttpGetClientProtocol> and <xref:System.Web.Services.Protocols.HttpPostClientProtocol> derive from <xref:System.Web.Services.Protocols.HttpSimpleClientProtocol>, providing the support for calling an XML Web service method using the HTTP-GET and HTTP-POST protocols respectively. Clients calling an XML Web service using SOAP should derive from <xref:System.Web.Services.Protocols.SoapHttpClientProtocol>.","pos":[0,440],"nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Web.Services.Protocols.HttpGetClientProtocol&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Web.Services.Protocols.HttpPostClientProtocol&gt;</ph> derive from <ph id=\"ph3\">&lt;xref:System.Web.Services.Protocols.HttpSimpleClientProtocol&gt;</ph>, providing the support for calling an XML Web service method using the HTTP-GET and HTTP-POST protocols respectively.","pos":[0,314],"source":"<xref:System.Web.Services.Protocols.HttpGetClientProtocol> and <xref:System.Web.Services.Protocols.HttpPostClientProtocol> derive from <xref:System.Web.Services.Protocols.HttpSimpleClientProtocol>, providing the support for calling an XML Web service method using the HTTP-GET and HTTP-POST protocols respectively."},{"content":"Clients calling an XML Web service using SOAP should derive from <ph id=\"ph1\">&lt;xref:System.Web.Services.Protocols.SoapHttpClientProtocol&gt;</ph>.","pos":[315,440],"source":" Clients calling an XML Web service using SOAP should derive from <xref:System.Web.Services.Protocols.SoapHttpClientProtocol>."}]}]},{"pos":[1077,1242],"content":"For details on building a proxy class, see <bpt id=\"p1\">[</bpt>&amp;#91;<ph id=\"ph1\">\\&lt;</ph>topic://cpconcreatingwebserviceproxy&gt;&amp;#93;<ept id=\"p1\">](http://msdn.microsoft.com/en-us/142d91f5-3249-4cfc-a431-1f3acb76d756)</ept>.","source":"For details on building a proxy class, see [&#91;\\<topic://cpconcreatingwebserviceproxy>&#93;](http://msdn.microsoft.com/en-us/142d91f5-3249-4cfc-a431-1f3acb76d756)."}],"pos":[697,1949],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.Web.Services.Protocols.HttpGetClientProtocol\"></xref> class.","nodes":[{"pos":[0,113],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Web.Services.Protocols.HttpGetClientProtocol\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.Web.Services.Protocols.HttpGetClientProtocol\"></xref> class."}],"pos":[7664,7778],"yaml":true},{"content":"Creates a <xref href=\"System.Net.WebRequest\"></xref> instance for the specified URI.","nodes":[{"pos":[0,84],"content":"Creates a <ph id=\"ph1\">&lt;xref href=\"System.Net.WebRequest\"&gt;&lt;/xref&gt;</ph> instance for the specified URI.","source":"Creates a <xref href=\"System.Net.WebRequest\"></xref> instance for the specified URI."}],"pos":[9595,9680],"yaml":true},{"content":"This method overrides the base version of <xref:System.Web.Services.Protocols.WebClientProtocol.GetWebRequest%2A> to specify that the HTTP request to the XML Web service is made using HTTP-GET. By overriding this method, additional customizations can be made to the <xref:System.Net.WebRequest> object before the XML Web service request is made. For example you could add a custom header to the request.","nodes":[{"pos":[0,403],"content":"This method overrides the base version of <xref:System.Web.Services.Protocols.WebClientProtocol.GetWebRequest%2A> to specify that the HTTP request to the XML Web service is made using HTTP-GET. By overriding this method, additional customizations can be made to the <xref:System.Net.WebRequest> object before the XML Web service request is made. For example you could add a custom header to the request.","nodes":[{"content":"This method overrides the base version of <xref:System.Web.Services.Protocols.WebClientProtocol.GetWebRequest%2A> to specify that the HTTP request to the XML Web service is made using HTTP-GET. By overriding this method, additional customizations can be made to the <xref:System.Net.WebRequest> object before the XML Web service request is made. For example you could add a custom header to the request.","pos":[0,403],"nodes":[{"content":"This method overrides the base version of <ph id=\"ph1\">&lt;xref:System.Web.Services.Protocols.WebClientProtocol.GetWebRequest%2A&gt;</ph> to specify that the HTTP request to the XML Web service is made using HTTP-GET.","pos":[0,193],"source":"This method overrides the base version of <xref:System.Web.Services.Protocols.WebClientProtocol.GetWebRequest%2A> to specify that the HTTP request to the XML Web service is made using HTTP-GET."},{"content":"By overriding this method, additional customizations can be made to the <ph id=\"ph1\">&lt;xref:System.Net.WebRequest&gt;</ph> object before the XML Web service request is made.","pos":[194,345],"source":" By overriding this method, additional customizations can be made to the <xref:System.Net.WebRequest> object before the XML Web service request is made."},{"content":"For example you could add a custom header to the request.","pos":[346,403]}]}]}],"pos":[9691,10095],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.Uri\"></xref> to use when creating the <xref href=\"System.Net.WebRequest\"></xref>.","nodes":[{"pos":[0,104],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Uri\"&gt;&lt;/xref&gt;</ph> to use when creating the <ph id=\"ph2\">&lt;xref href=\"System.Net.WebRequest\"&gt;&lt;/xref&gt;</ph>.","source":"The <xref href=\"System.Uri\"></xref> to use when creating the <xref href=\"System.Net.WebRequest\"></xref>."}],"pos":[10256,10361],"yaml":true},{"content":"The <xref href=\"System.Net.WebRequest\"></xref> instance.","nodes":[{"pos":[0,56],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Net.WebRequest\"&gt;&lt;/xref&gt;</ph> instance.","source":"The <xref href=\"System.Net.WebRequest\"></xref> instance."}],"pos":[10426,10483],"yaml":true},{"content":"The <code>uri</code> parameter is null or has a length of zero.","nodes":[{"pos":[0,63],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">uri</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is null or has a length of zero.","source":"The <code>uri</code> parameter is null or has a length of zero."}],"pos":[10686,10750],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Web.Services.Protocols.HttpGetClientProtocol\n  commentId: T:System.Web.Services.Protocols.HttpGetClientProtocol\n  id: HttpGetClientProtocol\n  children:\n  - System.Web.Services.Protocols.HttpGetClientProtocol.#ctor\n  - System.Web.Services.Protocols.HttpGetClientProtocol.GetWebRequest(System.Uri)\n  langs:\n  - csharp\n  name: HttpGetClientProtocol\n  nameWithType: HttpGetClientProtocol\n  fullName: System.Web.Services.Protocols.HttpGetClientProtocol\n  type: Class\n  assemblies:\n  - System.Web.Services\n  namespace: System.Web.Services.Protocols\n  summary: The base class for XML Web service client proxies that use the HTTP-GET protocol.\n  remarks: \"When an XML Web service client uses the HTTP-GET protocol, parameters are encoded within the URL and the response is returned in plain XML.  \\n  \\n If you are building an XML Web service client using ASP.NET, then a proxy class deriving indirectly or directly from <xref:System.Web.Services.Protocols.WebClientProtocol> needs to be created for the XML Web service you want to call. When the XML Web service client calls the XML Web service using HTTP, derive the proxy class from <xref:System.Web.Services.Protocols.HttpSimpleClientProtocol>, which in turn derives from <xref:System.Web.Services.Protocols.WebClientProtocol>.  \\n  \\n <xref:System.Web.Services.Protocols.HttpGetClientProtocol> and <xref:System.Web.Services.Protocols.HttpPostClientProtocol> derive from <xref:System.Web.Services.Protocols.HttpSimpleClientProtocol>, providing the support for calling an XML Web service method using the HTTP-GET and HTTP-POST protocols respectively. Clients calling an XML Web service using SOAP should derive from <xref:System.Web.Services.Protocols.SoapHttpClientProtocol>.  \\n  \\n For details on building a proxy class, see [&#91;\\\\<topic://cpconcreatingwebserviceproxy>&#93;](http://msdn.microsoft.com/en-us/142d91f5-3249-4cfc-a431-1f3acb76d756).\"\n  example:\n  - \"The following example is a proxy class generated by Wsdl.exe for the `Math` XML Web service below. The proxy class derives from <xref:System.Web.Services.Protocols.HttpGetClientProtocol>, which derives from the abstract <xref:System.Web.Services.Protocols.HttpSimpleClientProtocol> class.  \\n  \\n [!code-cpp[Classic HttpGetClientProtocol Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic HttpGetClientProtocol Example/CPP/source.cpp#1)]\\n [!code-csharp[Classic HttpGetClientProtocol Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic HttpGetClientProtocol Example/CS/source.cs#1)]\\n [!code-vb[Classic HttpGetClientProtocol Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic HttpGetClientProtocol Example/VB/source.vb#1)]  \\n  \\n The following example is the `Math` XML Web service, from which the above proxy class was created.\"\n  syntax:\n    content: 'public class HttpGetClientProtocol : System.Web.Services.Protocols.HttpSimpleClientProtocol'\n  inheritance:\n  - System.Object\n  - System.MarshalByRefObject\n  - System.ComponentModel.Component\n  - System.Web.Services.Protocols.WebClientProtocol\n  - System.Web.Services.Protocols.HttpWebClientProtocol\n  - System.Web.Services.Protocols.HttpSimpleClientProtocol\n  implements: []\n  inheritedMembers:\n  - System.ComponentModel.Component.CanRaiseEvents\n  - System.ComponentModel.Component.Container\n  - System.ComponentModel.Component.DesignMode\n  - System.ComponentModel.Component.Dispose\n  - System.ComponentModel.Component.Dispose(System.Boolean)\n  - System.ComponentModel.Component.Disposed\n  - System.ComponentModel.Component.Events\n  - System.ComponentModel.Component.GetService(System.Type)\n  - System.ComponentModel.Component.Site\n  - System.ComponentModel.Component.ToString\n  - System.MarshalByRefObject.CreateObjRef(System.Type)\n  - System.MarshalByRefObject.GetLifetimeService\n  - System.MarshalByRefObject.InitializeLifetimeService\n  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Web.Services.Protocols.HttpSimpleClientProtocol.BeginInvoke(System.String,System.String,System.Object[],System.AsyncCallback,System.Object)\n  - System.Web.Services.Protocols.HttpSimpleClientProtocol.EndInvoke(System.IAsyncResult)\n  - System.Web.Services.Protocols.HttpSimpleClientProtocol.Invoke(System.String,System.String,System.Object[])\n  - System.Web.Services.Protocols.HttpSimpleClientProtocol.InvokeAsync(System.String,System.String,System.Object[],System.Threading.SendOrPostCallback)\n  - System.Web.Services.Protocols.HttpSimpleClientProtocol.InvokeAsync(System.String,System.String,System.Object[],System.Threading.SendOrPostCallback,System.Object)\n  - System.Web.Services.Protocols.HttpWebClientProtocol.AllowAutoRedirect\n  - System.Web.Services.Protocols.HttpWebClientProtocol.CancelAsync(System.Object)\n  - System.Web.Services.Protocols.HttpWebClientProtocol.ClientCertificates\n  - System.Web.Services.Protocols.HttpWebClientProtocol.CookieContainer\n  - System.Web.Services.Protocols.HttpWebClientProtocol.EnableDecompression\n  - System.Web.Services.Protocols.HttpWebClientProtocol.GenerateXmlMappings(System.Type,System.Collections.ArrayList)\n  - System.Web.Services.Protocols.HttpWebClientProtocol.GenerateXmlMappings(System.Type[],System.Collections.ArrayList)\n  - System.Web.Services.Protocols.HttpWebClientProtocol.GetWebResponse(System.Net.WebRequest)\n  - System.Web.Services.Protocols.HttpWebClientProtocol.GetWebResponse(System.Net.WebRequest,System.IAsyncResult)\n  - System.Web.Services.Protocols.HttpWebClientProtocol.Proxy\n  - System.Web.Services.Protocols.HttpWebClientProtocol.UnsafeAuthenticatedConnectionSharing\n  - System.Web.Services.Protocols.HttpWebClientProtocol.UserAgent\n  - System.Web.Services.Protocols.WebClientProtocol.Abort\n  - System.Web.Services.Protocols.WebClientProtocol.AddToCache(System.Type,System.Object)\n  - System.Web.Services.Protocols.WebClientProtocol.ConnectionGroupName\n  - System.Web.Services.Protocols.WebClientProtocol.Credentials\n  - System.Web.Services.Protocols.WebClientProtocol.GetFromCache(System.Type)\n  - System.Web.Services.Protocols.WebClientProtocol.PreAuthenticate\n  - System.Web.Services.Protocols.WebClientProtocol.RequestEncoding\n  - System.Web.Services.Protocols.WebClientProtocol.Timeout\n  - System.Web.Services.Protocols.WebClientProtocol.Url\n  - System.Web.Services.Protocols.WebClientProtocol.UseDefaultCredentials\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Services.Protocols/HttpGetClientProtocol.xml\n  ms.technology:\n  - dotnet-webforms\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Web.Services.Protocols.HttpGetClientProtocol.#ctor\n  commentId: M:System.Web.Services.Protocols.HttpGetClientProtocol.#ctor\n  id: '#ctor'\n  parent: System.Web.Services.Protocols.HttpGetClientProtocol\n  langs:\n  - csharp\n  name: HttpGetClientProtocol()\n  nameWithType: HttpGetClientProtocol.HttpGetClientProtocol()\n  fullName: HttpGetClientProtocol.HttpGetClientProtocol()\n  type: Constructor\n  assemblies:\n  - System.Web.Services\n  namespace: System.Web.Services.Protocols\n  summary: Initializes a new instance of the <xref href=\"System.Web.Services.Protocols.HttpGetClientProtocol\"></xref> class.\n  remarks: ''\n  example:\n  - >-\n    [!code-cpp[HttpGetClientProtocol_Constructor#1](~/samples/snippets/cpp/VS_Snippets_Remoting/HttpGetClientProtocol_Constructor/CPP/httpgetclientprotocol_constructor.cpp#1)]\n     [!code-csharp[HttpGetClientProtocol_Constructor#1](~/samples/snippets/csharp/VS_Snippets_Remoting/HttpGetClientProtocol_Constructor/CS/httpgetclientprotocol_constructor.cs#1)]\n     [!code-vb[HttpGetClientProtocol_Constructor#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/HttpGetClientProtocol_Constructor/VB/httpgetclientprotocol_constructor.vb#1)]\n  syntax:\n    content: public HttpGetClientProtocol ();\n    parameters: []\n  overload: System.Web.Services.Protocols.HttpGetClientProtocol.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Services.Protocols/HttpGetClientProtocol.xml\n  ms.technology:\n  - dotnet-webforms\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Web.Services.Protocols.HttpGetClientProtocol.GetWebRequest(System.Uri)\n  commentId: M:System.Web.Services.Protocols.HttpGetClientProtocol.GetWebRequest(System.Uri)\n  id: GetWebRequest(System.Uri)\n  parent: System.Web.Services.Protocols.HttpGetClientProtocol\n  langs:\n  - csharp\n  name: GetWebRequest(Uri)\n  nameWithType: HttpGetClientProtocol.GetWebRequest(Uri)\n  fullName: HttpGetClientProtocol.GetWebRequest(Uri)\n  type: Method\n  assemblies:\n  - System.Web.Services\n  namespace: System.Web.Services.Protocols\n  summary: Creates a <xref href=\"System.Net.WebRequest\"></xref> instance for the specified URI.\n  remarks: This method overrides the base version of <xref:System.Web.Services.Protocols.WebClientProtocol.GetWebRequest%2A> to specify that the HTTP request to the XML Web service is made using HTTP-GET. By overriding this method, additional customizations can be made to the <xref:System.Net.WebRequest> object before the XML Web service request is made. For example you could add a custom header to the request.\n  syntax:\n    content: protected override System.Net.WebRequest GetWebRequest (Uri uri);\n    parameters:\n    - id: uri\n      type: System.Uri\n      description: The <xref href=\"System.Uri\"></xref> to use when creating the <xref href=\"System.Net.WebRequest\"></xref>.\n    return:\n      type: System.Net.WebRequest\n      description: The <xref href=\"System.Net.WebRequest\"></xref> instance.\n  overload: System.Web.Services.Protocols.HttpGetClientProtocol.GetWebRequest*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The <code>uri</code> parameter is null or has a length of zero.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Services.Protocols/HttpGetClientProtocol.xml\n  ms.technology:\n  - dotnet-webforms\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\nreferences:\n- uid: System.Web.Services.Protocols.HttpSimpleClientProtocol\n  parent: System.Web.Services.Protocols\n  isExternal: false\n  name: HttpSimpleClientProtocol\n  nameWithType: HttpSimpleClientProtocol\n  fullName: System.Web.Services.Protocols.HttpSimpleClientProtocol\n- uid: System.InvalidOperationException\n  parent: System\n  isExternal: false\n  name: InvalidOperationException\n  nameWithType: InvalidOperationException\n  fullName: System.InvalidOperationException\n- uid: System.Web.Services.Protocols.HttpGetClientProtocol.#ctor\n  parent: System.Web.Services.Protocols.HttpGetClientProtocol\n  isExternal: false\n  name: HttpGetClientProtocol()\n  nameWithType: HttpGetClientProtocol.HttpGetClientProtocol()\n  fullName: HttpGetClientProtocol.HttpGetClientProtocol()\n- uid: System.Web.Services.Protocols.HttpGetClientProtocol.GetWebRequest(System.Uri)\n  parent: System.Web.Services.Protocols.HttpGetClientProtocol\n  isExternal: false\n  name: GetWebRequest(Uri)\n  nameWithType: HttpGetClientProtocol.GetWebRequest(Uri)\n  fullName: HttpGetClientProtocol.GetWebRequest(Uri)\n- uid: System.Net.WebRequest\n  parent: System.Net\n  isExternal: false\n  name: WebRequest\n  nameWithType: WebRequest\n  fullName: System.Net.WebRequest\n- uid: System.Uri\n  parent: System\n  isExternal: false\n  name: Uri\n  nameWithType: Uri\n  fullName: System.Uri\n- uid: System.Web.Services.Protocols.HttpGetClientProtocol.#ctor*\n  parent: System.Web.Services.Protocols.HttpGetClientProtocol\n  isExternal: false\n  name: HttpGetClientProtocol\n  nameWithType: HttpGetClientProtocol.HttpGetClientProtocol\n  fullName: HttpGetClientProtocol.HttpGetClientProtocol\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Services.Protocols/HttpGetClientProtocol.xml\n- uid: System.Web.Services.Protocols.HttpGetClientProtocol.GetWebRequest*\n  parent: System.Web.Services.Protocols.HttpGetClientProtocol\n  isExternal: false\n  name: GetWebRequest\n  nameWithType: HttpGetClientProtocol.GetWebRequest\n  fullName: HttpGetClientProtocol.GetWebRequest\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Services.Protocols/HttpGetClientProtocol.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.ComponentModel.Component.ToString\n  parent: System.ComponentModel.Component\n  isExternal: false\n  name: ToString()\n  nameWithType: Component.ToString()\n  fullName: Component.ToString()\n- uid: System.MarshalByRefObject.CreateObjRef(System.Type)\n  parent: System.MarshalByRefObject\n  isExternal: false\n  name: CreateObjRef(Type)\n  nameWithType: MarshalByRefObject.CreateObjRef(Type)\n  fullName: MarshalByRefObject.CreateObjRef(Type)\n- uid: System.MarshalByRefObject.GetLifetimeService\n  parent: System.MarshalByRefObject\n  isExternal: false\n  name: GetLifetimeService()\n  nameWithType: MarshalByRefObject.GetLifetimeService()\n  fullName: MarshalByRefObject.GetLifetimeService()\n- uid: System.MarshalByRefObject.InitializeLifetimeService\n  parent: System.MarshalByRefObject\n  isExternal: false\n  name: InitializeLifetimeService()\n  nameWithType: MarshalByRefObject.InitializeLifetimeService()\n  fullName: MarshalByRefObject.InitializeLifetimeService()\n- uid: System.MarshalByRefObject.MemberwiseClone(System.Boolean)\n  parent: System.MarshalByRefObject\n  isExternal: false\n  name: MemberwiseClone(Boolean)\n  nameWithType: MarshalByRefObject.MemberwiseClone(Boolean)\n  fullName: MarshalByRefObject.MemberwiseClone(Boolean)\n- uid: System.ComponentModel.Component.CanRaiseEvents\n  parent: System.ComponentModel.Component\n  isExternal: false\n  name: CanRaiseEvents\n  nameWithType: Component.CanRaiseEvents\n  fullName: Component.CanRaiseEvents\n- uid: System.ComponentModel.Component.Container\n  parent: System.ComponentModel.Component\n  isExternal: false\n  name: Container\n  nameWithType: Component.Container\n  fullName: Component.Container\n- uid: System.ComponentModel.Component.DesignMode\n  parent: System.ComponentModel.Component\n  isExternal: false\n  name: DesignMode\n  nameWithType: Component.DesignMode\n  fullName: Component.DesignMode\n- uid: System.ComponentModel.Component.Dispose\n  parent: System.ComponentModel.Component\n  isExternal: false\n  name: Dispose()\n  nameWithType: Component.Dispose()\n  fullName: Component.Dispose()\n- uid: System.ComponentModel.Component.Dispose(System.Boolean)\n  parent: System.ComponentModel.Component\n  isExternal: false\n  name: Dispose(Boolean)\n  nameWithType: Component.Dispose(Boolean)\n  fullName: Component.Dispose(Boolean)\n- uid: System.ComponentModel.Component.Disposed\n  parent: System.ComponentModel.Component\n  isExternal: false\n  name: Disposed\n  nameWithType: Component.Disposed\n  fullName: Component.Disposed\n- uid: System.ComponentModel.Component.Events\n  parent: System.ComponentModel.Component\n  isExternal: false\n  name: Events\n  nameWithType: Component.Events\n  fullName: Component.Events\n- uid: System.ComponentModel.Component.GetService(System.Type)\n  parent: System.ComponentModel.Component\n  isExternal: false\n  name: GetService(Type)\n  nameWithType: Component.GetService(Type)\n  fullName: Component.GetService(Type)\n- uid: System.ComponentModel.Component.Site\n  parent: System.ComponentModel.Component\n  isExternal: false\n  name: Site\n  nameWithType: Component.Site\n  fullName: Component.Site\n- uid: System.Web.Services.Protocols.WebClientProtocol.Abort\n  parent: System.Web.Services.Protocols.WebClientProtocol\n  isExternal: false\n  name: Abort()\n  nameWithType: WebClientProtocol.Abort()\n  fullName: WebClientProtocol.Abort()\n- uid: System.Web.Services.Protocols.WebClientProtocol.AddToCache(System.Type,System.Object)\n  parent: System.Web.Services.Protocols.WebClientProtocol\n  isExternal: false\n  name: AddToCache(Type, Object)\n  nameWithType: WebClientProtocol.AddToCache(Type, Object)\n  fullName: WebClientProtocol.AddToCache(Type, Object)\n- uid: System.Web.Services.Protocols.WebClientProtocol.ConnectionGroupName\n  parent: System.Web.Services.Protocols.WebClientProtocol\n  isExternal: false\n  name: ConnectionGroupName\n  nameWithType: WebClientProtocol.ConnectionGroupName\n  fullName: WebClientProtocol.ConnectionGroupName\n- uid: System.Web.Services.Protocols.WebClientProtocol.Credentials\n  parent: System.Web.Services.Protocols.WebClientProtocol\n  isExternal: false\n  name: Credentials\n  nameWithType: WebClientProtocol.Credentials\n  fullName: WebClientProtocol.Credentials\n- uid: System.Web.Services.Protocols.WebClientProtocol.GetFromCache(System.Type)\n  parent: System.Web.Services.Protocols.WebClientProtocol\n  isExternal: false\n  name: GetFromCache(Type)\n  nameWithType: WebClientProtocol.GetFromCache(Type)\n  fullName: WebClientProtocol.GetFromCache(Type)\n- uid: System.Web.Services.Protocols.HttpWebClientProtocol.GetWebResponse(System.Net.WebRequest)\n  parent: System.Web.Services.Protocols.HttpWebClientProtocol\n  isExternal: false\n  name: GetWebResponse(WebRequest)\n  nameWithType: HttpWebClientProtocol.GetWebResponse(WebRequest)\n  fullName: HttpWebClientProtocol.GetWebResponse(WebRequest)\n- uid: System.Web.Services.Protocols.HttpWebClientProtocol.GetWebResponse(System.Net.WebRequest,System.IAsyncResult)\n  parent: System.Web.Services.Protocols.HttpWebClientProtocol\n  isExternal: false\n  name: GetWebResponse(WebRequest, IAsyncResult)\n  nameWithType: HttpWebClientProtocol.GetWebResponse(WebRequest, IAsyncResult)\n  fullName: HttpWebClientProtocol.GetWebResponse(WebRequest, IAsyncResult)\n- uid: System.Web.Services.Protocols.WebClientProtocol.PreAuthenticate\n  parent: System.Web.Services.Protocols.WebClientProtocol\n  isExternal: false\n  name: PreAuthenticate\n  nameWithType: WebClientProtocol.PreAuthenticate\n  fullName: WebClientProtocol.PreAuthenticate\n- uid: System.Web.Services.Protocols.WebClientProtocol.RequestEncoding\n  parent: System.Web.Services.Protocols.WebClientProtocol\n  isExternal: false\n  name: RequestEncoding\n  nameWithType: WebClientProtocol.RequestEncoding\n  fullName: WebClientProtocol.RequestEncoding\n- uid: System.Web.Services.Protocols.WebClientProtocol.Timeout\n  parent: System.Web.Services.Protocols.WebClientProtocol\n  isExternal: false\n  name: Timeout\n  nameWithType: WebClientProtocol.Timeout\n  fullName: WebClientProtocol.Timeout\n- uid: System.Web.Services.Protocols.WebClientProtocol.Url\n  parent: System.Web.Services.Protocols.WebClientProtocol\n  isExternal: false\n  name: Url\n  nameWithType: WebClientProtocol.Url\n  fullName: WebClientProtocol.Url\n- uid: System.Web.Services.Protocols.WebClientProtocol.UseDefaultCredentials\n  parent: System.Web.Services.Protocols.WebClientProtocol\n  isExternal: false\n  name: UseDefaultCredentials\n  nameWithType: WebClientProtocol.UseDefaultCredentials\n  fullName: WebClientProtocol.UseDefaultCredentials\n- uid: System.Web.Services.Protocols.HttpWebClientProtocol.AllowAutoRedirect\n  parent: System.Web.Services.Protocols.HttpWebClientProtocol\n  isExternal: false\n  name: AllowAutoRedirect\n  nameWithType: HttpWebClientProtocol.AllowAutoRedirect\n  fullName: HttpWebClientProtocol.AllowAutoRedirect\n- uid: System.Web.Services.Protocols.HttpWebClientProtocol.CancelAsync(System.Object)\n  parent: System.Web.Services.Protocols.HttpWebClientProtocol\n  isExternal: false\n  name: CancelAsync(Object)\n  nameWithType: HttpWebClientProtocol.CancelAsync(Object)\n  fullName: HttpWebClientProtocol.CancelAsync(Object)\n- uid: System.Web.Services.Protocols.HttpWebClientProtocol.ClientCertificates\n  parent: System.Web.Services.Protocols.HttpWebClientProtocol\n  isExternal: false\n  name: ClientCertificates\n  nameWithType: HttpWebClientProtocol.ClientCertificates\n  fullName: HttpWebClientProtocol.ClientCertificates\n- uid: System.Web.Services.Protocols.HttpWebClientProtocol.CookieContainer\n  parent: System.Web.Services.Protocols.HttpWebClientProtocol\n  isExternal: false\n  name: CookieContainer\n  nameWithType: HttpWebClientProtocol.CookieContainer\n  fullName: HttpWebClientProtocol.CookieContainer\n- uid: System.Web.Services.Protocols.HttpWebClientProtocol.EnableDecompression\n  parent: System.Web.Services.Protocols.HttpWebClientProtocol\n  isExternal: false\n  name: EnableDecompression\n  nameWithType: HttpWebClientProtocol.EnableDecompression\n  fullName: HttpWebClientProtocol.EnableDecompression\n- uid: System.Web.Services.Protocols.HttpWebClientProtocol.GenerateXmlMappings(System.Type,System.Collections.ArrayList)\n  parent: System.Web.Services.Protocols.HttpWebClientProtocol\n  isExternal: false\n  name: GenerateXmlMappings(Type, ArrayList)\n  nameWithType: HttpWebClientProtocol.GenerateXmlMappings(Type, ArrayList)\n  fullName: HttpWebClientProtocol.GenerateXmlMappings(Type, ArrayList)\n- uid: System.Web.Services.Protocols.HttpWebClientProtocol.GenerateXmlMappings(System.Type[],System.Collections.ArrayList)\n  parent: System.Web.Services.Protocols.HttpWebClientProtocol\n  isExternal: false\n  name: GenerateXmlMappings(Type[], ArrayList)\n  nameWithType: HttpWebClientProtocol.GenerateXmlMappings(Type[], ArrayList)\n  fullName: HttpWebClientProtocol.GenerateXmlMappings(Type[], ArrayList)\n- uid: System.Web.Services.Protocols.HttpWebClientProtocol.Proxy\n  parent: System.Web.Services.Protocols.HttpWebClientProtocol\n  isExternal: false\n  name: Proxy\n  nameWithType: HttpWebClientProtocol.Proxy\n  fullName: HttpWebClientProtocol.Proxy\n- uid: System.Web.Services.Protocols.HttpWebClientProtocol.UnsafeAuthenticatedConnectionSharing\n  parent: System.Web.Services.Protocols.HttpWebClientProtocol\n  isExternal: false\n  name: UnsafeAuthenticatedConnectionSharing\n  nameWithType: HttpWebClientProtocol.UnsafeAuthenticatedConnectionSharing\n  fullName: HttpWebClientProtocol.UnsafeAuthenticatedConnectionSharing\n- uid: System.Web.Services.Protocols.HttpWebClientProtocol.UserAgent\n  parent: System.Web.Services.Protocols.HttpWebClientProtocol\n  isExternal: false\n  name: UserAgent\n  nameWithType: HttpWebClientProtocol.UserAgent\n  fullName: HttpWebClientProtocol.UserAgent\n- uid: System.Web.Services.Protocols.HttpSimpleClientProtocol.BeginInvoke(System.String,System.String,System.Object[],System.AsyncCallback,System.Object)\n  parent: System.Web.Services.Protocols.HttpSimpleClientProtocol\n  isExternal: false\n  name: BeginInvoke(String, String, Object[], AsyncCallback, Object)\n  nameWithType: HttpSimpleClientProtocol.BeginInvoke(String, String, Object[], AsyncCallback, Object)\n  fullName: HttpSimpleClientProtocol.BeginInvoke(String, String, Object[], AsyncCallback, Object)\n- uid: System.Web.Services.Protocols.HttpSimpleClientProtocol.EndInvoke(System.IAsyncResult)\n  parent: System.Web.Services.Protocols.HttpSimpleClientProtocol\n  isExternal: false\n  name: EndInvoke(IAsyncResult)\n  nameWithType: HttpSimpleClientProtocol.EndInvoke(IAsyncResult)\n  fullName: HttpSimpleClientProtocol.EndInvoke(IAsyncResult)\n- uid: System.Web.Services.Protocols.HttpSimpleClientProtocol.Invoke(System.String,System.String,System.Object[])\n  parent: System.Web.Services.Protocols.HttpSimpleClientProtocol\n  isExternal: false\n  name: Invoke(String, String, Object[])\n  nameWithType: HttpSimpleClientProtocol.Invoke(String, String, Object[])\n  fullName: HttpSimpleClientProtocol.Invoke(String, String, Object[])\n- uid: System.Web.Services.Protocols.HttpSimpleClientProtocol.InvokeAsync(System.String,System.String,System.Object[],System.Threading.SendOrPostCallback)\n  parent: System.Web.Services.Protocols.HttpSimpleClientProtocol\n  isExternal: false\n  name: InvokeAsync(String, String, Object[], SendOrPostCallback)\n  nameWithType: HttpSimpleClientProtocol.InvokeAsync(String, String, Object[], SendOrPostCallback)\n  fullName: HttpSimpleClientProtocol.InvokeAsync(String, String, Object[], SendOrPostCallback)\n- uid: System.Web.Services.Protocols.HttpSimpleClientProtocol.InvokeAsync(System.String,System.String,System.Object[],System.Threading.SendOrPostCallback,System.Object)\n  parent: System.Web.Services.Protocols.HttpSimpleClientProtocol\n  isExternal: false\n  name: InvokeAsync(String, String, Object[], SendOrPostCallback, Object)\n  nameWithType: HttpSimpleClientProtocol.InvokeAsync(String, String, Object[], SendOrPostCallback, Object)\n  fullName: HttpSimpleClientProtocol.InvokeAsync(String, String, Object[], SendOrPostCallback, Object)\n"}