{"nodes":[{"content":"This class converts a parameter in a query string to an object of the appropriate type. It can also convert a parameter from an object to its query string representation.","nodes":[{"pos":[0,170],"content":"This class converts a parameter in a query string to an object of the appropriate type. It can also convert a parameter from an object to its query string representation.","nodes":[{"content":"This class converts a parameter in a query string to an object of the appropriate type. It can also convert a parameter from an object to its query string representation.","pos":[0,170],"nodes":[{"content":"This class converts a parameter in a query string to an object of the appropriate type.","pos":[0,87]},{"content":"It can also convert a parameter from an object to its query string representation.","pos":[88,170]}]}]}],"pos":[812,983],"yaml":true},{"content":"Parameters can be specified in a query string within a URL. This class takes those parameters specified in a string and converts them into objects. For example, the following contract is defined.  \n  \n```  \n[ServiceContract]  \ninterface Calculator  \n{  \n   [WebGet(UriTemplate=\"Add?n1={n1}&n2={n2}\")]  \n   [OperationContract]  \n   long Add(long n1, long n2);  \n}  \n```  \n  \n A [!INCLUDE[indigo1](~/includes/indigo1-md.md)] service implements this interface and exposes it on an endpoint with the <xref:System.ServiceModel.Description.WebHttpBehavior> at http://localhost:8000/MyCalcService. The `Add` service operation can be called by sending an HTTP GET to http://localhost:8000/MyCalcService/Add?n1=10&n2=5. The <xref:System.ServiceModel.Dispatcher.QueryStringConverter> receives this URL and converts the two parameters (n1 and n2) specified in the URL into two `long` objects with the appropriate values.  \n  \n You can derive a class from <xref:System.ServiceModel.Dispatcher.QueryStringConverter> to control how query string parameters are mapped into a service operation's parameters.  \n  \n The <xref:System.ServiceModel.Dispatcher.QueryStringConverter> supports the following types by default:  \n  \n-   <xref:System.Byte>  \n  \n-   <xref:System.SByte>  \n  \n-   <xref:System.Int16>  \n  \n-   <xref:System.Int32>  \n  \n-   <xref:System.Int64>  \n  \n-   <xref:System.UInt16>  \n  \n-   <xref:System.UInt32>  \n  \n-   <xref:System.UInt64>  \n  \n-   <xref:System.Single>  \n  \n-   <xref:System.Double>  \n  \n-   <xref:System.Char>  \n  \n-   <xref:System.Decimal>  \n  \n-   <xref:System.Boolean>  \n  \n-   <xref:System.String>  \n  \n-   <xref:System.DateTime>  \n  \n-   <xref:System.TimeSpan>  \n  \n-   <xref:System.Guid>  \n  \n-   <xref:System.Byte> array  \n  \n-   <xref:System.Uri>  \n  \n-   <xref:System.Object>  \n  \n-   <xref:System.DateTimeOffset>  \n  \n-   Enums  \n  \n-   Types that have a `TypeConverterAttribute` that can convert the type to and from a string representation.","nodes":[{"pos":[0,195],"content":"Parameters can be specified in a query string within a URL. This class takes those parameters specified in a string and converts them into objects. For example, the following contract is defined.","nodes":[{"content":"Parameters can be specified in a query string within a URL. This class takes those parameters specified in a string and converts them into objects. For example, the following contract is defined.","pos":[0,195],"nodes":[{"content":"Parameters can be specified in a query string within a URL.","pos":[0,59]},{"content":"This class takes those parameters specified in a string and converts them into objects.","pos":[60,147]},{"content":"For example, the following contract is defined.","pos":[148,195]}]}]},{"pos":[375,909],"content":"A [!INCLUDE[indigo1](~/includes/indigo1-md.md)] service implements this interface and exposes it on an endpoint with the <xref:System.ServiceModel.Description.WebHttpBehavior> at http://localhost:8000/MyCalcService. The `Add` service operation can be called by sending an HTTP GET to http://localhost:8000/MyCalcService/Add?n1=10&n2=5. The <xref:System.ServiceModel.Dispatcher.QueryStringConverter> receives this URL and converts the two parameters (n1 and n2) specified in the URL into two `long` objects with the appropriate values.","nodes":[{"content":"A <ph id=\"ph1\">[!INCLUDE[indigo1](~/includes/indigo1-md.md)]</ph> service implements this interface and exposes it on an endpoint with the <ph id=\"ph2\">&lt;xref:System.ServiceModel.Description.WebHttpBehavior&gt;</ph> at http://localhost:8000/MyCalcService.","pos":[0,215],"source":"A [!INCLUDE[indigo1](~/includes/indigo1-md.md)] service implements this interface and exposes it on an endpoint with the <xref:System.ServiceModel.Description.WebHttpBehavior> at http://localhost:8000/MyCalcService."},{"content":"The <ph id=\"ph1\">`Add`</ph> service operation can be called by sending an HTTP GET to http://localhost:8000/MyCalcService/Add?n1=10&amp;n2=5.","pos":[216,335],"source":" The `Add` service operation can be called by sending an HTTP GET to http://localhost:8000/MyCalcService/Add?n1=10&n2=5."},{"content":"The <ph id=\"ph1\">&lt;xref:System.ServiceModel.Dispatcher.QueryStringConverter&gt;</ph> receives this URL and converts the two parameters (n1 and n2) specified in the URL into two <ph id=\"ph2\">`long`</ph> objects with the appropriate values.","pos":[336,534],"source":" The <xref:System.ServiceModel.Dispatcher.QueryStringConverter> receives this URL and converts the two parameters (n1 and n2) specified in the URL into two `long` objects with the appropriate values."}]},{"pos":[916,1091],"content":"You can derive a class from <xref:System.ServiceModel.Dispatcher.QueryStringConverter> to control how query string parameters are mapped into a service operation's parameters.","nodes":[{"content":"You can derive a class from <ph id=\"ph1\">&lt;xref:System.ServiceModel.Dispatcher.QueryStringConverter&gt;</ph> to control how query string parameters are mapped into a service operation's parameters.","pos":[0,175],"source":"You can derive a class from <xref:System.ServiceModel.Dispatcher.QueryStringConverter> to control how query string parameters are mapped into a service operation's parameters."}]},{"pos":[1098,1201],"content":"The <xref:System.ServiceModel.Dispatcher.QueryStringConverter> supports the following types by default:","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.ServiceModel.Dispatcher.QueryStringConverter&gt;</ph> supports the following types by default:","pos":[0,103],"source":"The <xref:System.ServiceModel.Dispatcher.QueryStringConverter> supports the following types by default:"}]},{"pos":[1211,1229],"content":"<xref:System.Byte>","nodes":[]},{"pos":[1239,1258],"content":"<xref:System.SByte>","nodes":[]},{"pos":[1268,1287],"content":"<xref:System.Int16>","nodes":[]},{"pos":[1297,1316],"content":"<xref:System.Int32>","nodes":[]},{"pos":[1326,1345],"content":"<xref:System.Int64>","nodes":[]},{"pos":[1355,1375],"content":"<xref:System.UInt16>","nodes":[]},{"pos":[1385,1405],"content":"<xref:System.UInt32>","nodes":[]},{"pos":[1415,1435],"content":"<xref:System.UInt64>","nodes":[]},{"pos":[1445,1465],"content":"<xref:System.Single>","nodes":[]},{"pos":[1475,1495],"content":"<xref:System.Double>","nodes":[]},{"pos":[1505,1523],"content":"<xref:System.Char>","nodes":[]},{"pos":[1533,1554],"content":"<xref:System.Decimal>","nodes":[]},{"pos":[1564,1585],"content":"<xref:System.Boolean>","nodes":[]},{"pos":[1595,1615],"content":"<xref:System.String>","nodes":[]},{"pos":[1625,1647],"content":"<xref:System.DateTime>","nodes":[]},{"pos":[1657,1679],"content":"<xref:System.TimeSpan>","nodes":[]},{"pos":[1689,1707],"content":"<xref:System.Guid>","nodes":[]},{"pos":[1717,1741],"content":"<xref:System.Byte> array","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Byte&gt;</ph> array","pos":[0,24],"source":"<xref:System.Byte> array"}]},{"pos":[1751,1768],"content":"<xref:System.Uri>","nodes":[]},{"pos":[1778,1798],"content":"<xref:System.Object>","nodes":[]},{"pos":[1808,1836],"content":"<xref:System.DateTimeOffset>","nodes":[]},{"pos":[1846,1851],"content":"Enums","nodes":[{"content":"Enums","pos":[0,5]}]},{"pos":[1861,1966],"content":"Types that have a <ph id=\"ph1\">`TypeConverterAttribute`</ph> that can convert the type to and from a string representation.","source":"Types that have a `TypeConverterAttribute` that can convert the type to and from a string representation."}],"pos":[994,3027],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.ServiceModel.Dispatcher.QueryStringConverter\"></xref> class.","nodes":[{"pos":[0,113],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Dispatcher.QueryStringConverter\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.ServiceModel.Dispatcher.QueryStringConverter\"></xref> class."}],"pos":[5096,5210],"yaml":true},{"content":"Determines whether the specified type can be converted to and from a string representation.","nodes":[{"pos":[0,91],"content":"Determines whether the specified type can be converted to and from a string representation.","nodes":[{"content":"Determines whether the specified type can be converted to and from a string representation.","pos":[0,91]}]}],"pos":[6974,7066],"yaml":true},{"content":"The <xref href=\"System.Type\"></xref> to convert.","nodes":[{"pos":[0,48],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph> to convert.","source":"The <xref href=\"System.Type\"></xref> to convert."}],"pos":[7644,7693],"yaml":true},{"content":"A value that specifies whether the type can be converted.","nodes":[{"pos":[0,57],"content":"A value that specifies whether the type can be converted.","nodes":[{"content":"A value that specifies whether the type can be converted.","pos":[0,57]}]}],"pos":[7751,7809],"yaml":true},{"content":"Converts a query string parameter to the specified type.","nodes":[{"pos":[0,56],"content":"Converts a query string parameter to the specified type.","nodes":[{"content":"Converts a query string parameter to the specified type.","pos":[0,56]}]}],"pos":[9226,9283],"yaml":true},{"content":"If the `parameterType` is a value type and the parameter is `null`, then the default value of the `parameterType` is returned.","nodes":[{"pos":[0,126],"content":"If the <ph id=\"ph1\">`parameterType`</ph> is a value type and the parameter is <ph id=\"ph2\">`null`</ph>, then the default value of the <ph id=\"ph3\">`parameterType`</ph> is returned.","source":"If the `parameterType` is a value type and the parameter is `null`, then the default value of the `parameterType` is returned."}],"pos":[9294,9421],"yaml":true,"extradata":"MT"},{"content":"The string form of the parameter and value.","nodes":[{"pos":[0,43],"content":"The string form of the parameter and value.","nodes":[{"content":"The string form of the parameter and value.","pos":[0,43]}]}],"pos":[9946,9990],"yaml":true},{"content":"The <xref href=\"System.Type\"></xref> to convert the parameter to.","nodes":[{"pos":[0,65],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph> to convert the parameter to.","source":"The <xref href=\"System.Type\"></xref> to convert the parameter to."}],"pos":[10057,10123],"yaml":true},{"content":"The converted parameter.","nodes":[{"pos":[0,24],"content":"The converted parameter.","nodes":[{"content":"The converted parameter.","pos":[0,24]}]}],"pos":[10180,10205],"yaml":true},{"content":"The provided string does not have the correct format.","nodes":[{"pos":[0,53],"content":"The provided string does not have the correct format.","nodes":[{"content":"The provided string does not have the correct format.","pos":[0,53]}]}],"pos":[10395,10449],"yaml":true},{"content":"Converts a parameter to a query string representation.","nodes":[{"pos":[0,54],"content":"Converts a parameter to a query string representation.","nodes":[{"content":"Converts a parameter to a query string representation.","pos":[0,54]}]}],"pos":[11773,11828],"yaml":true},{"content":"The parameter to convert.","nodes":[{"pos":[0,25],"content":"The parameter to convert.","nodes":[{"content":"The parameter to convert.","pos":[0,25]}]}],"pos":[12392,12418],"yaml":true},{"content":"The <xref href=\"System.Type\"></xref> of the parameter to convert.","nodes":[{"pos":[0,65],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph> of the parameter to convert.","source":"The <xref href=\"System.Type\"></xref> of the parameter to convert."}],"pos":[12485,12551],"yaml":true},{"content":"The parameter name and value.","nodes":[{"pos":[0,29],"content":"The parameter name and value.","nodes":[{"content":"The parameter name and value.","pos":[0,29]}]}],"pos":[12608,12638],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.ServiceModel.Dispatcher.QueryStringConverter\n  commentId: T:System.ServiceModel.Dispatcher.QueryStringConverter\n  id: QueryStringConverter\n  children:\n  - System.ServiceModel.Dispatcher.QueryStringConverter.#ctor\n  - System.ServiceModel.Dispatcher.QueryStringConverter.CanConvert(System.Type)\n  - System.ServiceModel.Dispatcher.QueryStringConverter.ConvertStringToValue(System.String,System.Type)\n  - System.ServiceModel.Dispatcher.QueryStringConverter.ConvertValueToString(System.Object,System.Type)\n  langs:\n  - csharp\n  name: QueryStringConverter\n  nameWithType: QueryStringConverter\n  fullName: System.ServiceModel.Dispatcher.QueryStringConverter\n  type: Class\n  assemblies:\n  - System.ServiceModel.Web\n  namespace: System.ServiceModel.Dispatcher\n  summary: This class converts a parameter in a query string to an object of the appropriate type. It can also convert a parameter from an object to its query string representation.\n  remarks: \"Parameters can be specified in a query string within a URL. This class takes those parameters specified in a string and converts them into objects. For example, the following contract is defined.  \\n  \\n```  \\n[ServiceContract]  \\ninterface Calculator  \\n{  \\n   [WebGet(UriTemplate=\\\"Add?n1={n1}&n2={n2}\\\")]  \\n   [OperationContract]  \\n   long Add(long n1, long n2);  \\n}  \\n```  \\n  \\n A [!INCLUDE[indigo1](~/includes/indigo1-md.md)] service implements this interface and exposes it on an endpoint with the <xref:System.ServiceModel.Description.WebHttpBehavior> at http://localhost:8000/MyCalcService. The `Add` service operation can be called by sending an HTTP GET to http://localhost:8000/MyCalcService/Add?n1=10&n2=5. The <xref:System.ServiceModel.Dispatcher.QueryStringConverter> receives this URL and converts the two parameters (n1 and n2) specified in the URL into two `long` objects with the appropriate values.  \\n  \\n You can derive a class from <xref:System.ServiceModel.Dispatcher.QueryStringConverter> to control how query string parameters are mapped into a service operation's parameters.  \\n  \\n The <xref:System.ServiceModel.Dispatcher.QueryStringConverter> supports the following types by default:  \\n  \\n-   <xref:System.Byte>  \\n  \\n-   <xref:System.SByte>  \\n  \\n-   <xref:System.Int16>  \\n  \\n-   <xref:System.Int32>  \\n  \\n-   <xref:System.Int64>  \\n  \\n-   <xref:System.UInt16>  \\n  \\n-   <xref:System.UInt32>  \\n  \\n-   <xref:System.UInt64>  \\n  \\n-   <xref:System.Single>  \\n  \\n-   <xref:System.Double>  \\n  \\n-   <xref:System.Char>  \\n  \\n-   <xref:System.Decimal>  \\n  \\n-   <xref:System.Boolean>  \\n  \\n-   <xref:System.String>  \\n  \\n-   <xref:System.DateTime>  \\n  \\n-   <xref:System.TimeSpan>  \\n  \\n-   <xref:System.Guid>  \\n  \\n-   <xref:System.Byte> array  \\n  \\n-   <xref:System.Uri>  \\n  \\n-   <xref:System.Object>  \\n  \\n-   <xref:System.DateTimeOffset>  \\n  \\n-   Enums  \\n  \\n-   Types that have a `TypeConverterAttribute` that can convert the type to and from a string representation.\"\n  example:\n  - \"The following code shows how to use the <xref:System.ServiceModel.Dispatcher.QueryStringConverter> class to convert between a string and a 32-bit integer.  \\n  \\n [!code-csharp[QueryStringConverter#0](~/samples/snippets/csharp/VS_Snippets_CFX/querystringconverter/cs/program.cs#0)]\\n [!code-vb[QueryStringConverter#0](~/samples/snippets/visualbasic/VS_Snippets_CFX/querystringconverter/vb/program.vb#0)]\"\n  syntax:\n    content: public class QueryStringConverter\n  inheritance:\n  - System.Object\n  derivedClasses:\n  - System.ServiceModel.Dispatcher.JsonQueryStringConverter\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/QueryStringConverter.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Dispatcher.QueryStringConverter.#ctor\n  commentId: M:System.ServiceModel.Dispatcher.QueryStringConverter.#ctor\n  id: '#ctor'\n  parent: System.ServiceModel.Dispatcher.QueryStringConverter\n  langs:\n  - csharp\n  name: QueryStringConverter()\n  nameWithType: QueryStringConverter.QueryStringConverter()\n  fullName: QueryStringConverter.QueryStringConverter()\n  type: Constructor\n  assemblies:\n  - System.ServiceModel.Web\n  namespace: System.ServiceModel.Dispatcher\n  summary: Initializes a new instance of the <xref href=\"System.ServiceModel.Dispatcher.QueryStringConverter\"></xref> class.\n  remarks: ''\n  example:\n  - \"The following code shows how to create an instance of the <xref:System.ServiceModel.Dispatcher.QueryStringConverter> class.  \\n  \\n [!code-csharp[QueryStringConverter#1](~/samples/snippets/csharp/VS_Snippets_CFX/querystringconverter/cs/program.cs#1)]\\n [!code-vb[QueryStringConverter#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/querystringconverter/vb/program.vb#1)]\"\n  syntax:\n    content: public QueryStringConverter ();\n    parameters: []\n  overload: System.ServiceModel.Dispatcher.QueryStringConverter.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/QueryStringConverter.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Dispatcher.QueryStringConverter.CanConvert(System.Type)\n  commentId: M:System.ServiceModel.Dispatcher.QueryStringConverter.CanConvert(System.Type)\n  id: CanConvert(System.Type)\n  parent: System.ServiceModel.Dispatcher.QueryStringConverter\n  langs:\n  - csharp\n  name: CanConvert(Type)\n  nameWithType: QueryStringConverter.CanConvert(Type)\n  fullName: QueryStringConverter.CanConvert(Type)\n  type: Method\n  assemblies:\n  - System.ServiceModel.Web\n  namespace: System.ServiceModel.Dispatcher\n  summary: Determines whether the specified type can be converted to and from a string representation.\n  remarks: ''\n  example:\n  - \"The following code shows how to determine whether the <xref:System.ServiceModel.Dispatcher.QueryStringConverter> can convert to and from the specified type.  \\n  \\n [!code-csharp[QueryStringConverter#2](~/samples/snippets/csharp/VS_Snippets_CFX/querystringconverter/cs/program.cs#2)]\\n [!code-vb[QueryStringConverter#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/querystringconverter/vb/program.vb#2)]\"\n  syntax:\n    content: public virtual bool CanConvert (Type type);\n    parameters:\n    - id: type\n      type: System.Type\n      description: The <xref href=\"System.Type\"></xref> to convert.\n    return:\n      type: System.Boolean\n      description: A value that specifies whether the type can be converted.\n  overload: System.ServiceModel.Dispatcher.QueryStringConverter.CanConvert*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/QueryStringConverter.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Dispatcher.QueryStringConverter.ConvertStringToValue(System.String,System.Type)\n  commentId: M:System.ServiceModel.Dispatcher.QueryStringConverter.ConvertStringToValue(System.String,System.Type)\n  id: ConvertStringToValue(System.String,System.Type)\n  parent: System.ServiceModel.Dispatcher.QueryStringConverter\n  langs:\n  - csharp\n  name: ConvertStringToValue(String, Type)\n  nameWithType: QueryStringConverter.ConvertStringToValue(String, Type)\n  fullName: QueryStringConverter.ConvertStringToValue(String, Type)\n  type: Method\n  assemblies:\n  - System.ServiceModel.Web\n  namespace: System.ServiceModel.Dispatcher\n  summary: Converts a query string parameter to the specified type.\n  remarks: If the `parameterType` is a value type and the parameter is `null`, then the default value of the `parameterType` is returned.\n  example:\n  - \"The following code shows how to convert a string to the specified type.  \\n  \\n [!code-csharp[QueryStringConverter#2](~/samples/snippets/csharp/VS_Snippets_CFX/querystringconverter/cs/program.cs#2)]\\n [!code-vb[QueryStringConverter#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/querystringconverter/vb/program.vb#2)]\"\n  syntax:\n    content: public virtual object ConvertStringToValue (string parameter, Type parameterType);\n    parameters:\n    - id: parameter\n      type: System.String\n      description: The string form of the parameter and value.\n    - id: parameterType\n      type: System.Type\n      description: The <xref href=\"System.Type\"></xref> to convert the parameter to.\n    return:\n      type: System.Object\n      description: The converted parameter.\n  overload: System.ServiceModel.Dispatcher.QueryStringConverter.ConvertStringToValue*\n  exceptions:\n  - type: System.FormatException\n    commentId: T:System.FormatException\n    description: The provided string does not have the correct format.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/QueryStringConverter.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Dispatcher.QueryStringConverter.ConvertValueToString(System.Object,System.Type)\n  commentId: M:System.ServiceModel.Dispatcher.QueryStringConverter.ConvertValueToString(System.Object,System.Type)\n  id: ConvertValueToString(System.Object,System.Type)\n  parent: System.ServiceModel.Dispatcher.QueryStringConverter\n  langs:\n  - csharp\n  name: ConvertValueToString(Object, Type)\n  nameWithType: QueryStringConverter.ConvertValueToString(Object, Type)\n  fullName: QueryStringConverter.ConvertValueToString(Object, Type)\n  type: Method\n  assemblies:\n  - System.ServiceModel.Web\n  namespace: System.ServiceModel.Dispatcher\n  summary: Converts a parameter to a query string representation.\n  remarks: ''\n  example:\n  - \"The following code shows how to convert a typed value into a string representation of the value.  \\n  \\n [!code-csharp[QueryStringConverter#3](~/samples/snippets/csharp/VS_Snippets_CFX/querystringconverter/cs/program.cs#3)]\\n [!code-vb[QueryStringConverter#3](~/samples/snippets/visualbasic/VS_Snippets_CFX/querystringconverter/vb/program.vb#3)]\"\n  syntax:\n    content: public virtual string ConvertValueToString (object parameter, Type parameterType);\n    parameters:\n    - id: parameter\n      type: System.Object\n      description: The parameter to convert.\n    - id: parameterType\n      type: System.Type\n      description: The <xref href=\"System.Type\"></xref> of the parameter to convert.\n    return:\n      type: System.String\n      description: The parameter name and value.\n  overload: System.ServiceModel.Dispatcher.QueryStringConverter.ConvertValueToString*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/QueryStringConverter.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\nreferences:\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.FormatException\n  parent: System\n  isExternal: false\n  name: FormatException\n  nameWithType: FormatException\n  fullName: System.FormatException\n- uid: System.ServiceModel.Dispatcher.QueryStringConverter.#ctor\n  parent: System.ServiceModel.Dispatcher.QueryStringConverter\n  isExternal: false\n  name: QueryStringConverter()\n  nameWithType: QueryStringConverter.QueryStringConverter()\n  fullName: QueryStringConverter.QueryStringConverter()\n- uid: System.ServiceModel.Dispatcher.QueryStringConverter.CanConvert(System.Type)\n  parent: System.ServiceModel.Dispatcher.QueryStringConverter\n  isExternal: false\n  name: CanConvert(Type)\n  nameWithType: QueryStringConverter.CanConvert(Type)\n  fullName: QueryStringConverter.CanConvert(Type)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.ServiceModel.Dispatcher.QueryStringConverter.ConvertStringToValue(System.String,System.Type)\n  parent: System.ServiceModel.Dispatcher.QueryStringConverter\n  isExternal: false\n  name: ConvertStringToValue(String, Type)\n  nameWithType: QueryStringConverter.ConvertStringToValue(String, Type)\n  fullName: QueryStringConverter.ConvertStringToValue(String, Type)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.ServiceModel.Dispatcher.QueryStringConverter.ConvertValueToString(System.Object,System.Type)\n  parent: System.ServiceModel.Dispatcher.QueryStringConverter\n  isExternal: false\n  name: ConvertValueToString(Object, Type)\n  nameWithType: QueryStringConverter.ConvertValueToString(Object, Type)\n  fullName: QueryStringConverter.ConvertValueToString(Object, Type)\n- uid: System.ServiceModel.Dispatcher.QueryStringConverter.#ctor*\n  parent: System.ServiceModel.Dispatcher.QueryStringConverter\n  isExternal: false\n  name: QueryStringConverter\n  nameWithType: QueryStringConverter.QueryStringConverter\n  fullName: QueryStringConverter.QueryStringConverter\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/QueryStringConverter.xml\n- uid: System.ServiceModel.Dispatcher.QueryStringConverter.CanConvert*\n  parent: System.ServiceModel.Dispatcher.QueryStringConverter\n  isExternal: false\n  name: CanConvert\n  nameWithType: QueryStringConverter.CanConvert\n  fullName: QueryStringConverter.CanConvert\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/QueryStringConverter.xml\n- uid: System.ServiceModel.Dispatcher.QueryStringConverter.ConvertStringToValue*\n  parent: System.ServiceModel.Dispatcher.QueryStringConverter\n  isExternal: false\n  name: ConvertStringToValue\n  nameWithType: QueryStringConverter.ConvertStringToValue\n  fullName: QueryStringConverter.ConvertStringToValue\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/QueryStringConverter.xml\n- uid: System.ServiceModel.Dispatcher.QueryStringConverter.ConvertValueToString*\n  parent: System.ServiceModel.Dispatcher.QueryStringConverter\n  isExternal: false\n  name: ConvertValueToString\n  nameWithType: QueryStringConverter.ConvertValueToString\n  fullName: QueryStringConverter.ConvertValueToString\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Dispatcher/QueryStringConverter.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n"}