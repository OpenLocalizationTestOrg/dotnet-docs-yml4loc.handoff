{"nodes":[{"content":"Provides a stream used for client-server communication that uses the Secure Socket Layer (SSL) security protocol to authenticate the server and optionally the client.","nodes":[{"pos":[0,166],"content":"Provides a stream used for client-server communication that uses the Secure Socket Layer (SSL) security protocol to authenticate the server and optionally the client.","nodes":[{"content":"Provides a stream used for client-server communication that uses the Secure Socket Layer (SSL) security protocol to authenticate the server and optionally the client.","pos":[0,166]}]}],"pos":[6219,6386],"yaml":true},{"content":"SSL protocols help to provide confidentiality and integrity checking for messages transmitted using an <xref:System.Net.Security.SslStream>. An SSL connection, such as that provided by <xref:System.Net.Security.SslStream>, should be used when communicating sensitive information between a client and a server. Using an <xref:System.Net.Security.SslStream> helps to prevent anyone from reading and tampering with information while it is in transit on the network.  \n  \n An <xref:System.Net.Security.SslStream> instance transmits data using a stream that you supply when creating the <xref:System.Net.Security.SslStream>. When you supply this underlying stream, you have the option to specify whether closing the <xref:System.Net.Security.SslStream> also closes the underlying stream. Typically, the <xref:System.Net.Security.SslStream> class is used with the <xref:System.Net.Sockets.TcpClient> and <xref:System.Net.Sockets.TcpListener> classes. The <xref:System.Net.Sockets.TcpClient.GetStream%2A> method provides a <xref:System.Net.Sockets.NetworkStream> suitable for use with the <xref:System.Net.Security.SslStream> class.  \n  \n After creating an <xref:System.Net.Security.SslStream>, the server and optionally, the client must be authenticated. The server must provide an X509 certificate that establishes proof of its identity and can request that the client also do so. Authentication must be performed before transmitting information using an <xref:System.Net.Security.SslStream>. Clients initiate authentication using the synchronous <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A> methods, which block until the authentication completes, or the asynchronous <xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A> methods, which do not block waiting for the authentication to complete. Servers initiate authentication using the synchronous <xref:System.Net.Security.SslStream.AuthenticateAsServer%2A> or asynchronous <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A> methods. Both client and server must initiate the authentication.  \n  \n The authentication is handled by the Security Support Provider (SSPI) channel provider. The client is given an opportunity to control validation of the server's certificate by specifying a <xref:System.Net.Security.RemoteCertificateValidationCallback> delegate when creating an <xref:System.Net.Security.SslStream>. The server can also control validation by supplying a <xref:System.Net.Security.RemoteCertificateValidationCallback> delegate. The method referenced by the delegate includes the remote party's certificate and any errors SSPI encountered while validating the certificate. Note that if the server specifies a delegate, the delegate's method is invoked regardless of whether the server requested client authentication. If the server did not request client authentication, the server's delegate method receives a null certificate and an empty array of certificate errors.  \n  \n If the server requires client authentication, the client must specify one or more certificates for authentication. If the client has more than one certificate, the client can provide a <xref:System.Net.Security.LocalCertificateSelectionCallback> delegate to select the correct certificate for the server. The client's certificates must be located in the current user's \"My\" certificate store. Client authentication via certificates is not supported for the <xref:System.Security.Authentication.SslProtocols.Ssl2> (SSL version 2) protocol.  \n  \n If the authentication fails, you receive a <xref:System.Security.Authentication.AuthenticationException>, and the <xref:System.Net.Security.SslStream> is no longer useable. You should close this object and remove all references to it so that it can be collected by the garbage collector.  \n  \n When the authentication process, also known as the SSL handshake, succeeds, the identity of the server (and optionally, the client) is established and the <xref:System.Net.Security.SslStream> can be used by the client and server to exchange messages. Before sending or receiving information, the client and server should check the security services and levels provided by the <xref:System.Net.Security.SslStream> to determine whether the protocol, algorithms, and strengths selected meet their requirements for integrity and confidentiality. If the current settings are not sufficient, the stream should be closed. You can check the security services provided by the <xref:System.Net.Security.SslStream> using the <xref:System.Net.Security.SslStream.IsEncrypted%2A> and <xref:System.Net.Security.SslStream.IsSigned%2A> properties. The following table shows the elements that report the cryptographic settings used for authentication, encryption and data signing.  \n  \n|Element|Members|  \n|-------------|-------------|  \n|The security protocol used to authenticate the server and, optionally, the client.|The <xref:System.Net.Security.SslStream.SslProtocol%2A> property and the associated <xref:System.Security.Authentication.SslProtocols> enumeration.|  \n|The key exchange algorithm.|The <xref:System.Net.Security.SslStream.KeyExchangeAlgorithm%2A> property and the associated <xref:System.Security.Authentication.ExchangeAlgorithmType> enumeration.|  \n|The message integrity algorithm.|The <xref:System.Net.Security.SslStream.HashAlgorithm%2A> property and the associated <xref:System.Security.Authentication.HashAlgorithmType> enumeration.|  \n|The message confidentiality algorithm.|The <xref:System.Net.Security.SslStream.CipherAlgorithm%2A> property and the associated <xref:System.Security.Authentication.CipherAlgorithmType> enumeration.|  \n|The strengths of the selected algorithms.|The <xref:System.Net.Security.SslStream.KeyExchangeStrength%2A>, <xref:System.Net.Security.SslStream.HashStrength%2A>, and <xref:System.Net.Security.SslStream.CipherStrength%2A> properties.|  \n  \n After a successful authentication, you can send data using the synchronous <xref:System.Net.Security.SslStream.Write%2A> or asynchronous <xref:System.Net.Security.SslStream.BeginWrite%2A> methods. You can receive data using the synchronous <xref:System.Net.Security.SslStream.Read%2A> or asynchronous <xref:System.Net.Security.SslStream.BeginRead%2A> methods.  \n  \n If you specified to the <xref:System.Net.Security.SslStream.%23ctor%2A> that the underlying stream should be left open, you are responsible for closing that stream when you are done using it.  \n  \n> [!NOTE]\n>  If the application that creates the <xref:System.Net.Security.SslStream> object runs with the credentials of a Normal user, the application will not be able to access certificates installed in the local machine store unless permission has been explicitly given to the user to do so.  \n  \n <xref:System.Net.Security.SslStream> assumes that a timeout along with any other <xref:System.IO.IOException> when one is thrown from the inner stream will be treated as fatal by its caller. Reusing a <xref:System.Net.Security.SslStream> instance after a timeout will return garbage. An application should <xref:System.IO.Stream.Close%2A> the <xref:System.Net.Security.SslStream> and throw an exception in these cases.  \n  \n The .NET Framework 4.6 includes a new security feature that blocks insecure cipher and hashing algorithms for connections. Applications using TLS/SSL through APIs such as HttpClient, HttpWebRequest, FTPClient, SmtpClient, SslStream, etc. and targeting .NET Framework 4.6 get the more-secure behavior by default.  \n  \n Developers may want to opt out of this behavior in order to maintain interoperability with their existing SSL3 services OR TLS w/ RC4 services. [This article](https://support.microsoft.com/kb/3069494) explains how to modify your code so that the new behavior is disabled.  \n  \n The .NET Framework 4.7 adds new overloads for the methods that authenticate SslStreams that do not specify a TLS version, but instead use the TLS version defined as the system default in [SCHANNEL](https://msdn.microsoft.com/library/windows/desktop/aa380123.aspx). Use these methods in your app as a way to be able to later modify the defaults as TLS version best practice changes over time, without the need to rebuild and redeploy your app.","nodes":[{"pos":[0,462],"content":"SSL protocols help to provide confidentiality and integrity checking for messages transmitted using an <xref:System.Net.Security.SslStream>. An SSL connection, such as that provided by <xref:System.Net.Security.SslStream>, should be used when communicating sensitive information between a client and a server. Using an <xref:System.Net.Security.SslStream> helps to prevent anyone from reading and tampering with information while it is in transit on the network.","nodes":[{"content":"SSL protocols help to provide confidentiality and integrity checking for messages transmitted using an <xref:System.Net.Security.SslStream>. An SSL connection, such as that provided by <xref:System.Net.Security.SslStream>, should be used when communicating sensitive information between a client and a server. Using an <xref:System.Net.Security.SslStream> helps to prevent anyone from reading and tampering with information while it is in transit on the network.","pos":[0,462],"nodes":[{"content":"SSL protocols help to provide confidentiality and integrity checking for messages transmitted using an <ph id=\"ph1\">&lt;xref:System.Net.Security.SslStream&gt;</ph>.","pos":[0,140],"source":"SSL protocols help to provide confidentiality and integrity checking for messages transmitted using an <xref:System.Net.Security.SslStream>."},{"content":"An SSL connection, such as that provided by <ph id=\"ph1\">&lt;xref:System.Net.Security.SslStream&gt;</ph>, should be used when communicating sensitive information between a client and a server.","pos":[141,309],"source":" An SSL connection, such as that provided by <xref:System.Net.Security.SslStream>, should be used when communicating sensitive information between a client and a server."},{"content":"Using an <ph id=\"ph1\">&lt;xref:System.Net.Security.SslStream&gt;</ph> helps to prevent anyone from reading and tampering with information while it is in transit on the network.","pos":[310,462],"source":" Using an <xref:System.Net.Security.SslStream> helps to prevent anyone from reading and tampering with information while it is in transit on the network."}]}]},{"pos":[469,1125],"content":"An <xref:System.Net.Security.SslStream> instance transmits data using a stream that you supply when creating the <xref:System.Net.Security.SslStream>. When you supply this underlying stream, you have the option to specify whether closing the <xref:System.Net.Security.SslStream> also closes the underlying stream. Typically, the <xref:System.Net.Security.SslStream> class is used with the <xref:System.Net.Sockets.TcpClient> and <xref:System.Net.Sockets.TcpListener> classes. The <xref:System.Net.Sockets.TcpClient.GetStream%2A> method provides a <xref:System.Net.Sockets.NetworkStream> suitable for use with the <xref:System.Net.Security.SslStream> class.","nodes":[{"content":"An <xref:System.Net.Security.SslStream> instance transmits data using a stream that you supply when creating the <xref:System.Net.Security.SslStream>. When you supply this underlying stream, you have the option to specify whether closing the <xref:System.Net.Security.SslStream> also closes the underlying stream. Typically, the <xref:System.Net.Security.SslStream> class is used with the <xref:System.Net.Sockets.TcpClient> and <xref:System.Net.Sockets.TcpListener> classes. The <xref:System.Net.Sockets.TcpClient.GetStream%2A> method provides a <xref:System.Net.Sockets.NetworkStream> suitable for use with the <xref:System.Net.Security.SslStream> class.","pos":[0,656],"nodes":[{"content":"An <ph id=\"ph1\">&lt;xref:System.Net.Security.SslStream&gt;</ph> instance transmits data using a stream that you supply when creating the <ph id=\"ph2\">&lt;xref:System.Net.Security.SslStream&gt;</ph>.","pos":[0,150],"source":"An <xref:System.Net.Security.SslStream> instance transmits data using a stream that you supply when creating the <xref:System.Net.Security.SslStream>."},{"content":"When you supply this underlying stream, you have the option to specify whether closing the <ph id=\"ph1\">&lt;xref:System.Net.Security.SslStream&gt;</ph> also closes the underlying stream.","pos":[151,313],"source":" When you supply this underlying stream, you have the option to specify whether closing the <xref:System.Net.Security.SslStream> also closes the underlying stream."},{"content":"Typically, the <ph id=\"ph1\">&lt;xref:System.Net.Security.SslStream&gt;</ph> class is used with the <ph id=\"ph2\">&lt;xref:System.Net.Sockets.TcpClient&gt;</ph> and <ph id=\"ph3\">&lt;xref:System.Net.Sockets.TcpListener&gt;</ph> classes.","pos":[314,475],"source":" Typically, the <xref:System.Net.Security.SslStream> class is used with the <xref:System.Net.Sockets.TcpClient> and <xref:System.Net.Sockets.TcpListener> classes."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Net.Sockets.TcpClient.GetStream%2A&gt;</ph> method provides a <ph id=\"ph2\">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph> suitable for use with the <ph id=\"ph3\">&lt;xref:System.Net.Security.SslStream&gt;</ph> class.","pos":[476,656],"source":" The <xref:System.Net.Sockets.TcpClient.GetStream%2A> method provides a <xref:System.Net.Sockets.NetworkStream> suitable for use with the <xref:System.Net.Security.SslStream> class."}]}]},{"pos":[1132,2080],"content":"After creating an <xref:System.Net.Security.SslStream>, the server and optionally, the client must be authenticated. The server must provide an X509 certificate that establishes proof of its identity and can request that the client also do so. Authentication must be performed before transmitting information using an <xref:System.Net.Security.SslStream>. Clients initiate authentication using the synchronous <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A> methods, which block until the authentication completes, or the asynchronous <xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A> methods, which do not block waiting for the authentication to complete. Servers initiate authentication using the synchronous <xref:System.Net.Security.SslStream.AuthenticateAsServer%2A> or asynchronous <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A> methods. Both client and server must initiate the authentication.","nodes":[{"content":"After creating an <xref:System.Net.Security.SslStream>, the server and optionally, the client must be authenticated. The server must provide an X509 certificate that establishes proof of its identity and can request that the client also do so. Authentication must be performed before transmitting information using an <xref:System.Net.Security.SslStream>. Clients initiate authentication using the synchronous <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A> methods, which block until the authentication completes, or the asynchronous <xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A> methods, which do not block waiting for the authentication to complete. Servers initiate authentication using the synchronous <xref:System.Net.Security.SslStream.AuthenticateAsServer%2A> or asynchronous <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A> methods. Both client and server must initiate the authentication.","pos":[0,948],"nodes":[{"content":"After creating an <ph id=\"ph1\">&lt;xref:System.Net.Security.SslStream&gt;</ph>, the server and optionally, the client must be authenticated.","pos":[0,116],"source":"After creating an <xref:System.Net.Security.SslStream>, the server and optionally, the client must be authenticated."},{"content":"The server must provide an X509 certificate that establishes proof of its identity and can request that the client also do so.","pos":[117,243]},{"content":"Authentication must be performed before transmitting information using an <ph id=\"ph1\">&lt;xref:System.Net.Security.SslStream&gt;</ph>.","pos":[244,355],"source":" Authentication must be performed before transmitting information using an <xref:System.Net.Security.SslStream>."},{"content":"Clients initiate authentication using the synchronous <ph id=\"ph1\">&lt;xref:System.Net.Security.SslStream.AuthenticateAsClient%2A&gt;</ph> methods, which block until the authentication completes, or the asynchronous <ph id=\"ph2\">&lt;xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A&gt;</ph> methods, which do not block waiting for the authentication to complete.","pos":[356,685],"source":" Clients initiate authentication using the synchronous <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A> methods, which block until the authentication completes, or the asynchronous <xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A> methods, which do not block waiting for the authentication to complete."},{"content":"Servers initiate authentication using the synchronous <ph id=\"ph1\">&lt;xref:System.Net.Security.SslStream.AuthenticateAsServer%2A&gt;</ph> or asynchronous <ph id=\"ph2\">&lt;xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A&gt;</ph> methods.","pos":[686,891],"source":" Servers initiate authentication using the synchronous <xref:System.Net.Security.SslStream.AuthenticateAsServer%2A> or asynchronous <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A> methods."},{"content":"Both client and server must initiate the authentication.","pos":[892,948]}]}]},{"pos":[2087,2970],"content":"The authentication is handled by the Security Support Provider (SSPI) channel provider. The client is given an opportunity to control validation of the server's certificate by specifying a <xref:System.Net.Security.RemoteCertificateValidationCallback> delegate when creating an <xref:System.Net.Security.SslStream>. The server can also control validation by supplying a <xref:System.Net.Security.RemoteCertificateValidationCallback> delegate. The method referenced by the delegate includes the remote party's certificate and any errors SSPI encountered while validating the certificate. Note that if the server specifies a delegate, the delegate's method is invoked regardless of whether the server requested client authentication. If the server did not request client authentication, the server's delegate method receives a null certificate and an empty array of certificate errors.","nodes":[{"content":"The authentication is handled by the Security Support Provider (SSPI) channel provider. The client is given an opportunity to control validation of the server's certificate by specifying a <xref:System.Net.Security.RemoteCertificateValidationCallback> delegate when creating an <xref:System.Net.Security.SslStream>. The server can also control validation by supplying a <xref:System.Net.Security.RemoteCertificateValidationCallback> delegate. The method referenced by the delegate includes the remote party's certificate and any errors SSPI encountered while validating the certificate. Note that if the server specifies a delegate, the delegate's method is invoked regardless of whether the server requested client authentication. If the server did not request client authentication, the server's delegate method receives a null certificate and an empty array of certificate errors.","pos":[0,883],"nodes":[{"content":"The authentication is handled by the Security Support Provider (SSPI) channel provider.","pos":[0,87]},{"content":"The client is given an opportunity to control validation of the server's certificate by specifying a <ph id=\"ph1\">&lt;xref:System.Net.Security.RemoteCertificateValidationCallback&gt;</ph> delegate when creating an <ph id=\"ph2\">&lt;xref:System.Net.Security.SslStream&gt;</ph>.","pos":[88,315],"source":" The client is given an opportunity to control validation of the server's certificate by specifying a <xref:System.Net.Security.RemoteCertificateValidationCallback> delegate when creating an <xref:System.Net.Security.SslStream>."},{"content":"The server can also control validation by supplying a <ph id=\"ph1\">&lt;xref:System.Net.Security.RemoteCertificateValidationCallback&gt;</ph> delegate.","pos":[316,442],"source":" The server can also control validation by supplying a <xref:System.Net.Security.RemoteCertificateValidationCallback> delegate."},{"content":"The method referenced by the delegate includes the remote party's certificate and any errors SSPI encountered while validating the certificate.","pos":[443,586]},{"content":"Note that if the server specifies a delegate, the delegate's method is invoked regardless of whether the server requested client authentication.","pos":[587,731]},{"content":"If the server did not request client authentication, the server's delegate method receives a null certificate and an empty array of certificate errors.","pos":[732,883]}]}]},{"pos":[2977,3515],"content":"If the server requires client authentication, the client must specify one or more certificates for authentication. If the client has more than one certificate, the client can provide a <xref:System.Net.Security.LocalCertificateSelectionCallback> delegate to select the correct certificate for the server. The client's certificates must be located in the current user's \"My\" certificate store. Client authentication via certificates is not supported for the <xref:System.Security.Authentication.SslProtocols.Ssl2> (SSL version 2) protocol.","nodes":[{"content":"If the server requires client authentication, the client must specify one or more certificates for authentication. If the client has more than one certificate, the client can provide a <xref:System.Net.Security.LocalCertificateSelectionCallback> delegate to select the correct certificate for the server. The client's certificates must be located in the current user's \"My\" certificate store. Client authentication via certificates is not supported for the <xref:System.Security.Authentication.SslProtocols.Ssl2> (SSL version 2) protocol.","pos":[0,538],"nodes":[{"content":"If the server requires client authentication, the client must specify one or more certificates for authentication.","pos":[0,114]},{"content":"If the client has more than one certificate, the client can provide a <ph id=\"ph1\">&lt;xref:System.Net.Security.LocalCertificateSelectionCallback&gt;</ph> delegate to select the correct certificate for the server.","pos":[115,304],"source":" If the client has more than one certificate, the client can provide a <xref:System.Net.Security.LocalCertificateSelectionCallback> delegate to select the correct certificate for the server."},{"content":"The client's certificates must be located in the current user's \"My\" certificate store.","pos":[305,392]},{"content":"Client authentication via certificates is not supported for the <ph id=\"ph1\">&lt;xref:System.Security.Authentication.SslProtocols.Ssl2&gt;</ph> (SSL version 2) protocol.","pos":[393,538],"source":" Client authentication via certificates is not supported for the <xref:System.Security.Authentication.SslProtocols.Ssl2> (SSL version 2) protocol."}]}]},{"pos":[3522,3809],"content":"If the authentication fails, you receive a <xref:System.Security.Authentication.AuthenticationException>, and the <xref:System.Net.Security.SslStream> is no longer useable. You should close this object and remove all references to it so that it can be collected by the garbage collector.","nodes":[{"content":"If the authentication fails, you receive a <xref:System.Security.Authentication.AuthenticationException>, and the <xref:System.Net.Security.SslStream> is no longer useable. You should close this object and remove all references to it so that it can be collected by the garbage collector.","pos":[0,287],"nodes":[{"content":"If the authentication fails, you receive a <ph id=\"ph1\">&lt;xref:System.Security.Authentication.AuthenticationException&gt;</ph>, and the <ph id=\"ph2\">&lt;xref:System.Net.Security.SslStream&gt;</ph> is no longer useable.","pos":[0,172],"source":"If the authentication fails, you receive a <xref:System.Security.Authentication.AuthenticationException>, and the <xref:System.Net.Security.SslStream> is no longer useable."},{"content":"You should close this object and remove all references to it so that it can be collected by the garbage collector.","pos":[173,287]}]}]},{"pos":[3816,4778],"content":"When the authentication process, also known as the SSL handshake, succeeds, the identity of the server (and optionally, the client) is established and the <xref:System.Net.Security.SslStream> can be used by the client and server to exchange messages. Before sending or receiving information, the client and server should check the security services and levels provided by the <xref:System.Net.Security.SslStream> to determine whether the protocol, algorithms, and strengths selected meet their requirements for integrity and confidentiality. If the current settings are not sufficient, the stream should be closed. You can check the security services provided by the <xref:System.Net.Security.SslStream> using the <xref:System.Net.Security.SslStream.IsEncrypted%2A> and <xref:System.Net.Security.SslStream.IsSigned%2A> properties. The following table shows the elements that report the cryptographic settings used for authentication, encryption and data signing.","nodes":[{"content":"When the authentication process, also known as the SSL handshake, succeeds, the identity of the server (and optionally, the client) is established and the <xref:System.Net.Security.SslStream> can be used by the client and server to exchange messages. Before sending or receiving information, the client and server should check the security services and levels provided by the <xref:System.Net.Security.SslStream> to determine whether the protocol, algorithms, and strengths selected meet their requirements for integrity and confidentiality. If the current settings are not sufficient, the stream should be closed. You can check the security services provided by the <xref:System.Net.Security.SslStream> using the <xref:System.Net.Security.SslStream.IsEncrypted%2A> and <xref:System.Net.Security.SslStream.IsSigned%2A> properties. The following table shows the elements that report the cryptographic settings used for authentication, encryption and data signing.","pos":[0,962],"nodes":[{"content":"When the authentication process, also known as the SSL handshake, succeeds, the identity of the server (and optionally, the client) is established and the <ph id=\"ph1\">&lt;xref:System.Net.Security.SslStream&gt;</ph> can be used by the client and server to exchange messages.","pos":[0,250],"source":"When the authentication process, also known as the SSL handshake, succeeds, the identity of the server (and optionally, the client) is established and the <xref:System.Net.Security.SslStream> can be used by the client and server to exchange messages."},{"content":"Before sending or receiving information, the client and server should check the security services and levels provided by the <ph id=\"ph1\">&lt;xref:System.Net.Security.SslStream&gt;</ph> to determine whether the protocol, algorithms, and strengths selected meet their requirements for integrity and confidentiality.","pos":[251,541],"source":" Before sending or receiving information, the client and server should check the security services and levels provided by the <xref:System.Net.Security.SslStream> to determine whether the protocol, algorithms, and strengths selected meet their requirements for integrity and confidentiality."},{"content":"If the current settings are not sufficient, the stream should be closed.","pos":[542,614]},{"content":"You can check the security services provided by the <ph id=\"ph1\">&lt;xref:System.Net.Security.SslStream&gt;</ph> using the <ph id=\"ph2\">&lt;xref:System.Net.Security.SslStream.IsEncrypted%2A&gt;</ph> and <ph id=\"ph3\">&lt;xref:System.Net.Security.SslStream.IsSigned%2A&gt;</ph> properties.","pos":[615,830],"source":" You can check the security services provided by the <xref:System.Net.Security.SslStream> using the <xref:System.Net.Security.SslStream.IsEncrypted%2A> and <xref:System.Net.Security.SslStream.IsSigned%2A> properties."},{"content":"The following table shows the elements that report the cryptographic settings used for authentication, encryption and data signing.","pos":[831,962]}]}]},{"pos":[4785,4792],"content":"Element","nodes":[{"content":"Element","pos":[0,7]}]},{"pos":[4793,4800],"content":"Members","nodes":[{"content":"Members","pos":[0,7]}]},{"pos":[4837,4919],"content":"The security protocol used to authenticate the server and, optionally, the client.","nodes":[{"content":"The security protocol used to authenticate the server and, optionally, the client.","pos":[0,82]}]},{"pos":[4920,5067],"content":"The <xref:System.Net.Security.SslStream.SslProtocol%2A> property and the associated <xref:System.Security.Authentication.SslProtocols> enumeration.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Net.Security.SslStream.SslProtocol%2A&gt;</ph> property and the associated <ph id=\"ph2\">&lt;xref:System.Security.Authentication.SslProtocols&gt;</ph> enumeration.","pos":[0,147],"source":"The <xref:System.Net.Security.SslStream.SslProtocol%2A> property and the associated <xref:System.Security.Authentication.SslProtocols> enumeration."}]},{"pos":[5072,5099],"content":"The key exchange algorithm.","nodes":[{"content":"The key exchange algorithm.","pos":[0,27]}]},{"pos":[5100,5265],"content":"The <xref:System.Net.Security.SslStream.KeyExchangeAlgorithm%2A> property and the associated <xref:System.Security.Authentication.ExchangeAlgorithmType> enumeration.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Net.Security.SslStream.KeyExchangeAlgorithm%2A&gt;</ph> property and the associated <ph id=\"ph2\">&lt;xref:System.Security.Authentication.ExchangeAlgorithmType&gt;</ph> enumeration.","pos":[0,165],"source":"The <xref:System.Net.Security.SslStream.KeyExchangeAlgorithm%2A> property and the associated <xref:System.Security.Authentication.ExchangeAlgorithmType> enumeration."}]},{"pos":[5270,5302],"content":"The message integrity algorithm.","nodes":[{"content":"The message integrity algorithm.","pos":[0,32]}]},{"pos":[5303,5457],"content":"The <xref:System.Net.Security.SslStream.HashAlgorithm%2A> property and the associated <xref:System.Security.Authentication.HashAlgorithmType> enumeration.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Net.Security.SslStream.HashAlgorithm%2A&gt;</ph> property and the associated <ph id=\"ph2\">&lt;xref:System.Security.Authentication.HashAlgorithmType&gt;</ph> enumeration.","pos":[0,154],"source":"The <xref:System.Net.Security.SslStream.HashAlgorithm%2A> property and the associated <xref:System.Security.Authentication.HashAlgorithmType> enumeration."}]},{"pos":[5462,5500],"content":"The message confidentiality algorithm.","nodes":[{"content":"The message confidentiality algorithm.","pos":[0,38]}]},{"pos":[5501,5659],"content":"The <xref:System.Net.Security.SslStream.CipherAlgorithm%2A> property and the associated <xref:System.Security.Authentication.CipherAlgorithmType> enumeration.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Net.Security.SslStream.CipherAlgorithm%2A&gt;</ph> property and the associated <ph id=\"ph2\">&lt;xref:System.Security.Authentication.CipherAlgorithmType&gt;</ph> enumeration.","pos":[0,158],"source":"The <xref:System.Net.Security.SslStream.CipherAlgorithm%2A> property and the associated <xref:System.Security.Authentication.CipherAlgorithmType> enumeration."}]},{"pos":[5664,5705],"content":"The strengths of the selected algorithms.","nodes":[{"content":"The strengths of the selected algorithms.","pos":[0,41]}]},{"pos":[5706,5895],"content":"The <xref:System.Net.Security.SslStream.KeyExchangeStrength%2A>, <xref:System.Net.Security.SslStream.HashStrength%2A>, and <xref:System.Net.Security.SslStream.CipherStrength%2A> properties.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Net.Security.SslStream.KeyExchangeStrength%2A&gt;</ph>, <ph id=\"ph2\">&lt;xref:System.Net.Security.SslStream.HashStrength%2A&gt;</ph>, and <ph id=\"ph3\">&lt;xref:System.Net.Security.SslStream.CipherStrength%2A&gt;</ph> properties.","pos":[0,189],"source":"The <xref:System.Net.Security.SslStream.KeyExchangeStrength%2A>, <xref:System.Net.Security.SslStream.HashStrength%2A>, and <xref:System.Net.Security.SslStream.CipherStrength%2A> properties."}]},{"pos":[5903,6262],"content":"After a successful authentication, you can send data using the synchronous <xref:System.Net.Security.SslStream.Write%2A> or asynchronous <xref:System.Net.Security.SslStream.BeginWrite%2A> methods. You can receive data using the synchronous <xref:System.Net.Security.SslStream.Read%2A> or asynchronous <xref:System.Net.Security.SslStream.BeginRead%2A> methods.","nodes":[{"content":"After a successful authentication, you can send data using the synchronous <xref:System.Net.Security.SslStream.Write%2A> or asynchronous <xref:System.Net.Security.SslStream.BeginWrite%2A> methods. You can receive data using the synchronous <xref:System.Net.Security.SslStream.Read%2A> or asynchronous <xref:System.Net.Security.SslStream.BeginRead%2A> methods.","pos":[0,359],"nodes":[{"content":"After a successful authentication, you can send data using the synchronous <ph id=\"ph1\">&lt;xref:System.Net.Security.SslStream.Write%2A&gt;</ph> or asynchronous <ph id=\"ph2\">&lt;xref:System.Net.Security.SslStream.BeginWrite%2A&gt;</ph> methods.","pos":[0,196],"source":"After a successful authentication, you can send data using the synchronous <xref:System.Net.Security.SslStream.Write%2A> or asynchronous <xref:System.Net.Security.SslStream.BeginWrite%2A> methods."},{"content":"You can receive data using the synchronous <ph id=\"ph1\">&lt;xref:System.Net.Security.SslStream.Read%2A&gt;</ph> or asynchronous <ph id=\"ph2\">&lt;xref:System.Net.Security.SslStream.BeginRead%2A&gt;</ph> methods.","pos":[197,359],"source":" You can receive data using the synchronous <xref:System.Net.Security.SslStream.Read%2A> or asynchronous <xref:System.Net.Security.SslStream.BeginRead%2A> methods."}]}]},{"pos":[6269,6460],"content":"If you specified to the <xref:System.Net.Security.SslStream.%23ctor%2A> that the underlying stream should be left open, you are responsible for closing that stream when you are done using it.","nodes":[{"content":"If you specified to the <ph id=\"ph1\">&lt;xref:System.Net.Security.SslStream.%23ctor%2A&gt;</ph> that the underlying stream should be left open, you are responsible for closing that stream when you are done using it.","pos":[0,191],"source":"If you specified to the <xref:System.Net.Security.SslStream.%23ctor%2A> that the underlying stream should be left open, you are responsible for closing that stream when you are done using it."}]},{"pos":[6468,6761],"content":"[!NOTE]\n If the application that creates the <xref:System.Net.Security.SslStream> object runs with the credentials of a Normal user, the application will not be able to access certificates installed in the local machine store unless permission has been explicitly given to the user to do so.","leadings":["","> "],"nodes":[{"content":"If the application that creates the <ph id=\"ph1\">&lt;xref:System.Net.Security.SslStream&gt;</ph> object runs with the credentials of a Normal user, the application will not be able to access certificates installed in the local machine store unless permission has been explicitly given to the user to do so.","pos":[9,291],"source":" If the application that creates the <xref:System.Net.Security.SslStream> object runs with the credentials of a Normal user, the application will not be able to access certificates installed in the local machine store unless permission has been explicitly given to the user to do so."}]},{"pos":[6768,7186],"content":"<xref:System.Net.Security.SslStream> assumes that a timeout along with any other <xref:System.IO.IOException> when one is thrown from the inner stream will be treated as fatal by its caller. Reusing a <xref:System.Net.Security.SslStream> instance after a timeout will return garbage. An application should <xref:System.IO.Stream.Close%2A> the <xref:System.Net.Security.SslStream> and throw an exception in these cases.","nodes":[{"content":"<xref:System.Net.Security.SslStream> assumes that a timeout along with any other <xref:System.IO.IOException> when one is thrown from the inner stream will be treated as fatal by its caller. Reusing a <xref:System.Net.Security.SslStream> instance after a timeout will return garbage. An application should <xref:System.IO.Stream.Close%2A> the <xref:System.Net.Security.SslStream> and throw an exception in these cases.","pos":[0,418],"nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Net.Security.SslStream&gt;</ph> assumes that a timeout along with any other <ph id=\"ph2\">&lt;xref:System.IO.IOException&gt;</ph> when one is thrown from the inner stream will be treated as fatal by its caller.","pos":[0,190],"source":"<xref:System.Net.Security.SslStream> assumes that a timeout along with any other <xref:System.IO.IOException> when one is thrown from the inner stream will be treated as fatal by its caller."},{"content":"Reusing a <ph id=\"ph1\">&lt;xref:System.Net.Security.SslStream&gt;</ph> instance after a timeout will return garbage.","pos":[191,283],"source":" Reusing a <xref:System.Net.Security.SslStream> instance after a timeout will return garbage."},{"content":"An application should <ph id=\"ph1\">&lt;xref:System.IO.Stream.Close%2A&gt;</ph> the <ph id=\"ph2\">&lt;xref:System.Net.Security.SslStream&gt;</ph> and throw an exception in these cases.","pos":[284,418],"source":" An application should <xref:System.IO.Stream.Close%2A> the <xref:System.Net.Security.SslStream> and throw an exception in these cases."}]}]},{"pos":[7193,7504],"content":"The .NET Framework 4.6 includes a new security feature that blocks insecure cipher and hashing algorithms for connections. Applications using TLS/SSL through APIs such as HttpClient, HttpWebRequest, FTPClient, SmtpClient, SslStream, etc. and targeting .NET Framework 4.6 get the more-secure behavior by default.","nodes":[{"content":"The .NET Framework 4.6 includes a new security feature that blocks insecure cipher and hashing algorithms for connections. Applications using TLS/SSL through APIs such as HttpClient, HttpWebRequest, FTPClient, SmtpClient, SslStream, etc. and targeting .NET Framework 4.6 get the more-secure behavior by default.","pos":[0,311],"nodes":[{"content":"The .NET Framework 4.6 includes a new security feature that blocks insecure cipher and hashing algorithms for connections.","pos":[0,122]},{"content":"Applications using TLS/SSL through APIs such as HttpClient, HttpWebRequest, FTPClient, SmtpClient, SslStream, etc. and targeting .NET Framework 4.6 get the more-secure behavior by default.","pos":[123,311]}]}]},{"pos":[7511,7782],"content":"Developers may want to opt out of this behavior in order to maintain interoperability with their existing SSL3 services OR TLS w/ RC4 services. [This article](https://support.microsoft.com/kb/3069494) explains how to modify your code so that the new behavior is disabled.","nodes":[{"content":"Developers may want to opt out of this behavior in order to maintain interoperability with their existing SSL3 services OR TLS w/ RC4 services.","pos":[0,143]},{"content":"<bpt id=\"p1\">[</bpt>This article<ept id=\"p1\">](https://support.microsoft.com/kb/3069494)</ept> explains how to modify your code so that the new behavior is disabled.","pos":[144,271],"source":"[This article](https://support.microsoft.com/kb/3069494) explains how to modify your code so that the new behavior is disabled."}]},{"pos":[7789,8231],"content":"The .NET Framework 4.7 adds new overloads for the methods that authenticate SslStreams that do not specify a TLS version, but instead use the TLS version defined as the system default in [SCHANNEL](https://msdn.microsoft.com/library/windows/desktop/aa380123.aspx). Use these methods in your app as a way to be able to later modify the defaults as TLS version best practice changes over time, without the need to rebuild and redeploy your app.","nodes":[{"content":"The .NET Framework 4.7 adds new overloads for the methods that authenticate SslStreams that do not specify a TLS version, but instead use the TLS version defined as the system default in <bpt id=\"p1\">[</bpt>SCHANNEL<ept id=\"p1\">](https://msdn.microsoft.com/library/windows/desktop/aa380123.aspx)</ept>.","pos":[0,264],"source":"The .NET Framework 4.7 adds new overloads for the methods that authenticate SslStreams that do not specify a TLS version, but instead use the TLS version defined as the system default in [SCHANNEL](https://msdn.microsoft.com/library/windows/desktop/aa380123.aspx)."},{"content":"Use these methods in your app as a way to be able to later modify the defaults as TLS version best practice changes over time, without the need to rebuild and redeploy your app.","pos":[265,442]}]}],"pos":[6397,14668],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.Net.Security.SslStream\"></xref> class using the specified <xref href=\"System.IO.Stream\"></xref>.","nodes":[{"pos":[0,149],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Net.Security.SslStream\"&gt;&lt;/xref&gt;</ph> class using the specified <ph id=\"ph2\">&lt;xref href=\"System.IO.Stream\"&gt;&lt;/xref&gt;</ph>.","source":"Initializes a new instance of the <xref href=\"System.Net.Security.SslStream\"></xref> class using the specified <xref href=\"System.IO.Stream\"></xref>."}],"pos":[18342,18492],"yaml":true},{"content":"If a value is not specified in the configuration file for encryptionpolicy, the <xref:System.Net.Security.EncryptionPolicy> defaults to <xref:System.Net.Security.EncryptionPolicy?displayProperty=fullName> for the <xref:System.Net.Security.SslStream> instance that is constructed.  \n  \n The use of the Null cipher is required when the encryption policy is set to <xref:System.Net.Security.EncryptionPolicy?displayProperty=fullName>.","nodes":[{"pos":[0,279],"content":"If a value is not specified in the configuration file for encryptionpolicy, the <xref:System.Net.Security.EncryptionPolicy> defaults to <xref:System.Net.Security.EncryptionPolicy?displayProperty=fullName> for the <xref:System.Net.Security.SslStream> instance that is constructed.","nodes":[{"content":"If a value is not specified in the configuration file for encryptionpolicy, the <ph id=\"ph1\">&lt;xref:System.Net.Security.EncryptionPolicy&gt;</ph> defaults to <ph id=\"ph2\">&lt;xref:System.Net.Security.EncryptionPolicy?displayProperty=fullName&gt;</ph> for the <ph id=\"ph3\">&lt;xref:System.Net.Security.SslStream&gt;</ph> instance that is constructed.","pos":[0,279],"source":"If a value is not specified in the configuration file for encryptionpolicy, the <xref:System.Net.Security.EncryptionPolicy> defaults to <xref:System.Net.Security.EncryptionPolicy?displayProperty=fullName> for the <xref:System.Net.Security.SslStream> instance that is constructed."}]},{"pos":[286,431],"content":"The use of the Null cipher is required when the encryption policy is set to <xref:System.Net.Security.EncryptionPolicy?displayProperty=fullName>.","nodes":[{"content":"The use of the Null cipher is required when the encryption policy is set to <ph id=\"ph1\">&lt;xref:System.Net.Security.EncryptionPolicy?displayProperty=fullName&gt;</ph>.","pos":[0,145],"source":"The use of the Null cipher is required when the encryption policy is set to <xref:System.Net.Security.EncryptionPolicy?displayProperty=fullName>."}]}],"pos":[18503,18939],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.IO.Stream\"></xref> object used by the <xref href=\"System.Net.Security.SslStream\"></xref> for sending and receiving data.","nodes":[{"pos":[0,141],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.IO.Stream\"&gt;&lt;/xref&gt;</ph> object used by the <ph id=\"ph2\">&lt;xref href=\"System.Net.Security.SslStream\"&gt;&lt;/xref&gt;</ph> for sending and receiving data.","source":"A <xref href=\"System.IO.Stream\"></xref> object used by the <xref href=\"System.Net.Security.SslStream\"></xref> for sending and receiving data."}],"pos":[19097,19239],"yaml":true},{"content":"<code>innerStream</code> is not readable.  \n  \n -or-  \n  \n <code>innerStream</code> is not writable.","nodes":[{"pos":[0,41],"content":"<ph id=\"ph1\">&lt;code&gt;innerStream&lt;/code&gt;</ph> is not readable.","source":"<code>innerStream</code> is not readable."},{"pos":[48,52],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[59,100],"content":"<ph id=\"ph1\">&lt;code&gt;innerStream&lt;/code&gt;</ph> is not writable.","source":"<code>innerStream</code> is not writable."}],"pos":[19396,19503],"yaml":true},{"content":"<code>innerStream</code> is `null`.  \n  \n -or-  \n  \n <code>innerStream</code> is equal to <xref href=\"System.IO.Stream.Null\"></xref>.","nodes":[{"pos":[0,35],"content":"<ph id=\"ph1\">&lt;code&gt;innerStream&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>innerStream</code> is `null`."},{"pos":[42,46],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[53,133],"content":"<ph id=\"ph1\">&lt;code&gt;innerStream&lt;/code&gt;</ph> is equal to <ph id=\"ph2\">&lt;xref href=\"System.IO.Stream.Null\"&gt;&lt;/xref&gt;</ph>.","source":"<code>innerStream</code> is equal to <xref href=\"System.IO.Stream.Null\"></xref>."}],"pos":[19605,19747],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Net.Security.SslStream\"></xref> class using the specified <xref href=\"System.IO.Stream\"></xref> and stream closure behavior.","nodes":[{"pos":[0,177],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Net.Security.SslStream\"&gt;&lt;/xref&gt;</ph> class using the specified <ph id=\"ph2\">&lt;xref href=\"System.IO.Stream\"&gt;&lt;/xref&gt;</ph> and stream closure behavior.","source":"Initializes a new instance of the <xref href=\"System.Net.Security.SslStream\"></xref> class using the specified <xref href=\"System.IO.Stream\"></xref> and stream closure behavior."}],"pos":[21010,21188],"yaml":true},{"content":"When you specify `true` for the `leaveStreamOpen` parameter, closing the <xref:System.Net.Security.SslStream> has no effect on the `innerStream` stream; you must explicitly close `innerStream` when you no longer need it.  \n  \n If a value is not specified in the configuration file for encryptionpolicy, the <xref:System.Net.Security.EncryptionPolicy> defaults to <xref:System.Net.Security.EncryptionPolicy?displayProperty=fullName> for the <xref:System.Net.Security.SslStream> instance that is constructed.  \n  \n The use of the Null cipher is required when the encryption policy is set to <xref:System.Net.Security.EncryptionPolicy?displayProperty=fullName>.","nodes":[{"pos":[0,220],"content":"When you specify <ph id=\"ph1\">`true`</ph> for the <ph id=\"ph2\">`leaveStreamOpen`</ph> parameter, closing the <ph id=\"ph3\">&lt;xref:System.Net.Security.SslStream&gt;</ph> has no effect on the <ph id=\"ph4\">`innerStream`</ph> stream; you must explicitly close <ph id=\"ph5\">`innerStream`</ph> when you no longer need it.","source":"When you specify `true` for the `leaveStreamOpen` parameter, closing the <xref:System.Net.Security.SslStream> has no effect on the `innerStream` stream; you must explicitly close `innerStream` when you no longer need it."},{"pos":[227,506],"content":"If a value is not specified in the configuration file for encryptionpolicy, the <xref:System.Net.Security.EncryptionPolicy> defaults to <xref:System.Net.Security.EncryptionPolicy?displayProperty=fullName> for the <xref:System.Net.Security.SslStream> instance that is constructed.","nodes":[{"content":"If a value is not specified in the configuration file for encryptionpolicy, the <ph id=\"ph1\">&lt;xref:System.Net.Security.EncryptionPolicy&gt;</ph> defaults to <ph id=\"ph2\">&lt;xref:System.Net.Security.EncryptionPolicy?displayProperty=fullName&gt;</ph> for the <ph id=\"ph3\">&lt;xref:System.Net.Security.SslStream&gt;</ph> instance that is constructed.","pos":[0,279],"source":"If a value is not specified in the configuration file for encryptionpolicy, the <xref:System.Net.Security.EncryptionPolicy> defaults to <xref:System.Net.Security.EncryptionPolicy?displayProperty=fullName> for the <xref:System.Net.Security.SslStream> instance that is constructed."}]},{"pos":[513,658],"content":"The use of the Null cipher is required when the encryption policy is set to <xref:System.Net.Security.EncryptionPolicy?displayProperty=fullName>.","nodes":[{"content":"The use of the Null cipher is required when the encryption policy is set to <ph id=\"ph1\">&lt;xref:System.Net.Security.EncryptionPolicy?displayProperty=fullName&gt;</ph>.","pos":[0,145],"source":"The use of the Null cipher is required when the encryption policy is set to <xref:System.Net.Security.EncryptionPolicy?displayProperty=fullName>."}]}],"pos":[21199,21864],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.IO.Stream\"></xref> object used by the <xref href=\"System.Net.Security.SslStream\"></xref> for sending and receiving data.","nodes":[{"pos":[0,141],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.IO.Stream\"&gt;&lt;/xref&gt;</ph> object used by the <ph id=\"ph2\">&lt;xref href=\"System.Net.Security.SslStream\"&gt;&lt;/xref&gt;</ph> for sending and receiving data.","source":"A <xref href=\"System.IO.Stream\"></xref> object used by the <xref href=\"System.Net.Security.SslStream\"></xref> for sending and receiving data."}],"pos":[22382,22524],"yaml":true},{"content":"A Boolean value that indicates the closure behavior of the <xref href=\"System.IO.Stream\"></xref> object used by the <xref href=\"System.Net.Security.SslStream\"></xref> for sending and receiving data. This parameter indicates if the inner stream is left open.","nodes":[{"pos":[0,257],"content":"A Boolean value that indicates the closure behavior of the <xref href=\"System.IO.Stream\"></xref> object used by the <xref href=\"System.Net.Security.SslStream\"></xref> for sending and receiving data. This parameter indicates if the inner stream is left open.","nodes":[{"content":"A Boolean value that indicates the closure behavior of the <ph id=\"ph1\">&lt;xref href=\"System.IO.Stream\"&gt;&lt;/xref&gt;</ph> object used by the <ph id=\"ph2\">&lt;xref href=\"System.Net.Security.SslStream\"&gt;&lt;/xref&gt;</ph> for sending and receiving data.","pos":[0,198],"source":"A Boolean value that indicates the closure behavior of the <xref href=\"System.IO.Stream\"></xref> object used by the <xref href=\"System.Net.Security.SslStream\"></xref> for sending and receiving data."},{"content":"This parameter indicates if the inner stream is left open.","pos":[199,257]}]}],"pos":[22601,22859],"yaml":true},{"content":"<code>innerStream</code> is not readable.  \n  \n -or-  \n  \n <code>innerStream</code> is not writable.","nodes":[{"pos":[0,41],"content":"<ph id=\"ph1\">&lt;code&gt;innerStream&lt;/code&gt;</ph> is not readable.","source":"<code>innerStream</code> is not readable."},{"pos":[48,52],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[59,100],"content":"<ph id=\"ph1\">&lt;code&gt;innerStream&lt;/code&gt;</ph> is not writable.","source":"<code>innerStream</code> is not writable."}],"pos":[23016,23123],"yaml":true},{"content":"<code>innerStream</code> is `null`.  \n  \n -or-  \n  \n <code>innerStream</code> is equal to <xref href=\"System.IO.Stream.Null\"></xref>.","nodes":[{"pos":[0,35],"content":"<ph id=\"ph1\">&lt;code&gt;innerStream&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>innerStream</code> is `null`."},{"pos":[42,46],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[53,133],"content":"<ph id=\"ph1\">&lt;code&gt;innerStream&lt;/code&gt;</ph> is equal to <ph id=\"ph2\">&lt;xref href=\"System.IO.Stream.Null\"&gt;&lt;/xref&gt;</ph>.","source":"<code>innerStream</code> is equal to <xref href=\"System.IO.Stream.Null\"></xref>."}],"pos":[23225,23367],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Net.Security.SslStream\"></xref> class using the specified <xref href=\"System.IO.Stream\"></xref>, stream closure behavior and certificate validation delegate.","nodes":[{"pos":[0,210],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Net.Security.SslStream\"&gt;&lt;/xref&gt;</ph> class using the specified <ph id=\"ph2\">&lt;xref href=\"System.IO.Stream\"&gt;&lt;/xref&gt;</ph>, stream closure behavior and certificate validation delegate.","source":"Initializes a new instance of the <xref href=\"System.Net.Security.SslStream\"></xref> class using the specified <xref href=\"System.IO.Stream\"></xref>, stream closure behavior and certificate validation delegate."}],"pos":[24909,25120],"yaml":true},{"content":"When you specify `true` for the `leaveStreamOpen` parameter, closing the <xref:System.Net.Security.SslStream> has no effect on the `innerStream` stream; you must explicitly close `innerStream` when you no longer need it.  \n  \n The `userCertificateValidationCallback` delegate's `certificateErrors` argument contains any Windows error codes returned by the channel Security Support Provider Interface (SSPI). The return value of the method invoked by the `userCertificateValidationCallback` delegate determines whether authentication succeeds.  \n  \n The security protocol and cryptographic algorithms are already selected when the `userCertificateValidationCallback` delegate's method is invoked. You can use the method to determine whether the selected cryptographic algorithms and strengths are sufficient for your application. If not, the method should return `false` to prevent the <xref:System.Net.Security.SslStream> from being created.  \n  \n If a value is not specified in the configuration file for encryptionpolicy, the <xref:System.Net.Security.EncryptionPolicy> defaults to <xref:System.Net.Security.EncryptionPolicy?displayProperty=fullName> for the <xref:System.Net.Security.SslStream> instance that is constructed.  \n  \n The use of the Null cipher is required when the encryption policy is set to <xref:System.Net.Security.EncryptionPolicy?displayProperty=fullName>.  \n  \n> [!NOTE]\n>  The Framework caches SSL sessions as they are created and attempts to reuse a cached session for a new request, if possible. When attempting to reuse an SSL session, the Framework uses the first element of <xref:System.Net.HttpWebRequest.ClientCertificates%2A> (if there is one), or tries to reuse an anonymous sessions if <xref:System.Net.HttpWebRequest.ClientCertificates%2A> is empty.  \n  \n> [!NOTE]\n>  Client certificates are not supported in the SSL version 2 protocol.","nodes":[{"pos":[0,220],"content":"When you specify <ph id=\"ph1\">`true`</ph> for the <ph id=\"ph2\">`leaveStreamOpen`</ph> parameter, closing the <ph id=\"ph3\">&lt;xref:System.Net.Security.SslStream&gt;</ph> has no effect on the <ph id=\"ph4\">`innerStream`</ph> stream; you must explicitly close <ph id=\"ph5\">`innerStream`</ph> when you no longer need it.","source":"When you specify `true` for the `leaveStreamOpen` parameter, closing the <xref:System.Net.Security.SslStream> has no effect on the `innerStream` stream; you must explicitly close `innerStream` when you no longer need it."},{"pos":[227,542],"content":"The `userCertificateValidationCallback` delegate's `certificateErrors` argument contains any Windows error codes returned by the channel Security Support Provider Interface (SSPI). The return value of the method invoked by the `userCertificateValidationCallback` delegate determines whether authentication succeeds.","nodes":[{"content":"The <ph id=\"ph1\">`userCertificateValidationCallback`</ph> delegate's <ph id=\"ph2\">`certificateErrors`</ph> argument contains any Windows error codes returned by the channel Security Support Provider Interface (SSPI).","pos":[0,180],"source":"The `userCertificateValidationCallback` delegate's `certificateErrors` argument contains any Windows error codes returned by the channel Security Support Provider Interface (SSPI)."},{"content":"The return value of the method invoked by the <ph id=\"ph1\">`userCertificateValidationCallback`</ph> delegate determines whether authentication succeeds.","pos":[181,315],"source":" The return value of the method invoked by the `userCertificateValidationCallback` delegate determines whether authentication succeeds."}]},{"pos":[549,941],"content":"The security protocol and cryptographic algorithms are already selected when the `userCertificateValidationCallback` delegate's method is invoked. You can use the method to determine whether the selected cryptographic algorithms and strengths are sufficient for your application. If not, the method should return `false` to prevent the <xref:System.Net.Security.SslStream> from being created.","nodes":[{"content":"The security protocol and cryptographic algorithms are already selected when the <ph id=\"ph1\">`userCertificateValidationCallback`</ph> delegate's method is invoked.","pos":[0,146],"source":"The security protocol and cryptographic algorithms are already selected when the `userCertificateValidationCallback` delegate's method is invoked."},{"content":"You can use the method to determine whether the selected cryptographic algorithms and strengths are sufficient for your application.","pos":[147,279]},{"content":"If not, the method should return <ph id=\"ph1\">`false`</ph> to prevent the <ph id=\"ph2\">&lt;xref:System.Net.Security.SslStream&gt;</ph> from being created.","pos":[280,392],"source":" If not, the method should return `false` to prevent the <xref:System.Net.Security.SslStream> from being created."}]},{"pos":[948,1227],"content":"If a value is not specified in the configuration file for encryptionpolicy, the <xref:System.Net.Security.EncryptionPolicy> defaults to <xref:System.Net.Security.EncryptionPolicy?displayProperty=fullName> for the <xref:System.Net.Security.SslStream> instance that is constructed.","nodes":[{"content":"If a value is not specified in the configuration file for encryptionpolicy, the <ph id=\"ph1\">&lt;xref:System.Net.Security.EncryptionPolicy&gt;</ph> defaults to <ph id=\"ph2\">&lt;xref:System.Net.Security.EncryptionPolicy?displayProperty=fullName&gt;</ph> for the <ph id=\"ph3\">&lt;xref:System.Net.Security.SslStream&gt;</ph> instance that is constructed.","pos":[0,279],"source":"If a value is not specified in the configuration file for encryptionpolicy, the <xref:System.Net.Security.EncryptionPolicy> defaults to <xref:System.Net.Security.EncryptionPolicy?displayProperty=fullName> for the <xref:System.Net.Security.SslStream> instance that is constructed."}]},{"pos":[1234,1379],"content":"The use of the Null cipher is required when the encryption policy is set to <xref:System.Net.Security.EncryptionPolicy?displayProperty=fullName>.","nodes":[{"content":"The use of the Null cipher is required when the encryption policy is set to <ph id=\"ph1\">&lt;xref:System.Net.Security.EncryptionPolicy?displayProperty=fullName&gt;</ph>.","pos":[0,145],"source":"The use of the Null cipher is required when the encryption policy is set to <xref:System.Net.Security.EncryptionPolicy?displayProperty=fullName>."}]},{"pos":[1387,1785],"content":"[!NOTE]\n The Framework caches SSL sessions as they are created and attempts to reuse a cached session for a new request, if possible. When attempting to reuse an SSL session, the Framework uses the first element of <xref:System.Net.HttpWebRequest.ClientCertificates%2A> (if there is one), or tries to reuse an anonymous sessions if <xref:System.Net.HttpWebRequest.ClientCertificates%2A> is empty.","leadings":["","> "],"nodes":[{"content":" The Framework caches SSL sessions as they are created and attempts to reuse a cached session for a new request, if possible. When attempting to reuse an SSL session, the Framework uses the first element of <xref:System.Net.HttpWebRequest.ClientCertificates%2A> (if there is one), or tries to reuse an anonymous sessions if <xref:System.Net.HttpWebRequest.ClientCertificates%2A> is empty.","pos":[8,396],"nodes":[{"content":"The Framework caches SSL sessions as they are created and attempts to reuse a cached session for a new request, if possible.","pos":[1,125]},{"content":"When attempting to reuse an SSL session, the Framework uses the first element of <ph id=\"ph1\">&lt;xref:System.Net.HttpWebRequest.ClientCertificates%2A&gt;</ph> (if there is one), or tries to reuse an anonymous sessions if <ph id=\"ph2\">&lt;xref:System.Net.HttpWebRequest.ClientCertificates%2A&gt;</ph> is empty.","pos":[126,388],"source":" When attempting to reuse an SSL session, the Framework uses the first element of <xref:System.Net.HttpWebRequest.ClientCertificates%2A> (if there is one), or tries to reuse an anonymous sessions if <xref:System.Net.HttpWebRequest.ClientCertificates%2A> is empty."}]}]},{"pos":[1793,1872],"content":"[!NOTE]\n Client certificates are not supported in the SSL version 2 protocol.","leadings":["","> "],"nodes":[{"content":"Client certificates are not supported in the SSL version 2 protocol.","pos":[9,77]}]}],"pos":[25131,27020],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.IO.Stream\"></xref> object used by the <xref href=\"System.Net.Security.SslStream\"></xref> for sending and receiving data.","nodes":[{"pos":[0,141],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.IO.Stream\"&gt;&lt;/xref&gt;</ph> object used by the <ph id=\"ph2\">&lt;xref href=\"System.Net.Security.SslStream\"&gt;&lt;/xref&gt;</ph> for sending and receiving data.","source":"A <xref href=\"System.IO.Stream\"></xref> object used by the <xref href=\"System.Net.Security.SslStream\"></xref> for sending and receiving data."}],"pos":[27688,27830],"yaml":true},{"content":"A Boolean value that indicates the closure behavior of the <xref href=\"System.IO.Stream\"></xref> object used by the <xref href=\"System.Net.Security.SslStream\"></xref> for sending and receiving data. This parameter indicates if the inner stream is left open.","nodes":[{"pos":[0,257],"content":"A Boolean value that indicates the closure behavior of the <xref href=\"System.IO.Stream\"></xref> object used by the <xref href=\"System.Net.Security.SslStream\"></xref> for sending and receiving data. This parameter indicates if the inner stream is left open.","nodes":[{"content":"A Boolean value that indicates the closure behavior of the <ph id=\"ph1\">&lt;xref href=\"System.IO.Stream\"&gt;&lt;/xref&gt;</ph> object used by the <ph id=\"ph2\">&lt;xref href=\"System.Net.Security.SslStream\"&gt;&lt;/xref&gt;</ph> for sending and receiving data.","pos":[0,198],"source":"A Boolean value that indicates the closure behavior of the <xref href=\"System.IO.Stream\"></xref> object used by the <xref href=\"System.Net.Security.SslStream\"></xref> for sending and receiving data."},{"content":"This parameter indicates if the inner stream is left open.","pos":[199,257]}]}],"pos":[27907,28165],"yaml":true},{"content":"A <xref href=\"System.Net.Security.RemoteCertificateValidationCallback\"></xref> delegate responsible for validating the certificate supplied by the remote party.","nodes":[{"pos":[0,160],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Net.Security.RemoteCertificateValidationCallback\"&gt;&lt;/xref&gt;</ph> delegate responsible for validating the certificate supplied by the remote party.","source":"A <xref href=\"System.Net.Security.RemoteCertificateValidationCallback\"></xref> delegate responsible for validating the certificate supplied by the remote party."}],"pos":[28296,28457],"yaml":true},{"content":"<code>innerStream</code> is not readable.  \n  \n -or-  \n  \n <code>innerStream</code> is not writable.","nodes":[{"pos":[0,41],"content":"<ph id=\"ph1\">&lt;code&gt;innerStream&lt;/code&gt;</ph> is not readable.","source":"<code>innerStream</code> is not readable."},{"pos":[48,52],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[59,100],"content":"<ph id=\"ph1\">&lt;code&gt;innerStream&lt;/code&gt;</ph> is not writable.","source":"<code>innerStream</code> is not writable."}],"pos":[28614,28721],"yaml":true},{"content":"<code>innerStream</code> is `null`.  \n  \n -or-  \n  \n <code>innerStream</code> is equal to <xref href=\"System.IO.Stream.Null\"></xref>.","nodes":[{"pos":[0,35],"content":"<ph id=\"ph1\">&lt;code&gt;innerStream&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>innerStream</code> is `null`."},{"pos":[42,46],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[53,133],"content":"<ph id=\"ph1\">&lt;code&gt;innerStream&lt;/code&gt;</ph> is equal to <ph id=\"ph2\">&lt;xref href=\"System.IO.Stream.Null\"&gt;&lt;/xref&gt;</ph>.","source":"<code>innerStream</code> is equal to <xref href=\"System.IO.Stream.Null\"></xref>."}],"pos":[28823,28965],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Net.Security.SslStream\"></xref> class using the specified <xref href=\"System.IO.Stream\"></xref>, stream closure behavior, certificate validation delegate and certificate selection delegate.","nodes":[{"pos":[0,242],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Net.Security.SslStream\"&gt;&lt;/xref&gt;</ph> class using the specified <ph id=\"ph2\">&lt;xref href=\"System.IO.Stream\"&gt;&lt;/xref&gt;</ph>, stream closure behavior, certificate validation delegate and certificate selection delegate.","source":"Initializes a new instance of the <xref href=\"System.Net.Security.SslStream\"></xref> class using the specified <xref href=\"System.IO.Stream\"></xref>, stream closure behavior, certificate validation delegate and certificate selection delegate."}],"pos":[30774,31017],"yaml":true},{"content":"When you specify `true` for the `leaveStreamOpen` parameter, closing the <xref:System.Net.Security.SslStream> has no effect on the `innerStream` stream; you must explicitly close `innerStream` when you no longer need it.  \n  \n The `userCertificateValidationCallback` delegate's `certificateErrors` argument contains any Windows error codes returned by the channel Security Support Provider Interface (SSPI). The return value of the method invoked by the `userCertificateValidationCallback` delegate determines whether authentication succeeds.  \n  \n The security protocol and cryptographic algorithms are already selected when the `userCertificateValidationCallback` delegate's method is invoked. You can use the method to determine whether the selected cryptographic algorithms and strengths are sufficient for your application. If not, the method should return `false` to prevent the <xref:System.Net.Security.SslStream> from being created.  \n  \n The `userCertificateSelectionCallback` delegate is useful when your application has multiple certificates and must dynamically choose a certificate. Certificates in the \"MY\" store are passed to the method invoked by the delegate.  \n  \n If a value is not specified in the configuration file for encryptionpolicy, the <xref:System.Net.Security.EncryptionPolicy> defaults to <xref:System.Net.Security.EncryptionPolicy?displayProperty=fullName> for the <xref:System.Net.Security.SslStream> instance that is constructed.  \n  \n The use of the Null cipher is required when the encryption policy is set to <xref:System.Net.Security.EncryptionPolicy?displayProperty=fullName>.  \n  \n> [!NOTE]\n>  The Framework caches SSL sessions as they are created and attempts to reuse a cached session for a new request, if possible. When attempting to reuse an SSL session, the Framework uses the first element of P:System.Net.HttpWebRequest.ClientCertificates (if there is one), or tries to reuse an anonymous sessions if P:System.Net.HttpWebRequest.ClientCertificates is empty.","nodes":[{"pos":[0,220],"content":"When you specify <ph id=\"ph1\">`true`</ph> for the <ph id=\"ph2\">`leaveStreamOpen`</ph> parameter, closing the <ph id=\"ph3\">&lt;xref:System.Net.Security.SslStream&gt;</ph> has no effect on the <ph id=\"ph4\">`innerStream`</ph> stream; you must explicitly close <ph id=\"ph5\">`innerStream`</ph> when you no longer need it.","source":"When you specify `true` for the `leaveStreamOpen` parameter, closing the <xref:System.Net.Security.SslStream> has no effect on the `innerStream` stream; you must explicitly close `innerStream` when you no longer need it."},{"pos":[227,542],"content":"The `userCertificateValidationCallback` delegate's `certificateErrors` argument contains any Windows error codes returned by the channel Security Support Provider Interface (SSPI). The return value of the method invoked by the `userCertificateValidationCallback` delegate determines whether authentication succeeds.","nodes":[{"content":"The <ph id=\"ph1\">`userCertificateValidationCallback`</ph> delegate's <ph id=\"ph2\">`certificateErrors`</ph> argument contains any Windows error codes returned by the channel Security Support Provider Interface (SSPI).","pos":[0,180],"source":"The `userCertificateValidationCallback` delegate's `certificateErrors` argument contains any Windows error codes returned by the channel Security Support Provider Interface (SSPI)."},{"content":"The return value of the method invoked by the <ph id=\"ph1\">`userCertificateValidationCallback`</ph> delegate determines whether authentication succeeds.","pos":[181,315],"source":" The return value of the method invoked by the `userCertificateValidationCallback` delegate determines whether authentication succeeds."}]},{"pos":[549,941],"content":"The security protocol and cryptographic algorithms are already selected when the `userCertificateValidationCallback` delegate's method is invoked. You can use the method to determine whether the selected cryptographic algorithms and strengths are sufficient for your application. If not, the method should return `false` to prevent the <xref:System.Net.Security.SslStream> from being created.","nodes":[{"content":"The security protocol and cryptographic algorithms are already selected when the <ph id=\"ph1\">`userCertificateValidationCallback`</ph> delegate's method is invoked.","pos":[0,146],"source":"The security protocol and cryptographic algorithms are already selected when the `userCertificateValidationCallback` delegate's method is invoked."},{"content":"You can use the method to determine whether the selected cryptographic algorithms and strengths are sufficient for your application.","pos":[147,279]},{"content":"If not, the method should return <ph id=\"ph1\">`false`</ph> to prevent the <ph id=\"ph2\">&lt;xref:System.Net.Security.SslStream&gt;</ph> from being created.","pos":[280,392],"source":" If not, the method should return `false` to prevent the <xref:System.Net.Security.SslStream> from being created."}]},{"pos":[948,1177],"content":"The `userCertificateSelectionCallback` delegate is useful when your application has multiple certificates and must dynamically choose a certificate. Certificates in the \"MY\" store are passed to the method invoked by the delegate.","nodes":[{"content":"The <ph id=\"ph1\">`userCertificateSelectionCallback`</ph> delegate is useful when your application has multiple certificates and must dynamically choose a certificate.","pos":[0,148],"source":"The `userCertificateSelectionCallback` delegate is useful when your application has multiple certificates and must dynamically choose a certificate."},{"content":"Certificates in the \"MY\" store are passed to the method invoked by the delegate.","pos":[149,229]}]},{"pos":[1184,1463],"content":"If a value is not specified in the configuration file for encryptionpolicy, the <xref:System.Net.Security.EncryptionPolicy> defaults to <xref:System.Net.Security.EncryptionPolicy?displayProperty=fullName> for the <xref:System.Net.Security.SslStream> instance that is constructed.","nodes":[{"content":"If a value is not specified in the configuration file for encryptionpolicy, the <ph id=\"ph1\">&lt;xref:System.Net.Security.EncryptionPolicy&gt;</ph> defaults to <ph id=\"ph2\">&lt;xref:System.Net.Security.EncryptionPolicy?displayProperty=fullName&gt;</ph> for the <ph id=\"ph3\">&lt;xref:System.Net.Security.SslStream&gt;</ph> instance that is constructed.","pos":[0,279],"source":"If a value is not specified in the configuration file for encryptionpolicy, the <xref:System.Net.Security.EncryptionPolicy> defaults to <xref:System.Net.Security.EncryptionPolicy?displayProperty=fullName> for the <xref:System.Net.Security.SslStream> instance that is constructed."}]},{"pos":[1470,1615],"content":"The use of the Null cipher is required when the encryption policy is set to <xref:System.Net.Security.EncryptionPolicy?displayProperty=fullName>.","nodes":[{"content":"The use of the Null cipher is required when the encryption policy is set to <ph id=\"ph1\">&lt;xref:System.Net.Security.EncryptionPolicy?displayProperty=fullName&gt;</ph>.","pos":[0,145],"source":"The use of the Null cipher is required when the encryption policy is set to <xref:System.Net.Security.EncryptionPolicy?displayProperty=fullName>."}]},{"pos":[1623,2005],"content":"[!NOTE]\n The Framework caches SSL sessions as they are created and attempts to reuse a cached session for a new request, if possible. When attempting to reuse an SSL session, the Framework uses the first element of P:System.Net.HttpWebRequest.ClientCertificates (if there is one), or tries to reuse an anonymous sessions if P:System.Net.HttpWebRequest.ClientCertificates is empty.","leadings":["","> "],"nodes":[{"content":" The Framework caches SSL sessions as they are created and attempts to reuse a cached session for a new request, if possible. When attempting to reuse an SSL session, the Framework uses the first element of P:System.Net.HttpWebRequest.ClientCertificates (if there is one), or tries to reuse an anonymous sessions if P:System.Net.HttpWebRequest.ClientCertificates is empty.","pos":[8,380],"nodes":[{"content":"The Framework caches SSL sessions as they are created and attempts to reuse a cached session for a new request, if possible.","pos":[1,125]},{"content":"When attempting to reuse an SSL session, the Framework uses the first element of P:System.Net.HttpWebRequest.ClientCertificates (if there is one), or tries to reuse an anonymous sessions if P:System.Net.HttpWebRequest.ClientCertificates is empty.","pos":[126,372]}]}]}],"pos":[31028,33051],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.IO.Stream\"></xref> object used by the <xref href=\"System.Net.Security.SslStream\"></xref> for sending and receiving data.","nodes":[{"pos":[0,141],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.IO.Stream\"&gt;&lt;/xref&gt;</ph> object used by the <ph id=\"ph2\">&lt;xref href=\"System.Net.Security.SslStream\"&gt;&lt;/xref&gt;</ph> for sending and receiving data.","source":"A <xref href=\"System.IO.Stream\"></xref> object used by the <xref href=\"System.Net.Security.SslStream\"></xref> for sending and receiving data."}],"pos":[33856,33998],"yaml":true},{"content":"A Boolean value that indicates the closure behavior of the <xref href=\"System.IO.Stream\"></xref> object used by the <xref href=\"System.Net.Security.SslStream\"></xref> for sending and receiving data. This parameter indicates if the inner stream is left open.","nodes":[{"pos":[0,257],"content":"A Boolean value that indicates the closure behavior of the <xref href=\"System.IO.Stream\"></xref> object used by the <xref href=\"System.Net.Security.SslStream\"></xref> for sending and receiving data. This parameter indicates if the inner stream is left open.","nodes":[{"content":"A Boolean value that indicates the closure behavior of the <ph id=\"ph1\">&lt;xref href=\"System.IO.Stream\"&gt;&lt;/xref&gt;</ph> object used by the <ph id=\"ph2\">&lt;xref href=\"System.Net.Security.SslStream\"&gt;&lt;/xref&gt;</ph> for sending and receiving data.","pos":[0,198],"source":"A Boolean value that indicates the closure behavior of the <xref href=\"System.IO.Stream\"></xref> object used by the <xref href=\"System.Net.Security.SslStream\"></xref> for sending and receiving data."},{"content":"This parameter indicates if the inner stream is left open.","pos":[199,257]}]}],"pos":[34075,34333],"yaml":true},{"content":"A <xref href=\"System.Net.Security.RemoteCertificateValidationCallback\"></xref> delegate responsible for validating the certificate supplied by the remote party.","nodes":[{"pos":[0,160],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Net.Security.RemoteCertificateValidationCallback\"&gt;&lt;/xref&gt;</ph> delegate responsible for validating the certificate supplied by the remote party.","source":"A <xref href=\"System.Net.Security.RemoteCertificateValidationCallback\"></xref> delegate responsible for validating the certificate supplied by the remote party."}],"pos":[34464,34625],"yaml":true},{"content":"A <xref href=\"System.Net.Security.LocalCertificateSelectionCallback\"></xref> delegate responsible for selecting the certificate used for authentication.","nodes":[{"pos":[0,152],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Net.Security.LocalCertificateSelectionCallback\"&gt;&lt;/xref&gt;</ph> delegate responsible for selecting the certificate used for authentication.","source":"A <xref href=\"System.Net.Security.LocalCertificateSelectionCallback\"></xref> delegate responsible for selecting the certificate used for authentication."}],"pos":[34753,34906],"yaml":true},{"content":"<code>innerStream</code> is not readable.  \n  \n -or-  \n  \n <code>innerStream</code> is not writable.","nodes":[{"pos":[0,41],"content":"<ph id=\"ph1\">&lt;code&gt;innerStream&lt;/code&gt;</ph> is not readable.","source":"<code>innerStream</code> is not readable."},{"pos":[48,52],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[59,100],"content":"<ph id=\"ph1\">&lt;code&gt;innerStream&lt;/code&gt;</ph> is not writable.","source":"<code>innerStream</code> is not writable."}],"pos":[35063,35170],"yaml":true},{"content":"<code>innerStream</code> is `null`.  \n  \n -or-  \n  \n <code>innerStream</code> is equal to <xref href=\"System.IO.Stream.Null\"></xref>.","nodes":[{"pos":[0,35],"content":"<ph id=\"ph1\">&lt;code&gt;innerStream&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>innerStream</code> is `null`."},{"pos":[42,46],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[53,133],"content":"<ph id=\"ph1\">&lt;code&gt;innerStream&lt;/code&gt;</ph> is equal to <ph id=\"ph2\">&lt;xref href=\"System.IO.Stream.Null\"&gt;&lt;/xref&gt;</ph>.","source":"<code>innerStream</code> is equal to <xref href=\"System.IO.Stream.Null\"></xref>."}],"pos":[35272,35414],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Net.Security.SslStream\"></xref> class using the specified <xref href=\"System.IO.Stream\"></xref>","nodes":[{"pos":[0,148],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Net.Security.SslStream\"&gt;&lt;/xref&gt;</ph> class using the specified <ph id=\"ph2\">&lt;xref href=\"System.IO.Stream\"&gt;&lt;/xref&gt;</ph>","source":"Initializes a new instance of the <xref href=\"System.Net.Security.SslStream\"></xref> class using the specified <xref href=\"System.IO.Stream\"></xref>"}],"pos":[37388,37537],"yaml":true},{"content":"The use of the Null cipher is required when the `encryptionPolicy` parameter is set to <xref:System.Net.Security.EncryptionPolicy?displayProperty=fullName>.","nodes":[{"pos":[0,156],"content":"The use of the Null cipher is required when the <ph id=\"ph1\">`encryptionPolicy`</ph> parameter is set to <ph id=\"ph2\">&lt;xref:System.Net.Security.EncryptionPolicy?displayProperty=fullName&gt;</ph>.","source":"The use of the Null cipher is required when the `encryptionPolicy` parameter is set to <xref:System.Net.Security.EncryptionPolicy?displayProperty=fullName>."}],"pos":[37548,37705],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.IO.Stream\"></xref> object used by the <xref href=\"System.Net.Security.SslStream\"></xref> for sending and receiving data.","nodes":[{"pos":[0,141],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.IO.Stream\"&gt;&lt;/xref&gt;</ph> object used by the <ph id=\"ph2\">&lt;xref href=\"System.Net.Security.SslStream\"&gt;&lt;/xref&gt;</ph> for sending and receiving data.","source":"A <xref href=\"System.IO.Stream\"></xref> object used by the <xref href=\"System.Net.Security.SslStream\"></xref> for sending and receiving data."}],"pos":[38195,38337],"yaml":true},{"content":"A Boolean value that indicates the closure behavior of the <xref href=\"System.IO.Stream\"></xref> object used by the <xref href=\"System.Net.Security.SslStream\"></xref> for sending and receiving data. This parameter indicates if the inner stream is left open.","nodes":[{"pos":[0,257],"content":"A Boolean value that indicates the closure behavior of the <xref href=\"System.IO.Stream\"></xref> object used by the <xref href=\"System.Net.Security.SslStream\"></xref> for sending and receiving data. This parameter indicates if the inner stream is left open.","nodes":[{"content":"A Boolean value that indicates the closure behavior of the <ph id=\"ph1\">&lt;xref href=\"System.IO.Stream\"&gt;&lt;/xref&gt;</ph> object used by the <ph id=\"ph2\">&lt;xref href=\"System.Net.Security.SslStream\"&gt;&lt;/xref&gt;</ph> for sending and receiving data.","pos":[0,198],"source":"A Boolean value that indicates the closure behavior of the <xref href=\"System.IO.Stream\"></xref> object used by the <xref href=\"System.Net.Security.SslStream\"></xref> for sending and receiving data."},{"content":"This parameter indicates if the inner stream is left open.","pos":[199,257]}]}],"pos":[38414,38672],"yaml":true},{"content":"A <xref href=\"System.Net.Security.RemoteCertificateValidationCallback\"></xref> delegate responsible for validating the certificate supplied by the remote party.","nodes":[{"pos":[0,160],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Net.Security.RemoteCertificateValidationCallback\"&gt;&lt;/xref&gt;</ph> delegate responsible for validating the certificate supplied by the remote party.","source":"A <xref href=\"System.Net.Security.RemoteCertificateValidationCallback\"></xref> delegate responsible for validating the certificate supplied by the remote party."}],"pos":[38803,38964],"yaml":true},{"content":"A <xref href=\"System.Net.Security.LocalCertificateSelectionCallback\"></xref> delegate responsible for selecting the certificate used for authentication.","nodes":[{"pos":[0,152],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Net.Security.LocalCertificateSelectionCallback\"&gt;&lt;/xref&gt;</ph> delegate responsible for selecting the certificate used for authentication.","source":"A <xref href=\"System.Net.Security.LocalCertificateSelectionCallback\"></xref> delegate responsible for selecting the certificate used for authentication."}],"pos":[39092,39245],"yaml":true},{"content":"The <xref href=\"System.Net.Security.EncryptionPolicy\"></xref> to use.","nodes":[{"pos":[0,69],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Net.Security.EncryptionPolicy\"&gt;&lt;/xref&gt;</ph> to use.","source":"The <xref href=\"System.Net.Security.EncryptionPolicy\"></xref> to use."}],"pos":[39340,39410],"yaml":true},{"content":"<code>innerStream</code> is not readable.  \n  \n -or-  \n  \n <code>innerStream</code> is not writable.  \n  \n -or-  \n  \n <code>encryptionPolicy</code> is not valid.","nodes":[{"pos":[0,41],"content":"<ph id=\"ph1\">&lt;code&gt;innerStream&lt;/code&gt;</ph> is not readable.","source":"<code>innerStream</code> is not readable."},{"pos":[48,52],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[59,100],"content":"<ph id=\"ph1\">&lt;code&gt;innerStream&lt;/code&gt;</ph> is not writable.","source":"<code>innerStream</code> is not writable."},{"pos":[107,111],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[118,161],"content":"<ph id=\"ph1\">&lt;code&gt;encryptionPolicy&lt;/code&gt;</ph> is not valid.","source":"<code>encryptionPolicy</code> is not valid."}],"pos":[39567,39739],"yaml":true},{"content":"<code>innerStream</code> is `null`.  \n  \n -or-  \n  \n <code>innerStream</code> is equal to <xref href=\"System.IO.Stream.Null\"></xref>.","nodes":[{"pos":[0,35],"content":"<ph id=\"ph1\">&lt;code&gt;innerStream&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>innerStream</code> is `null`."},{"pos":[42,46],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[53,133],"content":"<ph id=\"ph1\">&lt;code&gt;innerStream&lt;/code&gt;</ph> is equal to <ph id=\"ph2\">&lt;xref href=\"System.IO.Stream.Null\"&gt;&lt;/xref&gt;</ph>.","source":"<code>innerStream</code> is equal to <xref href=\"System.IO.Stream.Null\"></xref>."}],"pos":[39841,39983],"yaml":true},{"content":"Called by clients to authenticate the server and optionally the client in a client-server connection.","nodes":[{"pos":[0,101],"content":"Called by clients to authenticate the server and optionally the client in a client-server connection.","nodes":[{"content":"Called by clients to authenticate the server and optionally the client in a client-server connection.","pos":[0,101]}]}],"pos":[41282,41384],"yaml":true},{"content":"This method authenticates using <xref:System.Security.Authentication.SslProtocols.Default>. No client certificates are used in the authentication. The certificate revocation list is not checked during authentication. The value specified for `targetHost` must match the name on the server's certificate.  \n  \n When authentication succeeds, you must check the <xref:System.Net.Security.SslStream.IsEncrypted%2A> and <xref:System.Net.Security.SslStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.SslStream>. Check the <xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.  \n  \n If the authentication fails, you receive a <xref:System.Security.Authentication.AuthenticationException>, and this <xref:System.Net.Security.SslStream> is no longer useable. You should close this object and remove all references to it so that it can be collected by the garbage collector.","nodes":[{"pos":[0,302],"content":"This method authenticates using <xref:System.Security.Authentication.SslProtocols.Default>. No client certificates are used in the authentication. The certificate revocation list is not checked during authentication. The value specified for `targetHost` must match the name on the server's certificate.","nodes":[{"content":"This method authenticates using <ph id=\"ph1\">&lt;xref:System.Security.Authentication.SslProtocols.Default&gt;</ph>.","pos":[0,91],"source":"This method authenticates using <xref:System.Security.Authentication.SslProtocols.Default>."},{"content":"No client certificates are used in the authentication.","pos":[92,146]},{"content":"The certificate revocation list is not checked during authentication.","pos":[147,216]},{"content":"The value specified for <ph id=\"ph1\">`targetHost`</ph> must match the name on the server's certificate.","pos":[217,302],"source":" The value specified for `targetHost` must match the name on the server's certificate."}]},{"pos":[309,699],"content":"When authentication succeeds, you must check the <xref:System.Net.Security.SslStream.IsEncrypted%2A> and <xref:System.Net.Security.SslStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.SslStream>. Check the <xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.","nodes":[{"content":"When authentication succeeds, you must check the <xref:System.Net.Security.SslStream.IsEncrypted%2A> and <xref:System.Net.Security.SslStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.SslStream>. Check the <xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.","pos":[0,390],"nodes":[{"content":"When authentication succeeds, you must check the <ph id=\"ph1\">&lt;xref:System.Net.Security.SslStream.IsEncrypted%2A&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Net.Security.SslStream.IsSigned%2A&gt;</ph> properties to determine what security services are used by the <ph id=\"ph3\">&lt;xref:System.Net.Security.SslStream&gt;</ph>.","pos":[0,254],"source":"When authentication succeeds, you must check the <xref:System.Net.Security.SslStream.IsEncrypted%2A> and <xref:System.Net.Security.SslStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.SslStream>."},{"content":"Check the <ph id=\"ph1\">&lt;xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A&gt;</ph> property to determine whether mutual authentication occurred.","pos":[255,390],"source":" Check the <xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred."}]}]},{"pos":[706,994],"content":"If the authentication fails, you receive a <xref:System.Security.Authentication.AuthenticationException>, and this <xref:System.Net.Security.SslStream> is no longer useable. You should close this object and remove all references to it so that it can be collected by the garbage collector.","nodes":[{"content":"If the authentication fails, you receive a <xref:System.Security.Authentication.AuthenticationException>, and this <xref:System.Net.Security.SslStream> is no longer useable. You should close this object and remove all references to it so that it can be collected by the garbage collector.","pos":[0,288],"nodes":[{"content":"If the authentication fails, you receive a <ph id=\"ph1\">&lt;xref:System.Security.Authentication.AuthenticationException&gt;</ph>, and this <ph id=\"ph2\">&lt;xref:System.Net.Security.SslStream&gt;</ph> is no longer useable.","pos":[0,173],"source":"If the authentication fails, you receive a <xref:System.Security.Authentication.AuthenticationException>, and this <xref:System.Net.Security.SslStream> is no longer useable."},{"content":"You should close this object and remove all references to it so that it can be collected by the garbage collector.","pos":[174,288]}]}]}],"pos":[41395,42396],"yaml":true,"extradata":"MT"},{"content":"The name of the server that shares this <xref href=\"System.Net.Security.SslStream\"></xref>.","nodes":[{"pos":[0,91],"content":"The name of the server that shares this <ph id=\"ph1\">&lt;xref href=\"System.Net.Security.SslStream\"&gt;&lt;/xref&gt;</ph>.","source":"The name of the server that shares this <xref href=\"System.Net.Security.SslStream\"></xref>."}],"pos":[42563,42655],"yaml":true},{"content":"<code>targetHost</code> is `null`.","nodes":[{"pos":[0,34],"content":"<ph id=\"ph1\">&lt;code&gt;targetHost&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>targetHost</code> is `null`."}],"pos":[42835,42870],"yaml":true},{"content":"The authentication failed and left this object in an unusable state.","nodes":[{"pos":[0,68],"content":"The authentication failed and left this object in an unusable state.","nodes":[{"content":"The authentication failed and left this object in an unusable state.","pos":[0,68]}]}],"pos":[43024,43093],"yaml":true},{"content":"Authentication has already occurred.  \n  \n -or-  \n  \n Server authentication using this <xref href=\"System.Net.Security.SslStream\"></xref> was tried previously.  \n  \n -or-  \n  \n Authentication is already in progress.","nodes":[{"pos":[0,36],"content":"Authentication has already occurred.","nodes":[{"content":"Authentication has already occurred.","pos":[0,36]}]},{"pos":[43,47],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[54,159],"content":"Server authentication using this <ph id=\"ph1\">&lt;xref href=\"System.Net.Security.SslStream\"&gt;&lt;/xref&gt;</ph> was tried previously.","source":"Server authentication using this <xref href=\"System.Net.Security.SslStream\"></xref> was tried previously."},{"pos":[166,170],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[177,215],"content":"Authentication is already in progress.","nodes":[{"content":"Authentication is already in progress.","pos":[0,38]}]}],"pos":[43203,43431],"yaml":true},{"content":"This object has been closed.","nodes":[{"pos":[0,28],"content":"This object has been closed.","nodes":[{"content":"This object has been closed.","pos":[0,28]}]}],"pos":[43537,43566],"yaml":true},{"content":"Called by clients to authenticate the server and optionally the client in a client-server connection. The authentication process uses the specified certificate collection, and the system default SSL protocol.","nodes":[{"pos":[0,208],"content":"Called by clients to authenticate the server and optionally the client in a client-server connection. The authentication process uses the specified certificate collection, and the system default SSL protocol.","nodes":[{"content":"Called by clients to authenticate the server and optionally the client in a client-server connection. The authentication process uses the specified certificate collection, and the system default SSL protocol.","pos":[0,208],"nodes":[{"content":"Called by clients to authenticate the server and optionally the client in a client-server connection.","pos":[0,101]},{"content":"The authentication process uses the specified certificate collection, and the system default SSL protocol.","pos":[102,208]}]}]}],"pos":[45108,45317],"yaml":true},{"content":"When authentication succeeds, you must check the <xref:System.Net.Security.SslStream.IsEncrypted%2A> and <xref:System.Net.Security.SslStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.SslStream>. Check the <xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.  \n  \n If the authentication fails, you receive a <xref:System.Security.Authentication.AuthenticationException>, and this <xref:System.Net.Security.SslStream> is no longer useable. You should close this object and remove all references to it so that it can be collected by the garbage collector.  \n  \n> [!NOTE]\n>  Client certificates are not supported in the SSL version 2 protocol.","nodes":[{"pos":[0,390],"content":"When authentication succeeds, you must check the <xref:System.Net.Security.SslStream.IsEncrypted%2A> and <xref:System.Net.Security.SslStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.SslStream>. Check the <xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.","nodes":[{"content":"When authentication succeeds, you must check the <xref:System.Net.Security.SslStream.IsEncrypted%2A> and <xref:System.Net.Security.SslStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.SslStream>. Check the <xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.","pos":[0,390],"nodes":[{"content":"When authentication succeeds, you must check the <ph id=\"ph1\">&lt;xref:System.Net.Security.SslStream.IsEncrypted%2A&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Net.Security.SslStream.IsSigned%2A&gt;</ph> properties to determine what security services are used by the <ph id=\"ph3\">&lt;xref:System.Net.Security.SslStream&gt;</ph>.","pos":[0,254],"source":"When authentication succeeds, you must check the <xref:System.Net.Security.SslStream.IsEncrypted%2A> and <xref:System.Net.Security.SslStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.SslStream>."},{"content":"Check the <ph id=\"ph1\">&lt;xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A&gt;</ph> property to determine whether mutual authentication occurred.","pos":[255,390],"source":" Check the <xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred."}]}]},{"pos":[397,685],"content":"If the authentication fails, you receive a <xref:System.Security.Authentication.AuthenticationException>, and this <xref:System.Net.Security.SslStream> is no longer useable. You should close this object and remove all references to it so that it can be collected by the garbage collector.","nodes":[{"content":"If the authentication fails, you receive a <xref:System.Security.Authentication.AuthenticationException>, and this <xref:System.Net.Security.SslStream> is no longer useable. You should close this object and remove all references to it so that it can be collected by the garbage collector.","pos":[0,288],"nodes":[{"content":"If the authentication fails, you receive a <ph id=\"ph1\">&lt;xref:System.Security.Authentication.AuthenticationException&gt;</ph>, and this <ph id=\"ph2\">&lt;xref:System.Net.Security.SslStream&gt;</ph> is no longer useable.","pos":[0,173],"source":"If the authentication fails, you receive a <xref:System.Security.Authentication.AuthenticationException>, and this <xref:System.Net.Security.SslStream> is no longer useable."},{"content":"You should close this object and remove all references to it so that it can be collected by the garbage collector.","pos":[174,288]}]}]},{"pos":[693,772],"content":"[!NOTE]\n Client certificates are not supported in the SSL version 2 protocol.","leadings":["","> "],"nodes":[{"content":"Client certificates are not supported in the SSL version 2 protocol.","pos":[9,77]}]}],"pos":[45328,46108],"yaml":true,"extradata":"MT"},{"content":"The name of the server that will share this <xref href=\"System.Net.Security.SslStream\"></xref>.","nodes":[{"pos":[0,95],"content":"The name of the server that will share this <ph id=\"ph1\">&lt;xref href=\"System.Net.Security.SslStream\"&gt;&lt;/xref&gt;</ph>.","source":"The name of the server that will share this <xref href=\"System.Net.Security.SslStream\"></xref>."}],"pos":[46400,46496],"yaml":true},{"content":"The <xref href=\"System.Security.Cryptography.X509Certificates.X509CertificateCollection\"></xref> that contains client certificates.","nodes":[{"pos":[0,131],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.X509Certificates.X509CertificateCollection\"&gt;&lt;/xref&gt;</ph> that contains client certificates.","source":"The <xref href=\"System.Security.Cryptography.X509Certificates.X509CertificateCollection\"></xref> that contains client certificates."}],"pos":[46628,46760],"yaml":true},{"content":"A <xref href=\"System.Boolean\"></xref> value that specifies whether the certificate revocation list is checked during authentication.","nodes":[{"pos":[0,132],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Boolean\"&gt;&lt;/xref&gt;</ph> value that specifies whether the certificate revocation list is checked during authentication.","source":"A <xref href=\"System.Boolean\"></xref> value that specifies whether the certificate revocation list is checked during authentication."}],"pos":[46843,46976],"yaml":true},{"content":"Called by clients to authenticate the server and optionally the client in a client-server connection. The authentication process uses the specified certificate collection and SSL protocol.","nodes":[{"pos":[0,188],"content":"Called by clients to authenticate the server and optionally the client in a client-server connection. The authentication process uses the specified certificate collection and SSL protocol.","nodes":[{"content":"Called by clients to authenticate the server and optionally the client in a client-server connection. The authentication process uses the specified certificate collection and SSL protocol.","pos":[0,188],"nodes":[{"content":"Called by clients to authenticate the server and optionally the client in a client-server connection.","pos":[0,101]},{"content":"The authentication process uses the specified certificate collection and SSL protocol.","pos":[102,188]}]}]}],"pos":[48357,48546],"yaml":true},{"content":"When authentication succeeds, you must check the <xref:System.Net.Security.SslStream.IsEncrypted%2A> and <xref:System.Net.Security.SslStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.SslStream>. Check the <xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.  \n  \n If the authentication fails, you receive a <xref:System.Security.Authentication.AuthenticationException>, and this <xref:System.Net.Security.SslStream> is no longer useable. You should close this object and remove all references to it so that it can be collected by the garbage collector.  \n  \n> [!NOTE]\n>  Client certificates are not supported in the SSL version 2 protocol.","nodes":[{"pos":[0,390],"content":"When authentication succeeds, you must check the <xref:System.Net.Security.SslStream.IsEncrypted%2A> and <xref:System.Net.Security.SslStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.SslStream>. Check the <xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.","nodes":[{"content":"When authentication succeeds, you must check the <xref:System.Net.Security.SslStream.IsEncrypted%2A> and <xref:System.Net.Security.SslStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.SslStream>. Check the <xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.","pos":[0,390],"nodes":[{"content":"When authentication succeeds, you must check the <ph id=\"ph1\">&lt;xref:System.Net.Security.SslStream.IsEncrypted%2A&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Net.Security.SslStream.IsSigned%2A&gt;</ph> properties to determine what security services are used by the <ph id=\"ph3\">&lt;xref:System.Net.Security.SslStream&gt;</ph>.","pos":[0,254],"source":"When authentication succeeds, you must check the <xref:System.Net.Security.SslStream.IsEncrypted%2A> and <xref:System.Net.Security.SslStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.SslStream>."},{"content":"Check the <ph id=\"ph1\">&lt;xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A&gt;</ph> property to determine whether mutual authentication occurred.","pos":[255,390],"source":" Check the <xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred."}]}]},{"pos":[397,685],"content":"If the authentication fails, you receive a <xref:System.Security.Authentication.AuthenticationException>, and this <xref:System.Net.Security.SslStream> is no longer useable. You should close this object and remove all references to it so that it can be collected by the garbage collector.","nodes":[{"content":"If the authentication fails, you receive a <xref:System.Security.Authentication.AuthenticationException>, and this <xref:System.Net.Security.SslStream> is no longer useable. You should close this object and remove all references to it so that it can be collected by the garbage collector.","pos":[0,288],"nodes":[{"content":"If the authentication fails, you receive a <ph id=\"ph1\">&lt;xref:System.Security.Authentication.AuthenticationException&gt;</ph>, and this <ph id=\"ph2\">&lt;xref:System.Net.Security.SslStream&gt;</ph> is no longer useable.","pos":[0,173],"source":"If the authentication fails, you receive a <xref:System.Security.Authentication.AuthenticationException>, and this <xref:System.Net.Security.SslStream> is no longer useable."},{"content":"You should close this object and remove all references to it so that it can be collected by the garbage collector.","pos":[174,288]}]}]},{"pos":[693,772],"content":"[!NOTE]\n Client certificates are not supported in the SSL version 2 protocol.","leadings":["","> "],"nodes":[{"content":"Client certificates are not supported in the SSL version 2 protocol.","pos":[9,77]}]}],"pos":[48557,49337],"yaml":true,"extradata":"MT"},{"content":"The name of the server that will share this <xref href=\"System.Net.Security.SslStream\"></xref>.","nodes":[{"pos":[0,95],"content":"The name of the server that will share this <ph id=\"ph1\">&lt;xref href=\"System.Net.Security.SslStream\"&gt;&lt;/xref&gt;</ph>.","source":"The name of the server that will share this <xref href=\"System.Net.Security.SslStream\"></xref>."}],"pos":[49694,49790],"yaml":true},{"content":"The <xref href=\"System.Security.Cryptography.X509Certificates.X509CertificateCollection\"></xref> that contains client certificates.","nodes":[{"pos":[0,131],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.X509Certificates.X509CertificateCollection\"&gt;&lt;/xref&gt;</ph> that contains client certificates.","source":"The <xref href=\"System.Security.Cryptography.X509Certificates.X509CertificateCollection\"></xref> that contains client certificates."}],"pos":[49922,50054],"yaml":true},{"content":"The <xref href=\"System.Security.Authentication.SslProtocols\"></xref> value that represents the protocol used for authentication.","nodes":[{"pos":[0,128],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Security.Authentication.SslProtocols\"&gt;&lt;/xref&gt;</ph> value that represents the protocol used for authentication.","source":"The <xref href=\"System.Security.Authentication.SslProtocols\"></xref> value that represents the protocol used for authentication."}],"pos":[50159,50288],"yaml":true},{"content":"A <xref href=\"System.Boolean\"></xref> value that specifies whether the certificate revocation list is checked during authentication.","nodes":[{"pos":[0,132],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Boolean\"&gt;&lt;/xref&gt;</ph> value that specifies whether the certificate revocation list is checked during authentication.","source":"A <xref href=\"System.Boolean\"></xref> value that specifies whether the certificate revocation list is checked during authentication."}],"pos":[50371,50504],"yaml":true},{"content":"Called by clients to authenticate the server and optionally the client in a client-server connection as an asynchronous operation.","nodes":[{"pos":[0,130],"content":"Called by clients to authenticate the server and optionally the client in a client-server connection as an asynchronous operation.","nodes":[{"content":"Called by clients to authenticate the server and optionally the client in a client-server connection as an asynchronous operation.","pos":[0,130]}]}],"pos":[51804,51935],"yaml":true},{"content":"This method authenticates using <xref:System.Security.Authentication.SslProtocols.Default>. No client certificates are used in the authentication. The certificate revocation list is not checked during authentication. The value specified for `targetHost` must match the name on the server's certificate.  \n  \n When authentication succeeds, you must check the <xref:System.Net.Security.SslStream.IsEncrypted%2A> and <xref:System.Net.Security.SslStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.SslStream>. Check the <xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.  \n  \n If the authentication fails, you receive a <xref:System.Security.Authentication.AuthenticationException>, and this <xref:System.Net.Security.SslStream> is no longer useable. You should close this object and remove all references to it so that it can be collected by the garbage collector.","nodes":[{"pos":[0,302],"content":"This method authenticates using <xref:System.Security.Authentication.SslProtocols.Default>. No client certificates are used in the authentication. The certificate revocation list is not checked during authentication. The value specified for `targetHost` must match the name on the server's certificate.","nodes":[{"content":"This method authenticates using <ph id=\"ph1\">&lt;xref:System.Security.Authentication.SslProtocols.Default&gt;</ph>.","pos":[0,91],"source":"This method authenticates using <xref:System.Security.Authentication.SslProtocols.Default>."},{"content":"No client certificates are used in the authentication.","pos":[92,146]},{"content":"The certificate revocation list is not checked during authentication.","pos":[147,216]},{"content":"The value specified for <ph id=\"ph1\">`targetHost`</ph> must match the name on the server's certificate.","pos":[217,302],"source":" The value specified for `targetHost` must match the name on the server's certificate."}]},{"pos":[309,699],"content":"When authentication succeeds, you must check the <xref:System.Net.Security.SslStream.IsEncrypted%2A> and <xref:System.Net.Security.SslStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.SslStream>. Check the <xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.","nodes":[{"content":"When authentication succeeds, you must check the <xref:System.Net.Security.SslStream.IsEncrypted%2A> and <xref:System.Net.Security.SslStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.SslStream>. Check the <xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.","pos":[0,390],"nodes":[{"content":"When authentication succeeds, you must check the <ph id=\"ph1\">&lt;xref:System.Net.Security.SslStream.IsEncrypted%2A&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Net.Security.SslStream.IsSigned%2A&gt;</ph> properties to determine what security services are used by the <ph id=\"ph3\">&lt;xref:System.Net.Security.SslStream&gt;</ph>.","pos":[0,254],"source":"When authentication succeeds, you must check the <xref:System.Net.Security.SslStream.IsEncrypted%2A> and <xref:System.Net.Security.SslStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.SslStream>."},{"content":"Check the <ph id=\"ph1\">&lt;xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A&gt;</ph> property to determine whether mutual authentication occurred.","pos":[255,390],"source":" Check the <xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred."}]}]},{"pos":[706,994],"content":"If the authentication fails, you receive a <xref:System.Security.Authentication.AuthenticationException>, and this <xref:System.Net.Security.SslStream> is no longer useable. You should close this object and remove all references to it so that it can be collected by the garbage collector.","nodes":[{"content":"If the authentication fails, you receive a <xref:System.Security.Authentication.AuthenticationException>, and this <xref:System.Net.Security.SslStream> is no longer useable. You should close this object and remove all references to it so that it can be collected by the garbage collector.","pos":[0,288],"nodes":[{"content":"If the authentication fails, you receive a <ph id=\"ph1\">&lt;xref:System.Security.Authentication.AuthenticationException&gt;</ph>, and this <ph id=\"ph2\">&lt;xref:System.Net.Security.SslStream&gt;</ph> is no longer useable.","pos":[0,173],"source":"If the authentication fails, you receive a <xref:System.Security.Authentication.AuthenticationException>, and this <xref:System.Net.Security.SslStream> is no longer useable."},{"content":"You should close this object and remove all references to it so that it can be collected by the garbage collector.","pos":[174,288]}]}]}],"pos":[51946,52947],"yaml":true,"extradata":"MT"},{"content":"The name of the server that shares this <xref href=\"System.Net.Security.SslStream\"></xref>.","nodes":[{"pos":[0,91],"content":"The name of the server that shares this <ph id=\"ph1\">&lt;xref href=\"System.Net.Security.SslStream\"&gt;&lt;/xref&gt;</ph>.","source":"The name of the server that shares this <xref href=\"System.Net.Security.SslStream\"></xref>."}],"pos":[53142,53234],"yaml":true},{"content":"Returns <xref href=\"System.Threading.Tasks.Task\"></xref>  \n  \n The task object representing the asynchronous operation.","nodes":[{"pos":[0,56],"content":"Returns <ph id=\"ph1\">&lt;xref href=\"System.Threading.Tasks.Task\"&gt;&lt;/xref&gt;</ph>","source":"Returns <xref href=\"System.Threading.Tasks.Task\"></xref>"},{"pos":[63,119],"content":"The task object representing the asynchronous operation.","nodes":[{"content":"The task object representing the asynchronous operation.","pos":[0,56]}]}],"pos":[53305,53431],"yaml":true},{"content":"<code>targetHost</code> is `null`.","nodes":[{"pos":[0,34],"content":"<ph id=\"ph1\">&lt;code&gt;targetHost&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>targetHost</code> is `null`."}],"pos":[53616,53651],"yaml":true},{"content":"The authentication failed and left this object in an unusable state.","nodes":[{"pos":[0,68],"content":"The authentication failed and left this object in an unusable state.","nodes":[{"content":"The authentication failed and left this object in an unusable state.","pos":[0,68]}]}],"pos":[53805,53874],"yaml":true},{"content":"Authentication has already occurred.  \n  \n -or-  \n  \n Server authentication using this <xref href=\"System.Net.Security.SslStream\"></xref> was tried previously.  \n  \n -or-  \n  \n Authentication is already in progress.","nodes":[{"pos":[0,36],"content":"Authentication has already occurred.","nodes":[{"content":"Authentication has already occurred.","pos":[0,36]}]},{"pos":[43,47],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[54,159],"content":"Server authentication using this <ph id=\"ph1\">&lt;xref href=\"System.Net.Security.SslStream\"&gt;&lt;/xref&gt;</ph> was tried previously.","source":"Server authentication using this <xref href=\"System.Net.Security.SslStream\"></xref> was tried previously."},{"pos":[166,170],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[177,215],"content":"Authentication is already in progress.","nodes":[{"content":"Authentication is already in progress.","pos":[0,38]}]}],"pos":[53984,54212],"yaml":true},{"content":"This object has been closed.","nodes":[{"pos":[0,28],"content":"This object has been closed.","nodes":[{"content":"This object has been closed.","pos":[0,28]}]}],"pos":[54318,54347],"yaml":true},{"content":"Called by clients to authenticate the server and optionally the client in a client-server connection as an asynchronous operation. The authentication process uses the specified certificate collection and the system default SSL protocol.","nodes":[{"pos":[0,236],"content":"Called by clients to authenticate the server and optionally the client in a client-server connection as an asynchronous operation. The authentication process uses the specified certificate collection and the system default SSL protocol.","nodes":[{"content":"Called by clients to authenticate the server and optionally the client in a client-server connection as an asynchronous operation. The authentication process uses the specified certificate collection and the system default SSL protocol.","pos":[0,236],"nodes":[{"content":"Called by clients to authenticate the server and optionally the client in a client-server connection as an asynchronous operation.","pos":[0,130]},{"content":"The authentication process uses the specified certificate collection and the system default SSL protocol.","pos":[131,236]}]}]}],"pos":[55983,56220],"yaml":true},{"content":"When authentication succeeds, you must check the <xref:System.Net.Security.SslStream.IsEncrypted%2A> and <xref:System.Net.Security.SslStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.SslStream>. Check the <xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.  \n  \n If the authentication fails, you receive a <xref:System.Security.Authentication.AuthenticationException>, and this <xref:System.Net.Security.SslStream> is no longer useable. You should close this object and remove all references to it so that it can be collected by the garbage collector.  \n  \n> [!NOTE]\n>  Client certificates are not supported in the SSL version 2 protocol.","nodes":[{"pos":[0,390],"content":"When authentication succeeds, you must check the <xref:System.Net.Security.SslStream.IsEncrypted%2A> and <xref:System.Net.Security.SslStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.SslStream>. Check the <xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.","nodes":[{"content":"When authentication succeeds, you must check the <xref:System.Net.Security.SslStream.IsEncrypted%2A> and <xref:System.Net.Security.SslStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.SslStream>. Check the <xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.","pos":[0,390],"nodes":[{"content":"When authentication succeeds, you must check the <ph id=\"ph1\">&lt;xref:System.Net.Security.SslStream.IsEncrypted%2A&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Net.Security.SslStream.IsSigned%2A&gt;</ph> properties to determine what security services are used by the <ph id=\"ph3\">&lt;xref:System.Net.Security.SslStream&gt;</ph>.","pos":[0,254],"source":"When authentication succeeds, you must check the <xref:System.Net.Security.SslStream.IsEncrypted%2A> and <xref:System.Net.Security.SslStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.SslStream>."},{"content":"Check the <ph id=\"ph1\">&lt;xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A&gt;</ph> property to determine whether mutual authentication occurred.","pos":[255,390],"source":" Check the <xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred."}]}]},{"pos":[397,685],"content":"If the authentication fails, you receive a <xref:System.Security.Authentication.AuthenticationException>, and this <xref:System.Net.Security.SslStream> is no longer useable. You should close this object and remove all references to it so that it can be collected by the garbage collector.","nodes":[{"content":"If the authentication fails, you receive a <xref:System.Security.Authentication.AuthenticationException>, and this <xref:System.Net.Security.SslStream> is no longer useable. You should close this object and remove all references to it so that it can be collected by the garbage collector.","pos":[0,288],"nodes":[{"content":"If the authentication fails, you receive a <ph id=\"ph1\">&lt;xref:System.Security.Authentication.AuthenticationException&gt;</ph>, and this <ph id=\"ph2\">&lt;xref:System.Net.Security.SslStream&gt;</ph> is no longer useable.","pos":[0,173],"source":"If the authentication fails, you receive a <xref:System.Security.Authentication.AuthenticationException>, and this <xref:System.Net.Security.SslStream> is no longer useable."},{"content":"You should close this object and remove all references to it so that it can be collected by the garbage collector.","pos":[174,288]}]}]},{"pos":[693,772],"content":"[!NOTE]\n Client certificates are not supported in the SSL version 2 protocol.","leadings":["","> "],"nodes":[{"content":"Client certificates are not supported in the SSL version 2 protocol.","pos":[9,77]}]}],"pos":[56231,57011],"yaml":true,"extradata":"MT"},{"content":"The name of the server that will share this <xref href=\"System.Net.Security.SslStream\"></xref>.","nodes":[{"pos":[0,95],"content":"The name of the server that will share this <ph id=\"ph1\">&lt;xref href=\"System.Net.Security.SslStream\"&gt;&lt;/xref&gt;</ph>.","source":"The name of the server that will share this <xref href=\"System.Net.Security.SslStream\"></xref>."}],"pos":[57331,57427],"yaml":true},{"content":"The <xref href=\"System.Security.Cryptography.X509Certificates.X509CertificateCollection\"></xref> that contains client certificates.","nodes":[{"pos":[0,131],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.X509Certificates.X509CertificateCollection\"&gt;&lt;/xref&gt;</ph> that contains client certificates.","source":"The <xref href=\"System.Security.Cryptography.X509Certificates.X509CertificateCollection\"></xref> that contains client certificates."}],"pos":[57559,57691],"yaml":true},{"content":"A <xref href=\"System.Boolean\"></xref> value that specifies whether the certificate revocation list is checked during authentication.","nodes":[{"pos":[0,132],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Boolean\"&gt;&lt;/xref&gt;</ph> value that specifies whether the certificate revocation list is checked during authentication.","source":"A <xref href=\"System.Boolean\"></xref> value that specifies whether the certificate revocation list is checked during authentication."}],"pos":[57774,57907],"yaml":true},{"content":"The task object representing the asynchronous operation.","nodes":[{"pos":[0,56],"content":"The task object representing the asynchronous operation.","nodes":[{"content":"The task object representing the asynchronous operation.","pos":[0,56]}]}],"pos":[57978,58035],"yaml":true},{"content":"Called by clients to authenticate the server and optionally the client in a client-server connection as an asynchronous operation. The authentication process uses the specified certificate collection and SSL protocol.","nodes":[{"pos":[0,217],"content":"Called by clients to authenticate the server and optionally the client in a client-server connection as an asynchronous operation. The authentication process uses the specified certificate collection and SSL protocol.","nodes":[{"content":"Called by clients to authenticate the server and optionally the client in a client-server connection as an asynchronous operation. The authentication process uses the specified certificate collection and SSL protocol.","pos":[0,217],"nodes":[{"content":"Called by clients to authenticate the server and optionally the client in a client-server connection as an asynchronous operation.","pos":[0,130]},{"content":"The authentication process uses the specified certificate collection and SSL protocol.","pos":[131,217]}]}]}],"pos":[59451,59669],"yaml":true},{"content":"When authentication succeeds, you must check the <xref:System.Net.Security.SslStream.IsEncrypted%2A> and <xref:System.Net.Security.SslStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.SslStream>. Check the <xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.  \n  \n If the authentication fails, you receive a <xref:System.Security.Authentication.AuthenticationException>, and this <xref:System.Net.Security.SslStream> is no longer useable. You should close this object and remove all references to it so that it can be collected by the garbage collector.  \n  \n> [!NOTE]\n>  Client certificates are not supported in the SSL version 2 protocol.","nodes":[{"pos":[0,390],"content":"When authentication succeeds, you must check the <xref:System.Net.Security.SslStream.IsEncrypted%2A> and <xref:System.Net.Security.SslStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.SslStream>. Check the <xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.","nodes":[{"content":"When authentication succeeds, you must check the <xref:System.Net.Security.SslStream.IsEncrypted%2A> and <xref:System.Net.Security.SslStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.SslStream>. Check the <xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.","pos":[0,390],"nodes":[{"content":"When authentication succeeds, you must check the <ph id=\"ph1\">&lt;xref:System.Net.Security.SslStream.IsEncrypted%2A&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Net.Security.SslStream.IsSigned%2A&gt;</ph> properties to determine what security services are used by the <ph id=\"ph3\">&lt;xref:System.Net.Security.SslStream&gt;</ph>.","pos":[0,254],"source":"When authentication succeeds, you must check the <xref:System.Net.Security.SslStream.IsEncrypted%2A> and <xref:System.Net.Security.SslStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.SslStream>."},{"content":"Check the <ph id=\"ph1\">&lt;xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A&gt;</ph> property to determine whether mutual authentication occurred.","pos":[255,390],"source":" Check the <xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred."}]}]},{"pos":[397,685],"content":"If the authentication fails, you receive a <xref:System.Security.Authentication.AuthenticationException>, and this <xref:System.Net.Security.SslStream> is no longer useable. You should close this object and remove all references to it so that it can be collected by the garbage collector.","nodes":[{"content":"If the authentication fails, you receive a <xref:System.Security.Authentication.AuthenticationException>, and this <xref:System.Net.Security.SslStream> is no longer useable. You should close this object and remove all references to it so that it can be collected by the garbage collector.","pos":[0,288],"nodes":[{"content":"If the authentication fails, you receive a <ph id=\"ph1\">&lt;xref:System.Security.Authentication.AuthenticationException&gt;</ph>, and this <ph id=\"ph2\">&lt;xref:System.Net.Security.SslStream&gt;</ph> is no longer useable.","pos":[0,173],"source":"If the authentication fails, you receive a <xref:System.Security.Authentication.AuthenticationException>, and this <xref:System.Net.Security.SslStream> is no longer useable."},{"content":"You should close this object and remove all references to it so that it can be collected by the garbage collector.","pos":[174,288]}]}]},{"pos":[693,772],"content":"[!NOTE]\n Client certificates are not supported in the SSL version 2 protocol.","leadings":["","> "],"nodes":[{"content":"Client certificates are not supported in the SSL version 2 protocol.","pos":[9,77]}]}],"pos":[59680,60460],"yaml":true,"extradata":"MT"},{"content":"The name of the server that will share this <xref href=\"System.Net.Security.SslStream\"></xref>.","nodes":[{"pos":[0,95],"content":"The name of the server that will share this <ph id=\"ph1\">&lt;xref href=\"System.Net.Security.SslStream\"&gt;&lt;/xref&gt;</ph>.","source":"The name of the server that will share this <xref href=\"System.Net.Security.SslStream\"></xref>."}],"pos":[60845,60941],"yaml":true},{"content":"The <xref href=\"System.Security.Cryptography.X509Certificates.X509CertificateCollection\"></xref> that contains client certificates.","nodes":[{"pos":[0,131],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.X509Certificates.X509CertificateCollection\"&gt;&lt;/xref&gt;</ph> that contains client certificates.","source":"The <xref href=\"System.Security.Cryptography.X509Certificates.X509CertificateCollection\"></xref> that contains client certificates."}],"pos":[61073,61205],"yaml":true},{"content":"The <xref href=\"System.Security.Authentication.SslProtocols\"></xref> value that represents the protocol used for authentication.","nodes":[{"pos":[0,128],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Security.Authentication.SslProtocols\"&gt;&lt;/xref&gt;</ph> value that represents the protocol used for authentication.","source":"The <xref href=\"System.Security.Authentication.SslProtocols\"></xref> value that represents the protocol used for authentication."}],"pos":[61310,61439],"yaml":true},{"content":"A <xref href=\"System.Boolean\"></xref> value that specifies whether the certificate revocation list is checked during authentication.","nodes":[{"pos":[0,132],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Boolean\"&gt;&lt;/xref&gt;</ph> value that specifies whether the certificate revocation list is checked during authentication.","source":"A <xref href=\"System.Boolean\"></xref> value that specifies whether the certificate revocation list is checked during authentication."}],"pos":[61522,61655],"yaml":true},{"content":"Returns <xref href=\"System.Threading.Tasks.Task\"></xref>  \n  \n The task object representing the asynchronous operation.","nodes":[{"pos":[0,56],"content":"Returns <ph id=\"ph1\">&lt;xref href=\"System.Threading.Tasks.Task\"&gt;&lt;/xref&gt;</ph>","source":"Returns <xref href=\"System.Threading.Tasks.Task\"></xref>"},{"pos":[63,119],"content":"The task object representing the asynchronous operation.","nodes":[{"content":"The task object representing the asynchronous operation.","pos":[0,56]}]}],"pos":[61726,61852],"yaml":true},{"content":"Called by servers to authenticate the server and optionally the client in a client-server connection using the specified certificate.","nodes":[{"pos":[0,133],"content":"Called by servers to authenticate the server and optionally the client in a client-server connection using the specified certificate.","nodes":[{"content":"Called by servers to authenticate the server and optionally the client in a client-server connection using the specified certificate.","pos":[0,133]}]}],"pos":[63362,63496],"yaml":true},{"content":"This method authenticates using <xref:System.Security.Authentication.SslProtocols.Default>. The certificate revocation list is not checked during authentication. The client is not required to provide a certificate for authentication.  \n  \n This method blocks until the operation completes. To prevent blocking until the operation completes, use one of the <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A> method overloads.  \n  \n If the authentication fails, you receive a <xref:System.Security.Authentication.AuthenticationException>, and this <xref:System.Net.Security.SslStream> is no longer useable. You should close this object and remove all references to it so that it can be collected by the garbage collector.","nodes":[{"pos":[0,233],"content":"This method authenticates using <xref:System.Security.Authentication.SslProtocols.Default>. The certificate revocation list is not checked during authentication. The client is not required to provide a certificate for authentication.","nodes":[{"content":"This method authenticates using <xref:System.Security.Authentication.SslProtocols.Default>. The certificate revocation list is not checked during authentication. The client is not required to provide a certificate for authentication.","pos":[0,233],"nodes":[{"content":"This method authenticates using <ph id=\"ph1\">&lt;xref:System.Security.Authentication.SslProtocols.Default&gt;</ph>.","pos":[0,91],"source":"This method authenticates using <xref:System.Security.Authentication.SslProtocols.Default>."},{"content":"The certificate revocation list is not checked during authentication.","pos":[92,161]},{"content":"The client is not required to provide a certificate for authentication.","pos":[162,233]}]}]},{"pos":[240,439],"content":"This method blocks until the operation completes. To prevent blocking until the operation completes, use one of the <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A> method overloads.","nodes":[{"content":"This method blocks until the operation completes. To prevent blocking until the operation completes, use one of the <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A> method overloads.","pos":[0,199],"nodes":[{"content":"This method blocks until the operation completes.","pos":[0,49]},{"content":"To prevent blocking until the operation completes, use one of the <ph id=\"ph1\">&lt;xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A&gt;</ph> method overloads.","pos":[50,199],"source":" To prevent blocking until the operation completes, use one of the <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A> method overloads."}]}]},{"pos":[446,734],"content":"If the authentication fails, you receive a <xref:System.Security.Authentication.AuthenticationException>, and this <xref:System.Net.Security.SslStream> is no longer useable. You should close this object and remove all references to it so that it can be collected by the garbage collector.","nodes":[{"content":"If the authentication fails, you receive a <xref:System.Security.Authentication.AuthenticationException>, and this <xref:System.Net.Security.SslStream> is no longer useable. You should close this object and remove all references to it so that it can be collected by the garbage collector.","pos":[0,288],"nodes":[{"content":"If the authentication fails, you receive a <ph id=\"ph1\">&lt;xref:System.Security.Authentication.AuthenticationException&gt;</ph>, and this <ph id=\"ph2\">&lt;xref:System.Net.Security.SslStream&gt;</ph> is no longer useable.","pos":[0,173],"source":"If the authentication fails, you receive a <xref:System.Security.Authentication.AuthenticationException>, and this <xref:System.Net.Security.SslStream> is no longer useable."},{"content":"You should close this object and remove all references to it so that it can be collected by the garbage collector.","pos":[174,288]}]}]}],"pos":[63507,64248],"yaml":true,"extradata":"MT"},{"content":"The certificate used to authenticate the server.","nodes":[{"pos":[0,48],"content":"The certificate used to authenticate the server.","nodes":[{"content":"The certificate used to authenticate the server.","pos":[0,48]}]}],"pos":[64532,64581],"yaml":true},{"content":"<code>serverCertificate</code> is `null`.","nodes":[{"pos":[0,41],"content":"<ph id=\"ph1\">&lt;code&gt;serverCertificate&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>serverCertificate</code> is `null`."}],"pos":[64761,64803],"yaml":true},{"content":"The authentication failed and left this object in an unusable state.","nodes":[{"pos":[0,68],"content":"The authentication failed and left this object in an unusable state.","nodes":[{"content":"The authentication failed and left this object in an unusable state.","pos":[0,68]}]}],"pos":[64957,65026],"yaml":true},{"content":"Authentication has already occurred.  \n  \n -or-  \n  \n Client authentication using this <xref href=\"System.Net.Security.SslStream\"></xref> was tried previously.  \n  \n -or-  \n  \n Authentication is already in progress.","nodes":[{"pos":[0,36],"content":"Authentication has already occurred.","nodes":[{"content":"Authentication has already occurred.","pos":[0,36]}]},{"pos":[43,47],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[54,159],"content":"Client authentication using this <ph id=\"ph1\">&lt;xref href=\"System.Net.Security.SslStream\"&gt;&lt;/xref&gt;</ph> was tried previously.","source":"Client authentication using this <xref href=\"System.Net.Security.SslStream\"></xref> was tried previously."},{"pos":[166,170],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[177,215],"content":"Authentication is already in progress.","nodes":[{"content":"Authentication is already in progress.","pos":[0,38]}]}],"pos":[65136,65364],"yaml":true},{"content":"This object has been closed.","nodes":[{"pos":[0,28],"content":"This object has been closed.","nodes":[{"content":"This object has been closed.","pos":[0,28]}]}],"pos":[65470,65499],"yaml":true},{"content":"The <xref href=\"System.Net.Security.SslStream.AuthenticateAsServer*\"></xref> method is not supported on Windows 95, Windows 98, or Windows Millennium.","nodes":[{"pos":[0,150],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Net.Security.SslStream.AuthenticateAsServer*\"&gt;&lt;/xref&gt;</ph> method is not supported on Windows 95, Windows 98, or Windows Millennium.","source":"The <xref href=\"System.Net.Security.SslStream.AuthenticateAsServer*\"></xref> method is not supported on Windows 95, Windows 98, or Windows Millennium."}],"pos":[65617,65768],"yaml":true},{"content":"Called by servers to authenticate the server and optionally the client in a client-server connection using the specified certificates and requirements, and using the sytem default security protocol.","nodes":[{"pos":[0,198],"content":"Called by servers to authenticate the server and optionally the client in a client-server connection using the specified certificates and requirements, and using the sytem default security protocol.","nodes":[{"content":"Called by servers to authenticate the server and optionally the client in a client-server connection using the specified certificates and requirements, and using the sytem default security protocol.","pos":[0,198]}]}],"pos":[67256,67455],"yaml":true},{"content":"This method blocks until the operation completes. To prevent blocking until the operation completes, use one of the <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A> method overloads.  \n  \n If the authentication fails, you receive a <xref:System.Security.Authentication.AuthenticationException>, and this <xref:System.Net.Security.SslStream> is no longer useable. You should close this object and remove all references to it so that it can be collected by the garbage collector.","nodes":[{"pos":[0,199],"content":"This method blocks until the operation completes. To prevent blocking until the operation completes, use one of the <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A> method overloads.","nodes":[{"content":"This method blocks until the operation completes. To prevent blocking until the operation completes, use one of the <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A> method overloads.","pos":[0,199],"nodes":[{"content":"This method blocks until the operation completes.","pos":[0,49]},{"content":"To prevent blocking until the operation completes, use one of the <ph id=\"ph1\">&lt;xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A&gt;</ph> method overloads.","pos":[50,199],"source":" To prevent blocking until the operation completes, use one of the <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A> method overloads."}]}]},{"pos":[206,494],"content":"If the authentication fails, you receive a <xref:System.Security.Authentication.AuthenticationException>, and this <xref:System.Net.Security.SslStream> is no longer useable. You should close this object and remove all references to it so that it can be collected by the garbage collector.","nodes":[{"content":"If the authentication fails, you receive a <xref:System.Security.Authentication.AuthenticationException>, and this <xref:System.Net.Security.SslStream> is no longer useable. You should close this object and remove all references to it so that it can be collected by the garbage collector.","pos":[0,288],"nodes":[{"content":"If the authentication fails, you receive a <ph id=\"ph1\">&lt;xref:System.Security.Authentication.AuthenticationException&gt;</ph>, and this <ph id=\"ph2\">&lt;xref:System.Net.Security.SslStream&gt;</ph> is no longer useable.","pos":[0,173],"source":"If the authentication fails, you receive a <xref:System.Security.Authentication.AuthenticationException>, and this <xref:System.Net.Security.SslStream> is no longer useable."},{"content":"You should close this object and remove all references to it so that it can be collected by the garbage collector.","pos":[174,288]}]}]}],"pos":[67466,67965],"yaml":true,"extradata":"MT"},{"content":"The X509Certificate used to authenticate the server.","nodes":[{"pos":[0,52],"content":"The X509Certificate used to authenticate the server.","nodes":[{"content":"The X509Certificate used to authenticate the server.","pos":[0,52]}]}],"pos":[68314,68367],"yaml":true},{"content":"A <xref href=\"System.Boolean\"></xref> value that specifies whether the client is asked for a certificate for authentication. Note that this is only a request -- if no certificate is provided, the server still accepts the connection request.","nodes":[{"pos":[0,240],"content":"A <xref href=\"System.Boolean\"></xref> value that specifies whether the client is asked for a certificate for authentication. Note that this is only a request -- if no certificate is provided, the server still accepts the connection request.","nodes":[{"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Boolean\"&gt;&lt;/xref&gt;</ph> value that specifies whether the client is asked for a certificate for authentication.","pos":[0,124],"source":"A <xref href=\"System.Boolean\"></xref> value that specifies whether the client is asked for a certificate for authentication."},{"content":"Note that this is only a request -- if no certificate is provided, the server still accepts the connection request.","pos":[125,240]}]}],"pos":[68449,68690],"yaml":true},{"content":"A <xref href=\"System.Boolean\"></xref> value that specifies whether the certificate revocation list is checked during authentication.","nodes":[{"pos":[0,132],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Boolean\"&gt;&lt;/xref&gt;</ph> value that specifies whether the certificate revocation list is checked during authentication.","source":"A <xref href=\"System.Boolean\"></xref> value that specifies whether the certificate revocation list is checked during authentication."}],"pos":[68773,68906],"yaml":true},{"content":"<code>serverCertificate</code> is `null`.","nodes":[{"pos":[0,41],"content":"<ph id=\"ph1\">&lt;code&gt;serverCertificate&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>serverCertificate</code> is `null`."}],"pos":[69086,69128],"yaml":true},{"content":"The authentication failed and left this object in an unusable state.","nodes":[{"pos":[0,68],"content":"The authentication failed and left this object in an unusable state.","nodes":[{"content":"The authentication failed and left this object in an unusable state.","pos":[0,68]}]}],"pos":[69282,69351],"yaml":true},{"content":"Authentication has already occurred.  \n  \n -or-  \n  \n Client authentication using this <xref href=\"System.Net.Security.SslStream\"></xref> was tried previously.  \n  \n -or-  \n  \n Authentication is already in progress.","nodes":[{"pos":[0,36],"content":"Authentication has already occurred.","nodes":[{"content":"Authentication has already occurred.","pos":[0,36]}]},{"pos":[43,47],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[54,159],"content":"Client authentication using this <ph id=\"ph1\">&lt;xref href=\"System.Net.Security.SslStream\"&gt;&lt;/xref&gt;</ph> was tried previously.","source":"Client authentication using this <xref href=\"System.Net.Security.SslStream\"></xref> was tried previously."},{"pos":[166,170],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[177,215],"content":"Authentication is already in progress.","nodes":[{"content":"Authentication is already in progress.","pos":[0,38]}]}],"pos":[69461,69689],"yaml":true},{"content":"This object has been closed.","nodes":[{"pos":[0,28],"content":"This object has been closed.","nodes":[{"content":"This object has been closed.","pos":[0,28]}]}],"pos":[69795,69824],"yaml":true},{"content":"The <xref href=\"System.Net.Security.SslStream.AuthenticateAsServer*\"></xref> method is not supported on Windows 95, Windows 98, or Windows Millennium.","nodes":[{"pos":[0,150],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Net.Security.SslStream.AuthenticateAsServer*\"&gt;&lt;/xref&gt;</ph> method is not supported on Windows 95, Windows 98, or Windows Millennium.","source":"The <xref href=\"System.Net.Security.SslStream.AuthenticateAsServer*\"></xref> method is not supported on Windows 95, Windows 98, or Windows Millennium."}],"pos":[69942,70093],"yaml":true},{"content":"Called by servers to authenticate the server and optionally the client in a client-server connection using the specified certificates, requirements and security protocol.","nodes":[{"pos":[0,170],"content":"Called by servers to authenticate the server and optionally the client in a client-server connection using the specified certificates, requirements and security protocol.","nodes":[{"content":"Called by servers to authenticate the server and optionally the client in a client-server connection using the specified certificates, requirements and security protocol.","pos":[0,170]}]}],"pos":[71339,71510],"yaml":true},{"content":"This method blocks until the operation completes. To prevent blocking until the operation completes, use one of the <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A> method overloads.  \n  \n If the authentication fails, you receive a <xref:System.Security.Authentication.AuthenticationException>, and this <xref:System.Net.Security.SslStream> is no longer useable. You should close this object and remove all references to it so that it can be collected by the garbage collector.","nodes":[{"pos":[0,199],"content":"This method blocks until the operation completes. To prevent blocking until the operation completes, use one of the <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A> method overloads.","nodes":[{"content":"This method blocks until the operation completes. To prevent blocking until the operation completes, use one of the <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A> method overloads.","pos":[0,199],"nodes":[{"content":"This method blocks until the operation completes.","pos":[0,49]},{"content":"To prevent blocking until the operation completes, use one of the <ph id=\"ph1\">&lt;xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A&gt;</ph> method overloads.","pos":[50,199],"source":" To prevent blocking until the operation completes, use one of the <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A> method overloads."}]}]},{"pos":[206,494],"content":"If the authentication fails, you receive a <xref:System.Security.Authentication.AuthenticationException>, and this <xref:System.Net.Security.SslStream> is no longer useable. You should close this object and remove all references to it so that it can be collected by the garbage collector.","nodes":[{"content":"If the authentication fails, you receive a <xref:System.Security.Authentication.AuthenticationException>, and this <xref:System.Net.Security.SslStream> is no longer useable. You should close this object and remove all references to it so that it can be collected by the garbage collector.","pos":[0,288],"nodes":[{"content":"If the authentication fails, you receive a <ph id=\"ph1\">&lt;xref:System.Security.Authentication.AuthenticationException&gt;</ph>, and this <ph id=\"ph2\">&lt;xref:System.Net.Security.SslStream&gt;</ph> is no longer useable.","pos":[0,173],"source":"If the authentication fails, you receive a <xref:System.Security.Authentication.AuthenticationException>, and this <xref:System.Net.Security.SslStream> is no longer useable."},{"content":"You should close this object and remove all references to it so that it can be collected by the garbage collector.","pos":[174,288]}]}]}],"pos":[71521,72020],"yaml":true,"extradata":"MT"},{"content":"The X509Certificate used to authenticate the server.","nodes":[{"pos":[0,52],"content":"The X509Certificate used to authenticate the server.","nodes":[{"content":"The X509Certificate used to authenticate the server.","pos":[0,52]}]}],"pos":[72434,72487],"yaml":true},{"content":"A <xref href=\"System.Boolean\"></xref> value that specifies whether the client is asked for a certificate for authentication. Note that this is only a request -- if no certificate is provided, the server still accepts the connection request.","nodes":[{"pos":[0,240],"content":"A <xref href=\"System.Boolean\"></xref> value that specifies whether the client is asked for a certificate for authentication. Note that this is only a request -- if no certificate is provided, the server still accepts the connection request.","nodes":[{"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Boolean\"&gt;&lt;/xref&gt;</ph> value that specifies whether the client is asked for a certificate for authentication.","pos":[0,124],"source":"A <xref href=\"System.Boolean\"></xref> value that specifies whether the client is asked for a certificate for authentication."},{"content":"Note that this is only a request -- if no certificate is provided, the server still accepts the connection request.","pos":[125,240]}]}],"pos":[72569,72810],"yaml":true},{"content":"The <xref href=\"System.Security.Authentication.SslProtocols\"></xref> value that represents the protocol used for authentication.","nodes":[{"pos":[0,128],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Security.Authentication.SslProtocols\"&gt;&lt;/xref&gt;</ph> value that represents the protocol used for authentication.","source":"The <xref href=\"System.Security.Authentication.SslProtocols\"></xref> value that represents the protocol used for authentication."}],"pos":[72915,73044],"yaml":true},{"content":"A <xref href=\"System.Boolean\"></xref> value that specifies whether the certificate revocation list is checked during authentication.","nodes":[{"pos":[0,132],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Boolean\"&gt;&lt;/xref&gt;</ph> value that specifies whether the certificate revocation list is checked during authentication.","source":"A <xref href=\"System.Boolean\"></xref> value that specifies whether the certificate revocation list is checked during authentication."}],"pos":[73127,73260],"yaml":true},{"content":"<code>serverCertificate</code> is `null`.","nodes":[{"pos":[0,41],"content":"<ph id=\"ph1\">&lt;code&gt;serverCertificate&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>serverCertificate</code> is `null`."}],"pos":[73440,73482],"yaml":true},{"content":"<code>enabledSslProtocols</code> is not a valid <xref href=\"System.Security.Authentication.SslProtocols\"></xref> value.","nodes":[{"pos":[0,119],"content":"<ph id=\"ph1\">&lt;code&gt;enabledSslProtocols&lt;/code&gt;</ph> is not a valid <ph id=\"ph2\">&lt;xref href=\"System.Security.Authentication.SslProtocols\"&gt;&lt;/xref&gt;</ph> value.","source":"<code>enabledSslProtocols</code> is not a valid <xref href=\"System.Security.Authentication.SslProtocols\"></xref> value."}],"pos":[73576,73696],"yaml":true},{"content":"The authentication failed and left this object in an unusable state.","nodes":[{"pos":[0,68],"content":"The authentication failed and left this object in an unusable state.","nodes":[{"content":"The authentication failed and left this object in an unusable state.","pos":[0,68]}]}],"pos":[73850,73919],"yaml":true},{"content":"Authentication has already occurred.  \n  \n -or-  \n  \n Client authentication using this <xref href=\"System.Net.Security.SslStream\"></xref> was tried previously.  \n  \n -or-  \n  \n Authentication is already in progress.","nodes":[{"pos":[0,36],"content":"Authentication has already occurred.","nodes":[{"content":"Authentication has already occurred.","pos":[0,36]}]},{"pos":[43,47],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[54,159],"content":"Client authentication using this <ph id=\"ph1\">&lt;xref href=\"System.Net.Security.SslStream\"&gt;&lt;/xref&gt;</ph> was tried previously.","source":"Client authentication using this <xref href=\"System.Net.Security.SslStream\"></xref> was tried previously."},{"pos":[166,170],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[177,215],"content":"Authentication is already in progress.","nodes":[{"content":"Authentication is already in progress.","pos":[0,38]}]}],"pos":[74029,74257],"yaml":true},{"content":"This object has been closed.","nodes":[{"pos":[0,28],"content":"This object has been closed.","nodes":[{"content":"This object has been closed.","pos":[0,28]}]}],"pos":[74363,74392],"yaml":true},{"content":"The <xref href=\"System.Net.Security.SslStream.AuthenticateAsServer*\"></xref> method is not supported on Windows 95, Windows 98, or Windows Millennium.","nodes":[{"pos":[0,150],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Net.Security.SslStream.AuthenticateAsServer*\"&gt;&lt;/xref&gt;</ph> method is not supported on Windows 95, Windows 98, or Windows Millennium.","source":"The <xref href=\"System.Net.Security.SslStream.AuthenticateAsServer*\"></xref> method is not supported on Windows 95, Windows 98, or Windows Millennium."}],"pos":[74510,74661],"yaml":true},{"content":"Called by servers to authenticate the server and optionally the client in a client-server connection using the specified certificates, requirements and security protocol as an asynchronous operation.","nodes":[{"pos":[0,199],"content":"Called by servers to authenticate the server and optionally the client in a client-server connection using the specified certificates, requirements and security protocol as an asynchronous operation.","nodes":[{"content":"Called by servers to authenticate the server and optionally the client in a client-server connection using the specified certificates, requirements and security protocol as an asynchronous operation.","pos":[0,199]}]}],"pos":[76369,76569],"yaml":true},{"content":"If the authentication fails, you receive a <xref:System.Security.Authentication.AuthenticationException>, and this <xref:System.Net.Security.SslStream> is no longer useable. You should close this object and remove all references to it so that it can be collected by the garbage collector.","nodes":[{"pos":[0,288],"content":"If the authentication fails, you receive a <xref:System.Security.Authentication.AuthenticationException>, and this <xref:System.Net.Security.SslStream> is no longer useable. You should close this object and remove all references to it so that it can be collected by the garbage collector.","nodes":[{"content":"If the authentication fails, you receive a <xref:System.Security.Authentication.AuthenticationException>, and this <xref:System.Net.Security.SslStream> is no longer useable. You should close this object and remove all references to it so that it can be collected by the garbage collector.","pos":[0,288],"nodes":[{"content":"If the authentication fails, you receive a <ph id=\"ph1\">&lt;xref:System.Security.Authentication.AuthenticationException&gt;</ph>, and this <ph id=\"ph2\">&lt;xref:System.Net.Security.SslStream&gt;</ph> is no longer useable.","pos":[0,173],"source":"If the authentication fails, you receive a <xref:System.Security.Authentication.AuthenticationException>, and this <xref:System.Net.Security.SslStream> is no longer useable."},{"content":"You should close this object and remove all references to it so that it can be collected by the garbage collector.","pos":[174,288]}]}]}],"pos":[76580,76869],"yaml":true,"extradata":"MT"},{"content":"The X509Certificate used to authenticate the server.","nodes":[{"pos":[0,52],"content":"The X509Certificate used to authenticate the server.","nodes":[{"content":"The X509Certificate used to authenticate the server.","pos":[0,52]}]}],"pos":[77311,77364],"yaml":true},{"content":"A <xref href=\"System.Boolean\"></xref> value that specifies whether the client is asked for a certificate for authentication. Note that this is only a request -- if no certificate is provided, the server still accepts the connection request.","nodes":[{"pos":[0,240],"content":"A <xref href=\"System.Boolean\"></xref> value that specifies whether the client is asked for a certificate for authentication. Note that this is only a request -- if no certificate is provided, the server still accepts the connection request.","nodes":[{"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Boolean\"&gt;&lt;/xref&gt;</ph> value that specifies whether the client is asked for a certificate for authentication.","pos":[0,124],"source":"A <xref href=\"System.Boolean\"></xref> value that specifies whether the client is asked for a certificate for authentication."},{"content":"Note that this is only a request -- if no certificate is provided, the server still accepts the connection request.","pos":[125,240]}]}],"pos":[77446,77687],"yaml":true},{"content":"The <xref href=\"System.Security.Authentication.SslProtocols\"></xref> value that represents the protocol used for authentication.","nodes":[{"pos":[0,128],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Security.Authentication.SslProtocols\"&gt;&lt;/xref&gt;</ph> value that represents the protocol used for authentication.","source":"The <xref href=\"System.Security.Authentication.SslProtocols\"></xref> value that represents the protocol used for authentication."}],"pos":[77792,77921],"yaml":true},{"content":"A <xref href=\"System.Boolean\"></xref> value that specifies whether the certificate revocation list is checked during authentication.","nodes":[{"pos":[0,132],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Boolean\"&gt;&lt;/xref&gt;</ph> value that specifies whether the certificate revocation list is checked during authentication.","source":"A <xref href=\"System.Boolean\"></xref> value that specifies whether the certificate revocation list is checked during authentication."}],"pos":[78004,78137],"yaml":true},{"content":"Returns <xref href=\"System.Threading.Tasks.Task\"></xref>  \n  \n The task object representing the asynchronous operation.","nodes":[{"pos":[0,56],"content":"Returns <ph id=\"ph1\">&lt;xref href=\"System.Threading.Tasks.Task\"&gt;&lt;/xref&gt;</ph>","source":"Returns <xref href=\"System.Threading.Tasks.Task\"></xref>"},{"pos":[63,119],"content":"The task object representing the asynchronous operation.","nodes":[{"content":"The task object representing the asynchronous operation.","pos":[0,56]}]}],"pos":[78208,78334],"yaml":true},{"content":"Called by servers to authenticate the server and optionally the client in a client-server connection using the specified certificate as an asynchronous operation.","nodes":[{"pos":[0,162],"content":"Called by servers to authenticate the server and optionally the client in a client-server connection using the specified certificate as an asynchronous operation.","nodes":[{"content":"Called by servers to authenticate the server and optionally the client in a client-server connection using the specified certificate as an asynchronous operation.","pos":[0,162]}]}],"pos":[79874,80037],"yaml":true},{"content":"This method authenticates using <xref:System.Security.Authentication.SslProtocols.Default>. The certificate revocation list is not checked during authentication. The client is not required to provide a certificate for authentication.  \n  \n If the authentication fails, you receive a <xref:System.Security.Authentication.AuthenticationException>, and this <xref:System.Net.Security.SslStream> is no longer useable. You should close this object and remove all references to it so that it can be collected by the garbage collector.","nodes":[{"pos":[0,233],"content":"This method authenticates using <xref:System.Security.Authentication.SslProtocols.Default>. The certificate revocation list is not checked during authentication. The client is not required to provide a certificate for authentication.","nodes":[{"content":"This method authenticates using <xref:System.Security.Authentication.SslProtocols.Default>. The certificate revocation list is not checked during authentication. The client is not required to provide a certificate for authentication.","pos":[0,233],"nodes":[{"content":"This method authenticates using <ph id=\"ph1\">&lt;xref:System.Security.Authentication.SslProtocols.Default&gt;</ph>.","pos":[0,91],"source":"This method authenticates using <xref:System.Security.Authentication.SslProtocols.Default>."},{"content":"The certificate revocation list is not checked during authentication.","pos":[92,161]},{"content":"The client is not required to provide a certificate for authentication.","pos":[162,233]}]}]},{"pos":[240,528],"content":"If the authentication fails, you receive a <xref:System.Security.Authentication.AuthenticationException>, and this <xref:System.Net.Security.SslStream> is no longer useable. You should close this object and remove all references to it so that it can be collected by the garbage collector.","nodes":[{"content":"If the authentication fails, you receive a <xref:System.Security.Authentication.AuthenticationException>, and this <xref:System.Net.Security.SslStream> is no longer useable. You should close this object and remove all references to it so that it can be collected by the garbage collector.","pos":[0,288],"nodes":[{"content":"If the authentication fails, you receive a <ph id=\"ph1\">&lt;xref:System.Security.Authentication.AuthenticationException&gt;</ph>, and this <ph id=\"ph2\">&lt;xref:System.Net.Security.SslStream&gt;</ph> is no longer useable.","pos":[0,173],"source":"If the authentication fails, you receive a <xref:System.Security.Authentication.AuthenticationException>, and this <xref:System.Net.Security.SslStream> is no longer useable."},{"content":"You should close this object and remove all references to it so that it can be collected by the garbage collector.","pos":[174,288]}]}]}],"pos":[80048,80581],"yaml":true,"extradata":"MT"},{"content":"The certificate used to authenticate the server.","nodes":[{"pos":[0,48],"content":"The certificate used to authenticate the server.","nodes":[{"content":"The certificate used to authenticate the server.","pos":[0,48]}]}],"pos":[80893,80942],"yaml":true},{"content":"Returns <xref href=\"System.Threading.Tasks.Task\"></xref>  \n  \n The task object representing the asynchronous operation.","nodes":[{"pos":[0,56],"content":"Returns <ph id=\"ph1\">&lt;xref href=\"System.Threading.Tasks.Task\"&gt;&lt;/xref&gt;</ph>","source":"Returns <xref href=\"System.Threading.Tasks.Task\"></xref>"},{"pos":[63,119],"content":"The task object representing the asynchronous operation.","nodes":[{"content":"The task object representing the asynchronous operation.","pos":[0,56]}]}],"pos":[81013,81139],"yaml":true},{"content":"<code>serverCertificate</code> is `null`.","nodes":[{"pos":[0,41],"content":"<ph id=\"ph1\">&lt;code&gt;serverCertificate&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>serverCertificate</code> is `null`."}],"pos":[81324,81366],"yaml":true},{"content":"The authentication failed and left this object in an unusable state.","nodes":[{"pos":[0,68],"content":"The authentication failed and left this object in an unusable state.","nodes":[{"content":"The authentication failed and left this object in an unusable state.","pos":[0,68]}]}],"pos":[81520,81589],"yaml":true},{"content":"Authentication has already occurred.  \n  \n -or-  \n  \n Client authentication using this <xref href=\"System.Net.Security.SslStream\"></xref> was tried previously.  \n  \n -or-  \n  \n Authentication is already in progress.","nodes":[{"pos":[0,36],"content":"Authentication has already occurred.","nodes":[{"content":"Authentication has already occurred.","pos":[0,36]}]},{"pos":[43,47],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[54,159],"content":"Client authentication using this <ph id=\"ph1\">&lt;xref href=\"System.Net.Security.SslStream\"&gt;&lt;/xref&gt;</ph> was tried previously.","source":"Client authentication using this <xref href=\"System.Net.Security.SslStream\"></xref> was tried previously."},{"pos":[166,170],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[177,215],"content":"Authentication is already in progress.","nodes":[{"content":"Authentication is already in progress.","pos":[0,38]}]}],"pos":[81699,81927],"yaml":true},{"content":"This object has been closed.","nodes":[{"pos":[0,28],"content":"This object has been closed.","nodes":[{"content":"This object has been closed.","pos":[0,28]}]}],"pos":[82033,82062],"yaml":true},{"content":"The <xref href=\"System.Net.Security.SslStream.AuthenticateAsServerAsync*\"></xref> method is not supported on Windows 95, Windows 98, or Windows Millennium.","nodes":[{"pos":[0,155],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Net.Security.SslStream.AuthenticateAsServerAsync*\"&gt;&lt;/xref&gt;</ph> method is not supported on Windows 95, Windows 98, or Windows Millennium.","source":"The <xref href=\"System.Net.Security.SslStream.AuthenticateAsServerAsync*\"></xref> method is not supported on Windows 95, Windows 98, or Windows Millennium."}],"pos":[82180,82336],"yaml":true},{"content":"Called by servers to authenticate the server and optionally the client in a client-server connection using the specified certificates, requirements and security protocol as an asynchronous operation.","nodes":[{"pos":[0,199],"content":"Called by servers to authenticate the server and optionally the client in a client-server connection using the specified certificates, requirements and security protocol as an asynchronous operation.","nodes":[{"content":"Called by servers to authenticate the server and optionally the client in a client-server connection using the specified certificates, requirements and security protocol as an asynchronous operation.","pos":[0,199]}]}],"pos":[83918,84118],"yaml":true},{"content":"If the authentication fails, you receive a <xref:System.Security.Authentication.AuthenticationException>, and this <xref:System.Net.Security.SslStream> is no longer useable. You should close this object and remove all references to it so that it can be collected by the garbage collector.","nodes":[{"pos":[0,288],"content":"If the authentication fails, you receive a <xref:System.Security.Authentication.AuthenticationException>, and this <xref:System.Net.Security.SslStream> is no longer useable. You should close this object and remove all references to it so that it can be collected by the garbage collector.","nodes":[{"content":"If the authentication fails, you receive a <xref:System.Security.Authentication.AuthenticationException>, and this <xref:System.Net.Security.SslStream> is no longer useable. You should close this object and remove all references to it so that it can be collected by the garbage collector.","pos":[0,288],"nodes":[{"content":"If the authentication fails, you receive a <ph id=\"ph1\">&lt;xref:System.Security.Authentication.AuthenticationException&gt;</ph>, and this <ph id=\"ph2\">&lt;xref:System.Net.Security.SslStream&gt;</ph> is no longer useable.","pos":[0,173],"source":"If the authentication fails, you receive a <xref:System.Security.Authentication.AuthenticationException>, and this <xref:System.Net.Security.SslStream> is no longer useable."},{"content":"You should close this object and remove all references to it so that it can be collected by the garbage collector.","pos":[174,288]}]}]}],"pos":[84129,84418],"yaml":true,"extradata":"MT"},{"content":"The X509Certificate used to authenticate the server.","nodes":[{"pos":[0,52],"content":"The X509Certificate used to authenticate the server.","nodes":[{"content":"The X509Certificate used to authenticate the server.","pos":[0,52]}]}],"pos":[84795,84848],"yaml":true},{"content":"A <xref href=\"System.Boolean\"></xref> value that specifies whether the client is asked for a certificate for authentication. Note that this is only a request -- if no certificate is provided, the server still accepts the connection request.","nodes":[{"pos":[0,240],"content":"A <xref href=\"System.Boolean\"></xref> value that specifies whether the client is asked for a certificate for authentication. Note that this is only a request -- if no certificate is provided, the server still accepts the connection request.","nodes":[{"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Boolean\"&gt;&lt;/xref&gt;</ph> value that specifies whether the client is asked for a certificate for authentication.","pos":[0,124],"source":"A <xref href=\"System.Boolean\"></xref> value that specifies whether the client is asked for a certificate for authentication."},{"content":"Note that this is only a request -- if no certificate is provided, the server still accepts the connection request.","pos":[125,240]}]}],"pos":[84930,85171],"yaml":true},{"content":"A <xref href=\"System.Boolean\"></xref> value that specifies whether the certificate revocation list is checked during authentication.","nodes":[{"pos":[0,132],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Boolean\"&gt;&lt;/xref&gt;</ph> value that specifies whether the certificate revocation list is checked during authentication.","source":"A <xref href=\"System.Boolean\"></xref> value that specifies whether the certificate revocation list is checked during authentication."}],"pos":[85254,85387],"yaml":true},{"content":"The task object representing the asynchronous operation.","nodes":[{"pos":[0,56],"content":"The task object representing the asynchronous operation.","nodes":[{"content":"The task object representing the asynchronous operation.","pos":[0,56]}]}],"pos":[85458,85515],"yaml":true},{"content":"Called by clients to begin an asynchronous operation to authenticate the server and optionally the client.","nodes":[{"pos":[0,106],"content":"Called by clients to begin an asynchronous operation to authenticate the server and optionally the client.","nodes":[{"content":"Called by clients to begin an asynchronous operation to authenticate the server and optionally the client.","pos":[0,106]}]}],"pos":[86562,86669],"yaml":true},{"content":"This method authenticates using <xref:System.Security.Authentication.SslProtocols.Default>. No client certificates are used in the authentication. The certificate revocation list is not checked during authentication.  \n  \n The value specified for `targetHost` must match the name on the server's certificate.  \n  \n The asynchronous authentication operation must be completed by calling the <xref:System.Net.Security.SslStream.EndAuthenticateAsClient%2A> method. Typically, the method is invoked by the `asyncCallback` delegate.  \n  \n This method does not block while the operation completes. To block until the operation completes, use one of the <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A> method overloads.  \n  \n For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)  \n  \n If you receive a <xref:System.Security.Authentication.AuthenticationException>, this <xref:System.Net.Security.SslStream> is no longer useable. You should close this object and remove all references to it so that it can be collected by the garbage collector.","nodes":[{"pos":[0,216],"content":"This method authenticates using <xref:System.Security.Authentication.SslProtocols.Default>. No client certificates are used in the authentication. The certificate revocation list is not checked during authentication.","nodes":[{"content":"This method authenticates using <xref:System.Security.Authentication.SslProtocols.Default>. No client certificates are used in the authentication. The certificate revocation list is not checked during authentication.","pos":[0,216],"nodes":[{"content":"This method authenticates using <ph id=\"ph1\">&lt;xref:System.Security.Authentication.SslProtocols.Default&gt;</ph>.","pos":[0,91],"source":"This method authenticates using <xref:System.Security.Authentication.SslProtocols.Default>."},{"content":"No client certificates are used in the authentication.","pos":[92,146]},{"content":"The certificate revocation list is not checked during authentication.","pos":[147,216]}]}]},{"pos":[223,308],"content":"The value specified for <ph id=\"ph1\">`targetHost`</ph> must match the name on the server's certificate.","source":"The value specified for `targetHost` must match the name on the server's certificate."},{"pos":[315,527],"content":"The asynchronous authentication operation must be completed by calling the <xref:System.Net.Security.SslStream.EndAuthenticateAsClient%2A> method. Typically, the method is invoked by the `asyncCallback` delegate.","nodes":[{"content":"The asynchronous authentication operation must be completed by calling the <ph id=\"ph1\">&lt;xref:System.Net.Security.SslStream.EndAuthenticateAsClient%2A&gt;</ph> method.","pos":[0,146],"source":"The asynchronous authentication operation must be completed by calling the <xref:System.Net.Security.SslStream.EndAuthenticateAsClient%2A> method."},{"content":"Typically, the method is invoked by the <ph id=\"ph1\">`asyncCallback`</ph> delegate.","pos":[147,212],"source":" Typically, the method is invoked by the `asyncCallback` delegate."}]},{"pos":[534,725],"content":"This method does not block while the operation completes. To block until the operation completes, use one of the <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A> method overloads.","nodes":[{"content":"This method does not block while the operation completes. To block until the operation completes, use one of the <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A> method overloads.","pos":[0,191],"nodes":[{"content":"This method does not block while the operation completes.","pos":[0,57]},{"content":"To block until the operation completes, use one of the <ph id=\"ph1\">&lt;xref:System.Net.Security.SslStream.AuthenticateAsClient%2A&gt;</ph> method overloads.","pos":[58,191],"source":" To block until the operation completes, use one of the <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A> method overloads."}]}]},{"pos":[732,950],"content":"For detailed information about using the asynchronous programming model, see <bpt id=\"p1\">[</bpt>Calling Synchronous Methods Asynchronously<ept id=\"p1\">](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</ept>","source":"For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)"},{"pos":[957,1215],"content":"If you receive a <xref:System.Security.Authentication.AuthenticationException>, this <xref:System.Net.Security.SslStream> is no longer useable. You should close this object and remove all references to it so that it can be collected by the garbage collector.","nodes":[{"content":"If you receive a <xref:System.Security.Authentication.AuthenticationException>, this <xref:System.Net.Security.SslStream> is no longer useable. You should close this object and remove all references to it so that it can be collected by the garbage collector.","pos":[0,258],"nodes":[{"content":"If you receive a <ph id=\"ph1\">&lt;xref:System.Security.Authentication.AuthenticationException&gt;</ph>, this <ph id=\"ph2\">&lt;xref:System.Net.Security.SslStream&gt;</ph> is no longer useable.","pos":[0,143],"source":"If you receive a <xref:System.Security.Authentication.AuthenticationException>, this <xref:System.Net.Security.SslStream> is no longer useable."},{"content":"You should close this object and remove all references to it so that it can be collected by the garbage collector.","pos":[144,258]}]}]}],"pos":[86680,87908],"yaml":true,"extradata":"MT"},{"content":"The name of the server that shares this <xref href=\"System.Net.Security.SslStream\"></xref>.","nodes":[{"pos":[0,91],"content":"The name of the server that shares this <ph id=\"ph1\">&lt;xref href=\"System.Net.Security.SslStream\"&gt;&lt;/xref&gt;</ph>.","source":"The name of the server that shares this <xref href=\"System.Net.Security.SslStream\"></xref>."}],"pos":[88136,88228],"yaml":true},{"content":"An <xref href=\"System.AsyncCallback\"></xref> delegate that references the method to invoke when the authentication is complete.","nodes":[{"pos":[0,127],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.AsyncCallback\"&gt;&lt;/xref&gt;</ph> delegate that references the method to invoke when the authentication is complete.","source":"An <xref href=\"System.AsyncCallback\"></xref> delegate that references the method to invoke when the authentication is complete."}],"pos":[88304,88432],"yaml":true},{"content":"A user-defined object that contains information about the operation. This object is passed to the <code>asyncCallback</code> delegate when the operation completes.","nodes":[{"pos":[0,163],"content":"A user-defined object that contains information about the operation. This object is passed to the <code>asyncCallback</code> delegate when the operation completes.","nodes":[{"content":"A user-defined object that contains information about the operation.","pos":[0,68]},{"content":"This object is passed to the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">asyncCallback</ph><ept id=\"p1\">&lt;/code&gt;</ept> delegate when the operation completes.","pos":[69,163],"source":" This object is passed to the <code>asyncCallback</code> delegate when the operation completes."}]}],"pos":[88498,88662],"yaml":true},{"content":"An <xref href=\"System.IAsyncResult\"></xref> object that indicates the status of the asynchronous operation.","nodes":[{"pos":[0,107],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.IAsyncResult\"&gt;&lt;/xref&gt;</ph> object that indicates the status of the asynchronous operation.","source":"An <xref href=\"System.IAsyncResult\"></xref> object that indicates the status of the asynchronous operation."}],"pos":[88725,88833],"yaml":true},{"content":"<code>targetHost</code> is `null`.","nodes":[{"pos":[0,34],"content":"<ph id=\"ph1\">&lt;code&gt;targetHost&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>targetHost</code> is `null`."}],"pos":[89018,89053],"yaml":true},{"content":"The authentication failed and left this object in an unusable state.","nodes":[{"pos":[0,68],"content":"The authentication failed and left this object in an unusable state.","nodes":[{"content":"The authentication failed and left this object in an unusable state.","pos":[0,68]}]}],"pos":[89207,89276],"yaml":true},{"content":"Authentication has already occurred.  \n  \n -or-  \n  \n Server authentication using this <xref href=\"System.Net.Security.SslStream\"></xref> was tried previously.  \n  \n -or-  \n  \n Authentication is already in progress.","nodes":[{"pos":[0,36],"content":"Authentication has already occurred.","nodes":[{"content":"Authentication has already occurred.","pos":[0,36]}]},{"pos":[43,47],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[54,159],"content":"Server authentication using this <ph id=\"ph1\">&lt;xref href=\"System.Net.Security.SslStream\"&gt;&lt;/xref&gt;</ph> was tried previously.","source":"Server authentication using this <xref href=\"System.Net.Security.SslStream\"></xref> was tried previously."},{"pos":[166,170],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[177,215],"content":"Authentication is already in progress.","nodes":[{"content":"Authentication is already in progress.","pos":[0,38]}]}],"pos":[89386,89614],"yaml":true},{"content":"This object has been closed.","nodes":[{"pos":[0,28],"content":"This object has been closed.","nodes":[{"content":"This object has been closed.","pos":[0,28]}]}],"pos":[89720,89749],"yaml":true},{"content":"Called by clients to begin an asynchronous operation to authenticate the server and optionally the client using the specified certificates and the system default security protocol.","nodes":[{"pos":[0,180],"content":"Called by clients to begin an asynchronous operation to authenticate the server and optionally the client using the specified certificates and the system default security protocol.","nodes":[{"content":"Called by clients to begin an asynchronous operation to authenticate the server and optionally the client using the specified certificates and the system default security protocol.","pos":[0,180]}]}],"pos":[91495,91676],"yaml":true},{"content":"The value specified for `targetHost` must match the name on the server's certificate.  \n  \n The asynchronous authentication operation must be completed by calling the <xref:System.Net.Security.SslStream.EndAuthenticateAsClient%2A> method. Typically, the method is invoked by the `asyncCallback` delegate.  \n  \n This method does not block while the operation completes. To block until the operation completes, use one of the <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A> method overloads.  \n  \n For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)  \n  \n If you receive a <xref:System.Security.Authentication.AuthenticationException>, this <xref:System.Net.Security.SslStream> is no longer useable. You should close this object and remove all references to it so that it can be collected by the garbage collector.  \n  \n> [!NOTE]\n>  Client certificates are not supported in the SSL version 2 protocol.","nodes":[{"pos":[0,85],"content":"The value specified for <ph id=\"ph1\">`targetHost`</ph> must match the name on the server's certificate.","source":"The value specified for `targetHost` must match the name on the server's certificate."},{"pos":[92,304],"content":"The asynchronous authentication operation must be completed by calling the <xref:System.Net.Security.SslStream.EndAuthenticateAsClient%2A> method. Typically, the method is invoked by the `asyncCallback` delegate.","nodes":[{"content":"The asynchronous authentication operation must be completed by calling the <ph id=\"ph1\">&lt;xref:System.Net.Security.SslStream.EndAuthenticateAsClient%2A&gt;</ph> method.","pos":[0,146],"source":"The asynchronous authentication operation must be completed by calling the <xref:System.Net.Security.SslStream.EndAuthenticateAsClient%2A> method."},{"content":"Typically, the method is invoked by the <ph id=\"ph1\">`asyncCallback`</ph> delegate.","pos":[147,212],"source":" Typically, the method is invoked by the `asyncCallback` delegate."}]},{"pos":[311,502],"content":"This method does not block while the operation completes. To block until the operation completes, use one of the <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A> method overloads.","nodes":[{"content":"This method does not block while the operation completes. To block until the operation completes, use one of the <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A> method overloads.","pos":[0,191],"nodes":[{"content":"This method does not block while the operation completes.","pos":[0,57]},{"content":"To block until the operation completes, use one of the <ph id=\"ph1\">&lt;xref:System.Net.Security.SslStream.AuthenticateAsClient%2A&gt;</ph> method overloads.","pos":[58,191],"source":" To block until the operation completes, use one of the <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A> method overloads."}]}]},{"pos":[509,727],"content":"For detailed information about using the asynchronous programming model, see <bpt id=\"p1\">[</bpt>Calling Synchronous Methods Asynchronously<ept id=\"p1\">](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</ept>","source":"For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)"},{"pos":[734,992],"content":"If you receive a <xref:System.Security.Authentication.AuthenticationException>, this <xref:System.Net.Security.SslStream> is no longer useable. You should close this object and remove all references to it so that it can be collected by the garbage collector.","nodes":[{"content":"If you receive a <xref:System.Security.Authentication.AuthenticationException>, this <xref:System.Net.Security.SslStream> is no longer useable. You should close this object and remove all references to it so that it can be collected by the garbage collector.","pos":[0,258],"nodes":[{"content":"If you receive a <ph id=\"ph1\">&lt;xref:System.Security.Authentication.AuthenticationException&gt;</ph>, this <ph id=\"ph2\">&lt;xref:System.Net.Security.SslStream&gt;</ph> is no longer useable.","pos":[0,143],"source":"If you receive a <xref:System.Security.Authentication.AuthenticationException>, this <xref:System.Net.Security.SslStream> is no longer useable."},{"content":"You should close this object and remove all references to it so that it can be collected by the garbage collector.","pos":[144,258]}]}]},{"pos":[1000,1079],"content":"[!NOTE]\n Client certificates are not supported in the SSL version 2 protocol.","leadings":["","> "],"nodes":[{"content":"Client certificates are not supported in the SSL version 2 protocol.","pos":[9,77]}]}],"pos":[91687,92780],"yaml":true,"extradata":"MT"},{"content":"The name of the server that shares this <xref href=\"System.Net.Security.SslStream\"></xref>.","nodes":[{"pos":[0,91],"content":"The name of the server that shares this <ph id=\"ph1\">&lt;xref href=\"System.Net.Security.SslStream\"&gt;&lt;/xref&gt;</ph>.","source":"The name of the server that shares this <xref href=\"System.Net.Security.SslStream\"></xref>."}],"pos":[93133,93225],"yaml":true},{"content":"The <xref href=\"System.Security.Cryptography.X509Certificates.X509CertificateCollection\"></xref> containing client certificates.","nodes":[{"pos":[0,128],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.X509Certificates.X509CertificateCollection\"&gt;&lt;/xref&gt;</ph> containing client certificates.","source":"The <xref href=\"System.Security.Cryptography.X509Certificates.X509CertificateCollection\"></xref> containing client certificates."}],"pos":[93357,93486],"yaml":true},{"content":"A <xref href=\"System.Boolean\"></xref> value that specifies whether the certificate revocation list is checked during authentication.","nodes":[{"pos":[0,132],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Boolean\"&gt;&lt;/xref&gt;</ph> value that specifies whether the certificate revocation list is checked during authentication.","source":"A <xref href=\"System.Boolean\"></xref> value that specifies whether the certificate revocation list is checked during authentication."}],"pos":[93569,93702],"yaml":true},{"content":"An <xref href=\"System.AsyncCallback\"></xref> delegate that references the method to invoke when the authentication is complete.","nodes":[{"pos":[0,127],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.AsyncCallback\"&gt;&lt;/xref&gt;</ph> delegate that references the method to invoke when the authentication is complete.","source":"An <xref href=\"System.AsyncCallback\"></xref> delegate that references the method to invoke when the authentication is complete."}],"pos":[93778,93906],"yaml":true},{"content":"A user-defined object that contains information about the operation. This object is passed to the <code>asyncCallback</code> delegate when the operation completes.","nodes":[{"pos":[0,163],"content":"A user-defined object that contains information about the operation. This object is passed to the <code>asyncCallback</code> delegate when the operation completes.","nodes":[{"content":"A user-defined object that contains information about the operation.","pos":[0,68]},{"content":"This object is passed to the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">asyncCallback</ph><ept id=\"p1\">&lt;/code&gt;</ept> delegate when the operation completes.","pos":[69,163],"source":" This object is passed to the <code>asyncCallback</code> delegate when the operation completes."}]}],"pos":[93972,94136],"yaml":true},{"content":"An <xref href=\"System.IAsyncResult\"></xref> object that indicates the status of the asynchronous operation.","nodes":[{"pos":[0,107],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.IAsyncResult\"&gt;&lt;/xref&gt;</ph> object that indicates the status of the asynchronous operation.","source":"An <xref href=\"System.IAsyncResult\"></xref> object that indicates the status of the asynchronous operation."}],"pos":[94199,94307],"yaml":true},{"content":"<code>targetHost</code> is `null`.","nodes":[{"pos":[0,34],"content":"<ph id=\"ph1\">&lt;code&gt;targetHost&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>targetHost</code> is `null`."}],"pos":[94492,94527],"yaml":true},{"content":"The authentication failed and left this object in an unusable state.","nodes":[{"pos":[0,68],"content":"The authentication failed and left this object in an unusable state.","nodes":[{"content":"The authentication failed and left this object in an unusable state.","pos":[0,68]}]}],"pos":[94681,94750],"yaml":true},{"content":"Authentication has already occurred.  \n  \n -or-  \n  \n Server authentication using this <xref href=\"System.Net.Security.SslStream\"></xref> was tried previously.  \n  \n -or-  \n  \n Authentication is already in progress.","nodes":[{"pos":[0,36],"content":"Authentication has already occurred.","nodes":[{"content":"Authentication has already occurred.","pos":[0,36]}]},{"pos":[43,47],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[54,159],"content":"Server authentication using this <ph id=\"ph1\">&lt;xref href=\"System.Net.Security.SslStream\"&gt;&lt;/xref&gt;</ph> was tried previously.","source":"Server authentication using this <xref href=\"System.Net.Security.SslStream\"></xref> was tried previously."},{"pos":[166,170],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[177,215],"content":"Authentication is already in progress.","nodes":[{"content":"Authentication is already in progress.","pos":[0,38]}]}],"pos":[94860,95088],"yaml":true},{"content":"This object has been closed.","nodes":[{"pos":[0,28],"content":"This object has been closed.","nodes":[{"content":"This object has been closed.","pos":[0,28]}]}],"pos":[95194,95223],"yaml":true},{"content":"Called by clients to begin an asynchronous operation to authenticate the server and optionally the client using the specified certificates and security protocol.","nodes":[{"pos":[0,161],"content":"Called by clients to begin an asynchronous operation to authenticate the server and optionally the client using the specified certificates and security protocol.","nodes":[{"content":"Called by clients to begin an asynchronous operation to authenticate the server and optionally the client using the specified certificates and security protocol.","pos":[0,161]}]}],"pos":[96727,96889],"yaml":true},{"content":"The value specified for `targetHost` must match the name on the server's certificate.  \n  \n The asynchronous authentication operation must be completed by calling the <xref:System.Net.Security.SslStream.EndAuthenticateAsClient%2A> method. Typically, the method is invoked by the `asyncCallback` delegate.  \n  \n This method does not block while the operation completes. To block until the operation completes, use one of the <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A> method overloads.  \n  \n For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)  \n  \n If you receive a <xref:System.Security.Authentication.AuthenticationException>, this <xref:System.Net.Security.SslStream> is no longer useable. You should close this object and remove all references to it so that it can be collected by the garbage collector.  \n  \n> [!NOTE]\n>  Client certificates are not supported in the SSL version 2 protocol.","nodes":[{"pos":[0,85],"content":"The value specified for <ph id=\"ph1\">`targetHost`</ph> must match the name on the server's certificate.","source":"The value specified for `targetHost` must match the name on the server's certificate."},{"pos":[92,304],"content":"The asynchronous authentication operation must be completed by calling the <xref:System.Net.Security.SslStream.EndAuthenticateAsClient%2A> method. Typically, the method is invoked by the `asyncCallback` delegate.","nodes":[{"content":"The asynchronous authentication operation must be completed by calling the <ph id=\"ph1\">&lt;xref:System.Net.Security.SslStream.EndAuthenticateAsClient%2A&gt;</ph> method.","pos":[0,146],"source":"The asynchronous authentication operation must be completed by calling the <xref:System.Net.Security.SslStream.EndAuthenticateAsClient%2A> method."},{"content":"Typically, the method is invoked by the <ph id=\"ph1\">`asyncCallback`</ph> delegate.","pos":[147,212],"source":" Typically, the method is invoked by the `asyncCallback` delegate."}]},{"pos":[311,502],"content":"This method does not block while the operation completes. To block until the operation completes, use one of the <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A> method overloads.","nodes":[{"content":"This method does not block while the operation completes. To block until the operation completes, use one of the <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A> method overloads.","pos":[0,191],"nodes":[{"content":"This method does not block while the operation completes.","pos":[0,57]},{"content":"To block until the operation completes, use one of the <ph id=\"ph1\">&lt;xref:System.Net.Security.SslStream.AuthenticateAsClient%2A&gt;</ph> method overloads.","pos":[58,191],"source":" To block until the operation completes, use one of the <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A> method overloads."}]}]},{"pos":[509,727],"content":"For detailed information about using the asynchronous programming model, see <bpt id=\"p1\">[</bpt>Calling Synchronous Methods Asynchronously<ept id=\"p1\">](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</ept>","source":"For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)"},{"pos":[734,992],"content":"If you receive a <xref:System.Security.Authentication.AuthenticationException>, this <xref:System.Net.Security.SslStream> is no longer useable. You should close this object and remove all references to it so that it can be collected by the garbage collector.","nodes":[{"content":"If you receive a <xref:System.Security.Authentication.AuthenticationException>, this <xref:System.Net.Security.SslStream> is no longer useable. You should close this object and remove all references to it so that it can be collected by the garbage collector.","pos":[0,258],"nodes":[{"content":"If you receive a <ph id=\"ph1\">&lt;xref:System.Security.Authentication.AuthenticationException&gt;</ph>, this <ph id=\"ph2\">&lt;xref:System.Net.Security.SslStream&gt;</ph> is no longer useable.","pos":[0,143],"source":"If you receive a <xref:System.Security.Authentication.AuthenticationException>, this <xref:System.Net.Security.SslStream> is no longer useable."},{"content":"You should close this object and remove all references to it so that it can be collected by the garbage collector.","pos":[144,258]}]}]},{"pos":[1000,1079],"content":"[!NOTE]\n Client certificates are not supported in the SSL version 2 protocol.","leadings":["","> "],"nodes":[{"content":"Client certificates are not supported in the SSL version 2 protocol.","pos":[9,77]}]}],"pos":[96900,97993],"yaml":true,"extradata":"MT"},{"content":"The name of the server that shares this <xref href=\"System.Net.Security.SslStream\"></xref>.","nodes":[{"pos":[0,91],"content":"The name of the server that shares this <ph id=\"ph1\">&lt;xref href=\"System.Net.Security.SslStream\"&gt;&lt;/xref&gt;</ph>.","source":"The name of the server that shares this <xref href=\"System.Net.Security.SslStream\"></xref>."}],"pos":[98411,98503],"yaml":true},{"content":"The <xref href=\"System.Security.Cryptography.X509Certificates.X509CertificateCollection\"></xref> containing client certificates.","nodes":[{"pos":[0,128],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.X509Certificates.X509CertificateCollection\"&gt;&lt;/xref&gt;</ph> containing client certificates.","source":"The <xref href=\"System.Security.Cryptography.X509Certificates.X509CertificateCollection\"></xref> containing client certificates."}],"pos":[98635,98764],"yaml":true},{"content":"The <xref href=\"System.Security.Authentication.SslProtocols\"></xref> value that represents the protocol used for authentication.","nodes":[{"pos":[0,128],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Security.Authentication.SslProtocols\"&gt;&lt;/xref&gt;</ph> value that represents the protocol used for authentication.","source":"The <xref href=\"System.Security.Authentication.SslProtocols\"></xref> value that represents the protocol used for authentication."}],"pos":[98869,98998],"yaml":true},{"content":"A <xref href=\"System.Boolean\"></xref> value that specifies whether the certificate revocation list is checked during authentication.","nodes":[{"pos":[0,132],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Boolean\"&gt;&lt;/xref&gt;</ph> value that specifies whether the certificate revocation list is checked during authentication.","source":"A <xref href=\"System.Boolean\"></xref> value that specifies whether the certificate revocation list is checked during authentication."}],"pos":[99081,99214],"yaml":true},{"content":"An <xref href=\"System.AsyncCallback\"></xref> delegate that references the method to invoke when the authentication is complete.","nodes":[{"pos":[0,127],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.AsyncCallback\"&gt;&lt;/xref&gt;</ph> delegate that references the method to invoke when the authentication is complete.","source":"An <xref href=\"System.AsyncCallback\"></xref> delegate that references the method to invoke when the authentication is complete."}],"pos":[99290,99418],"yaml":true},{"content":"A user-defined object that contains information about the operation. This object is passed to the <code>asyncCallback</code> delegate when the operation completes.","nodes":[{"pos":[0,163],"content":"A user-defined object that contains information about the operation. This object is passed to the <code>asyncCallback</code> delegate when the operation completes.","nodes":[{"content":"A user-defined object that contains information about the operation.","pos":[0,68]},{"content":"This object is passed to the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">asyncCallback</ph><ept id=\"p1\">&lt;/code&gt;</ept> delegate when the operation completes.","pos":[69,163],"source":" This object is passed to the <code>asyncCallback</code> delegate when the operation completes."}]}],"pos":[99484,99648],"yaml":true},{"content":"An <xref href=\"System.IAsyncResult\"></xref> object that indicates the status of the asynchronous operation.","nodes":[{"pos":[0,107],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.IAsyncResult\"&gt;&lt;/xref&gt;</ph> object that indicates the status of the asynchronous operation.","source":"An <xref href=\"System.IAsyncResult\"></xref> object that indicates the status of the asynchronous operation."}],"pos":[99711,99819],"yaml":true},{"content":"<code>targetHost</code> is `null`.","nodes":[{"pos":[0,34],"content":"<ph id=\"ph1\">&lt;code&gt;targetHost&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>targetHost</code> is `null`."}],"pos":[100004,100039],"yaml":true},{"content":"<code>enabledSslProtocols</code> is not a valid <xref href=\"System.Security.Authentication.SslProtocols\"></xref> value.","nodes":[{"pos":[0,119],"content":"<ph id=\"ph1\">&lt;code&gt;enabledSslProtocols&lt;/code&gt;</ph> is not a valid <ph id=\"ph2\">&lt;xref href=\"System.Security.Authentication.SslProtocols\"&gt;&lt;/xref&gt;</ph> value.","source":"<code>enabledSslProtocols</code> is not a valid <xref href=\"System.Security.Authentication.SslProtocols\"></xref> value."}],"pos":[100133,100253],"yaml":true},{"content":"The authentication failed and left this object in an unusable state.","nodes":[{"pos":[0,68],"content":"The authentication failed and left this object in an unusable state.","nodes":[{"content":"The authentication failed and left this object in an unusable state.","pos":[0,68]}]}],"pos":[100407,100476],"yaml":true},{"content":"Authentication has already occurred.  \n  \n -or-  \n  \n Server authentication using this <xref href=\"System.Net.Security.SslStream\"></xref> was tried previously.  \n  \n -or-  \n  \n Authentication is already in progress.","nodes":[{"pos":[0,36],"content":"Authentication has already occurred.","nodes":[{"content":"Authentication has already occurred.","pos":[0,36]}]},{"pos":[43,47],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[54,159],"content":"Server authentication using this <ph id=\"ph1\">&lt;xref href=\"System.Net.Security.SslStream\"&gt;&lt;/xref&gt;</ph> was tried previously.","source":"Server authentication using this <xref href=\"System.Net.Security.SslStream\"></xref> was tried previously."},{"pos":[166,170],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[177,215],"content":"Authentication is already in progress.","nodes":[{"content":"Authentication is already in progress.","pos":[0,38]}]}],"pos":[100586,100814],"yaml":true},{"content":"This object has been closed.","nodes":[{"pos":[0,28],"content":"This object has been closed.","nodes":[{"content":"This object has been closed.","pos":[0,28]}]}],"pos":[100920,100949],"yaml":true},{"content":"Called by servers to begin an asynchronous operation to authenticate the client and optionally the server in a client-server connection.","nodes":[{"pos":[0,136],"content":"Called by servers to begin an asynchronous operation to authenticate the client and optionally the server in a client-server connection.","nodes":[{"content":"Called by servers to begin an asynchronous operation to authenticate the client and optionally the server in a client-server connection.","pos":[0,136]}]}],"pos":[102513,102650],"yaml":true},{"content":"This method authenticates using <xref:System.Security.Authentication.SslProtocols.Default>. The certificate revocation list is not checked during authentication. The client is not required to provide a certificate for authentication.  \n  \n The asynchronous authentication operation must be completed by calling the <xref:System.Net.Security.SslStream.EndAuthenticateAsClient%2A> method. Typically, the method is invoked by the `asyncCallback` delegate.  \n  \n This method does not block while the operation completes. To block until the operation completes, use one of the <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A> method overloads.  \n  \n For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)  \n  \n If you receive a <xref:System.Security.Authentication.AuthenticationException>, this <xref:System.Net.Security.SslStream> is no longer useable. You should close this object and remove all references to it so that it can be collected by the garbage collector.","nodes":[{"pos":[0,233],"content":"This method authenticates using <xref:System.Security.Authentication.SslProtocols.Default>. The certificate revocation list is not checked during authentication. The client is not required to provide a certificate for authentication.","nodes":[{"content":"This method authenticates using <xref:System.Security.Authentication.SslProtocols.Default>. The certificate revocation list is not checked during authentication. The client is not required to provide a certificate for authentication.","pos":[0,233],"nodes":[{"content":"This method authenticates using <ph id=\"ph1\">&lt;xref:System.Security.Authentication.SslProtocols.Default&gt;</ph>.","pos":[0,91],"source":"This method authenticates using <xref:System.Security.Authentication.SslProtocols.Default>."},{"content":"The certificate revocation list is not checked during authentication.","pos":[92,161]},{"content":"The client is not required to provide a certificate for authentication.","pos":[162,233]}]}]},{"pos":[240,452],"content":"The asynchronous authentication operation must be completed by calling the <xref:System.Net.Security.SslStream.EndAuthenticateAsClient%2A> method. Typically, the method is invoked by the `asyncCallback` delegate.","nodes":[{"content":"The asynchronous authentication operation must be completed by calling the <ph id=\"ph1\">&lt;xref:System.Net.Security.SslStream.EndAuthenticateAsClient%2A&gt;</ph> method.","pos":[0,146],"source":"The asynchronous authentication operation must be completed by calling the <xref:System.Net.Security.SslStream.EndAuthenticateAsClient%2A> method."},{"content":"Typically, the method is invoked by the <ph id=\"ph1\">`asyncCallback`</ph> delegate.","pos":[147,212],"source":" Typically, the method is invoked by the `asyncCallback` delegate."}]},{"pos":[459,650],"content":"This method does not block while the operation completes. To block until the operation completes, use one of the <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A> method overloads.","nodes":[{"content":"This method does not block while the operation completes. To block until the operation completes, use one of the <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A> method overloads.","pos":[0,191],"nodes":[{"content":"This method does not block while the operation completes.","pos":[0,57]},{"content":"To block until the operation completes, use one of the <ph id=\"ph1\">&lt;xref:System.Net.Security.SslStream.AuthenticateAsClient%2A&gt;</ph> method overloads.","pos":[58,191],"source":" To block until the operation completes, use one of the <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A> method overloads."}]}]},{"pos":[657,875],"content":"For detailed information about using the asynchronous programming model, see <bpt id=\"p1\">[</bpt>Calling Synchronous Methods Asynchronously<ept id=\"p1\">](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</ept>","source":"For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)"},{"pos":[882,1140],"content":"If you receive a <xref:System.Security.Authentication.AuthenticationException>, this <xref:System.Net.Security.SslStream> is no longer useable. You should close this object and remove all references to it so that it can be collected by the garbage collector.","nodes":[{"content":"If you receive a <xref:System.Security.Authentication.AuthenticationException>, this <xref:System.Net.Security.SslStream> is no longer useable. You should close this object and remove all references to it so that it can be collected by the garbage collector.","pos":[0,258],"nodes":[{"content":"If you receive a <ph id=\"ph1\">&lt;xref:System.Security.Authentication.AuthenticationException&gt;</ph>, this <ph id=\"ph2\">&lt;xref:System.Net.Security.SslStream&gt;</ph> is no longer useable.","pos":[0,143],"source":"If you receive a <xref:System.Security.Authentication.AuthenticationException>, this <xref:System.Net.Security.SslStream> is no longer useable."},{"content":"You should close this object and remove all references to it so that it can be collected by the garbage collector.","pos":[144,258]}]}]}],"pos":[102661,103812],"yaml":true,"extradata":"MT"},{"content":"The X509Certificate used to authenticate the server.","nodes":[{"pos":[0,52],"content":"The X509Certificate used to authenticate the server.","nodes":[{"content":"The X509Certificate used to authenticate the server.","pos":[0,52]}]}],"pos":[104157,104210],"yaml":true},{"content":"An <xref href=\"System.AsyncCallback\"></xref> delegate that references the method to invoke when the authentication is complete.","nodes":[{"pos":[0,127],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.AsyncCallback\"&gt;&lt;/xref&gt;</ph> delegate that references the method to invoke when the authentication is complete.","source":"An <xref href=\"System.AsyncCallback\"></xref> delegate that references the method to invoke when the authentication is complete."}],"pos":[104286,104414],"yaml":true},{"content":"A user-defined object that contains information about the operation. This object is passed to the <code>asyncCallback</code> delegate when the operation completes.","nodes":[{"pos":[0,163],"content":"A user-defined object that contains information about the operation. This object is passed to the <code>asyncCallback</code> delegate when the operation completes.","nodes":[{"content":"A user-defined object that contains information about the operation.","pos":[0,68]},{"content":"This object is passed to the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">asyncCallback</ph><ept id=\"p1\">&lt;/code&gt;</ept> delegate when the operation completes.","pos":[69,163],"source":" This object is passed to the <code>asyncCallback</code> delegate when the operation completes."}]}],"pos":[104480,104644],"yaml":true},{"content":"An <xref href=\"System.IAsyncResult\"></xref> object indicating the status of the asynchronous operation.","nodes":[{"pos":[0,103],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.IAsyncResult\"&gt;&lt;/xref&gt;</ph> object indicating the status of the asynchronous operation.","source":"An <xref href=\"System.IAsyncResult\"></xref> object indicating the status of the asynchronous operation."}],"pos":[104707,104811],"yaml":true},{"content":"<code>serverCertificate</code> is `null`.","nodes":[{"pos":[0,41],"content":"<ph id=\"ph1\">&lt;code&gt;serverCertificate&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>serverCertificate</code> is `null`."}],"pos":[104996,105038],"yaml":true},{"content":"The authentication failed and left this object in an unusable state.","nodes":[{"pos":[0,68],"content":"The authentication failed and left this object in an unusable state.","nodes":[{"content":"The authentication failed and left this object in an unusable state.","pos":[0,68]}]}],"pos":[105192,105261],"yaml":true},{"content":"Authentication has already occurred.  \n  \n -or-  \n  \n Client authentication using this <xref href=\"System.Net.Security.SslStream\"></xref> was tried previously.  \n  \n -or-  \n  \n Authentication is already in progress.","nodes":[{"pos":[0,36],"content":"Authentication has already occurred.","nodes":[{"content":"Authentication has already occurred.","pos":[0,36]}]},{"pos":[43,47],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[54,159],"content":"Client authentication using this <ph id=\"ph1\">&lt;xref href=\"System.Net.Security.SslStream\"&gt;&lt;/xref&gt;</ph> was tried previously.","source":"Client authentication using this <xref href=\"System.Net.Security.SslStream\"></xref> was tried previously."},{"pos":[166,170],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[177,215],"content":"Authentication is already in progress.","nodes":[{"content":"Authentication is already in progress.","pos":[0,38]}]}],"pos":[105371,105599],"yaml":true},{"content":"This object has been closed.","nodes":[{"pos":[0,28],"content":"This object has been closed.","nodes":[{"content":"This object has been closed.","pos":[0,28]}]}],"pos":[105705,105734],"yaml":true},{"content":"The <xref href=\"System.Net.Security.SslStream.BeginAuthenticateAsServer*\"></xref> method is not supported on Windows 95, Windows 98, or Windows Millennium.","nodes":[{"pos":[0,155],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Net.Security.SslStream.BeginAuthenticateAsServer*\"&gt;&lt;/xref&gt;</ph> method is not supported on Windows 95, Windows 98, or Windows Millennium.","source":"The <xref href=\"System.Net.Security.SslStream.BeginAuthenticateAsServer*\"></xref> method is not supported on Windows 95, Windows 98, or Windows Millennium."}],"pos":[105852,106008],"yaml":true},{"content":"Called by servers to begin an asynchronous operation to authenticate the server and optionally the client using the specified certificates and requirements, and the system default security protocol.","nodes":[{"pos":[0,198],"content":"Called by servers to begin an asynchronous operation to authenticate the server and optionally the client using the specified certificates and requirements, and the system default security protocol.","nodes":[{"content":"Called by servers to begin an asynchronous operation to authenticate the server and optionally the client using the specified certificates and requirements, and the system default security protocol.","pos":[0,198]}]}],"pos":[107700,107899],"yaml":true},{"content":"The asynchronous authentication operation must be completed by calling the <xref:System.Net.Security.SslStream.EndAuthenticateAsServer%2A> method. Typically, the method is invoked by the `asyncCallback` delegate.  \n  \n This method does not block while the operation completes. To block until the operation completes, use one of the <xref:System.Net.Security.SslStream.AuthenticateAsServer%2A> method overloads.  \n  \n For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)  \n  \n If you receive a <xref:System.Security.Authentication.AuthenticationException>, this <xref:System.Net.Security.SslStream> is no longer useable. You should close this object and remove all references to it so that it can be collected by the garbage collector.","nodes":[{"pos":[0,212],"content":"The asynchronous authentication operation must be completed by calling the <xref:System.Net.Security.SslStream.EndAuthenticateAsServer%2A> method. Typically, the method is invoked by the `asyncCallback` delegate.","nodes":[{"content":"The asynchronous authentication operation must be completed by calling the <ph id=\"ph1\">&lt;xref:System.Net.Security.SslStream.EndAuthenticateAsServer%2A&gt;</ph> method.","pos":[0,146],"source":"The asynchronous authentication operation must be completed by calling the <xref:System.Net.Security.SslStream.EndAuthenticateAsServer%2A> method."},{"content":"Typically, the method is invoked by the <ph id=\"ph1\">`asyncCallback`</ph> delegate.","pos":[147,212],"source":" Typically, the method is invoked by the `asyncCallback` delegate."}]},{"pos":[219,410],"content":"This method does not block while the operation completes. To block until the operation completes, use one of the <xref:System.Net.Security.SslStream.AuthenticateAsServer%2A> method overloads.","nodes":[{"content":"This method does not block while the operation completes. To block until the operation completes, use one of the <xref:System.Net.Security.SslStream.AuthenticateAsServer%2A> method overloads.","pos":[0,191],"nodes":[{"content":"This method does not block while the operation completes.","pos":[0,57]},{"content":"To block until the operation completes, use one of the <ph id=\"ph1\">&lt;xref:System.Net.Security.SslStream.AuthenticateAsServer%2A&gt;</ph> method overloads.","pos":[58,191],"source":" To block until the operation completes, use one of the <xref:System.Net.Security.SslStream.AuthenticateAsServer%2A> method overloads."}]}]},{"pos":[417,635],"content":"For detailed information about using the asynchronous programming model, see <bpt id=\"p1\">[</bpt>Calling Synchronous Methods Asynchronously<ept id=\"p1\">](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</ept>","source":"For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)"},{"pos":[642,900],"content":"If you receive a <xref:System.Security.Authentication.AuthenticationException>, this <xref:System.Net.Security.SslStream> is no longer useable. You should close this object and remove all references to it so that it can be collected by the garbage collector.","nodes":[{"content":"If you receive a <xref:System.Security.Authentication.AuthenticationException>, this <xref:System.Net.Security.SslStream> is no longer useable. You should close this object and remove all references to it so that it can be collected by the garbage collector.","pos":[0,258],"nodes":[{"content":"If you receive a <ph id=\"ph1\">&lt;xref:System.Security.Authentication.AuthenticationException&gt;</ph>, this <ph id=\"ph2\">&lt;xref:System.Net.Security.SslStream&gt;</ph> is no longer useable.","pos":[0,143],"source":"If you receive a <xref:System.Security.Authentication.AuthenticationException>, this <xref:System.Net.Security.SslStream> is no longer useable."},{"content":"You should close this object and remove all references to it so that it can be collected by the garbage collector.","pos":[144,258]}]}]}],"pos":[107910,108819],"yaml":true,"extradata":"MT"},{"content":"The X509Certificate used to authenticate the server.","nodes":[{"pos":[0,52],"content":"The X509Certificate used to authenticate the server.","nodes":[{"content":"The X509Certificate used to authenticate the server.","pos":[0,52]}]}],"pos":[109229,109282],"yaml":true},{"content":"A <xref href=\"System.Boolean\"></xref> value that specifies whether the client is asked for a certificate for authentication. Note that this is only a request -- if no certificate is provided, the server still accepts the connection request.","nodes":[{"pos":[0,240],"content":"A <xref href=\"System.Boolean\"></xref> value that specifies whether the client is asked for a certificate for authentication. Note that this is only a request -- if no certificate is provided, the server still accepts the connection request.","nodes":[{"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Boolean\"&gt;&lt;/xref&gt;</ph> value that specifies whether the client is asked for a certificate for authentication.","pos":[0,124],"source":"A <xref href=\"System.Boolean\"></xref> value that specifies whether the client is asked for a certificate for authentication."},{"content":"Note that this is only a request -- if no certificate is provided, the server still accepts the connection request.","pos":[125,240]}]}],"pos":[109364,109605],"yaml":true},{"content":"A <xref href=\"System.Boolean\"></xref> value that specifies whether the certificate revocation list is checked during authentication.","nodes":[{"pos":[0,132],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Boolean\"&gt;&lt;/xref&gt;</ph> value that specifies whether the certificate revocation list is checked during authentication.","source":"A <xref href=\"System.Boolean\"></xref> value that specifies whether the certificate revocation list is checked during authentication."}],"pos":[109688,109821],"yaml":true},{"content":"An <xref href=\"System.AsyncCallback\"></xref> delegate that references the method to invoke when the authentication is complete.","nodes":[{"pos":[0,127],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.AsyncCallback\"&gt;&lt;/xref&gt;</ph> delegate that references the method to invoke when the authentication is complete.","source":"An <xref href=\"System.AsyncCallback\"></xref> delegate that references the method to invoke when the authentication is complete."}],"pos":[109897,110025],"yaml":true},{"content":"A user-defined object that contains information about the operation. This object is passed to the <code>asyncCallback</code> delegate when the operation completes.","nodes":[{"pos":[0,163],"content":"A user-defined object that contains information about the operation. This object is passed to the <code>asyncCallback</code> delegate when the operation completes.","nodes":[{"content":"A user-defined object that contains information about the operation.","pos":[0,68]},{"content":"This object is passed to the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">asyncCallback</ph><ept id=\"p1\">&lt;/code&gt;</ept> delegate when the operation completes.","pos":[69,163],"source":" This object is passed to the <code>asyncCallback</code> delegate when the operation completes."}]}],"pos":[110091,110255],"yaml":true},{"content":"An <xref href=\"System.IAsyncResult\"></xref> object that indicates the status of the asynchronous operation.","nodes":[{"pos":[0,107],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.IAsyncResult\"&gt;&lt;/xref&gt;</ph> object that indicates the status of the asynchronous operation.","source":"An <xref href=\"System.IAsyncResult\"></xref> object that indicates the status of the asynchronous operation."}],"pos":[110318,110426],"yaml":true},{"content":"<code>serverCertificate</code> is `null`.","nodes":[{"pos":[0,41],"content":"<ph id=\"ph1\">&lt;code&gt;serverCertificate&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>serverCertificate</code> is `null`."}],"pos":[110611,110653],"yaml":true},{"content":"The authentication failed and left this object in an unusable state.","nodes":[{"pos":[0,68],"content":"The authentication failed and left this object in an unusable state.","nodes":[{"content":"The authentication failed and left this object in an unusable state.","pos":[0,68]}]}],"pos":[110807,110876],"yaml":true},{"content":"Authentication has already occurred.  \n  \n -or-  \n  \n Server authentication using this <xref href=\"System.Net.Security.SslStream\"></xref> was tried previously.  \n  \n -or-  \n  \n Authentication is already in progress.","nodes":[{"pos":[0,36],"content":"Authentication has already occurred.","nodes":[{"content":"Authentication has already occurred.","pos":[0,36]}]},{"pos":[43,47],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[54,159],"content":"Server authentication using this <ph id=\"ph1\">&lt;xref href=\"System.Net.Security.SslStream\"&gt;&lt;/xref&gt;</ph> was tried previously.","source":"Server authentication using this <xref href=\"System.Net.Security.SslStream\"></xref> was tried previously."},{"pos":[166,170],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[177,215],"content":"Authentication is already in progress.","nodes":[{"content":"Authentication is already in progress.","pos":[0,38]}]}],"pos":[110986,111214],"yaml":true},{"content":"This object has been closed.","nodes":[{"pos":[0,28],"content":"This object has been closed.","nodes":[{"content":"This object has been closed.","pos":[0,28]}]}],"pos":[111320,111349],"yaml":true},{"content":"The <xref href=\"System.Net.Security.SslStream.BeginAuthenticateAsServer*\"></xref> method is not supported on Windows 95, Windows 98, or Windows Millennium.","nodes":[{"pos":[0,155],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Net.Security.SslStream.BeginAuthenticateAsServer*\"&gt;&lt;/xref&gt;</ph> method is not supported on Windows 95, Windows 98, or Windows Millennium.","source":"The <xref href=\"System.Net.Security.SslStream.BeginAuthenticateAsServer*\"></xref> method is not supported on Windows 95, Windows 98, or Windows Millennium."}],"pos":[111467,111623],"yaml":true},{"content":"Called by servers to begin an asynchronous operation to authenticate the server and optionally the client using the specified certificates, requirements and security protocol.","nodes":[{"pos":[0,175],"content":"Called by servers to begin an asynchronous operation to authenticate the server and optionally the client using the specified certificates, requirements and security protocol.","nodes":[{"content":"Called by servers to begin an asynchronous operation to authenticate the server and optionally the client using the specified certificates, requirements and security protocol.","pos":[0,175]}]}],"pos":[113073,113249],"yaml":true},{"content":"The asynchronous authentication operation must be completed by calling the <xref:System.Net.Security.SslStream.EndAuthenticateAsServer%2A> method. Typically, the method is invoked by the `asyncCallback` delegate.  \n  \n This method does not block while the operation completes. To block until the operation completes, use one of the <xref:System.Net.Security.SslStream.AuthenticateAsServer%2A> method overloads.  \n  \n For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)  \n  \n If you receive a <xref:System.Security.Authentication.AuthenticationException>, this <xref:System.Net.Security.SslStream> is no longer useable. You should close this object and remove all references to it so that it can be collected by the garbage collector.","nodes":[{"pos":[0,212],"content":"The asynchronous authentication operation must be completed by calling the <xref:System.Net.Security.SslStream.EndAuthenticateAsServer%2A> method. Typically, the method is invoked by the `asyncCallback` delegate.","nodes":[{"content":"The asynchronous authentication operation must be completed by calling the <ph id=\"ph1\">&lt;xref:System.Net.Security.SslStream.EndAuthenticateAsServer%2A&gt;</ph> method.","pos":[0,146],"source":"The asynchronous authentication operation must be completed by calling the <xref:System.Net.Security.SslStream.EndAuthenticateAsServer%2A> method."},{"content":"Typically, the method is invoked by the <ph id=\"ph1\">`asyncCallback`</ph> delegate.","pos":[147,212],"source":" Typically, the method is invoked by the `asyncCallback` delegate."}]},{"pos":[219,410],"content":"This method does not block while the operation completes. To block until the operation completes, use one of the <xref:System.Net.Security.SslStream.AuthenticateAsServer%2A> method overloads.","nodes":[{"content":"This method does not block while the operation completes. To block until the operation completes, use one of the <xref:System.Net.Security.SslStream.AuthenticateAsServer%2A> method overloads.","pos":[0,191],"nodes":[{"content":"This method does not block while the operation completes.","pos":[0,57]},{"content":"To block until the operation completes, use one of the <ph id=\"ph1\">&lt;xref:System.Net.Security.SslStream.AuthenticateAsServer%2A&gt;</ph> method overloads.","pos":[58,191],"source":" To block until the operation completes, use one of the <xref:System.Net.Security.SslStream.AuthenticateAsServer%2A> method overloads."}]}]},{"pos":[417,635],"content":"For detailed information about using the asynchronous programming model, see <bpt id=\"p1\">[</bpt>Calling Synchronous Methods Asynchronously<ept id=\"p1\">](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</ept>","source":"For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)"},{"pos":[642,900],"content":"If you receive a <xref:System.Security.Authentication.AuthenticationException>, this <xref:System.Net.Security.SslStream> is no longer useable. You should close this object and remove all references to it so that it can be collected by the garbage collector.","nodes":[{"content":"If you receive a <xref:System.Security.Authentication.AuthenticationException>, this <xref:System.Net.Security.SslStream> is no longer useable. You should close this object and remove all references to it so that it can be collected by the garbage collector.","pos":[0,258],"nodes":[{"content":"If you receive a <ph id=\"ph1\">&lt;xref:System.Security.Authentication.AuthenticationException&gt;</ph>, this <ph id=\"ph2\">&lt;xref:System.Net.Security.SslStream&gt;</ph> is no longer useable.","pos":[0,143],"source":"If you receive a <xref:System.Security.Authentication.AuthenticationException>, this <xref:System.Net.Security.SslStream> is no longer useable."},{"content":"You should close this object and remove all references to it so that it can be collected by the garbage collector.","pos":[144,258]}]}]}],"pos":[113260,114169],"yaml":true,"extradata":"MT"},{"content":"The X509Certificate used to authenticate the server.","nodes":[{"pos":[0,52],"content":"The X509Certificate used to authenticate the server.","nodes":[{"content":"The X509Certificate used to authenticate the server.","pos":[0,52]}]}],"pos":[114644,114697],"yaml":true},{"content":"A <xref href=\"System.Boolean\"></xref> value that specifies whether the client is asked for a certificate for authentication. Note that this is only a request -- if no certificate is provided, the server still accepts the connection request.","nodes":[{"pos":[0,240],"content":"A <xref href=\"System.Boolean\"></xref> value that specifies whether the client is asked for a certificate for authentication. Note that this is only a request -- if no certificate is provided, the server still accepts the connection request.","nodes":[{"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Boolean\"&gt;&lt;/xref&gt;</ph> value that specifies whether the client is asked for a certificate for authentication.","pos":[0,124],"source":"A <xref href=\"System.Boolean\"></xref> value that specifies whether the client is asked for a certificate for authentication."},{"content":"Note that this is only a request -- if no certificate is provided, the server still accepts the connection request.","pos":[125,240]}]}],"pos":[114779,115020],"yaml":true},{"content":"The <xref href=\"System.Security.Authentication.SslProtocols\"></xref> value that represents the protocol used for authentication.","nodes":[{"pos":[0,128],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Security.Authentication.SslProtocols\"&gt;&lt;/xref&gt;</ph> value that represents the protocol used for authentication.","source":"The <xref href=\"System.Security.Authentication.SslProtocols\"></xref> value that represents the protocol used for authentication."}],"pos":[115125,115254],"yaml":true},{"content":"A <xref href=\"System.Boolean\"></xref> value that specifies whether the certificate revocation list is checked during authentication.","nodes":[{"pos":[0,132],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Boolean\"&gt;&lt;/xref&gt;</ph> value that specifies whether the certificate revocation list is checked during authentication.","source":"A <xref href=\"System.Boolean\"></xref> value that specifies whether the certificate revocation list is checked during authentication."}],"pos":[115337,115470],"yaml":true},{"content":"An <xref href=\"System.AsyncCallback\"></xref> delegate that references the method to invoke when the authentication is complete.","nodes":[{"pos":[0,127],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.AsyncCallback\"&gt;&lt;/xref&gt;</ph> delegate that references the method to invoke when the authentication is complete.","source":"An <xref href=\"System.AsyncCallback\"></xref> delegate that references the method to invoke when the authentication is complete."}],"pos":[115546,115674],"yaml":true},{"content":"A user-defined object that contains information about the operation. This object is passed to the <code>asyncCallback</code> delegate when the operation completes.","nodes":[{"pos":[0,163],"content":"A user-defined object that contains information about the operation. This object is passed to the <code>asyncCallback</code> delegate when the operation completes.","nodes":[{"content":"A user-defined object that contains information about the operation.","pos":[0,68]},{"content":"This object is passed to the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">asyncCallback</ph><ept id=\"p1\">&lt;/code&gt;</ept> delegate when the operation completes.","pos":[69,163],"source":" This object is passed to the <code>asyncCallback</code> delegate when the operation completes."}]}],"pos":[115740,115904],"yaml":true},{"content":"An <xref href=\"System.IAsyncResult\"></xref> object that indicates the status of the asynchronous operation.","nodes":[{"pos":[0,107],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.IAsyncResult\"&gt;&lt;/xref&gt;</ph> object that indicates the status of the asynchronous operation.","source":"An <xref href=\"System.IAsyncResult\"></xref> object that indicates the status of the asynchronous operation."}],"pos":[115967,116075],"yaml":true},{"content":"<code>serverCertificate</code> is `null`.","nodes":[{"pos":[0,41],"content":"<ph id=\"ph1\">&lt;code&gt;serverCertificate&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>serverCertificate</code> is `null`."}],"pos":[116260,116302],"yaml":true},{"content":"<code>enabledSslProtocols</code> is not a valid <xref href=\"System.Security.Authentication.SslProtocols\"></xref> value.","nodes":[{"pos":[0,119],"content":"<ph id=\"ph1\">&lt;code&gt;enabledSslProtocols&lt;/code&gt;</ph> is not a valid <ph id=\"ph2\">&lt;xref href=\"System.Security.Authentication.SslProtocols\"&gt;&lt;/xref&gt;</ph> value.","source":"<code>enabledSslProtocols</code> is not a valid <xref href=\"System.Security.Authentication.SslProtocols\"></xref> value."}],"pos":[116396,116516],"yaml":true},{"content":"The authentication failed and left this object in an unusable state.","nodes":[{"pos":[0,68],"content":"The authentication failed and left this object in an unusable state.","nodes":[{"content":"The authentication failed and left this object in an unusable state.","pos":[0,68]}]}],"pos":[116670,116739],"yaml":true},{"content":"Authentication has already occurred.  \n  \n -or-  \n  \n Server authentication using this <xref href=\"System.Net.Security.SslStream\"></xref> was tried previously.  \n  \n -or-  \n  \n Authentication is already in progress.","nodes":[{"pos":[0,36],"content":"Authentication has already occurred.","nodes":[{"content":"Authentication has already occurred.","pos":[0,36]}]},{"pos":[43,47],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[54,159],"content":"Server authentication using this <ph id=\"ph1\">&lt;xref href=\"System.Net.Security.SslStream\"&gt;&lt;/xref&gt;</ph> was tried previously.","source":"Server authentication using this <xref href=\"System.Net.Security.SslStream\"></xref> was tried previously."},{"pos":[166,170],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[177,215],"content":"Authentication is already in progress.","nodes":[{"content":"Authentication is already in progress.","pos":[0,38]}]}],"pos":[116849,117077],"yaml":true},{"content":"This object has been closed.","nodes":[{"pos":[0,28],"content":"This object has been closed.","nodes":[{"content":"This object has been closed.","pos":[0,28]}]}],"pos":[117183,117212],"yaml":true},{"content":"The <xref href=\"System.Net.Security.SslStream.BeginAuthenticateAsServer*\"></xref> method is not supported on Windows 95, Windows 98, or Windows Millennium.","nodes":[{"pos":[0,155],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Net.Security.SslStream.BeginAuthenticateAsServer*\"&gt;&lt;/xref&gt;</ph> method is not supported on Windows 95, Windows 98, or Windows Millennium.","source":"The <xref href=\"System.Net.Security.SslStream.BeginAuthenticateAsServer*\"></xref> method is not supported on Windows 95, Windows 98, or Windows Millennium."}],"pos":[117330,117486],"yaml":true},{"content":"Begins an asynchronous read operation that reads data from the stream and stores it in the specified array.","nodes":[{"pos":[0,107],"content":"Begins an asynchronous read operation that reads data from the stream and stores it in the specified array.","nodes":[{"content":"Begins an asynchronous read operation that reads data from the stream and stores it in the specified array.","pos":[0,107]}]}],"pos":[118903,119011],"yaml":true},{"content":"If encryption and or signing are enabled, the read operation reads the data from the underlying stream, checks the integrity of the data, and/or decrypts it. The asynchronous read operation must be completed by calling the <xref:System.Net.Security.SslStream.EndRead%2A> method. Typically, the method is invoked by the `asyncCallback` delegate.  \n  \n This method does not block while the operation completes. To block until the operation completes, use the <xref:System.Net.Security.SslStream.Read%2A> method.  \n  \n For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)  \n  \n The <xref:System.Net.Security.SslStream> class does not support multiple simultaneous read operations.  \n  \n You cannot call this method until you have successfully authenticated. To authenticate call one of the <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>, or <xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A>, <xref:System.Net.Security.SslStream.AuthenticateAsServer%2A>, <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A> methods.","nodes":[{"pos":[0,344],"content":"If encryption and or signing are enabled, the read operation reads the data from the underlying stream, checks the integrity of the data, and/or decrypts it. The asynchronous read operation must be completed by calling the <xref:System.Net.Security.SslStream.EndRead%2A> method. Typically, the method is invoked by the `asyncCallback` delegate.","nodes":[{"content":"If encryption and or signing are enabled, the read operation reads the data from the underlying stream, checks the integrity of the data, and/or decrypts it.","pos":[0,157]},{"content":"The asynchronous read operation must be completed by calling the <ph id=\"ph1\">&lt;xref:System.Net.Security.SslStream.EndRead%2A&gt;</ph> method.","pos":[158,278],"source":" The asynchronous read operation must be completed by calling the <xref:System.Net.Security.SslStream.EndRead%2A> method."},{"content":"Typically, the method is invoked by the <ph id=\"ph1\">`asyncCallback`</ph> delegate.","pos":[279,344],"source":" Typically, the method is invoked by the `asyncCallback` delegate."}]},{"pos":[351,509],"content":"This method does not block while the operation completes. To block until the operation completes, use the <xref:System.Net.Security.SslStream.Read%2A> method.","nodes":[{"content":"This method does not block while the operation completes. To block until the operation completes, use the <xref:System.Net.Security.SslStream.Read%2A> method.","pos":[0,158],"nodes":[{"content":"This method does not block while the operation completes.","pos":[0,57]},{"content":"To block until the operation completes, use the <ph id=\"ph1\">&lt;xref:System.Net.Security.SslStream.Read%2A&gt;</ph> method.","pos":[58,158],"source":" To block until the operation completes, use the <xref:System.Net.Security.SslStream.Read%2A> method."}]}]},{"pos":[516,734],"content":"For detailed information about using the asynchronous programming model, see <bpt id=\"p1\">[</bpt>Calling Synchronous Methods Asynchronously<ept id=\"p1\">](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</ept>","source":"For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)"},{"pos":[741,843],"content":"The <xref:System.Net.Security.SslStream> class does not support multiple simultaneous read operations.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Net.Security.SslStream&gt;</ph> class does not support multiple simultaneous read operations.","pos":[0,102],"source":"The <xref:System.Net.Security.SslStream> class does not support multiple simultaneous read operations."}]},{"pos":[850,1221],"content":"You cannot call this method until you have successfully authenticated. To authenticate call one of the <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>, or <xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A>, <xref:System.Net.Security.SslStream.AuthenticateAsServer%2A>, <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A> methods.","nodes":[{"content":"You cannot call this method until you have successfully authenticated. To authenticate call one of the <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>, or <xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A>, <xref:System.Net.Security.SslStream.AuthenticateAsServer%2A>, <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A> methods.","pos":[0,371],"nodes":[{"content":"You cannot call this method until you have successfully authenticated.","pos":[0,70]},{"content":"To authenticate call one of the <ph id=\"ph1\">&lt;xref:System.Net.Security.SslStream.AuthenticateAsClient%2A&gt;</ph>, or <ph id=\"ph2\">&lt;xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A&gt;</ph>, <ph id=\"ph3\">&lt;xref:System.Net.Security.SslStream.AuthenticateAsServer%2A&gt;</ph>, <ph id=\"ph4\">&lt;xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A&gt;</ph> methods.","pos":[71,371],"source":" To authenticate call one of the <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>, or <xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A>, <xref:System.Net.Security.SslStream.AuthenticateAsServer%2A>, <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A> methods."}]}]}],"pos":[119022,120254],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Byte\"></xref> array that receives the bytes read from the stream.","nodes":[{"pos":[0,86],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Byte\"&gt;&lt;/xref&gt;</ph> array that receives the bytes read from the stream.","source":"A <xref href=\"System.Byte\"></xref> array that receives the bytes read from the stream."}],"pos":[121412,121499],"yaml":true},{"content":"The zero-based location in <code>buffer</code> at which to begin storing the data read from this stream.","nodes":[{"pos":[0,104],"content":"The zero-based location in <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">buffer</ph><ept id=\"p1\">&lt;/code&gt;</ept> at which to begin storing the data read from this stream.","source":"The zero-based location in <code>buffer</code> at which to begin storing the data read from this stream."}],"pos":[121560,121665],"yaml":true},{"content":"The maximum number of bytes to read from the stream.","nodes":[{"pos":[0,52],"content":"The maximum number of bytes to read from the stream.","nodes":[{"content":"The maximum number of bytes to read from the stream.","pos":[0,52]}]}],"pos":[121725,121778],"yaml":true},{"content":"An <xref href=\"System.AsyncCallback\"></xref> delegate that references the method to invoke when the read operation is complete.","nodes":[{"pos":[0,127],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.AsyncCallback\"&gt;&lt;/xref&gt;</ph> delegate that references the method to invoke when the read operation is complete.","source":"An <xref href=\"System.AsyncCallback\"></xref> delegate that references the method to invoke when the read operation is complete."}],"pos":[121854,121982],"yaml":true},{"content":"A user-defined object that contains information about the read operation. This object is passed to the <code>asyncCallback</code> delegate when the operation completes.","nodes":[{"pos":[0,168],"content":"A user-defined object that contains information about the read operation. This object is passed to the <code>asyncCallback</code> delegate when the operation completes.","nodes":[{"content":"A user-defined object that contains information about the read operation.","pos":[0,73]},{"content":"This object is passed to the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">asyncCallback</ph><ept id=\"p1\">&lt;/code&gt;</ept> delegate when the operation completes.","pos":[74,168],"source":" This object is passed to the <code>asyncCallback</code> delegate when the operation completes."}]}],"pos":[122048,122217],"yaml":true},{"content":"An <xref href=\"System.IAsyncResult\"></xref> object that indicates the status of the asynchronous operation.","nodes":[{"pos":[0,107],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.IAsyncResult\"&gt;&lt;/xref&gt;</ph> object that indicates the status of the asynchronous operation.","source":"An <xref href=\"System.IAsyncResult\"></xref> object that indicates the status of the asynchronous operation."}],"pos":[122280,122388],"yaml":true},{"content":"<code>buffer</code> is `null`.","nodes":[{"pos":[0,30],"content":"<ph id=\"ph1\">&lt;code&gt;buffer&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>buffer</code> is `null`."}],"pos":[122557,122588],"yaml":true},{"content":"<code>offset</code>\n    <code><</code>\n    <code>0</code>.  \n  \n <code>-or-</code><code>offset</code> > the length of <code>buffer</code>.  \n  \n -or-  \n  \n <code>offset</code> + count > the length of <code>buffer</code>.","nodes":[{"pos":[0,138],"content":"<code>offset</code>\n    <code><</code>\n    <code>0</code>.  \n  \n <code>-or-</code><code>offset</code> > the length of <code>buffer</code>.","nodes":[{"content":"<ph id=\"ph1\">&lt;code&gt;offset&lt;/code&gt;</ph><ph id=\"ph2\">\n    &lt;code&gt;&lt;&lt;/code&gt;</ph><ph id=\"ph3\">\n    &lt;code&gt;0&lt;/code&gt;</ph>.","pos":[0,58],"source":"<code>offset</code>\n    <code><</code>\n    <code>0</code>."},{"content":"<ph id=\"ph1\">&lt;code&gt;-or-&lt;/code&gt;</ph><ph id=\"ph2\">&lt;code&gt;offset&lt;/code&gt;</ph><ph id=\"ph3\"> &gt;</ph> the length of <ph id=\"ph4\">&lt;code&gt;buffer&lt;/code&gt;</ph>.","pos":[65,138],"source":"<code>-or-</code><code>offset</code> > the length of <code>buffer</code>."}]},{"pos":[145,149],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[156,220],"content":"<ph id=\"ph1\">&lt;code&gt;offset&lt;/code&gt;</ph><ph id=\"ph2\"> +</ph> count &gt; the length of <ph id=\"ph3\">&lt;code&gt;buffer&lt;/code&gt;</ph>.","source":"<code>offset</code> + count > the length of <code>buffer</code>."}],"pos":[122682,122913],"yaml":true},{"content":"The read operation failed.  \n  \n -or-  \n  \n Encryption is in use, but the data could not be decrypted.","nodes":[{"pos":[0,26],"content":"The read operation failed.","nodes":[{"content":"The read operation failed.","pos":[0,26]}]},{"pos":[33,37],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[44,102],"content":"Encryption is in use, but the data could not be decrypted.","nodes":[{"content":"Encryption is in use, but the data could not be decrypted.","pos":[0,58]}]}],"pos":[123001,123110],"yaml":true},{"content":"There is already a read operation in progress.","nodes":[{"pos":[0,46],"content":"There is already a read operation in progress.","nodes":[{"content":"There is already a read operation in progress.","pos":[0,46]}]}],"pos":[123212,123259],"yaml":true},{"content":"This object has been closed.","nodes":[{"pos":[0,28],"content":"This object has been closed.","nodes":[{"content":"This object has been closed.","pos":[0,28]}]}],"pos":[123365,123394],"yaml":true},{"content":"Authentication has not occurred.","nodes":[{"pos":[0,32],"content":"Authentication has not occurred.","nodes":[{"content":"Authentication has not occurred.","pos":[0,32]}]}],"pos":[123504,123537],"yaml":true},{"content":"Begins an asynchronous write operation that writes <xref href=\"System.Byte\"></xref>s from the specified buffer to the stream.","nodes":[{"pos":[0,125],"content":"Begins an asynchronous write operation that writes <ph id=\"ph1\">&lt;xref href=\"System.Byte\"&gt;&lt;/xref&gt;</ph>s from the specified buffer to the stream.","source":"Begins an asynchronous write operation that writes <xref href=\"System.Byte\"></xref>s from the specified buffer to the stream."}],"pos":[124960,125086],"yaml":true},{"content":"A <xref href=\"System.Byte\"></xref> array that supplies the bytes to be written to the stream.","nodes":[{"pos":[0,93],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Byte\"&gt;&lt;/xref&gt;</ph> array that supplies the bytes to be written to the stream.","source":"A <xref href=\"System.Byte\"></xref> array that supplies the bytes to be written to the stream."}],"pos":[125663,125757],"yaml":true},{"content":"The zero-based location in <code>buffer</code> at which to begin reading bytes to be written to the stream.","nodes":[{"pos":[0,107],"content":"The zero-based location in <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">buffer</ph><ept id=\"p1\">&lt;/code&gt;</ept> at which to begin reading bytes to be written to the stream.","source":"The zero-based location in <code>buffer</code> at which to begin reading bytes to be written to the stream."}],"pos":[125818,125926],"yaml":true},{"content":"An <xref href=\"System.Int32\"></xref> value that specifies the number of bytes to read from <code>buffer</code>.","nodes":[{"pos":[0,111],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Int32\"&gt;&lt;/xref&gt;</ph> value that specifies the number of bytes to read from <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">buffer</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"An <xref href=\"System.Int32\"></xref> value that specifies the number of bytes to read from <code>buffer</code>."}],"pos":[125986,126098],"yaml":true},{"content":"An <xref href=\"System.AsyncCallback\"></xref> delegate that references the method to invoke when the write operation is complete.","nodes":[{"pos":[0,128],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.AsyncCallback\"&gt;&lt;/xref&gt;</ph> delegate that references the method to invoke when the write operation is complete.","source":"An <xref href=\"System.AsyncCallback\"></xref> delegate that references the method to invoke when the write operation is complete."}],"pos":[126174,126303],"yaml":true},{"content":"A user-defined object that contains information about the write operation. This object is passed to the <code>asyncCallback</code> delegate when the operation completes.","nodes":[{"pos":[0,169],"content":"A user-defined object that contains information about the write operation. This object is passed to the <code>asyncCallback</code> delegate when the operation completes.","nodes":[{"content":"A user-defined object that contains information about the write operation.","pos":[0,74]},{"content":"This object is passed to the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">asyncCallback</ph><ept id=\"p1\">&lt;/code&gt;</ept> delegate when the operation completes.","pos":[75,169],"source":" This object is passed to the <code>asyncCallback</code> delegate when the operation completes."}]}],"pos":[126369,126539],"yaml":true},{"content":"An <xref href=\"System.IAsyncResult\"></xref> object indicating the status of the asynchronous operation.","nodes":[{"pos":[0,103],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.IAsyncResult\"&gt;&lt;/xref&gt;</ph> object indicating the status of the asynchronous operation.","source":"An <xref href=\"System.IAsyncResult\"></xref> object indicating the status of the asynchronous operation."}],"pos":[126602,126706],"yaml":true},{"content":"<code>buffer</code> is `null`.","nodes":[{"pos":[0,30],"content":"<ph id=\"ph1\">&lt;code&gt;buffer&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>buffer</code> is `null`."}],"pos":[126876,126907],"yaml":true},{"content":"<code>offset</code>\n    <code><</code>\n    <code>0</code>.  \n  \n <code>-or-</code><code>offset</code> > the length of <code>buffer</code>.  \n  \n -or-  \n  \n <code>offset</code> + count > the length of <code>buffer</code>.","nodes":[{"pos":[0,138],"content":"<code>offset</code>\n    <code><</code>\n    <code>0</code>.  \n  \n <code>-or-</code><code>offset</code> > the length of <code>buffer</code>.","nodes":[{"content":"<ph id=\"ph1\">&lt;code&gt;offset&lt;/code&gt;</ph><ph id=\"ph2\">\n    &lt;code&gt;&lt;&lt;/code&gt;</ph><ph id=\"ph3\">\n    &lt;code&gt;0&lt;/code&gt;</ph>.","pos":[0,58],"source":"<code>offset</code>\n    <code><</code>\n    <code>0</code>."},{"content":"<ph id=\"ph1\">&lt;code&gt;-or-&lt;/code&gt;</ph><ph id=\"ph2\">&lt;code&gt;offset&lt;/code&gt;</ph><ph id=\"ph3\"> &gt;</ph> the length of <ph id=\"ph4\">&lt;code&gt;buffer&lt;/code&gt;</ph>.","pos":[65,138],"source":"<code>-or-</code><code>offset</code> > the length of <code>buffer</code>."}]},{"pos":[145,149],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[156,220],"content":"<ph id=\"ph1\">&lt;code&gt;offset&lt;/code&gt;</ph><ph id=\"ph2\"> +</ph> count &gt; the length of <ph id=\"ph3\">&lt;code&gt;buffer&lt;/code&gt;</ph>.","source":"<code>offset</code> + count > the length of <code>buffer</code>."}],"pos":[127001,127232],"yaml":true},{"content":"The write operation failed.","nodes":[{"pos":[0,27],"content":"The write operation failed.","nodes":[{"content":"The write operation failed.","pos":[0,27]}]}],"pos":[127320,127348],"yaml":true},{"content":"There is already a write operation in progress.","nodes":[{"pos":[0,47],"content":"There is already a write operation in progress.","nodes":[{"content":"There is already a write operation in progress.","pos":[0,47]}]}],"pos":[127450,127498],"yaml":true},{"content":"This object has been closed.","nodes":[{"pos":[0,28],"content":"This object has been closed.","nodes":[{"content":"This object has been closed.","pos":[0,28]}]}],"pos":[127604,127633],"yaml":true},{"content":"Authentication has not occurred.","nodes":[{"pos":[0,32],"content":"Authentication has not occurred.","nodes":[{"content":"Authentication has not occurred.","pos":[0,32]}]}],"pos":[127743,127776],"yaml":true},{"content":"Gets a <xref href=\"System.Boolean\"></xref> value that indicates whether the underlying stream is readable.","nodes":[{"pos":[0,106],"content":"Gets a <ph id=\"ph1\">&lt;xref href=\"System.Boolean\"&gt;&lt;/xref&gt;</ph> value that indicates whether the underlying stream is readable.","source":"Gets a <xref href=\"System.Boolean\"></xref> value that indicates whether the underlying stream is readable."}],"pos":[128820,128927],"yaml":true},{"content":"If successful authentication has occurred, this property returns the value returned by invoking <xref:System.IO.Stream.CanRead%2A> on the underlying stream.  \n  \n The underlying stream is specified when you create an instance of the <xref:System.Net.Security.SslStream> class.","nodes":[{"pos":[0,156],"content":"If successful authentication has occurred, this property returns the value returned by invoking <xref:System.IO.Stream.CanRead%2A> on the underlying stream.","nodes":[{"content":"If successful authentication has occurred, this property returns the value returned by invoking <ph id=\"ph1\">&lt;xref:System.IO.Stream.CanRead%2A&gt;</ph> on the underlying stream.","pos":[0,156],"source":"If successful authentication has occurred, this property returns the value returned by invoking <xref:System.IO.Stream.CanRead%2A> on the underlying stream."}]},{"pos":[163,276],"content":"The underlying stream is specified when you create an instance of the <xref:System.Net.Security.SslStream> class.","nodes":[{"content":"The underlying stream is specified when you create an instance of the <ph id=\"ph1\">&lt;xref:System.Net.Security.SslStream&gt;</ph> class.","pos":[0,113],"source":"The underlying stream is specified when you create an instance of the <xref:System.Net.Security.SslStream> class."}]}],"pos":[128938,129219],"yaml":true,"extradata":"MT"},{"content":"`true` if authentication has occurred and the underlying stream is readable; otherwise `false`.","nodes":[{"pos":[0,95],"content":"<ph id=\"ph1\">`true`</ph> if authentication has occurred and the underlying stream is readable; otherwise <ph id=\"ph2\">`false`</ph>.","source":"`true` if authentication has occurred and the underlying stream is readable; otherwise `false`."}],"pos":[129684,129782],"yaml":true},{"content":"Gets a <xref href=\"System.Boolean\"></xref> value that indicates whether the underlying stream is seekable.","nodes":[{"pos":[0,106],"content":"Gets a <ph id=\"ph1\">&lt;xref href=\"System.Boolean\"&gt;&lt;/xref&gt;</ph> value that indicates whether the underlying stream is seekable.","source":"Gets a <xref href=\"System.Boolean\"></xref> value that indicates whether the underlying stream is seekable."}],"pos":[130958,131065],"yaml":true},{"content":"Do not attempt to set the position of the <xref:System.Net.Security.SslStream> object or its underlying stream.  \n  \n The underlying stream is specified when you create an instance of the <xref:System.Net.Security.SslStream> class.","nodes":[{"pos":[0,111],"content":"Do not attempt to set the position of the <xref:System.Net.Security.SslStream> object or its underlying stream.","nodes":[{"content":"Do not attempt to set the position of the <ph id=\"ph1\">&lt;xref:System.Net.Security.SslStream&gt;</ph> object or its underlying stream.","pos":[0,111],"source":"Do not attempt to set the position of the <xref:System.Net.Security.SslStream> object or its underlying stream."}]},{"pos":[118,231],"content":"The underlying stream is specified when you create an instance of the <xref:System.Net.Security.SslStream> class.","nodes":[{"content":"The underlying stream is specified when you create an instance of the <ph id=\"ph1\">&lt;xref:System.Net.Security.SslStream&gt;</ph> class.","pos":[0,113],"source":"The underlying stream is specified when you create an instance of the <xref:System.Net.Security.SslStream> class."}]}],"pos":[131076,131312],"yaml":true,"extradata":"MT"},{"content":"This property always returns `false`.","nodes":[{"pos":[0,37],"content":"This property always returns <ph id=\"ph1\">`false`</ph>.","source":"This property always returns `false`."}],"pos":[131431,131469],"yaml":true},{"content":"Gets a <xref href=\"System.Boolean\"></xref> value that indicates whether the underlying stream supports time-outs.","nodes":[{"pos":[0,113],"content":"Gets a <ph id=\"ph1\">&lt;xref href=\"System.Boolean\"&gt;&lt;/xref&gt;</ph> value that indicates whether the underlying stream supports time-outs.","source":"Gets a <xref href=\"System.Boolean\"></xref> value that indicates whether the underlying stream supports time-outs."}],"pos":[132663,132777],"yaml":true},{"content":"This property returns the value returned by invoking <xref:System.IO.Stream.CanTimeout%2A> on the underlying stream.  \n  \n The underlying stream is specified when you create an instance of the <xref:System.Net.Security.SslStream> class.","nodes":[{"pos":[0,116],"content":"This property returns the value returned by invoking <xref:System.IO.Stream.CanTimeout%2A> on the underlying stream.","nodes":[{"content":"This property returns the value returned by invoking <ph id=\"ph1\">&lt;xref:System.IO.Stream.CanTimeout%2A&gt;</ph> on the underlying stream.","pos":[0,116],"source":"This property returns the value returned by invoking <xref:System.IO.Stream.CanTimeout%2A> on the underlying stream."}]},{"pos":[123,236],"content":"The underlying stream is specified when you create an instance of the <xref:System.Net.Security.SslStream> class.","nodes":[{"content":"The underlying stream is specified when you create an instance of the <ph id=\"ph1\">&lt;xref:System.Net.Security.SslStream&gt;</ph> class.","pos":[0,113],"source":"The underlying stream is specified when you create an instance of the <xref:System.Net.Security.SslStream> class."}]}],"pos":[132788,133029],"yaml":true,"extradata":"MT"},{"content":"`true` if the underlying stream supports time-outs; otherwise, `false`.","nodes":[{"pos":[0,71],"content":"<ph id=\"ph1\">`true`</ph> if the underlying stream supports time-outs; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the underlying stream supports time-outs; otherwise, `false`."}],"pos":[133497,133571],"yaml":true},{"content":"Gets a <xref href=\"System.Boolean\"></xref> value that indicates whether the underlying stream is writable.","nodes":[{"pos":[0,106],"content":"Gets a <ph id=\"ph1\">&lt;xref href=\"System.Boolean\"&gt;&lt;/xref&gt;</ph> value that indicates whether the underlying stream is writable.","source":"Gets a <xref href=\"System.Boolean\"></xref> value that indicates whether the underlying stream is writable."}],"pos":[134756,134863],"yaml":true},{"content":"If successful authentication has occurred, this property returns the value returned by invoking <xref:System.IO.Stream.CanWrite%2A> on the underlying stream.  \n  \n The underlying stream is specified when you create an instance of the <xref:System.Net.Security.SslStream> class.","nodes":[{"pos":[0,157],"content":"If successful authentication has occurred, this property returns the value returned by invoking <xref:System.IO.Stream.CanWrite%2A> on the underlying stream.","nodes":[{"content":"If successful authentication has occurred, this property returns the value returned by invoking <ph id=\"ph1\">&lt;xref:System.IO.Stream.CanWrite%2A&gt;</ph> on the underlying stream.","pos":[0,157],"source":"If successful authentication has occurred, this property returns the value returned by invoking <xref:System.IO.Stream.CanWrite%2A> on the underlying stream."}]},{"pos":[164,277],"content":"The underlying stream is specified when you create an instance of the <xref:System.Net.Security.SslStream> class.","nodes":[{"content":"The underlying stream is specified when you create an instance of the <ph id=\"ph1\">&lt;xref:System.Net.Security.SslStream&gt;</ph> class.","pos":[0,113],"source":"The underlying stream is specified when you create an instance of the <xref:System.Net.Security.SslStream> class."}]}],"pos":[134874,135156],"yaml":true,"extradata":"MT"},{"content":"`true` if authentication has occurred and the underlying stream is writable; otherwise `false`.","nodes":[{"pos":[0,95],"content":"<ph id=\"ph1\">`true`</ph> if authentication has occurred and the underlying stream is writable; otherwise <ph id=\"ph2\">`false`</ph>.","source":"`true` if authentication has occurred and the underlying stream is writable; otherwise `false`."}],"pos":[135622,135720],"yaml":true},{"content":"Gets a <xref href=\"System.Boolean\"></xref> value that indicates whether the certificate revocation list is checked during the certificate validation process.","nodes":[{"pos":[0,157],"content":"Gets a <ph id=\"ph1\">&lt;xref href=\"System.Boolean\"&gt;&lt;/xref&gt;</ph> value that indicates whether the certificate revocation list is checked during the certificate validation process.","source":"Gets a <xref href=\"System.Boolean\"></xref> value that indicates whether the certificate revocation list is checked during the certificate validation process."}],"pos":[137005,137163],"yaml":true},{"content":"The certificate revocation list contains certificates that have been revoked by the issuer. Checking the list negatively impacts performance but improves application security.","nodes":[{"pos":[0,175],"content":"The certificate revocation list contains certificates that have been revoked by the issuer. Checking the list negatively impacts performance but improves application security.","nodes":[{"content":"The certificate revocation list contains certificates that have been revoked by the issuer. Checking the list negatively impacts performance but improves application security.","pos":[0,175],"nodes":[{"content":"The certificate revocation list contains certificates that have been revoked by the issuer.","pos":[0,91]},{"content":"Checking the list negatively impacts performance but improves application security.","pos":[92,175]}]}]}],"pos":[137174,137350],"yaml":true,"extradata":"MT"},{"content":"`true` if the certificate revocation list is checked; otherwise, `false`.","nodes":[{"pos":[0,73],"content":"<ph id=\"ph1\">`true`</ph> if the certificate revocation list is checked; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the certificate revocation list is checked; otherwise, `false`."}],"pos":[137832,137908],"yaml":true},{"content":"Gets a value that identifies the bulk encryption algorithm used by this <xref href=\"System.Net.Security.SslStream\"></xref>.","nodes":[{"pos":[0,123],"content":"Gets a value that identifies the bulk encryption algorithm used by this <ph id=\"ph1\">&lt;xref href=\"System.Net.Security.SslStream\"&gt;&lt;/xref&gt;</ph>.","source":"Gets a value that identifies the bulk encryption algorithm used by this <xref href=\"System.Net.Security.SslStream\"></xref>."}],"pos":[139150,139274],"yaml":true},{"content":"A value of <xref:System.Security.Authentication.CipherAlgorithmType.Null> is required for the <xref:System.Net.Security.SslStream.CipherAlgorithm%2A> property when the <xref:System.Net.Security.EncryptionPolicy.NoEncryption> enumeration value is used to construct a <xref:System.Net.Security.SslStream> instance.  \n  \n [!INCLUDE[winxpsvr](~/includes/winxpsvr-md.md)] and [!INCLUDE[winxp](~/includes/winxp-md.md)] do not support the <xref:System.Security.Authentication.CipherAlgorithmType.Null> value. So even if the <xref:System.Security.Authentication.CipherAlgorithmType.Null> value is used to construct the <xref:System.Net.Security.SslStream> instance, the <xref:System.Net.Security.EncryptionPolicy> property will be <xref:System.Security.Authentication.CipherAlgorithmType.None>. The <xref:System.Security.Authentication.CipherAlgorithmType.Null> value is only returned on Windows Vista and later.","nodes":[{"pos":[0,312],"content":"A value of <xref:System.Security.Authentication.CipherAlgorithmType.Null> is required for the <xref:System.Net.Security.SslStream.CipherAlgorithm%2A> property when the <xref:System.Net.Security.EncryptionPolicy.NoEncryption> enumeration value is used to construct a <xref:System.Net.Security.SslStream> instance.","nodes":[{"content":"A value of <ph id=\"ph1\">&lt;xref:System.Security.Authentication.CipherAlgorithmType.Null&gt;</ph> is required for the <ph id=\"ph2\">&lt;xref:System.Net.Security.SslStream.CipherAlgorithm%2A&gt;</ph> property when the <ph id=\"ph3\">&lt;xref:System.Net.Security.EncryptionPolicy.NoEncryption&gt;</ph> enumeration value is used to construct a <ph id=\"ph4\">&lt;xref:System.Net.Security.SslStream&gt;</ph> instance.","pos":[0,312],"source":"A value of <xref:System.Security.Authentication.CipherAlgorithmType.Null> is required for the <xref:System.Net.Security.SslStream.CipherAlgorithm%2A> property when the <xref:System.Net.Security.EncryptionPolicy.NoEncryption> enumeration value is used to construct a <xref:System.Net.Security.SslStream> instance."}]},{"pos":[319,904],"content":"[!INCLUDE[winxpsvr](~/includes/winxpsvr-md.md)] and [!INCLUDE[winxp](~/includes/winxp-md.md)] do not support the <xref:System.Security.Authentication.CipherAlgorithmType.Null> value. So even if the <xref:System.Security.Authentication.CipherAlgorithmType.Null> value is used to construct the <xref:System.Net.Security.SslStream> instance, the <xref:System.Net.Security.EncryptionPolicy> property will be <xref:System.Security.Authentication.CipherAlgorithmType.None>. The <xref:System.Security.Authentication.CipherAlgorithmType.Null> value is only returned on Windows Vista and later.","nodes":[{"content":"<ph id=\"ph1\">[!INCLUDE[winxpsvr](~/includes/winxpsvr-md.md)]</ph> and <ph id=\"ph2\">[!INCLUDE[winxp](~/includes/winxp-md.md)]</ph> do not support the <ph id=\"ph3\">&lt;xref:System.Security.Authentication.CipherAlgorithmType.Null&gt;</ph> value.","pos":[0,182],"source":"[!INCLUDE[winxpsvr](~/includes/winxpsvr-md.md)] and [!INCLUDE[winxp](~/includes/winxp-md.md)] do not support the <xref:System.Security.Authentication.CipherAlgorithmType.Null> value."},{"content":"So even if the <ph id=\"ph1\">&lt;xref:System.Security.Authentication.CipherAlgorithmType.Null&gt;</ph> value is used to construct the <ph id=\"ph2\">&lt;xref:System.Net.Security.SslStream&gt;</ph> instance, the <ph id=\"ph3\">&lt;xref:System.Net.Security.EncryptionPolicy&gt;</ph> property will be <ph id=\"ph4\">&lt;xref:System.Security.Authentication.CipherAlgorithmType.None&gt;</ph>.","pos":[183,467],"source":" So even if the <xref:System.Security.Authentication.CipherAlgorithmType.Null> value is used to construct the <xref:System.Net.Security.SslStream> instance, the <xref:System.Net.Security.EncryptionPolicy> property will be <xref:System.Security.Authentication.CipherAlgorithmType.None>."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Security.Authentication.CipherAlgorithmType.Null&gt;</ph> value is only returned on Windows Vista and later.","pos":[468,585],"source":" The <xref:System.Security.Authentication.CipherAlgorithmType.Null> value is only returned on Windows Vista and later."}]}],"pos":[139285,140194],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Security.Authentication.CipherAlgorithmType\"></xref> value.","nodes":[{"pos":[0,80],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Security.Authentication.CipherAlgorithmType\"&gt;&lt;/xref&gt;</ph> value.","source":"A <xref href=\"System.Security.Authentication.CipherAlgorithmType\"></xref> value."}],"pos":[140757,140838],"yaml":true},{"content":"The <xref href=\"System.Net.Security.SslStream.CipherAlgorithm\"></xref> property was accessed before the completion of the authentication process or the authentication process failed.","nodes":[{"pos":[0,182],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Net.Security.SslStream.CipherAlgorithm\"&gt;&lt;/xref&gt;</ph> property was accessed before the completion of the authentication process or the authentication process failed.","source":"The <xref href=\"System.Net.Security.SslStream.CipherAlgorithm\"></xref> property was accessed before the completion of the authentication process or the authentication process failed."}],"pos":[141021,141204],"yaml":true},{"content":"Gets a value that identifies the strength of the cipher algorithm used by this <xref href=\"System.Net.Security.SslStream\"></xref>.","nodes":[{"pos":[0,130],"content":"Gets a value that identifies the strength of the cipher algorithm used by this <ph id=\"ph1\">&lt;xref href=\"System.Net.Security.SslStream\"&gt;&lt;/xref&gt;</ph>.","source":"Gets a value that identifies the strength of the cipher algorithm used by this <xref href=\"System.Net.Security.SslStream\"></xref>."}],"pos":[142354,142485],"yaml":true},{"content":"The value of this property is zero until the authentication occurs.  \n  \n This property returns one of the following values:  \n  \n-   0  \n  \n-   40  \n  \n-   56  \n  \n-   80  \n  \n-   128  \n  \n-   168  \n  \n-   192  \n  \n-   256","nodes":[{"pos":[0,67],"content":"The value of this property is zero until the authentication occurs.","nodes":[{"content":"The value of this property is zero until the authentication occurs.","pos":[0,67]}]},{"pos":[74,124],"content":"This property returns one of the following values:","nodes":[{"content":"This property returns one of the following values:","pos":[0,50]}]},{"pos":[134,135],"content":"0","nodes":[{"content":"0","pos":[0,1]}]},{"pos":[145,147],"content":"40","nodes":[{"content":"40","pos":[0,2]}]},{"pos":[157,159],"content":"56","nodes":[{"content":"56","pos":[0,2]}]},{"pos":[169,171],"content":"80","nodes":[{"content":"80","pos":[0,2]}]},{"pos":[181,184],"content":"128","nodes":[{"content":"128","pos":[0,3]}]},{"pos":[194,197],"content":"168","nodes":[{"content":"168","pos":[0,3]}]},{"pos":[207,210],"content":"192","nodes":[{"content":"192","pos":[0,3]}]},{"pos":[220,223],"content":"256","nodes":[{"content":"256","pos":[0,3]}]}],"pos":[142496,142740],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.Int32\"></xref> value that specifies the strength of the algorithm, in bits.","nodes":[{"pos":[0,97],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Int32\"&gt;&lt;/xref&gt;</ph> value that specifies the strength of the algorithm, in bits.","source":"An <xref href=\"System.Int32\"></xref> value that specifies the strength of the algorithm, in bits."}],"pos":[143217,143315],"yaml":true},{"content":"Releases the unmanaged resources used by the <xref href=\"System.Net.Security.SslStream\"></xref> and optionally releases the managed resources.","nodes":[{"pos":[0,142],"content":"Releases the unmanaged resources used by the <ph id=\"ph1\">&lt;xref href=\"System.Net.Security.SslStream\"&gt;&lt;/xref&gt;</ph> and optionally releases the managed resources.","source":"Releases the unmanaged resources used by the <xref href=\"System.Net.Security.SslStream\"></xref> and optionally releases the managed resources."}],"pos":[144571,144714],"yaml":true},{"content":"This method is called by the public `Dispose()` method and the <xref:System.Object.Finalize%2A> method. `Dispose()` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`. <xref:System.Object.Finalize%2A> invokes `Dispose` with `disposing` set to `false`.  \n  \n When the `disposing` parameter is true, this method releases all resources held by any managed objects that this <xref:System.Net.Security.SslStream> references. This method invokes the `Dispose()` method of each referenced object.","nodes":[{"pos":[0,293],"content":"This method is called by the public `Dispose()` method and the <xref:System.Object.Finalize%2A> method. `Dispose()` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`. <xref:System.Object.Finalize%2A> invokes `Dispose` with `disposing` set to `false`.","nodes":[{"content":"This method is called by the public <ph id=\"ph1\">`Dispose()`</ph> method and the <ph id=\"ph2\">&lt;xref:System.Object.Finalize%2A&gt;</ph> method.","pos":[0,103],"source":"This method is called by the public `Dispose()` method and the <xref:System.Object.Finalize%2A> method."},{"content":"<ph id=\"ph1\">`Dispose()`</ph> invokes the protected <ph id=\"ph2\">`Dispose(Boolean)`</ph> method with the <ph id=\"ph3\">`disposing`</ph> parameter set to <ph id=\"ph4\">`true`</ph>.","pos":[104,209],"source":"`Dispose()` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`."},{"content":"<ph id=\"ph1\">&lt;xref:System.Object.Finalize%2A&gt;</ph> invokes <ph id=\"ph2\">`Dispose`</ph> with <ph id=\"ph3\">`disposing`</ph> set to <ph id=\"ph4\">`false`</ph>.","pos":[210,293],"source":" <xref:System.Object.Finalize%2A> invokes `Dispose` with `disposing` set to `false`."}]},{"pos":[300,531],"content":"When the `disposing` parameter is true, this method releases all resources held by any managed objects that this <xref:System.Net.Security.SslStream> references. This method invokes the `Dispose()` method of each referenced object.","nodes":[{"content":"When the <ph id=\"ph1\">`disposing`</ph> parameter is true, this method releases all resources held by any managed objects that this <ph id=\"ph2\">&lt;xref:System.Net.Security.SslStream&gt;</ph> references.","pos":[0,161],"source":"When the `disposing` parameter is true, this method releases all resources held by any managed objects that this <xref:System.Net.Security.SslStream> references."},{"content":"This method invokes the <ph id=\"ph1\">`Dispose()`</ph> method of each referenced object.","pos":[162,231],"source":" This method invokes the `Dispose()` method of each referenced object."}]}],"pos":[144725,145261],"yaml":true,"extradata":"MT"},{"content":"`true` to release both managed and unmanaged resources; `false` to release only unmanaged resources.","nodes":[{"pos":[0,100],"content":"<ph id=\"ph1\">`true`</ph> to release both managed and unmanaged resources; <ph id=\"ph2\">`false`</ph> to release only unmanaged resources.","source":"`true` to release both managed and unmanaged resources; `false` to release only unmanaged resources."}],"pos":[145416,145519],"yaml":true},{"content":"Ends a pending asynchronous server authentication operation started with a previous call to <xref href=\"System.Net.Security.SslStream.BeginAuthenticateAsServer*\"></xref>.","nodes":[{"pos":[0,170],"content":"Ends a pending asynchronous server authentication operation started with a previous call to <ph id=\"ph1\">&lt;xref href=\"System.Net.Security.SslStream.BeginAuthenticateAsServer*\"&gt;&lt;/xref&gt;</ph>.","source":"Ends a pending asynchronous server authentication operation started with a previous call to <xref href=\"System.Net.Security.SslStream.BeginAuthenticateAsServer*\"></xref>."}],"pos":[146830,147001],"yaml":true},{"content":"If the operation has not completed, this method blocks until it does. When the authentication succeeds, you must check the <xref:System.Net.Security.SslStream.IsEncrypted%2A> and <xref:System.Net.Security.SslStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.SslStream>. Check the <xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.  \n  \n If the authentication fails, you receive a <xref:System.Security.Authentication.AuthenticationException>, and this <xref:System.Net.Security.SslStream> is no longer useable. You should close this object and remove all references to it so that it can be collected by the garbage collector.  \n  \n To perform this operation synchronously, use one of the <xref:System.Net.Security.SslStream.AuthenticateAsServer%2A> methods.","nodes":[{"pos":[0,464],"content":"If the operation has not completed, this method blocks until it does. When the authentication succeeds, you must check the <xref:System.Net.Security.SslStream.IsEncrypted%2A> and <xref:System.Net.Security.SslStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.SslStream>. Check the <xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.","nodes":[{"content":"If the operation has not completed, this method blocks until it does. When the authentication succeeds, you must check the <xref:System.Net.Security.SslStream.IsEncrypted%2A> and <xref:System.Net.Security.SslStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.SslStream>. Check the <xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.","pos":[0,464],"nodes":[{"content":"If the operation has not completed, this method blocks until it does.","pos":[0,69]},{"content":"When the authentication succeeds, you must check the <ph id=\"ph1\">&lt;xref:System.Net.Security.SslStream.IsEncrypted%2A&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Net.Security.SslStream.IsSigned%2A&gt;</ph> properties to determine what security services are used by the <ph id=\"ph3\">&lt;xref:System.Net.Security.SslStream&gt;</ph>.","pos":[70,328],"source":" When the authentication succeeds, you must check the <xref:System.Net.Security.SslStream.IsEncrypted%2A> and <xref:System.Net.Security.SslStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.SslStream>."},{"content":"Check the <ph id=\"ph1\">&lt;xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A&gt;</ph> property to determine whether mutual authentication occurred.","pos":[329,464],"source":" Check the <xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred."}]}]},{"pos":[471,759],"content":"If the authentication fails, you receive a <xref:System.Security.Authentication.AuthenticationException>, and this <xref:System.Net.Security.SslStream> is no longer useable. You should close this object and remove all references to it so that it can be collected by the garbage collector.","nodes":[{"content":"If the authentication fails, you receive a <xref:System.Security.Authentication.AuthenticationException>, and this <xref:System.Net.Security.SslStream> is no longer useable. You should close this object and remove all references to it so that it can be collected by the garbage collector.","pos":[0,288],"nodes":[{"content":"If the authentication fails, you receive a <ph id=\"ph1\">&lt;xref:System.Security.Authentication.AuthenticationException&gt;</ph>, and this <ph id=\"ph2\">&lt;xref:System.Net.Security.SslStream&gt;</ph> is no longer useable.","pos":[0,173],"source":"If the authentication fails, you receive a <xref:System.Security.Authentication.AuthenticationException>, and this <xref:System.Net.Security.SslStream> is no longer useable."},{"content":"You should close this object and remove all references to it so that it can be collected by the garbage collector.","pos":[174,288]}]}]},{"pos":[766,891],"content":"To perform this operation synchronously, use one of the <xref:System.Net.Security.SslStream.AuthenticateAsServer%2A> methods.","nodes":[{"content":"To perform this operation synchronously, use one of the <ph id=\"ph1\">&lt;xref:System.Net.Security.SslStream.AuthenticateAsServer%2A&gt;</ph> methods.","pos":[0,125],"source":"To perform this operation synchronously, use one of the <xref:System.Net.Security.SslStream.AuthenticateAsServer%2A> methods."}]}],"pos":[147012,147910],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.IAsyncResult\"></xref> instance returned by a call to <xref href=\"System.Net.Security.SslStream.BeginAuthenticateAsServer*\"></xref>.","nodes":[{"pos":[0,153],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.IAsyncResult\"&gt;&lt;/xref&gt;</ph> instance returned by a call to <ph id=\"ph2\">&lt;xref href=\"System.Net.Security.SslStream.BeginAuthenticateAsServer*\"&gt;&lt;/xref&gt;</ph>.","source":"An <xref href=\"System.IAsyncResult\"></xref> instance returned by a call to <xref href=\"System.Net.Security.SslStream.BeginAuthenticateAsServer*\"></xref>."}],"pos":[148094,148248],"yaml":true},{"content":"<code>asyncResult</code> is `null`.","nodes":[{"pos":[0,35],"content":"<ph id=\"ph1\">&lt;code&gt;asyncResult&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>asyncResult</code> is `null`."}],"pos":[148431,148467],"yaml":true},{"content":"<code>asyncResult</code> was not created by a call to <xref href=\"System.Net.Security.SslStream.BeginAuthenticateAsServer*\"></xref>.","nodes":[{"pos":[0,132],"content":"<ph id=\"ph1\">&lt;code&gt;asyncResult&lt;/code&gt;</ph> was not created by a call to <ph id=\"ph2\">&lt;xref href=\"System.Net.Security.SslStream.BeginAuthenticateAsServer*\"&gt;&lt;/xref&gt;</ph>.","source":"<code>asyncResult</code> was not created by a call to <xref href=\"System.Net.Security.SslStream.BeginAuthenticateAsServer*\"></xref>."}],"pos":[148561,148694],"yaml":true},{"content":"The authentication failed and left this object in an unusable state.","nodes":[{"pos":[0,68],"content":"The authentication failed and left this object in an unusable state.","nodes":[{"content":"The authentication failed and left this object in an unusable state.","pos":[0,68]}]}],"pos":[148848,148917],"yaml":true},{"content":"There is no pending server authentication to complete.","nodes":[{"pos":[0,54],"content":"There is no pending server authentication to complete.","nodes":[{"content":"There is no pending server authentication to complete.","pos":[0,54]}]}],"pos":[149027,149082],"yaml":true},{"content":"Ends a pending asynchronous client authentication operation started with a previous call to <xref href=\"System.Net.Security.SslStream.BeginAuthenticateAsClient*\"></xref>.","nodes":[{"pos":[0,170],"content":"Ends a pending asynchronous client authentication operation started with a previous call to <ph id=\"ph1\">&lt;xref href=\"System.Net.Security.SslStream.BeginAuthenticateAsClient*\"&gt;&lt;/xref&gt;</ph>.","source":"Ends a pending asynchronous client authentication operation started with a previous call to <xref href=\"System.Net.Security.SslStream.BeginAuthenticateAsClient*\"></xref>."}],"pos":[150325,150496],"yaml":true},{"content":"If the operation has not completed, this method blocks until it does. When the authentication succeeds, you must check the <xref:System.Net.Security.SslStream.IsEncrypted%2A> and <xref:System.Net.Security.SslStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.SslStream>. Check the <xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.  \n  \n If the authentication fails, you receive a <xref:System.Security.Authentication.AuthenticationException>, and this <xref:System.Net.Security.SslStream> is no longer useable. You should close this object and remove all references to it so that it can be collected by the garbage collector.  \n  \n To perform this operation synchronously, use one of the <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A> method.","nodes":[{"pos":[0,464],"content":"If the operation has not completed, this method blocks until it does. When the authentication succeeds, you must check the <xref:System.Net.Security.SslStream.IsEncrypted%2A> and <xref:System.Net.Security.SslStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.SslStream>. Check the <xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.","nodes":[{"content":"If the operation has not completed, this method blocks until it does. When the authentication succeeds, you must check the <xref:System.Net.Security.SslStream.IsEncrypted%2A> and <xref:System.Net.Security.SslStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.SslStream>. Check the <xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.","pos":[0,464],"nodes":[{"content":"If the operation has not completed, this method blocks until it does.","pos":[0,69]},{"content":"When the authentication succeeds, you must check the <ph id=\"ph1\">&lt;xref:System.Net.Security.SslStream.IsEncrypted%2A&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Net.Security.SslStream.IsSigned%2A&gt;</ph> properties to determine what security services are used by the <ph id=\"ph3\">&lt;xref:System.Net.Security.SslStream&gt;</ph>.","pos":[70,328],"source":" When the authentication succeeds, you must check the <xref:System.Net.Security.SslStream.IsEncrypted%2A> and <xref:System.Net.Security.SslStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.SslStream>."},{"content":"Check the <ph id=\"ph1\">&lt;xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A&gt;</ph> property to determine whether mutual authentication occurred.","pos":[329,464],"source":" Check the <xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred."}]}]},{"pos":[471,759],"content":"If the authentication fails, you receive a <xref:System.Security.Authentication.AuthenticationException>, and this <xref:System.Net.Security.SslStream> is no longer useable. You should close this object and remove all references to it so that it can be collected by the garbage collector.","nodes":[{"content":"If the authentication fails, you receive a <xref:System.Security.Authentication.AuthenticationException>, and this <xref:System.Net.Security.SslStream> is no longer useable. You should close this object and remove all references to it so that it can be collected by the garbage collector.","pos":[0,288],"nodes":[{"content":"If the authentication fails, you receive a <ph id=\"ph1\">&lt;xref:System.Security.Authentication.AuthenticationException&gt;</ph>, and this <ph id=\"ph2\">&lt;xref:System.Net.Security.SslStream&gt;</ph> is no longer useable.","pos":[0,173],"source":"If the authentication fails, you receive a <xref:System.Security.Authentication.AuthenticationException>, and this <xref:System.Net.Security.SslStream> is no longer useable."},{"content":"You should close this object and remove all references to it so that it can be collected by the garbage collector.","pos":[174,288]}]}]},{"pos":[766,890],"content":"To perform this operation synchronously, use one of the <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A> method.","nodes":[{"content":"To perform this operation synchronously, use one of the <ph id=\"ph1\">&lt;xref:System.Net.Security.SslStream.AuthenticateAsClient%2A&gt;</ph> method.","pos":[0,124],"source":"To perform this operation synchronously, use one of the <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A> method."}]}],"pos":[150507,151404],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.IAsyncResult\"></xref> instance returned by a call to <xref href=\"System.Net.Security.SslStream.BeginAuthenticateAsClient*\"></xref>.","nodes":[{"pos":[0,153],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.IAsyncResult\"&gt;&lt;/xref&gt;</ph> instance returned by a call to <ph id=\"ph2\">&lt;xref href=\"System.Net.Security.SslStream.BeginAuthenticateAsClient*\"&gt;&lt;/xref&gt;</ph>.","source":"An <xref href=\"System.IAsyncResult\"></xref> instance returned by a call to <xref href=\"System.Net.Security.SslStream.BeginAuthenticateAsClient*\"></xref>."}],"pos":[151588,151742],"yaml":true},{"content":"<code>asyncResult</code> is `null`.","nodes":[{"pos":[0,35],"content":"<ph id=\"ph1\">&lt;code&gt;asyncResult&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>asyncResult</code> is `null`."}],"pos":[151925,151961],"yaml":true},{"content":"<code>asyncResult</code> was not created by a call to <xref href=\"System.Net.Security.SslStream.BeginAuthenticateAsClient*\"></xref>.","nodes":[{"pos":[0,132],"content":"<ph id=\"ph1\">&lt;code&gt;asyncResult&lt;/code&gt;</ph> was not created by a call to <ph id=\"ph2\">&lt;xref href=\"System.Net.Security.SslStream.BeginAuthenticateAsClient*\"&gt;&lt;/xref&gt;</ph>.","source":"<code>asyncResult</code> was not created by a call to <xref href=\"System.Net.Security.SslStream.BeginAuthenticateAsClient*\"></xref>."}],"pos":[152055,152188],"yaml":true},{"content":"The authentication failed and left this object in an unusable state.","nodes":[{"pos":[0,68],"content":"The authentication failed and left this object in an unusable state.","nodes":[{"content":"The authentication failed and left this object in an unusable state.","pos":[0,68]}]}],"pos":[152342,152411],"yaml":true},{"content":"There is no pending client authentication to complete.","nodes":[{"pos":[0,54],"content":"There is no pending client authentication to complete.","nodes":[{"content":"There is no pending client authentication to complete.","pos":[0,54]}]}],"pos":[152521,152576],"yaml":true},{"content":"Ends an asynchronous read operation started with a previous call to <xref href=\"System.Net.Security.SslStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)\"></xref>.","nodes":[{"pos":[0,205],"content":"Ends an asynchronous read operation started with a previous call to <ph id=\"ph1\">&lt;xref href=\"System.Net.Security.SslStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)\"&gt;&lt;/xref&gt;</ph>.","source":"Ends an asynchronous read operation started with a previous call to <xref href=\"System.Net.Security.SslStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)\"></xref>."}],"pos":[153723,153929],"yaml":true},{"content":"If the operation has not completed, this method blocks until it does.  \n  \n To perform this operation synchronously, use the <xref:System.Net.Security.SslStream.Read%2A> method.  \n  \n You cannot call this method until you have successfully authenticated. To authenticate call one of the <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>, or <xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A>, <xref:System.Net.Security.SslStream.AuthenticateAsServer%2A>, <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A> methods.","nodes":[{"pos":[0,69],"content":"If the operation has not completed, this method blocks until it does.","nodes":[{"content":"If the operation has not completed, this method blocks until it does.","pos":[0,69]}]},{"pos":[76,177],"content":"To perform this operation synchronously, use the <xref:System.Net.Security.SslStream.Read%2A> method.","nodes":[{"content":"To perform this operation synchronously, use the <ph id=\"ph1\">&lt;xref:System.Net.Security.SslStream.Read%2A&gt;</ph> method.","pos":[0,101],"source":"To perform this operation synchronously, use the <xref:System.Net.Security.SslStream.Read%2A> method."}]},{"pos":[184,555],"content":"You cannot call this method until you have successfully authenticated. To authenticate call one of the <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>, or <xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A>, <xref:System.Net.Security.SslStream.AuthenticateAsServer%2A>, <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A> methods.","nodes":[{"content":"You cannot call this method until you have successfully authenticated. To authenticate call one of the <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>, or <xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A>, <xref:System.Net.Security.SslStream.AuthenticateAsServer%2A>, <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A> methods.","pos":[0,371],"nodes":[{"content":"You cannot call this method until you have successfully authenticated.","pos":[0,70]},{"content":"To authenticate call one of the <ph id=\"ph1\">&lt;xref:System.Net.Security.SslStream.AuthenticateAsClient%2A&gt;</ph>, or <ph id=\"ph2\">&lt;xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A&gt;</ph>, <ph id=\"ph3\">&lt;xref:System.Net.Security.SslStream.AuthenticateAsServer%2A&gt;</ph>, <ph id=\"ph4\">&lt;xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A&gt;</ph> methods.","pos":[71,371],"source":" To authenticate call one of the <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>, or <xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A>, <xref:System.Net.Security.SslStream.AuthenticateAsServer%2A>, <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A> methods."}]}]}],"pos":[153940,154502],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.IAsyncResult\"></xref> instance returned by a call to <xref href=\"System.Net.Security.SslStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)\"></xref>","nodes":[{"pos":[0,211],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.IAsyncResult\"&gt;&lt;/xref&gt;</ph> instance returned by a call to <ph id=\"ph2\">&lt;xref href=\"System.Net.Security.SslStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)\"&gt;&lt;/xref&gt;</ph>","source":"An <xref href=\"System.IAsyncResult\"></xref> instance returned by a call to <xref href=\"System.Net.Security.SslStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)\"></xref>"}],"pos":[155022,155234],"yaml":true},{"content":"A <xref href=\"System.Int32\"></xref> value that specifies the number of bytes read from the underlying stream.","nodes":[{"pos":[0,109],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Int32\"&gt;&lt;/xref&gt;</ph> value that specifies the number of bytes read from the underlying stream.","source":"A <xref href=\"System.Int32\"></xref> value that specifies the number of bytes read from the underlying stream."}],"pos":[155290,155400],"yaml":true},{"content":"<code>asyncResult</code> is `null`.","nodes":[{"pos":[0,35],"content":"<ph id=\"ph1\">&lt;code&gt;asyncResult&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>asyncResult</code> is `null`."}],"pos":[155567,155603],"yaml":true},{"content":"<code>asyncResult</code> was not created by a call to <xref href=\"System.Net.Security.SslStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)\"></xref>.","nodes":[{"pos":[0,191],"content":"<ph id=\"ph1\">&lt;code&gt;asyncResult&lt;/code&gt;</ph> was not created by a call to <ph id=\"ph2\">&lt;xref href=\"System.Net.Security.SslStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)\"&gt;&lt;/xref&gt;</ph>.","source":"<code>asyncResult</code> was not created by a call to <xref href=\"System.Net.Security.SslStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)\"></xref>."}],"pos":[155697,155889],"yaml":true},{"content":"Authentication has not occurred.","nodes":[{"pos":[0,32],"content":"Authentication has not occurred.","nodes":[{"content":"Authentication has not occurred.","pos":[0,32]}]}],"pos":[155999,156032],"yaml":true},{"content":"The read operation failed.","nodes":[{"pos":[0,26],"content":"The read operation failed.","nodes":[{"content":"The read operation failed.","pos":[0,26]}]}],"pos":[156120,156147],"yaml":true},{"content":"Ends an asynchronous write operation started with a previous call to <xref href=\"System.Net.Security.SslStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)\"></xref>.","nodes":[{"pos":[0,207],"content":"Ends an asynchronous write operation started with a previous call to <ph id=\"ph1\">&lt;xref href=\"System.Net.Security.SslStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)\"&gt;&lt;/xref&gt;</ph>.","source":"Ends an asynchronous write operation started with a previous call to <xref href=\"System.Net.Security.SslStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)\"></xref>."}],"pos":[157300,157508],"yaml":true},{"content":"If the operation has not completed, this method blocks until it does.  \n  \n An application cannot call this method until you have successfully authenticated. To authenticate, call one of the <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>, or <xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A>, <xref:System.Net.Security.SslStream.AuthenticateAsServer%2A>, <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A> methods.  \n  \n To perform this operation synchronously, use the <xref:System.Net.Security.SslStream.Write%2A> method.","nodes":[{"pos":[0,69],"content":"If the operation has not completed, this method blocks until it does.","nodes":[{"content":"If the operation has not completed, this method blocks until it does.","pos":[0,69]}]},{"pos":[76,459],"content":"An application cannot call this method until you have successfully authenticated. To authenticate, call one of the <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>, or <xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A>, <xref:System.Net.Security.SslStream.AuthenticateAsServer%2A>, <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A> methods.","nodes":[{"content":"An application cannot call this method until you have successfully authenticated. To authenticate, call one of the <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>, or <xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A>, <xref:System.Net.Security.SslStream.AuthenticateAsServer%2A>, <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A> methods.","pos":[0,383],"nodes":[{"content":"An application cannot call this method until you have successfully authenticated.","pos":[0,81]},{"content":"To authenticate, call one of the <ph id=\"ph1\">&lt;xref:System.Net.Security.SslStream.AuthenticateAsClient%2A&gt;</ph>, or <ph id=\"ph2\">&lt;xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A&gt;</ph>, <ph id=\"ph3\">&lt;xref:System.Net.Security.SslStream.AuthenticateAsServer%2A&gt;</ph>, <ph id=\"ph4\">&lt;xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A&gt;</ph> methods.","pos":[82,383],"source":" To authenticate, call one of the <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>, or <xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A>, <xref:System.Net.Security.SslStream.AuthenticateAsServer%2A>, <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A> methods."}]}]},{"pos":[466,568],"content":"To perform this operation synchronously, use the <xref:System.Net.Security.SslStream.Write%2A> method.","nodes":[{"content":"To perform this operation synchronously, use the <ph id=\"ph1\">&lt;xref:System.Net.Security.SslStream.Write%2A&gt;</ph> method.","pos":[0,102],"source":"To perform this operation synchronously, use the <xref:System.Net.Security.SslStream.Write%2A> method."}]}],"pos":[157519,158094],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.IAsyncResult\"></xref> instance returned by a call to <xref href=\"System.Net.Security.SslStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)\"></xref>","nodes":[{"pos":[0,212],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.IAsyncResult\"&gt;&lt;/xref&gt;</ph> instance returned by a call to <ph id=\"ph2\">&lt;xref href=\"System.Net.Security.SslStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)\"&gt;&lt;/xref&gt;</ph>","source":"An <xref href=\"System.IAsyncResult\"></xref> instance returned by a call to <xref href=\"System.Net.Security.SslStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)\"></xref>"}],"pos":[158617,158830],"yaml":true},{"content":"<code>asyncResult</code> is `null`.","nodes":[{"pos":[0,35],"content":"<ph id=\"ph1\">&lt;code&gt;asyncResult&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>asyncResult</code> is `null`."}],"pos":[158998,159034],"yaml":true},{"content":"<code>asyncResult</code> was not created by a call to <xref href=\"System.Net.Security.SslStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)\"></xref>.","nodes":[{"pos":[0,192],"content":"<ph id=\"ph1\">&lt;code&gt;asyncResult&lt;/code&gt;</ph> was not created by a call to <ph id=\"ph2\">&lt;xref href=\"System.Net.Security.SslStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)\"&gt;&lt;/xref&gt;</ph>.","source":"<code>asyncResult</code> was not created by a call to <xref href=\"System.Net.Security.SslStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)\"></xref>."}],"pos":[159128,159321],"yaml":true},{"content":"Authentication has not occurred.","nodes":[{"pos":[0,32],"content":"Authentication has not occurred.","nodes":[{"content":"Authentication has not occurred.","pos":[0,32]}]}],"pos":[159431,159464],"yaml":true},{"content":"The write operation failed.","nodes":[{"pos":[0,27],"content":"The write operation failed.","nodes":[{"content":"The write operation failed.","pos":[0,27]}]}],"pos":[159552,159580],"yaml":true},{"content":"Causes any buffered data to be written to the underlying device.","nodes":[{"pos":[0,64],"content":"Causes any buffered data to be written to the underlying device.","nodes":[{"content":"Causes any buffered data to be written to the underlying device.","pos":[0,64]}]}],"pos":[160616,160681],"yaml":true},{"content":"This method invokes <xref:System.IO.Stream.Flush%2A> on the underlying stream.","nodes":[{"pos":[0,78],"content":"This method invokes <xref:System.IO.Stream.Flush%2A> on the underlying stream.","nodes":[{"content":"This method invokes <ph id=\"ph1\">&lt;xref:System.IO.Stream.Flush%2A&gt;</ph> on the underlying stream.","pos":[0,78],"source":"This method invokes <xref:System.IO.Stream.Flush%2A> on the underlying stream."}]}],"pos":[160692,160771],"yaml":true,"extradata":"MT"},{"content":"Gets the algorithm used for generating message authentication codes (MACs).","nodes":[{"pos":[0,75],"content":"Gets the algorithm used for generating message authentication codes (MACs).","nodes":[{"content":"Gets the algorithm used for generating message authentication codes (MACs).","pos":[0,75]}]}],"pos":[163444,163520],"yaml":true},{"content":"Message authentication algorithms generate message hashes and signatures used to detect tampering and forgery.","nodes":[{"pos":[0,110],"content":"Message authentication algorithms generate message hashes and signatures used to detect tampering and forgery.","nodes":[{"content":"Message authentication algorithms generate message hashes and signatures used to detect tampering and forgery.","pos":[0,110]}]}],"pos":[163531,163642],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Security.Authentication.HashAlgorithmType\"></xref> value.","nodes":[{"pos":[0,78],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Security.Authentication.HashAlgorithmType\"&gt;&lt;/xref&gt;</ph> value.","source":"A <xref href=\"System.Security.Authentication.HashAlgorithmType\"></xref> value."}],"pos":[164199,164278],"yaml":true},{"content":"The <xref href=\"System.Net.Security.SslStream.HashAlgorithm\"></xref> property was accessed before the completion of the authentication process or the authentication process failed.","nodes":[{"pos":[0,180],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Net.Security.SslStream.HashAlgorithm\"&gt;&lt;/xref&gt;</ph> property was accessed before the completion of the authentication process or the authentication process failed.","source":"The <xref href=\"System.Net.Security.SslStream.HashAlgorithm\"></xref> property was accessed before the completion of the authentication process or the authentication process failed."}],"pos":[164459,164640],"yaml":true},{"content":"Gets a value that identifies the strength of the hash algorithm used by this instance.","nodes":[{"pos":[0,86],"content":"Gets a value that identifies the strength of the hash algorithm used by this instance.","nodes":[{"content":"Gets a value that identifies the strength of the hash algorithm used by this instance.","pos":[0,86]}]}],"pos":[165778,165865],"yaml":true},{"content":"The value of this property is zero until the authentication occurs.","nodes":[{"pos":[0,67],"content":"The value of this property is zero until the authentication occurs.","nodes":[{"content":"The value of this property is zero until the authentication occurs.","pos":[0,67]}]}],"pos":[165876,165944],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.Int32\"></xref> value that specifies the strength of the <xref href=\"System.Security.Authentication.HashAlgorithmType\"></xref> algorithm, in bits. Valid values are 128 or 160.","nodes":[{"pos":[0,196],"content":"An <xref href=\"System.Int32\"></xref> value that specifies the strength of the <xref href=\"System.Security.Authentication.HashAlgorithmType\"></xref> algorithm, in bits. Valid values are 128 or 160.","nodes":[{"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Int32\"&gt;&lt;/xref&gt;</ph> value that specifies the strength of the <ph id=\"ph2\">&lt;xref href=\"System.Security.Authentication.HashAlgorithmType\"&gt;&lt;/xref&gt;</ph> algorithm, in bits.","pos":[0,167],"source":"An <xref href=\"System.Int32\"></xref> value that specifies the strength of the <xref href=\"System.Security.Authentication.HashAlgorithmType\"></xref> algorithm, in bits."},{"content":"Valid values are 128 or 160.","pos":[168,196]}]}],"pos":[166419,166616],"yaml":true},{"content":"Gets a <xref href=\"System.Boolean\"></xref> value that indicates whether authentication was successful.","nodes":[{"pos":[0,102],"content":"Gets a <ph id=\"ph1\">&lt;xref href=\"System.Boolean\"&gt;&lt;/xref&gt;</ph> value that indicates whether authentication was successful.","source":"Gets a <xref href=\"System.Boolean\"></xref> value that indicates whether authentication was successful."}],"pos":[167845,167948],"yaml":true},{"content":"Clients authenticate by calling the <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A> or <xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A> methods. Servers authenticate by calling the <xref:System.Net.Security.SslStream.AuthenticateAsServer%2A> or <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A> methods.","nodes":[{"pos":[0,349],"content":"Clients authenticate by calling the <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A> or <xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A> methods. Servers authenticate by calling the <xref:System.Net.Security.SslStream.AuthenticateAsServer%2A> or <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A> methods.","nodes":[{"content":"Clients authenticate by calling the <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A> or <xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A> methods. Servers authenticate by calling the <xref:System.Net.Security.SslStream.AuthenticateAsServer%2A> or <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A> methods.","pos":[0,349],"nodes":[{"content":"Clients authenticate by calling the <ph id=\"ph1\">&lt;xref:System.Net.Security.SslStream.AuthenticateAsClient%2A&gt;</ph> or <ph id=\"ph2\">&lt;xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A&gt;</ph> methods.","pos":[0,174],"source":"Clients authenticate by calling the <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A> or <xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A> methods."},{"content":"Servers authenticate by calling the <ph id=\"ph1\">&lt;xref:System.Net.Security.SslStream.AuthenticateAsServer%2A&gt;</ph> or <ph id=\"ph2\">&lt;xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A&gt;</ph> methods.","pos":[175,349],"source":" Servers authenticate by calling the <xref:System.Net.Security.SslStream.AuthenticateAsServer%2A> or <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A> methods."}]}]}],"pos":[167959,168309],"yaml":true,"extradata":"MT"},{"content":"`true` if successful authentication occurred; otherwise, `false`.","nodes":[{"pos":[0,65],"content":"<ph id=\"ph1\">`true`</ph> if successful authentication occurred; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if successful authentication occurred; otherwise, `false`."}],"pos":[168782,168850],"yaml":true},{"content":"Gets a <xref href=\"System.Boolean\"></xref> value that indicates whether this <xref href=\"System.Net.Security.SslStream\"></xref> uses data encryption.","nodes":[{"pos":[0,149],"content":"Gets a <ph id=\"ph1\">&lt;xref href=\"System.Boolean\"&gt;&lt;/xref&gt;</ph> value that indicates whether this <ph id=\"ph2\">&lt;xref href=\"System.Net.Security.SslStream\"&gt;&lt;/xref&gt;</ph> uses data encryption.","source":"Gets a <xref href=\"System.Boolean\"></xref> value that indicates whether this <xref href=\"System.Net.Security.SslStream\"></xref> uses data encryption."}],"pos":[170058,170208],"yaml":true},{"content":"Encryption helps to protect the privacy of the data, namely it helps to ensure that while data is in transit, it cannot be deciphered by third parties.","nodes":[{"pos":[0,151],"content":"Encryption helps to protect the privacy of the data, namely it helps to ensure that while data is in transit, it cannot be deciphered by third parties.","nodes":[{"content":"Encryption helps to protect the privacy of the data, namely it helps to ensure that while data is in transit, it cannot be deciphered by third parties.","pos":[0,151]}]}],"pos":[170219,170371],"yaml":true,"extradata":"MT"},{"content":"`true` if data is encrypted before being transmitted over the network and decrypted when it reaches the remote endpoint; otherwise `false`.","nodes":[{"pos":[0,139],"content":"<ph id=\"ph1\">`true`</ph> if data is encrypted before being transmitted over the network and decrypted when it reaches the remote endpoint; otherwise <ph id=\"ph2\">`false`</ph>.","source":"`true` if data is encrypted before being transmitted over the network and decrypted when it reaches the remote endpoint; otherwise `false`."}],"pos":[170840,170982],"yaml":true},{"content":"Gets a <xref href=\"System.Boolean\"></xref> value that indicates whether both server and client have been authenticated.","nodes":[{"pos":[0,119],"content":"Gets a <ph id=\"ph1\">&lt;xref href=\"System.Boolean\"&gt;&lt;/xref&gt;</ph> value that indicates whether both server and client have been authenticated.","source":"Gets a <xref href=\"System.Boolean\"></xref> value that indicates whether both server and client have been authenticated."}],"pos":[172258,172378],"yaml":true},{"content":"Mutual authentication is specified by the server when the server wants the client to provide a certificate for authentication.","nodes":[{"pos":[0,126],"content":"Mutual authentication is specified by the server when the server wants the client to provide a certificate for authentication.","nodes":[{"content":"Mutual authentication is specified by the server when the server wants the client to provide a certificate for authentication.","pos":[0,126]}]}],"pos":[172389,172516],"yaml":true,"extradata":"MT"},{"content":"`true` if the server has been authenticated; otherwise `false`.","nodes":[{"pos":[0,63],"content":"<ph id=\"ph1\">`true`</ph> if the server has been authenticated; otherwise <ph id=\"ph2\">`false`</ph>.","source":"`true` if the server has been authenticated; otherwise `false`."}],"pos":[172997,173063],"yaml":true},{"content":"Gets a <xref href=\"System.Boolean\"></xref> value that indicates whether the local side of the connection used by this <xref href=\"System.Net.Security.SslStream\"></xref> was authenticated as the server.","nodes":[{"pos":[0,201],"content":"Gets a <ph id=\"ph1\">&lt;xref href=\"System.Boolean\"&gt;&lt;/xref&gt;</ph> value that indicates whether the local side of the connection used by this <ph id=\"ph2\">&lt;xref href=\"System.Net.Security.SslStream\"&gt;&lt;/xref&gt;</ph> was authenticated as the server.","source":"Gets a <xref href=\"System.Boolean\"></xref> value that indicates whether the local side of the connection used by this <xref href=\"System.Net.Security.SslStream\"></xref> was authenticated as the server."}],"pos":[174261,174463],"yaml":true},{"content":"If authentication failed or did not occur, this property returns `false`.  \n  \n To authenticate as the server, call the <xref:System.Net.Security.SslStream.AuthenticateAsServer%2A> or <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A> methods.","nodes":[{"pos":[0,73],"content":"If authentication failed or did not occur, this property returns <ph id=\"ph1\">`false`</ph>.","source":"If authentication failed or did not occur, this property returns `false`."},{"pos":[80,258],"content":"To authenticate as the server, call the <xref:System.Net.Security.SslStream.AuthenticateAsServer%2A> or <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A> methods.","nodes":[{"content":"To authenticate as the server, call the <ph id=\"ph1\">&lt;xref:System.Net.Security.SslStream.AuthenticateAsServer%2A&gt;</ph> or <ph id=\"ph2\">&lt;xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A&gt;</ph> methods.","pos":[0,178],"source":"To authenticate as the server, call the <xref:System.Net.Security.SslStream.AuthenticateAsServer%2A> or <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A> methods."}]}],"pos":[174474,174737],"yaml":true,"extradata":"MT"},{"content":"`true` if the local endpoint was successfully authenticated as the server side of the authenticated connection; otherwise `false`.","nodes":[{"pos":[0,130],"content":"<ph id=\"ph1\">`true`</ph> if the local endpoint was successfully authenticated as the server side of the authenticated connection; otherwise <ph id=\"ph2\">`false`</ph>.","source":"`true` if the local endpoint was successfully authenticated as the server side of the authenticated connection; otherwise `false`."}],"pos":[175203,175336],"yaml":true},{"content":"Gets a <xref href=\"System.Boolean\"></xref> value that indicates whether the data sent using this stream is signed.","nodes":[{"pos":[0,114],"content":"Gets a <ph id=\"ph1\">&lt;xref href=\"System.Boolean\"&gt;&lt;/xref&gt;</ph> value that indicates whether the data sent using this stream is signed.","source":"Gets a <xref href=\"System.Boolean\"></xref> value that indicates whether the data sent using this stream is signed."}],"pos":[176519,176634],"yaml":true},{"content":"Data signing helps to protect the integrity of the data, namely it helps the recipient determine whether the data has been tampered with while in transit.","nodes":[{"pos":[0,154],"content":"Data signing helps to protect the integrity of the data, namely it helps the recipient determine whether the data has been tampered with while in transit.","nodes":[{"content":"Data signing helps to protect the integrity of the data, namely it helps the recipient determine whether the data has been tampered with while in transit.","pos":[0,154]}]}],"pos":[176645,176800],"yaml":true,"extradata":"MT"},{"content":"`true` if the data is signed before being transmitted; otherwise `false`.","nodes":[{"pos":[0,73],"content":"<ph id=\"ph1\">`true`</ph> if the data is signed before being transmitted; otherwise <ph id=\"ph2\">`false`</ph>.","source":"`true` if the data is signed before being transmitted; otherwise `false`."}],"pos":[177266,177342],"yaml":true},{"content":"Gets the key exchange algorithm used by this <xref href=\"System.Net.Security.SslStream\"></xref>.","nodes":[{"pos":[0,96],"content":"Gets the key exchange algorithm used by this <ph id=\"ph1\">&lt;xref href=\"System.Net.Security.SslStream\"&gt;&lt;/xref&gt;</ph>.","source":"Gets the key exchange algorithm used by this <xref href=\"System.Net.Security.SslStream\"></xref>."}],"pos":[178597,178694],"yaml":true},{"content":"The value of this property is <xref:System.Security.Authentication.ExchangeAlgorithmType.None> until the authentication occurs.  \n  \n The key exchange algorithm protects information used to generate shared keys.","nodes":[{"pos":[0,127],"content":"The value of this property is <xref:System.Security.Authentication.ExchangeAlgorithmType.None> until the authentication occurs.","nodes":[{"content":"The value of this property is <ph id=\"ph1\">&lt;xref:System.Security.Authentication.ExchangeAlgorithmType.None&gt;</ph> until the authentication occurs.","pos":[0,127],"source":"The value of this property is <xref:System.Security.Authentication.ExchangeAlgorithmType.None> until the authentication occurs."}]},{"pos":[134,211],"content":"The key exchange algorithm protects information used to generate shared keys.","nodes":[{"content":"The key exchange algorithm protects information used to generate shared keys.","pos":[0,77]}]}],"pos":[178705,178921],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.Security.Authentication.ExchangeAlgorithmType\"></xref> value.","nodes":[{"pos":[0,83],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Security.Authentication.ExchangeAlgorithmType\"&gt;&lt;/xref&gt;</ph> value.","source":"An <xref href=\"System.Security.Authentication.ExchangeAlgorithmType\"></xref> value."}],"pos":[179493,179577],"yaml":true},{"content":"Gets a value that identifies the strength of the key exchange algorithm used by this instance.","nodes":[{"pos":[0,94],"content":"Gets a value that identifies the strength of the key exchange algorithm used by this instance.","nodes":[{"content":"Gets a value that identifies the strength of the key exchange algorithm used by this instance.","pos":[0,94]}]}],"pos":[180838,180933],"yaml":true},{"content":"The value of this property is zero until the authentication occurs.  \n  \n In common scenarios, the value of this property is one of the following:  \n  \n-   512  \n  \n-   768  \n  \n-   1024  \n  \n-   2048","nodes":[{"pos":[0,67],"content":"The value of this property is zero until the authentication occurs.","nodes":[{"content":"The value of this property is zero until the authentication occurs.","pos":[0,67]}]},{"pos":[74,146],"content":"In common scenarios, the value of this property is one of the following:","nodes":[{"content":"In common scenarios, the value of this property is one of the following:","pos":[0,72]}]},{"pos":[156,159],"content":"512","nodes":[{"content":"512","pos":[0,3]}]},{"pos":[169,172],"content":"768","nodes":[{"content":"768","pos":[0,3]}]},{"pos":[182,186],"content":"1024","nodes":[{"content":"1024","pos":[0,4]}]},{"pos":[196,200],"content":"2048","nodes":[{"content":"2048","pos":[0,4]}]}],"pos":[180944,181157],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.Int32\"></xref> value that specifies the strength of the <xref href=\"System.Security.Authentication.ExchangeAlgorithmType\"></xref> algorithm, in bits.","nodes":[{"pos":[0,171],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Int32\"&gt;&lt;/xref&gt;</ph> value that specifies the strength of the <ph id=\"ph2\">&lt;xref href=\"System.Security.Authentication.ExchangeAlgorithmType\"&gt;&lt;/xref&gt;</ph> algorithm, in bits.","source":"An <xref href=\"System.Int32\"></xref> value that specifies the strength of the <xref href=\"System.Security.Authentication.ExchangeAlgorithmType\"></xref> algorithm, in bits."}],"pos":[181639,181811],"yaml":true},{"content":"Gets the length of the underlying stream.","nodes":[{"pos":[0,41],"content":"Gets the length of the underlying stream.","nodes":[{"content":"Gets the length of the underlying stream.","pos":[0,41]}]}],"pos":[182993,183035],"yaml":true},{"content":"This property returns the value returned by invoking <xref:System.IO.Stream.Length%2A> on the underlying stream. If the underlying stream is not seekable, this method typically throws an exception. The run-time type of the underlying stream determines the run-time type of the exception that is thrown.","nodes":[{"pos":[0,302],"content":"This property returns the value returned by invoking <xref:System.IO.Stream.Length%2A> on the underlying stream. If the underlying stream is not seekable, this method typically throws an exception. The run-time type of the underlying stream determines the run-time type of the exception that is thrown.","nodes":[{"content":"This property returns the value returned by invoking <xref:System.IO.Stream.Length%2A> on the underlying stream. If the underlying stream is not seekable, this method typically throws an exception. The run-time type of the underlying stream determines the run-time type of the exception that is thrown.","pos":[0,302],"nodes":[{"content":"This property returns the value returned by invoking <ph id=\"ph1\">&lt;xref:System.IO.Stream.Length%2A&gt;</ph> on the underlying stream.","pos":[0,112],"source":"This property returns the value returned by invoking <xref:System.IO.Stream.Length%2A> on the underlying stream."},{"content":"If the underlying stream is not seekable, this method typically throws an exception.","pos":[113,197]},{"content":"The run-time type of the underlying stream determines the run-time type of the exception that is thrown.","pos":[198,302]}]}]}],"pos":[183046,183349],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Int64\"></xref>.  \n  \n The length of the underlying stream.","nodes":[{"pos":[0,36],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Int64\"&gt;&lt;/xref&gt;</ph>.","source":"A <xref href=\"System.Int64\"></xref>."},{"pos":[43,79],"content":"The length of the underlying stream.","nodes":[{"content":"The length of the underlying stream.","pos":[0,36]}]}],"pos":[183465,183551],"yaml":true},{"content":"Getting the value of this property is not supported when the underlying stream is a <xref href=\"System.Net.Sockets.NetworkStream\"></xref>.","nodes":[{"pos":[0,138],"content":"Getting the value of this property is not supported when the underlying stream is a <ph id=\"ph1\">&lt;xref href=\"System.Net.Sockets.NetworkStream\"&gt;&lt;/xref&gt;</ph>.","source":"Getting the value of this property is not supported when the underlying stream is a <xref href=\"System.Net.Sockets.NetworkStream\"></xref>."}],"pos":[183717,183856],"yaml":true},{"content":"Gets the certificate used to authenticate the local endpoint.","nodes":[{"pos":[0,61],"content":"Gets the certificate used to authenticate the local endpoint.","nodes":[{"content":"Gets the certificate used to authenticate the local endpoint.","pos":[0,61]}]}],"pos":[185018,185080],"yaml":true},{"content":"An X509Certificate object that represents the certificate supplied for authentication or `null` if no certificate was supplied.","nodes":[{"pos":[0,127],"content":"An X509Certificate object that represents the certificate supplied for authentication or <ph id=\"ph1\">`null`</ph> if no certificate was supplied.","source":"An X509Certificate object that represents the certificate supplied for authentication or `null` if no certificate was supplied."}],"pos":[185686,185814],"yaml":true},{"content":"Authentication failed or has not occurred.","nodes":[{"pos":[0,42],"content":"Authentication failed or has not occurred.","nodes":[{"content":"Authentication failed or has not occurred.","pos":[0,42]}]}],"pos":[185998,186041],"yaml":true},{"content":"Gets or sets the current position in the underlying stream.","nodes":[{"pos":[0,59],"content":"Gets or sets the current position in the underlying stream.","nodes":[{"content":"Gets or sets the current position in the underlying stream.","pos":[0,59]}]}],"pos":[187155,187215],"yaml":true},{"content":"This property returns the value returned by invoking <xref:System.IO.Stream.Position%2A> on the underlying stream. If the underlying stream is not seekable, this method typically throws an exception. The run-time type of the underlying stream determines the run-time type of the exception that is thrown.","nodes":[{"pos":[0,304],"content":"This property returns the value returned by invoking <xref:System.IO.Stream.Position%2A> on the underlying stream. If the underlying stream is not seekable, this method typically throws an exception. The run-time type of the underlying stream determines the run-time type of the exception that is thrown.","nodes":[{"content":"This property returns the value returned by invoking <xref:System.IO.Stream.Position%2A> on the underlying stream. If the underlying stream is not seekable, this method typically throws an exception. The run-time type of the underlying stream determines the run-time type of the exception that is thrown.","pos":[0,304],"nodes":[{"content":"This property returns the value returned by invoking <ph id=\"ph1\">&lt;xref:System.IO.Stream.Position%2A&gt;</ph> on the underlying stream.","pos":[0,114],"source":"This property returns the value returned by invoking <xref:System.IO.Stream.Position%2A> on the underlying stream."},{"content":"If the underlying stream is not seekable, this method typically throws an exception.","pos":[115,199]},{"content":"The run-time type of the underlying stream determines the run-time type of the exception that is thrown.","pos":[200,304]}]}]}],"pos":[187226,187531],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Int64\"></xref>.  \n  \n The current position in the underlying stream.","nodes":[{"pos":[0,36],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Int64\"&gt;&lt;/xref&gt;</ph>.","source":"A <xref href=\"System.Int64\"></xref>."},{"pos":[43,89],"content":"The current position in the underlying stream.","nodes":[{"content":"The current position in the underlying stream.","pos":[0,46]}]}],"pos":[187654,187750],"yaml":true},{"content":"Setting this property is not supported.  \n  \n -or-  \n  \n Getting the value of this property is not supported when the underlying stream is a <xref href=\"System.Net.Sockets.NetworkStream\"></xref>.","nodes":[{"pos":[0,39],"content":"Setting this property is not supported.","nodes":[{"content":"Setting this property is not supported.","pos":[0,39]}]},{"pos":[46,50],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[57,195],"content":"Getting the value of this property is not supported when the underlying stream is a <ph id=\"ph1\">&lt;xref href=\"System.Net.Sockets.NetworkStream\"&gt;&lt;/xref&gt;</ph>.","source":"Getting the value of this property is not supported when the underlying stream is a <xref href=\"System.Net.Sockets.NetworkStream\"></xref>."}],"pos":[187918,188122],"yaml":true},{"content":"Reads data from this stream and stores it in the specified array.","nodes":[{"pos":[0,65],"content":"Reads data from this stream and stores it in the specified array.","nodes":[{"content":"Reads data from this stream and stores it in the specified array.","pos":[0,65]}]}],"pos":[189399,189465],"yaml":true},{"content":"The method reads a maximum of `count` bytes from the stream and stores them in `buffer` beginning at `offset`. You cannot perform multiple simultaneous read operations.  \n  \n You cannot call this method until you have successfully authenticated. To authenticate call one of the <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>, or <xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A>, <xref:System.Net.Security.SslStream.AuthenticateAsServer%2A>, <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A> methods.  \n  \n To perform this operation asynchronously, use the <xref:System.Net.Security.SslStream.BeginRead%2A> method.","nodes":[{"pos":[0,168],"content":"The method reads a maximum of `count` bytes from the stream and stores them in `buffer` beginning at `offset`. You cannot perform multiple simultaneous read operations.","nodes":[{"content":"The method reads a maximum of <ph id=\"ph1\">`count`</ph> bytes from the stream and stores them in <ph id=\"ph2\">`buffer`</ph> beginning at <ph id=\"ph3\">`offset`</ph>.","pos":[0,110],"source":"The method reads a maximum of `count` bytes from the stream and stores them in `buffer` beginning at `offset`."},{"content":"You cannot perform multiple simultaneous read operations.","pos":[111,168]}]},{"pos":[175,546],"content":"You cannot call this method until you have successfully authenticated. To authenticate call one of the <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>, or <xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A>, <xref:System.Net.Security.SslStream.AuthenticateAsServer%2A>, <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A> methods.","nodes":[{"content":"You cannot call this method until you have successfully authenticated. To authenticate call one of the <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>, or <xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A>, <xref:System.Net.Security.SslStream.AuthenticateAsServer%2A>, <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A> methods.","pos":[0,371],"nodes":[{"content":"You cannot call this method until you have successfully authenticated.","pos":[0,70]},{"content":"To authenticate call one of the <ph id=\"ph1\">&lt;xref:System.Net.Security.SslStream.AuthenticateAsClient%2A&gt;</ph>, or <ph id=\"ph2\">&lt;xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A&gt;</ph>, <ph id=\"ph3\">&lt;xref:System.Net.Security.SslStream.AuthenticateAsServer%2A&gt;</ph>, <ph id=\"ph4\">&lt;xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A&gt;</ph> methods.","pos":[71,371],"source":" To authenticate call one of the <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>, or <xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A>, <xref:System.Net.Security.SslStream.AuthenticateAsServer%2A>, <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A> methods."}]}]},{"pos":[553,660],"content":"To perform this operation asynchronously, use the <xref:System.Net.Security.SslStream.BeginRead%2A> method.","nodes":[{"content":"To perform this operation asynchronously, use the <ph id=\"ph1\">&lt;xref:System.Net.Security.SslStream.BeginRead%2A&gt;</ph> method.","pos":[0,107],"source":"To perform this operation asynchronously, use the <xref:System.Net.Security.SslStream.BeginRead%2A> method."}]}],"pos":[189476,190143],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Byte\"></xref> array that receives the bytes read from this stream.","nodes":[{"pos":[0,87],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Byte\"&gt;&lt;/xref&gt;</ph> array that receives the bytes read from this stream.","source":"A <xref href=\"System.Byte\"></xref> array that receives the bytes read from this stream."}],"pos":[190664,190752],"yaml":true},{"content":"A <xref href=\"System.Int32\"></xref> that contains the zero-based location in <code>buffer</code> at which to begin storing the data read from this stream.","nodes":[{"pos":[0,154],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Int32\"&gt;&lt;/xref&gt;</ph> that contains the zero-based location in <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">buffer</ph><ept id=\"p1\">&lt;/code&gt;</ept> at which to begin storing the data read from this stream.","source":"A <xref href=\"System.Int32\"></xref> that contains the zero-based location in <code>buffer</code> at which to begin storing the data read from this stream."}],"pos":[190813,190968],"yaml":true},{"content":"A <xref href=\"System.Int32\"></xref> that contains the maximum number of bytes to read from this stream.","nodes":[{"pos":[0,103],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Int32\"&gt;&lt;/xref&gt;</ph> that contains the maximum number of bytes to read from this stream.","source":"A <xref href=\"System.Int32\"></xref> that contains the maximum number of bytes to read from this stream."}],"pos":[191028,191132],"yaml":true},{"content":"A <xref href=\"System.Int32\"></xref> value that specifies the number of bytes read. When there is no more data to be read, returns 0.","nodes":[{"pos":[0,132],"content":"A <xref href=\"System.Int32\"></xref> value that specifies the number of bytes read. When there is no more data to be read, returns 0.","nodes":[{"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Int32\"&gt;&lt;/xref&gt;</ph> value that specifies the number of bytes read.","pos":[0,82],"source":"A <xref href=\"System.Int32\"></xref> value that specifies the number of bytes read."},{"content":"When there is no more data to be read, returns 0.","pos":[83,132]}]}],"pos":[191188,191321],"yaml":true},{"content":"<code>buffer</code> is `null`.","nodes":[{"pos":[0,30],"content":"<ph id=\"ph1\">&lt;code&gt;buffer&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>buffer</code> is `null`."}],"pos":[191485,191516],"yaml":true},{"content":"<code>offset</code>\n    <code><</code>\n    <code>0</code>.  \n  \n <code>-or-</code><code>offset</code> > the length of <code>buffer</code>.  \n  \n -or-  \n  \n <code>offset</code> + count > the length of <code>buffer</code>.","nodes":[{"pos":[0,138],"content":"<code>offset</code>\n    <code><</code>\n    <code>0</code>.  \n  \n <code>-or-</code><code>offset</code> > the length of <code>buffer</code>.","nodes":[{"content":"<ph id=\"ph1\">&lt;code&gt;offset&lt;/code&gt;</ph><ph id=\"ph2\">\n    &lt;code&gt;&lt;&lt;/code&gt;</ph><ph id=\"ph3\">\n    &lt;code&gt;0&lt;/code&gt;</ph>.","pos":[0,58],"source":"<code>offset</code>\n    <code><</code>\n    <code>0</code>."},{"content":"<ph id=\"ph1\">&lt;code&gt;-or-&lt;/code&gt;</ph><ph id=\"ph2\">&lt;code&gt;offset&lt;/code&gt;</ph><ph id=\"ph3\"> &gt;</ph> the length of <ph id=\"ph4\">&lt;code&gt;buffer&lt;/code&gt;</ph>.","pos":[65,138],"source":"<code>-or-</code><code>offset</code> > the length of <code>buffer</code>."}]},{"pos":[145,149],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[156,220],"content":"<ph id=\"ph1\">&lt;code&gt;offset&lt;/code&gt;</ph><ph id=\"ph2\"> +</ph> count &gt; the length of <ph id=\"ph3\">&lt;code&gt;buffer&lt;/code&gt;</ph>.","source":"<code>offset</code> + count > the length of <code>buffer</code>."}],"pos":[191610,191841],"yaml":true},{"content":"The read operation failed. Check the inner exception, if present to determine the cause of the failure.","nodes":[{"pos":[0,103],"content":"The read operation failed. Check the inner exception, if present to determine the cause of the failure.","nodes":[{"content":"The read operation failed. Check the inner exception, if present to determine the cause of the failure.","pos":[0,103],"nodes":[{"content":"The read operation failed.","pos":[0,26]},{"content":"Check the inner exception, if present to determine the cause of the failure.","pos":[27,103]}]}]}],"pos":[191929,192033],"yaml":true},{"content":"There is already a read operation in progress.","nodes":[{"pos":[0,46],"content":"There is already a read operation in progress.","nodes":[{"content":"There is already a read operation in progress.","pos":[0,46]}]}],"pos":[192135,192182],"yaml":true},{"content":"This object has been closed.","nodes":[{"pos":[0,28],"content":"This object has been closed.","nodes":[{"content":"This object has been closed.","pos":[0,28]}]}],"pos":[192288,192317],"yaml":true},{"content":"Authentication has not occurred.","nodes":[{"pos":[0,32],"content":"Authentication has not occurred.","nodes":[{"content":"Authentication has not occurred.","pos":[0,32]}]}],"pos":[192427,192460],"yaml":true},{"content":"Gets or sets the amount of time a read operation blocks waiting for data.","nodes":[{"pos":[0,73],"content":"Gets or sets the amount of time a read operation blocks waiting for data.","nodes":[{"content":"Gets or sets the amount of time a read operation blocks waiting for data.","pos":[0,73]}]}],"pos":[193592,193666],"yaml":true},{"content":"This property returns the value returned by invoking <xref:System.IO.Stream.ReadTimeout%2A> on the underlying stream. When you set this property, the <xref:System.IO.Stream.ReadTimeout%2A> value on the underlying stream is set to the specified value.  \n  \n If the underlying stream is a <xref:System.Net.Sockets.NetworkStream>, <xref:System.Net.Security.SslStream.ReadTimeout%2A> is in milliseconds and is set to <xref:System.Threading.Timeout.Infinite> by default so that read operations do not timeout.","nodes":[{"pos":[0,250],"content":"This property returns the value returned by invoking <xref:System.IO.Stream.ReadTimeout%2A> on the underlying stream. When you set this property, the <xref:System.IO.Stream.ReadTimeout%2A> value on the underlying stream is set to the specified value.","nodes":[{"content":"This property returns the value returned by invoking <xref:System.IO.Stream.ReadTimeout%2A> on the underlying stream. When you set this property, the <xref:System.IO.Stream.ReadTimeout%2A> value on the underlying stream is set to the specified value.","pos":[0,250],"nodes":[{"content":"This property returns the value returned by invoking <ph id=\"ph1\">&lt;xref:System.IO.Stream.ReadTimeout%2A&gt;</ph> on the underlying stream.","pos":[0,117],"source":"This property returns the value returned by invoking <xref:System.IO.Stream.ReadTimeout%2A> on the underlying stream."},{"content":"When you set this property, the <ph id=\"ph1\">&lt;xref:System.IO.Stream.ReadTimeout%2A&gt;</ph> value on the underlying stream is set to the specified value.","pos":[118,250],"source":" When you set this property, the <xref:System.IO.Stream.ReadTimeout%2A> value on the underlying stream is set to the specified value."}]}]},{"pos":[257,504],"content":"If the underlying stream is a <xref:System.Net.Sockets.NetworkStream>, <xref:System.Net.Security.SslStream.ReadTimeout%2A> is in milliseconds and is set to <xref:System.Threading.Timeout.Infinite> by default so that read operations do not timeout.","nodes":[{"content":"If the underlying stream is a <ph id=\"ph1\">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph>, <ph id=\"ph2\">&lt;xref:System.Net.Security.SslStream.ReadTimeout%2A&gt;</ph> is in milliseconds and is set to <ph id=\"ph3\">&lt;xref:System.Threading.Timeout.Infinite&gt;</ph> by default so that read operations do not timeout.","pos":[0,247],"source":"If the underlying stream is a <xref:System.Net.Sockets.NetworkStream>, <xref:System.Net.Security.SslStream.ReadTimeout%2A> is in milliseconds and is set to <xref:System.Threading.Timeout.Infinite> by default so that read operations do not timeout."}]}],"pos":[193677,194186],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Int32\"></xref> that specifies the amount of time that elapses before a synchronous read operation fails.","nodes":[{"pos":[0,125],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Int32\"&gt;&lt;/xref&gt;</ph> that specifies the amount of time that elapses before a synchronous read operation fails.","source":"A <xref href=\"System.Int32\"></xref> that specifies the amount of time that elapses before a synchronous read operation fails."}],"pos":[194654,194780],"yaml":true},{"content":"Gets the certificate used to authenticate the remote endpoint.","nodes":[{"pos":[0,62],"content":"Gets the certificate used to authenticate the remote endpoint.","nodes":[{"content":"Gets the certificate used to authenticate the remote endpoint.","pos":[0,62]}]}],"pos":[196020,196083],"yaml":true},{"content":"An X509Certificate object that represents the certificate supplied for authentication or `null` if no certificate was supplied.","nodes":[{"pos":[0,127],"content":"An X509Certificate object that represents the certificate supplied for authentication or <ph id=\"ph1\">`null`</ph> if no certificate was supplied.","source":"An X509Certificate object that represents the certificate supplied for authentication or `null` if no certificate was supplied."}],"pos":[196690,196818],"yaml":true},{"content":"Authentication failed or has not occurred.","nodes":[{"pos":[0,42],"content":"Authentication failed or has not occurred.","nodes":[{"content":"Authentication failed or has not occurred.","pos":[0,42]}]}],"pos":[197003,197046],"yaml":true},{"content":"Throws a <xref href=\"System.NotSupportedException\"></xref>.","nodes":[{"pos":[0,59],"content":"Throws a <ph id=\"ph1\">&lt;xref href=\"System.NotSupportedException\"&gt;&lt;/xref&gt;</ph>.","source":"Throws a <xref href=\"System.NotSupportedException\"></xref>."}],"pos":[198296,198356],"yaml":true},{"content":"Do not call this method. It is inherited, but is not supported by the <xref:System.Net.Security.SslStream> class.","nodes":[{"pos":[0,113],"content":"Do not call this method. It is inherited, but is not supported by the <xref:System.Net.Security.SslStream> class.","nodes":[{"content":"Do not call this method. It is inherited, but is not supported by the <xref:System.Net.Security.SslStream> class.","pos":[0,113],"nodes":[{"content":"Do not call this method.","pos":[0,24]},{"content":"It is inherited, but is not supported by the <ph id=\"ph1\">&lt;xref:System.Net.Security.SslStream&gt;</ph> class.","pos":[25,113],"source":" It is inherited, but is not supported by the <xref:System.Net.Security.SslStream> class."}]}]}],"pos":[198367,198481],"yaml":true,"extradata":"MT"},{"content":"This value is ignored.","nodes":[{"pos":[0,22],"content":"This value is ignored.","nodes":[{"content":"This value is ignored.","pos":[0,22]}]}],"pos":[198651,198674],"yaml":true},{"content":"This value is ignored.","nodes":[{"pos":[0,22],"content":"This value is ignored.","nodes":[{"content":"This value is ignored.","pos":[0,22]}]}],"pos":[198743,198766],"yaml":true},{"content":"Always throws a <xref href=\"System.NotSupportedException\"></xref>.","nodes":[{"pos":[0,66],"content":"Always throws a <ph id=\"ph1\">&lt;xref href=\"System.NotSupportedException\"&gt;&lt;/xref&gt;</ph>.","source":"Always throws a <xref href=\"System.NotSupportedException\"></xref>."}],"pos":[198822,198889],"yaml":true},{"content":"Seeking is not supported by <xref href=\"System.Net.Security.SslStream\"></xref> objects.","nodes":[{"pos":[0,87],"content":"Seeking is not supported by <ph id=\"ph1\">&lt;xref href=\"System.Net.Security.SslStream\"&gt;&lt;/xref&gt;</ph> objects.","source":"Seeking is not supported by <xref href=\"System.Net.Security.SslStream\"></xref> objects."}],"pos":[199053,199141],"yaml":true},{"content":"Sets the length of the underlying stream.","nodes":[{"pos":[0,41],"content":"Sets the length of the underlying stream.","nodes":[{"content":"Sets the length of the underlying stream.","pos":[0,41]}]}],"pos":[200322,200364],"yaml":true},{"content":"This method invokes <xref:System.IO.Stream.SetLength%2A?displayProperty=fullName> on the underlying stream specified when this <xref:System.Net.Security.SslStream> was created.","nodes":[{"pos":[0,176],"content":"This method invokes <xref:System.IO.Stream.SetLength%2A?displayProperty=fullName> on the underlying stream specified when this <xref:System.Net.Security.SslStream> was created.","nodes":[{"content":"This method invokes <ph id=\"ph1\">&lt;xref:System.IO.Stream.SetLength%2A?displayProperty=fullName&gt;</ph> on the underlying stream specified when this <ph id=\"ph2\">&lt;xref:System.Net.Security.SslStream&gt;</ph> was created.","pos":[0,176],"source":"This method invokes <xref:System.IO.Stream.SetLength%2A?displayProperty=fullName> on the underlying stream specified when this <xref:System.Net.Security.SslStream> was created."}]}],"pos":[200375,200552],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.Int64\"></xref> value that specifies the length of the stream.","nodes":[{"pos":[0,83],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Int64\"&gt;&lt;/xref&gt;</ph> value that specifies the length of the stream.","source":"An <xref href=\"System.Int64\"></xref> value that specifies the length of the stream."}],"pos":[200696,200780],"yaml":true},{"content":"Shuts down this SslStream.","nodes":[{"pos":[0,26],"content":"Shuts down this SslStream.","nodes":[{"content":"Shuts down this SslStream.","pos":[0,26]}]}],"pos":[201982,202009],"yaml":true},{"content":"The task object representing the asynchronous operation.","nodes":[{"pos":[0,56],"content":"The task object representing the asynchronous operation.","nodes":[{"content":"The task object representing the asynchronous operation.","pos":[0,56]}]}],"pos":[202183,202240],"yaml":true},{"content":"Gets a value that indicates the security protocol used to authenticate this connection.","nodes":[{"pos":[0,87],"content":"Gets a value that indicates the security protocol used to authenticate this connection.","nodes":[{"content":"Gets a value that indicates the security protocol used to authenticate this connection.","pos":[0,87]}]}],"pos":[202950,203038],"yaml":true},{"content":"The supported security protocols are specified when the <xref:System.Net.Security.SslStream> is created. If no security protocol was passed to the constructor, the instance is created using <xref:System.Security.Authentication.SslProtocols.Default>. The actual protocol used for authentication is selected based on the protocols supported by the client and server.","nodes":[{"pos":[0,364],"content":"The supported security protocols are specified when the <xref:System.Net.Security.SslStream> is created. If no security protocol was passed to the constructor, the instance is created using <xref:System.Security.Authentication.SslProtocols.Default>. The actual protocol used for authentication is selected based on the protocols supported by the client and server.","nodes":[{"content":"The supported security protocols are specified when the <xref:System.Net.Security.SslStream> is created. If no security protocol was passed to the constructor, the instance is created using <xref:System.Security.Authentication.SslProtocols.Default>. The actual protocol used for authentication is selected based on the protocols supported by the client and server.","pos":[0,364],"nodes":[{"content":"The supported security protocols are specified when the <ph id=\"ph1\">&lt;xref:System.Net.Security.SslStream&gt;</ph> is created.","pos":[0,104],"source":"The supported security protocols are specified when the <xref:System.Net.Security.SslStream> is created."},{"content":"If no security protocol was passed to the constructor, the instance is created using <ph id=\"ph1\">&lt;xref:System.Security.Authentication.SslProtocols.Default&gt;</ph>.","pos":[105,249],"source":" If no security protocol was passed to the constructor, the instance is created using <xref:System.Security.Authentication.SslProtocols.Default>."},{"content":"The actual protocol used for authentication is selected based on the protocols supported by the client and server.","pos":[250,364]}]}]}],"pos":[203049,203414],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.Security.Authentication.SslProtocols\"></xref> value that represents the protocol used for authentication.","nodes":[{"pos":[0,128],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Security.Authentication.SslProtocols\"&gt;&lt;/xref&gt;</ph> value that represents the protocol used for authentication.","source":"The <xref href=\"System.Security.Authentication.SslProtocols\"></xref> value that represents the protocol used for authentication."}],"pos":[203951,204080],"yaml":true},{"content":"Gets the <xref href=\"System.Net.TransportContext\"></xref> used for authentication using extended protection.","nodes":[{"pos":[0,108],"content":"Gets the <ph id=\"ph1\">&lt;xref href=\"System.Net.TransportContext\"&gt;&lt;/xref&gt;</ph> used for authentication using extended protection.","source":"Gets the <xref href=\"System.Net.TransportContext\"></xref> used for authentication using extended protection."}],"pos":[205314,205423],"yaml":true},{"content":"The <xref href=\"System.Net.TransportContext\"></xref> object that contains the channel binding token (CBT) used for extended protection.","nodes":[{"pos":[0,135],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Net.TransportContext\"&gt;&lt;/xref&gt;</ph> object that contains the channel binding token (CBT) used for extended protection.","source":"The <xref href=\"System.Net.TransportContext\"></xref> object that contains the channel binding token (CBT) used for extended protection."}],"pos":[205578,205714],"yaml":true},{"content":"Writes the specified data to this stream.","nodes":[{"pos":[0,41],"content":"Writes the specified data to this stream.","nodes":[{"content":"Writes the specified data to this stream.","pos":[0,41]}]}],"pos":[206954,206996],"yaml":true},{"content":"This method blocks while the operation completes. To prevent blocking while the operation completes, use the <xref:System.Net.Security.SslStream.BeginWrite%2A> method.  \n  \n You cannot call this method until you have successfully authenticated. To authenticate call one of the <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>, or <xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A>, <xref:System.Net.Security.SslStream.AuthenticateAsServer%2A>, <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A> methods.  \n  \n The <xref:System.Net.Security.SslStream> class does not support multiple simultaneous write operations.","nodes":[{"pos":[0,167],"content":"This method blocks while the operation completes. To prevent blocking while the operation completes, use the <xref:System.Net.Security.SslStream.BeginWrite%2A> method.","nodes":[{"content":"This method blocks while the operation completes. To prevent blocking while the operation completes, use the <xref:System.Net.Security.SslStream.BeginWrite%2A> method.","pos":[0,167],"nodes":[{"content":"This method blocks while the operation completes.","pos":[0,49]},{"content":"To prevent blocking while the operation completes, use the <ph id=\"ph1\">&lt;xref:System.Net.Security.SslStream.BeginWrite%2A&gt;</ph> method.","pos":[50,167],"source":" To prevent blocking while the operation completes, use the <xref:System.Net.Security.SslStream.BeginWrite%2A> method."}]}]},{"pos":[174,545],"content":"You cannot call this method until you have successfully authenticated. To authenticate call one of the <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>, or <xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A>, <xref:System.Net.Security.SslStream.AuthenticateAsServer%2A>, <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A> methods.","nodes":[{"content":"You cannot call this method until you have successfully authenticated. To authenticate call one of the <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>, or <xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A>, <xref:System.Net.Security.SslStream.AuthenticateAsServer%2A>, <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A> methods.","pos":[0,371],"nodes":[{"content":"You cannot call this method until you have successfully authenticated.","pos":[0,70]},{"content":"To authenticate call one of the <ph id=\"ph1\">&lt;xref:System.Net.Security.SslStream.AuthenticateAsClient%2A&gt;</ph>, or <ph id=\"ph2\">&lt;xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A&gt;</ph>, <ph id=\"ph3\">&lt;xref:System.Net.Security.SslStream.AuthenticateAsServer%2A&gt;</ph>, <ph id=\"ph4\">&lt;xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A&gt;</ph> methods.","pos":[71,371],"source":" To authenticate call one of the <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>, or <xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A>, <xref:System.Net.Security.SslStream.AuthenticateAsServer%2A>, <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A> methods."}]}]},{"pos":[552,655],"content":"The <xref:System.Net.Security.SslStream> class does not support multiple simultaneous write operations.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Net.Security.SslStream&gt;</ph> class does not support multiple simultaneous write operations.","pos":[0,103],"source":"The <xref:System.Net.Security.SslStream> class does not support multiple simultaneous write operations."}]}],"pos":[207007,207669],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Byte\"></xref> array that supplies the bytes written to the stream.","nodes":[{"pos":[0,87],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Byte\"&gt;&lt;/xref&gt;</ph> array that supplies the bytes written to the stream.","source":"A <xref href=\"System.Byte\"></xref> array that supplies the bytes written to the stream."}],"pos":[208178,208266],"yaml":true},{"content":"<code>buffer</code> is `null`.","nodes":[{"pos":[0,30],"content":"<ph id=\"ph1\">&lt;code&gt;buffer&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>buffer</code> is `null`."}],"pos":[208431,208462],"yaml":true},{"content":"The write operation failed.","nodes":[{"pos":[0,27],"content":"The write operation failed.","nodes":[{"content":"The write operation failed.","pos":[0,27]}]}],"pos":[208550,208578],"yaml":true},{"content":"There is already a write operation in progress.","nodes":[{"pos":[0,47],"content":"There is already a write operation in progress.","nodes":[{"content":"There is already a write operation in progress.","pos":[0,47]}]}],"pos":[208680,208728],"yaml":true},{"content":"This object has been closed.","nodes":[{"pos":[0,28],"content":"This object has been closed.","nodes":[{"content":"This object has been closed.","pos":[0,28]}]}],"pos":[208834,208863],"yaml":true},{"content":"Authentication has not occurred.","nodes":[{"pos":[0,32],"content":"Authentication has not occurred.","nodes":[{"content":"Authentication has not occurred.","pos":[0,32]}]}],"pos":[208973,209006],"yaml":true},{"content":"Write the specified number of <xref href=\"System.Byte\"></xref>s to the underlying stream using the specified buffer and offset.","nodes":[{"pos":[0,127],"content":"Write the specified number of <ph id=\"ph1\">&lt;xref href=\"System.Byte\"&gt;&lt;/xref&gt;</ph>s to the underlying stream using the specified buffer and offset.","source":"Write the specified number of <xref href=\"System.Byte\"></xref>s to the underlying stream using the specified buffer and offset."}],"pos":[210289,210417],"yaml":true},{"content":"This method blocks while the operation completes. To prevent blocking while the operation completes the operation completes, use the <xref:System.Net.Security.SslStream.BeginWrite%2A> method.  \n  \n You cannot call this method until you have successfully authenticated. To authenticate call one of the <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>, or <xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A>, <xref:System.Net.Security.SslStream.AuthenticateAsServer%2A>, <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A> methods.  \n  \n The <xref:System.Net.Security.SslStream> class does not support multiple simultaneous write operations.","nodes":[{"pos":[0,191],"content":"This method blocks while the operation completes. To prevent blocking while the operation completes the operation completes, use the <xref:System.Net.Security.SslStream.BeginWrite%2A> method.","nodes":[{"content":"This method blocks while the operation completes. To prevent blocking while the operation completes the operation completes, use the <xref:System.Net.Security.SslStream.BeginWrite%2A> method.","pos":[0,191],"nodes":[{"content":"This method blocks while the operation completes.","pos":[0,49]},{"content":"To prevent blocking while the operation completes the operation completes, use the <ph id=\"ph1\">&lt;xref:System.Net.Security.SslStream.BeginWrite%2A&gt;</ph> method.","pos":[50,191],"source":" To prevent blocking while the operation completes the operation completes, use the <xref:System.Net.Security.SslStream.BeginWrite%2A> method."}]}]},{"pos":[198,569],"content":"You cannot call this method until you have successfully authenticated. To authenticate call one of the <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>, or <xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A>, <xref:System.Net.Security.SslStream.AuthenticateAsServer%2A>, <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A> methods.","nodes":[{"content":"You cannot call this method until you have successfully authenticated. To authenticate call one of the <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>, or <xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A>, <xref:System.Net.Security.SslStream.AuthenticateAsServer%2A>, <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A> methods.","pos":[0,371],"nodes":[{"content":"You cannot call this method until you have successfully authenticated.","pos":[0,70]},{"content":"To authenticate call one of the <ph id=\"ph1\">&lt;xref:System.Net.Security.SslStream.AuthenticateAsClient%2A&gt;</ph>, or <ph id=\"ph2\">&lt;xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A&gt;</ph>, <ph id=\"ph3\">&lt;xref:System.Net.Security.SslStream.AuthenticateAsServer%2A&gt;</ph>, <ph id=\"ph4\">&lt;xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A&gt;</ph> methods.","pos":[71,371],"source":" To authenticate call one of the <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>, or <xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A>, <xref:System.Net.Security.SslStream.AuthenticateAsServer%2A>, <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A> methods."}]}]},{"pos":[576,679],"content":"The <xref:System.Net.Security.SslStream> class does not support multiple simultaneous write operations.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Net.Security.SslStream&gt;</ph> class does not support multiple simultaneous write operations.","pos":[0,103],"source":"The <xref:System.Net.Security.SslStream> class does not support multiple simultaneous write operations."}]}],"pos":[210428,211114],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Byte\"></xref> array that supplies the bytes written to the stream.","nodes":[{"pos":[0,87],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Byte\"&gt;&lt;/xref&gt;</ph> array that supplies the bytes written to the stream.","source":"A <xref href=\"System.Byte\"></xref> array that supplies the bytes written to the stream."}],"pos":[211282,211370],"yaml":true},{"content":"A <xref href=\"System.Int32\"></xref> that contains the zero-based location in <code>buffer</code> at which to begin reading bytes to be written to the stream.","nodes":[{"pos":[0,157],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Int32\"&gt;&lt;/xref&gt;</ph> that contains the zero-based location in <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">buffer</ph><ept id=\"p1\">&lt;/code&gt;</ept> at which to begin reading bytes to be written to the stream.","source":"A <xref href=\"System.Int32\"></xref> that contains the zero-based location in <code>buffer</code> at which to begin reading bytes to be written to the stream."}],"pos":[211431,211589],"yaml":true},{"content":"A <xref href=\"System.Int32\"></xref> that contains the number of bytes to read from <code>buffer</code>.","nodes":[{"pos":[0,103],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Int32\"&gt;&lt;/xref&gt;</ph> that contains the number of bytes to read from <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">buffer</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"A <xref href=\"System.Int32\"></xref> that contains the number of bytes to read from <code>buffer</code>."}],"pos":[211649,211753],"yaml":true},{"content":"<code>buffer</code> is `null`.","nodes":[{"pos":[0,30],"content":"<ph id=\"ph1\">&lt;code&gt;buffer&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>buffer</code> is `null`."}],"pos":[211918,211949],"yaml":true},{"content":"<code>offset</code>\n    <code><</code>\n    <code>0</code>.  \n  \n <code>-or-</code><code>offset</code> > the length of <code>buffer</code>.  \n  \n -or-  \n  \n <code>offset</code> + count > the length of <code>buffer</code>.","nodes":[{"pos":[0,138],"content":"<code>offset</code>\n    <code><</code>\n    <code>0</code>.  \n  \n <code>-or-</code><code>offset</code> > the length of <code>buffer</code>.","nodes":[{"content":"<ph id=\"ph1\">&lt;code&gt;offset&lt;/code&gt;</ph><ph id=\"ph2\">\n    &lt;code&gt;&lt;&lt;/code&gt;</ph><ph id=\"ph3\">\n    &lt;code&gt;0&lt;/code&gt;</ph>.","pos":[0,58],"source":"<code>offset</code>\n    <code><</code>\n    <code>0</code>."},{"content":"<ph id=\"ph1\">&lt;code&gt;-or-&lt;/code&gt;</ph><ph id=\"ph2\">&lt;code&gt;offset&lt;/code&gt;</ph><ph id=\"ph3\"> &gt;</ph> the length of <ph id=\"ph4\">&lt;code&gt;buffer&lt;/code&gt;</ph>.","pos":[65,138],"source":"<code>-or-</code><code>offset</code> > the length of <code>buffer</code>."}]},{"pos":[145,149],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[156,220],"content":"<ph id=\"ph1\">&lt;code&gt;offset&lt;/code&gt;</ph><ph id=\"ph2\"> +</ph> count &gt; the length of <ph id=\"ph3\">&lt;code&gt;buffer&lt;/code&gt;</ph>.","source":"<code>offset</code> + count > the length of <code>buffer</code>."}],"pos":[212043,212274],"yaml":true},{"content":"The write operation failed.","nodes":[{"pos":[0,27],"content":"The write operation failed.","nodes":[{"content":"The write operation failed.","pos":[0,27]}]}],"pos":[212362,212390],"yaml":true},{"content":"There is already a write operation in progress.","nodes":[{"pos":[0,47],"content":"There is already a write operation in progress.","nodes":[{"content":"There is already a write operation in progress.","pos":[0,47]}]}],"pos":[212492,212540],"yaml":true},{"content":"This object has been closed.","nodes":[{"pos":[0,28],"content":"This object has been closed.","nodes":[{"content":"This object has been closed.","pos":[0,28]}]}],"pos":[212646,212675],"yaml":true},{"content":"Authentication has not occurred.","nodes":[{"pos":[0,32],"content":"Authentication has not occurred.","nodes":[{"content":"Authentication has not occurred.","pos":[0,32]}]}],"pos":[212785,212818],"yaml":true},{"content":"Gets or sets the amount of time a write operation blocks waiting for data.","nodes":[{"pos":[0,74],"content":"Gets or sets the amount of time a write operation blocks waiting for data.","nodes":[{"content":"Gets or sets the amount of time a write operation blocks waiting for data.","pos":[0,74]}]}],"pos":[213956,214031],"yaml":true},{"content":"This property returns the value returned by invoking <xref:System.IO.Stream.WriteTimeout%2A> on the underlying stream. For set operations, the specified value sets the <xref:System.IO.Stream.WriteTimeout%2A> value on the underlying stream.  \n  \n If the underlying stream is a <xref:System.Net.Sockets.NetworkStream>, <xref:System.Net.Security.SslStream.WriteTimeout%2A> is in milliseconds and is set to <xref:System.Threading.Timeout.Infinite> by default so that write operations do not timeout.","nodes":[{"pos":[0,239],"content":"This property returns the value returned by invoking <xref:System.IO.Stream.WriteTimeout%2A> on the underlying stream. For set operations, the specified value sets the <xref:System.IO.Stream.WriteTimeout%2A> value on the underlying stream.","nodes":[{"content":"This property returns the value returned by invoking <xref:System.IO.Stream.WriteTimeout%2A> on the underlying stream. For set operations, the specified value sets the <xref:System.IO.Stream.WriteTimeout%2A> value on the underlying stream.","pos":[0,239],"nodes":[{"content":"This property returns the value returned by invoking <ph id=\"ph1\">&lt;xref:System.IO.Stream.WriteTimeout%2A&gt;</ph> on the underlying stream.","pos":[0,118],"source":"This property returns the value returned by invoking <xref:System.IO.Stream.WriteTimeout%2A> on the underlying stream."},{"content":"For set operations, the specified value sets the <ph id=\"ph1\">&lt;xref:System.IO.Stream.WriteTimeout%2A&gt;</ph> value on the underlying stream.","pos":[119,239],"source":" For set operations, the specified value sets the <xref:System.IO.Stream.WriteTimeout%2A> value on the underlying stream."}]}]},{"pos":[246,495],"content":"If the underlying stream is a <xref:System.Net.Sockets.NetworkStream>, <xref:System.Net.Security.SslStream.WriteTimeout%2A> is in milliseconds and is set to <xref:System.Threading.Timeout.Infinite> by default so that write operations do not timeout.","nodes":[{"content":"If the underlying stream is a <ph id=\"ph1\">&lt;xref:System.Net.Sockets.NetworkStream&gt;</ph>, <ph id=\"ph2\">&lt;xref:System.Net.Security.SslStream.WriteTimeout%2A&gt;</ph> is in milliseconds and is set to <ph id=\"ph3\">&lt;xref:System.Threading.Timeout.Infinite&gt;</ph> by default so that write operations do not timeout.","pos":[0,249],"source":"If the underlying stream is a <xref:System.Net.Sockets.NetworkStream>, <xref:System.Net.Security.SslStream.WriteTimeout%2A> is in milliseconds and is set to <xref:System.Threading.Timeout.Infinite> by default so that write operations do not timeout."}]}],"pos":[214042,214542],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Int32\"></xref> that specifies the amount of time that elapses before a synchronous write operation fails.","nodes":[{"pos":[0,126],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Int32\"&gt;&lt;/xref&gt;</ph> that specifies the amount of time that elapses before a synchronous write operation fails.","source":"A <xref href=\"System.Int32\"></xref> that specifies the amount of time that elapses before a synchronous write operation fails."}],"pos":[215011,215138],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Net.Security.SslStream\n  commentId: T:System.Net.Security.SslStream\n  id: SslStream\n  children:\n  - System.Net.Security.SslStream.#ctor(System.IO.Stream)\n  - System.Net.Security.SslStream.#ctor(System.IO.Stream,System.Boolean)\n  - System.Net.Security.SslStream.#ctor(System.IO.Stream,System.Boolean,System.Net.Security.RemoteCertificateValidationCallback)\n  - System.Net.Security.SslStream.#ctor(System.IO.Stream,System.Boolean,System.Net.Security.RemoteCertificateValidationCallback,System.Net.Security.LocalCertificateSelectionCallback)\n  - System.Net.Security.SslStream.#ctor(System.IO.Stream,System.Boolean,System.Net.Security.RemoteCertificateValidationCallback,System.Net.Security.LocalCertificateSelectionCallback,System.Net.Security.EncryptionPolicy)\n  - System.Net.Security.SslStream.AuthenticateAsClient(System.String)\n  - System.Net.Security.SslStream.AuthenticateAsClient(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Boolean)\n  - System.Net.Security.SslStream.AuthenticateAsClient(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Security.Authentication.SslProtocols,System.Boolean)\n  - System.Net.Security.SslStream.AuthenticateAsClientAsync(System.String)\n  - System.Net.Security.SslStream.AuthenticateAsClientAsync(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Boolean)\n  - System.Net.Security.SslStream.AuthenticateAsClientAsync(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Security.Authentication.SslProtocols,System.Boolean)\n  - System.Net.Security.SslStream.AuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate)\n  - System.Net.Security.SslStream.AuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Boolean)\n  - System.Net.Security.SslStream.AuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Security.Authentication.SslProtocols,System.Boolean)\n  - System.Net.Security.SslStream.AuthenticateAsServerAsync(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Security.Authentication.SslProtocols,System.Boolean)\n  - System.Net.Security.SslStream.AuthenticateAsServerAsync(System.Security.Cryptography.X509Certificates.X509Certificate)\n  - System.Net.Security.SslStream.AuthenticateAsServerAsync(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Boolean)\n  - System.Net.Security.SslStream.BeginAuthenticateAsClient(System.String,System.AsyncCallback,System.Object)\n  - System.Net.Security.SslStream.BeginAuthenticateAsClient(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Boolean,System.AsyncCallback,System.Object)\n  - System.Net.Security.SslStream.BeginAuthenticateAsClient(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Security.Authentication.SslProtocols,System.Boolean,System.AsyncCallback,System.Object)\n  - System.Net.Security.SslStream.BeginAuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.AsyncCallback,System.Object)\n  - System.Net.Security.SslStream.BeginAuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Boolean,System.AsyncCallback,System.Object)\n  - System.Net.Security.SslStream.BeginAuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Security.Authentication.SslProtocols,System.Boolean,System.AsyncCallback,System.Object)\n  - System.Net.Security.SslStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)\n  - System.Net.Security.SslStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)\n  - System.Net.Security.SslStream.CanRead\n  - System.Net.Security.SslStream.CanSeek\n  - System.Net.Security.SslStream.CanTimeout\n  - System.Net.Security.SslStream.CanWrite\n  - System.Net.Security.SslStream.CheckCertRevocationStatus\n  - System.Net.Security.SslStream.CipherAlgorithm\n  - System.Net.Security.SslStream.CipherStrength\n  - System.Net.Security.SslStream.Dispose(System.Boolean)\n  - System.Net.Security.SslStream.EndAuthenticateAsClient(System.IAsyncResult)\n  - System.Net.Security.SslStream.EndAuthenticateAsServer(System.IAsyncResult)\n  - System.Net.Security.SslStream.EndRead(System.IAsyncResult)\n  - System.Net.Security.SslStream.EndWrite(System.IAsyncResult)\n  - System.Net.Security.SslStream.Flush\n  - System.Net.Security.SslStream.FlushAsync(System.Threading.CancellationToken)\n  - System.Net.Security.SslStream.HashAlgorithm\n  - System.Net.Security.SslStream.HashStrength\n  - System.Net.Security.SslStream.IsAuthenticated\n  - System.Net.Security.SslStream.IsEncrypted\n  - System.Net.Security.SslStream.IsMutuallyAuthenticated\n  - System.Net.Security.SslStream.IsServer\n  - System.Net.Security.SslStream.IsSigned\n  - System.Net.Security.SslStream.KeyExchangeAlgorithm\n  - System.Net.Security.SslStream.KeyExchangeStrength\n  - System.Net.Security.SslStream.Length\n  - System.Net.Security.SslStream.LocalCertificate\n  - System.Net.Security.SslStream.Position\n  - System.Net.Security.SslStream.Read(System.Byte[],System.Int32,System.Int32)\n  - System.Net.Security.SslStream.ReadTimeout\n  - System.Net.Security.SslStream.RemoteCertificate\n  - System.Net.Security.SslStream.Seek(System.Int64,System.IO.SeekOrigin)\n  - System.Net.Security.SslStream.SetLength(System.Int64)\n  - System.Net.Security.SslStream.ShutdownAsync\n  - System.Net.Security.SslStream.SslProtocol\n  - System.Net.Security.SslStream.TransportContext\n  - System.Net.Security.SslStream.Write(System.Byte[])\n  - System.Net.Security.SslStream.Write(System.Byte[],System.Int32,System.Int32)\n  - System.Net.Security.SslStream.WriteTimeout\n  langs:\n  - csharp\n  name: SslStream\n  nameWithType: SslStream\n  fullName: System.Net.Security.SslStream\n  type: Class\n  assemblies:\n  - System.Net.Security\n  - System\n  - netstandard\n  namespace: System.Net.Security\n  summary: Provides a stream used for client-server communication that uses the Secure Socket Layer (SSL) security protocol to authenticate the server and optionally the client.\n  remarks: \"SSL protocols help to provide confidentiality and integrity checking for messages transmitted using an <xref:System.Net.Security.SslStream>. An SSL connection, such as that provided by <xref:System.Net.Security.SslStream>, should be used when communicating sensitive information between a client and a server. Using an <xref:System.Net.Security.SslStream> helps to prevent anyone from reading and tampering with information while it is in transit on the network.  \\n  \\n An <xref:System.Net.Security.SslStream> instance transmits data using a stream that you supply when creating the <xref:System.Net.Security.SslStream>. When you supply this underlying stream, you have the option to specify whether closing the <xref:System.Net.Security.SslStream> also closes the underlying stream. Typically, the <xref:System.Net.Security.SslStream> class is used with the <xref:System.Net.Sockets.TcpClient> and <xref:System.Net.Sockets.TcpListener> classes. The <xref:System.Net.Sockets.TcpClient.GetStream%2A> method provides a <xref:System.Net.Sockets.NetworkStream> suitable for use with the <xref:System.Net.Security.SslStream> class.  \\n  \\n After creating an <xref:System.Net.Security.SslStream>, the server and optionally, the client must be authenticated. The server must provide an X509 certificate that establishes proof of its identity and can request that the client also do so. Authentication must be performed before transmitting information using an <xref:System.Net.Security.SslStream>. Clients initiate authentication using the synchronous <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A> methods, which block until the authentication completes, or the asynchronous <xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A> methods, which do not block waiting for the authentication to complete. Servers initiate authentication using the synchronous <xref:System.Net.Security.SslStream.AuthenticateAsServer%2A> or asynchronous <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A> methods. Both client and server must initiate the authentication.  \\n  \\n The authentication is handled by the Security Support Provider (SSPI) channel provider. The client is given an opportunity to control validation of the server's certificate by specifying a <xref:System.Net.Security.RemoteCertificateValidationCallback> delegate when creating an <xref:System.Net.Security.SslStream>. The server can also control validation by supplying a <xref:System.Net.Security.RemoteCertificateValidationCallback> delegate. The method referenced by the delegate includes the remote party's certificate and any errors SSPI encountered while validating the certificate. Note that if the server specifies a delegate, the delegate's method is invoked regardless of whether the server requested client authentication. If the server did not request client authentication, the server's delegate method receives a null certificate and an empty array of certificate errors.  \\n  \\n If the server requires client authentication, the client must specify one or more certificates for authentication. If the client has more than one certificate, the client can provide a <xref:System.Net.Security.LocalCertificateSelectionCallback> delegate to select the correct certificate for the server. The client's certificates must be located in the current user's \\\"My\\\" certificate store. Client authentication via certificates is not supported for the <xref:System.Security.Authentication.SslProtocols.Ssl2> (SSL version 2) protocol.  \\n  \\n If the authentication fails, you receive a <xref:System.Security.Authentication.AuthenticationException>, and the <xref:System.Net.Security.SslStream> is no longer useable. You should close this object and remove all references to it so that it can be collected by the garbage collector.  \\n  \\n When the authentication process, also known as the SSL handshake, succeeds, the identity of the server (and optionally, the client) is established and the <xref:System.Net.Security.SslStream> can be used by the client and server to exchange messages. Before sending or receiving information, the client and server should check the security services and levels provided by the <xref:System.Net.Security.SslStream> to determine whether the protocol, algorithms, and strengths selected meet their requirements for integrity and confidentiality. If the current settings are not sufficient, the stream should be closed. You can check the security services provided by the <xref:System.Net.Security.SslStream> using the <xref:System.Net.Security.SslStream.IsEncrypted%2A> and <xref:System.Net.Security.SslStream.IsSigned%2A> properties. The following table shows the elements that report the cryptographic settings used for authentication, encryption and data signing.  \\n  \\n|Element|Members|  \\n|-------------|-------------|  \\n|The security protocol used to authenticate the server and, optionally, the client.|The <xref:System.Net.Security.SslStream.SslProtocol%2A> property and the associated <xref:System.Security.Authentication.SslProtocols> enumeration.|  \\n|The key exchange algorithm.|The <xref:System.Net.Security.SslStream.KeyExchangeAlgorithm%2A> property and the associated <xref:System.Security.Authentication.ExchangeAlgorithmType> enumeration.|  \\n|The message integrity algorithm.|The <xref:System.Net.Security.SslStream.HashAlgorithm%2A> property and the associated <xref:System.Security.Authentication.HashAlgorithmType> enumeration.|  \\n|The message confidentiality algorithm.|The <xref:System.Net.Security.SslStream.CipherAlgorithm%2A> property and the associated <xref:System.Security.Authentication.CipherAlgorithmType> enumeration.|  \\n|The strengths of the selected algorithms.|The <xref:System.Net.Security.SslStream.KeyExchangeStrength%2A>, <xref:System.Net.Security.SslStream.HashStrength%2A>, and <xref:System.Net.Security.SslStream.CipherStrength%2A> properties.|  \\n  \\n After a successful authentication, you can send data using the synchronous <xref:System.Net.Security.SslStream.Write%2A> or asynchronous <xref:System.Net.Security.SslStream.BeginWrite%2A> methods. You can receive data using the synchronous <xref:System.Net.Security.SslStream.Read%2A> or asynchronous <xref:System.Net.Security.SslStream.BeginRead%2A> methods.  \\n  \\n If you specified to the <xref:System.Net.Security.SslStream.%23ctor%2A> that the underlying stream should be left open, you are responsible for closing that stream when you are done using it.  \\n  \\n> [!NOTE]\\n>  If the application that creates the <xref:System.Net.Security.SslStream> object runs with the credentials of a Normal user, the application will not be able to access certificates installed in the local machine store unless permission has been explicitly given to the user to do so.  \\n  \\n <xref:System.Net.Security.SslStream> assumes that a timeout along with any other <xref:System.IO.IOException> when one is thrown from the inner stream will be treated as fatal by its caller. Reusing a <xref:System.Net.Security.SslStream> instance after a timeout will return garbage. An application should <xref:System.IO.Stream.Close%2A> the <xref:System.Net.Security.SslStream> and throw an exception in these cases.  \\n  \\n The .NET Framework 4.6 includes a new security feature that blocks insecure cipher and hashing algorithms for connections. Applications using TLS/SSL through APIs such as HttpClient, HttpWebRequest, FTPClient, SmtpClient, SslStream, etc. and targeting .NET Framework 4.6 get the more-secure behavior by default.  \\n  \\n Developers may want to opt out of this behavior in order to maintain interoperability with their existing SSL3 services OR TLS w/ RC4 services. [This article](https://support.microsoft.com/kb/3069494) explains how to modify your code so that the new behavior is disabled.  \\n  \\n The .NET Framework 4.7 adds new overloads for the methods that authenticate SslStreams that do not specify a TLS version, but instead use the TLS version defined as the system default in [SCHANNEL](https://msdn.microsoft.com/library/windows/desktop/aa380123.aspx). Use these methods in your app as a way to be able to later modify the defaults as TLS version best practice changes over time, without the need to rebuild and redeploy your app.\"\n  example:\n  - \"The following code example demonstrates creating an <xref:System.Net.Sockets.TcpListener> that uses the <xref:System.Net.Security.SslStream> class to communicate with clients.  \\n  \\n [!code-cpp[NclSslServerSync#0](~/samples/snippets/cpp/VS_Snippets_Remoting/NclSslServerSync/CPP/NclSslServerSync.cpp#0)]\\n [!code-csharp[NclSslServerSync#0](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSslServerSync/CS/serversync.cs#0)]  \\n  \\n The following code example demonstrates creating a <xref:System.Net.Sockets.TcpClient> that uses the <xref:System.Net.Security.SslStream> class to communicate with a server.  \\n  \\n [!code-cpp[NclSslClientSync#0](~/samples/snippets/cpp/VS_Snippets_Remoting/NclSslClientSync/CPP/clientsync.cpp#0)]\\n [!code-csharp[NclSslClientSync#0](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSslClientSync/CS/clientsync.cs#0)]\"\n  syntax:\n    content: 'public class SslStream : System.Net.Security.AuthenticatedStream'\n  inheritance:\n  - System.Object\n  - System.IO.Stream\n  - System.Net.Security.AuthenticatedStream\n  implements: []\n  inheritedMembers:\n  - System.IO.Stream.Close\n  - System.IO.Stream.CopyTo(System.IO.Stream)\n  - System.IO.Stream.CopyTo(System.IO.Stream,System.Int32)\n  - System.IO.Stream.CopyToAsync(System.IO.Stream)\n  - System.IO.Stream.CopyToAsync(System.IO.Stream,System.Int32)\n  - System.IO.Stream.CopyToAsync(System.IO.Stream,System.Int32,System.Threading.CancellationToken)\n  - System.IO.Stream.CreateWaitHandle\n  - System.IO.Stream.Dispose\n  - System.IO.Stream.FlushAsync\n  - System.IO.Stream.Null\n  - System.IO.Stream.ObjectInvariant\n  - System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32)\n  - System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)\n  - System.IO.Stream.ReadByte\n  - System.IO.Stream.Synchronized(System.IO.Stream)\n  - System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32)\n  - System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)\n  - System.IO.Stream.WriteByte(System.Byte)\n  - System.Net.Security.AuthenticatedStream.InnerStream\n  - System.Net.Security.AuthenticatedStream.LeaveInnerStreamOpen\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Security/SslStream.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.Security.SslStream.#ctor(System.IO.Stream)\n  commentId: M:System.Net.Security.SslStream.#ctor(System.IO.Stream)\n  id: '#ctor(System.IO.Stream)'\n  parent: System.Net.Security.SslStream\n  langs:\n  - csharp\n  name: SslStream(Stream)\n  nameWithType: SslStream.SslStream(Stream)\n  fullName: SslStream.SslStream(Stream)\n  type: Constructor\n  assemblies:\n  - System.Net.Security\n  - System\n  - netstandard\n  namespace: System.Net.Security\n  summary: Initializes a new instance of the <xref href=\"System.Net.Security.SslStream\"></xref> class using the specified <xref href=\"System.IO.Stream\"></xref>.\n  remarks: \"If a value is not specified in the configuration file for encryptionpolicy, the <xref:System.Net.Security.EncryptionPolicy> defaults to <xref:System.Net.Security.EncryptionPolicy?displayProperty=fullName> for the <xref:System.Net.Security.SslStream> instance that is constructed.  \\n  \\n The use of the Null cipher is required when the encryption policy is set to <xref:System.Net.Security.EncryptionPolicy?displayProperty=fullName>.\"\n  syntax:\n    content: public SslStream (System.IO.Stream innerStream);\n    parameters:\n    - id: innerStream\n      type: System.IO.Stream\n      description: A <xref href=\"System.IO.Stream\"></xref> object used by the <xref href=\"System.Net.Security.SslStream\"></xref> for sending and receiving data.\n  overload: System.Net.Security.SslStream.#ctor*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"<code>innerStream</code> is not readable.  \\n  \\n -or-  \\n  \\n <code>innerStream</code> is not writable.\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"<code>innerStream</code> is `null`.  \\n  \\n -or-  \\n  \\n <code>innerStream</code> is equal to <xref href=\\\"System.IO.Stream.Null\\\"></xref>.\"\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Security/SslStream.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.Security.SslStream.#ctor(System.IO.Stream,System.Boolean)\n  commentId: M:System.Net.Security.SslStream.#ctor(System.IO.Stream,System.Boolean)\n  id: '#ctor(System.IO.Stream,System.Boolean)'\n  parent: System.Net.Security.SslStream\n  langs:\n  - csharp\n  name: SslStream(Stream, Boolean)\n  nameWithType: SslStream.SslStream(Stream, Boolean)\n  fullName: SslStream.SslStream(Stream, Boolean)\n  type: Constructor\n  assemblies:\n  - System.Net.Security\n  - System\n  - netstandard\n  namespace: System.Net.Security\n  summary: Initializes a new instance of the <xref href=\"System.Net.Security.SslStream\"></xref> class using the specified <xref href=\"System.IO.Stream\"></xref> and stream closure behavior.\n  remarks: \"When you specify `true` for the `leaveStreamOpen` parameter, closing the <xref:System.Net.Security.SslStream> has no effect on the `innerStream` stream; you must explicitly close `innerStream` when you no longer need it.  \\n  \\n If a value is not specified in the configuration file for encryptionpolicy, the <xref:System.Net.Security.EncryptionPolicy> defaults to <xref:System.Net.Security.EncryptionPolicy?displayProperty=fullName> for the <xref:System.Net.Security.SslStream> instance that is constructed.  \\n  \\n The use of the Null cipher is required when the encryption policy is set to <xref:System.Net.Security.EncryptionPolicy?displayProperty=fullName>.\"\n  example:\n  - \"The following code example demonstrates calling this constructor.  \\n  \\n [!code-cpp[NclSslServerSync#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NclSslServerSync/CPP/NclSslServerSync.cpp#1)]\\n [!code-csharp[NclSslServerSync#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSslServerSync/CS/serversync.cs#1)]\"\n  syntax:\n    content: public SslStream (System.IO.Stream innerStream, bool leaveInnerStreamOpen);\n    parameters:\n    - id: innerStream\n      type: System.IO.Stream\n      description: A <xref href=\"System.IO.Stream\"></xref> object used by the <xref href=\"System.Net.Security.SslStream\"></xref> for sending and receiving data.\n    - id: leaveInnerStreamOpen\n      type: System.Boolean\n      description: A Boolean value that indicates the closure behavior of the <xref href=\"System.IO.Stream\"></xref> object used by the <xref href=\"System.Net.Security.SslStream\"></xref> for sending and receiving data. This parameter indicates if the inner stream is left open.\n  overload: System.Net.Security.SslStream.#ctor*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"<code>innerStream</code> is not readable.  \\n  \\n -or-  \\n  \\n <code>innerStream</code> is not writable.\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"<code>innerStream</code> is `null`.  \\n  \\n -or-  \\n  \\n <code>innerStream</code> is equal to <xref href=\\\"System.IO.Stream.Null\\\"></xref>.\"\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Security/SslStream.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.Security.SslStream.#ctor(System.IO.Stream,System.Boolean,System.Net.Security.RemoteCertificateValidationCallback)\n  commentId: M:System.Net.Security.SslStream.#ctor(System.IO.Stream,System.Boolean,System.Net.Security.RemoteCertificateValidationCallback)\n  id: '#ctor(System.IO.Stream,System.Boolean,System.Net.Security.RemoteCertificateValidationCallback)'\n  parent: System.Net.Security.SslStream\n  langs:\n  - csharp\n  name: SslStream(Stream, Boolean, RemoteCertificateValidationCallback)\n  nameWithType: SslStream.SslStream(Stream, Boolean, RemoteCertificateValidationCallback)\n  fullName: SslStream.SslStream(Stream, Boolean, RemoteCertificateValidationCallback)\n  type: Constructor\n  assemblies:\n  - System.Net.Security\n  - System\n  - netstandard\n  namespace: System.Net.Security\n  summary: Initializes a new instance of the <xref href=\"System.Net.Security.SslStream\"></xref> class using the specified <xref href=\"System.IO.Stream\"></xref>, stream closure behavior and certificate validation delegate.\n  remarks: \"When you specify `true` for the `leaveStreamOpen` parameter, closing the <xref:System.Net.Security.SslStream> has no effect on the `innerStream` stream; you must explicitly close `innerStream` when you no longer need it.  \\n  \\n The `userCertificateValidationCallback` delegate's `certificateErrors` argument contains any Windows error codes returned by the channel Security Support Provider Interface (SSPI). The return value of the method invoked by the `userCertificateValidationCallback` delegate determines whether authentication succeeds.  \\n  \\n The security protocol and cryptographic algorithms are already selected when the `userCertificateValidationCallback` delegate's method is invoked. You can use the method to determine whether the selected cryptographic algorithms and strengths are sufficient for your application. If not, the method should return `false` to prevent the <xref:System.Net.Security.SslStream> from being created.  \\n  \\n If a value is not specified in the configuration file for encryptionpolicy, the <xref:System.Net.Security.EncryptionPolicy> defaults to <xref:System.Net.Security.EncryptionPolicy?displayProperty=fullName> for the <xref:System.Net.Security.SslStream> instance that is constructed.  \\n  \\n The use of the Null cipher is required when the encryption policy is set to <xref:System.Net.Security.EncryptionPolicy?displayProperty=fullName>.  \\n  \\n> [!NOTE]\\n>  The Framework caches SSL sessions as they are created and attempts to reuse a cached session for a new request, if possible. When attempting to reuse an SSL session, the Framework uses the first element of <xref:System.Net.HttpWebRequest.ClientCertificates%2A> (if there is one), or tries to reuse an anonymous sessions if <xref:System.Net.HttpWebRequest.ClientCertificates%2A> is empty.  \\n  \\n> [!NOTE]\\n>  Client certificates are not supported in the SSL version 2 protocol.\"\n  example:\n  - \"The following code example creates an <xref:System.Net.Security.SslStream> and initiates the client portion of the authentication.  \\n  \\n [!code-cpp[NclSslClientSync#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NclSslClientSync/CPP/clientsync.cpp#4)]\\n [!code-csharp[NclSslClientSync#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSslClientSync/CS/clientsync.cs#4)]\"\n  syntax:\n    content: public SslStream (System.IO.Stream innerStream, bool leaveInnerStreamOpen, System.Net.Security.RemoteCertificateValidationCallback userCertificateValidationCallback);\n    parameters:\n    - id: innerStream\n      type: System.IO.Stream\n      description: A <xref href=\"System.IO.Stream\"></xref> object used by the <xref href=\"System.Net.Security.SslStream\"></xref> for sending and receiving data.\n    - id: leaveInnerStreamOpen\n      type: System.Boolean\n      description: A Boolean value that indicates the closure behavior of the <xref href=\"System.IO.Stream\"></xref> object used by the <xref href=\"System.Net.Security.SslStream\"></xref> for sending and receiving data. This parameter indicates if the inner stream is left open.\n    - id: userCertificateValidationCallback\n      type: System.Net.Security.RemoteCertificateValidationCallback\n      description: A <xref href=\"System.Net.Security.RemoteCertificateValidationCallback\"></xref> delegate responsible for validating the certificate supplied by the remote party.\n  overload: System.Net.Security.SslStream.#ctor*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"<code>innerStream</code> is not readable.  \\n  \\n -or-  \\n  \\n <code>innerStream</code> is not writable.\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"<code>innerStream</code> is `null`.  \\n  \\n -or-  \\n  \\n <code>innerStream</code> is equal to <xref href=\\\"System.IO.Stream.Null\\\"></xref>.\"\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Security/SslStream.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.Security.SslStream.#ctor(System.IO.Stream,System.Boolean,System.Net.Security.RemoteCertificateValidationCallback,System.Net.Security.LocalCertificateSelectionCallback)\n  commentId: M:System.Net.Security.SslStream.#ctor(System.IO.Stream,System.Boolean,System.Net.Security.RemoteCertificateValidationCallback,System.Net.Security.LocalCertificateSelectionCallback)\n  id: '#ctor(System.IO.Stream,System.Boolean,System.Net.Security.RemoteCertificateValidationCallback,System.Net.Security.LocalCertificateSelectionCallback)'\n  parent: System.Net.Security.SslStream\n  langs:\n  - csharp\n  name: SslStream(Stream, Boolean, RemoteCertificateValidationCallback, LocalCertificateSelectionCallback)\n  nameWithType: SslStream.SslStream(Stream, Boolean, RemoteCertificateValidationCallback, LocalCertificateSelectionCallback)\n  fullName: SslStream.SslStream(Stream, Boolean, RemoteCertificateValidationCallback, LocalCertificateSelectionCallback)\n  type: Constructor\n  assemblies:\n  - System.Net.Security\n  - System\n  - netstandard\n  namespace: System.Net.Security\n  summary: Initializes a new instance of the <xref href=\"System.Net.Security.SslStream\"></xref> class using the specified <xref href=\"System.IO.Stream\"></xref>, stream closure behavior, certificate validation delegate and certificate selection delegate.\n  remarks: \"When you specify `true` for the `leaveStreamOpen` parameter, closing the <xref:System.Net.Security.SslStream> has no effect on the `innerStream` stream; you must explicitly close `innerStream` when you no longer need it.  \\n  \\n The `userCertificateValidationCallback` delegate's `certificateErrors` argument contains any Windows error codes returned by the channel Security Support Provider Interface (SSPI). The return value of the method invoked by the `userCertificateValidationCallback` delegate determines whether authentication succeeds.  \\n  \\n The security protocol and cryptographic algorithms are already selected when the `userCertificateValidationCallback` delegate's method is invoked. You can use the method to determine whether the selected cryptographic algorithms and strengths are sufficient for your application. If not, the method should return `false` to prevent the <xref:System.Net.Security.SslStream> from being created.  \\n  \\n The `userCertificateSelectionCallback` delegate is useful when your application has multiple certificates and must dynamically choose a certificate. Certificates in the \\\"MY\\\" store are passed to the method invoked by the delegate.  \\n  \\n If a value is not specified in the configuration file for encryptionpolicy, the <xref:System.Net.Security.EncryptionPolicy> defaults to <xref:System.Net.Security.EncryptionPolicy?displayProperty=fullName> for the <xref:System.Net.Security.SslStream> instance that is constructed.  \\n  \\n The use of the Null cipher is required when the encryption policy is set to <xref:System.Net.Security.EncryptionPolicy?displayProperty=fullName>.  \\n  \\n> [!NOTE]\\n>  The Framework caches SSL sessions as they are created and attempts to reuse a cached session for a new request, if possible. When attempting to reuse an SSL session, the Framework uses the first element of P:System.Net.HttpWebRequest.ClientCertificates (if there is one), or tries to reuse an anonymous sessions if P:System.Net.HttpWebRequest.ClientCertificates is empty.\"\n  example:\n  - \"The following code example demonstrates calling this constructor. This example is part of a larger example provided for the <xref:System.Net.Security.SslStream> class.  \\n  \\n [!code-cpp[NclSslClientAsync#6](~/samples/snippets/cpp/VS_Snippets_Remoting/NclSslClientAsync/CPP/NclSslClientAsync.cpp#6)]\\n [!code-csharp[NclSslClientAsync#6](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSslClientAsync/CS/clientasync.cs#6)]\"\n  syntax:\n    content: public SslStream (System.IO.Stream innerStream, bool leaveInnerStreamOpen, System.Net.Security.RemoteCertificateValidationCallback userCertificateValidationCallback, System.Net.Security.LocalCertificateSelectionCallback userCertificateSelectionCallback);\n    parameters:\n    - id: innerStream\n      type: System.IO.Stream\n      description: A <xref href=\"System.IO.Stream\"></xref> object used by the <xref href=\"System.Net.Security.SslStream\"></xref> for sending and receiving data.\n    - id: leaveInnerStreamOpen\n      type: System.Boolean\n      description: A Boolean value that indicates the closure behavior of the <xref href=\"System.IO.Stream\"></xref> object used by the <xref href=\"System.Net.Security.SslStream\"></xref> for sending and receiving data. This parameter indicates if the inner stream is left open.\n    - id: userCertificateValidationCallback\n      type: System.Net.Security.RemoteCertificateValidationCallback\n      description: A <xref href=\"System.Net.Security.RemoteCertificateValidationCallback\"></xref> delegate responsible for validating the certificate supplied by the remote party.\n    - id: userCertificateSelectionCallback\n      type: System.Net.Security.LocalCertificateSelectionCallback\n      description: A <xref href=\"System.Net.Security.LocalCertificateSelectionCallback\"></xref> delegate responsible for selecting the certificate used for authentication.\n  overload: System.Net.Security.SslStream.#ctor*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"<code>innerStream</code> is not readable.  \\n  \\n -or-  \\n  \\n <code>innerStream</code> is not writable.\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"<code>innerStream</code> is `null`.  \\n  \\n -or-  \\n  \\n <code>innerStream</code> is equal to <xref href=\\\"System.IO.Stream.Null\\\"></xref>.\"\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Security/SslStream.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.Security.SslStream.#ctor(System.IO.Stream,System.Boolean,System.Net.Security.RemoteCertificateValidationCallback,System.Net.Security.LocalCertificateSelectionCallback,System.Net.Security.EncryptionPolicy)\n  commentId: M:System.Net.Security.SslStream.#ctor(System.IO.Stream,System.Boolean,System.Net.Security.RemoteCertificateValidationCallback,System.Net.Security.LocalCertificateSelectionCallback,System.Net.Security.EncryptionPolicy)\n  id: '#ctor(System.IO.Stream,System.Boolean,System.Net.Security.RemoteCertificateValidationCallback,System.Net.Security.LocalCertificateSelectionCallback,System.Net.Security.EncryptionPolicy)'\n  parent: System.Net.Security.SslStream\n  langs:\n  - csharp\n  name: SslStream(Stream, Boolean, RemoteCertificateValidationCallback, LocalCertificateSelectionCallback, EncryptionPolicy)\n  nameWithType: SslStream.SslStream(Stream, Boolean, RemoteCertificateValidationCallback, LocalCertificateSelectionCallback, EncryptionPolicy)\n  fullName: SslStream.SslStream(Stream, Boolean, RemoteCertificateValidationCallback, LocalCertificateSelectionCallback, EncryptionPolicy)\n  type: Constructor\n  assemblies:\n  - System.Net.Security\n  - System\n  - netstandard\n  namespace: System.Net.Security\n  summary: Initializes a new instance of the <xref href=\"System.Net.Security.SslStream\"></xref> class using the specified <xref href=\"System.IO.Stream\"></xref>\n  remarks: The use of the Null cipher is required when the `encryptionPolicy` parameter is set to <xref:System.Net.Security.EncryptionPolicy?displayProperty=fullName>.\n  syntax:\n    content: >-\n      [System.MonoLimitation(\"encryptionPolicy is ignored\")]\n\n      public SslStream (System.IO.Stream innerStream, bool leaveInnerStreamOpen, System.Net.Security.RemoteCertificateValidationCallback userCertificateValidationCallback, System.Net.Security.LocalCertificateSelectionCallback userCertificateSelectionCallback, System.Net.Security.EncryptionPolicy encryptionPolicy);\n    parameters:\n    - id: innerStream\n      type: System.IO.Stream\n      description: A <xref href=\"System.IO.Stream\"></xref> object used by the <xref href=\"System.Net.Security.SslStream\"></xref> for sending and receiving data.\n    - id: leaveInnerStreamOpen\n      type: System.Boolean\n      description: A Boolean value that indicates the closure behavior of the <xref href=\"System.IO.Stream\"></xref> object used by the <xref href=\"System.Net.Security.SslStream\"></xref> for sending and receiving data. This parameter indicates if the inner stream is left open.\n    - id: userCertificateValidationCallback\n      type: System.Net.Security.RemoteCertificateValidationCallback\n      description: A <xref href=\"System.Net.Security.RemoteCertificateValidationCallback\"></xref> delegate responsible for validating the certificate supplied by the remote party.\n    - id: userCertificateSelectionCallback\n      type: System.Net.Security.LocalCertificateSelectionCallback\n      description: A <xref href=\"System.Net.Security.LocalCertificateSelectionCallback\"></xref> delegate responsible for selecting the certificate used for authentication.\n    - id: encryptionPolicy\n      type: System.Net.Security.EncryptionPolicy\n      description: The <xref href=\"System.Net.Security.EncryptionPolicy\"></xref> to use.\n  overload: System.Net.Security.SslStream.#ctor*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"<code>innerStream</code> is not readable.  \\n  \\n -or-  \\n  \\n <code>innerStream</code> is not writable.  \\n  \\n -or-  \\n  \\n <code>encryptionPolicy</code> is not valid.\"\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"<code>innerStream</code> is `null`.  \\n  \\n -or-  \\n  \\n <code>innerStream</code> is equal to <xref href=\\\"System.IO.Stream.Null\\\"></xref>.\"\n  attributes:\n  - type: System.MonoLimitation\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Security/SslStream.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.Security.SslStream.AuthenticateAsClient(System.String)\n  commentId: M:System.Net.Security.SslStream.AuthenticateAsClient(System.String)\n  id: AuthenticateAsClient(System.String)\n  parent: System.Net.Security.SslStream\n  langs:\n  - csharp\n  name: AuthenticateAsClient(String)\n  nameWithType: SslStream.AuthenticateAsClient(String)\n  fullName: SslStream.AuthenticateAsClient(String)\n  type: Method\n  assemblies:\n  - System\n  - netstandard\n  - System.Net.Security\n  namespace: System.Net.Security\n  summary: Called by clients to authenticate the server and optionally the client in a client-server connection.\n  remarks: \"This method authenticates using <xref:System.Security.Authentication.SslProtocols.Default>. No client certificates are used in the authentication. The certificate revocation list is not checked during authentication. The value specified for `targetHost` must match the name on the server's certificate.  \\n  \\n When authentication succeeds, you must check the <xref:System.Net.Security.SslStream.IsEncrypted%2A> and <xref:System.Net.Security.SslStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.SslStream>. Check the <xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.  \\n  \\n If the authentication fails, you receive a <xref:System.Security.Authentication.AuthenticationException>, and this <xref:System.Net.Security.SslStream> is no longer useable. You should close this object and remove all references to it so that it can be collected by the garbage collector.\"\n  syntax:\n    content: public virtual void AuthenticateAsClient (string targetHost);\n    parameters:\n    - id: targetHost\n      type: System.String\n      description: The name of the server that shares this <xref href=\"System.Net.Security.SslStream\"></xref>.\n  overload: System.Net.Security.SslStream.AuthenticateAsClient*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>targetHost</code> is `null`.\n  - type: System.Security.Authentication.AuthenticationException\n    commentId: T:System.Security.Authentication.AuthenticationException\n    description: The authentication failed and left this object in an unusable state.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"Authentication has already occurred.  \\n  \\n -or-  \\n  \\n Server authentication using this <xref href=\\\"System.Net.Security.SslStream\\\"></xref> was tried previously.  \\n  \\n -or-  \\n  \\n Authentication is already in progress.\"\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: This object has been closed.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Security/SslStream.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.Security.SslStream.AuthenticateAsClient(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Boolean)\n  commentId: M:System.Net.Security.SslStream.AuthenticateAsClient(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Boolean)\n  id: AuthenticateAsClient(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Boolean)\n  parent: System.Net.Security.SslStream\n  langs:\n  - csharp\n  name: AuthenticateAsClient(String, X509CertificateCollection, Boolean)\n  nameWithType: SslStream.AuthenticateAsClient(String, X509CertificateCollection, Boolean)\n  fullName: SslStream.AuthenticateAsClient(String, X509CertificateCollection, Boolean)\n  type: Method\n  assemblies:\n  - System\n  - System.Net.Security\n  namespace: System.Net.Security\n  summary: Called by clients to authenticate the server and optionally the client in a client-server connection. The authentication process uses the specified certificate collection, and the system default SSL protocol.\n  remarks: \"When authentication succeeds, you must check the <xref:System.Net.Security.SslStream.IsEncrypted%2A> and <xref:System.Net.Security.SslStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.SslStream>. Check the <xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.  \\n  \\n If the authentication fails, you receive a <xref:System.Security.Authentication.AuthenticationException>, and this <xref:System.Net.Security.SslStream> is no longer useable. You should close this object and remove all references to it so that it can be collected by the garbage collector.  \\n  \\n> [!NOTE]\\n>  Client certificates are not supported in the SSL version 2 protocol.\"\n  syntax:\n    content: public virtual void AuthenticateAsClient (string targetHost, System.Security.Cryptography.X509Certificates.X509CertificateCollection clientCertificates, bool checkCertificateRevocation);\n    parameters:\n    - id: targetHost\n      type: System.String\n      description: The name of the server that will share this <xref href=\"System.Net.Security.SslStream\"></xref>.\n    - id: clientCertificates\n      type: System.Security.Cryptography.X509Certificates.X509CertificateCollection\n      description: The <xref href=\"System.Security.Cryptography.X509Certificates.X509CertificateCollection\"></xref> that contains client certificates.\n    - id: checkCertificateRevocation\n      type: System.Boolean\n      description: A <xref href=\"System.Boolean\"></xref> value that specifies whether the certificate revocation list is checked during authentication.\n  overload: System.Net.Security.SslStream.AuthenticateAsClient*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.7\n  monikers:\n  - netcore-2.0\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Security/SslStream.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.Security.SslStream.AuthenticateAsClient(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Security.Authentication.SslProtocols,System.Boolean)\n  commentId: M:System.Net.Security.SslStream.AuthenticateAsClient(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Security.Authentication.SslProtocols,System.Boolean)\n  id: AuthenticateAsClient(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Security.Authentication.SslProtocols,System.Boolean)\n  parent: System.Net.Security.SslStream\n  langs:\n  - csharp\n  name: AuthenticateAsClient(String, X509CertificateCollection, SslProtocols, Boolean)\n  nameWithType: SslStream.AuthenticateAsClient(String, X509CertificateCollection, SslProtocols, Boolean)\n  fullName: SslStream.AuthenticateAsClient(String, X509CertificateCollection, SslProtocols, Boolean)\n  type: Method\n  assemblies:\n  - System\n  - netstandard\n  - System.Net.Security\n  namespace: System.Net.Security\n  summary: Called by clients to authenticate the server and optionally the client in a client-server connection. The authentication process uses the specified certificate collection and SSL protocol.\n  remarks: \"When authentication succeeds, you must check the <xref:System.Net.Security.SslStream.IsEncrypted%2A> and <xref:System.Net.Security.SslStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.SslStream>. Check the <xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.  \\n  \\n If the authentication fails, you receive a <xref:System.Security.Authentication.AuthenticationException>, and this <xref:System.Net.Security.SslStream> is no longer useable. You should close this object and remove all references to it so that it can be collected by the garbage collector.  \\n  \\n> [!NOTE]\\n>  Client certificates are not supported in the SSL version 2 protocol.\"\n  syntax:\n    content: public virtual void AuthenticateAsClient (string targetHost, System.Security.Cryptography.X509Certificates.X509CertificateCollection clientCertificates, System.Security.Authentication.SslProtocols enabledSslProtocols, bool checkCertificateRevocation);\n    parameters:\n    - id: targetHost\n      type: System.String\n      description: The name of the server that will share this <xref href=\"System.Net.Security.SslStream\"></xref>.\n    - id: clientCertificates\n      type: System.Security.Cryptography.X509Certificates.X509CertificateCollection\n      description: The <xref href=\"System.Security.Cryptography.X509Certificates.X509CertificateCollection\"></xref> that contains client certificates.\n    - id: enabledSslProtocols\n      type: System.Security.Authentication.SslProtocols\n      description: The <xref href=\"System.Security.Authentication.SslProtocols\"></xref> value that represents the protocol used for authentication.\n    - id: checkCertificateRevocation\n      type: System.Boolean\n      description: A <xref href=\"System.Boolean\"></xref> value that specifies whether the certificate revocation list is checked during authentication.\n  overload: System.Net.Security.SslStream.AuthenticateAsClient*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Security/SslStream.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.Security.SslStream.AuthenticateAsClientAsync(System.String)\n  commentId: M:System.Net.Security.SslStream.AuthenticateAsClientAsync(System.String)\n  id: AuthenticateAsClientAsync(System.String)\n  parent: System.Net.Security.SslStream\n  langs:\n  - csharp\n  name: AuthenticateAsClientAsync(String)\n  nameWithType: SslStream.AuthenticateAsClientAsync(String)\n  fullName: SslStream.AuthenticateAsClientAsync(String)\n  type: Method\n  assemblies:\n  - System.Net.Security\n  - System\n  - netstandard\n  namespace: System.Net.Security\n  summary: Called by clients to authenticate the server and optionally the client in a client-server connection as an asynchronous operation.\n  remarks: \"This method authenticates using <xref:System.Security.Authentication.SslProtocols.Default>. No client certificates are used in the authentication. The certificate revocation list is not checked during authentication. The value specified for `targetHost` must match the name on the server's certificate.  \\n  \\n When authentication succeeds, you must check the <xref:System.Net.Security.SslStream.IsEncrypted%2A> and <xref:System.Net.Security.SslStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.SslStream>. Check the <xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.  \\n  \\n If the authentication fails, you receive a <xref:System.Security.Authentication.AuthenticationException>, and this <xref:System.Net.Security.SslStream> is no longer useable. You should close this object and remove all references to it so that it can be collected by the garbage collector.\"\n  syntax:\n    content: public virtual System.Threading.Tasks.Task AuthenticateAsClientAsync (string targetHost);\n    parameters:\n    - id: targetHost\n      type: System.String\n      description: The name of the server that shares this <xref href=\"System.Net.Security.SslStream\"></xref>.\n    return:\n      type: System.Threading.Tasks.Task\n      description: \"Returns <xref href=\\\"System.Threading.Tasks.Task\\\"></xref>  \\n  \\n The task object representing the asynchronous operation.\"\n  overload: System.Net.Security.SslStream.AuthenticateAsClientAsync*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>targetHost</code> is `null`.\n  - type: System.Security.Authentication.AuthenticationException\n    commentId: T:System.Security.Authentication.AuthenticationException\n    description: The authentication failed and left this object in an unusable state.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"Authentication has already occurred.  \\n  \\n -or-  \\n  \\n Server authentication using this <xref href=\\\"System.Net.Security.SslStream\\\"></xref> was tried previously.  \\n  \\n -or-  \\n  \\n Authentication is already in progress.\"\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: This object has been closed.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Security/SslStream.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.Security.SslStream.AuthenticateAsClientAsync(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Boolean)\n  commentId: M:System.Net.Security.SslStream.AuthenticateAsClientAsync(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Boolean)\n  id: AuthenticateAsClientAsync(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Boolean)\n  parent: System.Net.Security.SslStream\n  langs:\n  - csharp\n  name: AuthenticateAsClientAsync(String, X509CertificateCollection, Boolean)\n  nameWithType: SslStream.AuthenticateAsClientAsync(String, X509CertificateCollection, Boolean)\n  fullName: SslStream.AuthenticateAsClientAsync(String, X509CertificateCollection, Boolean)\n  type: Method\n  assemblies:\n  - System\n  - System.Net.Security\n  namespace: System.Net.Security\n  summary: Called by clients to authenticate the server and optionally the client in a client-server connection as an asynchronous operation. The authentication process uses the specified certificate collection and the system default SSL protocol.\n  remarks: \"When authentication succeeds, you must check the <xref:System.Net.Security.SslStream.IsEncrypted%2A> and <xref:System.Net.Security.SslStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.SslStream>. Check the <xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.  \\n  \\n If the authentication fails, you receive a <xref:System.Security.Authentication.AuthenticationException>, and this <xref:System.Net.Security.SslStream> is no longer useable. You should close this object and remove all references to it so that it can be collected by the garbage collector.  \\n  \\n> [!NOTE]\\n>  Client certificates are not supported in the SSL version 2 protocol.\"\n  syntax:\n    content: public virtual System.Threading.Tasks.Task AuthenticateAsClientAsync (string targetHost, System.Security.Cryptography.X509Certificates.X509CertificateCollection clientCertificates, bool checkCertificateRevocation);\n    parameters:\n    - id: targetHost\n      type: System.String\n      description: The name of the server that will share this <xref href=\"System.Net.Security.SslStream\"></xref>.\n    - id: clientCertificates\n      type: System.Security.Cryptography.X509Certificates.X509CertificateCollection\n      description: The <xref href=\"System.Security.Cryptography.X509Certificates.X509CertificateCollection\"></xref> that contains client certificates.\n    - id: checkCertificateRevocation\n      type: System.Boolean\n      description: A <xref href=\"System.Boolean\"></xref> value that specifies whether the certificate revocation list is checked during authentication.\n    return:\n      type: System.Threading.Tasks.Task\n      description: The task object representing the asynchronous operation.\n  overload: System.Net.Security.SslStream.AuthenticateAsClientAsync*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.7\n  monikers:\n  - netcore-2.0\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Security/SslStream.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.Security.SslStream.AuthenticateAsClientAsync(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Security.Authentication.SslProtocols,System.Boolean)\n  commentId: M:System.Net.Security.SslStream.AuthenticateAsClientAsync(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Security.Authentication.SslProtocols,System.Boolean)\n  id: AuthenticateAsClientAsync(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Security.Authentication.SslProtocols,System.Boolean)\n  parent: System.Net.Security.SslStream\n  langs:\n  - csharp\n  name: AuthenticateAsClientAsync(String, X509CertificateCollection, SslProtocols, Boolean)\n  nameWithType: SslStream.AuthenticateAsClientAsync(String, X509CertificateCollection, SslProtocols, Boolean)\n  fullName: SslStream.AuthenticateAsClientAsync(String, X509CertificateCollection, SslProtocols, Boolean)\n  type: Method\n  assemblies:\n  - System.Net.Security\n  - System\n  - netstandard\n  namespace: System.Net.Security\n  summary: Called by clients to authenticate the server and optionally the client in a client-server connection as an asynchronous operation. The authentication process uses the specified certificate collection and SSL protocol.\n  remarks: \"When authentication succeeds, you must check the <xref:System.Net.Security.SslStream.IsEncrypted%2A> and <xref:System.Net.Security.SslStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.SslStream>. Check the <xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.  \\n  \\n If the authentication fails, you receive a <xref:System.Security.Authentication.AuthenticationException>, and this <xref:System.Net.Security.SslStream> is no longer useable. You should close this object and remove all references to it so that it can be collected by the garbage collector.  \\n  \\n> [!NOTE]\\n>  Client certificates are not supported in the SSL version 2 protocol.\"\n  syntax:\n    content: public virtual System.Threading.Tasks.Task AuthenticateAsClientAsync (string targetHost, System.Security.Cryptography.X509Certificates.X509CertificateCollection clientCertificates, System.Security.Authentication.SslProtocols enabledSslProtocols, bool checkCertificateRevocation);\n    parameters:\n    - id: targetHost\n      type: System.String\n      description: The name of the server that will share this <xref href=\"System.Net.Security.SslStream\"></xref>.\n    - id: clientCertificates\n      type: System.Security.Cryptography.X509Certificates.X509CertificateCollection\n      description: The <xref href=\"System.Security.Cryptography.X509Certificates.X509CertificateCollection\"></xref> that contains client certificates.\n    - id: enabledSslProtocols\n      type: System.Security.Authentication.SslProtocols\n      description: The <xref href=\"System.Security.Authentication.SslProtocols\"></xref> value that represents the protocol used for authentication.\n    - id: checkCertificateRevocation\n      type: System.Boolean\n      description: A <xref href=\"System.Boolean\"></xref> value that specifies whether the certificate revocation list is checked during authentication.\n    return:\n      type: System.Threading.Tasks.Task\n      description: \"Returns <xref href=\\\"System.Threading.Tasks.Task\\\"></xref>  \\n  \\n The task object representing the asynchronous operation.\"\n  overload: System.Net.Security.SslStream.AuthenticateAsClientAsync*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Security/SslStream.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.Security.SslStream.AuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate)\n  commentId: M:System.Net.Security.SslStream.AuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate)\n  id: AuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate)\n  parent: System.Net.Security.SslStream\n  langs:\n  - csharp\n  name: AuthenticateAsServer(X509Certificate)\n  nameWithType: SslStream.AuthenticateAsServer(X509Certificate)\n  fullName: SslStream.AuthenticateAsServer(X509Certificate)\n  type: Method\n  assemblies:\n  - System\n  - netstandard\n  - System.Net.Security\n  namespace: System.Net.Security\n  summary: Called by servers to authenticate the server and optionally the client in a client-server connection using the specified certificate.\n  remarks: \"This method authenticates using <xref:System.Security.Authentication.SslProtocols.Default>. The certificate revocation list is not checked during authentication. The client is not required to provide a certificate for authentication.  \\n  \\n This method blocks until the operation completes. To prevent blocking until the operation completes, use one of the <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A> method overloads.  \\n  \\n If the authentication fails, you receive a <xref:System.Security.Authentication.AuthenticationException>, and this <xref:System.Net.Security.SslStream> is no longer useable. You should close this object and remove all references to it so that it can be collected by the garbage collector.\"\n  syntax:\n    content: public virtual void AuthenticateAsServer (System.Security.Cryptography.X509Certificates.X509Certificate serverCertificate);\n    parameters:\n    - id: serverCertificate\n      type: System.Security.Cryptography.X509Certificates.X509Certificate\n      description: The certificate used to authenticate the server.\n  overload: System.Net.Security.SslStream.AuthenticateAsServer*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>serverCertificate</code> is `null`.\n  - type: System.Security.Authentication.AuthenticationException\n    commentId: T:System.Security.Authentication.AuthenticationException\n    description: The authentication failed and left this object in an unusable state.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"Authentication has already occurred.  \\n  \\n -or-  \\n  \\n Client authentication using this <xref href=\\\"System.Net.Security.SslStream\\\"></xref> was tried previously.  \\n  \\n -or-  \\n  \\n Authentication is already in progress.\"\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: This object has been closed.\n  - type: System.PlatformNotSupportedException\n    commentId: T:System.PlatformNotSupportedException\n    description: The <xref href=\"System.Net.Security.SslStream.AuthenticateAsServer*\"></xref> method is not supported on Windows 95, Windows 98, or Windows Millennium.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Security/SslStream.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.Security.SslStream.AuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Boolean)\n  commentId: M:System.Net.Security.SslStream.AuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Boolean)\n  id: AuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Boolean)\n  parent: System.Net.Security.SslStream\n  langs:\n  - csharp\n  name: AuthenticateAsServer(X509Certificate, Boolean, Boolean)\n  nameWithType: SslStream.AuthenticateAsServer(X509Certificate, Boolean, Boolean)\n  fullName: SslStream.AuthenticateAsServer(X509Certificate, Boolean, Boolean)\n  type: Method\n  assemblies:\n  - System\n  - System.Net.Security\n  namespace: System.Net.Security\n  summary: Called by servers to authenticate the server and optionally the client in a client-server connection using the specified certificates and requirements, and using the sytem default security protocol.\n  remarks: \"This method blocks until the operation completes. To prevent blocking until the operation completes, use one of the <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A> method overloads.  \\n  \\n If the authentication fails, you receive a <xref:System.Security.Authentication.AuthenticationException>, and this <xref:System.Net.Security.SslStream> is no longer useable. You should close this object and remove all references to it so that it can be collected by the garbage collector.\"\n  syntax:\n    content: public virtual void AuthenticateAsServer (System.Security.Cryptography.X509Certificates.X509Certificate serverCertificate, bool clientCertificateRequired, bool checkCertificateRevocation);\n    parameters:\n    - id: serverCertificate\n      type: System.Security.Cryptography.X509Certificates.X509Certificate\n      description: The X509Certificate used to authenticate the server.\n    - id: clientCertificateRequired\n      type: System.Boolean\n      description: A <xref href=\"System.Boolean\"></xref> value that specifies whether the client is asked for a certificate for authentication. Note that this is only a request -- if no certificate is provided, the server still accepts the connection request.\n    - id: checkCertificateRevocation\n      type: System.Boolean\n      description: A <xref href=\"System.Boolean\"></xref> value that specifies whether the certificate revocation list is checked during authentication.\n  overload: System.Net.Security.SslStream.AuthenticateAsServer*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>serverCertificate</code> is `null`.\n  - type: System.Security.Authentication.AuthenticationException\n    commentId: T:System.Security.Authentication.AuthenticationException\n    description: The authentication failed and left this object in an unusable state.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"Authentication has already occurred.  \\n  \\n -or-  \\n  \\n Client authentication using this <xref href=\\\"System.Net.Security.SslStream\\\"></xref> was tried previously.  \\n  \\n -or-  \\n  \\n Authentication is already in progress.\"\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: This object has been closed.\n  - type: System.PlatformNotSupportedException\n    commentId: T:System.PlatformNotSupportedException\n    description: The <xref href=\"System.Net.Security.SslStream.AuthenticateAsServer*\"></xref> method is not supported on Windows 95, Windows 98, or Windows Millennium.\n  version:\n  - netcore-2.0\n  - netframework-4.7\n  monikers:\n  - netcore-2.0\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Security/SslStream.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.Security.SslStream.AuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Security.Authentication.SslProtocols,System.Boolean)\n  commentId: M:System.Net.Security.SslStream.AuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Security.Authentication.SslProtocols,System.Boolean)\n  id: AuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Security.Authentication.SslProtocols,System.Boolean)\n  parent: System.Net.Security.SslStream\n  langs:\n  - csharp\n  name: AuthenticateAsServer(X509Certificate, Boolean, SslProtocols, Boolean)\n  nameWithType: SslStream.AuthenticateAsServer(X509Certificate, Boolean, SslProtocols, Boolean)\n  fullName: SslStream.AuthenticateAsServer(X509Certificate, Boolean, SslProtocols, Boolean)\n  type: Method\n  assemblies:\n  - System\n  - netstandard\n  - System.Net.Security\n  namespace: System.Net.Security\n  summary: Called by servers to authenticate the server and optionally the client in a client-server connection using the specified certificates, requirements and security protocol.\n  remarks: \"This method blocks until the operation completes. To prevent blocking until the operation completes, use one of the <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A> method overloads.  \\n  \\n If the authentication fails, you receive a <xref:System.Security.Authentication.AuthenticationException>, and this <xref:System.Net.Security.SslStream> is no longer useable. You should close this object and remove all references to it so that it can be collected by the garbage collector.\"\n  syntax:\n    content: public virtual void AuthenticateAsServer (System.Security.Cryptography.X509Certificates.X509Certificate serverCertificate, bool clientCertificateRequired, System.Security.Authentication.SslProtocols enabledSslProtocols, bool checkCertificateRevocation);\n    parameters:\n    - id: serverCertificate\n      type: System.Security.Cryptography.X509Certificates.X509Certificate\n      description: The X509Certificate used to authenticate the server.\n    - id: clientCertificateRequired\n      type: System.Boolean\n      description: A <xref href=\"System.Boolean\"></xref> value that specifies whether the client is asked for a certificate for authentication. Note that this is only a request -- if no certificate is provided, the server still accepts the connection request.\n    - id: enabledSslProtocols\n      type: System.Security.Authentication.SslProtocols\n      description: The <xref href=\"System.Security.Authentication.SslProtocols\"></xref> value that represents the protocol used for authentication.\n    - id: checkCertificateRevocation\n      type: System.Boolean\n      description: A <xref href=\"System.Boolean\"></xref> value that specifies whether the certificate revocation list is checked during authentication.\n  overload: System.Net.Security.SslStream.AuthenticateAsServer*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>serverCertificate</code> is `null`.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>enabledSslProtocols</code> is not a valid <xref href=\"System.Security.Authentication.SslProtocols\"></xref> value.\n  - type: System.Security.Authentication.AuthenticationException\n    commentId: T:System.Security.Authentication.AuthenticationException\n    description: The authentication failed and left this object in an unusable state.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"Authentication has already occurred.  \\n  \\n -or-  \\n  \\n Client authentication using this <xref href=\\\"System.Net.Security.SslStream\\\"></xref> was tried previously.  \\n  \\n -or-  \\n  \\n Authentication is already in progress.\"\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: This object has been closed.\n  - type: System.PlatformNotSupportedException\n    commentId: T:System.PlatformNotSupportedException\n    description: The <xref href=\"System.Net.Security.SslStream.AuthenticateAsServer*\"></xref> method is not supported on Windows 95, Windows 98, or Windows Millennium.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Security/SslStream.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.Security.SslStream.AuthenticateAsServerAsync(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Security.Authentication.SslProtocols,System.Boolean)\n  commentId: M:System.Net.Security.SslStream.AuthenticateAsServerAsync(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Security.Authentication.SslProtocols,System.Boolean)\n  id: AuthenticateAsServerAsync(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Security.Authentication.SslProtocols,System.Boolean)\n  parent: System.Net.Security.SslStream\n  langs:\n  - csharp\n  name: AuthenticateAsServerAsync(X509Certificate, Boolean, SslProtocols, Boolean)\n  nameWithType: SslStream.AuthenticateAsServerAsync(X509Certificate, Boolean, SslProtocols, Boolean)\n  fullName: SslStream.AuthenticateAsServerAsync(X509Certificate, Boolean, SslProtocols, Boolean)\n  type: Method\n  assemblies:\n  - System.Net.Security\n  - System\n  - netstandard\n  namespace: System.Net.Security\n  summary: Called by servers to authenticate the server and optionally the client in a client-server connection using the specified certificates, requirements and security protocol as an asynchronous operation.\n  remarks: If the authentication fails, you receive a <xref:System.Security.Authentication.AuthenticationException>, and this <xref:System.Net.Security.SslStream> is no longer useable. You should close this object and remove all references to it so that it can be collected by the garbage collector.\n  syntax:\n    content: public virtual System.Threading.Tasks.Task AuthenticateAsServerAsync (System.Security.Cryptography.X509Certificates.X509Certificate serverCertificate, bool clientCertificateRequired, System.Security.Authentication.SslProtocols enabledSslProtocols, bool checkCertificateRevocation);\n    parameters:\n    - id: serverCertificate\n      type: System.Security.Cryptography.X509Certificates.X509Certificate\n      description: The X509Certificate used to authenticate the server.\n    - id: clientCertificateRequired\n      type: System.Boolean\n      description: A <xref href=\"System.Boolean\"></xref> value that specifies whether the client is asked for a certificate for authentication. Note that this is only a request -- if no certificate is provided, the server still accepts the connection request.\n    - id: enabledSslProtocols\n      type: System.Security.Authentication.SslProtocols\n      description: The <xref href=\"System.Security.Authentication.SslProtocols\"></xref> value that represents the protocol used for authentication.\n    - id: checkCertificateRevocation\n      type: System.Boolean\n      description: A <xref href=\"System.Boolean\"></xref> value that specifies whether the certificate revocation list is checked during authentication.\n    return:\n      type: System.Threading.Tasks.Task\n      description: \"Returns <xref href=\\\"System.Threading.Tasks.Task\\\"></xref>  \\n  \\n The task object representing the asynchronous operation.\"\n  overload: System.Net.Security.SslStream.AuthenticateAsServerAsync*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Security/SslStream.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.Security.SslStream.AuthenticateAsServerAsync(System.Security.Cryptography.X509Certificates.X509Certificate)\n  commentId: M:System.Net.Security.SslStream.AuthenticateAsServerAsync(System.Security.Cryptography.X509Certificates.X509Certificate)\n  id: AuthenticateAsServerAsync(System.Security.Cryptography.X509Certificates.X509Certificate)\n  parent: System.Net.Security.SslStream\n  langs:\n  - csharp\n  name: AuthenticateAsServerAsync(X509Certificate)\n  nameWithType: SslStream.AuthenticateAsServerAsync(X509Certificate)\n  fullName: SslStream.AuthenticateAsServerAsync(X509Certificate)\n  type: Method\n  assemblies:\n  - System.Net.Security\n  - System\n  - netstandard\n  namespace: System.Net.Security\n  summary: Called by servers to authenticate the server and optionally the client in a client-server connection using the specified certificate as an asynchronous operation.\n  remarks: \"This method authenticates using <xref:System.Security.Authentication.SslProtocols.Default>. The certificate revocation list is not checked during authentication. The client is not required to provide a certificate for authentication.  \\n  \\n If the authentication fails, you receive a <xref:System.Security.Authentication.AuthenticationException>, and this <xref:System.Net.Security.SslStream> is no longer useable. You should close this object and remove all references to it so that it can be collected by the garbage collector.\"\n  syntax:\n    content: public virtual System.Threading.Tasks.Task AuthenticateAsServerAsync (System.Security.Cryptography.X509Certificates.X509Certificate serverCertificate);\n    parameters:\n    - id: serverCertificate\n      type: System.Security.Cryptography.X509Certificates.X509Certificate\n      description: The certificate used to authenticate the server.\n    return:\n      type: System.Threading.Tasks.Task\n      description: \"Returns <xref href=\\\"System.Threading.Tasks.Task\\\"></xref>  \\n  \\n The task object representing the asynchronous operation.\"\n  overload: System.Net.Security.SslStream.AuthenticateAsServerAsync*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>serverCertificate</code> is `null`.\n  - type: System.Security.Authentication.AuthenticationException\n    commentId: T:System.Security.Authentication.AuthenticationException\n    description: The authentication failed and left this object in an unusable state.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"Authentication has already occurred.  \\n  \\n -or-  \\n  \\n Client authentication using this <xref href=\\\"System.Net.Security.SslStream\\\"></xref> was tried previously.  \\n  \\n -or-  \\n  \\n Authentication is already in progress.\"\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: This object has been closed.\n  - type: System.PlatformNotSupportedException\n    commentId: T:System.PlatformNotSupportedException\n    description: The <xref href=\"System.Net.Security.SslStream.AuthenticateAsServerAsync*\"></xref> method is not supported on Windows 95, Windows 98, or Windows Millennium.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Security/SslStream.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.Security.SslStream.AuthenticateAsServerAsync(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Boolean)\n  commentId: M:System.Net.Security.SslStream.AuthenticateAsServerAsync(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Boolean)\n  id: AuthenticateAsServerAsync(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Boolean)\n  parent: System.Net.Security.SslStream\n  langs:\n  - csharp\n  name: AuthenticateAsServerAsync(X509Certificate, Boolean, Boolean)\n  nameWithType: SslStream.AuthenticateAsServerAsync(X509Certificate, Boolean, Boolean)\n  fullName: SslStream.AuthenticateAsServerAsync(X509Certificate, Boolean, Boolean)\n  type: Method\n  assemblies:\n  - System\n  - System.Net.Security\n  namespace: System.Net.Security\n  summary: Called by servers to authenticate the server and optionally the client in a client-server connection using the specified certificates, requirements and security protocol as an asynchronous operation.\n  remarks: If the authentication fails, you receive a <xref:System.Security.Authentication.AuthenticationException>, and this <xref:System.Net.Security.SslStream> is no longer useable. You should close this object and remove all references to it so that it can be collected by the garbage collector.\n  syntax:\n    content: public virtual System.Threading.Tasks.Task AuthenticateAsServerAsync (System.Security.Cryptography.X509Certificates.X509Certificate serverCertificate, bool clientCertificateRequired, bool checkCertificateRevocation);\n    parameters:\n    - id: serverCertificate\n      type: System.Security.Cryptography.X509Certificates.X509Certificate\n      description: The X509Certificate used to authenticate the server.\n    - id: clientCertificateRequired\n      type: System.Boolean\n      description: A <xref href=\"System.Boolean\"></xref> value that specifies whether the client is asked for a certificate for authentication. Note that this is only a request -- if no certificate is provided, the server still accepts the connection request.\n    - id: checkCertificateRevocation\n      type: System.Boolean\n      description: A <xref href=\"System.Boolean\"></xref> value that specifies whether the certificate revocation list is checked during authentication.\n    return:\n      type: System.Threading.Tasks.Task\n      description: The task object representing the asynchronous operation.\n  overload: System.Net.Security.SslStream.AuthenticateAsServerAsync*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.7\n  monikers:\n  - netcore-2.0\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Security/SslStream.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.Security.SslStream.BeginAuthenticateAsClient(System.String,System.AsyncCallback,System.Object)\n  commentId: M:System.Net.Security.SslStream.BeginAuthenticateAsClient(System.String,System.AsyncCallback,System.Object)\n  id: BeginAuthenticateAsClient(System.String,System.AsyncCallback,System.Object)\n  parent: System.Net.Security.SslStream\n  langs:\n  - csharp\n  name: BeginAuthenticateAsClient(String, AsyncCallback, Object)\n  nameWithType: SslStream.BeginAuthenticateAsClient(String, AsyncCallback, Object)\n  fullName: SslStream.BeginAuthenticateAsClient(String, AsyncCallback, Object)\n  type: Method\n  assemblies:\n  - System\n  - netstandard\n  - System.Net.Security\n  namespace: System.Net.Security\n  summary: Called by clients to begin an asynchronous operation to authenticate the server and optionally the client.\n  remarks: \"This method authenticates using <xref:System.Security.Authentication.SslProtocols.Default>. No client certificates are used in the authentication. The certificate revocation list is not checked during authentication.  \\n  \\n The value specified for `targetHost` must match the name on the server's certificate.  \\n  \\n The asynchronous authentication operation must be completed by calling the <xref:System.Net.Security.SslStream.EndAuthenticateAsClient%2A> method. Typically, the method is invoked by the `asyncCallback` delegate.  \\n  \\n This method does not block while the operation completes. To block until the operation completes, use one of the <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A> method overloads.  \\n  \\n For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)  \\n  \\n If you receive a <xref:System.Security.Authentication.AuthenticationException>, this <xref:System.Net.Security.SslStream> is no longer useable. You should close this object and remove all references to it so that it can be collected by the garbage collector.\"\n  syntax:\n    content: public virtual IAsyncResult BeginAuthenticateAsClient (string targetHost, AsyncCallback asyncCallback, object asyncState);\n    parameters:\n    - id: targetHost\n      type: System.String\n      description: The name of the server that shares this <xref href=\"System.Net.Security.SslStream\"></xref>.\n    - id: asyncCallback\n      type: System.AsyncCallback\n      description: An <xref href=\"System.AsyncCallback\"></xref> delegate that references the method to invoke when the authentication is complete.\n    - id: asyncState\n      type: System.Object\n      description: A user-defined object that contains information about the operation. This object is passed to the <code>asyncCallback</code> delegate when the operation completes.\n    return:\n      type: System.IAsyncResult\n      description: An <xref href=\"System.IAsyncResult\"></xref> object that indicates the status of the asynchronous operation.\n  overload: System.Net.Security.SslStream.BeginAuthenticateAsClient*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>targetHost</code> is `null`.\n  - type: System.Security.Authentication.AuthenticationException\n    commentId: T:System.Security.Authentication.AuthenticationException\n    description: The authentication failed and left this object in an unusable state.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"Authentication has already occurred.  \\n  \\n -or-  \\n  \\n Server authentication using this <xref href=\\\"System.Net.Security.SslStream\\\"></xref> was tried previously.  \\n  \\n -or-  \\n  \\n Authentication is already in progress.\"\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: This object has been closed.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Security/SslStream.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.Security.SslStream.BeginAuthenticateAsClient(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Boolean,System.AsyncCallback,System.Object)\n  commentId: M:System.Net.Security.SslStream.BeginAuthenticateAsClient(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Boolean,System.AsyncCallback,System.Object)\n  id: BeginAuthenticateAsClient(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Boolean,System.AsyncCallback,System.Object)\n  parent: System.Net.Security.SslStream\n  langs:\n  - csharp\n  name: BeginAuthenticateAsClient(String, X509CertificateCollection, Boolean, AsyncCallback, Object)\n  nameWithType: SslStream.BeginAuthenticateAsClient(String, X509CertificateCollection, Boolean, AsyncCallback, Object)\n  fullName: SslStream.BeginAuthenticateAsClient(String, X509CertificateCollection, Boolean, AsyncCallback, Object)\n  type: Method\n  assemblies:\n  - System\n  - System.Net.Security\n  namespace: System.Net.Security\n  summary: Called by clients to begin an asynchronous operation to authenticate the server and optionally the client using the specified certificates and the system default security protocol.\n  remarks: \"The value specified for `targetHost` must match the name on the server's certificate.  \\n  \\n The asynchronous authentication operation must be completed by calling the <xref:System.Net.Security.SslStream.EndAuthenticateAsClient%2A> method. Typically, the method is invoked by the `asyncCallback` delegate.  \\n  \\n This method does not block while the operation completes. To block until the operation completes, use one of the <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A> method overloads.  \\n  \\n For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)  \\n  \\n If you receive a <xref:System.Security.Authentication.AuthenticationException>, this <xref:System.Net.Security.SslStream> is no longer useable. You should close this object and remove all references to it so that it can be collected by the garbage collector.  \\n  \\n> [!NOTE]\\n>  Client certificates are not supported in the SSL version 2 protocol.\"\n  syntax:\n    content: public virtual IAsyncResult BeginAuthenticateAsClient (string targetHost, System.Security.Cryptography.X509Certificates.X509CertificateCollection clientCertificates, bool checkCertificateRevocation, AsyncCallback asyncCallback, object asyncState);\n    parameters:\n    - id: targetHost\n      type: System.String\n      description: The name of the server that shares this <xref href=\"System.Net.Security.SslStream\"></xref>.\n    - id: clientCertificates\n      type: System.Security.Cryptography.X509Certificates.X509CertificateCollection\n      description: The <xref href=\"System.Security.Cryptography.X509Certificates.X509CertificateCollection\"></xref> containing client certificates.\n    - id: checkCertificateRevocation\n      type: System.Boolean\n      description: A <xref href=\"System.Boolean\"></xref> value that specifies whether the certificate revocation list is checked during authentication.\n    - id: asyncCallback\n      type: System.AsyncCallback\n      description: An <xref href=\"System.AsyncCallback\"></xref> delegate that references the method to invoke when the authentication is complete.\n    - id: asyncState\n      type: System.Object\n      description: A user-defined object that contains information about the operation. This object is passed to the <code>asyncCallback</code> delegate when the operation completes.\n    return:\n      type: System.IAsyncResult\n      description: An <xref href=\"System.IAsyncResult\"></xref> object that indicates the status of the asynchronous operation.\n  overload: System.Net.Security.SslStream.BeginAuthenticateAsClient*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>targetHost</code> is `null`.\n  - type: System.Security.Authentication.AuthenticationException\n    commentId: T:System.Security.Authentication.AuthenticationException\n    description: The authentication failed and left this object in an unusable state.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"Authentication has already occurred.  \\n  \\n -or-  \\n  \\n Server authentication using this <xref href=\\\"System.Net.Security.SslStream\\\"></xref> was tried previously.  \\n  \\n -or-  \\n  \\n Authentication is already in progress.\"\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: This object has been closed.\n  version:\n  - netcore-2.0\n  - netframework-4.7\n  monikers:\n  - netcore-2.0\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Security/SslStream.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.Security.SslStream.BeginAuthenticateAsClient(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Security.Authentication.SslProtocols,System.Boolean,System.AsyncCallback,System.Object)\n  commentId: M:System.Net.Security.SslStream.BeginAuthenticateAsClient(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Security.Authentication.SslProtocols,System.Boolean,System.AsyncCallback,System.Object)\n  id: BeginAuthenticateAsClient(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Security.Authentication.SslProtocols,System.Boolean,System.AsyncCallback,System.Object)\n  parent: System.Net.Security.SslStream\n  langs:\n  - csharp\n  name: BeginAuthenticateAsClient(String, X509CertificateCollection, SslProtocols, Boolean, AsyncCallback, Object)\n  nameWithType: SslStream.BeginAuthenticateAsClient(String, X509CertificateCollection, SslProtocols, Boolean, AsyncCallback, Object)\n  fullName: SslStream.BeginAuthenticateAsClient(String, X509CertificateCollection, SslProtocols, Boolean, AsyncCallback, Object)\n  type: Method\n  assemblies:\n  - System\n  - netstandard\n  - System.Net.Security\n  namespace: System.Net.Security\n  summary: Called by clients to begin an asynchronous operation to authenticate the server and optionally the client using the specified certificates and security protocol.\n  remarks: \"The value specified for `targetHost` must match the name on the server's certificate.  \\n  \\n The asynchronous authentication operation must be completed by calling the <xref:System.Net.Security.SslStream.EndAuthenticateAsClient%2A> method. Typically, the method is invoked by the `asyncCallback` delegate.  \\n  \\n This method does not block while the operation completes. To block until the operation completes, use one of the <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A> method overloads.  \\n  \\n For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)  \\n  \\n If you receive a <xref:System.Security.Authentication.AuthenticationException>, this <xref:System.Net.Security.SslStream> is no longer useable. You should close this object and remove all references to it so that it can be collected by the garbage collector.  \\n  \\n> [!NOTE]\\n>  Client certificates are not supported in the SSL version 2 protocol.\"\n  syntax:\n    content: public virtual IAsyncResult BeginAuthenticateAsClient (string targetHost, System.Security.Cryptography.X509Certificates.X509CertificateCollection clientCertificates, System.Security.Authentication.SslProtocols enabledSslProtocols, bool checkCertificateRevocation, AsyncCallback asyncCallback, object asyncState);\n    parameters:\n    - id: targetHost\n      type: System.String\n      description: The name of the server that shares this <xref href=\"System.Net.Security.SslStream\"></xref>.\n    - id: clientCertificates\n      type: System.Security.Cryptography.X509Certificates.X509CertificateCollection\n      description: The <xref href=\"System.Security.Cryptography.X509Certificates.X509CertificateCollection\"></xref> containing client certificates.\n    - id: enabledSslProtocols\n      type: System.Security.Authentication.SslProtocols\n      description: The <xref href=\"System.Security.Authentication.SslProtocols\"></xref> value that represents the protocol used for authentication.\n    - id: checkCertificateRevocation\n      type: System.Boolean\n      description: A <xref href=\"System.Boolean\"></xref> value that specifies whether the certificate revocation list is checked during authentication.\n    - id: asyncCallback\n      type: System.AsyncCallback\n      description: An <xref href=\"System.AsyncCallback\"></xref> delegate that references the method to invoke when the authentication is complete.\n    - id: asyncState\n      type: System.Object\n      description: A user-defined object that contains information about the operation. This object is passed to the <code>asyncCallback</code> delegate when the operation completes.\n    return:\n      type: System.IAsyncResult\n      description: An <xref href=\"System.IAsyncResult\"></xref> object that indicates the status of the asynchronous operation.\n  overload: System.Net.Security.SslStream.BeginAuthenticateAsClient*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>targetHost</code> is `null`.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>enabledSslProtocols</code> is not a valid <xref href=\"System.Security.Authentication.SslProtocols\"></xref> value.\n  - type: System.Security.Authentication.AuthenticationException\n    commentId: T:System.Security.Authentication.AuthenticationException\n    description: The authentication failed and left this object in an unusable state.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"Authentication has already occurred.  \\n  \\n -or-  \\n  \\n Server authentication using this <xref href=\\\"System.Net.Security.SslStream\\\"></xref> was tried previously.  \\n  \\n -or-  \\n  \\n Authentication is already in progress.\"\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: This object has been closed.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Security/SslStream.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.Security.SslStream.BeginAuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.AsyncCallback,System.Object)\n  commentId: M:System.Net.Security.SslStream.BeginAuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.AsyncCallback,System.Object)\n  id: BeginAuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.AsyncCallback,System.Object)\n  parent: System.Net.Security.SslStream\n  langs:\n  - csharp\n  name: BeginAuthenticateAsServer(X509Certificate, AsyncCallback, Object)\n  nameWithType: SslStream.BeginAuthenticateAsServer(X509Certificate, AsyncCallback, Object)\n  fullName: SslStream.BeginAuthenticateAsServer(X509Certificate, AsyncCallback, Object)\n  type: Method\n  assemblies:\n  - System\n  - netstandard\n  - System.Net.Security\n  namespace: System.Net.Security\n  summary: Called by servers to begin an asynchronous operation to authenticate the client and optionally the server in a client-server connection.\n  remarks: \"This method authenticates using <xref:System.Security.Authentication.SslProtocols.Default>. The certificate revocation list is not checked during authentication. The client is not required to provide a certificate for authentication.  \\n  \\n The asynchronous authentication operation must be completed by calling the <xref:System.Net.Security.SslStream.EndAuthenticateAsClient%2A> method. Typically, the method is invoked by the `asyncCallback` delegate.  \\n  \\n This method does not block while the operation completes. To block until the operation completes, use one of the <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A> method overloads.  \\n  \\n For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)  \\n  \\n If you receive a <xref:System.Security.Authentication.AuthenticationException>, this <xref:System.Net.Security.SslStream> is no longer useable. You should close this object and remove all references to it so that it can be collected by the garbage collector.\"\n  syntax:\n    content: public virtual IAsyncResult BeginAuthenticateAsServer (System.Security.Cryptography.X509Certificates.X509Certificate serverCertificate, AsyncCallback asyncCallback, object asyncState);\n    parameters:\n    - id: serverCertificate\n      type: System.Security.Cryptography.X509Certificates.X509Certificate\n      description: The X509Certificate used to authenticate the server.\n    - id: asyncCallback\n      type: System.AsyncCallback\n      description: An <xref href=\"System.AsyncCallback\"></xref> delegate that references the method to invoke when the authentication is complete.\n    - id: asyncState\n      type: System.Object\n      description: A user-defined object that contains information about the operation. This object is passed to the <code>asyncCallback</code> delegate when the operation completes.\n    return:\n      type: System.IAsyncResult\n      description: An <xref href=\"System.IAsyncResult\"></xref> object indicating the status of the asynchronous operation.\n  overload: System.Net.Security.SslStream.BeginAuthenticateAsServer*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>serverCertificate</code> is `null`.\n  - type: System.Security.Authentication.AuthenticationException\n    commentId: T:System.Security.Authentication.AuthenticationException\n    description: The authentication failed and left this object in an unusable state.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"Authentication has already occurred.  \\n  \\n -or-  \\n  \\n Client authentication using this <xref href=\\\"System.Net.Security.SslStream\\\"></xref> was tried previously.  \\n  \\n -or-  \\n  \\n Authentication is already in progress.\"\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: This object has been closed.\n  - type: System.PlatformNotSupportedException\n    commentId: T:System.PlatformNotSupportedException\n    description: The <xref href=\"System.Net.Security.SslStream.BeginAuthenticateAsServer*\"></xref> method is not supported on Windows 95, Windows 98, or Windows Millennium.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Security/SslStream.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.Security.SslStream.BeginAuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Boolean,System.AsyncCallback,System.Object)\n  commentId: M:System.Net.Security.SslStream.BeginAuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Boolean,System.AsyncCallback,System.Object)\n  id: BeginAuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Boolean,System.AsyncCallback,System.Object)\n  parent: System.Net.Security.SslStream\n  langs:\n  - csharp\n  name: BeginAuthenticateAsServer(X509Certificate, Boolean, Boolean, AsyncCallback, Object)\n  nameWithType: SslStream.BeginAuthenticateAsServer(X509Certificate, Boolean, Boolean, AsyncCallback, Object)\n  fullName: SslStream.BeginAuthenticateAsServer(X509Certificate, Boolean, Boolean, AsyncCallback, Object)\n  type: Method\n  assemblies:\n  - System\n  - System.Net.Security\n  namespace: System.Net.Security\n  summary: Called by servers to begin an asynchronous operation to authenticate the server and optionally the client using the specified certificates and requirements, and the system default security protocol.\n  remarks: \"The asynchronous authentication operation must be completed by calling the <xref:System.Net.Security.SslStream.EndAuthenticateAsServer%2A> method. Typically, the method is invoked by the `asyncCallback` delegate.  \\n  \\n This method does not block while the operation completes. To block until the operation completes, use one of the <xref:System.Net.Security.SslStream.AuthenticateAsServer%2A> method overloads.  \\n  \\n For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)  \\n  \\n If you receive a <xref:System.Security.Authentication.AuthenticationException>, this <xref:System.Net.Security.SslStream> is no longer useable. You should close this object and remove all references to it so that it can be collected by the garbage collector.\"\n  syntax:\n    content: public virtual IAsyncResult BeginAuthenticateAsServer (System.Security.Cryptography.X509Certificates.X509Certificate serverCertificate, bool clientCertificateRequired, bool checkCertificateRevocation, AsyncCallback asyncCallback, object asyncState);\n    parameters:\n    - id: serverCertificate\n      type: System.Security.Cryptography.X509Certificates.X509Certificate\n      description: The X509Certificate used to authenticate the server.\n    - id: clientCertificateRequired\n      type: System.Boolean\n      description: A <xref href=\"System.Boolean\"></xref> value that specifies whether the client is asked for a certificate for authentication. Note that this is only a request -- if no certificate is provided, the server still accepts the connection request.\n    - id: checkCertificateRevocation\n      type: System.Boolean\n      description: A <xref href=\"System.Boolean\"></xref> value that specifies whether the certificate revocation list is checked during authentication.\n    - id: asyncCallback\n      type: System.AsyncCallback\n      description: An <xref href=\"System.AsyncCallback\"></xref> delegate that references the method to invoke when the authentication is complete.\n    - id: asyncState\n      type: System.Object\n      description: A user-defined object that contains information about the operation. This object is passed to the <code>asyncCallback</code> delegate when the operation completes.\n    return:\n      type: System.IAsyncResult\n      description: An <xref href=\"System.IAsyncResult\"></xref> object that indicates the status of the asynchronous operation.\n  overload: System.Net.Security.SslStream.BeginAuthenticateAsServer*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>serverCertificate</code> is `null`.\n  - type: System.Security.Authentication.AuthenticationException\n    commentId: T:System.Security.Authentication.AuthenticationException\n    description: The authentication failed and left this object in an unusable state.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"Authentication has already occurred.  \\n  \\n -or-  \\n  \\n Server authentication using this <xref href=\\\"System.Net.Security.SslStream\\\"></xref> was tried previously.  \\n  \\n -or-  \\n  \\n Authentication is already in progress.\"\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: This object has been closed.\n  - type: System.PlatformNotSupportedException\n    commentId: T:System.PlatformNotSupportedException\n    description: The <xref href=\"System.Net.Security.SslStream.BeginAuthenticateAsServer*\"></xref> method is not supported on Windows 95, Windows 98, or Windows Millennium.\n  version:\n  - netcore-2.0\n  - netframework-4.7\n  monikers:\n  - netcore-2.0\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Security/SslStream.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.Security.SslStream.BeginAuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Security.Authentication.SslProtocols,System.Boolean,System.AsyncCallback,System.Object)\n  commentId: M:System.Net.Security.SslStream.BeginAuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Security.Authentication.SslProtocols,System.Boolean,System.AsyncCallback,System.Object)\n  id: BeginAuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Security.Authentication.SslProtocols,System.Boolean,System.AsyncCallback,System.Object)\n  parent: System.Net.Security.SslStream\n  langs:\n  - csharp\n  name: BeginAuthenticateAsServer(X509Certificate, Boolean, SslProtocols, Boolean, AsyncCallback, Object)\n  nameWithType: SslStream.BeginAuthenticateAsServer(X509Certificate, Boolean, SslProtocols, Boolean, AsyncCallback, Object)\n  fullName: SslStream.BeginAuthenticateAsServer(X509Certificate, Boolean, SslProtocols, Boolean, AsyncCallback, Object)\n  type: Method\n  assemblies:\n  - System\n  - netstandard\n  - System.Net.Security\n  namespace: System.Net.Security\n  summary: Called by servers to begin an asynchronous operation to authenticate the server and optionally the client using the specified certificates, requirements and security protocol.\n  remarks: \"The asynchronous authentication operation must be completed by calling the <xref:System.Net.Security.SslStream.EndAuthenticateAsServer%2A> method. Typically, the method is invoked by the `asyncCallback` delegate.  \\n  \\n This method does not block while the operation completes. To block until the operation completes, use one of the <xref:System.Net.Security.SslStream.AuthenticateAsServer%2A> method overloads.  \\n  \\n For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)  \\n  \\n If you receive a <xref:System.Security.Authentication.AuthenticationException>, this <xref:System.Net.Security.SslStream> is no longer useable. You should close this object and remove all references to it so that it can be collected by the garbage collector.\"\n  syntax:\n    content: public virtual IAsyncResult BeginAuthenticateAsServer (System.Security.Cryptography.X509Certificates.X509Certificate serverCertificate, bool clientCertificateRequired, System.Security.Authentication.SslProtocols enabledSslProtocols, bool checkCertificateRevocation, AsyncCallback asyncCallback, object asyncState);\n    parameters:\n    - id: serverCertificate\n      type: System.Security.Cryptography.X509Certificates.X509Certificate\n      description: The X509Certificate used to authenticate the server.\n    - id: clientCertificateRequired\n      type: System.Boolean\n      description: A <xref href=\"System.Boolean\"></xref> value that specifies whether the client is asked for a certificate for authentication. Note that this is only a request -- if no certificate is provided, the server still accepts the connection request.\n    - id: enabledSslProtocols\n      type: System.Security.Authentication.SslProtocols\n      description: The <xref href=\"System.Security.Authentication.SslProtocols\"></xref> value that represents the protocol used for authentication.\n    - id: checkCertificateRevocation\n      type: System.Boolean\n      description: A <xref href=\"System.Boolean\"></xref> value that specifies whether the certificate revocation list is checked during authentication.\n    - id: asyncCallback\n      type: System.AsyncCallback\n      description: An <xref href=\"System.AsyncCallback\"></xref> delegate that references the method to invoke when the authentication is complete.\n    - id: asyncState\n      type: System.Object\n      description: A user-defined object that contains information about the operation. This object is passed to the <code>asyncCallback</code> delegate when the operation completes.\n    return:\n      type: System.IAsyncResult\n      description: An <xref href=\"System.IAsyncResult\"></xref> object that indicates the status of the asynchronous operation.\n  overload: System.Net.Security.SslStream.BeginAuthenticateAsServer*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>serverCertificate</code> is `null`.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>enabledSslProtocols</code> is not a valid <xref href=\"System.Security.Authentication.SslProtocols\"></xref> value.\n  - type: System.Security.Authentication.AuthenticationException\n    commentId: T:System.Security.Authentication.AuthenticationException\n    description: The authentication failed and left this object in an unusable state.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"Authentication has already occurred.  \\n  \\n -or-  \\n  \\n Server authentication using this <xref href=\\\"System.Net.Security.SslStream\\\"></xref> was tried previously.  \\n  \\n -or-  \\n  \\n Authentication is already in progress.\"\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: This object has been closed.\n  - type: System.PlatformNotSupportedException\n    commentId: T:System.PlatformNotSupportedException\n    description: The <xref href=\"System.Net.Security.SslStream.BeginAuthenticateAsServer*\"></xref> method is not supported on Windows 95, Windows 98, or Windows Millennium.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Security/SslStream.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.Security.SslStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)\n  commentId: M:System.Net.Security.SslStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)\n  id: BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)\n  parent: System.Net.Security.SslStream\n  langs:\n  - csharp\n  name: BeginRead(Byte[], Int32, Int32, AsyncCallback, Object)\n  nameWithType: SslStream.BeginRead(Byte[], Int32, Int32, AsyncCallback, Object)\n  fullName: SslStream.BeginRead(Byte[], Int32, Int32, AsyncCallback, Object)\n  type: Method\n  assemblies:\n  - System\n  - netstandard\n  - System.Net.Security\n  namespace: System.Net.Security\n  summary: Begins an asynchronous read operation that reads data from the stream and stores it in the specified array.\n  remarks: \"If encryption and or signing are enabled, the read operation reads the data from the underlying stream, checks the integrity of the data, and/or decrypts it. The asynchronous read operation must be completed by calling the <xref:System.Net.Security.SslStream.EndRead%2A> method. Typically, the method is invoked by the `asyncCallback` delegate.  \\n  \\n This method does not block while the operation completes. To block until the operation completes, use the <xref:System.Net.Security.SslStream.Read%2A> method.  \\n  \\n For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)  \\n  \\n The <xref:System.Net.Security.SslStream> class does not support multiple simultaneous read operations.  \\n  \\n You cannot call this method until you have successfully authenticated. To authenticate call one of the <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>, or <xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A>, <xref:System.Net.Security.SslStream.AuthenticateAsServer%2A>, <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A> methods.\"\n  example:\n  - \"The following code example demonstrates starting an asynchronous read operation.  \\n  \\n [!code-cpp[NclSslClientAsync#8](~/samples/snippets/cpp/VS_Snippets_Remoting/NclSslClientAsync/CPP/NclSslClientAsync.cpp#8)]\\n [!code-csharp[NclSslClientAsync#8](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSslClientAsync/CS/clientasync.cs#8)]  \\n  \\n [!code-cpp[NclSslClientAsync#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NclSslClientAsync/CPP/NclSslClientAsync.cpp#4)]\\n [!code-csharp[NclSslClientAsync#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSslClientAsync/CS/clientasync.cs#4)]  \\n  \\n The following method is called when the read completes.  \\n  \\n [!code-cpp[NclSslClientAsync#5](~/samples/snippets/cpp/VS_Snippets_Remoting/NclSslClientAsync/CPP/NclSslClientAsync.cpp#5)]\\n [!code-csharp[NclSslClientAsync#5](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSslClientAsync/CS/clientasync.cs#5)]\"\n  syntax:\n    content: public override IAsyncResult BeginRead (byte[] buffer, int offset, int count, AsyncCallback asyncCallback, object asyncState);\n    parameters:\n    - id: buffer\n      type: System.Byte[]\n      description: A <xref href=\"System.Byte\"></xref> array that receives the bytes read from the stream.\n    - id: offset\n      type: System.Int32\n      description: The zero-based location in <code>buffer</code> at which to begin storing the data read from this stream.\n    - id: count\n      type: System.Int32\n      description: The maximum number of bytes to read from the stream.\n    - id: asyncCallback\n      type: System.AsyncCallback\n      description: An <xref href=\"System.AsyncCallback\"></xref> delegate that references the method to invoke when the read operation is complete.\n    - id: asyncState\n      type: System.Object\n      description: A user-defined object that contains information about the read operation. This object is passed to the <code>asyncCallback</code> delegate when the operation completes.\n    return:\n      type: System.IAsyncResult\n      description: An <xref href=\"System.IAsyncResult\"></xref> object that indicates the status of the asynchronous operation.\n  overload: System.Net.Security.SslStream.BeginRead*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>buffer</code> is `null`.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"<code>offset</code>\\n    <code><</code>\\n    <code>0</code>.  \\n  \\n <code>-or-</code><code>offset</code> > the length of <code>buffer</code>.  \\n  \\n -or-  \\n  \\n <code>offset</code> + count > the length of <code>buffer</code>.\"\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: \"The read operation failed.  \\n  \\n -or-  \\n  \\n Encryption is in use, but the data could not be decrypted.\"\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: There is already a read operation in progress.\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: This object has been closed.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: Authentication has not occurred.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Security/SslStream.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.Security.SslStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)\n  commentId: M:System.Net.Security.SslStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)\n  id: BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)\n  parent: System.Net.Security.SslStream\n  langs:\n  - csharp\n  name: BeginWrite(Byte[], Int32, Int32, AsyncCallback, Object)\n  nameWithType: SslStream.BeginWrite(Byte[], Int32, Int32, AsyncCallback, Object)\n  fullName: SslStream.BeginWrite(Byte[], Int32, Int32, AsyncCallback, Object)\n  type: Method\n  assemblies:\n  - System\n  - netstandard\n  - System.Net.Security\n  namespace: System.Net.Security\n  summary: Begins an asynchronous write operation that writes <xref href=\"System.Byte\"></xref>s from the specified buffer to the stream.\n  remarks: ''\n  example:\n  - \"The following code example demonstrates calling this method.  \\n  \\n [!code-cpp[NclSslServerAsync#5](~/samples/snippets/cpp/VS_Snippets_Remoting/NclSslServerAsync/CPP/NclSslServerAsync.cpp#5)]\\n [!code-csharp[NclSslServerAsync#5](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSslServerAsync/CS/serverasync.cs#5)]\"\n  syntax:\n    content: public override IAsyncResult BeginWrite (byte[] buffer, int offset, int count, AsyncCallback asyncCallback, object asyncState);\n    parameters:\n    - id: buffer\n      type: System.Byte[]\n      description: A <xref href=\"System.Byte\"></xref> array that supplies the bytes to be written to the stream.\n    - id: offset\n      type: System.Int32\n      description: The zero-based location in <code>buffer</code> at which to begin reading bytes to be written to the stream.\n    - id: count\n      type: System.Int32\n      description: An <xref href=\"System.Int32\"></xref> value that specifies the number of bytes to read from <code>buffer</code>.\n    - id: asyncCallback\n      type: System.AsyncCallback\n      description: An <xref href=\"System.AsyncCallback\"></xref> delegate that references the method to invoke when the write operation is complete.\n    - id: asyncState\n      type: System.Object\n      description: A user-defined object that contains information about the write operation. This object is passed to the <code>asyncCallback</code> delegate when the operation completes.\n    return:\n      type: System.IAsyncResult\n      description: An <xref href=\"System.IAsyncResult\"></xref> object indicating the status of the asynchronous operation.\n  overload: System.Net.Security.SslStream.BeginWrite*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>buffer</code> is `null`.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"<code>offset</code>\\n    <code><</code>\\n    <code>0</code>.  \\n  \\n <code>-or-</code><code>offset</code> > the length of <code>buffer</code>.  \\n  \\n -or-  \\n  \\n <code>offset</code> + count > the length of <code>buffer</code>.\"\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: The write operation failed.\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: There is already a write operation in progress.\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: This object has been closed.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: Authentication has not occurred.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Security/SslStream.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.Security.SslStream.CanRead\n  commentId: P:System.Net.Security.SslStream.CanRead\n  id: CanRead\n  parent: System.Net.Security.SslStream\n  langs:\n  - csharp\n  name: CanRead\n  nameWithType: SslStream.CanRead\n  fullName: SslStream.CanRead\n  type: Property\n  assemblies:\n  - System.Net.Security\n  - System\n  - netstandard\n  namespace: System.Net.Security\n  summary: Gets a <xref href=\"System.Boolean\"></xref> value that indicates whether the underlying stream is readable.\n  remarks: \"If successful authentication has occurred, this property returns the value returned by invoking <xref:System.IO.Stream.CanRead%2A> on the underlying stream.  \\n  \\n The underlying stream is specified when you create an instance of the <xref:System.Net.Security.SslStream> class.\"\n  example:\n  - \"The following code example demonstrates displaying the value of this property.  \\n  \\n [!code-cpp[NclSslServerSync#5](~/samples/snippets/cpp/VS_Snippets_Remoting/NclSslServerSync/CPP/NclSslServerSync.cpp#5)]\\n [!code-csharp[NclSslServerSync#5](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSslServerSync/CS/serversync.cs#5)]\"\n  syntax:\n    content: public override bool CanRead { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if authentication has occurred and the underlying stream is readable; otherwise `false`.'\n  overload: System.Net.Security.SslStream.CanRead*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Security/SslStream.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.Security.SslStream.CanSeek\n  commentId: P:System.Net.Security.SslStream.CanSeek\n  id: CanSeek\n  parent: System.Net.Security.SslStream\n  langs:\n  - csharp\n  name: CanSeek\n  nameWithType: SslStream.CanSeek\n  fullName: SslStream.CanSeek\n  type: Property\n  assemblies:\n  - System.Net.Security\n  - System\n  - netstandard\n  namespace: System.Net.Security\n  summary: Gets a <xref href=\"System.Boolean\"></xref> value that indicates whether the underlying stream is seekable.\n  remarks: \"Do not attempt to set the position of the <xref:System.Net.Security.SslStream> object or its underlying stream.  \\n  \\n The underlying stream is specified when you create an instance of the <xref:System.Net.Security.SslStream> class.\"\n  syntax:\n    content: public override bool CanSeek { get; }\n    return:\n      type: System.Boolean\n      description: This property always returns `false`.\n  overload: System.Net.Security.SslStream.CanSeek*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Security/SslStream.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.Security.SslStream.CanTimeout\n  commentId: P:System.Net.Security.SslStream.CanTimeout\n  id: CanTimeout\n  parent: System.Net.Security.SslStream\n  langs:\n  - csharp\n  name: CanTimeout\n  nameWithType: SslStream.CanTimeout\n  fullName: SslStream.CanTimeout\n  type: Property\n  assemblies:\n  - System.Net.Security\n  - System\n  - netstandard\n  namespace: System.Net.Security\n  summary: Gets a <xref href=\"System.Boolean\"></xref> value that indicates whether the underlying stream supports time-outs.\n  remarks: \"This property returns the value returned by invoking <xref:System.IO.Stream.CanTimeout%2A> on the underlying stream.  \\n  \\n The underlying stream is specified when you create an instance of the <xref:System.Net.Security.SslStream> class.\"\n  example:\n  - \"The following code example demonstrates displaying the value of this property.  \\n  \\n [!code-cpp[NclSslServerSync#5](~/samples/snippets/cpp/VS_Snippets_Remoting/NclSslServerSync/CPP/NclSslServerSync.cpp#5)]\\n [!code-csharp[NclSslServerSync#5](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSslServerSync/CS/serversync.cs#5)]\"\n  syntax:\n    content: public override bool CanTimeout { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if the underlying stream supports time-outs; otherwise, `false`.'\n  overload: System.Net.Security.SslStream.CanTimeout*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Security/SslStream.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.Security.SslStream.CanWrite\n  commentId: P:System.Net.Security.SslStream.CanWrite\n  id: CanWrite\n  parent: System.Net.Security.SslStream\n  langs:\n  - csharp\n  name: CanWrite\n  nameWithType: SslStream.CanWrite\n  fullName: SslStream.CanWrite\n  type: Property\n  assemblies:\n  - System.Net.Security\n  - System\n  - netstandard\n  namespace: System.Net.Security\n  summary: Gets a <xref href=\"System.Boolean\"></xref> value that indicates whether the underlying stream is writable.\n  remarks: \"If successful authentication has occurred, this property returns the value returned by invoking <xref:System.IO.Stream.CanWrite%2A> on the underlying stream.  \\n  \\n The underlying stream is specified when you create an instance of the <xref:System.Net.Security.SslStream> class.\"\n  example:\n  - \"The following code example demonstrates displaying the value of this property.  \\n  \\n [!code-cpp[NclSslServerSync#5](~/samples/snippets/cpp/VS_Snippets_Remoting/NclSslServerSync/CPP/NclSslServerSync.cpp#5)]\\n [!code-csharp[NclSslServerSync#5](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSslServerSync/CS/serversync.cs#5)]\"\n  syntax:\n    content: public override bool CanWrite { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if authentication has occurred and the underlying stream is writable; otherwise `false`.'\n  overload: System.Net.Security.SslStream.CanWrite*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Security/SslStream.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.Security.SslStream.CheckCertRevocationStatus\n  commentId: P:System.Net.Security.SslStream.CheckCertRevocationStatus\n  id: CheckCertRevocationStatus\n  parent: System.Net.Security.SslStream\n  langs:\n  - csharp\n  name: CheckCertRevocationStatus\n  nameWithType: SslStream.CheckCertRevocationStatus\n  fullName: SslStream.CheckCertRevocationStatus\n  type: Property\n  assemblies:\n  - System.Net.Security\n  - System\n  - netstandard\n  namespace: System.Net.Security\n  summary: Gets a <xref href=\"System.Boolean\"></xref> value that indicates whether the certificate revocation list is checked during the certificate validation process.\n  remarks: The certificate revocation list contains certificates that have been revoked by the issuer. Checking the list negatively impacts performance but improves application security.\n  example:\n  - \"The following code example demonstrates displaying the value of this property.  \\n  \\n [!code-cpp[NclSslServerSync#5](~/samples/snippets/cpp/VS_Snippets_Remoting/NclSslServerSync/CPP/NclSslServerSync.cpp#5)]\\n [!code-csharp[NclSslServerSync#5](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSslServerSync/CS/serversync.cs#5)]\"\n  syntax:\n    content: public virtual bool CheckCertRevocationStatus { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if the certificate revocation list is checked; otherwise, `false`.'\n  overload: System.Net.Security.SslStream.CheckCertRevocationStatus*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Security/SslStream.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.Security.SslStream.CipherAlgorithm\n  commentId: P:System.Net.Security.SslStream.CipherAlgorithm\n  id: CipherAlgorithm\n  parent: System.Net.Security.SslStream\n  langs:\n  - csharp\n  name: CipherAlgorithm\n  nameWithType: SslStream.CipherAlgorithm\n  fullName: SslStream.CipherAlgorithm\n  type: Property\n  assemblies:\n  - System.Net.Security\n  - System\n  - netstandard\n  namespace: System.Net.Security\n  summary: Gets a value that identifies the bulk encryption algorithm used by this <xref href=\"System.Net.Security.SslStream\"></xref>.\n  remarks: \"A value of <xref:System.Security.Authentication.CipherAlgorithmType.Null> is required for the <xref:System.Net.Security.SslStream.CipherAlgorithm%2A> property when the <xref:System.Net.Security.EncryptionPolicy.NoEncryption> enumeration value is used to construct a <xref:System.Net.Security.SslStream> instance.  \\n  \\n [!INCLUDE[winxpsvr](~/includes/winxpsvr-md.md)] and [!INCLUDE[winxp](~/includes/winxp-md.md)] do not support the <xref:System.Security.Authentication.CipherAlgorithmType.Null> value. So even if the <xref:System.Security.Authentication.CipherAlgorithmType.Null> value is used to construct the <xref:System.Net.Security.SslStream> instance, the <xref:System.Net.Security.EncryptionPolicy> property will be <xref:System.Security.Authentication.CipherAlgorithmType.None>. The <xref:System.Security.Authentication.CipherAlgorithmType.Null> value is only returned on Windows Vista and later.\"\n  example:\n  - \"The following code example displays the cryptography settings for the specified stream.  \\n  \\n [!code-cpp[NclSslServerSync#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NclSslServerSync/CPP/NclSslServerSync.cpp#3)]\\n [!code-csharp[NclSslServerSync#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSslServerSync/CS/serversync.cs#3)]\"\n  syntax:\n    content: public virtual System.Security.Authentication.CipherAlgorithmType CipherAlgorithm { get; }\n    return:\n      type: System.Security.Authentication.CipherAlgorithmType\n      description: A <xref href=\"System.Security.Authentication.CipherAlgorithmType\"></xref> value.\n  overload: System.Net.Security.SslStream.CipherAlgorithm*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The <xref href=\"System.Net.Security.SslStream.CipherAlgorithm\"></xref> property was accessed before the completion of the authentication process or the authentication process failed.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Security/SslStream.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.Security.SslStream.CipherStrength\n  commentId: P:System.Net.Security.SslStream.CipherStrength\n  id: CipherStrength\n  parent: System.Net.Security.SslStream\n  langs:\n  - csharp\n  name: CipherStrength\n  nameWithType: SslStream.CipherStrength\n  fullName: SslStream.CipherStrength\n  type: Property\n  assemblies:\n  - System.Net.Security\n  - System\n  - netstandard\n  namespace: System.Net.Security\n  summary: Gets a value that identifies the strength of the cipher algorithm used by this <xref href=\"System.Net.Security.SslStream\"></xref>.\n  remarks: \"The value of this property is zero until the authentication occurs.  \\n  \\n This property returns one of the following values:  \\n  \\n-   0  \\n  \\n-   40  \\n  \\n-   56  \\n  \\n-   80  \\n  \\n-   128  \\n  \\n-   168  \\n  \\n-   192  \\n  \\n-   256\"\n  example:\n  - \"The following code example displays the cryptography settings for the specified stream.  \\n  \\n [!code-cpp[NclSslServerSync#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NclSslServerSync/CPP/NclSslServerSync.cpp#3)]\\n [!code-csharp[NclSslServerSync#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSslServerSync/CS/serversync.cs#3)]\"\n  syntax:\n    content: public virtual int CipherStrength { get; }\n    return:\n      type: System.Int32\n      description: An <xref href=\"System.Int32\"></xref> value that specifies the strength of the algorithm, in bits.\n  overload: System.Net.Security.SslStream.CipherStrength*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Security/SslStream.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.Security.SslStream.Dispose(System.Boolean)\n  commentId: M:System.Net.Security.SslStream.Dispose(System.Boolean)\n  id: Dispose(System.Boolean)\n  parent: System.Net.Security.SslStream\n  langs:\n  - csharp\n  name: Dispose(Boolean)\n  nameWithType: SslStream.Dispose(Boolean)\n  fullName: SslStream.Dispose(Boolean)\n  type: Method\n  assemblies:\n  - System\n  - netstandard\n  - System.Net.Security\n  namespace: System.Net.Security\n  summary: Releases the unmanaged resources used by the <xref href=\"System.Net.Security.SslStream\"></xref> and optionally releases the managed resources.\n  remarks: \"This method is called by the public `Dispose()` method and the <xref:System.Object.Finalize%2A> method. `Dispose()` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`. <xref:System.Object.Finalize%2A> invokes `Dispose` with `disposing` set to `false`.  \\n  \\n When the `disposing` parameter is true, this method releases all resources held by any managed objects that this <xref:System.Net.Security.SslStream> references. This method invokes the `Dispose()` method of each referenced object.\"\n  syntax:\n    content: protected override void Dispose (bool disposing);\n    parameters:\n    - id: disposing\n      type: System.Boolean\n      description: '`true` to release both managed and unmanaged resources; `false` to release only unmanaged resources.'\n  overload: System.Net.Security.SslStream.Dispose*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Security/SslStream.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.Security.SslStream.EndAuthenticateAsClient(System.IAsyncResult)\n  commentId: M:System.Net.Security.SslStream.EndAuthenticateAsClient(System.IAsyncResult)\n  id: EndAuthenticateAsClient(System.IAsyncResult)\n  parent: System.Net.Security.SslStream\n  langs:\n  - csharp\n  name: EndAuthenticateAsClient(IAsyncResult)\n  nameWithType: SslStream.EndAuthenticateAsClient(IAsyncResult)\n  fullName: SslStream.EndAuthenticateAsClient(IAsyncResult)\n  type: Method\n  assemblies:\n  - System\n  - netstandard\n  - System.Net.Security\n  namespace: System.Net.Security\n  summary: Ends a pending asynchronous server authentication operation started with a previous call to <xref href=\"System.Net.Security.SslStream.BeginAuthenticateAsServer*\"></xref>.\n  remarks: \"If the operation has not completed, this method blocks until it does. When the authentication succeeds, you must check the <xref:System.Net.Security.SslStream.IsEncrypted%2A> and <xref:System.Net.Security.SslStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.SslStream>. Check the <xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.  \\n  \\n If the authentication fails, you receive a <xref:System.Security.Authentication.AuthenticationException>, and this <xref:System.Net.Security.SslStream> is no longer useable. You should close this object and remove all references to it so that it can be collected by the garbage collector.  \\n  \\n To perform this operation synchronously, use one of the <xref:System.Net.Security.SslStream.AuthenticateAsServer%2A> methods.\"\n  syntax:\n    content: public virtual void EndAuthenticateAsClient (IAsyncResult asyncResult);\n    parameters:\n    - id: asyncResult\n      type: System.IAsyncResult\n      description: An <xref href=\"System.IAsyncResult\"></xref> instance returned by a call to <xref href=\"System.Net.Security.SslStream.BeginAuthenticateAsServer*\"></xref>.\n  overload: System.Net.Security.SslStream.EndAuthenticateAsClient*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>asyncResult</code> is `null`.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>asyncResult</code> was not created by a call to <xref href=\"System.Net.Security.SslStream.BeginAuthenticateAsServer*\"></xref>.\n  - type: System.Security.Authentication.AuthenticationException\n    commentId: T:System.Security.Authentication.AuthenticationException\n    description: The authentication failed and left this object in an unusable state.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: There is no pending server authentication to complete.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Security/SslStream.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.Security.SslStream.EndAuthenticateAsServer(System.IAsyncResult)\n  commentId: M:System.Net.Security.SslStream.EndAuthenticateAsServer(System.IAsyncResult)\n  id: EndAuthenticateAsServer(System.IAsyncResult)\n  parent: System.Net.Security.SslStream\n  langs:\n  - csharp\n  name: EndAuthenticateAsServer(IAsyncResult)\n  nameWithType: SslStream.EndAuthenticateAsServer(IAsyncResult)\n  fullName: SslStream.EndAuthenticateAsServer(IAsyncResult)\n  type: Method\n  assemblies:\n  - System\n  - netstandard\n  - System.Net.Security\n  namespace: System.Net.Security\n  summary: Ends a pending asynchronous client authentication operation started with a previous call to <xref href=\"System.Net.Security.SslStream.BeginAuthenticateAsClient*\"></xref>.\n  remarks: \"If the operation has not completed, this method blocks until it does. When the authentication succeeds, you must check the <xref:System.Net.Security.SslStream.IsEncrypted%2A> and <xref:System.Net.Security.SslStream.IsSigned%2A> properties to determine what security services are used by the <xref:System.Net.Security.SslStream>. Check the <xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A> property to determine whether mutual authentication occurred.  \\n  \\n If the authentication fails, you receive a <xref:System.Security.Authentication.AuthenticationException>, and this <xref:System.Net.Security.SslStream> is no longer useable. You should close this object and remove all references to it so that it can be collected by the garbage collector.  \\n  \\n To perform this operation synchronously, use one of the <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A> method.\"\n  syntax:\n    content: public virtual void EndAuthenticateAsServer (IAsyncResult asyncResult);\n    parameters:\n    - id: asyncResult\n      type: System.IAsyncResult\n      description: An <xref href=\"System.IAsyncResult\"></xref> instance returned by a call to <xref href=\"System.Net.Security.SslStream.BeginAuthenticateAsClient*\"></xref>.\n  overload: System.Net.Security.SslStream.EndAuthenticateAsServer*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>asyncResult</code> is `null`.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>asyncResult</code> was not created by a call to <xref href=\"System.Net.Security.SslStream.BeginAuthenticateAsClient*\"></xref>.\n  - type: System.Security.Authentication.AuthenticationException\n    commentId: T:System.Security.Authentication.AuthenticationException\n    description: The authentication failed and left this object in an unusable state.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: There is no pending client authentication to complete.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Security/SslStream.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.Security.SslStream.EndRead(System.IAsyncResult)\n  commentId: M:System.Net.Security.SslStream.EndRead(System.IAsyncResult)\n  id: EndRead(System.IAsyncResult)\n  parent: System.Net.Security.SslStream\n  langs:\n  - csharp\n  name: EndRead(IAsyncResult)\n  nameWithType: SslStream.EndRead(IAsyncResult)\n  fullName: SslStream.EndRead(IAsyncResult)\n  type: Method\n  assemblies:\n  - System\n  - netstandard\n  - System.Net.Security\n  namespace: System.Net.Security\n  summary: Ends an asynchronous read operation started with a previous call to <xref href=\"System.Net.Security.SslStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)\"></xref>.\n  remarks: \"If the operation has not completed, this method blocks until it does.  \\n  \\n To perform this operation synchronously, use the <xref:System.Net.Security.SslStream.Read%2A> method.  \\n  \\n You cannot call this method until you have successfully authenticated. To authenticate call one of the <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>, or <xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A>, <xref:System.Net.Security.SslStream.AuthenticateAsServer%2A>, <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A> methods.\"\n  example:\n  - \"The following code example demonstrates ending an asynchronous read operation.  \\n  \\n [!code-cpp[NclSslClientAsync#5](~/samples/snippets/cpp/VS_Snippets_Remoting/NclSslClientAsync/CPP/NclSslClientAsync.cpp#5)]\\n [!code-csharp[NclSslClientAsync#5](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSslClientAsync/CS/clientasync.cs#5)]\"\n  syntax:\n    content: public override int EndRead (IAsyncResult asyncResult);\n    parameters:\n    - id: asyncResult\n      type: System.IAsyncResult\n      description: An <xref href=\"System.IAsyncResult\"></xref> instance returned by a call to <xref href=\"System.Net.Security.SslStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)\"></xref>\n    return:\n      type: System.Int32\n      description: A <xref href=\"System.Int32\"></xref> value that specifies the number of bytes read from the underlying stream.\n  overload: System.Net.Security.SslStream.EndRead*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>asyncResult</code> is `null`.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>asyncResult</code> was not created by a call to <xref href=\"System.Net.Security.SslStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)\"></xref>.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: Authentication has not occurred.\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: The read operation failed.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Security/SslStream.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.Security.SslStream.EndWrite(System.IAsyncResult)\n  commentId: M:System.Net.Security.SslStream.EndWrite(System.IAsyncResult)\n  id: EndWrite(System.IAsyncResult)\n  parent: System.Net.Security.SslStream\n  langs:\n  - csharp\n  name: EndWrite(IAsyncResult)\n  nameWithType: SslStream.EndWrite(IAsyncResult)\n  fullName: SslStream.EndWrite(IAsyncResult)\n  type: Method\n  assemblies:\n  - System\n  - netstandard\n  - System.Net.Security\n  namespace: System.Net.Security\n  summary: Ends an asynchronous write operation started with a previous call to <xref href=\"System.Net.Security.SslStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)\"></xref>.\n  remarks: \"If the operation has not completed, this method blocks until it does.  \\n  \\n An application cannot call this method until you have successfully authenticated. To authenticate, call one of the <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>, or <xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A>, <xref:System.Net.Security.SslStream.AuthenticateAsServer%2A>, <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A> methods.  \\n  \\n To perform this operation synchronously, use the <xref:System.Net.Security.SslStream.Write%2A> method.\"\n  example:\n  - \"The following code example demonstrates ending an asynchronous write operation.  \\n  \\n [!code-cpp[NclSslServerAsync#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NclSslServerAsync/CPP/NclSslServerAsync.cpp#4)]\\n [!code-csharp[NclSslServerAsync#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSslServerAsync/CS/serverasync.cs#4)]\"\n  syntax:\n    content: public override void EndWrite (IAsyncResult asyncResult);\n    parameters:\n    - id: asyncResult\n      type: System.IAsyncResult\n      description: An <xref href=\"System.IAsyncResult\"></xref> instance returned by a call to <xref href=\"System.Net.Security.SslStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)\"></xref>\n  overload: System.Net.Security.SslStream.EndWrite*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>asyncResult</code> is `null`.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>asyncResult</code> was not created by a call to <xref href=\"System.Net.Security.SslStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)\"></xref>.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: Authentication has not occurred.\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: The write operation failed.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Security/SslStream.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.Security.SslStream.Flush\n  commentId: M:System.Net.Security.SslStream.Flush\n  id: Flush\n  parent: System.Net.Security.SslStream\n  langs:\n  - csharp\n  name: Flush()\n  nameWithType: SslStream.Flush()\n  fullName: SslStream.Flush()\n  type: Method\n  assemblies:\n  - System.Net.Security\n  - System\n  - netstandard\n  namespace: System.Net.Security\n  summary: Causes any buffered data to be written to the underlying device.\n  remarks: This method invokes <xref:System.IO.Stream.Flush%2A> on the underlying stream.\n  example:\n  - \"The following code example demonstrates calling this method.  \\n  \\n [!code-cpp[NclSslClientSync#5](~/samples/snippets/cpp/VS_Snippets_Remoting/NclSslClientSync/CPP/clientsync.cpp#5)]\\n [!code-csharp[NclSslClientSync#5](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSslClientSync/CS/clientsync.cs#5)]\"\n  syntax:\n    content: public override void Flush ();\n    parameters: []\n  overload: System.Net.Security.SslStream.Flush*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Security/SslStream.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.Security.SslStream.FlushAsync(System.Threading.CancellationToken)\n  commentId: M:System.Net.Security.SslStream.FlushAsync(System.Threading.CancellationToken)\n  id: FlushAsync(System.Threading.CancellationToken)\n  parent: System.Net.Security.SslStream\n  langs:\n  - csharp\n  name: FlushAsync(CancellationToken)\n  nameWithType: SslStream.FlushAsync(CancellationToken)\n  fullName: SslStream.FlushAsync(CancellationToken)\n  type: Method\n  assemblies:\n  - System.Net.Security\n  namespace: System.Net.Security\n  syntax:\n    content: public override System.Threading.Tasks.Task FlushAsync (System.Threading.CancellationToken cancellationToken);\n    parameters:\n    - id: cancellationToken\n      type: System.Threading.CancellationToken\n      description: ''\n    return:\n      type: System.Threading.Tasks.Task\n      description: ''\n  overload: System.Net.Security.SslStream.FlushAsync*\n  exceptions: []\n  version:\n  - netcore-2.0\n  monikers:\n  - netcore-2.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Security/SslStream.xml\n- uid: System.Net.Security.SslStream.HashAlgorithm\n  commentId: P:System.Net.Security.SslStream.HashAlgorithm\n  id: HashAlgorithm\n  parent: System.Net.Security.SslStream\n  langs:\n  - csharp\n  name: HashAlgorithm\n  nameWithType: SslStream.HashAlgorithm\n  fullName: SslStream.HashAlgorithm\n  type: Property\n  assemblies:\n  - System.Net.Security\n  - System\n  - netstandard\n  namespace: System.Net.Security\n  summary: Gets the algorithm used for generating message authentication codes (MACs).\n  remarks: Message authentication algorithms generate message hashes and signatures used to detect tampering and forgery.\n  example:\n  - \"The following code example displays the cryptography settings for the specified stream.  \\n  \\n [!code-cpp[NclSslServerSync#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NclSslServerSync/CPP/NclSslServerSync.cpp#3)]\\n [!code-csharp[NclSslServerSync#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSslServerSync/CS/serversync.cs#3)]\"\n  syntax:\n    content: public virtual System.Security.Authentication.HashAlgorithmType HashAlgorithm { get; }\n    return:\n      type: System.Security.Authentication.HashAlgorithmType\n      description: A <xref href=\"System.Security.Authentication.HashAlgorithmType\"></xref> value.\n  overload: System.Net.Security.SslStream.HashAlgorithm*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The <xref href=\"System.Net.Security.SslStream.HashAlgorithm\"></xref> property was accessed before the completion of the authentication process or the authentication process failed.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Security/SslStream.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.Security.SslStream.HashStrength\n  commentId: P:System.Net.Security.SslStream.HashStrength\n  id: HashStrength\n  parent: System.Net.Security.SslStream\n  langs:\n  - csharp\n  name: HashStrength\n  nameWithType: SslStream.HashStrength\n  fullName: SslStream.HashStrength\n  type: Property\n  assemblies:\n  - System.Net.Security\n  - System\n  - netstandard\n  namespace: System.Net.Security\n  summary: Gets a value that identifies the strength of the hash algorithm used by this instance.\n  remarks: The value of this property is zero until the authentication occurs.\n  example:\n  - \"The following code example displays the cryptography settings for the specified stream.  \\n  \\n [!code-cpp[NclSslServerSync#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NclSslServerSync/CPP/NclSslServerSync.cpp#3)]\\n [!code-csharp[NclSslServerSync#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSslServerSync/CS/serversync.cs#3)]\"\n  syntax:\n    content: public virtual int HashStrength { get; }\n    return:\n      type: System.Int32\n      description: An <xref href=\"System.Int32\"></xref> value that specifies the strength of the <xref href=\"System.Security.Authentication.HashAlgorithmType\"></xref> algorithm, in bits. Valid values are 128 or 160.\n  overload: System.Net.Security.SslStream.HashStrength*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Security/SslStream.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.Security.SslStream.IsAuthenticated\n  commentId: P:System.Net.Security.SslStream.IsAuthenticated\n  id: IsAuthenticated\n  parent: System.Net.Security.SslStream\n  langs:\n  - csharp\n  name: IsAuthenticated\n  nameWithType: SslStream.IsAuthenticated\n  fullName: SslStream.IsAuthenticated\n  type: Property\n  assemblies:\n  - System.Net.Security\n  - System\n  - netstandard\n  namespace: System.Net.Security\n  summary: Gets a <xref href=\"System.Boolean\"></xref> value that indicates whether authentication was successful.\n  remarks: Clients authenticate by calling the <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A> or <xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A> methods. Servers authenticate by calling the <xref:System.Net.Security.SslStream.AuthenticateAsServer%2A> or <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A> methods.\n  example:\n  - \"The following code example demonstrates displaying the value of this property.  \\n  \\n [!code-cpp[NclSslServerSync#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NclSslServerSync/CPP/NclSslServerSync.cpp#4)]\\n [!code-csharp[NclSslServerSync#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSslServerSync/CS/serversync.cs#4)]\"\n  syntax:\n    content: public override bool IsAuthenticated { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if successful authentication occurred; otherwise, `false`.'\n  overload: System.Net.Security.SslStream.IsAuthenticated*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Security/SslStream.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.Security.SslStream.IsEncrypted\n  commentId: P:System.Net.Security.SslStream.IsEncrypted\n  id: IsEncrypted\n  parent: System.Net.Security.SslStream\n  langs:\n  - csharp\n  name: IsEncrypted\n  nameWithType: SslStream.IsEncrypted\n  fullName: SslStream.IsEncrypted\n  type: Property\n  assemblies:\n  - System.Net.Security\n  - System\n  - netstandard\n  namespace: System.Net.Security\n  summary: Gets a <xref href=\"System.Boolean\"></xref> value that indicates whether this <xref href=\"System.Net.Security.SslStream\"></xref> uses data encryption.\n  remarks: Encryption helps to protect the privacy of the data, namely it helps to ensure that while data is in transit, it cannot be deciphered by third parties.\n  example:\n  - \"The following code example demonstrates displaying the value of this property.  \\n  \\n [!code-cpp[NclSslServerSync#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NclSslServerSync/CPP/NclSslServerSync.cpp#4)]\\n [!code-csharp[NclSslServerSync#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSslServerSync/CS/serversync.cs#4)]\"\n  syntax:\n    content: public override bool IsEncrypted { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if data is encrypted before being transmitted over the network and decrypted when it reaches the remote endpoint; otherwise `false`.'\n  overload: System.Net.Security.SslStream.IsEncrypted*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Security/SslStream.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.Security.SslStream.IsMutuallyAuthenticated\n  commentId: P:System.Net.Security.SslStream.IsMutuallyAuthenticated\n  id: IsMutuallyAuthenticated\n  parent: System.Net.Security.SslStream\n  langs:\n  - csharp\n  name: IsMutuallyAuthenticated\n  nameWithType: SslStream.IsMutuallyAuthenticated\n  fullName: SslStream.IsMutuallyAuthenticated\n  type: Property\n  assemblies:\n  - System.Net.Security\n  - System\n  - netstandard\n  namespace: System.Net.Security\n  summary: Gets a <xref href=\"System.Boolean\"></xref> value that indicates whether both server and client have been authenticated.\n  remarks: Mutual authentication is specified by the server when the server wants the client to provide a certificate for authentication.\n  example:\n  - \"The following code example demonstrates displaying the value of this property.  \\n  \\n [!code-cpp[NclSslServerSync#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NclSslServerSync/CPP/NclSslServerSync.cpp#4)]\\n [!code-csharp[NclSslServerSync#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSslServerSync/CS/serversync.cs#4)]\"\n  syntax:\n    content: public override bool IsMutuallyAuthenticated { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if the server has been authenticated; otherwise `false`.'\n  overload: System.Net.Security.SslStream.IsMutuallyAuthenticated*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Security/SslStream.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.Security.SslStream.IsServer\n  commentId: P:System.Net.Security.SslStream.IsServer\n  id: IsServer\n  parent: System.Net.Security.SslStream\n  langs:\n  - csharp\n  name: IsServer\n  nameWithType: SslStream.IsServer\n  fullName: SslStream.IsServer\n  type: Property\n  assemblies:\n  - System.Net.Security\n  - System\n  - netstandard\n  namespace: System.Net.Security\n  summary: Gets a <xref href=\"System.Boolean\"></xref> value that indicates whether the local side of the connection used by this <xref href=\"System.Net.Security.SslStream\"></xref> was authenticated as the server.\n  remarks: \"If authentication failed or did not occur, this property returns `false`.  \\n  \\n To authenticate as the server, call the <xref:System.Net.Security.SslStream.AuthenticateAsServer%2A> or <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A> methods.\"\n  example:\n  - \"The following code example demonstrates displaying the value of this property.  \\n  \\n [!code-cpp[NclSslServerSync#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NclSslServerSync/CPP/NclSslServerSync.cpp#4)]\\n [!code-csharp[NclSslServerSync#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSslServerSync/CS/serversync.cs#4)]\"\n  syntax:\n    content: public override bool IsServer { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if the local endpoint was successfully authenticated as the server side of the authenticated connection; otherwise `false`.'\n  overload: System.Net.Security.SslStream.IsServer*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Security/SslStream.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.Security.SslStream.IsSigned\n  commentId: P:System.Net.Security.SslStream.IsSigned\n  id: IsSigned\n  parent: System.Net.Security.SslStream\n  langs:\n  - csharp\n  name: IsSigned\n  nameWithType: SslStream.IsSigned\n  fullName: SslStream.IsSigned\n  type: Property\n  assemblies:\n  - System.Net.Security\n  - System\n  - netstandard\n  namespace: System.Net.Security\n  summary: Gets a <xref href=\"System.Boolean\"></xref> value that indicates whether the data sent using this stream is signed.\n  remarks: Data signing helps to protect the integrity of the data, namely it helps the recipient determine whether the data has been tampered with while in transit.\n  example:\n  - \"The following code example demonstrates displaying the value of this property.  \\n  \\n [!code-cpp[NclSslServerSync#4](~/samples/snippets/cpp/VS_Snippets_Remoting/NclSslServerSync/CPP/NclSslServerSync.cpp#4)]\\n [!code-csharp[NclSslServerSync#4](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSslServerSync/CS/serversync.cs#4)]\"\n  syntax:\n    content: public override bool IsSigned { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if the data is signed before being transmitted; otherwise `false`.'\n  overload: System.Net.Security.SslStream.IsSigned*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Security/SslStream.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.Security.SslStream.KeyExchangeAlgorithm\n  commentId: P:System.Net.Security.SslStream.KeyExchangeAlgorithm\n  id: KeyExchangeAlgorithm\n  parent: System.Net.Security.SslStream\n  langs:\n  - csharp\n  name: KeyExchangeAlgorithm\n  nameWithType: SslStream.KeyExchangeAlgorithm\n  fullName: SslStream.KeyExchangeAlgorithm\n  type: Property\n  assemblies:\n  - System.Net.Security\n  - System\n  - netstandard\n  namespace: System.Net.Security\n  summary: Gets the key exchange algorithm used by this <xref href=\"System.Net.Security.SslStream\"></xref>.\n  remarks: \"The value of this property is <xref:System.Security.Authentication.ExchangeAlgorithmType.None> until the authentication occurs.  \\n  \\n The key exchange algorithm protects information used to generate shared keys.\"\n  example:\n  - \"The following code example displays the cryptography settings for the specified stream.  \\n  \\n [!code-cpp[NclSslServerSync#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NclSslServerSync/CPP/NclSslServerSync.cpp#3)]\\n [!code-csharp[NclSslServerSync#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSslServerSync/CS/serversync.cs#3)]\"\n  syntax:\n    content: public virtual System.Security.Authentication.ExchangeAlgorithmType KeyExchangeAlgorithm { get; }\n    return:\n      type: System.Security.Authentication.ExchangeAlgorithmType\n      description: An <xref href=\"System.Security.Authentication.ExchangeAlgorithmType\"></xref> value.\n  overload: System.Net.Security.SslStream.KeyExchangeAlgorithm*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Security/SslStream.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.Security.SslStream.KeyExchangeStrength\n  commentId: P:System.Net.Security.SslStream.KeyExchangeStrength\n  id: KeyExchangeStrength\n  parent: System.Net.Security.SslStream\n  langs:\n  - csharp\n  name: KeyExchangeStrength\n  nameWithType: SslStream.KeyExchangeStrength\n  fullName: SslStream.KeyExchangeStrength\n  type: Property\n  assemblies:\n  - System.Net.Security\n  - System\n  - netstandard\n  namespace: System.Net.Security\n  summary: Gets a value that identifies the strength of the key exchange algorithm used by this instance.\n  remarks: \"The value of this property is zero until the authentication occurs.  \\n  \\n In common scenarios, the value of this property is one of the following:  \\n  \\n-   512  \\n  \\n-   768  \\n  \\n-   1024  \\n  \\n-   2048\"\n  example:\n  - \"The following code example displays the cryptography settings for the specified stream.  \\n  \\n [!code-cpp[NclSslServerSync#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NclSslServerSync/CPP/NclSslServerSync.cpp#3)]\\n [!code-csharp[NclSslServerSync#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSslServerSync/CS/serversync.cs#3)]\"\n  syntax:\n    content: public virtual int KeyExchangeStrength { get; }\n    return:\n      type: System.Int32\n      description: An <xref href=\"System.Int32\"></xref> value that specifies the strength of the <xref href=\"System.Security.Authentication.ExchangeAlgorithmType\"></xref> algorithm, in bits.\n  overload: System.Net.Security.SslStream.KeyExchangeStrength*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Security/SslStream.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.Security.SslStream.Length\n  commentId: P:System.Net.Security.SslStream.Length\n  id: Length\n  parent: System.Net.Security.SslStream\n  langs:\n  - csharp\n  name: Length\n  nameWithType: SslStream.Length\n  fullName: SslStream.Length\n  type: Property\n  assemblies:\n  - System.Net.Security\n  - System\n  - netstandard\n  namespace: System.Net.Security\n  summary: Gets the length of the underlying stream.\n  remarks: This property returns the value returned by invoking <xref:System.IO.Stream.Length%2A> on the underlying stream. If the underlying stream is not seekable, this method typically throws an exception. The run-time type of the underlying stream determines the run-time type of the exception that is thrown.\n  syntax:\n    content: public override long Length { get; }\n    return:\n      type: System.Int64\n      description: \"A <xref href=\\\"System.Int64\\\"></xref>.  \\n  \\n The length of the underlying stream.\"\n  overload: System.Net.Security.SslStream.Length*\n  exceptions:\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: Getting the value of this property is not supported when the underlying stream is a <xref href=\"System.Net.Sockets.NetworkStream\"></xref>.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Security/SslStream.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.Security.SslStream.LocalCertificate\n  commentId: P:System.Net.Security.SslStream.LocalCertificate\n  id: LocalCertificate\n  parent: System.Net.Security.SslStream\n  langs:\n  - csharp\n  name: LocalCertificate\n  nameWithType: SslStream.LocalCertificate\n  fullName: SslStream.LocalCertificate\n  type: Property\n  assemblies:\n  - System.Net.Security\n  - System\n  - netstandard\n  namespace: System.Net.Security\n  summary: Gets the certificate used to authenticate the local endpoint.\n  remarks: ''\n  example:\n  - \"The following code example demonstrates displaying the certificate returned by this property.  \\n  \\n [!code-cpp[NclSslServerSync#6](~/samples/snippets/cpp/VS_Snippets_Remoting/NclSslServerSync/CPP/NclSslServerSync.cpp#6)]\\n [!code-csharp[NclSslServerSync#6](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSslServerSync/CS/serversync.cs#6)]\"\n  syntax:\n    content: public virtual System.Security.Cryptography.X509Certificates.X509Certificate LocalCertificate { get; }\n    return:\n      type: System.Security.Cryptography.X509Certificates.X509Certificate\n      description: An X509Certificate object that represents the certificate supplied for authentication or `null` if no certificate was supplied.\n  overload: System.Net.Security.SslStream.LocalCertificate*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: Authentication failed or has not occurred.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Security/SslStream.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.Security.SslStream.Position\n  commentId: P:System.Net.Security.SslStream.Position\n  id: Position\n  parent: System.Net.Security.SslStream\n  langs:\n  - csharp\n  name: Position\n  nameWithType: SslStream.Position\n  fullName: SslStream.Position\n  type: Property\n  assemblies:\n  - System.Net.Security\n  - System\n  - netstandard\n  namespace: System.Net.Security\n  summary: Gets or sets the current position in the underlying stream.\n  remarks: This property returns the value returned by invoking <xref:System.IO.Stream.Position%2A> on the underlying stream. If the underlying stream is not seekable, this method typically throws an exception. The run-time type of the underlying stream determines the run-time type of the exception that is thrown.\n  syntax:\n    content: public override long Position { get; set; }\n    return:\n      type: System.Int64\n      description: \"A <xref href=\\\"System.Int64\\\"></xref>.  \\n  \\n The current position in the underlying stream.\"\n  overload: System.Net.Security.SslStream.Position*\n  exceptions:\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: \"Setting this property is not supported.  \\n  \\n -or-  \\n  \\n Getting the value of this property is not supported when the underlying stream is a <xref href=\\\"System.Net.Sockets.NetworkStream\\\"></xref>.\"\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Security/SslStream.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.Security.SslStream.Read(System.Byte[],System.Int32,System.Int32)\n  commentId: M:System.Net.Security.SslStream.Read(System.Byte[],System.Int32,System.Int32)\n  id: Read(System.Byte[],System.Int32,System.Int32)\n  parent: System.Net.Security.SslStream\n  langs:\n  - csharp\n  name: Read(Byte[], Int32, Int32)\n  nameWithType: SslStream.Read(Byte[], Int32, Int32)\n  fullName: SslStream.Read(Byte[], Int32, Int32)\n  type: Method\n  assemblies:\n  - System.Net.Security\n  - System\n  - netstandard\n  namespace: System.Net.Security\n  summary: Reads data from this stream and stores it in the specified array.\n  remarks: \"The method reads a maximum of `count` bytes from the stream and stores them in `buffer` beginning at `offset`. You cannot perform multiple simultaneous read operations.  \\n  \\n You cannot call this method until you have successfully authenticated. To authenticate call one of the <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>, or <xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A>, <xref:System.Net.Security.SslStream.AuthenticateAsServer%2A>, <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A> methods.  \\n  \\n To perform this operation asynchronously, use the <xref:System.Net.Security.SslStream.BeginRead%2A> method.\"\n  example:\n  - \"The following code example demonstrates reading from an <xref:System.Net.Security.SslStream>.  \\n  \\n [!code-cpp[NclSslClientSync#6](~/samples/snippets/cpp/VS_Snippets_Remoting/NclSslClientSync/CPP/clientsync.cpp#6)]\\n [!code-csharp[NclSslClientSync#6](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSslClientSync/CS/clientsync.cs#6)]\"\n  syntax:\n    content: public override int Read (byte[] buffer, int offset, int count);\n    parameters:\n    - id: buffer\n      type: System.Byte[]\n      description: A <xref href=\"System.Byte\"></xref> array that receives the bytes read from this stream.\n    - id: offset\n      type: System.Int32\n      description: A <xref href=\"System.Int32\"></xref> that contains the zero-based location in <code>buffer</code> at which to begin storing the data read from this stream.\n    - id: count\n      type: System.Int32\n      description: A <xref href=\"System.Int32\"></xref> that contains the maximum number of bytes to read from this stream.\n    return:\n      type: System.Int32\n      description: A <xref href=\"System.Int32\"></xref> value that specifies the number of bytes read. When there is no more data to be read, returns 0.\n  overload: System.Net.Security.SslStream.Read*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>buffer</code> is `null`.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"<code>offset</code>\\n    <code><</code>\\n    <code>0</code>.  \\n  \\n <code>-or-</code><code>offset</code> > the length of <code>buffer</code>.  \\n  \\n -or-  \\n  \\n <code>offset</code> + count > the length of <code>buffer</code>.\"\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: The read operation failed. Check the inner exception, if present to determine the cause of the failure.\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: There is already a read operation in progress.\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: This object has been closed.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: Authentication has not occurred.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Security/SslStream.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.Security.SslStream.ReadTimeout\n  commentId: P:System.Net.Security.SslStream.ReadTimeout\n  id: ReadTimeout\n  parent: System.Net.Security.SslStream\n  langs:\n  - csharp\n  name: ReadTimeout\n  nameWithType: SslStream.ReadTimeout\n  fullName: SslStream.ReadTimeout\n  type: Property\n  assemblies:\n  - System.Net.Security\n  - System\n  - netstandard\n  namespace: System.Net.Security\n  summary: Gets or sets the amount of time a read operation blocks waiting for data.\n  remarks: \"This property returns the value returned by invoking <xref:System.IO.Stream.ReadTimeout%2A> on the underlying stream. When you set this property, the <xref:System.IO.Stream.ReadTimeout%2A> value on the underlying stream is set to the specified value.  \\n  \\n If the underlying stream is a <xref:System.Net.Sockets.NetworkStream>, <xref:System.Net.Security.SslStream.ReadTimeout%2A> is in milliseconds and is set to <xref:System.Threading.Timeout.Infinite> by default so that read operations do not timeout.\"\n  example:\n  - \"The following code example demonstrates setting the value of this property.  \\n  \\n [!code-cpp[NclSslServerSync#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NclSslServerSync/CPP/NclSslServerSync.cpp#1)]\\n [!code-csharp[NclSslServerSync#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSslServerSync/CS/serversync.cs#1)]\"\n  syntax:\n    content: public override int ReadTimeout { get; set; }\n    return:\n      type: System.Int32\n      description: A <xref href=\"System.Int32\"></xref> that specifies the amount of time that elapses before a synchronous read operation fails.\n  overload: System.Net.Security.SslStream.ReadTimeout*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Security/SslStream.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.Security.SslStream.RemoteCertificate\n  commentId: P:System.Net.Security.SslStream.RemoteCertificate\n  id: RemoteCertificate\n  parent: System.Net.Security.SslStream\n  langs:\n  - csharp\n  name: RemoteCertificate\n  nameWithType: SslStream.RemoteCertificate\n  fullName: SslStream.RemoteCertificate\n  type: Property\n  assemblies:\n  - System.Net.Security\n  - System\n  - netstandard\n  namespace: System.Net.Security\n  summary: Gets the certificate used to authenticate the remote endpoint.\n  remarks: ''\n  example:\n  - \"The following code example demonstrates displaying the certificate returned by this property.  \\n  \\n [!code-cpp[NclSslServerSync#6](~/samples/snippets/cpp/VS_Snippets_Remoting/NclSslServerSync/CPP/NclSslServerSync.cpp#6)]\\n [!code-csharp[NclSslServerSync#6](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSslServerSync/CS/serversync.cs#6)]\"\n  syntax:\n    content: public virtual System.Security.Cryptography.X509Certificates.X509Certificate RemoteCertificate { get; }\n    return:\n      type: System.Security.Cryptography.X509Certificates.X509Certificate\n      description: An X509Certificate object that represents the certificate supplied for authentication or `null` if no certificate was supplied.\n  overload: System.Net.Security.SslStream.RemoteCertificate*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: Authentication failed or has not occurred.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Security/SslStream.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.Security.SslStream.Seek(System.Int64,System.IO.SeekOrigin)\n  commentId: M:System.Net.Security.SslStream.Seek(System.Int64,System.IO.SeekOrigin)\n  id: Seek(System.Int64,System.IO.SeekOrigin)\n  parent: System.Net.Security.SslStream\n  langs:\n  - csharp\n  name: Seek(Int64, SeekOrigin)\n  nameWithType: SslStream.Seek(Int64, SeekOrigin)\n  fullName: SslStream.Seek(Int64, SeekOrigin)\n  type: Method\n  assemblies:\n  - System.Net.Security\n  - System\n  - netstandard\n  namespace: System.Net.Security\n  summary: Throws a <xref href=\"System.NotSupportedException\"></xref>.\n  remarks: Do not call this method. It is inherited, but is not supported by the <xref:System.Net.Security.SslStream> class.\n  syntax:\n    content: public override long Seek (long offset, System.IO.SeekOrigin origin);\n    parameters:\n    - id: offset\n      type: System.Int64\n      description: This value is ignored.\n    - id: origin\n      type: System.IO.SeekOrigin\n      description: This value is ignored.\n    return:\n      type: System.Int64\n      description: Always throws a <xref href=\"System.NotSupportedException\"></xref>.\n  overload: System.Net.Security.SslStream.Seek*\n  exceptions:\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: Seeking is not supported by <xref href=\"System.Net.Security.SslStream\"></xref> objects.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Security/SslStream.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.Security.SslStream.SetLength(System.Int64)\n  commentId: M:System.Net.Security.SslStream.SetLength(System.Int64)\n  id: SetLength(System.Int64)\n  parent: System.Net.Security.SslStream\n  langs:\n  - csharp\n  name: SetLength(Int64)\n  nameWithType: SslStream.SetLength(Int64)\n  fullName: SslStream.SetLength(Int64)\n  type: Method\n  assemblies:\n  - System.Net.Security\n  - System\n  - netstandard\n  namespace: System.Net.Security\n  summary: Sets the length of the underlying stream.\n  remarks: This method invokes <xref:System.IO.Stream.SetLength%2A?displayProperty=fullName> on the underlying stream specified when this <xref:System.Net.Security.SslStream> was created.\n  syntax:\n    content: public override void SetLength (long value);\n    parameters:\n    - id: value\n      type: System.Int64\n      description: An <xref href=\"System.Int64\"></xref> value that specifies the length of the stream.\n  overload: System.Net.Security.SslStream.SetLength*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Security/SslStream.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.Security.SslStream.ShutdownAsync\n  commentId: M:System.Net.Security.SslStream.ShutdownAsync\n  id: ShutdownAsync\n  parent: System.Net.Security.SslStream\n  langs:\n  - csharp\n  name: ShutdownAsync()\n  nameWithType: SslStream.ShutdownAsync()\n  fullName: SslStream.ShutdownAsync()\n  type: Method\n  assemblies:\n  - System\n  - System.Net.Security\n  namespace: System.Net.Security\n  summary: Shuts down this SslStream.\n  syntax:\n    content: public virtual System.Threading.Tasks.Task ShutdownAsync ();\n    parameters: []\n    return:\n      type: System.Threading.Tasks.Task\n      description: The task object representing the asynchronous operation.\n  overload: System.Net.Security.SslStream.ShutdownAsync*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.7\n  monikers:\n  - netcore-2.0\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Security/SslStream.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.Security.SslStream.SslProtocol\n  commentId: P:System.Net.Security.SslStream.SslProtocol\n  id: SslProtocol\n  parent: System.Net.Security.SslStream\n  langs:\n  - csharp\n  name: SslProtocol\n  nameWithType: SslStream.SslProtocol\n  fullName: SslStream.SslProtocol\n  type: Property\n  assemblies:\n  - System.Net.Security\n  - System\n  - netstandard\n  namespace: System.Net.Security\n  summary: Gets a value that indicates the security protocol used to authenticate this connection.\n  remarks: The supported security protocols are specified when the <xref:System.Net.Security.SslStream> is created. If no security protocol was passed to the constructor, the instance is created using <xref:System.Security.Authentication.SslProtocols.Default>. The actual protocol used for authentication is selected based on the protocols supported by the client and server.\n  example:\n  - \"The following example displays the security properties of the specified stream.  \\n  \\n [!code-cpp[NclSslServerSync#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NclSslServerSync/CPP/NclSslServerSync.cpp#3)]\\n [!code-csharp[NclSslServerSync#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSslServerSync/CS/serversync.cs#3)]\"\n  syntax:\n    content: public virtual System.Security.Authentication.SslProtocols SslProtocol { get; }\n    return:\n      type: System.Security.Authentication.SslProtocols\n      description: The <xref href=\"System.Security.Authentication.SslProtocols\"></xref> value that represents the protocol used for authentication.\n  overload: System.Net.Security.SslStream.SslProtocol*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Security/SslStream.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.Security.SslStream.TransportContext\n  commentId: P:System.Net.Security.SslStream.TransportContext\n  id: TransportContext\n  parent: System.Net.Security.SslStream\n  langs:\n  - csharp\n  name: TransportContext\n  nameWithType: SslStream.TransportContext\n  fullName: SslStream.TransportContext\n  type: Property\n  assemblies:\n  - System.Net.Security\n  - System\n  - netstandard\n  namespace: System.Net.Security\n  summary: Gets the <xref href=\"System.Net.TransportContext\"></xref> used for authentication using extended protection.\n  syntax:\n    content: public System.Net.TransportContext TransportContext { get; }\n    return:\n      type: System.Net.TransportContext\n      description: The <xref href=\"System.Net.TransportContext\"></xref> object that contains the channel binding token (CBT) used for extended protection.\n  overload: System.Net.Security.SslStream.TransportContext*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Security/SslStream.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.Security.SslStream.Write(System.Byte[])\n  commentId: M:System.Net.Security.SslStream.Write(System.Byte[])\n  id: Write(System.Byte[])\n  parent: System.Net.Security.SslStream\n  langs:\n  - csharp\n  name: Write(Byte[])\n  nameWithType: SslStream.Write(Byte[])\n  fullName: SslStream.Write(Byte[])\n  type: Method\n  assemblies:\n  - System.Net.Security\n  - System\n  - netstandard\n  namespace: System.Net.Security\n  summary: Writes the specified data to this stream.\n  remarks: \"This method blocks while the operation completes. To prevent blocking while the operation completes, use the <xref:System.Net.Security.SslStream.BeginWrite%2A> method.  \\n  \\n You cannot call this method until you have successfully authenticated. To authenticate call one of the <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>, or <xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A>, <xref:System.Net.Security.SslStream.AuthenticateAsServer%2A>, <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A> methods.  \\n  \\n The <xref:System.Net.Security.SslStream> class does not support multiple simultaneous write operations.\"\n  example:\n  - \"The following code example demonstrates writing to an authenticated <xref:System.Net.Security.SslStream>.  \\n  \\n [!code-cpp[NclSslServerSync#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NclSslServerSync/CPP/NclSslServerSync.cpp#1)]\\n [!code-csharp[NclSslServerSync#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSslServerSync/CS/serversync.cs#1)]\"\n  syntax:\n    content: public void Write (byte[] buffer);\n    parameters:\n    - id: buffer\n      type: System.Byte[]\n      description: A <xref href=\"System.Byte\"></xref> array that supplies the bytes written to the stream.\n  overload: System.Net.Security.SslStream.Write*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>buffer</code> is `null`.\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: The write operation failed.\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: There is already a write operation in progress.\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: This object has been closed.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: Authentication has not occurred.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Security/SslStream.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.Security.SslStream.Write(System.Byte[],System.Int32,System.Int32)\n  commentId: M:System.Net.Security.SslStream.Write(System.Byte[],System.Int32,System.Int32)\n  id: Write(System.Byte[],System.Int32,System.Int32)\n  parent: System.Net.Security.SslStream\n  langs:\n  - csharp\n  name: Write(Byte[], Int32, Int32)\n  nameWithType: SslStream.Write(Byte[], Int32, Int32)\n  fullName: SslStream.Write(Byte[], Int32, Int32)\n  type: Method\n  assemblies:\n  - System.Net.Security\n  - System\n  - netstandard\n  namespace: System.Net.Security\n  summary: Write the specified number of <xref href=\"System.Byte\"></xref>s to the underlying stream using the specified buffer and offset.\n  remarks: \"This method blocks while the operation completes. To prevent blocking while the operation completes the operation completes, use the <xref:System.Net.Security.SslStream.BeginWrite%2A> method.  \\n  \\n You cannot call this method until you have successfully authenticated. To authenticate call one of the <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>, or <xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A>, <xref:System.Net.Security.SslStream.AuthenticateAsServer%2A>, <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A> methods.  \\n  \\n The <xref:System.Net.Security.SslStream> class does not support multiple simultaneous write operations.\"\n  syntax:\n    content: public override void Write (byte[] buffer, int offset, int count);\n    parameters:\n    - id: buffer\n      type: System.Byte[]\n      description: A <xref href=\"System.Byte\"></xref> array that supplies the bytes written to the stream.\n    - id: offset\n      type: System.Int32\n      description: A <xref href=\"System.Int32\"></xref> that contains the zero-based location in <code>buffer</code> at which to begin reading bytes to be written to the stream.\n    - id: count\n      type: System.Int32\n      description: A <xref href=\"System.Int32\"></xref> that contains the number of bytes to read from <code>buffer</code>.\n  overload: System.Net.Security.SslStream.Write*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>buffer</code> is `null`.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"<code>offset</code>\\n    <code><</code>\\n    <code>0</code>.  \\n  \\n <code>-or-</code><code>offset</code> > the length of <code>buffer</code>.  \\n  \\n -or-  \\n  \\n <code>offset</code> + count > the length of <code>buffer</code>.\"\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: The write operation failed.\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: There is already a write operation in progress.\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: This object has been closed.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: Authentication has not occurred.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Security/SslStream.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.Security.SslStream.WriteTimeout\n  commentId: P:System.Net.Security.SslStream.WriteTimeout\n  id: WriteTimeout\n  parent: System.Net.Security.SslStream\n  langs:\n  - csharp\n  name: WriteTimeout\n  nameWithType: SslStream.WriteTimeout\n  fullName: SslStream.WriteTimeout\n  type: Property\n  assemblies:\n  - System.Net.Security\n  - System\n  - netstandard\n  namespace: System.Net.Security\n  summary: Gets or sets the amount of time a write operation blocks waiting for data.\n  remarks: \"This property returns the value returned by invoking <xref:System.IO.Stream.WriteTimeout%2A> on the underlying stream. For set operations, the specified value sets the <xref:System.IO.Stream.WriteTimeout%2A> value on the underlying stream.  \\n  \\n If the underlying stream is a <xref:System.Net.Sockets.NetworkStream>, <xref:System.Net.Security.SslStream.WriteTimeout%2A> is in milliseconds and is set to <xref:System.Threading.Timeout.Infinite> by default so that write operations do not timeout.\"\n  example:\n  - \"The following code example demonstrates setting the value of this property.  \\n  \\n [!code-cpp[NclSslServerSync#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NclSslServerSync/CPP/NclSslServerSync.cpp#1)]\\n [!code-csharp[NclSslServerSync#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NclSslServerSync/CS/serversync.cs#1)]\"\n  syntax:\n    content: public override int WriteTimeout { get; set; }\n    return:\n      type: System.Int32\n      description: A <xref href=\"System.Int32\"></xref> that specifies the amount of time that elapses before a synchronous write operation fails.\n  overload: System.Net.Security.SslStream.WriteTimeout*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Security/SslStream.xml\n  ms.author: bobdel\n  manager: markl\nreferences:\n- uid: System.Net.Security.AuthenticatedStream\n  parent: System.Net.Security\n  isExternal: false\n  name: AuthenticatedStream\n  nameWithType: AuthenticatedStream\n  fullName: System.Net.Security.AuthenticatedStream\n- uid: System.ArgumentException\n  parent: System\n  isExternal: false\n  name: ArgumentException\n  nameWithType: ArgumentException\n  fullName: System.ArgumentException\n- uid: System.ArgumentNullException\n  parent: System\n  isExternal: false\n  name: ArgumentNullException\n  nameWithType: ArgumentNullException\n  fullName: System.ArgumentNullException\n- uid: System.Security.Authentication.AuthenticationException\n  parent: System.Security.Authentication\n  isExternal: false\n  name: AuthenticationException\n  nameWithType: AuthenticationException\n  fullName: System.Security.Authentication.AuthenticationException\n- uid: System.InvalidOperationException\n  parent: System\n  isExternal: false\n  name: InvalidOperationException\n  nameWithType: InvalidOperationException\n  fullName: System.InvalidOperationException\n- uid: System.ObjectDisposedException\n  parent: System\n  isExternal: false\n  name: ObjectDisposedException\n  nameWithType: ObjectDisposedException\n  fullName: System.ObjectDisposedException\n- uid: System.PlatformNotSupportedException\n  parent: System\n  isExternal: false\n  name: PlatformNotSupportedException\n  nameWithType: PlatformNotSupportedException\n  fullName: System.PlatformNotSupportedException\n- uid: System.IO.IOException\n  parent: System.IO\n  isExternal: false\n  name: IOException\n  nameWithType: IOException\n  fullName: System.IO.IOException\n- uid: System.NotSupportedException\n  parent: System\n  isExternal: false\n  name: NotSupportedException\n  nameWithType: NotSupportedException\n  fullName: System.NotSupportedException\n- uid: System.Net.Security.SslStream.#ctor(System.IO.Stream)\n  parent: System.Net.Security.SslStream\n  isExternal: false\n  name: SslStream(Stream)\n  nameWithType: SslStream.SslStream(Stream)\n  fullName: SslStream.SslStream(Stream)\n- uid: System.IO.Stream\n  parent: System.IO\n  isExternal: false\n  name: Stream\n  nameWithType: Stream\n  fullName: System.IO.Stream\n- uid: System.Net.Security.SslStream.#ctor(System.IO.Stream,System.Boolean)\n  parent: System.Net.Security.SslStream\n  isExternal: false\n  name: SslStream(Stream, Boolean)\n  nameWithType: SslStream.SslStream(Stream, Boolean)\n  fullName: SslStream.SslStream(Stream, Boolean)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Net.Security.SslStream.#ctor(System.IO.Stream,System.Boolean,System.Net.Security.RemoteCertificateValidationCallback)\n  parent: System.Net.Security.SslStream\n  isExternal: false\n  name: SslStream(Stream, Boolean, RemoteCertificateValidationCallback)\n  nameWithType: SslStream.SslStream(Stream, Boolean, RemoteCertificateValidationCallback)\n  fullName: SslStream.SslStream(Stream, Boolean, RemoteCertificateValidationCallback)\n- uid: System.Net.Security.RemoteCertificateValidationCallback\n  parent: System.Net.Security\n  isExternal: false\n  name: RemoteCertificateValidationCallback\n  nameWithType: RemoteCertificateValidationCallback\n  fullName: System.Net.Security.RemoteCertificateValidationCallback\n- uid: System.Net.Security.SslStream.#ctor(System.IO.Stream,System.Boolean,System.Net.Security.RemoteCertificateValidationCallback,System.Net.Security.LocalCertificateSelectionCallback)\n  parent: System.Net.Security.SslStream\n  isExternal: false\n  name: SslStream(Stream, Boolean, RemoteCertificateValidationCallback, LocalCertificateSelectionCallback)\n  nameWithType: SslStream.SslStream(Stream, Boolean, RemoteCertificateValidationCallback, LocalCertificateSelectionCallback)\n  fullName: SslStream.SslStream(Stream, Boolean, RemoteCertificateValidationCallback, LocalCertificateSelectionCallback)\n- uid: System.Net.Security.LocalCertificateSelectionCallback\n  parent: System.Net.Security\n  isExternal: false\n  name: LocalCertificateSelectionCallback\n  nameWithType: LocalCertificateSelectionCallback\n  fullName: System.Net.Security.LocalCertificateSelectionCallback\n- uid: System.Net.Security.SslStream.#ctor(System.IO.Stream,System.Boolean,System.Net.Security.RemoteCertificateValidationCallback,System.Net.Security.LocalCertificateSelectionCallback,System.Net.Security.EncryptionPolicy)\n  parent: System.Net.Security.SslStream\n  isExternal: false\n  name: SslStream(Stream, Boolean, RemoteCertificateValidationCallback, LocalCertificateSelectionCallback, EncryptionPolicy)\n  nameWithType: SslStream.SslStream(Stream, Boolean, RemoteCertificateValidationCallback, LocalCertificateSelectionCallback, EncryptionPolicy)\n  fullName: SslStream.SslStream(Stream, Boolean, RemoteCertificateValidationCallback, LocalCertificateSelectionCallback, EncryptionPolicy)\n- uid: System.Net.Security.EncryptionPolicy\n  parent: System.Net.Security\n  isExternal: false\n  name: EncryptionPolicy\n  nameWithType: EncryptionPolicy\n  fullName: System.Net.Security.EncryptionPolicy\n- uid: System.Net.Security.SslStream.AuthenticateAsClient(System.String)\n  parent: System.Net.Security.SslStream\n  isExternal: false\n  name: AuthenticateAsClient(String)\n  nameWithType: SslStream.AuthenticateAsClient(String)\n  fullName: SslStream.AuthenticateAsClient(String)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Net.Security.SslStream.AuthenticateAsClient(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Boolean)\n  parent: System.Net.Security.SslStream\n  isExternal: false\n  name: AuthenticateAsClient(String, X509CertificateCollection, Boolean)\n  nameWithType: SslStream.AuthenticateAsClient(String, X509CertificateCollection, Boolean)\n  fullName: SslStream.AuthenticateAsClient(String, X509CertificateCollection, Boolean)\n- uid: System.Security.Cryptography.X509Certificates.X509CertificateCollection\n  parent: System.Security.Cryptography.X509Certificates\n  isExternal: false\n  name: X509CertificateCollection\n  nameWithType: X509CertificateCollection\n  fullName: System.Security.Cryptography.X509Certificates.X509CertificateCollection\n- uid: System.Net.Security.SslStream.AuthenticateAsClient(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Security.Authentication.SslProtocols,System.Boolean)\n  parent: System.Net.Security.SslStream\n  isExternal: false\n  name: AuthenticateAsClient(String, X509CertificateCollection, SslProtocols, Boolean)\n  nameWithType: SslStream.AuthenticateAsClient(String, X509CertificateCollection, SslProtocols, Boolean)\n  fullName: SslStream.AuthenticateAsClient(String, X509CertificateCollection, SslProtocols, Boolean)\n- uid: System.Security.Authentication.SslProtocols\n  parent: System.Security.Authentication\n  isExternal: false\n  name: SslProtocols\n  nameWithType: SslProtocols\n  fullName: System.Security.Authentication.SslProtocols\n- uid: System.Net.Security.SslStream.AuthenticateAsClientAsync(System.String)\n  parent: System.Net.Security.SslStream\n  isExternal: false\n  name: AuthenticateAsClientAsync(String)\n  nameWithType: SslStream.AuthenticateAsClientAsync(String)\n  fullName: SslStream.AuthenticateAsClientAsync(String)\n- uid: System.Threading.Tasks.Task\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: Task\n  nameWithType: Task\n  fullName: System.Threading.Tasks.Task\n- uid: System.Net.Security.SslStream.AuthenticateAsClientAsync(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Boolean)\n  parent: System.Net.Security.SslStream\n  isExternal: false\n  name: AuthenticateAsClientAsync(String, X509CertificateCollection, Boolean)\n  nameWithType: SslStream.AuthenticateAsClientAsync(String, X509CertificateCollection, Boolean)\n  fullName: SslStream.AuthenticateAsClientAsync(String, X509CertificateCollection, Boolean)\n- uid: System.Net.Security.SslStream.AuthenticateAsClientAsync(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Security.Authentication.SslProtocols,System.Boolean)\n  parent: System.Net.Security.SslStream\n  isExternal: false\n  name: AuthenticateAsClientAsync(String, X509CertificateCollection, SslProtocols, Boolean)\n  nameWithType: SslStream.AuthenticateAsClientAsync(String, X509CertificateCollection, SslProtocols, Boolean)\n  fullName: SslStream.AuthenticateAsClientAsync(String, X509CertificateCollection, SslProtocols, Boolean)\n- uid: System.Net.Security.SslStream.AuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate)\n  parent: System.Net.Security.SslStream\n  isExternal: false\n  name: AuthenticateAsServer(X509Certificate)\n  nameWithType: SslStream.AuthenticateAsServer(X509Certificate)\n  fullName: SslStream.AuthenticateAsServer(X509Certificate)\n- uid: System.Security.Cryptography.X509Certificates.X509Certificate\n  parent: System.Security.Cryptography.X509Certificates\n  isExternal: false\n  name: X509Certificate\n  nameWithType: X509Certificate\n  fullName: System.Security.Cryptography.X509Certificates.X509Certificate\n- uid: System.Net.Security.SslStream.AuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Boolean)\n  parent: System.Net.Security.SslStream\n  isExternal: false\n  name: AuthenticateAsServer(X509Certificate, Boolean, Boolean)\n  nameWithType: SslStream.AuthenticateAsServer(X509Certificate, Boolean, Boolean)\n  fullName: SslStream.AuthenticateAsServer(X509Certificate, Boolean, Boolean)\n- uid: System.Net.Security.SslStream.AuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Security.Authentication.SslProtocols,System.Boolean)\n  parent: System.Net.Security.SslStream\n  isExternal: false\n  name: AuthenticateAsServer(X509Certificate, Boolean, SslProtocols, Boolean)\n  nameWithType: SslStream.AuthenticateAsServer(X509Certificate, Boolean, SslProtocols, Boolean)\n  fullName: SslStream.AuthenticateAsServer(X509Certificate, Boolean, SslProtocols, Boolean)\n- uid: System.Net.Security.SslStream.AuthenticateAsServerAsync(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Security.Authentication.SslProtocols,System.Boolean)\n  parent: System.Net.Security.SslStream\n  isExternal: false\n  name: AuthenticateAsServerAsync(X509Certificate, Boolean, SslProtocols, Boolean)\n  nameWithType: SslStream.AuthenticateAsServerAsync(X509Certificate, Boolean, SslProtocols, Boolean)\n  fullName: SslStream.AuthenticateAsServerAsync(X509Certificate, Boolean, SslProtocols, Boolean)\n- uid: System.Net.Security.SslStream.AuthenticateAsServerAsync(System.Security.Cryptography.X509Certificates.X509Certificate)\n  parent: System.Net.Security.SslStream\n  isExternal: false\n  name: AuthenticateAsServerAsync(X509Certificate)\n  nameWithType: SslStream.AuthenticateAsServerAsync(X509Certificate)\n  fullName: SslStream.AuthenticateAsServerAsync(X509Certificate)\n- uid: System.Net.Security.SslStream.AuthenticateAsServerAsync(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Boolean)\n  parent: System.Net.Security.SslStream\n  isExternal: false\n  name: AuthenticateAsServerAsync(X509Certificate, Boolean, Boolean)\n  nameWithType: SslStream.AuthenticateAsServerAsync(X509Certificate, Boolean, Boolean)\n  fullName: SslStream.AuthenticateAsServerAsync(X509Certificate, Boolean, Boolean)\n- uid: System.Net.Security.SslStream.BeginAuthenticateAsClient(System.String,System.AsyncCallback,System.Object)\n  parent: System.Net.Security.SslStream\n  isExternal: false\n  name: BeginAuthenticateAsClient(String, AsyncCallback, Object)\n  nameWithType: SslStream.BeginAuthenticateAsClient(String, AsyncCallback, Object)\n  fullName: SslStream.BeginAuthenticateAsClient(String, AsyncCallback, Object)\n- uid: System.IAsyncResult\n  parent: System\n  isExternal: false\n  name: IAsyncResult\n  nameWithType: IAsyncResult\n  fullName: System.IAsyncResult\n- uid: System.AsyncCallback\n  parent: System\n  isExternal: false\n  name: AsyncCallback\n  nameWithType: AsyncCallback\n  fullName: System.AsyncCallback\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Net.Security.SslStream.BeginAuthenticateAsClient(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Boolean,System.AsyncCallback,System.Object)\n  parent: System.Net.Security.SslStream\n  isExternal: false\n  name: BeginAuthenticateAsClient(String, X509CertificateCollection, Boolean, AsyncCallback, Object)\n  nameWithType: SslStream.BeginAuthenticateAsClient(String, X509CertificateCollection, Boolean, AsyncCallback, Object)\n  fullName: SslStream.BeginAuthenticateAsClient(String, X509CertificateCollection, Boolean, AsyncCallback, Object)\n- uid: System.Net.Security.SslStream.BeginAuthenticateAsClient(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Security.Authentication.SslProtocols,System.Boolean,System.AsyncCallback,System.Object)\n  parent: System.Net.Security.SslStream\n  isExternal: false\n  name: BeginAuthenticateAsClient(String, X509CertificateCollection, SslProtocols, Boolean, AsyncCallback, Object)\n  nameWithType: SslStream.BeginAuthenticateAsClient(String, X509CertificateCollection, SslProtocols, Boolean, AsyncCallback, Object)\n  fullName: SslStream.BeginAuthenticateAsClient(String, X509CertificateCollection, SslProtocols, Boolean, AsyncCallback, Object)\n- uid: System.Net.Security.SslStream.BeginAuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.AsyncCallback,System.Object)\n  parent: System.Net.Security.SslStream\n  isExternal: false\n  name: BeginAuthenticateAsServer(X509Certificate, AsyncCallback, Object)\n  nameWithType: SslStream.BeginAuthenticateAsServer(X509Certificate, AsyncCallback, Object)\n  fullName: SslStream.BeginAuthenticateAsServer(X509Certificate, AsyncCallback, Object)\n- uid: System.Net.Security.SslStream.BeginAuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Boolean,System.AsyncCallback,System.Object)\n  parent: System.Net.Security.SslStream\n  isExternal: false\n  name: BeginAuthenticateAsServer(X509Certificate, Boolean, Boolean, AsyncCallback, Object)\n  nameWithType: SslStream.BeginAuthenticateAsServer(X509Certificate, Boolean, Boolean, AsyncCallback, Object)\n  fullName: SslStream.BeginAuthenticateAsServer(X509Certificate, Boolean, Boolean, AsyncCallback, Object)\n- uid: System.Net.Security.SslStream.BeginAuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Security.Authentication.SslProtocols,System.Boolean,System.AsyncCallback,System.Object)\n  parent: System.Net.Security.SslStream\n  isExternal: false\n  name: BeginAuthenticateAsServer(X509Certificate, Boolean, SslProtocols, Boolean, AsyncCallback, Object)\n  nameWithType: SslStream.BeginAuthenticateAsServer(X509Certificate, Boolean, SslProtocols, Boolean, AsyncCallback, Object)\n  fullName: SslStream.BeginAuthenticateAsServer(X509Certificate, Boolean, SslProtocols, Boolean, AsyncCallback, Object)\n- uid: System.Net.Security.SslStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)\n  parent: System.Net.Security.SslStream\n  isExternal: false\n  name: BeginRead(Byte[], Int32, Int32, AsyncCallback, Object)\n  nameWithType: SslStream.BeginRead(Byte[], Int32, Int32, AsyncCallback, Object)\n  fullName: SslStream.BeginRead(Byte[], Int32, Int32, AsyncCallback, Object)\n- uid: System.Byte\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte\n- uid: System.Byte[]\n  parent: System\n  isExternal: false\n  name: Byte[]\n  nameWithType: Byte[]\n  fullName: System.Byte[]\n  spec.csharp:\n  - uid: System.Byte\n    name: Byte\n    nameWithType: Byte\n    fullName: System.Byte\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Net.Security.SslStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)\n  parent: System.Net.Security.SslStream\n  isExternal: false\n  name: BeginWrite(Byte[], Int32, Int32, AsyncCallback, Object)\n  nameWithType: SslStream.BeginWrite(Byte[], Int32, Int32, AsyncCallback, Object)\n  fullName: SslStream.BeginWrite(Byte[], Int32, Int32, AsyncCallback, Object)\n- uid: System.Net.Security.SslStream.CanRead\n  parent: System.Net.Security.SslStream\n  isExternal: false\n  name: CanRead\n  nameWithType: SslStream.CanRead\n  fullName: SslStream.CanRead\n- uid: System.Net.Security.SslStream.CanSeek\n  parent: System.Net.Security.SslStream\n  isExternal: false\n  name: CanSeek\n  nameWithType: SslStream.CanSeek\n  fullName: SslStream.CanSeek\n- uid: System.Net.Security.SslStream.CanTimeout\n  parent: System.Net.Security.SslStream\n  isExternal: false\n  name: CanTimeout\n  nameWithType: SslStream.CanTimeout\n  fullName: SslStream.CanTimeout\n- uid: System.Net.Security.SslStream.CanWrite\n  parent: System.Net.Security.SslStream\n  isExternal: false\n  name: CanWrite\n  nameWithType: SslStream.CanWrite\n  fullName: SslStream.CanWrite\n- uid: System.Net.Security.SslStream.CheckCertRevocationStatus\n  parent: System.Net.Security.SslStream\n  isExternal: false\n  name: CheckCertRevocationStatus\n  nameWithType: SslStream.CheckCertRevocationStatus\n  fullName: SslStream.CheckCertRevocationStatus\n- uid: System.Net.Security.SslStream.CipherAlgorithm\n  parent: System.Net.Security.SslStream\n  isExternal: false\n  name: CipherAlgorithm\n  nameWithType: SslStream.CipherAlgorithm\n  fullName: SslStream.CipherAlgorithm\n- uid: System.Security.Authentication.CipherAlgorithmType\n  parent: System.Security.Authentication\n  isExternal: false\n  name: CipherAlgorithmType\n  nameWithType: CipherAlgorithmType\n  fullName: System.Security.Authentication.CipherAlgorithmType\n- uid: System.Net.Security.SslStream.CipherStrength\n  parent: System.Net.Security.SslStream\n  isExternal: false\n  name: CipherStrength\n  nameWithType: SslStream.CipherStrength\n  fullName: SslStream.CipherStrength\n- uid: System.Net.Security.SslStream.Dispose(System.Boolean)\n  parent: System.Net.Security.SslStream\n  isExternal: false\n  name: Dispose(Boolean)\n  nameWithType: SslStream.Dispose(Boolean)\n  fullName: SslStream.Dispose(Boolean)\n- uid: System.Net.Security.SslStream.EndAuthenticateAsClient(System.IAsyncResult)\n  parent: System.Net.Security.SslStream\n  isExternal: false\n  name: EndAuthenticateAsClient(IAsyncResult)\n  nameWithType: SslStream.EndAuthenticateAsClient(IAsyncResult)\n  fullName: SslStream.EndAuthenticateAsClient(IAsyncResult)\n- uid: System.Net.Security.SslStream.EndAuthenticateAsServer(System.IAsyncResult)\n  parent: System.Net.Security.SslStream\n  isExternal: false\n  name: EndAuthenticateAsServer(IAsyncResult)\n  nameWithType: SslStream.EndAuthenticateAsServer(IAsyncResult)\n  fullName: SslStream.EndAuthenticateAsServer(IAsyncResult)\n- uid: System.Net.Security.SslStream.EndRead(System.IAsyncResult)\n  parent: System.Net.Security.SslStream\n  isExternal: false\n  name: EndRead(IAsyncResult)\n  nameWithType: SslStream.EndRead(IAsyncResult)\n  fullName: SslStream.EndRead(IAsyncResult)\n- uid: System.Net.Security.SslStream.EndWrite(System.IAsyncResult)\n  parent: System.Net.Security.SslStream\n  isExternal: false\n  name: EndWrite(IAsyncResult)\n  nameWithType: SslStream.EndWrite(IAsyncResult)\n  fullName: SslStream.EndWrite(IAsyncResult)\n- uid: System.Net.Security.SslStream.Flush\n  parent: System.Net.Security.SslStream\n  isExternal: false\n  name: Flush()\n  nameWithType: SslStream.Flush()\n  fullName: SslStream.Flush()\n- uid: System.Net.Security.SslStream.FlushAsync(System.Threading.CancellationToken)\n  parent: System.Net.Security.SslStream\n  isExternal: false\n  name: FlushAsync(CancellationToken)\n  nameWithType: SslStream.FlushAsync(CancellationToken)\n  fullName: SslStream.FlushAsync(CancellationToken)\n- uid: System.Threading.CancellationToken\n  parent: System.Threading\n  isExternal: false\n  name: CancellationToken\n  nameWithType: CancellationToken\n  fullName: System.Threading.CancellationToken\n- uid: System.Net.Security.SslStream.HashAlgorithm\n  parent: System.Net.Security.SslStream\n  isExternal: false\n  name: HashAlgorithm\n  nameWithType: SslStream.HashAlgorithm\n  fullName: SslStream.HashAlgorithm\n- uid: System.Security.Authentication.HashAlgorithmType\n  parent: System.Security.Authentication\n  isExternal: false\n  name: HashAlgorithmType\n  nameWithType: HashAlgorithmType\n  fullName: System.Security.Authentication.HashAlgorithmType\n- uid: System.Net.Security.SslStream.HashStrength\n  parent: System.Net.Security.SslStream\n  isExternal: false\n  name: HashStrength\n  nameWithType: SslStream.HashStrength\n  fullName: SslStream.HashStrength\n- uid: System.Net.Security.SslStream.IsAuthenticated\n  parent: System.Net.Security.SslStream\n  isExternal: false\n  name: IsAuthenticated\n  nameWithType: SslStream.IsAuthenticated\n  fullName: SslStream.IsAuthenticated\n- uid: System.Net.Security.SslStream.IsEncrypted\n  parent: System.Net.Security.SslStream\n  isExternal: false\n  name: IsEncrypted\n  nameWithType: SslStream.IsEncrypted\n  fullName: SslStream.IsEncrypted\n- uid: System.Net.Security.SslStream.IsMutuallyAuthenticated\n  parent: System.Net.Security.SslStream\n  isExternal: false\n  name: IsMutuallyAuthenticated\n  nameWithType: SslStream.IsMutuallyAuthenticated\n  fullName: SslStream.IsMutuallyAuthenticated\n- uid: System.Net.Security.SslStream.IsServer\n  parent: System.Net.Security.SslStream\n  isExternal: false\n  name: IsServer\n  nameWithType: SslStream.IsServer\n  fullName: SslStream.IsServer\n- uid: System.Net.Security.SslStream.IsSigned\n  parent: System.Net.Security.SslStream\n  isExternal: false\n  name: IsSigned\n  nameWithType: SslStream.IsSigned\n  fullName: SslStream.IsSigned\n- uid: System.Net.Security.SslStream.KeyExchangeAlgorithm\n  parent: System.Net.Security.SslStream\n  isExternal: false\n  name: KeyExchangeAlgorithm\n  nameWithType: SslStream.KeyExchangeAlgorithm\n  fullName: SslStream.KeyExchangeAlgorithm\n- uid: System.Security.Authentication.ExchangeAlgorithmType\n  parent: System.Security.Authentication\n  isExternal: false\n  name: ExchangeAlgorithmType\n  nameWithType: ExchangeAlgorithmType\n  fullName: System.Security.Authentication.ExchangeAlgorithmType\n- uid: System.Net.Security.SslStream.KeyExchangeStrength\n  parent: System.Net.Security.SslStream\n  isExternal: false\n  name: KeyExchangeStrength\n  nameWithType: SslStream.KeyExchangeStrength\n  fullName: SslStream.KeyExchangeStrength\n- uid: System.Net.Security.SslStream.Length\n  parent: System.Net.Security.SslStream\n  isExternal: false\n  name: Length\n  nameWithType: SslStream.Length\n  fullName: SslStream.Length\n- uid: System.Int64\n  parent: System\n  isExternal: false\n  name: Int64\n  nameWithType: Int64\n  fullName: System.Int64\n- uid: System.Net.Security.SslStream.LocalCertificate\n  parent: System.Net.Security.SslStream\n  isExternal: false\n  name: LocalCertificate\n  nameWithType: SslStream.LocalCertificate\n  fullName: SslStream.LocalCertificate\n- uid: System.Net.Security.SslStream.Position\n  parent: System.Net.Security.SslStream\n  isExternal: false\n  name: Position\n  nameWithType: SslStream.Position\n  fullName: SslStream.Position\n- uid: System.Net.Security.SslStream.Read(System.Byte[],System.Int32,System.Int32)\n  parent: System.Net.Security.SslStream\n  isExternal: false\n  name: Read(Byte[], Int32, Int32)\n  nameWithType: SslStream.Read(Byte[], Int32, Int32)\n  fullName: SslStream.Read(Byte[], Int32, Int32)\n- uid: System.Net.Security.SslStream.ReadTimeout\n  parent: System.Net.Security.SslStream\n  isExternal: false\n  name: ReadTimeout\n  nameWithType: SslStream.ReadTimeout\n  fullName: SslStream.ReadTimeout\n- uid: System.Net.Security.SslStream.RemoteCertificate\n  parent: System.Net.Security.SslStream\n  isExternal: false\n  name: RemoteCertificate\n  nameWithType: SslStream.RemoteCertificate\n  fullName: SslStream.RemoteCertificate\n- uid: System.Net.Security.SslStream.Seek(System.Int64,System.IO.SeekOrigin)\n  parent: System.Net.Security.SslStream\n  isExternal: false\n  name: Seek(Int64, SeekOrigin)\n  nameWithType: SslStream.Seek(Int64, SeekOrigin)\n  fullName: SslStream.Seek(Int64, SeekOrigin)\n- uid: System.IO.SeekOrigin\n  parent: System.IO\n  isExternal: false\n  name: SeekOrigin\n  nameWithType: SeekOrigin\n  fullName: System.IO.SeekOrigin\n- uid: System.Net.Security.SslStream.SetLength(System.Int64)\n  parent: System.Net.Security.SslStream\n  isExternal: false\n  name: SetLength(Int64)\n  nameWithType: SslStream.SetLength(Int64)\n  fullName: SslStream.SetLength(Int64)\n- uid: System.Net.Security.SslStream.ShutdownAsync\n  parent: System.Net.Security.SslStream\n  isExternal: false\n  name: ShutdownAsync()\n  nameWithType: SslStream.ShutdownAsync()\n  fullName: SslStream.ShutdownAsync()\n- uid: System.Net.Security.SslStream.SslProtocol\n  parent: System.Net.Security.SslStream\n  isExternal: false\n  name: SslProtocol\n  nameWithType: SslStream.SslProtocol\n  fullName: SslStream.SslProtocol\n- uid: System.Net.Security.SslStream.TransportContext\n  parent: System.Net.Security.SslStream\n  isExternal: false\n  name: TransportContext\n  nameWithType: SslStream.TransportContext\n  fullName: SslStream.TransportContext\n- uid: System.Net.TransportContext\n  parent: System.Net\n  isExternal: false\n  name: TransportContext\n  nameWithType: TransportContext\n  fullName: System.Net.TransportContext\n- uid: System.Net.Security.SslStream.Write(System.Byte[])\n  parent: System.Net.Security.SslStream\n  isExternal: false\n  name: Write(Byte[])\n  nameWithType: SslStream.Write(Byte[])\n  fullName: SslStream.Write(Byte[])\n- uid: System.Net.Security.SslStream.Write(System.Byte[],System.Int32,System.Int32)\n  parent: System.Net.Security.SslStream\n  isExternal: false\n  name: Write(Byte[], Int32, Int32)\n  nameWithType: SslStream.Write(Byte[], Int32, Int32)\n  fullName: SslStream.Write(Byte[], Int32, Int32)\n- uid: System.Net.Security.SslStream.WriteTimeout\n  parent: System.Net.Security.SslStream\n  isExternal: false\n  name: WriteTimeout\n  nameWithType: SslStream.WriteTimeout\n  fullName: SslStream.WriteTimeout\n- uid: System.Net.Security.SslStream.#ctor*\n  parent: System.Net.Security.SslStream\n  isExternal: false\n  name: SslStream\n  nameWithType: SslStream.SslStream\n  fullName: SslStream.SslStream\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Security/SslStream.xml\n- uid: System.Net.Security.SslStream.BeginAuthenticateAsClient*\n  parent: System.Net.Security.SslStream\n  isExternal: false\n  name: BeginAuthenticateAsClient\n  nameWithType: SslStream.BeginAuthenticateAsClient\n  fullName: SslStream.BeginAuthenticateAsClient\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Security/SslStream.xml\n- uid: System.Net.Security.SslStream.BeginAuthenticateAsServer*\n  parent: System.Net.Security.SslStream\n  isExternal: false\n  name: BeginAuthenticateAsServer\n  nameWithType: SslStream.BeginAuthenticateAsServer\n  fullName: SslStream.BeginAuthenticateAsServer\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Security/SslStream.xml\n- uid: System.Net.Security.SslStream.AuthenticateAsClient*\n  parent: System.Net.Security.SslStream\n  isExternal: false\n  name: AuthenticateAsClient\n  nameWithType: SslStream.AuthenticateAsClient\n  fullName: SslStream.AuthenticateAsClient\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Security/SslStream.xml\n- uid: System.Net.Security.SslStream.AuthenticateAsClientAsync*\n  parent: System.Net.Security.SslStream\n  isExternal: false\n  name: AuthenticateAsClientAsync\n  nameWithType: SslStream.AuthenticateAsClientAsync\n  fullName: SslStream.AuthenticateAsClientAsync\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Security/SslStream.xml\n- uid: System.Net.Security.SslStream.AuthenticateAsServer*\n  parent: System.Net.Security.SslStream\n  isExternal: false\n  name: AuthenticateAsServer\n  nameWithType: SslStream.AuthenticateAsServer\n  fullName: SslStream.AuthenticateAsServer\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Security/SslStream.xml\n- uid: System.Net.Security.SslStream.AuthenticateAsServerAsync*\n  parent: System.Net.Security.SslStream\n  isExternal: false\n  name: AuthenticateAsServerAsync\n  nameWithType: SslStream.AuthenticateAsServerAsync\n  fullName: SslStream.AuthenticateAsServerAsync\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Security/SslStream.xml\n- uid: System.Net.Security.SslStream.BeginRead*\n  parent: System.Net.Security.SslStream\n  isExternal: false\n  name: BeginRead\n  nameWithType: SslStream.BeginRead\n  fullName: SslStream.BeginRead\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Security/SslStream.xml\n- uid: System.Net.Security.SslStream.BeginWrite*\n  parent: System.Net.Security.SslStream\n  isExternal: false\n  name: BeginWrite\n  nameWithType: SslStream.BeginWrite\n  fullName: SslStream.BeginWrite\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Security/SslStream.xml\n- uid: System.Net.Security.SslStream.CanRead*\n  parent: System.Net.Security.SslStream\n  isExternal: false\n  name: CanRead\n  nameWithType: SslStream.CanRead\n  fullName: SslStream.CanRead\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Security/SslStream.xml\n- uid: System.Net.Security.SslStream.CanSeek*\n  parent: System.Net.Security.SslStream\n  isExternal: false\n  name: CanSeek\n  nameWithType: SslStream.CanSeek\n  fullName: SslStream.CanSeek\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Security/SslStream.xml\n- uid: System.Net.Security.SslStream.CanTimeout*\n  parent: System.Net.Security.SslStream\n  isExternal: false\n  name: CanTimeout\n  nameWithType: SslStream.CanTimeout\n  fullName: SslStream.CanTimeout\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Security/SslStream.xml\n- uid: System.Net.Security.SslStream.CanWrite*\n  parent: System.Net.Security.SslStream\n  isExternal: false\n  name: CanWrite\n  nameWithType: SslStream.CanWrite\n  fullName: SslStream.CanWrite\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Security/SslStream.xml\n- uid: System.Net.Security.SslStream.CheckCertRevocationStatus*\n  parent: System.Net.Security.SslStream\n  isExternal: false\n  name: CheckCertRevocationStatus\n  nameWithType: SslStream.CheckCertRevocationStatus\n  fullName: SslStream.CheckCertRevocationStatus\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Security/SslStream.xml\n- uid: System.Net.Security.SslStream.CipherAlgorithm*\n  parent: System.Net.Security.SslStream\n  isExternal: false\n  name: CipherAlgorithm\n  nameWithType: SslStream.CipherAlgorithm\n  fullName: SslStream.CipherAlgorithm\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Security/SslStream.xml\n- uid: System.Net.Security.SslStream.CipherStrength*\n  parent: System.Net.Security.SslStream\n  isExternal: false\n  name: CipherStrength\n  nameWithType: SslStream.CipherStrength\n  fullName: SslStream.CipherStrength\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Security/SslStream.xml\n- uid: System.Net.Security.SslStream.Dispose*\n  parent: System.Net.Security.SslStream\n  isExternal: false\n  name: Dispose\n  nameWithType: SslStream.Dispose\n  fullName: SslStream.Dispose\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Security/SslStream.xml\n- uid: System.Net.Security.SslStream.EndAuthenticateAsClient*\n  parent: System.Net.Security.SslStream\n  isExternal: false\n  name: EndAuthenticateAsClient\n  nameWithType: SslStream.EndAuthenticateAsClient\n  fullName: SslStream.EndAuthenticateAsClient\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Security/SslStream.xml\n- uid: System.Net.Security.SslStream.EndAuthenticateAsServer*\n  parent: System.Net.Security.SslStream\n  isExternal: false\n  name: EndAuthenticateAsServer\n  nameWithType: SslStream.EndAuthenticateAsServer\n  fullName: SslStream.EndAuthenticateAsServer\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Security/SslStream.xml\n- uid: System.Net.Security.SslStream.EndRead*\n  parent: System.Net.Security.SslStream\n  isExternal: false\n  name: EndRead\n  nameWithType: SslStream.EndRead\n  fullName: SslStream.EndRead\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Security/SslStream.xml\n- uid: System.Net.Security.SslStream.EndWrite*\n  parent: System.Net.Security.SslStream\n  isExternal: false\n  name: EndWrite\n  nameWithType: SslStream.EndWrite\n  fullName: SslStream.EndWrite\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Security/SslStream.xml\n- uid: System.Net.Security.SslStream.Flush*\n  parent: System.Net.Security.SslStream\n  isExternal: false\n  name: Flush\n  nameWithType: SslStream.Flush\n  fullName: SslStream.Flush\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Security/SslStream.xml\n- uid: System.Net.Security.SslStream.FlushAsync*\n  parent: System.Net.Security.SslStream\n  isExternal: false\n  name: FlushAsync\n  nameWithType: SslStream.FlushAsync\n  fullName: SslStream.FlushAsync\n  monikers:\n  - netcore-2.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Security/SslStream.xml\n- uid: System.Net.Security.SslStream.HashAlgorithm*\n  parent: System.Net.Security.SslStream\n  isExternal: false\n  name: HashAlgorithm\n  nameWithType: SslStream.HashAlgorithm\n  fullName: SslStream.HashAlgorithm\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Security/SslStream.xml\n- uid: System.Net.Security.SslStream.HashStrength*\n  parent: System.Net.Security.SslStream\n  isExternal: false\n  name: HashStrength\n  nameWithType: SslStream.HashStrength\n  fullName: SslStream.HashStrength\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Security/SslStream.xml\n- uid: System.Net.Security.SslStream.IsAuthenticated*\n  parent: System.Net.Security.SslStream\n  isExternal: false\n  name: IsAuthenticated\n  nameWithType: SslStream.IsAuthenticated\n  fullName: SslStream.IsAuthenticated\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Security/SslStream.xml\n- uid: System.Net.Security.SslStream.IsEncrypted*\n  parent: System.Net.Security.SslStream\n  isExternal: false\n  name: IsEncrypted\n  nameWithType: SslStream.IsEncrypted\n  fullName: SslStream.IsEncrypted\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Security/SslStream.xml\n- uid: System.Net.Security.SslStream.IsMutuallyAuthenticated*\n  parent: System.Net.Security.SslStream\n  isExternal: false\n  name: IsMutuallyAuthenticated\n  nameWithType: SslStream.IsMutuallyAuthenticated\n  fullName: SslStream.IsMutuallyAuthenticated\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Security/SslStream.xml\n- uid: System.Net.Security.SslStream.IsServer*\n  parent: System.Net.Security.SslStream\n  isExternal: false\n  name: IsServer\n  nameWithType: SslStream.IsServer\n  fullName: SslStream.IsServer\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Security/SslStream.xml\n- uid: System.Net.Security.SslStream.IsSigned*\n  parent: System.Net.Security.SslStream\n  isExternal: false\n  name: IsSigned\n  nameWithType: SslStream.IsSigned\n  fullName: SslStream.IsSigned\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Security/SslStream.xml\n- uid: System.Net.Security.SslStream.KeyExchangeAlgorithm*\n  parent: System.Net.Security.SslStream\n  isExternal: false\n  name: KeyExchangeAlgorithm\n  nameWithType: SslStream.KeyExchangeAlgorithm\n  fullName: SslStream.KeyExchangeAlgorithm\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Security/SslStream.xml\n- uid: System.Net.Security.SslStream.KeyExchangeStrength*\n  parent: System.Net.Security.SslStream\n  isExternal: false\n  name: KeyExchangeStrength\n  nameWithType: SslStream.KeyExchangeStrength\n  fullName: SslStream.KeyExchangeStrength\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Security/SslStream.xml\n- uid: System.Net.Security.SslStream.Length*\n  parent: System.Net.Security.SslStream\n  isExternal: false\n  name: Length\n  nameWithType: SslStream.Length\n  fullName: SslStream.Length\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Security/SslStream.xml\n- uid: System.Net.Security.SslStream.LocalCertificate*\n  parent: System.Net.Security.SslStream\n  isExternal: false\n  name: LocalCertificate\n  nameWithType: SslStream.LocalCertificate\n  fullName: SslStream.LocalCertificate\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Security/SslStream.xml\n- uid: System.Net.Security.SslStream.Position*\n  parent: System.Net.Security.SslStream\n  isExternal: false\n  name: Position\n  nameWithType: SslStream.Position\n  fullName: SslStream.Position\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Security/SslStream.xml\n- uid: System.Net.Security.SslStream.Read*\n  parent: System.Net.Security.SslStream\n  isExternal: false\n  name: Read\n  nameWithType: SslStream.Read\n  fullName: SslStream.Read\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Security/SslStream.xml\n- uid: System.Net.Security.SslStream.ReadTimeout*\n  parent: System.Net.Security.SslStream\n  isExternal: false\n  name: ReadTimeout\n  nameWithType: SslStream.ReadTimeout\n  fullName: SslStream.ReadTimeout\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Security/SslStream.xml\n- uid: System.Net.Security.SslStream.RemoteCertificate*\n  parent: System.Net.Security.SslStream\n  isExternal: false\n  name: RemoteCertificate\n  nameWithType: SslStream.RemoteCertificate\n  fullName: SslStream.RemoteCertificate\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Security/SslStream.xml\n- uid: System.Net.Security.SslStream.Seek*\n  parent: System.Net.Security.SslStream\n  isExternal: false\n  name: Seek\n  nameWithType: SslStream.Seek\n  fullName: SslStream.Seek\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Security/SslStream.xml\n- uid: System.Net.Security.SslStream.SetLength*\n  parent: System.Net.Security.SslStream\n  isExternal: false\n  name: SetLength\n  nameWithType: SslStream.SetLength\n  fullName: SslStream.SetLength\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Security/SslStream.xml\n- uid: System.Net.Security.SslStream.ShutdownAsync*\n  parent: System.Net.Security.SslStream\n  isExternal: false\n  name: ShutdownAsync\n  nameWithType: SslStream.ShutdownAsync\n  fullName: SslStream.ShutdownAsync\n  monikers:\n  - netcore-2.0\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Security/SslStream.xml\n- uid: System.Net.Security.SslStream.SslProtocol*\n  parent: System.Net.Security.SslStream\n  isExternal: false\n  name: SslProtocol\n  nameWithType: SslStream.SslProtocol\n  fullName: SslStream.SslProtocol\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Security/SslStream.xml\n- uid: System.Net.Security.SslStream.TransportContext*\n  parent: System.Net.Security.SslStream\n  isExternal: false\n  name: TransportContext\n  nameWithType: SslStream.TransportContext\n  fullName: SslStream.TransportContext\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Security/SslStream.xml\n- uid: System.Net.Security.SslStream.Write*\n  parent: System.Net.Security.SslStream\n  isExternal: false\n  name: Write\n  nameWithType: SslStream.Write\n  fullName: SslStream.Write\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Security/SslStream.xml\n- uid: System.Net.Security.SslStream.WriteTimeout*\n  parent: System.Net.Security.SslStream\n  isExternal: false\n  name: WriteTimeout\n  nameWithType: SslStream.WriteTimeout\n  fullName: SslStream.WriteTimeout\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Security/SslStream.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.IO.Stream.Close\n  parent: System.IO.Stream\n  isExternal: false\n  name: Close()\n  nameWithType: Stream.Close()\n  fullName: Stream.Close()\n- uid: System.IO.Stream.CopyTo(System.IO.Stream,System.Int32)\n  parent: System.IO.Stream\n  isExternal: false\n  name: CopyTo(Stream, Int32)\n  nameWithType: Stream.CopyTo(Stream, Int32)\n  fullName: Stream.CopyTo(Stream, Int32)\n- uid: System.IO.Stream.CopyTo(System.IO.Stream)\n  parent: System.IO.Stream\n  isExternal: false\n  name: CopyTo(Stream)\n  nameWithType: Stream.CopyTo(Stream)\n  fullName: Stream.CopyTo(Stream)\n- uid: System.IO.Stream.CopyToAsync(System.IO.Stream)\n  parent: System.IO.Stream\n  isExternal: false\n  name: CopyToAsync(Stream)\n  nameWithType: Stream.CopyToAsync(Stream)\n  fullName: Stream.CopyToAsync(Stream)\n- uid: System.IO.Stream.CopyToAsync(System.IO.Stream,System.Int32)\n  parent: System.IO.Stream\n  isExternal: false\n  name: CopyToAsync(Stream, Int32)\n  nameWithType: Stream.CopyToAsync(Stream, Int32)\n  fullName: Stream.CopyToAsync(Stream, Int32)\n- uid: System.IO.Stream.CopyToAsync(System.IO.Stream,System.Int32,System.Threading.CancellationToken)\n  parent: System.IO.Stream\n  isExternal: false\n  name: CopyToAsync(Stream, Int32, CancellationToken)\n  nameWithType: Stream.CopyToAsync(Stream, Int32, CancellationToken)\n  fullName: Stream.CopyToAsync(Stream, Int32, CancellationToken)\n- uid: System.IO.Stream.CreateWaitHandle\n  parent: System.IO.Stream\n  isExternal: false\n  name: CreateWaitHandle()\n  nameWithType: Stream.CreateWaitHandle()\n  fullName: Stream.CreateWaitHandle()\n- uid: System.IO.Stream.Dispose\n  parent: System.IO.Stream\n  isExternal: false\n  name: Dispose()\n  nameWithType: Stream.Dispose()\n  fullName: Stream.Dispose()\n- uid: System.IO.Stream.FlushAsync\n  parent: System.IO.Stream\n  isExternal: false\n  name: FlushAsync()\n  nameWithType: Stream.FlushAsync()\n  fullName: Stream.FlushAsync()\n- uid: System.IO.Stream.Null\n  parent: System.IO.Stream\n  isExternal: false\n  name: \"Null\"\n  nameWithType: Stream.Null\n  fullName: Stream.Null\n- uid: System.IO.Stream.ObjectInvariant\n  parent: System.IO.Stream\n  isExternal: false\n  name: ObjectInvariant()\n  nameWithType: Stream.ObjectInvariant()\n  fullName: Stream.ObjectInvariant()\n- uid: System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32)\n  parent: System.IO.Stream\n  isExternal: false\n  name: ReadAsync(Byte[], Int32, Int32)\n  nameWithType: Stream.ReadAsync(Byte[], Int32, Int32)\n  fullName: Stream.ReadAsync(Byte[], Int32, Int32)\n- uid: System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)\n  parent: System.IO.Stream\n  isExternal: false\n  name: ReadAsync(Byte[], Int32, Int32, CancellationToken)\n  nameWithType: Stream.ReadAsync(Byte[], Int32, Int32, CancellationToken)\n  fullName: Stream.ReadAsync(Byte[], Int32, Int32, CancellationToken)\n- uid: System.IO.Stream.ReadByte\n  parent: System.IO.Stream\n  isExternal: false\n  name: ReadByte()\n  nameWithType: Stream.ReadByte()\n  fullName: Stream.ReadByte()\n- uid: System.IO.Stream.Synchronized(System.IO.Stream)\n  parent: System.IO.Stream\n  isExternal: false\n  name: Synchronized(Stream)\n  nameWithType: Stream.Synchronized(Stream)\n  fullName: Stream.Synchronized(Stream)\n- uid: System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32)\n  parent: System.IO.Stream\n  isExternal: false\n  name: WriteAsync(Byte[], Int32, Int32)\n  nameWithType: Stream.WriteAsync(Byte[], Int32, Int32)\n  fullName: Stream.WriteAsync(Byte[], Int32, Int32)\n- uid: System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32,System.Threading.CancellationToken)\n  parent: System.IO.Stream\n  isExternal: false\n  name: WriteAsync(Byte[], Int32, Int32, CancellationToken)\n  nameWithType: Stream.WriteAsync(Byte[], Int32, Int32, CancellationToken)\n  fullName: Stream.WriteAsync(Byte[], Int32, Int32, CancellationToken)\n- uid: System.IO.Stream.WriteByte(System.Byte)\n  parent: System.IO.Stream\n  isExternal: false\n  name: WriteByte(Byte)\n  nameWithType: Stream.WriteByte(Byte)\n  fullName: Stream.WriteByte(Byte)\n- uid: System.Net.Security.AuthenticatedStream.InnerStream\n  parent: System.Net.Security.AuthenticatedStream\n  isExternal: false\n  name: InnerStream\n  nameWithType: AuthenticatedStream.InnerStream\n  fullName: AuthenticatedStream.InnerStream\n- uid: System.Net.Security.AuthenticatedStream.LeaveInnerStreamOpen\n  parent: System.Net.Security.AuthenticatedStream\n  isExternal: false\n  name: LeaveInnerStreamOpen\n  nameWithType: AuthenticatedStream.LeaveInnerStreamOpen\n  fullName: AuthenticatedStream.LeaveInnerStreamOpen\n"}