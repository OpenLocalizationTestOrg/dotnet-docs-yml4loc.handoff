{"nodes":[{"content":"Provides information about network interfaces that support Internet Protocol version 4 (IPv4).","nodes":[{"pos":[0,94],"content":"Provides information about network interfaces that support Internet Protocol version 4 (IPv4).","nodes":[{"content":"Provides information about network interfaces that support Internet Protocol version 4 (IPv4).","pos":[0,94]}]}],"pos":[1103,1198],"yaml":true},{"content":"This class provides access to configuration and address information for network interfaces that support IPv4. You do not create instances of this class; they are returned by the <xref:System.Net.NetworkInformation.IPInterfaceProperties.GetIPv4Properties%2A> method.  \n  \n For IPV6 properties, see <xref:System.Net.NetworkInformation.IPInterfaceProperties.GetIPv6Properties%2A>.","nodes":[{"pos":[0,265],"content":"This class provides access to configuration and address information for network interfaces that support IPv4. You do not create instances of this class; they are returned by the <xref:System.Net.NetworkInformation.IPInterfaceProperties.GetIPv4Properties%2A> method.","nodes":[{"content":"This class provides access to configuration and address information for network interfaces that support IPv4. You do not create instances of this class; they are returned by the <xref:System.Net.NetworkInformation.IPInterfaceProperties.GetIPv4Properties%2A> method.","pos":[0,265],"nodes":[{"content":"This class provides access to configuration and address information for network interfaces that support IPv4.","pos":[0,109]},{"content":"You do not create instances of this class; they are returned by the <ph id=\"ph1\">&lt;xref:System.Net.NetworkInformation.IPInterfaceProperties.GetIPv4Properties%2A&gt;</ph> method.","pos":[110,265],"source":" You do not create instances of this class; they are returned by the <xref:System.Net.NetworkInformation.IPInterfaceProperties.GetIPv4Properties%2A> method."}]}]},{"pos":[272,377],"content":"For IPV6 properties, see <xref:System.Net.NetworkInformation.IPInterfaceProperties.GetIPv6Properties%2A>.","nodes":[{"content":"For IPV6 properties, see <ph id=\"ph1\">&lt;xref:System.Net.NetworkInformation.IPInterfaceProperties.GetIPv6Properties%2A&gt;</ph>.","pos":[0,105],"source":"For IPV6 properties, see <xref:System.Net.NetworkInformation.IPInterfaceProperties.GetIPv6Properties%2A>."}]}],"pos":[1209,1591],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.Net.NetworkInformation.IPv4InterfaceProperties\"></xref> class.","nodes":[{"pos":[0,115],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Net.NetworkInformation.IPv4InterfaceProperties\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.Net.NetworkInformation.IPv4InterfaceProperties\"></xref> class."}],"pos":[3828,3944],"yaml":true},{"content":"This constructor can be called only by classes that derive from <xref:System.Net.NetworkInformation.IPv4InterfaceProperties>.","nodes":[{"pos":[0,125],"content":"This constructor can be called only by classes that derive from <xref:System.Net.NetworkInformation.IPv4InterfaceProperties>.","nodes":[{"content":"This constructor can be called only by classes that derive from <ph id=\"ph1\">&lt;xref:System.Net.NetworkInformation.IPv4InterfaceProperties&gt;</ph>.","pos":[0,125],"source":"This constructor can be called only by classes that derive from <xref:System.Net.NetworkInformation.IPv4InterfaceProperties>."}]}],"pos":[3955,4081],"yaml":true,"extradata":"MT"},{"content":"Gets the index of the network interface associated with the Internet Protocol version 4 (IPv4) address.","nodes":[{"pos":[0,103],"content":"Gets the index of the network interface associated with the Internet Protocol version 4 (IPv4) address.","nodes":[{"content":"Gets the index of the network interface associated with the Internet Protocol version 4 (IPv4) address.","pos":[0,103]}]}],"pos":[5491,5595],"yaml":true},{"content":"If the value of this property is zero, IPv4 is not supported by this interface.","nodes":[{"pos":[0,79],"content":"If the value of this property is zero, IPv4 is not supported by this interface.","nodes":[{"content":"If the value of this property is zero, IPv4 is not supported by this interface.","pos":[0,79]}]}],"pos":[5606,5686],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.Int32\"></xref> that contains the index of the IPv4 interface.","nodes":[{"pos":[0,83],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Int32\"&gt;&lt;/xref&gt;</ph> that contains the index of the IPv4 interface.","source":"An <xref href=\"System.Int32\"></xref> that contains the index of the IPv4 interface."}],"pos":[6300,6384],"yaml":true},{"content":"Gets a <xref href=\"System.Boolean\"></xref> value that indicates whether this interface has an automatic private IP addressing (APIPA) address.","nodes":[{"pos":[0,142],"content":"Gets a <ph id=\"ph1\">&lt;xref href=\"System.Boolean\"&gt;&lt;/xref&gt;</ph> value that indicates whether this interface has an automatic private IP addressing (APIPA) address.","source":"Gets a <xref href=\"System.Boolean\"></xref> value that indicates whether this interface has an automatic private IP addressing (APIPA) address."}],"pos":[7888,8031],"yaml":true},{"content":"Automatic private IP addressing allows computers that do not have access to a Dynamic Host Configuration Protocol (DHCP) server to be automatically assigned an IP address that does not conflict with public addresses. These addresses are in the range 169.254.0.0 to 169.254.255.255.","nodes":[{"pos":[0,281],"content":"Automatic private IP addressing allows computers that do not have access to a Dynamic Host Configuration Protocol (DHCP) server to be automatically assigned an IP address that does not conflict with public addresses. These addresses are in the range 169.254.0.0 to 169.254.255.255.","nodes":[{"content":"Automatic private IP addressing allows computers that do not have access to a Dynamic Host Configuration Protocol (DHCP) server to be automatically assigned an IP address that does not conflict with public addresses. These addresses are in the range 169.254.0.0 to 169.254.255.255.","pos":[0,281],"nodes":[{"content":"Automatic private IP addressing allows computers that do not have access to a Dynamic Host Configuration Protocol (DHCP) server to be automatically assigned an IP address that does not conflict with public addresses.","pos":[0,216]},{"content":"These addresses are in the range 169.254.0.0 to 169.254.255.255.","pos":[217,281]}]}]}],"pos":[8042,8324],"yaml":true,"extradata":"MT"},{"content":"`true` if the interface uses an APIPA address; otherwise, `false`.","nodes":[{"pos":[0,66],"content":"<ph id=\"ph1\">`true`</ph> if the interface uses an APIPA address; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the interface uses an APIPA address; otherwise, `false`."}],"pos":[8970,9039],"yaml":true},{"content":"Gets a <xref href=\"System.Boolean\"></xref> value that indicates whether this interface has automatic private IP addressing (APIPA) enabled.","nodes":[{"pos":[0,139],"content":"Gets a <ph id=\"ph1\">&lt;xref href=\"System.Boolean\"&gt;&lt;/xref&gt;</ph> value that indicates whether this interface has automatic private IP addressing (APIPA) enabled.","source":"Gets a <xref href=\"System.Boolean\"></xref> value that indicates whether this interface has automatic private IP addressing (APIPA) enabled."}],"pos":[10578,10718],"yaml":true},{"content":"Automatic private IP addressing allows computers that do not have access to a Dynamic Host Configuration Protocol (DHCP) server to be automatically assigned an IP address that does not conflict with public addresses. These addresses are in the range 169.254.0.0 to 169.254.255.255.","nodes":[{"pos":[0,281],"content":"Automatic private IP addressing allows computers that do not have access to a Dynamic Host Configuration Protocol (DHCP) server to be automatically assigned an IP address that does not conflict with public addresses. These addresses are in the range 169.254.0.0 to 169.254.255.255.","nodes":[{"content":"Automatic private IP addressing allows computers that do not have access to a Dynamic Host Configuration Protocol (DHCP) server to be automatically assigned an IP address that does not conflict with public addresses. These addresses are in the range 169.254.0.0 to 169.254.255.255.","pos":[0,281],"nodes":[{"content":"Automatic private IP addressing allows computers that do not have access to a Dynamic Host Configuration Protocol (DHCP) server to be automatically assigned an IP address that does not conflict with public addresses.","pos":[0,216]},{"content":"These addresses are in the range 169.254.0.0 to 169.254.255.255.","pos":[217,281]}]}]}],"pos":[10729,11011],"yaml":true,"extradata":"MT"},{"content":"`true` if the interface uses APIPA; otherwise, `false`.","nodes":[{"pos":[0,55],"content":"<ph id=\"ph1\">`true`</ph> if the interface uses APIPA; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the interface uses APIPA; otherwise, `false`."}],"pos":[11658,11716],"yaml":true},{"content":"Gets a <xref href=\"System.Boolean\"></xref> value that indicates whether the interface is configured to use a Dynamic Host Configuration Protocol (DHCP) server to obtain an IP address.","nodes":[{"pos":[0,183],"content":"Gets a <ph id=\"ph1\">&lt;xref href=\"System.Boolean\"&gt;&lt;/xref&gt;</ph> value that indicates whether the interface is configured to use a Dynamic Host Configuration Protocol (DHCP) server to obtain an IP address.","source":"Gets a <xref href=\"System.Boolean\"></xref> value that indicates whether the interface is configured to use a Dynamic Host Configuration Protocol (DHCP) server to obtain an IP address."}],"pos":[13124,13308],"yaml":true},{"content":"When this property is `true`, a DHCP server assigns the IP address to the interface when the computer establishes its network connections.","nodes":[{"pos":[0,138],"content":"When this property is <ph id=\"ph1\">`true`</ph>, a DHCP server assigns the IP address to the interface when the computer establishes its network connections.","source":"When this property is `true`, a DHCP server assigns the IP address to the interface when the computer establishes its network connections."}],"pos":[13319,13458],"yaml":true,"extradata":"MT"},{"content":"`true` if the interface is configured to obtain an IP address from a DHCP server; otherwise, `false`.","nodes":[{"pos":[0,101],"content":"<ph id=\"ph1\">`true`</ph> if the interface is configured to obtain an IP address from a DHCP server; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the interface is configured to obtain an IP address from a DHCP server; otherwise, `false`."}],"pos":[14083,14187],"yaml":true},{"content":"Gets a <xref href=\"System.Boolean\"></xref> value that indicates whether this interface can forward (route) packets.","nodes":[{"pos":[0,115],"content":"Gets a <ph id=\"ph1\">&lt;xref href=\"System.Boolean\"&gt;&lt;/xref&gt;</ph> value that indicates whether this interface can forward (route) packets.","source":"Gets a <xref href=\"System.Boolean\"></xref> value that indicates whether this interface can forward (route) packets."}],"pos":[15609,15725],"yaml":true},{"content":"If routing is disabled, packets that are received by the interface with a destination address that is not held by the interface are discarded.","nodes":[{"pos":[0,142],"content":"If routing is disabled, packets that are received by the interface with a destination address that is not held by the interface are discarded.","nodes":[{"content":"If routing is disabled, packets that are received by the interface with a destination address that is not held by the interface are discarded.","pos":[0,142]}]}],"pos":[15736,15879],"yaml":true,"extradata":"MT"},{"content":"`true` if this interface routes packets; otherwise `false`.","nodes":[{"pos":[0,59],"content":"<ph id=\"ph1\">`true`</ph> if this interface routes packets; otherwise <ph id=\"ph2\">`false`</ph>.","source":"`true` if this interface routes packets; otherwise `false`."}],"pos":[16510,16572],"yaml":true},{"content":"Gets the maximum transmission unit (MTU) for this network interface.","nodes":[{"pos":[0,68],"content":"Gets the maximum transmission unit (MTU) for this network interface.","nodes":[{"content":"Gets the maximum transmission unit (MTU) for this network interface.","pos":[0,68]}]}],"pos":[17904,17973],"yaml":true},{"content":"The MTU of a network interface is the largest packet that can be transmitted. It is measured in octets (8-bit bytes).","nodes":[{"pos":[0,117],"content":"The MTU of a network interface is the largest packet that can be transmitted. It is measured in octets (8-bit bytes).","nodes":[{"content":"The MTU of a network interface is the largest packet that can be transmitted. It is measured in octets (8-bit bytes).","pos":[0,117],"nodes":[{"content":"The MTU of a network interface is the largest packet that can be transmitted.","pos":[0,77]},{"content":"It is measured in octets (8-bit bytes).","pos":[78,117]}]}]}],"pos":[17984,18102],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.Int64\"></xref> value that specifies the MTU.","nodes":[{"pos":[0,66],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Int64\"&gt;&lt;/xref&gt;</ph> value that specifies the MTU.","source":"An <xref href=\"System.Int64\"></xref> value that specifies the MTU."}],"pos":[18714,18781],"yaml":true},{"content":"Gets a <xref href=\"System.Boolean\"></xref> value that indicates whether an interface uses Windows Internet Name Service (WINS).","nodes":[{"pos":[0,127],"content":"Gets a <ph id=\"ph1\">&lt;xref href=\"System.Boolean\"&gt;&lt;/xref&gt;</ph> value that indicates whether an interface uses Windows Internet Name Service (WINS).","source":"Gets a <xref href=\"System.Boolean\"></xref> value that indicates whether an interface uses Windows Internet Name Service (WINS)."}],"pos":[20127,20255],"yaml":true},{"content":"WINS provides a distributed database for registering and querying dynamic NetBIOS names to IPv4 address mappings.","nodes":[{"pos":[0,113],"content":"WINS provides a distributed database for registering and querying dynamic NetBIOS names to IPv4 address mappings.","nodes":[{"content":"WINS provides a distributed database for registering and querying dynamic NetBIOS names to IPv4 address mappings.","pos":[0,113]}]}],"pos":[20266,20380],"yaml":true,"extradata":"MT"},{"content":"`true` if the interface uses WINS; otherwise, `false`.","nodes":[{"pos":[0,54],"content":"<ph id=\"ph1\">`true`</ph> if the interface uses WINS; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the interface uses WINS; otherwise, `false`."}],"pos":[21000,21057],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Net.NetworkInformation.IPv4InterfaceProperties\n  commentId: T:System.Net.NetworkInformation.IPv4InterfaceProperties\n  id: IPv4InterfaceProperties\n  children:\n  - System.Net.NetworkInformation.IPv4InterfaceProperties.#ctor\n  - System.Net.NetworkInformation.IPv4InterfaceProperties.Index\n  - System.Net.NetworkInformation.IPv4InterfaceProperties.IsAutomaticPrivateAddressingActive\n  - System.Net.NetworkInformation.IPv4InterfaceProperties.IsAutomaticPrivateAddressingEnabled\n  - System.Net.NetworkInformation.IPv4InterfaceProperties.IsDhcpEnabled\n  - System.Net.NetworkInformation.IPv4InterfaceProperties.IsForwardingEnabled\n  - System.Net.NetworkInformation.IPv4InterfaceProperties.Mtu\n  - System.Net.NetworkInformation.IPv4InterfaceProperties.UsesWins\n  langs:\n  - csharp\n  name: IPv4InterfaceProperties\n  nameWithType: IPv4InterfaceProperties\n  fullName: System.Net.NetworkInformation.IPv4InterfaceProperties\n  type: Class\n  assemblies:\n  - System.Net.NetworkInformation\n  - System\n  - netstandard\n  namespace: System.Net.NetworkInformation\n  summary: Provides information about network interfaces that support Internet Protocol version 4 (IPv4).\n  remarks: \"This class provides access to configuration and address information for network interfaces that support IPv4. You do not create instances of this class; they are returned by the <xref:System.Net.NetworkInformation.IPInterfaceProperties.GetIPv4Properties%2A> method.  \\n  \\n For IPV6 properties, see <xref:System.Net.NetworkInformation.IPInterfaceProperties.GetIPv6Properties%2A>.\"\n  example:\n  - \"The following code example gets an <xref:System.Net.NetworkInformation.IPInterfaceProperties.GetIPv4Properties%2A> object and displays its data.  \\n  \\n [!code-cpp[NclNetInfo2#48](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLNetInfo2/CPP/networkexamples.cpp#48)]\\n [!code-csharp[NclNetInfo2#48](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLNetInfo2/CS/networkexamples.cs#48)]\\n [!code-vb[NclNetInfo2#48](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLNetInfo2/VB/networkexamples.vb#48)]\"\n  syntax:\n    content: public abstract class IPv4InterfaceProperties\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.NetworkInformation/IPv4InterfaceProperties.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.NetworkInformation.IPv4InterfaceProperties.#ctor\n  commentId: M:System.Net.NetworkInformation.IPv4InterfaceProperties.#ctor\n  id: '#ctor'\n  parent: System.Net.NetworkInformation.IPv4InterfaceProperties\n  langs:\n  - csharp\n  name: IPv4InterfaceProperties()\n  nameWithType: IPv4InterfaceProperties.IPv4InterfaceProperties()\n  fullName: IPv4InterfaceProperties.IPv4InterfaceProperties()\n  type: Constructor\n  assemblies:\n  - System.Net.NetworkInformation\n  - System\n  - netstandard\n  namespace: System.Net.NetworkInformation\n  summary: Initializes a new instance of the <xref href=\"System.Net.NetworkInformation.IPv4InterfaceProperties\"></xref> class.\n  remarks: This constructor can be called only by classes that derive from <xref:System.Net.NetworkInformation.IPv4InterfaceProperties>.\n  syntax:\n    content: protected IPv4InterfaceProperties ();\n    parameters: []\n  overload: System.Net.NetworkInformation.IPv4InterfaceProperties.#ctor*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.NetworkInformation/IPv4InterfaceProperties.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.NetworkInformation.IPv4InterfaceProperties.Index\n  commentId: P:System.Net.NetworkInformation.IPv4InterfaceProperties.Index\n  id: Index\n  parent: System.Net.NetworkInformation.IPv4InterfaceProperties\n  langs:\n  - csharp\n  name: Index\n  nameWithType: IPv4InterfaceProperties.Index\n  fullName: IPv4InterfaceProperties.Index\n  type: Property\n  assemblies:\n  - System.Net.NetworkInformation\n  - System\n  - netstandard\n  namespace: System.Net.NetworkInformation\n  summary: Gets the index of the network interface associated with the Internet Protocol version 4 (IPv4) address.\n  remarks: If the value of this property is zero, IPv4 is not supported by this interface.\n  example:\n  - \"The following code example gets an <xref:System.Net.NetworkInformation.IPv4InterfaceProperties> object and displays its data.  \\n  \\n [!code-cpp[NclNetInfo2#48](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLNetInfo2/CPP/networkexamples.cpp#48)]\\n [!code-csharp[NclNetInfo2#48](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLNetInfo2/CS/networkexamples.cs#48)]\\n [!code-vb[NclNetInfo2#48](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLNetInfo2/VB/networkexamples.vb#48)]\"\n  syntax:\n    content: public abstract int Index { get; }\n    return:\n      type: System.Int32\n      description: An <xref href=\"System.Int32\"></xref> that contains the index of the IPv4 interface.\n  overload: System.Net.NetworkInformation.IPv4InterfaceProperties.Index*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.NetworkInformation/IPv4InterfaceProperties.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.NetworkInformation.IPv4InterfaceProperties.IsAutomaticPrivateAddressingActive\n  commentId: P:System.Net.NetworkInformation.IPv4InterfaceProperties.IsAutomaticPrivateAddressingActive\n  id: IsAutomaticPrivateAddressingActive\n  parent: System.Net.NetworkInformation.IPv4InterfaceProperties\n  langs:\n  - csharp\n  name: IsAutomaticPrivateAddressingActive\n  nameWithType: IPv4InterfaceProperties.IsAutomaticPrivateAddressingActive\n  fullName: IPv4InterfaceProperties.IsAutomaticPrivateAddressingActive\n  type: Property\n  assemblies:\n  - System.Net.NetworkInformation\n  - System\n  - netstandard\n  namespace: System.Net.NetworkInformation\n  summary: Gets a <xref href=\"System.Boolean\"></xref> value that indicates whether this interface has an automatic private IP addressing (APIPA) address.\n  remarks: Automatic private IP addressing allows computers that do not have access to a Dynamic Host Configuration Protocol (DHCP) server to be automatically assigned an IP address that does not conflict with public addresses. These addresses are in the range 169.254.0.0 to 169.254.255.255.\n  example:\n  - \"The following code example gets an <xref:System.Net.NetworkInformation.IPv4InterfaceProperties> object and displays its data.  \\n  \\n [!code-cpp[NclNetInfo2#48](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLNetInfo2/CPP/networkexamples.cpp#48)]\\n [!code-csharp[NclNetInfo2#48](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLNetInfo2/CS/networkexamples.cs#48)]\\n [!code-vb[NclNetInfo2#48](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLNetInfo2/VB/networkexamples.vb#48)]\"\n  syntax:\n    content: public abstract bool IsAutomaticPrivateAddressingActive { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if the interface uses an APIPA address; otherwise, `false`.'\n  overload: System.Net.NetworkInformation.IPv4InterfaceProperties.IsAutomaticPrivateAddressingActive*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.NetworkInformation/IPv4InterfaceProperties.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.NetworkInformation.IPv4InterfaceProperties.IsAutomaticPrivateAddressingEnabled\n  commentId: P:System.Net.NetworkInformation.IPv4InterfaceProperties.IsAutomaticPrivateAddressingEnabled\n  id: IsAutomaticPrivateAddressingEnabled\n  parent: System.Net.NetworkInformation.IPv4InterfaceProperties\n  langs:\n  - csharp\n  name: IsAutomaticPrivateAddressingEnabled\n  nameWithType: IPv4InterfaceProperties.IsAutomaticPrivateAddressingEnabled\n  fullName: IPv4InterfaceProperties.IsAutomaticPrivateAddressingEnabled\n  type: Property\n  assemblies:\n  - System.Net.NetworkInformation\n  - System\n  - netstandard\n  namespace: System.Net.NetworkInformation\n  summary: Gets a <xref href=\"System.Boolean\"></xref> value that indicates whether this interface has automatic private IP addressing (APIPA) enabled.\n  remarks: Automatic private IP addressing allows computers that do not have access to a Dynamic Host Configuration Protocol (DHCP) server to be automatically assigned an IP address that does not conflict with public addresses. These addresses are in the range 169.254.0.0 to 169.254.255.255.\n  example:\n  - \"The following code example gets an <xref:System.Net.NetworkInformation.IPv4InterfaceProperties> object and displays its data.  \\n  \\n [!code-cpp[NclNetInfo2#48](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLNetInfo2/CPP/networkexamples.cpp#48)]\\n [!code-csharp[NclNetInfo2#48](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLNetInfo2/CS/networkexamples.cs#48)]\\n [!code-vb[NclNetInfo2#48](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLNetInfo2/VB/networkexamples.vb#48)]\"\n  syntax:\n    content: public abstract bool IsAutomaticPrivateAddressingEnabled { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if the interface uses APIPA; otherwise, `false`.'\n  overload: System.Net.NetworkInformation.IPv4InterfaceProperties.IsAutomaticPrivateAddressingEnabled*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.NetworkInformation/IPv4InterfaceProperties.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.NetworkInformation.IPv4InterfaceProperties.IsDhcpEnabled\n  commentId: P:System.Net.NetworkInformation.IPv4InterfaceProperties.IsDhcpEnabled\n  id: IsDhcpEnabled\n  parent: System.Net.NetworkInformation.IPv4InterfaceProperties\n  langs:\n  - csharp\n  name: IsDhcpEnabled\n  nameWithType: IPv4InterfaceProperties.IsDhcpEnabled\n  fullName: IPv4InterfaceProperties.IsDhcpEnabled\n  type: Property\n  assemblies:\n  - System.Net.NetworkInformation\n  - System\n  - netstandard\n  namespace: System.Net.NetworkInformation\n  summary: Gets a <xref href=\"System.Boolean\"></xref> value that indicates whether the interface is configured to use a Dynamic Host Configuration Protocol (DHCP) server to obtain an IP address.\n  remarks: When this property is `true`, a DHCP server assigns the IP address to the interface when the computer establishes its network connections.\n  example:\n  - \"The following code example gets an <xref:System.Net.NetworkInformation.IPv4InterfaceProperties> object and displays its data.  \\n  \\n [!code-cpp[NclNetInfo2#48](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLNetInfo2/CPP/networkexamples.cpp#48)]\\n [!code-csharp[NclNetInfo2#48](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLNetInfo2/CS/networkexamples.cs#48)]\\n [!code-vb[NclNetInfo2#48](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLNetInfo2/VB/networkexamples.vb#48)]\"\n  syntax:\n    content: public abstract bool IsDhcpEnabled { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if the interface is configured to obtain an IP address from a DHCP server; otherwise, `false`.'\n  overload: System.Net.NetworkInformation.IPv4InterfaceProperties.IsDhcpEnabled*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.NetworkInformation/IPv4InterfaceProperties.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.NetworkInformation.IPv4InterfaceProperties.IsForwardingEnabled\n  commentId: P:System.Net.NetworkInformation.IPv4InterfaceProperties.IsForwardingEnabled\n  id: IsForwardingEnabled\n  parent: System.Net.NetworkInformation.IPv4InterfaceProperties\n  langs:\n  - csharp\n  name: IsForwardingEnabled\n  nameWithType: IPv4InterfaceProperties.IsForwardingEnabled\n  fullName: IPv4InterfaceProperties.IsForwardingEnabled\n  type: Property\n  assemblies:\n  - System.Net.NetworkInformation\n  - System\n  - netstandard\n  namespace: System.Net.NetworkInformation\n  summary: Gets a <xref href=\"System.Boolean\"></xref> value that indicates whether this interface can forward (route) packets.\n  remarks: If routing is disabled, packets that are received by the interface with a destination address that is not held by the interface are discarded.\n  example:\n  - \"The following code example gets an <xref:System.Net.NetworkInformation.IPv4InterfaceProperties> object and displays its data.  \\n  \\n [!code-cpp[NclNetInfo2#48](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLNetInfo2/CPP/networkexamples.cpp#48)]\\n [!code-csharp[NclNetInfo2#48](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLNetInfo2/CS/networkexamples.cs#48)]\\n [!code-vb[NclNetInfo2#48](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLNetInfo2/VB/networkexamples.vb#48)]\"\n  syntax:\n    content: public abstract bool IsForwardingEnabled { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if this interface routes packets; otherwise `false`.'\n  overload: System.Net.NetworkInformation.IPv4InterfaceProperties.IsForwardingEnabled*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.NetworkInformation/IPv4InterfaceProperties.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.NetworkInformation.IPv4InterfaceProperties.Mtu\n  commentId: P:System.Net.NetworkInformation.IPv4InterfaceProperties.Mtu\n  id: Mtu\n  parent: System.Net.NetworkInformation.IPv4InterfaceProperties\n  langs:\n  - csharp\n  name: Mtu\n  nameWithType: IPv4InterfaceProperties.Mtu\n  fullName: IPv4InterfaceProperties.Mtu\n  type: Property\n  assemblies:\n  - System.Net.NetworkInformation\n  - System\n  - netstandard\n  namespace: System.Net.NetworkInformation\n  summary: Gets the maximum transmission unit (MTU) for this network interface.\n  remarks: The MTU of a network interface is the largest packet that can be transmitted. It is measured in octets (8-bit bytes).\n  example:\n  - \"The following code example gets an <xref:System.Net.NetworkInformation.IPv4InterfaceProperties> object and displays its data.  \\n  \\n [!code-cpp[NclNetInfo2#48](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLNetInfo2/CPP/networkexamples.cpp#48)]\\n [!code-csharp[NclNetInfo2#48](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLNetInfo2/CS/networkexamples.cs#48)]\\n [!code-vb[NclNetInfo2#48](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLNetInfo2/VB/networkexamples.vb#48)]\"\n  syntax:\n    content: public abstract int Mtu { get; }\n    return:\n      type: System.Int32\n      description: An <xref href=\"System.Int64\"></xref> value that specifies the MTU.\n  overload: System.Net.NetworkInformation.IPv4InterfaceProperties.Mtu*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.NetworkInformation/IPv4InterfaceProperties.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.NetworkInformation.IPv4InterfaceProperties.UsesWins\n  commentId: P:System.Net.NetworkInformation.IPv4InterfaceProperties.UsesWins\n  id: UsesWins\n  parent: System.Net.NetworkInformation.IPv4InterfaceProperties\n  langs:\n  - csharp\n  name: UsesWins\n  nameWithType: IPv4InterfaceProperties.UsesWins\n  fullName: IPv4InterfaceProperties.UsesWins\n  type: Property\n  assemblies:\n  - System.Net.NetworkInformation\n  - System\n  - netstandard\n  namespace: System.Net.NetworkInformation\n  summary: Gets a <xref href=\"System.Boolean\"></xref> value that indicates whether an interface uses Windows Internet Name Service (WINS).\n  remarks: WINS provides a distributed database for registering and querying dynamic NetBIOS names to IPv4 address mappings.\n  example:\n  - \"The following code example gets an <xref:System.Net.NetworkInformation.IPv4InterfaceProperties> object and displays its data.  \\n  \\n [!code-cpp[NclNetInfo2#48](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLNetInfo2/CPP/networkexamples.cpp#48)]\\n [!code-csharp[NclNetInfo2#48](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLNetInfo2/CS/networkexamples.cs#48)]\\n [!code-vb[NclNetInfo2#48](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLNetInfo2/VB/networkexamples.vb#48)]\"\n  syntax:\n    content: public abstract bool UsesWins { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if the interface uses WINS; otherwise, `false`.'\n  overload: System.Net.NetworkInformation.IPv4InterfaceProperties.UsesWins*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.NetworkInformation/IPv4InterfaceProperties.xml\n  ms.author: bobdel\n  manager: markl\nreferences:\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Net.NetworkInformation.IPv4InterfaceProperties.#ctor\n  parent: System.Net.NetworkInformation.IPv4InterfaceProperties\n  isExternal: false\n  name: IPv4InterfaceProperties()\n  nameWithType: IPv4InterfaceProperties.IPv4InterfaceProperties()\n  fullName: IPv4InterfaceProperties.IPv4InterfaceProperties()\n- uid: System.Net.NetworkInformation.IPv4InterfaceProperties.Index\n  parent: System.Net.NetworkInformation.IPv4InterfaceProperties\n  isExternal: false\n  name: Index\n  nameWithType: IPv4InterfaceProperties.Index\n  fullName: IPv4InterfaceProperties.Index\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Net.NetworkInformation.IPv4InterfaceProperties.IsAutomaticPrivateAddressingActive\n  parent: System.Net.NetworkInformation.IPv4InterfaceProperties\n  isExternal: false\n  name: IsAutomaticPrivateAddressingActive\n  nameWithType: IPv4InterfaceProperties.IsAutomaticPrivateAddressingActive\n  fullName: IPv4InterfaceProperties.IsAutomaticPrivateAddressingActive\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Net.NetworkInformation.IPv4InterfaceProperties.IsAutomaticPrivateAddressingEnabled\n  parent: System.Net.NetworkInformation.IPv4InterfaceProperties\n  isExternal: false\n  name: IsAutomaticPrivateAddressingEnabled\n  nameWithType: IPv4InterfaceProperties.IsAutomaticPrivateAddressingEnabled\n  fullName: IPv4InterfaceProperties.IsAutomaticPrivateAddressingEnabled\n- uid: System.Net.NetworkInformation.IPv4InterfaceProperties.IsDhcpEnabled\n  parent: System.Net.NetworkInformation.IPv4InterfaceProperties\n  isExternal: false\n  name: IsDhcpEnabled\n  nameWithType: IPv4InterfaceProperties.IsDhcpEnabled\n  fullName: IPv4InterfaceProperties.IsDhcpEnabled\n- uid: System.Net.NetworkInformation.IPv4InterfaceProperties.IsForwardingEnabled\n  parent: System.Net.NetworkInformation.IPv4InterfaceProperties\n  isExternal: false\n  name: IsForwardingEnabled\n  nameWithType: IPv4InterfaceProperties.IsForwardingEnabled\n  fullName: IPv4InterfaceProperties.IsForwardingEnabled\n- uid: System.Net.NetworkInformation.IPv4InterfaceProperties.Mtu\n  parent: System.Net.NetworkInformation.IPv4InterfaceProperties\n  isExternal: false\n  name: Mtu\n  nameWithType: IPv4InterfaceProperties.Mtu\n  fullName: IPv4InterfaceProperties.Mtu\n- uid: System.Net.NetworkInformation.IPv4InterfaceProperties.UsesWins\n  parent: System.Net.NetworkInformation.IPv4InterfaceProperties\n  isExternal: false\n  name: UsesWins\n  nameWithType: IPv4InterfaceProperties.UsesWins\n  fullName: IPv4InterfaceProperties.UsesWins\n- uid: System.Net.NetworkInformation.IPv4InterfaceProperties.#ctor*\n  parent: System.Net.NetworkInformation.IPv4InterfaceProperties\n  isExternal: false\n  name: IPv4InterfaceProperties\n  nameWithType: IPv4InterfaceProperties.IPv4InterfaceProperties\n  fullName: IPv4InterfaceProperties.IPv4InterfaceProperties\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.NetworkInformation/IPv4InterfaceProperties.xml\n- uid: System.Net.NetworkInformation.IPv4InterfaceProperties.Index*\n  parent: System.Net.NetworkInformation.IPv4InterfaceProperties\n  isExternal: false\n  name: Index\n  nameWithType: IPv4InterfaceProperties.Index\n  fullName: IPv4InterfaceProperties.Index\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.NetworkInformation/IPv4InterfaceProperties.xml\n- uid: System.Net.NetworkInformation.IPv4InterfaceProperties.IsAutomaticPrivateAddressingActive*\n  parent: System.Net.NetworkInformation.IPv4InterfaceProperties\n  isExternal: false\n  name: IsAutomaticPrivateAddressingActive\n  nameWithType: IPv4InterfaceProperties.IsAutomaticPrivateAddressingActive\n  fullName: IPv4InterfaceProperties.IsAutomaticPrivateAddressingActive\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.NetworkInformation/IPv4InterfaceProperties.xml\n- uid: System.Net.NetworkInformation.IPv4InterfaceProperties.IsAutomaticPrivateAddressingEnabled*\n  parent: System.Net.NetworkInformation.IPv4InterfaceProperties\n  isExternal: false\n  name: IsAutomaticPrivateAddressingEnabled\n  nameWithType: IPv4InterfaceProperties.IsAutomaticPrivateAddressingEnabled\n  fullName: IPv4InterfaceProperties.IsAutomaticPrivateAddressingEnabled\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.NetworkInformation/IPv4InterfaceProperties.xml\n- uid: System.Net.NetworkInformation.IPv4InterfaceProperties.IsDhcpEnabled*\n  parent: System.Net.NetworkInformation.IPv4InterfaceProperties\n  isExternal: false\n  name: IsDhcpEnabled\n  nameWithType: IPv4InterfaceProperties.IsDhcpEnabled\n  fullName: IPv4InterfaceProperties.IsDhcpEnabled\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.NetworkInformation/IPv4InterfaceProperties.xml\n- uid: System.Net.NetworkInformation.IPv4InterfaceProperties.IsForwardingEnabled*\n  parent: System.Net.NetworkInformation.IPv4InterfaceProperties\n  isExternal: false\n  name: IsForwardingEnabled\n  nameWithType: IPv4InterfaceProperties.IsForwardingEnabled\n  fullName: IPv4InterfaceProperties.IsForwardingEnabled\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.NetworkInformation/IPv4InterfaceProperties.xml\n- uid: System.Net.NetworkInformation.IPv4InterfaceProperties.Mtu*\n  parent: System.Net.NetworkInformation.IPv4InterfaceProperties\n  isExternal: false\n  name: Mtu\n  nameWithType: IPv4InterfaceProperties.Mtu\n  fullName: IPv4InterfaceProperties.Mtu\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.NetworkInformation/IPv4InterfaceProperties.xml\n- uid: System.Net.NetworkInformation.IPv4InterfaceProperties.UsesWins*\n  parent: System.Net.NetworkInformation.IPv4InterfaceProperties\n  isExternal: false\n  name: UsesWins\n  nameWithType: IPv4InterfaceProperties.UsesWins\n  fullName: IPv4InterfaceProperties.UsesWins\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.NetworkInformation/IPv4InterfaceProperties.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n"}