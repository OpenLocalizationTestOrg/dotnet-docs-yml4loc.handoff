### YamlMime:ManagedReference
items:
- uid: System.Data.DataRowExtensions
  commentId: T:System.Data.DataRowExtensions
  id: DataRowExtensions
  children:
  - System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Data.DataColumn)
  - System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Int32)
  - System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.String)
  - System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Data.DataColumn,System.Data.DataRowVersion)
  - System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Int32,System.Data.DataRowVersion)
  - System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.String,System.Data.DataRowVersion)
  - System.Data.DataRowExtensions.SetField``1(System.Data.DataRow,System.Data.DataColumn,``0)
  - System.Data.DataRowExtensions.SetField``1(System.Data.DataRow,System.Int32,``0)
  - System.Data.DataRowExtensions.SetField``1(System.Data.DataRow,System.String,``0)
  langs:
  - csharp
  name: DataRowExtensions
  nameWithType: DataRowExtensions
  fullName: System.Data.DataRowExtensions
  type: Class
  assemblies:
  - System.Data.DataSetExtensions
  namespace: System.Data
  summary: Defines the extension methods to the <xref href="System.Data.DataRow"></xref> class. This is a static class.
  remarks: The <xref:System.Data.DataSet> API has been extended with two new methods of the <xref:System.Data.DataRow> class, <xref:System.Data.DataRowExtensions.Field%2A> and <xref:System.Data.DataRowExtensions.SetField%2A>. You can use these to form [!INCLUDE[vbteclinqext](~/includes/vbteclinqext-md.md)] expressions and method queries against <xref:System.Data.DataTable> objects. They are the recommended methods to use for accessing column values within [!INCLUDE[vbteclinqext](~/includes/vbteclinqext-md.md)] expressions and method queries. For more information, see [Generic Field and SetField Methods](~/docs/framework/data/adonet/generic-field-and-setfield-methods-linq-to-dataset.md).
  syntax:
    content: public static class DataRowExtensions
  inheritance:
  - System.Object
  implements: []
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/DataRowExtensions.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Data.DataColumn)
  commentId: M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Data.DataColumn)
  id: Field``1(System.Data.DataRow,System.Data.DataColumn)
  parent: System.Data.DataRowExtensions
  langs:
  - csharp
  name: Field<T>(DataRow, DataColumn)
  nameWithType: DataRowExtensions.Field<T>(DataRow, DataColumn)
  fullName: DataRowExtensions.Field<T>(DataRow, DataColumn)
  type: Method
  assemblies:
  - System.Data.DataSetExtensions
  namespace: System.Data
  summary: Provides strongly-typed access to each of the column values in the specified row. The <xref href="System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Data.DataColumn)"></xref> method also supports nullable types.
  remarks: "The <xref:System.Data.DataSet> class represents **null** values with the <xref:System.DBNull.Value> instance of the <xref:System.DBNull> class.  A [!INCLUDE[vbteclinqext](~/includes/vbteclinqext-md.md)] expression that accessed a column with a **null** value would generate a <xref:System.InvalidCastException> at run time. Additionally, <xref:System.Data.DataSet> does not support nullable types. The <xref:System.Data.DataRowExtensions.Field%2A> method provides support for accessing columns as nullable types.  If the underlying value in the <xref:System.Data.DataSet> is <xref:System.DBNull.Value>, the returned nullable type will have a value of **null**.  \n  \n If the value of the specified <xref:System.Data.DataColumn> is <xref:System.DBNull.Value> and `T` is a reference type or nullable type, the return type will be **null**. The <xref:System.Data.DataRowExtensions.Field%2A> method will not return <xref:System.DBNull.Value>.  \n  \n The <xref:System.Data.DataRowExtensions.Field%2A> method does not perform type conversions. If type conversion is required, you should first obtain the column value by using the <xref:System.Data.DataRowExtensions.Field%2A> method. The column value should then be converted to another type."
  syntax:
    content: public static T Field<T> (this System.Data.DataRow row, System.Data.DataColumn column);
    parameters:
    - id: row
      type: System.Data.DataRow
      description: The input <xref href="System.Data.DataRow"></xref>, which acts as the `this` instance for the extension method.
    - id: column
      type: System.Data.DataColumn
      description: The input <xref href="System.Data.DataColumn"></xref> object that specifies the column to return the value of.
    typeParameters:
    - id: T
      description: A generic parameter that specifies the return type of the column.
    return:
      type: T
      description: The value, of type <code>T</code>, of the <xref href="System.Data.DataColumn"></xref> specified by <code>column</code>.
  overload: System.Data.DataRowExtensions.Field``1*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: The value type of the underlying column could not be cast to the type specified by the generic parameter, <code>T</code>.
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: The column specified by <code>column</code> does not occur in the <xref href="System.Data.DataTable"></xref> that the <xref href="System.Data.DataRow"></xref> is a part of.
  - type: System.NullReferenceException
    commentId: T:System.NullReferenceException
    description: A **null** value was assigned to a non-nullable type.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/DataRowExtensions.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Int32)
  commentId: M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Int32)
  id: Field``1(System.Data.DataRow,System.Int32)
  parent: System.Data.DataRowExtensions
  langs:
  - csharp
  name: Field<T>(DataRow, Int32)
  nameWithType: DataRowExtensions.Field<T>(DataRow, Int32)
  fullName: DataRowExtensions.Field<T>(DataRow, Int32)
  type: Method
  assemblies:
  - System.Data.DataSetExtensions
  namespace: System.Data
  summary: Provides strongly-typed access to each of the column values in the specified row. The <xref href="System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Int32)"></xref> method also supports nullable types.
  remarks: "The <xref:System.Data.DataSet> class represents **null** values with the <xref:System.DBNull.Value> instance of the <xref:System.DBNull> class.  A [!INCLUDE[vbteclinqext](~/includes/vbteclinqext-md.md)] expression that accessed a column with a **null** value would generate a <xref:System.InvalidCastException> at run time. Additionally, <xref:System.Data.DataSet> doesnâ€™t support nullable types. The <xref:System.Data.DataRowExtensions.Field%2A> method provides support for accessing columns as nullable types.  If the underlying value in the <xref:System.Data.DataSet> is <xref:System.DBNull.Value>, the returned nullable type will have a value of **null**.  \n  \n If the value of the specified <xref:System.Data.DataColumn> is **null** and `T` is a reference type or nullable type, then the return type will be **null**.  The <xref:System.Data.DataRowExtensions.Field%2A> method will not return <xref:System.DBNull.Value>.  \n  \n The <xref:System.Data.DataRowExtensions.Field%2A> method does not perform type conversions. If type conversion is required, you should first obtain the column value by using the <xref:System.Data.DataRowExtensions.Field%2A> method. The column value should then be converted to another type."
  syntax:
    content: public static T Field<T> (this System.Data.DataRow row, int columnIndex);
    parameters:
    - id: row
      type: System.Data.DataRow
      description: The input <xref href="System.Data.DataRow"></xref>, which acts as the `this` instance for the extension method.
    - id: columnIndex
      type: System.Int32
      description: The column index.
    typeParameters:
    - id: T
      description: A generic parameter that specifies the return type of the column.
    return:
      type: T
      description: The value, of type <code>T</code>, of the <xref href="System.Data.DataColumn"></xref> specified by <code>columnIndex</code>.
  overload: System.Data.DataRowExtensions.Field``1*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: The value type of the underlying column could not be cast to the type specified by the generic parameter, <code>T</code>.
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: The column specified by <code>ordinal</code> does not exist in the <xref href="System.Data.DataTable"></xref> that the <xref href="System.Data.DataRow"></xref> is a part of.
  - type: System.NullReferenceException
    commentId: T:System.NullReferenceException
    description: A **null** value was assigned to a non-nullable type.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/DataRowExtensions.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.String)
  commentId: M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.String)
  id: Field``1(System.Data.DataRow,System.String)
  parent: System.Data.DataRowExtensions
  langs:
  - csharp
  name: Field<T>(DataRow, String)
  nameWithType: DataRowExtensions.Field<T>(DataRow, String)
  fullName: DataRowExtensions.Field<T>(DataRow, String)
  type: Method
  assemblies:
  - System.Data.DataSetExtensions
  namespace: System.Data
  summary: Provides strongly-typed access to each of the column values in the specified row. The <xref href="System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.String)"></xref> method also supports nullable types.
  remarks: "The <xref:System.Data.DataSet> class represents **null** values with the <xref:System.DBNull.Value> instance of the <xref:System.DBNull> class. A [!INCLUDE[vbteclinqext](~/includes/vbteclinqext-md.md)] expression that accessed a column with a **null** value would generate a <xref:System.InvalidCastException> at run time. Additionally, <xref:System.Data.DataSet> does not support nullable types. The <xref:System.Data.DataRowExtensions.Field%2A> method provides support for accessing columns as nullable types. If the underlying value in the <xref:System.Data.DataSet> is <xref:System.DBNull.Value>, the returned nullable type will have a value of **null**.  \n  \n If the value of the specified <xref:System.Data.DataColumn> is **null** and `T` is a reference type or nullable type, the return type will be **null**. The <xref:System.Data.DataRowExtensions.Field%2A> method will not return <xref:System.DBNull.Value>.  \n  \n The <xref:System.Data.DataRowExtensions.Field%2A> method does not perform type conversions. If type conversion is required, you should first obtain the column value by using the <xref:System.Data.DataRowExtensions.Field%2A> method. The column value should then be converted to another type."
  syntax:
    content: public static T Field<T> (this System.Data.DataRow row, string columnName);
    parameters:
    - id: row
      type: System.Data.DataRow
      description: The input <xref href="System.Data.DataRow"></xref>, which acts as the `this` instance for the extension method.
    - id: columnName
      type: System.String
      description: The name of the column to return the value of.
    typeParameters:
    - id: T
      description: A generic parameter that specifies the return type of the column.
    return:
      type: T
      description: The value, of type <code>T</code>, of the <xref href="System.Data.DataColumn"></xref> specified by <code>columnName</code>.
  overload: System.Data.DataRowExtensions.Field``1*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: The value type of the underlying column could not be cast to the type specified by the generic parameter, <code>T</code>.
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: The column specified by <code>columnName</code> does not occur in the <xref href="System.Data.DataTable"></xref> that the <xref href="System.Data.DataRow"></xref> is a part of.
  - type: System.NullReferenceException
    commentId: T:System.NullReferenceException
    description: A `null` value was assigned to a non-nullable type.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/DataRowExtensions.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Data.DataColumn,System.Data.DataRowVersion)
  commentId: M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Data.DataColumn,System.Data.DataRowVersion)
  id: Field``1(System.Data.DataRow,System.Data.DataColumn,System.Data.DataRowVersion)
  parent: System.Data.DataRowExtensions
  langs:
  - csharp
  name: Field<T>(DataRow, DataColumn, DataRowVersion)
  nameWithType: DataRowExtensions.Field<T>(DataRow, DataColumn, DataRowVersion)
  fullName: DataRowExtensions.Field<T>(DataRow, DataColumn, DataRowVersion)
  type: Method
  assemblies:
  - System.Data.DataSetExtensions
  namespace: System.Data
  summary: Provides strongly-typed access to each of the column values in the specified row. The <xref href="System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Data.DataColumn,System.Data.DataRowVersion)"></xref> method also supports nullable types.
  remarks: "The <xref:System.Data.DataSet> class represents **null** values with the <xref:System.DBNull.Value> instance of the <xref:System.DBNull> class.  A [!INCLUDE[vbteclinqext](~/includes/vbteclinqext-md.md)] expression that accessed a column with a **null** value would generate a <xref:System.InvalidCastException> at run time. Additionally, <xref:System.Data.DataSet> doesnâ€™t support nullable types. The <xref:System.Data.DataRowExtensions.Field%2A> method provides support for accessing columns as nullable types.  If the underlying value in the <xref:System.Data.DataSet> is <xref:System.DBNull.Value>, the returned nullable type will have a value of **null**.  \n  \n If the value of the specified <xref:System.Data.DataColumn> is null and `T` is a reference type or nullable type, then the return type will be **null**. The <xref:System.Data.DataRowExtensions.Field%2A> method will not return <xref:System.DBNull.Value>.  \n  \n The <xref:System.Data.DataRowExtensions.Field%2A> method does not perform type conversions. If type conversion is required, you should first obtain the column value by using the <xref:System.Data.DataRowExtensions.Field%2A> method. The column value should then be converted to another type."
  syntax:
    content: public static T Field<T> (this System.Data.DataRow row, System.Data.DataColumn column, System.Data.DataRowVersion version);
    parameters:
    - id: row
      type: System.Data.DataRow
      description: The input <xref href="System.Data.DataRow"></xref>, which acts as the `this` instance for the extension method.
    - id: column
      type: System.Data.DataColumn
      description: The input <xref href="System.Data.DataColumn"></xref> object that specifies the column to return the value of.
    - id: version
      type: System.Data.DataRowVersion
      description: A <xref href="System.Data.DataRowVersion"></xref> enumeration that specifies the version of the column value to return, such as `Current` or `Original` version.
    typeParameters:
    - id: T
      description: A generic parameter that specifies the return type of the column.
    return:
      type: T
      description: The value, of type <code>T</code>, of the <xref href="System.Data.DataColumn"></xref> specified by <code>column</code> and <code>version</code>.
  overload: System.Data.DataRowExtensions.Field``1*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: The value type of the underlying column could not be cast to the type specified by the generic parameter, <code>T</code>.
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: The column specified by <code>column</code> does not exist in the <xref href="System.Data.DataTable"></xref> that the <xref href="System.Data.DataRow"></xref> is a part of.
  - type: System.NullReferenceException
    commentId: T:System.NullReferenceException
    description: A **null** value was assigned to a non-nullable type.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/DataRowExtensions.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Int32,System.Data.DataRowVersion)
  commentId: M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Int32,System.Data.DataRowVersion)
  id: Field``1(System.Data.DataRow,System.Int32,System.Data.DataRowVersion)
  parent: System.Data.DataRowExtensions
  langs:
  - csharp
  name: Field<T>(DataRow, Int32, DataRowVersion)
  nameWithType: DataRowExtensions.Field<T>(DataRow, Int32, DataRowVersion)
  fullName: DataRowExtensions.Field<T>(DataRow, Int32, DataRowVersion)
  type: Method
  assemblies:
  - System.Data.DataSetExtensions
  namespace: System.Data
  summary: Provides strongly-typed access to each of the column values in the specified row. The <xref href="System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Int32,System.Data.DataRowVersion)"></xref> method also supports nullable types.
  remarks: "The <xref:System.Data.DataSet> class represents **null** values with the <xref:System.DBNull.Value> instance of the <xref:System.DBNull> class.  A [!INCLUDE[vbteclinqext](~/includes/vbteclinqext-md.md)] expression that accessed a column with a **null** value would generate a <xref:System.InvalidCastException> at run time. Additionally, <xref:System.Data.DataSet> doesnâ€™t support nullable types. The <xref:System.Data.DataRowExtensions.Field%2A> method provides support for accessing columns as nullable types.  If the underlying value in the <xref:System.Data.DataSet> is <xref:System.DBNull.Value>, the returned nullable type will have a value of **null**.  \n  \n If the value of the specified <xref:System.Data.DataColumn> is null and `T` is a reference type or nullable type, then the return type will be **null**. The <xref:System.Data.DataRowExtensions.Field%2A> method will not return <xref:System.DBNull.Value>.  \n  \n The <xref:System.Data.DataRowExtensions.Field%2A> method does not perform type conversions. If type conversion is required, you should first obtain the column value by using the <xref:System.Data.DataRowExtensions.Field%2A> method. The column value should then be converted to another type."
  syntax:
    content: public static T Field<T> (this System.Data.DataRow row, int columnIndex, System.Data.DataRowVersion version);
    parameters:
    - id: row
      type: System.Data.DataRow
      description: The input <xref href="System.Data.DataRow"></xref>, which acts as the `this` instance for the extension method.
    - id: columnIndex
      type: System.Int32
      description: The zero-based ordinal of the column to return the value of.
    - id: version
      type: System.Data.DataRowVersion
      description: A <xref href="System.Data.DataRowVersion"></xref> enumeration that specifies the version of the column value to return, such as `Current` or `Original` version.
    typeParameters:
    - id: T
      description: A generic parameter that specifies the return type of the column.
    return:
      type: T
      description: The value, of type <code>T</code>, of the <xref href="System.Data.DataColumn"></xref> specified by <code>ordinal</code> and <code>version</code>.
  overload: System.Data.DataRowExtensions.Field``1*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: The value type of the underlying column could not be cast to the type specified by the generic parameter, <code>T</code>.
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: The column specified by <code>ordinal</code> does not exist in the <xref href="System.Data.DataTable"></xref> that the <xref href="System.Data.DataRow"></xref> is a part of.
  - type: System.NullReferenceException
    commentId: T:System.NullReferenceException
    description: A **null** value was assigned to a non-nullable type.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/DataRowExtensions.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.String,System.Data.DataRowVersion)
  commentId: M:System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.String,System.Data.DataRowVersion)
  id: Field``1(System.Data.DataRow,System.String,System.Data.DataRowVersion)
  parent: System.Data.DataRowExtensions
  langs:
  - csharp
  name: Field<T>(DataRow, String, DataRowVersion)
  nameWithType: DataRowExtensions.Field<T>(DataRow, String, DataRowVersion)
  fullName: DataRowExtensions.Field<T>(DataRow, String, DataRowVersion)
  type: Method
  assemblies:
  - System.Data.DataSetExtensions
  namespace: System.Data
  summary: Provides strongly-typed access to each of the column values in the specified row. The <xref href="System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.String,System.Data.DataRowVersion)"></xref> method also supports nullable types.
  remarks: "The <xref:System.Data.DataSet> class represents **null** values with the <xref:System.DBNull.Value> instance of the <xref:System.DBNull> class.  A [!INCLUDE[vbteclinqext](~/includes/vbteclinqext-md.md)] expression that accessed a column with a **null** value would generate a <xref:System.InvalidCastException> at run time. Additionally, <xref:System.Data.DataSet> doesnâ€™t support nullable types. The <xref:System.Data.DataRowExtensions.Field%2A> method provides support for accessing columns as nullable types.  If the underlying value in the <xref:System.Data.DataSet> is <xref:System.DBNull.Value>, the returned nullable type will have a value of **null**.  \n  \n If the value of the specified <xref:System.Data.DataColumn> is null and `T` is a reference type or nullable type, then the return type will be **null**. The <xref:System.Data.DataRowExtensions.Field%2A> method will not return <xref:System.DBNull.Value>.  \n  \n The <xref:System.Data.DataRowExtensions.Field%2A> method does not perform type conversions. If type conversion is required, you should first obtain the column value by using the <xref:System.Data.DataRowExtensions.Field%2A> method. The column value should then be converted to another type."
  syntax:
    content: public static T Field<T> (this System.Data.DataRow row, string columnName, System.Data.DataRowVersion version);
    parameters:
    - id: row
      type: System.Data.DataRow
      description: The input <xref href="System.Data.DataRow"></xref>, which acts as the `this` instance for the extension method.
    - id: columnName
      type: System.String
      description: The name of the column to return the value of.
    - id: version
      type: System.Data.DataRowVersion
      description: A <xref href="System.Data.DataRowVersion"></xref> enumeration that specifies the version of the column value to return, such as `Current` or `Original` version.
    typeParameters:
    - id: T
      description: A generic parameter that specifies the return type of the column.
    return:
      type: T
      description: The value, of type <code>T</code>, of the <xref href="System.Data.DataColumn"></xref> specified by <code>columnName</code> and <code>version</code>.
  overload: System.Data.DataRowExtensions.Field``1*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: The value type of the underlying column could not be cast to the type specified by the generic parameter, <code>T</code>.
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: The column specified by <code>columnName</code> does not exist in the <xref href="System.Data.DataTable"></xref> that the <xref href="System.Data.DataRow"></xref> is a part of.
  - type: System.NullReferenceException
    commentId: T:System.NullReferenceException
    description: A **null** value was assigned to a non-nullable type.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/DataRowExtensions.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.DataRowExtensions.SetField``1(System.Data.DataRow,System.Data.DataColumn,``0)
  commentId: M:System.Data.DataRowExtensions.SetField``1(System.Data.DataRow,System.Data.DataColumn,``0)
  id: SetField``1(System.Data.DataRow,System.Data.DataColumn,``0)
  parent: System.Data.DataRowExtensions
  langs:
  - csharp
  name: SetField<T>(DataRow, DataColumn, T)
  nameWithType: DataRowExtensions.SetField<T>(DataRow, DataColumn, T)
  fullName: DataRowExtensions.SetField<T>(DataRow, DataColumn, T)
  type: Method
  assemblies:
  - System.Data.DataSetExtensions
  namespace: System.Data
  summary: Sets a new value for the specified column in the <xref href="System.Data.DataRow"></xref>. The <xref href="System.Data.DataRowExtensions.SetField``1(System.Data.DataRow,System.Data.DataColumn,``0)"></xref> method also supports nullable types.
  remarks: "If `value` is **null**, the <xref:System.Data.DataRowExtensions.SetField%2A> method converts the **null** value to <xref:System.DBNull.Value> in the underlying <xref:System.Data.DataColumn>.  \n  \n The <xref:System.Data.DataRowExtensions.SetField%2A> method does not perform any type conversions. This does not mean, however, that a type conversion will not occur. The <xref:System.Data.DataRowExtensions.SetField%2A> method exposes the [!INCLUDE[ado_whidbey_long](~/includes/ado-whidbey-long-md.md)] behavior of the <xref:System.Data.DataRow> class. A type conversion could be performed by the <xref:System.Data.DataRow> object and the converted value would then be saved to the row.  \n  \n Exceptions can be passed up through the <xref:System.Data.DataRowExtensions.SetField%2A> method from the underlying <xref:System.Data.DataRow> object."
  syntax:
    content: public static void SetField<T> (this System.Data.DataRow row, System.Data.DataColumn column, T value);
    parameters:
    - id: row
      type: System.Data.DataRow
      description: The input <xref href="System.Data.DataRow"></xref>, which acts as the `this` instance for the extension method.
    - id: column
      type: System.Data.DataColumn
      description: The input <xref href="System.Data.DataColumn"></xref> specifies which row value to retrieve.
    - id: value
      type: T
      description: The new row value for the specified column, of type <code>T</code>.
    typeParameters:
    - id: T
      description: A generic parameter that specifies the value type of the column.
  overload: System.Data.DataRowExtensions.SetField``1*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: The column specified by <code>column</code> cannot be found.
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code>column</code> is **null**.
  - type: System.Data.DeletedRowInaccessibleException
    commentId: T:System.Data.DeletedRowInaccessibleException
    description: Occurs when attempting to set a value on a deleted row.
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: The value type of the underlying column could not be cast to the type specified by the generic parameter, <code>T</code>.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/DataRowExtensions.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.DataRowExtensions.SetField``1(System.Data.DataRow,System.Int32,``0)
  commentId: M:System.Data.DataRowExtensions.SetField``1(System.Data.DataRow,System.Int32,``0)
  id: SetField``1(System.Data.DataRow,System.Int32,``0)
  parent: System.Data.DataRowExtensions
  langs:
  - csharp
  name: SetField<T>(DataRow, Int32, T)
  nameWithType: DataRowExtensions.SetField<T>(DataRow, Int32, T)
  fullName: DataRowExtensions.SetField<T>(DataRow, Int32, T)
  type: Method
  assemblies:
  - System.Data.DataSetExtensions
  namespace: System.Data
  summary: Sets a new value for the specified column in the <xref href="System.Data.DataRow"></xref> the method is called on. The <xref href="System.Data.DataRowExtensions.SetField``1(System.Data.DataRow,System.Int32,``0)"></xref> method also supports nullable types.
  remarks: "If `value` is **null**, the <xref:System.Data.DataRowExtensions.SetField%2A> method converts the **null** value to <xref:System.DBNull.Value> in the underlying <xref:System.Data.DataColumn>.  \n  \n The <xref:System.Data.DataRowExtensions.SetField%2A> method does not perform any type conversions. This does not mean, however, that a type conversion will not occur. The <xref:System.Data.DataRowExtensions.SetField%2A> method exposes the [!INCLUDE[ado_whidbey_long](~/includes/ado-whidbey-long-md.md)] behavior of the <xref:System.Data.DataRow> class. A type conversion could be performed by the <xref:System.Data.DataRow> object and the converted value would then be saved to the row.  \n  \n Exceptions can be passed up through the <xref:System.Data.DataRowExtensions.SetField%2A> method from the underlying <xref:System.Data.DataRow> object."
  syntax:
    content: public static void SetField<T> (this System.Data.DataRow row, int columnIndex, T value);
    parameters:
    - id: row
      type: System.Data.DataRow
      description: The input <xref href="System.Data.DataRow"></xref>, which acts as the `this` instance for the extension method.
    - id: columnIndex
      type: System.Int32
      description: The zero-based ordinal of the column to set the value of.
    - id: value
      type: T
      description: The new row value for the specified column, of type <code>T</code>.
    typeParameters:
    - id: T
      description: A generic parameter that specifies the value type of the column.
  overload: System.Data.DataRowExtensions.SetField``1*
  exceptions:
  - type: System.Data.DeletedRowInaccessibleException
    commentId: T:System.Data.DeletedRowInaccessibleException
    description: Occurs when attempting to set a value on a deleted row.
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: The <code>ordinal</code> argument is out of range.
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: The value type of the underlying column could be not cast to the type specified by the generic parameter, <code>T</code>.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/DataRowExtensions.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
- uid: System.Data.DataRowExtensions.SetField``1(System.Data.DataRow,System.String,``0)
  commentId: M:System.Data.DataRowExtensions.SetField``1(System.Data.DataRow,System.String,``0)
  id: SetField``1(System.Data.DataRow,System.String,``0)
  parent: System.Data.DataRowExtensions
  langs:
  - csharp
  name: SetField<T>(DataRow, String, T)
  nameWithType: DataRowExtensions.SetField<T>(DataRow, String, T)
  fullName: DataRowExtensions.SetField<T>(DataRow, String, T)
  type: Method
  assemblies:
  - System.Data.DataSetExtensions
  namespace: System.Data
  summary: Sets a new value for the specified column in the <xref href="System.Data.DataRow"></xref>. The <xref href="System.Data.DataRowExtensions.SetField``1(System.Data.DataRow,System.String,``0)"></xref> method also supports nullable types.
  remarks: "If `value` is **null**, the <xref:System.Data.DataRowExtensions.SetField%2A> method converts the **null** value to <xref:System.DBNull.Value> in the underlying <xref:System.Data.DataColumn>.  \n  \n The <xref:System.Data.DataRowExtensions.SetField%2A> method does not perform any type conversions. This does not mean, however, that a type conversion will not occur. The <xref:System.Data.DataRowExtensions.SetField%2A> method exposes the [!INCLUDE[ado_whidbey_long](~/includes/ado-whidbey-long-md.md)] behavior of the <xref:System.Data.DataRow> class. A type conversion could be performed by the <xref:System.Data.DataRow> object and the converted value would then be saved to the row.  \n  \n Exceptions can be passed up through the <xref:System.Data.DataRowExtensions.SetField%2A> method from the underlying <xref:System.Data.DataRow> object."
  syntax:
    content: public static void SetField<T> (this System.Data.DataRow row, string columnName, T value);
    parameters:
    - id: row
      type: System.Data.DataRow
      description: The input <xref href="System.Data.DataRow"></xref>, which acts as the `this` instance for the extension method.
    - id: columnName
      type: System.String
      description: The name of the column to set the value of.
    - id: value
      type: T
      description: The new row value for the specified column, of type <code>T</code>.
    typeParameters:
    - id: T
      description: A generic parameter that specifies the value type of the column.
  overload: System.Data.DataRowExtensions.SetField``1*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: The column specified by <code>columnName</code> cannot be found.
  - type: System.Data.DeletedRowInaccessibleException
    commentId: T:System.Data.DeletedRowInaccessibleException
    description: Occurs when attempting to set a value on a deleted row.
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: The value type of the underlying column could not be cast to the type specified by the generic parameter, <code>T</code>.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/DataRowExtensions.xml
  ms.technology:
  - dotnet-ado
  author: JennieHubbard
  ms.author: jhubbard
  manager: jhubbard
references:
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.InvalidCastException
  parent: System
  isExternal: false
  name: InvalidCastException
  nameWithType: InvalidCastException
  fullName: System.InvalidCastException
- uid: System.IndexOutOfRangeException
  parent: System
  isExternal: false
  name: IndexOutOfRangeException
  nameWithType: IndexOutOfRangeException
  fullName: System.IndexOutOfRangeException
- uid: System.NullReferenceException
  parent: System
  isExternal: false
  name: NullReferenceException
  nameWithType: NullReferenceException
  fullName: System.NullReferenceException
- uid: System.ArgumentException
  parent: System
  isExternal: false
  name: ArgumentException
  nameWithType: ArgumentException
  fullName: System.ArgumentException
- uid: System.ArgumentNullException
  parent: System
  isExternal: false
  name: ArgumentNullException
  nameWithType: ArgumentNullException
  fullName: System.ArgumentNullException
- uid: System.Data.DeletedRowInaccessibleException
  parent: System.Data
  isExternal: false
  name: DeletedRowInaccessibleException
  nameWithType: DeletedRowInaccessibleException
  fullName: System.Data.DeletedRowInaccessibleException
- uid: System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Data.DataColumn)
  parent: System.Data.DataRowExtensions
  isExternal: false
  name: Field<T>(DataRow, DataColumn)
  nameWithType: DataRowExtensions.Field<T>(DataRow, DataColumn)
  fullName: DataRowExtensions.Field<T>(DataRow, DataColumn)
- uid: T
  isExternal: true
  name: T
  nameWithType: T
  fullName: T
- uid: System.Data.DataRow
  parent: System.Data
  isExternal: false
  name: DataRow
  nameWithType: DataRow
  fullName: System.Data.DataRow
- uid: System.Data.DataColumn
  parent: System.Data
  isExternal: false
  name: DataColumn
  nameWithType: DataColumn
  fullName: System.Data.DataColumn
- uid: System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Int32)
  parent: System.Data.DataRowExtensions
  isExternal: false
  name: Field<T>(DataRow, Int32)
  nameWithType: DataRowExtensions.Field<T>(DataRow, Int32)
  fullName: DataRowExtensions.Field<T>(DataRow, Int32)
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.String)
  parent: System.Data.DataRowExtensions
  isExternal: false
  name: Field<T>(DataRow, String)
  nameWithType: DataRowExtensions.Field<T>(DataRow, String)
  fullName: DataRowExtensions.Field<T>(DataRow, String)
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Data.DataColumn,System.Data.DataRowVersion)
  parent: System.Data.DataRowExtensions
  isExternal: false
  name: Field<T>(DataRow, DataColumn, DataRowVersion)
  nameWithType: DataRowExtensions.Field<T>(DataRow, DataColumn, DataRowVersion)
  fullName: DataRowExtensions.Field<T>(DataRow, DataColumn, DataRowVersion)
- uid: System.Data.DataRowVersion
  parent: System.Data
  isExternal: false
  name: DataRowVersion
  nameWithType: DataRowVersion
  fullName: System.Data.DataRowVersion
- uid: System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.Int32,System.Data.DataRowVersion)
  parent: System.Data.DataRowExtensions
  isExternal: false
  name: Field<T>(DataRow, Int32, DataRowVersion)
  nameWithType: DataRowExtensions.Field<T>(DataRow, Int32, DataRowVersion)
  fullName: DataRowExtensions.Field<T>(DataRow, Int32, DataRowVersion)
- uid: System.Data.DataRowExtensions.Field``1(System.Data.DataRow,System.String,System.Data.DataRowVersion)
  parent: System.Data.DataRowExtensions
  isExternal: false
  name: Field<T>(DataRow, String, DataRowVersion)
  nameWithType: DataRowExtensions.Field<T>(DataRow, String, DataRowVersion)
  fullName: DataRowExtensions.Field<T>(DataRow, String, DataRowVersion)
- uid: System.Data.DataRowExtensions.SetField``1(System.Data.DataRow,System.Data.DataColumn,``0)
  parent: System.Data.DataRowExtensions
  isExternal: false
  name: SetField<T>(DataRow, DataColumn, T)
  nameWithType: DataRowExtensions.SetField<T>(DataRow, DataColumn, T)
  fullName: DataRowExtensions.SetField<T>(DataRow, DataColumn, T)
- uid: System.Data.DataRowExtensions.SetField``1(System.Data.DataRow,System.Int32,``0)
  parent: System.Data.DataRowExtensions
  isExternal: false
  name: SetField<T>(DataRow, Int32, T)
  nameWithType: DataRowExtensions.SetField<T>(DataRow, Int32, T)
  fullName: DataRowExtensions.SetField<T>(DataRow, Int32, T)
- uid: System.Data.DataRowExtensions.SetField``1(System.Data.DataRow,System.String,``0)
  parent: System.Data.DataRowExtensions
  isExternal: false
  name: SetField<T>(DataRow, String, T)
  nameWithType: DataRowExtensions.SetField<T>(DataRow, String, T)
  fullName: DataRowExtensions.SetField<T>(DataRow, String, T)
- uid: System.Data.DataRowExtensions.Field``1*
  parent: System.Data.DataRowExtensions
  isExternal: false
  name: Field<T>
  nameWithType: DataRowExtensions.Field<T>
  fullName: DataRowExtensions.Field<T>
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/DataRowExtensions.xml
- uid: System.Data.DataRowExtensions.SetField``1*
  parent: System.Data.DataRowExtensions
  isExternal: false
  name: SetField<T>
  nameWithType: DataRowExtensions.SetField<T>
  fullName: DataRowExtensions.SetField<T>
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/DataRowExtensions.xml
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: Object.Equals(Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: Object.Equals(Object, Object)
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: false
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: Object.GetHashCode()
- uid: System.Object.GetType
  parent: System.Object
  isExternal: false
  name: GetType()
  nameWithType: Object.GetType()
  fullName: Object.GetType()
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: false
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: Object.MemberwiseClone()
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: Object.ReferenceEquals(Object, Object)
- uid: System.Object.ToString
  parent: System.Object
  isExternal: false
  name: ToString()
  nameWithType: Object.ToString()
  fullName: Object.ToString()
