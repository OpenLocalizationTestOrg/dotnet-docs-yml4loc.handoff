{"nodes":[{"content":"Provides host for workflow-based services.","nodes":[{"pos":[0,42],"content":"Provides host for workflow-based services.","nodes":[{"content":"Provides host for workflow-based services.","pos":[0,42]}]}],"pos":[1933,1976],"yaml":true},{"content":"Implements the host used by the [!INCLUDE[indigo1](~/includes/indigo1-md.md)] service model programming model.  \n  \n Use the <xref:System.ServiceModel.WorkflowServiceHost> class to configure and expose a workflow as service for use by client applications when you are not using Internet Information Services (IIS) or Windows Activation Services (WAS) to expose a service. Both IIS and WAS interact with a <xref:System.ServiceModel.WorkflowServiceHost> object on your behalf.  \n  \n To expose a workflow as service for use by callers, WCF requires a complete service description (represented by the <xref:System.ServiceModel.Description.ServiceDescription> class). The <xref:System.ServiceModel.WorkflowServiceHost> class creates a <xref:System.ServiceModel.Description.ServiceDescription> from the workflow service type and configuration information and then uses that description to create <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> objects for each endpoint in the description.  \n  \n Use a <xref:System.ServiceModel.WorkflowServiceHost> object to load a workflow service, configure endpoints, apply security settings, and start listeners to handle incoming requests.","nodes":[{"pos":[0,110],"content":"Implements the host used by the <ph id=\"ph1\">[!INCLUDE[indigo1](~/includes/indigo1-md.md)]</ph> service model programming model.","source":"Implements the host used by the [!INCLUDE[indigo1](~/includes/indigo1-md.md)] service model programming model."},{"pos":[117,474],"content":"Use the <xref:System.ServiceModel.WorkflowServiceHost> class to configure and expose a workflow as service for use by client applications when you are not using Internet Information Services (IIS) or Windows Activation Services (WAS) to expose a service. Both IIS and WAS interact with a <xref:System.ServiceModel.WorkflowServiceHost> object on your behalf.","nodes":[{"content":"Use the <xref:System.ServiceModel.WorkflowServiceHost> class to configure and expose a workflow as service for use by client applications when you are not using Internet Information Services (IIS) or Windows Activation Services (WAS) to expose a service. Both IIS and WAS interact with a <xref:System.ServiceModel.WorkflowServiceHost> object on your behalf.","pos":[0,357],"nodes":[{"content":"Use the <ph id=\"ph1\">&lt;xref:System.ServiceModel.WorkflowServiceHost&gt;</ph> class to configure and expose a workflow as service for use by client applications when you are not using Internet Information Services (IIS) or Windows Activation Services (WAS) to expose a service.","pos":[0,254],"source":"Use the <xref:System.ServiceModel.WorkflowServiceHost> class to configure and expose a workflow as service for use by client applications when you are not using Internet Information Services (IIS) or Windows Activation Services (WAS) to expose a service."},{"content":"Both IIS and WAS interact with a <ph id=\"ph1\">&lt;xref:System.ServiceModel.WorkflowServiceHost&gt;</ph> object on your behalf.","pos":[255,357],"source":" Both IIS and WAS interact with a <xref:System.ServiceModel.WorkflowServiceHost> object on your behalf."}]}]},{"pos":[481,991],"content":"To expose a workflow as service for use by callers, WCF requires a complete service description (represented by the <xref:System.ServiceModel.Description.ServiceDescription> class). The <xref:System.ServiceModel.WorkflowServiceHost> class creates a <xref:System.ServiceModel.Description.ServiceDescription> from the workflow service type and configuration information and then uses that description to create <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> objects for each endpoint in the description.","nodes":[{"content":"To expose a workflow as service for use by callers, WCF requires a complete service description (represented by the <xref:System.ServiceModel.Description.ServiceDescription> class). The <xref:System.ServiceModel.WorkflowServiceHost> class creates a <xref:System.ServiceModel.Description.ServiceDescription> from the workflow service type and configuration information and then uses that description to create <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> objects for each endpoint in the description.","pos":[0,510],"nodes":[{"content":"To expose a workflow as service for use by callers, WCF requires a complete service description (represented by the <ph id=\"ph1\">&lt;xref:System.ServiceModel.Description.ServiceDescription&gt;</ph> class).","pos":[0,181],"source":"To expose a workflow as service for use by callers, WCF requires a complete service description (represented by the <xref:System.ServiceModel.Description.ServiceDescription> class)."},{"content":"The <ph id=\"ph1\">&lt;xref:System.ServiceModel.WorkflowServiceHost&gt;</ph> class creates a <ph id=\"ph2\">&lt;xref:System.ServiceModel.Description.ServiceDescription&gt;</ph> from the workflow service type and configuration information and then uses that description to create <ph id=\"ph3\">&lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcher&gt;</ph> objects for each endpoint in the description.","pos":[182,510],"source":" The <xref:System.ServiceModel.WorkflowServiceHost> class creates a <xref:System.ServiceModel.Description.ServiceDescription> from the workflow service type and configuration information and then uses that description to create <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> objects for each endpoint in the description."}]}]},{"pos":[998,1180],"content":"Use a <xref:System.ServiceModel.WorkflowServiceHost> object to load a workflow service, configure endpoints, apply security settings, and start listeners to handle incoming requests.","nodes":[{"content":"Use a <ph id=\"ph1\">&lt;xref:System.ServiceModel.WorkflowServiceHost&gt;</ph> object to load a workflow service, configure endpoints, apply security settings, and start listeners to handle incoming requests.","pos":[0,182],"source":"Use a <xref:System.ServiceModel.WorkflowServiceHost> object to load a workflow service, configure endpoints, apply security settings, and start listeners to handle incoming requests."}]}],"pos":[1987,3176],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.ServiceModel.WorkflowServiceHost\"></xref> class.","nodes":[{"pos":[0,101],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.WorkflowServiceHost\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.ServiceModel.WorkflowServiceHost\"></xref> class."}],"pos":[9618,9720],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.ServiceModel.WorkflowServiceHost\"></xref> class using a byte stream that contains the workflow definition and the base addresses of the service specified.","nodes":[{"pos":[0,207],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.WorkflowServiceHost\"&gt;&lt;/xref&gt;</ph> class using a byte stream that contains the workflow definition and the base addresses of the service specified.","source":"Initializes a new instance of the <xref href=\"System.ServiceModel.WorkflowServiceHost\"></xref> class using a byte stream that contains the workflow definition and the base addresses of the service specified."}],"pos":[10985,11193],"yaml":true},{"content":"Use this overload if the workflow definition is stored in secured storage, such as a database.","nodes":[{"pos":[0,94],"content":"Use this overload if the workflow definition is stored in secured storage, such as a database.","nodes":[{"content":"Use this overload if the workflow definition is stored in secured storage, such as a database.","pos":[0,94]}]}],"pos":[11204,11299],"yaml":true,"extradata":"MT"},{"content":"<xref href=\"System.IO.Stream\"></xref> that contains the workflow definition.","nodes":[{"pos":[0,76],"content":"<ph id=\"ph1\">&lt;xref href=\"System.IO.Stream\"&gt;&lt;/xref&gt;</ph> that contains the workflow definition.","source":"<xref href=\"System.IO.Stream\"></xref> that contains the workflow definition."}],"pos":[11500,11577],"yaml":true},{"content":"An array of type <xref href=\"System.Uri\"></xref> that contains the base addresses for the hosted service.","nodes":[{"pos":[0,105],"content":"An array of type <ph id=\"ph1\">&lt;xref href=\"System.Uri\"&gt;&lt;/xref&gt;</ph> that contains the base addresses for the hosted service.","source":"An array of type <xref href=\"System.Uri\"></xref> that contains the base addresses for the hosted service."}],"pos":[11643,11749],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.ServiceModel.WorkflowServiceHost\"></xref> class using a path to the workflow definition and the base addresses of the service specified.","nodes":[{"pos":[0,189],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.WorkflowServiceHost\"&gt;&lt;/xref&gt;</ph> class using a path to the workflow definition and the base addresses of the service specified.","source":"Initializes a new instance of the <xref href=\"System.ServiceModel.WorkflowServiceHost\"></xref> class using a path to the workflow definition and the base addresses of the service specified."}],"pos":[12929,13119],"yaml":true},{"content":"Use this overload when the workflow definition is in the form of windows file.","nodes":[{"pos":[0,78],"content":"Use this overload when the workflow definition is in the form of windows file.","nodes":[{"content":"Use this overload when the workflow definition is in the form of windows file.","pos":[0,78]}]}],"pos":[13130,13209],"yaml":true,"extradata":"MT"},{"content":"A string that contains the path to the workflow definition file.","nodes":[{"pos":[0,64],"content":"A string that contains the path to the workflow definition file.","nodes":[{"content":"A string that contains the path to the workflow definition file.","pos":[0,64]}]}],"pos":[13405,13470],"yaml":true},{"content":"An array of type <xref href=\"System.Uri\"></xref> that contains the base addresses for the hosted service.","nodes":[{"pos":[0,105],"content":"An array of type <ph id=\"ph1\">&lt;xref href=\"System.Uri\"&gt;&lt;/xref&gt;</ph> that contains the base addresses for the hosted service.","source":"An array of type <xref href=\"System.Uri\"></xref> that contains the base addresses for the hosted service."}],"pos":[13536,13642],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.ServiceModel.WorkflowServiceHost\"></xref> class using a workflow type and the base addresses of the service specified.","nodes":[{"pos":[0,171],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.WorkflowServiceHost\"&gt;&lt;/xref&gt;</ph> class using a workflow type and the base addresses of the service specified.","source":"Initializes a new instance of the <xref href=\"System.ServiceModel.WorkflowServiceHost\"></xref> class using a workflow type and the base addresses of the service specified."}],"pos":[14810,14982],"yaml":true},{"content":"Use this overload when the workflow is defined as compiled type.","nodes":[{"pos":[0,64],"content":"Use this overload when the workflow is defined as compiled type.","nodes":[{"content":"Use this overload when the workflow is defined as compiled type.","pos":[0,64]}]}],"pos":[14993,15058],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.Type\"></xref> of the workflow instance.","nodes":[{"pos":[0,62],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph> of the workflow instance.","source":"The <xref href=\"System.Type\"></xref> of the workflow instance."}],"pos":[15230,15293],"yaml":true},{"content":"An array of type <xref href=\"System.Uri\"></xref> that contains the base addresses for the hosted service.","nodes":[{"pos":[0,105],"content":"An array of type <ph id=\"ph1\">&lt;xref href=\"System.Uri\"&gt;&lt;/xref&gt;</ph> that contains the base addresses for the hosted service.","source":"An array of type <xref href=\"System.Uri\"></xref> that contains the base addresses for the hosted service."}],"pos":[15359,15465],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.ServiceModel.WorkflowServiceHost\"></xref> class using a byte stream that contains the workflow definition, a byte stream that contains the workflow rules definition, and the base addresses of the service specified.","nodes":[{"pos":[0,267],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.WorkflowServiceHost\"&gt;&lt;/xref&gt;</ph> class using a byte stream that contains the workflow definition, a byte stream that contains the workflow rules definition, and the base addresses of the service specified.","source":"Initializes a new instance of the <xref href=\"System.ServiceModel.WorkflowServiceHost\"></xref> class using a byte stream that contains the workflow definition, a byte stream that contains the workflow rules definition, and the base addresses of the service specified."}],"pos":[16729,16997],"yaml":true},{"content":"Use this overload when the workflow definition and rules definition are stored in secured storage, such as a database.","nodes":[{"pos":[0,118],"content":"Use this overload when the workflow definition and rules definition are stored in secured storage, such as a database.","nodes":[{"content":"Use this overload when the workflow definition and rules definition are stored in secured storage, such as a database.","pos":[0,118]}]}],"pos":[17008,17127],"yaml":true,"extradata":"MT"},{"content":"<xref href=\"System.IO.Stream\"></xref> that contains the workflow definition.","nodes":[{"pos":[0,76],"content":"<ph id=\"ph1\">&lt;xref href=\"System.IO.Stream\"&gt;&lt;/xref&gt;</ph> that contains the workflow definition.","source":"<xref href=\"System.IO.Stream\"></xref> that contains the workflow definition."}],"pos":[17361,17438],"yaml":true},{"content":"<xref href=\"System.IO.Stream\"></xref> that contains the workflow rules definition.","nodes":[{"pos":[0,82],"content":"<ph id=\"ph1\">&lt;xref href=\"System.IO.Stream\"&gt;&lt;/xref&gt;</ph> that contains the workflow rules definition.","source":"<xref href=\"System.IO.Stream\"></xref> that contains the workflow rules definition."}],"pos":[17511,17594],"yaml":true},{"content":"An array of type <xref href=\"System.Uri\"></xref> that contains the base addresses for the hosted service.","nodes":[{"pos":[0,105],"content":"An array of type <ph id=\"ph1\">&lt;xref href=\"System.Uri\"&gt;&lt;/xref&gt;</ph> that contains the base addresses for the hosted service.","source":"An array of type <xref href=\"System.Uri\"></xref> that contains the base addresses for the hosted service."}],"pos":[17660,17766],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.ServiceModel.WorkflowServiceHost\"></xref> class using a path to the workflow definition, a path to the workflow rules definition, and the base addresses of the service specified.","nodes":[{"pos":[0,231],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.WorkflowServiceHost\"&gt;&lt;/xref&gt;</ph> class using a path to the workflow definition, a path to the workflow rules definition, and the base addresses of the service specified.","source":"Initializes a new instance of the <xref href=\"System.ServiceModel.WorkflowServiceHost\"></xref> class using a path to the workflow definition, a path to the workflow rules definition, and the base addresses of the service specified."}],"pos":[19012,19244],"yaml":true},{"content":"Use this overload when the workflow definition and rules definition are in the form of windows files.","nodes":[{"pos":[0,101],"content":"Use this overload when the workflow definition and rules definition are in the form of windows files.","nodes":[{"content":"Use this overload when the workflow definition and rules definition are in the form of windows files.","pos":[0,101]}]}],"pos":[19255,19357],"yaml":true,"extradata":"MT"},{"content":"A string that contains the path to the workflow definition file.","nodes":[{"pos":[0,64],"content":"A string that contains the path to the workflow definition file.","nodes":[{"content":"A string that contains the path to the workflow definition file.","pos":[0,64]}]}],"pos":[19580,19645],"yaml":true},{"content":"A string that contains the path to the workflow rules definition file.","nodes":[{"pos":[0,70],"content":"A string that contains the path to the workflow rules definition file.","nodes":[{"content":"A string that contains the path to the workflow rules definition file.","pos":[0,70]}]}],"pos":[19719,19790],"yaml":true},{"content":"An array of type <xref href=\"System.Uri\"></xref> that contains the base addresses for the hosted service.","nodes":[{"pos":[0,105],"content":"An array of type <ph id=\"ph1\">&lt;xref href=\"System.Uri\"&gt;&lt;/xref&gt;</ph> that contains the base addresses for the hosted service.","source":"An array of type <xref href=\"System.Uri\"></xref> that contains the base addresses for the hosted service."}],"pos":[19856,19962],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.ServiceModel.WorkflowServiceHost\"></xref> class using a byte stream that contains the workflow definition, a byte stream that contains the workflow rules definition, a type provider for custom activity types, and the base addresses of the service specified.","nodes":[{"pos":[0,310],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.WorkflowServiceHost\"&gt;&lt;/xref&gt;</ph> class using a byte stream that contains the workflow definition, a byte stream that contains the workflow rules definition, a type provider for custom activity types, and the base addresses of the service specified.","source":"Initializes a new instance of the <xref href=\"System.ServiceModel.WorkflowServiceHost\"></xref> class using a byte stream that contains the workflow definition, a byte stream that contains the workflow rules definition, a type provider for custom activity types, and the base addresses of the service specified."}],"pos":[21433,21744],"yaml":true},{"content":"Use this overload when your compiled workflow references custom types defined in a separate assembly.","nodes":[{"pos":[0,101],"content":"Use this overload when your compiled workflow references custom types defined in a separate assembly.","nodes":[{"content":"Use this overload when your compiled workflow references custom types defined in a separate assembly.","pos":[0,101]}]}],"pos":[21755,21857],"yaml":true,"extradata":"MT"},{"content":"<xref href=\"System.IO.Stream\"></xref> that contains the workflow definition.","nodes":[{"pos":[0,76],"content":"<ph id=\"ph1\">&lt;xref href=\"System.IO.Stream\"&gt;&lt;/xref&gt;</ph> that contains the workflow definition.","source":"<xref href=\"System.IO.Stream\"></xref> that contains the workflow definition."}],"pos":[22159,22236],"yaml":true},{"content":"<xref href=\"System.IO.Stream\"></xref> that contains the workflow rules definition.","nodes":[{"pos":[0,82],"content":"<ph id=\"ph1\">&lt;xref href=\"System.IO.Stream\"&gt;&lt;/xref&gt;</ph> that contains the workflow rules definition.","source":"<xref href=\"System.IO.Stream\"></xref> that contains the workflow rules definition."}],"pos":[22309,22392],"yaml":true},{"content":"A type provider that implements the <xref href=\"System.Workflow.ComponentModel.Compiler.ITypeProvider\"></xref> interface.","nodes":[{"pos":[0,121],"content":"A type provider that implements the <ph id=\"ph1\">&lt;xref href=\"System.Workflow.ComponentModel.Compiler.ITypeProvider\"&gt;&lt;/xref&gt;</ph> interface.","source":"A type provider that implements the <xref href=\"System.Workflow.ComponentModel.Compiler.ITypeProvider\"></xref> interface."}],"pos":[22500,22622],"yaml":true},{"content":"An array of type <xref href=\"System.Uri\"></xref> that contains the base addresses for the hosted service.","nodes":[{"pos":[0,105],"content":"An array of type <ph id=\"ph1\">&lt;xref href=\"System.Uri\"&gt;&lt;/xref&gt;</ph> that contains the base addresses for the hosted service.","source":"An array of type <xref href=\"System.Uri\"></xref> that contains the base addresses for the hosted service."}],"pos":[22688,22794],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.ServiceModel.WorkflowServiceHost\"></xref> class using a path to the workflow definition, a path to the workflow rules definition, a type provider for custom activity types, and the base addresses of the service specified.","nodes":[{"pos":[0,274],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.WorkflowServiceHost\"&gt;&lt;/xref&gt;</ph> class using a path to the workflow definition, a path to the workflow rules definition, a type provider for custom activity types, and the base addresses of the service specified.","source":"Initializes a new instance of the <xref href=\"System.ServiceModel.WorkflowServiceHost\"></xref> class using a path to the workflow definition, a path to the workflow rules definition, a type provider for custom activity types, and the base addresses of the service specified."}],"pos":[24247,24522],"yaml":true},{"content":"Use this overload when you have your workflow defined in a workflow markup file (.xoml) and it references custom types defined in a separate assembly.","nodes":[{"pos":[0,150],"content":"Use this overload when you have your workflow defined in a workflow markup file (.xoml) and it references custom types defined in a separate assembly.","nodes":[{"content":"Use this overload when you have your workflow defined in a workflow markup file (.xoml) and it references custom types defined in a separate assembly.","pos":[0,150]}]}],"pos":[24533,24684],"yaml":true,"extradata":"MT"},{"content":"A string that contains the path to the workflow definition file.","nodes":[{"pos":[0,64],"content":"A string that contains the path to the workflow definition file.","nodes":[{"content":"A string that contains the path to the workflow definition file.","pos":[0,64]}]}],"pos":[24975,25040],"yaml":true},{"content":"A string that contains the path to the workflow rules definition file.","nodes":[{"pos":[0,70],"content":"A string that contains the path to the workflow rules definition file.","nodes":[{"content":"A string that contains the path to the workflow rules definition file.","pos":[0,70]}]}],"pos":[25114,25185],"yaml":true},{"content":"A type provider that implements the <xref href=\"System.Workflow.ComponentModel.Compiler.ITypeProvider\"></xref> interface.","nodes":[{"pos":[0,121],"content":"A type provider that implements the <ph id=\"ph1\">&lt;xref href=\"System.Workflow.ComponentModel.Compiler.ITypeProvider\"&gt;&lt;/xref&gt;</ph> interface.","source":"A type provider that implements the <xref href=\"System.Workflow.ComponentModel.Compiler.ITypeProvider\"></xref> interface."}],"pos":[25293,25415],"yaml":true},{"content":"An array of type <xref href=\"System.Uri\"></xref> that contains the base addresses for the hosted service.","nodes":[{"pos":[0,105],"content":"An array of type <ph id=\"ph1\">&lt;xref href=\"System.Uri\"&gt;&lt;/xref&gt;</ph> that contains the base addresses for the hosted service.","source":"An array of type <xref href=\"System.Uri\"></xref> that contains the base addresses for the hosted service."}],"pos":[25481,25587],"yaml":true},{"content":"Adds a service endpoint for the workflow service using the specified contract, binding, and endpoint address.","nodes":[{"pos":[0,109],"content":"Adds a service endpoint for the workflow service using the specified contract, binding, and endpoint address.","nodes":[{"content":"Adds a service endpoint for the workflow service using the specified contract, binding, and endpoint address.","pos":[0,109]}]}],"pos":[26928,27038],"yaml":true},{"content":"The <xref href=\"System.Type\"></xref> of contract for the endpoint added.","nodes":[{"pos":[0,72],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph> of contract for the endpoint added.","source":"The <xref href=\"System.Type\"></xref> of contract for the endpoint added."}],"pos":[27314,27387],"yaml":true},{"content":"The <xref href=\"System.ServiceModel.Channels.Binding\"></xref> for the endpoint added.","nodes":[{"pos":[0,85],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Channels.Binding\"&gt;&lt;/xref&gt;</ph> for the endpoint added.","source":"The <xref href=\"System.ServiceModel.Channels.Binding\"></xref> for the endpoint added."}],"pos":[27473,27559],"yaml":true},{"content":"The address for the endpoint added.","nodes":[{"pos":[0,35],"content":"The address for the endpoint added.","nodes":[{"content":"The address for the endpoint added.","pos":[0,35]}]}],"pos":[27622,27658],"yaml":true},{"content":"The <xref href=\"System.ServiceModel.Description.ServiceEndpoint\"></xref> added to the workflow service.","nodes":[{"pos":[0,103],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Description.ServiceEndpoint\"&gt;&lt;/xref&gt;</ph> added to the workflow service.","source":"The <xref href=\"System.ServiceModel.Description.ServiceEndpoint\"></xref> added to the workflow service."}],"pos":[27749,27853],"yaml":true},{"content":"<code>address</code> is `null`.","nodes":[{"pos":[0,31],"content":"<code>address</code> is `null`.","nodes":[{"content":"is <ph id=\"ph1\">`null`</ph>.","pos":[21,31],"source":" is `null`."}]}],"pos":[28041,28073],"yaml":true},{"content":"The workflow service does not implement <code>implementedContract</code>.","nodes":[{"pos":[0,73],"content":"The workflow service does not implement <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">implementedContract</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"The workflow service does not implement <code>implementedContract</code>."}],"pos":[28183,28257],"yaml":true},{"content":"Adds a service endpoint to the workflow service with a specified contract, binding, and URI that contains the endpoint address.","nodes":[{"pos":[0,127],"content":"Adds a service endpoint to the workflow service with a specified contract, binding, and URI that contains the endpoint address.","nodes":[{"content":"Adds a service endpoint to the workflow service with a specified contract, binding, and URI that contains the endpoint address.","pos":[0,127]}]}],"pos":[29504,29632],"yaml":true},{"content":"The <xref href=\"System.Type\"></xref> of contract for the endpoint added.","nodes":[{"pos":[0,72],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph> of contract for the endpoint added.","source":"The <xref href=\"System.Type\"></xref> of contract for the endpoint added."}],"pos":[29905,29978],"yaml":true},{"content":"The <xref href=\"System.ServiceModel.Channels.Binding\"></xref> for the endpoint added.","nodes":[{"pos":[0,85],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Channels.Binding\"&gt;&lt;/xref&gt;</ph> for the endpoint added.","source":"The <xref href=\"System.ServiceModel.Channels.Binding\"></xref> for the endpoint added."}],"pos":[30064,30150],"yaml":true},{"content":"The <xref href=\"System.Uri\"></xref> that contains the address for the endpoint added.","nodes":[{"pos":[0,85],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Uri\"&gt;&lt;/xref&gt;</ph> that contains the address for the endpoint added.","source":"The <xref href=\"System.Uri\"></xref> that contains the address for the endpoint added."}],"pos":[30210,30296],"yaml":true},{"content":"The <xref href=\"System.ServiceModel.Description.ServiceEndpoint\"></xref> added to the workflow service.","nodes":[{"pos":[0,103],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Description.ServiceEndpoint\"&gt;&lt;/xref&gt;</ph> added to the workflow service.","source":"The <xref href=\"System.ServiceModel.Description.ServiceEndpoint\"></xref> added to the workflow service."}],"pos":[30387,30491],"yaml":true},{"content":"<code>address</code> is `null`.","nodes":[{"pos":[0,31],"content":"<code>address</code> is `null`.","nodes":[{"content":"is <ph id=\"ph1\">`null`</ph>.","pos":[21,31],"source":" is `null`."}]}],"pos":[30679,30711],"yaml":true},{"content":"The workflow service does not implement <code>implementedContract</code>.","nodes":[{"pos":[0,73],"content":"The workflow service does not implement <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">implementedContract</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"The workflow service does not implement <code>implementedContract</code>."}],"pos":[30821,30895],"yaml":true},{"content":"Adds a service endpoint to the workflow service with a specified contract, a binding, an endpoint address, and a URI on which the service listens.","nodes":[{"pos":[0,146],"content":"Adds a service endpoint to the workflow service with a specified contract, a binding, an endpoint address, and a URI on which the service listens.","nodes":[{"content":"Adds a service endpoint to the workflow service with a specified contract, a binding, an endpoint address, and a URI on which the service listens.","pos":[0,146]}]}],"pos":[32208,32355],"yaml":true},{"content":"The <xref href=\"System.Type\"></xref> of contract for the endpoint added.","nodes":[{"pos":[0,72],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph> of contract for the endpoint added.","source":"The <xref href=\"System.Type\"></xref> of contract for the endpoint added."}],"pos":[32646,32719],"yaml":true},{"content":"The <xref href=\"System.ServiceModel.Channels.Binding\"></xref> for the endpoint added.","nodes":[{"pos":[0,85],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Channels.Binding\"&gt;&lt;/xref&gt;</ph> for the endpoint added.","source":"The <xref href=\"System.ServiceModel.Channels.Binding\"></xref> for the endpoint added."}],"pos":[32805,32891],"yaml":true},{"content":"The endpoint address for the service.","nodes":[{"pos":[0,37],"content":"The endpoint address for the service.","nodes":[{"content":"The endpoint address for the service.","pos":[0,37]}]}],"pos":[32954,32992],"yaml":true},{"content":"The <xref href=\"System.Uri\"></xref> on which the service endpoints can listen.","nodes":[{"pos":[0,78],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Uri\"&gt;&lt;/xref&gt;</ph> on which the service endpoints can listen.","source":"The <xref href=\"System.Uri\"></xref> on which the service endpoints can listen."}],"pos":[33054,33133],"yaml":true},{"content":"The <xref href=\"System.ServiceModel.Description.ServiceEndpoint\"></xref> added to the workflow service.","nodes":[{"pos":[0,103],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Description.ServiceEndpoint\"&gt;&lt;/xref&gt;</ph> added to the workflow service.","source":"The <xref href=\"System.ServiceModel.Description.ServiceEndpoint\"></xref> added to the workflow service."}],"pos":[33224,33328],"yaml":true},{"content":"<code>address</code> is `null`.","nodes":[{"pos":[0,31],"content":"<code>address</code> is `null`.","nodes":[{"content":"is <ph id=\"ph1\">`null`</ph>.","pos":[21,31],"source":" is `null`."}]}],"pos":[33516,33548],"yaml":true},{"content":"<xref href=\"System.ServiceModel.ServiceContractAttribute\"></xref> not specified for <code>implementedContract</code>.","nodes":[{"pos":[0,117],"content":"<ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.ServiceContractAttribute\"&gt;&lt;/xref&gt;</ph> not specified for <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">implementedContract</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"<xref href=\"System.ServiceModel.ServiceContractAttribute\"></xref> not specified for <code>implementedContract</code>."}],"pos":[33658,33776],"yaml":true},{"content":"Adds a service endpoint to the workflow service with a specified contract, a binding, a URI that contains the endpoint address, and a URI on which the service listens.","nodes":[{"pos":[0,167],"content":"Adds a service endpoint to the workflow service with a specified contract, a binding, a URI that contains the endpoint address, and a URI on which the service listens.","nodes":[{"content":"Adds a service endpoint to the workflow service with a specified contract, a binding, a URI that contains the endpoint address, and a URI on which the service listens.","pos":[0,167]}]}],"pos":[35071,35239],"yaml":true},{"content":"The <xref href=\"System.Type\"></xref> of contract for the endpoint added.","nodes":[{"pos":[0,72],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph> of contract for the endpoint added.","source":"The <xref href=\"System.Type\"></xref> of contract for the endpoint added."}],"pos":[35527,35600],"yaml":true},{"content":"The <xref href=\"System.ServiceModel.Channels.Binding\"></xref> for the endpoint added.","nodes":[{"pos":[0,85],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Channels.Binding\"&gt;&lt;/xref&gt;</ph> for the endpoint added.","source":"The <xref href=\"System.ServiceModel.Channels.Binding\"></xref> for the endpoint added."}],"pos":[35686,35772],"yaml":true},{"content":"The <xref href=\"System.Uri\"></xref> that contains the address for the endpoint added.","nodes":[{"pos":[0,85],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Uri\"&gt;&lt;/xref&gt;</ph> that contains the address for the endpoint added.","source":"The <xref href=\"System.Uri\"></xref> that contains the address for the endpoint added."}],"pos":[35832,35918],"yaml":true},{"content":"The <xref href=\"System.Uri\"></xref> on which the service endpoints can listen.","nodes":[{"pos":[0,78],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Uri\"&gt;&lt;/xref&gt;</ph> on which the service endpoints can listen.","source":"The <xref href=\"System.Uri\"></xref> on which the service endpoints can listen."}],"pos":[35980,36059],"yaml":true},{"content":"The <xref href=\"System.ServiceModel.Description.ServiceEndpoint\"></xref> added to the workflow service.","nodes":[{"pos":[0,103],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Description.ServiceEndpoint\"&gt;&lt;/xref&gt;</ph> added to the workflow service.","source":"The <xref href=\"System.ServiceModel.Description.ServiceEndpoint\"></xref> added to the workflow service."}],"pos":[36150,36254],"yaml":true},{"content":"<code>address</code> is `null`.","nodes":[{"pos":[0,31],"content":"<code>address</code> is `null`.","nodes":[{"content":"is <ph id=\"ph1\">`null`</ph>.","pos":[21,31],"source":" is `null`."}]}],"pos":[36442,36474],"yaml":true},{"content":"<xref href=\"System.ServiceModel.ServiceContractAttribute\"></xref> not specified for <code>implementedContract</code>.","nodes":[{"pos":[0,117],"content":"<ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.ServiceContractAttribute\"&gt;&lt;/xref&gt;</ph> not specified for <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">implementedContract</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"<xref href=\"System.ServiceModel.ServiceContractAttribute\"></xref> not specified for <code>implementedContract</code>."}],"pos":[36584,36702],"yaml":true},{"content":"Creates a description of the workflow service.","nodes":[{"pos":[0,46],"content":"Creates a description of the workflow service.","nodes":[{"content":"Creates a description of the workflow service.","pos":[0,46]}]}],"pos":[38147,38194],"yaml":true},{"content":"When this method returns, the <xref href=\"System.Collections.Generic.IDictionary`2\"></xref> object contains the keyed-contracts of the hosted service that have been implemented.","nodes":[{"pos":[0,177],"content":"When this method returns, the <ph id=\"ph1\">&lt;xref href=\"System.Collections.Generic.IDictionary`2\"&gt;&lt;/xref&gt;</ph> object contains the keyed-contracts of the hosted service that have been implemented.","source":"When this method returns, the <xref href=\"System.Collections.Generic.IDictionary`2\"></xref> object contains the keyed-contracts of the hosted service that have been implemented."}],"pos":[38616,38794],"yaml":true},{"content":"A <xref href=\"System.ServiceModel.Description.ServiceDescription\"></xref> of the workflow service.","nodes":[{"pos":[0,98],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Description.ServiceDescription\"&gt;&lt;/xref&gt;</ph> of the workflow service.","source":"A <xref href=\"System.ServiceModel.Description.ServiceDescription\"></xref> of the workflow service."}],"pos":[38888,38987],"yaml":true},{"content":"This method is called before the <xref href=\"System.ServiceModel.WorkflowServiceHost\"></xref> is put into a closing state.","nodes":[{"pos":[0,122],"content":"This method is called before the <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.WorkflowServiceHost\"&gt;&lt;/xref&gt;</ph> is put into a closing state.","source":"This method is called before the <xref href=\"System.ServiceModel.WorkflowServiceHost\"></xref> is put into a closing state."}],"pos":[40031,40154],"yaml":true},{"content":"In the default implementation, <xref:System.ServiceModel.WorkflowServiceHost> calls <xref:System.Workflow.Runtime.WorkflowRuntime.StopRuntime%2A> before calling <xref:System.ServiceModel.Channels.CommunicationObject.OnClosing%2A?displayProperty=fullName>. This means the workflow runtime will shut down before the service host closes.","nodes":[{"pos":[0,334],"content":"In the default implementation, <xref:System.ServiceModel.WorkflowServiceHost> calls <xref:System.Workflow.Runtime.WorkflowRuntime.StopRuntime%2A> before calling <xref:System.ServiceModel.Channels.CommunicationObject.OnClosing%2A?displayProperty=fullName>. This means the workflow runtime will shut down before the service host closes.","nodes":[{"content":"In the default implementation, <xref:System.ServiceModel.WorkflowServiceHost> calls <xref:System.Workflow.Runtime.WorkflowRuntime.StopRuntime%2A> before calling <xref:System.ServiceModel.Channels.CommunicationObject.OnClosing%2A?displayProperty=fullName>. This means the workflow runtime will shut down before the service host closes.","pos":[0,334],"nodes":[{"content":"In the default implementation, <ph id=\"ph1\">&lt;xref:System.ServiceModel.WorkflowServiceHost&gt;</ph> calls <ph id=\"ph2\">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.StopRuntime%2A&gt;</ph> before calling <ph id=\"ph3\">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnClosing%2A?displayProperty=fullName&gt;</ph>.","pos":[0,255],"source":"In the default implementation, <xref:System.ServiceModel.WorkflowServiceHost> calls <xref:System.Workflow.Runtime.WorkflowRuntime.StopRuntime%2A> before calling <xref:System.ServiceModel.Channels.CommunicationObject.OnClosing%2A?displayProperty=fullName>."},{"content":"This means the workflow runtime will shut down before the service host closes.","pos":[256,334]}]}]}],"pos":[40165,40500],"yaml":true,"extradata":"MT"}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.ServiceModel.WorkflowServiceHost\n  commentId: T:System.ServiceModel.WorkflowServiceHost\n  id: WorkflowServiceHost\n  children:\n  - System.ServiceModel.WorkflowServiceHost.#ctor\n  - System.ServiceModel.WorkflowServiceHost.#ctor(System.IO.Stream,System.Uri[])\n  - System.ServiceModel.WorkflowServiceHost.#ctor(System.String,System.Uri[])\n  - System.ServiceModel.WorkflowServiceHost.#ctor(System.Type,System.Uri[])\n  - System.ServiceModel.WorkflowServiceHost.#ctor(System.IO.Stream,System.IO.Stream,System.Uri[])\n  - System.ServiceModel.WorkflowServiceHost.#ctor(System.String,System.String,System.Uri[])\n  - System.ServiceModel.WorkflowServiceHost.#ctor(System.IO.Stream,System.IO.Stream,System.Workflow.ComponentModel.Compiler.ITypeProvider,System.Uri[])\n  - System.ServiceModel.WorkflowServiceHost.#ctor(System.String,System.String,System.Workflow.ComponentModel.Compiler.ITypeProvider,System.Uri[])\n  - System.ServiceModel.WorkflowServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.String)\n  - System.ServiceModel.WorkflowServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.Uri)\n  - System.ServiceModel.WorkflowServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.String,System.Uri)\n  - System.ServiceModel.WorkflowServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.Uri,System.Uri)\n  - System.ServiceModel.WorkflowServiceHost.CreateDescription(System.Collections.Generic.IDictionary{System.String,System.ServiceModel.Description.ContractDescription}@)\n  - System.ServiceModel.WorkflowServiceHost.OnClosing\n  langs:\n  - csharp\n  name: WorkflowServiceHost\n  nameWithType: WorkflowServiceHost\n  fullName: System.ServiceModel.WorkflowServiceHost\n  type: Class\n  assemblies:\n  - System.WorkflowServices\n  namespace: System.ServiceModel\n  summary: Provides host for workflow-based services.\n  remarks: \"Implements the host used by the [!INCLUDE[indigo1](~/includes/indigo1-md.md)] service model programming model.  \\n  \\n Use the <xref:System.ServiceModel.WorkflowServiceHost> class to configure and expose a workflow as service for use by client applications when you are not using Internet Information Services (IIS) or Windows Activation Services (WAS) to expose a service. Both IIS and WAS interact with a <xref:System.ServiceModel.WorkflowServiceHost> object on your behalf.  \\n  \\n To expose a workflow as service for use by callers, WCF requires a complete service description (represented by the <xref:System.ServiceModel.Description.ServiceDescription> class). The <xref:System.ServiceModel.WorkflowServiceHost> class creates a <xref:System.ServiceModel.Description.ServiceDescription> from the workflow service type and configuration information and then uses that description to create <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> objects for each endpoint in the description.  \\n  \\n Use a <xref:System.ServiceModel.WorkflowServiceHost> object to load a workflow service, configure endpoints, apply security settings, and start listeners to handle incoming requests.\"\n  syntax:\n    content: >-\n      [System.Obsolete(\"The WF3 types are deprecated.  Instead, please use the new WF4 types from System.Activities.*\")]\n\n      public class WorkflowServiceHost : System.ServiceModel.ServiceHostBase\n  inheritance:\n  - System.Object\n  - System.ServiceModel.Channels.CommunicationObject\n  - System.ServiceModel.ServiceHostBase\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  - System.ServiceModel.Channels.CommunicationObject.Abort\n  - System.ServiceModel.Channels.CommunicationObject.BeginClose(System.AsyncCallback,System.Object)\n  - System.ServiceModel.Channels.CommunicationObject.BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)\n  - System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.AsyncCallback,System.Object)\n  - System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)\n  - System.ServiceModel.Channels.CommunicationObject.Close\n  - System.ServiceModel.Channels.CommunicationObject.Close(System.TimeSpan)\n  - System.ServiceModel.Channels.CommunicationObject.Closed\n  - System.ServiceModel.Channels.CommunicationObject.Closing\n  - System.ServiceModel.Channels.CommunicationObject.EndClose(System.IAsyncResult)\n  - System.ServiceModel.Channels.CommunicationObject.EndOpen(System.IAsyncResult)\n  - System.ServiceModel.Channels.CommunicationObject.Fault\n  - System.ServiceModel.Channels.CommunicationObject.Faulted\n  - System.ServiceModel.Channels.CommunicationObject.GetCommunicationObjectType\n  - System.ServiceModel.Channels.CommunicationObject.IsDisposed\n  - System.ServiceModel.Channels.CommunicationObject.OnFaulted\n  - System.ServiceModel.Channels.CommunicationObject.OnOpening\n  - System.ServiceModel.Channels.CommunicationObject.Open\n  - System.ServiceModel.Channels.CommunicationObject.Open(System.TimeSpan)\n  - System.ServiceModel.Channels.CommunicationObject.Opened\n  - System.ServiceModel.Channels.CommunicationObject.Opening\n  - System.ServiceModel.Channels.CommunicationObject.State\n  - System.ServiceModel.Channels.CommunicationObject.ThisLock\n  - System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposed\n  - System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposedOrImmutable\n  - System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposedOrNotOpen\n  - System.ServiceModel.ServiceHostBase.AddBaseAddress(System.Uri)\n  - System.ServiceModel.ServiceHostBase.AddDefaultEndpoints\n  - System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.ServiceModel.Description.ServiceEndpoint)\n  - System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.String)\n  - System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.String,System.Uri)\n  - System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.Uri)\n  - System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.Uri,System.Uri)\n  - System.ServiceModel.ServiceHostBase.ApplyConfiguration\n  - System.ServiceModel.ServiceHostBase.Authentication\n  - System.ServiceModel.ServiceHostBase.Authorization\n  - System.ServiceModel.ServiceHostBase.BaseAddresses\n  - System.ServiceModel.ServiceHostBase.ChannelDispatchers\n  - System.ServiceModel.ServiceHostBase.CloseTimeout\n  - System.ServiceModel.ServiceHostBase.Credentials\n  - System.ServiceModel.ServiceHostBase.DefaultCloseTimeout\n  - System.ServiceModel.ServiceHostBase.DefaultOpenTimeout\n  - System.ServiceModel.ServiceHostBase.Description\n  - System.ServiceModel.ServiceHostBase.Extensions\n  - System.ServiceModel.ServiceHostBase.ImplementedContracts\n  - System.ServiceModel.ServiceHostBase.IncrementManualFlowControlLimit(System.Int32)\n  - System.ServiceModel.ServiceHostBase.InitializeDescription(System.ServiceModel.UriSchemeKeyedCollection)\n  - System.ServiceModel.ServiceHostBase.InitializeRuntime\n  - System.ServiceModel.ServiceHostBase.LoadConfigurationSection(System.ServiceModel.Configuration.ServiceElement)\n  - System.ServiceModel.ServiceHostBase.ManualFlowControlLimit\n  - System.ServiceModel.ServiceHostBase.OnAbort\n  - System.ServiceModel.ServiceHostBase.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)\n  - System.ServiceModel.ServiceHostBase.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)\n  - System.ServiceModel.ServiceHostBase.OnClose(System.TimeSpan)\n  - System.ServiceModel.ServiceHostBase.OnClosed\n  - System.ServiceModel.ServiceHostBase.OnEndClose(System.IAsyncResult)\n  - System.ServiceModel.ServiceHostBase.OnEndOpen(System.IAsyncResult)\n  - System.ServiceModel.ServiceHostBase.OnOpen(System.TimeSpan)\n  - System.ServiceModel.ServiceHostBase.OnOpened\n  - System.ServiceModel.ServiceHostBase.OpenTimeout\n  - System.ServiceModel.ServiceHostBase.ReleasePerformanceCounters\n  - System.ServiceModel.ServiceHostBase.SetEndpointAddress(System.ServiceModel.Description.ServiceEndpoint,System.String)\n  - System.ServiceModel.ServiceHostBase.System#IDisposable#Dispose\n  - System.ServiceModel.ServiceHostBase.UnknownMessageReceived\n  attributes:\n  - type: System.ObsoleteAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/WorkflowServiceHost.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.WorkflowServiceHost.#ctor\n  commentId: M:System.ServiceModel.WorkflowServiceHost.#ctor\n  id: '#ctor'\n  parent: System.ServiceModel.WorkflowServiceHost\n  langs:\n  - csharp\n  name: WorkflowServiceHost()\n  nameWithType: WorkflowServiceHost.WorkflowServiceHost()\n  fullName: WorkflowServiceHost.WorkflowServiceHost()\n  type: Constructor\n  assemblies:\n  - System.WorkflowServices\n  namespace: System.ServiceModel\n  summary: Initializes a new instance of the <xref href=\"System.ServiceModel.WorkflowServiceHost\"></xref> class.\n  syntax:\n    content: protected WorkflowServiceHost ();\n    parameters: []\n  overload: System.ServiceModel.WorkflowServiceHost.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/WorkflowServiceHost.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.WorkflowServiceHost.#ctor(System.IO.Stream,System.Uri[])\n  commentId: M:System.ServiceModel.WorkflowServiceHost.#ctor(System.IO.Stream,System.Uri[])\n  id: '#ctor(System.IO.Stream,System.Uri[])'\n  parent: System.ServiceModel.WorkflowServiceHost\n  langs:\n  - csharp\n  name: WorkflowServiceHost(Stream, Uri[])\n  nameWithType: WorkflowServiceHost.WorkflowServiceHost(Stream, Uri[])\n  fullName: WorkflowServiceHost.WorkflowServiceHost(Stream, Uri[])\n  type: Constructor\n  assemblies:\n  - System.WorkflowServices\n  namespace: System.ServiceModel\n  summary: Initializes a new instance of the <xref href=\"System.ServiceModel.WorkflowServiceHost\"></xref> class using a byte stream that contains the workflow definition and the base addresses of the service specified.\n  remarks: Use this overload if the workflow definition is stored in secured storage, such as a database.\n  syntax:\n    content: public WorkflowServiceHost (System.IO.Stream workflowDefinition, Uri[] baseAddress);\n    parameters:\n    - id: workflowDefinition\n      type: System.IO.Stream\n      description: <xref href=\"System.IO.Stream\"></xref> that contains the workflow definition.\n    - id: baseAddress\n      type: System.Uri[]\n      description: An array of type <xref href=\"System.Uri\"></xref> that contains the base addresses for the hosted service.\n  overload: System.ServiceModel.WorkflowServiceHost.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/WorkflowServiceHost.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.WorkflowServiceHost.#ctor(System.String,System.Uri[])\n  commentId: M:System.ServiceModel.WorkflowServiceHost.#ctor(System.String,System.Uri[])\n  id: '#ctor(System.String,System.Uri[])'\n  parent: System.ServiceModel.WorkflowServiceHost\n  langs:\n  - csharp\n  name: WorkflowServiceHost(String, Uri[])\n  nameWithType: WorkflowServiceHost.WorkflowServiceHost(String, Uri[])\n  fullName: WorkflowServiceHost.WorkflowServiceHost(String, Uri[])\n  type: Constructor\n  assemblies:\n  - System.WorkflowServices\n  namespace: System.ServiceModel\n  summary: Initializes a new instance of the <xref href=\"System.ServiceModel.WorkflowServiceHost\"></xref> class using a path to the workflow definition and the base addresses of the service specified.\n  remarks: Use this overload when the workflow definition is in the form of windows file.\n  syntax:\n    content: public WorkflowServiceHost (string workflowDefinitionPath, Uri[] baseAddress);\n    parameters:\n    - id: workflowDefinitionPath\n      type: System.String\n      description: A string that contains the path to the workflow definition file.\n    - id: baseAddress\n      type: System.Uri[]\n      description: An array of type <xref href=\"System.Uri\"></xref> that contains the base addresses for the hosted service.\n  overload: System.ServiceModel.WorkflowServiceHost.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/WorkflowServiceHost.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.WorkflowServiceHost.#ctor(System.Type,System.Uri[])\n  commentId: M:System.ServiceModel.WorkflowServiceHost.#ctor(System.Type,System.Uri[])\n  id: '#ctor(System.Type,System.Uri[])'\n  parent: System.ServiceModel.WorkflowServiceHost\n  langs:\n  - csharp\n  name: WorkflowServiceHost(Type, Uri[])\n  nameWithType: WorkflowServiceHost.WorkflowServiceHost(Type, Uri[])\n  fullName: WorkflowServiceHost.WorkflowServiceHost(Type, Uri[])\n  type: Constructor\n  assemblies:\n  - System.WorkflowServices\n  namespace: System.ServiceModel\n  summary: Initializes a new instance of the <xref href=\"System.ServiceModel.WorkflowServiceHost\"></xref> class using a workflow type and the base addresses of the service specified.\n  remarks: Use this overload when the workflow is defined as compiled type.\n  syntax:\n    content: public WorkflowServiceHost (Type workflowType, Uri[] baseAddress);\n    parameters:\n    - id: workflowType\n      type: System.Type\n      description: The <xref href=\"System.Type\"></xref> of the workflow instance.\n    - id: baseAddress\n      type: System.Uri[]\n      description: An array of type <xref href=\"System.Uri\"></xref> that contains the base addresses for the hosted service.\n  overload: System.ServiceModel.WorkflowServiceHost.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/WorkflowServiceHost.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.WorkflowServiceHost.#ctor(System.IO.Stream,System.IO.Stream,System.Uri[])\n  commentId: M:System.ServiceModel.WorkflowServiceHost.#ctor(System.IO.Stream,System.IO.Stream,System.Uri[])\n  id: '#ctor(System.IO.Stream,System.IO.Stream,System.Uri[])'\n  parent: System.ServiceModel.WorkflowServiceHost\n  langs:\n  - csharp\n  name: WorkflowServiceHost(Stream, Stream, Uri[])\n  nameWithType: WorkflowServiceHost.WorkflowServiceHost(Stream, Stream, Uri[])\n  fullName: WorkflowServiceHost.WorkflowServiceHost(Stream, Stream, Uri[])\n  type: Constructor\n  assemblies:\n  - System.WorkflowServices\n  namespace: System.ServiceModel\n  summary: Initializes a new instance of the <xref href=\"System.ServiceModel.WorkflowServiceHost\"></xref> class using a byte stream that contains the workflow definition, a byte stream that contains the workflow rules definition, and the base addresses of the service specified.\n  remarks: Use this overload when the workflow definition and rules definition are stored in secured storage, such as a database.\n  syntax:\n    content: public WorkflowServiceHost (System.IO.Stream workflowDefinition, System.IO.Stream ruleDefinition, Uri[] baseAddress);\n    parameters:\n    - id: workflowDefinition\n      type: System.IO.Stream\n      description: <xref href=\"System.IO.Stream\"></xref> that contains the workflow definition.\n    - id: ruleDefinition\n      type: System.IO.Stream\n      description: <xref href=\"System.IO.Stream\"></xref> that contains the workflow rules definition.\n    - id: baseAddress\n      type: System.Uri[]\n      description: An array of type <xref href=\"System.Uri\"></xref> that contains the base addresses for the hosted service.\n  overload: System.ServiceModel.WorkflowServiceHost.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/WorkflowServiceHost.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.WorkflowServiceHost.#ctor(System.String,System.String,System.Uri[])\n  commentId: M:System.ServiceModel.WorkflowServiceHost.#ctor(System.String,System.String,System.Uri[])\n  id: '#ctor(System.String,System.String,System.Uri[])'\n  parent: System.ServiceModel.WorkflowServiceHost\n  langs:\n  - csharp\n  name: WorkflowServiceHost(String, String, Uri[])\n  nameWithType: WorkflowServiceHost.WorkflowServiceHost(String, String, Uri[])\n  fullName: WorkflowServiceHost.WorkflowServiceHost(String, String, Uri[])\n  type: Constructor\n  assemblies:\n  - System.WorkflowServices\n  namespace: System.ServiceModel\n  summary: Initializes a new instance of the <xref href=\"System.ServiceModel.WorkflowServiceHost\"></xref> class using a path to the workflow definition, a path to the workflow rules definition, and the base addresses of the service specified.\n  remarks: Use this overload when the workflow definition and rules definition are in the form of windows files.\n  syntax:\n    content: public WorkflowServiceHost (string workflowDefinitionPath, string ruleDefinitionPath, Uri[] baseAddress);\n    parameters:\n    - id: workflowDefinitionPath\n      type: System.String\n      description: A string that contains the path to the workflow definition file.\n    - id: ruleDefinitionPath\n      type: System.String\n      description: A string that contains the path to the workflow rules definition file.\n    - id: baseAddress\n      type: System.Uri[]\n      description: An array of type <xref href=\"System.Uri\"></xref> that contains the base addresses for the hosted service.\n  overload: System.ServiceModel.WorkflowServiceHost.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/WorkflowServiceHost.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.WorkflowServiceHost.#ctor(System.IO.Stream,System.IO.Stream,System.Workflow.ComponentModel.Compiler.ITypeProvider,System.Uri[])\n  commentId: M:System.ServiceModel.WorkflowServiceHost.#ctor(System.IO.Stream,System.IO.Stream,System.Workflow.ComponentModel.Compiler.ITypeProvider,System.Uri[])\n  id: '#ctor(System.IO.Stream,System.IO.Stream,System.Workflow.ComponentModel.Compiler.ITypeProvider,System.Uri[])'\n  parent: System.ServiceModel.WorkflowServiceHost\n  langs:\n  - csharp\n  name: WorkflowServiceHost(Stream, Stream, ITypeProvider, Uri[])\n  nameWithType: WorkflowServiceHost.WorkflowServiceHost(Stream, Stream, ITypeProvider, Uri[])\n  fullName: WorkflowServiceHost.WorkflowServiceHost(Stream, Stream, ITypeProvider, Uri[])\n  type: Constructor\n  assemblies:\n  - System.WorkflowServices\n  namespace: System.ServiceModel\n  summary: Initializes a new instance of the <xref href=\"System.ServiceModel.WorkflowServiceHost\"></xref> class using a byte stream that contains the workflow definition, a byte stream that contains the workflow rules definition, a type provider for custom activity types, and the base addresses of the service specified.\n  remarks: Use this overload when your compiled workflow references custom types defined in a separate assembly.\n  syntax:\n    content: public WorkflowServiceHost (System.IO.Stream workflowDefinition, System.IO.Stream ruleDefinition, System.Workflow.ComponentModel.Compiler.ITypeProvider typeProvider, Uri[] baseAddress);\n    parameters:\n    - id: workflowDefinition\n      type: System.IO.Stream\n      description: <xref href=\"System.IO.Stream\"></xref> that contains the workflow definition.\n    - id: ruleDefinition\n      type: System.IO.Stream\n      description: <xref href=\"System.IO.Stream\"></xref> that contains the workflow rules definition.\n    - id: typeProvider\n      type: System.Workflow.ComponentModel.Compiler.ITypeProvider\n      description: A type provider that implements the <xref href=\"System.Workflow.ComponentModel.Compiler.ITypeProvider\"></xref> interface.\n    - id: baseAddress\n      type: System.Uri[]\n      description: An array of type <xref href=\"System.Uri\"></xref> that contains the base addresses for the hosted service.\n  overload: System.ServiceModel.WorkflowServiceHost.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/WorkflowServiceHost.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.WorkflowServiceHost.#ctor(System.String,System.String,System.Workflow.ComponentModel.Compiler.ITypeProvider,System.Uri[])\n  commentId: M:System.ServiceModel.WorkflowServiceHost.#ctor(System.String,System.String,System.Workflow.ComponentModel.Compiler.ITypeProvider,System.Uri[])\n  id: '#ctor(System.String,System.String,System.Workflow.ComponentModel.Compiler.ITypeProvider,System.Uri[])'\n  parent: System.ServiceModel.WorkflowServiceHost\n  langs:\n  - csharp\n  name: WorkflowServiceHost(String, String, ITypeProvider, Uri[])\n  nameWithType: WorkflowServiceHost.WorkflowServiceHost(String, String, ITypeProvider, Uri[])\n  fullName: WorkflowServiceHost.WorkflowServiceHost(String, String, ITypeProvider, Uri[])\n  type: Constructor\n  assemblies:\n  - System.WorkflowServices\n  namespace: System.ServiceModel\n  summary: Initializes a new instance of the <xref href=\"System.ServiceModel.WorkflowServiceHost\"></xref> class using a path to the workflow definition, a path to the workflow rules definition, a type provider for custom activity types, and the base addresses of the service specified.\n  remarks: Use this overload when you have your workflow defined in a workflow markup file (.xoml) and it references custom types defined in a separate assembly.\n  syntax:\n    content: public WorkflowServiceHost (string workflowDefinitionPath, string ruleDefinitionPath, System.Workflow.ComponentModel.Compiler.ITypeProvider typeProvider, Uri[] baseAddress);\n    parameters:\n    - id: workflowDefinitionPath\n      type: System.String\n      description: A string that contains the path to the workflow definition file.\n    - id: ruleDefinitionPath\n      type: System.String\n      description: A string that contains the path to the workflow rules definition file.\n    - id: typeProvider\n      type: System.Workflow.ComponentModel.Compiler.ITypeProvider\n      description: A type provider that implements the <xref href=\"System.Workflow.ComponentModel.Compiler.ITypeProvider\"></xref> interface.\n    - id: baseAddress\n      type: System.Uri[]\n      description: An array of type <xref href=\"System.Uri\"></xref> that contains the base addresses for the hosted service.\n  overload: System.ServiceModel.WorkflowServiceHost.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/WorkflowServiceHost.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.WorkflowServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.String)\n  commentId: M:System.ServiceModel.WorkflowServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.String)\n  id: AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.String)\n  parent: System.ServiceModel.WorkflowServiceHost\n  langs:\n  - csharp\n  name: AddServiceEndpoint(Type, Binding, String)\n  nameWithType: WorkflowServiceHost.AddServiceEndpoint(Type, Binding, String)\n  fullName: WorkflowServiceHost.AddServiceEndpoint(Type, Binding, String)\n  type: Method\n  assemblies:\n  - System.WorkflowServices\n  namespace: System.ServiceModel\n  summary: Adds a service endpoint for the workflow service using the specified contract, binding, and endpoint address.\n  syntax:\n    content: public System.ServiceModel.Description.ServiceEndpoint AddServiceEndpoint (Type implementedContract, System.ServiceModel.Channels.Binding binding, string address);\n    parameters:\n    - id: implementedContract\n      type: System.Type\n      description: The <xref href=\"System.Type\"></xref> of contract for the endpoint added.\n    - id: binding\n      type: System.ServiceModel.Channels.Binding\n      description: The <xref href=\"System.ServiceModel.Channels.Binding\"></xref> for the endpoint added.\n    - id: address\n      type: System.String\n      description: The address for the endpoint added.\n    return:\n      type: System.ServiceModel.Description.ServiceEndpoint\n      description: The <xref href=\"System.ServiceModel.Description.ServiceEndpoint\"></xref> added to the workflow service.\n  overload: System.ServiceModel.WorkflowServiceHost.AddServiceEndpoint*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>address</code> is `null`.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The workflow service does not implement <code>implementedContract</code>.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/WorkflowServiceHost.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.WorkflowServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.Uri)\n  commentId: M:System.ServiceModel.WorkflowServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.Uri)\n  id: AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.Uri)\n  parent: System.ServiceModel.WorkflowServiceHost\n  langs:\n  - csharp\n  name: AddServiceEndpoint(Type, Binding, Uri)\n  nameWithType: WorkflowServiceHost.AddServiceEndpoint(Type, Binding, Uri)\n  fullName: WorkflowServiceHost.AddServiceEndpoint(Type, Binding, Uri)\n  type: Method\n  assemblies:\n  - System.WorkflowServices\n  namespace: System.ServiceModel\n  summary: Adds a service endpoint to the workflow service with a specified contract, binding, and URI that contains the endpoint address.\n  syntax:\n    content: public System.ServiceModel.Description.ServiceEndpoint AddServiceEndpoint (Type implementedContract, System.ServiceModel.Channels.Binding binding, Uri address);\n    parameters:\n    - id: implementedContract\n      type: System.Type\n      description: The <xref href=\"System.Type\"></xref> of contract for the endpoint added.\n    - id: binding\n      type: System.ServiceModel.Channels.Binding\n      description: The <xref href=\"System.ServiceModel.Channels.Binding\"></xref> for the endpoint added.\n    - id: address\n      type: System.Uri\n      description: The <xref href=\"System.Uri\"></xref> that contains the address for the endpoint added.\n    return:\n      type: System.ServiceModel.Description.ServiceEndpoint\n      description: The <xref href=\"System.ServiceModel.Description.ServiceEndpoint\"></xref> added to the workflow service.\n  overload: System.ServiceModel.WorkflowServiceHost.AddServiceEndpoint*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>address</code> is `null`.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The workflow service does not implement <code>implementedContract</code>.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/WorkflowServiceHost.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.WorkflowServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.String,System.Uri)\n  commentId: M:System.ServiceModel.WorkflowServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.String,System.Uri)\n  id: AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.String,System.Uri)\n  parent: System.ServiceModel.WorkflowServiceHost\n  langs:\n  - csharp\n  name: AddServiceEndpoint(Type, Binding, String, Uri)\n  nameWithType: WorkflowServiceHost.AddServiceEndpoint(Type, Binding, String, Uri)\n  fullName: WorkflowServiceHost.AddServiceEndpoint(Type, Binding, String, Uri)\n  type: Method\n  assemblies:\n  - System.WorkflowServices\n  namespace: System.ServiceModel\n  summary: Adds a service endpoint to the workflow service with a specified contract, a binding, an endpoint address, and a URI on which the service listens.\n  syntax:\n    content: public System.ServiceModel.Description.ServiceEndpoint AddServiceEndpoint (Type implementedContract, System.ServiceModel.Channels.Binding binding, string address, Uri listenUri);\n    parameters:\n    - id: implementedContract\n      type: System.Type\n      description: The <xref href=\"System.Type\"></xref> of contract for the endpoint added.\n    - id: binding\n      type: System.ServiceModel.Channels.Binding\n      description: The <xref href=\"System.ServiceModel.Channels.Binding\"></xref> for the endpoint added.\n    - id: address\n      type: System.String\n      description: The endpoint address for the service.\n    - id: listenUri\n      type: System.Uri\n      description: The <xref href=\"System.Uri\"></xref> on which the service endpoints can listen.\n    return:\n      type: System.ServiceModel.Description.ServiceEndpoint\n      description: The <xref href=\"System.ServiceModel.Description.ServiceEndpoint\"></xref> added to the workflow service.\n  overload: System.ServiceModel.WorkflowServiceHost.AddServiceEndpoint*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>address</code> is `null`.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: <xref href=\"System.ServiceModel.ServiceContractAttribute\"></xref> not specified for <code>implementedContract</code>.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/WorkflowServiceHost.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.WorkflowServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.Uri,System.Uri)\n  commentId: M:System.ServiceModel.WorkflowServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.Uri,System.Uri)\n  id: AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.Uri,System.Uri)\n  parent: System.ServiceModel.WorkflowServiceHost\n  langs:\n  - csharp\n  name: AddServiceEndpoint(Type, Binding, Uri, Uri)\n  nameWithType: WorkflowServiceHost.AddServiceEndpoint(Type, Binding, Uri, Uri)\n  fullName: WorkflowServiceHost.AddServiceEndpoint(Type, Binding, Uri, Uri)\n  type: Method\n  assemblies:\n  - System.WorkflowServices\n  namespace: System.ServiceModel\n  summary: Adds a service endpoint to the workflow service with a specified contract, a binding, a URI that contains the endpoint address, and a URI on which the service listens.\n  syntax:\n    content: public System.ServiceModel.Description.ServiceEndpoint AddServiceEndpoint (Type implementedContract, System.ServiceModel.Channels.Binding binding, Uri address, Uri listenUri);\n    parameters:\n    - id: implementedContract\n      type: System.Type\n      description: The <xref href=\"System.Type\"></xref> of contract for the endpoint added.\n    - id: binding\n      type: System.ServiceModel.Channels.Binding\n      description: The <xref href=\"System.ServiceModel.Channels.Binding\"></xref> for the endpoint added.\n    - id: address\n      type: System.Uri\n      description: The <xref href=\"System.Uri\"></xref> that contains the address for the endpoint added.\n    - id: listenUri\n      type: System.Uri\n      description: The <xref href=\"System.Uri\"></xref> on which the service endpoints can listen.\n    return:\n      type: System.ServiceModel.Description.ServiceEndpoint\n      description: The <xref href=\"System.ServiceModel.Description.ServiceEndpoint\"></xref> added to the workflow service.\n  overload: System.ServiceModel.WorkflowServiceHost.AddServiceEndpoint*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>address</code> is `null`.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: <xref href=\"System.ServiceModel.ServiceContractAttribute\"></xref> not specified for <code>implementedContract</code>.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/WorkflowServiceHost.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.WorkflowServiceHost.CreateDescription(System.Collections.Generic.IDictionary{System.String,System.ServiceModel.Description.ContractDescription}@)\n  commentId: M:System.ServiceModel.WorkflowServiceHost.CreateDescription(System.Collections.Generic.IDictionary{System.String,System.ServiceModel.Description.ContractDescription}@)\n  id: CreateDescription(System.Collections.Generic.IDictionary{System.String,System.ServiceModel.Description.ContractDescription}@)\n  parent: System.ServiceModel.WorkflowServiceHost\n  langs:\n  - csharp\n  name: CreateDescription(IDictionary<String,ContractDescription>)\n  nameWithType: WorkflowServiceHost.CreateDescription(IDictionary<String,ContractDescription>)\n  fullName: WorkflowServiceHost.CreateDescription(IDictionary<String,ContractDescription>)\n  type: Method\n  assemblies:\n  - System.WorkflowServices\n  namespace: System.ServiceModel\n  summary: Creates a description of the workflow service.\n  syntax:\n    content: protected override System.ServiceModel.Description.ServiceDescription CreateDescription (out System.Collections.Generic.IDictionary<string,System.ServiceModel.Description.ContractDescription> implementedContracts);\n    parameters:\n    - id: implementedContracts\n      type: System.Collections.Generic.IDictionary{System.String,System.ServiceModel.Description.ContractDescription}\n      description: When this method returns, the <xref href=\"System.Collections.Generic.IDictionary`2\"></xref> object contains the keyed-contracts of the hosted service that have been implemented.\n    return:\n      type: System.ServiceModel.Description.ServiceDescription\n      description: A <xref href=\"System.ServiceModel.Description.ServiceDescription\"></xref> of the workflow service.\n  overload: System.ServiceModel.WorkflowServiceHost.CreateDescription*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/WorkflowServiceHost.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.WorkflowServiceHost.OnClosing\n  commentId: M:System.ServiceModel.WorkflowServiceHost.OnClosing\n  id: OnClosing\n  parent: System.ServiceModel.WorkflowServiceHost\n  langs:\n  - csharp\n  name: OnClosing()\n  nameWithType: WorkflowServiceHost.OnClosing()\n  fullName: WorkflowServiceHost.OnClosing()\n  type: Method\n  assemblies:\n  - System.WorkflowServices\n  namespace: System.ServiceModel\n  summary: This method is called before the <xref href=\"System.ServiceModel.WorkflowServiceHost\"></xref> is put into a closing state.\n  remarks: In the default implementation, <xref:System.ServiceModel.WorkflowServiceHost> calls <xref:System.Workflow.Runtime.WorkflowRuntime.StopRuntime%2A> before calling <xref:System.ServiceModel.Channels.CommunicationObject.OnClosing%2A?displayProperty=fullName>. This means the workflow runtime will shut down before the service host closes.\n  syntax:\n    content: protected override void OnClosing ();\n    parameters: []\n  overload: System.ServiceModel.WorkflowServiceHost.OnClosing*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/WorkflowServiceHost.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\nreferences:\n- uid: System.ServiceModel.ServiceHostBase\n  parent: System.ServiceModel\n  isExternal: false\n  name: ServiceHostBase\n  nameWithType: ServiceHostBase\n  fullName: System.ServiceModel.ServiceHostBase\n- uid: System.ArgumentNullException\n  parent: System\n  isExternal: false\n  name: ArgumentNullException\n  nameWithType: ArgumentNullException\n  fullName: System.ArgumentNullException\n- uid: System.InvalidOperationException\n  parent: System\n  isExternal: false\n  name: InvalidOperationException\n  nameWithType: InvalidOperationException\n  fullName: System.InvalidOperationException\n- uid: System.ServiceModel.WorkflowServiceHost.#ctor\n  parent: System.ServiceModel.WorkflowServiceHost\n  isExternal: false\n  name: WorkflowServiceHost()\n  nameWithType: WorkflowServiceHost.WorkflowServiceHost()\n  fullName: WorkflowServiceHost.WorkflowServiceHost()\n- uid: System.ServiceModel.WorkflowServiceHost.#ctor(System.IO.Stream,System.Uri[])\n  parent: System.ServiceModel.WorkflowServiceHost\n  isExternal: false\n  name: WorkflowServiceHost(Stream, Uri[])\n  nameWithType: WorkflowServiceHost.WorkflowServiceHost(Stream, Uri[])\n  fullName: WorkflowServiceHost.WorkflowServiceHost(Stream, Uri[])\n- uid: System.IO.Stream\n  parent: System.IO\n  isExternal: false\n  name: Stream\n  nameWithType: Stream\n  fullName: System.IO.Stream\n- uid: System.Uri\n  name: Uri\n  nameWithType: Uri\n  fullName: System.Uri\n- uid: System.Uri[]\n  parent: System\n  isExternal: false\n  name: Uri[]\n  nameWithType: Uri[]\n  fullName: System.Uri[]\n  spec.csharp:\n  - uid: System.Uri\n    name: Uri\n    nameWithType: Uri\n    fullName: System.Uri\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.ServiceModel.WorkflowServiceHost.#ctor(System.String,System.Uri[])\n  parent: System.ServiceModel.WorkflowServiceHost\n  isExternal: false\n  name: WorkflowServiceHost(String, Uri[])\n  nameWithType: WorkflowServiceHost.WorkflowServiceHost(String, Uri[])\n  fullName: WorkflowServiceHost.WorkflowServiceHost(String, Uri[])\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.ServiceModel.WorkflowServiceHost.#ctor(System.Type,System.Uri[])\n  parent: System.ServiceModel.WorkflowServiceHost\n  isExternal: false\n  name: WorkflowServiceHost(Type, Uri[])\n  nameWithType: WorkflowServiceHost.WorkflowServiceHost(Type, Uri[])\n  fullName: WorkflowServiceHost.WorkflowServiceHost(Type, Uri[])\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.ServiceModel.WorkflowServiceHost.#ctor(System.IO.Stream,System.IO.Stream,System.Uri[])\n  parent: System.ServiceModel.WorkflowServiceHost\n  isExternal: false\n  name: WorkflowServiceHost(Stream, Stream, Uri[])\n  nameWithType: WorkflowServiceHost.WorkflowServiceHost(Stream, Stream, Uri[])\n  fullName: WorkflowServiceHost.WorkflowServiceHost(Stream, Stream, Uri[])\n- uid: System.ServiceModel.WorkflowServiceHost.#ctor(System.String,System.String,System.Uri[])\n  parent: System.ServiceModel.WorkflowServiceHost\n  isExternal: false\n  name: WorkflowServiceHost(String, String, Uri[])\n  nameWithType: WorkflowServiceHost.WorkflowServiceHost(String, String, Uri[])\n  fullName: WorkflowServiceHost.WorkflowServiceHost(String, String, Uri[])\n- uid: System.ServiceModel.WorkflowServiceHost.#ctor(System.IO.Stream,System.IO.Stream,System.Workflow.ComponentModel.Compiler.ITypeProvider,System.Uri[])\n  parent: System.ServiceModel.WorkflowServiceHost\n  isExternal: false\n  name: WorkflowServiceHost(Stream, Stream, ITypeProvider, Uri[])\n  nameWithType: WorkflowServiceHost.WorkflowServiceHost(Stream, Stream, ITypeProvider, Uri[])\n  fullName: WorkflowServiceHost.WorkflowServiceHost(Stream, Stream, ITypeProvider, Uri[])\n- uid: System.Workflow.ComponentModel.Compiler.ITypeProvider\n  parent: System.Workflow.ComponentModel.Compiler\n  isExternal: false\n  name: ITypeProvider\n  nameWithType: ITypeProvider\n  fullName: System.Workflow.ComponentModel.Compiler.ITypeProvider\n- uid: System.ServiceModel.WorkflowServiceHost.#ctor(System.String,System.String,System.Workflow.ComponentModel.Compiler.ITypeProvider,System.Uri[])\n  parent: System.ServiceModel.WorkflowServiceHost\n  isExternal: false\n  name: WorkflowServiceHost(String, String, ITypeProvider, Uri[])\n  nameWithType: WorkflowServiceHost.WorkflowServiceHost(String, String, ITypeProvider, Uri[])\n  fullName: WorkflowServiceHost.WorkflowServiceHost(String, String, ITypeProvider, Uri[])\n- uid: System.ServiceModel.WorkflowServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.String)\n  parent: System.ServiceModel.WorkflowServiceHost\n  isExternal: false\n  name: AddServiceEndpoint(Type, Binding, String)\n  nameWithType: WorkflowServiceHost.AddServiceEndpoint(Type, Binding, String)\n  fullName: WorkflowServiceHost.AddServiceEndpoint(Type, Binding, String)\n- uid: System.ServiceModel.Description.ServiceEndpoint\n  parent: System.ServiceModel.Description\n  isExternal: false\n  name: ServiceEndpoint\n  nameWithType: ServiceEndpoint\n  fullName: System.ServiceModel.Description.ServiceEndpoint\n- uid: System.ServiceModel.Channels.Binding\n  parent: System.ServiceModel.Channels\n  isExternal: false\n  name: Binding\n  nameWithType: Binding\n  fullName: System.ServiceModel.Channels.Binding\n- uid: System.ServiceModel.WorkflowServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.Uri)\n  parent: System.ServiceModel.WorkflowServiceHost\n  isExternal: false\n  name: AddServiceEndpoint(Type, Binding, Uri)\n  nameWithType: WorkflowServiceHost.AddServiceEndpoint(Type, Binding, Uri)\n  fullName: WorkflowServiceHost.AddServiceEndpoint(Type, Binding, Uri)\n- uid: System.ServiceModel.WorkflowServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.String,System.Uri)\n  parent: System.ServiceModel.WorkflowServiceHost\n  isExternal: false\n  name: AddServiceEndpoint(Type, Binding, String, Uri)\n  nameWithType: WorkflowServiceHost.AddServiceEndpoint(Type, Binding, String, Uri)\n  fullName: WorkflowServiceHost.AddServiceEndpoint(Type, Binding, String, Uri)\n- uid: System.ServiceModel.WorkflowServiceHost.AddServiceEndpoint(System.Type,System.ServiceModel.Channels.Binding,System.Uri,System.Uri)\n  parent: System.ServiceModel.WorkflowServiceHost\n  isExternal: false\n  name: AddServiceEndpoint(Type, Binding, Uri, Uri)\n  nameWithType: WorkflowServiceHost.AddServiceEndpoint(Type, Binding, Uri, Uri)\n  fullName: WorkflowServiceHost.AddServiceEndpoint(Type, Binding, Uri, Uri)\n- uid: System.ServiceModel.WorkflowServiceHost.CreateDescription(System.Collections.Generic.IDictionary{System.String,System.ServiceModel.Description.ContractDescription}@)\n  parent: System.ServiceModel.WorkflowServiceHost\n  isExternal: false\n  name: CreateDescription(IDictionary<String,ContractDescription>)\n  nameWithType: WorkflowServiceHost.CreateDescription(IDictionary<String,ContractDescription>)\n  fullName: WorkflowServiceHost.CreateDescription(IDictionary<String,ContractDescription>)\n- uid: System.ServiceModel.Description.ServiceDescription\n  parent: System.ServiceModel.Description\n  isExternal: false\n  name: ServiceDescription\n  nameWithType: ServiceDescription\n  fullName: System.ServiceModel.Description.ServiceDescription\n- uid: System.Collections.Generic.IDictionary`2\n  name: IDictionary<TKey,TValue>\n  nameWithType: IDictionary<TKey,TValue>\n  fullName: System.Collections.Generic.IDictionary<TKey,TValue>\n- uid: System.ServiceModel.Description.ContractDescription\n  name: ContractDescription\n  nameWithType: ContractDescription\n  fullName: System.ServiceModel.Description.ContractDescription\n- uid: System.Collections.Generic.IDictionary{System.String,System.ServiceModel.Description.ContractDescription}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IDictionary<String,ContractDescription>\n  nameWithType: IDictionary<String,ContractDescription>\n  fullName: System.Collections.Generic.IDictionary<System.String,System.ServiceModel.Description.ContractDescription>\n  spec.csharp:\n  - uid: System.Collections.Generic.IDictionary`2\n    name: IDictionary\n    nameWithType: IDictionary\n    fullName: System.Collections.Generic.IDictionary\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.String\n    name: String\n    nameWithType: String\n    fullName: System.String\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: System.ServiceModel.Description.ContractDescription\n    name: ContractDescription\n    nameWithType: ContractDescription\n    fullName: System.ServiceModel.Description.ContractDescription\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.ServiceModel.WorkflowServiceHost.OnClosing\n  parent: System.ServiceModel.WorkflowServiceHost\n  isExternal: false\n  name: OnClosing()\n  nameWithType: WorkflowServiceHost.OnClosing()\n  fullName: WorkflowServiceHost.OnClosing()\n- uid: System.ServiceModel.WorkflowServiceHost.#ctor*\n  parent: System.ServiceModel.WorkflowServiceHost\n  isExternal: false\n  name: WorkflowServiceHost\n  nameWithType: WorkflowServiceHost.WorkflowServiceHost\n  fullName: WorkflowServiceHost.WorkflowServiceHost\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/WorkflowServiceHost.xml\n- uid: System.ServiceModel.WorkflowServiceHost.AddServiceEndpoint*\n  parent: System.ServiceModel.WorkflowServiceHost\n  isExternal: false\n  name: AddServiceEndpoint\n  nameWithType: WorkflowServiceHost.AddServiceEndpoint\n  fullName: WorkflowServiceHost.AddServiceEndpoint\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/WorkflowServiceHost.xml\n- uid: System.ServiceModel.WorkflowServiceHost.CreateDescription*\n  parent: System.ServiceModel.WorkflowServiceHost\n  isExternal: false\n  name: CreateDescription\n  nameWithType: WorkflowServiceHost.CreateDescription\n  fullName: WorkflowServiceHost.CreateDescription\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/WorkflowServiceHost.xml\n- uid: System.ServiceModel.WorkflowServiceHost.OnClosing*\n  parent: System.ServiceModel.WorkflowServiceHost\n  isExternal: false\n  name: OnClosing\n  nameWithType: WorkflowServiceHost.OnClosing\n  fullName: WorkflowServiceHost.OnClosing\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/WorkflowServiceHost.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.ServiceModel.Channels.CommunicationObject.Abort\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: Abort()\n  nameWithType: CommunicationObject.Abort()\n  fullName: CommunicationObject.Abort()\n- uid: System.ServiceModel.Channels.CommunicationObject.BeginClose(System.AsyncCallback,System.Object)\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: BeginClose(AsyncCallback, Object)\n  nameWithType: CommunicationObject.BeginClose(AsyncCallback, Object)\n  fullName: CommunicationObject.BeginClose(AsyncCallback, Object)\n- uid: System.ServiceModel.Channels.CommunicationObject.BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: BeginClose(TimeSpan, AsyncCallback, Object)\n  nameWithType: CommunicationObject.BeginClose(TimeSpan, AsyncCallback, Object)\n  fullName: CommunicationObject.BeginClose(TimeSpan, AsyncCallback, Object)\n- uid: System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.AsyncCallback,System.Object)\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: BeginOpen(AsyncCallback, Object)\n  nameWithType: CommunicationObject.BeginOpen(AsyncCallback, Object)\n  fullName: CommunicationObject.BeginOpen(AsyncCallback, Object)\n- uid: System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: BeginOpen(TimeSpan, AsyncCallback, Object)\n  nameWithType: CommunicationObject.BeginOpen(TimeSpan, AsyncCallback, Object)\n  fullName: CommunicationObject.BeginOpen(TimeSpan, AsyncCallback, Object)\n- uid: System.ServiceModel.Channels.CommunicationObject.Close\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: Close()\n  nameWithType: CommunicationObject.Close()\n  fullName: CommunicationObject.Close()\n- uid: System.ServiceModel.Channels.CommunicationObject.Close(System.TimeSpan)\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: Close(TimeSpan)\n  nameWithType: CommunicationObject.Close(TimeSpan)\n  fullName: CommunicationObject.Close(TimeSpan)\n- uid: System.ServiceModel.Channels.CommunicationObject.Closed\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: Closed\n  nameWithType: CommunicationObject.Closed\n  fullName: CommunicationObject.Closed\n- uid: System.ServiceModel.Channels.CommunicationObject.Closing\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: Closing\n  nameWithType: CommunicationObject.Closing\n  fullName: CommunicationObject.Closing\n- uid: System.ServiceModel.ServiceHostBase.DefaultCloseTimeout\n  parent: System.ServiceModel.ServiceHostBase\n  isExternal: false\n  name: DefaultCloseTimeout\n  nameWithType: ServiceHostBase.DefaultCloseTimeout\n  fullName: ServiceHostBase.DefaultCloseTimeout\n- uid: System.ServiceModel.ServiceHostBase.DefaultOpenTimeout\n  parent: System.ServiceModel.ServiceHostBase\n  isExternal: false\n  name: DefaultOpenTimeout\n  nameWithType: ServiceHostBase.DefaultOpenTimeout\n  fullName: ServiceHostBase.DefaultOpenTimeout\n- uid: System.ServiceModel.Channels.CommunicationObject.EndClose(System.IAsyncResult)\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: EndClose(IAsyncResult)\n  nameWithType: CommunicationObject.EndClose(IAsyncResult)\n  fullName: CommunicationObject.EndClose(IAsyncResult)\n- uid: System.ServiceModel.Channels.CommunicationObject.EndOpen(System.IAsyncResult)\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: EndOpen(IAsyncResult)\n  nameWithType: CommunicationObject.EndOpen(IAsyncResult)\n  fullName: CommunicationObject.EndOpen(IAsyncResult)\n- uid: System.ServiceModel.Channels.CommunicationObject.Fault\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: Fault()\n  nameWithType: CommunicationObject.Fault()\n  fullName: CommunicationObject.Fault()\n- uid: System.ServiceModel.Channels.CommunicationObject.Faulted\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: Faulted\n  nameWithType: CommunicationObject.Faulted\n  fullName: CommunicationObject.Faulted\n- uid: System.ServiceModel.Channels.CommunicationObject.GetCommunicationObjectType\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: GetCommunicationObjectType()\n  nameWithType: CommunicationObject.GetCommunicationObjectType()\n  fullName: CommunicationObject.GetCommunicationObjectType()\n- uid: System.ServiceModel.Channels.CommunicationObject.IsDisposed\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: IsDisposed\n  nameWithType: CommunicationObject.IsDisposed\n  fullName: CommunicationObject.IsDisposed\n- uid: System.ServiceModel.ServiceHostBase.OnAbort\n  parent: System.ServiceModel.ServiceHostBase\n  isExternal: false\n  name: OnAbort()\n  nameWithType: ServiceHostBase.OnAbort()\n  fullName: ServiceHostBase.OnAbort()\n- uid: System.ServiceModel.ServiceHostBase.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)\n  parent: System.ServiceModel.ServiceHostBase\n  isExternal: false\n  name: OnBeginClose(TimeSpan, AsyncCallback, Object)\n  nameWithType: ServiceHostBase.OnBeginClose(TimeSpan, AsyncCallback, Object)\n  fullName: ServiceHostBase.OnBeginClose(TimeSpan, AsyncCallback, Object)\n- uid: System.ServiceModel.ServiceHostBase.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)\n  parent: System.ServiceModel.ServiceHostBase\n  isExternal: false\n  name: OnBeginOpen(TimeSpan, AsyncCallback, Object)\n  nameWithType: ServiceHostBase.OnBeginOpen(TimeSpan, AsyncCallback, Object)\n  fullName: ServiceHostBase.OnBeginOpen(TimeSpan, AsyncCallback, Object)\n- uid: System.ServiceModel.ServiceHostBase.OnClose(System.TimeSpan)\n  parent: System.ServiceModel.ServiceHostBase\n  isExternal: false\n  name: OnClose(TimeSpan)\n  nameWithType: ServiceHostBase.OnClose(TimeSpan)\n  fullName: ServiceHostBase.OnClose(TimeSpan)\n- uid: System.ServiceModel.ServiceHostBase.OnClosed\n  parent: System.ServiceModel.ServiceHostBase\n  isExternal: false\n  name: OnClosed()\n  nameWithType: ServiceHostBase.OnClosed()\n  fullName: ServiceHostBase.OnClosed()\n- uid: System.ServiceModel.ServiceHostBase.OnEndClose(System.IAsyncResult)\n  parent: System.ServiceModel.ServiceHostBase\n  isExternal: false\n  name: OnEndClose(IAsyncResult)\n  nameWithType: ServiceHostBase.OnEndClose(IAsyncResult)\n  fullName: ServiceHostBase.OnEndClose(IAsyncResult)\n- uid: System.ServiceModel.ServiceHostBase.OnEndOpen(System.IAsyncResult)\n  parent: System.ServiceModel.ServiceHostBase\n  isExternal: false\n  name: OnEndOpen(IAsyncResult)\n  nameWithType: ServiceHostBase.OnEndOpen(IAsyncResult)\n  fullName: ServiceHostBase.OnEndOpen(IAsyncResult)\n- uid: System.ServiceModel.Channels.CommunicationObject.OnFaulted\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: OnFaulted()\n  nameWithType: CommunicationObject.OnFaulted()\n  fullName: CommunicationObject.OnFaulted()\n- uid: System.ServiceModel.ServiceHostBase.OnOpen(System.TimeSpan)\n  parent: System.ServiceModel.ServiceHostBase\n  isExternal: false\n  name: OnOpen(TimeSpan)\n  nameWithType: ServiceHostBase.OnOpen(TimeSpan)\n  fullName: ServiceHostBase.OnOpen(TimeSpan)\n- uid: System.ServiceModel.ServiceHostBase.OnOpened\n  parent: System.ServiceModel.ServiceHostBase\n  isExternal: false\n  name: OnOpened()\n  nameWithType: ServiceHostBase.OnOpened()\n  fullName: ServiceHostBase.OnOpened()\n- uid: System.ServiceModel.Channels.CommunicationObject.OnOpening\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: OnOpening()\n  nameWithType: CommunicationObject.OnOpening()\n  fullName: CommunicationObject.OnOpening()\n- uid: System.ServiceModel.Channels.CommunicationObject.Open\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: Open()\n  nameWithType: CommunicationObject.Open()\n  fullName: CommunicationObject.Open()\n- uid: System.ServiceModel.Channels.CommunicationObject.Open(System.TimeSpan)\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: Open(TimeSpan)\n  nameWithType: CommunicationObject.Open(TimeSpan)\n  fullName: CommunicationObject.Open(TimeSpan)\n- uid: System.ServiceModel.Channels.CommunicationObject.Opened\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: Opened\n  nameWithType: CommunicationObject.Opened\n  fullName: CommunicationObject.Opened\n- uid: System.ServiceModel.Channels.CommunicationObject.Opening\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: Opening\n  nameWithType: CommunicationObject.Opening\n  fullName: CommunicationObject.Opening\n- uid: System.ServiceModel.Channels.CommunicationObject.State\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: State\n  nameWithType: CommunicationObject.State\n  fullName: CommunicationObject.State\n- uid: System.ServiceModel.Channels.CommunicationObject.ThisLock\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: ThisLock\n  nameWithType: CommunicationObject.ThisLock\n  fullName: CommunicationObject.ThisLock\n- uid: System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposed\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: ThrowIfDisposed()\n  nameWithType: CommunicationObject.ThrowIfDisposed()\n  fullName: CommunicationObject.ThrowIfDisposed()\n- uid: System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposedOrImmutable\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: ThrowIfDisposedOrImmutable()\n  nameWithType: CommunicationObject.ThrowIfDisposedOrImmutable()\n  fullName: CommunicationObject.ThrowIfDisposedOrImmutable()\n- uid: System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposedOrNotOpen\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: ThrowIfDisposedOrNotOpen()\n  nameWithType: CommunicationObject.ThrowIfDisposedOrNotOpen()\n  fullName: CommunicationObject.ThrowIfDisposedOrNotOpen()\n- uid: System.ServiceModel.ServiceHostBase.AddBaseAddress(System.Uri)\n  parent: System.ServiceModel.ServiceHostBase\n  isExternal: false\n  name: AddBaseAddress(Uri)\n  nameWithType: ServiceHostBase.AddBaseAddress(Uri)\n  fullName: ServiceHostBase.AddBaseAddress(Uri)\n- uid: System.ServiceModel.ServiceHostBase.AddDefaultEndpoints\n  parent: System.ServiceModel.ServiceHostBase\n  isExternal: false\n  name: AddDefaultEndpoints()\n  nameWithType: ServiceHostBase.AddDefaultEndpoints()\n  fullName: ServiceHostBase.AddDefaultEndpoints()\n- uid: System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.ServiceModel.Description.ServiceEndpoint)\n  parent: System.ServiceModel.ServiceHostBase\n  isExternal: false\n  name: AddServiceEndpoint(ServiceEndpoint)\n  nameWithType: ServiceHostBase.AddServiceEndpoint(ServiceEndpoint)\n  fullName: ServiceHostBase.AddServiceEndpoint(ServiceEndpoint)\n- uid: System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.String)\n  parent: System.ServiceModel.ServiceHostBase\n  isExternal: false\n  name: AddServiceEndpoint(String, Binding, String)\n  nameWithType: ServiceHostBase.AddServiceEndpoint(String, Binding, String)\n  fullName: ServiceHostBase.AddServiceEndpoint(String, Binding, String)\n- uid: System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.Uri)\n  parent: System.ServiceModel.ServiceHostBase\n  isExternal: false\n  name: AddServiceEndpoint(String, Binding, Uri)\n  nameWithType: ServiceHostBase.AddServiceEndpoint(String, Binding, Uri)\n  fullName: ServiceHostBase.AddServiceEndpoint(String, Binding, Uri)\n- uid: System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.String,System.Uri)\n  parent: System.ServiceModel.ServiceHostBase\n  isExternal: false\n  name: AddServiceEndpoint(String, Binding, String, Uri)\n  nameWithType: ServiceHostBase.AddServiceEndpoint(String, Binding, String, Uri)\n  fullName: ServiceHostBase.AddServiceEndpoint(String, Binding, String, Uri)\n- uid: System.ServiceModel.ServiceHostBase.AddServiceEndpoint(System.String,System.ServiceModel.Channels.Binding,System.Uri,System.Uri)\n  parent: System.ServiceModel.ServiceHostBase\n  isExternal: false\n  name: AddServiceEndpoint(String, Binding, Uri, Uri)\n  nameWithType: ServiceHostBase.AddServiceEndpoint(String, Binding, Uri, Uri)\n  fullName: ServiceHostBase.AddServiceEndpoint(String, Binding, Uri, Uri)\n- uid: System.ServiceModel.ServiceHostBase.ApplyConfiguration\n  parent: System.ServiceModel.ServiceHostBase\n  isExternal: false\n  name: ApplyConfiguration()\n  nameWithType: ServiceHostBase.ApplyConfiguration()\n  fullName: ServiceHostBase.ApplyConfiguration()\n- uid: System.ServiceModel.ServiceHostBase.Authentication\n  parent: System.ServiceModel.ServiceHostBase\n  isExternal: false\n  name: Authentication\n  nameWithType: ServiceHostBase.Authentication\n  fullName: ServiceHostBase.Authentication\n- uid: System.ServiceModel.ServiceHostBase.Authorization\n  parent: System.ServiceModel.ServiceHostBase\n  isExternal: false\n  name: Authorization\n  nameWithType: ServiceHostBase.Authorization\n  fullName: ServiceHostBase.Authorization\n- uid: System.ServiceModel.ServiceHostBase.BaseAddresses\n  parent: System.ServiceModel.ServiceHostBase\n  isExternal: false\n  name: BaseAddresses\n  nameWithType: ServiceHostBase.BaseAddresses\n  fullName: ServiceHostBase.BaseAddresses\n- uid: System.ServiceModel.ServiceHostBase.ChannelDispatchers\n  parent: System.ServiceModel.ServiceHostBase\n  isExternal: false\n  name: ChannelDispatchers\n  nameWithType: ServiceHostBase.ChannelDispatchers\n  fullName: ServiceHostBase.ChannelDispatchers\n- uid: System.ServiceModel.ServiceHostBase.CloseTimeout\n  parent: System.ServiceModel.ServiceHostBase\n  isExternal: false\n  name: CloseTimeout\n  nameWithType: ServiceHostBase.CloseTimeout\n  fullName: ServiceHostBase.CloseTimeout\n- uid: System.ServiceModel.ServiceHostBase.Credentials\n  parent: System.ServiceModel.ServiceHostBase\n  isExternal: false\n  name: Credentials\n  nameWithType: ServiceHostBase.Credentials\n  fullName: ServiceHostBase.Credentials\n- uid: System.ServiceModel.ServiceHostBase.Description\n  parent: System.ServiceModel.ServiceHostBase\n  isExternal: false\n  name: Description\n  nameWithType: ServiceHostBase.Description\n  fullName: ServiceHostBase.Description\n- uid: System.ServiceModel.ServiceHostBase.Extensions\n  parent: System.ServiceModel.ServiceHostBase\n  isExternal: false\n  name: Extensions\n  nameWithType: ServiceHostBase.Extensions\n  fullName: ServiceHostBase.Extensions\n- uid: System.ServiceModel.ServiceHostBase.ImplementedContracts\n  parent: System.ServiceModel.ServiceHostBase\n  isExternal: false\n  name: ImplementedContracts\n  nameWithType: ServiceHostBase.ImplementedContracts\n  fullName: ServiceHostBase.ImplementedContracts\n- uid: System.ServiceModel.ServiceHostBase.IncrementManualFlowControlLimit(System.Int32)\n  parent: System.ServiceModel.ServiceHostBase\n  isExternal: false\n  name: IncrementManualFlowControlLimit(Int32)\n  nameWithType: ServiceHostBase.IncrementManualFlowControlLimit(Int32)\n  fullName: ServiceHostBase.IncrementManualFlowControlLimit(Int32)\n- uid: System.ServiceModel.ServiceHostBase.InitializeDescription(System.ServiceModel.UriSchemeKeyedCollection)\n  parent: System.ServiceModel.ServiceHostBase\n  isExternal: false\n  name: InitializeDescription(UriSchemeKeyedCollection)\n  nameWithType: ServiceHostBase.InitializeDescription(UriSchemeKeyedCollection)\n  fullName: ServiceHostBase.InitializeDescription(UriSchemeKeyedCollection)\n- uid: System.ServiceModel.ServiceHostBase.InitializeRuntime\n  parent: System.ServiceModel.ServiceHostBase\n  isExternal: false\n  name: InitializeRuntime()\n  nameWithType: ServiceHostBase.InitializeRuntime()\n  fullName: ServiceHostBase.InitializeRuntime()\n- uid: System.ServiceModel.ServiceHostBase.LoadConfigurationSection(System.ServiceModel.Configuration.ServiceElement)\n  parent: System.ServiceModel.ServiceHostBase\n  isExternal: false\n  name: LoadConfigurationSection(ServiceElement)\n  nameWithType: ServiceHostBase.LoadConfigurationSection(ServiceElement)\n  fullName: ServiceHostBase.LoadConfigurationSection(ServiceElement)\n- uid: System.ServiceModel.ServiceHostBase.ManualFlowControlLimit\n  parent: System.ServiceModel.ServiceHostBase\n  isExternal: false\n  name: ManualFlowControlLimit\n  nameWithType: ServiceHostBase.ManualFlowControlLimit\n  fullName: ServiceHostBase.ManualFlowControlLimit\n- uid: System.ServiceModel.ServiceHostBase.OpenTimeout\n  parent: System.ServiceModel.ServiceHostBase\n  isExternal: false\n  name: OpenTimeout\n  nameWithType: ServiceHostBase.OpenTimeout\n  fullName: ServiceHostBase.OpenTimeout\n- uid: System.ServiceModel.ServiceHostBase.ReleasePerformanceCounters\n  parent: System.ServiceModel.ServiceHostBase\n  isExternal: false\n  name: ReleasePerformanceCounters()\n  nameWithType: ServiceHostBase.ReleasePerformanceCounters()\n  fullName: ServiceHostBase.ReleasePerformanceCounters()\n- uid: System.ServiceModel.ServiceHostBase.SetEndpointAddress(System.ServiceModel.Description.ServiceEndpoint,System.String)\n  parent: System.ServiceModel.ServiceHostBase\n  isExternal: false\n  name: SetEndpointAddress(ServiceEndpoint, String)\n  nameWithType: ServiceHostBase.SetEndpointAddress(ServiceEndpoint, String)\n  fullName: ServiceHostBase.SetEndpointAddress(ServiceEndpoint, String)\n- uid: System.ServiceModel.ServiceHostBase.UnknownMessageReceived\n  parent: System.ServiceModel.ServiceHostBase\n  isExternal: false\n  name: UnknownMessageReceived\n  nameWithType: ServiceHostBase.UnknownMessageReceived\n  fullName: ServiceHostBase.UnknownMessageReceived\n- uid: System.ServiceModel.ServiceHostBase.System#IDisposable#Dispose\n  parent: System.ServiceModel.ServiceHostBase\n  isExternal: false\n  name: IDisposable.Dispose()\n  nameWithType: ServiceHostBase.IDisposable.Dispose()\n  fullName: ServiceHostBase.IDisposable.Dispose()\n"}