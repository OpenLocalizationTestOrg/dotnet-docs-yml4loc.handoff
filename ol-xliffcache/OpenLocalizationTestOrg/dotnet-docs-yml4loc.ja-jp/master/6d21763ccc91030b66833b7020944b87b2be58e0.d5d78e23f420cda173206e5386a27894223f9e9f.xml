{"nodes":[{"content":"Represents the abstract base class from which all implementations of the Advanced Encryption Standard (AES) must inherit.","nodes":[{"pos":[0,121],"content":"Represents the abstract base class from which all implementations of the Advanced Encryption Standard (AES) must inherit.","nodes":[{"content":"Represents the abstract base class from which all implementations of the Advanced Encryption Standard (AES) must inherit.","pos":[0,121]}]}],"pos":[647,769],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Security.Cryptography.Aes\"></xref> class.","nodes":[{"pos":[0,94],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.Aes\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.Security.Cryptography.Aes\"></xref> class."}],"pos":[4861,4956],"yaml":true},{"content":"Creates a cryptographic object that is used to perform the symmetric algorithm.","nodes":[{"pos":[0,79],"content":"Creates a cryptographic object that is used to perform the symmetric algorithm.","nodes":[{"content":"Creates a cryptographic object that is used to perform the symmetric algorithm.","pos":[0,79]}]}],"pos":[6766,6846],"yaml":true},{"content":"A cryptographic object that is used to perform the symmetric algorithm.","nodes":[{"pos":[0,71],"content":"A cryptographic object that is used to perform the symmetric algorithm.","nodes":[{"content":"A cryptographic object that is used to perform the symmetric algorithm.","pos":[0,71]}]}],"pos":[7022,7094],"yaml":true},{"content":"Creates a cryptographic object that specifies the implementation of AES to use to perform the symmetric algorithm.","nodes":[{"pos":[0,114],"content":"Creates a cryptographic object that specifies the implementation of AES to use to perform the symmetric algorithm.","nodes":[{"content":"Creates a cryptographic object that specifies the implementation of AES to use to perform the symmetric algorithm.","pos":[0,114]}]}],"pos":[8541,8656],"yaml":true},{"content":"Possible `algorithmName` values are: \"AES\", \"AesCryptoServiceProvider\", \"System.Security.Cryptography.AesCryptoServiceProvider\", \"AesManaged\", and \"System.Security.Cryptography.AesManaged\".","nodes":[{"pos":[0,189],"content":"Possible <ph id=\"ph1\">`algorithmName`</ph> values are: \"AES\", \"AesCryptoServiceProvider\", \"System.Security.Cryptography.AesCryptoServiceProvider\", \"AesManaged\", and \"System.Security.Cryptography.AesManaged\".","source":"Possible `algorithmName` values are: \"AES\", \"AesCryptoServiceProvider\", \"System.Security.Cryptography.AesCryptoServiceProvider\", \"AesManaged\", and \"System.Security.Cryptography.AesManaged\"."}],"pos":[8667,8859],"yaml":true,"extradata":"MT"},{"content":"The name of the specific implementation of AES to use.","nodes":[{"pos":[0,54],"content":"The name of the specific implementation of AES to use.","nodes":[{"content":"The name of the specific implementation of AES to use.","pos":[0,54]}]}],"pos":[9045,9100],"yaml":true},{"content":"A cryptographic object that is used to perform the symmetric algorithm.","nodes":[{"pos":[0,71],"content":"A cryptographic object that is used to perform the symmetric algorithm.","nodes":[{"content":"A cryptographic object that is used to perform the symmetric algorithm.","pos":[0,71]}]}],"pos":[9176,9248],"yaml":true},{"content":"The <code>algorithmName</code> parameter is `null`.","nodes":[{"pos":[0,51],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">algorithmName</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <ph id=\"ph2\">`null`</ph>.","source":"The <code>algorithmName</code> parameter is `null`."}],"pos":[9417,9469],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Security.Cryptography.Aes\n  commentId: T:System.Security.Cryptography.Aes\n  id: Aes\n  children:\n  - System.Security.Cryptography.Aes.#ctor\n  - System.Security.Cryptography.Aes.Create\n  - System.Security.Cryptography.Aes.Create(System.String)\n  - System.Security.Cryptography.Aes.LegalBlockSizes\n  - System.Security.Cryptography.Aes.LegalKeySizes\n  langs:\n  - csharp\n  name: Aes\n  nameWithType: Aes\n  fullName: System.Security.Cryptography.Aes\n  type: Class\n  assemblies:\n  - System.Security.Cryptography.Algorithms\n  - mscorlib\n  - netstandard\n  namespace: System.Security.Cryptography\n  summary: Represents the abstract base class from which all implementations of the Advanced Encryption Standard (AES) must inherit.\n  remarks: ''\n  example:\n  - \"The following example demonstrates how to encrypt and decrypt sample data by using the <xref:System.Security.Cryptography.Aes> class.  \\n  \\n [!code-csharp[AesSample#1](~/samples/snippets/csharp/VS_Snippets_CLR/aessample/cs/program.cs#1)]\\n [!code-vb[AesSample#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/aessample/vb/program.vb#1)]\"\n  syntax:\n    content: 'public abstract class Aes : System.Security.Cryptography.SymmetricAlgorithm'\n  inheritance:\n  - System.Object\n  - System.Security.Cryptography.SymmetricAlgorithm\n  derivedClasses:\n  - System.Security.Cryptography.AesCng\n  - System.Security.Cryptography.AesCryptoServiceProvider\n  - System.Security.Cryptography.AesManaged\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  - System.Security.Cryptography.SymmetricAlgorithm.BlockSize\n  - System.Security.Cryptography.SymmetricAlgorithm.BlockSizeValue\n  - System.Security.Cryptography.SymmetricAlgorithm.Clear\n  - System.Security.Cryptography.SymmetricAlgorithm.CreateDecryptor\n  - System.Security.Cryptography.SymmetricAlgorithm.CreateDecryptor(System.Byte[],System.Byte[])\n  - System.Security.Cryptography.SymmetricAlgorithm.CreateEncryptor\n  - System.Security.Cryptography.SymmetricAlgorithm.CreateEncryptor(System.Byte[],System.Byte[])\n  - System.Security.Cryptography.SymmetricAlgorithm.Dispose\n  - System.Security.Cryptography.SymmetricAlgorithm.Dispose(System.Boolean)\n  - System.Security.Cryptography.SymmetricAlgorithm.FeedbackSize\n  - System.Security.Cryptography.SymmetricAlgorithm.FeedbackSizeValue\n  - System.Security.Cryptography.SymmetricAlgorithm.GenerateIV\n  - System.Security.Cryptography.SymmetricAlgorithm.GenerateKey\n  - System.Security.Cryptography.SymmetricAlgorithm.IV\n  - System.Security.Cryptography.SymmetricAlgorithm.IVValue\n  - System.Security.Cryptography.SymmetricAlgorithm.Key\n  - System.Security.Cryptography.SymmetricAlgorithm.KeySize\n  - System.Security.Cryptography.SymmetricAlgorithm.KeySizeValue\n  - System.Security.Cryptography.SymmetricAlgorithm.KeyValue\n  - System.Security.Cryptography.SymmetricAlgorithm.LegalBlockSizesValue\n  - System.Security.Cryptography.SymmetricAlgorithm.LegalKeySizesValue\n  - System.Security.Cryptography.SymmetricAlgorithm.Mode\n  - System.Security.Cryptography.SymmetricAlgorithm.ModeValue\n  - System.Security.Cryptography.SymmetricAlgorithm.Padding\n  - System.Security.Cryptography.SymmetricAlgorithm.PaddingValue\n  - System.Security.Cryptography.SymmetricAlgorithm.ValidKeySize(System.Int32)\n  attributes: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/Aes.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.Aes.#ctor\n  commentId: M:System.Security.Cryptography.Aes.#ctor\n  id: '#ctor'\n  parent: System.Security.Cryptography.Aes\n  langs:\n  - csharp\n  name: Aes()\n  nameWithType: Aes.Aes()\n  fullName: Aes.Aes()\n  type: Constructor\n  assemblies:\n  - System.Security.Cryptography.Algorithms\n  - mscorlib\n  - netstandard\n  namespace: System.Security.Cryptography\n  summary: Initializes a new instance of the <xref href=\"System.Security.Cryptography.Aes\"></xref> class.\n  remarks: ''\n  example:\n  - \"The following example demonstrates how to encrypt and decrypt sample data using the <xref:System.Security.Cryptography.Aes> class.  \\n  \\n [!code-csharp[AesSample#1](~/samples/snippets/csharp/VS_Snippets_CLR/aessample/cs/program.cs#1)]\\n [!code-vb[AesSample#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/aessample/vb/program.vb#1)]\"\n  syntax:\n    content: protected Aes ();\n    parameters: []\n  overload: System.Security.Cryptography.Aes.#ctor*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/Aes.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.Aes.Create\n  commentId: M:System.Security.Cryptography.Aes.Create\n  id: Create\n  parent: System.Security.Cryptography.Aes\n  langs:\n  - csharp\n  name: Create()\n  nameWithType: Aes.Create()\n  fullName: Aes.Create()\n  type: Method\n  assemblies:\n  - System.Security.Cryptography.Algorithms\n  - mscorlib\n  - netstandard\n  namespace: System.Security.Cryptography\n  summary: Creates a cryptographic object that is used to perform the symmetric algorithm.\n  syntax:\n    content: public static System.Security.Cryptography.Aes Create ();\n    parameters: []\n    return:\n      type: System.Security.Cryptography.Aes\n      description: A cryptographic object that is used to perform the symmetric algorithm.\n  overload: System.Security.Cryptography.Aes.Create*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/Aes.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.Aes.Create(System.String)\n  commentId: M:System.Security.Cryptography.Aes.Create(System.String)\n  id: Create(System.String)\n  parent: System.Security.Cryptography.Aes\n  langs:\n  - csharp\n  name: Create(String)\n  nameWithType: Aes.Create(String)\n  fullName: Aes.Create(String)\n  type: Method\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Security.Cryptography.Algorithms\n  namespace: System.Security.Cryptography\n  summary: Creates a cryptographic object that specifies the implementation of AES to use to perform the symmetric algorithm.\n  remarks: 'Possible `algorithmName` values are: \"AES\", \"AesCryptoServiceProvider\", \"System.Security.Cryptography.AesCryptoServiceProvider\", \"AesManaged\", and \"System.Security.Cryptography.AesManaged\".'\n  syntax:\n    content: public static System.Security.Cryptography.Aes Create (string algorithmName);\n    parameters:\n    - id: algorithmName\n      type: System.String\n      description: The name of the specific implementation of AES to use.\n    return:\n      type: System.Security.Cryptography.Aes\n      description: A cryptographic object that is used to perform the symmetric algorithm.\n  overload: System.Security.Cryptography.Aes.Create*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <code>algorithmName</code> parameter is `null`.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/Aes.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Cryptography.Aes.LegalBlockSizes\n  commentId: P:System.Security.Cryptography.Aes.LegalBlockSizes\n  id: LegalBlockSizes\n  parent: System.Security.Cryptography.Aes\n  langs:\n  - csharp\n  name: LegalBlockSizes\n  nameWithType: Aes.LegalBlockSizes\n  fullName: Aes.LegalBlockSizes\n  type: Property\n  assemblies:\n  - System.Security.Cryptography.Algorithms\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public override System.Security.Cryptography.KeySizes[] LegalBlockSizes { get; }\n    return:\n      type: System.Security.Cryptography.KeySizes[]\n      description: ''\n  overload: System.Security.Cryptography.Aes.LegalBlockSizes*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/Aes.xml\n- uid: System.Security.Cryptography.Aes.LegalKeySizes\n  commentId: P:System.Security.Cryptography.Aes.LegalKeySizes\n  id: LegalKeySizes\n  parent: System.Security.Cryptography.Aes\n  langs:\n  - csharp\n  name: LegalKeySizes\n  nameWithType: Aes.LegalKeySizes\n  fullName: Aes.LegalKeySizes\n  type: Property\n  assemblies:\n  - System.Security.Cryptography.Algorithms\n  namespace: System.Security.Cryptography\n  syntax:\n    content: public override System.Security.Cryptography.KeySizes[] LegalKeySizes { get; }\n    return:\n      type: System.Security.Cryptography.KeySizes[]\n      description: ''\n  overload: System.Security.Cryptography.Aes.LegalKeySizes*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/Aes.xml\nreferences:\n- uid: System.Security.Cryptography.SymmetricAlgorithm\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: SymmetricAlgorithm\n  nameWithType: SymmetricAlgorithm\n  fullName: System.Security.Cryptography.SymmetricAlgorithm\n- uid: System.ArgumentNullException\n  parent: System\n  isExternal: false\n  name: ArgumentNullException\n  nameWithType: ArgumentNullException\n  fullName: System.ArgumentNullException\n- uid: System.Security.Cryptography.Aes.#ctor\n  parent: System.Security.Cryptography.Aes\n  isExternal: false\n  name: Aes()\n  nameWithType: Aes.Aes()\n  fullName: Aes.Aes()\n- uid: System.Security.Cryptography.Aes.Create\n  parent: System.Security.Cryptography.Aes\n  isExternal: false\n  name: Create()\n  nameWithType: Aes.Create()\n  fullName: Aes.Create()\n- uid: System.Security.Cryptography.Aes\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: Aes\n  nameWithType: Aes\n  fullName: System.Security.Cryptography.Aes\n- uid: System.Security.Cryptography.Aes.Create(System.String)\n  parent: System.Security.Cryptography.Aes\n  isExternal: false\n  name: Create(String)\n  nameWithType: Aes.Create(String)\n  fullName: Aes.Create(String)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Security.Cryptography.Aes.LegalBlockSizes\n  parent: System.Security.Cryptography.Aes\n  isExternal: false\n  name: LegalBlockSizes\n  nameWithType: Aes.LegalBlockSizes\n  fullName: Aes.LegalBlockSizes\n- uid: System.Security.Cryptography.KeySizes\n  name: KeySizes\n  nameWithType: KeySizes\n  fullName: System.Security.Cryptography.KeySizes\n- uid: System.Security.Cryptography.KeySizes[]\n  parent: System.Security.Cryptography\n  isExternal: false\n  name: KeySizes[]\n  nameWithType: KeySizes[]\n  fullName: System.Security.Cryptography.KeySizes[]\n  spec.csharp:\n  - uid: System.Security.Cryptography.KeySizes\n    name: KeySizes\n    nameWithType: KeySizes\n    fullName: System.Security.Cryptography.KeySizes\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Security.Cryptography.Aes.LegalKeySizes\n  parent: System.Security.Cryptography.Aes\n  isExternal: false\n  name: LegalKeySizes\n  nameWithType: Aes.LegalKeySizes\n  fullName: Aes.LegalKeySizes\n- uid: System.Security.Cryptography.Aes.#ctor*\n  parent: System.Security.Cryptography.Aes\n  isExternal: false\n  name: Aes\n  nameWithType: Aes.Aes\n  fullName: Aes.Aes\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/Aes.xml\n- uid: System.Security.Cryptography.Aes.Create*\n  parent: System.Security.Cryptography.Aes\n  isExternal: false\n  name: Create\n  nameWithType: Aes.Create\n  fullName: Aes.Create\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/Aes.xml\n- uid: System.Security.Cryptography.Aes.LegalBlockSizes*\n  parent: System.Security.Cryptography.Aes\n  isExternal: false\n  name: LegalBlockSizes\n  nameWithType: Aes.LegalBlockSizes\n  fullName: Aes.LegalBlockSizes\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/Aes.xml\n- uid: System.Security.Cryptography.Aes.LegalKeySizes*\n  parent: System.Security.Cryptography.Aes\n  isExternal: false\n  name: LegalKeySizes\n  nameWithType: Aes.LegalKeySizes\n  fullName: Aes.LegalKeySizes\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/Aes.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.Security.Cryptography.SymmetricAlgorithm.BlockSize\n  parent: System.Security.Cryptography.SymmetricAlgorithm\n  isExternal: false\n  name: BlockSize\n  nameWithType: SymmetricAlgorithm.BlockSize\n  fullName: SymmetricAlgorithm.BlockSize\n- uid: System.Security.Cryptography.SymmetricAlgorithm.BlockSizeValue\n  parent: System.Security.Cryptography.SymmetricAlgorithm\n  isExternal: false\n  name: BlockSizeValue\n  nameWithType: SymmetricAlgorithm.BlockSizeValue\n  fullName: SymmetricAlgorithm.BlockSizeValue\n- uid: System.Security.Cryptography.SymmetricAlgorithm.Clear\n  parent: System.Security.Cryptography.SymmetricAlgorithm\n  isExternal: false\n  name: Clear()\n  nameWithType: SymmetricAlgorithm.Clear()\n  fullName: SymmetricAlgorithm.Clear()\n- uid: System.Security.Cryptography.SymmetricAlgorithm.CreateDecryptor\n  parent: System.Security.Cryptography.SymmetricAlgorithm\n  isExternal: false\n  name: CreateDecryptor()\n  nameWithType: SymmetricAlgorithm.CreateDecryptor()\n  fullName: SymmetricAlgorithm.CreateDecryptor()\n- uid: System.Security.Cryptography.SymmetricAlgorithm.CreateDecryptor(System.Byte[],System.Byte[])\n  parent: System.Security.Cryptography.SymmetricAlgorithm\n  isExternal: false\n  name: CreateDecryptor(Byte[], Byte[])\n  nameWithType: SymmetricAlgorithm.CreateDecryptor(Byte[], Byte[])\n  fullName: SymmetricAlgorithm.CreateDecryptor(Byte[], Byte[])\n- uid: System.Security.Cryptography.SymmetricAlgorithm.CreateEncryptor\n  parent: System.Security.Cryptography.SymmetricAlgorithm\n  isExternal: false\n  name: CreateEncryptor()\n  nameWithType: SymmetricAlgorithm.CreateEncryptor()\n  fullName: SymmetricAlgorithm.CreateEncryptor()\n- uid: System.Security.Cryptography.SymmetricAlgorithm.CreateEncryptor(System.Byte[],System.Byte[])\n  parent: System.Security.Cryptography.SymmetricAlgorithm\n  isExternal: false\n  name: CreateEncryptor(Byte[], Byte[])\n  nameWithType: SymmetricAlgorithm.CreateEncryptor(Byte[], Byte[])\n  fullName: SymmetricAlgorithm.CreateEncryptor(Byte[], Byte[])\n- uid: System.Security.Cryptography.SymmetricAlgorithm.Dispose\n  parent: System.Security.Cryptography.SymmetricAlgorithm\n  isExternal: false\n  name: Dispose()\n  nameWithType: SymmetricAlgorithm.Dispose()\n  fullName: SymmetricAlgorithm.Dispose()\n- uid: System.Security.Cryptography.SymmetricAlgorithm.Dispose(System.Boolean)\n  parent: System.Security.Cryptography.SymmetricAlgorithm\n  isExternal: false\n  name: Dispose(Boolean)\n  nameWithType: SymmetricAlgorithm.Dispose(Boolean)\n  fullName: SymmetricAlgorithm.Dispose(Boolean)\n- uid: System.Security.Cryptography.SymmetricAlgorithm.FeedbackSize\n  parent: System.Security.Cryptography.SymmetricAlgorithm\n  isExternal: false\n  name: FeedbackSize\n  nameWithType: SymmetricAlgorithm.FeedbackSize\n  fullName: SymmetricAlgorithm.FeedbackSize\n- uid: System.Security.Cryptography.SymmetricAlgorithm.FeedbackSizeValue\n  parent: System.Security.Cryptography.SymmetricAlgorithm\n  isExternal: false\n  name: FeedbackSizeValue\n  nameWithType: SymmetricAlgorithm.FeedbackSizeValue\n  fullName: SymmetricAlgorithm.FeedbackSizeValue\n- uid: System.Security.Cryptography.SymmetricAlgorithm.GenerateIV\n  parent: System.Security.Cryptography.SymmetricAlgorithm\n  isExternal: false\n  name: GenerateIV()\n  nameWithType: SymmetricAlgorithm.GenerateIV()\n  fullName: SymmetricAlgorithm.GenerateIV()\n- uid: System.Security.Cryptography.SymmetricAlgorithm.GenerateKey\n  parent: System.Security.Cryptography.SymmetricAlgorithm\n  isExternal: false\n  name: GenerateKey()\n  nameWithType: SymmetricAlgorithm.GenerateKey()\n  fullName: SymmetricAlgorithm.GenerateKey()\n- uid: System.Security.Cryptography.SymmetricAlgorithm.IV\n  parent: System.Security.Cryptography.SymmetricAlgorithm\n  isExternal: false\n  name: IV\n  nameWithType: SymmetricAlgorithm.IV\n  fullName: SymmetricAlgorithm.IV\n- uid: System.Security.Cryptography.SymmetricAlgorithm.IVValue\n  parent: System.Security.Cryptography.SymmetricAlgorithm\n  isExternal: false\n  name: IVValue\n  nameWithType: SymmetricAlgorithm.IVValue\n  fullName: SymmetricAlgorithm.IVValue\n- uid: System.Security.Cryptography.SymmetricAlgorithm.Key\n  parent: System.Security.Cryptography.SymmetricAlgorithm\n  isExternal: false\n  name: Key\n  nameWithType: SymmetricAlgorithm.Key\n  fullName: SymmetricAlgorithm.Key\n- uid: System.Security.Cryptography.SymmetricAlgorithm.KeySize\n  parent: System.Security.Cryptography.SymmetricAlgorithm\n  isExternal: false\n  name: KeySize\n  nameWithType: SymmetricAlgorithm.KeySize\n  fullName: SymmetricAlgorithm.KeySize\n- uid: System.Security.Cryptography.SymmetricAlgorithm.KeySizeValue\n  parent: System.Security.Cryptography.SymmetricAlgorithm\n  isExternal: false\n  name: KeySizeValue\n  nameWithType: SymmetricAlgorithm.KeySizeValue\n  fullName: SymmetricAlgorithm.KeySizeValue\n- uid: System.Security.Cryptography.SymmetricAlgorithm.KeyValue\n  parent: System.Security.Cryptography.SymmetricAlgorithm\n  isExternal: false\n  name: KeyValue\n  nameWithType: SymmetricAlgorithm.KeyValue\n  fullName: SymmetricAlgorithm.KeyValue\n- uid: System.Security.Cryptography.SymmetricAlgorithm.LegalBlockSizesValue\n  parent: System.Security.Cryptography.SymmetricAlgorithm\n  isExternal: false\n  name: LegalBlockSizesValue\n  nameWithType: SymmetricAlgorithm.LegalBlockSizesValue\n  fullName: SymmetricAlgorithm.LegalBlockSizesValue\n- uid: System.Security.Cryptography.SymmetricAlgorithm.LegalKeySizesValue\n  parent: System.Security.Cryptography.SymmetricAlgorithm\n  isExternal: false\n  name: LegalKeySizesValue\n  nameWithType: SymmetricAlgorithm.LegalKeySizesValue\n  fullName: SymmetricAlgorithm.LegalKeySizesValue\n- uid: System.Security.Cryptography.SymmetricAlgorithm.Mode\n  parent: System.Security.Cryptography.SymmetricAlgorithm\n  isExternal: false\n  name: Mode\n  nameWithType: SymmetricAlgorithm.Mode\n  fullName: SymmetricAlgorithm.Mode\n- uid: System.Security.Cryptography.SymmetricAlgorithm.ModeValue\n  parent: System.Security.Cryptography.SymmetricAlgorithm\n  isExternal: false\n  name: ModeValue\n  nameWithType: SymmetricAlgorithm.ModeValue\n  fullName: SymmetricAlgorithm.ModeValue\n- uid: System.Security.Cryptography.SymmetricAlgorithm.Padding\n  parent: System.Security.Cryptography.SymmetricAlgorithm\n  isExternal: false\n  name: Padding\n  nameWithType: SymmetricAlgorithm.Padding\n  fullName: SymmetricAlgorithm.Padding\n- uid: System.Security.Cryptography.SymmetricAlgorithm.PaddingValue\n  parent: System.Security.Cryptography.SymmetricAlgorithm\n  isExternal: false\n  name: PaddingValue\n  nameWithType: SymmetricAlgorithm.PaddingValue\n  fullName: SymmetricAlgorithm.PaddingValue\n- uid: System.Security.Cryptography.SymmetricAlgorithm.ValidKeySize(System.Int32)\n  parent: System.Security.Cryptography.SymmetricAlgorithm\n  isExternal: false\n  name: ValidKeySize(Int32)\n  nameWithType: SymmetricAlgorithm.ValidKeySize(Int32)\n  fullName: SymmetricAlgorithm.ValidKeySize(Int32)\n"}