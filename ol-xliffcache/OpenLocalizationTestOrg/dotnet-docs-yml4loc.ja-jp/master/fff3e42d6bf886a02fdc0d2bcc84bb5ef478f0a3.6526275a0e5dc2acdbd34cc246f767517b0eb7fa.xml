{"nodes":[{"content":"Factory that provides instances of <xref href=\"System.ServiceModel.ServiceHost\"></xref> in managed hosting environments where the host instance is created dynamically in response to incoming messages.","nodes":[{"pos":[0,200],"content":"Factory that provides instances of <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.ServiceHost\"&gt;&lt;/xref&gt;</ph> in managed hosting environments where the host instance is created dynamically in response to incoming messages.","source":"Factory that provides instances of <xref href=\"System.ServiceModel.ServiceHost\"></xref> in managed hosting environments where the host instance is created dynamically in response to incoming messages."}],"pos":[715,916],"yaml":true},{"content":"The managed hosting environments that support dynamic activation are Internet Information Services (IIS) and Windows Process Activation Service (WAS).  \n  \n If you have implemented a custom derivative of <xref:System.ServiceModel.ServiceHost>, consider also implementing a factory that derives from the <xref:System.ServiceModel.Activation.ServiceHostFactory> class.  \n  \n If you have implemented a custom derivative of <xref:System.ServiceModel.ServiceHostBase> instead, then consider also implementing a factory that derives your factory from <xref:System.ServiceModel.Activation.ServiceHostFactoryBase> directly.","nodes":[{"pos":[0,150],"content":"The managed hosting environments that support dynamic activation are Internet Information Services (IIS) and Windows Process Activation Service (WAS).","nodes":[{"content":"The managed hosting environments that support dynamic activation are Internet Information Services (IIS) and Windows Process Activation Service (WAS).","pos":[0,150]}]},{"pos":[157,366],"content":"If you have implemented a custom derivative of <xref:System.ServiceModel.ServiceHost>, consider also implementing a factory that derives from the <xref:System.ServiceModel.Activation.ServiceHostFactory> class.","nodes":[{"content":"If you have implemented a custom derivative of <ph id=\"ph1\">&lt;xref:System.ServiceModel.ServiceHost&gt;</ph>, consider also implementing a factory that derives from the <ph id=\"ph2\">&lt;xref:System.ServiceModel.Activation.ServiceHostFactory&gt;</ph> class.","pos":[0,209],"source":"If you have implemented a custom derivative of <xref:System.ServiceModel.ServiceHost>, consider also implementing a factory that derives from the <xref:System.ServiceModel.Activation.ServiceHostFactory> class."}]},{"pos":[373,615],"content":"If you have implemented a custom derivative of <xref:System.ServiceModel.ServiceHostBase> instead, then consider also implementing a factory that derives your factory from <xref:System.ServiceModel.Activation.ServiceHostFactoryBase> directly.","nodes":[{"content":"If you have implemented a custom derivative of <ph id=\"ph1\">&lt;xref:System.ServiceModel.ServiceHostBase&gt;</ph> instead, then consider also implementing a factory that derives your factory from <ph id=\"ph2\">&lt;xref:System.ServiceModel.Activation.ServiceHostFactoryBase&gt;</ph> directly.","pos":[0,242],"source":"If you have implemented a custom derivative of <xref:System.ServiceModel.ServiceHostBase> instead, then consider also implementing a factory that derives your factory from <xref:System.ServiceModel.Activation.ServiceHostFactoryBase> directly."}]}],"pos":[927,1549],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.ServiceModel.Activation.ServiceHostFactory\"></xref> class.","nodes":[{"pos":[0,111],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Activation.ServiceHostFactory\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.ServiceModel.Activation.ServiceHostFactory\"></xref> class."}],"pos":[3723,3835],"yaml":true},{"content":"Creates a <xref href=\"System.ServiceModel.ServiceHost\"></xref> with specific base addresses and initializes it with specified data.","nodes":[{"pos":[0,131],"content":"Creates a <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.ServiceHost\"&gt;&lt;/xref&gt;</ph> with specific base addresses and initializes it with specified data.","source":"Creates a <xref href=\"System.ServiceModel.ServiceHost\"></xref> with specific base addresses and initializes it with specified data."}],"pos":[5551,5683],"yaml":true},{"content":"The initialization data passed to the <xref href=\"System.ServiceModel.ServiceHostBase\"></xref> instance being constructed by the factory.","nodes":[{"pos":[0,137],"content":"The initialization data passed to the <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.ServiceHostBase\"&gt;&lt;/xref&gt;</ph> instance being constructed by the factory.","source":"The initialization data passed to the <xref href=\"System.ServiceModel.ServiceHostBase\"></xref> instance being constructed by the factory."}],"pos":[6341,6479],"yaml":true},{"content":"The <xref href=\"System.Array\"></xref> of type <xref href=\"System.Uri\"></xref> that contains the base addresses for the service hosted.","nodes":[{"pos":[0,134],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Array\"&gt;&lt;/xref&gt;</ph> of type <ph id=\"ph2\">&lt;xref href=\"System.Uri\"&gt;&lt;/xref&gt;</ph> that contains the base addresses for the service hosted.","source":"The <xref href=\"System.Array\"></xref> of type <xref href=\"System.Uri\"></xref> that contains the base addresses for the service hosted."}],"pos":[6547,6682],"yaml":true},{"content":"A <xref href=\"System.ServiceModel.ServiceHost\"></xref> with specific base addresses.","nodes":[{"pos":[0,84],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.ServiceHost\"&gt;&lt;/xref&gt;</ph> with specific base addresses.","source":"A <xref href=\"System.ServiceModel.ServiceHost\"></xref> with specific base addresses."}],"pos":[6761,6846],"yaml":true},{"content":"<code>baseAddress</code> is `null`.","nodes":[{"pos":[0,35],"content":"<ph id=\"ph1\">&lt;code&gt;baseAddress&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>baseAddress</code> is `null`."}],"pos":[7043,7079],"yaml":true},{"content":"There is no hosting context provided or <code>constructorString</code> is `null` or empty.","nodes":[{"pos":[0,90],"content":"There is no hosting context provided or <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">constructorString</ph><ept id=\"p1\">&lt;/code&gt;</ept> is <ph id=\"ph2\">`null`</ph> or empty.","source":"There is no hosting context provided or <code>constructorString</code> is `null` or empty."}],"pos":[7189,7280],"yaml":true},{"content":"Creates a <xref href=\"System.ServiceModel.ServiceHost\"></xref> for a specified type of service with a specific base address.","nodes":[{"pos":[0,124],"content":"Creates a <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.ServiceHost\"&gt;&lt;/xref&gt;</ph> for a specified type of service with a specific base address.","source":"Creates a <xref href=\"System.ServiceModel.ServiceHost\"></xref> for a specified type of service with a specific base address."}],"pos":[8451,8576],"yaml":true},{"content":"Specifies the type of service to host.","nodes":[{"pos":[0,38],"content":"Specifies the type of service to host.","nodes":[{"content":"Specifies the type of service to host.","pos":[0,38]}]}],"pos":[9006,9045],"yaml":true},{"content":"The <xref href=\"System.Array\"></xref> of type <xref href=\"System.Uri\"></xref> that contains the base addresses for the service hosted.","nodes":[{"pos":[0,134],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Array\"&gt;&lt;/xref&gt;</ph> of type <ph id=\"ph2\">&lt;xref href=\"System.Uri\"&gt;&lt;/xref&gt;</ph> that contains the base addresses for the service hosted.","source":"The <xref href=\"System.Array\"></xref> of type <xref href=\"System.Uri\"></xref> that contains the base addresses for the service hosted."}],"pos":[9113,9248],"yaml":true},{"content":"A <xref href=\"System.ServiceModel.ServiceHost\"></xref> for the type of service specified with a specific base address.","nodes":[{"pos":[0,118],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.ServiceHost\"&gt;&lt;/xref&gt;</ph> for the type of service specified with a specific base address.","source":"A <xref href=\"System.ServiceModel.ServiceHost\"></xref> for the type of service specified with a specific base address."}],"pos":[9323,9442],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.ServiceModel.Activation.ServiceHostFactory\n  commentId: T:System.ServiceModel.Activation.ServiceHostFactory\n  id: ServiceHostFactory\n  children:\n  - System.ServiceModel.Activation.ServiceHostFactory.#ctor\n  - System.ServiceModel.Activation.ServiceHostFactory.CreateServiceHost(System.String,System.Uri[])\n  - System.ServiceModel.Activation.ServiceHostFactory.CreateServiceHost(System.Type,System.Uri[])\n  langs:\n  - csharp\n  name: ServiceHostFactory\n  nameWithType: ServiceHostFactory\n  fullName: System.ServiceModel.Activation.ServiceHostFactory\n  type: Class\n  assemblies:\n  - System.ServiceModel.Activation\n  namespace: System.ServiceModel.Activation\n  summary: Factory that provides instances of <xref href=\"System.ServiceModel.ServiceHost\"></xref> in managed hosting environments where the host instance is created dynamically in response to incoming messages.\n  remarks: \"The managed hosting environments that support dynamic activation are Internet Information Services (IIS) and Windows Process Activation Service (WAS).  \\n  \\n If you have implemented a custom derivative of <xref:System.ServiceModel.ServiceHost>, consider also implementing a factory that derives from the <xref:System.ServiceModel.Activation.ServiceHostFactory> class.  \\n  \\n If you have implemented a custom derivative of <xref:System.ServiceModel.ServiceHostBase> instead, then consider also implementing a factory that derives your factory from <xref:System.ServiceModel.Activation.ServiceHostFactoryBase> directly.\"\n  example:\n  - \"This examples show how to use the <xref:System.ServiceModel.Activation.ServiceHostFactory> class:  \\n  \\n [!code-csharp[ServiceHostFactory#0](~/samples/snippets/csharp/VS_Snippets_CFX/servicehostfactory/cs/program.cs#0)]\\n [!code-vb[ServiceHostFactory#0](~/samples/snippets/visualbasic/VS_Snippets_CFX/servicehostfactory/vb/program.vb#0)]\"\n  syntax:\n    content: 'public class ServiceHostFactory : System.ServiceModel.Activation.ServiceHostFactoryBase'\n  inheritance:\n  - System.Object\n  - System.ServiceModel.Activation.ServiceHostFactoryBase\n  derivedClasses:\n  - System.Data.Services.DataServiceHostFactory\n  - System.ServiceModel.Activation.WebScriptServiceHostFactory\n  - System.ServiceModel.Activation.WebServiceHostFactory\n  - System.Web.ApplicationServices.ApplicationServicesHostFactory\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Activation/ServiceHostFactory.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Activation.ServiceHostFactory.#ctor\n  commentId: M:System.ServiceModel.Activation.ServiceHostFactory.#ctor\n  id: '#ctor'\n  parent: System.ServiceModel.Activation.ServiceHostFactory\n  langs:\n  - csharp\n  name: ServiceHostFactory()\n  nameWithType: ServiceHostFactory.ServiceHostFactory()\n  fullName: ServiceHostFactory.ServiceHostFactory()\n  type: Constructor\n  assemblies:\n  - System.ServiceModel.Activation\n  namespace: System.ServiceModel.Activation\n  summary: Initializes a new instance of the <xref href=\"System.ServiceModel.Activation.ServiceHostFactory\"></xref> class.\n  remarks: ''\n  example:\n  - \"This examples show how to use the <xref:System.ServiceModel.Activation.ServiceHostFactory.%23ctor%2A>:  \\n  \\n [!code-csharp[ServiceHostFactory#1](~/samples/snippets/csharp/VS_Snippets_CFX/servicehostfactory/cs/program.cs#1)]\\n [!code-vb[ServiceHostFactory#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/servicehostfactory/vb/program.vb#1)]\"\n  syntax:\n    content: public ServiceHostFactory ();\n    parameters: []\n  overload: System.ServiceModel.Activation.ServiceHostFactory.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Activation/ServiceHostFactory.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Activation.ServiceHostFactory.CreateServiceHost(System.String,System.Uri[])\n  commentId: M:System.ServiceModel.Activation.ServiceHostFactory.CreateServiceHost(System.String,System.Uri[])\n  id: CreateServiceHost(System.String,System.Uri[])\n  parent: System.ServiceModel.Activation.ServiceHostFactory\n  langs:\n  - csharp\n  name: CreateServiceHost(String, Uri[])\n  nameWithType: ServiceHostFactory.CreateServiceHost(String, Uri[])\n  fullName: ServiceHostFactory.CreateServiceHost(String, Uri[])\n  type: Method\n  assemblies:\n  - System.ServiceModel.Activation\n  namespace: System.ServiceModel.Activation\n  summary: Creates a <xref href=\"System.ServiceModel.ServiceHost\"></xref> with specific base addresses and initializes it with specified data.\n  remarks: ''\n  example:\n  - \"This example shows how to use the <xref:System.ServiceModel.Activation.ServiceHostFactory.CreateServiceHost%28System.String%2CSystem.Uri%5B%5D%29> method:  \\n  \\n [!code-csharp[ServiceHostFactory#3](~/samples/snippets/csharp/VS_Snippets_CFX/servicehostfactory/cs/program.cs#3)]\\n [!code-vb[ServiceHostFactory#3](~/samples/snippets/visualbasic/VS_Snippets_CFX/servicehostfactory/vb/program.vb#3)]\"\n  syntax:\n    content: public override System.ServiceModel.ServiceHostBase CreateServiceHost (string constructorString, Uri[] baseAddresses);\n    parameters:\n    - id: constructorString\n      type: System.String\n      description: The initialization data passed to the <xref href=\"System.ServiceModel.ServiceHostBase\"></xref> instance being constructed by the factory.\n    - id: baseAddresses\n      type: System.Uri[]\n      description: The <xref href=\"System.Array\"></xref> of type <xref href=\"System.Uri\"></xref> that contains the base addresses for the service hosted.\n    return:\n      type: System.ServiceModel.ServiceHostBase\n      description: A <xref href=\"System.ServiceModel.ServiceHost\"></xref> with specific base addresses.\n  overload: System.ServiceModel.Activation.ServiceHostFactory.CreateServiceHost*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>baseAddress</code> is `null`.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: There is no hosting context provided or <code>constructorString</code> is `null` or empty.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Activation/ServiceHostFactory.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Activation.ServiceHostFactory.CreateServiceHost(System.Type,System.Uri[])\n  commentId: M:System.ServiceModel.Activation.ServiceHostFactory.CreateServiceHost(System.Type,System.Uri[])\n  id: CreateServiceHost(System.Type,System.Uri[])\n  parent: System.ServiceModel.Activation.ServiceHostFactory\n  langs:\n  - csharp\n  name: CreateServiceHost(Type, Uri[])\n  nameWithType: ServiceHostFactory.CreateServiceHost(Type, Uri[])\n  fullName: ServiceHostFactory.CreateServiceHost(Type, Uri[])\n  type: Method\n  assemblies:\n  - System.ServiceModel.Activation\n  namespace: System.ServiceModel.Activation\n  summary: Creates a <xref href=\"System.ServiceModel.ServiceHost\"></xref> for a specified type of service with a specific base address.\n  remarks: ''\n  example:\n  - 'This example shows how to create an override implementation of the <xref:System.ServiceModel.Activation.ServiceHostFactory.CreateServiceHost%28System.Type%2CSystem.Uri%5B%5D%29> method:'\n  syntax:\n    content: protected virtual System.ServiceModel.ServiceHost CreateServiceHost (Type serviceType, Uri[] baseAddresses);\n    parameters:\n    - id: serviceType\n      type: System.Type\n      description: Specifies the type of service to host.\n    - id: baseAddresses\n      type: System.Uri[]\n      description: The <xref href=\"System.Array\"></xref> of type <xref href=\"System.Uri\"></xref> that contains the base addresses for the service hosted.\n    return:\n      type: System.ServiceModel.ServiceHost\n      description: A <xref href=\"System.ServiceModel.ServiceHost\"></xref> for the type of service specified with a specific base address.\n  overload: System.ServiceModel.Activation.ServiceHostFactory.CreateServiceHost*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Activation/ServiceHostFactory.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\nreferences:\n- uid: System.ServiceModel.Activation.ServiceHostFactoryBase\n  parent: System.ServiceModel.Activation\n  isExternal: false\n  name: ServiceHostFactoryBase\n  nameWithType: ServiceHostFactoryBase\n  fullName: System.ServiceModel.Activation.ServiceHostFactoryBase\n- uid: System.ArgumentNullException\n  parent: System\n  isExternal: false\n  name: ArgumentNullException\n  nameWithType: ArgumentNullException\n  fullName: System.ArgumentNullException\n- uid: System.InvalidOperationException\n  parent: System\n  isExternal: false\n  name: InvalidOperationException\n  nameWithType: InvalidOperationException\n  fullName: System.InvalidOperationException\n- uid: System.ServiceModel.Activation.ServiceHostFactory.#ctor\n  parent: System.ServiceModel.Activation.ServiceHostFactory\n  isExternal: false\n  name: ServiceHostFactory()\n  nameWithType: ServiceHostFactory.ServiceHostFactory()\n  fullName: ServiceHostFactory.ServiceHostFactory()\n- uid: System.ServiceModel.Activation.ServiceHostFactory.CreateServiceHost(System.String,System.Uri[])\n  parent: System.ServiceModel.Activation.ServiceHostFactory\n  isExternal: false\n  name: CreateServiceHost(String, Uri[])\n  nameWithType: ServiceHostFactory.CreateServiceHost(String, Uri[])\n  fullName: ServiceHostFactory.CreateServiceHost(String, Uri[])\n- uid: System.ServiceModel.ServiceHostBase\n  parent: System.ServiceModel\n  isExternal: false\n  name: ServiceHostBase\n  nameWithType: ServiceHostBase\n  fullName: System.ServiceModel.ServiceHostBase\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Uri\n  name: Uri\n  nameWithType: Uri\n  fullName: System.Uri\n- uid: System.Uri[]\n  parent: System\n  isExternal: false\n  name: Uri[]\n  nameWithType: Uri[]\n  fullName: System.Uri[]\n  spec.csharp:\n  - uid: System.Uri\n    name: Uri\n    nameWithType: Uri\n    fullName: System.Uri\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.ServiceModel.Activation.ServiceHostFactory.CreateServiceHost(System.Type,System.Uri[])\n  parent: System.ServiceModel.Activation.ServiceHostFactory\n  isExternal: false\n  name: CreateServiceHost(Type, Uri[])\n  nameWithType: ServiceHostFactory.CreateServiceHost(Type, Uri[])\n  fullName: ServiceHostFactory.CreateServiceHost(Type, Uri[])\n- uid: System.ServiceModel.ServiceHost\n  parent: System.ServiceModel\n  isExternal: false\n  name: ServiceHost\n  nameWithType: ServiceHost\n  fullName: System.ServiceModel.ServiceHost\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.ServiceModel.Activation.ServiceHostFactory.#ctor*\n  parent: System.ServiceModel.Activation.ServiceHostFactory\n  isExternal: false\n  name: ServiceHostFactory\n  nameWithType: ServiceHostFactory.ServiceHostFactory\n  fullName: ServiceHostFactory.ServiceHostFactory\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Activation/ServiceHostFactory.xml\n- uid: System.ServiceModel.Activation.ServiceHostFactory.CreateServiceHost*\n  parent: System.ServiceModel.Activation.ServiceHostFactory\n  isExternal: false\n  name: CreateServiceHost\n  nameWithType: ServiceHostFactory.CreateServiceHost\n  fullName: ServiceHostFactory.CreateServiceHost\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Activation/ServiceHostFactory.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n"}