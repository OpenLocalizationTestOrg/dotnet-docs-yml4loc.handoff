{"nodes":[{"content":"Base class for <xref href=\"System.Web.DynamicData.DynamicValidator\"></xref> classes that contain event data.","nodes":[{"pos":[0,108],"content":"Base class for <ph id=\"ph1\">&lt;xref href=\"System.Web.DynamicData.DynamicValidator\"&gt;&lt;/xref&gt;</ph> classes that contain event data.","source":"Base class for <xref href=\"System.Web.DynamicData.DynamicValidator\"></xref> classes that contain event data."}],"pos":[711,820],"yaml":true},{"content":"The <xref:System.Web.DynamicData.DynamicValidator> class catches exceptions thrown from LINQ to SQL classes or from Entity Framework methods in a data model. This class does not contain event data. It is used by events that do not pass state information to an event handler when an event is raised. If the event handler requires state information, you must create a derived class from this class to hold the data.","nodes":[{"pos":[0,413],"content":"The <xref:System.Web.DynamicData.DynamicValidator> class catches exceptions thrown from LINQ to SQL classes or from Entity Framework methods in a data model. This class does not contain event data. It is used by events that do not pass state information to an event handler when an event is raised. If the event handler requires state information, you must create a derived class from this class to hold the data.","nodes":[{"content":"The <xref:System.Web.DynamicData.DynamicValidator> class catches exceptions thrown from LINQ to SQL classes or from Entity Framework methods in a data model. This class does not contain event data. It is used by events that do not pass state information to an event handler when an event is raised. If the event handler requires state information, you must create a derived class from this class to hold the data.","pos":[0,413],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.DynamicData.DynamicValidator&gt;</ph> class catches exceptions thrown from LINQ to SQL classes or from Entity Framework methods in a data model.","pos":[0,157],"source":"The <xref:System.Web.DynamicData.DynamicValidator> class catches exceptions thrown from LINQ to SQL classes or from Entity Framework methods in a data model."},{"content":"This class does not contain event data.","pos":[158,197]},{"content":"It is used by events that do not pass state information to an event handler when an event is raised.","pos":[198,298]},{"content":"If the event handler requires state information, you must create a derived class from this class to hold the data.","pos":[299,413]}]}]}],"pos":[831,1245],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.Web.DynamicData.DynamicValidatorEventArgs\"></xref> class, using the exception that occurred and the data source operation that caused the exception.","nodes":[{"pos":[0,201],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Web.DynamicData.DynamicValidatorEventArgs\"&gt;&lt;/xref&gt;</ph> class, using the exception that occurred and the data source operation that caused the exception.","source":"Initializes a new instance of the <xref href=\"System.Web.DynamicData.DynamicValidatorEventArgs\"></xref> class, using the exception that occurred and the data source operation that caused the exception."}],"pos":[3061,3263],"yaml":true},{"content":"ASP.NET Dynamic Data provides data source operations that can be performed by a data source object. These operations include `Delete`, `Insert`, `Select` and `Update` and `ContextCreate`. If an exception occurs during a data source operation, the data source operation that caused the exception and the exception that occurred are represented by <xref:System.Web.DynamicData.DynamicValidatorEventArgs.Operation%2A> and <xref:System.Web.DynamicData.DynamicValidatorEventArgs.Exception%2A> respectively.  \n  \n This constructor initializes a new instance of the <xref:System.Web.DynamicData.DynamicValidatorEventArgs> class using these properties.","nodes":[{"pos":[0,501],"content":"ASP.NET Dynamic Data provides data source operations that can be performed by a data source object. These operations include `Delete`, `Insert`, `Select` and `Update` and `ContextCreate`. If an exception occurs during a data source operation, the data source operation that caused the exception and the exception that occurred are represented by <xref:System.Web.DynamicData.DynamicValidatorEventArgs.Operation%2A> and <xref:System.Web.DynamicData.DynamicValidatorEventArgs.Exception%2A> respectively.","nodes":[{"content":"ASP.NET Dynamic Data provides data source operations that can be performed by a data source object.","pos":[0,99]},{"content":"These operations include <ph id=\"ph1\">`Delete`</ph>, <ph id=\"ph2\">`Insert`</ph>, <ph id=\"ph3\">`Select`</ph> and <ph id=\"ph4\">`Update`</ph> and <ph id=\"ph5\">`ContextCreate`</ph>.","pos":[100,187],"source":" These operations include `Delete`, `Insert`, `Select` and `Update` and `ContextCreate`."},{"content":"If an exception occurs during a data source operation, the data source operation that caused the exception and the exception that occurred are represented by <ph id=\"ph1\">&lt;xref:System.Web.DynamicData.DynamicValidatorEventArgs.Operation%2A&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Web.DynamicData.DynamicValidatorEventArgs.Exception%2A&gt;</ph> respectively.","pos":[188,501],"source":" If an exception occurs during a data source operation, the data source operation that caused the exception and the exception that occurred are represented by <xref:System.Web.DynamicData.DynamicValidatorEventArgs.Operation%2A> and <xref:System.Web.DynamicData.DynamicValidatorEventArgs.Exception%2A> respectively."}]},{"pos":[508,644],"content":"This constructor initializes a new instance of the <xref:System.Web.DynamicData.DynamicValidatorEventArgs> class using these properties.","nodes":[{"content":"This constructor initializes a new instance of the <ph id=\"ph1\">&lt;xref:System.Web.DynamicData.DynamicValidatorEventArgs&gt;</ph> class using these properties.","pos":[0,136],"source":"This constructor initializes a new instance of the <xref:System.Web.DynamicData.DynamicValidatorEventArgs> class using these properties."}]}],"pos":[3274,3923],"yaml":true,"extradata":"MT"},{"content":"The exception that occurred.","nodes":[{"pos":[0,28],"content":"The exception that occurred.","nodes":[{"content":"The exception that occurred.","pos":[0,28]}]}],"pos":[4147,4176],"yaml":true},{"content":"The data source operation that caused the exception.","nodes":[{"pos":[0,52],"content":"The data source operation that caused the exception.","nodes":[{"content":"The data source operation that caused the exception.","pos":[0,52]}]}],"pos":[4277,4330],"yaml":true},{"content":"Gets the exception that occurs during a data source operation event.","nodes":[{"pos":[0,68],"content":"Gets the exception that occurs during a data source operation event.","nodes":[{"content":"Gets the exception that occurs during a data source operation event.","pos":[0,68]}]}],"pos":[5401,5470],"yaml":true},{"content":"ASP.NET Dynamic Data provides data source operations that can be performed by a data source object. These operations include `Delete`, `Insert`, `Select` and `Update` and `ContextCreate`. If an exception occurs, the <xref:System.Web.DynamicData.DynamicValidator> class uses this property to get the type of exception that is triggered during a data source operation.","nodes":[{"pos":[0,366],"content":"ASP.NET Dynamic Data provides data source operations that can be performed by a data source object. These operations include `Delete`, `Insert`, `Select` and `Update` and `ContextCreate`. If an exception occurs, the <xref:System.Web.DynamicData.DynamicValidator> class uses this property to get the type of exception that is triggered during a data source operation.","nodes":[{"content":"ASP.NET Dynamic Data provides data source operations that can be performed by a data source object.","pos":[0,99]},{"content":"These operations include <ph id=\"ph1\">`Delete`</ph>, <ph id=\"ph2\">`Insert`</ph>, <ph id=\"ph3\">`Select`</ph> and <ph id=\"ph4\">`Update`</ph> and <ph id=\"ph5\">`ContextCreate`</ph>.","pos":[100,187],"source":" These operations include `Delete`, `Insert`, `Select` and `Update` and `ContextCreate`."},{"content":"If an exception occurs, the <ph id=\"ph1\">&lt;xref:System.Web.DynamicData.DynamicValidator&gt;</ph> class uses this property to get the type of exception that is triggered during a data source operation.","pos":[188,366],"source":" If an exception occurs, the <xref:System.Web.DynamicData.DynamicValidator> class uses this property to get the type of exception that is triggered during a data source operation."}]}],"pos":[5481,5848],"yaml":true,"extradata":"MT"},{"content":"The exception that occurred during the data source operation event.","nodes":[{"pos":[0,67],"content":"The exception that occurred during the data source operation event.","nodes":[{"content":"The exception that occurred during the data source operation event.","pos":[0,67]}]}],"pos":[5967,6035],"yaml":true},{"content":"Gets the data source operation that caused an exception in the <xref href=\"System.Web.DynamicData.DynamicValidator\"></xref> class.","nodes":[{"pos":[0,130],"content":"Gets the data source operation that caused an exception in the <ph id=\"ph1\">&lt;xref href=\"System.Web.DynamicData.DynamicValidator\"&gt;&lt;/xref&gt;</ph> class.","source":"Gets the data source operation that caused an exception in the <xref href=\"System.Web.DynamicData.DynamicValidator\"></xref> class."}],"pos":[7110,7241],"yaml":true},{"content":"ASP.NET Dynamic Data provides data source operation that can be performed by the data source object. These operations include `Delete`, `Insert`, `Select` and `Update` and `ContextCreate`. If an exception occurs, the <xref:System.Web.DynamicData.DynamicValidator> class uses this property to retrieve the operation that triggered that exception.","nodes":[{"pos":[0,345],"content":"ASP.NET Dynamic Data provides data source operation that can be performed by the data source object. These operations include `Delete`, `Insert`, `Select` and `Update` and `ContextCreate`. If an exception occurs, the <xref:System.Web.DynamicData.DynamicValidator> class uses this property to retrieve the operation that triggered that exception.","nodes":[{"content":"ASP.NET Dynamic Data provides data source operation that can be performed by the data source object.","pos":[0,100]},{"content":"These operations include <ph id=\"ph1\">`Delete`</ph>, <ph id=\"ph2\">`Insert`</ph>, <ph id=\"ph3\">`Select`</ph> and <ph id=\"ph4\">`Update`</ph> and <ph id=\"ph5\">`ContextCreate`</ph>.","pos":[101,188],"source":" These operations include `Delete`, `Insert`, `Select` and `Update` and `ContextCreate`."},{"content":"If an exception occurs, the <ph id=\"ph1\">&lt;xref:System.Web.DynamicData.DynamicValidator&gt;</ph> class uses this property to retrieve the operation that triggered that exception.","pos":[189,345],"source":" If an exception occurs, the <xref:System.Web.DynamicData.DynamicValidator> class uses this property to retrieve the operation that triggered that exception."}]}],"pos":[7252,7598],"yaml":true,"extradata":"MT"},{"content":"The data source operation that caused the exception.","nodes":[{"pos":[0,52],"content":"The data source operation that caused the exception.","nodes":[{"content":"The data source operation that caused the exception.","pos":[0,52]}]}],"pos":[7790,7843],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Web.DynamicData.DynamicValidatorEventArgs\n  commentId: T:System.Web.DynamicData.DynamicValidatorEventArgs\n  id: DynamicValidatorEventArgs\n  children:\n  - System.Web.DynamicData.DynamicValidatorEventArgs.#ctor(System.Exception,System.Web.DynamicData.DynamicDataSourceOperation)\n  - System.Web.DynamicData.DynamicValidatorEventArgs.Exception\n  - System.Web.DynamicData.DynamicValidatorEventArgs.Operation\n  langs:\n  - csharp\n  name: DynamicValidatorEventArgs\n  nameWithType: DynamicValidatorEventArgs\n  fullName: System.Web.DynamicData.DynamicValidatorEventArgs\n  type: Class\n  assemblies:\n  - System.Web.Extensions\n  namespace: System.Web.DynamicData\n  summary: Base class for <xref href=\"System.Web.DynamicData.DynamicValidator\"></xref> classes that contain event data.\n  remarks: The <xref:System.Web.DynamicData.DynamicValidator> class catches exceptions thrown from LINQ to SQL classes or from Entity Framework methods in a data model. This class does not contain event data. It is used by events that do not pass state information to an event handler when an event is raised. If the event handler requires state information, you must create a derived class from this class to hold the data.\n  syntax:\n    content: 'public class DynamicValidatorEventArgs : EventArgs'\n  inheritance:\n  - System.Object\n  - System.EventArgs\n  implements: []\n  inheritedMembers:\n  - System.EventArgs.Empty\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.DynamicData/DynamicValidatorEventArgs.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.DynamicData.DynamicValidatorEventArgs.#ctor(System.Exception,System.Web.DynamicData.DynamicDataSourceOperation)\n  commentId: M:System.Web.DynamicData.DynamicValidatorEventArgs.#ctor(System.Exception,System.Web.DynamicData.DynamicDataSourceOperation)\n  id: '#ctor(System.Exception,System.Web.DynamicData.DynamicDataSourceOperation)'\n  parent: System.Web.DynamicData.DynamicValidatorEventArgs\n  langs:\n  - csharp\n  name: DynamicValidatorEventArgs(Exception, DynamicDataSourceOperation)\n  nameWithType: DynamicValidatorEventArgs.DynamicValidatorEventArgs(Exception, DynamicDataSourceOperation)\n  fullName: DynamicValidatorEventArgs.DynamicValidatorEventArgs(Exception, DynamicDataSourceOperation)\n  type: Constructor\n  assemblies:\n  - System.Web.Extensions\n  namespace: System.Web.DynamicData\n  summary: Initializes a new instance of the <xref href=\"System.Web.DynamicData.DynamicValidatorEventArgs\"></xref> class, using the exception that occurred and the data source operation that caused the exception.\n  remarks: \"ASP.NET Dynamic Data provides data source operations that can be performed by a data source object. These operations include `Delete`, `Insert`, `Select` and `Update` and `ContextCreate`. If an exception occurs during a data source operation, the data source operation that caused the exception and the exception that occurred are represented by <xref:System.Web.DynamicData.DynamicValidatorEventArgs.Operation%2A> and <xref:System.Web.DynamicData.DynamicValidatorEventArgs.Exception%2A> respectively.  \\n  \\n This constructor initializes a new instance of the <xref:System.Web.DynamicData.DynamicValidatorEventArgs> class using these properties.\"\n  syntax:\n    content: public DynamicValidatorEventArgs (Exception exception, System.Web.DynamicData.DynamicDataSourceOperation operation);\n    parameters:\n    - id: exception\n      type: System.Exception\n      description: The exception that occurred.\n    - id: operation\n      type: System.Web.DynamicData.DynamicDataSourceOperation\n      description: The data source operation that caused the exception.\n  overload: System.Web.DynamicData.DynamicValidatorEventArgs.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.DynamicData/DynamicValidatorEventArgs.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.DynamicData.DynamicValidatorEventArgs.Exception\n  commentId: P:System.Web.DynamicData.DynamicValidatorEventArgs.Exception\n  id: Exception\n  parent: System.Web.DynamicData.DynamicValidatorEventArgs\n  langs:\n  - csharp\n  name: Exception\n  nameWithType: DynamicValidatorEventArgs.Exception\n  fullName: DynamicValidatorEventArgs.Exception\n  type: Property\n  assemblies:\n  - System.Web.Extensions\n  namespace: System.Web.DynamicData\n  summary: Gets the exception that occurs during a data source operation event.\n  remarks: ASP.NET Dynamic Data provides data source operations that can be performed by a data source object. These operations include `Delete`, `Insert`, `Select` and `Update` and `ContextCreate`. If an exception occurs, the <xref:System.Web.DynamicData.DynamicValidator> class uses this property to get the type of exception that is triggered during a data source operation.\n  syntax:\n    content: public Exception Exception { get; }\n    return:\n      type: System.Exception\n      description: The exception that occurred during the data source operation event.\n  overload: System.Web.DynamicData.DynamicValidatorEventArgs.Exception*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.DynamicData/DynamicValidatorEventArgs.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.DynamicData.DynamicValidatorEventArgs.Operation\n  commentId: P:System.Web.DynamicData.DynamicValidatorEventArgs.Operation\n  id: Operation\n  parent: System.Web.DynamicData.DynamicValidatorEventArgs\n  langs:\n  - csharp\n  name: Operation\n  nameWithType: DynamicValidatorEventArgs.Operation\n  fullName: DynamicValidatorEventArgs.Operation\n  type: Property\n  assemblies:\n  - System.Web.Extensions\n  namespace: System.Web.DynamicData\n  summary: Gets the data source operation that caused an exception in the <xref href=\"System.Web.DynamicData.DynamicValidator\"></xref> class.\n  remarks: ASP.NET Dynamic Data provides data source operation that can be performed by the data source object. These operations include `Delete`, `Insert`, `Select` and `Update` and `ContextCreate`. If an exception occurs, the <xref:System.Web.DynamicData.DynamicValidator> class uses this property to retrieve the operation that triggered that exception.\n  syntax:\n    content: public System.Web.DynamicData.DynamicDataSourceOperation Operation { get; }\n    return:\n      type: System.Web.DynamicData.DynamicDataSourceOperation\n      description: The data source operation that caused the exception.\n  overload: System.Web.DynamicData.DynamicValidatorEventArgs.Operation*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.DynamicData/DynamicValidatorEventArgs.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\nreferences:\n- uid: System.EventArgs\n  parent: System\n  isExternal: false\n  name: EventArgs\n  nameWithType: EventArgs\n  fullName: System.EventArgs\n- uid: System.Web.DynamicData.DynamicValidatorEventArgs.#ctor(System.Exception,System.Web.DynamicData.DynamicDataSourceOperation)\n  parent: System.Web.DynamicData.DynamicValidatorEventArgs\n  isExternal: false\n  name: DynamicValidatorEventArgs(Exception, DynamicDataSourceOperation)\n  nameWithType: DynamicValidatorEventArgs.DynamicValidatorEventArgs(Exception, DynamicDataSourceOperation)\n  fullName: DynamicValidatorEventArgs.DynamicValidatorEventArgs(Exception, DynamicDataSourceOperation)\n- uid: System.Exception\n  parent: System\n  isExternal: false\n  name: Exception\n  nameWithType: Exception\n  fullName: System.Exception\n- uid: System.Web.DynamicData.DynamicDataSourceOperation\n  parent: System.Web.DynamicData\n  isExternal: false\n  name: DynamicDataSourceOperation\n  nameWithType: DynamicDataSourceOperation\n  fullName: System.Web.DynamicData.DynamicDataSourceOperation\n- uid: System.Web.DynamicData.DynamicValidatorEventArgs.Exception\n  parent: System.Web.DynamicData.DynamicValidatorEventArgs\n  isExternal: false\n  name: Exception\n  nameWithType: DynamicValidatorEventArgs.Exception\n  fullName: DynamicValidatorEventArgs.Exception\n- uid: System.Web.DynamicData.DynamicValidatorEventArgs.Operation\n  parent: System.Web.DynamicData.DynamicValidatorEventArgs\n  isExternal: false\n  name: Operation\n  nameWithType: DynamicValidatorEventArgs.Operation\n  fullName: DynamicValidatorEventArgs.Operation\n- uid: System.Web.DynamicData.DynamicValidatorEventArgs.#ctor*\n  parent: System.Web.DynamicData.DynamicValidatorEventArgs\n  isExternal: false\n  name: DynamicValidatorEventArgs\n  nameWithType: DynamicValidatorEventArgs.DynamicValidatorEventArgs\n  fullName: DynamicValidatorEventArgs.DynamicValidatorEventArgs\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.DynamicData/DynamicValidatorEventArgs.xml\n- uid: System.Web.DynamicData.DynamicValidatorEventArgs.Exception*\n  parent: System.Web.DynamicData.DynamicValidatorEventArgs\n  isExternal: false\n  name: Exception\n  nameWithType: DynamicValidatorEventArgs.Exception\n  fullName: DynamicValidatorEventArgs.Exception\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.DynamicData/DynamicValidatorEventArgs.xml\n- uid: System.Web.DynamicData.DynamicValidatorEventArgs.Operation*\n  parent: System.Web.DynamicData.DynamicValidatorEventArgs\n  isExternal: false\n  name: Operation\n  nameWithType: DynamicValidatorEventArgs.Operation\n  fullName: DynamicValidatorEventArgs.Operation\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.DynamicData/DynamicValidatorEventArgs.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.EventArgs.Empty\n  parent: System.EventArgs\n  isExternal: false\n  name: Empty\n  nameWithType: EventArgs.Empty\n  fullName: EventArgs.Empty\n"}