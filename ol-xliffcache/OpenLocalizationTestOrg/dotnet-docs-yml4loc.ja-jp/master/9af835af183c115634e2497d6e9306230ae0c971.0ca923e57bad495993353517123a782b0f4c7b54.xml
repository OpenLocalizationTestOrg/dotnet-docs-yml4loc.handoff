{"nodes":[{"content":"Provides information about the network connectivity of the local computer.","nodes":[{"pos":[0,74],"content":"Provides information about the network connectivity of the local computer.","nodes":[{"content":"Provides information about the network connectivity of the local computer.","pos":[0,74]}]}],"pos":[2118,2193],"yaml":true},{"content":"This class provides configuration and statistical information about the local computer's network interfaces and network connections.  \n  \n The information provided by this class is similar to that provided by the Internet Protocol Helper API functions. For information about the Internet Protocol Helper, see the documentation in the MSDN Library.","nodes":[{"pos":[0,132],"content":"This class provides configuration and statistical information about the local computer's network interfaces and network connections.","nodes":[{"content":"This class provides configuration and statistical information about the local computer's network interfaces and network connections.","pos":[0,132]}]},{"pos":[139,347],"content":"The information provided by this class is similar to that provided by the Internet Protocol Helper API functions. For information about the Internet Protocol Helper, see the documentation in the MSDN Library.","nodes":[{"content":"The information provided by this class is similar to that provided by the Internet Protocol Helper API functions. For information about the Internet Protocol Helper, see the documentation in the MSDN Library.","pos":[0,208],"nodes":[{"content":"The information provided by this class is similar to that provided by the Internet Protocol Helper API functions.","pos":[0,113]},{"content":"For information about the Internet Protocol Helper, see the documentation in the MSDN Library.","pos":[114,208]}]}]}],"pos":[2204,2556],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.Net.NetworkInformation.IPGlobalProperties\"></xref> class.","nodes":[{"pos":[0,110],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Net.NetworkInformation.IPGlobalProperties\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.Net.NetworkInformation.IPGlobalProperties\"></xref> class."}],"pos":[4704,4815],"yaml":true},{"content":"This constructor can be called only by classes derived from <xref:System.Net.NetworkInformation.IPGlobalProperties>.","nodes":[{"pos":[0,116],"content":"This constructor can be called only by classes derived from <xref:System.Net.NetworkInformation.IPGlobalProperties>.","nodes":[{"content":"This constructor can be called only by classes derived from <ph id=\"ph1\">&lt;xref:System.Net.NetworkInformation.IPGlobalProperties&gt;</ph>.","pos":[0,116],"source":"This constructor can be called only by classes derived from <xref:System.Net.NetworkInformation.IPGlobalProperties>."}]}],"pos":[4826,4943],"yaml":true,"extradata":"MT"},{"content":"Begins an asynchronous request to retrieve the stable unicast IP address table on the local computer.","nodes":[{"pos":[0,101],"content":"Begins an asynchronous request to retrieve the stable unicast IP address table on the local computer.","nodes":[{"content":"Begins an asynchronous request to retrieve the stable unicast IP address table on the local computer.","pos":[0,101]}]}],"pos":[6602,6704],"yaml":true},{"content":"In order to support outbound connections or to accept incoming connections on a Teredo interface, applications need to ensure that the Teredo interface is up and ready for use. This is because Teredo can go into a dormant state when not used for some period of time.  \n  \n The <xref:System.Net.NetworkInformation.IPGlobalProperties.BeginGetUnicastAddresses%2A> method allows an application to asynchronously retrieve the list of stable unicast IP addresses. The <xref:System.Net.IPAddress.IsIPv6Teredo%2A?displayProperty=fullName> property can be used to determine if an IP address is an IPv6 Teredo address with the prefix of 2001::/32.  \n  \n The <xref:System.Net.NetworkInformation.IPGlobalProperties.BeginGetUnicastAddresses%2A> method also returns non-Teredo addresses and provides a more convenient way to obtain the unicast IP addresses for a system than enumerating all the <xref:System.Net.NetworkInformation.NetworkInterface?displayProperty=fullName> objects on a local computer and querying the associated IP addresses.","nodes":[{"pos":[0,266],"content":"In order to support outbound connections or to accept incoming connections on a Teredo interface, applications need to ensure that the Teredo interface is up and ready for use. This is because Teredo can go into a dormant state when not used for some period of time.","nodes":[{"content":"In order to support outbound connections or to accept incoming connections on a Teredo interface, applications need to ensure that the Teredo interface is up and ready for use. This is because Teredo can go into a dormant state when not used for some period of time.","pos":[0,266],"nodes":[{"content":"In order to support outbound connections or to accept incoming connections on a Teredo interface, applications need to ensure that the Teredo interface is up and ready for use.","pos":[0,176]},{"content":"This is because Teredo can go into a dormant state when not used for some period of time.","pos":[177,266]}]}]},{"pos":[273,637],"content":"The <xref:System.Net.NetworkInformation.IPGlobalProperties.BeginGetUnicastAddresses%2A> method allows an application to asynchronously retrieve the list of stable unicast IP addresses. The <xref:System.Net.IPAddress.IsIPv6Teredo%2A?displayProperty=fullName> property can be used to determine if an IP address is an IPv6 Teredo address with the prefix of 2001::/32.","nodes":[{"content":"The <xref:System.Net.NetworkInformation.IPGlobalProperties.BeginGetUnicastAddresses%2A> method allows an application to asynchronously retrieve the list of stable unicast IP addresses. The <xref:System.Net.IPAddress.IsIPv6Teredo%2A?displayProperty=fullName> property can be used to determine if an IP address is an IPv6 Teredo address with the prefix of 2001::/32.","pos":[0,364],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Net.NetworkInformation.IPGlobalProperties.BeginGetUnicastAddresses%2A&gt;</ph> method allows an application to asynchronously retrieve the list of stable unicast IP addresses.","pos":[0,184],"source":"The <xref:System.Net.NetworkInformation.IPGlobalProperties.BeginGetUnicastAddresses%2A> method allows an application to asynchronously retrieve the list of stable unicast IP addresses."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Net.IPAddress.IsIPv6Teredo%2A?displayProperty=fullName&gt;</ph> property can be used to determine if an IP address is an IPv6 Teredo address with the prefix of 2001::/32.","pos":[185,364],"source":" The <xref:System.Net.IPAddress.IsIPv6Teredo%2A?displayProperty=fullName> property can be used to determine if an IP address is an IPv6 Teredo address with the prefix of 2001::/32."}]}]},{"pos":[644,1029],"content":"The <xref:System.Net.NetworkInformation.IPGlobalProperties.BeginGetUnicastAddresses%2A> method also returns non-Teredo addresses and provides a more convenient way to obtain the unicast IP addresses for a system than enumerating all the <xref:System.Net.NetworkInformation.NetworkInterface?displayProperty=fullName> objects on a local computer and querying the associated IP addresses.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Net.NetworkInformation.IPGlobalProperties.BeginGetUnicastAddresses%2A&gt;</ph> method also returns non-Teredo addresses and provides a more convenient way to obtain the unicast IP addresses for a system than enumerating all the <ph id=\"ph2\">&lt;xref:System.Net.NetworkInformation.NetworkInterface?displayProperty=fullName&gt;</ph> objects on a local computer and querying the associated IP addresses.","pos":[0,385],"source":"The <xref:System.Net.NetworkInformation.IPGlobalProperties.BeginGetUnicastAddresses%2A> method also returns non-Teredo addresses and provides a more convenient way to obtain the unicast IP addresses for a system than enumerating all the <xref:System.Net.NetworkInformation.NetworkInterface?displayProperty=fullName> objects on a local computer and querying the associated IP addresses."}]}],"pos":[6715,7751],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.AsyncCallback\"></xref> delegate.","nodes":[{"pos":[0,55],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.AsyncCallback\"&gt;&lt;/xref&gt;</ph> delegate.","source":"The <xref href=\"System.AsyncCallback\"></xref> delegate."}],"pos":[7954,8010],"yaml":true},{"content":"An object that contains state information for this request.","nodes":[{"pos":[0,59],"content":"An object that contains state information for this request.","nodes":[{"content":"An object that contains state information for this request.","pos":[0,59]}]}],"pos":[8071,8131],"yaml":true},{"content":"An <xref href=\"System.IAsyncResult\"></xref> that references the asynchronous request.","nodes":[{"pos":[0,85],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.IAsyncResult\"&gt;&lt;/xref&gt;</ph> that references the asynchronous request.","source":"An <xref href=\"System.IAsyncResult\"></xref> that references the asynchronous request."}],"pos":[8194,8280],"yaml":true},{"content":"This method is not implemented on the platform. This method uses the native `NotifyStableUnicastIpAddressTable` function that is supported on Windows Vista and later.","nodes":[{"pos":[0,166],"content":"This method is not implemented on the platform. This method uses the native `NotifyStableUnicastIpAddressTable` function that is supported on Windows Vista and later.","nodes":[{"content":"This method is not implemented on the platform.","pos":[0,47]},{"content":"This method uses the native <ph id=\"ph1\">`NotifyStableUnicastIpAddressTable`</ph> function that is supported on Windows Vista and later.","pos":[48,166],"source":" This method uses the native `NotifyStableUnicastIpAddressTable` function that is supported on Windows Vista and later."}]}],"pos":[8487,8654],"yaml":true},{"content":"The call to the native `NotifyStableUnicastIpAddressTable` function failed.","nodes":[{"pos":[0,75],"content":"The call to the native <ph id=\"ph1\">`NotifyStableUnicastIpAddressTable`</ph> function failed.","source":"The call to the native `NotifyStableUnicastIpAddressTable` function failed."}],"pos":[8772,8848],"yaml":true},{"content":"Gets the Dynamic Host Configuration Protocol (DHCP) scope name.","nodes":[{"pos":[0,63],"content":"Gets the Dynamic Host Configuration Protocol (DHCP) scope name.","nodes":[{"content":"Gets the Dynamic Host Configuration Protocol (DHCP) scope name.","pos":[0,63]}]}],"pos":[10042,10106],"yaml":true},{"content":"A DHCP scope is an administrative grouping of networked computers that are on the same subnet.","nodes":[{"pos":[0,94],"content":"A DHCP scope is an administrative grouping of networked computers that are on the same subnet.","nodes":[{"content":"A DHCP scope is an administrative grouping of networked computers that are on the same subnet.","pos":[0,94]}]}],"pos":[10117,10212],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.String\"></xref> instance that contains the computer's DHCP scope name.","nodes":[{"pos":[0,91],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.String\"&gt;&lt;/xref&gt;</ph> instance that contains the computer's DHCP scope name.","source":"A <xref href=\"System.String\"></xref> instance that contains the computer's DHCP scope name."}],"pos":[10677,10769],"yaml":true},{"content":"A Win32 function call failed.","nodes":[{"pos":[0,29],"content":"A Win32 function call failed.","nodes":[{"content":"A Win32 function call failed.","pos":[0,29]}]}],"pos":[11019,11049],"yaml":true},{"content":"Gets the domain in which the local computer is registered.","nodes":[{"pos":[0,58],"content":"Gets the domain in which the local computer is registered.","nodes":[{"content":"Gets the domain in which the local computer is registered.","pos":[0,58]}]}],"pos":[12289,12348],"yaml":true},{"content":"A <xref href=\"System.String\"></xref> instance that contains the computer's domain name. If the computer does not belong to a domain, returns <xref href=\"System.String.Empty\"></xref>.","nodes":[{"pos":[0,182],"content":"A <xref href=\"System.String\"></xref> instance that contains the computer's domain name. If the computer does not belong to a domain, returns <xref href=\"System.String.Empty\"></xref>.","nodes":[{"content":"A <ph id=\"ph1\">&lt;xref href=\"System.String\"&gt;&lt;/xref&gt;</ph> instance that contains the computer's domain name.","pos":[0,87],"source":"A <xref href=\"System.String\"></xref> instance that contains the computer's domain name."},{"content":"If the computer does not belong to a domain, returns <ph id=\"ph1\">&lt;xref href=\"System.String.Empty\"&gt;&lt;/xref&gt;</ph>.","pos":[88,182],"source":" If the computer does not belong to a domain, returns <xref href=\"System.String.Empty\"></xref>."}]}],"pos":[12824,13007],"yaml":true},{"content":"A Win32 function call failed.","nodes":[{"pos":[0,29],"content":"A Win32 function call failed.","nodes":[{"content":"A Win32 function call failed.","pos":[0,29]}]}],"pos":[13254,13284],"yaml":true},{"content":"Ends a pending asynchronous request to retrieve the stable unicast IP address table on the local computer.","nodes":[{"pos":[0,106],"content":"Ends a pending asynchronous request to retrieve the stable unicast IP address table on the local computer.","nodes":[{"content":"Ends a pending asynchronous request to retrieve the stable unicast IP address table on the local computer.","pos":[0,106]}]}],"pos":[14699,14806],"yaml":true},{"content":"In order to support outbound connections or to accept incoming connections on a Teredo interface, applications need to ensure that the Teredo interface is up and ready for use. This is because Teredo can go into a dormant state when not used for some period of time.  \n  \n The <xref:System.Net.NetworkInformation.IPGlobalProperties.BeginGetUnicastAddresses%2A> method allows an application to asynchronously retrieve the list of stable unicast IP addresses. The <xref:System.Net.IPAddress.IsIPv6Teredo%2A?displayProperty=fullName> property can be used to determine if an IP address is an IPv6 Teredo address with the prefix of 2001::/32.  \n  \n The <xref:System.Net.NetworkInformation.IPGlobalProperties.EndGetUnicastAddresses%2A> method ends a pending asynchronous request to retrieve the stable unicast IP address table.  \n  \n The <xref:System.Net.NetworkInformation.IPGlobalProperties.BeginGetUnicastAddresses%2A> method also returns non-Teredo addresses and provides a more convenient way to obtain the unicast IP addresses for a system than enumerating all the <xref:System.Net.NetworkInformation.NetworkInterface?displayProperty=fullName> objects on a local computer and querying the associated IP addresses.","nodes":[{"pos":[0,266],"content":"In order to support outbound connections or to accept incoming connections on a Teredo interface, applications need to ensure that the Teredo interface is up and ready for use. This is because Teredo can go into a dormant state when not used for some period of time.","nodes":[{"content":"In order to support outbound connections or to accept incoming connections on a Teredo interface, applications need to ensure that the Teredo interface is up and ready for use. This is because Teredo can go into a dormant state when not used for some period of time.","pos":[0,266],"nodes":[{"content":"In order to support outbound connections or to accept incoming connections on a Teredo interface, applications need to ensure that the Teredo interface is up and ready for use.","pos":[0,176]},{"content":"This is because Teredo can go into a dormant state when not used for some period of time.","pos":[177,266]}]}]},{"pos":[273,637],"content":"The <xref:System.Net.NetworkInformation.IPGlobalProperties.BeginGetUnicastAddresses%2A> method allows an application to asynchronously retrieve the list of stable unicast IP addresses. The <xref:System.Net.IPAddress.IsIPv6Teredo%2A?displayProperty=fullName> property can be used to determine if an IP address is an IPv6 Teredo address with the prefix of 2001::/32.","nodes":[{"content":"The <xref:System.Net.NetworkInformation.IPGlobalProperties.BeginGetUnicastAddresses%2A> method allows an application to asynchronously retrieve the list of stable unicast IP addresses. The <xref:System.Net.IPAddress.IsIPv6Teredo%2A?displayProperty=fullName> property can be used to determine if an IP address is an IPv6 Teredo address with the prefix of 2001::/32.","pos":[0,364],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Net.NetworkInformation.IPGlobalProperties.BeginGetUnicastAddresses%2A&gt;</ph> method allows an application to asynchronously retrieve the list of stable unicast IP addresses.","pos":[0,184],"source":"The <xref:System.Net.NetworkInformation.IPGlobalProperties.BeginGetUnicastAddresses%2A> method allows an application to asynchronously retrieve the list of stable unicast IP addresses."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Net.IPAddress.IsIPv6Teredo%2A?displayProperty=fullName&gt;</ph> property can be used to determine if an IP address is an IPv6 Teredo address with the prefix of 2001::/32.","pos":[185,364],"source":" The <xref:System.Net.IPAddress.IsIPv6Teredo%2A?displayProperty=fullName> property can be used to determine if an IP address is an IPv6 Teredo address with the prefix of 2001::/32."}]}]},{"pos":[644,821],"content":"The <xref:System.Net.NetworkInformation.IPGlobalProperties.EndGetUnicastAddresses%2A> method ends a pending asynchronous request to retrieve the stable unicast IP address table.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Net.NetworkInformation.IPGlobalProperties.EndGetUnicastAddresses%2A&gt;</ph> method ends a pending asynchronous request to retrieve the stable unicast IP address table.","pos":[0,177],"source":"The <xref:System.Net.NetworkInformation.IPGlobalProperties.EndGetUnicastAddresses%2A> method ends a pending asynchronous request to retrieve the stable unicast IP address table."}]},{"pos":[828,1213],"content":"The <xref:System.Net.NetworkInformation.IPGlobalProperties.BeginGetUnicastAddresses%2A> method also returns non-Teredo addresses and provides a more convenient way to obtain the unicast IP addresses for a system than enumerating all the <xref:System.Net.NetworkInformation.NetworkInterface?displayProperty=fullName> objects on a local computer and querying the associated IP addresses.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Net.NetworkInformation.IPGlobalProperties.BeginGetUnicastAddresses%2A&gt;</ph> method also returns non-Teredo addresses and provides a more convenient way to obtain the unicast IP addresses for a system than enumerating all the <ph id=\"ph2\">&lt;xref:System.Net.NetworkInformation.NetworkInterface?displayProperty=fullName&gt;</ph> objects on a local computer and querying the associated IP addresses.","pos":[0,385],"source":"The <xref:System.Net.NetworkInformation.IPGlobalProperties.BeginGetUnicastAddresses%2A> method also returns non-Teredo addresses and provides a more convenient way to obtain the unicast IP addresses for a system than enumerating all the <xref:System.Net.NetworkInformation.NetworkInterface?displayProperty=fullName> objects on a local computer and querying the associated IP addresses."}]}],"pos":[14817,16039],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.IAsyncResult\"></xref> that references the asynchronous request.","nodes":[{"pos":[0,85],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.IAsyncResult\"&gt;&lt;/xref&gt;</ph> that references the asynchronous request.","source":"An <xref href=\"System.IAsyncResult\"></xref> that references the asynchronous request."}],"pos":[16285,16371],"yaml":true},{"content":"An <xref href=\"System.IAsyncResult\"></xref> that stores state information and any user defined data for this asynchronous operation.","nodes":[{"pos":[0,132],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.IAsyncResult\"&gt;&lt;/xref&gt;</ph> that stores state information and any user defined data for this asynchronous operation.","source":"An <xref href=\"System.IAsyncResult\"></xref> that stores state information and any user defined data for this asynchronous operation."}],"pos":[16482,16615],"yaml":true},{"content":"The call to the native `GetAdaptersAddresses` function failed.","nodes":[{"pos":[0,62],"content":"The call to the native <ph id=\"ph1\">`GetAdaptersAddresses`</ph> function failed.","source":"The call to the native `GetAdaptersAddresses` function failed."}],"pos":[16874,16937],"yaml":true},{"content":"This method is not implemented on the platform. This method uses the native `NotifyStableUnicastIpAddressTable` function that is supported on Windows Vista and later.","nodes":[{"pos":[0,166],"content":"This method is not implemented on the platform. This method uses the native `NotifyStableUnicastIpAddressTable` function that is supported on Windows Vista and later.","nodes":[{"content":"This method is not implemented on the platform.","pos":[0,47]},{"content":"This method uses the native <ph id=\"ph1\">`NotifyStableUnicastIpAddressTable`</ph> function that is supported on Windows Vista and later.","pos":[48,166],"source":" This method uses the native `NotifyStableUnicastIpAddressTable` function that is supported on Windows Vista and later."}]}],"pos":[17043,17210],"yaml":true},{"content":"The caller does not have necessary <xref href=\"System.Net.NetworkInformation.NetworkInformationAccess.Read\"></xref> permission.","nodes":[{"pos":[0,127],"content":"The caller does not have necessary <ph id=\"ph1\">&lt;xref href=\"System.Net.NetworkInformation.NetworkInformationAccess.Read\"&gt;&lt;/xref&gt;</ph> permission.","source":"The caller does not have necessary <xref href=\"System.Net.NetworkInformation.NetworkInformationAccess.Read\"></xref> permission."}],"pos":[17322,17450],"yaml":true},{"content":"Returns information about the Internet Protocol version 4 (IPv4) and IPv6 Transmission Control Protocol (TCP) connections on the local computer.","nodes":[{"pos":[0,144],"content":"Returns information about the Internet Protocol version 4 (IPv4) and IPv6 Transmission Control Protocol (TCP) connections on the local computer.","nodes":[{"content":"Returns information about the Internet Protocol version 4 (IPv4) and IPv6 Transmission Control Protocol (TCP) connections on the local computer.","pos":[0,144]}]}],"pos":[18708,18853],"yaml":true},{"content":"The objects returned by this method include connections in all TCP states except the <xref:System.Net.NetworkInformation.TcpState.Listen> state. You can check the state of a connection by calling <xref:System.Net.NetworkInformation.TcpConnectionInformation.State%2A>.  \n  \n The TCP protocol is defined in IETF RFC 793. Note that the objects returned by this method reflect the connections as of the time the array is created. This information is not updated dynamically.","nodes":[{"pos":[0,267],"content":"The objects returned by this method include connections in all TCP states except the <xref:System.Net.NetworkInformation.TcpState.Listen> state. You can check the state of a connection by calling <xref:System.Net.NetworkInformation.TcpConnectionInformation.State%2A>.","nodes":[{"content":"The objects returned by this method include connections in all TCP states except the <xref:System.Net.NetworkInformation.TcpState.Listen> state. You can check the state of a connection by calling <xref:System.Net.NetworkInformation.TcpConnectionInformation.State%2A>.","pos":[0,267],"nodes":[{"content":"The objects returned by this method include connections in all TCP states except the <ph id=\"ph1\">&lt;xref:System.Net.NetworkInformation.TcpState.Listen&gt;</ph> state.","pos":[0,144],"source":"The objects returned by this method include connections in all TCP states except the <xref:System.Net.NetworkInformation.TcpState.Listen> state."},{"content":"You can check the state of a connection by calling <ph id=\"ph1\">&lt;xref:System.Net.NetworkInformation.TcpConnectionInformation.State%2A&gt;</ph>.","pos":[145,267],"source":" You can check the state of a connection by calling <xref:System.Net.NetworkInformation.TcpConnectionInformation.State%2A>."}]}]},{"pos":[274,470],"content":"The TCP protocol is defined in IETF RFC 793. Note that the objects returned by this method reflect the connections as of the time the array is created. This information is not updated dynamically.","nodes":[{"content":"The TCP protocol is defined in IETF RFC 793. Note that the objects returned by this method reflect the connections as of the time the array is created. This information is not updated dynamically.","pos":[0,196],"nodes":[{"content":"The TCP protocol is defined in IETF RFC 793.","pos":[0,44]},{"content":"Note that the objects returned by this method reflect the connections as of the time the array is created.","pos":[45,151]},{"content":"This information is not updated dynamically.","pos":[152,196]}]}]}],"pos":[18864,19339],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Net.NetworkInformation.TcpConnectionInformation\"></xref> array that contains objects that describe the active TCP connections, or an empty array if no active TCP connections are detected.","nodes":[{"pos":[0,208],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Net.NetworkInformation.TcpConnectionInformation\"&gt;&lt;/xref&gt;</ph> array that contains objects that describe the active TCP connections, or an empty array if no active TCP connections are detected.","source":"A <xref href=\"System.Net.NetworkInformation.TcpConnectionInformation\"></xref> array that contains objects that describe the active TCP connections, or an empty array if no active TCP connections are detected."}],"pos":[19921,20130],"yaml":true},{"content":"The Win32 function `GetTcpTable` failed.","nodes":[{"pos":[0,40],"content":"The Win32 function <ph id=\"ph1\">`GetTcpTable`</ph> failed.","source":"The Win32 function `GetTcpTable` failed."}],"pos":[20390,20431],"yaml":true},{"content":"Returns endpoint information about the Internet Protocol version 4 (IPv4) and IPv6 Transmission Control Protocol (TCP) listeners on the local computer.","nodes":[{"pos":[0,151],"content":"Returns endpoint information about the Internet Protocol version 4 (IPv4) and IPv6 Transmission Control Protocol (TCP) listeners on the local computer.","nodes":[{"content":"Returns endpoint information about the Internet Protocol version 4 (IPv4) and IPv6 Transmission Control Protocol (TCP) listeners on the local computer.","pos":[0,151]}]}],"pos":[21741,21893],"yaml":true},{"content":"The objects returned by this method include listeners in all TCP states except the <xref:System.Net.NetworkInformation.TcpState.Listen> state.  \n  \n The TCP protocol is defined in IETF RFC 793. Note that the objects returned by this method reflect the connections as of the time the array is created. This information is not updated dynamically.","nodes":[{"pos":[0,142],"content":"The objects returned by this method include listeners in all TCP states except the <xref:System.Net.NetworkInformation.TcpState.Listen> state.","nodes":[{"content":"The objects returned by this method include listeners in all TCP states except the <ph id=\"ph1\">&lt;xref:System.Net.NetworkInformation.TcpState.Listen&gt;</ph> state.","pos":[0,142],"source":"The objects returned by this method include listeners in all TCP states except the <xref:System.Net.NetworkInformation.TcpState.Listen> state."}]},{"pos":[149,345],"content":"The TCP protocol is defined in IETF RFC 793. Note that the objects returned by this method reflect the connections as of the time the array is created. This information is not updated dynamically.","nodes":[{"content":"The TCP protocol is defined in IETF RFC 793. Note that the objects returned by this method reflect the connections as of the time the array is created. This information is not updated dynamically.","pos":[0,196],"nodes":[{"content":"The TCP protocol is defined in IETF RFC 793.","pos":[0,44]},{"content":"Note that the objects returned by this method reflect the connections as of the time the array is created.","pos":[45,151]},{"content":"This information is not updated dynamically.","pos":[152,196]}]}]}],"pos":[21904,22254],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Net.IPEndPoint\"></xref> array that contains objects that describe the active TCP listeners, or an empty array, if no active TCP listeners are detected.","nodes":[{"pos":[0,172],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Net.IPEndPoint\"&gt;&lt;/xref&gt;</ph> array that contains objects that describe the active TCP listeners, or an empty array, if no active TCP listeners are detected.","source":"A <xref href=\"System.Net.IPEndPoint\"></xref> array that contains objects that describe the active TCP listeners, or an empty array, if no active TCP listeners are detected."}],"pos":[22771,22944],"yaml":true},{"content":"The Win32 function `GetTcpTable` failed.","nodes":[{"pos":[0,40],"content":"The Win32 function <ph id=\"ph1\">`GetTcpTable`</ph> failed.","source":"The Win32 function `GetTcpTable` failed."}],"pos":[23202,23243],"yaml":true},{"content":"Returns information about the Internet Protocol version 4 (IPv4) and IPv6 User Datagram Protocol (UDP) listeners on the local computer.","nodes":[{"pos":[0,135],"content":"Returns information about the Internet Protocol version 4 (IPv4) and IPv6 User Datagram Protocol (UDP) listeners on the local computer.","nodes":[{"content":"Returns information about the Internet Protocol version 4 (IPv4) and IPv6 User Datagram Protocol (UDP) listeners on the local computer.","pos":[0,135]}]}],"pos":[24553,24689],"yaml":true},{"content":"UDP is a connectionless transport layer protocol that is responsible for sending and receiving datagrams. It is defined in IETF RFC 768.  \n  \n A UDP listener is an open socket that waits for and receives UDP datagrams. Because UDP is a connectionless protocol, the listener does not maintain a connection to a remote endpoint.","nodes":[{"pos":[0,136],"content":"UDP is a connectionless transport layer protocol that is responsible for sending and receiving datagrams. It is defined in IETF RFC 768.","nodes":[{"content":"UDP is a connectionless transport layer protocol that is responsible for sending and receiving datagrams. It is defined in IETF RFC 768.","pos":[0,136],"nodes":[{"content":"UDP is a connectionless transport layer protocol that is responsible for sending and receiving datagrams.","pos":[0,105]},{"content":"It is defined in IETF RFC 768.","pos":[106,136]}]}]},{"pos":[143,326],"content":"A UDP listener is an open socket that waits for and receives UDP datagrams. Because UDP is a connectionless protocol, the listener does not maintain a connection to a remote endpoint.","nodes":[{"content":"A UDP listener is an open socket that waits for and receives UDP datagrams. Because UDP is a connectionless protocol, the listener does not maintain a connection to a remote endpoint.","pos":[0,183],"nodes":[{"content":"A UDP listener is an open socket that waits for and receives UDP datagrams.","pos":[0,75]},{"content":"Because UDP is a connectionless protocol, the listener does not maintain a connection to a remote endpoint.","pos":[76,183]}]}]}],"pos":[24700,25031],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.Net.IPEndPoint\"></xref> array that contains objects that describe the UDP listeners, or an empty array if no UDP listeners are detected.","nodes":[{"pos":[0,158],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Net.IPEndPoint\"&gt;&lt;/xref&gt;</ph> array that contains objects that describe the UDP listeners, or an empty array if no UDP listeners are detected.","source":"An <xref href=\"System.Net.IPEndPoint\"></xref> array that contains objects that describe the UDP listeners, or an empty array if no UDP listeners are detected."}],"pos":[25522,25681],"yaml":true},{"content":"The call to the Win32 function `GetUdpTable` failed.","nodes":[{"pos":[0,52],"content":"The call to the Win32 function <ph id=\"ph1\">`GetUdpTable`</ph> failed.","source":"The call to the Win32 function `GetUdpTable` failed."}],"pos":[25939,25992],"yaml":true},{"content":"Provides Internet Control Message Protocol (ICMP) version 4 statistical data for the local computer.","nodes":[{"pos":[0,100],"content":"Provides Internet Control Message Protocol (ICMP) version 4 statistical data for the local computer.","nodes":[{"content":"Provides Internet Control Message Protocol (ICMP) version 4 statistical data for the local computer.","pos":[0,100]}]}],"pos":[27290,27391],"yaml":true},{"content":"ICMP is a set of messages for use with Internet Protocol version 4 (IPv4). ICMP is used by IPv4 nodes to report errors encountered in processing data packets and to perform other Internet layer functions. ICMP version 4 is defined in IETF RFC 792.  \n  \n For details on the ICMP version 4 traffic statistics that are available to applications, see the <xref:System.Net.NetworkInformation.IcmpV4Statistics> class documentation. Note that the <xref:System.Net.NetworkInformation.IcmpV4Statistics> object returned by this method reflects the statistics as of the time the object is created. This information is not updated dynamically.","nodes":[{"pos":[0,247],"content":"ICMP is a set of messages for use with Internet Protocol version 4 (IPv4). ICMP is used by IPv4 nodes to report errors encountered in processing data packets and to perform other Internet layer functions. ICMP version 4 is defined in IETF RFC 792.","nodes":[{"content":"ICMP is a set of messages for use with Internet Protocol version 4 (IPv4). ICMP is used by IPv4 nodes to report errors encountered in processing data packets and to perform other Internet layer functions. ICMP version 4 is defined in IETF RFC 792.","pos":[0,247],"nodes":[{"content":"ICMP is a set of messages for use with Internet Protocol version 4 (IPv4).","pos":[0,74]},{"content":"ICMP is used by IPv4 nodes to report errors encountered in processing data packets and to perform other Internet layer functions.","pos":[75,204]},{"content":"ICMP version 4 is defined in IETF RFC 792.","pos":[205,247]}]}]},{"pos":[254,631],"content":"For details on the ICMP version 4 traffic statistics that are available to applications, see the <xref:System.Net.NetworkInformation.IcmpV4Statistics> class documentation. Note that the <xref:System.Net.NetworkInformation.IcmpV4Statistics> object returned by this method reflects the statistics as of the time the object is created. This information is not updated dynamically.","nodes":[{"content":"For details on the ICMP version 4 traffic statistics that are available to applications, see the <xref:System.Net.NetworkInformation.IcmpV4Statistics> class documentation. Note that the <xref:System.Net.NetworkInformation.IcmpV4Statistics> object returned by this method reflects the statistics as of the time the object is created. This information is not updated dynamically.","pos":[0,377],"nodes":[{"content":"For details on the ICMP version 4 traffic statistics that are available to applications, see the <ph id=\"ph1\">&lt;xref:System.Net.NetworkInformation.IcmpV4Statistics&gt;</ph> class documentation.","pos":[0,171],"source":"For details on the ICMP version 4 traffic statistics that are available to applications, see the <xref:System.Net.NetworkInformation.IcmpV4Statistics> class documentation."},{"content":"Note that the <ph id=\"ph1\">&lt;xref:System.Net.NetworkInformation.IcmpV4Statistics&gt;</ph> object returned by this method reflects the statistics as of the time the object is created.","pos":[172,332],"source":" Note that the <xref:System.Net.NetworkInformation.IcmpV4Statistics> object returned by this method reflects the statistics as of the time the object is created."},{"content":"This information is not updated dynamically.","pos":[333,377]}]}]}],"pos":[27402,28038],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.Net.NetworkInformation.IcmpV4Statistics\"></xref> object that provides ICMP version 4 traffic statistics for the local computer.","nodes":[{"pos":[0,149],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Net.NetworkInformation.IcmpV4Statistics\"&gt;&lt;/xref&gt;</ph> object that provides ICMP version 4 traffic statistics for the local computer.","source":"An <xref href=\"System.Net.NetworkInformation.IcmpV4Statistics\"></xref> object that provides ICMP version 4 traffic statistics for the local computer."}],"pos":[28574,28724],"yaml":true},{"content":"The Win32 function `GetIcmpStatistics` failed.","nodes":[{"pos":[0,46],"content":"The Win32 function <ph id=\"ph1\">`GetIcmpStatistics`</ph> failed.","source":"The Win32 function `GetIcmpStatistics` failed."}],"pos":[28980,29027],"yaml":true},{"content":"Provides Internet Control Message Protocol (ICMP) version 6 statistical data for the local computer.","nodes":[{"pos":[0,100],"content":"Provides Internet Control Message Protocol (ICMP) version 6 statistical data for the local computer.","nodes":[{"content":"Provides Internet Control Message Protocol (ICMP) version 6 statistical data for the local computer.","pos":[0,100]}]}],"pos":[30325,30426],"yaml":true},{"content":"ICMP version 6 is a set of messages for use with Internet Protocol version 6 (IPv6). ICMP is used by IPv6 nodes to report errors encountered in processing data packets and to perform other Internet layer functions. ICMP version 6 is defined in IETF RFC 1885.  \n  \n The IPv6 protocol is not supported for computers with Windows 2000 or earlier operating systems.  \n  \n For details on the ICMP version 6 traffic statistics available to applications, see the <xref:System.Net.NetworkInformation.IcmpV6Statistics> class documentation. Note that the <xref:System.Net.NetworkInformation.IcmpV6Statistics> object returned by this method reflects the statistics as of the time the object is created. This information is not updated dynamically.","nodes":[{"pos":[0,258],"content":"ICMP version 6 is a set of messages for use with Internet Protocol version 6 (IPv6). ICMP is used by IPv6 nodes to report errors encountered in processing data packets and to perform other Internet layer functions. ICMP version 6 is defined in IETF RFC 1885.","nodes":[{"content":"ICMP version 6 is a set of messages for use with Internet Protocol version 6 (IPv6). ICMP is used by IPv6 nodes to report errors encountered in processing data packets and to perform other Internet layer functions. ICMP version 6 is defined in IETF RFC 1885.","pos":[0,258],"nodes":[{"content":"ICMP version 6 is a set of messages for use with Internet Protocol version 6 (IPv6).","pos":[0,84]},{"content":"ICMP is used by IPv6 nodes to report errors encountered in processing data packets and to perform other Internet layer functions.","pos":[85,214]},{"content":"ICMP version 6 is defined in IETF RFC 1885.","pos":[215,258]}]}]},{"pos":[265,361],"content":"The IPv6 protocol is not supported for computers with Windows 2000 or earlier operating systems.","nodes":[{"content":"The IPv6 protocol is not supported for computers with Windows 2000 or earlier operating systems.","pos":[0,96]}]},{"pos":[368,736],"content":"For details on the ICMP version 6 traffic statistics available to applications, see the <xref:System.Net.NetworkInformation.IcmpV6Statistics> class documentation. Note that the <xref:System.Net.NetworkInformation.IcmpV6Statistics> object returned by this method reflects the statistics as of the time the object is created. This information is not updated dynamically.","nodes":[{"content":"For details on the ICMP version 6 traffic statistics available to applications, see the <xref:System.Net.NetworkInformation.IcmpV6Statistics> class documentation. Note that the <xref:System.Net.NetworkInformation.IcmpV6Statistics> object returned by this method reflects the statistics as of the time the object is created. This information is not updated dynamically.","pos":[0,368],"nodes":[{"content":"For details on the ICMP version 6 traffic statistics available to applications, see the <ph id=\"ph1\">&lt;xref:System.Net.NetworkInformation.IcmpV6Statistics&gt;</ph> class documentation.","pos":[0,162],"source":"For details on the ICMP version 6 traffic statistics available to applications, see the <xref:System.Net.NetworkInformation.IcmpV6Statistics> class documentation."},{"content":"Note that the <ph id=\"ph1\">&lt;xref:System.Net.NetworkInformation.IcmpV6Statistics&gt;</ph> object returned by this method reflects the statistics as of the time the object is created.","pos":[163,323],"source":" Note that the <xref:System.Net.NetworkInformation.IcmpV6Statistics> object returned by this method reflects the statistics as of the time the object is created."},{"content":"This information is not updated dynamically.","pos":[324,368]}]}]}],"pos":[30437,31180],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.Net.NetworkInformation.IcmpV6Statistics\"></xref> object that provides ICMP version 6 traffic statistics for the local computer.","nodes":[{"pos":[0,149],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Net.NetworkInformation.IcmpV6Statistics\"&gt;&lt;/xref&gt;</ph> object that provides ICMP version 6 traffic statistics for the local computer.","source":"An <xref href=\"System.Net.NetworkInformation.IcmpV6Statistics\"></xref> object that provides ICMP version 6 traffic statistics for the local computer."}],"pos":[31716,31866],"yaml":true},{"content":"The Win32 function `GetIcmpStatisticsEx` failed.","nodes":[{"pos":[0,48],"content":"The Win32 function <ph id=\"ph1\">`GetIcmpStatisticsEx`</ph> failed.","source":"The Win32 function `GetIcmpStatisticsEx` failed."}],"pos":[32122,32171],"yaml":true},{"content":"The local computer's operating system is not Windows XP or later.","nodes":[{"pos":[0,65],"content":"The local computer's operating system is not Windows XP or later.","nodes":[{"content":"The local computer's operating system is not Windows XP or later.","pos":[0,65]}]}],"pos":[32289,32355],"yaml":true},{"content":"Gets an object that provides information about the local computer's network connectivity and traffic statistics.","nodes":[{"pos":[0,112],"content":"Gets an object that provides information about the local computer's network connectivity and traffic statistics.","nodes":[{"content":"Gets an object that provides information about the local computer's network connectivity and traffic statistics.","pos":[0,112]}]}],"pos":[33665,33778],"yaml":true},{"content":"The object returned by this method is a system-supplied type that derives from the <xref:System.Net.NetworkInformation.IPGlobalProperties> class.","nodes":[{"pos":[0,145],"content":"The object returned by this method is a system-supplied type that derives from the <xref:System.Net.NetworkInformation.IPGlobalProperties> class.","nodes":[{"content":"The object returned by this method is a system-supplied type that derives from the <ph id=\"ph1\">&lt;xref:System.Net.NetworkInformation.IPGlobalProperties&gt;</ph> class.","pos":[0,145],"source":"The object returned by this method is a system-supplied type that derives from the <xref:System.Net.NetworkInformation.IPGlobalProperties> class."}]}],"pos":[33789,33935],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Net.NetworkInformation.IPGlobalProperties\"></xref> object that contains information about the local computer.","nodes":[{"pos":[0,130],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Net.NetworkInformation.IPGlobalProperties\"&gt;&lt;/xref&gt;</ph> object that contains information about the local computer.","source":"A <xref href=\"System.Net.NetworkInformation.IPGlobalProperties\"></xref> object that contains information about the local computer."}],"pos":[34491,34622],"yaml":true},{"content":"Provides Internet Protocol version 4 (IPv4) statistical data for the local computer.","nodes":[{"pos":[0,84],"content":"Provides Internet Protocol version 4 (IPv4) statistical data for the local computer.","nodes":[{"content":"Provides Internet Protocol version 4 (IPv4) statistical data for the local computer.","pos":[0,84]}]}],"pos":[36045,36130],"yaml":true},{"content":"IPv4 is a network layer protocol that is responsible for routing data packets from its source computer to its destination.  \n  \n For details on the IP traffic statistics available to applications, see the <xref:System.Net.NetworkInformation.IPGlobalStatistics> class documentation. Note that the object returned by this method reflects the statistics as of the time the <xref:System.Net.NetworkInformation.IPGlobalStatistics> object is created. This information is not updated dynamically.","nodes":[{"pos":[0,122],"content":"IPv4 is a network layer protocol that is responsible for routing data packets from its source computer to its destination.","nodes":[{"content":"IPv4 is a network layer protocol that is responsible for routing data packets from its source computer to its destination.","pos":[0,122]}]},{"pos":[129,489],"content":"For details on the IP traffic statistics available to applications, see the <xref:System.Net.NetworkInformation.IPGlobalStatistics> class documentation. Note that the object returned by this method reflects the statistics as of the time the <xref:System.Net.NetworkInformation.IPGlobalStatistics> object is created. This information is not updated dynamically.","nodes":[{"content":"For details on the IP traffic statistics available to applications, see the <xref:System.Net.NetworkInformation.IPGlobalStatistics> class documentation. Note that the object returned by this method reflects the statistics as of the time the <xref:System.Net.NetworkInformation.IPGlobalStatistics> object is created. This information is not updated dynamically.","pos":[0,360],"nodes":[{"content":"For details on the IP traffic statistics available to applications, see the <ph id=\"ph1\">&lt;xref:System.Net.NetworkInformation.IPGlobalStatistics&gt;</ph> class documentation.","pos":[0,152],"source":"For details on the IP traffic statistics available to applications, see the <xref:System.Net.NetworkInformation.IPGlobalStatistics> class documentation."},{"content":"Note that the object returned by this method reflects the statistics as of the time the <ph id=\"ph1\">&lt;xref:System.Net.NetworkInformation.IPGlobalStatistics&gt;</ph> object is created.","pos":[153,315],"source":" Note that the object returned by this method reflects the statistics as of the time the <xref:System.Net.NetworkInformation.IPGlobalStatistics> object is created."},{"content":"This information is not updated dynamically.","pos":[316,360]}]}]}],"pos":[36141,36635],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.Net.NetworkInformation.IPGlobalStatistics\"></xref> object that provides IPv4 traffic statistics for the local computer.","nodes":[{"pos":[0,141],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Net.NetworkInformation.IPGlobalStatistics\"&gt;&lt;/xref&gt;</ph> object that provides IPv4 traffic statistics for the local computer.","source":"An <xref href=\"System.Net.NetworkInformation.IPGlobalStatistics\"></xref> object that provides IPv4 traffic statistics for the local computer."}],"pos":[37191,37333],"yaml":true},{"content":"The call to the Win32 function `GetIpStatistics` failed.","nodes":[{"pos":[0,56],"content":"The call to the Win32 function <ph id=\"ph1\">`GetIpStatistics`</ph> failed.","source":"The call to the Win32 function `GetIpStatistics` failed."}],"pos":[37593,37650],"yaml":true},{"content":"Provides Internet Protocol version 6 (IPv6) statistical data for the local computer.","nodes":[{"pos":[0,84],"content":"Provides Internet Protocol version 6 (IPv6) statistical data for the local computer.","nodes":[{"content":"Provides Internet Protocol version 6 (IPv6) statistical data for the local computer.","pos":[0,84]}]}],"pos":[38972,39057],"yaml":true},{"content":"IPv6 is a network layer protocol responsible for routing data packets from its source computer to its destination. The IPv6 protocol is not supported on computers with Windows 2000 or earlier operating systems.  \n  \n For details on the IP traffic statistics available to applications, see the <xref:System.Net.NetworkInformation.IPGlobalStatistics> class documentation. Note that the object returned by this method reflects the statistics as of the time the <xref:System.Net.NetworkInformation.IPGlobalStatistics> object is created. This information is not updated dynamically.","nodes":[{"pos":[0,210],"content":"IPv6 is a network layer protocol responsible for routing data packets from its source computer to its destination. The IPv6 protocol is not supported on computers with Windows 2000 or earlier operating systems.","nodes":[{"content":"IPv6 is a network layer protocol responsible for routing data packets from its source computer to its destination. The IPv6 protocol is not supported on computers with Windows 2000 or earlier operating systems.","pos":[0,210],"nodes":[{"content":"IPv6 is a network layer protocol responsible for routing data packets from its source computer to its destination.","pos":[0,114]},{"content":"The IPv6 protocol is not supported on computers with Windows 2000 or earlier operating systems.","pos":[115,210]}]}]},{"pos":[217,577],"content":"For details on the IP traffic statistics available to applications, see the <xref:System.Net.NetworkInformation.IPGlobalStatistics> class documentation. Note that the object returned by this method reflects the statistics as of the time the <xref:System.Net.NetworkInformation.IPGlobalStatistics> object is created. This information is not updated dynamically.","nodes":[{"content":"For details on the IP traffic statistics available to applications, see the <xref:System.Net.NetworkInformation.IPGlobalStatistics> class documentation. Note that the object returned by this method reflects the statistics as of the time the <xref:System.Net.NetworkInformation.IPGlobalStatistics> object is created. This information is not updated dynamically.","pos":[0,360],"nodes":[{"content":"For details on the IP traffic statistics available to applications, see the <ph id=\"ph1\">&lt;xref:System.Net.NetworkInformation.IPGlobalStatistics&gt;</ph> class documentation.","pos":[0,152],"source":"For details on the IP traffic statistics available to applications, see the <xref:System.Net.NetworkInformation.IPGlobalStatistics> class documentation."},{"content":"Note that the object returned by this method reflects the statistics as of the time the <ph id=\"ph1\">&lt;xref:System.Net.NetworkInformation.IPGlobalStatistics&gt;</ph> object is created.","pos":[153,315],"source":" Note that the object returned by this method reflects the statistics as of the time the <xref:System.Net.NetworkInformation.IPGlobalStatistics> object is created."},{"content":"This information is not updated dynamically.","pos":[316,360]}]}]}],"pos":[39068,39650],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.Net.NetworkInformation.IPGlobalStatistics\"></xref> object that provides IPv6 traffic statistics for the local computer.","nodes":[{"pos":[0,141],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Net.NetworkInformation.IPGlobalStatistics\"&gt;&lt;/xref&gt;</ph> object that provides IPv6 traffic statistics for the local computer.","source":"An <xref href=\"System.Net.NetworkInformation.IPGlobalStatistics\"></xref> object that provides IPv6 traffic statistics for the local computer."}],"pos":[40206,40348],"yaml":true},{"content":"The call to the Win32 function `GetIpStatistics` failed.","nodes":[{"pos":[0,56],"content":"The call to the Win32 function <ph id=\"ph1\">`GetIpStatistics`</ph> failed.","source":"The call to the Win32 function `GetIpStatistics` failed."}],"pos":[40608,40665],"yaml":true},{"content":"The local computer is not running an operating system that supports IPv6.","nodes":[{"pos":[0,73],"content":"The local computer is not running an operating system that supports IPv6.","nodes":[{"content":"The local computer is not running an operating system that supports IPv6.","pos":[0,73]}]}],"pos":[40783,40857],"yaml":true},{"content":"Provides Transmission Control Protocol/Internet Protocol version 4 (TCP/IPv4) statistical data for the local computer.","nodes":[{"pos":[0,118],"content":"Provides Transmission Control Protocol/Internet Protocol version 4 (TCP/IPv4) statistical data for the local computer.","nodes":[{"content":"Provides Transmission Control Protocol/Internet Protocol version 4 (TCP/IPv4) statistical data for the local computer.","pos":[0,118]}]}],"pos":[42161,42280],"yaml":true},{"content":"TCP is a transport layer protocol that is responsible for reliably sending and receiving data packets. It is defined in IETF RFC 793.  \n  \n For details on the TCP traffic statistics available to applications, see the <xref:System.Net.NetworkInformation.TcpStatistics> class documentation. Note that the object returned by this method reflects the statistics as of the time the <xref:System.Net.NetworkInformation.TcpStatistics> object is created. This information is not updated dynamically.","nodes":[{"pos":[0,133],"content":"TCP is a transport layer protocol that is responsible for reliably sending and receiving data packets. It is defined in IETF RFC 793.","nodes":[{"content":"TCP is a transport layer protocol that is responsible for reliably sending and receiving data packets. It is defined in IETF RFC 793.","pos":[0,133],"nodes":[{"content":"TCP is a transport layer protocol that is responsible for reliably sending and receiving data packets.","pos":[0,102]},{"content":"It is defined in IETF RFC 793.","pos":[103,133]}]}]},{"pos":[140,491],"content":"For details on the TCP traffic statistics available to applications, see the <xref:System.Net.NetworkInformation.TcpStatistics> class documentation. Note that the object returned by this method reflects the statistics as of the time the <xref:System.Net.NetworkInformation.TcpStatistics> object is created. This information is not updated dynamically.","nodes":[{"content":"For details on the TCP traffic statistics available to applications, see the <xref:System.Net.NetworkInformation.TcpStatistics> class documentation. Note that the object returned by this method reflects the statistics as of the time the <xref:System.Net.NetworkInformation.TcpStatistics> object is created. This information is not updated dynamically.","pos":[0,351],"nodes":[{"content":"For details on the TCP traffic statistics available to applications, see the <ph id=\"ph1\">&lt;xref:System.Net.NetworkInformation.TcpStatistics&gt;</ph> class documentation.","pos":[0,148],"source":"For details on the TCP traffic statistics available to applications, see the <xref:System.Net.NetworkInformation.TcpStatistics> class documentation."},{"content":"Note that the object returned by this method reflects the statistics as of the time the <ph id=\"ph1\">&lt;xref:System.Net.NetworkInformation.TcpStatistics&gt;</ph> object is created.","pos":[149,306],"source":" Note that the object returned by this method reflects the statistics as of the time the <xref:System.Net.NetworkInformation.TcpStatistics> object is created."},{"content":"This information is not updated dynamically.","pos":[307,351]}]}]}],"pos":[42291,42787],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Net.NetworkInformation.TcpStatistics\"></xref> object that provides TCP/IPv4 traffic statistics for the local computer.","nodes":[{"pos":[0,139],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Net.NetworkInformation.TcpStatistics\"&gt;&lt;/xref&gt;</ph> object that provides TCP/IPv4 traffic statistics for the local computer.","source":"A <xref href=\"System.Net.NetworkInformation.TcpStatistics\"></xref> object that provides TCP/IPv4 traffic statistics for the local computer."}],"pos":[43333,43473],"yaml":true},{"content":"The call to the Win32 function `GetTcpStatistics` failed.","nodes":[{"pos":[0,57],"content":"The call to the Win32 function <ph id=\"ph1\">`GetTcpStatistics`</ph> failed.","source":"The call to the Win32 function `GetTcpStatistics` failed."}],"pos":[43730,43788],"yaml":true},{"content":"Provides Transmission Control Protocol/Internet Protocol version 6 (TCP/IPv6) statistical data for the local computer.","nodes":[{"pos":[0,118],"content":"Provides Transmission Control Protocol/Internet Protocol version 6 (TCP/IPv6) statistical data for the local computer.","nodes":[{"content":"Provides Transmission Control Protocol/Internet Protocol version 6 (TCP/IPv6) statistical data for the local computer.","pos":[0,118]}]}],"pos":[45092,45211],"yaml":true},{"content":"TCP is a transport layer protocol responsible for reliably sending and receiving data packets. It is defined in IETF RFC 793.  \n  \n For details on the TCP traffic statistics that are available to applications, see the <xref:System.Net.NetworkInformation.TcpStatistics> class documentation. Note that the object returned by this method reflects the statistics as of the time the <xref:System.Net.NetworkInformation.TcpStatistics> object is created. This information is not updated dynamically.","nodes":[{"pos":[0,125],"content":"TCP is a transport layer protocol responsible for reliably sending and receiving data packets. It is defined in IETF RFC 793.","nodes":[{"content":"TCP is a transport layer protocol responsible for reliably sending and receiving data packets. It is defined in IETF RFC 793.","pos":[0,125],"nodes":[{"content":"TCP is a transport layer protocol responsible for reliably sending and receiving data packets.","pos":[0,94]},{"content":"It is defined in IETF RFC 793.","pos":[95,125]}]}]},{"pos":[132,492],"content":"For details on the TCP traffic statistics that are available to applications, see the <xref:System.Net.NetworkInformation.TcpStatistics> class documentation. Note that the object returned by this method reflects the statistics as of the time the <xref:System.Net.NetworkInformation.TcpStatistics> object is created. This information is not updated dynamically.","nodes":[{"content":"For details on the TCP traffic statistics that are available to applications, see the <xref:System.Net.NetworkInformation.TcpStatistics> class documentation. Note that the object returned by this method reflects the statistics as of the time the <xref:System.Net.NetworkInformation.TcpStatistics> object is created. This information is not updated dynamically.","pos":[0,360],"nodes":[{"content":"For details on the TCP traffic statistics that are available to applications, see the <ph id=\"ph1\">&lt;xref:System.Net.NetworkInformation.TcpStatistics&gt;</ph> class documentation.","pos":[0,157],"source":"For details on the TCP traffic statistics that are available to applications, see the <xref:System.Net.NetworkInformation.TcpStatistics> class documentation."},{"content":"Note that the object returned by this method reflects the statistics as of the time the <ph id=\"ph1\">&lt;xref:System.Net.NetworkInformation.TcpStatistics&gt;</ph> object is created.","pos":[158,315],"source":" Note that the object returned by this method reflects the statistics as of the time the <xref:System.Net.NetworkInformation.TcpStatistics> object is created."},{"content":"This information is not updated dynamically.","pos":[316,360]}]}]}],"pos":[45222,45719],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Net.NetworkInformation.TcpStatistics\"></xref> object that provides TCP/IPv6 traffic statistics for the local computer.","nodes":[{"pos":[0,139],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Net.NetworkInformation.TcpStatistics\"&gt;&lt;/xref&gt;</ph> object that provides TCP/IPv6 traffic statistics for the local computer.","source":"A <xref href=\"System.Net.NetworkInformation.TcpStatistics\"></xref> object that provides TCP/IPv6 traffic statistics for the local computer."}],"pos":[46265,46405],"yaml":true},{"content":"The call to the Win32 function `GetTcpStatistics` failed.","nodes":[{"pos":[0,57],"content":"The call to the Win32 function <ph id=\"ph1\">`GetTcpStatistics`</ph> failed.","source":"The call to the Win32 function `GetTcpStatistics` failed."}],"pos":[46662,46720],"yaml":true},{"content":"The local computer is not running an operating system that supports IPv6.","nodes":[{"pos":[0,73],"content":"The local computer is not running an operating system that supports IPv6.","nodes":[{"content":"The local computer is not running an operating system that supports IPv6.","pos":[0,73]}]}],"pos":[46838,46912],"yaml":true},{"content":"Provides User Datagram Protocol/Internet Protocol version 4 (UDP/IPv4) statistical data for the local computer.","nodes":[{"pos":[0,111],"content":"Provides User Datagram Protocol/Internet Protocol version 4 (UDP/IPv4) statistical data for the local computer.","nodes":[{"content":"Provides User Datagram Protocol/Internet Protocol version 4 (UDP/IPv4) statistical data for the local computer.","pos":[0,111]}]}],"pos":[48216,48328],"yaml":true},{"content":"UDP is a connectionless transport layer protocol that is responsible for sending and receiving datagrams. It is defined in IETF RFC 768.  \n  \n For details on the UDP traffic statistics that are available to applications, see the <xref:System.Net.NetworkInformation.UdpStatistics> class documentation. Note that the object returned by this method reflects the statistics as of the time the <xref:System.Net.NetworkInformation.UdpStatistics> object is created. This information is not updated dynamically.","nodes":[{"pos":[0,136],"content":"UDP is a connectionless transport layer protocol that is responsible for sending and receiving datagrams. It is defined in IETF RFC 768.","nodes":[{"content":"UDP is a connectionless transport layer protocol that is responsible for sending and receiving datagrams. It is defined in IETF RFC 768.","pos":[0,136],"nodes":[{"content":"UDP is a connectionless transport layer protocol that is responsible for sending and receiving datagrams.","pos":[0,105]},{"content":"It is defined in IETF RFC 768.","pos":[106,136]}]}]},{"pos":[143,503],"content":"For details on the UDP traffic statistics that are available to applications, see the <xref:System.Net.NetworkInformation.UdpStatistics> class documentation. Note that the object returned by this method reflects the statistics as of the time the <xref:System.Net.NetworkInformation.UdpStatistics> object is created. This information is not updated dynamically.","nodes":[{"content":"For details on the UDP traffic statistics that are available to applications, see the <xref:System.Net.NetworkInformation.UdpStatistics> class documentation. Note that the object returned by this method reflects the statistics as of the time the <xref:System.Net.NetworkInformation.UdpStatistics> object is created. This information is not updated dynamically.","pos":[0,360],"nodes":[{"content":"For details on the UDP traffic statistics that are available to applications, see the <ph id=\"ph1\">&lt;xref:System.Net.NetworkInformation.UdpStatistics&gt;</ph> class documentation.","pos":[0,157],"source":"For details on the UDP traffic statistics that are available to applications, see the <xref:System.Net.NetworkInformation.UdpStatistics> class documentation."},{"content":"Note that the object returned by this method reflects the statistics as of the time the <ph id=\"ph1\">&lt;xref:System.Net.NetworkInformation.UdpStatistics&gt;</ph> object is created.","pos":[158,315],"source":" Note that the object returned by this method reflects the statistics as of the time the <xref:System.Net.NetworkInformation.UdpStatistics> object is created."},{"content":"This information is not updated dynamically.","pos":[316,360]}]}]}],"pos":[48339,48847],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Net.NetworkInformation.UdpStatistics\"></xref> object that provides UDP/IPv4 traffic statistics for the local computer.","nodes":[{"pos":[0,139],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Net.NetworkInformation.UdpStatistics\"&gt;&lt;/xref&gt;</ph> object that provides UDP/IPv4 traffic statistics for the local computer.","source":"A <xref href=\"System.Net.NetworkInformation.UdpStatistics\"></xref> object that provides UDP/IPv4 traffic statistics for the local computer."}],"pos":[49393,49533],"yaml":true},{"content":"The call to the Win32 function GetUdpStatistics failed.","nodes":[{"pos":[0,55],"content":"The call to the Win32 function GetUdpStatistics failed.","nodes":[{"content":"The call to the Win32 function GetUdpStatistics failed.","pos":[0,55]}]}],"pos":[49790,49846],"yaml":true},{"content":"Provides User Datagram Protocol/Internet Protocol version 6 (UDP/IPv6) statistical data for the local computer.","nodes":[{"pos":[0,111],"content":"Provides User Datagram Protocol/Internet Protocol version 6 (UDP/IPv6) statistical data for the local computer.","nodes":[{"content":"Provides User Datagram Protocol/Internet Protocol version 6 (UDP/IPv6) statistical data for the local computer.","pos":[0,111]}]}],"pos":[51150,51262],"yaml":true},{"content":"UDP is a connectionless transport layer protocol that is responsible for sending and receiving datagrams. It is defined in IETF RFC 768.  \n  \n For details on the UDP traffic statistics that are available to applications, see the <xref:System.Net.NetworkInformation.UdpStatistics> class documentation. Note that the object returned by this method reflects the statistics as of the time the <xref:System.Net.NetworkInformation.UdpStatistics> object is created. This information is not updated dynamically.","nodes":[{"pos":[0,136],"content":"UDP is a connectionless transport layer protocol that is responsible for sending and receiving datagrams. It is defined in IETF RFC 768.","nodes":[{"content":"UDP is a connectionless transport layer protocol that is responsible for sending and receiving datagrams. It is defined in IETF RFC 768.","pos":[0,136],"nodes":[{"content":"UDP is a connectionless transport layer protocol that is responsible for sending and receiving datagrams.","pos":[0,105]},{"content":"It is defined in IETF RFC 768.","pos":[106,136]}]}]},{"pos":[143,503],"content":"For details on the UDP traffic statistics that are available to applications, see the <xref:System.Net.NetworkInformation.UdpStatistics> class documentation. Note that the object returned by this method reflects the statistics as of the time the <xref:System.Net.NetworkInformation.UdpStatistics> object is created. This information is not updated dynamically.","nodes":[{"content":"For details on the UDP traffic statistics that are available to applications, see the <xref:System.Net.NetworkInformation.UdpStatistics> class documentation. Note that the object returned by this method reflects the statistics as of the time the <xref:System.Net.NetworkInformation.UdpStatistics> object is created. This information is not updated dynamically.","pos":[0,360],"nodes":[{"content":"For details on the UDP traffic statistics that are available to applications, see the <ph id=\"ph1\">&lt;xref:System.Net.NetworkInformation.UdpStatistics&gt;</ph> class documentation.","pos":[0,157],"source":"For details on the UDP traffic statistics that are available to applications, see the <xref:System.Net.NetworkInformation.UdpStatistics> class documentation."},{"content":"Note that the object returned by this method reflects the statistics as of the time the <ph id=\"ph1\">&lt;xref:System.Net.NetworkInformation.UdpStatistics&gt;</ph> object is created.","pos":[158,315],"source":" Note that the object returned by this method reflects the statistics as of the time the <xref:System.Net.NetworkInformation.UdpStatistics> object is created."},{"content":"This information is not updated dynamically.","pos":[316,360]}]}]}],"pos":[51273,51781],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Net.NetworkInformation.UdpStatistics\"></xref> object that provides UDP/IPv6 traffic statistics for the local computer.","nodes":[{"pos":[0,139],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Net.NetworkInformation.UdpStatistics\"&gt;&lt;/xref&gt;</ph> object that provides UDP/IPv6 traffic statistics for the local computer.","source":"A <xref href=\"System.Net.NetworkInformation.UdpStatistics\"></xref> object that provides UDP/IPv6 traffic statistics for the local computer."}],"pos":[52327,52467],"yaml":true},{"content":"The call to the Win32 function `GetUdpStatistics` failed.","nodes":[{"pos":[0,57],"content":"The call to the Win32 function <ph id=\"ph1\">`GetUdpStatistics`</ph> failed.","source":"The call to the Win32 function `GetUdpStatistics` failed."}],"pos":[52724,52782],"yaml":true},{"content":"The local computer is not running an operating system that supports IPv6.","nodes":[{"pos":[0,73],"content":"The local computer is not running an operating system that supports IPv6.","nodes":[{"content":"The local computer is not running an operating system that supports IPv6.","pos":[0,73]}]}],"pos":[52900,52974],"yaml":true},{"content":"Retrieves the stable unicast IP address table on the local computer.","nodes":[{"pos":[0,68],"content":"Retrieves the stable unicast IP address table on the local computer.","nodes":[{"content":"Retrieves the stable unicast IP address table on the local computer.","pos":[0,68]}]}],"pos":[54272,54341],"yaml":true},{"content":"In order to support outbound connections or to accept incoming connections on a Teredo interface, applications need to ensure that the Teredo interface is up and ready for use. This is because Teredo can go into a dormant state when not used for some period of time.  \n  \n The <xref:System.Net.NetworkInformation.IPGlobalProperties.GetUnicastAddresses%2A> method will allow an application to retrieve the list of stable unicast IP addresses. The <xref:System.Net.IPAddress.IsIPv6Teredo%2A?displayProperty=fullName> property can be used to determine if an IP address is an IPv6 Teredo address with the prefix of 2001::/32.  \n  \n The <xref:System.Net.NetworkInformation.IPGlobalProperties.GetUnicastAddresses%2A> method also returns non-Teredo addresses and provides a more convenient way to obtain the unicast IP addresses for a system than enumerating all the <xref:System.Net.NetworkInformation.NetworkInterface?displayProperty=fullName> objects on a local computer and querying the associated IP addresses.","nodes":[{"pos":[0,266],"content":"In order to support outbound connections or to accept incoming connections on a Teredo interface, applications need to ensure that the Teredo interface is up and ready for use. This is because Teredo can go into a dormant state when not used for some period of time.","nodes":[{"content":"In order to support outbound connections or to accept incoming connections on a Teredo interface, applications need to ensure that the Teredo interface is up and ready for use. This is because Teredo can go into a dormant state when not used for some period of time.","pos":[0,266],"nodes":[{"content":"In order to support outbound connections or to accept incoming connections on a Teredo interface, applications need to ensure that the Teredo interface is up and ready for use.","pos":[0,176]},{"content":"This is because Teredo can go into a dormant state when not used for some period of time.","pos":[177,266]}]}]},{"pos":[273,621],"content":"The <xref:System.Net.NetworkInformation.IPGlobalProperties.GetUnicastAddresses%2A> method will allow an application to retrieve the list of stable unicast IP addresses. The <xref:System.Net.IPAddress.IsIPv6Teredo%2A?displayProperty=fullName> property can be used to determine if an IP address is an IPv6 Teredo address with the prefix of 2001::/32.","nodes":[{"content":"The <xref:System.Net.NetworkInformation.IPGlobalProperties.GetUnicastAddresses%2A> method will allow an application to retrieve the list of stable unicast IP addresses. The <xref:System.Net.IPAddress.IsIPv6Teredo%2A?displayProperty=fullName> property can be used to determine if an IP address is an IPv6 Teredo address with the prefix of 2001::/32.","pos":[0,348],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Net.NetworkInformation.IPGlobalProperties.GetUnicastAddresses%2A&gt;</ph> method will allow an application to retrieve the list of stable unicast IP addresses.","pos":[0,168],"source":"The <xref:System.Net.NetworkInformation.IPGlobalProperties.GetUnicastAddresses%2A> method will allow an application to retrieve the list of stable unicast IP addresses."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Net.IPAddress.IsIPv6Teredo%2A?displayProperty=fullName&gt;</ph> property can be used to determine if an IP address is an IPv6 Teredo address with the prefix of 2001::/32.","pos":[169,348],"source":" The <xref:System.Net.IPAddress.IsIPv6Teredo%2A?displayProperty=fullName> property can be used to determine if an IP address is an IPv6 Teredo address with the prefix of 2001::/32."}]}]},{"pos":[628,1008],"content":"The <xref:System.Net.NetworkInformation.IPGlobalProperties.GetUnicastAddresses%2A> method also returns non-Teredo addresses and provides a more convenient way to obtain the unicast IP addresses for a system than enumerating all the <xref:System.Net.NetworkInformation.NetworkInterface?displayProperty=fullName> objects on a local computer and querying the associated IP addresses.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Net.NetworkInformation.IPGlobalProperties.GetUnicastAddresses%2A&gt;</ph> method also returns non-Teredo addresses and provides a more convenient way to obtain the unicast IP addresses for a system than enumerating all the <ph id=\"ph2\">&lt;xref:System.Net.NetworkInformation.NetworkInterface?displayProperty=fullName&gt;</ph> objects on a local computer and querying the associated IP addresses.","pos":[0,380],"source":"The <xref:System.Net.NetworkInformation.IPGlobalProperties.GetUnicastAddresses%2A> method also returns non-Teredo addresses and provides a more convenient way to obtain the unicast IP addresses for a system than enumerating all the <xref:System.Net.NetworkInformation.NetworkInterface?displayProperty=fullName> objects on a local computer and querying the associated IP addresses."}]}],"pos":[54352,55367],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Net.NetworkInformation.UnicastIPAddressInformationCollection\"></xref> that contains a list of stable unicast IP addresses on the local computer.","nodes":[{"pos":[0,165],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Net.NetworkInformation.UnicastIPAddressInformationCollection\"&gt;&lt;/xref&gt;</ph> that contains a list of stable unicast IP addresses on the local computer.","source":"A <xref href=\"System.Net.NetworkInformation.UnicastIPAddressInformationCollection\"></xref> that contains a list of stable unicast IP addresses on the local computer."}],"pos":[55627,55793],"yaml":true},{"content":"The call to the native `GetAdaptersAddresses` function failed.","nodes":[{"pos":[0,62],"content":"The call to the native <ph id=\"ph1\">`GetAdaptersAddresses`</ph> function failed.","source":"The call to the native `GetAdaptersAddresses` function failed."}],"pos":[56049,56112],"yaml":true},{"content":"This method is not implemented on the platform. This method uses the native `NotifyStableUnicastIpAddressTable` function that is supported on Windows Vista and later.","nodes":[{"pos":[0,166],"content":"This method is not implemented on the platform. This method uses the native `NotifyStableUnicastIpAddressTable` function that is supported on Windows Vista and later.","nodes":[{"content":"This method is not implemented on the platform.","pos":[0,47]},{"content":"This method uses the native <ph id=\"ph1\">`NotifyStableUnicastIpAddressTable`</ph> function that is supported on Windows Vista and later.","pos":[48,166],"source":" This method uses the native `NotifyStableUnicastIpAddressTable` function that is supported on Windows Vista and later."}]}],"pos":[56218,56385],"yaml":true},{"content":"The caller does not have necessary <xref href=\"System.Net.NetworkInformation.NetworkInformationAccess.Read\"></xref> permission.","nodes":[{"pos":[0,127],"content":"The caller does not have necessary <ph id=\"ph1\">&lt;xref href=\"System.Net.NetworkInformation.NetworkInformationAccess.Read\"&gt;&lt;/xref&gt;</ph> permission.","source":"The caller does not have necessary <xref href=\"System.Net.NetworkInformation.NetworkInformationAccess.Read\"></xref> permission."}],"pos":[56497,56625],"yaml":true},{"content":"The call to the native `NotifyStableUnicastIpAddressTable` function failed.","nodes":[{"pos":[0,75],"content":"The call to the native <ph id=\"ph1\">`NotifyStableUnicastIpAddressTable`</ph> function failed.","source":"The call to the native `NotifyStableUnicastIpAddressTable` function failed."}],"pos":[56743,56819],"yaml":true},{"content":"Retrieves the stable unicast IP address table on the local computer as an asynchronous operation.","nodes":[{"pos":[0,97],"content":"Retrieves the stable unicast IP address table on the local computer as an asynchronous operation.","nodes":[{"content":"Retrieves the stable unicast IP address table on the local computer as an asynchronous operation.","pos":[0,97]}]}],"pos":[58083,58181],"yaml":true},{"content":"In order to support outbound connections or to accept incoming connections on a Teredo interface, applications need to ensure that the Teredo interface is up and ready for use. This is because Teredo can go into a dormant state when not used for some period of time.  \n  \n The <xref:System.Net.NetworkInformation.IPGlobalProperties.GetUnicastAddressesAsync%2A> method will allow an application to retrieve the list of stable unicast IP addresses as asynchronous operation. The <xref:System.Net.IPAddress.IsIPv6Teredo%2A?displayProperty=fullName> property can be used to determine if an IP address is an IPv6 Teredo address with the prefix of 2001::/32.  \n  \n The <xref:System.Net.NetworkInformation.IPGlobalProperties.GetUnicastAddresses%2A> method also returns non-Teredo addresses and provides a more convenient way to obtain the unicast IP addresses for a system than enumerating all the <xref:System.Net.NetworkInformation.NetworkInterface?displayProperty=fullName> objects on a local computer and querying the associated IP addresses.","nodes":[{"pos":[0,266],"content":"In order to support outbound connections or to accept incoming connections on a Teredo interface, applications need to ensure that the Teredo interface is up and ready for use. This is because Teredo can go into a dormant state when not used for some period of time.","nodes":[{"content":"In order to support outbound connections or to accept incoming connections on a Teredo interface, applications need to ensure that the Teredo interface is up and ready for use. This is because Teredo can go into a dormant state when not used for some period of time.","pos":[0,266],"nodes":[{"content":"In order to support outbound connections or to accept incoming connections on a Teredo interface, applications need to ensure that the Teredo interface is up and ready for use.","pos":[0,176]},{"content":"This is because Teredo can go into a dormant state when not used for some period of time.","pos":[177,266]}]}]},{"pos":[273,652],"content":"The <xref:System.Net.NetworkInformation.IPGlobalProperties.GetUnicastAddressesAsync%2A> method will allow an application to retrieve the list of stable unicast IP addresses as asynchronous operation. The <xref:System.Net.IPAddress.IsIPv6Teredo%2A?displayProperty=fullName> property can be used to determine if an IP address is an IPv6 Teredo address with the prefix of 2001::/32.","nodes":[{"content":"The <xref:System.Net.NetworkInformation.IPGlobalProperties.GetUnicastAddressesAsync%2A> method will allow an application to retrieve the list of stable unicast IP addresses as asynchronous operation. The <xref:System.Net.IPAddress.IsIPv6Teredo%2A?displayProperty=fullName> property can be used to determine if an IP address is an IPv6 Teredo address with the prefix of 2001::/32.","pos":[0,379],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Net.NetworkInformation.IPGlobalProperties.GetUnicastAddressesAsync%2A&gt;</ph> method will allow an application to retrieve the list of stable unicast IP addresses as asynchronous operation.","pos":[0,199],"source":"The <xref:System.Net.NetworkInformation.IPGlobalProperties.GetUnicastAddressesAsync%2A> method will allow an application to retrieve the list of stable unicast IP addresses as asynchronous operation."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Net.IPAddress.IsIPv6Teredo%2A?displayProperty=fullName&gt;</ph> property can be used to determine if an IP address is an IPv6 Teredo address with the prefix of 2001::/32.","pos":[200,379],"source":" The <xref:System.Net.IPAddress.IsIPv6Teredo%2A?displayProperty=fullName> property can be used to determine if an IP address is an IPv6 Teredo address with the prefix of 2001::/32."}]}]},{"pos":[659,1039],"content":"The <xref:System.Net.NetworkInformation.IPGlobalProperties.GetUnicastAddresses%2A> method also returns non-Teredo addresses and provides a more convenient way to obtain the unicast IP addresses for a system than enumerating all the <xref:System.Net.NetworkInformation.NetworkInterface?displayProperty=fullName> objects on a local computer and querying the associated IP addresses.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Net.NetworkInformation.IPGlobalProperties.GetUnicastAddresses%2A&gt;</ph> method also returns non-Teredo addresses and provides a more convenient way to obtain the unicast IP addresses for a system than enumerating all the <ph id=\"ph2\">&lt;xref:System.Net.NetworkInformation.NetworkInterface?displayProperty=fullName&gt;</ph> objects on a local computer and querying the associated IP addresses.","pos":[0,380],"source":"The <xref:System.Net.NetworkInformation.IPGlobalProperties.GetUnicastAddresses%2A> method also returns non-Teredo addresses and provides a more convenient way to obtain the unicast IP addresses for a system than enumerating all the <xref:System.Net.NetworkInformation.NetworkInterface?displayProperty=fullName> objects on a local computer and querying the associated IP addresses."}]}],"pos":[58192,59238],"yaml":true,"extradata":"MT"},{"content":"Returns <xref href=\"System.Threading.Tasks.Task`1\"></xref>.  \n  \n The task object representing the asynchronous operation.","nodes":[{"pos":[0,59],"content":"Returns <ph id=\"ph1\">&lt;xref href=\"System.Threading.Tasks.Task`1\"&gt;&lt;/xref&gt;</ph>.","source":"Returns <xref href=\"System.Threading.Tasks.Task`1\"></xref>."},{"pos":[66,122],"content":"The task object representing the asynchronous operation.","nodes":[{"content":"The task object representing the asynchronous operation.","pos":[0,56]}]}],"pos":[59561,59690],"yaml":true},{"content":"The call to the native `GetAdaptersAddresses` function failed.","nodes":[{"pos":[0,62],"content":"The call to the native <ph id=\"ph1\">`GetAdaptersAddresses`</ph> function failed.","source":"The call to the native `GetAdaptersAddresses` function failed."}],"pos":[59951,60014],"yaml":true},{"content":"The caller does not have necessary <xref href=\"System.Net.NetworkInformation.NetworkInformationAccess.Read\"></xref> permission.","nodes":[{"pos":[0,127],"content":"The caller does not have necessary <ph id=\"ph1\">&lt;xref href=\"System.Net.NetworkInformation.NetworkInformationAccess.Read\"&gt;&lt;/xref&gt;</ph> permission.","source":"The caller does not have necessary <xref href=\"System.Net.NetworkInformation.NetworkInformationAccess.Read\"></xref> permission."}],"pos":[60126,60254],"yaml":true},{"content":"The call to the native `NotifyStableUnicastIpAddressTable` function failed.","nodes":[{"pos":[0,75],"content":"The call to the native <ph id=\"ph1\">`NotifyStableUnicastIpAddressTable`</ph> function failed.","source":"The call to the native `NotifyStableUnicastIpAddressTable` function failed."}],"pos":[60372,60448],"yaml":true},{"content":"Gets the host name for the local computer.","nodes":[{"pos":[0,42],"content":"Gets the host name for the local computer.","nodes":[{"content":"Gets the host name for the local computer.","pos":[0,42]}]}],"pos":[61676,61719],"yaml":true},{"content":"This property calls into the native IP Helper function, GetNetworkParams, which returns a FIXED_INFO structure that contains the NetBIOS host name string. The host name string is truncated when it exceeds 15 characters.  \n  \n A computer's NetBIOS name must be unique within a network and is not fully qualified by the domain name.","nodes":[{"pos":[0,219],"content":"This property calls into the native IP Helper function, GetNetworkParams, which returns a FIXED_INFO structure that contains the NetBIOS host name string. The host name string is truncated when it exceeds 15 characters.","nodes":[{"content":"This property calls into the native IP Helper function, GetNetworkParams, which returns a FIXED_INFO structure that contains the NetBIOS host name string. The host name string is truncated when it exceeds 15 characters.","pos":[0,219],"nodes":[{"content":"This property calls into the native IP Helper function, GetNetworkParams, which returns a FIXED_INFO structure that contains the NetBIOS host name string.","pos":[0,154]},{"content":"The host name string is truncated when it exceeds 15 characters.","pos":[155,219]}]}]},{"pos":[226,330],"content":"A computer's NetBIOS name must be unique within a network and is not fully qualified by the domain name.","nodes":[{"content":"A computer's NetBIOS name must be unique within a network and is not fully qualified by the domain name.","pos":[0,104]}]}],"pos":[61730,62065],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.String\"></xref> instance that contains the computer's NetBIOS name.","nodes":[{"pos":[0,88],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.String\"&gt;&lt;/xref&gt;</ph> instance that contains the computer's NetBIOS name.","source":"A <xref href=\"System.String\"></xref> instance that contains the computer's NetBIOS name."}],"pos":[62525,62614],"yaml":true},{"content":"A Win32 function call failed.","nodes":[{"pos":[0,29],"content":"A Win32 function call failed.","nodes":[{"content":"A Win32 function call failed.","pos":[0,29]}]}],"pos":[62859,62889],"yaml":true},{"content":"Gets a <xref href=\"System.Boolean\"></xref> value that specifies whether the local computer is acting as a Windows Internet Name Service (WINS) proxy.","nodes":[{"pos":[0,149],"content":"Gets a <ph id=\"ph1\">&lt;xref href=\"System.Boolean\"&gt;&lt;/xref&gt;</ph> value that specifies whether the local computer is acting as a Windows Internet Name Service (WINS) proxy.","source":"Gets a <xref href=\"System.Boolean\"></xref> value that specifies whether the local computer is acting as a Windows Internet Name Service (WINS) proxy."}],"pos":[64135,64285],"yaml":true},{"content":"WINS provides a distributed database for registering and querying dynamic NetBIOS names to IP address mappings.","nodes":[{"pos":[0,111],"content":"WINS provides a distributed database for registering and querying dynamic NetBIOS names to IP address mappings.","nodes":[{"content":"WINS provides a distributed database for registering and querying dynamic NetBIOS names to IP address mappings.","pos":[0,111]}]}],"pos":[64296,64408],"yaml":true,"extradata":"MT"},{"content":"`true` if the local computer is a WINS proxy; otherwise, `false`.","nodes":[{"pos":[0,65],"content":"<ph id=\"ph1\">`true`</ph> if the local computer is a WINS proxy; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the local computer is a WINS proxy; otherwise, `false`."}],"pos":[64870,64938],"yaml":true},{"content":"A Win32 function call failed.","nodes":[{"pos":[0,29],"content":"A Win32 function call failed.","nodes":[{"content":"A Win32 function call failed.","pos":[0,29]}]}],"pos":[65186,65216],"yaml":true},{"content":"Gets the Network Basic Input/Output System (NetBIOS) node type of the local computer.","nodes":[{"pos":[0,85],"content":"Gets the Network Basic Input/Output System (NetBIOS) node type of the local computer.","nodes":[{"content":"Gets the Network Basic Input/Output System (NetBIOS) node type of the local computer.","pos":[0,85]}]}],"pos":[66444,66530],"yaml":true},{"content":"The node type determines the way in which NetBIOS names are resolved to IP addresses. For additional information, see the <xref:System.Net.NetworkInformation.NetBiosNodeType> class overview.","nodes":[{"pos":[0,190],"content":"The node type determines the way in which NetBIOS names are resolved to IP addresses. For additional information, see the <xref:System.Net.NetworkInformation.NetBiosNodeType> class overview.","nodes":[{"content":"The node type determines the way in which NetBIOS names are resolved to IP addresses. For additional information, see the <xref:System.Net.NetworkInformation.NetBiosNodeType> class overview.","pos":[0,190],"nodes":[{"content":"The node type determines the way in which NetBIOS names are resolved to IP addresses.","pos":[0,85]},{"content":"For additional information, see the <ph id=\"ph1\">&lt;xref:System.Net.NetworkInformation.NetBiosNodeType&gt;</ph> class overview.","pos":[86,190],"source":" For additional information, see the <xref:System.Net.NetworkInformation.NetBiosNodeType> class overview."}]}]}],"pos":[66541,66732],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Net.NetworkInformation.NetBiosNodeType\"></xref> value.","nodes":[{"pos":[0,75],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Net.NetworkInformation.NetBiosNodeType\"&gt;&lt;/xref&gt;</ph> value.","source":"A <xref href=\"System.Net.NetworkInformation.NetBiosNodeType\"></xref> value."}],"pos":[67263,67339],"yaml":true},{"content":"A Win32 function call failed.","nodes":[{"pos":[0,29],"content":"A Win32 function call failed.","nodes":[{"content":"A Win32 function call failed.","pos":[0,29]}]}],"pos":[67584,67614],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Net.NetworkInformation.IPGlobalProperties\n  commentId: T:System.Net.NetworkInformation.IPGlobalProperties\n  id: IPGlobalProperties\n  children:\n  - System.Net.NetworkInformation.IPGlobalProperties.#ctor\n  - System.Net.NetworkInformation.IPGlobalProperties.BeginGetUnicastAddresses(System.AsyncCallback,System.Object)\n  - System.Net.NetworkInformation.IPGlobalProperties.DhcpScopeName\n  - System.Net.NetworkInformation.IPGlobalProperties.DomainName\n  - System.Net.NetworkInformation.IPGlobalProperties.EndGetUnicastAddresses(System.IAsyncResult)\n  - System.Net.NetworkInformation.IPGlobalProperties.GetActiveTcpConnections\n  - System.Net.NetworkInformation.IPGlobalProperties.GetActiveTcpListeners\n  - System.Net.NetworkInformation.IPGlobalProperties.GetActiveUdpListeners\n  - System.Net.NetworkInformation.IPGlobalProperties.GetIcmpV4Statistics\n  - System.Net.NetworkInformation.IPGlobalProperties.GetIcmpV6Statistics\n  - System.Net.NetworkInformation.IPGlobalProperties.GetIPGlobalProperties\n  - System.Net.NetworkInformation.IPGlobalProperties.GetIPv4GlobalStatistics\n  - System.Net.NetworkInformation.IPGlobalProperties.GetIPv6GlobalStatistics\n  - System.Net.NetworkInformation.IPGlobalProperties.GetTcpIPv4Statistics\n  - System.Net.NetworkInformation.IPGlobalProperties.GetTcpIPv6Statistics\n  - System.Net.NetworkInformation.IPGlobalProperties.GetUdpIPv4Statistics\n  - System.Net.NetworkInformation.IPGlobalProperties.GetUdpIPv6Statistics\n  - System.Net.NetworkInformation.IPGlobalProperties.GetUnicastAddresses\n  - System.Net.NetworkInformation.IPGlobalProperties.GetUnicastAddressesAsync\n  - System.Net.NetworkInformation.IPGlobalProperties.HostName\n  - System.Net.NetworkInformation.IPGlobalProperties.IsWinsProxy\n  - System.Net.NetworkInformation.IPGlobalProperties.NodeType\n  langs:\n  - csharp\n  name: IPGlobalProperties\n  nameWithType: IPGlobalProperties\n  fullName: System.Net.NetworkInformation.IPGlobalProperties\n  type: Class\n  assemblies:\n  - System.Net.NetworkInformation\n  - System\n  - netstandard\n  namespace: System.Net.NetworkInformation\n  summary: Provides information about the network connectivity of the local computer.\n  remarks: \"This class provides configuration and statistical information about the local computer's network interfaces and network connections.  \\n  \\n The information provided by this class is similar to that provided by the Internet Protocol Helper API functions. For information about the Internet Protocol Helper, see the documentation in the MSDN Library.\"\n  example:\n  - \"The following code example displays information about the local computer using an instance of this class.  \\n  \\n [!code-cpp[NclNetInfo2#15](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLNetInfo2/CPP/networkexamples.cpp#15)]\\n [!code-csharp[NclNetInfo2#15](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLNetInfo2/CS/networkexamples.cs#15)]\\n [!code-vb[NclNetInfo2#15](~/samples/snippets/visualbasic/VS_Snippets_Remoting/NCLNetInfo2/VB/networkexamples.vb#15)]\"\n  syntax:\n    content: public abstract class IPGlobalProperties\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.NetworkInformation/IPGlobalProperties.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.NetworkInformation.IPGlobalProperties.#ctor\n  commentId: M:System.Net.NetworkInformation.IPGlobalProperties.#ctor\n  id: '#ctor'\n  parent: System.Net.NetworkInformation.IPGlobalProperties\n  langs:\n  - csharp\n  name: IPGlobalProperties()\n  nameWithType: IPGlobalProperties.IPGlobalProperties()\n  fullName: IPGlobalProperties.IPGlobalProperties()\n  type: Constructor\n  assemblies:\n  - System.Net.NetworkInformation\n  - System\n  - netstandard\n  namespace: System.Net.NetworkInformation\n  summary: Initializes a new instance of the <xref href=\"System.Net.NetworkInformation.IPGlobalProperties\"></xref> class.\n  remarks: This constructor can be called only by classes derived from <xref:System.Net.NetworkInformation.IPGlobalProperties>.\n  syntax:\n    content: protected IPGlobalProperties ();\n    parameters: []\n  overload: System.Net.NetworkInformation.IPGlobalProperties.#ctor*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.NetworkInformation/IPGlobalProperties.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.NetworkInformation.IPGlobalProperties.BeginGetUnicastAddresses(System.AsyncCallback,System.Object)\n  commentId: M:System.Net.NetworkInformation.IPGlobalProperties.BeginGetUnicastAddresses(System.AsyncCallback,System.Object)\n  id: BeginGetUnicastAddresses(System.AsyncCallback,System.Object)\n  parent: System.Net.NetworkInformation.IPGlobalProperties\n  langs:\n  - csharp\n  name: BeginGetUnicastAddresses(AsyncCallback, Object)\n  nameWithType: IPGlobalProperties.BeginGetUnicastAddresses(AsyncCallback, Object)\n  fullName: IPGlobalProperties.BeginGetUnicastAddresses(AsyncCallback, Object)\n  type: Method\n  assemblies:\n  - System\n  - netstandard\n  - System.Net.NetworkInformation\n  namespace: System.Net.NetworkInformation\n  summary: Begins an asynchronous request to retrieve the stable unicast IP address table on the local computer.\n  remarks: \"In order to support outbound connections or to accept incoming connections on a Teredo interface, applications need to ensure that the Teredo interface is up and ready for use. This is because Teredo can go into a dormant state when not used for some period of time.  \\n  \\n The <xref:System.Net.NetworkInformation.IPGlobalProperties.BeginGetUnicastAddresses%2A> method allows an application to asynchronously retrieve the list of stable unicast IP addresses. The <xref:System.Net.IPAddress.IsIPv6Teredo%2A?displayProperty=fullName> property can be used to determine if an IP address is an IPv6 Teredo address with the prefix of 2001::/32.  \\n  \\n The <xref:System.Net.NetworkInformation.IPGlobalProperties.BeginGetUnicastAddresses%2A> method also returns non-Teredo addresses and provides a more convenient way to obtain the unicast IP addresses for a system than enumerating all the <xref:System.Net.NetworkInformation.NetworkInterface?displayProperty=fullName> objects on a local computer and querying the associated IP addresses.\"\n  syntax:\n    content: public virtual IAsyncResult BeginGetUnicastAddresses (AsyncCallback callback, object state);\n    parameters:\n    - id: callback\n      type: System.AsyncCallback\n      description: The <xref href=\"System.AsyncCallback\"></xref> delegate.\n    - id: state\n      type: System.Object\n      description: An object that contains state information for this request.\n    return:\n      type: System.IAsyncResult\n      description: An <xref href=\"System.IAsyncResult\"></xref> that references the asynchronous request.\n  overload: System.Net.NetworkInformation.IPGlobalProperties.BeginGetUnicastAddresses*\n  exceptions:\n  - type: System.NotImplementedException\n    commentId: T:System.NotImplementedException\n    description: This method is not implemented on the platform. This method uses the native `NotifyStableUnicastIpAddressTable` function that is supported on Windows Vista and later.\n  - type: System.ComponentModel.Win32Exception\n    commentId: T:System.ComponentModel.Win32Exception\n    description: The call to the native `NotifyStableUnicastIpAddressTable` function failed.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.NetworkInformation/IPGlobalProperties.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.NetworkInformation.IPGlobalProperties.DhcpScopeName\n  commentId: P:System.Net.NetworkInformation.IPGlobalProperties.DhcpScopeName\n  id: DhcpScopeName\n  parent: System.Net.NetworkInformation.IPGlobalProperties\n  langs:\n  - csharp\n  name: DhcpScopeName\n  nameWithType: IPGlobalProperties.DhcpScopeName\n  fullName: IPGlobalProperties.DhcpScopeName\n  type: Property\n  assemblies:\n  - System.Net.NetworkInformation\n  - System\n  - netstandard\n  namespace: System.Net.NetworkInformation\n  summary: Gets the Dynamic Host Configuration Protocol (DHCP) scope name.\n  remarks: A DHCP scope is an administrative grouping of networked computers that are on the same subnet.\n  example:\n  - \"The following code example displays network information for the local computer.  \\n  \\n [!code-cpp[NCLNetInfoReport#15](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLNetInfoReport/CPP/netinfo.cpp#15)]\\n [!code-csharp[NCLNetInfoReport#15](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLNetInfoReport/CS/netinfo.cs#15)]\"\n  syntax:\n    content: public abstract string DhcpScopeName { get; }\n    return:\n      type: System.String\n      description: A <xref href=\"System.String\"></xref> instance that contains the computer's DHCP scope name.\n  overload: System.Net.NetworkInformation.IPGlobalProperties.DhcpScopeName*\n  exceptions:\n  - type: System.Net.NetworkInformation.NetworkInformationException\n    commentId: T:System.Net.NetworkInformation.NetworkInformationException\n    description: A Win32 function call failed.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.NetworkInformation/IPGlobalProperties.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.NetworkInformation.IPGlobalProperties.DomainName\n  commentId: P:System.Net.NetworkInformation.IPGlobalProperties.DomainName\n  id: DomainName\n  parent: System.Net.NetworkInformation.IPGlobalProperties\n  langs:\n  - csharp\n  name: DomainName\n  nameWithType: IPGlobalProperties.DomainName\n  fullName: IPGlobalProperties.DomainName\n  type: Property\n  assemblies:\n  - System.Net.NetworkInformation\n  - System\n  - netstandard\n  namespace: System.Net.NetworkInformation\n  summary: Gets the domain in which the local computer is registered.\n  remarks: ''\n  example:\n  - \"The following code example displays network information for the local computer.  \\n  \\n [!code-cpp[NCLNetInfoReport#15](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLNetInfoReport/CPP/netinfo.cpp#15)]\\n [!code-csharp[NCLNetInfoReport#15](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLNetInfoReport/CS/netinfo.cs#15)]\"\n  syntax:\n    content: public abstract string DomainName { get; }\n    return:\n      type: System.String\n      description: A <xref href=\"System.String\"></xref> instance that contains the computer's domain name. If the computer does not belong to a domain, returns <xref href=\"System.String.Empty\"></xref>.\n  overload: System.Net.NetworkInformation.IPGlobalProperties.DomainName*\n  exceptions:\n  - type: System.Net.NetworkInformation.NetworkInformationException\n    commentId: T:System.Net.NetworkInformation.NetworkInformationException\n    description: A Win32 function call failed.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.NetworkInformation/IPGlobalProperties.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.NetworkInformation.IPGlobalProperties.EndGetUnicastAddresses(System.IAsyncResult)\n  commentId: M:System.Net.NetworkInformation.IPGlobalProperties.EndGetUnicastAddresses(System.IAsyncResult)\n  id: EndGetUnicastAddresses(System.IAsyncResult)\n  parent: System.Net.NetworkInformation.IPGlobalProperties\n  langs:\n  - csharp\n  name: EndGetUnicastAddresses(IAsyncResult)\n  nameWithType: IPGlobalProperties.EndGetUnicastAddresses(IAsyncResult)\n  fullName: IPGlobalProperties.EndGetUnicastAddresses(IAsyncResult)\n  type: Method\n  assemblies:\n  - System\n  - netstandard\n  - System.Net.NetworkInformation\n  namespace: System.Net.NetworkInformation\n  summary: Ends a pending asynchronous request to retrieve the stable unicast IP address table on the local computer.\n  remarks: \"In order to support outbound connections or to accept incoming connections on a Teredo interface, applications need to ensure that the Teredo interface is up and ready for use. This is because Teredo can go into a dormant state when not used for some period of time.  \\n  \\n The <xref:System.Net.NetworkInformation.IPGlobalProperties.BeginGetUnicastAddresses%2A> method allows an application to asynchronously retrieve the list of stable unicast IP addresses. The <xref:System.Net.IPAddress.IsIPv6Teredo%2A?displayProperty=fullName> property can be used to determine if an IP address is an IPv6 Teredo address with the prefix of 2001::/32.  \\n  \\n The <xref:System.Net.NetworkInformation.IPGlobalProperties.EndGetUnicastAddresses%2A> method ends a pending asynchronous request to retrieve the stable unicast IP address table.  \\n  \\n The <xref:System.Net.NetworkInformation.IPGlobalProperties.BeginGetUnicastAddresses%2A> method also returns non-Teredo addresses and provides a more convenient way to obtain the unicast IP addresses for a system than enumerating all the <xref:System.Net.NetworkInformation.NetworkInterface?displayProperty=fullName> objects on a local computer and querying the associated IP addresses.\"\n  syntax:\n    content: public virtual System.Net.NetworkInformation.UnicastIPAddressInformationCollection EndGetUnicastAddresses (IAsyncResult asyncResult);\n    parameters:\n    - id: asyncResult\n      type: System.IAsyncResult\n      description: An <xref href=\"System.IAsyncResult\"></xref> that references the asynchronous request.\n    return:\n      type: System.Net.NetworkInformation.UnicastIPAddressInformationCollection\n      description: An <xref href=\"System.IAsyncResult\"></xref> that stores state information and any user defined data for this asynchronous operation.\n  overload: System.Net.NetworkInformation.IPGlobalProperties.EndGetUnicastAddresses*\n  exceptions:\n  - type: System.Net.NetworkInformation.NetworkInformationException\n    commentId: T:System.Net.NetworkInformation.NetworkInformationException\n    description: The call to the native `GetAdaptersAddresses` function failed.\n  - type: System.NotImplementedException\n    commentId: T:System.NotImplementedException\n    description: This method is not implemented on the platform. This method uses the native `NotifyStableUnicastIpAddressTable` function that is supported on Windows Vista and later.\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: The caller does not have necessary <xref href=\"System.Net.NetworkInformation.NetworkInformationAccess.Read\"></xref> permission.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.NetworkInformation/IPGlobalProperties.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.NetworkInformation.IPGlobalProperties.GetActiveTcpConnections\n  commentId: M:System.Net.NetworkInformation.IPGlobalProperties.GetActiveTcpConnections\n  id: GetActiveTcpConnections\n  parent: System.Net.NetworkInformation.IPGlobalProperties\n  langs:\n  - csharp\n  name: GetActiveTcpConnections()\n  nameWithType: IPGlobalProperties.GetActiveTcpConnections()\n  fullName: IPGlobalProperties.GetActiveTcpConnections()\n  type: Method\n  assemblies:\n  - System.Net.NetworkInformation\n  - System\n  - netstandard\n  namespace: System.Net.NetworkInformation\n  summary: Returns information about the Internet Protocol version 4 (IPv4) and IPv6 Transmission Control Protocol (TCP) connections on the local computer.\n  remarks: \"The objects returned by this method include connections in all TCP states except the <xref:System.Net.NetworkInformation.TcpState.Listen> state. You can check the state of a connection by calling <xref:System.Net.NetworkInformation.TcpConnectionInformation.State%2A>.  \\n  \\n The TCP protocol is defined in IETF RFC 793. Note that the objects returned by this method reflect the connections as of the time the array is created. This information is not updated dynamically.\"\n  example:\n  - \"The following example displays endpoint information for active TCP connections.  \\n  \\n [!code-cpp[NCLNetInfoReport#17](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLNetInfoReport/CPP/netinfo.cpp#17)]\\n [!code-csharp[NCLNetInfoReport#17](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLNetInfoReport/CS/netinfo.cs#17)]\"\n  syntax:\n    content: public abstract System.Net.NetworkInformation.TcpConnectionInformation[] GetActiveTcpConnections ();\n    parameters: []\n    return:\n      type: System.Net.NetworkInformation.TcpConnectionInformation[]\n      description: A <xref href=\"System.Net.NetworkInformation.TcpConnectionInformation\"></xref> array that contains objects that describe the active TCP connections, or an empty array if no active TCP connections are detected.\n  overload: System.Net.NetworkInformation.IPGlobalProperties.GetActiveTcpConnections*\n  exceptions:\n  - type: System.Net.NetworkInformation.NetworkInformationException\n    commentId: T:System.Net.NetworkInformation.NetworkInformationException\n    description: The Win32 function `GetTcpTable` failed.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.NetworkInformation/IPGlobalProperties.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.NetworkInformation.IPGlobalProperties.GetActiveTcpListeners\n  commentId: M:System.Net.NetworkInformation.IPGlobalProperties.GetActiveTcpListeners\n  id: GetActiveTcpListeners\n  parent: System.Net.NetworkInformation.IPGlobalProperties\n  langs:\n  - csharp\n  name: GetActiveTcpListeners()\n  nameWithType: IPGlobalProperties.GetActiveTcpListeners()\n  fullName: IPGlobalProperties.GetActiveTcpListeners()\n  type: Method\n  assemblies:\n  - System.Net.NetworkInformation\n  - System\n  - netstandard\n  namespace: System.Net.NetworkInformation\n  summary: Returns endpoint information about the Internet Protocol version 4 (IPv4) and IPv6 Transmission Control Protocol (TCP) listeners on the local computer.\n  remarks: \"The objects returned by this method include listeners in all TCP states except the <xref:System.Net.NetworkInformation.TcpState.Listen> state.  \\n  \\n The TCP protocol is defined in IETF RFC 793. Note that the objects returned by this method reflect the connections as of the time the array is created. This information is not updated dynamically.\"\n  example:\n  - \"The following code example displays endpoint information for active TCP listeners.  \\n  \\n [!code-cpp[NCLNetInfoReport#18](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLNetInfoReport/CPP/netinfo.cpp#18)]\\n [!code-csharp[NCLNetInfoReport#18](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLNetInfoReport/CS/netinfo.cs#18)]\"\n  syntax:\n    content: public abstract System.Net.IPEndPoint[] GetActiveTcpListeners ();\n    parameters: []\n    return:\n      type: System.Net.IPEndPoint[]\n      description: A <xref href=\"System.Net.IPEndPoint\"></xref> array that contains objects that describe the active TCP listeners, or an empty array, if no active TCP listeners are detected.\n  overload: System.Net.NetworkInformation.IPGlobalProperties.GetActiveTcpListeners*\n  exceptions:\n  - type: System.Net.NetworkInformation.NetworkInformationException\n    commentId: T:System.Net.NetworkInformation.NetworkInformationException\n    description: The Win32 function `GetTcpTable` failed.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.NetworkInformation/IPGlobalProperties.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.NetworkInformation.IPGlobalProperties.GetActiveUdpListeners\n  commentId: M:System.Net.NetworkInformation.IPGlobalProperties.GetActiveUdpListeners\n  id: GetActiveUdpListeners\n  parent: System.Net.NetworkInformation.IPGlobalProperties\n  langs:\n  - csharp\n  name: GetActiveUdpListeners()\n  nameWithType: IPGlobalProperties.GetActiveUdpListeners()\n  fullName: IPGlobalProperties.GetActiveUdpListeners()\n  type: Method\n  assemblies:\n  - System.Net.NetworkInformation\n  - System\n  - netstandard\n  namespace: System.Net.NetworkInformation\n  summary: Returns information about the Internet Protocol version 4 (IPv4) and IPv6 User Datagram Protocol (UDP) listeners on the local computer.\n  remarks: \"UDP is a connectionless transport layer protocol that is responsible for sending and receiving datagrams. It is defined in IETF RFC 768.  \\n  \\n A UDP listener is an open socket that waits for and receives UDP datagrams. Because UDP is a connectionless protocol, the listener does not maintain a connection to a remote endpoint.\"\n  example:\n  - \"The following example displays the active UDP listeners.  \\n  \\n [!code-cpp[NCLNetInfoReport#19](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLNetInfoReport/CPP/netinfo.cpp#19)]\\n [!code-csharp[NCLNetInfoReport#19](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLNetInfoReport/CS/netinfo.cs#19)]\"\n  syntax:\n    content: public abstract System.Net.IPEndPoint[] GetActiveUdpListeners ();\n    parameters: []\n    return:\n      type: System.Net.IPEndPoint[]\n      description: An <xref href=\"System.Net.IPEndPoint\"></xref> array that contains objects that describe the UDP listeners, or an empty array if no UDP listeners are detected.\n  overload: System.Net.NetworkInformation.IPGlobalProperties.GetActiveUdpListeners*\n  exceptions:\n  - type: System.Net.NetworkInformation.NetworkInformationException\n    commentId: T:System.Net.NetworkInformation.NetworkInformationException\n    description: The call to the Win32 function `GetUdpTable` failed.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.NetworkInformation/IPGlobalProperties.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.NetworkInformation.IPGlobalProperties.GetIcmpV4Statistics\n  commentId: M:System.Net.NetworkInformation.IPGlobalProperties.GetIcmpV4Statistics\n  id: GetIcmpV4Statistics\n  parent: System.Net.NetworkInformation.IPGlobalProperties\n  langs:\n  - csharp\n  name: GetIcmpV4Statistics()\n  nameWithType: IPGlobalProperties.GetIcmpV4Statistics()\n  fullName: IPGlobalProperties.GetIcmpV4Statistics()\n  type: Method\n  assemblies:\n  - System.Net.NetworkInformation\n  - System\n  - netstandard\n  namespace: System.Net.NetworkInformation\n  summary: Provides Internet Control Message Protocol (ICMP) version 4 statistical data for the local computer.\n  remarks: \"ICMP is a set of messages for use with Internet Protocol version 4 (IPv4). ICMP is used by IPv4 nodes to report errors encountered in processing data packets and to perform other Internet layer functions. ICMP version 4 is defined in IETF RFC 792.  \\n  \\n For details on the ICMP version 4 traffic statistics that are available to applications, see the <xref:System.Net.NetworkInformation.IcmpV4Statistics> class documentation. Note that the <xref:System.Net.NetworkInformation.IcmpV4Statistics> object returned by this method reflects the statistics as of the time the object is created. This information is not updated dynamically.\"\n  example:\n  - \"The following example displays the current ICMPv4 statistics.  \\n  \\n [!code-cpp[NCLNetInfoReport#6](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLNetInfoReport/CPP/netinfo.cpp#6)]\\n [!code-csharp[NCLNetInfoReport#6](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLNetInfoReport/CS/netinfo.cs#6)]\"\n  syntax:\n    content: public abstract System.Net.NetworkInformation.IcmpV4Statistics GetIcmpV4Statistics ();\n    parameters: []\n    return:\n      type: System.Net.NetworkInformation.IcmpV4Statistics\n      description: An <xref href=\"System.Net.NetworkInformation.IcmpV4Statistics\"></xref> object that provides ICMP version 4 traffic statistics for the local computer.\n  overload: System.Net.NetworkInformation.IPGlobalProperties.GetIcmpV4Statistics*\n  exceptions:\n  - type: System.Net.NetworkInformation.NetworkInformationException\n    commentId: T:System.Net.NetworkInformation.NetworkInformationException\n    description: The Win32 function `GetIcmpStatistics` failed.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.NetworkInformation/IPGlobalProperties.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.NetworkInformation.IPGlobalProperties.GetIcmpV6Statistics\n  commentId: M:System.Net.NetworkInformation.IPGlobalProperties.GetIcmpV6Statistics\n  id: GetIcmpV6Statistics\n  parent: System.Net.NetworkInformation.IPGlobalProperties\n  langs:\n  - csharp\n  name: GetIcmpV6Statistics()\n  nameWithType: IPGlobalProperties.GetIcmpV6Statistics()\n  fullName: IPGlobalProperties.GetIcmpV6Statistics()\n  type: Method\n  assemblies:\n  - System.Net.NetworkInformation\n  - System\n  - netstandard\n  namespace: System.Net.NetworkInformation\n  summary: Provides Internet Control Message Protocol (ICMP) version 6 statistical data for the local computer.\n  remarks: \"ICMP version 6 is a set of messages for use with Internet Protocol version 6 (IPv6). ICMP is used by IPv6 nodes to report errors encountered in processing data packets and to perform other Internet layer functions. ICMP version 6 is defined in IETF RFC 1885.  \\n  \\n The IPv6 protocol is not supported for computers with Windows 2000 or earlier operating systems.  \\n  \\n For details on the ICMP version 6 traffic statistics available to applications, see the <xref:System.Net.NetworkInformation.IcmpV6Statistics> class documentation. Note that the <xref:System.Net.NetworkInformation.IcmpV6Statistics> object returned by this method reflects the statistics as of the time the object is created. This information is not updated dynamically.\"\n  example:\n  - \"The following example displays the current ICMPv6 statistics.  \\n  \\n [!code-cpp[NCLNetInfoReport#7](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLNetInfoReport/CPP/netinfo.cpp#7)]\\n [!code-csharp[NCLNetInfoReport#7](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLNetInfoReport/CS/netinfo.cs#7)]\"\n  syntax:\n    content: public abstract System.Net.NetworkInformation.IcmpV6Statistics GetIcmpV6Statistics ();\n    parameters: []\n    return:\n      type: System.Net.NetworkInformation.IcmpV6Statistics\n      description: An <xref href=\"System.Net.NetworkInformation.IcmpV6Statistics\"></xref> object that provides ICMP version 6 traffic statistics for the local computer.\n  overload: System.Net.NetworkInformation.IPGlobalProperties.GetIcmpV6Statistics*\n  exceptions:\n  - type: System.Net.NetworkInformation.NetworkInformationException\n    commentId: T:System.Net.NetworkInformation.NetworkInformationException\n    description: The Win32 function `GetIcmpStatisticsEx` failed.\n  - type: System.PlatformNotSupportedException\n    commentId: T:System.PlatformNotSupportedException\n    description: The local computer's operating system is not Windows XP or later.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.NetworkInformation/IPGlobalProperties.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.NetworkInformation.IPGlobalProperties.GetIPGlobalProperties\n  commentId: M:System.Net.NetworkInformation.IPGlobalProperties.GetIPGlobalProperties\n  id: GetIPGlobalProperties\n  parent: System.Net.NetworkInformation.IPGlobalProperties\n  langs:\n  - csharp\n  name: GetIPGlobalProperties()\n  nameWithType: IPGlobalProperties.GetIPGlobalProperties()\n  fullName: IPGlobalProperties.GetIPGlobalProperties()\n  type: Method\n  assemblies:\n  - System.Net.NetworkInformation\n  - System\n  - netstandard\n  namespace: System.Net.NetworkInformation\n  summary: Gets an object that provides information about the local computer's network connectivity and traffic statistics.\n  remarks: The object returned by this method is a system-supplied type that derives from the <xref:System.Net.NetworkInformation.IPGlobalProperties> class.\n  example:\n  - \"The following code example displays information about the local computer.  \\n  \\n [!code-cpp[NCLNetInfoReport#15](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLNetInfoReport/CPP/netinfo.cpp#15)]\\n [!code-csharp[NCLNetInfoReport#15](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLNetInfoReport/CS/netinfo.cs#15)]\"\n  syntax:\n    content: public static System.Net.NetworkInformation.IPGlobalProperties GetIPGlobalProperties ();\n    parameters: []\n    return:\n      type: System.Net.NetworkInformation.IPGlobalProperties\n      description: A <xref href=\"System.Net.NetworkInformation.IPGlobalProperties\"></xref> object that contains information about the local computer.\n  overload: System.Net.NetworkInformation.IPGlobalProperties.GetIPGlobalProperties*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.NetworkInformation/IPGlobalProperties.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.NetworkInformation.IPGlobalProperties.GetIPv4GlobalStatistics\n  commentId: M:System.Net.NetworkInformation.IPGlobalProperties.GetIPv4GlobalStatistics\n  id: GetIPv4GlobalStatistics\n  parent: System.Net.NetworkInformation.IPGlobalProperties\n  langs:\n  - csharp\n  name: GetIPv4GlobalStatistics()\n  nameWithType: IPGlobalProperties.GetIPv4GlobalStatistics()\n  fullName: IPGlobalProperties.GetIPv4GlobalStatistics()\n  type: Method\n  assemblies:\n  - System.Net.NetworkInformation\n  - System\n  - netstandard\n  namespace: System.Net.NetworkInformation\n  summary: Provides Internet Protocol version 4 (IPv4) statistical data for the local computer.\n  remarks: \"IPv4 is a network layer protocol that is responsible for routing data packets from its source computer to its destination.  \\n  \\n For details on the IP traffic statistics available to applications, see the <xref:System.Net.NetworkInformation.IPGlobalStatistics> class documentation. Note that the object returned by this method reflects the statistics as of the time the <xref:System.Net.NetworkInformation.IPGlobalStatistics> object is created. This information is not updated dynamically.\"\n  example:\n  - \"The following code example displays IP statistics for the local computer.  \\n  \\n [!code-cpp[NCLNetInfoReport#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLNetInfoReport/CPP/netinfo.cpp#1)]\\n [!code-csharp[NCLNetInfoReport#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLNetInfoReport/CS/netinfo.cs#1)]\"\n  syntax:\n    content: public abstract System.Net.NetworkInformation.IPGlobalStatistics GetIPv4GlobalStatistics ();\n    parameters: []\n    return:\n      type: System.Net.NetworkInformation.IPGlobalStatistics\n      description: An <xref href=\"System.Net.NetworkInformation.IPGlobalStatistics\"></xref> object that provides IPv4 traffic statistics for the local computer.\n  overload: System.Net.NetworkInformation.IPGlobalProperties.GetIPv4GlobalStatistics*\n  exceptions:\n  - type: System.Net.NetworkInformation.NetworkInformationException\n    commentId: T:System.Net.NetworkInformation.NetworkInformationException\n    description: The call to the Win32 function `GetIpStatistics` failed.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.NetworkInformation/IPGlobalProperties.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.NetworkInformation.IPGlobalProperties.GetIPv6GlobalStatistics\n  commentId: M:System.Net.NetworkInformation.IPGlobalProperties.GetIPv6GlobalStatistics\n  id: GetIPv6GlobalStatistics\n  parent: System.Net.NetworkInformation.IPGlobalProperties\n  langs:\n  - csharp\n  name: GetIPv6GlobalStatistics()\n  nameWithType: IPGlobalProperties.GetIPv6GlobalStatistics()\n  fullName: IPGlobalProperties.GetIPv6GlobalStatistics()\n  type: Method\n  assemblies:\n  - System.Net.NetworkInformation\n  - System\n  - netstandard\n  namespace: System.Net.NetworkInformation\n  summary: Provides Internet Protocol version 6 (IPv6) statistical data for the local computer.\n  remarks: \"IPv6 is a network layer protocol responsible for routing data packets from its source computer to its destination. The IPv6 protocol is not supported on computers with Windows 2000 or earlier operating systems.  \\n  \\n For details on the IP traffic statistics available to applications, see the <xref:System.Net.NetworkInformation.IPGlobalStatistics> class documentation. Note that the object returned by this method reflects the statistics as of the time the <xref:System.Net.NetworkInformation.IPGlobalStatistics> object is created. This information is not updated dynamically.\"\n  example:\n  - \"The following code example displays IP statistics for the local computer.  \\n  \\n [!code-cpp[NCLNetInfoReport#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLNetInfoReport/CPP/netinfo.cpp#1)]\\n [!code-csharp[NCLNetInfoReport#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLNetInfoReport/CS/netinfo.cs#1)]\"\n  syntax:\n    content: public abstract System.Net.NetworkInformation.IPGlobalStatistics GetIPv6GlobalStatistics ();\n    parameters: []\n    return:\n      type: System.Net.NetworkInformation.IPGlobalStatistics\n      description: An <xref href=\"System.Net.NetworkInformation.IPGlobalStatistics\"></xref> object that provides IPv6 traffic statistics for the local computer.\n  overload: System.Net.NetworkInformation.IPGlobalProperties.GetIPv6GlobalStatistics*\n  exceptions:\n  - type: System.Net.NetworkInformation.NetworkInformationException\n    commentId: T:System.Net.NetworkInformation.NetworkInformationException\n    description: The call to the Win32 function `GetIpStatistics` failed.\n  - type: System.PlatformNotSupportedException\n    commentId: T:System.PlatformNotSupportedException\n    description: The local computer is not running an operating system that supports IPv6.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.NetworkInformation/IPGlobalProperties.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.NetworkInformation.IPGlobalProperties.GetTcpIPv4Statistics\n  commentId: M:System.Net.NetworkInformation.IPGlobalProperties.GetTcpIPv4Statistics\n  id: GetTcpIPv4Statistics\n  parent: System.Net.NetworkInformation.IPGlobalProperties\n  langs:\n  - csharp\n  name: GetTcpIPv4Statistics()\n  nameWithType: IPGlobalProperties.GetTcpIPv4Statistics()\n  fullName: IPGlobalProperties.GetTcpIPv4Statistics()\n  type: Method\n  assemblies:\n  - System.Net.NetworkInformation\n  - System\n  - netstandard\n  namespace: System.Net.NetworkInformation\n  summary: Provides Transmission Control Protocol/Internet Protocol version 4 (TCP/IPv4) statistical data for the local computer.\n  remarks: \"TCP is a transport layer protocol that is responsible for reliably sending and receiving data packets. It is defined in IETF RFC 793.  \\n  \\n For details on the TCP traffic statistics available to applications, see the <xref:System.Net.NetworkInformation.TcpStatistics> class documentation. Note that the object returned by this method reflects the statistics as of the time the <xref:System.Net.NetworkInformation.TcpStatistics> object is created. This information is not updated dynamically.\"\n  example:\n  - \"The following example displays the TCP/IP statistics for the local computer.  \\n  \\n [!code-cpp[NCLNetInfoReport#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLNetInfoReport/CPP/netinfo.cpp#2)]\\n [!code-csharp[NCLNetInfoReport#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLNetInfoReport/CS/netinfo.cs#2)]\"\n  syntax:\n    content: public abstract System.Net.NetworkInformation.TcpStatistics GetTcpIPv4Statistics ();\n    parameters: []\n    return:\n      type: System.Net.NetworkInformation.TcpStatistics\n      description: A <xref href=\"System.Net.NetworkInformation.TcpStatistics\"></xref> object that provides TCP/IPv4 traffic statistics for the local computer.\n  overload: System.Net.NetworkInformation.IPGlobalProperties.GetTcpIPv4Statistics*\n  exceptions:\n  - type: System.Net.NetworkInformation.NetworkInformationException\n    commentId: T:System.Net.NetworkInformation.NetworkInformationException\n    description: The call to the Win32 function `GetTcpStatistics` failed.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.NetworkInformation/IPGlobalProperties.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.NetworkInformation.IPGlobalProperties.GetTcpIPv6Statistics\n  commentId: M:System.Net.NetworkInformation.IPGlobalProperties.GetTcpIPv6Statistics\n  id: GetTcpIPv6Statistics\n  parent: System.Net.NetworkInformation.IPGlobalProperties\n  langs:\n  - csharp\n  name: GetTcpIPv6Statistics()\n  nameWithType: IPGlobalProperties.GetTcpIPv6Statistics()\n  fullName: IPGlobalProperties.GetTcpIPv6Statistics()\n  type: Method\n  assemblies:\n  - System.Net.NetworkInformation\n  - System\n  - netstandard\n  namespace: System.Net.NetworkInformation\n  summary: Provides Transmission Control Protocol/Internet Protocol version 6 (TCP/IPv6) statistical data for the local computer.\n  remarks: \"TCP is a transport layer protocol responsible for reliably sending and receiving data packets. It is defined in IETF RFC 793.  \\n  \\n For details on the TCP traffic statistics that are available to applications, see the <xref:System.Net.NetworkInformation.TcpStatistics> class documentation. Note that the object returned by this method reflects the statistics as of the time the <xref:System.Net.NetworkInformation.TcpStatistics> object is created. This information is not updated dynamically.\"\n  example:\n  - \"The following example displays the TCP/IP statistics for the local computer.  \\n  \\n [!code-cpp[NCLNetInfoReport#2](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLNetInfoReport/CPP/netinfo.cpp#2)]\\n [!code-csharp[NCLNetInfoReport#2](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLNetInfoReport/CS/netinfo.cs#2)]\"\n  syntax:\n    content: public abstract System.Net.NetworkInformation.TcpStatistics GetTcpIPv6Statistics ();\n    parameters: []\n    return:\n      type: System.Net.NetworkInformation.TcpStatistics\n      description: A <xref href=\"System.Net.NetworkInformation.TcpStatistics\"></xref> object that provides TCP/IPv6 traffic statistics for the local computer.\n  overload: System.Net.NetworkInformation.IPGlobalProperties.GetTcpIPv6Statistics*\n  exceptions:\n  - type: System.Net.NetworkInformation.NetworkInformationException\n    commentId: T:System.Net.NetworkInformation.NetworkInformationException\n    description: The call to the Win32 function `GetTcpStatistics` failed.\n  - type: System.PlatformNotSupportedException\n    commentId: T:System.PlatformNotSupportedException\n    description: The local computer is not running an operating system that supports IPv6.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.NetworkInformation/IPGlobalProperties.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.NetworkInformation.IPGlobalProperties.GetUdpIPv4Statistics\n  commentId: M:System.Net.NetworkInformation.IPGlobalProperties.GetUdpIPv4Statistics\n  id: GetUdpIPv4Statistics\n  parent: System.Net.NetworkInformation.IPGlobalProperties\n  langs:\n  - csharp\n  name: GetUdpIPv4Statistics()\n  nameWithType: IPGlobalProperties.GetUdpIPv4Statistics()\n  fullName: IPGlobalProperties.GetUdpIPv4Statistics()\n  type: Method\n  assemblies:\n  - System.Net.NetworkInformation\n  - System\n  - netstandard\n  namespace: System.Net.NetworkInformation\n  summary: Provides User Datagram Protocol/Internet Protocol version 4 (UDP/IPv4) statistical data for the local computer.\n  remarks: \"UDP is a connectionless transport layer protocol that is responsible for sending and receiving datagrams. It is defined in IETF RFC 768.  \\n  \\n For details on the UDP traffic statistics that are available to applications, see the <xref:System.Net.NetworkInformation.UdpStatistics> class documentation. Note that the object returned by this method reflects the statistics as of the time the <xref:System.Net.NetworkInformation.UdpStatistics> object is created. This information is not updated dynamically.\"\n  example:\n  - \"The following example displays the UDP/IP statistics for the local computer.  \\n  \\n [!code-cpp[NCLNetInfoReport#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLNetInfoReport/CPP/netinfo.cpp#3)]\\n [!code-csharp[NCLNetInfoReport#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLNetInfoReport/CS/netinfo.cs#3)]\"\n  syntax:\n    content: public abstract System.Net.NetworkInformation.UdpStatistics GetUdpIPv4Statistics ();\n    parameters: []\n    return:\n      type: System.Net.NetworkInformation.UdpStatistics\n      description: A <xref href=\"System.Net.NetworkInformation.UdpStatistics\"></xref> object that provides UDP/IPv4 traffic statistics for the local computer.\n  overload: System.Net.NetworkInformation.IPGlobalProperties.GetUdpIPv4Statistics*\n  exceptions:\n  - type: System.Net.NetworkInformation.NetworkInformationException\n    commentId: T:System.Net.NetworkInformation.NetworkInformationException\n    description: The call to the Win32 function GetUdpStatistics failed.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.NetworkInformation/IPGlobalProperties.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.NetworkInformation.IPGlobalProperties.GetUdpIPv6Statistics\n  commentId: M:System.Net.NetworkInformation.IPGlobalProperties.GetUdpIPv6Statistics\n  id: GetUdpIPv6Statistics\n  parent: System.Net.NetworkInformation.IPGlobalProperties\n  langs:\n  - csharp\n  name: GetUdpIPv6Statistics()\n  nameWithType: IPGlobalProperties.GetUdpIPv6Statistics()\n  fullName: IPGlobalProperties.GetUdpIPv6Statistics()\n  type: Method\n  assemblies:\n  - System.Net.NetworkInformation\n  - System\n  - netstandard\n  namespace: System.Net.NetworkInformation\n  summary: Provides User Datagram Protocol/Internet Protocol version 6 (UDP/IPv6) statistical data for the local computer.\n  remarks: \"UDP is a connectionless transport layer protocol that is responsible for sending and receiving datagrams. It is defined in IETF RFC 768.  \\n  \\n For details on the UDP traffic statistics that are available to applications, see the <xref:System.Net.NetworkInformation.UdpStatistics> class documentation. Note that the object returned by this method reflects the statistics as of the time the <xref:System.Net.NetworkInformation.UdpStatistics> object is created. This information is not updated dynamically.\"\n  example:\n  - \"The following example displays the UDP/IP statistics for the local computer.  \\n  \\n [!code-cpp[NCLNetInfoReport#3](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLNetInfoReport/CPP/netinfo.cpp#3)]\\n [!code-csharp[NCLNetInfoReport#3](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLNetInfoReport/CS/netinfo.cs#3)]\"\n  syntax:\n    content: public abstract System.Net.NetworkInformation.UdpStatistics GetUdpIPv6Statistics ();\n    parameters: []\n    return:\n      type: System.Net.NetworkInformation.UdpStatistics\n      description: A <xref href=\"System.Net.NetworkInformation.UdpStatistics\"></xref> object that provides UDP/IPv6 traffic statistics for the local computer.\n  overload: System.Net.NetworkInformation.IPGlobalProperties.GetUdpIPv6Statistics*\n  exceptions:\n  - type: System.Net.NetworkInformation.NetworkInformationException\n    commentId: T:System.Net.NetworkInformation.NetworkInformationException\n    description: The call to the Win32 function `GetUdpStatistics` failed.\n  - type: System.PlatformNotSupportedException\n    commentId: T:System.PlatformNotSupportedException\n    description: The local computer is not running an operating system that supports IPv6.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.NetworkInformation/IPGlobalProperties.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.NetworkInformation.IPGlobalProperties.GetUnicastAddresses\n  commentId: M:System.Net.NetworkInformation.IPGlobalProperties.GetUnicastAddresses\n  id: GetUnicastAddresses\n  parent: System.Net.NetworkInformation.IPGlobalProperties\n  langs:\n  - csharp\n  name: GetUnicastAddresses()\n  nameWithType: IPGlobalProperties.GetUnicastAddresses()\n  fullName: IPGlobalProperties.GetUnicastAddresses()\n  type: Method\n  assemblies:\n  - System\n  - netstandard\n  - System.Net.NetworkInformation\n  namespace: System.Net.NetworkInformation\n  summary: Retrieves the stable unicast IP address table on the local computer.\n  remarks: \"In order to support outbound connections or to accept incoming connections on a Teredo interface, applications need to ensure that the Teredo interface is up and ready for use. This is because Teredo can go into a dormant state when not used for some period of time.  \\n  \\n The <xref:System.Net.NetworkInformation.IPGlobalProperties.GetUnicastAddresses%2A> method will allow an application to retrieve the list of stable unicast IP addresses. The <xref:System.Net.IPAddress.IsIPv6Teredo%2A?displayProperty=fullName> property can be used to determine if an IP address is an IPv6 Teredo address with the prefix of 2001::/32.  \\n  \\n The <xref:System.Net.NetworkInformation.IPGlobalProperties.GetUnicastAddresses%2A> method also returns non-Teredo addresses and provides a more convenient way to obtain the unicast IP addresses for a system than enumerating all the <xref:System.Net.NetworkInformation.NetworkInterface?displayProperty=fullName> objects on a local computer and querying the associated IP addresses.\"\n  syntax:\n    content: public virtual System.Net.NetworkInformation.UnicastIPAddressInformationCollection GetUnicastAddresses ();\n    parameters: []\n    return:\n      type: System.Net.NetworkInformation.UnicastIPAddressInformationCollection\n      description: A <xref href=\"System.Net.NetworkInformation.UnicastIPAddressInformationCollection\"></xref> that contains a list of stable unicast IP addresses on the local computer.\n  overload: System.Net.NetworkInformation.IPGlobalProperties.GetUnicastAddresses*\n  exceptions:\n  - type: System.Net.NetworkInformation.NetworkInformationException\n    commentId: T:System.Net.NetworkInformation.NetworkInformationException\n    description: The call to the native `GetAdaptersAddresses` function failed.\n  - type: System.NotImplementedException\n    commentId: T:System.NotImplementedException\n    description: This method is not implemented on the platform. This method uses the native `NotifyStableUnicastIpAddressTable` function that is supported on Windows Vista and later.\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: The caller does not have necessary <xref href=\"System.Net.NetworkInformation.NetworkInformationAccess.Read\"></xref> permission.\n  - type: System.ComponentModel.Win32Exception\n    commentId: T:System.ComponentModel.Win32Exception\n    description: The call to the native `NotifyStableUnicastIpAddressTable` function failed.\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.NetworkInformation/IPGlobalProperties.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.NetworkInformation.IPGlobalProperties.GetUnicastAddressesAsync\n  commentId: M:System.Net.NetworkInformation.IPGlobalProperties.GetUnicastAddressesAsync\n  id: GetUnicastAddressesAsync\n  parent: System.Net.NetworkInformation.IPGlobalProperties\n  langs:\n  - csharp\n  name: GetUnicastAddressesAsync()\n  nameWithType: IPGlobalProperties.GetUnicastAddressesAsync()\n  fullName: IPGlobalProperties.GetUnicastAddressesAsync()\n  type: Method\n  assemblies:\n  - System.Net.NetworkInformation\n  - System\n  - netstandard\n  namespace: System.Net.NetworkInformation\n  summary: Retrieves the stable unicast IP address table on the local computer as an asynchronous operation.\n  remarks: \"In order to support outbound connections or to accept incoming connections on a Teredo interface, applications need to ensure that the Teredo interface is up and ready for use. This is because Teredo can go into a dormant state when not used for some period of time.  \\n  \\n The <xref:System.Net.NetworkInformation.IPGlobalProperties.GetUnicastAddressesAsync%2A> method will allow an application to retrieve the list of stable unicast IP addresses as asynchronous operation. The <xref:System.Net.IPAddress.IsIPv6Teredo%2A?displayProperty=fullName> property can be used to determine if an IP address is an IPv6 Teredo address with the prefix of 2001::/32.  \\n  \\n The <xref:System.Net.NetworkInformation.IPGlobalProperties.GetUnicastAddresses%2A> method also returns non-Teredo addresses and provides a more convenient way to obtain the unicast IP addresses for a system than enumerating all the <xref:System.Net.NetworkInformation.NetworkInterface?displayProperty=fullName> objects on a local computer and querying the associated IP addresses.\"\n  syntax:\n    content: public virtual System.Threading.Tasks.Task<System.Net.NetworkInformation.UnicastIPAddressInformationCollection> GetUnicastAddressesAsync ();\n    parameters: []\n    return:\n      type: System.Threading.Tasks.Task{System.Net.NetworkInformation.UnicastIPAddressInformationCollection}\n      description: \"Returns <xref href=\\\"System.Threading.Tasks.Task`1\\\"></xref>.  \\n  \\n The task object representing the asynchronous operation.\"\n  overload: System.Net.NetworkInformation.IPGlobalProperties.GetUnicastAddressesAsync*\n  exceptions:\n  - type: System.Net.NetworkInformation.NetworkInformationException\n    commentId: T:System.Net.NetworkInformation.NetworkInformationException\n    description: The call to the native `GetAdaptersAddresses` function failed.\n  - type: System.Security.SecurityException\n    commentId: T:System.Security.SecurityException\n    description: The caller does not have necessary <xref href=\"System.Net.NetworkInformation.NetworkInformationAccess.Read\"></xref> permission.\n  - type: System.ComponentModel.Win32Exception\n    commentId: T:System.ComponentModel.Win32Exception\n    description: The call to the native `NotifyStableUnicastIpAddressTable` function failed.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.NetworkInformation/IPGlobalProperties.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.NetworkInformation.IPGlobalProperties.HostName\n  commentId: P:System.Net.NetworkInformation.IPGlobalProperties.HostName\n  id: HostName\n  parent: System.Net.NetworkInformation.IPGlobalProperties\n  langs:\n  - csharp\n  name: HostName\n  nameWithType: IPGlobalProperties.HostName\n  fullName: IPGlobalProperties.HostName\n  type: Property\n  assemblies:\n  - System.Net.NetworkInformation\n  - System\n  - netstandard\n  namespace: System.Net.NetworkInformation\n  summary: Gets the host name for the local computer.\n  remarks: \"This property calls into the native IP Helper function, GetNetworkParams, which returns a FIXED_INFO structure that contains the NetBIOS host name string. The host name string is truncated when it exceeds 15 characters.  \\n  \\n A computer's NetBIOS name must be unique within a network and is not fully qualified by the domain name.\"\n  example:\n  - \"The following code example displays network information for the local computer.  \\n  \\n [!code-cpp[NCLNetInfoReport#15](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLNetInfoReport/CPP/netinfo.cpp#15)]\\n [!code-csharp[NCLNetInfoReport#15](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLNetInfoReport/CS/netinfo.cs#15)]\"\n  syntax:\n    content: public abstract string HostName { get; }\n    return:\n      type: System.String\n      description: A <xref href=\"System.String\"></xref> instance that contains the computer's NetBIOS name.\n  overload: System.Net.NetworkInformation.IPGlobalProperties.HostName*\n  exceptions:\n  - type: System.Net.NetworkInformation.NetworkInformationException\n    commentId: T:System.Net.NetworkInformation.NetworkInformationException\n    description: A Win32 function call failed.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.NetworkInformation/IPGlobalProperties.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.NetworkInformation.IPGlobalProperties.IsWinsProxy\n  commentId: P:System.Net.NetworkInformation.IPGlobalProperties.IsWinsProxy\n  id: IsWinsProxy\n  parent: System.Net.NetworkInformation.IPGlobalProperties\n  langs:\n  - csharp\n  name: IsWinsProxy\n  nameWithType: IPGlobalProperties.IsWinsProxy\n  fullName: IPGlobalProperties.IsWinsProxy\n  type: Property\n  assemblies:\n  - System.Net.NetworkInformation\n  - System\n  - netstandard\n  namespace: System.Net.NetworkInformation\n  summary: Gets a <xref href=\"System.Boolean\"></xref> value that specifies whether the local computer is acting as a Windows Internet Name Service (WINS) proxy.\n  remarks: WINS provides a distributed database for registering and querying dynamic NetBIOS names to IP address mappings.\n  example:\n  - \"The following code example displays network information for the local computer.  \\n  \\n [!code-cpp[NCLNetInfoReport#15](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLNetInfoReport/CPP/netinfo.cpp#15)]\\n [!code-csharp[NCLNetInfoReport#15](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLNetInfoReport/CS/netinfo.cs#15)]\"\n  syntax:\n    content: public abstract bool IsWinsProxy { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if the local computer is a WINS proxy; otherwise, `false`.'\n  overload: System.Net.NetworkInformation.IPGlobalProperties.IsWinsProxy*\n  exceptions:\n  - type: System.Net.NetworkInformation.NetworkInformationException\n    commentId: T:System.Net.NetworkInformation.NetworkInformationException\n    description: A Win32 function call failed.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.NetworkInformation/IPGlobalProperties.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.NetworkInformation.IPGlobalProperties.NodeType\n  commentId: P:System.Net.NetworkInformation.IPGlobalProperties.NodeType\n  id: NodeType\n  parent: System.Net.NetworkInformation.IPGlobalProperties\n  langs:\n  - csharp\n  name: NodeType\n  nameWithType: IPGlobalProperties.NodeType\n  fullName: IPGlobalProperties.NodeType\n  type: Property\n  assemblies:\n  - System.Net.NetworkInformation\n  - System\n  - netstandard\n  namespace: System.Net.NetworkInformation\n  summary: Gets the Network Basic Input/Output System (NetBIOS) node type of the local computer.\n  remarks: The node type determines the way in which NetBIOS names are resolved to IP addresses. For additional information, see the <xref:System.Net.NetworkInformation.NetBiosNodeType> class overview.\n  example:\n  - \"The following code example displays network information for the local computer.  \\n  \\n [!code-cpp[NCLNetInfoReport#15](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLNetInfoReport/CPP/netinfo.cpp#15)]\\n [!code-csharp[NCLNetInfoReport#15](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLNetInfoReport/CS/netinfo.cs#15)]\"\n  syntax:\n    content: public abstract System.Net.NetworkInformation.NetBiosNodeType NodeType { get; }\n    return:\n      type: System.Net.NetworkInformation.NetBiosNodeType\n      description: A <xref href=\"System.Net.NetworkInformation.NetBiosNodeType\"></xref> value.\n  overload: System.Net.NetworkInformation.IPGlobalProperties.NodeType*\n  exceptions:\n  - type: System.Net.NetworkInformation.NetworkInformationException\n    commentId: T:System.Net.NetworkInformation.NetworkInformationException\n    description: A Win32 function call failed.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.NetworkInformation/IPGlobalProperties.xml\n  ms.author: bobdel\n  manager: markl\nreferences:\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.NotImplementedException\n  parent: System\n  isExternal: false\n  name: NotImplementedException\n  nameWithType: NotImplementedException\n  fullName: System.NotImplementedException\n- uid: System.ComponentModel.Win32Exception\n  parent: System.ComponentModel\n  isExternal: false\n  name: Win32Exception\n  nameWithType: Win32Exception\n  fullName: System.ComponentModel.Win32Exception\n- uid: System.Net.NetworkInformation.NetworkInformationException\n  parent: System.Net.NetworkInformation\n  isExternal: false\n  name: NetworkInformationException\n  nameWithType: NetworkInformationException\n  fullName: System.Net.NetworkInformation.NetworkInformationException\n- uid: System.Security.SecurityException\n  parent: System.Security\n  isExternal: false\n  name: SecurityException\n  nameWithType: SecurityException\n  fullName: System.Security.SecurityException\n- uid: System.PlatformNotSupportedException\n  parent: System\n  isExternal: false\n  name: PlatformNotSupportedException\n  nameWithType: PlatformNotSupportedException\n  fullName: System.PlatformNotSupportedException\n- uid: System.Net.NetworkInformation.IPGlobalProperties.#ctor\n  parent: System.Net.NetworkInformation.IPGlobalProperties\n  isExternal: false\n  name: IPGlobalProperties()\n  nameWithType: IPGlobalProperties.IPGlobalProperties()\n  fullName: IPGlobalProperties.IPGlobalProperties()\n- uid: System.Net.NetworkInformation.IPGlobalProperties.BeginGetUnicastAddresses(System.AsyncCallback,System.Object)\n  parent: System.Net.NetworkInformation.IPGlobalProperties\n  isExternal: false\n  name: BeginGetUnicastAddresses(AsyncCallback, Object)\n  nameWithType: IPGlobalProperties.BeginGetUnicastAddresses(AsyncCallback, Object)\n  fullName: IPGlobalProperties.BeginGetUnicastAddresses(AsyncCallback, Object)\n- uid: System.IAsyncResult\n  parent: System\n  isExternal: false\n  name: IAsyncResult\n  nameWithType: IAsyncResult\n  fullName: System.IAsyncResult\n- uid: System.AsyncCallback\n  parent: System\n  isExternal: false\n  name: AsyncCallback\n  nameWithType: AsyncCallback\n  fullName: System.AsyncCallback\n- uid: System.Net.NetworkInformation.IPGlobalProperties.DhcpScopeName\n  parent: System.Net.NetworkInformation.IPGlobalProperties\n  isExternal: false\n  name: DhcpScopeName\n  nameWithType: IPGlobalProperties.DhcpScopeName\n  fullName: IPGlobalProperties.DhcpScopeName\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Net.NetworkInformation.IPGlobalProperties.DomainName\n  parent: System.Net.NetworkInformation.IPGlobalProperties\n  isExternal: false\n  name: DomainName\n  nameWithType: IPGlobalProperties.DomainName\n  fullName: IPGlobalProperties.DomainName\n- uid: System.Net.NetworkInformation.IPGlobalProperties.EndGetUnicastAddresses(System.IAsyncResult)\n  parent: System.Net.NetworkInformation.IPGlobalProperties\n  isExternal: false\n  name: EndGetUnicastAddresses(IAsyncResult)\n  nameWithType: IPGlobalProperties.EndGetUnicastAddresses(IAsyncResult)\n  fullName: IPGlobalProperties.EndGetUnicastAddresses(IAsyncResult)\n- uid: System.Net.NetworkInformation.UnicastIPAddressInformationCollection\n  parent: System.Net.NetworkInformation\n  isExternal: false\n  name: UnicastIPAddressInformationCollection\n  nameWithType: UnicastIPAddressInformationCollection\n  fullName: System.Net.NetworkInformation.UnicastIPAddressInformationCollection\n- uid: System.Net.NetworkInformation.IPGlobalProperties.GetActiveTcpConnections\n  parent: System.Net.NetworkInformation.IPGlobalProperties\n  isExternal: false\n  name: GetActiveTcpConnections()\n  nameWithType: IPGlobalProperties.GetActiveTcpConnections()\n  fullName: IPGlobalProperties.GetActiveTcpConnections()\n- uid: System.Net.NetworkInformation.TcpConnectionInformation\n  name: TcpConnectionInformation\n  nameWithType: TcpConnectionInformation\n  fullName: System.Net.NetworkInformation.TcpConnectionInformation\n- uid: System.Net.NetworkInformation.TcpConnectionInformation[]\n  parent: System.Net.NetworkInformation\n  isExternal: false\n  name: TcpConnectionInformation[]\n  nameWithType: TcpConnectionInformation[]\n  fullName: System.Net.NetworkInformation.TcpConnectionInformation[]\n  spec.csharp:\n  - uid: System.Net.NetworkInformation.TcpConnectionInformation\n    name: TcpConnectionInformation\n    nameWithType: TcpConnectionInformation\n    fullName: System.Net.NetworkInformation.TcpConnectionInformation\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Net.NetworkInformation.IPGlobalProperties.GetActiveTcpListeners\n  parent: System.Net.NetworkInformation.IPGlobalProperties\n  isExternal: false\n  name: GetActiveTcpListeners()\n  nameWithType: IPGlobalProperties.GetActiveTcpListeners()\n  fullName: IPGlobalProperties.GetActiveTcpListeners()\n- uid: System.Net.IPEndPoint\n  name: IPEndPoint\n  nameWithType: IPEndPoint\n  fullName: System.Net.IPEndPoint\n- uid: System.Net.IPEndPoint[]\n  parent: System.Net\n  isExternal: false\n  name: IPEndPoint[]\n  nameWithType: IPEndPoint[]\n  fullName: System.Net.IPEndPoint[]\n  spec.csharp:\n  - uid: System.Net.IPEndPoint\n    name: IPEndPoint\n    nameWithType: IPEndPoint\n    fullName: System.Net.IPEndPoint\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Net.NetworkInformation.IPGlobalProperties.GetActiveUdpListeners\n  parent: System.Net.NetworkInformation.IPGlobalProperties\n  isExternal: false\n  name: GetActiveUdpListeners()\n  nameWithType: IPGlobalProperties.GetActiveUdpListeners()\n  fullName: IPGlobalProperties.GetActiveUdpListeners()\n- uid: System.Net.NetworkInformation.IPGlobalProperties.GetIcmpV4Statistics\n  parent: System.Net.NetworkInformation.IPGlobalProperties\n  isExternal: false\n  name: GetIcmpV4Statistics()\n  nameWithType: IPGlobalProperties.GetIcmpV4Statistics()\n  fullName: IPGlobalProperties.GetIcmpV4Statistics()\n- uid: System.Net.NetworkInformation.IcmpV4Statistics\n  parent: System.Net.NetworkInformation\n  isExternal: false\n  name: IcmpV4Statistics\n  nameWithType: IcmpV4Statistics\n  fullName: System.Net.NetworkInformation.IcmpV4Statistics\n- uid: System.Net.NetworkInformation.IPGlobalProperties.GetIcmpV6Statistics\n  parent: System.Net.NetworkInformation.IPGlobalProperties\n  isExternal: false\n  name: GetIcmpV6Statistics()\n  nameWithType: IPGlobalProperties.GetIcmpV6Statistics()\n  fullName: IPGlobalProperties.GetIcmpV6Statistics()\n- uid: System.Net.NetworkInformation.IcmpV6Statistics\n  parent: System.Net.NetworkInformation\n  isExternal: false\n  name: IcmpV6Statistics\n  nameWithType: IcmpV6Statistics\n  fullName: System.Net.NetworkInformation.IcmpV6Statistics\n- uid: System.Net.NetworkInformation.IPGlobalProperties.GetIPGlobalProperties\n  parent: System.Net.NetworkInformation.IPGlobalProperties\n  isExternal: false\n  name: GetIPGlobalProperties()\n  nameWithType: IPGlobalProperties.GetIPGlobalProperties()\n  fullName: IPGlobalProperties.GetIPGlobalProperties()\n- uid: System.Net.NetworkInformation.IPGlobalProperties\n  parent: System.Net.NetworkInformation\n  isExternal: false\n  name: IPGlobalProperties\n  nameWithType: IPGlobalProperties\n  fullName: System.Net.NetworkInformation.IPGlobalProperties\n- uid: System.Net.NetworkInformation.IPGlobalProperties.GetIPv4GlobalStatistics\n  parent: System.Net.NetworkInformation.IPGlobalProperties\n  isExternal: false\n  name: GetIPv4GlobalStatistics()\n  nameWithType: IPGlobalProperties.GetIPv4GlobalStatistics()\n  fullName: IPGlobalProperties.GetIPv4GlobalStatistics()\n- uid: System.Net.NetworkInformation.IPGlobalStatistics\n  parent: System.Net.NetworkInformation\n  isExternal: false\n  name: IPGlobalStatistics\n  nameWithType: IPGlobalStatistics\n  fullName: System.Net.NetworkInformation.IPGlobalStatistics\n- uid: System.Net.NetworkInformation.IPGlobalProperties.GetIPv6GlobalStatistics\n  parent: System.Net.NetworkInformation.IPGlobalProperties\n  isExternal: false\n  name: GetIPv6GlobalStatistics()\n  nameWithType: IPGlobalProperties.GetIPv6GlobalStatistics()\n  fullName: IPGlobalProperties.GetIPv6GlobalStatistics()\n- uid: System.Net.NetworkInformation.IPGlobalProperties.GetTcpIPv4Statistics\n  parent: System.Net.NetworkInformation.IPGlobalProperties\n  isExternal: false\n  name: GetTcpIPv4Statistics()\n  nameWithType: IPGlobalProperties.GetTcpIPv4Statistics()\n  fullName: IPGlobalProperties.GetTcpIPv4Statistics()\n- uid: System.Net.NetworkInformation.TcpStatistics\n  parent: System.Net.NetworkInformation\n  isExternal: false\n  name: TcpStatistics\n  nameWithType: TcpStatistics\n  fullName: System.Net.NetworkInformation.TcpStatistics\n- uid: System.Net.NetworkInformation.IPGlobalProperties.GetTcpIPv6Statistics\n  parent: System.Net.NetworkInformation.IPGlobalProperties\n  isExternal: false\n  name: GetTcpIPv6Statistics()\n  nameWithType: IPGlobalProperties.GetTcpIPv6Statistics()\n  fullName: IPGlobalProperties.GetTcpIPv6Statistics()\n- uid: System.Net.NetworkInformation.IPGlobalProperties.GetUdpIPv4Statistics\n  parent: System.Net.NetworkInformation.IPGlobalProperties\n  isExternal: false\n  name: GetUdpIPv4Statistics()\n  nameWithType: IPGlobalProperties.GetUdpIPv4Statistics()\n  fullName: IPGlobalProperties.GetUdpIPv4Statistics()\n- uid: System.Net.NetworkInformation.UdpStatistics\n  parent: System.Net.NetworkInformation\n  isExternal: false\n  name: UdpStatistics\n  nameWithType: UdpStatistics\n  fullName: System.Net.NetworkInformation.UdpStatistics\n- uid: System.Net.NetworkInformation.IPGlobalProperties.GetUdpIPv6Statistics\n  parent: System.Net.NetworkInformation.IPGlobalProperties\n  isExternal: false\n  name: GetUdpIPv6Statistics()\n  nameWithType: IPGlobalProperties.GetUdpIPv6Statistics()\n  fullName: IPGlobalProperties.GetUdpIPv6Statistics()\n- uid: System.Net.NetworkInformation.IPGlobalProperties.GetUnicastAddresses\n  parent: System.Net.NetworkInformation.IPGlobalProperties\n  isExternal: false\n  name: GetUnicastAddresses()\n  nameWithType: IPGlobalProperties.GetUnicastAddresses()\n  fullName: IPGlobalProperties.GetUnicastAddresses()\n- uid: System.Net.NetworkInformation.IPGlobalProperties.GetUnicastAddressesAsync\n  parent: System.Net.NetworkInformation.IPGlobalProperties\n  isExternal: false\n  name: GetUnicastAddressesAsync()\n  nameWithType: IPGlobalProperties.GetUnicastAddressesAsync()\n  fullName: IPGlobalProperties.GetUnicastAddressesAsync()\n- uid: System.Threading.Tasks.Task`1\n  name: Task<TResult>\n  nameWithType: Task<TResult>\n  fullName: System.Threading.Tasks.Task<TResult>\n- uid: System.Threading.Tasks.Task{System.Net.NetworkInformation.UnicastIPAddressInformationCollection}\n  parent: System.Threading.Tasks\n  isExternal: false\n  name: Task<UnicastIPAddressInformationCollection>\n  nameWithType: Task<UnicastIPAddressInformationCollection>\n  fullName: System.Threading.Tasks.Task<System.Net.NetworkInformation.UnicastIPAddressInformationCollection>\n  spec.csharp:\n  - uid: System.Threading.Tasks.Task`1\n    name: Task\n    nameWithType: Task\n    fullName: System.Threading.Tasks.Task\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Net.NetworkInformation.UnicastIPAddressInformationCollection\n    name: UnicastIPAddressInformationCollection\n    nameWithType: UnicastIPAddressInformationCollection\n    fullName: System.Net.NetworkInformation.UnicastIPAddressInformationCollection\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Net.NetworkInformation.IPGlobalProperties.HostName\n  parent: System.Net.NetworkInformation.IPGlobalProperties\n  isExternal: false\n  name: HostName\n  nameWithType: IPGlobalProperties.HostName\n  fullName: IPGlobalProperties.HostName\n- uid: System.Net.NetworkInformation.IPGlobalProperties.IsWinsProxy\n  parent: System.Net.NetworkInformation.IPGlobalProperties\n  isExternal: false\n  name: IsWinsProxy\n  nameWithType: IPGlobalProperties.IsWinsProxy\n  fullName: IPGlobalProperties.IsWinsProxy\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Net.NetworkInformation.IPGlobalProperties.NodeType\n  parent: System.Net.NetworkInformation.IPGlobalProperties\n  isExternal: false\n  name: NodeType\n  nameWithType: IPGlobalProperties.NodeType\n  fullName: IPGlobalProperties.NodeType\n- uid: System.Net.NetworkInformation.NetBiosNodeType\n  parent: System.Net.NetworkInformation\n  isExternal: false\n  name: NetBiosNodeType\n  nameWithType: NetBiosNodeType\n  fullName: System.Net.NetworkInformation.NetBiosNodeType\n- uid: System.Net.NetworkInformation.IPGlobalProperties.#ctor*\n  parent: System.Net.NetworkInformation.IPGlobalProperties\n  isExternal: false\n  name: IPGlobalProperties\n  nameWithType: IPGlobalProperties.IPGlobalProperties\n  fullName: IPGlobalProperties.IPGlobalProperties\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.NetworkInformation/IPGlobalProperties.xml\n- uid: System.Net.NetworkInformation.IPGlobalProperties.BeginGetUnicastAddresses*\n  parent: System.Net.NetworkInformation.IPGlobalProperties\n  isExternal: false\n  name: BeginGetUnicastAddresses\n  nameWithType: IPGlobalProperties.BeginGetUnicastAddresses\n  fullName: IPGlobalProperties.BeginGetUnicastAddresses\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.NetworkInformation/IPGlobalProperties.xml\n- uid: System.Net.NetworkInformation.IPGlobalProperties.DhcpScopeName*\n  parent: System.Net.NetworkInformation.IPGlobalProperties\n  isExternal: false\n  name: DhcpScopeName\n  nameWithType: IPGlobalProperties.DhcpScopeName\n  fullName: IPGlobalProperties.DhcpScopeName\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.NetworkInformation/IPGlobalProperties.xml\n- uid: System.Net.NetworkInformation.IPGlobalProperties.DomainName*\n  parent: System.Net.NetworkInformation.IPGlobalProperties\n  isExternal: false\n  name: DomainName\n  nameWithType: IPGlobalProperties.DomainName\n  fullName: IPGlobalProperties.DomainName\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.NetworkInformation/IPGlobalProperties.xml\n- uid: System.Net.NetworkInformation.IPGlobalProperties.EndGetUnicastAddresses*\n  parent: System.Net.NetworkInformation.IPGlobalProperties\n  isExternal: false\n  name: EndGetUnicastAddresses\n  nameWithType: IPGlobalProperties.EndGetUnicastAddresses\n  fullName: IPGlobalProperties.EndGetUnicastAddresses\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.NetworkInformation/IPGlobalProperties.xml\n- uid: System.Net.NetworkInformation.IPGlobalProperties.GetActiveTcpConnections*\n  parent: System.Net.NetworkInformation.IPGlobalProperties\n  isExternal: false\n  name: GetActiveTcpConnections\n  nameWithType: IPGlobalProperties.GetActiveTcpConnections\n  fullName: IPGlobalProperties.GetActiveTcpConnections\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.NetworkInformation/IPGlobalProperties.xml\n- uid: System.Net.NetworkInformation.IPGlobalProperties.GetActiveTcpListeners*\n  parent: System.Net.NetworkInformation.IPGlobalProperties\n  isExternal: false\n  name: GetActiveTcpListeners\n  nameWithType: IPGlobalProperties.GetActiveTcpListeners\n  fullName: IPGlobalProperties.GetActiveTcpListeners\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.NetworkInformation/IPGlobalProperties.xml\n- uid: System.Net.NetworkInformation.IPGlobalProperties.GetActiveUdpListeners*\n  parent: System.Net.NetworkInformation.IPGlobalProperties\n  isExternal: false\n  name: GetActiveUdpListeners\n  nameWithType: IPGlobalProperties.GetActiveUdpListeners\n  fullName: IPGlobalProperties.GetActiveUdpListeners\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.NetworkInformation/IPGlobalProperties.xml\n- uid: System.Net.NetworkInformation.IPGlobalProperties.GetIcmpV4Statistics*\n  parent: System.Net.NetworkInformation.IPGlobalProperties\n  isExternal: false\n  name: GetIcmpV4Statistics\n  nameWithType: IPGlobalProperties.GetIcmpV4Statistics\n  fullName: IPGlobalProperties.GetIcmpV4Statistics\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.NetworkInformation/IPGlobalProperties.xml\n- uid: System.Net.NetworkInformation.IPGlobalProperties.GetIcmpV6Statistics*\n  parent: System.Net.NetworkInformation.IPGlobalProperties\n  isExternal: false\n  name: GetIcmpV6Statistics\n  nameWithType: IPGlobalProperties.GetIcmpV6Statistics\n  fullName: IPGlobalProperties.GetIcmpV6Statistics\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.NetworkInformation/IPGlobalProperties.xml\n- uid: System.Net.NetworkInformation.IPGlobalProperties.GetIPGlobalProperties*\n  parent: System.Net.NetworkInformation.IPGlobalProperties\n  isExternal: false\n  name: GetIPGlobalProperties\n  nameWithType: IPGlobalProperties.GetIPGlobalProperties\n  fullName: IPGlobalProperties.GetIPGlobalProperties\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.NetworkInformation/IPGlobalProperties.xml\n- uid: System.Net.NetworkInformation.IPGlobalProperties.GetIPv4GlobalStatistics*\n  parent: System.Net.NetworkInformation.IPGlobalProperties\n  isExternal: false\n  name: GetIPv4GlobalStatistics\n  nameWithType: IPGlobalProperties.GetIPv4GlobalStatistics\n  fullName: IPGlobalProperties.GetIPv4GlobalStatistics\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.NetworkInformation/IPGlobalProperties.xml\n- uid: System.Net.NetworkInformation.IPGlobalProperties.GetIPv6GlobalStatistics*\n  parent: System.Net.NetworkInformation.IPGlobalProperties\n  isExternal: false\n  name: GetIPv6GlobalStatistics\n  nameWithType: IPGlobalProperties.GetIPv6GlobalStatistics\n  fullName: IPGlobalProperties.GetIPv6GlobalStatistics\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.NetworkInformation/IPGlobalProperties.xml\n- uid: System.Net.NetworkInformation.IPGlobalProperties.GetTcpIPv4Statistics*\n  parent: System.Net.NetworkInformation.IPGlobalProperties\n  isExternal: false\n  name: GetTcpIPv4Statistics\n  nameWithType: IPGlobalProperties.GetTcpIPv4Statistics\n  fullName: IPGlobalProperties.GetTcpIPv4Statistics\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.NetworkInformation/IPGlobalProperties.xml\n- uid: System.Net.NetworkInformation.IPGlobalProperties.GetTcpIPv6Statistics*\n  parent: System.Net.NetworkInformation.IPGlobalProperties\n  isExternal: false\n  name: GetTcpIPv6Statistics\n  nameWithType: IPGlobalProperties.GetTcpIPv6Statistics\n  fullName: IPGlobalProperties.GetTcpIPv6Statistics\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.NetworkInformation/IPGlobalProperties.xml\n- uid: System.Net.NetworkInformation.IPGlobalProperties.GetUdpIPv4Statistics*\n  parent: System.Net.NetworkInformation.IPGlobalProperties\n  isExternal: false\n  name: GetUdpIPv4Statistics\n  nameWithType: IPGlobalProperties.GetUdpIPv4Statistics\n  fullName: IPGlobalProperties.GetUdpIPv4Statistics\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.NetworkInformation/IPGlobalProperties.xml\n- uid: System.Net.NetworkInformation.IPGlobalProperties.GetUdpIPv6Statistics*\n  parent: System.Net.NetworkInformation.IPGlobalProperties\n  isExternal: false\n  name: GetUdpIPv6Statistics\n  nameWithType: IPGlobalProperties.GetUdpIPv6Statistics\n  fullName: IPGlobalProperties.GetUdpIPv6Statistics\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.NetworkInformation/IPGlobalProperties.xml\n- uid: System.Net.NetworkInformation.IPGlobalProperties.GetUnicastAddresses*\n  parent: System.Net.NetworkInformation.IPGlobalProperties\n  isExternal: false\n  name: GetUnicastAddresses\n  nameWithType: IPGlobalProperties.GetUnicastAddresses\n  fullName: IPGlobalProperties.GetUnicastAddresses\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.NetworkInformation/IPGlobalProperties.xml\n- uid: System.Net.NetworkInformation.IPGlobalProperties.GetUnicastAddressesAsync*\n  parent: System.Net.NetworkInformation.IPGlobalProperties\n  isExternal: false\n  name: GetUnicastAddressesAsync\n  nameWithType: IPGlobalProperties.GetUnicastAddressesAsync\n  fullName: IPGlobalProperties.GetUnicastAddressesAsync\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.NetworkInformation/IPGlobalProperties.xml\n- uid: System.Net.NetworkInformation.IPGlobalProperties.HostName*\n  parent: System.Net.NetworkInformation.IPGlobalProperties\n  isExternal: false\n  name: HostName\n  nameWithType: IPGlobalProperties.HostName\n  fullName: IPGlobalProperties.HostName\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.NetworkInformation/IPGlobalProperties.xml\n- uid: System.Net.NetworkInformation.IPGlobalProperties.IsWinsProxy*\n  parent: System.Net.NetworkInformation.IPGlobalProperties\n  isExternal: false\n  name: IsWinsProxy\n  nameWithType: IPGlobalProperties.IsWinsProxy\n  fullName: IPGlobalProperties.IsWinsProxy\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.NetworkInformation/IPGlobalProperties.xml\n- uid: System.Net.NetworkInformation.IPGlobalProperties.NodeType*\n  parent: System.Net.NetworkInformation.IPGlobalProperties\n  isExternal: false\n  name: NodeType\n  nameWithType: IPGlobalProperties.NodeType\n  fullName: IPGlobalProperties.NodeType\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.NetworkInformation/IPGlobalProperties.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n"}