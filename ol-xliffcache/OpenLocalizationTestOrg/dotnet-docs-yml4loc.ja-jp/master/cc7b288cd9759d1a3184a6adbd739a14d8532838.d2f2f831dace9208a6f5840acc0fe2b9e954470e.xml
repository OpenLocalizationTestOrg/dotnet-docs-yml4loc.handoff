{"nodes":[{"content":"Represents a region of a file to be archived. This class cannot be inherited.","nodes":[{"pos":[0,77],"content":"Represents a region of a file to be archived. This class cannot be inherited.","nodes":[{"content":"Represents a region of a file to be archived. This class cannot be inherited.","pos":[0,77],"nodes":[{"content":"Represents a region of a file to be archived.","pos":[0,45]},{"content":"This class cannot be inherited.","pos":[46,77]}]}]}],"pos":[473,551],"yaml":true},{"content":"A <xref:System.IO.Log.LogArchiveSnapshot> object contains the information necessary to generate a consistent backup of the data in a <xref:System.IO.Log.LogStore>. The actual data is contained in the enumerable collection of <xref:System.IO.Log.FileRegion> objects returned by the <xref:System.IO.Log.LogArchiveSnapshot.ArchiveRegions%2A> property. Each <xref:System.IO.Log.FileRegion> instance represents a sequence of bytes in a file that must be archived.","nodes":[{"pos":[0,458],"content":"A <xref:System.IO.Log.LogArchiveSnapshot> object contains the information necessary to generate a consistent backup of the data in a <xref:System.IO.Log.LogStore>. The actual data is contained in the enumerable collection of <xref:System.IO.Log.FileRegion> objects returned by the <xref:System.IO.Log.LogArchiveSnapshot.ArchiveRegions%2A> property. Each <xref:System.IO.Log.FileRegion> instance represents a sequence of bytes in a file that must be archived.","nodes":[{"content":"A <xref:System.IO.Log.LogArchiveSnapshot> object contains the information necessary to generate a consistent backup of the data in a <xref:System.IO.Log.LogStore>. The actual data is contained in the enumerable collection of <xref:System.IO.Log.FileRegion> objects returned by the <xref:System.IO.Log.LogArchiveSnapshot.ArchiveRegions%2A> property. Each <xref:System.IO.Log.FileRegion> instance represents a sequence of bytes in a file that must be archived.","pos":[0,458],"nodes":[{"content":"A <ph id=\"ph1\">&lt;xref:System.IO.Log.LogArchiveSnapshot&gt;</ph> object contains the information necessary to generate a consistent backup of the data in a <ph id=\"ph2\">&lt;xref:System.IO.Log.LogStore&gt;</ph>.","pos":[0,163],"source":"A <xref:System.IO.Log.LogArchiveSnapshot> object contains the information necessary to generate a consistent backup of the data in a <xref:System.IO.Log.LogStore>."},{"content":"The actual data is contained in the enumerable collection of <ph id=\"ph1\">&lt;xref:System.IO.Log.FileRegion&gt;</ph> objects returned by the <ph id=\"ph2\">&lt;xref:System.IO.Log.LogArchiveSnapshot.ArchiveRegions%2A&gt;</ph> property.","pos":[164,348],"source":" The actual data is contained in the enumerable collection of <xref:System.IO.Log.FileRegion> objects returned by the <xref:System.IO.Log.LogArchiveSnapshot.ArchiveRegions%2A> property."},{"content":"Each <ph id=\"ph1\">&lt;xref:System.IO.Log.FileRegion&gt;</ph> instance represents a sequence of bytes in a file that must be archived.","pos":[349,458],"source":" Each <xref:System.IO.Log.FileRegion> instance represents a sequence of bytes in a file that must be archived."}]}]}],"pos":[562,1021],"yaml":true,"extradata":"MT"},{"content":"Gets the length of the file in bytes.","nodes":[{"pos":[0,37],"content":"Gets the length of the file in bytes.","nodes":[{"content":"Gets the length of the file in bytes.","pos":[0,37]}]}],"pos":[2669,2707],"yaml":true},{"content":"This property returns the length of the entire file instead of that of a single region in the file. The length of the region in the file can be found by examining the <xref:System.IO.Log.LogStore.Length%2A> property of the stream returned by the <xref:System.IO.Log.FileRegion.GetStream%2A> method.","nodes":[{"pos":[0,298],"content":"This property returns the length of the entire file instead of that of a single region in the file. The length of the region in the file can be found by examining the <xref:System.IO.Log.LogStore.Length%2A> property of the stream returned by the <xref:System.IO.Log.FileRegion.GetStream%2A> method.","nodes":[{"content":"This property returns the length of the entire file instead of that of a single region in the file. The length of the region in the file can be found by examining the <xref:System.IO.Log.LogStore.Length%2A> property of the stream returned by the <xref:System.IO.Log.FileRegion.GetStream%2A> method.","pos":[0,298],"nodes":[{"content":"This property returns the length of the entire file instead of that of a single region in the file.","pos":[0,99]},{"content":"The length of the region in the file can be found by examining the <ph id=\"ph1\">&lt;xref:System.IO.Log.LogStore.Length%2A&gt;</ph> property of the stream returned by the <ph id=\"ph2\">&lt;xref:System.IO.Log.FileRegion.GetStream%2A&gt;</ph> method.","pos":[100,298],"source":" The length of the region in the file can be found by examining the <xref:System.IO.Log.LogStore.Length%2A> property of the stream returned by the <xref:System.IO.Log.FileRegion.GetStream%2A> method."}]}]}],"pos":[2718,3017],"yaml":true,"extradata":"MT"},{"content":"The length of the file in bytes.","nodes":[{"pos":[0,32],"content":"The length of the file in bytes.","nodes":[{"content":"The length of the file in bytes.","pos":[0,32]}]}],"pos":[3514,3547],"yaml":true},{"content":"Returns a stream that can be used to read the data to be archived.","nodes":[{"pos":[0,66],"content":"Returns a stream that can be used to read the data to be archived.","nodes":[{"content":"Returns a stream that can be used to read the data to be archived.","pos":[0,66]}]}],"pos":[4475,4542],"yaml":true},{"content":"A stream that contains the data to be archived.","nodes":[{"pos":[0,47],"content":"A stream that contains the data to be archived.","nodes":[{"content":"A stream that contains the data to be archived.","pos":[0,47]}]}],"pos":[5082,5130],"yaml":true},{"content":"The request could not be performed because of an unexpected I/O exception.","nodes":[{"pos":[0,74],"content":"The request could not be performed because of an unexpected I/O exception.","nodes":[{"content":"The request could not be performed because of an unexpected I/O exception.","pos":[0,74]}]}],"pos":[5280,5355],"yaml":true},{"content":"The operation is not supported.","nodes":[{"pos":[0,31],"content":"The operation is not supported.","nodes":[{"content":"The operation is not supported.","pos":[0,31]}]}],"pos":[5457,5489],"yaml":true},{"content":"The method was called after the sequence has been disposed of.","nodes":[{"pos":[0,62],"content":"The method was called after the sequence has been disposed of.","nodes":[{"content":"The method was called after the sequence has been disposed of.","pos":[0,62]}]}],"pos":[5595,5658],"yaml":true},{"content":"There is not enough memory to continue the execution of the program.","nodes":[{"pos":[0,68],"content":"There is not enough memory to continue the execution of the program.","nodes":[{"content":"There is not enough memory to continue the execution of the program.","pos":[0,68]}]}],"pos":[5758,5827],"yaml":true},{"content":"Access for the specified log store is denied by the operating system.","nodes":[{"pos":[0,69],"content":"Access for the specified log store is denied by the operating system.","nodes":[{"content":"Access for the specified log store is denied by the operating system.","pos":[0,69]}]}],"pos":[5941,6011],"yaml":true},{"content":"Gets the offset into the file where the data begins.","nodes":[{"pos":[0,52],"content":"Gets the offset into the file where the data begins.","nodes":[{"content":"Gets the offset into the file where the data begins.","pos":[0,52]}]}],"pos":[6851,6904],"yaml":true},{"content":"The offset into the file where the data begins.","nodes":[{"pos":[0,47],"content":"The offset into the file where the data begins.","nodes":[{"content":"The offset into the file where the data begins.","pos":[0,47]}]}],"pos":[7411,7459],"yaml":true},{"content":"Gets the fully qualified location of the file containing this region.","nodes":[{"pos":[0,69],"content":"Gets the fully qualified location of the file containing this region.","nodes":[{"content":"Gets the fully qualified location of the file containing this region.","pos":[0,69]}]}],"pos":[8349,8419],"yaml":true},{"content":"The fully qualified location of the file containing this region.","nodes":[{"pos":[0,64],"content":"The fully qualified location of the file containing this region.","nodes":[{"content":"The fully qualified location of the file containing this region.","pos":[0,64]}]}],"pos":[8927,8992],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.IO.Log.FileRegion\n  commentId: T:System.IO.Log.FileRegion\n  id: FileRegion\n  children:\n  - System.IO.Log.FileRegion.FileLength\n  - System.IO.Log.FileRegion.GetStream\n  - System.IO.Log.FileRegion.Offset\n  - System.IO.Log.FileRegion.Path\n  langs:\n  - csharp\n  name: FileRegion\n  nameWithType: FileRegion\n  fullName: System.IO.Log.FileRegion\n  type: Class\n  assemblies:\n  - System.IO.Log\n  namespace: System.IO.Log\n  summary: Represents a region of a file to be archived. This class cannot be inherited.\n  remarks: A <xref:System.IO.Log.LogArchiveSnapshot> object contains the information necessary to generate a consistent backup of the data in a <xref:System.IO.Log.LogStore>. The actual data is contained in the enumerable collection of <xref:System.IO.Log.FileRegion> objects returned by the <xref:System.IO.Log.LogArchiveSnapshot.ArchiveRegions%2A> property. Each <xref:System.IO.Log.FileRegion> instance represents a sequence of bytes in a file that must be archived.\n  example:\n  - \"The following example demonstrates how to archive a log store to XML using the <xref:System.IO.Log.LogStore> and <xref:System.IO.Log.FileRegion> classes.  \\n  \\n [!code-csharp[FileRegion#0](~/samples/snippets/csharp/VS_Snippets_CFX/fileregion/cs/fileregion.cs#0)]\\n [!code-vb[FileRegion#0](~/samples/snippets/visualbasic/VS_Snippets_CFX/fileregion/vb/fileregion.vb#0)]\"\n  syntax:\n    content: public sealed class FileRegion\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Log/FileRegion.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.IO.Log.FileRegion.FileLength\n  commentId: P:System.IO.Log.FileRegion.FileLength\n  id: FileLength\n  parent: System.IO.Log.FileRegion\n  langs:\n  - csharp\n  name: FileLength\n  nameWithType: FileRegion.FileLength\n  fullName: FileRegion.FileLength\n  type: Property\n  assemblies:\n  - System.IO.Log\n  namespace: System.IO.Log\n  summary: Gets the length of the file in bytes.\n  remarks: This property returns the length of the entire file instead of that of a single region in the file. The length of the region in the file can be found by examining the <xref:System.IO.Log.LogStore.Length%2A> property of the stream returned by the <xref:System.IO.Log.FileRegion.GetStream%2A> method.\n  example:\n  - \"The following example demonstrates how to archive a log store to XML using the <xref:System.IO.Log.LogStore> and <xref:System.IO.Log.FileRegion> classes.  \\n  \\n [!code-csharp[FileRegion#0](~/samples/snippets/csharp/VS_Snippets_CFX/fileregion/cs/fileregion.cs#0)]\\n [!code-vb[FileRegion#0](~/samples/snippets/visualbasic/VS_Snippets_CFX/fileregion/vb/fileregion.vb#0)]\"\n  syntax:\n    content: public long FileLength { get; }\n    return:\n      type: System.Int64\n      description: The length of the file in bytes.\n  overload: System.IO.Log.FileRegion.FileLength*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Log/FileRegion.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.IO.Log.FileRegion.GetStream\n  commentId: M:System.IO.Log.FileRegion.GetStream\n  id: GetStream\n  parent: System.IO.Log.FileRegion\n  langs:\n  - csharp\n  name: GetStream()\n  nameWithType: FileRegion.GetStream()\n  fullName: FileRegion.GetStream()\n  type: Method\n  assemblies:\n  - System.IO.Log\n  namespace: System.IO.Log\n  summary: Returns a stream that can be used to read the data to be archived.\n  remarks: ''\n  example:\n  - \"The following example demonstrates how to archive a log store to XML using the <xref:System.IO.Log.LogStore> and <xref:System.IO.Log.FileRegion> classes.  \\n  \\n [!code-csharp[FileRegion#0](~/samples/snippets/csharp/VS_Snippets_CFX/fileregion/cs/fileregion.cs#0)]\\n [!code-vb[FileRegion#0](~/samples/snippets/visualbasic/VS_Snippets_CFX/fileregion/vb/fileregion.vb#0)]\"\n  syntax:\n    content: public System.IO.Stream GetStream ();\n    parameters: []\n    return:\n      type: System.IO.Stream\n      description: A stream that contains the data to be archived.\n  overload: System.IO.Log.FileRegion.GetStream*\n  exceptions:\n  - type: System.IO.IOException\n    commentId: T:System.IO.IOException\n    description: The request could not be performed because of an unexpected I/O exception.\n  - type: System.NotSupportedException\n    commentId: T:System.NotSupportedException\n    description: The operation is not supported.\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The method was called after the sequence has been disposed of.\n  - type: System.OutOfMemoryException\n    commentId: T:System.OutOfMemoryException\n    description: There is not enough memory to continue the execution of the program.\n  - type: System.UnauthorizedAccessException\n    commentId: T:System.UnauthorizedAccessException\n    description: Access for the specified log store is denied by the operating system.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Log/FileRegion.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.IO.Log.FileRegion.Offset\n  commentId: P:System.IO.Log.FileRegion.Offset\n  id: Offset\n  parent: System.IO.Log.FileRegion\n  langs:\n  - csharp\n  name: Offset\n  nameWithType: FileRegion.Offset\n  fullName: FileRegion.Offset\n  type: Property\n  assemblies:\n  - System.IO.Log\n  namespace: System.IO.Log\n  summary: Gets the offset into the file where the data begins.\n  remarks: ''\n  example:\n  - \"The following example demonstrates how to archive a log store to XML using the <xref:System.IO.Log.LogStore> and <xref:System.IO.Log.FileRegion> classes.  \\n  \\n [!code-csharp[FileRegion#0](~/samples/snippets/csharp/VS_Snippets_CFX/fileregion/cs/fileregion.cs#0)]\\n [!code-vb[FileRegion#0](~/samples/snippets/visualbasic/VS_Snippets_CFX/fileregion/vb/fileregion.vb#0)]\"\n  syntax:\n    content: public long Offset { get; }\n    return:\n      type: System.Int64\n      description: The offset into the file where the data begins.\n  overload: System.IO.Log.FileRegion.Offset*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Log/FileRegion.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.IO.Log.FileRegion.Path\n  commentId: P:System.IO.Log.FileRegion.Path\n  id: Path\n  parent: System.IO.Log.FileRegion\n  langs:\n  - csharp\n  name: Path\n  nameWithType: FileRegion.Path\n  fullName: FileRegion.Path\n  type: Property\n  assemblies:\n  - System.IO.Log\n  namespace: System.IO.Log\n  summary: Gets the fully qualified location of the file containing this region.\n  remarks: ''\n  example:\n  - \"The following example demonstrates how to archive a log store to XML using the <xref:System.IO.Log.LogStore> and <xref:System.IO.Log.FileRegion> classes.  \\n  \\n [!code-csharp[FileRegion#0](~/samples/snippets/csharp/VS_Snippets_CFX/fileregion/cs/fileregion.cs#0)]\\n [!code-vb[FileRegion#0](~/samples/snippets/visualbasic/VS_Snippets_CFX/fileregion/vb/fileregion.vb#0)]\"\n  syntax:\n    content: public string Path { get; }\n    return:\n      type: System.String\n      description: The fully qualified location of the file containing this region.\n  overload: System.IO.Log.FileRegion.Path*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Log/FileRegion.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\nreferences:\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.IO.IOException\n  parent: System.IO\n  isExternal: false\n  name: IOException\n  nameWithType: IOException\n  fullName: System.IO.IOException\n- uid: System.NotSupportedException\n  parent: System\n  isExternal: false\n  name: NotSupportedException\n  nameWithType: NotSupportedException\n  fullName: System.NotSupportedException\n- uid: System.ObjectDisposedException\n  parent: System\n  isExternal: false\n  name: ObjectDisposedException\n  nameWithType: ObjectDisposedException\n  fullName: System.ObjectDisposedException\n- uid: System.OutOfMemoryException\n  parent: System\n  isExternal: false\n  name: OutOfMemoryException\n  nameWithType: OutOfMemoryException\n  fullName: System.OutOfMemoryException\n- uid: System.UnauthorizedAccessException\n  parent: System\n  isExternal: false\n  name: UnauthorizedAccessException\n  nameWithType: UnauthorizedAccessException\n  fullName: System.UnauthorizedAccessException\n- uid: System.IO.Log.FileRegion.FileLength\n  parent: System.IO.Log.FileRegion\n  isExternal: false\n  name: FileLength\n  nameWithType: FileRegion.FileLength\n  fullName: FileRegion.FileLength\n- uid: System.Int64\n  parent: System\n  isExternal: false\n  name: Int64\n  nameWithType: Int64\n  fullName: System.Int64\n- uid: System.IO.Log.FileRegion.GetStream\n  parent: System.IO.Log.FileRegion\n  isExternal: false\n  name: GetStream()\n  nameWithType: FileRegion.GetStream()\n  fullName: FileRegion.GetStream()\n- uid: System.IO.Stream\n  parent: System.IO\n  isExternal: false\n  name: Stream\n  nameWithType: Stream\n  fullName: System.IO.Stream\n- uid: System.IO.Log.FileRegion.Offset\n  parent: System.IO.Log.FileRegion\n  isExternal: false\n  name: Offset\n  nameWithType: FileRegion.Offset\n  fullName: FileRegion.Offset\n- uid: System.IO.Log.FileRegion.Path\n  parent: System.IO.Log.FileRegion\n  isExternal: false\n  name: Path\n  nameWithType: FileRegion.Path\n  fullName: FileRegion.Path\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.IO.Log.FileRegion.FileLength*\n  parent: System.IO.Log.FileRegion\n  isExternal: false\n  name: FileLength\n  nameWithType: FileRegion.FileLength\n  fullName: FileRegion.FileLength\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Log/FileRegion.xml\n- uid: System.IO.Log.FileRegion.GetStream*\n  parent: System.IO.Log.FileRegion\n  isExternal: false\n  name: GetStream\n  nameWithType: FileRegion.GetStream\n  fullName: FileRegion.GetStream\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Log/FileRegion.xml\n- uid: System.IO.Log.FileRegion.Offset*\n  parent: System.IO.Log.FileRegion\n  isExternal: false\n  name: Offset\n  nameWithType: FileRegion.Offset\n  fullName: FileRegion.Offset\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Log/FileRegion.xml\n- uid: System.IO.Log.FileRegion.Path*\n  parent: System.IO.Log.FileRegion\n  isExternal: false\n  name: Path\n  nameWithType: FileRegion.Path\n  fullName: FileRegion.Path\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO.Log/FileRegion.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n"}