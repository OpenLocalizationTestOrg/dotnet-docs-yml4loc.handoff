{"nodes":[{"content":"Represents a complex number.","nodes":[{"pos":[0,28],"content":"Represents a complex number.","nodes":[{"content":"Represents a complex number.","pos":[0,28]}]}],"pos":[4281,4310],"yaml":true},{"content":"A complex number is a number that comprises a real number part and an imaginary number part. A complex number z is usually written in the form z = x + yi, where *x* and *y* are real numbers, and *i* is the imaginary unit that has the property *i*<sup>2</sup> = -1. The real part of the complex number is represented by *x*, and the imaginary part of the complex number is represented by *y*.  \n  \n The <xref:System.Numerics.Complex> type uses the Cartesian coordinate system (real, imaginary) when instantiating and manipulating complex numbers. A complex number can be represented as a point in a two-dimensional coordinate system, which is known as the complex plane. The real part of the complex number is positioned on the x-axis (the horizontal axis), and the imaginary part is positioned on the y-axis (the vertical axis).  \n  \n Any point in the complex plane can also be expressed based on its absolute value, by using the polar coordinate system., In polar coordinates, a point is characterized by two numbers:  \n  \n-   Its magnitude, which is the distance of the point from the origin (that is, 0,0, or the point at which the x-axis and the y-axis intersect).  \n  \n-   Its phase, which is the angle between the real axis and the line drawn from the origin to the point.  \n  \n## Instantiating a Complex Number  \n You can assign a value to a complex number in one of the following ways:  \n  \n-   By passing two <xref:System.Double> values to its constructor. The first value represents the real part of the complex number, and the second value represents its imaginary part. These values represent the position of the complex number in the two-dimensional Cartesian coordinate system.  \n  \n-   By calling the static (`Shared` in Visual Basic) <xref:System.Numerics.Complex.FromPolarCoordinates%2A?displayProperty=fullName> method to create a complex number from its polar coordinates.  \n  \n-   By assigning a <xref:System.Byte>, <xref:System.SByte>, <xref:System.Int16>, <xref:System.UInt16>, <xref:System.Int32>, <xref:System.UInt32>, <xref:System.Int64>, <xref:System.UInt64>, <xref:System.Single>, or <xref:System.Double> value to a <xref:System.Numerics.Complex> object. The value becomes the real part of the complex number, and its imaginary part equals 0.  \n  \n-   By casting (in C#) or converting (in Visual Basic) a <xref:System.Decimal> or <xref:System.Numerics.BigInteger> value to a <xref:System.Numerics.Complex> object. The value becomes the real part of the complex number, and its imaginary part equals 0.  \n  \n-   By assigning the complex number that is returned by a method or operator to a <xref:System.Numerics.Complex> object. For example, <xref:System.Numerics.Complex.Add%2A?displayProperty=fullName> is a static method that returns a complex number that is the sum of two complex numbers, and the <xref:System.Numerics.Complex.op_Addition%2A?displayProperty=fullName> operator adds two complex numbers and returns the result.  \n  \n The following example demonstrates each of these five ways of assigning a value to a complex number.  \n  \n [!code-csharp[System.Numerics.Complex.Class#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.numerics.complex.class/cs/create1.cs#2)]\n [!code-vb[System.Numerics.Complex.Class#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.numerics.complex.class/vb/create1.vb#2)]  \n  \n## Operations with Complex Numbers  \n The <xref:System.Numerics.Complex> structure in the .NET Framework includes members that provide the following functionality:  \n  \n-   Methods to compare two complex numbers to determine whether they are equal.  \n  \n-   Operators to perform arithmetic operations on complex numbers. <xref:System.Numerics.Complex> operators enable you to perform addition, subtraction, multiplication, division, and unary negation with complex numbers.  \n  \n-   Methods to perform other numerical operations on complex numbers. In addition to the four basic arithmetic operations, you can raise a complex number to a specified power, find the square root of a complex number, and get the absolute value of a complex number.  \n  \n-   Methods to perform trigonometric operations on complex numbers. For example, you can calculate the tangent of an angle represented by a complex number.  \n  \n Note that, because the <xref:System.Numerics.Complex.Real%2A> and  <xref:System.Numerics.Complex.Imaginary%2A> properties are read-only, you cannot modify the value of an existing <xref:System.Numerics.Complex> object.  All methods that perform an operation on a <xref:System.Numerics.Complex> number, if their return value is of type <xref:System.Numerics.Complex>, return a new <xref:System.Numerics.Complex> number.  \n  \n## Precision and Complex Numbers  \n The real and imaginary parts of a complex number are represented by two double-precision floating-point values. This means that <xref:System.Numerics.Complex> values, like double-precision floating-point values, can lose precision as a result of numerical operations. This means that strict comparisons for equality of two <xref:System.Numerics.Complex> values may fail, even if the difference between the two values is due to a loss of precision. For more information, see <xref:System.Double>.  \n  \n For example, performing exponentiation on the logarithm of a number should return the original number. However, in some cases, the loss of precision of floating-point values can cause slight differences between the two values, as the following example illustrates.  \n  \n [!code-csharp[System.Numerics.Complex.Class#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.numerics.complex.class/cs/precision1.cs#5)]\n [!code-vb[System.Numerics.Complex.Class#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.numerics.complex.class/vb/precision1.vb#5)]  \n  \n Similarly, the following example, which calculates the square root of a <xref:System.Numerics.Complex> number, produces slightly different results on the 32-bit and IA64 versions of the .NET Framework.  \n  \n [!code-csharp[System.Numerics.Complex.Class#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.numerics.complex.class/cs/precision1.cs#6)]\n [!code-vb[System.Numerics.Complex.Class#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.numerics.complex.class/vb/precision1.vb#6)]  \n  \n## Complex Numbers, Infinity, and NaN  \n The real and imaginary parts of a complex number are represented by <xref:System.Double> values. In addition to ranging from <xref:System.Double.MinValue?displayProperty=fullName> to <xref:System.Double.MaxValue?displayProperty=fullName>, the real or imaginary part of a complex number can have a value of <xref:System.Double.PositiveInfinity?displayProperty=fullName>, <xref:System.Double.NegativeInfinity?displayProperty=fullName>, or <xref:System.Double.NaN?displayProperty=fullName>. <xref:System.Double.PositiveInfinity?displayProperty=fullName>, <xref:System.Double.NegativeInfinity?displayProperty=fullName>, and <xref:System.Double.NaN?displayProperty=fullName> all propagate in any arithmetic or trigonometric operation.  \n  \n In the following example, division by <xref:System.Numerics.Complex.Zero> produces a complex number whose real and imaginary parts are both <xref:System.Double.NaN?displayProperty=fullName>. As a result, performing multiplication with this value also produces a complex number whose real and imaginary parts are <xref:System.Double.NaN?displayProperty=fullName>. Similarly, performing a multiplication that overflows the range of the <xref:System.Double> type produces a complex number whose real part is <xref:System.Double.NaN?displayProperty=fullName> and whose imaginary part is <xref:System.Double.PositiveInfinity?displayProperty=fullName>. Subsequently performing division with this complex number returns a complex number whose real part is <xref:System.Double.NaN?displayProperty=fullName> and whose imaginary part is <xref:System.Double.PositiveInfinity?displayProperty=fullName>.  \n  \n [!code-csharp[System.Numerics.Complex.Class#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.numerics.complex.class/cs/nan1.cs#3)]\n [!code-vb[System.Numerics.Complex.Class#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.numerics.complex.class/vb/nan1.vb#3)]  \n  \n Mathematical operations with complex numbers that are invalid or that overflow the range of the <xref:System.Double> data type do not throw an exception. Instead, they return a <xref:System.Double.PositiveInfinity?displayProperty=fullName>, <xref:System.Double.NegativeInfinity?displayProperty=fullName>, or <xref:System.Double.NaN?displayProperty=fullName> under the following conditions:  \n  \n-   The division of a positive number by zero returns <xref:System.Double.PositiveInfinity?displayProperty=fullName>.  \n  \n-   Any operation that overflows the upper bound of the <xref:System.Double> data type returns <xref:System.Double.PositiveInfinity?displayProperty=fullName>.  \n  \n-   The division of a negative number by zero returns <xref:System.Double.NegativeInfinity?displayProperty=fullName>.  \n  \n-   Any operation that overflows the lower bound of the <xref:System.Double> data type returns <xref:System.Double.NegativeInfinity?displayProperty=fullName>.  \n  \n-   The division of a zero by zero returns <xref:System.Double.NaN?displayProperty=fullName>.  \n  \n-   Any operation that is performed on operands whose values are <xref:System.Double.PositiveInfinity?displayProperty=fullName>, <xref:System.Double.NegativeInfinity?displayProperty=fullName>, or <xref:System.Double.NaN?displayProperty=fullName> returns <xref:System.Double.PositiveInfinity?displayProperty=fullName>, <xref:System.Double.NegativeInfinity?displayProperty=fullName>, or <xref:System.Double.NaN?displayProperty=fullName>, depending on the specific operation.  \n  \n Note that this applies to any intermediate calculations performed by a method. For example, the multiplication of `new Complex(9e308, 9e308) and new Complex(2.5, 3.5)` uses the formula (ac - bd) + (ad + bc)i. The calculation of the real component that results from the multiplication evaluates the expression 9e308 * 2.5 - 9e308 * 3.5. Each intermediate multiplication in this expression returns <xref:System.Double.PositiveInfinity?displayProperty=fullName>, and the attempt to subtract <xref:System.Double.PositiveInfinity?displayProperty=fullName> from <xref:System.Double.PositiveInfinity?displayProperty=fullName> returns <xref:System.Double.NaN?displayProperty=fullName>.  \n  \n## Formatting a Complex Number  \n By default, the string representation of a complex number takes the form `(`*real*`,` *imaginary*`)`, where *real* and *imaginary* are the string representations of the <xref:System.Double> values that form the complex number's real and imaginary components. Some overloads of the <xref:System.Numerics.Complex.ToString%2A> method allow customization of the string representations of these <xref:System.Double> values to reflect the formatting conventions of a particular culture or to appear in a particular format defined by a standard or custom numeric format string. (For more information, see [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) and [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md).)  \n  \n One of the more common ways of expressing the string representation of a complex number takes the form a + bi, where a is the complex number's real component, and b is the complex number's imaginary component. In electrical engineering, a complex number is most commonly expressed as a + bj. You can return the string representation of a complex number in either of these two forms. To do this, define a custom format provider by implementing the <xref:System.ICustomFormatter> and <xref:System.IFormatProvider> interfaces, and then call the <xref:System.String.Format%28System.IFormatProvider%2CSystem.String%2CSystem.Object%5B%5D%29?displayProperty=fullName> method.  \n  \n The following example defines a `ComplexFormatter` class that represents a complex number as a string in the form of either a + bi or a + bj.  \n  \n [!code-csharp[System.Numerics.Complex.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.numerics.complex.class/cs/customfmt1.cs#1)]\n [!code-vb[System.Numerics.Complex.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.numerics.complex.class/vb/customfmt1.vb#1)]  \n  \n The following example then uses this custom formatter to display the string representation of a complex number.  \n  \n [!code-csharp[System.Numerics.Complex.Class#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.numerics.complex.class/cs/customfmt1.cs#4)]\n [!code-vb[System.Numerics.Complex.Class#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.numerics.complex.class/vb/customfmt1.vb#4)]","nodes":[{"pos":[0,391],"content":"A complex number is a number that comprises a real number part and an imaginary number part. A complex number z is usually written in the form z = x + yi, where *x* and *y* are real numbers, and *i* is the imaginary unit that has the property *i*<sup>2</sup> = -1. The real part of the complex number is represented by *x*, and the imaginary part of the complex number is represented by *y*.","nodes":[{"content":"A complex number is a number that comprises a real number part and an imaginary number part.","pos":[0,92]},{"content":"A complex number z is usually written in the form z = x + yi, where <bpt id=\"p1\">*</bpt>x<ept id=\"p1\">*</ept> and <bpt id=\"p2\">*</bpt>y<ept id=\"p2\">*</ept> are real numbers, and <bpt id=\"p3\">*</bpt>i<ept id=\"p3\">*</ept> is the imaginary unit that has the property <bpt id=\"p4\">*</bpt>i<ept id=\"p4\">*</ept><bpt id=\"p5\">&lt;sup&gt;</bpt>2<ept id=\"p5\">&lt;/sup&gt;</ept> = -1.","pos":[93,264],"source":" A complex number z is usually written in the form z = x + yi, where *x* and *y* are real numbers, and *i* is the imaginary unit that has the property *i*<sup>2</sup> = -1."},{"content":"The real part of the complex number is represented by <bpt id=\"p1\">*</bpt>x<ept id=\"p1\">*</ept>, and the imaginary part of the complex number is represented by <bpt id=\"p2\">*</bpt>y<ept id=\"p2\">*</ept>.","pos":[265,391],"source":" The real part of the complex number is represented by *x*, and the imaginary part of the complex number is represented by *y*."}]},{"pos":[398,828],"content":"The <xref:System.Numerics.Complex> type uses the Cartesian coordinate system (real, imaginary) when instantiating and manipulating complex numbers. A complex number can be represented as a point in a two-dimensional coordinate system, which is known as the complex plane. The real part of the complex number is positioned on the x-axis (the horizontal axis), and the imaginary part is positioned on the y-axis (the vertical axis).","nodes":[{"content":"The <xref:System.Numerics.Complex> type uses the Cartesian coordinate system (real, imaginary) when instantiating and manipulating complex numbers. A complex number can be represented as a point in a two-dimensional coordinate system, which is known as the complex plane. The real part of the complex number is positioned on the x-axis (the horizontal axis), and the imaginary part is positioned on the y-axis (the vertical axis).","pos":[0,430],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Numerics.Complex&gt;</ph> type uses the Cartesian coordinate system (real, imaginary) when instantiating and manipulating complex numbers.","pos":[0,147],"source":"The <xref:System.Numerics.Complex> type uses the Cartesian coordinate system (real, imaginary) when instantiating and manipulating complex numbers."},{"content":"A complex number can be represented as a point in a two-dimensional coordinate system, which is known as the complex plane.","pos":[148,271]},{"content":"The real part of the complex number is positioned on the x-axis (the horizontal axis), and the imaginary part is positioned on the y-axis (the vertical axis).","pos":[272,430]}]}]},{"pos":[835,1018],"content":"Any point in the complex plane can also be expressed based on its absolute value, by using the polar coordinate system., In polar coordinates, a point is characterized by two numbers:","nodes":[{"content":"Any point in the complex plane can also be expressed based on its absolute value, by using the polar coordinate system., In polar coordinates, a point is characterized by two numbers:","pos":[0,183]}]},{"pos":[1028,1168],"content":"Its magnitude, which is the distance of the point from the origin (that is, 0,0, or the point at which the x-axis and the y-axis intersect).","nodes":[{"content":"Its magnitude, which is the distance of the point from the origin (that is, 0,0, or the point at which the x-axis and the y-axis intersect).","pos":[0,140]}]},{"pos":[1178,1278],"content":"Its phase, which is the angle between the real axis and the line drawn from the origin to the point.","nodes":[{"content":"Its phase, which is the angle between the real axis and the line drawn from the origin to the point.","pos":[0,100]}]},{"pos":[1287,1317],"content":"Instantiating a Complex Number","linkify":"Instantiating a Complex Number","nodes":[{"content":"Instantiating a Complex Number","pos":[0,30]}]},{"pos":[1321,1393],"content":"You can assign a value to a complex number in one of the following ways:","nodes":[{"content":"You can assign a value to a complex number in one of the following ways:","pos":[0,72]}]},{"pos":[1403,1691],"content":"By passing two <xref:System.Double> values to its constructor. The first value represents the real part of the complex number, and the second value represents its imaginary part. These values represent the position of the complex number in the two-dimensional Cartesian coordinate system.","nodes":[{"content":"By passing two <xref:System.Double> values to its constructor. The first value represents the real part of the complex number, and the second value represents its imaginary part. These values represent the position of the complex number in the two-dimensional Cartesian coordinate system.","pos":[0,288],"nodes":[{"content":"By passing two <ph id=\"ph1\">&lt;xref:System.Double&gt;</ph> values to its constructor.","pos":[0,62],"source":"By passing two <xref:System.Double> values to its constructor."},{"content":"The first value represents the real part of the complex number, and the second value represents its imaginary part.","pos":[63,178]},{"content":"These values represent the position of the complex number in the two-dimensional Cartesian coordinate system.","pos":[179,288]}]}]},{"pos":[1701,1891],"content":"By calling the static (<ph id=\"ph1\">`Shared`</ph> in Visual Basic) <ph id=\"ph2\">&lt;xref:System.Numerics.Complex.FromPolarCoordinates%2A?displayProperty=fullName&gt;</ph> method to create a complex number from its polar coordinates.","source":"By calling the static (`Shared` in Visual Basic) <xref:System.Numerics.Complex.FromPolarCoordinates%2A?displayProperty=fullName> method to create a complex number from its polar coordinates."},{"pos":[1901,2269],"content":"By assigning a <xref:System.Byte>, <xref:System.SByte>, <xref:System.Int16>, <xref:System.UInt16>, <xref:System.Int32>, <xref:System.UInt32>, <xref:System.Int64>, <xref:System.UInt64>, <xref:System.Single>, or <xref:System.Double> value to a <xref:System.Numerics.Complex> object. The value becomes the real part of the complex number, and its imaginary part equals 0.","nodes":[{"content":"By assigning a <xref:System.Byte>, <xref:System.SByte>, <xref:System.Int16>, <xref:System.UInt16>, <xref:System.Int32>, <xref:System.UInt32>, <xref:System.Int64>, <xref:System.UInt64>, <xref:System.Single>, or <xref:System.Double> value to a <xref:System.Numerics.Complex> object. The value becomes the real part of the complex number, and its imaginary part equals 0.","pos":[0,368],"nodes":[{"content":"By assigning a <ph id=\"ph1\">&lt;xref:System.Byte&gt;</ph>, <ph id=\"ph2\">&lt;xref:System.SByte&gt;</ph>, <ph id=\"ph3\">&lt;xref:System.Int16&gt;</ph>, <ph id=\"ph4\">&lt;xref:System.UInt16&gt;</ph>, <ph id=\"ph5\">&lt;xref:System.Int32&gt;</ph>, <ph id=\"ph6\">&lt;xref:System.UInt32&gt;</ph>, <ph id=\"ph7\">&lt;xref:System.Int64&gt;</ph>, <ph id=\"ph8\">&lt;xref:System.UInt64&gt;</ph>, <ph id=\"ph9\">&lt;xref:System.Single&gt;</ph>, or <ph id=\"ph10\">&lt;xref:System.Double&gt;</ph> value to a <ph id=\"ph11\">&lt;xref:System.Numerics.Complex&gt;</ph> object.","pos":[0,280],"source":"By assigning a <xref:System.Byte>, <xref:System.SByte>, <xref:System.Int16>, <xref:System.UInt16>, <xref:System.Int32>, <xref:System.UInt32>, <xref:System.Int64>, <xref:System.UInt64>, <xref:System.Single>, or <xref:System.Double> value to a <xref:System.Numerics.Complex> object."},{"content":"The value becomes the real part of the complex number, and its imaginary part equals 0.","pos":[281,368]}]}]},{"pos":[2279,2528],"content":"By casting (in C#) or converting (in Visual Basic) a <xref:System.Decimal> or <xref:System.Numerics.BigInteger> value to a <xref:System.Numerics.Complex> object. The value becomes the real part of the complex number, and its imaginary part equals 0.","nodes":[{"content":"By casting (in C#) or converting (in Visual Basic) a <xref:System.Decimal> or <xref:System.Numerics.BigInteger> value to a <xref:System.Numerics.Complex> object. The value becomes the real part of the complex number, and its imaginary part equals 0.","pos":[0,249],"nodes":[{"content":"By casting (in C#) or converting (in Visual Basic) a <ph id=\"ph1\">&lt;xref:System.Decimal&gt;</ph> or <ph id=\"ph2\">&lt;xref:System.Numerics.BigInteger&gt;</ph> value to a <ph id=\"ph3\">&lt;xref:System.Numerics.Complex&gt;</ph> object.","pos":[0,161],"source":"By casting (in C#) or converting (in Visual Basic) a <xref:System.Decimal> or <xref:System.Numerics.BigInteger> value to a <xref:System.Numerics.Complex> object."},{"content":"The value becomes the real part of the complex number, and its imaginary part equals 0.","pos":[162,249]}]}]},{"pos":[2538,2956],"content":"By assigning the complex number that is returned by a method or operator to a <xref:System.Numerics.Complex> object. For example, <xref:System.Numerics.Complex.Add%2A?displayProperty=fullName> is a static method that returns a complex number that is the sum of two complex numbers, and the <xref:System.Numerics.Complex.op_Addition%2A?displayProperty=fullName> operator adds two complex numbers and returns the result.","nodes":[{"content":"By assigning the complex number that is returned by a method or operator to a <xref:System.Numerics.Complex> object. For example, <xref:System.Numerics.Complex.Add%2A?displayProperty=fullName> is a static method that returns a complex number that is the sum of two complex numbers, and the <xref:System.Numerics.Complex.op_Addition%2A?displayProperty=fullName> operator adds two complex numbers and returns the result.","pos":[0,418],"nodes":[{"content":"By assigning the complex number that is returned by a method or operator to a <ph id=\"ph1\">&lt;xref:System.Numerics.Complex&gt;</ph> object.","pos":[0,116],"source":"By assigning the complex number that is returned by a method or operator to a <xref:System.Numerics.Complex> object."},{"content":"For example, <ph id=\"ph1\">&lt;xref:System.Numerics.Complex.Add%2A?displayProperty=fullName&gt;</ph> is a static method that returns a complex number that is the sum of two complex numbers, and the <ph id=\"ph2\">&lt;xref:System.Numerics.Complex.op_Addition%2A?displayProperty=fullName&gt;</ph> operator adds two complex numbers and returns the result.","pos":[117,418],"source":" For example, <xref:System.Numerics.Complex.Add%2A?displayProperty=fullName> is a static method that returns a complex number that is the sum of two complex numbers, and the <xref:System.Numerics.Complex.op_Addition%2A?displayProperty=fullName> operator adds two complex numbers and returns the result."}]}]},{"pos":[2963,3063],"content":"The following example demonstrates each of these five ways of assigning a value to a complex number.","nodes":[{"content":"The following example demonstrates each of these five ways of assigning a value to a complex number.","pos":[0,100]}]},{"pos":[3070,3359],"content":"<bpt id=\"p1\">[!code-csharp</bpt><bpt id=\"p2\">[</bpt>System.Numerics.Complex.Class#2<ept id=\"p2\">](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.numerics.complex.class/cs/create1.cs#2)</ept><ept id=\"p1\">]</ept> <bpt id=\"p3\">[!code-vb</bpt><bpt id=\"p4\">[</bpt>System.Numerics.Complex.Class#2<ept id=\"p4\">](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.numerics.complex.class/vb/create1.vb#2)</ept><ept id=\"p3\">]</ept>","leadings":[""," "],"source":"[!code-csharp[System.Numerics.Complex.Class#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.numerics.complex.class/cs/create1.cs#2)]\n[!code-vb[System.Numerics.Complex.Class#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.numerics.complex.class/vb/create1.vb#2)]"},{"pos":[3368,3399],"content":"Operations with Complex Numbers","linkify":"Operations with Complex Numbers","nodes":[{"content":"Operations with Complex Numbers","pos":[0,31]}]},{"pos":[3403,3528],"content":"The <xref:System.Numerics.Complex> structure in the .NET Framework includes members that provide the following functionality:","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Numerics.Complex&gt;</ph> structure in the .NET Framework includes members that provide the following functionality:","pos":[0,125],"source":"The <xref:System.Numerics.Complex> structure in the .NET Framework includes members that provide the following functionality:"}]},{"pos":[3538,3613],"content":"Methods to compare two complex numbers to determine whether they are equal.","nodes":[{"content":"Methods to compare two complex numbers to determine whether they are equal.","pos":[0,75]}]},{"pos":[3623,3838],"content":"Operators to perform arithmetic operations on complex numbers. <xref:System.Numerics.Complex> operators enable you to perform addition, subtraction, multiplication, division, and unary negation with complex numbers.","nodes":[{"content":"Operators to perform arithmetic operations on complex numbers. <xref:System.Numerics.Complex> operators enable you to perform addition, subtraction, multiplication, division, and unary negation with complex numbers.","pos":[0,215],"nodes":[{"content":"Operators to perform arithmetic operations on complex numbers.","pos":[0,62]},{"content":"<ph id=\"ph1\">&lt;xref:System.Numerics.Complex&gt;</ph> operators enable you to perform addition, subtraction, multiplication, division, and unary negation with complex numbers.","pos":[63,215],"source":" <xref:System.Numerics.Complex> operators enable you to perform addition, subtraction, multiplication, division, and unary negation with complex numbers."}]}]},{"pos":[3848,4109],"content":"Methods to perform other numerical operations on complex numbers. In addition to the four basic arithmetic operations, you can raise a complex number to a specified power, find the square root of a complex number, and get the absolute value of a complex number.","nodes":[{"content":"Methods to perform other numerical operations on complex numbers. In addition to the four basic arithmetic operations, you can raise a complex number to a specified power, find the square root of a complex number, and get the absolute value of a complex number.","pos":[0,261],"nodes":[{"content":"Methods to perform other numerical operations on complex numbers.","pos":[0,65]},{"content":"In addition to the four basic arithmetic operations, you can raise a complex number to a specified power, find the square root of a complex number, and get the absolute value of a complex number.","pos":[66,261]}]}]},{"pos":[4119,4270],"content":"Methods to perform trigonometric operations on complex numbers. For example, you can calculate the tangent of an angle represented by a complex number.","nodes":[{"content":"Methods to perform trigonometric operations on complex numbers. For example, you can calculate the tangent of an angle represented by a complex number.","pos":[0,151],"nodes":[{"content":"Methods to perform trigonometric operations on complex numbers.","pos":[0,63]},{"content":"For example, you can calculate the tangent of an angle represented by a complex number.","pos":[64,151]}]}]},{"pos":[4277,4695],"content":"Note that, because the <xref:System.Numerics.Complex.Real%2A> and  <xref:System.Numerics.Complex.Imaginary%2A> properties are read-only, you cannot modify the value of an existing <xref:System.Numerics.Complex> object.  All methods that perform an operation on a <xref:System.Numerics.Complex> number, if their return value is of type <xref:System.Numerics.Complex>, return a new <xref:System.Numerics.Complex> number.","nodes":[{"content":"Note that, because the <xref:System.Numerics.Complex.Real%2A> and  <xref:System.Numerics.Complex.Imaginary%2A> properties are read-only, you cannot modify the value of an existing <xref:System.Numerics.Complex> object.  All methods that perform an operation on a <xref:System.Numerics.Complex> number, if their return value is of type <xref:System.Numerics.Complex>, return a new <xref:System.Numerics.Complex> number.","pos":[0,418],"nodes":[{"content":"Note that, because the <ph id=\"ph1\">&lt;xref:System.Numerics.Complex.Real%2A&gt;</ph> and  <ph id=\"ph2\">&lt;xref:System.Numerics.Complex.Imaginary%2A&gt;</ph> properties are read-only, you cannot modify the value of an existing <ph id=\"ph3\">&lt;xref:System.Numerics.Complex&gt;</ph> object.","pos":[0,218],"source":"Note that, because the <xref:System.Numerics.Complex.Real%2A> and  <xref:System.Numerics.Complex.Imaginary%2A> properties are read-only, you cannot modify the value of an existing <xref:System.Numerics.Complex> object."},{"content":"All methods that perform an operation on a <ph id=\"ph1\">&lt;xref:System.Numerics.Complex&gt;</ph> number, if their return value is of type <ph id=\"ph2\">&lt;xref:System.Numerics.Complex&gt;</ph>, return a new <ph id=\"ph3\">&lt;xref:System.Numerics.Complex&gt;</ph> number.","pos":[220,418],"source":"  All methods that perform an operation on a <xref:System.Numerics.Complex> number, if their return value is of type <xref:System.Numerics.Complex>, return a new <xref:System.Numerics.Complex> number."}]}]},{"pos":[4704,4733],"content":"Precision and Complex Numbers","linkify":"Precision and Complex Numbers","nodes":[{"content":"Precision and Complex Numbers","pos":[0,29]}]},{"pos":[4737,5232],"content":"The real and imaginary parts of a complex number are represented by two double-precision floating-point values. This means that <xref:System.Numerics.Complex> values, like double-precision floating-point values, can lose precision as a result of numerical operations. This means that strict comparisons for equality of two <xref:System.Numerics.Complex> values may fail, even if the difference between the two values is due to a loss of precision. For more information, see <xref:System.Double>.","nodes":[{"content":"The real and imaginary parts of a complex number are represented by two double-precision floating-point values. This means that <xref:System.Numerics.Complex> values, like double-precision floating-point values, can lose precision as a result of numerical operations. This means that strict comparisons for equality of two <xref:System.Numerics.Complex> values may fail, even if the difference between the two values is due to a loss of precision. For more information, see <xref:System.Double>.","pos":[0,495],"nodes":[{"content":"The real and imaginary parts of a complex number are represented by two double-precision floating-point values.","pos":[0,111]},{"content":"This means that <ph id=\"ph1\">&lt;xref:System.Numerics.Complex&gt;</ph> values, like double-precision floating-point values, can lose precision as a result of numerical operations.","pos":[112,267],"source":" This means that <xref:System.Numerics.Complex> values, like double-precision floating-point values, can lose precision as a result of numerical operations."},{"content":"This means that strict comparisons for equality of two <ph id=\"ph1\">&lt;xref:System.Numerics.Complex&gt;</ph> values may fail, even if the difference between the two values is due to a loss of precision.","pos":[268,447],"source":" This means that strict comparisons for equality of two <xref:System.Numerics.Complex> values may fail, even if the difference between the two values is due to a loss of precision."},{"content":"For more information, see <ph id=\"ph1\">&lt;xref:System.Double&gt;</ph>.","pos":[448,495],"source":" For more information, see <xref:System.Double>."}]}]},{"pos":[5239,5503],"content":"For example, performing exponentiation on the logarithm of a number should return the original number. However, in some cases, the loss of precision of floating-point values can cause slight differences between the two values, as the following example illustrates.","nodes":[{"content":"For example, performing exponentiation on the logarithm of a number should return the original number. However, in some cases, the loss of precision of floating-point values can cause slight differences between the two values, as the following example illustrates.","pos":[0,264],"nodes":[{"content":"For example, performing exponentiation on the logarithm of a number should return the original number.","pos":[0,102]},{"content":"However, in some cases, the loss of precision of floating-point values can cause slight differences between the two values, as the following example illustrates.","pos":[103,264]}]}]},{"pos":[5510,5805],"content":"<bpt id=\"p1\">[!code-csharp</bpt><bpt id=\"p2\">[</bpt>System.Numerics.Complex.Class#5<ept id=\"p2\">](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.numerics.complex.class/cs/precision1.cs#5)</ept><ept id=\"p1\">]</ept> <bpt id=\"p3\">[!code-vb</bpt><bpt id=\"p4\">[</bpt>System.Numerics.Complex.Class#5<ept id=\"p4\">](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.numerics.complex.class/vb/precision1.vb#5)</ept><ept id=\"p3\">]</ept>","source":"[!code-csharp[System.Numerics.Complex.Class#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.numerics.complex.class/cs/precision1.cs#5)]\n [!code-vb[System.Numerics.Complex.Class#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.numerics.complex.class/vb/precision1.vb#5)]"},{"pos":[5812,6013],"content":"Similarly, the following example, which calculates the square root of a <xref:System.Numerics.Complex> number, produces slightly different results on the 32-bit and IA64 versions of the .NET Framework.","nodes":[{"content":"Similarly, the following example, which calculates the square root of a <ph id=\"ph1\">&lt;xref:System.Numerics.Complex&gt;</ph> number, produces slightly different results on the 32-bit and IA64 versions of the .NET Framework.","pos":[0,201],"source":"Similarly, the following example, which calculates the square root of a <xref:System.Numerics.Complex> number, produces slightly different results on the 32-bit and IA64 versions of the .NET Framework."}]},{"pos":[6020,6315],"content":"<bpt id=\"p1\">[!code-csharp</bpt><bpt id=\"p2\">[</bpt>System.Numerics.Complex.Class#6<ept id=\"p2\">](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.numerics.complex.class/cs/precision1.cs#6)</ept><ept id=\"p1\">]</ept> <bpt id=\"p3\">[!code-vb</bpt><bpt id=\"p4\">[</bpt>System.Numerics.Complex.Class#6<ept id=\"p4\">](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.numerics.complex.class/vb/precision1.vb#6)</ept><ept id=\"p3\">]</ept>","source":"[!code-csharp[System.Numerics.Complex.Class#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.numerics.complex.class/cs/precision1.cs#6)]\n [!code-vb[System.Numerics.Complex.Class#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.numerics.complex.class/vb/precision1.vb#6)]"},{"pos":[6324,6358],"content":"Complex Numbers, Infinity, and NaN","linkify":"Complex Numbers, Infinity, and NaN","nodes":[{"content":"Complex Numbers, Infinity, and NaN","pos":[0,34]}]},{"pos":[6362,7091],"content":"The real and imaginary parts of a complex number are represented by <xref:System.Double> values. In addition to ranging from <xref:System.Double.MinValue?displayProperty=fullName> to <xref:System.Double.MaxValue?displayProperty=fullName>, the real or imaginary part of a complex number can have a value of <xref:System.Double.PositiveInfinity?displayProperty=fullName>, <xref:System.Double.NegativeInfinity?displayProperty=fullName>, or <xref:System.Double.NaN?displayProperty=fullName>. <xref:System.Double.PositiveInfinity?displayProperty=fullName>, <xref:System.Double.NegativeInfinity?displayProperty=fullName>, and <xref:System.Double.NaN?displayProperty=fullName> all propagate in any arithmetic or trigonometric operation.","nodes":[{"content":"The real and imaginary parts of a complex number are represented by <xref:System.Double> values. In addition to ranging from <xref:System.Double.MinValue?displayProperty=fullName> to <xref:System.Double.MaxValue?displayProperty=fullName>, the real or imaginary part of a complex number can have a value of <xref:System.Double.PositiveInfinity?displayProperty=fullName>, <xref:System.Double.NegativeInfinity?displayProperty=fullName>, or <xref:System.Double.NaN?displayProperty=fullName>. <xref:System.Double.PositiveInfinity?displayProperty=fullName>, <xref:System.Double.NegativeInfinity?displayProperty=fullName>, and <xref:System.Double.NaN?displayProperty=fullName> all propagate in any arithmetic or trigonometric operation.","pos":[0,729],"nodes":[{"content":"The real and imaginary parts of a complex number are represented by <ph id=\"ph1\">&lt;xref:System.Double&gt;</ph> values.","pos":[0,96],"source":"The real and imaginary parts of a complex number are represented by <xref:System.Double> values."},{"content":"In addition to ranging from <ph id=\"ph1\">&lt;xref:System.Double.MinValue?displayProperty=fullName&gt;</ph> to <ph id=\"ph2\">&lt;xref:System.Double.MaxValue?displayProperty=fullName&gt;</ph>, the real or imaginary part of a complex number can have a value of <ph id=\"ph3\">&lt;xref:System.Double.PositiveInfinity?displayProperty=fullName&gt;</ph>, <ph id=\"ph4\">&lt;xref:System.Double.NegativeInfinity?displayProperty=fullName&gt;</ph>, or <ph id=\"ph5\">&lt;xref:System.Double.NaN?displayProperty=fullName&gt;</ph>.","pos":[97,487],"source":" In addition to ranging from <xref:System.Double.MinValue?displayProperty=fullName> to <xref:System.Double.MaxValue?displayProperty=fullName>, the real or imaginary part of a complex number can have a value of <xref:System.Double.PositiveInfinity?displayProperty=fullName>, <xref:System.Double.NegativeInfinity?displayProperty=fullName>, or <xref:System.Double.NaN?displayProperty=fullName>."},{"content":"<ph id=\"ph1\">&lt;xref:System.Double.PositiveInfinity?displayProperty=fullName&gt;</ph>, <ph id=\"ph2\">&lt;xref:System.Double.NegativeInfinity?displayProperty=fullName&gt;</ph>, and <ph id=\"ph3\">&lt;xref:System.Double.NaN?displayProperty=fullName&gt;</ph> all propagate in any arithmetic or trigonometric operation.","pos":[488,729],"source":" <xref:System.Double.PositiveInfinity?displayProperty=fullName>, <xref:System.Double.NegativeInfinity?displayProperty=fullName>, and <xref:System.Double.NaN?displayProperty=fullName> all propagate in any arithmetic or trigonometric operation."}]}]},{"pos":[7098,7988],"content":"In the following example, division by <xref:System.Numerics.Complex.Zero> produces a complex number whose real and imaginary parts are both <xref:System.Double.NaN?displayProperty=fullName>. As a result, performing multiplication with this value also produces a complex number whose real and imaginary parts are <xref:System.Double.NaN?displayProperty=fullName>. Similarly, performing a multiplication that overflows the range of the <xref:System.Double> type produces a complex number whose real part is <xref:System.Double.NaN?displayProperty=fullName> and whose imaginary part is <xref:System.Double.PositiveInfinity?displayProperty=fullName>. Subsequently performing division with this complex number returns a complex number whose real part is <xref:System.Double.NaN?displayProperty=fullName> and whose imaginary part is <xref:System.Double.PositiveInfinity?displayProperty=fullName>.","nodes":[{"content":"In the following example, division by <xref:System.Numerics.Complex.Zero> produces a complex number whose real and imaginary parts are both <xref:System.Double.NaN?displayProperty=fullName>. As a result, performing multiplication with this value also produces a complex number whose real and imaginary parts are <xref:System.Double.NaN?displayProperty=fullName>. Similarly, performing a multiplication that overflows the range of the <xref:System.Double> type produces a complex number whose real part is <xref:System.Double.NaN?displayProperty=fullName> and whose imaginary part is <xref:System.Double.PositiveInfinity?displayProperty=fullName>. Subsequently performing division with this complex number returns a complex number whose real part is <xref:System.Double.NaN?displayProperty=fullName> and whose imaginary part is <xref:System.Double.PositiveInfinity?displayProperty=fullName>.","pos":[0,890],"nodes":[{"content":"In the following example, division by <ph id=\"ph1\">&lt;xref:System.Numerics.Complex.Zero&gt;</ph> produces a complex number whose real and imaginary parts are both <ph id=\"ph2\">&lt;xref:System.Double.NaN?displayProperty=fullName&gt;</ph>.","pos":[0,190],"source":"In the following example, division by <xref:System.Numerics.Complex.Zero> produces a complex number whose real and imaginary parts are both <xref:System.Double.NaN?displayProperty=fullName>."},{"content":"As a result, performing multiplication with this value also produces a complex number whose real and imaginary parts are <ph id=\"ph1\">&lt;xref:System.Double.NaN?displayProperty=fullName&gt;</ph>.","pos":[191,362],"source":" As a result, performing multiplication with this value also produces a complex number whose real and imaginary parts are <xref:System.Double.NaN?displayProperty=fullName>."},{"content":"Similarly, performing a multiplication that overflows the range of the <ph id=\"ph1\">&lt;xref:System.Double&gt;</ph> type produces a complex number whose real part is <ph id=\"ph2\">&lt;xref:System.Double.NaN?displayProperty=fullName&gt;</ph> and whose imaginary part is <ph id=\"ph3\">&lt;xref:System.Double.PositiveInfinity?displayProperty=fullName&gt;</ph>.","pos":[363,646],"source":" Similarly, performing a multiplication that overflows the range of the <xref:System.Double> type produces a complex number whose real part is <xref:System.Double.NaN?displayProperty=fullName> and whose imaginary part is <xref:System.Double.PositiveInfinity?displayProperty=fullName>."},{"content":"Subsequently performing division with this complex number returns a complex number whose real part is <ph id=\"ph1\">&lt;xref:System.Double.NaN?displayProperty=fullName&gt;</ph> and whose imaginary part is <ph id=\"ph2\">&lt;xref:System.Double.PositiveInfinity?displayProperty=fullName&gt;</ph>.","pos":[647,890],"source":" Subsequently performing division with this complex number returns a complex number whose real part is <xref:System.Double.NaN?displayProperty=fullName> and whose imaginary part is <xref:System.Double.PositiveInfinity?displayProperty=fullName>."}]}]},{"pos":[7995,8278],"content":"<bpt id=\"p1\">[!code-csharp</bpt><bpt id=\"p2\">[</bpt>System.Numerics.Complex.Class#3<ept id=\"p2\">](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.numerics.complex.class/cs/nan1.cs#3)</ept><ept id=\"p1\">]</ept> <bpt id=\"p3\">[!code-vb</bpt><bpt id=\"p4\">[</bpt>System.Numerics.Complex.Class#3<ept id=\"p4\">](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.numerics.complex.class/vb/nan1.vb#3)</ept><ept id=\"p3\">]</ept>","source":"[!code-csharp[System.Numerics.Complex.Class#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.numerics.complex.class/cs/nan1.cs#3)]\n [!code-vb[System.Numerics.Complex.Class#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.numerics.complex.class/vb/nan1.vb#3)]"},{"pos":[8285,8674],"content":"Mathematical operations with complex numbers that are invalid or that overflow the range of the <xref:System.Double> data type do not throw an exception. Instead, they return a <xref:System.Double.PositiveInfinity?displayProperty=fullName>, <xref:System.Double.NegativeInfinity?displayProperty=fullName>, or <xref:System.Double.NaN?displayProperty=fullName> under the following conditions:","nodes":[{"content":"Mathematical operations with complex numbers that are invalid or that overflow the range of the <xref:System.Double> data type do not throw an exception. Instead, they return a <xref:System.Double.PositiveInfinity?displayProperty=fullName>, <xref:System.Double.NegativeInfinity?displayProperty=fullName>, or <xref:System.Double.NaN?displayProperty=fullName> under the following conditions:","pos":[0,389],"nodes":[{"content":"Mathematical operations with complex numbers that are invalid or that overflow the range of the <ph id=\"ph1\">&lt;xref:System.Double&gt;</ph> data type do not throw an exception.","pos":[0,153],"source":"Mathematical operations with complex numbers that are invalid or that overflow the range of the <xref:System.Double> data type do not throw an exception."},{"content":"Instead, they return a <ph id=\"ph1\">&lt;xref:System.Double.PositiveInfinity?displayProperty=fullName&gt;</ph>, <ph id=\"ph2\">&lt;xref:System.Double.NegativeInfinity?displayProperty=fullName&gt;</ph>, or <ph id=\"ph3\">&lt;xref:System.Double.NaN?displayProperty=fullName&gt;</ph> under the following conditions:","pos":[154,389],"source":" Instead, they return a <xref:System.Double.PositiveInfinity?displayProperty=fullName>, <xref:System.Double.NegativeInfinity?displayProperty=fullName>, or <xref:System.Double.NaN?displayProperty=fullName> under the following conditions:"}]}]},{"pos":[8684,8797],"content":"The division of a positive number by zero returns <xref:System.Double.PositiveInfinity?displayProperty=fullName>.","nodes":[{"content":"The division of a positive number by zero returns <ph id=\"ph1\">&lt;xref:System.Double.PositiveInfinity?displayProperty=fullName&gt;</ph>.","pos":[0,113],"source":"The division of a positive number by zero returns <xref:System.Double.PositiveInfinity?displayProperty=fullName>."}]},{"pos":[8807,8961],"content":"Any operation that overflows the upper bound of the <xref:System.Double> data type returns <xref:System.Double.PositiveInfinity?displayProperty=fullName>.","nodes":[{"content":"Any operation that overflows the upper bound of the <ph id=\"ph1\">&lt;xref:System.Double&gt;</ph> data type returns <ph id=\"ph2\">&lt;xref:System.Double.PositiveInfinity?displayProperty=fullName&gt;</ph>.","pos":[0,154],"source":"Any operation that overflows the upper bound of the <xref:System.Double> data type returns <xref:System.Double.PositiveInfinity?displayProperty=fullName>."}]},{"pos":[8971,9084],"content":"The division of a negative number by zero returns <xref:System.Double.NegativeInfinity?displayProperty=fullName>.","nodes":[{"content":"The division of a negative number by zero returns <ph id=\"ph1\">&lt;xref:System.Double.NegativeInfinity?displayProperty=fullName&gt;</ph>.","pos":[0,113],"source":"The division of a negative number by zero returns <xref:System.Double.NegativeInfinity?displayProperty=fullName>."}]},{"pos":[9094,9248],"content":"Any operation that overflows the lower bound of the <xref:System.Double> data type returns <xref:System.Double.NegativeInfinity?displayProperty=fullName>.","nodes":[{"content":"Any operation that overflows the lower bound of the <ph id=\"ph1\">&lt;xref:System.Double&gt;</ph> data type returns <ph id=\"ph2\">&lt;xref:System.Double.NegativeInfinity?displayProperty=fullName&gt;</ph>.","pos":[0,154],"source":"Any operation that overflows the lower bound of the <xref:System.Double> data type returns <xref:System.Double.NegativeInfinity?displayProperty=fullName>."}]},{"pos":[9258,9347],"content":"The division of a zero by zero returns <xref:System.Double.NaN?displayProperty=fullName>.","nodes":[{"content":"The division of a zero by zero returns <ph id=\"ph1\">&lt;xref:System.Double.NaN?displayProperty=fullName&gt;</ph>.","pos":[0,89],"source":"The division of a zero by zero returns <xref:System.Double.NaN?displayProperty=fullName>."}]},{"pos":[9357,9825],"content":"Any operation that is performed on operands whose values are <xref:System.Double.PositiveInfinity?displayProperty=fullName>, <xref:System.Double.NegativeInfinity?displayProperty=fullName>, or <xref:System.Double.NaN?displayProperty=fullName> returns <xref:System.Double.PositiveInfinity?displayProperty=fullName>, <xref:System.Double.NegativeInfinity?displayProperty=fullName>, or <xref:System.Double.NaN?displayProperty=fullName>, depending on the specific operation.","nodes":[{"content":"Any operation that is performed on operands whose values are <ph id=\"ph1\">&lt;xref:System.Double.PositiveInfinity?displayProperty=fullName&gt;</ph>, <ph id=\"ph2\">&lt;xref:System.Double.NegativeInfinity?displayProperty=fullName&gt;</ph>, or <ph id=\"ph3\">&lt;xref:System.Double.NaN?displayProperty=fullName&gt;</ph> returns <ph id=\"ph4\">&lt;xref:System.Double.PositiveInfinity?displayProperty=fullName&gt;</ph>, <ph id=\"ph5\">&lt;xref:System.Double.NegativeInfinity?displayProperty=fullName&gt;</ph>, or <ph id=\"ph6\">&lt;xref:System.Double.NaN?displayProperty=fullName&gt;</ph>, depending on the specific operation.","pos":[0,468],"source":"Any operation that is performed on operands whose values are <xref:System.Double.PositiveInfinity?displayProperty=fullName>, <xref:System.Double.NegativeInfinity?displayProperty=fullName>, or <xref:System.Double.NaN?displayProperty=fullName> returns <xref:System.Double.PositiveInfinity?displayProperty=fullName>, <xref:System.Double.NegativeInfinity?displayProperty=fullName>, or <xref:System.Double.NaN?displayProperty=fullName>, depending on the specific operation."}]},{"pos":[9832,10509],"content":"Note that this applies to any intermediate calculations performed by a method. For example, the multiplication of `new Complex(9e308, 9e308) and new Complex(2.5, 3.5)` uses the formula (ac - bd) + (ad + bc)i. The calculation of the real component that results from the multiplication evaluates the expression 9e308 * 2.5 - 9e308 * 3.5. Each intermediate multiplication in this expression returns <xref:System.Double.PositiveInfinity?displayProperty=fullName>, and the attempt to subtract <xref:System.Double.PositiveInfinity?displayProperty=fullName> from <xref:System.Double.PositiveInfinity?displayProperty=fullName> returns <xref:System.Double.NaN?displayProperty=fullName>.","nodes":[{"content":"Note that this applies to any intermediate calculations performed by a method.","pos":[0,78]},{"content":"For example, the multiplication of <ph id=\"ph1\">`new Complex(9e308, 9e308) and new Complex(2.5, 3.5)`</ph> uses the formula (ac - bd) + (ad + bc)i.","pos":[79,208],"source":" For example, the multiplication of `new Complex(9e308, 9e308) and new Complex(2.5, 3.5)` uses the formula (ac - bd) + (ad + bc)i."},{"content":"The calculation of the real component that results from the multiplication evaluates the expression 9e308 * 2.5 - 9e308 * 3.5.","pos":[209,335]},{"content":"Each intermediate multiplication in this expression returns <ph id=\"ph1\">&lt;xref:System.Double.PositiveInfinity?displayProperty=fullName&gt;</ph>, and the attempt to subtract <ph id=\"ph2\">&lt;xref:System.Double.PositiveInfinity?displayProperty=fullName&gt;</ph> from <ph id=\"ph3\">&lt;xref:System.Double.PositiveInfinity?displayProperty=fullName&gt;</ph> returns <ph id=\"ph4\">&lt;xref:System.Double.NaN?displayProperty=fullName&gt;</ph>.","pos":[336,677],"source":" Each intermediate multiplication in this expression returns <xref:System.Double.PositiveInfinity?displayProperty=fullName>, and the attempt to subtract <xref:System.Double.PositiveInfinity?displayProperty=fullName> from <xref:System.Double.PositiveInfinity?displayProperty=fullName> returns <xref:System.Double.NaN?displayProperty=fullName>."}]},{"pos":[10518,10545],"content":"Formatting a Complex Number","linkify":"Formatting a Complex Number","nodes":[{"content":"Formatting a Complex Number","pos":[0,27]}]},{"pos":[10549,11342],"content":"By default, the string representation of a complex number takes the form `(`*real*`,` *imaginary*`)`, where *real* and *imaginary* are the string representations of the <xref:System.Double> values that form the complex number's real and imaginary components. Some overloads of the <xref:System.Numerics.Complex.ToString%2A> method allow customization of the string representations of these <xref:System.Double> values to reflect the formatting conventions of a particular culture or to appear in a particular format defined by a standard or custom numeric format string. (For more information, see [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) and [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md).)","nodes":[{"content":"By default, the string representation of a complex number takes the form <ph id=\"ph1\">`(`</ph><bpt id=\"p1\">*</bpt>real<ept id=\"p1\">*</ept><ph id=\"ph2\">`,`</ph> <bpt id=\"p2\">*</bpt>imaginary<ept id=\"p2\">*</ept><ph id=\"ph3\">`)`</ph>, where <bpt id=\"p3\">*</bpt>real<ept id=\"p3\">*</ept> and <bpt id=\"p4\">*</bpt>imaginary<ept id=\"p4\">*</ept> are the string representations of the <ph id=\"ph4\">&lt;xref:System.Double&gt;</ph> values that form the complex number's real and imaginary components.","pos":[0,258],"source":"By default, the string representation of a complex number takes the form `(`*real*`,` *imaginary*`)`, where *real* and *imaginary* are the string representations of the <xref:System.Double> values that form the complex number's real and imaginary components."},{"content":"Some overloads of the <ph id=\"ph1\">&lt;xref:System.Numerics.Complex.ToString%2A&gt;</ph> method allow customization of the string representations of these <ph id=\"ph2\">&lt;xref:System.Double&gt;</ph> values to reflect the formatting conventions of a particular culture or to appear in a particular format defined by a standard or custom numeric format string.","pos":[259,570],"source":" Some overloads of the <xref:System.Numerics.Complex.ToString%2A> method allow customization of the string representations of these <xref:System.Double> values to reflect the formatting conventions of a particular culture or to appear in a particular format defined by a standard or custom numeric format string."},{"content":"(For more information, see <bpt id=\"p1\">[</bpt>Standard Numeric Format Strings<ept id=\"p1\">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept> and <bpt id=\"p2\">[</bpt>Custom Numeric Format Strings<ept id=\"p2\">](~/docs/standard/base-types/custom-numeric-format-strings.md)</ept>.)","pos":[571,793],"source":" (For more information, see [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) and [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md).)"}]},{"pos":[11349,12017],"content":"One of the more common ways of expressing the string representation of a complex number takes the form a + bi, where a is the complex number's real component, and b is the complex number's imaginary component. In electrical engineering, a complex number is most commonly expressed as a + bj. You can return the string representation of a complex number in either of these two forms. To do this, define a custom format provider by implementing the <xref:System.ICustomFormatter> and <xref:System.IFormatProvider> interfaces, and then call the <xref:System.String.Format%28System.IFormatProvider%2CSystem.String%2CSystem.Object%5B%5D%29?displayProperty=fullName> method.","nodes":[{"content":"One of the more common ways of expressing the string representation of a complex number takes the form a + bi, where a is the complex number's real component, and b is the complex number's imaginary component. In electrical engineering, a complex number is most commonly expressed as a + bj. You can return the string representation of a complex number in either of these two forms. To do this, define a custom format provider by implementing the <xref:System.ICustomFormatter> and <xref:System.IFormatProvider> interfaces, and then call the <xref:System.String.Format%28System.IFormatProvider%2CSystem.String%2CSystem.Object%5B%5D%29?displayProperty=fullName> method.","pos":[0,668],"nodes":[{"content":"One of the more common ways of expressing the string representation of a complex number takes the form a + bi, where a is the complex number's real component, and b is the complex number's imaginary component.","pos":[0,209]},{"content":"In electrical engineering, a complex number is most commonly expressed as a + bj.","pos":[210,291]},{"content":"You can return the string representation of a complex number in either of these two forms.","pos":[292,382]},{"content":"To do this, define a custom format provider by implementing the <ph id=\"ph1\">&lt;xref:System.ICustomFormatter&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.IFormatProvider&gt;</ph> interfaces, and then call the <ph id=\"ph3\">&lt;xref:System.String.Format%28System.IFormatProvider%2CSystem.String%2CSystem.Object%5B%5D%29?displayProperty=fullName&gt;</ph> method.","pos":[383,668],"source":" To do this, define a custom format provider by implementing the <xref:System.ICustomFormatter> and <xref:System.IFormatProvider> interfaces, and then call the <xref:System.String.Format%28System.IFormatProvider%2CSystem.String%2CSystem.Object%5B%5D%29?displayProperty=fullName> method."}]}]},{"pos":[12024,12165],"content":"The following example defines a <ph id=\"ph1\">`ComplexFormatter`</ph> class that represents a complex number as a string in the form of either a + bi or a + bj.","source":"The following example defines a `ComplexFormatter` class that represents a complex number as a string in the form of either a + bi or a + bj."},{"pos":[12172,12467],"content":"<bpt id=\"p1\">[!code-csharp</bpt><bpt id=\"p2\">[</bpt>System.Numerics.Complex.Class#1<ept id=\"p2\">](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.numerics.complex.class/cs/customfmt1.cs#1)</ept><ept id=\"p1\">]</ept> <bpt id=\"p3\">[!code-vb</bpt><bpt id=\"p4\">[</bpt>System.Numerics.Complex.Class#1<ept id=\"p4\">](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.numerics.complex.class/vb/customfmt1.vb#1)</ept><ept id=\"p3\">]</ept>","source":"[!code-csharp[System.Numerics.Complex.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.numerics.complex.class/cs/customfmt1.cs#1)]\n [!code-vb[System.Numerics.Complex.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.numerics.complex.class/vb/customfmt1.vb#1)]"},{"pos":[12474,12585],"content":"The following example then uses this custom formatter to display the string representation of a complex number.","nodes":[{"content":"The following example then uses this custom formatter to display the string representation of a complex number.","pos":[0,111]}]},{"pos":[12592,12887],"content":"<bpt id=\"p1\">[!code-csharp</bpt><bpt id=\"p2\">[</bpt>System.Numerics.Complex.Class#4<ept id=\"p2\">](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.numerics.complex.class/cs/customfmt1.cs#4)</ept><ept id=\"p1\">]</ept> <bpt id=\"p3\">[!code-vb</bpt><bpt id=\"p4\">[</bpt>System.Numerics.Complex.Class#4<ept id=\"p4\">](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.numerics.complex.class/vb/customfmt1.vb#4)</ept><ept id=\"p3\">]</ept>","source":"[!code-csharp[System.Numerics.Complex.Class#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.numerics.complex.class/cs/customfmt1.cs#4)]\n [!code-vb[System.Numerics.Complex.Class#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.numerics.complex.class/vb/customfmt1.vb#4)]"}],"pos":[4321,17302],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.Numerics.Complex\"></xref> structure using the specified real and imaginary values.","nodes":[{"pos":[0,135],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Numerics.Complex\"&gt;&lt;/xref&gt;</ph> structure using the specified real and imaginary values.","source":"Initializes a new instance of the <xref href=\"System.Numerics.Complex\"></xref> structure using the specified real and imaginary values."}],"pos":[19023,19159],"yaml":true},{"content":"The `real` or `imaginary` arguments may lose precision if they are data types that require an explicit cast to <xref:System.Double>.","nodes":[{"pos":[0,132],"content":"The <ph id=\"ph1\">`real`</ph> or <ph id=\"ph2\">`imaginary`</ph> arguments may lose precision if they are data types that require an explicit cast to <ph id=\"ph3\">&lt;xref:System.Double&gt;</ph>.","source":"The `real` or `imaginary` arguments may lose precision if they are data types that require an explicit cast to <xref:System.Double>."}],"pos":[19170,19303],"yaml":true,"extradata":"MT"},{"content":"The real part of the complex number.","nodes":[{"pos":[0,36],"content":"The real part of the complex number.","nodes":[{"content":"The real part of the complex number.","pos":[0,36]}]}],"pos":[19900,19937],"yaml":true},{"content":"The imaginary part of the complex number.","nodes":[{"pos":[0,41],"content":"The imaginary part of the complex number.","nodes":[{"content":"The imaginary part of the complex number.","pos":[0,41]}]}],"pos":[20002,20044],"yaml":true},{"content":"Gets the absolute value (or magnitude) of a complex number.","nodes":[{"pos":[0,59],"content":"Gets the absolute value (or magnitude) of a complex number.","nodes":[{"content":"Gets the absolute value (or magnitude) of a complex number.","pos":[0,59]}]}],"pos":[21529,21589],"yaml":true},{"content":"The absolute value of a complex number is equivalent to its <xref:System.Numerics.Complex.Magnitude%2A> property. The absolute value of a real number a + bi is calculated as follows:  \n  \n-   If b = 0, the result is 0.  \n  \n-   If a > b, the result is a *<xref:System.Math.Sqrt%2A?displayProperty=fullName>(1 + b<sup>2</sup>/a<sup>2</sup>).  \n  \n-   If b > a, the result is b * <xref:System.Math.Sqrt%2A?displayProperty=fullName>(1 + a<sup>2</sup>/b<sup>2</sup>).  \n  \n If the calculation of the absolute value results in an overflow, the method returns either <xref:System.Double.PositiveInfinity?displayProperty=fullName> or <xref:System.Double.NegativeInfinity?displayProperty=fullName>. If either the <xref:System.Numerics.Complex.Real%2A> or <xref:System.Numerics.Complex.Imaginary%2A> property is <xref:System.Double.NaN?displayProperty=fullName> and the other property is neither <xref:System.Double.PositiveInfinity?displayProperty=fullName> nor <xref:System.Double.NegativeInfinity?displayProperty=fullName>, the method returns <xref:System.Double.NaN?displayProperty=fullName>.","nodes":[{"pos":[0,182],"content":"The absolute value of a complex number is equivalent to its <xref:System.Numerics.Complex.Magnitude%2A> property. The absolute value of a real number a + bi is calculated as follows:","nodes":[{"content":"The absolute value of a complex number is equivalent to its <xref:System.Numerics.Complex.Magnitude%2A> property. The absolute value of a real number a + bi is calculated as follows:","pos":[0,182],"nodes":[{"content":"The absolute value of a complex number is equivalent to its <ph id=\"ph1\">&lt;xref:System.Numerics.Complex.Magnitude%2A&gt;</ph> property.","pos":[0,113],"source":"The absolute value of a complex number is equivalent to its <xref:System.Numerics.Complex.Magnitude%2A> property."},{"content":"The absolute value of a real number a + bi is calculated as follows:","pos":[114,182]}]}]},{"pos":[192,218],"content":"If b = 0, the result is 0.","nodes":[{"content":"If b = 0, the result is 0.","pos":[0,26]}]},{"pos":[228,340],"content":"If a &gt; b, the result is a *<ph id=\"ph1\">&lt;xref:System.Math.Sqrt%2A?displayProperty=fullName&gt;</ph>(1 + b<bpt id=\"p1\">&lt;sup&gt;</bpt>2<ept id=\"p1\">&lt;/sup&gt;</ept>/a<bpt id=\"p2\">&lt;sup&gt;</bpt>2<ept id=\"p2\">&lt;/sup&gt;</ept>).","source":"If a > b, the result is a *<xref:System.Math.Sqrt%2A?displayProperty=fullName>(1 + b<sup>2</sup>/a<sup>2</sup>)."},{"pos":[350,463],"content":"If b &gt; a, the result is b * <ph id=\"ph1\">&lt;xref:System.Math.Sqrt%2A?displayProperty=fullName&gt;</ph>(1 + a<bpt id=\"p1\">&lt;sup&gt;</bpt>2<ept id=\"p1\">&lt;/sup&gt;</ept>/b<bpt id=\"p2\">&lt;sup&gt;</bpt>2<ept id=\"p2\">&lt;/sup&gt;</ept>).","source":"If b > a, the result is b * <xref:System.Math.Sqrt%2A?displayProperty=fullName>(1 + a<sup>2</sup>/b<sup>2</sup>)."},{"pos":[470,1087],"content":"If the calculation of the absolute value results in an overflow, the method returns either <xref:System.Double.PositiveInfinity?displayProperty=fullName> or <xref:System.Double.NegativeInfinity?displayProperty=fullName>. If either the <xref:System.Numerics.Complex.Real%2A> or <xref:System.Numerics.Complex.Imaginary%2A> property is <xref:System.Double.NaN?displayProperty=fullName> and the other property is neither <xref:System.Double.PositiveInfinity?displayProperty=fullName> nor <xref:System.Double.NegativeInfinity?displayProperty=fullName>, the method returns <xref:System.Double.NaN?displayProperty=fullName>.","nodes":[{"content":"If the calculation of the absolute value results in an overflow, the method returns either <xref:System.Double.PositiveInfinity?displayProperty=fullName> or <xref:System.Double.NegativeInfinity?displayProperty=fullName>. If either the <xref:System.Numerics.Complex.Real%2A> or <xref:System.Numerics.Complex.Imaginary%2A> property is <xref:System.Double.NaN?displayProperty=fullName> and the other property is neither <xref:System.Double.PositiveInfinity?displayProperty=fullName> nor <xref:System.Double.NegativeInfinity?displayProperty=fullName>, the method returns <xref:System.Double.NaN?displayProperty=fullName>.","pos":[0,617],"nodes":[{"content":"If the calculation of the absolute value results in an overflow, the method returns either <ph id=\"ph1\">&lt;xref:System.Double.PositiveInfinity?displayProperty=fullName&gt;</ph> or <ph id=\"ph2\">&lt;xref:System.Double.NegativeInfinity?displayProperty=fullName&gt;</ph>.","pos":[0,220],"source":"If the calculation of the absolute value results in an overflow, the method returns either <xref:System.Double.PositiveInfinity?displayProperty=fullName> or <xref:System.Double.NegativeInfinity?displayProperty=fullName>."},{"content":"If either the <ph id=\"ph1\">&lt;xref:System.Numerics.Complex.Real%2A&gt;</ph> or <ph id=\"ph2\">&lt;xref:System.Numerics.Complex.Imaginary%2A&gt;</ph> property is <ph id=\"ph3\">&lt;xref:System.Double.NaN?displayProperty=fullName&gt;</ph> and the other property is neither <ph id=\"ph4\">&lt;xref:System.Double.PositiveInfinity?displayProperty=fullName&gt;</ph> nor <ph id=\"ph5\">&lt;xref:System.Double.NegativeInfinity?displayProperty=fullName&gt;</ph>, the method returns <ph id=\"ph6\">&lt;xref:System.Double.NaN?displayProperty=fullName&gt;</ph>.","pos":[221,617],"source":" If either the <xref:System.Numerics.Complex.Real%2A> or <xref:System.Numerics.Complex.Imaginary%2A> property is <xref:System.Double.NaN?displayProperty=fullName> and the other property is neither <xref:System.Double.PositiveInfinity?displayProperty=fullName> nor <xref:System.Double.NegativeInfinity?displayProperty=fullName>, the method returns <xref:System.Double.NaN?displayProperty=fullName>."}]}]}],"pos":[21600,22698],"yaml":true,"extradata":"MT"},{"content":"A complex number.","nodes":[{"pos":[0,17],"content":"A complex number.","nodes":[{"content":"A complex number.","pos":[0,17]}]}],"pos":[23353,23371],"yaml":true},{"content":"The absolute value of <code>value</code>.","nodes":[{"pos":[0,41],"content":"The absolute value of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">value</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"The absolute value of <code>value</code>."}],"pos":[23428,23470],"yaml":true},{"content":"Returns the angle that is the arc cosine of the specified complex number.","nodes":[{"pos":[0,73],"content":"Returns the angle that is the arc cosine of the specified complex number.","nodes":[{"content":"Returns the angle that is the arc cosine of the specified complex number.","pos":[0,73]}]}],"pos":[24959,25033],"yaml":true},{"content":"The <xref:System.Numerics.Complex.Acos%2A> method for complex numbers corresponds to the <xref:System.Math.Acos%2A?displayProperty=fullName> method for real numbers.  \n  \n The <xref:System.Numerics.Complex.Acos%2A> method uses the following formula:  \n  \n (-<xref:System.Numerics.Complex.ImaginaryOne>) * <xref:System.Numerics.Complex.Log%2A>(`value` + <xref:System.Numerics.Complex.ImaginaryOne>*<xref:System.Numerics.Complex.Sqrt%2A>(<xref:System.Numerics.Complex.One> - `value` * `value`)))","nodes":[{"pos":[0,165],"content":"The <xref:System.Numerics.Complex.Acos%2A> method for complex numbers corresponds to the <xref:System.Math.Acos%2A?displayProperty=fullName> method for real numbers.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Numerics.Complex.Acos%2A&gt;</ph> method for complex numbers corresponds to the <ph id=\"ph2\">&lt;xref:System.Math.Acos%2A?displayProperty=fullName&gt;</ph> method for real numbers.","pos":[0,165],"source":"The <xref:System.Numerics.Complex.Acos%2A> method for complex numbers corresponds to the <xref:System.Math.Acos%2A?displayProperty=fullName> method for real numbers."}]},{"pos":[172,249],"content":"The <xref:System.Numerics.Complex.Acos%2A> method uses the following formula:","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Numerics.Complex.Acos%2A&gt;</ph> method uses the following formula:","pos":[0,77],"source":"The <xref:System.Numerics.Complex.Acos%2A> method uses the following formula:"}]},{"pos":[256,493],"content":"(-<ph id=\"ph1\">&lt;xref:System.Numerics.Complex.ImaginaryOne&gt;</ph>) * <ph id=\"ph2\">&lt;xref:System.Numerics.Complex.Log%2A&gt;</ph>(<ph id=\"ph3\">`value`</ph><ph id=\"ph4\"> + </ph><ph id=\"ph5\">&lt;xref:System.Numerics.Complex.ImaginaryOne&gt;</ph><ph id=\"ph6\">*</ph><ph id=\"ph7\">&lt;xref:System.Numerics.Complex.Sqrt%2A&gt;</ph>(<ph id=\"ph8\">&lt;xref:System.Numerics.Complex.One&gt;</ph><ph id=\"ph9\"> - </ph><ph id=\"ph10\">`value`</ph><ph id=\"ph11\"> * </ph><ph id=\"ph12\">`value`</ph>)))","source":"(-<xref:System.Numerics.Complex.ImaginaryOne>) * <xref:System.Numerics.Complex.Log%2A>(`value` + <xref:System.Numerics.Complex.ImaginaryOne>*<xref:System.Numerics.Complex.Sqrt%2A>(<xref:System.Numerics.Complex.One> - `value` * `value`)))"}],"pos":[25044,25544],"yaml":true,"extradata":"MT"},{"content":"A complex number that represents a cosine.","nodes":[{"pos":[0,42],"content":"A complex number that represents a cosine.","nodes":[{"content":"A complex number that represents a cosine.","pos":[0,42]}]}],"pos":[26328,26371],"yaml":true},{"content":"The angle, measured in radians, which is the arc cosine of <code>value</code>.","nodes":[{"pos":[0,78],"content":"The angle, measured in radians, which is the arc cosine of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">value</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"The angle, measured in radians, which is the arc cosine of <code>value</code>."}],"pos":[26438,26517],"yaml":true},{"content":"Adds two complex numbers and returns the result.","nodes":[{"pos":[0,48],"content":"Adds two complex numbers and returns the result.","nodes":[{"content":"Adds two complex numbers and returns the result.","pos":[0,48]}]}],"pos":[28100,28149],"yaml":true},{"content":"The addition of a complex number, a + bi, and a second complex number, c + di, takes the following form:  \n  \n (a + c) + (b + d)i.  \n  \n If the method call results in an overflow in either the real or imaginary component, the value of the component is either <xref:System.Double.PositiveInfinity?displayProperty=fullName> or <xref:System.Double.NegativeInfinity?displayProperty=fullName>.  \n  \n Languages that do not support custom operators can use the <xref:System.Numerics.Complex.Add%2A> method to perform addition with complex numbers.","nodes":[{"pos":[0,104],"content":"The addition of a complex number, a + bi, and a second complex number, c + di, takes the following form:","nodes":[{"content":"The addition of a complex number, a + bi, and a second complex number, c + di, takes the following form:","pos":[0,104]}]},{"pos":[111,130],"content":"(a + c) + (b + d)i.","nodes":[{"content":"(a + c) + (b + d)i.","pos":[0,19]}]},{"pos":[137,388],"content":"If the method call results in an overflow in either the real or imaginary component, the value of the component is either <xref:System.Double.PositiveInfinity?displayProperty=fullName> or <xref:System.Double.NegativeInfinity?displayProperty=fullName>.","nodes":[{"content":"If the method call results in an overflow in either the real or imaginary component, the value of the component is either <ph id=\"ph1\">&lt;xref:System.Double.PositiveInfinity?displayProperty=fullName&gt;</ph> or <ph id=\"ph2\">&lt;xref:System.Double.NegativeInfinity?displayProperty=fullName&gt;</ph>.","pos":[0,251],"source":"If the method call results in an overflow in either the real or imaginary component, the value of the component is either <xref:System.Double.PositiveInfinity?displayProperty=fullName> or <xref:System.Double.NegativeInfinity?displayProperty=fullName>."}]},{"pos":[395,540],"content":"Languages that do not support custom operators can use the <xref:System.Numerics.Complex.Add%2A> method to perform addition with complex numbers.","nodes":[{"content":"Languages that do not support custom operators can use the <ph id=\"ph1\">&lt;xref:System.Numerics.Complex.Add%2A&gt;</ph> method to perform addition with complex numbers.","pos":[0,145],"source":"Languages that do not support custom operators can use the <xref:System.Numerics.Complex.Add%2A> method to perform addition with complex numbers."}]}],"pos":[28160,28709],"yaml":true,"extradata":"MT"},{"content":"The first complex number to add.","nodes":[{"pos":[0,32],"content":"The first complex number to add.","nodes":[{"content":"The first complex number to add.","pos":[0,32]}]}],"pos":[29290,29323],"yaml":true},{"content":"The second complex number to add.","nodes":[{"pos":[0,33],"content":"The second complex number to add.","nodes":[{"content":"The second complex number to add.","pos":[0,33]}]}],"pos":[29394,29428],"yaml":true},{"content":"The sum of <code>left</code> and <code>right</code>.","nodes":[{"pos":[0,52],"content":"The sum of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">left</ph><ept id=\"p1\">&lt;/code&gt;</ept> and <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">right</ph><ept id=\"p2\">&lt;/code&gt;</ept>.","source":"The sum of <code>left</code> and <code>right</code>."}],"pos":[29495,29548],"yaml":true},{"content":"Returns the angle that is the arc sine of the specified complex number.","nodes":[{"pos":[0,71],"content":"Returns the angle that is the arc sine of the specified complex number.","nodes":[{"content":"Returns the angle that is the arc sine of the specified complex number.","pos":[0,71]}]}],"pos":[31037,31109],"yaml":true},{"content":"The <xref:System.Numerics.Complex.Asin%2A> method for complex numbers corresponds to the <xref:System.Math.Asin%2A?displayProperty=fullName> method for real numbers.  \n  \n The <xref:System.Numerics.Complex.Asin%2A> method uses the following formula:  \n  \n -<xref:System.Numerics.Complex.ImaginaryOne> * <xref:System.Numerics.Complex.Log%2A>(<xref:System.Numerics.Complex.ImaginaryOne> * value + <xref:System.Numerics.Complex.Sqrt%2A>(<xref:System.Numerics.Complex.One> - value * value))","nodes":[{"pos":[0,165],"content":"The <xref:System.Numerics.Complex.Asin%2A> method for complex numbers corresponds to the <xref:System.Math.Asin%2A?displayProperty=fullName> method for real numbers.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Numerics.Complex.Asin%2A&gt;</ph> method for complex numbers corresponds to the <ph id=\"ph2\">&lt;xref:System.Math.Asin%2A?displayProperty=fullName&gt;</ph> method for real numbers.","pos":[0,165],"source":"The <xref:System.Numerics.Complex.Asin%2A> method for complex numbers corresponds to the <xref:System.Math.Asin%2A?displayProperty=fullName> method for real numbers."}]},{"pos":[172,249],"content":"The <xref:System.Numerics.Complex.Asin%2A> method uses the following formula:","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Numerics.Complex.Asin%2A&gt;</ph> method uses the following formula:","pos":[0,77],"source":"The <xref:System.Numerics.Complex.Asin%2A> method uses the following formula:"}]},{"pos":[256,486],"content":"-<xref:System.Numerics.Complex.ImaginaryOne> * <xref:System.Numerics.Complex.Log%2A>(<xref:System.Numerics.Complex.ImaginaryOne> * value + <xref:System.Numerics.Complex.Sqrt%2A>(<xref:System.Numerics.Complex.One> - value * value))","nodes":[{"content":"<ph id=\"ph1\">-</ph><ph id=\"ph2\">&lt;xref:System.Numerics.Complex.ImaginaryOne&gt;</ph><ph id=\"ph3\"> * </ph><ph id=\"ph4\">&lt;xref:System.Numerics.Complex.Log%2A&gt;</ph>(<ph id=\"ph5\">&lt;xref:System.Numerics.Complex.ImaginaryOne&gt;</ph> * value + <ph id=\"ph6\">&lt;xref:System.Numerics.Complex.Sqrt%2A&gt;</ph>(<ph id=\"ph7\">&lt;xref:System.Numerics.Complex.One&gt;</ph> - value * value))","pos":[0,230],"source":"-<xref:System.Numerics.Complex.ImaginaryOne> * <xref:System.Numerics.Complex.Log%2A>(<xref:System.Numerics.Complex.ImaginaryOne> * value + <xref:System.Numerics.Complex.Sqrt%2A>(<xref:System.Numerics.Complex.One> - value * value))"}]}],"pos":[31120,31613],"yaml":true,"extradata":"MT"},{"content":"A complex number.","nodes":[{"pos":[0,17],"content":"A complex number.","nodes":[{"content":"A complex number.","pos":[0,17]}]}],"pos":[32397,32415],"yaml":true},{"content":"The angle which is the arc sine of <code>value</code>.","nodes":[{"pos":[0,54],"content":"The angle which is the arc sine of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">value</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"The angle which is the arc sine of <code>value</code>."}],"pos":[32482,32537],"yaml":true},{"content":"Returns the angle that is the arc tangent of the specified complex number.","nodes":[{"pos":[0,74],"content":"Returns the angle that is the arc tangent of the specified complex number.","nodes":[{"content":"Returns the angle that is the arc tangent of the specified complex number.","pos":[0,74]}]}],"pos":[34027,34102],"yaml":true},{"content":"The <xref:System.Numerics.Complex.Atan%2A> method for complex numbers corresponds to the <xref:System.Math.Atan%2A?displayProperty=fullName> method for real numbers.  \n  \n The <xref:System.Numerics.Complex.Atan%2A> method uses the following formula:  \n  \n <xref:System.Numerics.Complex.ImaginaryOne> / new Complex(2.0, 0.0)) * (<xref:System.Numerics.Complex.Log%2A>(<xref:System.Numerics.Complex.One> - <xref:System.Numerics.Complex.ImaginaryOne> * value) - <xref:System.Numerics.Complex.Log%2A>(<xref:System.Numerics.Complex.One> + ImaginaryOne * value)","nodes":[{"pos":[0,165],"content":"The <xref:System.Numerics.Complex.Atan%2A> method for complex numbers corresponds to the <xref:System.Math.Atan%2A?displayProperty=fullName> method for real numbers.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Numerics.Complex.Atan%2A&gt;</ph> method for complex numbers corresponds to the <ph id=\"ph2\">&lt;xref:System.Math.Atan%2A?displayProperty=fullName&gt;</ph> method for real numbers.","pos":[0,165],"source":"The <xref:System.Numerics.Complex.Atan%2A> method for complex numbers corresponds to the <xref:System.Math.Atan%2A?displayProperty=fullName> method for real numbers."}]},{"pos":[172,249],"content":"The <xref:System.Numerics.Complex.Atan%2A> method uses the following formula:","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Numerics.Complex.Atan%2A&gt;</ph> method uses the following formula:","pos":[0,77],"source":"The <xref:System.Numerics.Complex.Atan%2A> method uses the following formula:"}]},{"pos":[256,554],"content":"<xref:System.Numerics.Complex.ImaginaryOne> / new Complex(2.0, 0.0)) * (<xref:System.Numerics.Complex.Log%2A>(<xref:System.Numerics.Complex.One> - <xref:System.Numerics.Complex.ImaginaryOne> * value) - <xref:System.Numerics.Complex.Log%2A>(<xref:System.Numerics.Complex.One> + ImaginaryOne * value)","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Numerics.Complex.ImaginaryOne&gt;</ph> / new Complex(2.0, 0.0)) * (<ph id=\"ph2\">&lt;xref:System.Numerics.Complex.Log%2A&gt;</ph>(<ph id=\"ph3\">&lt;xref:System.Numerics.Complex.One&gt;</ph><ph id=\"ph4\"> - </ph><ph id=\"ph5\">&lt;xref:System.Numerics.Complex.ImaginaryOne&gt;</ph> * value) - <ph id=\"ph6\">&lt;xref:System.Numerics.Complex.Log%2A&gt;</ph>(<ph id=\"ph7\">&lt;xref:System.Numerics.Complex.One&gt;</ph> + ImaginaryOne * value)","pos":[0,298],"source":"<xref:System.Numerics.Complex.ImaginaryOne> / new Complex(2.0, 0.0)) * (<xref:System.Numerics.Complex.Log%2A>(<xref:System.Numerics.Complex.One> - <xref:System.Numerics.Complex.ImaginaryOne> * value) - <xref:System.Numerics.Complex.Log%2A>(<xref:System.Numerics.Complex.One> + ImaginaryOne * value)"}]}],"pos":[34113,34674],"yaml":true,"extradata":"MT"},{"content":"A complex number.","nodes":[{"pos":[0,17],"content":"A complex number.","nodes":[{"content":"A complex number.","pos":[0,17]}]}],"pos":[35458,35476],"yaml":true},{"content":"The angle that is the arc tangent of <code>value</code>.","nodes":[{"pos":[0,56],"content":"The angle that is the arc tangent of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">value</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"The angle that is the arc tangent of <code>value</code>."}],"pos":[35543,35600],"yaml":true},{"content":"Computes the conjugate of a complex number and returns the result.","nodes":[{"pos":[0,66],"content":"Computes the conjugate of a complex number and returns the result.","nodes":[{"content":"Computes the conjugate of a complex number and returns the result.","pos":[0,66]}]}],"pos":[37120,37187],"yaml":true},{"content":"The conjugate of a complex number inverts the sign of the imaginary component; that is, it applies unary negation to the imaginary component. If a + bi is a complex number, its conjugate is a - bi.","nodes":[{"pos":[0,197],"content":"The conjugate of a complex number inverts the sign of the imaginary component; that is, it applies unary negation to the imaginary component. If a + bi is a complex number, its conjugate is a - bi.","nodes":[{"content":"The conjugate of a complex number inverts the sign of the imaginary component; that is, it applies unary negation to the imaginary component. If a + bi is a complex number, its conjugate is a - bi.","pos":[0,197],"nodes":[{"content":"The conjugate of a complex number inverts the sign of the imaginary component; that is, it applies unary negation to the imaginary component.","pos":[0,141]},{"content":"If a + bi is a complex number, its conjugate is a - bi.","pos":[142,197]}]}]}],"pos":[37198,37396],"yaml":true,"extradata":"MT"},{"content":"A complex number.","nodes":[{"pos":[0,17],"content":"A complex number.","nodes":[{"content":"A complex number.","pos":[0,17]}]}],"pos":[37994,38012],"yaml":true},{"content":"The conjugate of <code>value</code>.","nodes":[{"pos":[0,36],"content":"The conjugate of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">value</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"The conjugate of <code>value</code>."}],"pos":[38079,38116],"yaml":true},{"content":"Returns the cosine of the specified complex number.","nodes":[{"pos":[0,51],"content":"Returns the cosine of the specified complex number.","nodes":[{"content":"Returns the cosine of the specified complex number.","pos":[0,51]}]}],"pos":[39605,39657],"yaml":true},{"content":"The <xref:System.Numerics.Complex.Cos%2A> method for complex numbers corresponds to the <xref:System.Math.Cos%2A?displayProperty=fullName> method for real numbers.  \n  \n The <xref:System.Numerics.Complex.Cos%2A> method uses the following formula to calculate the cosine of the complex number a + bi:  \n  \n (<xref:System.Math.Cos%2A>(a) * <xref:System.Math.Cosh%2A>(b), -(<xref:System.Math.Sin%2A>(a) * <xref:System.Math.Sinh%2A>(b)))","nodes":[{"pos":[0,163],"content":"The <xref:System.Numerics.Complex.Cos%2A> method for complex numbers corresponds to the <xref:System.Math.Cos%2A?displayProperty=fullName> method for real numbers.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Numerics.Complex.Cos%2A&gt;</ph> method for complex numbers corresponds to the <ph id=\"ph2\">&lt;xref:System.Math.Cos%2A?displayProperty=fullName&gt;</ph> method for real numbers.","pos":[0,163],"source":"The <xref:System.Numerics.Complex.Cos%2A> method for complex numbers corresponds to the <xref:System.Math.Cos%2A?displayProperty=fullName> method for real numbers."}]},{"pos":[170,299],"content":"The <xref:System.Numerics.Complex.Cos%2A> method uses the following formula to calculate the cosine of the complex number a + bi:","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Numerics.Complex.Cos%2A&gt;</ph> method uses the following formula to calculate the cosine of the complex number a + bi:","pos":[0,129],"source":"The <xref:System.Numerics.Complex.Cos%2A> method uses the following formula to calculate the cosine of the complex number a + bi:"}]},{"pos":[306,433],"content":"(<xref:System.Math.Cos%2A>(a) * <xref:System.Math.Cosh%2A>(b), -(<xref:System.Math.Sin%2A>(a) * <xref:System.Math.Sinh%2A>(b)))","nodes":[{"content":"(<ph id=\"ph1\">&lt;xref:System.Math.Cos%2A&gt;</ph>(a) * <ph id=\"ph2\">&lt;xref:System.Math.Cosh%2A&gt;</ph>(b), -(<ph id=\"ph3\">&lt;xref:System.Math.Sin%2A&gt;</ph>(a) * <ph id=\"ph4\">&lt;xref:System.Math.Sinh%2A&gt;</ph>(b)))","pos":[0,127],"source":"(<xref:System.Math.Cos%2A>(a) * <xref:System.Math.Cosh%2A>(b), -(<xref:System.Math.Sin%2A>(a) * <xref:System.Math.Sinh%2A>(b)))"}]}],"pos":[39668,40108],"yaml":true,"extradata":"MT"},{"content":"A complex number.","nodes":[{"pos":[0,17],"content":"A complex number.","nodes":[{"content":"A complex number.","pos":[0,17]}]}],"pos":[40891,40909],"yaml":true},{"content":"The cosine of <code>value</code>.","nodes":[{"pos":[0,33],"content":"The cosine of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">value</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"The cosine of <code>value</code>."}],"pos":[40976,41010],"yaml":true},{"content":"Returns the hyperbolic cosine of the specified complex number.","nodes":[{"pos":[0,62],"content":"Returns the hyperbolic cosine of the specified complex number.","nodes":[{"content":"Returns the hyperbolic cosine of the specified complex number.","pos":[0,62]}]}],"pos":[42499,42562],"yaml":true},{"content":"The <xref:System.Numerics.Complex.Cosh%2A> method for complex numbers corresponds to the <xref:System.Math.Cosh%2A?displayProperty=fullName> method for real numbers.  \n  \n The <xref:System.Numerics.Complex.Cosh%2A> method uses the following formula to calculate the hyperbolic cosine of the complex number a + bi:  \n  \n (<xref:System.Math.Cosh%2A>(a) * <xref:System.Math.Cos%2A>(b), <xref:System.Math.Sinh%2A>(a) * <xref:System.Math.Sin%2A>(b))","nodes":[{"pos":[0,165],"content":"The <xref:System.Numerics.Complex.Cosh%2A> method for complex numbers corresponds to the <xref:System.Math.Cosh%2A?displayProperty=fullName> method for real numbers.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Numerics.Complex.Cosh%2A&gt;</ph> method for complex numbers corresponds to the <ph id=\"ph2\">&lt;xref:System.Math.Cosh%2A?displayProperty=fullName&gt;</ph> method for real numbers.","pos":[0,165],"source":"The <xref:System.Numerics.Complex.Cosh%2A> method for complex numbers corresponds to the <xref:System.Math.Cosh%2A?displayProperty=fullName> method for real numbers."}]},{"pos":[172,313],"content":"The <xref:System.Numerics.Complex.Cosh%2A> method uses the following formula to calculate the hyperbolic cosine of the complex number a + bi:","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Numerics.Complex.Cosh%2A&gt;</ph> method uses the following formula to calculate the hyperbolic cosine of the complex number a + bi:","pos":[0,141],"source":"The <xref:System.Numerics.Complex.Cosh%2A> method uses the following formula to calculate the hyperbolic cosine of the complex number a + bi:"}]},{"pos":[320,444],"content":"(<xref:System.Math.Cosh%2A>(a) * <xref:System.Math.Cos%2A>(b), <xref:System.Math.Sinh%2A>(a) * <xref:System.Math.Sin%2A>(b))","nodes":[{"content":"(<ph id=\"ph1\">&lt;xref:System.Math.Cosh%2A&gt;</ph>(a) * <ph id=\"ph2\">&lt;xref:System.Math.Cos%2A&gt;</ph>(b), <ph id=\"ph3\">&lt;xref:System.Math.Sinh%2A&gt;</ph>(a) * <ph id=\"ph4\">&lt;xref:System.Math.Sin%2A&gt;</ph>(b))","pos":[0,124],"source":"(<xref:System.Math.Cosh%2A>(a) * <xref:System.Math.Cos%2A>(b), <xref:System.Math.Sinh%2A>(a) * <xref:System.Math.Sin%2A>(b))"}]}],"pos":[42573,43024],"yaml":true,"extradata":"MT"},{"content":"A complex number.","nodes":[{"pos":[0,17],"content":"A complex number.","nodes":[{"content":"A complex number.","pos":[0,17]}]}],"pos":[43210,43228],"yaml":true},{"content":"The hyperbolic cosine of <code>value</code>.","nodes":[{"pos":[0,44],"content":"The hyperbolic cosine of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">value</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"The hyperbolic cosine of <code>value</code>."}],"pos":[43295,43340],"yaml":true},{"content":"Divides one complex number by another and returns the result.","nodes":[{"pos":[0,61],"content":"Divides one complex number by another and returns the result.","nodes":[{"content":"Divides one complex number by another and returns the result.","pos":[0,61]}]}],"pos":[44941,45003],"yaml":true},{"content":"The division of a complex number, a + bi, by a second complex number, number, c + di, takes the following form:  \n  \n ((ac + bd) / (c<sup>2</sup> + d<sup>2</sup>)) + ((bc - ad) / (c<sup>2</sup> + d<sup>2</sup>)i  \n  \n If the calculation of the quotient results in an overflow in either the real or imaginary component, the value of that component is either <xref:System.Double.PositiveInfinity?displayProperty=fullName> or <xref:System.Double.NegativeInfinity?displayProperty=fullName>.  \n  \n The <xref:System.Numerics.Complex.Divide%2A> method can be used by languages that do not support custom operators. Its behavior is identical to division using the division operator.","nodes":[{"pos":[0,111],"content":"The division of a complex number, a + bi, by a second complex number, number, c + di, takes the following form:","nodes":[{"content":"The division of a complex number, a + bi, by a second complex number, number, c + di, takes the following form:","pos":[0,111]}]},{"pos":[118,211],"content":"((ac + bd) / (c<bpt id=\"p1\">&lt;sup&gt;</bpt>2<ept id=\"p1\">&lt;/sup&gt;</ept> + d<bpt id=\"p2\">&lt;sup&gt;</bpt>2<ept id=\"p2\">&lt;/sup&gt;</ept>)) + ((bc - ad) / (c<bpt id=\"p3\">&lt;sup&gt;</bpt>2<ept id=\"p3\">&lt;/sup&gt;</ept> + d<bpt id=\"p4\">&lt;sup&gt;</bpt>2<ept id=\"p4\">&lt;/sup&gt;</ept>)i","source":"((ac + bd) / (c<sup>2</sup> + d<sup>2</sup>)) + ((bc - ad) / (c<sup>2</sup> + d<sup>2</sup>)i"},{"pos":[218,486],"content":"If the calculation of the quotient results in an overflow in either the real or imaginary component, the value of that component is either <xref:System.Double.PositiveInfinity?displayProperty=fullName> or <xref:System.Double.NegativeInfinity?displayProperty=fullName>.","nodes":[{"content":"If the calculation of the quotient results in an overflow in either the real or imaginary component, the value of that component is either <ph id=\"ph1\">&lt;xref:System.Double.PositiveInfinity?displayProperty=fullName&gt;</ph> or <ph id=\"ph2\">&lt;xref:System.Double.NegativeInfinity?displayProperty=fullName&gt;</ph>.","pos":[0,268],"source":"If the calculation of the quotient results in an overflow in either the real or imaginary component, the value of that component is either <xref:System.Double.PositiveInfinity?displayProperty=fullName> or <xref:System.Double.NegativeInfinity?displayProperty=fullName>."}]},{"pos":[493,674],"content":"The <xref:System.Numerics.Complex.Divide%2A> method can be used by languages that do not support custom operators. Its behavior is identical to division using the division operator.","nodes":[{"content":"The <xref:System.Numerics.Complex.Divide%2A> method can be used by languages that do not support custom operators. Its behavior is identical to division using the division operator.","pos":[0,181],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Numerics.Complex.Divide%2A&gt;</ph> method can be used by languages that do not support custom operators.","pos":[0,114],"source":"The <xref:System.Numerics.Complex.Divide%2A> method can be used by languages that do not support custom operators."},{"content":"Its behavior is identical to division using the division operator.","pos":[115,181]}]}]}],"pos":[45014,45697],"yaml":true,"extradata":"MT"},{"content":"The complex number to be divided.","nodes":[{"pos":[0,33],"content":"The complex number to be divided.","nodes":[{"content":"The complex number to be divided.","pos":[0,33]}]}],"pos":[46339,46373],"yaml":true},{"content":"The complex number to divide by.","nodes":[{"pos":[0,32],"content":"The complex number to divide by.","nodes":[{"content":"The complex number to divide by.","pos":[0,32]}]}],"pos":[46446,46479],"yaml":true},{"content":"The quotient of the division.","nodes":[{"pos":[0,29],"content":"The quotient of the division.","nodes":[{"content":"The quotient of the division.","pos":[0,29]}]}],"pos":[46546,46576],"yaml":true},{"content":"Returns a value that indicates whether the current instance and a specified complex number have the same value.","nodes":[{"pos":[0,111],"content":"Returns a value that indicates whether the current instance and a specified complex number have the same value.","nodes":[{"content":"Returns a value that indicates whether the current instance and a specified complex number have the same value.","pos":[0,111]}]}],"pos":[48080,48192],"yaml":true},{"content":"The <xref:System.Numerics.Complex.Equals%28System.Numerics.Complex%29> method provides the <xref:System.IEquatable%601> implementation for the <xref:System.Numerics.Complex> structure. It performs slightly better than <xref:System.Numerics.Complex.Equals%28System.Object%29> method because it does not have to convert its parameter to a complex number.  \n  \n Two complex numbers are equal if their real parts are equal and their imaginary parts are equal. The <xref:System.Numerics.Complex.Equals%28System.Numerics.Complex%29> method is equivalent to the following expression:  \n  \n [!code-csharp[System.Numerics.Complex.Equals#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.numerics.complex.equals/cs/equals1.cs#1)]\n [!code-vb[System.Numerics.Complex.Equals#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.numerics.complex.equals/vb/equals1.vb#1)]","nodes":[{"pos":[0,352],"content":"The <xref:System.Numerics.Complex.Equals%28System.Numerics.Complex%29> method provides the <xref:System.IEquatable%601> implementation for the <xref:System.Numerics.Complex> structure. It performs slightly better than <xref:System.Numerics.Complex.Equals%28System.Object%29> method because it does not have to convert its parameter to a complex number.","nodes":[{"content":"The <xref:System.Numerics.Complex.Equals%28System.Numerics.Complex%29> method provides the <xref:System.IEquatable%601> implementation for the <xref:System.Numerics.Complex> structure. It performs slightly better than <xref:System.Numerics.Complex.Equals%28System.Object%29> method because it does not have to convert its parameter to a complex number.","pos":[0,352],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Numerics.Complex.Equals%28System.Numerics.Complex%29&gt;</ph> method provides the <ph id=\"ph2\">&lt;xref:System.IEquatable%601&gt;</ph> implementation for the <ph id=\"ph3\">&lt;xref:System.Numerics.Complex&gt;</ph> structure.","pos":[0,184],"source":"The <xref:System.Numerics.Complex.Equals%28System.Numerics.Complex%29> method provides the <xref:System.IEquatable%601> implementation for the <xref:System.Numerics.Complex> structure."},{"content":"It performs slightly better than <ph id=\"ph1\">&lt;xref:System.Numerics.Complex.Equals%28System.Object%29&gt;</ph> method because it does not have to convert its parameter to a complex number.","pos":[185,352],"source":" It performs slightly better than <xref:System.Numerics.Complex.Equals%28System.Object%29> method because it does not have to convert its parameter to a complex number."}]}]},{"pos":[359,576],"content":"Two complex numbers are equal if their real parts are equal and their imaginary parts are equal. The <xref:System.Numerics.Complex.Equals%28System.Numerics.Complex%29> method is equivalent to the following expression:","nodes":[{"content":"Two complex numbers are equal if their real parts are equal and their imaginary parts are equal. The <xref:System.Numerics.Complex.Equals%28System.Numerics.Complex%29> method is equivalent to the following expression:","pos":[0,217],"nodes":[{"content":"Two complex numbers are equal if their real parts are equal and their imaginary parts are equal.","pos":[0,96]},{"content":"The <ph id=\"ph1\">&lt;xref:System.Numerics.Complex.Equals%28System.Numerics.Complex%29&gt;</ph> method is equivalent to the following expression:","pos":[97,217],"source":" The <xref:System.Numerics.Complex.Equals%28System.Numerics.Complex%29> method is equivalent to the following expression:"}]}]},{"pos":[583,876],"content":"<bpt id=\"p1\">[!code-csharp</bpt><bpt id=\"p2\">[</bpt>System.Numerics.Complex.Equals#1<ept id=\"p2\">](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.numerics.complex.equals/cs/equals1.cs#1)</ept><ept id=\"p1\">]</ept> <bpt id=\"p3\">[!code-vb</bpt><bpt id=\"p4\">[</bpt>System.Numerics.Complex.Equals#1<ept id=\"p4\">](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.numerics.complex.equals/vb/equals1.vb#1)</ept><ept id=\"p3\">]</ept>","source":"[!code-csharp[System.Numerics.Complex.Equals#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.numerics.complex.equals/cs/equals1.cs#1)]\n [!code-vb[System.Numerics.Complex.Equals#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.numerics.complex.equals/vb/equals1.vb#1)]"}],"pos":[48203,49087],"yaml":true,"extradata":"MT"},{"content":"The complex number to compare.","nodes":[{"pos":[0,30],"content":"The complex number to compare.","nodes":[{"content":"The complex number to compare.","pos":[0,30]}]}],"pos":[49249,49280],"yaml":true},{"content":"`true` if this complex number and <code>value</code> have the same value; otherwise, `false`.","nodes":[{"pos":[0,93],"content":"<ph id=\"ph1\">`true`</ph> if this complex number and <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">value</ph><ept id=\"p1\">&lt;/code&gt;</ept> have the same value; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` if this complex number and <code>value</code> have the same value; otherwise, `false`."}],"pos":[49338,49434],"yaml":true},{"content":"Returns a value that indicates whether the current instance and a specified object have the same value.","nodes":[{"pos":[0,103],"content":"Returns a value that indicates whether the current instance and a specified object have the same value.","nodes":[{"content":"Returns a value that indicates whether the current instance and a specified object have the same value.","pos":[0,103]}]}],"pos":[50905,51009],"yaml":true},{"content":"Two complex numbers are equal if their real parts are equal and their imaginary parts are equal. The <xref:System.Numerics.Complex.Equals%28System.Object%29> method is equivalent to the following expression:  \n  \n [!code-csharp[System.Numerics.Complex.Equals#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.numerics.complex.equals/cs/equals1.cs#2)]\n [!code-vb[System.Numerics.Complex.Equals#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.numerics.complex.equals/vb/equals1.vb#2)]  \n  \n If the `obj` parameter is not a <xref:System.Numerics.Complex> object, but it is a data type for which an implicit conversion is defined, the <xref:System.Numerics.Complex.Equals%28System.Object%29> method converts `obj` to a <xref:System.Numerics.Complex> object whose real part is equal to the value of `obj` and whose imaginary part is equal to zero before it performs the comparison. The following example illustrates this by finding that a complex number and a double-precision floating-point value are equal.  \n  \n [!code-csharp[System.Numerics.Complex.Equals#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.numerics.complex.equals/cs/equals3.cs#6)]\n [!code-vb[System.Numerics.Complex.Equals#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.numerics.complex.equals/vb/equals3.vb#6)]","nodes":[{"pos":[0,207],"content":"Two complex numbers are equal if their real parts are equal and their imaginary parts are equal. The <xref:System.Numerics.Complex.Equals%28System.Object%29> method is equivalent to the following expression:","nodes":[{"content":"Two complex numbers are equal if their real parts are equal and their imaginary parts are equal. The <xref:System.Numerics.Complex.Equals%28System.Object%29> method is equivalent to the following expression:","pos":[0,207],"nodes":[{"content":"Two complex numbers are equal if their real parts are equal and their imaginary parts are equal.","pos":[0,96]},{"content":"The <ph id=\"ph1\">&lt;xref:System.Numerics.Complex.Equals%28System.Object%29&gt;</ph> method is equivalent to the following expression:","pos":[97,207],"source":" The <xref:System.Numerics.Complex.Equals%28System.Object%29> method is equivalent to the following expression:"}]}]},{"pos":[214,507],"content":"<bpt id=\"p1\">[!code-csharp</bpt><bpt id=\"p2\">[</bpt>System.Numerics.Complex.Equals#2<ept id=\"p2\">](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.numerics.complex.equals/cs/equals1.cs#2)</ept><ept id=\"p1\">]</ept> <bpt id=\"p3\">[!code-vb</bpt><bpt id=\"p4\">[</bpt>System.Numerics.Complex.Equals#2<ept id=\"p4\">](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.numerics.complex.equals/vb/equals1.vb#2)</ept><ept id=\"p3\">]</ept>","source":"[!code-csharp[System.Numerics.Complex.Equals#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.numerics.complex.equals/cs/equals1.cs#2)]\n [!code-vb[System.Numerics.Complex.Equals#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.numerics.complex.equals/vb/equals1.vb#2)]"},{"pos":[514,1028],"content":"If the `obj` parameter is not a <xref:System.Numerics.Complex> object, but it is a data type for which an implicit conversion is defined, the <xref:System.Numerics.Complex.Equals%28System.Object%29> method converts `obj` to a <xref:System.Numerics.Complex> object whose real part is equal to the value of `obj` and whose imaginary part is equal to zero before it performs the comparison. The following example illustrates this by finding that a complex number and a double-precision floating-point value are equal.","nodes":[{"content":"If the <ph id=\"ph1\">`obj`</ph> parameter is not a <ph id=\"ph2\">&lt;xref:System.Numerics.Complex&gt;</ph> object, but it is a data type for which an implicit conversion is defined, the <ph id=\"ph3\">&lt;xref:System.Numerics.Complex.Equals%28System.Object%29&gt;</ph> method converts <ph id=\"ph4\">`obj`</ph> to a <ph id=\"ph5\">&lt;xref:System.Numerics.Complex&gt;</ph> object whose real part is equal to the value of <ph id=\"ph6\">`obj`</ph> and whose imaginary part is equal to zero before it performs the comparison.","pos":[0,387],"source":"If the `obj` parameter is not a <xref:System.Numerics.Complex> object, but it is a data type for which an implicit conversion is defined, the <xref:System.Numerics.Complex.Equals%28System.Object%29> method converts `obj` to a <xref:System.Numerics.Complex> object whose real part is equal to the value of `obj` and whose imaginary part is equal to zero before it performs the comparison."},{"content":"The following example illustrates this by finding that a complex number and a double-precision floating-point value are equal.","pos":[388,514]}]},{"pos":[1035,1328],"content":"<bpt id=\"p1\">[!code-csharp</bpt><bpt id=\"p2\">[</bpt>System.Numerics.Complex.Equals#6<ept id=\"p2\">](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.numerics.complex.equals/cs/equals3.cs#6)</ept><ept id=\"p1\">]</ept> <bpt id=\"p3\">[!code-vb</bpt><bpt id=\"p4\">[</bpt>System.Numerics.Complex.Equals#6<ept id=\"p4\">](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.numerics.complex.equals/vb/equals3.vb#6)</ept><ept id=\"p3\">]</ept>","source":"[!code-csharp[System.Numerics.Complex.Equals#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.numerics.complex.equals/cs/equals3.cs#6)]\n [!code-vb[System.Numerics.Complex.Equals#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.numerics.complex.equals/vb/equals3.vb#6)]"}],"pos":[51020,52359],"yaml":true,"extradata":"MT"},{"content":"The object to compare.","nodes":[{"pos":[0,22],"content":"The object to compare.","nodes":[{"content":"The object to compare.","pos":[0,22]}]}],"pos":[52499,52522],"yaml":true},{"content":"`true` if the <code>obj</code> parameter is a <xref href=\"System.Numerics.Complex\"></xref> object or a type capable of implicit conversion to a <xref href=\"System.Numerics.Complex\"></xref> object, and its value is equal to the current <xref href=\"System.Numerics.Complex\"></xref> object; otherwise, `false`.","nodes":[{"pos":[0,307],"content":"<ph id=\"ph1\">`true`</ph> if the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">obj</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is a <ph id=\"ph3\">&lt;xref href=\"System.Numerics.Complex\"&gt;&lt;/xref&gt;</ph> object or a type capable of implicit conversion to a <ph id=\"ph4\">&lt;xref href=\"System.Numerics.Complex\"&gt;&lt;/xref&gt;</ph> object, and its value is equal to the current <ph id=\"ph5\">&lt;xref href=\"System.Numerics.Complex\"&gt;&lt;/xref&gt;</ph> object; otherwise, <ph id=\"ph6\">`false`</ph>.","source":"`true` if the <code>obj</code> parameter is a <xref href=\"System.Numerics.Complex\"></xref> object or a type capable of implicit conversion to a <xref href=\"System.Numerics.Complex\"></xref> object, and its value is equal to the current <xref href=\"System.Numerics.Complex\"></xref> object; otherwise, `false`."}],"pos":[52580,52890],"yaml":true},{"content":"Returns `e` raised to the power specified by a complex number.","nodes":[{"pos":[0,62],"content":"Returns <ph id=\"ph1\">`e`</ph> raised to the power specified by a complex number.","source":"Returns `e` raised to the power specified by a complex number."}],"pos":[54376,54439],"yaml":true},{"content":"Use the <xref:System.Numerics.Complex.Pow%2A> method to calculate the powers of other bases.  \n  \n The <xref:System.Numerics.Complex.Exp%2A> method for complex numbers corresponds to the <xref:System.Math.Exp%2A?displayProperty=fullName> method for real numbers. <xref:System.Numerics.Complex.Exp%2A> is the inverse of <xref:System.Numerics.Complex.Log%2A>.","nodes":[{"pos":[0,92],"content":"Use the <xref:System.Numerics.Complex.Pow%2A> method to calculate the powers of other bases.","nodes":[{"content":"Use the <ph id=\"ph1\">&lt;xref:System.Numerics.Complex.Pow%2A&gt;</ph> method to calculate the powers of other bases.","pos":[0,92],"source":"Use the <xref:System.Numerics.Complex.Pow%2A> method to calculate the powers of other bases."}]},{"pos":[99,357],"content":"The <xref:System.Numerics.Complex.Exp%2A> method for complex numbers corresponds to the <xref:System.Math.Exp%2A?displayProperty=fullName> method for real numbers. <xref:System.Numerics.Complex.Exp%2A> is the inverse of <xref:System.Numerics.Complex.Log%2A>.","nodes":[{"content":"The <xref:System.Numerics.Complex.Exp%2A> method for complex numbers corresponds to the <xref:System.Math.Exp%2A?displayProperty=fullName> method for real numbers. <xref:System.Numerics.Complex.Exp%2A> is the inverse of <xref:System.Numerics.Complex.Log%2A>.","pos":[0,258],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Numerics.Complex.Exp%2A&gt;</ph> method for complex numbers corresponds to the <ph id=\"ph2\">&lt;xref:System.Math.Exp%2A?displayProperty=fullName&gt;</ph> method for real numbers.","pos":[0,163],"source":"The <xref:System.Numerics.Complex.Exp%2A> method for complex numbers corresponds to the <xref:System.Math.Exp%2A?displayProperty=fullName> method for real numbers."},{"content":"<ph id=\"ph1\">&lt;xref:System.Numerics.Complex.Exp%2A&gt;</ph> is the inverse of <ph id=\"ph2\">&lt;xref:System.Numerics.Complex.Log%2A&gt;</ph>.","pos":[164,258],"source":" <xref:System.Numerics.Complex.Exp%2A> is the inverse of <xref:System.Numerics.Complex.Log%2A>."}]}]}],"pos":[54450,54812],"yaml":true,"extradata":"MT"},{"content":"A complex number that specifies a power.","nodes":[{"pos":[0,40],"content":"A complex number that specifies a power.","nodes":[{"content":"A complex number that specifies a power.","pos":[0,40]}]}],"pos":[55674,55715],"yaml":true},{"content":"The number `e` raised to the power <code>value</code>.","nodes":[{"pos":[0,54],"content":"The number <ph id=\"ph1\">`e`</ph> raised to the power <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">value</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"The number `e` raised to the power <code>value</code>."}],"pos":[55782,55837],"yaml":true},{"content":"Creates a complex number from a point's polar coordinates.","nodes":[{"pos":[0,58],"content":"Creates a complex number from a point's polar coordinates.","nodes":[{"content":"Creates a complex number from a point's polar coordinates.","pos":[0,58]}]}],"pos":[57455,57514],"yaml":true},{"content":"The <xref:System.Numerics.Complex.FromPolarCoordinates%2A> method instantiates a complex number based on its polar coordinates.  \n  \n Because there are multiple representations of a point on a complex plane, the return value of the <xref:System.Numerics.Complex.FromPolarCoordinates%2A> method is normalized. The magnitude is normalized to a positive number, and the phase is normalized to a value in the range of -<xref:System.Math.PI> to <xref:System.Math.PI>. As a result, the values of the <xref:System.Numerics.Complex.Phase%2A> and <xref:System.Numerics.Complex.Magnitude%2A> properties of the resulting complex number may not equal the original values of the `magnitude` and `phase` parameters.  \n  \n To convert a value from degrees to radians for the `phase` parameter, multiply it by <xref:System.Math.PI?displayProperty=fullName>/180.","nodes":[{"pos":[0,127],"content":"The <xref:System.Numerics.Complex.FromPolarCoordinates%2A> method instantiates a complex number based on its polar coordinates.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Numerics.Complex.FromPolarCoordinates%2A&gt;</ph> method instantiates a complex number based on its polar coordinates.","pos":[0,127],"source":"The <xref:System.Numerics.Complex.FromPolarCoordinates%2A> method instantiates a complex number based on its polar coordinates."}]},{"pos":[134,701],"content":"Because there are multiple representations of a point on a complex plane, the return value of the <xref:System.Numerics.Complex.FromPolarCoordinates%2A> method is normalized. The magnitude is normalized to a positive number, and the phase is normalized to a value in the range of -<xref:System.Math.PI> to <xref:System.Math.PI>. As a result, the values of the <xref:System.Numerics.Complex.Phase%2A> and <xref:System.Numerics.Complex.Magnitude%2A> properties of the resulting complex number may not equal the original values of the `magnitude` and `phase` parameters.","nodes":[{"content":"Because there are multiple representations of a point on a complex plane, the return value of the <ph id=\"ph1\">&lt;xref:System.Numerics.Complex.FromPolarCoordinates%2A&gt;</ph> method is normalized.","pos":[0,174],"source":"Because there are multiple representations of a point on a complex plane, the return value of the <xref:System.Numerics.Complex.FromPolarCoordinates%2A> method is normalized."},{"content":"The magnitude is normalized to a positive number, and the phase is normalized to a value in the range of -<ph id=\"ph1\">&lt;xref:System.Math.PI&gt;</ph> to <ph id=\"ph2\">&lt;xref:System.Math.PI&gt;</ph>.","pos":[175,328],"source":" The magnitude is normalized to a positive number, and the phase is normalized to a value in the range of -<xref:System.Math.PI> to <xref:System.Math.PI>."},{"content":"As a result, the values of the <ph id=\"ph1\">&lt;xref:System.Numerics.Complex.Phase%2A&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Numerics.Complex.Magnitude%2A&gt;</ph> properties of the resulting complex number may not equal the original values of the <ph id=\"ph3\">`magnitude`</ph> and <ph id=\"ph4\">`phase`</ph> parameters.","pos":[329,567],"source":" As a result, the values of the <xref:System.Numerics.Complex.Phase%2A> and <xref:System.Numerics.Complex.Magnitude%2A> properties of the resulting complex number may not equal the original values of the `magnitude` and `phase` parameters."}]},{"pos":[708,844],"content":"To convert a value from degrees to radians for the <ph id=\"ph1\">`phase`</ph> parameter, multiply it by <ph id=\"ph2\">&lt;xref:System.Math.PI?displayProperty=fullName&gt;</ph>/180.","source":"To convert a value from degrees to radians for the `phase` parameter, multiply it by <xref:System.Math.PI?displayProperty=fullName>/180."}],"pos":[57525,58376],"yaml":true,"extradata":"MT"},{"content":"The magnitude, which is the distance from the origin (the intersection of the x-axis and the y-axis) to the number.","nodes":[{"pos":[0,115],"content":"The magnitude, which is the distance from the origin (the intersection of the x-axis and the y-axis) to the number.","nodes":[{"content":"The magnitude, which is the distance from the origin (the intersection of the x-axis and the y-axis) to the number.","pos":[0,115]}]}],"pos":[59178,59294],"yaml":true},{"content":"The phase, which is the angle from the line to the horizontal axis, measured in radians.","nodes":[{"pos":[0,88],"content":"The phase, which is the angle from the line to the horizontal axis, measured in radians.","nodes":[{"content":"The phase, which is the angle from the line to the horizontal axis, measured in radians.","pos":[0,88]}]}],"pos":[59355,59444],"yaml":true},{"content":"A complex number.","nodes":[{"pos":[0,17],"content":"A complex number.","nodes":[{"content":"A complex number.","pos":[0,17]}]}],"pos":[59511,59529],"yaml":true},{"content":"Returns the hash code for the current <xref href=\"System.Numerics.Complex\"></xref> object.","nodes":[{"pos":[0,90],"content":"Returns the hash code for the current <ph id=\"ph1\">&lt;xref href=\"System.Numerics.Complex\"&gt;&lt;/xref&gt;</ph> object.","source":"Returns the hash code for the current <xref href=\"System.Numerics.Complex\"></xref> object."}],"pos":[60981,61072],"yaml":true},{"content":"A 32-bit signed integer hash code.","nodes":[{"pos":[0,34],"content":"A 32-bit signed integer hash code.","nodes":[{"content":"A 32-bit signed integer hash code.","pos":[0,34]}]}],"pos":[61206,61241],"yaml":true},{"content":"Gets the imaginary component of the current <xref href=\"System.Numerics.Complex\"></xref> object.","nodes":[{"pos":[0,96],"content":"Gets the imaginary component of the current <ph id=\"ph1\">&lt;xref href=\"System.Numerics.Complex\"&gt;&lt;/xref&gt;</ph> object.","source":"Gets the imaginary component of the current <xref href=\"System.Numerics.Complex\"></xref> object."}],"pos":[62668,62765],"yaml":true},{"content":"Given a complex number a + bi, the <xref:System.Numerics.Complex.Imaginary%2A> property returns the value of b.","nodes":[{"pos":[0,111],"content":"Given a complex number a + bi, the <xref:System.Numerics.Complex.Imaginary%2A> property returns the value of b.","nodes":[{"content":"Given a complex number a + bi, the <ph id=\"ph1\">&lt;xref:System.Numerics.Complex.Imaginary%2A&gt;</ph> property returns the value of b.","pos":[0,111],"source":"Given a complex number a + bi, the <xref:System.Numerics.Complex.Imaginary%2A> property returns the value of b."}]}],"pos":[62776,62888],"yaml":true,"extradata":"MT"},{"content":"The imaginary component of a complex number.","nodes":[{"pos":[0,44],"content":"The imaginary component of a complex number.","nodes":[{"content":"The imaginary component of a complex number.","pos":[0,44]}]}],"pos":[63470,63515],"yaml":true},{"content":"Returns a new <xref href=\"System.Numerics.Complex\"></xref> instance with a real number equal to zero and an imaginary number equal to one.","nodes":[{"pos":[0,138],"content":"Returns a new <ph id=\"ph1\">&lt;xref href=\"System.Numerics.Complex\"&gt;&lt;/xref&gt;</ph> instance with a real number equal to zero and an imaginary number equal to one.","source":"Returns a new <xref href=\"System.Numerics.Complex\"></xref> instance with a real number equal to zero and an imaginary number equal to one."}],"pos":[64955,65094],"yaml":true},{"content":"Returns the natural (base `e`) logarithm of a specified complex number.","nodes":[{"pos":[0,71],"content":"Returns the natural (base <ph id=\"ph1\">`e`</ph>) logarithm of a specified complex number.","source":"Returns the natural (base `e`) logarithm of a specified complex number."}],"pos":[67456,67528],"yaml":true},{"content":"The <xref:System.Numerics.Complex.Log%28System.Numerics.Complex%29> method for complex numbers corresponds to the <xref:System.Math.Log%28System.Double%29?displayProperty=fullName> method for real numbers.","nodes":[{"pos":[0,205],"content":"The <xref:System.Numerics.Complex.Log%28System.Numerics.Complex%29> method for complex numbers corresponds to the <xref:System.Math.Log%28System.Double%29?displayProperty=fullName> method for real numbers.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Numerics.Complex.Log%28System.Numerics.Complex%29&gt;</ph> method for complex numbers corresponds to the <ph id=\"ph2\">&lt;xref:System.Math.Log%28System.Double%29?displayProperty=fullName&gt;</ph> method for real numbers.","pos":[0,205],"source":"The <xref:System.Numerics.Complex.Log%28System.Numerics.Complex%29> method for complex numbers corresponds to the <xref:System.Math.Log%28System.Double%29?displayProperty=fullName> method for real numbers."}]}],"pos":[67539,67745],"yaml":true,"extradata":"MT"},{"content":"A complex number.","nodes":[{"pos":[0,17],"content":"A complex number.","nodes":[{"content":"A complex number.","pos":[0,17]}]}],"pos":[68607,68625],"yaml":true},{"content":"The natural (base `e`) logarithm of <code>value</code>.","nodes":[{"pos":[0,55],"content":"The natural (base <ph id=\"ph1\">`e`</ph>) logarithm of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">value</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"The natural (base `e`) logarithm of <code>value</code>."}],"pos":[68692,68748],"yaml":true},{"content":"Returns the logarithm of a specified complex number in a specified base.","nodes":[{"pos":[0,72],"content":"Returns the logarithm of a specified complex number in a specified base.","nodes":[{"content":"Returns the logarithm of a specified complex number in a specified base.","pos":[0,72]}]}],"pos":[70297,70370],"yaml":true},{"content":"The <xref:System.Numerics.Complex.Log%28System.Numerics.Complex%2CSystem.Double%29> method for complex numbers corresponds to the <xref:System.Math.Log%28System.Double%2CSystem.Double%29?displayProperty=fullName> method for real numbers.","nodes":[{"pos":[0,237],"content":"The <xref:System.Numerics.Complex.Log%28System.Numerics.Complex%2CSystem.Double%29> method for complex numbers corresponds to the <xref:System.Math.Log%28System.Double%2CSystem.Double%29?displayProperty=fullName> method for real numbers.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Numerics.Complex.Log%28System.Numerics.Complex%2CSystem.Double%29&gt;</ph> method for complex numbers corresponds to the <ph id=\"ph2\">&lt;xref:System.Math.Log%28System.Double%2CSystem.Double%29?displayProperty=fullName&gt;</ph> method for real numbers.","pos":[0,237],"source":"The <xref:System.Numerics.Complex.Log%28System.Numerics.Complex%2CSystem.Double%29> method for complex numbers corresponds to the <xref:System.Math.Log%28System.Double%2CSystem.Double%29?displayProperty=fullName> method for real numbers."}]}],"pos":[70381,70619],"yaml":true,"extradata":"MT"},{"content":"A complex number.","nodes":[{"pos":[0,17],"content":"A complex number.","nodes":[{"content":"A complex number.","pos":[0,17]}]}],"pos":[70822,70840],"yaml":true},{"content":"The base of the logarithm.","nodes":[{"pos":[0,26],"content":"The base of the logarithm.","nodes":[{"content":"The base of the logarithm.","pos":[0,26]}]}],"pos":[70905,70932],"yaml":true},{"content":"The logarithm of <code>value</code> in base <code>baseValue</code>.","nodes":[{"pos":[0,67],"content":"The logarithm of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">value</ph><ept id=\"p1\">&lt;/code&gt;</ept> in base <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">baseValue</ph><ept id=\"p2\">&lt;/code&gt;</ept>.","source":"The logarithm of <code>value</code> in base <code>baseValue</code>."}],"pos":[70999,71067],"yaml":true},{"content":"Returns the base-10 logarithm of a specified complex number.","nodes":[{"pos":[0,60],"content":"Returns the base-10 logarithm of a specified complex number.","nodes":[{"content":"Returns the base-10 logarithm of a specified complex number.","pos":[0,60]}]}],"pos":[72562,72623],"yaml":true},{"content":"The <xref:System.Numerics.Complex.Log10%2A> method for complex numbers corresponds to the <xref:System.Math.Log10%2A?displayProperty=fullName> method for real numbers.","nodes":[{"pos":[0,167],"content":"The <xref:System.Numerics.Complex.Log10%2A> method for complex numbers corresponds to the <xref:System.Math.Log10%2A?displayProperty=fullName> method for real numbers.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Numerics.Complex.Log10%2A&gt;</ph> method for complex numbers corresponds to the <ph id=\"ph2\">&lt;xref:System.Math.Log10%2A?displayProperty=fullName&gt;</ph> method for real numbers.","pos":[0,167],"source":"The <xref:System.Numerics.Complex.Log10%2A> method for complex numbers corresponds to the <xref:System.Math.Log10%2A?displayProperty=fullName> method for real numbers."}]}],"pos":[72634,72802],"yaml":true,"extradata":"MT"},{"content":"A complex number.","nodes":[{"pos":[0,17],"content":"A complex number.","nodes":[{"content":"A complex number.","pos":[0,17]}]}],"pos":[72989,73007],"yaml":true},{"content":"The base-10 logarithm of <code>value</code>.","nodes":[{"pos":[0,44],"content":"The base-10 logarithm of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">value</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"The base-10 logarithm of <code>value</code>."}],"pos":[73074,73119],"yaml":true},{"content":"Gets the magnitude (or absolute value) of a complex number.","nodes":[{"pos":[0,59],"content":"Gets the magnitude (or absolute value) of a complex number.","nodes":[{"content":"Gets the magnitude (or absolute value) of a complex number.","pos":[0,59]}]}],"pos":[74540,74600],"yaml":true},{"content":"The <xref:System.Numerics.Complex.Magnitude%2A> property is equivalent to the absolute value of a complex number. It specifies the distance from the origin (the intersection of the x-axis and the y-axis in the Cartesian coordinate system) to the two-dimensional point represented by a complex number. The absolute value is calculated as follows:  \n  \n &#124; a + bi &#124; = <xref:System.Math.Sqrt%2A?displayProperty=fullName>(a * a + b * b)  \n  \n If the calculation of the absolute value results in an overflow, this property returns either <xref:System.Double.PositiveInfinity?displayProperty=fullName> or <xref:System.Double.NegativeInfinity?displayProperty=fullName>.  \n  \n The <xref:System.Numerics.Complex.Magnitude%2A> and the <xref:System.Numerics.Complex.Phase%2A> properties define the position of a point that represents a complex number in the polar coordinate system.  \n  \n You can instantiate a complex number based on its polar coordinates instead of its Cartesian coordinates by calling the <xref:System.Numerics.Complex.FromPolarCoordinates%2A> method.","nodes":[{"pos":[0,345],"content":"The <xref:System.Numerics.Complex.Magnitude%2A> property is equivalent to the absolute value of a complex number. It specifies the distance from the origin (the intersection of the x-axis and the y-axis in the Cartesian coordinate system) to the two-dimensional point represented by a complex number. The absolute value is calculated as follows:","nodes":[{"content":"The <xref:System.Numerics.Complex.Magnitude%2A> property is equivalent to the absolute value of a complex number. It specifies the distance from the origin (the intersection of the x-axis and the y-axis in the Cartesian coordinate system) to the two-dimensional point represented by a complex number. The absolute value is calculated as follows:","pos":[0,345],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Numerics.Complex.Magnitude%2A&gt;</ph> property is equivalent to the absolute value of a complex number.","pos":[0,113],"source":"The <xref:System.Numerics.Complex.Magnitude%2A> property is equivalent to the absolute value of a complex number."},{"content":"It specifies the distance from the origin (the intersection of the x-axis and the y-axis in the Cartesian coordinate system) to the two-dimensional point represented by a complex number.","pos":[114,300]},{"content":"The absolute value is calculated as follows:","pos":[301,345]}]}]},{"pos":[352,441],"content":"&#124; a + bi &#124; = <xref:System.Math.Sqrt%2A?displayProperty=fullName>(a * a + b * b)","nodes":[{"content":"&amp;#124; a + bi &amp;#124; = <ph id=\"ph1\">&lt;xref:System.Math.Sqrt%2A?displayProperty=fullName&gt;</ph>(a * a + b * b)","pos":[0,89],"source":"&#124; a + bi &#124; = <xref:System.Math.Sqrt%2A?displayProperty=fullName>(a * a + b * b)"}]},{"pos":[448,671],"content":"If the calculation of the absolute value results in an overflow, this property returns either <xref:System.Double.PositiveInfinity?displayProperty=fullName> or <xref:System.Double.NegativeInfinity?displayProperty=fullName>.","nodes":[{"content":"If the calculation of the absolute value results in an overflow, this property returns either <ph id=\"ph1\">&lt;xref:System.Double.PositiveInfinity?displayProperty=fullName&gt;</ph> or <ph id=\"ph2\">&lt;xref:System.Double.NegativeInfinity?displayProperty=fullName&gt;</ph>.","pos":[0,223],"source":"If the calculation of the absolute value results in an overflow, this property returns either <xref:System.Double.PositiveInfinity?displayProperty=fullName> or <xref:System.Double.NegativeInfinity?displayProperty=fullName>."}]},{"pos":[678,880],"content":"The <xref:System.Numerics.Complex.Magnitude%2A> and the <xref:System.Numerics.Complex.Phase%2A> properties define the position of a point that represents a complex number in the polar coordinate system.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Numerics.Complex.Magnitude%2A&gt;</ph> and the <ph id=\"ph2\">&lt;xref:System.Numerics.Complex.Phase%2A&gt;</ph> properties define the position of a point that represents a complex number in the polar coordinate system.","pos":[0,202],"source":"The <xref:System.Numerics.Complex.Magnitude%2A> and the <xref:System.Numerics.Complex.Phase%2A> properties define the position of a point that represents a complex number in the polar coordinate system."}]},{"pos":[887,1069],"content":"You can instantiate a complex number based on its polar coordinates instead of its Cartesian coordinates by calling the <xref:System.Numerics.Complex.FromPolarCoordinates%2A> method.","nodes":[{"content":"You can instantiate a complex number based on its polar coordinates instead of its Cartesian coordinates by calling the <ph id=\"ph1\">&lt;xref:System.Numerics.Complex.FromPolarCoordinates%2A&gt;</ph> method.","pos":[0,182],"source":"You can instantiate a complex number based on its polar coordinates instead of its Cartesian coordinates by calling the <xref:System.Numerics.Complex.FromPolarCoordinates%2A> method."}]}],"pos":[74611,75691],"yaml":true,"extradata":"MT"},{"content":"The magnitude of the current instance.","nodes":[{"pos":[0,38],"content":"The magnitude of the current instance.","nodes":[{"content":"The magnitude of the current instance.","pos":[0,38]}]}],"pos":[76291,76330],"yaml":true},{"content":"Returns the product of two complex numbers.","nodes":[{"pos":[0,43],"content":"Returns the product of two complex numbers.","nodes":[{"content":"Returns the product of two complex numbers.","pos":[0,43]}]}],"pos":[77948,77992],"yaml":true},{"content":"The multiplication of a complex number, a + bi, and a second complex number, c + di, takes the following form:  \n  \n (ac - bd) + (ad + bc)i  \n  \n If the multiplication results in an overflow in either the real or imaginary component, the value of that component is either <xref:System.Double.PositiveInfinity?displayProperty=fullName> or <xref:System.Double.NegativeInfinity?displayProperty=fullName>.  \n  \n The <xref:System.Numerics.Complex.Multiply%2A> method is implemented for languages that do not support custom operators. Its behavior is identical to multiplication using the multiplication operator.","nodes":[{"pos":[0,110],"content":"The multiplication of a complex number, a + bi, and a second complex number, c + di, takes the following form:","nodes":[{"content":"The multiplication of a complex number, a + bi, and a second complex number, c + di, takes the following form:","pos":[0,110]}]},{"pos":[117,139],"content":"(ac - bd) + (ad + bc)i","nodes":[{"content":"(ac - bd) + (ad + bc)i","pos":[0,22]}]},{"pos":[146,401],"content":"If the multiplication results in an overflow in either the real or imaginary component, the value of that component is either <xref:System.Double.PositiveInfinity?displayProperty=fullName> or <xref:System.Double.NegativeInfinity?displayProperty=fullName>.","nodes":[{"content":"If the multiplication results in an overflow in either the real or imaginary component, the value of that component is either <ph id=\"ph1\">&lt;xref:System.Double.PositiveInfinity?displayProperty=fullName&gt;</ph> or <ph id=\"ph2\">&lt;xref:System.Double.NegativeInfinity?displayProperty=fullName&gt;</ph>.","pos":[0,255],"source":"If the multiplication results in an overflow in either the real or imaginary component, the value of that component is either <xref:System.Double.PositiveInfinity?displayProperty=fullName> or <xref:System.Double.NegativeInfinity?displayProperty=fullName>."}]},{"pos":[408,607],"content":"The <xref:System.Numerics.Complex.Multiply%2A> method is implemented for languages that do not support custom operators. Its behavior is identical to multiplication using the multiplication operator.","nodes":[{"content":"The <xref:System.Numerics.Complex.Multiply%2A> method is implemented for languages that do not support custom operators. Its behavior is identical to multiplication using the multiplication operator.","pos":[0,199],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Numerics.Complex.Multiply%2A&gt;</ph> method is implemented for languages that do not support custom operators.","pos":[0,120],"source":"The <xref:System.Numerics.Complex.Multiply%2A> method is implemented for languages that do not support custom operators."},{"content":"Its behavior is identical to multiplication using the multiplication operator.","pos":[121,199]}]}]}],"pos":[78003,78619],"yaml":true,"extradata":"MT"},{"content":"The first complex number to multiply.","nodes":[{"pos":[0,37],"content":"The first complex number to multiply.","nodes":[{"content":"The first complex number to multiply.","pos":[0,37]}]}],"pos":[79267,79305],"yaml":true},{"content":"The second complex number to multiply.","nodes":[{"pos":[0,38],"content":"The second complex number to multiply.","nodes":[{"content":"The second complex number to multiply.","pos":[0,38]}]}],"pos":[79376,79415],"yaml":true},{"content":"The product of the <code>left</code> and <code>right</code> parameters.","nodes":[{"pos":[0,71],"content":"The product of the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">left</ph><ept id=\"p1\">&lt;/code&gt;</ept> and <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">right</ph><ept id=\"p2\">&lt;/code&gt;</ept> parameters.","source":"The product of the <code>left</code> and <code>right</code> parameters."}],"pos":[79482,79554],"yaml":true},{"content":"Returns the additive inverse of a specified complex number.","nodes":[{"pos":[0,59],"content":"Returns the additive inverse of a specified complex number.","nodes":[{"content":"Returns the additive inverse of a specified complex number.","pos":[0,59]}]}],"pos":[81060,81120],"yaml":true},{"content":"The additive inverse of a complex number is a complex number that produces a value of <xref:System.Numerics.Complex> when it is added to the original complex number. This method returns a complex number in which the real and imaginary components of the original complex number are multiplied by -1.  \n  \n The <xref:System.Numerics.Complex.Negate%2A> method is implemented for languages that do not support custom operators. Its behavior is identical to negation using the unary negation operator, <xref:System.Numerics.Complex.op_UnaryNegation%2A>.","nodes":[{"pos":[0,298],"content":"The additive inverse of a complex number is a complex number that produces a value of <xref:System.Numerics.Complex> when it is added to the original complex number. This method returns a complex number in which the real and imaginary components of the original complex number are multiplied by -1.","nodes":[{"content":"The additive inverse of a complex number is a complex number that produces a value of <xref:System.Numerics.Complex> when it is added to the original complex number. This method returns a complex number in which the real and imaginary components of the original complex number are multiplied by -1.","pos":[0,298],"nodes":[{"content":"The additive inverse of a complex number is a complex number that produces a value of <ph id=\"ph1\">&lt;xref:System.Numerics.Complex&gt;</ph> when it is added to the original complex number.","pos":[0,165],"source":"The additive inverse of a complex number is a complex number that produces a value of <xref:System.Numerics.Complex> when it is added to the original complex number."},{"content":"This method returns a complex number in which the real and imaginary components of the original complex number are multiplied by -1.","pos":[166,298]}]}]},{"pos":[305,548],"content":"The <xref:System.Numerics.Complex.Negate%2A> method is implemented for languages that do not support custom operators. Its behavior is identical to negation using the unary negation operator, <xref:System.Numerics.Complex.op_UnaryNegation%2A>.","nodes":[{"content":"The <xref:System.Numerics.Complex.Negate%2A> method is implemented for languages that do not support custom operators. Its behavior is identical to negation using the unary negation operator, <xref:System.Numerics.Complex.op_UnaryNegation%2A>.","pos":[0,243],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Numerics.Complex.Negate%2A&gt;</ph> method is implemented for languages that do not support custom operators.","pos":[0,118],"source":"The <xref:System.Numerics.Complex.Negate%2A> method is implemented for languages that do not support custom operators."},{"content":"Its behavior is identical to negation using the unary negation operator, <ph id=\"ph1\">&lt;xref:System.Numerics.Complex.op_UnaryNegation%2A&gt;</ph>.","pos":[119,243],"source":" Its behavior is identical to negation using the unary negation operator, <xref:System.Numerics.Complex.op_UnaryNegation%2A>."}]}]}],"pos":[81131,81684],"yaml":true,"extradata":"MT"},{"content":"A complex number.","nodes":[{"pos":[0,17],"content":"A complex number.","nodes":[{"content":"A complex number.","pos":[0,17]}]}],"pos":[82291,82309],"yaml":true},{"content":"The result of the <xref href=\"System.Numerics.Complex.Real\"></xref> and <xref href=\"System.Numerics.Complex.Imaginary\"></xref> components of the <code>value</code> parameter multiplied by -1.","nodes":[{"pos":[0,191],"content":"The result of the <ph id=\"ph1\">&lt;xref href=\"System.Numerics.Complex.Real\"&gt;&lt;/xref&gt;</ph> and <ph id=\"ph2\">&lt;xref href=\"System.Numerics.Complex.Imaginary\"&gt;&lt;/xref&gt;</ph> components of the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph3\">value</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter multiplied by -1.","source":"The result of the <xref href=\"System.Numerics.Complex.Real\"></xref> and <xref href=\"System.Numerics.Complex.Imaginary\"></xref> components of the <code>value</code> parameter multiplied by -1."}],"pos":[82376,82568],"yaml":true},{"content":"Returns a new <xref href=\"System.Numerics.Complex\"></xref> instance with a real number equal to one and an imaginary number equal to zero.","nodes":[{"pos":[0,138],"content":"Returns a new <ph id=\"ph1\">&lt;xref href=\"System.Numerics.Complex\"&gt;&lt;/xref&gt;</ph> instance with a real number equal to one and an imaginary number equal to zero.","source":"Returns a new <xref href=\"System.Numerics.Complex\"></xref> instance with a real number equal to one and an imaginary number equal to zero."}],"pos":[83951,84090],"yaml":true},{"content":"Adds two complex numbers.","nodes":[{"pos":[0,25],"content":"Adds two complex numbers.","nodes":[{"content":"Adds two complex numbers.","pos":[0,25]}]}],"pos":[86529,86555],"yaml":true},{"content":"The <xref:System.Numerics.Complex.op_Addition%2A> method defines the addition operation for complex numbers. It enables code such as the following:  \n  \n [!code-csharp[System.Numerics.Complex.Add#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.numerics.complex.add/cs/add3.cs#3)]\n [!code-vb[System.Numerics.Complex.Add#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.numerics.complex.add/vb/add3.vb#3)]  \n  \n The addition of a complex number, a + bi, and a second complex number, c + di, takes the following form:  \n  \n (a + c) + (b + d)i  \n  \n If the method call results in an overflow in either the real or imaginary component, the value of that component is either <xref:System.Double.PositiveInfinity?displayProperty=fullName> or <xref:System.Double.NegativeInfinity?displayProperty=fullName>.  \n  \n Languages that do not support custom operators can call the <xref:System.Numerics.Complex.Add%2A> method instead.  \n  \n The equivalent method for this operator is <xref:System.Numerics.Complex.Add%28System.Numerics.Complex%2CSystem.Numerics.Complex%29?displayProperty=fullName>","nodes":[{"pos":[0,147],"content":"The <xref:System.Numerics.Complex.op_Addition%2A> method defines the addition operation for complex numbers. It enables code such as the following:","nodes":[{"content":"The <xref:System.Numerics.Complex.op_Addition%2A> method defines the addition operation for complex numbers. It enables code such as the following:","pos":[0,147],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Numerics.Complex.op_Addition%2A&gt;</ph> method defines the addition operation for complex numbers.","pos":[0,108],"source":"The <xref:System.Numerics.Complex.op_Addition%2A> method defines the addition operation for complex numbers."},{"content":"It enables code such as the following:","pos":[109,147]}]}]},{"pos":[154,429],"content":"<bpt id=\"p1\">[!code-csharp</bpt><bpt id=\"p2\">[</bpt>System.Numerics.Complex.Add#3<ept id=\"p2\">](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.numerics.complex.add/cs/add3.cs#3)</ept><ept id=\"p1\">]</ept> <bpt id=\"p3\">[!code-vb</bpt><bpt id=\"p4\">[</bpt>System.Numerics.Complex.Add#3<ept id=\"p4\">](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.numerics.complex.add/vb/add3.vb#3)</ept><ept id=\"p3\">]</ept>","source":"[!code-csharp[System.Numerics.Complex.Add#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.numerics.complex.add/cs/add3.cs#3)]\n [!code-vb[System.Numerics.Complex.Add#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.numerics.complex.add/vb/add3.vb#3)]"},{"pos":[436,540],"content":"The addition of a complex number, a + bi, and a second complex number, c + di, takes the following form:","nodes":[{"content":"The addition of a complex number, a + bi, and a second complex number, c + di, takes the following form:","pos":[0,104]}]},{"pos":[547,565],"content":"(a + c) + (b + d)i","nodes":[{"content":"(a + c) + (b + d)i","pos":[0,18]}]},{"pos":[572,824],"content":"If the method call results in an overflow in either the real or imaginary component, the value of that component is either <xref:System.Double.PositiveInfinity?displayProperty=fullName> or <xref:System.Double.NegativeInfinity?displayProperty=fullName>.","nodes":[{"content":"If the method call results in an overflow in either the real or imaginary component, the value of that component is either <ph id=\"ph1\">&lt;xref:System.Double.PositiveInfinity?displayProperty=fullName&gt;</ph> or <ph id=\"ph2\">&lt;xref:System.Double.NegativeInfinity?displayProperty=fullName&gt;</ph>.","pos":[0,252],"source":"If the method call results in an overflow in either the real or imaginary component, the value of that component is either <xref:System.Double.PositiveInfinity?displayProperty=fullName> or <xref:System.Double.NegativeInfinity?displayProperty=fullName>."}]},{"pos":[831,944],"content":"Languages that do not support custom operators can call the <xref:System.Numerics.Complex.Add%2A> method instead.","nodes":[{"content":"Languages that do not support custom operators can call the <ph id=\"ph1\">&lt;xref:System.Numerics.Complex.Add%2A&gt;</ph> method instead.","pos":[0,113],"source":"Languages that do not support custom operators can call the <xref:System.Numerics.Complex.Add%2A> method instead."}]},{"pos":[951,1108],"content":"The equivalent method for this operator is <xref:System.Numerics.Complex.Add%28System.Numerics.Complex%2CSystem.Numerics.Complex%29?displayProperty=fullName>","nodes":[{"content":"The equivalent method for this operator is <ph id=\"ph1\">&lt;xref:System.Numerics.Complex.Add%28System.Numerics.Complex%2CSystem.Numerics.Complex%29?displayProperty=fullName&gt;</ph>","pos":[0,157],"source":"The equivalent method for this operator is <xref:System.Numerics.Complex.Add%28System.Numerics.Complex%2CSystem.Numerics.Complex%29?displayProperty=fullName>"}]}],"pos":[86566,87690],"yaml":true,"extradata":"MT"},{"content":"The first value to add.","nodes":[{"pos":[0,23],"content":"The first value to add.","nodes":[{"content":"The first value to add.","pos":[0,23]}]}],"pos":[88279,88303],"yaml":true},{"content":"The second value to add.","nodes":[{"pos":[0,24],"content":"The second value to add.","nodes":[{"content":"The second value to add.","pos":[0,24]}]}],"pos":[88374,88399],"yaml":true},{"content":"The sum of <code>left</code> and <code>right</code>.","nodes":[{"pos":[0,52],"content":"The sum of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">left</ph><ept id=\"p1\">&lt;/code&gt;</ept> and <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">right</ph><ept id=\"p2\">&lt;/code&gt;</ept>.","source":"The sum of <code>left</code> and <code>right</code>."}],"pos":[88466,88519],"yaml":true},{"content":"Divides a specified complex number by another specified complex number.","nodes":[{"pos":[0,71],"content":"Divides a specified complex number by another specified complex number.","nodes":[{"content":"Divides a specified complex number by another specified complex number.","pos":[0,71]}]}],"pos":[90159,90231],"yaml":true},{"content":"The <xref:System.Numerics.Complex.op_Division%2A> method defines the division operation for complex numbers. It enables code such as the following:  \n  \n [!code-csharp[System.Numerics.Complex.Divide#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.numerics.complex.divide/cs/divide2.cs#2)]\n [!code-vb[System.Numerics.Complex.Divide#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.numerics.complex.divide/vb/divide2.vb#2)]  \n  \n The division of a complex number, a + bi, and a second complex number, c + di, takes the following form:  \n  \n ((ac + bd) / (c<sup>2</sup> + d<sup>2</sup>)) + ((bc - ad) / (c<sup>2</sup> + d<sup>2</sup>)i  \n  \n If the division results in an overflow in either the real or imaginary component, the value of that component is either <xref:System.Double.PositiveInfinity?displayProperty=fullName> or <xref:System.Double.NegativeInfinity?displayProperty=fullName>.  \n  \n Languages that do not support custom operators and operator overloading can call the <xref:System.Numerics.Complex.Divide%2A> method instead.  \n  \n The equivalent method for this operator is <xref:System.Numerics.Complex.Divide%28System.Numerics.Complex%2CSystem.Numerics.Complex%29?displayProperty=fullName>","nodes":[{"pos":[0,147],"content":"The <xref:System.Numerics.Complex.op_Division%2A> method defines the division operation for complex numbers. It enables code such as the following:","nodes":[{"content":"The <xref:System.Numerics.Complex.op_Division%2A> method defines the division operation for complex numbers. It enables code such as the following:","pos":[0,147],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Numerics.Complex.op_Division%2A&gt;</ph> method defines the division operation for complex numbers.","pos":[0,108],"source":"The <xref:System.Numerics.Complex.op_Division%2A> method defines the division operation for complex numbers."},{"content":"It enables code such as the following:","pos":[109,147]}]}]},{"pos":[154,447],"content":"<bpt id=\"p1\">[!code-csharp</bpt><bpt id=\"p2\">[</bpt>System.Numerics.Complex.Divide#2<ept id=\"p2\">](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.numerics.complex.divide/cs/divide2.cs#2)</ept><ept id=\"p1\">]</ept> <bpt id=\"p3\">[!code-vb</bpt><bpt id=\"p4\">[</bpt>System.Numerics.Complex.Divide#2<ept id=\"p4\">](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.numerics.complex.divide/vb/divide2.vb#2)</ept><ept id=\"p3\">]</ept>","source":"[!code-csharp[System.Numerics.Complex.Divide#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.numerics.complex.divide/cs/divide2.cs#2)]\n [!code-vb[System.Numerics.Complex.Divide#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.numerics.complex.divide/vb/divide2.vb#2)]"},{"pos":[454,558],"content":"The division of a complex number, a + bi, and a second complex number, c + di, takes the following form:","nodes":[{"content":"The division of a complex number, a + bi, and a second complex number, c + di, takes the following form:","pos":[0,104]}]},{"pos":[565,658],"content":"((ac + bd) / (c<bpt id=\"p1\">&lt;sup&gt;</bpt>2<ept id=\"p1\">&lt;/sup&gt;</ept> + d<bpt id=\"p2\">&lt;sup&gt;</bpt>2<ept id=\"p2\">&lt;/sup&gt;</ept>)) + ((bc - ad) / (c<bpt id=\"p3\">&lt;sup&gt;</bpt>2<ept id=\"p3\">&lt;/sup&gt;</ept> + d<bpt id=\"p4\">&lt;sup&gt;</bpt>2<ept id=\"p4\">&lt;/sup&gt;</ept>)i","source":"((ac + bd) / (c<sup>2</sup> + d<sup>2</sup>)) + ((bc - ad) / (c<sup>2</sup> + d<sup>2</sup>)i"},{"pos":[665,914],"content":"If the division results in an overflow in either the real or imaginary component, the value of that component is either <xref:System.Double.PositiveInfinity?displayProperty=fullName> or <xref:System.Double.NegativeInfinity?displayProperty=fullName>.","nodes":[{"content":"If the division results in an overflow in either the real or imaginary component, the value of that component is either <ph id=\"ph1\">&lt;xref:System.Double.PositiveInfinity?displayProperty=fullName&gt;</ph> or <ph id=\"ph2\">&lt;xref:System.Double.NegativeInfinity?displayProperty=fullName&gt;</ph>.","pos":[0,249],"source":"If the division results in an overflow in either the real or imaginary component, the value of that component is either <xref:System.Double.PositiveInfinity?displayProperty=fullName> or <xref:System.Double.NegativeInfinity?displayProperty=fullName>."}]},{"pos":[921,1062],"content":"Languages that do not support custom operators and operator overloading can call the <xref:System.Numerics.Complex.Divide%2A> method instead.","nodes":[{"content":"Languages that do not support custom operators and operator overloading can call the <ph id=\"ph1\">&lt;xref:System.Numerics.Complex.Divide%2A&gt;</ph> method instead.","pos":[0,141],"source":"Languages that do not support custom operators and operator overloading can call the <xref:System.Numerics.Complex.Divide%2A> method instead."}]},{"pos":[1069,1229],"content":"The equivalent method for this operator is <xref:System.Numerics.Complex.Divide%28System.Numerics.Complex%2CSystem.Numerics.Complex%29?displayProperty=fullName>","nodes":[{"content":"The equivalent method for this operator is <ph id=\"ph1\">&lt;xref:System.Numerics.Complex.Divide%28System.Numerics.Complex%2CSystem.Numerics.Complex%29?displayProperty=fullName&gt;</ph>","pos":[0,160],"source":"The equivalent method for this operator is <xref:System.Numerics.Complex.Divide%28System.Numerics.Complex%2CSystem.Numerics.Complex%29?displayProperty=fullName>"}]}],"pos":[90242,91487],"yaml":true,"extradata":"MT"},{"content":"The value to be divided.","nodes":[{"pos":[0,24],"content":"The value to be divided.","nodes":[{"content":"The value to be divided.","pos":[0,24]}]}],"pos":[91709,91734],"yaml":true},{"content":"The value to divide by.","nodes":[{"pos":[0,23],"content":"The value to divide by.","nodes":[{"content":"The value to divide by.","pos":[0,23]}]}],"pos":[91805,91829],"yaml":true},{"content":"The result of dividing <code>left</code> by <code>right</code>.","nodes":[{"pos":[0,63],"content":"The result of dividing <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">left</ph><ept id=\"p1\">&lt;/code&gt;</ept> by <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">right</ph><ept id=\"p2\">&lt;/code&gt;</ept>.","source":"The result of dividing <code>left</code> by <code>right</code>."}],"pos":[91896,91960],"yaml":true},{"content":"Returns a value that indicates whether two complex numbers are equal.","nodes":[{"pos":[0,69],"content":"Returns a value that indicates whether two complex numbers are equal.","nodes":[{"content":"Returns a value that indicates whether two complex numbers are equal.","pos":[0,69]}]}],"pos":[93600,93670],"yaml":true},{"content":"The <xref:System.Numerics.Complex.op_Equality%2A> method defines the operation of the equality operator for <xref:System.Numerics.Complex> values. It enables code such as the following:  \n  \n [!code-csharp[System.Numerics.Complex.Equals#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.numerics.complex.equals/cs/eqoperator1.cs#9)]\n [!code-vb[System.Numerics.Complex.Equals#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.numerics.complex.equals/vb/eqoperator1.vb#9)]  \n  \n Languages that do not support custom operators can call the <xref:System.Numerics.Complex.Equals%28System.Numerics.Complex%29> method instead.  \n  \n Two complex numbers are equal if their real parts are equal and their imaginary parts are equal. The <xref:System.Numerics.Complex.op_Equality%2A> method is equivalent to the following expression:  \n  \n [!code-csharp[System.Numerics.Complex.Equals#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.numerics.complex.equals/cs/equals1.cs#3)]\n [!code-vb[System.Numerics.Complex.Equals#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.numerics.complex.equals/vb/equals1.vb#3)]  \n  \n Note that, because of differences in precision, two complex numbers that are apparently equivalent can be considered unequal. For more information and a possible workaround, see the <xref:System.Numerics.Complex.Equals%28System.Numerics.Complex%29> method.  \n  \n The equivalent method for this operator is <xref:System.Numerics.Complex.Equals%2A?displayProperty=fullName>","nodes":[{"pos":[0,185],"content":"The <xref:System.Numerics.Complex.op_Equality%2A> method defines the operation of the equality operator for <xref:System.Numerics.Complex> values. It enables code such as the following:","nodes":[{"content":"The <xref:System.Numerics.Complex.op_Equality%2A> method defines the operation of the equality operator for <xref:System.Numerics.Complex> values. It enables code such as the following:","pos":[0,185],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Numerics.Complex.op_Equality%2A&gt;</ph> method defines the operation of the equality operator for <ph id=\"ph2\">&lt;xref:System.Numerics.Complex&gt;</ph> values.","pos":[0,146],"source":"The <xref:System.Numerics.Complex.op_Equality%2A> method defines the operation of the equality operator for <xref:System.Numerics.Complex> values."},{"content":"It enables code such as the following:","pos":[147,185]}]}]},{"pos":[192,493],"content":"<bpt id=\"p1\">[!code-csharp</bpt><bpt id=\"p2\">[</bpt>System.Numerics.Complex.Equals#9<ept id=\"p2\">](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.numerics.complex.equals/cs/eqoperator1.cs#9)</ept><ept id=\"p1\">]</ept> <bpt id=\"p3\">[!code-vb</bpt><bpt id=\"p4\">[</bpt>System.Numerics.Complex.Equals#9<ept id=\"p4\">](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.numerics.complex.equals/vb/eqoperator1.vb#9)</ept><ept id=\"p3\">]</ept>","source":"[!code-csharp[System.Numerics.Complex.Equals#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.numerics.complex.equals/cs/eqoperator1.cs#9)]\n [!code-vb[System.Numerics.Complex.Equals#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.numerics.complex.equals/vb/eqoperator1.vb#9)]"},{"pos":[500,642],"content":"Languages that do not support custom operators can call the <xref:System.Numerics.Complex.Equals%28System.Numerics.Complex%29> method instead.","nodes":[{"content":"Languages that do not support custom operators can call the <ph id=\"ph1\">&lt;xref:System.Numerics.Complex.Equals%28System.Numerics.Complex%29&gt;</ph> method instead.","pos":[0,142],"source":"Languages that do not support custom operators can call the <xref:System.Numerics.Complex.Equals%28System.Numerics.Complex%29> method instead."}]},{"pos":[649,845],"content":"Two complex numbers are equal if their real parts are equal and their imaginary parts are equal. The <xref:System.Numerics.Complex.op_Equality%2A> method is equivalent to the following expression:","nodes":[{"content":"Two complex numbers are equal if their real parts are equal and their imaginary parts are equal. The <xref:System.Numerics.Complex.op_Equality%2A> method is equivalent to the following expression:","pos":[0,196],"nodes":[{"content":"Two complex numbers are equal if their real parts are equal and their imaginary parts are equal.","pos":[0,96]},{"content":"The <ph id=\"ph1\">&lt;xref:System.Numerics.Complex.op_Equality%2A&gt;</ph> method is equivalent to the following expression:","pos":[97,196],"source":" The <xref:System.Numerics.Complex.op_Equality%2A> method is equivalent to the following expression:"}]}]},{"pos":[852,1145],"content":"<bpt id=\"p1\">[!code-csharp</bpt><bpt id=\"p2\">[</bpt>System.Numerics.Complex.Equals#3<ept id=\"p2\">](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.numerics.complex.equals/cs/equals1.cs#3)</ept><ept id=\"p1\">]</ept> <bpt id=\"p3\">[!code-vb</bpt><bpt id=\"p4\">[</bpt>System.Numerics.Complex.Equals#3<ept id=\"p4\">](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.numerics.complex.equals/vb/equals1.vb#3)</ept><ept id=\"p3\">]</ept>","source":"[!code-csharp[System.Numerics.Complex.Equals#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.numerics.complex.equals/cs/equals1.cs#3)]\n [!code-vb[System.Numerics.Complex.Equals#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.numerics.complex.equals/vb/equals1.vb#3)]"},{"pos":[1152,1408],"content":"Note that, because of differences in precision, two complex numbers that are apparently equivalent can be considered unequal. For more information and a possible workaround, see the <xref:System.Numerics.Complex.Equals%28System.Numerics.Complex%29> method.","nodes":[{"content":"Note that, because of differences in precision, two complex numbers that are apparently equivalent can be considered unequal. For more information and a possible workaround, see the <xref:System.Numerics.Complex.Equals%28System.Numerics.Complex%29> method.","pos":[0,256],"nodes":[{"content":"Note that, because of differences in precision, two complex numbers that are apparently equivalent can be considered unequal.","pos":[0,125]},{"content":"For more information and a possible workaround, see the <ph id=\"ph1\">&lt;xref:System.Numerics.Complex.Equals%28System.Numerics.Complex%29&gt;</ph> method.","pos":[126,256],"source":" For more information and a possible workaround, see the <xref:System.Numerics.Complex.Equals%28System.Numerics.Complex%29> method."}]}]},{"pos":[1415,1523],"content":"The equivalent method for this operator is <xref:System.Numerics.Complex.Equals%2A?displayProperty=fullName>","nodes":[{"content":"The equivalent method for this operator is <ph id=\"ph1\">&lt;xref:System.Numerics.Complex.Equals%2A?displayProperty=fullName&gt;</ph>","pos":[0,108],"source":"The equivalent method for this operator is <xref:System.Numerics.Complex.Equals%2A?displayProperty=fullName>"}]}],"pos":[93681,95221],"yaml":true,"extradata":"MT"},{"content":"The first complex number to compare.","nodes":[{"pos":[0,36],"content":"The first complex number to compare.","nodes":[{"content":"The first complex number to compare.","pos":[0,36]}]}],"pos":[95424,95461],"yaml":true},{"content":"The second complex number to compare.","nodes":[{"pos":[0,37],"content":"The second complex number to compare.","nodes":[{"content":"The second complex number to compare.","pos":[0,37]}]}],"pos":[95532,95570],"yaml":true},{"content":"`true` if the <code>left</code> and <code>right</code> parameters have the same value; otherwise, `false`.","nodes":[{"pos":[0,106],"content":"<ph id=\"ph1\">`true`</ph> if the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">left</ph><ept id=\"p1\">&lt;/code&gt;</ept> and <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph3\">right</ph><ept id=\"p2\">&lt;/code&gt;</ept> parameters have the same value; otherwise, <ph id=\"ph4\">`false`</ph>.","source":"`true` if the <code>left</code> and <code>right</code> parameters have the same value; otherwise, `false`."}],"pos":[95628,95737],"yaml":true},{"content":"Returns a value that indicates whether two complex numbers are not equal.","nodes":[{"pos":[0,73],"content":"Returns a value that indicates whether two complex numbers are not equal.","nodes":[{"content":"Returns a value that indicates whether two complex numbers are not equal.","pos":[0,73]}]}],"pos":[118818,118892],"yaml":true},{"content":"The <xref:System.Numerics.Complex.op_Equality%2A> method defines the operation of the inequality operator for complex numbers. It enables code such as the following:  \n  \n [!code-csharp[System.Numerics.Complex.Inequality#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.numerics.complex.inequality/cs/inequality1.cs#1)]\n [!code-vb[System.Numerics.Complex.Inequality#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.numerics.complex.inequality/vb/inequality1.vb#1)]  \n  \n Languages that do not support custom operators can test for inequality by calling the <xref:System.Numerics.Complex.Equals%28System.Numerics.Complex%29> method and reversing its value.  \n  \n Note that, because of differences in precision, two complex numbers that are apparently equivalent can be considered unequal. One possible workaround is to implement a comparison method that returns `true` only if the difference between the two real and imaginary parts of the complex numbers exceeds a certain threshold (such as .01% of the value of the real or imaginary component of one of the complex numbers). For more information, see the <xref:System.Numerics.Complex.Equals%28System.Numerics.Complex%29> method.","nodes":[{"pos":[0,165],"content":"The <xref:System.Numerics.Complex.op_Equality%2A> method defines the operation of the inequality operator for complex numbers. It enables code such as the following:","nodes":[{"content":"The <xref:System.Numerics.Complex.op_Equality%2A> method defines the operation of the inequality operator for complex numbers. It enables code such as the following:","pos":[0,165],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Numerics.Complex.op_Equality%2A&gt;</ph> method defines the operation of the inequality operator for complex numbers.","pos":[0,126],"source":"The <xref:System.Numerics.Complex.op_Equality%2A> method defines the operation of the inequality operator for complex numbers."},{"content":"It enables code such as the following:","pos":[127,165]}]}]},{"pos":[172,489],"content":"<bpt id=\"p1\">[!code-csharp</bpt><bpt id=\"p2\">[</bpt>System.Numerics.Complex.Inequality#1<ept id=\"p2\">](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.numerics.complex.inequality/cs/inequality1.cs#1)</ept><ept id=\"p1\">]</ept> <bpt id=\"p3\">[!code-vb</bpt><bpt id=\"p4\">[</bpt>System.Numerics.Complex.Inequality#1<ept id=\"p4\">](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.numerics.complex.inequality/vb/inequality1.vb#1)</ept><ept id=\"p3\">]</ept>","source":"[!code-csharp[System.Numerics.Complex.Inequality#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.numerics.complex.inequality/cs/inequality1.cs#1)]\n [!code-vb[System.Numerics.Complex.Inequality#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.numerics.complex.inequality/vb/inequality1.vb#1)]"},{"pos":[496,680],"content":"Languages that do not support custom operators can test for inequality by calling the <xref:System.Numerics.Complex.Equals%28System.Numerics.Complex%29> method and reversing its value.","nodes":[{"content":"Languages that do not support custom operators can test for inequality by calling the <ph id=\"ph1\">&lt;xref:System.Numerics.Complex.Equals%28System.Numerics.Complex%29&gt;</ph> method and reversing its value.","pos":[0,184],"source":"Languages that do not support custom operators can test for inequality by calling the <xref:System.Numerics.Complex.Equals%28System.Numerics.Complex%29> method and reversing its value."}]},{"pos":[687,1206],"content":"Note that, because of differences in precision, two complex numbers that are apparently equivalent can be considered unequal. One possible workaround is to implement a comparison method that returns `true` only if the difference between the two real and imaginary parts of the complex numbers exceeds a certain threshold (such as .01% of the value of the real or imaginary component of one of the complex numbers). For more information, see the <xref:System.Numerics.Complex.Equals%28System.Numerics.Complex%29> method.","nodes":[{"content":"Note that, because of differences in precision, two complex numbers that are apparently equivalent can be considered unequal.","pos":[0,125]},{"content":"One possible workaround is to implement a comparison method that returns <ph id=\"ph1\">`true`</ph> only if the difference between the two real and imaginary parts of the complex numbers exceeds a certain threshold (such as .01% of the value of the real or imaginary component of one of the complex numbers).","pos":[126,414],"source":" One possible workaround is to implement a comparison method that returns `true` only if the difference between the two real and imaginary parts of the complex numbers exceeds a certain threshold (such as .01% of the value of the real or imaginary component of one of the complex numbers)."},{"content":"For more information, see the <ph id=\"ph1\">&lt;xref:System.Numerics.Complex.Equals%28System.Numerics.Complex%29&gt;</ph> method.","pos":[415,519],"source":" For more information, see the <xref:System.Numerics.Complex.Equals%28System.Numerics.Complex%29> method."}]}],"pos":[118903,120119],"yaml":true,"extradata":"MT"},{"content":"The first value to compare.","nodes":[{"pos":[0,27],"content":"The first value to compare.","nodes":[{"content":"The first value to compare.","pos":[0,27]}]}],"pos":[120324,120352],"yaml":true},{"content":"The second value to compare.","nodes":[{"pos":[0,28],"content":"The second value to compare.","nodes":[{"content":"The second value to compare.","pos":[0,28]}]}],"pos":[120423,120452],"yaml":true},{"content":"`true` if <code>left</code> and <code>right</code> are not equal; otherwise, `false`.","nodes":[{"pos":[0,85],"content":"<ph id=\"ph1\">`true`</ph> if <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">left</ph><ept id=\"p1\">&lt;/code&gt;</ept> and <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph3\">right</ph><ept id=\"p2\">&lt;/code&gt;</ept> are not equal; otherwise, <ph id=\"ph4\">`false`</ph>.","source":"`true` if <code>left</code> and <code>right</code> are not equal; otherwise, `false`."}],"pos":[120510,120598],"yaml":true},{"content":"Multiplies two specified complex numbers.","nodes":[{"pos":[0,41],"content":"Multiplies two specified complex numbers.","nodes":[{"content":"Multiplies two specified complex numbers.","pos":[0,41]}]}],"pos":[122240,122282],"yaml":true},{"content":"The <xref:System.Numerics.Complex.op_Multiply%2A> method defines the operation of the multiplication operator for complex numbers. It enables code such as the following:  \n  \n [!code-csharp[System.Numerics.Complex.Multiply#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.numerics.complex.multiply/cs/multiply2.cs#2)]\n [!code-vb[System.Numerics.Complex.Multiply#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.numerics.complex.multiply/vb/multiply2.vb#2)]  \n  \n The multiplication of a complex number, a + bi, and a second complex number, c + di, takes the following form:  \n  \n (ac - bd) + (ad + bc)i  \n  \n If the multiplication results in an overflow in either the real or imaginary component, the value of that component is either <xref:System.Double.PositiveInfinity?displayProperty=fullName> or <xref:System.Double.NegativeInfinity?displayProperty=fullName>.  \n  \n Languages that do not support custom operators can call the <xref:System.Numerics.Complex.Multiply%2A> method instead.  \n  \n The equivalent method for this operator is <xref:System.Numerics.Complex.Multiply%28System.Numerics.Complex%2CSystem.Numerics.Complex%29?displayProperty=fullName>","nodes":[{"pos":[0,169],"content":"The <xref:System.Numerics.Complex.op_Multiply%2A> method defines the operation of the multiplication operator for complex numbers. It enables code such as the following:","nodes":[{"content":"The <xref:System.Numerics.Complex.op_Multiply%2A> method defines the operation of the multiplication operator for complex numbers. It enables code such as the following:","pos":[0,169],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Numerics.Complex.op_Multiply%2A&gt;</ph> method defines the operation of the multiplication operator for complex numbers.","pos":[0,130],"source":"The <xref:System.Numerics.Complex.op_Multiply%2A> method defines the operation of the multiplication operator for complex numbers."},{"content":"It enables code such as the following:","pos":[131,169]}]}]},{"pos":[176,481],"content":"<bpt id=\"p1\">[!code-csharp</bpt><bpt id=\"p2\">[</bpt>System.Numerics.Complex.Multiply#2<ept id=\"p2\">](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.numerics.complex.multiply/cs/multiply2.cs#2)</ept><ept id=\"p1\">]</ept> <bpt id=\"p3\">[!code-vb</bpt><bpt id=\"p4\">[</bpt>System.Numerics.Complex.Multiply#2<ept id=\"p4\">](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.numerics.complex.multiply/vb/multiply2.vb#2)</ept><ept id=\"p3\">]</ept>","source":"[!code-csharp[System.Numerics.Complex.Multiply#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.numerics.complex.multiply/cs/multiply2.cs#2)]\n [!code-vb[System.Numerics.Complex.Multiply#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.numerics.complex.multiply/vb/multiply2.vb#2)]"},{"pos":[488,598],"content":"The multiplication of a complex number, a + bi, and a second complex number, c + di, takes the following form:","nodes":[{"content":"The multiplication of a complex number, a + bi, and a second complex number, c + di, takes the following form:","pos":[0,110]}]},{"pos":[605,627],"content":"(ac - bd) + (ad + bc)i","nodes":[{"content":"(ac - bd) + (ad + bc)i","pos":[0,22]}]},{"pos":[634,889],"content":"If the multiplication results in an overflow in either the real or imaginary component, the value of that component is either <xref:System.Double.PositiveInfinity?displayProperty=fullName> or <xref:System.Double.NegativeInfinity?displayProperty=fullName>.","nodes":[{"content":"If the multiplication results in an overflow in either the real or imaginary component, the value of that component is either <ph id=\"ph1\">&lt;xref:System.Double.PositiveInfinity?displayProperty=fullName&gt;</ph> or <ph id=\"ph2\">&lt;xref:System.Double.NegativeInfinity?displayProperty=fullName&gt;</ph>.","pos":[0,255],"source":"If the multiplication results in an overflow in either the real or imaginary component, the value of that component is either <xref:System.Double.PositiveInfinity?displayProperty=fullName> or <xref:System.Double.NegativeInfinity?displayProperty=fullName>."}]},{"pos":[896,1014],"content":"Languages that do not support custom operators can call the <xref:System.Numerics.Complex.Multiply%2A> method instead.","nodes":[{"content":"Languages that do not support custom operators can call the <ph id=\"ph1\">&lt;xref:System.Numerics.Complex.Multiply%2A&gt;</ph> method instead.","pos":[0,118],"source":"Languages that do not support custom operators can call the <xref:System.Numerics.Complex.Multiply%2A> method instead."}]},{"pos":[1021,1183],"content":"The equivalent method for this operator is <xref:System.Numerics.Complex.Multiply%28System.Numerics.Complex%2CSystem.Numerics.Complex%29?displayProperty=fullName>","nodes":[{"content":"The equivalent method for this operator is <ph id=\"ph1\">&lt;xref:System.Numerics.Complex.Multiply%28System.Numerics.Complex%2CSystem.Numerics.Complex%29?displayProperty=fullName&gt;</ph>","pos":[0,162],"source":"The equivalent method for this operator is <xref:System.Numerics.Complex.Multiply%28System.Numerics.Complex%2CSystem.Numerics.Complex%29?displayProperty=fullName>"}]}],"pos":[122293,123492],"yaml":true,"extradata":"MT"},{"content":"The first value to multiply.","nodes":[{"pos":[0,28],"content":"The first value to multiply.","nodes":[{"content":"The first value to multiply.","pos":[0,28]}]}],"pos":[123714,123743],"yaml":true},{"content":"The second value to multiply.","nodes":[{"pos":[0,29],"content":"The second value to multiply.","nodes":[{"content":"The second value to multiply.","pos":[0,29]}]}],"pos":[123814,123844],"yaml":true},{"content":"The product of <code>left</code> and <code>right</code>.","nodes":[{"pos":[0,56],"content":"The product of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">left</ph><ept id=\"p1\">&lt;/code&gt;</ept> and <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">right</ph><ept id=\"p2\">&lt;/code&gt;</ept>.","source":"The product of <code>left</code> and <code>right</code>."}],"pos":[123911,123968],"yaml":true},{"content":"Subtracts a complex number from another complex number.","nodes":[{"pos":[0,55],"content":"Subtracts a complex number from another complex number.","nodes":[{"content":"Subtracts a complex number from another complex number.","pos":[0,55]}]}],"pos":[125626,125682],"yaml":true},{"content":"The <xref:System.Numerics.Complex.op_Subtraction%2A> method defines the operation of the subtraction operator for complex numbers. It enables code such as the following:  \n  \n [!code-csharp[System.Numerics.Complex.Subtract#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.numerics.complex.subtract/cs/subtract2.cs#2)]\n [!code-vb[System.Numerics.Complex.Subtract#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.numerics.complex.subtract/vb/subtract2.vb#2)]  \n  \n If the method call results in an overflow in either the real or imaginary component, the value of that component is either <xref:System.Double.PositiveInfinity?displayProperty=fullName> or <xref:System.Double.NegativeInfinity?displayProperty=fullName>.  \n  \n The subtraction of a complex number, c + di, from another complex number, a + bi, takes the following form:  \n  \n (a - c) + (b - d)i  \n  \n Languages that do not support custom operators can call the <xref:System.Numerics.Complex.Subtract%2A> method instead.  \n  \n The equivalent method for this operator is <xref:System.Numerics.Complex.Subtract%28System.Numerics.Complex%2CSystem.Numerics.Complex%29?displayProperty=fullName>","nodes":[{"pos":[0,169],"content":"The <xref:System.Numerics.Complex.op_Subtraction%2A> method defines the operation of the subtraction operator for complex numbers. It enables code such as the following:","nodes":[{"content":"The <xref:System.Numerics.Complex.op_Subtraction%2A> method defines the operation of the subtraction operator for complex numbers. It enables code such as the following:","pos":[0,169],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Numerics.Complex.op_Subtraction%2A&gt;</ph> method defines the operation of the subtraction operator for complex numbers.","pos":[0,130],"source":"The <xref:System.Numerics.Complex.op_Subtraction%2A> method defines the operation of the subtraction operator for complex numbers."},{"content":"It enables code such as the following:","pos":[131,169]}]}]},{"pos":[176,481],"content":"<bpt id=\"p1\">[!code-csharp</bpt><bpt id=\"p2\">[</bpt>System.Numerics.Complex.Subtract#2<ept id=\"p2\">](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.numerics.complex.subtract/cs/subtract2.cs#2)</ept><ept id=\"p1\">]</ept> <bpt id=\"p3\">[!code-vb</bpt><bpt id=\"p4\">[</bpt>System.Numerics.Complex.Subtract#2<ept id=\"p4\">](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.numerics.complex.subtract/vb/subtract2.vb#2)</ept><ept id=\"p3\">]</ept>","source":"[!code-csharp[System.Numerics.Complex.Subtract#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.numerics.complex.subtract/cs/subtract2.cs#2)]\n [!code-vb[System.Numerics.Complex.Subtract#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.numerics.complex.subtract/vb/subtract2.vb#2)]"},{"pos":[488,740],"content":"If the method call results in an overflow in either the real or imaginary component, the value of that component is either <xref:System.Double.PositiveInfinity?displayProperty=fullName> or <xref:System.Double.NegativeInfinity?displayProperty=fullName>.","nodes":[{"content":"If the method call results in an overflow in either the real or imaginary component, the value of that component is either <ph id=\"ph1\">&lt;xref:System.Double.PositiveInfinity?displayProperty=fullName&gt;</ph> or <ph id=\"ph2\">&lt;xref:System.Double.NegativeInfinity?displayProperty=fullName&gt;</ph>.","pos":[0,252],"source":"If the method call results in an overflow in either the real or imaginary component, the value of that component is either <xref:System.Double.PositiveInfinity?displayProperty=fullName> or <xref:System.Double.NegativeInfinity?displayProperty=fullName>."}]},{"pos":[747,854],"content":"The subtraction of a complex number, c + di, from another complex number, a + bi, takes the following form:","nodes":[{"content":"The subtraction of a complex number, c + di, from another complex number, a + bi, takes the following form:","pos":[0,107]}]},{"pos":[861,879],"content":"(a - c) + (b - d)i","nodes":[{"content":"(a - c) + (b - d)i","pos":[0,18]}]},{"pos":[886,1004],"content":"Languages that do not support custom operators can call the <xref:System.Numerics.Complex.Subtract%2A> method instead.","nodes":[{"content":"Languages that do not support custom operators can call the <ph id=\"ph1\">&lt;xref:System.Numerics.Complex.Subtract%2A&gt;</ph> method instead.","pos":[0,118],"source":"Languages that do not support custom operators can call the <xref:System.Numerics.Complex.Subtract%2A> method instead."}]},{"pos":[1011,1173],"content":"The equivalent method for this operator is <xref:System.Numerics.Complex.Subtract%28System.Numerics.Complex%2CSystem.Numerics.Complex%29?displayProperty=fullName>","nodes":[{"content":"The equivalent method for this operator is <ph id=\"ph1\">&lt;xref:System.Numerics.Complex.Subtract%28System.Numerics.Complex%2CSystem.Numerics.Complex%29?displayProperty=fullName&gt;</ph>","pos":[0,162],"source":"The equivalent method for this operator is <xref:System.Numerics.Complex.Subtract%28System.Numerics.Complex%2CSystem.Numerics.Complex%29?displayProperty=fullName>"}]}],"pos":[125693,126882],"yaml":true,"extradata":"MT"},{"content":"The value to subtract from (the minuend).","nodes":[{"pos":[0,41],"content":"The value to subtract from (the minuend).","nodes":[{"content":"The value to subtract from (the minuend).","pos":[0,41]}]}],"pos":[127107,127149],"yaml":true},{"content":"The value to subtract (the subtrahend).","nodes":[{"pos":[0,39],"content":"The value to subtract (the subtrahend).","nodes":[{"content":"The value to subtract (the subtrahend).","pos":[0,39]}]}],"pos":[127220,127260],"yaml":true},{"content":"The result of subtracting <code>right</code> from <code>left</code>.","nodes":[{"pos":[0,68],"content":"The result of subtracting <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">right</ph><ept id=\"p1\">&lt;/code&gt;</ept> from <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">left</ph><ept id=\"p2\">&lt;/code&gt;</ept>.","source":"The result of subtracting <code>right</code> from <code>left</code>."}],"pos":[127327,127396],"yaml":true},{"content":"Returns the additive inverse of a specified complex number.","nodes":[{"pos":[0,59],"content":"Returns the additive inverse of a specified complex number.","nodes":[{"content":"Returns the additive inverse of a specified complex number.","pos":[0,59]}]}],"pos":[128970,129030],"yaml":true},{"content":"The <xref:System.Numerics.Complex.op_UnaryNegation%2A> method defines the operation of the unary negation (additive inverse) operator for complex numbers. It enables code such as the following:  \n  \n [!code-csharp[System.Numerics.Complex.Negate#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.numerics.complex.negate/cs/negate2.cs#2)]\n [!code-vb[System.Numerics.Complex.Negate#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.numerics.complex.negate/vb/negate2.vb#2)]  \n  \n The resulting complex number produces a value of <xref:System.Numerics.Complex> 0 (zero) when it is added to the original complex number. Languages that do not support custom operators can call the <xref:System.Numerics.Complex.Negate%2A> method instead.  \n  \n The equivalent method for this operator is <xref:System.Numerics.Complex.Negate%28System.Numerics.Complex%29?displayProperty=fullName>","nodes":[{"pos":[0,193],"content":"The <xref:System.Numerics.Complex.op_UnaryNegation%2A> method defines the operation of the unary negation (additive inverse) operator for complex numbers. It enables code such as the following:","nodes":[{"content":"The <xref:System.Numerics.Complex.op_UnaryNegation%2A> method defines the operation of the unary negation (additive inverse) operator for complex numbers. It enables code such as the following:","pos":[0,193],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Numerics.Complex.op_UnaryNegation%2A&gt;</ph> method defines the operation of the unary negation (additive inverse) operator for complex numbers.","pos":[0,154],"source":"The <xref:System.Numerics.Complex.op_UnaryNegation%2A> method defines the operation of the unary negation (additive inverse) operator for complex numbers."},{"content":"It enables code such as the following:","pos":[155,193]}]}]},{"pos":[200,493],"content":"<bpt id=\"p1\">[!code-csharp</bpt><bpt id=\"p2\">[</bpt>System.Numerics.Complex.Negate#2<ept id=\"p2\">](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.numerics.complex.negate/cs/negate2.cs#2)</ept><ept id=\"p1\">]</ept> <bpt id=\"p3\">[!code-vb</bpt><bpt id=\"p4\">[</bpt>System.Numerics.Complex.Negate#2<ept id=\"p4\">](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.numerics.complex.negate/vb/negate2.vb#2)</ept><ept id=\"p3\">]</ept>","source":"[!code-csharp[System.Numerics.Complex.Negate#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.numerics.complex.negate/cs/negate2.cs#2)]\n [!code-vb[System.Numerics.Complex.Negate#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.numerics.complex.negate/vb/negate2.vb#2)]"},{"pos":[500,754],"content":"The resulting complex number produces a value of <xref:System.Numerics.Complex> 0 (zero) when it is added to the original complex number. Languages that do not support custom operators can call the <xref:System.Numerics.Complex.Negate%2A> method instead.","nodes":[{"content":"The resulting complex number produces a value of <xref:System.Numerics.Complex> 0 (zero) when it is added to the original complex number. Languages that do not support custom operators can call the <xref:System.Numerics.Complex.Negate%2A> method instead.","pos":[0,254],"nodes":[{"content":"The resulting complex number produces a value of <ph id=\"ph1\">&lt;xref:System.Numerics.Complex&gt;</ph> 0 (zero) when it is added to the original complex number.","pos":[0,137],"source":"The resulting complex number produces a value of <xref:System.Numerics.Complex> 0 (zero) when it is added to the original complex number."},{"content":"Languages that do not support custom operators can call the <ph id=\"ph1\">&lt;xref:System.Numerics.Complex.Negate%2A&gt;</ph> method instead.","pos":[138,254],"source":" Languages that do not support custom operators can call the <xref:System.Numerics.Complex.Negate%2A> method instead."}]}]},{"pos":[761,895],"content":"The equivalent method for this operator is <xref:System.Numerics.Complex.Negate%28System.Numerics.Complex%29?displayProperty=fullName>","nodes":[{"content":"The equivalent method for this operator is <ph id=\"ph1\">&lt;xref:System.Numerics.Complex.Negate%28System.Numerics.Complex%29?displayProperty=fullName&gt;</ph>","pos":[0,134],"source":"The equivalent method for this operator is <xref:System.Numerics.Complex.Negate%28System.Numerics.Complex%29?displayProperty=fullName>"}]}],"pos":[129041,129946],"yaml":true,"extradata":"MT"},{"content":"The value to negate.","nodes":[{"pos":[0,20],"content":"The value to negate.","nodes":[{"content":"The value to negate.","pos":[0,20]}]}],"pos":[130144,130165],"yaml":true},{"content":"The result of the <xref href=\"System.Numerics.Complex.Real\"></xref> and <xref href=\"System.Numerics.Complex.Imaginary\"></xref> components of the <code>value</code> parameter multiplied by -1.","nodes":[{"pos":[0,191],"content":"The result of the <ph id=\"ph1\">&lt;xref href=\"System.Numerics.Complex.Real\"&gt;&lt;/xref&gt;</ph> and <ph id=\"ph2\">&lt;xref href=\"System.Numerics.Complex.Imaginary\"&gt;&lt;/xref&gt;</ph> components of the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph3\">value</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter multiplied by -1.","source":"The result of the <xref href=\"System.Numerics.Complex.Real\"></xref> and <xref href=\"System.Numerics.Complex.Imaginary\"></xref> components of the <code>value</code> parameter multiplied by -1."}],"pos":[130232,130424],"yaml":true},{"content":"Gets the phase of a complex number.","nodes":[{"pos":[0,35],"content":"Gets the phase of a complex number.","nodes":[{"content":"Gets the phase of a complex number.","pos":[0,35]}]}],"pos":[131832,131868],"yaml":true},{"content":"For a complex number a + bi, the phase is computed as <xref:System.Math.Atan2%2A?displayProperty=fullName>(b, a).  \n  \n You can identify a complex number by its Cartesian coordinates on the complex plane or by its polar coordinates. The phase (argument) of a complex number is the angle to the real axis of a line drawn from the point of origin (the intersection of the x-axis and the y-axis) to the point represented by the complex number. The magnitude (represented by the <xref:System.Numerics.Complex.Magnitude%2A> property) is the distance from the point of origin to the point that is represented by the complex number.  \n  \n You can instantiate a complex number based on its polar coordinates instead of its Cartesian coordinates by calling the <xref:System.Numerics.Complex.FromPolarCoordinates%2A> method.  \n  \n To convert the phase from radians to degrees, multiply it by 180/<xref:System.Math.PI?displayProperty=fullName>.","nodes":[{"pos":[0,113],"content":"For a complex number a + bi, the phase is computed as <xref:System.Math.Atan2%2A?displayProperty=fullName>(b, a).","nodes":[{"content":"For a complex number a + bi, the phase is computed as <ph id=\"ph1\">&lt;xref:System.Math.Atan2%2A?displayProperty=fullName&gt;</ph>(b, a).","pos":[0,113],"source":"For a complex number a + bi, the phase is computed as <xref:System.Math.Atan2%2A?displayProperty=fullName>(b, a)."}]},{"pos":[120,625],"content":"You can identify a complex number by its Cartesian coordinates on the complex plane or by its polar coordinates. The phase (argument) of a complex number is the angle to the real axis of a line drawn from the point of origin (the intersection of the x-axis and the y-axis) to the point represented by the complex number. The magnitude (represented by the <xref:System.Numerics.Complex.Magnitude%2A> property) is the distance from the point of origin to the point that is represented by the complex number.","nodes":[{"content":"You can identify a complex number by its Cartesian coordinates on the complex plane or by its polar coordinates. The phase (argument) of a complex number is the angle to the real axis of a line drawn from the point of origin (the intersection of the x-axis and the y-axis) to the point represented by the complex number. The magnitude (represented by the <xref:System.Numerics.Complex.Magnitude%2A> property) is the distance from the point of origin to the point that is represented by the complex number.","pos":[0,505],"nodes":[{"content":"You can identify a complex number by its Cartesian coordinates on the complex plane or by its polar coordinates.","pos":[0,112]},{"content":"The phase (argument) of a complex number is the angle to the real axis of a line drawn from the point of origin (the intersection of the x-axis and the y-axis) to the point represented by the complex number.","pos":[113,320]},{"content":"The magnitude (represented by the <ph id=\"ph1\">&lt;xref:System.Numerics.Complex.Magnitude%2A&gt;</ph> property) is the distance from the point of origin to the point that is represented by the complex number.","pos":[321,505],"source":" The magnitude (represented by the <xref:System.Numerics.Complex.Magnitude%2A> property) is the distance from the point of origin to the point that is represented by the complex number."}]}]},{"pos":[632,814],"content":"You can instantiate a complex number based on its polar coordinates instead of its Cartesian coordinates by calling the <xref:System.Numerics.Complex.FromPolarCoordinates%2A> method.","nodes":[{"content":"You can instantiate a complex number based on its polar coordinates instead of its Cartesian coordinates by calling the <ph id=\"ph1\">&lt;xref:System.Numerics.Complex.FromPolarCoordinates%2A&gt;</ph> method.","pos":[0,182],"source":"You can instantiate a complex number based on its polar coordinates instead of its Cartesian coordinates by calling the <xref:System.Numerics.Complex.FromPolarCoordinates%2A> method."}]},{"pos":[821,933],"content":"To convert the phase from radians to degrees, multiply it by 180/<xref:System.Math.PI?displayProperty=fullName>.","nodes":[{"content":"To convert the phase from radians to degrees, multiply it by 180/<ph id=\"ph1\">&lt;xref:System.Math.PI?displayProperty=fullName&gt;</ph>.","pos":[0,112],"source":"To convert the phase from radians to degrees, multiply it by 180/<xref:System.Math.PI?displayProperty=fullName>."}]}],"pos":[131879,132821],"yaml":true,"extradata":"MT"},{"content":"The phase of a complex number, in radians.","nodes":[{"pos":[0,42],"content":"The phase of a complex number, in radians.","nodes":[{"content":"The phase of a complex number, in radians.","pos":[0,42]}]}],"pos":[133536,133579],"yaml":true},{"content":"Returns a specified complex number raised to a power specified by a double-precision floating-point number.","nodes":[{"pos":[0,107],"content":"Returns a specified complex number raised to a power specified by a double-precision floating-point number.","nodes":[{"content":"Returns a specified complex number raised to a power specified by a double-precision floating-point number.","pos":[0,107]}]}],"pos":[135130,135238],"yaml":true},{"content":"If `value` is <xref:System.Numerics.Complex?displayProperty=fullName>, the method returns <xref:System.Numerics.Complex?displayProperty=fullName>. For other values, if `power` is 0, the method returns <xref:System.Numerics.Complex?displayProperty=fullName>, and if `power` is 1, it returns `value`.  \n  \n This method corresponds to the <xref:System.Math.Pow%2A?displayProperty=fullName> method for primitive numeric types.","nodes":[{"pos":[0,298],"content":"If `value` is <xref:System.Numerics.Complex?displayProperty=fullName>, the method returns <xref:System.Numerics.Complex?displayProperty=fullName>. For other values, if `power` is 0, the method returns <xref:System.Numerics.Complex?displayProperty=fullName>, and if `power` is 1, it returns `value`.","nodes":[{"content":"If <ph id=\"ph1\">`value`</ph> is <ph id=\"ph2\">&lt;xref:System.Numerics.Complex?displayProperty=fullName&gt;</ph>, the method returns <ph id=\"ph3\">&lt;xref:System.Numerics.Complex?displayProperty=fullName&gt;</ph>.","pos":[0,146],"source":"If `value` is <xref:System.Numerics.Complex?displayProperty=fullName>, the method returns <xref:System.Numerics.Complex?displayProperty=fullName>."},{"content":"For other values, if <ph id=\"ph1\">`power`</ph> is 0, the method returns <ph id=\"ph2\">&lt;xref:System.Numerics.Complex?displayProperty=fullName&gt;</ph>, and if <ph id=\"ph3\">`power`</ph> is 1, it returns <ph id=\"ph4\">`value`</ph>.","pos":[147,298],"source":" For other values, if `power` is 0, the method returns <xref:System.Numerics.Complex?displayProperty=fullName>, and if `power` is 1, it returns `value`."}]},{"pos":[305,422],"content":"This method corresponds to the <xref:System.Math.Pow%2A?displayProperty=fullName> method for primitive numeric types.","nodes":[{"content":"This method corresponds to the <ph id=\"ph1\">&lt;xref:System.Math.Pow%2A?displayProperty=fullName&gt;</ph> method for primitive numeric types.","pos":[0,117],"source":"This method corresponds to the <xref:System.Math.Pow%2A?displayProperty=fullName> method for primitive numeric types."}]}],"pos":[135249,135676],"yaml":true,"extradata":"MT"},{"content":"A complex number to be raised to a power.","nodes":[{"pos":[0,41],"content":"A complex number to be raised to a power.","nodes":[{"content":"A complex number to be raised to a power.","pos":[0,41]}]}],"pos":[136299,136341],"yaml":true},{"content":"A double-precision floating-point number that specifies a power.","nodes":[{"pos":[0,64],"content":"A double-precision floating-point number that specifies a power.","nodes":[{"content":"A double-precision floating-point number that specifies a power.","pos":[0,64]}]}],"pos":[136402,136467],"yaml":true},{"content":"The complex number <code>value</code> raised to the power <code>power</code>.","nodes":[{"pos":[0,77],"content":"The complex number <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">value</ph><ept id=\"p1\">&lt;/code&gt;</ept> raised to the power <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">power</ph><ept id=\"p2\">&lt;/code&gt;</ept>.","source":"The complex number <code>value</code> raised to the power <code>power</code>."}],"pos":[136534,136612],"yaml":true},{"content":"Returns a specified complex number raised to a power specified by a complex number.","nodes":[{"pos":[0,83],"content":"Returns a specified complex number raised to a power specified by a complex number.","nodes":[{"content":"Returns a specified complex number raised to a power specified by a complex number.","pos":[0,83]}]}],"pos":[138194,138278],"yaml":true},{"content":"A complex number to be raised to a power.","nodes":[{"pos":[0,41],"content":"A complex number to be raised to a power.","nodes":[{"content":"A complex number to be raised to a power.","pos":[0,41]}]}],"pos":[138494,138536],"yaml":true},{"content":"A complex number that specifies a power.","nodes":[{"pos":[0,40],"content":"A complex number that specifies a power.","nodes":[{"content":"A complex number that specifies a power.","pos":[0,40]}]}],"pos":[138607,138648],"yaml":true},{"content":"The complex number <code>value</code> raised to the power <code>power</code>.","nodes":[{"pos":[0,77],"content":"The complex number <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">value</ph><ept id=\"p1\">&lt;/code&gt;</ept> raised to the power <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">power</ph><ept id=\"p2\">&lt;/code&gt;</ept>.","source":"The complex number <code>value</code> raised to the power <code>power</code>."}],"pos":[138715,138793],"yaml":true},{"content":"Gets the real component of the current <xref href=\"System.Numerics.Complex\"></xref> object.","nodes":[{"pos":[0,91],"content":"Gets the real component of the current <ph id=\"ph1\">&lt;xref href=\"System.Numerics.Complex\"&gt;&lt;/xref&gt;</ph> object.","source":"Gets the real component of the current <xref href=\"System.Numerics.Complex\"></xref> object."}],"pos":[140182,140274],"yaml":true},{"content":"Given a complex number a + bi, the <xref:System.Numerics.Complex.Real%2A> property returns the value of a.","nodes":[{"pos":[0,106],"content":"Given a complex number a + bi, the <xref:System.Numerics.Complex.Real%2A> property returns the value of a.","nodes":[{"content":"Given a complex number a + bi, the <ph id=\"ph1\">&lt;xref:System.Numerics.Complex.Real%2A&gt;</ph> property returns the value of a.","pos":[0,106],"source":"Given a complex number a + bi, the <xref:System.Numerics.Complex.Real%2A> property returns the value of a."}]}],"pos":[140285,140392],"yaml":true,"extradata":"MT"},{"content":"The real component of a complex number.","nodes":[{"pos":[0,39],"content":"The real component of a complex number.","nodes":[{"content":"The real component of a complex number.","pos":[0,39]}]}],"pos":[140969,141009],"yaml":true},{"content":"Returns the multiplicative inverse of a complex number.","nodes":[{"pos":[0,55],"content":"Returns the multiplicative inverse of a complex number.","nodes":[{"content":"Returns the multiplicative inverse of a complex number.","pos":[0,55]}]}],"pos":[142535,142591],"yaml":true},{"content":"The reciprocal, or multiplicative inverse, of a number *x* is a number *y* where *x* multiplied by *y* yields 1. The reciprocal of a complex number is the complex number that produces <xref:System.Numerics.Complex?displayProperty=fullName> when the two numbers are multiplied. If a complex number is represented by a +bi, its reciprocal is represented by the expression a/(a<sup>2</sup>+b<sup>2</sup>) + -b/(a<sup>2</sup> + b<sup>2</sup>).  \n  \n If value is <xref:System.Numerics.Complex?displayProperty=fullName>, the method returns <xref:System.Numerics.Complex?displayProperty=fullName>. Otherwise, it returns the result of the expression <xref:System.Numerics.Complex?displayProperty=fullName>/`value`.","nodes":[{"pos":[0,439],"content":"The reciprocal, or multiplicative inverse, of a number *x* is a number *y* where *x* multiplied by *y* yields 1. The reciprocal of a complex number is the complex number that produces <xref:System.Numerics.Complex?displayProperty=fullName> when the two numbers are multiplied. If a complex number is represented by a +bi, its reciprocal is represented by the expression a/(a<sup>2</sup>+b<sup>2</sup>) + -b/(a<sup>2</sup> + b<sup>2</sup>).","nodes":[{"content":"The reciprocal, or multiplicative inverse, of a number <bpt id=\"p1\">*</bpt>x<ept id=\"p1\">*</ept> is a number <bpt id=\"p2\">*</bpt>y<ept id=\"p2\">*</ept> where <bpt id=\"p3\">*</bpt>x<ept id=\"p3\">*</ept> multiplied by <bpt id=\"p4\">*</bpt>y<ept id=\"p4\">*</ept> yields 1.","pos":[0,112],"source":"The reciprocal, or multiplicative inverse, of a number *x* is a number *y* where *x* multiplied by *y* yields 1."},{"content":"The reciprocal of a complex number is the complex number that produces <ph id=\"ph1\">&lt;xref:System.Numerics.Complex?displayProperty=fullName&gt;</ph> when the two numbers are multiplied.","pos":[113,276],"source":" The reciprocal of a complex number is the complex number that produces <xref:System.Numerics.Complex?displayProperty=fullName> when the two numbers are multiplied."},{"content":"If a complex number is represented by a +bi, its reciprocal is represented by the expression a/(a<bpt id=\"p1\">&lt;sup&gt;</bpt>2<ept id=\"p1\">&lt;/sup&gt;</ept>+b<bpt id=\"p2\">&lt;sup&gt;</bpt>2<ept id=\"p2\">&lt;/sup&gt;</ept>) + -b/(a<bpt id=\"p3\">&lt;sup&gt;</bpt>2<ept id=\"p3\">&lt;/sup&gt;</ept> + b<bpt id=\"p4\">&lt;sup&gt;</bpt>2<ept id=\"p4\">&lt;/sup&gt;</ept>).","pos":[277,439],"source":" If a complex number is represented by a +bi, its reciprocal is represented by the expression a/(a<sup>2</sup>+b<sup>2</sup>) + -b/(a<sup>2</sup> + b<sup>2</sup>)."}]},{"pos":[446,706],"content":"If value is <xref:System.Numerics.Complex?displayProperty=fullName>, the method returns <xref:System.Numerics.Complex?displayProperty=fullName>. Otherwise, it returns the result of the expression <xref:System.Numerics.Complex?displayProperty=fullName>/`value`.","nodes":[{"content":"If value is <ph id=\"ph1\">&lt;xref:System.Numerics.Complex?displayProperty=fullName&gt;</ph>, the method returns <ph id=\"ph2\">&lt;xref:System.Numerics.Complex?displayProperty=fullName&gt;</ph>.","pos":[0,144],"source":"If value is <xref:System.Numerics.Complex?displayProperty=fullName>, the method returns <xref:System.Numerics.Complex?displayProperty=fullName>."},{"content":"Otherwise, it returns the result of the expression <ph id=\"ph1\">&lt;xref:System.Numerics.Complex?displayProperty=fullName&gt;</ph><ph id=\"ph2\">/</ph><ph id=\"ph3\">`value`</ph>.","pos":[145,260],"source":" Otherwise, it returns the result of the expression <xref:System.Numerics.Complex?displayProperty=fullName>/`value`."}]}],"pos":[142602,143313],"yaml":true,"extradata":"MT"},{"content":"A complex number.","nodes":[{"pos":[0,17],"content":"A complex number.","nodes":[{"content":"A complex number.","pos":[0,17]}]}],"pos":[144142,144160],"yaml":true},{"content":"The reciprocal of <code>value</code>.","nodes":[{"pos":[0,37],"content":"The reciprocal of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">value</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"The reciprocal of <code>value</code>."}],"pos":[144227,144265],"yaml":true},{"content":"Returns the sine of the specified complex number.","nodes":[{"pos":[0,49],"content":"Returns the sine of the specified complex number.","nodes":[{"content":"Returns the sine of the specified complex number.","pos":[0,49]}]}],"pos":[145755,145805],"yaml":true},{"content":"The <xref:System.Numerics.Complex.Sin%2A> method for complex numbers corresponds to the <xref:System.Math.Sin%2A?displayProperty=fullName> method for real numbers.  \n  \n The <xref:System.Numerics.Complex.Sin%2A> method uses the following formula to calculate the sine of the complex number a + bi:  \n  \n (<xref:System.Math.Sin%2A>(a) * <xref:System.Math.Cosh%2A>(b), <xref:System.Math.Cos%2A>(a) * <xref:System.Math.Sinh%2A>(b))","nodes":[{"pos":[0,163],"content":"The <xref:System.Numerics.Complex.Sin%2A> method for complex numbers corresponds to the <xref:System.Math.Sin%2A?displayProperty=fullName> method for real numbers.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Numerics.Complex.Sin%2A&gt;</ph> method for complex numbers corresponds to the <ph id=\"ph2\">&lt;xref:System.Math.Sin%2A?displayProperty=fullName&gt;</ph> method for real numbers.","pos":[0,163],"source":"The <xref:System.Numerics.Complex.Sin%2A> method for complex numbers corresponds to the <xref:System.Math.Sin%2A?displayProperty=fullName> method for real numbers."}]},{"pos":[170,297],"content":"The <xref:System.Numerics.Complex.Sin%2A> method uses the following formula to calculate the sine of the complex number a + bi:","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Numerics.Complex.Sin%2A&gt;</ph> method uses the following formula to calculate the sine of the complex number a + bi:","pos":[0,127],"source":"The <xref:System.Numerics.Complex.Sin%2A> method uses the following formula to calculate the sine of the complex number a + bi:"}]},{"pos":[304,428],"content":"(<xref:System.Math.Sin%2A>(a) * <xref:System.Math.Cosh%2A>(b), <xref:System.Math.Cos%2A>(a) * <xref:System.Math.Sinh%2A>(b))","nodes":[{"content":"(<ph id=\"ph1\">&lt;xref:System.Math.Sin%2A&gt;</ph>(a) * <ph id=\"ph2\">&lt;xref:System.Math.Cosh%2A&gt;</ph>(b), <ph id=\"ph3\">&lt;xref:System.Math.Cos%2A&gt;</ph>(a) * <ph id=\"ph4\">&lt;xref:System.Math.Sinh%2A&gt;</ph>(b))","pos":[0,124],"source":"(<xref:System.Math.Sin%2A>(a) * <xref:System.Math.Cosh%2A>(b), <xref:System.Math.Cos%2A>(a) * <xref:System.Math.Sinh%2A>(b))"}]}],"pos":[145816,146251],"yaml":true,"extradata":"MT"},{"content":"A complex number.","nodes":[{"pos":[0,17],"content":"A complex number.","nodes":[{"content":"A complex number.","pos":[0,17]}]}],"pos":[147033,147051],"yaml":true},{"content":"The sine of <code>value</code>.","nodes":[{"pos":[0,31],"content":"The sine of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">value</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"The sine of <code>value</code>."}],"pos":[147118,147150],"yaml":true},{"content":"Returns the hyperbolic sine of the specified complex number.","nodes":[{"pos":[0,60],"content":"Returns the hyperbolic sine of the specified complex number.","nodes":[{"content":"Returns the hyperbolic sine of the specified complex number.","pos":[0,60]}]}],"pos":[148639,148700],"yaml":true},{"content":"The <xref:System.Numerics.Complex.Sinh%2A> method for complex numbers corresponds to the <xref:System.Math.Sinh%2A?displayProperty=fullName> method for real numbers.  \n  \n The <xref:System.Numerics.Complex.Sinh%2A> method uses the following formula to calculate the hyperbolic sine of the complex number a + bi:  \n  \n (<xref:System.Math.Sinh%2A>(a) * <xref:System.Math.Cos%2A>(b), <xref:System.Math.Cosh%2A>(a) * <xref:System.Math.Sin%2A>(b))","nodes":[{"pos":[0,165],"content":"The <xref:System.Numerics.Complex.Sinh%2A> method for complex numbers corresponds to the <xref:System.Math.Sinh%2A?displayProperty=fullName> method for real numbers.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Numerics.Complex.Sinh%2A&gt;</ph> method for complex numbers corresponds to the <ph id=\"ph2\">&lt;xref:System.Math.Sinh%2A?displayProperty=fullName&gt;</ph> method for real numbers.","pos":[0,165],"source":"The <xref:System.Numerics.Complex.Sinh%2A> method for complex numbers corresponds to the <xref:System.Math.Sinh%2A?displayProperty=fullName> method for real numbers."}]},{"pos":[172,311],"content":"The <xref:System.Numerics.Complex.Sinh%2A> method uses the following formula to calculate the hyperbolic sine of the complex number a + bi:","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Numerics.Complex.Sinh%2A&gt;</ph> method uses the following formula to calculate the hyperbolic sine of the complex number a + bi:","pos":[0,139],"source":"The <xref:System.Numerics.Complex.Sinh%2A> method uses the following formula to calculate the hyperbolic sine of the complex number a + bi:"}]},{"pos":[318,442],"content":"(<xref:System.Math.Sinh%2A>(a) * <xref:System.Math.Cos%2A>(b), <xref:System.Math.Cosh%2A>(a) * <xref:System.Math.Sin%2A>(b))","nodes":[{"content":"(<ph id=\"ph1\">&lt;xref:System.Math.Sinh%2A&gt;</ph>(a) * <ph id=\"ph2\">&lt;xref:System.Math.Cos%2A&gt;</ph>(b), <ph id=\"ph3\">&lt;xref:System.Math.Cosh%2A&gt;</ph>(a) * <ph id=\"ph4\">&lt;xref:System.Math.Sin%2A&gt;</ph>(b))","pos":[0,124],"source":"(<xref:System.Math.Sinh%2A>(a) * <xref:System.Math.Cos%2A>(b), <xref:System.Math.Cosh%2A>(a) * <xref:System.Math.Sin%2A>(b))"}]}],"pos":[148711,149160],"yaml":true,"extradata":"MT"},{"content":"A complex number.","nodes":[{"pos":[0,17],"content":"A complex number.","nodes":[{"content":"A complex number.","pos":[0,17]}]}],"pos":[149346,149364],"yaml":true},{"content":"The hyperbolic sine of <code>value</code>.","nodes":[{"pos":[0,42],"content":"The hyperbolic sine of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">value</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"The hyperbolic sine of <code>value</code>."}],"pos":[149431,149474],"yaml":true},{"content":"Returns the square root of a specified complex number.","nodes":[{"pos":[0,54],"content":"Returns the square root of a specified complex number.","nodes":[{"content":"Returns the square root of a specified complex number.","pos":[0,54]}]}],"pos":[150964,151019],"yaml":true},{"content":"The square root of the complex number `value` is calculated by using the following formula:  \n  \n <xref:System.Numerics.Complex.FromPolarCoordinates%2A?displayProperty=fullName>(<xref:System.Math.Sqrt%2A?displayProperty=fullName>(`value`.<xref:System.Numerics.Complex.Magnitude%2A>), `value`.<xref:System.Numerics.Complex.Phase%2A>/2.0)   \n  \n The <xref:System.Numerics.Complex.Sqrt%2A> method for complex numbers corresponds to the <xref:System.Math.Sqrt%2A?displayProperty=fullName> method for real numbers.","nodes":[{"pos":[0,91],"content":"The square root of the complex number <ph id=\"ph1\">`value`</ph> is calculated by using the following formula:","source":"The square root of the complex number `value` is calculated by using the following formula:"},{"pos":[98,336],"content":"<ph id=\"ph1\">&lt;xref:System.Numerics.Complex.FromPolarCoordinates%2A?displayProperty=fullName&gt;</ph>(<ph id=\"ph2\">&lt;xref:System.Math.Sqrt%2A?displayProperty=fullName&gt;</ph>(<ph id=\"ph3\">`value`</ph>.<ph id=\"ph4\">&lt;xref:System.Numerics.Complex.Magnitude%2A&gt;</ph>), <ph id=\"ph5\">`value`</ph>.<ph id=\"ph6\">&lt;xref:System.Numerics.Complex.Phase%2A&gt;</ph>/2.0)","source":"<xref:System.Numerics.Complex.FromPolarCoordinates%2A?displayProperty=fullName>(<xref:System.Math.Sqrt%2A?displayProperty=fullName>(`value`.<xref:System.Numerics.Complex.Magnitude%2A>), `value`.<xref:System.Numerics.Complex.Phase%2A>/2.0)"},{"pos":[344,509],"content":"The <xref:System.Numerics.Complex.Sqrt%2A> method for complex numbers corresponds to the <xref:System.Math.Sqrt%2A?displayProperty=fullName> method for real numbers.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Numerics.Complex.Sqrt%2A&gt;</ph> method for complex numbers corresponds to the <ph id=\"ph2\">&lt;xref:System.Math.Sqrt%2A?displayProperty=fullName&gt;</ph> method for real numbers.","pos":[0,165],"source":"The <xref:System.Numerics.Complex.Sqrt%2A> method for complex numbers corresponds to the <xref:System.Math.Sqrt%2A?displayProperty=fullName> method for real numbers."}]}],"pos":[151030,151546],"yaml":true,"extradata":"MT"},{"content":"A complex number.","nodes":[{"pos":[0,17],"content":"A complex number.","nodes":[{"content":"A complex number.","pos":[0,17]}]}],"pos":[151732,151750],"yaml":true},{"content":"The square root of <code>value</code>.","nodes":[{"pos":[0,38],"content":"The square root of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">value</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"The square root of <code>value</code>."}],"pos":[151817,151856],"yaml":true},{"content":"Subtracts one complex number from another and returns the result.","nodes":[{"pos":[0,65],"content":"Subtracts one complex number from another and returns the result.","nodes":[{"content":"Subtracts one complex number from another and returns the result.","pos":[0,65]}]}],"pos":[153469,153535],"yaml":true},{"content":"The subtraction of a complex number, c + di, from another complex number, a + bi, takes the following form:  \n  \n (a - c) + (b - d)i  \n  \n If the method call results in an overflow in either the real or imaginary component, the value of that component is either <xref:System.Double.PositiveInfinity?displayProperty=fullName> or <xref:System.Double.NegativeInfinity?displayProperty=fullName>.  \n  \n Languages that do not support custom operators can use the <xref:System.Numerics.Complex.Subtract%2A> method to perform subtraction using complex numbers.","nodes":[{"pos":[0,107],"content":"The subtraction of a complex number, c + di, from another complex number, a + bi, takes the following form:","nodes":[{"content":"The subtraction of a complex number, c + di, from another complex number, a + bi, takes the following form:","pos":[0,107]}]},{"pos":[114,132],"content":"(a - c) + (b - d)i","nodes":[{"content":"(a - c) + (b - d)i","pos":[0,18]}]},{"pos":[139,391],"content":"If the method call results in an overflow in either the real or imaginary component, the value of that component is either <xref:System.Double.PositiveInfinity?displayProperty=fullName> or <xref:System.Double.NegativeInfinity?displayProperty=fullName>.","nodes":[{"content":"If the method call results in an overflow in either the real or imaginary component, the value of that component is either <ph id=\"ph1\">&lt;xref:System.Double.PositiveInfinity?displayProperty=fullName&gt;</ph> or <ph id=\"ph2\">&lt;xref:System.Double.NegativeInfinity?displayProperty=fullName&gt;</ph>.","pos":[0,252],"source":"If the method call results in an overflow in either the real or imaginary component, the value of that component is either <xref:System.Double.PositiveInfinity?displayProperty=fullName> or <xref:System.Double.NegativeInfinity?displayProperty=fullName>."}]},{"pos":[398,552],"content":"Languages that do not support custom operators can use the <xref:System.Numerics.Complex.Subtract%2A> method to perform subtraction using complex numbers.","nodes":[{"content":"Languages that do not support custom operators can use the <ph id=\"ph1\">&lt;xref:System.Numerics.Complex.Subtract%2A&gt;</ph> method to perform subtraction using complex numbers.","pos":[0,154],"source":"Languages that do not support custom operators can use the <xref:System.Numerics.Complex.Subtract%2A> method to perform subtraction using complex numbers."}]}],"pos":[153546,154107],"yaml":true,"extradata":"MT"},{"content":"The value to subtract from (the minuend).","nodes":[{"pos":[0,41],"content":"The value to subtract from (the minuend).","nodes":[{"content":"The value to subtract from (the minuend).","pos":[0,41]}]}],"pos":[154745,154787],"yaml":true},{"content":"The value to subtract (the subtrahend).","nodes":[{"pos":[0,39],"content":"The value to subtract (the subtrahend).","nodes":[{"content":"The value to subtract (the subtrahend).","pos":[0,39]}]}],"pos":[154858,154898],"yaml":true},{"content":"The result of subtracting <code>right</code> from <code>left</code>.","nodes":[{"pos":[0,68],"content":"The result of subtracting <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">right</ph><ept id=\"p1\">&lt;/code&gt;</ept> from <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">left</ph><ept id=\"p2\">&lt;/code&gt;</ept>.","source":"The result of subtracting <code>right</code> from <code>left</code>."}],"pos":[154965,155034],"yaml":true},{"content":"Returns the tangent of the specified complex number.","nodes":[{"pos":[0,52],"content":"Returns the tangent of the specified complex number.","nodes":[{"content":"Returns the tangent of the specified complex number.","pos":[0,52]}]}],"pos":[156522,156575],"yaml":true},{"content":"The <xref:System.Numerics.Complex.Tan%2A> method for complex numbers corresponds to the <xref:System.Math.Tan%2A?displayProperty=fullName> method for real numbers.  \n  \n The <xref:System.Numerics.Complex.Tan%2A> method uses the following formula to calculate the tangent of the complex number `value`:  \n  \n <xref:System.Numerics.Complex.Sin%2A>(`value`) / <xref:System.Numerics.Complex.Cos%2A>(`value`)","nodes":[{"pos":[0,163],"content":"The <xref:System.Numerics.Complex.Tan%2A> method for complex numbers corresponds to the <xref:System.Math.Tan%2A?displayProperty=fullName> method for real numbers.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Numerics.Complex.Tan%2A&gt;</ph> method for complex numbers corresponds to the <ph id=\"ph2\">&lt;xref:System.Math.Tan%2A?displayProperty=fullName&gt;</ph> method for real numbers.","pos":[0,163],"source":"The <xref:System.Numerics.Complex.Tan%2A> method for complex numbers corresponds to the <xref:System.Math.Tan%2A?displayProperty=fullName> method for real numbers."}]},{"pos":[170,301],"content":"The <ph id=\"ph1\">&lt;xref:System.Numerics.Complex.Tan%2A&gt;</ph> method uses the following formula to calculate the tangent of the complex number <ph id=\"ph2\">`value`</ph>:","source":"The <xref:System.Numerics.Complex.Tan%2A> method uses the following formula to calculate the tangent of the complex number `value`:"},{"pos":[308,403],"content":"<ph id=\"ph1\">&lt;xref:System.Numerics.Complex.Sin%2A&gt;</ph>(<ph id=\"ph2\">`value`</ph>) / <ph id=\"ph3\">&lt;xref:System.Numerics.Complex.Cos%2A&gt;</ph>(<ph id=\"ph4\">`value`</ph>)","source":"<xref:System.Numerics.Complex.Sin%2A>(`value`) / <xref:System.Numerics.Complex.Cos%2A>(`value`)"}],"pos":[156586,156996],"yaml":true,"extradata":"MT"},{"content":"A complex number.","nodes":[{"pos":[0,17],"content":"A complex number.","nodes":[{"content":"A complex number.","pos":[0,17]}]}],"pos":[157778,157796],"yaml":true},{"content":"The tangent of <code>value</code>.","nodes":[{"pos":[0,34],"content":"The tangent of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">value</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"The tangent of <code>value</code>."}],"pos":[157863,157898],"yaml":true},{"content":"Returns the hyperbolic tangent of the specified complex number.","nodes":[{"pos":[0,63],"content":"Returns the hyperbolic tangent of the specified complex number.","nodes":[{"content":"Returns the hyperbolic tangent of the specified complex number.","pos":[0,63]}]}],"pos":[159387,159451],"yaml":true},{"content":"The <xref:System.Numerics.Complex.Tanh%2A> method for complex numbers corresponds to the <xref:System.Math.Tanh%2A?displayProperty=fullName> method for real numbers.  \n  \n The <xref:System.Numerics.Complex.Tanh%2A> method uses the following formula to calculate the hyperbolic tangent of the complex number `value`:  \n  \n <xref:System.Numerics.Complex.Sinh%2A>(`value`) / <xref:System.Numerics.Complex.Cosh%2A>(`value`)","nodes":[{"pos":[0,165],"content":"The <xref:System.Numerics.Complex.Tanh%2A> method for complex numbers corresponds to the <xref:System.Math.Tanh%2A?displayProperty=fullName> method for real numbers.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Numerics.Complex.Tanh%2A&gt;</ph> method for complex numbers corresponds to the <ph id=\"ph2\">&lt;xref:System.Math.Tanh%2A?displayProperty=fullName&gt;</ph> method for real numbers.","pos":[0,165],"source":"The <xref:System.Numerics.Complex.Tanh%2A> method for complex numbers corresponds to the <xref:System.Math.Tanh%2A?displayProperty=fullName> method for real numbers."}]},{"pos":[172,315],"content":"The <ph id=\"ph1\">&lt;xref:System.Numerics.Complex.Tanh%2A&gt;</ph> method uses the following formula to calculate the hyperbolic tangent of the complex number <ph id=\"ph2\">`value`</ph>:","source":"The <xref:System.Numerics.Complex.Tanh%2A> method uses the following formula to calculate the hyperbolic tangent of the complex number `value`:"},{"pos":[322,419],"content":"<ph id=\"ph1\">&lt;xref:System.Numerics.Complex.Sinh%2A&gt;</ph>(<ph id=\"ph2\">`value`</ph>) / <ph id=\"ph3\">&lt;xref:System.Numerics.Complex.Cosh%2A&gt;</ph>(<ph id=\"ph4\">`value`</ph>)","source":"<xref:System.Numerics.Complex.Sinh%2A>(`value`) / <xref:System.Numerics.Complex.Cosh%2A>(`value`)"}],"pos":[159462,159888],"yaml":true,"extradata":"MT"},{"content":"A complex number.","nodes":[{"pos":[0,17],"content":"A complex number.","nodes":[{"content":"A complex number.","pos":[0,17]}]}],"pos":[160074,160092],"yaml":true},{"content":"The hyperbolic tangent of <code>value</code>.","nodes":[{"pos":[0,45],"content":"The hyperbolic tangent of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">value</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"The hyperbolic tangent of <code>value</code>."}],"pos":[160159,160205],"yaml":true},{"content":"Converts the value of the current complex number to its equivalent string representation in Cartesian form.","nodes":[{"pos":[0,107],"content":"Converts the value of the current complex number to its equivalent string representation in Cartesian form.","nodes":[{"content":"Converts the value of the current complex number to its equivalent string representation in Cartesian form.","pos":[0,107]}]}],"pos":[161623,161731],"yaml":true},{"content":"The default string representation of a complex number displays the number using its Cartesian coordinates in the form `(`*a*`,` *b*`)`, where *a* is the real part of the complex number, and *b* is its imaginary part. Both *a* and *b* are formatted using the general format specifier (\"G\") and the conventions of the current system culture.","nodes":[{"pos":[0,339],"content":"The default string representation of a complex number displays the number using its Cartesian coordinates in the form `(`*a*`,` *b*`)`, where *a* is the real part of the complex number, and *b* is its imaginary part. Both *a* and *b* are formatted using the general format specifier (\"G\") and the conventions of the current system culture.","nodes":[{"content":"The default string representation of a complex number displays the number using its Cartesian coordinates in the form <ph id=\"ph1\">`(`</ph><bpt id=\"p1\">*</bpt>a<ept id=\"p1\">*</ept><ph id=\"ph2\">`,`</ph> <bpt id=\"p2\">*</bpt>b<ept id=\"p2\">*</ept><ph id=\"ph3\">`)`</ph>, where <bpt id=\"p3\">*</bpt>a<ept id=\"p3\">*</ept> is the real part of the complex number, and <bpt id=\"p4\">*</bpt>b<ept id=\"p4\">*</ept> is its imaginary part.","pos":[0,216],"source":"The default string representation of a complex number displays the number using its Cartesian coordinates in the form `(`*a*`,` *b*`)`, where *a* is the real part of the complex number, and *b* is its imaginary part."},{"content":"Both <bpt id=\"p1\">*</bpt>a<ept id=\"p1\">*</ept> and <bpt id=\"p2\">*</bpt>b<ept id=\"p2\">*</ept> are formatted using the general format specifier (\"G\") and the conventions of the current system culture.","pos":[217,339],"source":" Both *a* and *b* are formatted using the general format specifier (\"G\") and the conventions of the current system culture."}]}],"pos":[161742,162082],"yaml":true,"extradata":"MT"},{"content":"The string representation of the current instance in Cartesian form.","nodes":[{"pos":[0,68],"content":"The string representation of the current instance in Cartesian form.","nodes":[{"content":"The string representation of the current instance in Cartesian form.","pos":[0,68]}]}],"pos":[162781,162850],"yaml":true},{"content":"Converts the value of the current complex number to its equivalent string representation in Cartesian form by using the specified culture-specific formatting information.","nodes":[{"pos":[0,170],"content":"Converts the value of the current complex number to its equivalent string representation in Cartesian form by using the specified culture-specific formatting information.","nodes":[{"content":"Converts the value of the current complex number to its equivalent string representation in Cartesian form by using the specified culture-specific formatting information.","pos":[0,170]}]}],"pos":[164389,164560],"yaml":true},{"content":"The string representation of the complex number returned by this method displays the number using its Cartesian coordinates in the form `(`*a*`,` *b*`)`, where *a* is the real part of the complex number, and *b* is its imaginary part. Both *a* and *b* are formatted using the general format specifier (\"G\") and the conventions of the culture defined by `provider`.  \n  \n The `provider` parameter is an <xref:System.IFormatProvider> implementation. Its <xref:System.IFormatProvider.GetFormat%2A> method returns a <xref:System.Globalization.NumberFormatInfo> object that provides culture-specific information about the format of the real and imaginary numbers in the returned string. If `provider` is `null`, the returned string is formatted using the <xref:System.Globalization.NumberFormatInfo> object of the current culture.  \n  \n The `provider` parameter can be one of the following:  \n  \n-   A <xref:System.Globalization.CultureInfo> object that represents the culture that supplies formatting information  \n  \n-   The <xref:System.Globalization.NumberFormatInfo> object that supplies formatting information.  \n  \n-   A custom object that implements the <xref:System.IFormatProvider> interface. Its <xref:System.IFormatProvider.GetFormat%2A> method returns the <xref:System.Globalization.NumberFormatInfo> object that supplies formatting information.","nodes":[{"pos":[0,364],"content":"The string representation of the complex number returned by this method displays the number using its Cartesian coordinates in the form `(`*a*`,` *b*`)`, where *a* is the real part of the complex number, and *b* is its imaginary part. Both *a* and *b* are formatted using the general format specifier (\"G\") and the conventions of the culture defined by `provider`.","nodes":[{"content":"The string representation of the complex number returned by this method displays the number using its Cartesian coordinates in the form <ph id=\"ph1\">`(`</ph><bpt id=\"p1\">*</bpt>a<ept id=\"p1\">*</ept><ph id=\"ph2\">`,`</ph> <bpt id=\"p2\">*</bpt>b<ept id=\"p2\">*</ept><ph id=\"ph3\">`)`</ph>, where <bpt id=\"p3\">*</bpt>a<ept id=\"p3\">*</ept> is the real part of the complex number, and <bpt id=\"p4\">*</bpt>b<ept id=\"p4\">*</ept> is its imaginary part.","pos":[0,234],"source":"The string representation of the complex number returned by this method displays the number using its Cartesian coordinates in the form `(`*a*`,` *b*`)`, where *a* is the real part of the complex number, and *b* is its imaginary part."},{"content":"Both <bpt id=\"p1\">*</bpt>a<ept id=\"p1\">*</ept> and <bpt id=\"p2\">*</bpt>b<ept id=\"p2\">*</ept> are formatted using the general format specifier (\"G\") and the conventions of the culture defined by <ph id=\"ph1\">`provider`</ph>.","pos":[235,364],"source":" Both *a* and *b* are formatted using the general format specifier (\"G\") and the conventions of the culture defined by `provider`."}]},{"pos":[371,825],"content":"The `provider` parameter is an <xref:System.IFormatProvider> implementation. Its <xref:System.IFormatProvider.GetFormat%2A> method returns a <xref:System.Globalization.NumberFormatInfo> object that provides culture-specific information about the format of the real and imaginary numbers in the returned string. If `provider` is `null`, the returned string is formatted using the <xref:System.Globalization.NumberFormatInfo> object of the current culture.","nodes":[{"content":"The <ph id=\"ph1\">`provider`</ph> parameter is an <ph id=\"ph2\">&lt;xref:System.IFormatProvider&gt;</ph> implementation.","pos":[0,76],"source":"The `provider` parameter is an <xref:System.IFormatProvider> implementation."},{"content":"Its <ph id=\"ph1\">&lt;xref:System.IFormatProvider.GetFormat%2A&gt;</ph> method returns a <ph id=\"ph2\">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object that provides culture-specific information about the format of the real and imaginary numbers in the returned string.","pos":[77,310],"source":" Its <xref:System.IFormatProvider.GetFormat%2A> method returns a <xref:System.Globalization.NumberFormatInfo> object that provides culture-specific information about the format of the real and imaginary numbers in the returned string."},{"content":"If <ph id=\"ph1\">`provider`</ph> is <ph id=\"ph2\">`null`</ph>, the returned string is formatted using the <ph id=\"ph3\">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object of the current culture.","pos":[311,454],"source":" If `provider` is `null`, the returned string is formatted using the <xref:System.Globalization.NumberFormatInfo> object of the current culture."}]},{"pos":[832,885],"content":"The <ph id=\"ph1\">`provider`</ph> parameter can be one of the following:","source":"The `provider` parameter can be one of the following:"},{"pos":[895,1008],"content":"A <xref:System.Globalization.CultureInfo> object that represents the culture that supplies formatting information","nodes":[{"content":"A <ph id=\"ph1\">&lt;xref:System.Globalization.CultureInfo&gt;</ph> object that represents the culture that supplies formatting information","pos":[0,113],"source":"A <xref:System.Globalization.CultureInfo> object that represents the culture that supplies formatting information"}]},{"pos":[1018,1111],"content":"The <xref:System.Globalization.NumberFormatInfo> object that supplies formatting information.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object that supplies formatting information.","pos":[0,93],"source":"The <xref:System.Globalization.NumberFormatInfo> object that supplies formatting information."}]},{"pos":[1121,1353],"content":"A custom object that implements the <xref:System.IFormatProvider> interface. Its <xref:System.IFormatProvider.GetFormat%2A> method returns the <xref:System.Globalization.NumberFormatInfo> object that supplies formatting information.","nodes":[{"content":"A custom object that implements the <xref:System.IFormatProvider> interface. Its <xref:System.IFormatProvider.GetFormat%2A> method returns the <xref:System.Globalization.NumberFormatInfo> object that supplies formatting information.","pos":[0,232],"nodes":[{"content":"A custom object that implements the <ph id=\"ph1\">&lt;xref:System.IFormatProvider&gt;</ph> interface.","pos":[0,76],"source":"A custom object that implements the <xref:System.IFormatProvider> interface."},{"content":"Its <ph id=\"ph1\">&lt;xref:System.IFormatProvider.GetFormat%2A&gt;</ph> method returns the <ph id=\"ph2\">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object that supplies formatting information.","pos":[77,232],"source":" Its <xref:System.IFormatProvider.GetFormat%2A> method returns the <xref:System.Globalization.NumberFormatInfo> object that supplies formatting information."}]}]}],"pos":[164571,165939],"yaml":true,"extradata":"MT"},{"content":"An object that supplies culture-specific formatting information.","nodes":[{"pos":[0,64],"content":"An object that supplies culture-specific formatting information.","nodes":[{"content":"An object that supplies culture-specific formatting information.","pos":[0,64]}]}],"pos":[166647,166712],"yaml":true},{"content":"The string representation of the current instance in Cartesian form, as specified by <code>provider</code>.","nodes":[{"pos":[0,107],"content":"The string representation of the current instance in Cartesian form, as specified by <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">provider</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"The string representation of the current instance in Cartesian form, as specified by <code>provider</code>."}],"pos":[166769,166877],"yaml":true},{"content":"Converts the value of the current complex number to its equivalent string representation in Cartesian form by using the specified format for its real and imaginary parts.","nodes":[{"pos":[0,170],"content":"Converts the value of the current complex number to its equivalent string representation in Cartesian form by using the specified format for its real and imaginary parts.","nodes":[{"content":"Converts the value of the current complex number to its equivalent string representation in Cartesian form by using the specified format for its real and imaginary parts.","pos":[0,170]}]}],"pos":[168362,168533],"yaml":true},{"content":"The string representation of the complex number returned by this method displays the number using its Cartesian coordinates in the form `(`*a*`,` *b*`)`, where *a* is the real part of the complex number, and *b* is its imaginary part. Both *a* and *b* are formatted using the format string specified by `format`. The `format` parameter can be any valid standard numeric format specifier, or any combination of custom numeric format specifiers. If `format` is equal to <xref:System.String?displayProperty=fullName> or is `null`, the real and imaginary parts of the complex number are formatted with the general format specifier (\"G\"). If `format` is any other value, the method throws a <xref:System.FormatException>.  \n  \n The .NET Framework provides extensive formatting support, which is described in greater detail in the following topics:  \n  \n-   For more information about numeric format strings, see [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) and [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md).  \n  \n-   For more information about formatting in the .NET Framework, see [Formatting Types](~/docs/standard/base-types/formatting-types.md).  \n  \n The format of the returned string is determined by the <xref:System.Globalization.NumberFormatInfo> object for the current culture. Depending on the `format` parameter, this object controls symbols such as the negative sign, the group separator, and the decimal point symbol in the output string. To provide formatting information for cultures other than the current culture, call the <xref:System.Numerics.Complex.ToString%28System.String%2CSystem.IFormatProvider%29> overload.","nodes":[{"pos":[0,716],"content":"The string representation of the complex number returned by this method displays the number using its Cartesian coordinates in the form `(`*a*`,` *b*`)`, where *a* is the real part of the complex number, and *b* is its imaginary part. Both *a* and *b* are formatted using the format string specified by `format`. The `format` parameter can be any valid standard numeric format specifier, or any combination of custom numeric format specifiers. If `format` is equal to <xref:System.String?displayProperty=fullName> or is `null`, the real and imaginary parts of the complex number are formatted with the general format specifier (\"G\"). If `format` is any other value, the method throws a <xref:System.FormatException>.","nodes":[{"content":"The string representation of the complex number returned by this method displays the number using its Cartesian coordinates in the form <ph id=\"ph1\">`(`</ph><bpt id=\"p1\">*</bpt>a<ept id=\"p1\">*</ept><ph id=\"ph2\">`,`</ph> <bpt id=\"p2\">*</bpt>b<ept id=\"p2\">*</ept><ph id=\"ph3\">`)`</ph>, where <bpt id=\"p3\">*</bpt>a<ept id=\"p3\">*</ept> is the real part of the complex number, and <bpt id=\"p4\">*</bpt>b<ept id=\"p4\">*</ept> is its imaginary part.","pos":[0,234],"source":"The string representation of the complex number returned by this method displays the number using its Cartesian coordinates in the form `(`*a*`,` *b*`)`, where *a* is the real part of the complex number, and *b* is its imaginary part."},{"content":"Both <bpt id=\"p1\">*</bpt>a<ept id=\"p1\">*</ept> and <bpt id=\"p2\">*</bpt>b<ept id=\"p2\">*</ept> are formatted using the format string specified by <ph id=\"ph1\">`format`</ph>.","pos":[235,312],"source":" Both *a* and *b* are formatted using the format string specified by `format`."},{"content":"The <ph id=\"ph1\">`format`</ph> parameter can be any valid standard numeric format specifier, or any combination of custom numeric format specifiers.","pos":[313,443],"source":" The `format` parameter can be any valid standard numeric format specifier, or any combination of custom numeric format specifiers."},{"content":"If <ph id=\"ph1\">`format`</ph> is equal to <ph id=\"ph2\">&lt;xref:System.String?displayProperty=fullName&gt;</ph> or is <ph id=\"ph3\">`null`</ph>, the real and imaginary parts of the complex number are formatted with the general format specifier (\"G\").","pos":[444,633],"source":" If `format` is equal to <xref:System.String?displayProperty=fullName> or is `null`, the real and imaginary parts of the complex number are formatted with the general format specifier (\"G\")."},{"content":"If <ph id=\"ph1\">`format`</ph> is any other value, the method throws a <ph id=\"ph2\">&lt;xref:System.FormatException&gt;</ph>.","pos":[634,716],"source":" If `format` is any other value, the method throws a <xref:System.FormatException>."}]},{"pos":[723,842],"content":"The .NET Framework provides extensive formatting support, which is described in greater detail in the following topics:","nodes":[{"content":"The .NET Framework provides extensive formatting support, which is described in greater detail in the following topics:","pos":[0,119]}]},{"pos":[852,1101],"content":"For more information about numeric format strings, see <bpt id=\"p1\">[</bpt>Standard Numeric Format Strings<ept id=\"p1\">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept> and <bpt id=\"p2\">[</bpt>Custom Numeric Format Strings<ept id=\"p2\">](~/docs/standard/base-types/custom-numeric-format-strings.md)</ept>.","source":"For more information about numeric format strings, see [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) and [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md)."},{"pos":[1111,1243],"content":"For more information about formatting in the .NET Framework, see <bpt id=\"p1\">[</bpt>Formatting Types<ept id=\"p1\">](~/docs/standard/base-types/formatting-types.md)</ept>.","source":"For more information about formatting in the .NET Framework, see [Formatting Types](~/docs/standard/base-types/formatting-types.md)."},{"pos":[1250,1728],"content":"The format of the returned string is determined by the <xref:System.Globalization.NumberFormatInfo> object for the current culture. Depending on the `format` parameter, this object controls symbols such as the negative sign, the group separator, and the decimal point symbol in the output string. To provide formatting information for cultures other than the current culture, call the <xref:System.Numerics.Complex.ToString%28System.String%2CSystem.IFormatProvider%29> overload.","nodes":[{"content":"The format of the returned string is determined by the <ph id=\"ph1\">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object for the current culture.","pos":[0,131],"source":"The format of the returned string is determined by the <xref:System.Globalization.NumberFormatInfo> object for the current culture."},{"content":"Depending on the <ph id=\"ph1\">`format`</ph> parameter, this object controls symbols such as the negative sign, the group separator, and the decimal point symbol in the output string.","pos":[132,296],"source":" Depending on the `format` parameter, this object controls symbols such as the negative sign, the group separator, and the decimal point symbol in the output string."},{"content":"To provide formatting information for cultures other than the current culture, call the <ph id=\"ph1\">&lt;xref:System.Numerics.Complex.ToString%28System.String%2CSystem.IFormatProvider%29&gt;</ph> overload.","pos":[297,478],"source":" To provide formatting information for cultures other than the current culture, call the <xref:System.Numerics.Complex.ToString%28System.String%2CSystem.IFormatProvider%29> overload."}]}],"pos":[168544,170285],"yaml":true,"extradata":"MT"},{"content":"A standard or custom numeric format string.","nodes":[{"pos":[0,43],"content":"A standard or custom numeric format string.","nodes":[{"content":"A standard or custom numeric format string.","pos":[0,43]}]}],"pos":[170864,170908],"yaml":true},{"content":"The string representation of the current instance in Cartesian form.","nodes":[{"pos":[0,68],"content":"The string representation of the current instance in Cartesian form.","nodes":[{"content":"The string representation of the current instance in Cartesian form.","pos":[0,68]}]}],"pos":[170965,171034],"yaml":true},{"content":"<code>format</code> is not a valid format string.","nodes":[{"pos":[0,49],"content":"<ph id=\"ph1\">&lt;code&gt;format&lt;/code&gt;</ph> is not a valid format string.","source":"<code>format</code> is not a valid format string."}],"pos":[171184,171234],"yaml":true},{"content":"Converts the value of the current complex number to its equivalent string representation in Cartesian form by using the specified format and culture-specific format information for its real and imaginary parts.","nodes":[{"pos":[0,210],"content":"Converts the value of the current complex number to its equivalent string representation in Cartesian form by using the specified format and culture-specific format information for its real and imaginary parts.","nodes":[{"content":"Converts the value of the current complex number to its equivalent string representation in Cartesian form by using the specified format and culture-specific format information for its real and imaginary parts.","pos":[0,210]}]}],"pos":[172776,172987],"yaml":true},{"content":"The string representation of the complex number returned by this method displays the number using its Cartesian coordinates in the form `(`*a*`,` *b*`)`, where *a* is the real part of the complex number, and *b* is its imaginary part. Both *a* and *b* are formatted using the format string specified by `format`. The `format` parameter can be any valid standard numeric format specifier, or any combination of custom numeric format specifiers. If `format` is equal to <xref:System.String?displayProperty=fullName> or is `null`, the real and imaginary parts of the complex number are formatted with the general format specifier (\"G\"). If `format` is any other value, the method throws a <xref:System.FormatException>.  \n  \n The .NET Framework provides extensive formatting support, which is described in greater detail in the following topics:  \n  \n-   For more information about numeric format strings, see [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) and [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md).  \n  \n-   For more information about formatting in the .NET Framework, see [Formatting Types](~/docs/standard/base-types/formatting-types.md).  \n  \n The `provider` parameter is an <xref:System.IFormatProvider> implementation. Its <xref:System.IFormatProvider.GetFormat%2A> method returns a <xref:System.Globalization.NumberFormatInfo> object that provides culture-specific information about the format of the real and imaginary numbers in the returned string. Depending on the `format` parameter, this object controls symbols such as the negative sign, the group separator, and the decimal point symbol in the output string. If `provider` is `null`, the returned string is formatted using the <xref:System.Globalization.NumberFormatInfo> object of the current culture.  \n  \n The `provider` parameter can be one of the following:  \n  \n-   A <xref:System.Globalization.CultureInfo> object that represents the culture that supplies formatting information  \n  \n-   The <xref:System.Globalization.NumberFormatInfo> object that supplies formatting information.  \n  \n-   A custom object that implements the <xref:System.IFormatProvider> interface. Its <xref:System.IFormatProvider.GetFormat%2A> method returns the <xref:System.Globalization.NumberFormatInfo> object that supplies formatting information.","nodes":[{"pos":[0,716],"content":"The string representation of the complex number returned by this method displays the number using its Cartesian coordinates in the form `(`*a*`,` *b*`)`, where *a* is the real part of the complex number, and *b* is its imaginary part. Both *a* and *b* are formatted using the format string specified by `format`. The `format` parameter can be any valid standard numeric format specifier, or any combination of custom numeric format specifiers. If `format` is equal to <xref:System.String?displayProperty=fullName> or is `null`, the real and imaginary parts of the complex number are formatted with the general format specifier (\"G\"). If `format` is any other value, the method throws a <xref:System.FormatException>.","nodes":[{"content":"The string representation of the complex number returned by this method displays the number using its Cartesian coordinates in the form <ph id=\"ph1\">`(`</ph><bpt id=\"p1\">*</bpt>a<ept id=\"p1\">*</ept><ph id=\"ph2\">`,`</ph> <bpt id=\"p2\">*</bpt>b<ept id=\"p2\">*</ept><ph id=\"ph3\">`)`</ph>, where <bpt id=\"p3\">*</bpt>a<ept id=\"p3\">*</ept> is the real part of the complex number, and <bpt id=\"p4\">*</bpt>b<ept id=\"p4\">*</ept> is its imaginary part.","pos":[0,234],"source":"The string representation of the complex number returned by this method displays the number using its Cartesian coordinates in the form `(`*a*`,` *b*`)`, where *a* is the real part of the complex number, and *b* is its imaginary part."},{"content":"Both <bpt id=\"p1\">*</bpt>a<ept id=\"p1\">*</ept> and <bpt id=\"p2\">*</bpt>b<ept id=\"p2\">*</ept> are formatted using the format string specified by <ph id=\"ph1\">`format`</ph>.","pos":[235,312],"source":" Both *a* and *b* are formatted using the format string specified by `format`."},{"content":"The <ph id=\"ph1\">`format`</ph> parameter can be any valid standard numeric format specifier, or any combination of custom numeric format specifiers.","pos":[313,443],"source":" The `format` parameter can be any valid standard numeric format specifier, or any combination of custom numeric format specifiers."},{"content":"If <ph id=\"ph1\">`format`</ph> is equal to <ph id=\"ph2\">&lt;xref:System.String?displayProperty=fullName&gt;</ph> or is <ph id=\"ph3\">`null`</ph>, the real and imaginary parts of the complex number are formatted with the general format specifier (\"G\").","pos":[444,633],"source":" If `format` is equal to <xref:System.String?displayProperty=fullName> or is `null`, the real and imaginary parts of the complex number are formatted with the general format specifier (\"G\")."},{"content":"If <ph id=\"ph1\">`format`</ph> is any other value, the method throws a <ph id=\"ph2\">&lt;xref:System.FormatException&gt;</ph>.","pos":[634,716],"source":" If `format` is any other value, the method throws a <xref:System.FormatException>."}]},{"pos":[723,842],"content":"The .NET Framework provides extensive formatting support, which is described in greater detail in the following topics:","nodes":[{"content":"The .NET Framework provides extensive formatting support, which is described in greater detail in the following topics:","pos":[0,119]}]},{"pos":[852,1101],"content":"For more information about numeric format strings, see <bpt id=\"p1\">[</bpt>Standard Numeric Format Strings<ept id=\"p1\">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept> and <bpt id=\"p2\">[</bpt>Custom Numeric Format Strings<ept id=\"p2\">](~/docs/standard/base-types/custom-numeric-format-strings.md)</ept>.","source":"For more information about numeric format strings, see [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) and [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md)."},{"pos":[1111,1243],"content":"For more information about formatting in the .NET Framework, see <bpt id=\"p1\">[</bpt>Formatting Types<ept id=\"p1\">](~/docs/standard/base-types/formatting-types.md)</ept>.","source":"For more information about formatting in the .NET Framework, see [Formatting Types](~/docs/standard/base-types/formatting-types.md)."},{"pos":[1250,1869],"content":"The `provider` parameter is an <xref:System.IFormatProvider> implementation. Its <xref:System.IFormatProvider.GetFormat%2A> method returns a <xref:System.Globalization.NumberFormatInfo> object that provides culture-specific information about the format of the real and imaginary numbers in the returned string. Depending on the `format` parameter, this object controls symbols such as the negative sign, the group separator, and the decimal point symbol in the output string. If `provider` is `null`, the returned string is formatted using the <xref:System.Globalization.NumberFormatInfo> object of the current culture.","nodes":[{"content":"The <ph id=\"ph1\">`provider`</ph> parameter is an <ph id=\"ph2\">&lt;xref:System.IFormatProvider&gt;</ph> implementation.","pos":[0,76],"source":"The `provider` parameter is an <xref:System.IFormatProvider> implementation."},{"content":"Its <ph id=\"ph1\">&lt;xref:System.IFormatProvider.GetFormat%2A&gt;</ph> method returns a <ph id=\"ph2\">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object that provides culture-specific information about the format of the real and imaginary numbers in the returned string.","pos":[77,310],"source":" Its <xref:System.IFormatProvider.GetFormat%2A> method returns a <xref:System.Globalization.NumberFormatInfo> object that provides culture-specific information about the format of the real and imaginary numbers in the returned string."},{"content":"Depending on the <ph id=\"ph1\">`format`</ph> parameter, this object controls symbols such as the negative sign, the group separator, and the decimal point symbol in the output string.","pos":[311,475],"source":" Depending on the `format` parameter, this object controls symbols such as the negative sign, the group separator, and the decimal point symbol in the output string."},{"content":"If <ph id=\"ph1\">`provider`</ph> is <ph id=\"ph2\">`null`</ph>, the returned string is formatted using the <ph id=\"ph3\">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object of the current culture.","pos":[476,619],"source":" If `provider` is `null`, the returned string is formatted using the <xref:System.Globalization.NumberFormatInfo> object of the current culture."}]},{"pos":[1876,1929],"content":"The <ph id=\"ph1\">`provider`</ph> parameter can be one of the following:","source":"The `provider` parameter can be one of the following:"},{"pos":[1939,2052],"content":"A <xref:System.Globalization.CultureInfo> object that represents the culture that supplies formatting information","nodes":[{"content":"A <ph id=\"ph1\">&lt;xref:System.Globalization.CultureInfo&gt;</ph> object that represents the culture that supplies formatting information","pos":[0,113],"source":"A <xref:System.Globalization.CultureInfo> object that represents the culture that supplies formatting information"}]},{"pos":[2062,2155],"content":"The <xref:System.Globalization.NumberFormatInfo> object that supplies formatting information.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object that supplies formatting information.","pos":[0,93],"source":"The <xref:System.Globalization.NumberFormatInfo> object that supplies formatting information."}]},{"pos":[2165,2397],"content":"A custom object that implements the <xref:System.IFormatProvider> interface. Its <xref:System.IFormatProvider.GetFormat%2A> method returns the <xref:System.Globalization.NumberFormatInfo> object that supplies formatting information.","nodes":[{"content":"A custom object that implements the <xref:System.IFormatProvider> interface. Its <xref:System.IFormatProvider.GetFormat%2A> method returns the <xref:System.Globalization.NumberFormatInfo> object that supplies formatting information.","pos":[0,232],"nodes":[{"content":"A custom object that implements the <ph id=\"ph1\">&lt;xref:System.IFormatProvider&gt;</ph> interface.","pos":[0,76],"source":"A custom object that implements the <xref:System.IFormatProvider> interface."},{"content":"Its <ph id=\"ph1\">&lt;xref:System.IFormatProvider.GetFormat%2A&gt;</ph> method returns the <ph id=\"ph2\">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object that supplies formatting information.","pos":[77,232],"source":" Its <xref:System.IFormatProvider.GetFormat%2A> method returns the <xref:System.Globalization.NumberFormatInfo> object that supplies formatting information."}]}]}],"pos":[172998,175416],"yaml":true,"extradata":"MT"},{"content":"A standard or custom numeric format string.","nodes":[{"pos":[0,43],"content":"A standard or custom numeric format string.","nodes":[{"content":"A standard or custom numeric format string.","pos":[0,43]}]}],"pos":[176186,176230],"yaml":true},{"content":"An object that supplies culture-specific formatting information.","nodes":[{"pos":[0,64],"content":"An object that supplies culture-specific formatting information.","nodes":[{"content":"An object that supplies culture-specific formatting information.","pos":[0,64]}]}],"pos":[176303,176368],"yaml":true},{"content":"The string representation of the current instance in Cartesian form, as specified by <code>format</code> and <code>provider</code>.","nodes":[{"pos":[0,131],"content":"The string representation of the current instance in Cartesian form, as specified by <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">format</ph><ept id=\"p1\">&lt;/code&gt;</ept> and <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">provider</ph><ept id=\"p2\">&lt;/code&gt;</ept>.","source":"The string representation of the current instance in Cartesian form, as specified by <code>format</code> and <code>provider</code>."}],"pos":[176425,176557],"yaml":true},{"content":"<code>format</code> is not a valid format string.","nodes":[{"pos":[0,49],"content":"<ph id=\"ph1\">&lt;code&gt;format&lt;/code&gt;</ph> is not a valid format string.","source":"<code>format</code> is not a valid format string."}],"pos":[176707,176757],"yaml":true},{"content":"Returns a new <xref href=\"System.Numerics.Complex\"></xref> instance with a real number equal to zero and an imaginary number equal to zero.","nodes":[{"pos":[0,139],"content":"Returns a new <ph id=\"ph1\">&lt;xref href=\"System.Numerics.Complex\"&gt;&lt;/xref&gt;</ph> instance with a real number equal to zero and an imaginary number equal to zero.","source":"Returns a new <xref href=\"System.Numerics.Complex\"></xref> instance with a real number equal to zero and an imaginary number equal to zero."}],"pos":[178085,178225],"yaml":true},{"content":"The <xref:System.Numerics.Complex.Zero> property is most frequently used to compare a <xref:System.Numerics.Complex> value to zero.","nodes":[{"pos":[0,131],"content":"The <xref:System.Numerics.Complex.Zero> property is most frequently used to compare a <xref:System.Numerics.Complex> value to zero.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Numerics.Complex.Zero&gt;</ph> property is most frequently used to compare a <ph id=\"ph2\">&lt;xref:System.Numerics.Complex&gt;</ph> value to zero.","pos":[0,131],"source":"The <xref:System.Numerics.Complex.Zero> property is most frequently used to compare a <xref:System.Numerics.Complex> value to zero."}]}],"pos":[178236,178368],"yaml":true,"extradata":"MT"}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Numerics.Complex\n  commentId: T:System.Numerics.Complex\n  id: Complex\n  children:\n  - System.Numerics.Complex.#ctor(System.Double,System.Double)\n  - System.Numerics.Complex.Abs(System.Numerics.Complex)\n  - System.Numerics.Complex.Acos(System.Numerics.Complex)\n  - System.Numerics.Complex.Add(System.Numerics.Complex,System.Numerics.Complex)\n  - System.Numerics.Complex.Asin(System.Numerics.Complex)\n  - System.Numerics.Complex.Atan(System.Numerics.Complex)\n  - System.Numerics.Complex.Conjugate(System.Numerics.Complex)\n  - System.Numerics.Complex.Cos(System.Numerics.Complex)\n  - System.Numerics.Complex.Cosh(System.Numerics.Complex)\n  - System.Numerics.Complex.Divide(System.Numerics.Complex,System.Numerics.Complex)\n  - System.Numerics.Complex.Equals(System.Numerics.Complex)\n  - System.Numerics.Complex.Equals(System.Object)\n  - System.Numerics.Complex.Exp(System.Numerics.Complex)\n  - System.Numerics.Complex.FromPolarCoordinates(System.Double,System.Double)\n  - System.Numerics.Complex.GetHashCode\n  - System.Numerics.Complex.Imaginary\n  - System.Numerics.Complex.ImaginaryOne\n  - System.Numerics.Complex.Log(System.Numerics.Complex)\n  - System.Numerics.Complex.Log(System.Numerics.Complex,System.Double)\n  - System.Numerics.Complex.Log10(System.Numerics.Complex)\n  - System.Numerics.Complex.Magnitude\n  - System.Numerics.Complex.Multiply(System.Numerics.Complex,System.Numerics.Complex)\n  - System.Numerics.Complex.Negate(System.Numerics.Complex)\n  - System.Numerics.Complex.One\n  - System.Numerics.Complex.op_Addition(System.Numerics.Complex,System.Numerics.Complex)\n  - System.Numerics.Complex.op_Division(System.Numerics.Complex,System.Numerics.Complex)\n  - System.Numerics.Complex.op_Equality(System.Numerics.Complex,System.Numerics.Complex)\n  - System.Numerics.Complex.op_Explicit(System.Decimal to System.Numerics.Complex)\n  - System.Numerics.Complex.op_Explicit(System.Numerics.BigInteger to System.Numerics.Complex)\n  - System.Numerics.Complex.op_Implicit(System.UInt64 to System.Numerics.Complex)\n  - System.Numerics.Complex.op_Implicit(System.UInt32 to System.Numerics.Complex)\n  - System.Numerics.Complex.op_Implicit(System.UInt16 to System.Numerics.Complex)\n  - System.Numerics.Complex.op_Implicit(System.Single to System.Numerics.Complex)\n  - System.Numerics.Complex.op_Implicit(System.SByte to System.Numerics.Complex)\n  - System.Numerics.Complex.op_Implicit(System.Byte to System.Numerics.Complex)\n  - System.Numerics.Complex.op_Implicit(System.Int32 to System.Numerics.Complex)\n  - System.Numerics.Complex.op_Implicit(System.Int16 to System.Numerics.Complex)\n  - System.Numerics.Complex.op_Implicit(System.Double to System.Numerics.Complex)\n  - System.Numerics.Complex.op_Implicit(System.Int64 to System.Numerics.Complex)\n  - System.Numerics.Complex.op_Inequality(System.Numerics.Complex,System.Numerics.Complex)\n  - System.Numerics.Complex.op_Multiply(System.Numerics.Complex,System.Numerics.Complex)\n  - System.Numerics.Complex.op_Subtraction(System.Numerics.Complex,System.Numerics.Complex)\n  - System.Numerics.Complex.op_UnaryNegation(System.Numerics.Complex)\n  - System.Numerics.Complex.Phase\n  - System.Numerics.Complex.Pow(System.Numerics.Complex,System.Double)\n  - System.Numerics.Complex.Pow(System.Numerics.Complex,System.Numerics.Complex)\n  - System.Numerics.Complex.Real\n  - System.Numerics.Complex.Reciprocal(System.Numerics.Complex)\n  - System.Numerics.Complex.Sin(System.Numerics.Complex)\n  - System.Numerics.Complex.Sinh(System.Numerics.Complex)\n  - System.Numerics.Complex.Sqrt(System.Numerics.Complex)\n  - System.Numerics.Complex.Subtract(System.Numerics.Complex,System.Numerics.Complex)\n  - System.Numerics.Complex.Tan(System.Numerics.Complex)\n  - System.Numerics.Complex.Tanh(System.Numerics.Complex)\n  - System.Numerics.Complex.ToString\n  - System.Numerics.Complex.ToString(System.IFormatProvider)\n  - System.Numerics.Complex.ToString(System.String)\n  - System.Numerics.Complex.ToString(System.String,System.IFormatProvider)\n  - System.Numerics.Complex.Zero\n  langs:\n  - csharp\n  name: Complex\n  nameWithType: Complex\n  fullName: System.Numerics.Complex\n  type: Struct\n  assemblies:\n  - System.Runtime.Numerics\n  - System.Numerics\n  - netstandard\n  namespace: System.Numerics\n  summary: Represents a complex number.\n  remarks: \"A complex number is a number that comprises a real number part and an imaginary number part. A complex number z is usually written in the form z = x + yi, where *x* and *y* are real numbers, and *i* is the imaginary unit that has the property *i*<sup>2</sup> = -1. The real part of the complex number is represented by *x*, and the imaginary part of the complex number is represented by *y*.  \\n  \\n The <xref:System.Numerics.Complex> type uses the Cartesian coordinate system (real, imaginary) when instantiating and manipulating complex numbers. A complex number can be represented as a point in a two-dimensional coordinate system, which is known as the complex plane. The real part of the complex number is positioned on the x-axis (the horizontal axis), and the imaginary part is positioned on the y-axis (the vertical axis).  \\n  \\n Any point in the complex plane can also be expressed based on its absolute value, by using the polar coordinate system., In polar coordinates, a point is characterized by two numbers:  \\n  \\n-   Its magnitude, which is the distance of the point from the origin (that is, 0,0, or the point at which the x-axis and the y-axis intersect).  \\n  \\n-   Its phase, which is the angle between the real axis and the line drawn from the origin to the point.  \\n  \\n## Instantiating a Complex Number  \\n You can assign a value to a complex number in one of the following ways:  \\n  \\n-   By passing two <xref:System.Double> values to its constructor. The first value represents the real part of the complex number, and the second value represents its imaginary part. These values represent the position of the complex number in the two-dimensional Cartesian coordinate system.  \\n  \\n-   By calling the static (`Shared` in Visual Basic) <xref:System.Numerics.Complex.FromPolarCoordinates%2A?displayProperty=fullName> method to create a complex number from its polar coordinates.  \\n  \\n-   By assigning a <xref:System.Byte>, <xref:System.SByte>, <xref:System.Int16>, <xref:System.UInt16>, <xref:System.Int32>, <xref:System.UInt32>, <xref:System.Int64>, <xref:System.UInt64>, <xref:System.Single>, or <xref:System.Double> value to a <xref:System.Numerics.Complex> object. The value becomes the real part of the complex number, and its imaginary part equals 0.  \\n  \\n-   By casting (in C#) or converting (in Visual Basic) a <xref:System.Decimal> or <xref:System.Numerics.BigInteger> value to a <xref:System.Numerics.Complex> object. The value becomes the real part of the complex number, and its imaginary part equals 0.  \\n  \\n-   By assigning the complex number that is returned by a method or operator to a <xref:System.Numerics.Complex> object. For example, <xref:System.Numerics.Complex.Add%2A?displayProperty=fullName> is a static method that returns a complex number that is the sum of two complex numbers, and the <xref:System.Numerics.Complex.op_Addition%2A?displayProperty=fullName> operator adds two complex numbers and returns the result.  \\n  \\n The following example demonstrates each of these five ways of assigning a value to a complex number.  \\n  \\n [!code-csharp[System.Numerics.Complex.Class#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.numerics.complex.class/cs/create1.cs#2)]\\n [!code-vb[System.Numerics.Complex.Class#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.numerics.complex.class/vb/create1.vb#2)]  \\n  \\n## Operations with Complex Numbers  \\n The <xref:System.Numerics.Complex> structure in the .NET Framework includes members that provide the following functionality:  \\n  \\n-   Methods to compare two complex numbers to determine whether they are equal.  \\n  \\n-   Operators to perform arithmetic operations on complex numbers. <xref:System.Numerics.Complex> operators enable you to perform addition, subtraction, multiplication, division, and unary negation with complex numbers.  \\n  \\n-   Methods to perform other numerical operations on complex numbers. In addition to the four basic arithmetic operations, you can raise a complex number to a specified power, find the square root of a complex number, and get the absolute value of a complex number.  \\n  \\n-   Methods to perform trigonometric operations on complex numbers. For example, you can calculate the tangent of an angle represented by a complex number.  \\n  \\n Note that, because the <xref:System.Numerics.Complex.Real%2A> and  <xref:System.Numerics.Complex.Imaginary%2A> properties are read-only, you cannot modify the value of an existing <xref:System.Numerics.Complex> object.  All methods that perform an operation on a <xref:System.Numerics.Complex> number, if their return value is of type <xref:System.Numerics.Complex>, return a new <xref:System.Numerics.Complex> number.  \\n  \\n## Precision and Complex Numbers  \\n The real and imaginary parts of a complex number are represented by two double-precision floating-point values. This means that <xref:System.Numerics.Complex> values, like double-precision floating-point values, can lose precision as a result of numerical operations. This means that strict comparisons for equality of two <xref:System.Numerics.Complex> values may fail, even if the difference between the two values is due to a loss of precision. For more information, see <xref:System.Double>.  \\n  \\n For example, performing exponentiation on the logarithm of a number should return the original number. However, in some cases, the loss of precision of floating-point values can cause slight differences between the two values, as the following example illustrates.  \\n  \\n [!code-csharp[System.Numerics.Complex.Class#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.numerics.complex.class/cs/precision1.cs#5)]\\n [!code-vb[System.Numerics.Complex.Class#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.numerics.complex.class/vb/precision1.vb#5)]  \\n  \\n Similarly, the following example, which calculates the square root of a <xref:System.Numerics.Complex> number, produces slightly different results on the 32-bit and IA64 versions of the .NET Framework.  \\n  \\n [!code-csharp[System.Numerics.Complex.Class#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.numerics.complex.class/cs/precision1.cs#6)]\\n [!code-vb[System.Numerics.Complex.Class#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.numerics.complex.class/vb/precision1.vb#6)]  \\n  \\n## Complex Numbers, Infinity, and NaN  \\n The real and imaginary parts of a complex number are represented by <xref:System.Double> values. In addition to ranging from <xref:System.Double.MinValue?displayProperty=fullName> to <xref:System.Double.MaxValue?displayProperty=fullName>, the real or imaginary part of a complex number can have a value of <xref:System.Double.PositiveInfinity?displayProperty=fullName>, <xref:System.Double.NegativeInfinity?displayProperty=fullName>, or <xref:System.Double.NaN?displayProperty=fullName>. <xref:System.Double.PositiveInfinity?displayProperty=fullName>, <xref:System.Double.NegativeInfinity?displayProperty=fullName>, and <xref:System.Double.NaN?displayProperty=fullName> all propagate in any arithmetic or trigonometric operation.  \\n  \\n In the following example, division by <xref:System.Numerics.Complex.Zero> produces a complex number whose real and imaginary parts are both <xref:System.Double.NaN?displayProperty=fullName>. As a result, performing multiplication with this value also produces a complex number whose real and imaginary parts are <xref:System.Double.NaN?displayProperty=fullName>. Similarly, performing a multiplication that overflows the range of the <xref:System.Double> type produces a complex number whose real part is <xref:System.Double.NaN?displayProperty=fullName> and whose imaginary part is <xref:System.Double.PositiveInfinity?displayProperty=fullName>. Subsequently performing division with this complex number returns a complex number whose real part is <xref:System.Double.NaN?displayProperty=fullName> and whose imaginary part is <xref:System.Double.PositiveInfinity?displayProperty=fullName>.  \\n  \\n [!code-csharp[System.Numerics.Complex.Class#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.numerics.complex.class/cs/nan1.cs#3)]\\n [!code-vb[System.Numerics.Complex.Class#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.numerics.complex.class/vb/nan1.vb#3)]  \\n  \\n Mathematical operations with complex numbers that are invalid or that overflow the range of the <xref:System.Double> data type do not throw an exception. Instead, they return a <xref:System.Double.PositiveInfinity?displayProperty=fullName>, <xref:System.Double.NegativeInfinity?displayProperty=fullName>, or <xref:System.Double.NaN?displayProperty=fullName> under the following conditions:  \\n  \\n-   The division of a positive number by zero returns <xref:System.Double.PositiveInfinity?displayProperty=fullName>.  \\n  \\n-   Any operation that overflows the upper bound of the <xref:System.Double> data type returns <xref:System.Double.PositiveInfinity?displayProperty=fullName>.  \\n  \\n-   The division of a negative number by zero returns <xref:System.Double.NegativeInfinity?displayProperty=fullName>.  \\n  \\n-   Any operation that overflows the lower bound of the <xref:System.Double> data type returns <xref:System.Double.NegativeInfinity?displayProperty=fullName>.  \\n  \\n-   The division of a zero by zero returns <xref:System.Double.NaN?displayProperty=fullName>.  \\n  \\n-   Any operation that is performed on operands whose values are <xref:System.Double.PositiveInfinity?displayProperty=fullName>, <xref:System.Double.NegativeInfinity?displayProperty=fullName>, or <xref:System.Double.NaN?displayProperty=fullName> returns <xref:System.Double.PositiveInfinity?displayProperty=fullName>, <xref:System.Double.NegativeInfinity?displayProperty=fullName>, or <xref:System.Double.NaN?displayProperty=fullName>, depending on the specific operation.  \\n  \\n Note that this applies to any intermediate calculations performed by a method. For example, the multiplication of `new Complex(9e308, 9e308) and new Complex(2.5, 3.5)` uses the formula (ac - bd) + (ad + bc)i. The calculation of the real component that results from the multiplication evaluates the expression 9e308 * 2.5 - 9e308 * 3.5. Each intermediate multiplication in this expression returns <xref:System.Double.PositiveInfinity?displayProperty=fullName>, and the attempt to subtract <xref:System.Double.PositiveInfinity?displayProperty=fullName> from <xref:System.Double.PositiveInfinity?displayProperty=fullName> returns <xref:System.Double.NaN?displayProperty=fullName>.  \\n  \\n## Formatting a Complex Number  \\n By default, the string representation of a complex number takes the form `(`*real*`,` *imaginary*`)`, where *real* and *imaginary* are the string representations of the <xref:System.Double> values that form the complex number's real and imaginary components. Some overloads of the <xref:System.Numerics.Complex.ToString%2A> method allow customization of the string representations of these <xref:System.Double> values to reflect the formatting conventions of a particular culture or to appear in a particular format defined by a standard or custom numeric format string. (For more information, see [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) and [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md).)  \\n  \\n One of the more common ways of expressing the string representation of a complex number takes the form a + bi, where a is the complex number's real component, and b is the complex number's imaginary component. In electrical engineering, a complex number is most commonly expressed as a + bj. You can return the string representation of a complex number in either of these two forms. To do this, define a custom format provider by implementing the <xref:System.ICustomFormatter> and <xref:System.IFormatProvider> interfaces, and then call the <xref:System.String.Format%28System.IFormatProvider%2CSystem.String%2CSystem.Object%5B%5D%29?displayProperty=fullName> method.  \\n  \\n The following example defines a `ComplexFormatter` class that represents a complex number as a string in the form of either a + bi or a + bj.  \\n  \\n [!code-csharp[System.Numerics.Complex.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.numerics.complex.class/cs/customfmt1.cs#1)]\\n [!code-vb[System.Numerics.Complex.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.numerics.complex.class/vb/customfmt1.vb#1)]  \\n  \\n The following example then uses this custom formatter to display the string representation of a complex number.  \\n  \\n [!code-csharp[System.Numerics.Complex.Class#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.numerics.complex.class/cs/customfmt1.cs#4)]\\n [!code-vb[System.Numerics.Complex.Class#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.numerics.complex.class/vb/customfmt1.vb#4)]\"\n  syntax:\n    content: 'public struct Complex : IEquatable<System.Numerics.Complex>, IFormattable'\n  inheritance:\n  - System.Object\n  - System.ValueType\n  implements:\n  - System.IEquatable{System.Numerics.Complex}\n  - System.IFormattable\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Complex.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Numerics.Complex.#ctor(System.Double,System.Double)\n  commentId: M:System.Numerics.Complex.#ctor(System.Double,System.Double)\n  id: '#ctor(System.Double,System.Double)'\n  parent: System.Numerics.Complex\n  langs:\n  - csharp\n  name: Complex(Double, Double)\n  nameWithType: Complex.Complex(Double, Double)\n  fullName: Complex.Complex(Double, Double)\n  type: Constructor\n  assemblies:\n  - System.Runtime.Numerics\n  - System.Numerics\n  - netstandard\n  namespace: System.Numerics\n  summary: Initializes a new instance of the <xref href=\"System.Numerics.Complex\"></xref> structure using the specified real and imaginary values.\n  remarks: The `real` or `imaginary` arguments may lose precision if they are data types that require an explicit cast to <xref:System.Double>.\n  example:\n  - \"The following example instantiates two complex numbers, and then uses them in addition, subtraction, multiplication, and division operations.  \\n  \\n [!code-csharp[System.Numerics.Complex.ctor#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.numerics.complex.ctor/cs/ctor1.cs#1)]\\n [!code-vb[System.Numerics.Complex.ctor#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.numerics.complex.ctor/vb/ctor1.vb#1)]\"\n  syntax:\n    content: public Complex (double real, double imaginary);\n    parameters:\n    - id: real\n      type: System.Double\n      description: The real part of the complex number.\n    - id: imaginary\n      type: System.Double\n      description: The imaginary part of the complex number.\n  overload: System.Numerics.Complex.#ctor*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Complex.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Numerics.Complex.Abs(System.Numerics.Complex)\n  commentId: M:System.Numerics.Complex.Abs(System.Numerics.Complex)\n  id: Abs(System.Numerics.Complex)\n  parent: System.Numerics.Complex\n  langs:\n  - csharp\n  name: Abs(Complex)\n  nameWithType: Complex.Abs(Complex)\n  fullName: Complex.Abs(Complex)\n  type: Method\n  assemblies:\n  - System.Runtime.Numerics\n  - System.Numerics\n  - netstandard\n  namespace: System.Numerics\n  summary: Gets the absolute value (or magnitude) of a complex number.\n  remarks: \"The absolute value of a complex number is equivalent to its <xref:System.Numerics.Complex.Magnitude%2A> property. The absolute value of a real number a + bi is calculated as follows:  \\n  \\n-   If b = 0, the result is 0.  \\n  \\n-   If a > b, the result is a *<xref:System.Math.Sqrt%2A?displayProperty=fullName>(1 + b<sup>2</sup>/a<sup>2</sup>).  \\n  \\n-   If b > a, the result is b * <xref:System.Math.Sqrt%2A?displayProperty=fullName>(1 + a<sup>2</sup>/b<sup>2</sup>).  \\n  \\n If the calculation of the absolute value results in an overflow, the method returns either <xref:System.Double.PositiveInfinity?displayProperty=fullName> or <xref:System.Double.NegativeInfinity?displayProperty=fullName>. If either the <xref:System.Numerics.Complex.Real%2A> or <xref:System.Numerics.Complex.Imaginary%2A> property is <xref:System.Double.NaN?displayProperty=fullName> and the other property is neither <xref:System.Double.PositiveInfinity?displayProperty=fullName> nor <xref:System.Double.NegativeInfinity?displayProperty=fullName>, the method returns <xref:System.Double.NaN?displayProperty=fullName>.\"\n  example:\n  - \"The following example calculates the absolute value of a complex number and demonstrates that it is equivalent to the value of the <xref:System.Numerics.Complex.Magnitude%2A> property.  \\n  \\n [!code-csharp[System.Numerics.Complex.Abs#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.numerics.complex.abs/cs/abs1.cs#1)]\\n [!code-vb[System.Numerics.Complex.Abs#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.numerics.complex.abs/vb/abs1.vb#1)]\"\n  syntax:\n    content: public static double Abs (System.Numerics.Complex value);\n    parameters:\n    - id: value\n      type: System.Numerics.Complex\n      description: A complex number.\n    return:\n      type: System.Double\n      description: The absolute value of <code>value</code>.\n  overload: System.Numerics.Complex.Abs*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Complex.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Numerics.Complex.Acos(System.Numerics.Complex)\n  commentId: M:System.Numerics.Complex.Acos(System.Numerics.Complex)\n  id: Acos(System.Numerics.Complex)\n  parent: System.Numerics.Complex\n  langs:\n  - csharp\n  name: Acos(Complex)\n  nameWithType: Complex.Acos(Complex)\n  fullName: Complex.Acos(Complex)\n  type: Method\n  assemblies:\n  - System.Runtime.Numerics\n  - System.Numerics\n  - netstandard\n  namespace: System.Numerics\n  summary: Returns the angle that is the arc cosine of the specified complex number.\n  remarks: \"The <xref:System.Numerics.Complex.Acos%2A> method for complex numbers corresponds to the <xref:System.Math.Acos%2A?displayProperty=fullName> method for real numbers.  \\n  \\n The <xref:System.Numerics.Complex.Acos%2A> method uses the following formula:  \\n  \\n (-<xref:System.Numerics.Complex.ImaginaryOne>) * <xref:System.Numerics.Complex.Log%2A>(`value` + <xref:System.Numerics.Complex.ImaginaryOne>*<xref:System.Numerics.Complex.Sqrt%2A>(<xref:System.Numerics.Complex.One> - `value` * `value`)))\"\n  example:\n  - \"The following example illustrates the <xref:System.Numerics.Complex.Acos%2A> method. It shows that passing the value returned by the <xref:System.Numerics.Complex.Acos%2A> method to the <xref:System.Numerics.Complex.Cos%2A> method returns the original <xref:System.Numerics.Complex> value.  \\n  \\n [!code-csharp[System.Numerics.Complex.Acos#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.numerics.complex.acos/cs/acos1.cs#1)]\\n [!code-vb[System.Numerics.Complex.Acos#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.numerics.complex.acos/vb/acos1.vb#1)]\"\n  syntax:\n    content: public static System.Numerics.Complex Acos (System.Numerics.Complex value);\n    parameters:\n    - id: value\n      type: System.Numerics.Complex\n      description: A complex number that represents a cosine.\n    return:\n      type: System.Numerics.Complex\n      description: The angle, measured in radians, which is the arc cosine of <code>value</code>.\n  overload: System.Numerics.Complex.Acos*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Complex.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Numerics.Complex.Add(System.Numerics.Complex,System.Numerics.Complex)\n  commentId: M:System.Numerics.Complex.Add(System.Numerics.Complex,System.Numerics.Complex)\n  id: Add(System.Numerics.Complex,System.Numerics.Complex)\n  parent: System.Numerics.Complex\n  langs:\n  - csharp\n  name: Add(Complex, Complex)\n  nameWithType: Complex.Add(Complex, Complex)\n  fullName: Complex.Add(Complex, Complex)\n  type: Method\n  assemblies:\n  - System.Runtime.Numerics\n  - System.Numerics\n  - netstandard\n  namespace: System.Numerics\n  summary: Adds two complex numbers and returns the result.\n  remarks: \"The addition of a complex number, a + bi, and a second complex number, c + di, takes the following form:  \\n  \\n (a + c) + (b + d)i.  \\n  \\n If the method call results in an overflow in either the real or imaginary component, the value of the component is either <xref:System.Double.PositiveInfinity?displayProperty=fullName> or <xref:System.Double.NegativeInfinity?displayProperty=fullName>.  \\n  \\n Languages that do not support custom operators can use the <xref:System.Numerics.Complex.Add%2A> method to perform addition with complex numbers.\"\n  example:\n  - \"The following example illustrates addition with complex numbers.  \\n  \\n [!code-csharp[System.Numerics.Complex.Add#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.numerics.complex.add/cs/add1.cs#1)]\\n [!code-vb[System.Numerics.Complex.Add#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.numerics.complex.add/vb/add1.vb#1)]\"\n  syntax:\n    content: public static System.Numerics.Complex Add (System.Numerics.Complex left, System.Numerics.Complex right);\n    parameters:\n    - id: left\n      type: System.Numerics.Complex\n      description: The first complex number to add.\n    - id: right\n      type: System.Numerics.Complex\n      description: The second complex number to add.\n    return:\n      type: System.Numerics.Complex\n      description: The sum of <code>left</code> and <code>right</code>.\n  overload: System.Numerics.Complex.Add*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Complex.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Numerics.Complex.Asin(System.Numerics.Complex)\n  commentId: M:System.Numerics.Complex.Asin(System.Numerics.Complex)\n  id: Asin(System.Numerics.Complex)\n  parent: System.Numerics.Complex\n  langs:\n  - csharp\n  name: Asin(Complex)\n  nameWithType: Complex.Asin(Complex)\n  fullName: Complex.Asin(Complex)\n  type: Method\n  assemblies:\n  - System.Runtime.Numerics\n  - System.Numerics\n  - netstandard\n  namespace: System.Numerics\n  summary: Returns the angle that is the arc sine of the specified complex number.\n  remarks: \"The <xref:System.Numerics.Complex.Asin%2A> method for complex numbers corresponds to the <xref:System.Math.Asin%2A?displayProperty=fullName> method for real numbers.  \\n  \\n The <xref:System.Numerics.Complex.Asin%2A> method uses the following formula:  \\n  \\n -<xref:System.Numerics.Complex.ImaginaryOne> * <xref:System.Numerics.Complex.Log%2A>(<xref:System.Numerics.Complex.ImaginaryOne> * value + <xref:System.Numerics.Complex.Sqrt%2A>(<xref:System.Numerics.Complex.One> - value * value))\"\n  example:\n  - \"The following example illustrates the <xref:System.Numerics.Complex.Asin%2A> method. It shows that passing the value returned by the <xref:System.Numerics.Complex.Asin%2A> method to the <xref:System.Numerics.Complex.Sin%2A> method returns the original <xref:System.Numerics.Complex> value.  \\n  \\n [!code-csharp[System.Numerics.Complex.Asin#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.numerics.complex.asin/cs/asin1.cs#1)]\\n [!code-vb[System.Numerics.Complex.Asin#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.numerics.complex.asin/vb/asin1.vb#1)]\"\n  syntax:\n    content: public static System.Numerics.Complex Asin (System.Numerics.Complex value);\n    parameters:\n    - id: value\n      type: System.Numerics.Complex\n      description: A complex number.\n    return:\n      type: System.Numerics.Complex\n      description: The angle which is the arc sine of <code>value</code>.\n  overload: System.Numerics.Complex.Asin*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Complex.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Numerics.Complex.Atan(System.Numerics.Complex)\n  commentId: M:System.Numerics.Complex.Atan(System.Numerics.Complex)\n  id: Atan(System.Numerics.Complex)\n  parent: System.Numerics.Complex\n  langs:\n  - csharp\n  name: Atan(Complex)\n  nameWithType: Complex.Atan(Complex)\n  fullName: Complex.Atan(Complex)\n  type: Method\n  assemblies:\n  - System.Runtime.Numerics\n  - System.Numerics\n  - netstandard\n  namespace: System.Numerics\n  summary: Returns the angle that is the arc tangent of the specified complex number.\n  remarks: \"The <xref:System.Numerics.Complex.Atan%2A> method for complex numbers corresponds to the <xref:System.Math.Atan%2A?displayProperty=fullName> method for real numbers.  \\n  \\n The <xref:System.Numerics.Complex.Atan%2A> method uses the following formula:  \\n  \\n <xref:System.Numerics.Complex.ImaginaryOne> / new Complex(2.0, 0.0)) * (<xref:System.Numerics.Complex.Log%2A>(<xref:System.Numerics.Complex.One> - <xref:System.Numerics.Complex.ImaginaryOne> * value) - <xref:System.Numerics.Complex.Log%2A>(<xref:System.Numerics.Complex.One> + ImaginaryOne * value)\"\n  example:\n  - \"The following example illustrates the <xref:System.Numerics.Complex.Atan%2A> method. It shows that passing the value returned by the <xref:System.Numerics.Complex.Atan%2A> method to the <xref:System.Numerics.Complex.Tan%2A> method returns the original <xref:System.Numerics.Complex> value.  \\n  \\n [!code-csharp[System.Numerics.Complex.Atan#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.numerics.complex.atan/cs/atan1.cs#1)]\\n [!code-vb[System.Numerics.Complex.Atan#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.numerics.complex.atan/vb/atan1.vb#1)]\"\n  syntax:\n    content: public static System.Numerics.Complex Atan (System.Numerics.Complex value);\n    parameters:\n    - id: value\n      type: System.Numerics.Complex\n      description: A complex number.\n    return:\n      type: System.Numerics.Complex\n      description: The angle that is the arc tangent of <code>value</code>.\n  overload: System.Numerics.Complex.Atan*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Complex.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Numerics.Complex.Conjugate(System.Numerics.Complex)\n  commentId: M:System.Numerics.Complex.Conjugate(System.Numerics.Complex)\n  id: Conjugate(System.Numerics.Complex)\n  parent: System.Numerics.Complex\n  langs:\n  - csharp\n  name: Conjugate(Complex)\n  nameWithType: Complex.Conjugate(Complex)\n  fullName: Complex.Conjugate(Complex)\n  type: Method\n  assemblies:\n  - System.Runtime.Numerics\n  - System.Numerics\n  - netstandard\n  namespace: System.Numerics\n  summary: Computes the conjugate of a complex number and returns the result.\n  remarks: The conjugate of a complex number inverts the sign of the imaginary component; that is, it applies unary negation to the imaginary component. If a + bi is a complex number, its conjugate is a - bi.\n  example:\n  - \"The following example displays the conjugate of two complex numbers.  \\n  \\n [!code-csharp[System.Numerics.Complex.Conjugate#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.numerics.complex.conjugate/cs/conjugate1.cs#1)]\\n [!code-vb[System.Numerics.Complex.Conjugate#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.numerics.complex.conjugate/vb/conjugate1.vb#1)]\"\n  syntax:\n    content: public static System.Numerics.Complex Conjugate (System.Numerics.Complex value);\n    parameters:\n    - id: value\n      type: System.Numerics.Complex\n      description: A complex number.\n    return:\n      type: System.Numerics.Complex\n      description: The conjugate of <code>value</code>.\n  overload: System.Numerics.Complex.Conjugate*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Complex.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Numerics.Complex.Cos(System.Numerics.Complex)\n  commentId: M:System.Numerics.Complex.Cos(System.Numerics.Complex)\n  id: Cos(System.Numerics.Complex)\n  parent: System.Numerics.Complex\n  langs:\n  - csharp\n  name: Cos(Complex)\n  nameWithType: Complex.Cos(Complex)\n  fullName: Complex.Cos(Complex)\n  type: Method\n  assemblies:\n  - System.Runtime.Numerics\n  - System.Numerics\n  - netstandard\n  namespace: System.Numerics\n  summary: Returns the cosine of the specified complex number.\n  remarks: \"The <xref:System.Numerics.Complex.Cos%2A> method for complex numbers corresponds to the <xref:System.Math.Cos%2A?displayProperty=fullName> method for real numbers.  \\n  \\n The <xref:System.Numerics.Complex.Cos%2A> method uses the following formula to calculate the cosine of the complex number a + bi:  \\n  \\n (<xref:System.Math.Cos%2A>(a) * <xref:System.Math.Cosh%2A>(b), -(<xref:System.Math.Sin%2A>(a) * <xref:System.Math.Sinh%2A>(b)))\"\n  example:\n  - \"The following example illustrates the <xref:System.Numerics.Complex.Acos%2A> method. It shows that passing the value returned by the <xref:System.Numerics.Complex.Acos%2A> method to the <xref:System.Numerics.Complex.Cos%2A> method returns the original <xref:System.Numerics.Complex> value.  \\n  \\n [!code-csharp[System.Numerics.Complex.Acos#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.numerics.complex.acos/cs/acos1.cs#1)]\\n [!code-vb[System.Numerics.Complex.Acos#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.numerics.complex.acos/vb/acos1.vb#1)]\"\n  syntax:\n    content: public static System.Numerics.Complex Cos (System.Numerics.Complex value);\n    parameters:\n    - id: value\n      type: System.Numerics.Complex\n      description: A complex number.\n    return:\n      type: System.Numerics.Complex\n      description: The cosine of <code>value</code>.\n  overload: System.Numerics.Complex.Cos*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Complex.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Numerics.Complex.Cosh(System.Numerics.Complex)\n  commentId: M:System.Numerics.Complex.Cosh(System.Numerics.Complex)\n  id: Cosh(System.Numerics.Complex)\n  parent: System.Numerics.Complex\n  langs:\n  - csharp\n  name: Cosh(Complex)\n  nameWithType: Complex.Cosh(Complex)\n  fullName: Complex.Cosh(Complex)\n  type: Method\n  assemblies:\n  - System.Runtime.Numerics\n  - System.Numerics\n  - netstandard\n  namespace: System.Numerics\n  summary: Returns the hyperbolic cosine of the specified complex number.\n  remarks: \"The <xref:System.Numerics.Complex.Cosh%2A> method for complex numbers corresponds to the <xref:System.Math.Cosh%2A?displayProperty=fullName> method for real numbers.  \\n  \\n The <xref:System.Numerics.Complex.Cosh%2A> method uses the following formula to calculate the hyperbolic cosine of the complex number a + bi:  \\n  \\n (<xref:System.Math.Cosh%2A>(a) * <xref:System.Math.Cos%2A>(b), <xref:System.Math.Sinh%2A>(a) * <xref:System.Math.Sin%2A>(b))\"\n  syntax:\n    content: public static System.Numerics.Complex Cosh (System.Numerics.Complex value);\n    parameters:\n    - id: value\n      type: System.Numerics.Complex\n      description: A complex number.\n    return:\n      type: System.Numerics.Complex\n      description: The hyperbolic cosine of <code>value</code>.\n  overload: System.Numerics.Complex.Cosh*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Complex.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Numerics.Complex.Divide(System.Numerics.Complex,System.Numerics.Complex)\n  commentId: M:System.Numerics.Complex.Divide(System.Numerics.Complex,System.Numerics.Complex)\n  id: Divide(System.Numerics.Complex,System.Numerics.Complex)\n  parent: System.Numerics.Complex\n  langs:\n  - csharp\n  name: Divide(Complex, Complex)\n  nameWithType: Complex.Divide(Complex, Complex)\n  fullName: Complex.Divide(Complex, Complex)\n  type: Method\n  assemblies:\n  - System.Runtime.Numerics\n  - System.Numerics\n  - netstandard\n  namespace: System.Numerics\n  summary: Divides one complex number by another and returns the result.\n  remarks: \"The division of a complex number, a + bi, by a second complex number, number, c + di, takes the following form:  \\n  \\n ((ac + bd) / (c<sup>2</sup> + d<sup>2</sup>)) + ((bc - ad) / (c<sup>2</sup> + d<sup>2</sup>)i  \\n  \\n If the calculation of the quotient results in an overflow in either the real or imaginary component, the value of that component is either <xref:System.Double.PositiveInfinity?displayProperty=fullName> or <xref:System.Double.NegativeInfinity?displayProperty=fullName>.  \\n  \\n The <xref:System.Numerics.Complex.Divide%2A> method can be used by languages that do not support custom operators. Its behavior is identical to division using the division operator.\"\n  example:\n  - \"The following example divides a complex number by each element in an array of complex numbers.  \\n  \\n [!code-csharp[System.Numerics.Complex.Divide#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.numerics.complex.divide/cs/divide1.cs#1)]\\n [!code-vb[System.Numerics.Complex.Divide#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.numerics.complex.divide/vb/divide1.vb#1)]\"\n  syntax:\n    content: public static System.Numerics.Complex Divide (System.Numerics.Complex dividend, System.Numerics.Complex divisor);\n    parameters:\n    - id: dividend\n      type: System.Numerics.Complex\n      description: The complex number to be divided.\n    - id: divisor\n      type: System.Numerics.Complex\n      description: The complex number to divide by.\n    return:\n      type: System.Numerics.Complex\n      description: The quotient of the division.\n  overload: System.Numerics.Complex.Divide*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Complex.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Numerics.Complex.Equals(System.Numerics.Complex)\n  commentId: M:System.Numerics.Complex.Equals(System.Numerics.Complex)\n  id: Equals(System.Numerics.Complex)\n  parent: System.Numerics.Complex\n  langs:\n  - csharp\n  name: Equals(Complex)\n  nameWithType: Complex.Equals(Complex)\n  fullName: Complex.Equals(Complex)\n  type: Method\n  assemblies:\n  - System.Runtime.Numerics\n  - System.Numerics\n  - netstandard\n  namespace: System.Numerics\n  summary: Returns a value that indicates whether the current instance and a specified complex number have the same value.\n  remarks: \"The <xref:System.Numerics.Complex.Equals%28System.Numerics.Complex%29> method provides the <xref:System.IEquatable%601> implementation for the <xref:System.Numerics.Complex> structure. It performs slightly better than <xref:System.Numerics.Complex.Equals%28System.Object%29> method because it does not have to convert its parameter to a complex number.  \\n  \\n Two complex numbers are equal if their real parts are equal and their imaginary parts are equal. The <xref:System.Numerics.Complex.Equals%28System.Numerics.Complex%29> method is equivalent to the following expression:  \\n  \\n [!code-csharp[System.Numerics.Complex.Equals#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.numerics.complex.equals/cs/equals1.cs#1)]\\n [!code-vb[System.Numerics.Complex.Equals#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.numerics.complex.equals/vb/equals1.vb#1)]\"\n  syntax:\n    content: public bool Equals (System.Numerics.Complex value);\n    parameters:\n    - id: value\n      type: System.Numerics.Complex\n      description: The complex number to compare.\n    return:\n      type: System.Boolean\n      description: '`true` if this complex number and <code>value</code> have the same value; otherwise, `false`.'\n  overload: System.Numerics.Complex.Equals*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Complex.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Numerics.Complex.Equals(System.Object)\n  commentId: M:System.Numerics.Complex.Equals(System.Object)\n  id: Equals(System.Object)\n  parent: System.Numerics.Complex\n  langs:\n  - csharp\n  name: Equals(Object)\n  nameWithType: Complex.Equals(Object)\n  fullName: Complex.Equals(Object)\n  type: Method\n  assemblies:\n  - System.Runtime.Numerics\n  - System.Numerics\n  - netstandard\n  namespace: System.Numerics\n  summary: Returns a value that indicates whether the current instance and a specified object have the same value.\n  remarks: \"Two complex numbers are equal if their real parts are equal and their imaginary parts are equal. The <xref:System.Numerics.Complex.Equals%28System.Object%29> method is equivalent to the following expression:  \\n  \\n [!code-csharp[System.Numerics.Complex.Equals#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.numerics.complex.equals/cs/equals1.cs#2)]\\n [!code-vb[System.Numerics.Complex.Equals#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.numerics.complex.equals/vb/equals1.vb#2)]  \\n  \\n If the `obj` parameter is not a <xref:System.Numerics.Complex> object, but it is a data type for which an implicit conversion is defined, the <xref:System.Numerics.Complex.Equals%28System.Object%29> method converts `obj` to a <xref:System.Numerics.Complex> object whose real part is equal to the value of `obj` and whose imaginary part is equal to zero before it performs the comparison. The following example illustrates this by finding that a complex number and a double-precision floating-point value are equal.  \\n  \\n [!code-csharp[System.Numerics.Complex.Equals#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.numerics.complex.equals/cs/equals3.cs#6)]\\n [!code-vb[System.Numerics.Complex.Equals#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.numerics.complex.equals/vb/equals3.vb#6)]\"\n  syntax:\n    content: public override bool Equals (object obj);\n    parameters:\n    - id: obj\n      type: System.Object\n      description: The object to compare.\n    return:\n      type: System.Boolean\n      description: '`true` if the <code>obj</code> parameter is a <xref href=\"System.Numerics.Complex\"></xref> object or a type capable of implicit conversion to a <xref href=\"System.Numerics.Complex\"></xref> object, and its value is equal to the current <xref href=\"System.Numerics.Complex\"></xref> object; otherwise, `false`.'\n  overload: System.Numerics.Complex.Equals*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Complex.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Numerics.Complex.Exp(System.Numerics.Complex)\n  commentId: M:System.Numerics.Complex.Exp(System.Numerics.Complex)\n  id: Exp(System.Numerics.Complex)\n  parent: System.Numerics.Complex\n  langs:\n  - csharp\n  name: Exp(Complex)\n  nameWithType: Complex.Exp(Complex)\n  fullName: Complex.Exp(Complex)\n  type: Method\n  assemblies:\n  - System.Runtime.Numerics\n  - System.Numerics\n  - netstandard\n  namespace: System.Numerics\n  summary: Returns `e` raised to the power specified by a complex number.\n  remarks: \"Use the <xref:System.Numerics.Complex.Pow%2A> method to calculate the powers of other bases.  \\n  \\n The <xref:System.Numerics.Complex.Exp%2A> method for complex numbers corresponds to the <xref:System.Math.Exp%2A?displayProperty=fullName> method for real numbers. <xref:System.Numerics.Complex.Exp%2A> is the inverse of <xref:System.Numerics.Complex.Log%2A>.\"\n  example:\n  - \"The following example illustrates the <xref:System.Numerics.Complex.Exp%2A> method. It shows that, with some allowance for the lack of precision of the <xref:System.Double> data type, passing the value returned by the <xref:System.Numerics.Complex.Log%2A> method to the <xref:System.Numerics.Complex.Exp%2A> method returns the original <xref:System.Numerics.Complex> value.  \\n  \\n [!code-csharp[System.Numerics.Complex.Log#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.numerics.complex.log/cs/log1.cs#1)] \\n [!code-vb[System.Numerics.Complex.Log#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.numerics.complex.log/vb/log1.vb#1)]\"\n  syntax:\n    content: public static System.Numerics.Complex Exp (System.Numerics.Complex value);\n    parameters:\n    - id: value\n      type: System.Numerics.Complex\n      description: A complex number that specifies a power.\n    return:\n      type: System.Numerics.Complex\n      description: The number `e` raised to the power <code>value</code>.\n  overload: System.Numerics.Complex.Exp*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Complex.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Numerics.Complex.FromPolarCoordinates(System.Double,System.Double)\n  commentId: M:System.Numerics.Complex.FromPolarCoordinates(System.Double,System.Double)\n  id: FromPolarCoordinates(System.Double,System.Double)\n  parent: System.Numerics.Complex\n  langs:\n  - csharp\n  name: FromPolarCoordinates(Double, Double)\n  nameWithType: Complex.FromPolarCoordinates(Double, Double)\n  fullName: Complex.FromPolarCoordinates(Double, Double)\n  type: Method\n  assemblies:\n  - System.Runtime.Numerics\n  - System.Numerics\n  - netstandard\n  namespace: System.Numerics\n  summary: Creates a complex number from a point's polar coordinates.\n  remarks: \"The <xref:System.Numerics.Complex.FromPolarCoordinates%2A> method instantiates a complex number based on its polar coordinates.  \\n  \\n Because there are multiple representations of a point on a complex plane, the return value of the <xref:System.Numerics.Complex.FromPolarCoordinates%2A> method is normalized. The magnitude is normalized to a positive number, and the phase is normalized to a value in the range of -<xref:System.Math.PI> to <xref:System.Math.PI>. As a result, the values of the <xref:System.Numerics.Complex.Phase%2A> and <xref:System.Numerics.Complex.Magnitude%2A> properties of the resulting complex number may not equal the original values of the `magnitude` and `phase` parameters.  \\n  \\n To convert a value from degrees to radians for the `phase` parameter, multiply it by <xref:System.Math.PI?displayProperty=fullName>/180.\"\n  example:\n  - \"The following example uses the <xref:System.Numerics.Complex.FromPolarCoordinates%2A> method to instantiate a complex number based on its polar coordinates and then displays the value of its <xref:System.Numerics.Complex.Magnitude%2A> and <xref:System.Numerics.Complex.Phase%2A> properties.  \\n  \\n [!code-csharp[System.Numerics.Complex.Phase#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.numerics.complex.phase/cs/phase1.cs#1)]\\n [!code-vb[System.Numerics.Complex.Phase#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.numerics.complex.phase/vb/phase1.vb#1)]\"\n  syntax:\n    content: public static System.Numerics.Complex FromPolarCoordinates (double magnitude, double phase);\n    parameters:\n    - id: magnitude\n      type: System.Double\n      description: The magnitude, which is the distance from the origin (the intersection of the x-axis and the y-axis) to the number.\n    - id: phase\n      type: System.Double\n      description: The phase, which is the angle from the line to the horizontal axis, measured in radians.\n    return:\n      type: System.Numerics.Complex\n      description: A complex number.\n  overload: System.Numerics.Complex.FromPolarCoordinates*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Complex.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Numerics.Complex.GetHashCode\n  commentId: M:System.Numerics.Complex.GetHashCode\n  id: GetHashCode\n  parent: System.Numerics.Complex\n  langs:\n  - csharp\n  name: GetHashCode()\n  nameWithType: Complex.GetHashCode()\n  fullName: Complex.GetHashCode()\n  type: Method\n  assemblies:\n  - System.Runtime.Numerics\n  - System.Numerics\n  - netstandard\n  namespace: System.Numerics\n  summary: Returns the hash code for the current <xref href=\"System.Numerics.Complex\"></xref> object.\n  syntax:\n    content: public override int GetHashCode ();\n    parameters: []\n    return:\n      type: System.Int32\n      description: A 32-bit signed integer hash code.\n  overload: System.Numerics.Complex.GetHashCode*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Complex.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Numerics.Complex.Imaginary\n  commentId: P:System.Numerics.Complex.Imaginary\n  id: Imaginary\n  parent: System.Numerics.Complex\n  langs:\n  - csharp\n  name: Imaginary\n  nameWithType: Complex.Imaginary\n  fullName: Complex.Imaginary\n  type: Property\n  assemblies:\n  - System.Runtime.Numerics\n  - System.Numerics\n  - netstandard\n  namespace: System.Numerics\n  summary: Gets the imaginary component of the current <xref href=\"System.Numerics.Complex\"></xref> object.\n  remarks: Given a complex number a + bi, the <xref:System.Numerics.Complex.Imaginary%2A> property returns the value of b.\n  example:\n  - \"The following example instantiates an array of <xref:System.Numerics.Complex> objects and displays the real and imaginary components of each in the form a + bi.  \\n  \\n [!code-csharp[System.Numerics.Complex.Real#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.numerics.complex.real/cs/real1.cs#1)]\\n [!code-vb[System.Numerics.Complex.Real#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.numerics.complex.real/vb/real1.vb#1)]\"\n  syntax:\n    content: public double Imaginary { get; }\n    return:\n      type: System.Double\n      description: The imaginary component of a complex number.\n  overload: System.Numerics.Complex.Imaginary*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Complex.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Numerics.Complex.ImaginaryOne\n  commentId: F:System.Numerics.Complex.ImaginaryOne\n  id: ImaginaryOne\n  parent: System.Numerics.Complex\n  langs:\n  - csharp\n  name: ImaginaryOne\n  nameWithType: Complex.ImaginaryOne\n  fullName: Complex.ImaginaryOne\n  type: Field\n  assemblies:\n  - System.Runtime.Numerics\n  - System.Numerics\n  - netstandard\n  namespace: System.Numerics\n  summary: Returns a new <xref href=\"System.Numerics.Complex\"></xref> instance with a real number equal to zero and an imaginary number equal to one.\n  remarks: ''\n  example:\n  - \"The following example instantiates a <xref:System.Numerics.Complex> value by using the <xref:System.Numerics.Complex.ImaginaryOne> property. It then compares this value to another value that is instantiated by calling the <xref:System.Numerics.Complex> constructor with a real part equal to zero and an imaginary part equal to one. As the output from the example shows, the two values are equal.  \\n  \\n [!code-csharp[System.Numerics.Complex.ImaginaryOne#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.numerics.complex.imaginaryone/cs/imaginaryone1.cs#1)]\\n [!code-vb[System.Numerics.Complex.ImaginaryOne#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.numerics.complex.imaginaryone/vb/imaginaryone1.vb#1)]\"\n  syntax:\n    content: public static readonly System.Numerics.Complex ImaginaryOne;\n    return:\n      type: System.Numerics.Complex\n      description: ''\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Complex.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Numerics.Complex.Log(System.Numerics.Complex)\n  commentId: M:System.Numerics.Complex.Log(System.Numerics.Complex)\n  id: Log(System.Numerics.Complex)\n  parent: System.Numerics.Complex\n  langs:\n  - csharp\n  name: Log(Complex)\n  nameWithType: Complex.Log(Complex)\n  fullName: Complex.Log(Complex)\n  type: Method\n  assemblies:\n  - System.Runtime.Numerics\n  - System.Numerics\n  - netstandard\n  namespace: System.Numerics\n  summary: Returns the natural (base `e`) logarithm of a specified complex number.\n  remarks: The <xref:System.Numerics.Complex.Log%28System.Numerics.Complex%29> method for complex numbers corresponds to the <xref:System.Math.Log%28System.Double%29?displayProperty=fullName> method for real numbers.\n  example:\n  - \"The following example illustrates the <xref:System.Numerics.Complex.Log%2A> method. It shows that, with some allowance for the lack of precision of the <xref:System.Double> data type, passing the value returned by the <xref:System.Numerics.Complex.Log%2A> method to the <xref:System.Numerics.Complex.Exp%2A> method returns the original <xref:System.Numerics.Complex> value.  \\n  \\n [!code-csharp[System.Numerics.Complex.Log#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.numerics.complex.log/cs/log1.cs#1)] \\n [!code-vb[System.Numerics.Complex.Log#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.numerics.complex.log/vb/log1.vb#1)]\"\n  syntax:\n    content: public static System.Numerics.Complex Log (System.Numerics.Complex value);\n    parameters:\n    - id: value\n      type: System.Numerics.Complex\n      description: A complex number.\n    return:\n      type: System.Numerics.Complex\n      description: The natural (base `e`) logarithm of <code>value</code>.\n  overload: System.Numerics.Complex.Log*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Complex.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Numerics.Complex.Log(System.Numerics.Complex,System.Double)\n  commentId: M:System.Numerics.Complex.Log(System.Numerics.Complex,System.Double)\n  id: Log(System.Numerics.Complex,System.Double)\n  parent: System.Numerics.Complex\n  langs:\n  - csharp\n  name: Log(Complex, Double)\n  nameWithType: Complex.Log(Complex, Double)\n  fullName: Complex.Log(Complex, Double)\n  type: Method\n  assemblies:\n  - System.Runtime.Numerics\n  - System.Numerics\n  - netstandard\n  namespace: System.Numerics\n  summary: Returns the logarithm of a specified complex number in a specified base.\n  remarks: The <xref:System.Numerics.Complex.Log%28System.Numerics.Complex%2CSystem.Double%29> method for complex numbers corresponds to the <xref:System.Math.Log%28System.Double%2CSystem.Double%29?displayProperty=fullName> method for real numbers.\n  syntax:\n    content: public static System.Numerics.Complex Log (System.Numerics.Complex value, double baseValue);\n    parameters:\n    - id: value\n      type: System.Numerics.Complex\n      description: A complex number.\n    - id: baseValue\n      type: System.Double\n      description: The base of the logarithm.\n    return:\n      type: System.Numerics.Complex\n      description: The logarithm of <code>value</code> in base <code>baseValue</code>.\n  overload: System.Numerics.Complex.Log*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Complex.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Numerics.Complex.Log10(System.Numerics.Complex)\n  commentId: M:System.Numerics.Complex.Log10(System.Numerics.Complex)\n  id: Log10(System.Numerics.Complex)\n  parent: System.Numerics.Complex\n  langs:\n  - csharp\n  name: Log10(Complex)\n  nameWithType: Complex.Log10(Complex)\n  fullName: Complex.Log10(Complex)\n  type: Method\n  assemblies:\n  - System.Runtime.Numerics\n  - System.Numerics\n  - netstandard\n  namespace: System.Numerics\n  summary: Returns the base-10 logarithm of a specified complex number.\n  remarks: The <xref:System.Numerics.Complex.Log10%2A> method for complex numbers corresponds to the <xref:System.Math.Log10%2A?displayProperty=fullName> method for real numbers.\n  syntax:\n    content: public static System.Numerics.Complex Log10 (System.Numerics.Complex value);\n    parameters:\n    - id: value\n      type: System.Numerics.Complex\n      description: A complex number.\n    return:\n      type: System.Numerics.Complex\n      description: The base-10 logarithm of <code>value</code>.\n  overload: System.Numerics.Complex.Log10*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Complex.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Numerics.Complex.Magnitude\n  commentId: P:System.Numerics.Complex.Magnitude\n  id: Magnitude\n  parent: System.Numerics.Complex\n  langs:\n  - csharp\n  name: Magnitude\n  nameWithType: Complex.Magnitude\n  fullName: Complex.Magnitude\n  type: Property\n  assemblies:\n  - System.Runtime.Numerics\n  - System.Numerics\n  - netstandard\n  namespace: System.Numerics\n  summary: Gets the magnitude (or absolute value) of a complex number.\n  remarks: \"The <xref:System.Numerics.Complex.Magnitude%2A> property is equivalent to the absolute value of a complex number. It specifies the distance from the origin (the intersection of the x-axis and the y-axis in the Cartesian coordinate system) to the two-dimensional point represented by a complex number. The absolute value is calculated as follows:  \\n  \\n &#124; a + bi &#124; = <xref:System.Math.Sqrt%2A?displayProperty=fullName>(a * a + b * b)  \\n  \\n If the calculation of the absolute value results in an overflow, this property returns either <xref:System.Double.PositiveInfinity?displayProperty=fullName> or <xref:System.Double.NegativeInfinity?displayProperty=fullName>.  \\n  \\n The <xref:System.Numerics.Complex.Magnitude%2A> and the <xref:System.Numerics.Complex.Phase%2A> properties define the position of a point that represents a complex number in the polar coordinate system.  \\n  \\n You can instantiate a complex number based on its polar coordinates instead of its Cartesian coordinates by calling the <xref:System.Numerics.Complex.FromPolarCoordinates%2A> method.\"\n  example:\n  - \"The following example calculates the absolute value of a complex number and demonstrates that it is equivalent to the value of the <xref:System.Numerics.Complex.Magnitude%2A> property.  \\n  \\n [!code-csharp[System.Numerics.Complex.Abs#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.numerics.complex.abs/cs/abs1.cs#1)]\\n [!code-vb[System.Numerics.Complex.Abs#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.numerics.complex.abs/vb/abs1.vb#1)]\"\n  syntax:\n    content: public double Magnitude { get; }\n    return:\n      type: System.Double\n      description: The magnitude of the current instance.\n  overload: System.Numerics.Complex.Magnitude*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Complex.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Numerics.Complex.Multiply(System.Numerics.Complex,System.Numerics.Complex)\n  commentId: M:System.Numerics.Complex.Multiply(System.Numerics.Complex,System.Numerics.Complex)\n  id: Multiply(System.Numerics.Complex,System.Numerics.Complex)\n  parent: System.Numerics.Complex\n  langs:\n  - csharp\n  name: Multiply(Complex, Complex)\n  nameWithType: Complex.Multiply(Complex, Complex)\n  fullName: Complex.Multiply(Complex, Complex)\n  type: Method\n  assemblies:\n  - System.Runtime.Numerics\n  - System.Numerics\n  - netstandard\n  namespace: System.Numerics\n  summary: Returns the product of two complex numbers.\n  remarks: \"The multiplication of a complex number, a + bi, and a second complex number, c + di, takes the following form:  \\n  \\n (ac - bd) + (ad + bc)i  \\n  \\n If the multiplication results in an overflow in either the real or imaginary component, the value of that component is either <xref:System.Double.PositiveInfinity?displayProperty=fullName> or <xref:System.Double.NegativeInfinity?displayProperty=fullName>.  \\n  \\n The <xref:System.Numerics.Complex.Multiply%2A> method is implemented for languages that do not support custom operators. Its behavior is identical to multiplication using the multiplication operator.\"\n  example:\n  - \"The following example multiples a complex number by each element in an array of complex numbers.  \\n  \\n [!code-csharp[System.Numerics.Complex.Multiply#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.numerics.complex.multiply/cs/multiply1.cs#1)]\\n [!code-vb[System.Numerics.Complex.Multiply#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.numerics.complex.multiply/vb/multiply1.vb#1)]\"\n  syntax:\n    content: public static System.Numerics.Complex Multiply (System.Numerics.Complex left, System.Numerics.Complex right);\n    parameters:\n    - id: left\n      type: System.Numerics.Complex\n      description: The first complex number to multiply.\n    - id: right\n      type: System.Numerics.Complex\n      description: The second complex number to multiply.\n    return:\n      type: System.Numerics.Complex\n      description: The product of the <code>left</code> and <code>right</code> parameters.\n  overload: System.Numerics.Complex.Multiply*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Complex.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Numerics.Complex.Negate(System.Numerics.Complex)\n  commentId: M:System.Numerics.Complex.Negate(System.Numerics.Complex)\n  id: Negate(System.Numerics.Complex)\n  parent: System.Numerics.Complex\n  langs:\n  - csharp\n  name: Negate(Complex)\n  nameWithType: Complex.Negate(Complex)\n  fullName: Complex.Negate(Complex)\n  type: Method\n  assemblies:\n  - System.Runtime.Numerics\n  - System.Numerics\n  - netstandard\n  namespace: System.Numerics\n  summary: Returns the additive inverse of a specified complex number.\n  remarks: \"The additive inverse of a complex number is a complex number that produces a value of <xref:System.Numerics.Complex> when it is added to the original complex number. This method returns a complex number in which the real and imaginary components of the original complex number are multiplied by -1.  \\n  \\n The <xref:System.Numerics.Complex.Negate%2A> method is implemented for languages that do not support custom operators. Its behavior is identical to negation using the unary negation operator, <xref:System.Numerics.Complex.op_UnaryNegation%2A>.\"\n  example:\n  - \"The following example obtains the additive inverse of each element in an array of complex numbers.  \\n  \\n [!code-csharp[System.Numerics.Complex.Negate#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.numerics.complex.negate/cs/negate1.cs#1)]\\n [!code-vb[System.Numerics.Complex.Negate#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.numerics.complex.negate/vb/negate1.vb#1)]\"\n  syntax:\n    content: public static System.Numerics.Complex Negate (System.Numerics.Complex value);\n    parameters:\n    - id: value\n      type: System.Numerics.Complex\n      description: A complex number.\n    return:\n      type: System.Numerics.Complex\n      description: The result of the <xref href=\"System.Numerics.Complex.Real\"></xref> and <xref href=\"System.Numerics.Complex.Imaginary\"></xref> components of the <code>value</code> parameter multiplied by -1.\n  overload: System.Numerics.Complex.Negate*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Complex.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Numerics.Complex.One\n  commentId: F:System.Numerics.Complex.One\n  id: One\n  parent: System.Numerics.Complex\n  langs:\n  - csharp\n  name: One\n  nameWithType: Complex.One\n  fullName: Complex.One\n  type: Field\n  assemblies:\n  - System.Runtime.Numerics\n  - System.Numerics\n  - netstandard\n  namespace: System.Numerics\n  summary: Returns a new <xref href=\"System.Numerics.Complex\"></xref> instance with a real number equal to one and an imaginary number equal to zero.\n  remarks: ''\n  example:\n  - \"The following example instantiates a <xref:System.Numerics.Complex> value by using the <xref:System.Numerics.Complex.One> property. It then compares this value to another value that is instantiated by calling the <xref:System.Numerics.Complex> constructor with a real part equal to one and an imaginary part equal to zero. As the output from the example shows, the two values are equal.  \\n  \\n [!code-csharp[System.Numerics.Complex.One#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.numerics.complex.one/cs/one1.cs#1)]\\n [!code-vb[System.Numerics.Complex.One#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.numerics.complex.one/vb/one1.vb#1)]\"\n  syntax:\n    content: public static readonly System.Numerics.Complex One;\n    return:\n      type: System.Numerics.Complex\n      description: ''\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Complex.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Numerics.Complex.op_Addition(System.Numerics.Complex,System.Numerics.Complex)\n  commentId: M:System.Numerics.Complex.op_Addition(System.Numerics.Complex,System.Numerics.Complex)\n  id: op_Addition(System.Numerics.Complex,System.Numerics.Complex)\n  parent: System.Numerics.Complex\n  langs:\n  - csharp\n  name: op_Addition(Complex, Complex)\n  nameWithType: Complex.op_Addition(Complex, Complex)\n  fullName: Complex.op_Addition(Complex, Complex)\n  type: Operator\n  assemblies:\n  - System.Runtime.Numerics\n  - System.Numerics\n  - netstandard\n  namespace: System.Numerics\n  summary: Adds two complex numbers.\n  remarks: \"The <xref:System.Numerics.Complex.op_Addition%2A> method defines the addition operation for complex numbers. It enables code such as the following:  \\n  \\n [!code-csharp[System.Numerics.Complex.Add#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.numerics.complex.add/cs/add3.cs#3)]\\n [!code-vb[System.Numerics.Complex.Add#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.numerics.complex.add/vb/add3.vb#3)]  \\n  \\n The addition of a complex number, a + bi, and a second complex number, c + di, takes the following form:  \\n  \\n (a + c) + (b + d)i  \\n  \\n If the method call results in an overflow in either the real or imaginary component, the value of that component is either <xref:System.Double.PositiveInfinity?displayProperty=fullName> or <xref:System.Double.NegativeInfinity?displayProperty=fullName>.  \\n  \\n Languages that do not support custom operators can call the <xref:System.Numerics.Complex.Add%2A> method instead.  \\n  \\n The equivalent method for this operator is <xref:System.Numerics.Complex.Add%28System.Numerics.Complex%2CSystem.Numerics.Complex%29?displayProperty=fullName>\"\n  example:\n  - \"The following example illustrates addition with complex numbers.  \\n  \\n [!code-csharp[System.Numerics.Complex.Add#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.numerics.complex.add/cs/add2.cs#2)]\\n [!code-vb[System.Numerics.Complex.Add#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.numerics.complex.add/vb/add2.vb#2)]\"\n  syntax:\n    content: public static System.Numerics.Complex op_Addition (System.Numerics.Complex left, System.Numerics.Complex right);\n    parameters:\n    - id: left\n      type: System.Numerics.Complex\n      description: The first value to add.\n    - id: right\n      type: System.Numerics.Complex\n      description: The second value to add.\n    return:\n      type: System.Numerics.Complex\n      description: The sum of <code>left</code> and <code>right</code>.\n  overload: System.Numerics.Complex.op_Addition*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Complex.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Numerics.Complex.op_Division(System.Numerics.Complex,System.Numerics.Complex)\n  commentId: M:System.Numerics.Complex.op_Division(System.Numerics.Complex,System.Numerics.Complex)\n  id: op_Division(System.Numerics.Complex,System.Numerics.Complex)\n  parent: System.Numerics.Complex\n  langs:\n  - csharp\n  name: op_Division(Complex, Complex)\n  nameWithType: Complex.op_Division(Complex, Complex)\n  fullName: Complex.op_Division(Complex, Complex)\n  type: Operator\n  assemblies:\n  - System.Runtime.Numerics\n  - System.Numerics\n  - netstandard\n  namespace: System.Numerics\n  summary: Divides a specified complex number by another specified complex number.\n  remarks: \"The <xref:System.Numerics.Complex.op_Division%2A> method defines the division operation for complex numbers. It enables code such as the following:  \\n  \\n [!code-csharp[System.Numerics.Complex.Divide#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.numerics.complex.divide/cs/divide2.cs#2)]\\n [!code-vb[System.Numerics.Complex.Divide#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.numerics.complex.divide/vb/divide2.vb#2)]  \\n  \\n The division of a complex number, a + bi, and a second complex number, c + di, takes the following form:  \\n  \\n ((ac + bd) / (c<sup>2</sup> + d<sup>2</sup>)) + ((bc - ad) / (c<sup>2</sup> + d<sup>2</sup>)i  \\n  \\n If the division results in an overflow in either the real or imaginary component, the value of that component is either <xref:System.Double.PositiveInfinity?displayProperty=fullName> or <xref:System.Double.NegativeInfinity?displayProperty=fullName>.  \\n  \\n Languages that do not support custom operators and operator overloading can call the <xref:System.Numerics.Complex.Divide%2A> method instead.  \\n  \\n The equivalent method for this operator is <xref:System.Numerics.Complex.Divide%28System.Numerics.Complex%2CSystem.Numerics.Complex%29?displayProperty=fullName>\"\n  syntax:\n    content: public static System.Numerics.Complex op_Division (System.Numerics.Complex left, System.Numerics.Complex right);\n    parameters:\n    - id: left\n      type: System.Numerics.Complex\n      description: The value to be divided.\n    - id: right\n      type: System.Numerics.Complex\n      description: The value to divide by.\n    return:\n      type: System.Numerics.Complex\n      description: The result of dividing <code>left</code> by <code>right</code>.\n  overload: System.Numerics.Complex.op_Division*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Complex.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Numerics.Complex.op_Equality(System.Numerics.Complex,System.Numerics.Complex)\n  commentId: M:System.Numerics.Complex.op_Equality(System.Numerics.Complex,System.Numerics.Complex)\n  id: op_Equality(System.Numerics.Complex,System.Numerics.Complex)\n  parent: System.Numerics.Complex\n  langs:\n  - csharp\n  name: op_Equality(Complex, Complex)\n  nameWithType: Complex.op_Equality(Complex, Complex)\n  fullName: Complex.op_Equality(Complex, Complex)\n  type: Operator\n  assemblies:\n  - System.Runtime.Numerics\n  - System.Numerics\n  - netstandard\n  namespace: System.Numerics\n  summary: Returns a value that indicates whether two complex numbers are equal.\n  remarks: \"The <xref:System.Numerics.Complex.op_Equality%2A> method defines the operation of the equality operator for <xref:System.Numerics.Complex> values. It enables code such as the following:  \\n  \\n [!code-csharp[System.Numerics.Complex.Equals#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.numerics.complex.equals/cs/eqoperator1.cs#9)]\\n [!code-vb[System.Numerics.Complex.Equals#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.numerics.complex.equals/vb/eqoperator1.vb#9)]  \\n  \\n Languages that do not support custom operators can call the <xref:System.Numerics.Complex.Equals%28System.Numerics.Complex%29> method instead.  \\n  \\n Two complex numbers are equal if their real parts are equal and their imaginary parts are equal. The <xref:System.Numerics.Complex.op_Equality%2A> method is equivalent to the following expression:  \\n  \\n [!code-csharp[System.Numerics.Complex.Equals#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.numerics.complex.equals/cs/equals1.cs#3)]\\n [!code-vb[System.Numerics.Complex.Equals#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.numerics.complex.equals/vb/equals1.vb#3)]  \\n  \\n Note that, because of differences in precision, two complex numbers that are apparently equivalent can be considered unequal. For more information and a possible workaround, see the <xref:System.Numerics.Complex.Equals%28System.Numerics.Complex%29> method.  \\n  \\n The equivalent method for this operator is <xref:System.Numerics.Complex.Equals%2A?displayProperty=fullName>\"\n  syntax:\n    content: public static bool op_Equality (System.Numerics.Complex left, System.Numerics.Complex right);\n    parameters:\n    - id: left\n      type: System.Numerics.Complex\n      description: The first complex number to compare.\n    - id: right\n      type: System.Numerics.Complex\n      description: The second complex number to compare.\n    return:\n      type: System.Boolean\n      description: '`true` if the <code>left</code> and <code>right</code> parameters have the same value; otherwise, `false`.'\n  overload: System.Numerics.Complex.op_Equality*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Complex.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Numerics.Complex.op_Explicit(System.Decimal to System.Numerics.Complex)\n  commentId: M:System.Numerics.Complex.op_Explicit(System.Decimal)~System.Numerics.Complex\n  id: op_Explicit(System.Decimal to System.Numerics.Complex)\n  parent: System.Numerics.Complex\n  langs:\n  - csharp\n  name: op_Explicit(Decimal to Complex)\n  nameWithType: Complex.op_Explicit(Decimal to Complex)\n  fullName: Complex.op_Explicit(Decimal to Complex)\n  type: Operator\n  assemblies:\n  - System.Runtime.Numerics\n  - System.Numerics\n  - netstandard\n  namespace: System.Numerics\n  syntax:\n    content: public static System.Numerics.Complex op_Explicit (decimal value);\n    parameters:\n    - id: value\n      type: System.Decimal\n      description: ''\n    return:\n      type: System.Numerics.Complex\n      description: ''\n  overload: System.Numerics.Complex.op_Explicit*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Complex.xml\n- uid: System.Numerics.Complex.op_Explicit(System.Numerics.BigInteger to System.Numerics.Complex)\n  commentId: M:System.Numerics.Complex.op_Explicit(System.Numerics.BigInteger)~System.Numerics.Complex\n  id: op_Explicit(System.Numerics.BigInteger to System.Numerics.Complex)\n  parent: System.Numerics.Complex\n  langs:\n  - csharp\n  name: op_Explicit(BigInteger to Complex)\n  nameWithType: Complex.op_Explicit(BigInteger to Complex)\n  fullName: Complex.op_Explicit(BigInteger to Complex)\n  type: Operator\n  assemblies:\n  - System.Runtime.Numerics\n  - System.Numerics\n  - netstandard\n  namespace: System.Numerics\n  syntax:\n    content: public static System.Numerics.Complex op_Explicit (System.Numerics.BigInteger value);\n    parameters:\n    - id: value\n      type: System.Numerics.BigInteger\n      description: ''\n    return:\n      type: System.Numerics.Complex\n      description: ''\n  overload: System.Numerics.Complex.op_Explicit*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Complex.xml\n- uid: System.Numerics.Complex.op_Implicit(System.UInt64 to System.Numerics.Complex)\n  commentId: M:System.Numerics.Complex.op_Implicit(System.UInt64)~System.Numerics.Complex\n  id: op_Implicit(System.UInt64 to System.Numerics.Complex)\n  parent: System.Numerics.Complex\n  langs:\n  - csharp\n  name: op_Implicit(UInt64 to Complex)\n  nameWithType: Complex.op_Implicit(UInt64 to Complex)\n  fullName: Complex.op_Implicit(UInt64 to Complex)\n  type: Operator\n  assemblies:\n  - System.Runtime.Numerics\n  - System.Numerics\n  - netstandard\n  namespace: System.Numerics\n  syntax:\n    content: >-\n      [System.CLSCompliant(false)]\n\n      public static System.Numerics.Complex op_Implicit (ulong value);\n    parameters:\n    - id: value\n      type: System.UInt64\n      description: ''\n    return:\n      type: System.Numerics.Complex\n      description: ''\n  overload: System.Numerics.Complex.op_Implicit*\n  exceptions: []\n  attributes:\n  - type: System.CLSCompliantAttribute\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Complex.xml\n- uid: System.Numerics.Complex.op_Implicit(System.UInt32 to System.Numerics.Complex)\n  commentId: M:System.Numerics.Complex.op_Implicit(System.UInt32)~System.Numerics.Complex\n  id: op_Implicit(System.UInt32 to System.Numerics.Complex)\n  parent: System.Numerics.Complex\n  langs:\n  - csharp\n  name: op_Implicit(UInt32 to Complex)\n  nameWithType: Complex.op_Implicit(UInt32 to Complex)\n  fullName: Complex.op_Implicit(UInt32 to Complex)\n  type: Operator\n  assemblies:\n  - System.Runtime.Numerics\n  - System.Numerics\n  - netstandard\n  namespace: System.Numerics\n  syntax:\n    content: >-\n      [System.CLSCompliant(false)]\n\n      public static System.Numerics.Complex op_Implicit (uint value);\n    parameters:\n    - id: value\n      type: System.UInt32\n      description: ''\n    return:\n      type: System.Numerics.Complex\n      description: ''\n  overload: System.Numerics.Complex.op_Implicit*\n  exceptions: []\n  attributes:\n  - type: System.CLSCompliantAttribute\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Complex.xml\n- uid: System.Numerics.Complex.op_Implicit(System.UInt16 to System.Numerics.Complex)\n  commentId: M:System.Numerics.Complex.op_Implicit(System.UInt16)~System.Numerics.Complex\n  id: op_Implicit(System.UInt16 to System.Numerics.Complex)\n  parent: System.Numerics.Complex\n  langs:\n  - csharp\n  name: op_Implicit(UInt16 to Complex)\n  nameWithType: Complex.op_Implicit(UInt16 to Complex)\n  fullName: Complex.op_Implicit(UInt16 to Complex)\n  type: Operator\n  assemblies:\n  - System.Runtime.Numerics\n  - System.Numerics\n  - netstandard\n  namespace: System.Numerics\n  syntax:\n    content: >-\n      [System.CLSCompliant(false)]\n\n      public static System.Numerics.Complex op_Implicit (ushort value);\n    parameters:\n    - id: value\n      type: System.UInt16\n      description: ''\n    return:\n      type: System.Numerics.Complex\n      description: ''\n  overload: System.Numerics.Complex.op_Implicit*\n  exceptions: []\n  attributes:\n  - type: System.CLSCompliantAttribute\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Complex.xml\n- uid: System.Numerics.Complex.op_Implicit(System.Single to System.Numerics.Complex)\n  commentId: M:System.Numerics.Complex.op_Implicit(System.Single)~System.Numerics.Complex\n  id: op_Implicit(System.Single to System.Numerics.Complex)\n  parent: System.Numerics.Complex\n  langs:\n  - csharp\n  name: op_Implicit(Single to Complex)\n  nameWithType: Complex.op_Implicit(Single to Complex)\n  fullName: Complex.op_Implicit(Single to Complex)\n  type: Operator\n  assemblies:\n  - System.Runtime.Numerics\n  - System.Numerics\n  - netstandard\n  namespace: System.Numerics\n  syntax:\n    content: public static System.Numerics.Complex op_Implicit (float value);\n    parameters:\n    - id: value\n      type: System.Single\n      description: ''\n    return:\n      type: System.Numerics.Complex\n      description: ''\n  overload: System.Numerics.Complex.op_Implicit*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Complex.xml\n- uid: System.Numerics.Complex.op_Implicit(System.SByte to System.Numerics.Complex)\n  commentId: M:System.Numerics.Complex.op_Implicit(System.SByte)~System.Numerics.Complex\n  id: op_Implicit(System.SByte to System.Numerics.Complex)\n  parent: System.Numerics.Complex\n  langs:\n  - csharp\n  name: op_Implicit(SByte to Complex)\n  nameWithType: Complex.op_Implicit(SByte to Complex)\n  fullName: Complex.op_Implicit(SByte to Complex)\n  type: Operator\n  assemblies:\n  - System.Runtime.Numerics\n  - System.Numerics\n  - netstandard\n  namespace: System.Numerics\n  syntax:\n    content: >-\n      [System.CLSCompliant(false)]\n\n      public static System.Numerics.Complex op_Implicit (sbyte value);\n    parameters:\n    - id: value\n      type: System.SByte\n      description: ''\n    return:\n      type: System.Numerics.Complex\n      description: ''\n  overload: System.Numerics.Complex.op_Implicit*\n  exceptions: []\n  attributes:\n  - type: System.CLSCompliantAttribute\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Complex.xml\n- uid: System.Numerics.Complex.op_Implicit(System.Byte to System.Numerics.Complex)\n  commentId: M:System.Numerics.Complex.op_Implicit(System.Byte)~System.Numerics.Complex\n  id: op_Implicit(System.Byte to System.Numerics.Complex)\n  parent: System.Numerics.Complex\n  langs:\n  - csharp\n  name: op_Implicit(Byte to Complex)\n  nameWithType: Complex.op_Implicit(Byte to Complex)\n  fullName: Complex.op_Implicit(Byte to Complex)\n  type: Operator\n  assemblies:\n  - System.Runtime.Numerics\n  - System.Numerics\n  - netstandard\n  namespace: System.Numerics\n  syntax:\n    content: public static System.Numerics.Complex op_Implicit (byte value);\n    parameters:\n    - id: value\n      type: System.Byte\n      description: ''\n    return:\n      type: System.Numerics.Complex\n      description: ''\n  overload: System.Numerics.Complex.op_Implicit*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Complex.xml\n- uid: System.Numerics.Complex.op_Implicit(System.Int32 to System.Numerics.Complex)\n  commentId: M:System.Numerics.Complex.op_Implicit(System.Int32)~System.Numerics.Complex\n  id: op_Implicit(System.Int32 to System.Numerics.Complex)\n  parent: System.Numerics.Complex\n  langs:\n  - csharp\n  name: op_Implicit(Int32 to Complex)\n  nameWithType: Complex.op_Implicit(Int32 to Complex)\n  fullName: Complex.op_Implicit(Int32 to Complex)\n  type: Operator\n  assemblies:\n  - System.Runtime.Numerics\n  - System.Numerics\n  - netstandard\n  namespace: System.Numerics\n  syntax:\n    content: public static System.Numerics.Complex op_Implicit (int value);\n    parameters:\n    - id: value\n      type: System.Int32\n      description: ''\n    return:\n      type: System.Numerics.Complex\n      description: ''\n  overload: System.Numerics.Complex.op_Implicit*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Complex.xml\n- uid: System.Numerics.Complex.op_Implicit(System.Int16 to System.Numerics.Complex)\n  commentId: M:System.Numerics.Complex.op_Implicit(System.Int16)~System.Numerics.Complex\n  id: op_Implicit(System.Int16 to System.Numerics.Complex)\n  parent: System.Numerics.Complex\n  langs:\n  - csharp\n  name: op_Implicit(Int16 to Complex)\n  nameWithType: Complex.op_Implicit(Int16 to Complex)\n  fullName: Complex.op_Implicit(Int16 to Complex)\n  type: Operator\n  assemblies:\n  - System.Runtime.Numerics\n  - System.Numerics\n  - netstandard\n  namespace: System.Numerics\n  syntax:\n    content: public static System.Numerics.Complex op_Implicit (short value);\n    parameters:\n    - id: value\n      type: System.Int16\n      description: ''\n    return:\n      type: System.Numerics.Complex\n      description: ''\n  overload: System.Numerics.Complex.op_Implicit*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Complex.xml\n- uid: System.Numerics.Complex.op_Implicit(System.Double to System.Numerics.Complex)\n  commentId: M:System.Numerics.Complex.op_Implicit(System.Double)~System.Numerics.Complex\n  id: op_Implicit(System.Double to System.Numerics.Complex)\n  parent: System.Numerics.Complex\n  langs:\n  - csharp\n  name: op_Implicit(Double to Complex)\n  nameWithType: Complex.op_Implicit(Double to Complex)\n  fullName: Complex.op_Implicit(Double to Complex)\n  type: Operator\n  assemblies:\n  - System.Runtime.Numerics\n  - System.Numerics\n  - netstandard\n  namespace: System.Numerics\n  syntax:\n    content: public static System.Numerics.Complex op_Implicit (double value);\n    parameters:\n    - id: value\n      type: System.Double\n      description: ''\n    return:\n      type: System.Numerics.Complex\n      description: ''\n  overload: System.Numerics.Complex.op_Implicit*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Complex.xml\n- uid: System.Numerics.Complex.op_Implicit(System.Int64 to System.Numerics.Complex)\n  commentId: M:System.Numerics.Complex.op_Implicit(System.Int64)~System.Numerics.Complex\n  id: op_Implicit(System.Int64 to System.Numerics.Complex)\n  parent: System.Numerics.Complex\n  langs:\n  - csharp\n  name: op_Implicit(Int64 to Complex)\n  nameWithType: Complex.op_Implicit(Int64 to Complex)\n  fullName: Complex.op_Implicit(Int64 to Complex)\n  type: Operator\n  assemblies:\n  - System.Runtime.Numerics\n  - System.Numerics\n  - netstandard\n  namespace: System.Numerics\n  syntax:\n    content: public static System.Numerics.Complex op_Implicit (long value);\n    parameters:\n    - id: value\n      type: System.Int64\n      description: ''\n    return:\n      type: System.Numerics.Complex\n      description: ''\n  overload: System.Numerics.Complex.op_Implicit*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Complex.xml\n- uid: System.Numerics.Complex.op_Inequality(System.Numerics.Complex,System.Numerics.Complex)\n  commentId: M:System.Numerics.Complex.op_Inequality(System.Numerics.Complex,System.Numerics.Complex)\n  id: op_Inequality(System.Numerics.Complex,System.Numerics.Complex)\n  parent: System.Numerics.Complex\n  langs:\n  - csharp\n  name: op_Inequality(Complex, Complex)\n  nameWithType: Complex.op_Inequality(Complex, Complex)\n  fullName: Complex.op_Inequality(Complex, Complex)\n  type: Operator\n  assemblies:\n  - System.Runtime.Numerics\n  - System.Numerics\n  - netstandard\n  namespace: System.Numerics\n  summary: Returns a value that indicates whether two complex numbers are not equal.\n  remarks: \"The <xref:System.Numerics.Complex.op_Equality%2A> method defines the operation of the inequality operator for complex numbers. It enables code such as the following:  \\n  \\n [!code-csharp[System.Numerics.Complex.Inequality#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.numerics.complex.inequality/cs/inequality1.cs#1)]\\n [!code-vb[System.Numerics.Complex.Inequality#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.numerics.complex.inequality/vb/inequality1.vb#1)]  \\n  \\n Languages that do not support custom operators can test for inequality by calling the <xref:System.Numerics.Complex.Equals%28System.Numerics.Complex%29> method and reversing its value.  \\n  \\n Note that, because of differences in precision, two complex numbers that are apparently equivalent can be considered unequal. One possible workaround is to implement a comparison method that returns `true` only if the difference between the two real and imaginary parts of the complex numbers exceeds a certain threshold (such as .01% of the value of the real or imaginary component of one of the complex numbers). For more information, see the <xref:System.Numerics.Complex.Equals%28System.Numerics.Complex%29> method.\"\n  syntax:\n    content: public static bool op_Inequality (System.Numerics.Complex left, System.Numerics.Complex right);\n    parameters:\n    - id: left\n      type: System.Numerics.Complex\n      description: The first value to compare.\n    - id: right\n      type: System.Numerics.Complex\n      description: The second value to compare.\n    return:\n      type: System.Boolean\n      description: '`true` if <code>left</code> and <code>right</code> are not equal; otherwise, `false`.'\n  overload: System.Numerics.Complex.op_Inequality*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Complex.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Numerics.Complex.op_Multiply(System.Numerics.Complex,System.Numerics.Complex)\n  commentId: M:System.Numerics.Complex.op_Multiply(System.Numerics.Complex,System.Numerics.Complex)\n  id: op_Multiply(System.Numerics.Complex,System.Numerics.Complex)\n  parent: System.Numerics.Complex\n  langs:\n  - csharp\n  name: op_Multiply(Complex, Complex)\n  nameWithType: Complex.op_Multiply(Complex, Complex)\n  fullName: Complex.op_Multiply(Complex, Complex)\n  type: Operator\n  assemblies:\n  - System.Runtime.Numerics\n  - System.Numerics\n  - netstandard\n  namespace: System.Numerics\n  summary: Multiplies two specified complex numbers.\n  remarks: \"The <xref:System.Numerics.Complex.op_Multiply%2A> method defines the operation of the multiplication operator for complex numbers. It enables code such as the following:  \\n  \\n [!code-csharp[System.Numerics.Complex.Multiply#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.numerics.complex.multiply/cs/multiply2.cs#2)]\\n [!code-vb[System.Numerics.Complex.Multiply#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.numerics.complex.multiply/vb/multiply2.vb#2)]  \\n  \\n The multiplication of a complex number, a + bi, and a second complex number, c + di, takes the following form:  \\n  \\n (ac - bd) + (ad + bc)i  \\n  \\n If the multiplication results in an overflow in either the real or imaginary component, the value of that component is either <xref:System.Double.PositiveInfinity?displayProperty=fullName> or <xref:System.Double.NegativeInfinity?displayProperty=fullName>.  \\n  \\n Languages that do not support custom operators can call the <xref:System.Numerics.Complex.Multiply%2A> method instead.  \\n  \\n The equivalent method for this operator is <xref:System.Numerics.Complex.Multiply%28System.Numerics.Complex%2CSystem.Numerics.Complex%29?displayProperty=fullName>\"\n  syntax:\n    content: public static System.Numerics.Complex op_Multiply (System.Numerics.Complex left, System.Numerics.Complex right);\n    parameters:\n    - id: left\n      type: System.Numerics.Complex\n      description: The first value to multiply.\n    - id: right\n      type: System.Numerics.Complex\n      description: The second value to multiply.\n    return:\n      type: System.Numerics.Complex\n      description: The product of <code>left</code> and <code>right</code>.\n  overload: System.Numerics.Complex.op_Multiply*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Complex.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Numerics.Complex.op_Subtraction(System.Numerics.Complex,System.Numerics.Complex)\n  commentId: M:System.Numerics.Complex.op_Subtraction(System.Numerics.Complex,System.Numerics.Complex)\n  id: op_Subtraction(System.Numerics.Complex,System.Numerics.Complex)\n  parent: System.Numerics.Complex\n  langs:\n  - csharp\n  name: op_Subtraction(Complex, Complex)\n  nameWithType: Complex.op_Subtraction(Complex, Complex)\n  fullName: Complex.op_Subtraction(Complex, Complex)\n  type: Operator\n  assemblies:\n  - System.Runtime.Numerics\n  - System.Numerics\n  - netstandard\n  namespace: System.Numerics\n  summary: Subtracts a complex number from another complex number.\n  remarks: \"The <xref:System.Numerics.Complex.op_Subtraction%2A> method defines the operation of the subtraction operator for complex numbers. It enables code such as the following:  \\n  \\n [!code-csharp[System.Numerics.Complex.Subtract#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.numerics.complex.subtract/cs/subtract2.cs#2)]\\n [!code-vb[System.Numerics.Complex.Subtract#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.numerics.complex.subtract/vb/subtract2.vb#2)]  \\n  \\n If the method call results in an overflow in either the real or imaginary component, the value of that component is either <xref:System.Double.PositiveInfinity?displayProperty=fullName> or <xref:System.Double.NegativeInfinity?displayProperty=fullName>.  \\n  \\n The subtraction of a complex number, c + di, from another complex number, a + bi, takes the following form:  \\n  \\n (a - c) + (b - d)i  \\n  \\n Languages that do not support custom operators can call the <xref:System.Numerics.Complex.Subtract%2A> method instead.  \\n  \\n The equivalent method for this operator is <xref:System.Numerics.Complex.Subtract%28System.Numerics.Complex%2CSystem.Numerics.Complex%29?displayProperty=fullName>\"\n  syntax:\n    content: public static System.Numerics.Complex op_Subtraction (System.Numerics.Complex left, System.Numerics.Complex right);\n    parameters:\n    - id: left\n      type: System.Numerics.Complex\n      description: The value to subtract from (the minuend).\n    - id: right\n      type: System.Numerics.Complex\n      description: The value to subtract (the subtrahend).\n    return:\n      type: System.Numerics.Complex\n      description: The result of subtracting <code>right</code> from <code>left</code>.\n  overload: System.Numerics.Complex.op_Subtraction*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Complex.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Numerics.Complex.op_UnaryNegation(System.Numerics.Complex)\n  commentId: M:System.Numerics.Complex.op_UnaryNegation(System.Numerics.Complex)\n  id: op_UnaryNegation(System.Numerics.Complex)\n  parent: System.Numerics.Complex\n  langs:\n  - csharp\n  name: op_UnaryNegation(Complex)\n  nameWithType: Complex.op_UnaryNegation(Complex)\n  fullName: Complex.op_UnaryNegation(Complex)\n  type: Operator\n  assemblies:\n  - System.Runtime.Numerics\n  - System.Numerics\n  - netstandard\n  namespace: System.Numerics\n  summary: Returns the additive inverse of a specified complex number.\n  remarks: \"The <xref:System.Numerics.Complex.op_UnaryNegation%2A> method defines the operation of the unary negation (additive inverse) operator for complex numbers. It enables code such as the following:  \\n  \\n [!code-csharp[System.Numerics.Complex.Negate#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.numerics.complex.negate/cs/negate2.cs#2)]\\n [!code-vb[System.Numerics.Complex.Negate#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.numerics.complex.negate/vb/negate2.vb#2)]  \\n  \\n The resulting complex number produces a value of <xref:System.Numerics.Complex> 0 (zero) when it is added to the original complex number. Languages that do not support custom operators can call the <xref:System.Numerics.Complex.Negate%2A> method instead.  \\n  \\n The equivalent method for this operator is <xref:System.Numerics.Complex.Negate%28System.Numerics.Complex%29?displayProperty=fullName>\"\n  syntax:\n    content: public static System.Numerics.Complex op_UnaryNegation (System.Numerics.Complex value);\n    parameters:\n    - id: value\n      type: System.Numerics.Complex\n      description: The value to negate.\n    return:\n      type: System.Numerics.Complex\n      description: The result of the <xref href=\"System.Numerics.Complex.Real\"></xref> and <xref href=\"System.Numerics.Complex.Imaginary\"></xref> components of the <code>value</code> parameter multiplied by -1.\n  overload: System.Numerics.Complex.op_UnaryNegation*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Complex.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Numerics.Complex.Phase\n  commentId: P:System.Numerics.Complex.Phase\n  id: Phase\n  parent: System.Numerics.Complex\n  langs:\n  - csharp\n  name: Phase\n  nameWithType: Complex.Phase\n  fullName: Complex.Phase\n  type: Property\n  assemblies:\n  - System.Runtime.Numerics\n  - System.Numerics\n  - netstandard\n  namespace: System.Numerics\n  summary: Gets the phase of a complex number.\n  remarks: \"For a complex number a + bi, the phase is computed as <xref:System.Math.Atan2%2A?displayProperty=fullName>(b, a).  \\n  \\n You can identify a complex number by its Cartesian coordinates on the complex plane or by its polar coordinates. The phase (argument) of a complex number is the angle to the real axis of a line drawn from the point of origin (the intersection of the x-axis and the y-axis) to the point represented by the complex number. The magnitude (represented by the <xref:System.Numerics.Complex.Magnitude%2A> property) is the distance from the point of origin to the point that is represented by the complex number.  \\n  \\n You can instantiate a complex number based on its polar coordinates instead of its Cartesian coordinates by calling the <xref:System.Numerics.Complex.FromPolarCoordinates%2A> method.  \\n  \\n To convert the phase from radians to degrees, multiply it by 180/<xref:System.Math.PI?displayProperty=fullName>.\"\n  example:\n  - \"The following example uses the <xref:System.Numerics.Complex.FromPolarCoordinates%2A> method to instantiate a complex number based on its polar coordinates, and then displays the value of its <xref:System.Numerics.Complex.Magnitude%2A> and <xref:System.Numerics.Complex.Phase%2A> properties.  \\n  \\n [!code-csharp[System.Numerics.Complex.Phase#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.numerics.complex.phase/cs/phase1.cs#1)]\\n [!code-vb[System.Numerics.Complex.Phase#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.numerics.complex.phase/vb/phase1.vb#1)]\"\n  syntax:\n    content: public double Phase { get; }\n    return:\n      type: System.Double\n      description: The phase of a complex number, in radians.\n  overload: System.Numerics.Complex.Phase*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Complex.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Numerics.Complex.Pow(System.Numerics.Complex,System.Double)\n  commentId: M:System.Numerics.Complex.Pow(System.Numerics.Complex,System.Double)\n  id: Pow(System.Numerics.Complex,System.Double)\n  parent: System.Numerics.Complex\n  langs:\n  - csharp\n  name: Pow(Complex, Double)\n  nameWithType: Complex.Pow(Complex, Double)\n  fullName: Complex.Pow(Complex, Double)\n  type: Method\n  assemblies:\n  - System.Runtime.Numerics\n  - System.Numerics\n  - netstandard\n  namespace: System.Numerics\n  summary: Returns a specified complex number raised to a power specified by a double-precision floating-point number.\n  remarks: \"If `value` is <xref:System.Numerics.Complex?displayProperty=fullName>, the method returns <xref:System.Numerics.Complex?displayProperty=fullName>. For other values, if `power` is 0, the method returns <xref:System.Numerics.Complex?displayProperty=fullName>, and if `power` is 1, it returns `value`.  \\n  \\n This method corresponds to the <xref:System.Math.Pow%2A?displayProperty=fullName> method for primitive numeric types.\"\n  example:\n  - \"The following example illustrates exponentiation using a complex number and an exponent whose value ranges from -1 to 10.  \\n  \\n [!code-csharp[System.Numerics.Complex.Pow#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.numerics.complex.pow/cs/pow1.cs#1)]\\n [!code-vb[System.Numerics.Complex.Pow#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.numerics.complex.pow/vb/pow1.vb#1)]\"\n  syntax:\n    content: public static System.Numerics.Complex Pow (System.Numerics.Complex value, double power);\n    parameters:\n    - id: value\n      type: System.Numerics.Complex\n      description: A complex number to be raised to a power.\n    - id: power\n      type: System.Double\n      description: A double-precision floating-point number that specifies a power.\n    return:\n      type: System.Numerics.Complex\n      description: The complex number <code>value</code> raised to the power <code>power</code>.\n  overload: System.Numerics.Complex.Pow*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Complex.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Numerics.Complex.Pow(System.Numerics.Complex,System.Numerics.Complex)\n  commentId: M:System.Numerics.Complex.Pow(System.Numerics.Complex,System.Numerics.Complex)\n  id: Pow(System.Numerics.Complex,System.Numerics.Complex)\n  parent: System.Numerics.Complex\n  langs:\n  - csharp\n  name: Pow(Complex, Complex)\n  nameWithType: Complex.Pow(Complex, Complex)\n  fullName: Complex.Pow(Complex, Complex)\n  type: Method\n  assemblies:\n  - System.Runtime.Numerics\n  - System.Numerics\n  - netstandard\n  namespace: System.Numerics\n  summary: Returns a specified complex number raised to a power specified by a complex number.\n  syntax:\n    content: public static System.Numerics.Complex Pow (System.Numerics.Complex value, System.Numerics.Complex power);\n    parameters:\n    - id: value\n      type: System.Numerics.Complex\n      description: A complex number to be raised to a power.\n    - id: power\n      type: System.Numerics.Complex\n      description: A complex number that specifies a power.\n    return:\n      type: System.Numerics.Complex\n      description: The complex number <code>value</code> raised to the power <code>power</code>.\n  overload: System.Numerics.Complex.Pow*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Complex.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Numerics.Complex.Real\n  commentId: P:System.Numerics.Complex.Real\n  id: Real\n  parent: System.Numerics.Complex\n  langs:\n  - csharp\n  name: Real\n  nameWithType: Complex.Real\n  fullName: Complex.Real\n  type: Property\n  assemblies:\n  - System.Runtime.Numerics\n  - System.Numerics\n  - netstandard\n  namespace: System.Numerics\n  summary: Gets the real component of the current <xref href=\"System.Numerics.Complex\"></xref> object.\n  remarks: Given a complex number a + bi, the <xref:System.Numerics.Complex.Real%2A> property returns the value of a.\n  example:\n  - \"The following example instantiates an array of <xref:System.Numerics.Complex> objects and displays the real and imaginary components of each in the form a + bi.  \\n  \\n [!code-csharp[System.Numerics.Complex.Real#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.numerics.complex.real/cs/real1.cs#1)]\\n [!code-vb[System.Numerics.Complex.Real#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.numerics.complex.real/vb/real1.vb#1)]\"\n  syntax:\n    content: public double Real { get; }\n    return:\n      type: System.Double\n      description: The real component of a complex number.\n  overload: System.Numerics.Complex.Real*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Complex.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Numerics.Complex.Reciprocal(System.Numerics.Complex)\n  commentId: M:System.Numerics.Complex.Reciprocal(System.Numerics.Complex)\n  id: Reciprocal(System.Numerics.Complex)\n  parent: System.Numerics.Complex\n  langs:\n  - csharp\n  name: Reciprocal(Complex)\n  nameWithType: Complex.Reciprocal(Complex)\n  fullName: Complex.Reciprocal(Complex)\n  type: Method\n  assemblies:\n  - System.Runtime.Numerics\n  - System.Numerics\n  - netstandard\n  namespace: System.Numerics\n  summary: Returns the multiplicative inverse of a complex number.\n  remarks: \"The reciprocal, or multiplicative inverse, of a number *x* is a number *y* where *x* multiplied by *y* yields 1. The reciprocal of a complex number is the complex number that produces <xref:System.Numerics.Complex?displayProperty=fullName> when the two numbers are multiplied. If a complex number is represented by a +bi, its reciprocal is represented by the expression a/(a<sup>2</sup>+b<sup>2</sup>) + -b/(a<sup>2</sup> + b<sup>2</sup>).  \\n  \\n If value is <xref:System.Numerics.Complex?displayProperty=fullName>, the method returns <xref:System.Numerics.Complex?displayProperty=fullName>. Otherwise, it returns the result of the expression <xref:System.Numerics.Complex?displayProperty=fullName>/`value`.\"\n  example:\n  - \"The following example uses the <xref:System.Numerics.Complex.Reciprocal%2A> method to calculate the reciprocal values of several complex numbers. It also demonstrates that the result of multiplying a complex number by its reciprocal is <xref:System.Numerics.Complex?displayProperty=fullName>.  \\n  \\n [!code-csharp[System.Numerics.Complex.Reciprocal#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.numerics.complex.reciprocal/cs/reciprocal1.cs#1)]\\n [!code-vb[System.Numerics.Complex.Reciprocal#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.numerics.complex.reciprocal/vb/reciprocal1.vb#1)]\"\n  syntax:\n    content: public static System.Numerics.Complex Reciprocal (System.Numerics.Complex value);\n    parameters:\n    - id: value\n      type: System.Numerics.Complex\n      description: A complex number.\n    return:\n      type: System.Numerics.Complex\n      description: The reciprocal of <code>value</code>.\n  overload: System.Numerics.Complex.Reciprocal*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Complex.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Numerics.Complex.Sin(System.Numerics.Complex)\n  commentId: M:System.Numerics.Complex.Sin(System.Numerics.Complex)\n  id: Sin(System.Numerics.Complex)\n  parent: System.Numerics.Complex\n  langs:\n  - csharp\n  name: Sin(Complex)\n  nameWithType: Complex.Sin(Complex)\n  fullName: Complex.Sin(Complex)\n  type: Method\n  assemblies:\n  - System.Runtime.Numerics\n  - System.Numerics\n  - netstandard\n  namespace: System.Numerics\n  summary: Returns the sine of the specified complex number.\n  remarks: \"The <xref:System.Numerics.Complex.Sin%2A> method for complex numbers corresponds to the <xref:System.Math.Sin%2A?displayProperty=fullName> method for real numbers.  \\n  \\n The <xref:System.Numerics.Complex.Sin%2A> method uses the following formula to calculate the sine of the complex number a + bi:  \\n  \\n (<xref:System.Math.Sin%2A>(a) * <xref:System.Math.Cosh%2A>(b), <xref:System.Math.Cos%2A>(a) * <xref:System.Math.Sinh%2A>(b))\"\n  example:\n  - \"The following example illustrates the <xref:System.Numerics.Complex.Sin%2A> method. It shows that passing the value returned by the <xref:System.Numerics.Complex.Asin%2A> method to the <xref:System.Numerics.Complex.Sin%2A> method returns the original <xref:System.Numerics.Complex> value.  \\n  \\n [!code-csharp[System.Numerics.Complex.Asin#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.numerics.complex.asin/cs/asin1.cs#1)]\\n [!code-vb[System.Numerics.Complex.Asin#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.numerics.complex.asin/vb/asin1.vb#1)]\"\n  syntax:\n    content: public static System.Numerics.Complex Sin (System.Numerics.Complex value);\n    parameters:\n    - id: value\n      type: System.Numerics.Complex\n      description: A complex number.\n    return:\n      type: System.Numerics.Complex\n      description: The sine of <code>value</code>.\n  overload: System.Numerics.Complex.Sin*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Complex.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Numerics.Complex.Sinh(System.Numerics.Complex)\n  commentId: M:System.Numerics.Complex.Sinh(System.Numerics.Complex)\n  id: Sinh(System.Numerics.Complex)\n  parent: System.Numerics.Complex\n  langs:\n  - csharp\n  name: Sinh(Complex)\n  nameWithType: Complex.Sinh(Complex)\n  fullName: Complex.Sinh(Complex)\n  type: Method\n  assemblies:\n  - System.Runtime.Numerics\n  - System.Numerics\n  - netstandard\n  namespace: System.Numerics\n  summary: Returns the hyperbolic sine of the specified complex number.\n  remarks: \"The <xref:System.Numerics.Complex.Sinh%2A> method for complex numbers corresponds to the <xref:System.Math.Sinh%2A?displayProperty=fullName> method for real numbers.  \\n  \\n The <xref:System.Numerics.Complex.Sinh%2A> method uses the following formula to calculate the hyperbolic sine of the complex number a + bi:  \\n  \\n (<xref:System.Math.Sinh%2A>(a) * <xref:System.Math.Cos%2A>(b), <xref:System.Math.Cosh%2A>(a) * <xref:System.Math.Sin%2A>(b))\"\n  syntax:\n    content: public static System.Numerics.Complex Sinh (System.Numerics.Complex value);\n    parameters:\n    - id: value\n      type: System.Numerics.Complex\n      description: A complex number.\n    return:\n      type: System.Numerics.Complex\n      description: The hyperbolic sine of <code>value</code>.\n  overload: System.Numerics.Complex.Sinh*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Complex.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Numerics.Complex.Sqrt(System.Numerics.Complex)\n  commentId: M:System.Numerics.Complex.Sqrt(System.Numerics.Complex)\n  id: Sqrt(System.Numerics.Complex)\n  parent: System.Numerics.Complex\n  langs:\n  - csharp\n  name: Sqrt(Complex)\n  nameWithType: Complex.Sqrt(Complex)\n  fullName: Complex.Sqrt(Complex)\n  type: Method\n  assemblies:\n  - System.Runtime.Numerics\n  - System.Numerics\n  - netstandard\n  namespace: System.Numerics\n  summary: Returns the square root of a specified complex number.\n  remarks: \"The square root of the complex number `value` is calculated by using the following formula:  \\n  \\n <xref:System.Numerics.Complex.FromPolarCoordinates%2A?displayProperty=fullName>(<xref:System.Math.Sqrt%2A?displayProperty=fullName>(`value`.<xref:System.Numerics.Complex.Magnitude%2A>), `value`.<xref:System.Numerics.Complex.Phase%2A>/2.0)   \\n  \\n The <xref:System.Numerics.Complex.Sqrt%2A> method for complex numbers corresponds to the <xref:System.Math.Sqrt%2A?displayProperty=fullName> method for real numbers.\"\n  syntax:\n    content: public static System.Numerics.Complex Sqrt (System.Numerics.Complex value);\n    parameters:\n    - id: value\n      type: System.Numerics.Complex\n      description: A complex number.\n    return:\n      type: System.Numerics.Complex\n      description: The square root of <code>value</code>.\n  overload: System.Numerics.Complex.Sqrt*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Complex.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Numerics.Complex.Subtract(System.Numerics.Complex,System.Numerics.Complex)\n  commentId: M:System.Numerics.Complex.Subtract(System.Numerics.Complex,System.Numerics.Complex)\n  id: Subtract(System.Numerics.Complex,System.Numerics.Complex)\n  parent: System.Numerics.Complex\n  langs:\n  - csharp\n  name: Subtract(Complex, Complex)\n  nameWithType: Complex.Subtract(Complex, Complex)\n  fullName: Complex.Subtract(Complex, Complex)\n  type: Method\n  assemblies:\n  - System.Runtime.Numerics\n  - System.Numerics\n  - netstandard\n  namespace: System.Numerics\n  summary: Subtracts one complex number from another and returns the result.\n  remarks: \"The subtraction of a complex number, c + di, from another complex number, a + bi, takes the following form:  \\n  \\n (a - c) + (b - d)i  \\n  \\n If the method call results in an overflow in either the real or imaginary component, the value of that component is either <xref:System.Double.PositiveInfinity?displayProperty=fullName> or <xref:System.Double.NegativeInfinity?displayProperty=fullName>.  \\n  \\n Languages that do not support custom operators can use the <xref:System.Numerics.Complex.Subtract%2A> method to perform subtraction using complex numbers.\"\n  example:\n  - \"The following example subtracts each complex number in an array from a complex number.  \\n  \\n [!code-csharp[System.Numerics.Complex.Subtract#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.numerics.complex.subtract/cs/subtract1.cs#1)]\\n [!code-vb[System.Numerics.Complex.Subtract#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.numerics.complex.subtract/vb/subtract1.vb#1)]\"\n  syntax:\n    content: public static System.Numerics.Complex Subtract (System.Numerics.Complex left, System.Numerics.Complex right);\n    parameters:\n    - id: left\n      type: System.Numerics.Complex\n      description: The value to subtract from (the minuend).\n    - id: right\n      type: System.Numerics.Complex\n      description: The value to subtract (the subtrahend).\n    return:\n      type: System.Numerics.Complex\n      description: The result of subtracting <code>right</code> from <code>left</code>.\n  overload: System.Numerics.Complex.Subtract*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Complex.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Numerics.Complex.Tan(System.Numerics.Complex)\n  commentId: M:System.Numerics.Complex.Tan(System.Numerics.Complex)\n  id: Tan(System.Numerics.Complex)\n  parent: System.Numerics.Complex\n  langs:\n  - csharp\n  name: Tan(Complex)\n  nameWithType: Complex.Tan(Complex)\n  fullName: Complex.Tan(Complex)\n  type: Method\n  assemblies:\n  - System.Runtime.Numerics\n  - System.Numerics\n  - netstandard\n  namespace: System.Numerics\n  summary: Returns the tangent of the specified complex number.\n  remarks: \"The <xref:System.Numerics.Complex.Tan%2A> method for complex numbers corresponds to the <xref:System.Math.Tan%2A?displayProperty=fullName> method for real numbers.  \\n  \\n The <xref:System.Numerics.Complex.Tan%2A> method uses the following formula to calculate the tangent of the complex number `value`:  \\n  \\n <xref:System.Numerics.Complex.Sin%2A>(`value`) / <xref:System.Numerics.Complex.Cos%2A>(`value`)\"\n  example:\n  - \"The following example illustrates the <xref:System.Numerics.Complex.Tan%2A> method. It shows that passing the value returned by the <xref:System.Numerics.Complex.Atan%2A> method to the <xref:System.Numerics.Complex.Tan%2A> method returns the original <xref:System.Numerics.Complex> value.  \\n  \\n [!code-csharp[System.Numerics.Complex.Atan#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.numerics.complex.atan/cs/atan1.cs#1)]\\n [!code-vb[System.Numerics.Complex.Atan#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.numerics.complex.atan/vb/atan1.vb#1)]\"\n  syntax:\n    content: public static System.Numerics.Complex Tan (System.Numerics.Complex value);\n    parameters:\n    - id: value\n      type: System.Numerics.Complex\n      description: A complex number.\n    return:\n      type: System.Numerics.Complex\n      description: The tangent of <code>value</code>.\n  overload: System.Numerics.Complex.Tan*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Complex.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Numerics.Complex.Tanh(System.Numerics.Complex)\n  commentId: M:System.Numerics.Complex.Tanh(System.Numerics.Complex)\n  id: Tanh(System.Numerics.Complex)\n  parent: System.Numerics.Complex\n  langs:\n  - csharp\n  name: Tanh(Complex)\n  nameWithType: Complex.Tanh(Complex)\n  fullName: Complex.Tanh(Complex)\n  type: Method\n  assemblies:\n  - System.Runtime.Numerics\n  - System.Numerics\n  - netstandard\n  namespace: System.Numerics\n  summary: Returns the hyperbolic tangent of the specified complex number.\n  remarks: \"The <xref:System.Numerics.Complex.Tanh%2A> method for complex numbers corresponds to the <xref:System.Math.Tanh%2A?displayProperty=fullName> method for real numbers.  \\n  \\n The <xref:System.Numerics.Complex.Tanh%2A> method uses the following formula to calculate the hyperbolic tangent of the complex number `value`:  \\n  \\n <xref:System.Numerics.Complex.Sinh%2A>(`value`) / <xref:System.Numerics.Complex.Cosh%2A>(`value`)\"\n  syntax:\n    content: public static System.Numerics.Complex Tanh (System.Numerics.Complex value);\n    parameters:\n    - id: value\n      type: System.Numerics.Complex\n      description: A complex number.\n    return:\n      type: System.Numerics.Complex\n      description: The hyperbolic tangent of <code>value</code>.\n  overload: System.Numerics.Complex.Tanh*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Complex.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Numerics.Complex.ToString\n  commentId: M:System.Numerics.Complex.ToString\n  id: ToString\n  parent: System.Numerics.Complex\n  langs:\n  - csharp\n  name: ToString()\n  nameWithType: Complex.ToString()\n  fullName: Complex.ToString()\n  type: Method\n  assemblies:\n  - System.Runtime.Numerics\n  - System.Numerics\n  - netstandard\n  namespace: System.Numerics\n  summary: Converts the value of the current complex number to its equivalent string representation in Cartesian form.\n  remarks: The default string representation of a complex number displays the number using its Cartesian coordinates in the form `(`*a*`,` *b*`)`, where *a* is the real part of the complex number, and *b* is its imaginary part. Both *a* and *b* are formatted using the general format specifier (\"G\") and the conventions of the current system culture.\n  example:\n  - \"The following example displays the string representation of several complex numbers. The output uses the formatting conventions of the English - United States (\\\"en-US\\\") culture, which, in this case, is the current system culture.  \\n  \\n [!code-csharp[System.Numerics.Complex.ToString#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.numerics.complex.tostring/cs/tostring1.cs#1)]\\n [!code-vb[System.Numerics.Complex.ToString#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.numerics.complex.tostring/vb/tostring1.vb#1)]\"\n  syntax:\n    content: public override string ToString ();\n    parameters: []\n    return:\n      type: System.String\n      description: The string representation of the current instance in Cartesian form.\n  overload: System.Numerics.Complex.ToString*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Complex.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Numerics.Complex.ToString(System.IFormatProvider)\n  commentId: M:System.Numerics.Complex.ToString(System.IFormatProvider)\n  id: ToString(System.IFormatProvider)\n  parent: System.Numerics.Complex\n  langs:\n  - csharp\n  name: ToString(IFormatProvider)\n  nameWithType: Complex.ToString(IFormatProvider)\n  fullName: Complex.ToString(IFormatProvider)\n  type: Method\n  assemblies:\n  - System.Runtime.Numerics\n  - System.Numerics\n  - netstandard\n  namespace: System.Numerics\n  summary: Converts the value of the current complex number to its equivalent string representation in Cartesian form by using the specified culture-specific formatting information.\n  remarks: \"The string representation of the complex number returned by this method displays the number using its Cartesian coordinates in the form `(`*a*`,` *b*`)`, where *a* is the real part of the complex number, and *b* is its imaginary part. Both *a* and *b* are formatted using the general format specifier (\\\"G\\\") and the conventions of the culture defined by `provider`.  \\n  \\n The `provider` parameter is an <xref:System.IFormatProvider> implementation. Its <xref:System.IFormatProvider.GetFormat%2A> method returns a <xref:System.Globalization.NumberFormatInfo> object that provides culture-specific information about the format of the real and imaginary numbers in the returned string. If `provider` is `null`, the returned string is formatted using the <xref:System.Globalization.NumberFormatInfo> object of the current culture.  \\n  \\n The `provider` parameter can be one of the following:  \\n  \\n-   A <xref:System.Globalization.CultureInfo> object that represents the culture that supplies formatting information  \\n  \\n-   The <xref:System.Globalization.NumberFormatInfo> object that supplies formatting information.  \\n  \\n-   A custom object that implements the <xref:System.IFormatProvider> interface. Its <xref:System.IFormatProvider.GetFormat%2A> method returns the <xref:System.Globalization.NumberFormatInfo> object that supplies formatting information.\"\n  example:\n  - \"The following example displays the string representation of several complex numbers. The result uses the formatting conventions of the English - United States (\\\"en-US\\\") and French - France (\\\"fr-FR\\\") cultures.  \\n  \\n [!code-csharp[System.Numerics.Complex.ToString#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.numerics.complex.tostring/cs/tostring2.cs#2)]\\n [!code-vb[System.Numerics.Complex.ToString#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.numerics.complex.tostring/vb/tostring2.vb#2)]\"\n  syntax:\n    content: public string ToString (IFormatProvider provider);\n    parameters:\n    - id: provider\n      type: System.IFormatProvider\n      description: An object that supplies culture-specific formatting information.\n    return:\n      type: System.String\n      description: The string representation of the current instance in Cartesian form, as specified by <code>provider</code>.\n  overload: System.Numerics.Complex.ToString*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Complex.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Numerics.Complex.ToString(System.String)\n  commentId: M:System.Numerics.Complex.ToString(System.String)\n  id: ToString(System.String)\n  parent: System.Numerics.Complex\n  langs:\n  - csharp\n  name: ToString(String)\n  nameWithType: Complex.ToString(String)\n  fullName: Complex.ToString(String)\n  type: Method\n  assemblies:\n  - System.Runtime.Numerics\n  - System.Numerics\n  - netstandard\n  namespace: System.Numerics\n  summary: Converts the value of the current complex number to its equivalent string representation in Cartesian form by using the specified format for its real and imaginary parts.\n  remarks: \"The string representation of the complex number returned by this method displays the number using its Cartesian coordinates in the form `(`*a*`,` *b*`)`, where *a* is the real part of the complex number, and *b* is its imaginary part. Both *a* and *b* are formatted using the format string specified by `format`. The `format` parameter can be any valid standard numeric format specifier, or any combination of custom numeric format specifiers. If `format` is equal to <xref:System.String?displayProperty=fullName> or is `null`, the real and imaginary parts of the complex number are formatted with the general format specifier (\\\"G\\\"). If `format` is any other value, the method throws a <xref:System.FormatException>.  \\n  \\n The .NET Framework provides extensive formatting support, which is described in greater detail in the following topics:  \\n  \\n-   For more information about numeric format strings, see [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) and [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md).  \\n  \\n-   For more information about formatting in the .NET Framework, see [Formatting Types](~/docs/standard/base-types/formatting-types.md).  \\n  \\n The format of the returned string is determined by the <xref:System.Globalization.NumberFormatInfo> object for the current culture. Depending on the `format` parameter, this object controls symbols such as the negative sign, the group separator, and the decimal point symbol in the output string. To provide formatting information for cultures other than the current culture, call the <xref:System.Numerics.Complex.ToString%28System.String%2CSystem.IFormatProvider%29> overload.\"\n  example:\n  - \"The following example initializes a complex number and displays it using several standard format strings.  \\n  \\n [!code-csharp[System.Numerics.Complex.ToString#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.numerics.complex.tostring/cs/tostring3.cs#3)]\\n [!code-vb[System.Numerics.Complex.ToString#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.numerics.complex.tostring/vb/tostring3.vb#3)]\"\n  syntax:\n    content: public string ToString (string format);\n    parameters:\n    - id: format\n      type: System.String\n      description: A standard or custom numeric format string.\n    return:\n      type: System.String\n      description: The string representation of the current instance in Cartesian form.\n  overload: System.Numerics.Complex.ToString*\n  exceptions:\n  - type: System.FormatException\n    commentId: T:System.FormatException\n    description: <code>format</code> is not a valid format string.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Complex.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Numerics.Complex.ToString(System.String,System.IFormatProvider)\n  commentId: M:System.Numerics.Complex.ToString(System.String,System.IFormatProvider)\n  id: ToString(System.String,System.IFormatProvider)\n  parent: System.Numerics.Complex\n  langs:\n  - csharp\n  name: ToString(String, IFormatProvider)\n  nameWithType: Complex.ToString(String, IFormatProvider)\n  fullName: Complex.ToString(String, IFormatProvider)\n  type: Method\n  assemblies:\n  - System.Runtime.Numerics\n  - System.Numerics\n  - netstandard\n  namespace: System.Numerics\n  summary: Converts the value of the current complex number to its equivalent string representation in Cartesian form by using the specified format and culture-specific format information for its real and imaginary parts.\n  remarks: \"The string representation of the complex number returned by this method displays the number using its Cartesian coordinates in the form `(`*a*`,` *b*`)`, where *a* is the real part of the complex number, and *b* is its imaginary part. Both *a* and *b* are formatted using the format string specified by `format`. The `format` parameter can be any valid standard numeric format specifier, or any combination of custom numeric format specifiers. If `format` is equal to <xref:System.String?displayProperty=fullName> or is `null`, the real and imaginary parts of the complex number are formatted with the general format specifier (\\\"G\\\"). If `format` is any other value, the method throws a <xref:System.FormatException>.  \\n  \\n The .NET Framework provides extensive formatting support, which is described in greater detail in the following topics:  \\n  \\n-   For more information about numeric format strings, see [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) and [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md).  \\n  \\n-   For more information about formatting in the .NET Framework, see [Formatting Types](~/docs/standard/base-types/formatting-types.md).  \\n  \\n The `provider` parameter is an <xref:System.IFormatProvider> implementation. Its <xref:System.IFormatProvider.GetFormat%2A> method returns a <xref:System.Globalization.NumberFormatInfo> object that provides culture-specific information about the format of the real and imaginary numbers in the returned string. Depending on the `format` parameter, this object controls symbols such as the negative sign, the group separator, and the decimal point symbol in the output string. If `provider` is `null`, the returned string is formatted using the <xref:System.Globalization.NumberFormatInfo> object of the current culture.  \\n  \\n The `provider` parameter can be one of the following:  \\n  \\n-   A <xref:System.Globalization.CultureInfo> object that represents the culture that supplies formatting information  \\n  \\n-   The <xref:System.Globalization.NumberFormatInfo> object that supplies formatting information.  \\n  \\n-   A custom object that implements the <xref:System.IFormatProvider> interface. Its <xref:System.IFormatProvider.GetFormat%2A> method returns the <xref:System.Globalization.NumberFormatInfo> object that supplies formatting information.\"\n  example:\n  - \"The following example creates an array of complex numbers, and displays each using several standard format strings as well as <xref:System.Globalization.CultureInfo> objects that represent the English - United States (\\\"en-US\\\") and French - France (\\\"fr-FR\\\") cultures.  \\n  \\n [!code-csharp[System.Numerics.Complex.ToString#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.numerics.complex.tostring/cs/tostring4.cs#4)]\\n [!code-vb[System.Numerics.Complex.ToString#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.numerics.complex.tostring/vb/tostring4.vb#4)]\"\n  syntax:\n    content: public string ToString (string format, IFormatProvider provider);\n    parameters:\n    - id: format\n      type: System.String\n      description: A standard or custom numeric format string.\n    - id: provider\n      type: System.IFormatProvider\n      description: An object that supplies culture-specific formatting information.\n    return:\n      type: System.String\n      description: The string representation of the current instance in Cartesian form, as specified by <code>format</code> and <code>provider</code>.\n  overload: System.Numerics.Complex.ToString*\n  exceptions:\n  - type: System.FormatException\n    commentId: T:System.FormatException\n    description: <code>format</code> is not a valid format string.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Complex.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Numerics.Complex.Zero\n  commentId: F:System.Numerics.Complex.Zero\n  id: Zero\n  parent: System.Numerics.Complex\n  langs:\n  - csharp\n  name: Zero\n  nameWithType: Complex.Zero\n  fullName: Complex.Zero\n  type: Field\n  assemblies:\n  - System.Runtime.Numerics\n  - System.Numerics\n  - netstandard\n  namespace: System.Numerics\n  summary: Returns a new <xref href=\"System.Numerics.Complex\"></xref> instance with a real number equal to zero and an imaginary number equal to zero.\n  remarks: The <xref:System.Numerics.Complex.Zero> property is most frequently used to compare a <xref:System.Numerics.Complex> value to zero.\n  example:\n  - \"The following example instantiates a <xref:System.Numerics.Complex> value by using the <xref:System.Numerics.Complex.Zero> property. It then compares this value to another value that is instantiated by calling the <xref:System.Numerics.Complex> constructor with a real part equal to zero and an imaginary part equal to zero. As the output from the example shows, the two values are equal.  \\n  \\n [!code-csharp[System.Numerics.Complex.Zero#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.numerics.complex.zero/cs/zero1.cs#1)]\\n [!code-vb[System.Numerics.Complex.Zero#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.numerics.complex.zero/vb/zero1.vb#1)]\"\n  syntax:\n    content: public static readonly System.Numerics.Complex Zero;\n    return:\n      type: System.Numerics.Complex\n      description: ''\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Complex.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\nreferences:\n- uid: System.ValueType\n  parent: System\n  isExternal: false\n  name: ValueType\n  nameWithType: ValueType\n  fullName: System.ValueType\n- uid: System.FormatException\n  parent: System\n  isExternal: false\n  name: FormatException\n  nameWithType: FormatException\n  fullName: System.FormatException\n- uid: System.Numerics.Complex.#ctor(System.Double,System.Double)\n  parent: System.Numerics.Complex\n  isExternal: false\n  name: Complex(Double, Double)\n  nameWithType: Complex.Complex(Double, Double)\n  fullName: Complex.Complex(Double, Double)\n- uid: System.Double\n  parent: System\n  isExternal: false\n  name: Double\n  nameWithType: Double\n  fullName: System.Double\n- uid: System.Numerics.Complex.Abs(System.Numerics.Complex)\n  parent: System.Numerics.Complex\n  isExternal: false\n  name: Abs(Complex)\n  nameWithType: Complex.Abs(Complex)\n  fullName: Complex.Abs(Complex)\n- uid: System.Numerics.Complex\n  parent: System.Numerics\n  isExternal: false\n  name: Complex\n  nameWithType: Complex\n  fullName: System.Numerics.Complex\n- uid: System.Numerics.Complex.Acos(System.Numerics.Complex)\n  parent: System.Numerics.Complex\n  isExternal: false\n  name: Acos(Complex)\n  nameWithType: Complex.Acos(Complex)\n  fullName: Complex.Acos(Complex)\n- uid: System.Numerics.Complex.Add(System.Numerics.Complex,System.Numerics.Complex)\n  parent: System.Numerics.Complex\n  isExternal: false\n  name: Add(Complex, Complex)\n  nameWithType: Complex.Add(Complex, Complex)\n  fullName: Complex.Add(Complex, Complex)\n- uid: System.Numerics.Complex.Asin(System.Numerics.Complex)\n  parent: System.Numerics.Complex\n  isExternal: false\n  name: Asin(Complex)\n  nameWithType: Complex.Asin(Complex)\n  fullName: Complex.Asin(Complex)\n- uid: System.Numerics.Complex.Atan(System.Numerics.Complex)\n  parent: System.Numerics.Complex\n  isExternal: false\n  name: Atan(Complex)\n  nameWithType: Complex.Atan(Complex)\n  fullName: Complex.Atan(Complex)\n- uid: System.Numerics.Complex.Conjugate(System.Numerics.Complex)\n  parent: System.Numerics.Complex\n  isExternal: false\n  name: Conjugate(Complex)\n  nameWithType: Complex.Conjugate(Complex)\n  fullName: Complex.Conjugate(Complex)\n- uid: System.Numerics.Complex.Cos(System.Numerics.Complex)\n  parent: System.Numerics.Complex\n  isExternal: false\n  name: Cos(Complex)\n  nameWithType: Complex.Cos(Complex)\n  fullName: Complex.Cos(Complex)\n- uid: System.Numerics.Complex.Cosh(System.Numerics.Complex)\n  parent: System.Numerics.Complex\n  isExternal: false\n  name: Cosh(Complex)\n  nameWithType: Complex.Cosh(Complex)\n  fullName: Complex.Cosh(Complex)\n- uid: System.Numerics.Complex.Divide(System.Numerics.Complex,System.Numerics.Complex)\n  parent: System.Numerics.Complex\n  isExternal: false\n  name: Divide(Complex, Complex)\n  nameWithType: Complex.Divide(Complex, Complex)\n  fullName: Complex.Divide(Complex, Complex)\n- uid: System.Numerics.Complex.Equals(System.Numerics.Complex)\n  parent: System.Numerics.Complex\n  isExternal: false\n  name: Equals(Complex)\n  nameWithType: Complex.Equals(Complex)\n  fullName: Complex.Equals(Complex)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Numerics.Complex.Equals(System.Object)\n  parent: System.Numerics.Complex\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Complex.Equals(Object)\n  fullName: Complex.Equals(Object)\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Numerics.Complex.Exp(System.Numerics.Complex)\n  parent: System.Numerics.Complex\n  isExternal: false\n  name: Exp(Complex)\n  nameWithType: Complex.Exp(Complex)\n  fullName: Complex.Exp(Complex)\n- uid: System.Numerics.Complex.FromPolarCoordinates(System.Double,System.Double)\n  parent: System.Numerics.Complex\n  isExternal: false\n  name: FromPolarCoordinates(Double, Double)\n  nameWithType: Complex.FromPolarCoordinates(Double, Double)\n  fullName: Complex.FromPolarCoordinates(Double, Double)\n- uid: System.Numerics.Complex.GetHashCode\n  parent: System.Numerics.Complex\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Complex.GetHashCode()\n  fullName: Complex.GetHashCode()\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Numerics.Complex.Imaginary\n  parent: System.Numerics.Complex\n  isExternal: false\n  name: Imaginary\n  nameWithType: Complex.Imaginary\n  fullName: Complex.Imaginary\n- uid: System.Numerics.Complex.ImaginaryOne\n  parent: System.Numerics.Complex\n  isExternal: false\n  name: ImaginaryOne\n  nameWithType: Complex.ImaginaryOne\n  fullName: Complex.ImaginaryOne\n- uid: System.Numerics.Complex.Log(System.Numerics.Complex)\n  parent: System.Numerics.Complex\n  isExternal: false\n  name: Log(Complex)\n  nameWithType: Complex.Log(Complex)\n  fullName: Complex.Log(Complex)\n- uid: System.Numerics.Complex.Log(System.Numerics.Complex,System.Double)\n  parent: System.Numerics.Complex\n  isExternal: false\n  name: Log(Complex, Double)\n  nameWithType: Complex.Log(Complex, Double)\n  fullName: Complex.Log(Complex, Double)\n- uid: System.Numerics.Complex.Log10(System.Numerics.Complex)\n  parent: System.Numerics.Complex\n  isExternal: false\n  name: Log10(Complex)\n  nameWithType: Complex.Log10(Complex)\n  fullName: Complex.Log10(Complex)\n- uid: System.Numerics.Complex.Magnitude\n  parent: System.Numerics.Complex\n  isExternal: false\n  name: Magnitude\n  nameWithType: Complex.Magnitude\n  fullName: Complex.Magnitude\n- uid: System.Numerics.Complex.Multiply(System.Numerics.Complex,System.Numerics.Complex)\n  parent: System.Numerics.Complex\n  isExternal: false\n  name: Multiply(Complex, Complex)\n  nameWithType: Complex.Multiply(Complex, Complex)\n  fullName: Complex.Multiply(Complex, Complex)\n- uid: System.Numerics.Complex.Negate(System.Numerics.Complex)\n  parent: System.Numerics.Complex\n  isExternal: false\n  name: Negate(Complex)\n  nameWithType: Complex.Negate(Complex)\n  fullName: Complex.Negate(Complex)\n- uid: System.Numerics.Complex.One\n  parent: System.Numerics.Complex\n  isExternal: false\n  name: One\n  nameWithType: Complex.One\n  fullName: Complex.One\n- uid: System.Numerics.Complex.op_Addition(System.Numerics.Complex,System.Numerics.Complex)\n  parent: System.Numerics.Complex\n  isExternal: false\n  name: op_Addition(Complex, Complex)\n  nameWithType: Complex.op_Addition(Complex, Complex)\n  fullName: Complex.op_Addition(Complex, Complex)\n- uid: System.Numerics.Complex.op_Division(System.Numerics.Complex,System.Numerics.Complex)\n  parent: System.Numerics.Complex\n  isExternal: false\n  name: op_Division(Complex, Complex)\n  nameWithType: Complex.op_Division(Complex, Complex)\n  fullName: Complex.op_Division(Complex, Complex)\n- uid: System.Numerics.Complex.op_Equality(System.Numerics.Complex,System.Numerics.Complex)\n  parent: System.Numerics.Complex\n  isExternal: false\n  name: op_Equality(Complex, Complex)\n  nameWithType: Complex.op_Equality(Complex, Complex)\n  fullName: Complex.op_Equality(Complex, Complex)\n- uid: System.Numerics.Complex.op_Explicit(System.Decimal to System.Numerics.Complex)\n  parent: System.Numerics.Complex\n  isExternal: false\n  name: op_Explicit(Decimal to Complex)\n  nameWithType: Complex.op_Explicit(Decimal to Complex)\n  fullName: Complex.op_Explicit(Decimal to Complex)\n- uid: System.Decimal\n  parent: System\n  isExternal: false\n  name: Decimal\n  nameWithType: Decimal\n  fullName: System.Decimal\n- uid: System.Numerics.Complex.op_Explicit(System.Numerics.BigInteger to System.Numerics.Complex)\n  parent: System.Numerics.Complex\n  isExternal: false\n  name: op_Explicit(BigInteger to Complex)\n  nameWithType: Complex.op_Explicit(BigInteger to Complex)\n  fullName: Complex.op_Explicit(BigInteger to Complex)\n- uid: System.Numerics.BigInteger\n  parent: System.Numerics\n  isExternal: false\n  name: BigInteger\n  nameWithType: BigInteger\n  fullName: System.Numerics.BigInteger\n- uid: System.Numerics.Complex.op_Implicit(System.UInt64 to System.Numerics.Complex)\n  parent: System.Numerics.Complex\n  isExternal: false\n  name: op_Implicit(UInt64 to Complex)\n  nameWithType: Complex.op_Implicit(UInt64 to Complex)\n  fullName: Complex.op_Implicit(UInt64 to Complex)\n- uid: System.UInt64\n  parent: System\n  isExternal: false\n  name: UInt64\n  nameWithType: UInt64\n  fullName: System.UInt64\n- uid: System.Numerics.Complex.op_Implicit(System.UInt32 to System.Numerics.Complex)\n  parent: System.Numerics.Complex\n  isExternal: false\n  name: op_Implicit(UInt32 to Complex)\n  nameWithType: Complex.op_Implicit(UInt32 to Complex)\n  fullName: Complex.op_Implicit(UInt32 to Complex)\n- uid: System.UInt32\n  parent: System\n  isExternal: false\n  name: UInt32\n  nameWithType: UInt32\n  fullName: System.UInt32\n- uid: System.Numerics.Complex.op_Implicit(System.UInt16 to System.Numerics.Complex)\n  parent: System.Numerics.Complex\n  isExternal: false\n  name: op_Implicit(UInt16 to Complex)\n  nameWithType: Complex.op_Implicit(UInt16 to Complex)\n  fullName: Complex.op_Implicit(UInt16 to Complex)\n- uid: System.UInt16\n  parent: System\n  isExternal: false\n  name: UInt16\n  nameWithType: UInt16\n  fullName: System.UInt16\n- uid: System.Numerics.Complex.op_Implicit(System.Single to System.Numerics.Complex)\n  parent: System.Numerics.Complex\n  isExternal: false\n  name: op_Implicit(Single to Complex)\n  nameWithType: Complex.op_Implicit(Single to Complex)\n  fullName: Complex.op_Implicit(Single to Complex)\n- uid: System.Single\n  parent: System\n  isExternal: false\n  name: Single\n  nameWithType: Single\n  fullName: System.Single\n- uid: System.Numerics.Complex.op_Implicit(System.SByte to System.Numerics.Complex)\n  parent: System.Numerics.Complex\n  isExternal: false\n  name: op_Implicit(SByte to Complex)\n  nameWithType: Complex.op_Implicit(SByte to Complex)\n  fullName: Complex.op_Implicit(SByte to Complex)\n- uid: System.SByte\n  parent: System\n  isExternal: false\n  name: SByte\n  nameWithType: SByte\n  fullName: System.SByte\n- uid: System.Numerics.Complex.op_Implicit(System.Byte to System.Numerics.Complex)\n  parent: System.Numerics.Complex\n  isExternal: false\n  name: op_Implicit(Byte to Complex)\n  nameWithType: Complex.op_Implicit(Byte to Complex)\n  fullName: Complex.op_Implicit(Byte to Complex)\n- uid: System.Byte\n  parent: System\n  isExternal: false\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte\n- uid: System.Numerics.Complex.op_Implicit(System.Int32 to System.Numerics.Complex)\n  parent: System.Numerics.Complex\n  isExternal: false\n  name: op_Implicit(Int32 to Complex)\n  nameWithType: Complex.op_Implicit(Int32 to Complex)\n  fullName: Complex.op_Implicit(Int32 to Complex)\n- uid: System.Numerics.Complex.op_Implicit(System.Int16 to System.Numerics.Complex)\n  parent: System.Numerics.Complex\n  isExternal: false\n  name: op_Implicit(Int16 to Complex)\n  nameWithType: Complex.op_Implicit(Int16 to Complex)\n  fullName: Complex.op_Implicit(Int16 to Complex)\n- uid: System.Int16\n  parent: System\n  isExternal: false\n  name: Int16\n  nameWithType: Int16\n  fullName: System.Int16\n- uid: System.Numerics.Complex.op_Implicit(System.Double to System.Numerics.Complex)\n  parent: System.Numerics.Complex\n  isExternal: false\n  name: op_Implicit(Double to Complex)\n  nameWithType: Complex.op_Implicit(Double to Complex)\n  fullName: Complex.op_Implicit(Double to Complex)\n- uid: System.Numerics.Complex.op_Implicit(System.Int64 to System.Numerics.Complex)\n  parent: System.Numerics.Complex\n  isExternal: false\n  name: op_Implicit(Int64 to Complex)\n  nameWithType: Complex.op_Implicit(Int64 to Complex)\n  fullName: Complex.op_Implicit(Int64 to Complex)\n- uid: System.Int64\n  parent: System\n  isExternal: false\n  name: Int64\n  nameWithType: Int64\n  fullName: System.Int64\n- uid: System.Numerics.Complex.op_Inequality(System.Numerics.Complex,System.Numerics.Complex)\n  parent: System.Numerics.Complex\n  isExternal: false\n  name: op_Inequality(Complex, Complex)\n  nameWithType: Complex.op_Inequality(Complex, Complex)\n  fullName: Complex.op_Inequality(Complex, Complex)\n- uid: System.Numerics.Complex.op_Multiply(System.Numerics.Complex,System.Numerics.Complex)\n  parent: System.Numerics.Complex\n  isExternal: false\n  name: op_Multiply(Complex, Complex)\n  nameWithType: Complex.op_Multiply(Complex, Complex)\n  fullName: Complex.op_Multiply(Complex, Complex)\n- uid: System.Numerics.Complex.op_Subtraction(System.Numerics.Complex,System.Numerics.Complex)\n  parent: System.Numerics.Complex\n  isExternal: false\n  name: op_Subtraction(Complex, Complex)\n  nameWithType: Complex.op_Subtraction(Complex, Complex)\n  fullName: Complex.op_Subtraction(Complex, Complex)\n- uid: System.Numerics.Complex.op_UnaryNegation(System.Numerics.Complex)\n  parent: System.Numerics.Complex\n  isExternal: false\n  name: op_UnaryNegation(Complex)\n  nameWithType: Complex.op_UnaryNegation(Complex)\n  fullName: Complex.op_UnaryNegation(Complex)\n- uid: System.Numerics.Complex.Phase\n  parent: System.Numerics.Complex\n  isExternal: false\n  name: Phase\n  nameWithType: Complex.Phase\n  fullName: Complex.Phase\n- uid: System.Numerics.Complex.Pow(System.Numerics.Complex,System.Double)\n  parent: System.Numerics.Complex\n  isExternal: false\n  name: Pow(Complex, Double)\n  nameWithType: Complex.Pow(Complex, Double)\n  fullName: Complex.Pow(Complex, Double)\n- uid: System.Numerics.Complex.Pow(System.Numerics.Complex,System.Numerics.Complex)\n  parent: System.Numerics.Complex\n  isExternal: false\n  name: Pow(Complex, Complex)\n  nameWithType: Complex.Pow(Complex, Complex)\n  fullName: Complex.Pow(Complex, Complex)\n- uid: System.Numerics.Complex.Real\n  parent: System.Numerics.Complex\n  isExternal: false\n  name: Real\n  nameWithType: Complex.Real\n  fullName: Complex.Real\n- uid: System.Numerics.Complex.Reciprocal(System.Numerics.Complex)\n  parent: System.Numerics.Complex\n  isExternal: false\n  name: Reciprocal(Complex)\n  nameWithType: Complex.Reciprocal(Complex)\n  fullName: Complex.Reciprocal(Complex)\n- uid: System.Numerics.Complex.Sin(System.Numerics.Complex)\n  parent: System.Numerics.Complex\n  isExternal: false\n  name: Sin(Complex)\n  nameWithType: Complex.Sin(Complex)\n  fullName: Complex.Sin(Complex)\n- uid: System.Numerics.Complex.Sinh(System.Numerics.Complex)\n  parent: System.Numerics.Complex\n  isExternal: false\n  name: Sinh(Complex)\n  nameWithType: Complex.Sinh(Complex)\n  fullName: Complex.Sinh(Complex)\n- uid: System.Numerics.Complex.Sqrt(System.Numerics.Complex)\n  parent: System.Numerics.Complex\n  isExternal: false\n  name: Sqrt(Complex)\n  nameWithType: Complex.Sqrt(Complex)\n  fullName: Complex.Sqrt(Complex)\n- uid: System.Numerics.Complex.Subtract(System.Numerics.Complex,System.Numerics.Complex)\n  parent: System.Numerics.Complex\n  isExternal: false\n  name: Subtract(Complex, Complex)\n  nameWithType: Complex.Subtract(Complex, Complex)\n  fullName: Complex.Subtract(Complex, Complex)\n- uid: System.Numerics.Complex.Tan(System.Numerics.Complex)\n  parent: System.Numerics.Complex\n  isExternal: false\n  name: Tan(Complex)\n  nameWithType: Complex.Tan(Complex)\n  fullName: Complex.Tan(Complex)\n- uid: System.Numerics.Complex.Tanh(System.Numerics.Complex)\n  parent: System.Numerics.Complex\n  isExternal: false\n  name: Tanh(Complex)\n  nameWithType: Complex.Tanh(Complex)\n  fullName: Complex.Tanh(Complex)\n- uid: System.Numerics.Complex.ToString\n  parent: System.Numerics.Complex\n  isExternal: false\n  name: ToString()\n  nameWithType: Complex.ToString()\n  fullName: Complex.ToString()\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Numerics.Complex.ToString(System.IFormatProvider)\n  parent: System.Numerics.Complex\n  isExternal: false\n  name: ToString(IFormatProvider)\n  nameWithType: Complex.ToString(IFormatProvider)\n  fullName: Complex.ToString(IFormatProvider)\n- uid: System.IFormatProvider\n  parent: System\n  isExternal: false\n  name: IFormatProvider\n  nameWithType: IFormatProvider\n  fullName: System.IFormatProvider\n- uid: System.Numerics.Complex.ToString(System.String)\n  parent: System.Numerics.Complex\n  isExternal: false\n  name: ToString(String)\n  nameWithType: Complex.ToString(String)\n  fullName: Complex.ToString(String)\n- uid: System.Numerics.Complex.ToString(System.String,System.IFormatProvider)\n  parent: System.Numerics.Complex\n  isExternal: false\n  name: ToString(String, IFormatProvider)\n  nameWithType: Complex.ToString(String, IFormatProvider)\n  fullName: Complex.ToString(String, IFormatProvider)\n- uid: System.Numerics.Complex.Zero\n  parent: System.Numerics.Complex\n  isExternal: false\n  name: Zero\n  nameWithType: Complex.Zero\n  fullName: Complex.Zero\n- uid: System.Numerics.Complex.#ctor*\n  parent: System.Numerics.Complex\n  isExternal: false\n  name: Complex\n  nameWithType: Complex.Complex\n  fullName: Complex.Complex\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Complex.xml\n- uid: System.Numerics.Complex.Abs*\n  parent: System.Numerics.Complex\n  isExternal: false\n  name: Abs\n  nameWithType: Complex.Abs\n  fullName: Complex.Abs\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Complex.xml\n- uid: System.Numerics.Complex.Acos*\n  parent: System.Numerics.Complex\n  isExternal: false\n  name: Acos\n  nameWithType: Complex.Acos\n  fullName: Complex.Acos\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Complex.xml\n- uid: System.Numerics.Complex.Add*\n  parent: System.Numerics.Complex\n  isExternal: false\n  name: Add\n  nameWithType: Complex.Add\n  fullName: Complex.Add\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Complex.xml\n- uid: System.Numerics.Complex.Asin*\n  parent: System.Numerics.Complex\n  isExternal: false\n  name: Asin\n  nameWithType: Complex.Asin\n  fullName: Complex.Asin\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Complex.xml\n- uid: System.Numerics.Complex.Atan*\n  parent: System.Numerics.Complex\n  isExternal: false\n  name: Atan\n  nameWithType: Complex.Atan\n  fullName: Complex.Atan\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Complex.xml\n- uid: System.Numerics.Complex.Conjugate*\n  parent: System.Numerics.Complex\n  isExternal: false\n  name: Conjugate\n  nameWithType: Complex.Conjugate\n  fullName: Complex.Conjugate\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Complex.xml\n- uid: System.Numerics.Complex.Cos*\n  parent: System.Numerics.Complex\n  isExternal: false\n  name: Cos\n  nameWithType: Complex.Cos\n  fullName: Complex.Cos\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Complex.xml\n- uid: System.Numerics.Complex.Cosh*\n  parent: System.Numerics.Complex\n  isExternal: false\n  name: Cosh\n  nameWithType: Complex.Cosh\n  fullName: Complex.Cosh\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Complex.xml\n- uid: System.Numerics.Complex.Divide*\n  parent: System.Numerics.Complex\n  isExternal: false\n  name: Divide\n  nameWithType: Complex.Divide\n  fullName: Complex.Divide\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Complex.xml\n- uid: System.Numerics.Complex.Equals*\n  parent: System.Numerics.Complex\n  isExternal: false\n  name: Equals\n  nameWithType: Complex.Equals\n  fullName: Complex.Equals\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Complex.xml\n- uid: System.Numerics.Complex.Exp*\n  parent: System.Numerics.Complex\n  isExternal: false\n  name: Exp\n  nameWithType: Complex.Exp\n  fullName: Complex.Exp\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Complex.xml\n- uid: System.Numerics.Complex.FromPolarCoordinates*\n  parent: System.Numerics.Complex\n  isExternal: false\n  name: FromPolarCoordinates\n  nameWithType: Complex.FromPolarCoordinates\n  fullName: Complex.FromPolarCoordinates\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Complex.xml\n- uid: System.Numerics.Complex.GetHashCode*\n  parent: System.Numerics.Complex\n  isExternal: false\n  name: GetHashCode\n  nameWithType: Complex.GetHashCode\n  fullName: Complex.GetHashCode\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Complex.xml\n- uid: System.Numerics.Complex.Imaginary*\n  parent: System.Numerics.Complex\n  isExternal: false\n  name: Imaginary\n  nameWithType: Complex.Imaginary\n  fullName: Complex.Imaginary\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Complex.xml\n- uid: System.Numerics.Complex.Log*\n  parent: System.Numerics.Complex\n  isExternal: false\n  name: Log\n  nameWithType: Complex.Log\n  fullName: Complex.Log\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Complex.xml\n- uid: System.Numerics.Complex.Log10*\n  parent: System.Numerics.Complex\n  isExternal: false\n  name: Log10\n  nameWithType: Complex.Log10\n  fullName: Complex.Log10\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Complex.xml\n- uid: System.Numerics.Complex.Magnitude*\n  parent: System.Numerics.Complex\n  isExternal: false\n  name: Magnitude\n  nameWithType: Complex.Magnitude\n  fullName: Complex.Magnitude\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Complex.xml\n- uid: System.Numerics.Complex.Multiply*\n  parent: System.Numerics.Complex\n  isExternal: false\n  name: Multiply\n  nameWithType: Complex.Multiply\n  fullName: Complex.Multiply\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Complex.xml\n- uid: System.Numerics.Complex.Negate*\n  parent: System.Numerics.Complex\n  isExternal: false\n  name: Negate\n  nameWithType: Complex.Negate\n  fullName: Complex.Negate\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Complex.xml\n- uid: System.Numerics.Complex.op_Addition*\n  parent: System.Numerics.Complex\n  isExternal: false\n  name: op_Addition\n  nameWithType: Complex.op_Addition\n  fullName: Complex.op_Addition\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Complex.xml\n- uid: System.Numerics.Complex.op_Division*\n  parent: System.Numerics.Complex\n  isExternal: false\n  name: op_Division\n  nameWithType: Complex.op_Division\n  fullName: Complex.op_Division\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Complex.xml\n- uid: System.Numerics.Complex.op_Equality*\n  parent: System.Numerics.Complex\n  isExternal: false\n  name: op_Equality\n  nameWithType: Complex.op_Equality\n  fullName: Complex.op_Equality\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Complex.xml\n- uid: System.Numerics.Complex.op_Explicit*\n  parent: System.Numerics.Complex\n  isExternal: false\n  name: op_Explicit\n  nameWithType: Complex.op_Explicit\n  fullName: Complex.op_Explicit\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Complex.xml\n- uid: System.Numerics.Complex.op_Implicit*\n  parent: System.Numerics.Complex\n  isExternal: false\n  name: op_Implicit\n  nameWithType: Complex.op_Implicit\n  fullName: Complex.op_Implicit\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Complex.xml\n- uid: System.Numerics.Complex.op_Inequality*\n  parent: System.Numerics.Complex\n  isExternal: false\n  name: op_Inequality\n  nameWithType: Complex.op_Inequality\n  fullName: Complex.op_Inequality\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Complex.xml\n- uid: System.Numerics.Complex.op_Multiply*\n  parent: System.Numerics.Complex\n  isExternal: false\n  name: op_Multiply\n  nameWithType: Complex.op_Multiply\n  fullName: Complex.op_Multiply\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Complex.xml\n- uid: System.Numerics.Complex.op_Subtraction*\n  parent: System.Numerics.Complex\n  isExternal: false\n  name: op_Subtraction\n  nameWithType: Complex.op_Subtraction\n  fullName: Complex.op_Subtraction\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Complex.xml\n- uid: System.Numerics.Complex.op_UnaryNegation*\n  parent: System.Numerics.Complex\n  isExternal: false\n  name: op_UnaryNegation\n  nameWithType: Complex.op_UnaryNegation\n  fullName: Complex.op_UnaryNegation\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Complex.xml\n- uid: System.Numerics.Complex.Phase*\n  parent: System.Numerics.Complex\n  isExternal: false\n  name: Phase\n  nameWithType: Complex.Phase\n  fullName: Complex.Phase\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Complex.xml\n- uid: System.Numerics.Complex.Pow*\n  parent: System.Numerics.Complex\n  isExternal: false\n  name: Pow\n  nameWithType: Complex.Pow\n  fullName: Complex.Pow\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Complex.xml\n- uid: System.Numerics.Complex.Real*\n  parent: System.Numerics.Complex\n  isExternal: false\n  name: Real\n  nameWithType: Complex.Real\n  fullName: Complex.Real\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Complex.xml\n- uid: System.Numerics.Complex.Reciprocal*\n  parent: System.Numerics.Complex\n  isExternal: false\n  name: Reciprocal\n  nameWithType: Complex.Reciprocal\n  fullName: Complex.Reciprocal\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Complex.xml\n- uid: System.Numerics.Complex.Sin*\n  parent: System.Numerics.Complex\n  isExternal: false\n  name: Sin\n  nameWithType: Complex.Sin\n  fullName: Complex.Sin\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Complex.xml\n- uid: System.Numerics.Complex.Sinh*\n  parent: System.Numerics.Complex\n  isExternal: false\n  name: Sinh\n  nameWithType: Complex.Sinh\n  fullName: Complex.Sinh\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Complex.xml\n- uid: System.Numerics.Complex.Sqrt*\n  parent: System.Numerics.Complex\n  isExternal: false\n  name: Sqrt\n  nameWithType: Complex.Sqrt\n  fullName: Complex.Sqrt\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Complex.xml\n- uid: System.Numerics.Complex.Subtract*\n  parent: System.Numerics.Complex\n  isExternal: false\n  name: Subtract\n  nameWithType: Complex.Subtract\n  fullName: Complex.Subtract\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Complex.xml\n- uid: System.Numerics.Complex.Tan*\n  parent: System.Numerics.Complex\n  isExternal: false\n  name: Tan\n  nameWithType: Complex.Tan\n  fullName: Complex.Tan\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Complex.xml\n- uid: System.Numerics.Complex.Tanh*\n  parent: System.Numerics.Complex\n  isExternal: false\n  name: Tanh\n  nameWithType: Complex.Tanh\n  fullName: Complex.Tanh\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Complex.xml\n- uid: System.Numerics.Complex.ToString*\n  parent: System.Numerics.Complex\n  isExternal: false\n  name: ToString\n  nameWithType: Complex.ToString\n  fullName: Complex.ToString\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Numerics/Complex.xml\n- uid: System.IEquatable`1\n  name: IEquatable<T>\n  nameWithType: IEquatable<T>\n  fullName: System.IEquatable<T>\n- uid: System.IEquatable{System.Numerics.Complex}\n  parent: System\n  isExternal: false\n  name: IEquatable<Complex>\n  nameWithType: IEquatable<Complex>\n  fullName: System.IEquatable<System.Numerics.Complex>\n  spec.csharp:\n  - uid: System.IEquatable`1\n    name: IEquatable\n    nameWithType: IEquatable\n    fullName: System.IEquatable\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Numerics.Complex\n    name: Complex\n    nameWithType: Complex\n    fullName: System.Numerics.Complex\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.IFormattable\n  parent: System\n  isExternal: false\n  name: IFormattable\n  nameWithType: IFormattable\n  fullName: System.IFormattable\n"}