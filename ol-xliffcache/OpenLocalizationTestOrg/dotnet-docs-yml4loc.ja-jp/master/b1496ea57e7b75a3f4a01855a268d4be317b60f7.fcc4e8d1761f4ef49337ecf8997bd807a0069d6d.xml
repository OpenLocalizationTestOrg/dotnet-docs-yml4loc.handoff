{"nodes":[{"content":"Specifies that an object has no subproperties capable of being edited. This class cannot be inherited.","nodes":[{"pos":[0,102],"content":"Specifies that an object has no subproperties capable of being edited. This class cannot be inherited.","nodes":[{"content":"Specifies that an object has no subproperties capable of being edited. This class cannot be inherited.","pos":[0,102],"nodes":[{"content":"Specifies that an object has no subproperties capable of being edited.","pos":[0,70]},{"content":"This class cannot be inherited.","pos":[71,102]}]}]}],"pos":[994,1097],"yaml":true},{"content":"This attribute is typically used in the **Properties** window to determine whether to render an expandable object as read-only. As such, this property is used only at design time.  \n  \n For more information about using attributes, see [Attributes](http://msdn.microsoft.com/library/30386922-1e00-4602-9ebf-526b271a8b87).","nodes":[{"pos":[0,179],"content":"This attribute is typically used in the **Properties** window to determine whether to render an expandable object as read-only. As such, this property is used only at design time.","nodes":[{"content":"This attribute is typically used in the <bpt id=\"p1\">**</bpt>Properties<ept id=\"p1\">**</ept> window to determine whether to render an expandable object as read-only.","pos":[0,127],"source":"This attribute is typically used in the **Properties** window to determine whether to render an expandable object as read-only."},{"content":"As such, this property is used only at design time.","pos":[128,179]}]},{"pos":[186,320],"content":"For more information about using attributes, see <bpt id=\"p1\">[</bpt>Attributes<ept id=\"p1\">](http://msdn.microsoft.com/library/30386922-1e00-4602-9ebf-526b271a8b87)</ept>.","source":"For more information about using attributes, see [Attributes](http://msdn.microsoft.com/library/30386922-1e00-4602-9ebf-526b271a8b87)."}],"pos":[1108,1433],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.ComponentModel.ImmutableObjectAttribute\"></xref> class.","nodes":[{"pos":[0,108],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.ImmutableObjectAttribute\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.ComponentModel.ImmutableObjectAttribute\"></xref> class."}],"pos":[6637,6746],"yaml":true},{"content":"This attribute is typically used in the **Properties** window to determine whether to render an expandable object as read-only.","nodes":[{"pos":[0,127],"content":"This attribute is typically used in the <bpt id=\"p1\">**</bpt>Properties<ept id=\"p1\">**</ept> window to determine whether to render an expandable object as read-only.","source":"This attribute is typically used in the **Properties** window to determine whether to render an expandable object as read-only."}],"pos":[6757,6885],"yaml":true,"extradata":"MT"},{"content":"`true` if the object is immutable; otherwise, `false`.","nodes":[{"pos":[0,54],"content":"<ph id=\"ph1\">`true`</ph> if the object is immutable; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the object is immutable; otherwise, `false`."}],"pos":[7040,7097],"yaml":true},{"content":"Represents the default value for <xref href=\"System.ComponentModel.ImmutableObjectAttribute\"></xref>.","nodes":[{"pos":[0,101],"content":"Represents the default value for <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.ImmutableObjectAttribute\"&gt;&lt;/xref&gt;</ph>.","source":"Represents the default value for <xref href=\"System.ComponentModel.ImmutableObjectAttribute\"></xref>."}],"pos":[8457,8559],"yaml":true},{"content":"Defaults to <xref:System.ComponentModel.ImmutableObjectAttribute.No>.","nodes":[{"pos":[0,69],"content":"Defaults to <xref:System.ComponentModel.ImmutableObjectAttribute.No>.","nodes":[{"content":"Defaults to <ph id=\"ph1\">&lt;xref:System.ComponentModel.ImmutableObjectAttribute.No&gt;</ph>.","pos":[0,69],"source":"Defaults to <xref:System.ComponentModel.ImmutableObjectAttribute.No>."}]}],"pos":[8570,8640],"yaml":true,"extradata":"MT"},{"content":"Returns a value that indicates whether this instance is equal to a specified object.","nodes":[{"pos":[0,84],"content":"Returns a value that indicates whether this instance is equal to a specified object.","nodes":[{"content":"Returns a value that indicates whether this instance is equal to a specified object.","pos":[0,84]}]}],"pos":[10193,10278],"yaml":true},{"content":"An <xref href=\"System.Object\"></xref> to compare with this instance or a null reference (`Nothing` in Visual Basic).","nodes":[{"pos":[0,116],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Object\"&gt;&lt;/xref&gt;</ph> to compare with this instance or a null reference (<ph id=\"ph2\">`Nothing`</ph> in Visual Basic).","source":"An <xref href=\"System.Object\"></xref> to compare with this instance or a null reference (`Nothing` in Visual Basic)."}],"pos":[10418,10535],"yaml":true},{"content":"`true` if <code>obj</code> equals the type and value of this instance; otherwise, `false`.","nodes":[{"pos":[0,90],"content":"<ph id=\"ph1\">`true`</ph> if <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">obj</ph><ept id=\"p1\">&lt;/code&gt;</ept> equals the type and value of this instance; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` if <code>obj</code> equals the type and value of this instance; otherwise, `false`."}],"pos":[10593,10686],"yaml":true},{"content":"Returns the hash code for this instance.","nodes":[{"pos":[0,40],"content":"Returns the hash code for this instance.","nodes":[{"content":"Returns the hash code for this instance.","pos":[0,40]}]}],"pos":[12078,12119],"yaml":true},{"content":"A hash code for the current <xref href=\"System.ComponentModel.ImmutableObjectAttribute\"></xref>.","nodes":[{"pos":[0,96],"content":"A hash code for the current <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.ImmutableObjectAttribute\"&gt;&lt;/xref&gt;</ph>.","source":"A hash code for the current <xref href=\"System.ComponentModel.ImmutableObjectAttribute\"></xref>."}],"pos":[12253,12350],"yaml":true},{"content":"Gets whether the object is immutable.","nodes":[{"pos":[0,37],"content":"Gets whether the object is immutable.","nodes":[{"content":"Gets whether the object is immutable.","pos":[0,37]}]}],"pos":[13731,13769],"yaml":true},{"content":"This attribute is typically used in the **Properties** window to determine whether to render an expandable object as read-only.","nodes":[{"pos":[0,127],"content":"This attribute is typically used in the <bpt id=\"p1\">**</bpt>Properties<ept id=\"p1\">**</ept> window to determine whether to render an expandable object as read-only.","source":"This attribute is typically used in the **Properties** window to determine whether to render an expandable object as read-only."}],"pos":[13780,13908],"yaml":true,"extradata":"MT"},{"content":"`true` if the object is immutable; otherwise, `false`.","nodes":[{"pos":[0,54],"content":"<ph id=\"ph1\">`true`</ph> if the object is immutable; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the object is immutable; otherwise, `false`."}],"pos":[14020,14077],"yaml":true},{"content":"Indicates whether the value of this instance is the default value.","nodes":[{"pos":[0,66],"content":"Indicates whether the value of this instance is the default value.","nodes":[{"content":"Indicates whether the value of this instance is the default value.","pos":[0,66]}]}],"pos":[15514,15581],"yaml":true},{"content":"`true` if this instance is the default attribute for the class; otherwise, `false`.","nodes":[{"pos":[0,83],"content":"<ph id=\"ph1\">`true`</ph> if this instance is the default attribute for the class; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if this instance is the default attribute for the class; otherwise, `false`."}],"pos":[15725,15811],"yaml":true},{"content":"Specifies that an object has at least one editable subproperty. This `static` field is read-only.","nodes":[{"pos":[0,97],"content":"Specifies that an object has at least one editable subproperty. This `static` field is read-only.","nodes":[{"content":"Specifies that an object has at least one editable subproperty.","pos":[0,63]},{"content":"This <ph id=\"ph1\">`static`</ph> field is read-only.","pos":[64,97],"source":" This `static` field is read-only."}]}],"pos":[17090,17188],"yaml":true},{"content":"This field is the default setting for this attribute.  \n  \n This attribute is typically used in the **Properties** window to determine whether to render an expandable object as read-only.","nodes":[{"pos":[0,53],"content":"This field is the default setting for this attribute.","nodes":[{"content":"This field is the default setting for this attribute.","pos":[0,53]}]},{"pos":[60,187],"content":"This attribute is typically used in the <bpt id=\"p1\">**</bpt>Properties<ept id=\"p1\">**</ept> window to determine whether to render an expandable object as read-only.","source":"This attribute is typically used in the **Properties** window to determine whether to render an expandable object as read-only."}],"pos":[17199,17391],"yaml":true,"extradata":"MT"},{"content":"Specifies that an object has no subproperties that can be edited. This `static` field is read-only.","nodes":[{"pos":[0,99],"content":"Specifies that an object has no subproperties that can be edited. This `static` field is read-only.","nodes":[{"content":"Specifies that an object has no subproperties that can be edited.","pos":[0,65]},{"content":"This <ph id=\"ph1\">`static`</ph> field is read-only.","pos":[66,99],"source":" This `static` field is read-only."}]}],"pos":[18851,18951],"yaml":true},{"content":"This attribute is typically used in the **Properties** window to determine whether to render an expandable object as read-only.","nodes":[{"pos":[0,127],"content":"This attribute is typically used in the <bpt id=\"p1\">**</bpt>Properties<ept id=\"p1\">**</ept> window to determine whether to render an expandable object as read-only.","source":"This attribute is typically used in the **Properties** window to determine whether to render an expandable object as read-only."}],"pos":[18962,19090],"yaml":true,"extradata":"MT"}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.ComponentModel.ImmutableObjectAttribute\n  commentId: T:System.ComponentModel.ImmutableObjectAttribute\n  id: ImmutableObjectAttribute\n  children:\n  - System.ComponentModel.ImmutableObjectAttribute.#ctor(System.Boolean)\n  - System.ComponentModel.ImmutableObjectAttribute.Default\n  - System.ComponentModel.ImmutableObjectAttribute.Equals(System.Object)\n  - System.ComponentModel.ImmutableObjectAttribute.GetHashCode\n  - System.ComponentModel.ImmutableObjectAttribute.Immutable\n  - System.ComponentModel.ImmutableObjectAttribute.IsDefaultAttribute\n  - System.ComponentModel.ImmutableObjectAttribute.No\n  - System.ComponentModel.ImmutableObjectAttribute.Yes\n  langs:\n  - csharp\n  name: ImmutableObjectAttribute\n  nameWithType: ImmutableObjectAttribute\n  fullName: System.ComponentModel.ImmutableObjectAttribute\n  type: Class\n  assemblies:\n  - System.ComponentModel.Primitives\n  - System\n  - netstandard\n  namespace: System.ComponentModel\n  summary: Specifies that an object has no subproperties capable of being edited. This class cannot be inherited.\n  remarks: \"This attribute is typically used in the **Properties** window to determine whether to render an expandable object as read-only. As such, this property is used only at design time.  \\n  \\n For more information about using attributes, see [Attributes](http://msdn.microsoft.com/library/30386922-1e00-4602-9ebf-526b271a8b87).\"\n  syntax:\n    content: >-\n      [System.AttributeUsage(System.AttributeTargets.All)]\n\n      public sealed class ImmutableObjectAttribute : Attribute\n  inheritance:\n  - System.Object\n  - System.Attribute\n  implements: []\n  inheritedMembers:\n  - System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type)\n  - System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)\n  - System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type)\n  - System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type)\n  - System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo)\n  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)\n  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Module)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo)\n  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type)\n  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  - System.Attribute.IsDefined(System.Reflection.Assembly,System.Type)\n  - System.Attribute.IsDefined(System.Reflection.Assembly,System.Type,System.Boolean)\n  - System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type)\n  - System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  - System.Attribute.IsDefined(System.Reflection.Module,System.Type)\n  - System.Attribute.IsDefined(System.Reflection.Module,System.Type,System.Boolean)\n  - System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type)\n  - System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  - System.Attribute.Match(System.Object)\n  - System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)\n  - System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)\n  - System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)\n  - System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)\n  - System.Attribute.TypeId\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  attributes:\n  - type: System.AttributeUsageAttribute\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/ImmutableObjectAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.ImmutableObjectAttribute.#ctor(System.Boolean)\n  commentId: M:System.ComponentModel.ImmutableObjectAttribute.#ctor(System.Boolean)\n  id: '#ctor(System.Boolean)'\n  parent: System.ComponentModel.ImmutableObjectAttribute\n  langs:\n  - csharp\n  name: ImmutableObjectAttribute(Boolean)\n  nameWithType: ImmutableObjectAttribute.ImmutableObjectAttribute(Boolean)\n  fullName: ImmutableObjectAttribute.ImmutableObjectAttribute(Boolean)\n  type: Constructor\n  assemblies:\n  - System.ComponentModel.Primitives\n  - System\n  - netstandard\n  namespace: System.ComponentModel\n  summary: Initializes a new instance of the <xref href=\"System.ComponentModel.ImmutableObjectAttribute\"></xref> class.\n  remarks: This attribute is typically used in the **Properties** window to determine whether to render an expandable object as read-only.\n  syntax:\n    content: public ImmutableObjectAttribute (bool immutable);\n    parameters:\n    - id: immutable\n      type: System.Boolean\n      description: '`true` if the object is immutable; otherwise, `false`.'\n  overload: System.ComponentModel.ImmutableObjectAttribute.#ctor*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/ImmutableObjectAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.ImmutableObjectAttribute.Default\n  commentId: F:System.ComponentModel.ImmutableObjectAttribute.Default\n  id: Default\n  parent: System.ComponentModel.ImmutableObjectAttribute\n  langs:\n  - csharp\n  name: Default\n  nameWithType: ImmutableObjectAttribute.Default\n  fullName: ImmutableObjectAttribute.Default\n  type: Field\n  assemblies:\n  - System.ComponentModel.Primitives\n  - System\n  - netstandard\n  namespace: System.ComponentModel\n  summary: Represents the default value for <xref href=\"System.ComponentModel.ImmutableObjectAttribute\"></xref>.\n  remarks: Defaults to <xref:System.ComponentModel.ImmutableObjectAttribute.No>.\n  syntax:\n    content: public static readonly System.ComponentModel.ImmutableObjectAttribute Default;\n    return:\n      type: System.ComponentModel.ImmutableObjectAttribute\n      description: ''\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/ImmutableObjectAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.ImmutableObjectAttribute.Equals(System.Object)\n  commentId: M:System.ComponentModel.ImmutableObjectAttribute.Equals(System.Object)\n  id: Equals(System.Object)\n  parent: System.ComponentModel.ImmutableObjectAttribute\n  langs:\n  - csharp\n  name: Equals(Object)\n  nameWithType: ImmutableObjectAttribute.Equals(Object)\n  fullName: ImmutableObjectAttribute.Equals(Object)\n  type: Method\n  assemblies:\n  - System.ComponentModel.Primitives\n  - System\n  - netstandard\n  namespace: System.ComponentModel\n  summary: Returns a value that indicates whether this instance is equal to a specified object.\n  syntax:\n    content: public override bool Equals (object obj);\n    parameters:\n    - id: obj\n      type: System.Object\n      description: An <xref href=\"System.Object\"></xref> to compare with this instance or a null reference (`Nothing` in Visual Basic).\n    return:\n      type: System.Boolean\n      description: '`true` if <code>obj</code> equals the type and value of this instance; otherwise, `false`.'\n  overload: System.ComponentModel.ImmutableObjectAttribute.Equals*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/ImmutableObjectAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.ImmutableObjectAttribute.GetHashCode\n  commentId: M:System.ComponentModel.ImmutableObjectAttribute.GetHashCode\n  id: GetHashCode\n  parent: System.ComponentModel.ImmutableObjectAttribute\n  langs:\n  - csharp\n  name: GetHashCode()\n  nameWithType: ImmutableObjectAttribute.GetHashCode()\n  fullName: ImmutableObjectAttribute.GetHashCode()\n  type: Method\n  assemblies:\n  - System.ComponentModel.Primitives\n  - System\n  - netstandard\n  namespace: System.ComponentModel\n  summary: Returns the hash code for this instance.\n  syntax:\n    content: public override int GetHashCode ();\n    parameters: []\n    return:\n      type: System.Int32\n      description: A hash code for the current <xref href=\"System.ComponentModel.ImmutableObjectAttribute\"></xref>.\n  overload: System.ComponentModel.ImmutableObjectAttribute.GetHashCode*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/ImmutableObjectAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.ImmutableObjectAttribute.Immutable\n  commentId: P:System.ComponentModel.ImmutableObjectAttribute.Immutable\n  id: Immutable\n  parent: System.ComponentModel.ImmutableObjectAttribute\n  langs:\n  - csharp\n  name: Immutable\n  nameWithType: ImmutableObjectAttribute.Immutable\n  fullName: ImmutableObjectAttribute.Immutable\n  type: Property\n  assemblies:\n  - System.ComponentModel.Primitives\n  - System\n  - netstandard\n  namespace: System.ComponentModel\n  summary: Gets whether the object is immutable.\n  remarks: This attribute is typically used in the **Properties** window to determine whether to render an expandable object as read-only.\n  syntax:\n    content: public bool Immutable { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if the object is immutable; otherwise, `false`.'\n  overload: System.ComponentModel.ImmutableObjectAttribute.Immutable*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/ImmutableObjectAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.ImmutableObjectAttribute.IsDefaultAttribute\n  commentId: M:System.ComponentModel.ImmutableObjectAttribute.IsDefaultAttribute\n  id: IsDefaultAttribute\n  parent: System.ComponentModel.ImmutableObjectAttribute\n  langs:\n  - csharp\n  name: IsDefaultAttribute()\n  nameWithType: ImmutableObjectAttribute.IsDefaultAttribute()\n  fullName: ImmutableObjectAttribute.IsDefaultAttribute()\n  type: Method\n  assemblies:\n  - System\n  - netstandard\n  - System.ComponentModel.Primitives\n  namespace: System.ComponentModel\n  summary: Indicates whether the value of this instance is the default value.\n  syntax:\n    content: public override bool IsDefaultAttribute ();\n    parameters: []\n    return:\n      type: System.Boolean\n      description: '`true` if this instance is the default attribute for the class; otherwise, `false`.'\n  overload: System.ComponentModel.ImmutableObjectAttribute.IsDefaultAttribute*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/ImmutableObjectAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.ImmutableObjectAttribute.No\n  commentId: F:System.ComponentModel.ImmutableObjectAttribute.No\n  id: No\n  parent: System.ComponentModel.ImmutableObjectAttribute\n  langs:\n  - csharp\n  name: No\n  nameWithType: ImmutableObjectAttribute.No\n  fullName: ImmutableObjectAttribute.No\n  type: Field\n  assemblies:\n  - System.ComponentModel.Primitives\n  - System\n  - netstandard\n  namespace: System.ComponentModel\n  summary: Specifies that an object has at least one editable subproperty. This `static` field is read-only.\n  remarks: \"This field is the default setting for this attribute.  \\n  \\n This attribute is typically used in the **Properties** window to determine whether to render an expandable object as read-only.\"\n  syntax:\n    content: public static readonly System.ComponentModel.ImmutableObjectAttribute No;\n    return:\n      type: System.ComponentModel.ImmutableObjectAttribute\n      description: ''\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/ImmutableObjectAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.ImmutableObjectAttribute.Yes\n  commentId: F:System.ComponentModel.ImmutableObjectAttribute.Yes\n  id: Yes\n  parent: System.ComponentModel.ImmutableObjectAttribute\n  langs:\n  - csharp\n  name: Yes\n  nameWithType: ImmutableObjectAttribute.Yes\n  fullName: ImmutableObjectAttribute.Yes\n  type: Field\n  assemblies:\n  - System.ComponentModel.Primitives\n  - System\n  - netstandard\n  namespace: System.ComponentModel\n  summary: Specifies that an object has no subproperties that can be edited. This `static` field is read-only.\n  remarks: This attribute is typically used in the **Properties** window to determine whether to render an expandable object as read-only.\n  syntax:\n    content: public static readonly System.ComponentModel.ImmutableObjectAttribute Yes;\n    return:\n      type: System.ComponentModel.ImmutableObjectAttribute\n      description: ''\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/ImmutableObjectAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\nreferences:\n- uid: System.Attribute\n  parent: System\n  isExternal: false\n  name: Attribute\n  nameWithType: Attribute\n  fullName: System.Attribute\n- uid: System.ComponentModel.ImmutableObjectAttribute.#ctor(System.Boolean)\n  parent: System.ComponentModel.ImmutableObjectAttribute\n  isExternal: false\n  name: ImmutableObjectAttribute(Boolean)\n  nameWithType: ImmutableObjectAttribute.ImmutableObjectAttribute(Boolean)\n  fullName: ImmutableObjectAttribute.ImmutableObjectAttribute(Boolean)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.ComponentModel.ImmutableObjectAttribute.Default\n  parent: System.ComponentModel.ImmutableObjectAttribute\n  isExternal: false\n  name: Default\n  nameWithType: ImmutableObjectAttribute.Default\n  fullName: ImmutableObjectAttribute.Default\n- uid: System.ComponentModel.ImmutableObjectAttribute\n  parent: System.ComponentModel\n  isExternal: false\n  name: ImmutableObjectAttribute\n  nameWithType: ImmutableObjectAttribute\n  fullName: System.ComponentModel.ImmutableObjectAttribute\n- uid: System.ComponentModel.ImmutableObjectAttribute.Equals(System.Object)\n  parent: System.ComponentModel.ImmutableObjectAttribute\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: ImmutableObjectAttribute.Equals(Object)\n  fullName: ImmutableObjectAttribute.Equals(Object)\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.ComponentModel.ImmutableObjectAttribute.GetHashCode\n  parent: System.ComponentModel.ImmutableObjectAttribute\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: ImmutableObjectAttribute.GetHashCode()\n  fullName: ImmutableObjectAttribute.GetHashCode()\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.ComponentModel.ImmutableObjectAttribute.Immutable\n  parent: System.ComponentModel.ImmutableObjectAttribute\n  isExternal: false\n  name: Immutable\n  nameWithType: ImmutableObjectAttribute.Immutable\n  fullName: ImmutableObjectAttribute.Immutable\n- uid: System.ComponentModel.ImmutableObjectAttribute.IsDefaultAttribute\n  parent: System.ComponentModel.ImmutableObjectAttribute\n  isExternal: false\n  name: IsDefaultAttribute()\n  nameWithType: ImmutableObjectAttribute.IsDefaultAttribute()\n  fullName: ImmutableObjectAttribute.IsDefaultAttribute()\n- uid: System.ComponentModel.ImmutableObjectAttribute.No\n  parent: System.ComponentModel.ImmutableObjectAttribute\n  isExternal: false\n  name: No\n  nameWithType: ImmutableObjectAttribute.No\n  fullName: ImmutableObjectAttribute.No\n- uid: System.ComponentModel.ImmutableObjectAttribute.Yes\n  parent: System.ComponentModel.ImmutableObjectAttribute\n  isExternal: false\n  name: Yes\n  nameWithType: ImmutableObjectAttribute.Yes\n  fullName: ImmutableObjectAttribute.Yes\n- uid: System.ComponentModel.ImmutableObjectAttribute.#ctor*\n  parent: System.ComponentModel.ImmutableObjectAttribute\n  isExternal: false\n  name: ImmutableObjectAttribute\n  nameWithType: ImmutableObjectAttribute.ImmutableObjectAttribute\n  fullName: ImmutableObjectAttribute.ImmutableObjectAttribute\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/ImmutableObjectAttribute.xml\n- uid: System.ComponentModel.ImmutableObjectAttribute.Equals*\n  parent: System.ComponentModel.ImmutableObjectAttribute\n  isExternal: false\n  name: Equals\n  nameWithType: ImmutableObjectAttribute.Equals\n  fullName: ImmutableObjectAttribute.Equals\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/ImmutableObjectAttribute.xml\n- uid: System.ComponentModel.ImmutableObjectAttribute.GetHashCode*\n  parent: System.ComponentModel.ImmutableObjectAttribute\n  isExternal: false\n  name: GetHashCode\n  nameWithType: ImmutableObjectAttribute.GetHashCode\n  fullName: ImmutableObjectAttribute.GetHashCode\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/ImmutableObjectAttribute.xml\n- uid: System.ComponentModel.ImmutableObjectAttribute.Immutable*\n  parent: System.ComponentModel.ImmutableObjectAttribute\n  isExternal: false\n  name: Immutable\n  nameWithType: ImmutableObjectAttribute.Immutable\n  fullName: ImmutableObjectAttribute.Immutable\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/ImmutableObjectAttribute.xml\n- uid: System.ComponentModel.ImmutableObjectAttribute.IsDefaultAttribute*\n  parent: System.ComponentModel.ImmutableObjectAttribute\n  isExternal: false\n  name: IsDefaultAttribute\n  nameWithType: ImmutableObjectAttribute.IsDefaultAttribute\n  fullName: ImmutableObjectAttribute.IsDefaultAttribute\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/ImmutableObjectAttribute.xml\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(ParameterInfo, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttribute(ParameterInfo, Type, Boolean)\n  fullName: Attribute.GetCustomAttribute(ParameterInfo, Type, Boolean)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(MemberInfo, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttribute(MemberInfo, Type, Boolean)\n  fullName: Attribute.GetCustomAttribute(MemberInfo, Type, Boolean)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(Assembly, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttribute(Assembly, Type, Boolean)\n  fullName: Attribute.GetCustomAttribute(Assembly, Type, Boolean)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(Module, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttribute(Module, Type, Boolean)\n  fullName: Attribute.GetCustomAttribute(Module, Type, Boolean)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(Module, Type)\n  nameWithType: Attribute.GetCustomAttribute(Module, Type)\n  fullName: Attribute.GetCustomAttribute(Module, Type)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(MemberInfo, Type)\n  nameWithType: Attribute.GetCustomAttribute(MemberInfo, Type)\n  fullName: Attribute.GetCustomAttribute(MemberInfo, Type)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(Assembly, Type)\n  nameWithType: Attribute.GetCustomAttribute(Assembly, Type)\n  fullName: Attribute.GetCustomAttribute(Assembly, Type)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(ParameterInfo, Type)\n  nameWithType: Attribute.GetCustomAttribute(ParameterInfo, Type)\n  fullName: Attribute.GetCustomAttribute(ParameterInfo, Type)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Module, Type)\n  nameWithType: Attribute.GetCustomAttributes(Module, Type)\n  fullName: Attribute.GetCustomAttributes(Module, Type)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(ParameterInfo, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(ParameterInfo, Type, Boolean)\n  fullName: Attribute.GetCustomAttributes(ParameterInfo, Type, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Module, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(Module, Type, Boolean)\n  fullName: Attribute.GetCustomAttributes(Module, Type, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(MemberInfo, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(MemberInfo, Type, Boolean)\n  fullName: Attribute.GetCustomAttributes(MemberInfo, Type, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Assembly, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(Assembly, Type, Boolean)\n  fullName: Attribute.GetCustomAttributes(Assembly, Type, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(ParameterInfo, Type)\n  nameWithType: Attribute.GetCustomAttributes(ParameterInfo, Type)\n  fullName: Attribute.GetCustomAttributes(ParameterInfo, Type)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Module, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(Module, Boolean)\n  fullName: Attribute.GetCustomAttributes(Module, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(ParameterInfo, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(ParameterInfo, Boolean)\n  fullName: Attribute.GetCustomAttributes(ParameterInfo, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(MemberInfo, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(MemberInfo, Boolean)\n  fullName: Attribute.GetCustomAttributes(MemberInfo, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Assembly, Type)\n  nameWithType: Attribute.GetCustomAttributes(Assembly, Type)\n  fullName: Attribute.GetCustomAttributes(Assembly, Type)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Assembly, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(Assembly, Boolean)\n  fullName: Attribute.GetCustomAttributes(Assembly, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(ParameterInfo)\n  nameWithType: Attribute.GetCustomAttributes(ParameterInfo)\n  fullName: Attribute.GetCustomAttributes(ParameterInfo)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Module)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Module)\n  nameWithType: Attribute.GetCustomAttributes(Module)\n  fullName: Attribute.GetCustomAttributes(Module)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(MemberInfo)\n  nameWithType: Attribute.GetCustomAttributes(MemberInfo)\n  fullName: Attribute.GetCustomAttributes(MemberInfo)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Assembly)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Assembly)\n  nameWithType: Attribute.GetCustomAttributes(Assembly)\n  fullName: Attribute.GetCustomAttributes(Assembly)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(MemberInfo, Type)\n  nameWithType: Attribute.GetCustomAttributes(MemberInfo, Type)\n  fullName: Attribute.GetCustomAttributes(MemberInfo, Type)\n- uid: System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(ParameterInfo, Type, Boolean)\n  nameWithType: Attribute.IsDefined(ParameterInfo, Type, Boolean)\n  fullName: Attribute.IsDefined(ParameterInfo, Type, Boolean)\n- uid: System.Attribute.IsDefined(System.Reflection.Module,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(Module, Type, Boolean)\n  nameWithType: Attribute.IsDefined(Module, Type, Boolean)\n  fullName: Attribute.IsDefined(Module, Type, Boolean)\n- uid: System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(MemberInfo, Type, Boolean)\n  nameWithType: Attribute.IsDefined(MemberInfo, Type, Boolean)\n  fullName: Attribute.IsDefined(MemberInfo, Type, Boolean)\n- uid: System.Attribute.IsDefined(System.Reflection.Assembly,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(Assembly, Type, Boolean)\n  nameWithType: Attribute.IsDefined(Assembly, Type, Boolean)\n  fullName: Attribute.IsDefined(Assembly, Type, Boolean)\n- uid: System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(MemberInfo, Type)\n  nameWithType: Attribute.IsDefined(MemberInfo, Type)\n  fullName: Attribute.IsDefined(MemberInfo, Type)\n- uid: System.Attribute.IsDefined(System.Reflection.Module,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(Module, Type)\n  nameWithType: Attribute.IsDefined(Module, Type)\n  fullName: Attribute.IsDefined(Module, Type)\n- uid: System.Attribute.IsDefined(System.Reflection.Assembly,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(Assembly, Type)\n  nameWithType: Attribute.IsDefined(Assembly, Type)\n  fullName: Attribute.IsDefined(Assembly, Type)\n- uid: System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(ParameterInfo, Type)\n  nameWithType: Attribute.IsDefined(ParameterInfo, Type)\n  fullName: Attribute.IsDefined(ParameterInfo, Type)\n- uid: System.Attribute.Match(System.Object)\n  parent: System.Attribute\n  isExternal: false\n  name: Match(Object)\n  nameWithType: Attribute.Match(Object)\n  fullName: Attribute.Match(Object)\n- uid: System.Attribute.TypeId\n  parent: System.Attribute\n  isExternal: false\n  name: TypeId\n  nameWithType: Attribute.TypeId\n  fullName: Attribute.TypeId\n- uid: System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)\n  parent: System.Attribute\n  isExternal: false\n  name: _Attribute.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)\n  nameWithType: Attribute._Attribute.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)\n  fullName: Attribute._Attribute.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)\n- uid: System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)\n  parent: System.Attribute\n  isExternal: false\n  name: _Attribute.GetTypeInfo(UInt32, UInt32, IntPtr)\n  nameWithType: Attribute._Attribute.GetTypeInfo(UInt32, UInt32, IntPtr)\n  fullName: Attribute._Attribute.GetTypeInfo(UInt32, UInt32, IntPtr)\n- uid: System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)\n  parent: System.Attribute\n  isExternal: false\n  name: _Attribute.GetTypeInfoCount(UInt32)\n  nameWithType: Attribute._Attribute.GetTypeInfoCount(UInt32)\n  fullName: Attribute._Attribute.GetTypeInfoCount(UInt32)\n- uid: System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)\n  parent: System.Attribute\n  isExternal: false\n  name: _Attribute.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)\n  nameWithType: Attribute._Attribute.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)\n  fullName: Attribute._Attribute.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)\n"}