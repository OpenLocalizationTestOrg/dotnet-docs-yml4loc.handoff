{"nodes":[{"content":"Represents the base interface for all contracts that are used for communication between components that are updated independently.","nodes":[{"pos":[0,130],"content":"Represents the base interface for all contracts that are used for communication between components that are updated independently.","nodes":[{"content":"Represents the base interface for all contracts that are used for communication between components that are updated independently.","pos":[0,130]}]}],"pos":[741,872],"yaml":true},{"content":"The <xref:System.AddIn.Contract.IContract> interface defines a contract that independently updated components, such as an application and an add-in, can use to communicate. Components can use <xref:System.AddIn.Contract.IContract> to communicate across process or application domain boundaries, or to communicate with other components in the same process or application domain. <xref:System.AddIn.Contract.IContract> serves a similar purpose for components created using the .NET Framework as the `IUnknown` interface serves for components created using COM. To determine whether an object implements a particular contract, use the <xref:System.AddIn.Contract.IContract.QueryContract%2A> method.","nodes":[{"pos":[0,695],"content":"The <xref:System.AddIn.Contract.IContract> interface defines a contract that independently updated components, such as an application and an add-in, can use to communicate. Components can use <xref:System.AddIn.Contract.IContract> to communicate across process or application domain boundaries, or to communicate with other components in the same process or application domain. <xref:System.AddIn.Contract.IContract> serves a similar purpose for components created using the .NET Framework as the `IUnknown` interface serves for components created using COM. To determine whether an object implements a particular contract, use the <xref:System.AddIn.Contract.IContract.QueryContract%2A> method.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.AddIn.Contract.IContract&gt;</ph> interface defines a contract that independently updated components, such as an application and an add-in, can use to communicate.","pos":[0,172],"source":"The <xref:System.AddIn.Contract.IContract> interface defines a contract that independently updated components, such as an application and an add-in, can use to communicate."},{"content":"Components can use <ph id=\"ph1\">&lt;xref:System.AddIn.Contract.IContract&gt;</ph> to communicate across process or application domain boundaries, or to communicate with other components in the same process or application domain.","pos":[173,377],"source":" Components can use <xref:System.AddIn.Contract.IContract> to communicate across process or application domain boundaries, or to communicate with other components in the same process or application domain."},{"content":"<ph id=\"ph1\">&lt;xref:System.AddIn.Contract.IContract&gt;</ph> serves a similar purpose for components created using the .NET Framework as the <ph id=\"ph2\">`IUnknown`</ph> interface serves for components created using COM.","pos":[378,558],"source":" <xref:System.AddIn.Contract.IContract> serves a similar purpose for components created using the .NET Framework as the `IUnknown` interface serves for components created using COM."},{"content":"To determine whether an object implements a particular contract, use the <ph id=\"ph1\">&lt;xref:System.AddIn.Contract.IContract.QueryContract%2A&gt;</ph> method.","pos":[559,695],"source":" To determine whether an object implements a particular contract, use the <xref:System.AddIn.Contract.IContract.QueryContract%2A> method."}]}],"pos":[883,1579],"yaml":true,"extradata":"MT"},{"content":"Specifies that the contract is accessible to a client until the client revokes the contract.","nodes":[{"pos":[0,92],"content":"Specifies that the contract is accessible to a client until the client revokes the contract.","nodes":[{"content":"Specifies that the contract is accessible to a client until the client revokes the contract.","pos":[0,92]}]}],"pos":[3554,3647],"yaml":true},{"content":"Clients of an object that implements <xref:System.AddIn.Contract.IContract> call the <xref:System.AddIn.Contract.IContract.AcquireLifetimeToken%2A> method to notify the object that the client requires access to the contract. An <xref:System.AddIn.Contract.IContract> is guaranteed to be usable as long as at least one lifetime token that it passed to a client has not been revoked.  \n  \n To revoke a contract, clients call the <xref:System.AddIn.Contract.IContract.RevokeLifetimeToken%2A> method.","nodes":[{"pos":[0,381],"content":"Clients of an object that implements <xref:System.AddIn.Contract.IContract> call the <xref:System.AddIn.Contract.IContract.AcquireLifetimeToken%2A> method to notify the object that the client requires access to the contract. An <xref:System.AddIn.Contract.IContract> is guaranteed to be usable as long as at least one lifetime token that it passed to a client has not been revoked.","nodes":[{"content":"Clients of an object that implements <xref:System.AddIn.Contract.IContract> call the <xref:System.AddIn.Contract.IContract.AcquireLifetimeToken%2A> method to notify the object that the client requires access to the contract. An <xref:System.AddIn.Contract.IContract> is guaranteed to be usable as long as at least one lifetime token that it passed to a client has not been revoked.","pos":[0,381],"nodes":[{"content":"Clients of an object that implements <ph id=\"ph1\">&lt;xref:System.AddIn.Contract.IContract&gt;</ph> call the <ph id=\"ph2\">&lt;xref:System.AddIn.Contract.IContract.AcquireLifetimeToken%2A&gt;</ph> method to notify the object that the client requires access to the contract.","pos":[0,224],"source":"Clients of an object that implements <xref:System.AddIn.Contract.IContract> call the <xref:System.AddIn.Contract.IContract.AcquireLifetimeToken%2A> method to notify the object that the client requires access to the contract."},{"content":"An <ph id=\"ph1\">&lt;xref:System.AddIn.Contract.IContract&gt;</ph> is guaranteed to be usable as long as at least one lifetime token that it passed to a client has not been revoked.","pos":[225,381],"source":" An <xref:System.AddIn.Contract.IContract> is guaranteed to be usable as long as at least one lifetime token that it passed to a client has not been revoked."}]}]},{"pos":[388,496],"content":"To revoke a contract, clients call the <xref:System.AddIn.Contract.IContract.RevokeLifetimeToken%2A> method.","nodes":[{"content":"To revoke a contract, clients call the <ph id=\"ph1\">&lt;xref:System.AddIn.Contract.IContract.RevokeLifetimeToken%2A&gt;</ph> method.","pos":[0,108],"source":"To revoke a contract, clients call the <xref:System.AddIn.Contract.IContract.RevokeLifetimeToken%2A> method."}]}],"pos":[3658,4159],"yaml":true,"extradata":"MT"},{"content":"A value, also known as a lifetime token, that identifies the client that has acquired the contract.","nodes":[{"pos":[0,99],"content":"A value, also known as a lifetime token, that identifies the client that has acquired the contract.","nodes":[{"content":"A value, also known as a lifetime token, that identifies the client that has acquired the contract.","pos":[0,99]}]}],"pos":[4293,4393],"yaml":true},{"content":"Returns a hash code for the <xref href=\"System.AddIn.Contract.IContract\"></xref>.","nodes":[{"pos":[0,81],"content":"Returns a hash code for the <ph id=\"ph1\">&lt;xref href=\"System.AddIn.Contract.IContract\"&gt;&lt;/xref&gt;</ph>.","source":"Returns a hash code for the <xref href=\"System.AddIn.Contract.IContract\"></xref>."}],"pos":[5433,5515],"yaml":true},{"content":"A hash code for the <xref href=\"System.AddIn.Contract.IContract\"></xref>.","nodes":[{"pos":[0,73],"content":"A hash code for the <ph id=\"ph1\">&lt;xref href=\"System.AddIn.Contract.IContract\"&gt;&lt;/xref&gt;</ph>.","source":"A hash code for the <xref href=\"System.AddIn.Contract.IContract\"></xref>."}],"pos":[5646,5720],"yaml":true},{"content":"Returns a contract that is implemented by this contract.","nodes":[{"pos":[0,56],"content":"Returns a contract that is implemented by this contract.","nodes":[{"content":"Returns a contract that is implemented by this contract.","pos":[0,56]}]}],"pos":[6796,6853],"yaml":true},{"content":"The <xref:System.AddIn.Contract.IContract.QueryContract%2A> method enables <xref:System.AddIn.Contract.IContract> objects to expose other contracts. <xref:System.AddIn.Contract.IContract.QueryContract%2A> serves a purpose similar to that of the `IUnknown.QueryInterface` method in COM.  \n  \n The format of the strings used to identify contracts is defined by the <xref:System.AddIn.Contract.IContract> implementation. It is recommended that you use the <xref:System.Type.AssemblyQualifiedName%2A> of the contract that is being queried.","nodes":[{"pos":[0,285],"content":"The <xref:System.AddIn.Contract.IContract.QueryContract%2A> method enables <xref:System.AddIn.Contract.IContract> objects to expose other contracts. <xref:System.AddIn.Contract.IContract.QueryContract%2A> serves a purpose similar to that of the `IUnknown.QueryInterface` method in COM.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.AddIn.Contract.IContract.QueryContract%2A&gt;</ph> method enables <ph id=\"ph2\">&lt;xref:System.AddIn.Contract.IContract&gt;</ph> objects to expose other contracts.","pos":[0,148],"source":"The <xref:System.AddIn.Contract.IContract.QueryContract%2A> method enables <xref:System.AddIn.Contract.IContract> objects to expose other contracts."},{"content":"<ph id=\"ph1\">&lt;xref:System.AddIn.Contract.IContract.QueryContract%2A&gt;</ph> serves a purpose similar to that of the <ph id=\"ph2\">`IUnknown.QueryInterface`</ph> method in COM.","pos":[149,285],"source":" <xref:System.AddIn.Contract.IContract.QueryContract%2A> serves a purpose similar to that of the `IUnknown.QueryInterface` method in COM."}]},{"pos":[292,535],"content":"The format of the strings used to identify contracts is defined by the <xref:System.AddIn.Contract.IContract> implementation. It is recommended that you use the <xref:System.Type.AssemblyQualifiedName%2A> of the contract that is being queried.","nodes":[{"content":"The format of the strings used to identify contracts is defined by the <xref:System.AddIn.Contract.IContract> implementation. It is recommended that you use the <xref:System.Type.AssemblyQualifiedName%2A> of the contract that is being queried.","pos":[0,243],"nodes":[{"content":"The format of the strings used to identify contracts is defined by the <ph id=\"ph1\">&lt;xref:System.AddIn.Contract.IContract&gt;</ph> implementation.","pos":[0,125],"source":"The format of the strings used to identify contracts is defined by the <xref:System.AddIn.Contract.IContract> implementation."},{"content":"It is recommended that you use the <ph id=\"ph1\">&lt;xref:System.Type.AssemblyQualifiedName%2A&gt;</ph> of the contract that is being queried.","pos":[126,243],"source":" It is recommended that you use the <xref:System.Type.AssemblyQualifiedName%2A> of the contract that is being queried."}]}]}],"pos":[6864,7404],"yaml":true,"extradata":"MT"},{"content":"A string that identifies the contract that is being requested.","nodes":[{"pos":[0,62],"content":"A string that identifies the contract that is being requested.","nodes":[{"content":"A string that identifies the contract that is being requested.","pos":[0,62]}]}],"pos":[7599,7662],"yaml":true},{"content":"An <xref href=\"System.AddIn.Contract.IContract\"></xref> that represents a contract that a client is requesting from the current contract; `null` if the current contract does not support the contract that is requested.","nodes":[{"pos":[0,217],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.AddIn.Contract.IContract\"&gt;&lt;/xref&gt;</ph> that represents a contract that a client is requesting from the current contract; <ph id=\"ph2\">`null`</ph> if the current contract does not support the contract that is requested.","source":"An <xref href=\"System.AddIn.Contract.IContract\"></xref> that represents a contract that a client is requesting from the current contract; `null` if the current contract does not support the contract that is requested."}],"pos":[7737,7955],"yaml":true},{"content":"Indicates whether the specified contract is equal to this <xref href=\"System.AddIn.Contract.IContract\"></xref>.","nodes":[{"pos":[0,111],"content":"Indicates whether the specified contract is equal to this <ph id=\"ph1\">&lt;xref href=\"System.AddIn.Contract.IContract\"&gt;&lt;/xref&gt;</ph>.","source":"Indicates whether the specified contract is equal to this <xref href=\"System.AddIn.Contract.IContract\"></xref>."}],"pos":[9084,9196],"yaml":true},{"content":"The contract to compare with this <xref href=\"System.AddIn.Contract.IContract\"></xref>.","nodes":[{"pos":[0,87],"content":"The contract to compare with this <ph id=\"ph1\">&lt;xref href=\"System.AddIn.Contract.IContract\"&gt;&lt;/xref&gt;</ph>.","source":"The contract to compare with this <xref href=\"System.AddIn.Contract.IContract\"></xref>."}],"pos":[9386,9474],"yaml":true},{"content":"`true` if <code>contract</code> is equal to this <xref href=\"System.AddIn.Contract.IContract\"></xref>; otherwise, `false`.","nodes":[{"pos":[0,122],"content":"<ph id=\"ph1\">`true`</ph> if <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">contract</ph><ept id=\"p1\">&lt;/code&gt;</ept> is equal to this <ph id=\"ph3\">&lt;xref href=\"System.AddIn.Contract.IContract\"&gt;&lt;/xref&gt;</ph>; otherwise, <ph id=\"ph4\">`false`</ph>.","source":"`true` if <code>contract</code> is equal to this <xref href=\"System.AddIn.Contract.IContract\"></xref>; otherwise, `false`."}],"pos":[9532,9657],"yaml":true},{"content":"Returns a string representation of the current <xref href=\"System.AddIn.Contract.IContract\"></xref>.","nodes":[{"pos":[0,100],"content":"Returns a string representation of the current <ph id=\"ph1\">&lt;xref href=\"System.AddIn.Contract.IContract\"&gt;&lt;/xref&gt;</ph>.","source":"Returns a string representation of the current <xref href=\"System.AddIn.Contract.IContract\"></xref>."}],"pos":[10671,10772],"yaml":true},{"content":"A string representation of the current <xref href=\"System.AddIn.Contract.IContract\"></xref>.","nodes":[{"pos":[0,92],"content":"A string representation of the current <ph id=\"ph1\">&lt;xref href=\"System.AddIn.Contract.IContract\"&gt;&lt;/xref&gt;</ph>.","source":"A string representation of the current <xref href=\"System.AddIn.Contract.IContract\"></xref>."}],"pos":[10904,10997],"yaml":true},{"content":"Specifies that the contract is no longer accessible to a client.","nodes":[{"pos":[0,64],"content":"Specifies that the contract is no longer accessible to a client.","nodes":[{"content":"Specifies that the contract is no longer accessible to a client.","pos":[0,64]}]}],"pos":[12100,12165],"yaml":true},{"content":"Clients of an object that implements <xref:System.AddIn.Contract.IContract> call the <xref:System.AddIn.Contract.IContract.RevokeLifetimeToken%2A> method to notify the object that the client no longer needs the contract. An <xref:System.AddIn.Contract.IContract> is guaranteed to be usable as long as at least one lifetime token that it passed to a client has not been revoked.  \n  \n To acquire a contract, clients call the <xref:System.AddIn.Contract.IContract.AcquireLifetimeToken%2A> method.","nodes":[{"pos":[0,377],"content":"Clients of an object that implements <xref:System.AddIn.Contract.IContract> call the <xref:System.AddIn.Contract.IContract.RevokeLifetimeToken%2A> method to notify the object that the client no longer needs the contract. An <xref:System.AddIn.Contract.IContract> is guaranteed to be usable as long as at least one lifetime token that it passed to a client has not been revoked.","nodes":[{"content":"Clients of an object that implements <xref:System.AddIn.Contract.IContract> call the <xref:System.AddIn.Contract.IContract.RevokeLifetimeToken%2A> method to notify the object that the client no longer needs the contract. An <xref:System.AddIn.Contract.IContract> is guaranteed to be usable as long as at least one lifetime token that it passed to a client has not been revoked.","pos":[0,377],"nodes":[{"content":"Clients of an object that implements <ph id=\"ph1\">&lt;xref:System.AddIn.Contract.IContract&gt;</ph> call the <ph id=\"ph2\">&lt;xref:System.AddIn.Contract.IContract.RevokeLifetimeToken%2A&gt;</ph> method to notify the object that the client no longer needs the contract.","pos":[0,220],"source":"Clients of an object that implements <xref:System.AddIn.Contract.IContract> call the <xref:System.AddIn.Contract.IContract.RevokeLifetimeToken%2A> method to notify the object that the client no longer needs the contract."},{"content":"An <ph id=\"ph1\">&lt;xref:System.AddIn.Contract.IContract&gt;</ph> is guaranteed to be usable as long as at least one lifetime token that it passed to a client has not been revoked.","pos":[221,377],"source":" An <xref:System.AddIn.Contract.IContract> is guaranteed to be usable as long as at least one lifetime token that it passed to a client has not been revoked."}]}]},{"pos":[384,494],"content":"To acquire a contract, clients call the <xref:System.AddIn.Contract.IContract.AcquireLifetimeToken%2A> method.","nodes":[{"content":"To acquire a contract, clients call the <ph id=\"ph1\">&lt;xref:System.AddIn.Contract.IContract.AcquireLifetimeToken%2A&gt;</ph> method.","pos":[0,110],"source":"To acquire a contract, clients call the <xref:System.AddIn.Contract.IContract.AcquireLifetimeToken%2A> method."}]}],"pos":[12176,12675],"yaml":true,"extradata":"MT"},{"content":"A value, also known as a lifetime token, that identifies the client that is revoking the contract.","nodes":[{"pos":[0,98],"content":"A value, also known as a lifetime token, that identifies the client that is revoking the contract.","nodes":[{"content":"A value, also known as a lifetime token, that identifies the client that is revoking the contract.","pos":[0,98]}]}],"pos":[12819,12918],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.AddIn.Contract.IContract\n  commentId: T:System.AddIn.Contract.IContract\n  id: IContract\n  children:\n  - System.AddIn.Contract.IContract.AcquireLifetimeToken\n  - System.AddIn.Contract.IContract.GetRemoteHashCode\n  - System.AddIn.Contract.IContract.QueryContract(System.String)\n  - System.AddIn.Contract.IContract.RemoteEquals(System.AddIn.Contract.IContract)\n  - System.AddIn.Contract.IContract.RemoteToString\n  - System.AddIn.Contract.IContract.RevokeLifetimeToken(System.Int32)\n  langs:\n  - csharp\n  name: IContract\n  nameWithType: IContract\n  fullName: System.AddIn.Contract.IContract\n  type: Interface\n  assemblies:\n  - System.AddIn.Contract\n  namespace: System.AddIn.Contract\n  summary: Represents the base interface for all contracts that are used for communication between components that are updated independently.\n  remarks: The <xref:System.AddIn.Contract.IContract> interface defines a contract that independently updated components, such as an application and an add-in, can use to communicate. Components can use <xref:System.AddIn.Contract.IContract> to communicate across process or application domain boundaries, or to communicate with other components in the same process or application domain. <xref:System.AddIn.Contract.IContract> serves a similar purpose for components created using the .NET Framework as the `IUnknown` interface serves for components created using COM. To determine whether an object implements a particular contract, use the <xref:System.AddIn.Contract.IContract.QueryContract%2A> method.\n  syntax:\n    content: public interface IContract\n  derivedClasses:\n  - System.AddIn.Contract.IExecutorExtensionContract\n  - System.AddIn.Contract.IListContract`1\n  - System.AddIn.Contract.INativeHandleContract\n  - System.AddIn.Contract.IProfferServiceContract\n  - System.AddIn.Contract.IServiceProviderContract\n  - System.AddIn.Contract.Automation.IRemoteEventInfoContract\n  - System.AddIn.Contract.Automation.IRemoteFieldInfoContract\n  - System.AddIn.Contract.Automation.IRemoteMethodInfoContract\n  - System.AddIn.Contract.Automation.IRemoteObjectContract\n  - System.AddIn.Contract.Automation.IRemotePropertyInfoContract\n  - System.AddIn.Contract.Automation.IRemoteTypeContract\n  - System.AddIn.Contract.Collections.IEnumerableContract`1\n  - System.AddIn.Contract.Collections.IEnumeratorContract`1\n  - System.AddIn.Contract.Collections.IRemoteArgumentEnumerableContract\n  - System.AddIn.Contract.Collections.IRemoteArgumentEnumeratorContract\n  - System.AddIn.Pipeline.ContractBase\n  implements: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.AddIn.Contract/IContract.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.AddIn.Contract.IContract.AcquireLifetimeToken\n  commentId: M:System.AddIn.Contract.IContract.AcquireLifetimeToken\n  id: AcquireLifetimeToken\n  parent: System.AddIn.Contract.IContract\n  langs:\n  - csharp\n  name: AcquireLifetimeToken()\n  nameWithType: IContract.AcquireLifetimeToken()\n  fullName: IContract.AcquireLifetimeToken()\n  type: Method\n  assemblies:\n  - System.AddIn.Contract\n  namespace: System.AddIn.Contract\n  summary: Specifies that the contract is accessible to a client until the client revokes the contract.\n  remarks: \"Clients of an object that implements <xref:System.AddIn.Contract.IContract> call the <xref:System.AddIn.Contract.IContract.AcquireLifetimeToken%2A> method to notify the object that the client requires access to the contract. An <xref:System.AddIn.Contract.IContract> is guaranteed to be usable as long as at least one lifetime token that it passed to a client has not been revoked.  \\n  \\n To revoke a contract, clients call the <xref:System.AddIn.Contract.IContract.RevokeLifetimeToken%2A> method.\"\n  syntax:\n    content: public int AcquireLifetimeToken ();\n    parameters: []\n    return:\n      type: System.Int32\n      description: A value, also known as a lifetime token, that identifies the client that has acquired the contract.\n  overload: System.AddIn.Contract.IContract.AcquireLifetimeToken*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.AddIn.Contract/IContract.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.AddIn.Contract.IContract.GetRemoteHashCode\n  commentId: M:System.AddIn.Contract.IContract.GetRemoteHashCode\n  id: GetRemoteHashCode\n  parent: System.AddIn.Contract.IContract\n  langs:\n  - csharp\n  name: GetRemoteHashCode()\n  nameWithType: IContract.GetRemoteHashCode()\n  fullName: IContract.GetRemoteHashCode()\n  type: Method\n  assemblies:\n  - System.AddIn.Contract\n  namespace: System.AddIn.Contract\n  summary: Returns a hash code for the <xref href=\"System.AddIn.Contract.IContract\"></xref>.\n  syntax:\n    content: public int GetRemoteHashCode ();\n    parameters: []\n    return:\n      type: System.Int32\n      description: A hash code for the <xref href=\"System.AddIn.Contract.IContract\"></xref>.\n  overload: System.AddIn.Contract.IContract.GetRemoteHashCode*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.AddIn.Contract/IContract.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.AddIn.Contract.IContract.QueryContract(System.String)\n  commentId: M:System.AddIn.Contract.IContract.QueryContract(System.String)\n  id: QueryContract(System.String)\n  parent: System.AddIn.Contract.IContract\n  langs:\n  - csharp\n  name: QueryContract(String)\n  nameWithType: IContract.QueryContract(String)\n  fullName: IContract.QueryContract(String)\n  type: Method\n  assemblies:\n  - System.AddIn.Contract\n  namespace: System.AddIn.Contract\n  summary: Returns a contract that is implemented by this contract.\n  remarks: \"The <xref:System.AddIn.Contract.IContract.QueryContract%2A> method enables <xref:System.AddIn.Contract.IContract> objects to expose other contracts. <xref:System.AddIn.Contract.IContract.QueryContract%2A> serves a purpose similar to that of the `IUnknown.QueryInterface` method in COM.  \\n  \\n The format of the strings used to identify contracts is defined by the <xref:System.AddIn.Contract.IContract> implementation. It is recommended that you use the <xref:System.Type.AssemblyQualifiedName%2A> of the contract that is being queried.\"\n  syntax:\n    content: public System.AddIn.Contract.IContract QueryContract (string contractIdentifier);\n    parameters:\n    - id: contractIdentifier\n      type: System.String\n      description: A string that identifies the contract that is being requested.\n    return:\n      type: System.AddIn.Contract.IContract\n      description: An <xref href=\"System.AddIn.Contract.IContract\"></xref> that represents a contract that a client is requesting from the current contract; `null` if the current contract does not support the contract that is requested.\n  overload: System.AddIn.Contract.IContract.QueryContract*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.AddIn.Contract/IContract.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.AddIn.Contract.IContract.RemoteEquals(System.AddIn.Contract.IContract)\n  commentId: M:System.AddIn.Contract.IContract.RemoteEquals(System.AddIn.Contract.IContract)\n  id: RemoteEquals(System.AddIn.Contract.IContract)\n  parent: System.AddIn.Contract.IContract\n  langs:\n  - csharp\n  name: RemoteEquals(IContract)\n  nameWithType: IContract.RemoteEquals(IContract)\n  fullName: IContract.RemoteEquals(IContract)\n  type: Method\n  assemblies:\n  - System.AddIn.Contract\n  namespace: System.AddIn.Contract\n  summary: Indicates whether the specified contract is equal to this <xref href=\"System.AddIn.Contract.IContract\"></xref>.\n  syntax:\n    content: public bool RemoteEquals (System.AddIn.Contract.IContract contract);\n    parameters:\n    - id: contract\n      type: System.AddIn.Contract.IContract\n      description: The contract to compare with this <xref href=\"System.AddIn.Contract.IContract\"></xref>.\n    return:\n      type: System.Boolean\n      description: '`true` if <code>contract</code> is equal to this <xref href=\"System.AddIn.Contract.IContract\"></xref>; otherwise, `false`.'\n  overload: System.AddIn.Contract.IContract.RemoteEquals*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.AddIn.Contract/IContract.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.AddIn.Contract.IContract.RemoteToString\n  commentId: M:System.AddIn.Contract.IContract.RemoteToString\n  id: RemoteToString\n  parent: System.AddIn.Contract.IContract\n  langs:\n  - csharp\n  name: RemoteToString()\n  nameWithType: IContract.RemoteToString()\n  fullName: IContract.RemoteToString()\n  type: Method\n  assemblies:\n  - System.AddIn.Contract\n  namespace: System.AddIn.Contract\n  summary: Returns a string representation of the current <xref href=\"System.AddIn.Contract.IContract\"></xref>.\n  syntax:\n    content: public string RemoteToString ();\n    parameters: []\n    return:\n      type: System.String\n      description: A string representation of the current <xref href=\"System.AddIn.Contract.IContract\"></xref>.\n  overload: System.AddIn.Contract.IContract.RemoteToString*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.AddIn.Contract/IContract.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.AddIn.Contract.IContract.RevokeLifetimeToken(System.Int32)\n  commentId: M:System.AddIn.Contract.IContract.RevokeLifetimeToken(System.Int32)\n  id: RevokeLifetimeToken(System.Int32)\n  parent: System.AddIn.Contract.IContract\n  langs:\n  - csharp\n  name: RevokeLifetimeToken(Int32)\n  nameWithType: IContract.RevokeLifetimeToken(Int32)\n  fullName: IContract.RevokeLifetimeToken(Int32)\n  type: Method\n  assemblies:\n  - System.AddIn.Contract\n  namespace: System.AddIn.Contract\n  summary: Specifies that the contract is no longer accessible to a client.\n  remarks: \"Clients of an object that implements <xref:System.AddIn.Contract.IContract> call the <xref:System.AddIn.Contract.IContract.RevokeLifetimeToken%2A> method to notify the object that the client no longer needs the contract. An <xref:System.AddIn.Contract.IContract> is guaranteed to be usable as long as at least one lifetime token that it passed to a client has not been revoked.  \\n  \\n To acquire a contract, clients call the <xref:System.AddIn.Contract.IContract.AcquireLifetimeToken%2A> method.\"\n  syntax:\n    content: public void RevokeLifetimeToken (int token);\n    parameters:\n    - id: token\n      type: System.Int32\n      description: A value, also known as a lifetime token, that identifies the client that is revoking the contract.\n  overload: System.AddIn.Contract.IContract.RevokeLifetimeToken*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.AddIn.Contract/IContract.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\nreferences:\n- uid: System.AddIn.Contract.IContract.AcquireLifetimeToken\n  parent: System.AddIn.Contract.IContract\n  isExternal: false\n  name: AcquireLifetimeToken()\n  nameWithType: IContract.AcquireLifetimeToken()\n  fullName: IContract.AcquireLifetimeToken()\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.AddIn.Contract.IContract.GetRemoteHashCode\n  parent: System.AddIn.Contract.IContract\n  isExternal: false\n  name: GetRemoteHashCode()\n  nameWithType: IContract.GetRemoteHashCode()\n  fullName: IContract.GetRemoteHashCode()\n- uid: System.AddIn.Contract.IContract.QueryContract(System.String)\n  parent: System.AddIn.Contract.IContract\n  isExternal: false\n  name: QueryContract(String)\n  nameWithType: IContract.QueryContract(String)\n  fullName: IContract.QueryContract(String)\n- uid: System.AddIn.Contract.IContract\n  parent: System.AddIn.Contract\n  isExternal: false\n  name: IContract\n  nameWithType: IContract\n  fullName: System.AddIn.Contract.IContract\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.AddIn.Contract.IContract.RemoteEquals(System.AddIn.Contract.IContract)\n  parent: System.AddIn.Contract.IContract\n  isExternal: false\n  name: RemoteEquals(IContract)\n  nameWithType: IContract.RemoteEquals(IContract)\n  fullName: IContract.RemoteEquals(IContract)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.AddIn.Contract.IContract.RemoteToString\n  parent: System.AddIn.Contract.IContract\n  isExternal: false\n  name: RemoteToString()\n  nameWithType: IContract.RemoteToString()\n  fullName: IContract.RemoteToString()\n- uid: System.AddIn.Contract.IContract.RevokeLifetimeToken(System.Int32)\n  parent: System.AddIn.Contract.IContract\n  isExternal: false\n  name: RevokeLifetimeToken(Int32)\n  nameWithType: IContract.RevokeLifetimeToken(Int32)\n  fullName: IContract.RevokeLifetimeToken(Int32)\n- uid: System.AddIn.Contract.IContract.AcquireLifetimeToken*\n  parent: System.AddIn.Contract.IContract\n  isExternal: false\n  name: AcquireLifetimeToken\n  nameWithType: IContract.AcquireLifetimeToken\n  fullName: IContract.AcquireLifetimeToken\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.AddIn.Contract/IContract.xml\n- uid: System.AddIn.Contract.IContract.GetRemoteHashCode*\n  parent: System.AddIn.Contract.IContract\n  isExternal: false\n  name: GetRemoteHashCode\n  nameWithType: IContract.GetRemoteHashCode\n  fullName: IContract.GetRemoteHashCode\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.AddIn.Contract/IContract.xml\n- uid: System.AddIn.Contract.IContract.QueryContract*\n  parent: System.AddIn.Contract.IContract\n  isExternal: false\n  name: QueryContract\n  nameWithType: IContract.QueryContract\n  fullName: IContract.QueryContract\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.AddIn.Contract/IContract.xml\n- uid: System.AddIn.Contract.IContract.RemoteEquals*\n  parent: System.AddIn.Contract.IContract\n  isExternal: false\n  name: RemoteEquals\n  nameWithType: IContract.RemoteEquals\n  fullName: IContract.RemoteEquals\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.AddIn.Contract/IContract.xml\n- uid: System.AddIn.Contract.IContract.RemoteToString*\n  parent: System.AddIn.Contract.IContract\n  isExternal: false\n  name: RemoteToString\n  nameWithType: IContract.RemoteToString\n  fullName: IContract.RemoteToString\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.AddIn.Contract/IContract.xml\n- uid: System.AddIn.Contract.IContract.RevokeLifetimeToken*\n  parent: System.AddIn.Contract.IContract\n  isExternal: false\n  name: RevokeLifetimeToken\n  nameWithType: IContract.RevokeLifetimeToken\n  fullName: IContract.RevokeLifetimeToken\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.AddIn.Contract/IContract.xml\n"}