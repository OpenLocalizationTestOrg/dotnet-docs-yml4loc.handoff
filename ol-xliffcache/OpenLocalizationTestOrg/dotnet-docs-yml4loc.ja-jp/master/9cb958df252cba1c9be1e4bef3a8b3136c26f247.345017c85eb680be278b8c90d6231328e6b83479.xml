{"nodes":[{"content":"The `ComClassAttribute` attribute instructs the compiler to add metadata that allows a class to be exposed as a COM object.","nodes":[{"pos":[0,123],"content":"The <ph id=\"ph1\">`ComClassAttribute`</ph> attribute instructs the compiler to add metadata that allows a class to be exposed as a COM object.","source":"The `ComClassAttribute` attribute instructs the compiler to add metadata that allows a class to be exposed as a COM object."}],"pos":[914,1038],"yaml":true},{"content":"Use `ComClassAttribute` to simplify the process of exposing COM components from Visual Basic. COM objects are very different from .NET Framework assemblies; without the `ComClassAttribute`, you need to follow a number of steps to generate a COM object from Visual Basic. For classes marked with `ComClassAttribute`, the compiler performs many of these steps automatically.  \n  \n> [!NOTE]\n>  This attribute simplifies the creation of COM objects. To expose a class as a COM object, you must compile the project with the **Register for COM Interop** option selected in the **Build** section of the **Configuration Properties** dialog box.  \n  \n> [!NOTE]\n>  Although you can also expose a class created with Visual Basic as a COM object for unmanaged code to use, it is not a true COM object. For details, see [COM Interoperability in .NET Framework Applications](~/docs/visual-basic/programming-guide/com-interop/com-interoperability-in-net-framework-applications.md).","nodes":[{"pos":[0,372],"content":"Use `ComClassAttribute` to simplify the process of exposing COM components from Visual Basic. COM objects are very different from .NET Framework assemblies; without the `ComClassAttribute`, you need to follow a number of steps to generate a COM object from Visual Basic. For classes marked with `ComClassAttribute`, the compiler performs many of these steps automatically.","nodes":[{"content":"Use <ph id=\"ph1\">`ComClassAttribute`</ph> to simplify the process of exposing COM components from Visual Basic.","pos":[0,93],"source":"Use `ComClassAttribute` to simplify the process of exposing COM components from Visual Basic."},{"content":"COM objects are very different from .NET Framework assemblies; without the <ph id=\"ph1\">`ComClassAttribute`</ph>, you need to follow a number of steps to generate a COM object from Visual Basic.","pos":[94,270],"source":" COM objects are very different from .NET Framework assemblies; without the `ComClassAttribute`, you need to follow a number of steps to generate a COM object from Visual Basic."},{"content":"For classes marked with <ph id=\"ph1\">`ComClassAttribute`</ph>, the compiler performs many of these steps automatically.","pos":[271,372],"source":" For classes marked with `ComClassAttribute`, the compiler performs many of these steps automatically."}]},{"pos":[380,636],"content":"[!NOTE]\n This attribute simplifies the creation of COM objects. To expose a class as a COM object, you must compile the project with the **Register for COM Interop** option selected in the **Build** section of the **Configuration Properties** dialog box.","leadings":["","> "],"nodes":[{"content":" This attribute simplifies the creation of COM objects. To expose a class as a COM object, you must compile the project with the **Register for COM Interop** option selected in the **Build** section of the **Configuration Properties** dialog box.","pos":[8,254],"nodes":[{"content":"This attribute simplifies the creation of COM objects.","pos":[1,55]},{"content":"To expose a class as a COM object, you must compile the project with the <bpt id=\"p1\">**</bpt>Register for COM Interop<ept id=\"p1\">**</ept> option selected in the <bpt id=\"p2\">**</bpt>Build<ept id=\"p2\">**</ept> section of the <bpt id=\"p3\">**</bpt>Configuration Properties<ept id=\"p3\">**</ept> dialog box.","pos":[56,246],"source":" To expose a class as a COM object, you must compile the project with the **Register for COM Interop** option selected in the **Build** section of the **Configuration Properties** dialog box."}]}]},{"pos":[644,966],"content":"[!NOTE]\n Although you can also expose a class created with Visual Basic as a COM object for unmanaged code to use, it is not a true COM object. For details, see [COM Interoperability in .NET Framework Applications](~/docs/visual-basic/programming-guide/com-interop/com-interoperability-in-net-framework-applications.md).","leadings":["","> "],"nodes":[{"content":" Although you can also expose a class created with Visual Basic as a COM object for unmanaged code to use, it is not a true COM object. For details, see [COM Interoperability in .NET Framework Applications](~/docs/visual-basic/programming-guide/com-interop/com-interoperability-in-net-framework-applications.md).","pos":[8,320],"nodes":[{"content":"Although you can also expose a class created with Visual Basic as a COM object for unmanaged code to use, it is not a true COM object.","pos":[1,135]},{"content":"For details, see <bpt id=\"p1\">[</bpt>COM Interoperability in .NET Framework Applications<ept id=\"p1\">](~/docs/visual-basic/programming-guide/com-interop/com-interoperability-in-net-framework-applications.md)</ept>.","pos":[136,312],"source":" For details, see [COM Interoperability in .NET Framework Applications](~/docs/visual-basic/programming-guide/com-interop/com-interoperability-in-net-framework-applications.md)."}]}]}],"pos":[1049,2024],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the `ComClassAttribute` class.","nodes":[{"pos":[0,60],"content":"Initializes a new instance of the <ph id=\"ph1\">`ComClassAttribute`</ph> class.","source":"Initializes a new instance of the `ComClassAttribute` class."}],"pos":[7159,7220],"yaml":true},{"content":"Use the constructor for the `ComClassAttribute` class to set the `ClassID`, `InterfaceID`, or `EventID` properties when applying the `ComClassAttribute` to a class.","nodes":[{"pos":[0,164],"content":"Use the constructor for the <ph id=\"ph1\">`ComClassAttribute`</ph> class to set the <ph id=\"ph2\">`ClassID`</ph>, <ph id=\"ph3\">`InterfaceID`</ph>, or <ph id=\"ph4\">`EventID`</ph> properties when applying the <ph id=\"ph5\">`ComClassAttribute`</ph> to a class.","source":"Use the constructor for the `ComClassAttribute` class to set the `ClassID`, `InterfaceID`, or `EventID` properties when applying the `ComClassAttribute` to a class."}],"pos":[7231,7396],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the `ComClassAttribute` class.","nodes":[{"pos":[0,60],"content":"Initializes a new instance of the <ph id=\"ph1\">`ComClassAttribute`</ph> class.","source":"Initializes a new instance of the `ComClassAttribute` class."}],"pos":[8544,8605],"yaml":true},{"content":"Use the constructor for the `ComClassAttribute` class to set the `ClassID`, `InterfaceID`, or `EventID` properties when applying the `ComClassAttribute` to a class.","nodes":[{"pos":[0,164],"content":"Use the constructor for the <ph id=\"ph1\">`ComClassAttribute`</ph> class to set the <ph id=\"ph2\">`ClassID`</ph>, <ph id=\"ph3\">`InterfaceID`</ph>, or <ph id=\"ph4\">`EventID`</ph> properties when applying the <ph id=\"ph5\">`ComClassAttribute`</ph> to a class.","source":"Use the constructor for the `ComClassAttribute` class to set the `ClassID`, `InterfaceID`, or `EventID` properties when applying the `ComClassAttribute` to a class."}],"pos":[8616,8781],"yaml":true,"extradata":"MT"},{"content":"Initializes the value of the `ClassID` property that is used to uniquely identify a class.","nodes":[{"pos":[0,90],"content":"Initializes the value of the <ph id=\"ph1\">`ClassID`</ph> property that is used to uniquely identify a class.","source":"Initializes the value of the `ClassID` property that is used to uniquely identify a class."}],"pos":[8928,9019],"yaml":true},{"content":"Initializes a new instance of the `ComClassAttribute` class.","nodes":[{"pos":[0,60],"content":"Initializes a new instance of the <ph id=\"ph1\">`ComClassAttribute`</ph> class.","source":"Initializes a new instance of the `ComClassAttribute` class."}],"pos":[10162,10223],"yaml":true},{"content":"Use the constructor for the `ComClassAttribute` class to set the `ClassID`, `InterfaceID`, or `EventID` properties when applying the `ComClassAttribute` to a class.","nodes":[{"pos":[0,164],"content":"Use the constructor for the <ph id=\"ph1\">`ComClassAttribute`</ph> class to set the <ph id=\"ph2\">`ClassID`</ph>, <ph id=\"ph3\">`InterfaceID`</ph>, or <ph id=\"ph4\">`EventID`</ph> properties when applying the <ph id=\"ph5\">`ComClassAttribute`</ph> to a class.","source":"Use the constructor for the `ComClassAttribute` class to set the `ClassID`, `InterfaceID`, or `EventID` properties when applying the `ComClassAttribute` to a class."}],"pos":[10234,10399],"yaml":true,"extradata":"MT"},{"content":"Initializes the value of the `ClassID` property that is used to uniquely identify a class.","nodes":[{"pos":[0,90],"content":"Initializes the value of the <ph id=\"ph1\">`ClassID`</ph> property that is used to uniquely identify a class.","source":"Initializes the value of the `ClassID` property that is used to uniquely identify a class."}],"pos":[10567,10658],"yaml":true},{"content":"Initializes the value of the `InterfaceID` property that is used to uniquely identify an interface.","nodes":[{"pos":[0,99],"content":"Initializes the value of the <ph id=\"ph1\">`InterfaceID`</ph> property that is used to uniquely identify an interface.","source":"Initializes the value of the `InterfaceID` property that is used to uniquely identify an interface."}],"pos":[10726,10826],"yaml":true},{"content":"Initializes a new instance of the `ComClassAttribute` class.","nodes":[{"pos":[0,60],"content":"Initializes a new instance of the <ph id=\"ph1\">`ComClassAttribute`</ph> class.","source":"Initializes a new instance of the `ComClassAttribute` class."}],"pos":[12035,12096],"yaml":true},{"content":"Use the constructor for the `ComClassAttribute` class to set the `ClassID`, `InterfaceID`, or `EventID` properties when applying the `ComClassAttribute` to a class.","nodes":[{"pos":[0,164],"content":"Use the constructor for the <ph id=\"ph1\">`ComClassAttribute`</ph> class to set the <ph id=\"ph2\">`ClassID`</ph>, <ph id=\"ph3\">`InterfaceID`</ph>, or <ph id=\"ph4\">`EventID`</ph> properties when applying the <ph id=\"ph5\">`ComClassAttribute`</ph> to a class.","source":"Use the constructor for the `ComClassAttribute` class to set the `ClassID`, `InterfaceID`, or `EventID` properties when applying the `ComClassAttribute` to a class."}],"pos":[12107,12272],"yaml":true,"extradata":"MT"},{"content":"Initializes the value of the `ClassID` property that is used to uniquely identify a class.","nodes":[{"pos":[0,90],"content":"Initializes the value of the <ph id=\"ph1\">`ClassID`</ph> property that is used to uniquely identify a class.","source":"Initializes the value of the `ClassID` property that is used to uniquely identify a class."}],"pos":[12457,12548],"yaml":true},{"content":"Initializes the value of the `InterfaceID` property that is used to uniquely identify an interface.","nodes":[{"pos":[0,99],"content":"Initializes the value of the <ph id=\"ph1\">`InterfaceID`</ph> property that is used to uniquely identify an interface.","source":"Initializes the value of the `InterfaceID` property that is used to uniquely identify an interface."}],"pos":[12616,12716],"yaml":true},{"content":"Initializes the value of the `EventID` property that is used to uniquely identify an event.","nodes":[{"pos":[0,91],"content":"Initializes the value of the <ph id=\"ph1\">`EventID`</ph> property that is used to uniquely identify an event.","source":"Initializes the value of the `EventID` property that is used to uniquely identify an event."}],"pos":[12780,12872],"yaml":true},{"content":"Gets a class ID used to uniquely identify a class.","nodes":[{"pos":[0,50],"content":"Gets a class ID used to uniquely identify a class.","nodes":[{"content":"Gets a class ID used to uniquely identify a class.","pos":[0,50]}]}],"pos":[13851,13902],"yaml":true},{"content":"The constructor sets this property when the `ComClassAttribute` is applied to a class.","nodes":[{"pos":[0,86],"content":"The constructor sets this property when the <ph id=\"ph1\">`ComClassAttribute`</ph> is applied to a class.","source":"The constructor sets this property when the `ComClassAttribute` is applied to a class."}],"pos":[13913,14000],"yaml":true,"extradata":"MT"},{"content":"Read-only. A string that can be used by the compiler to uniquely identify the class when a COM object is created.","nodes":[{"pos":[0,113],"content":"Read-only. A string that can be used by the compiler to uniquely identify the class when a COM object is created.","nodes":[{"content":"Read-only. A string that can be used by the compiler to uniquely identify the class when a COM object is created.","pos":[0,113],"nodes":[{"content":"Read-only.","pos":[0,10]},{"content":"A string that can be used by the compiler to uniquely identify the class when a COM object is created.","pos":[11,113]}]}]}],"pos":[14111,14225],"yaml":true},{"content":"Gets an event ID used to uniquely identify an event.","nodes":[{"pos":[0,52],"content":"Gets an event ID used to uniquely identify an event.","nodes":[{"content":"Gets an event ID used to uniquely identify an event.","pos":[0,52]}]}],"pos":[15206,15259],"yaml":true},{"content":"The constructor sets this property when the `ComClassAttribute` is applied to a class.","nodes":[{"pos":[0,86],"content":"The constructor sets this property when the <ph id=\"ph1\">`ComClassAttribute`</ph> is applied to a class.","source":"The constructor sets this property when the `ComClassAttribute` is applied to a class."}],"pos":[15270,15357],"yaml":true,"extradata":"MT"},{"content":"Read only. A string that can be used by the compiler to uniquely identify an event for the class when a COM object is created.","nodes":[{"pos":[0,126],"content":"Read only. A string that can be used by the compiler to uniquely identify an event for the class when a COM object is created.","nodes":[{"content":"Read only. A string that can be used by the compiler to uniquely identify an event for the class when a COM object is created.","pos":[0,126],"nodes":[{"content":"Read only.","pos":[0,10]},{"content":"A string that can be used by the compiler to uniquely identify an event for the class when a COM object is created.","pos":[11,126]}]}]}],"pos":[15468,15595],"yaml":true},{"content":"Gets an interface ID used to uniquely identify an interface.","nodes":[{"pos":[0,60],"content":"Gets an interface ID used to uniquely identify an interface.","nodes":[{"content":"Gets an interface ID used to uniquely identify an interface.","pos":[0,60]}]}],"pos":[16600,16661],"yaml":true},{"content":"The constructor sets this property when the `ComClassAttribute` is applied to a class.","nodes":[{"pos":[0,86],"content":"The constructor sets this property when the <ph id=\"ph1\">`ComClassAttribute`</ph> is applied to a class.","source":"The constructor sets this property when the `ComClassAttribute` is applied to a class."}],"pos":[16672,16759],"yaml":true,"extradata":"MT"},{"content":"Read-only. A string that can be used by the compiler to uniquely identify an interface for the class when a COM object is created.","nodes":[{"pos":[0,130],"content":"Read-only. A string that can be used by the compiler to uniquely identify an interface for the class when a COM object is created.","nodes":[{"content":"Read-only. A string that can be used by the compiler to uniquely identify an interface for the class when a COM object is created.","pos":[0,130],"nodes":[{"content":"Read-only.","pos":[0,10]},{"content":"A string that can be used by the compiler to uniquely identify an interface for the class when a COM object is created.","pos":[11,130]}]}]}],"pos":[16874,17005],"yaml":true},{"content":"Indicates that the COM interface name shadows another member of the class or base class.","nodes":[{"pos":[0,88],"content":"Indicates that the COM interface name shadows another member of the class or base class.","nodes":[{"content":"Indicates that the COM interface name shadows another member of the class or base class.","pos":[0,88]}]}],"pos":[18044,18133],"yaml":true},{"content":"Shadowing is when a member uses the same name as another member.","nodes":[{"pos":[0,64],"content":"Shadowing is when a member uses the same name as another member.","nodes":[{"content":"Shadowing is when a member uses the same name as another member.","pos":[0,64]}]}],"pos":[18144,18209],"yaml":true,"extradata":"MT"},{"content":"A `Boolean` value that indicates that the COM interface name shadows another member of the class or base class.","nodes":[{"pos":[0,111],"content":"A <ph id=\"ph1\">`Boolean`</ph> value that indicates that the COM interface name shadows another member of the class or base class.","source":"A `Boolean` value that indicates that the COM interface name shadows another member of the class or base class."}],"pos":[18333,18445],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: Microsoft.VisualBasic.ComClassAttribute\n  commentId: T:Microsoft.VisualBasic.ComClassAttribute\n  id: ComClassAttribute\n  children:\n  - Microsoft.VisualBasic.ComClassAttribute.#ctor\n  - Microsoft.VisualBasic.ComClassAttribute.#ctor(System.String)\n  - Microsoft.VisualBasic.ComClassAttribute.#ctor(System.String,System.String)\n  - Microsoft.VisualBasic.ComClassAttribute.#ctor(System.String,System.String,System.String)\n  - Microsoft.VisualBasic.ComClassAttribute.ClassID\n  - Microsoft.VisualBasic.ComClassAttribute.EventID\n  - Microsoft.VisualBasic.ComClassAttribute.InterfaceID\n  - Microsoft.VisualBasic.ComClassAttribute.InterfaceShadows\n  langs:\n  - csharp\n  name: ComClassAttribute\n  nameWithType: ComClassAttribute\n  fullName: Microsoft.VisualBasic.ComClassAttribute\n  type: Class\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic\n  summary: The `ComClassAttribute` attribute instructs the compiler to add metadata that allows a class to be exposed as a COM object.\n  remarks: \"Use `ComClassAttribute` to simplify the process of exposing COM components from Visual Basic. COM objects are very different from .NET Framework assemblies; without the `ComClassAttribute`, you need to follow a number of steps to generate a COM object from Visual Basic. For classes marked with `ComClassAttribute`, the compiler performs many of these steps automatically.  \\n  \\n> [!NOTE]\\n>  This attribute simplifies the creation of COM objects. To expose a class as a COM object, you must compile the project with the **Register for COM Interop** option selected in the **Build** section of the **Configuration Properties** dialog box.  \\n  \\n> [!NOTE]\\n>  Although you can also expose a class created with Visual Basic as a COM object for unmanaged code to use, it is not a true COM object. For details, see [COM Interoperability in .NET Framework Applications](~/docs/visual-basic/programming-guide/com-interop/com-interoperability-in-net-framework-applications.md).\"\n  example:\n  - \"To run this example, create a new **Class Library** application and add the following code to a class module.  \\n  \\n [!code-vb[VbCnAttributes#21](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbCnAttributes/VB/Class2.vb#21)]\"\n  syntax:\n    content: >-\n      [System.AttributeUsage(System.AttributeTargets.Class, AllowMultiple=false, Inherited=false)]\n\n      public sealed class ComClassAttribute : Attribute\n  inheritance:\n  - System.Object\n  - System.Attribute\n  implements: []\n  inheritedMembers:\n  - System.Attribute.Equals(System.Object)\n  - System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type)\n  - System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)\n  - System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type)\n  - System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type)\n  - System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo)\n  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)\n  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Module)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo)\n  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type)\n  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  - System.Attribute.GetHashCode\n  - System.Attribute.IsDefaultAttribute\n  - System.Attribute.IsDefined(System.Reflection.Assembly,System.Type)\n  - System.Attribute.IsDefined(System.Reflection.Assembly,System.Type,System.Boolean)\n  - System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type)\n  - System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  - System.Attribute.IsDefined(System.Reflection.Module,System.Type)\n  - System.Attribute.IsDefined(System.Reflection.Module,System.Type,System.Boolean)\n  - System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type)\n  - System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  - System.Attribute.Match(System.Object)\n  - System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)\n  - System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)\n  - System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)\n  - System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)\n  - System.Attribute.TypeId\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  attributes:\n  - type: System.AttributeUsageAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic/ComClassAttribute.xml\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: Microsoft.VisualBasic.ComClassAttribute.#ctor\n  commentId: M:Microsoft.VisualBasic.ComClassAttribute.#ctor\n  id: '#ctor'\n  parent: Microsoft.VisualBasic.ComClassAttribute\n  langs:\n  - csharp\n  name: ComClassAttribute()\n  nameWithType: ComClassAttribute.ComClassAttribute()\n  fullName: ComClassAttribute.ComClassAttribute()\n  type: Constructor\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic\n  summary: Initializes a new instance of the `ComClassAttribute` class.\n  remarks: Use the constructor for the `ComClassAttribute` class to set the `ClassID`, `InterfaceID`, or `EventID` properties when applying the `ComClassAttribute` to a class.\n  syntax:\n    content: public ComClassAttribute ();\n    parameters: []\n  overload: Microsoft.VisualBasic.ComClassAttribute.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic/ComClassAttribute.xml\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: Microsoft.VisualBasic.ComClassAttribute.#ctor(System.String)\n  commentId: M:Microsoft.VisualBasic.ComClassAttribute.#ctor(System.String)\n  id: '#ctor(System.String)'\n  parent: Microsoft.VisualBasic.ComClassAttribute\n  langs:\n  - csharp\n  name: ComClassAttribute(String)\n  nameWithType: ComClassAttribute.ComClassAttribute(String)\n  fullName: ComClassAttribute.ComClassAttribute(String)\n  type: Constructor\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic\n  summary: Initializes a new instance of the `ComClassAttribute` class.\n  remarks: Use the constructor for the `ComClassAttribute` class to set the `ClassID`, `InterfaceID`, or `EventID` properties when applying the `ComClassAttribute` to a class.\n  syntax:\n    content: public ComClassAttribute (string _ClassID);\n    parameters:\n    - id: _ClassID\n      type: System.String\n      description: Initializes the value of the `ClassID` property that is used to uniquely identify a class.\n  overload: Microsoft.VisualBasic.ComClassAttribute.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic/ComClassAttribute.xml\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: Microsoft.VisualBasic.ComClassAttribute.#ctor(System.String,System.String)\n  commentId: M:Microsoft.VisualBasic.ComClassAttribute.#ctor(System.String,System.String)\n  id: '#ctor(System.String,System.String)'\n  parent: Microsoft.VisualBasic.ComClassAttribute\n  langs:\n  - csharp\n  name: ComClassAttribute(String, String)\n  nameWithType: ComClassAttribute.ComClassAttribute(String, String)\n  fullName: ComClassAttribute.ComClassAttribute(String, String)\n  type: Constructor\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic\n  summary: Initializes a new instance of the `ComClassAttribute` class.\n  remarks: Use the constructor for the `ComClassAttribute` class to set the `ClassID`, `InterfaceID`, or `EventID` properties when applying the `ComClassAttribute` to a class.\n  syntax:\n    content: public ComClassAttribute (string _ClassID, string _InterfaceID);\n    parameters:\n    - id: _ClassID\n      type: System.String\n      description: Initializes the value of the `ClassID` property that is used to uniquely identify a class.\n    - id: _InterfaceID\n      type: System.String\n      description: Initializes the value of the `InterfaceID` property that is used to uniquely identify an interface.\n  overload: Microsoft.VisualBasic.ComClassAttribute.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic/ComClassAttribute.xml\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: Microsoft.VisualBasic.ComClassAttribute.#ctor(System.String,System.String,System.String)\n  commentId: M:Microsoft.VisualBasic.ComClassAttribute.#ctor(System.String,System.String,System.String)\n  id: '#ctor(System.String,System.String,System.String)'\n  parent: Microsoft.VisualBasic.ComClassAttribute\n  langs:\n  - csharp\n  name: ComClassAttribute(String, String, String)\n  nameWithType: ComClassAttribute.ComClassAttribute(String, String, String)\n  fullName: ComClassAttribute.ComClassAttribute(String, String, String)\n  type: Constructor\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic\n  summary: Initializes a new instance of the `ComClassAttribute` class.\n  remarks: Use the constructor for the `ComClassAttribute` class to set the `ClassID`, `InterfaceID`, or `EventID` properties when applying the `ComClassAttribute` to a class.\n  syntax:\n    content: public ComClassAttribute (string _ClassID, string _InterfaceID, string _EventId);\n    parameters:\n    - id: _ClassID\n      type: System.String\n      description: Initializes the value of the `ClassID` property that is used to uniquely identify a class.\n    - id: _InterfaceID\n      type: System.String\n      description: Initializes the value of the `InterfaceID` property that is used to uniquely identify an interface.\n    - id: _EventId\n      type: System.String\n      description: Initializes the value of the `EventID` property that is used to uniquely identify an event.\n  overload: Microsoft.VisualBasic.ComClassAttribute.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic/ComClassAttribute.xml\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: Microsoft.VisualBasic.ComClassAttribute.ClassID\n  commentId: P:Microsoft.VisualBasic.ComClassAttribute.ClassID\n  id: ClassID\n  parent: Microsoft.VisualBasic.ComClassAttribute\n  langs:\n  - csharp\n  name: ClassID\n  nameWithType: ComClassAttribute.ClassID\n  fullName: ComClassAttribute.ClassID\n  type: Property\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic\n  summary: Gets a class ID used to uniquely identify a class.\n  remarks: The constructor sets this property when the `ComClassAttribute` is applied to a class.\n  syntax:\n    content: public string ClassID { get; }\n    return:\n      type: System.String\n      description: Read-only. A string that can be used by the compiler to uniquely identify the class when a COM object is created.\n  overload: Microsoft.VisualBasic.ComClassAttribute.ClassID*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic/ComClassAttribute.xml\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: Microsoft.VisualBasic.ComClassAttribute.EventID\n  commentId: P:Microsoft.VisualBasic.ComClassAttribute.EventID\n  id: EventID\n  parent: Microsoft.VisualBasic.ComClassAttribute\n  langs:\n  - csharp\n  name: EventID\n  nameWithType: ComClassAttribute.EventID\n  fullName: ComClassAttribute.EventID\n  type: Property\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic\n  summary: Gets an event ID used to uniquely identify an event.\n  remarks: The constructor sets this property when the `ComClassAttribute` is applied to a class.\n  syntax:\n    content: public string EventID { get; }\n    return:\n      type: System.String\n      description: Read only. A string that can be used by the compiler to uniquely identify an event for the class when a COM object is created.\n  overload: Microsoft.VisualBasic.ComClassAttribute.EventID*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic/ComClassAttribute.xml\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: Microsoft.VisualBasic.ComClassAttribute.InterfaceID\n  commentId: P:Microsoft.VisualBasic.ComClassAttribute.InterfaceID\n  id: InterfaceID\n  parent: Microsoft.VisualBasic.ComClassAttribute\n  langs:\n  - csharp\n  name: InterfaceID\n  nameWithType: ComClassAttribute.InterfaceID\n  fullName: ComClassAttribute.InterfaceID\n  type: Property\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic\n  summary: Gets an interface ID used to uniquely identify an interface.\n  remarks: The constructor sets this property when the `ComClassAttribute` is applied to a class.\n  syntax:\n    content: public string InterfaceID { get; }\n    return:\n      type: System.String\n      description: Read-only. A string that can be used by the compiler to uniquely identify an interface for the class when a COM object is created.\n  overload: Microsoft.VisualBasic.ComClassAttribute.InterfaceID*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic/ComClassAttribute.xml\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: Microsoft.VisualBasic.ComClassAttribute.InterfaceShadows\n  commentId: P:Microsoft.VisualBasic.ComClassAttribute.InterfaceShadows\n  id: InterfaceShadows\n  parent: Microsoft.VisualBasic.ComClassAttribute\n  langs:\n  - csharp\n  name: InterfaceShadows\n  nameWithType: ComClassAttribute.InterfaceShadows\n  fullName: ComClassAttribute.InterfaceShadows\n  type: Property\n  assemblies:\n  - Microsoft.VisualBasic\n  namespace: Microsoft.VisualBasic\n  summary: Indicates that the COM interface name shadows another member of the class or base class.\n  remarks: Shadowing is when a member uses the same name as another member.\n  syntax:\n    content: public bool InterfaceShadows { get; set; }\n    return:\n      type: System.Boolean\n      description: A `Boolean` value that indicates that the COM interface name shadows another member of the class or base class.\n  overload: Microsoft.VisualBasic.ComClassAttribute.InterfaceShadows*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic/ComClassAttribute.xml\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\nreferences:\n- uid: System.Attribute\n  parent: System\n  isExternal: false\n  name: Attribute\n  nameWithType: Attribute\n  fullName: System.Attribute\n- uid: Microsoft.VisualBasic.ComClassAttribute.#ctor\n  parent: Microsoft.VisualBasic.ComClassAttribute\n  isExternal: false\n  name: ComClassAttribute()\n  nameWithType: ComClassAttribute.ComClassAttribute()\n  fullName: ComClassAttribute.ComClassAttribute()\n- uid: Microsoft.VisualBasic.ComClassAttribute.#ctor(System.String)\n  parent: Microsoft.VisualBasic.ComClassAttribute\n  isExternal: false\n  name: ComClassAttribute(String)\n  nameWithType: ComClassAttribute.ComClassAttribute(String)\n  fullName: ComClassAttribute.ComClassAttribute(String)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: Microsoft.VisualBasic.ComClassAttribute.#ctor(System.String,System.String)\n  parent: Microsoft.VisualBasic.ComClassAttribute\n  isExternal: false\n  name: ComClassAttribute(String, String)\n  nameWithType: ComClassAttribute.ComClassAttribute(String, String)\n  fullName: ComClassAttribute.ComClassAttribute(String, String)\n- uid: Microsoft.VisualBasic.ComClassAttribute.#ctor(System.String,System.String,System.String)\n  parent: Microsoft.VisualBasic.ComClassAttribute\n  isExternal: false\n  name: ComClassAttribute(String, String, String)\n  nameWithType: ComClassAttribute.ComClassAttribute(String, String, String)\n  fullName: ComClassAttribute.ComClassAttribute(String, String, String)\n- uid: Microsoft.VisualBasic.ComClassAttribute.ClassID\n  parent: Microsoft.VisualBasic.ComClassAttribute\n  isExternal: false\n  name: ClassID\n  nameWithType: ComClassAttribute.ClassID\n  fullName: ComClassAttribute.ClassID\n- uid: Microsoft.VisualBasic.ComClassAttribute.EventID\n  parent: Microsoft.VisualBasic.ComClassAttribute\n  isExternal: false\n  name: EventID\n  nameWithType: ComClassAttribute.EventID\n  fullName: ComClassAttribute.EventID\n- uid: Microsoft.VisualBasic.ComClassAttribute.InterfaceID\n  parent: Microsoft.VisualBasic.ComClassAttribute\n  isExternal: false\n  name: InterfaceID\n  nameWithType: ComClassAttribute.InterfaceID\n  fullName: ComClassAttribute.InterfaceID\n- uid: Microsoft.VisualBasic.ComClassAttribute.InterfaceShadows\n  parent: Microsoft.VisualBasic.ComClassAttribute\n  isExternal: false\n  name: InterfaceShadows\n  nameWithType: ComClassAttribute.InterfaceShadows\n  fullName: ComClassAttribute.InterfaceShadows\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: Microsoft.VisualBasic.ComClassAttribute.#ctor*\n  parent: Microsoft.VisualBasic.ComClassAttribute\n  isExternal: false\n  name: ComClassAttribute\n  nameWithType: ComClassAttribute.ComClassAttribute\n  fullName: ComClassAttribute.ComClassAttribute\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic/ComClassAttribute.xml\n- uid: Microsoft.VisualBasic.ComClassAttribute.ClassID*\n  parent: Microsoft.VisualBasic.ComClassAttribute\n  isExternal: false\n  name: ClassID\n  nameWithType: ComClassAttribute.ClassID\n  fullName: ComClassAttribute.ClassID\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic/ComClassAttribute.xml\n- uid: Microsoft.VisualBasic.ComClassAttribute.EventID*\n  parent: Microsoft.VisualBasic.ComClassAttribute\n  isExternal: false\n  name: EventID\n  nameWithType: ComClassAttribute.EventID\n  fullName: ComClassAttribute.EventID\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic/ComClassAttribute.xml\n- uid: Microsoft.VisualBasic.ComClassAttribute.InterfaceID*\n  parent: Microsoft.VisualBasic.ComClassAttribute\n  isExternal: false\n  name: InterfaceID\n  nameWithType: ComClassAttribute.InterfaceID\n  fullName: ComClassAttribute.InterfaceID\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic/ComClassAttribute.xml\n- uid: Microsoft.VisualBasic.ComClassAttribute.InterfaceShadows*\n  parent: Microsoft.VisualBasic.ComClassAttribute\n  isExternal: false\n  name: InterfaceShadows\n  nameWithType: ComClassAttribute.InterfaceShadows\n  fullName: ComClassAttribute.InterfaceShadows\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic/ComClassAttribute.xml\n- uid: System.Attribute.Equals(System.Object)\n  parent: System.Attribute\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Attribute.Equals(Object)\n  fullName: Attribute.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Attribute.GetHashCode\n  parent: System.Attribute\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Attribute.GetHashCode()\n  fullName: Attribute.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(ParameterInfo, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttribute(ParameterInfo, Type, Boolean)\n  fullName: Attribute.GetCustomAttribute(ParameterInfo, Type, Boolean)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(MemberInfo, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttribute(MemberInfo, Type, Boolean)\n  fullName: Attribute.GetCustomAttribute(MemberInfo, Type, Boolean)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(Assembly, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttribute(Assembly, Type, Boolean)\n  fullName: Attribute.GetCustomAttribute(Assembly, Type, Boolean)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(Module, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttribute(Module, Type, Boolean)\n  fullName: Attribute.GetCustomAttribute(Module, Type, Boolean)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(Module, Type)\n  nameWithType: Attribute.GetCustomAttribute(Module, Type)\n  fullName: Attribute.GetCustomAttribute(Module, Type)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(MemberInfo, Type)\n  nameWithType: Attribute.GetCustomAttribute(MemberInfo, Type)\n  fullName: Attribute.GetCustomAttribute(MemberInfo, Type)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(Assembly, Type)\n  nameWithType: Attribute.GetCustomAttribute(Assembly, Type)\n  fullName: Attribute.GetCustomAttribute(Assembly, Type)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(ParameterInfo, Type)\n  nameWithType: Attribute.GetCustomAttribute(ParameterInfo, Type)\n  fullName: Attribute.GetCustomAttribute(ParameterInfo, Type)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Module, Type)\n  nameWithType: Attribute.GetCustomAttributes(Module, Type)\n  fullName: Attribute.GetCustomAttributes(Module, Type)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(ParameterInfo, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(ParameterInfo, Type, Boolean)\n  fullName: Attribute.GetCustomAttributes(ParameterInfo, Type, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Module, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(Module, Type, Boolean)\n  fullName: Attribute.GetCustomAttributes(Module, Type, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(MemberInfo, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(MemberInfo, Type, Boolean)\n  fullName: Attribute.GetCustomAttributes(MemberInfo, Type, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Assembly, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(Assembly, Type, Boolean)\n  fullName: Attribute.GetCustomAttributes(Assembly, Type, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(ParameterInfo, Type)\n  nameWithType: Attribute.GetCustomAttributes(ParameterInfo, Type)\n  fullName: Attribute.GetCustomAttributes(ParameterInfo, Type)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Module, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(Module, Boolean)\n  fullName: Attribute.GetCustomAttributes(Module, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(ParameterInfo, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(ParameterInfo, Boolean)\n  fullName: Attribute.GetCustomAttributes(ParameterInfo, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(MemberInfo, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(MemberInfo, Boolean)\n  fullName: Attribute.GetCustomAttributes(MemberInfo, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Assembly, Type)\n  nameWithType: Attribute.GetCustomAttributes(Assembly, Type)\n  fullName: Attribute.GetCustomAttributes(Assembly, Type)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Assembly, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(Assembly, Boolean)\n  fullName: Attribute.GetCustomAttributes(Assembly, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(ParameterInfo)\n  nameWithType: Attribute.GetCustomAttributes(ParameterInfo)\n  fullName: Attribute.GetCustomAttributes(ParameterInfo)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Module)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Module)\n  nameWithType: Attribute.GetCustomAttributes(Module)\n  fullName: Attribute.GetCustomAttributes(Module)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(MemberInfo)\n  nameWithType: Attribute.GetCustomAttributes(MemberInfo)\n  fullName: Attribute.GetCustomAttributes(MemberInfo)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Assembly)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Assembly)\n  nameWithType: Attribute.GetCustomAttributes(Assembly)\n  fullName: Attribute.GetCustomAttributes(Assembly)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(MemberInfo, Type)\n  nameWithType: Attribute.GetCustomAttributes(MemberInfo, Type)\n  fullName: Attribute.GetCustomAttributes(MemberInfo, Type)\n- uid: System.Attribute.IsDefaultAttribute\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefaultAttribute()\n  nameWithType: Attribute.IsDefaultAttribute()\n  fullName: Attribute.IsDefaultAttribute()\n- uid: System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(ParameterInfo, Type, Boolean)\n  nameWithType: Attribute.IsDefined(ParameterInfo, Type, Boolean)\n  fullName: Attribute.IsDefined(ParameterInfo, Type, Boolean)\n- uid: System.Attribute.IsDefined(System.Reflection.Module,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(Module, Type, Boolean)\n  nameWithType: Attribute.IsDefined(Module, Type, Boolean)\n  fullName: Attribute.IsDefined(Module, Type, Boolean)\n- uid: System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(MemberInfo, Type, Boolean)\n  nameWithType: Attribute.IsDefined(MemberInfo, Type, Boolean)\n  fullName: Attribute.IsDefined(MemberInfo, Type, Boolean)\n- uid: System.Attribute.IsDefined(System.Reflection.Assembly,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(Assembly, Type, Boolean)\n  nameWithType: Attribute.IsDefined(Assembly, Type, Boolean)\n  fullName: Attribute.IsDefined(Assembly, Type, Boolean)\n- uid: System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(MemberInfo, Type)\n  nameWithType: Attribute.IsDefined(MemberInfo, Type)\n  fullName: Attribute.IsDefined(MemberInfo, Type)\n- uid: System.Attribute.IsDefined(System.Reflection.Module,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(Module, Type)\n  nameWithType: Attribute.IsDefined(Module, Type)\n  fullName: Attribute.IsDefined(Module, Type)\n- uid: System.Attribute.IsDefined(System.Reflection.Assembly,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(Assembly, Type)\n  nameWithType: Attribute.IsDefined(Assembly, Type)\n  fullName: Attribute.IsDefined(Assembly, Type)\n- uid: System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(ParameterInfo, Type)\n  nameWithType: Attribute.IsDefined(ParameterInfo, Type)\n  fullName: Attribute.IsDefined(ParameterInfo, Type)\n- uid: System.Attribute.Match(System.Object)\n  parent: System.Attribute\n  isExternal: false\n  name: Match(Object)\n  nameWithType: Attribute.Match(Object)\n  fullName: Attribute.Match(Object)\n- uid: System.Attribute.TypeId\n  parent: System.Attribute\n  isExternal: false\n  name: TypeId\n  nameWithType: Attribute.TypeId\n  fullName: Attribute.TypeId\n- uid: System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)\n  parent: System.Attribute\n  isExternal: false\n  name: _Attribute.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)\n  nameWithType: Attribute._Attribute.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)\n  fullName: Attribute._Attribute.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)\n- uid: System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)\n  parent: System.Attribute\n  isExternal: false\n  name: _Attribute.GetTypeInfo(UInt32, UInt32, IntPtr)\n  nameWithType: Attribute._Attribute.GetTypeInfo(UInt32, UInt32, IntPtr)\n  fullName: Attribute._Attribute.GetTypeInfo(UInt32, UInt32, IntPtr)\n- uid: System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)\n  parent: System.Attribute\n  isExternal: false\n  name: _Attribute.GetTypeInfoCount(UInt32)\n  nameWithType: Attribute._Attribute.GetTypeInfoCount(UInt32)\n  fullName: Attribute._Attribute.GetTypeInfoCount(UInt32)\n- uid: System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)\n  parent: System.Attribute\n  isExternal: false\n  name: _Attribute.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)\n  nameWithType: Attribute._Attribute.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)\n  fullName: Attribute._Attribute.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)\n"}