{"nodes":[{"content":"Provides for immediate loading and filtering of related data.","nodes":[{"pos":[0,61],"content":"Provides for immediate loading and filtering of related data.","nodes":[{"content":"Provides for immediate loading and filtering of related data.","pos":[0,61]}]}],"pos":[1043,1105],"yaml":true},{"content":"## General  \n When you query for an object, you actually retrieve only the object you requested. The *related* objects are not automatically fetched at the same time. (For more information, see [Querying Across Relationships](~/docs/framework/data/adonet/sql/linq/querying-across-relationships.md).)  \n  \n The <xref:System.Data.Linq.DataLoadOptions> class provides two methods to achieve immediate loading of specified related data. The <xref:System.Data.Linq.DataLoadOptions.LoadWith%2A> method allows for immediate loading of data related to the main target. The <xref:System.Data.Linq.DataLoadOptions.AssociateWith%2A> method allows for filtering related objects.  \n  \n## Rules  \n Note the following rules regarding <xref:System.Data.Linq.DataLoadOptions> usage:  \n  \n-   Assigning a <xref:System.Data.Linq.DataLoadOptions> to a <xref:System.Data.Linq.DataContext> after the first query has been executed generates an exception.  \n  \n-   Modifying a <xref:System.Data.Linq.DataLoadOptions> after it has been assigned to a <xref:System.Data.Linq.DataContext> generates an exception  \n  \n## Cycle Handling  \n <xref:System.Data.Linq.DataLoadOptions.LoadWith%2A> and <xref:System.Data.Linq.DataLoadOptions.AssociateWith%2A> directives must not create cycles. The following represent examples of such graphs:  \n  \n-   Example 1: Self recursive  \n  \n    -   `dlo.LoadWith<Employee>(e => e.Reports);`  \n  \n-   Example 2: Back-pointers  \n  \n    -   `dlo.LoadWith <Customer>(c => C.Orders);`  \n  \n    -   `dlo.LoadWith <Order>(o => o.Customer);`  \n  \n-   Example 3: Longer cycles  \n  \n     Although this should not occur in a well-normalized model, it is possible.  \n  \n    -   `dlo.LoadWith <A>(a => a.Bs);`  \n  \n    -   `dlo.LoadWith <B>(b => b.Cs);`  \n  \n    -   `dlo.LoadWith <C>(c => c.As);`  \n  \n-   Example 4: Self recursive subQueries  \n  \n    -   `dlo.AssociateWith<A>(a=>a.As.Where(a=>a.Id=33));`  \n  \n-   Example 5: Longer recursive subqueries  \n  \n    -   `dlo.AssociateWith<A>(a=>a.Bs.Where(b=>b.Id==3));`  \n  \n    -   `dlo.AssociateWith<B>(b=>b.As.Where(a=>a.Id==3));`  \n  \n The following are some general rules that help you understand what occurs in these scenarios.  \n  \n **LoadWith** Each call to <xref:System.Data.Linq.DataLoadOptions.LoadWith%2A> checks whether cycles have been introduced into the graph. If there are, as in Examples 1, 2, and 3, an exception is thrown.  \n  \n **AssociateWith** The engine at run time does not apply the existing SubQuery clauses to the relationship inside the expression.  \n  \n-   In Example 4, the `Where` clause is executed against all `A`, not just the ones sub-filtered by the SubQuery expression itself (because that would be recursive)  \n  \n-   In Example 5, the first `Where` clause is applied to all the `B`s, even though there are subqueries on `B`. The second `Where` clause is applied to all the `A`s even though there are subqueries on `A`.","nodes":[{"pos":[3,10],"content":"General","linkify":"General","nodes":[{"content":"General","pos":[0,7]}]},{"pos":[14,299],"content":"When you query for an object, you actually retrieve only the object you requested. The *related* objects are not automatically fetched at the same time. (For more information, see [Querying Across Relationships](~/docs/framework/data/adonet/sql/linq/querying-across-relationships.md).)","nodes":[{"content":"When you query for an object, you actually retrieve only the object you requested.","pos":[0,82]},{"content":"The <bpt id=\"p1\">*</bpt>related<ept id=\"p1\">*</ept> objects are not automatically fetched at the same time.","pos":[83,152],"source":" The *related* objects are not automatically fetched at the same time."},{"content":"(For more information, see <bpt id=\"p1\">[</bpt>Querying Across Relationships<ept id=\"p1\">](~/docs/framework/data/adonet/sql/linq/querying-across-relationships.md)</ept>.)","pos":[153,285],"source":" (For more information, see [Querying Across Relationships](~/docs/framework/data/adonet/sql/linq/querying-across-relationships.md).)"}]},{"pos":[306,666],"content":"The <xref:System.Data.Linq.DataLoadOptions> class provides two methods to achieve immediate loading of specified related data. The <xref:System.Data.Linq.DataLoadOptions.LoadWith%2A> method allows for immediate loading of data related to the main target. The <xref:System.Data.Linq.DataLoadOptions.AssociateWith%2A> method allows for filtering related objects.","nodes":[{"content":"The <xref:System.Data.Linq.DataLoadOptions> class provides two methods to achieve immediate loading of specified related data. The <xref:System.Data.Linq.DataLoadOptions.LoadWith%2A> method allows for immediate loading of data related to the main target. The <xref:System.Data.Linq.DataLoadOptions.AssociateWith%2A> method allows for filtering related objects.","pos":[0,360],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Data.Linq.DataLoadOptions&gt;</ph> class provides two methods to achieve immediate loading of specified related data.","pos":[0,126],"source":"The <xref:System.Data.Linq.DataLoadOptions> class provides two methods to achieve immediate loading of specified related data."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Data.Linq.DataLoadOptions.LoadWith%2A&gt;</ph> method allows for immediate loading of data related to the main target.","pos":[127,254],"source":" The <xref:System.Data.Linq.DataLoadOptions.LoadWith%2A> method allows for immediate loading of data related to the main target."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Data.Linq.DataLoadOptions.AssociateWith%2A&gt;</ph> method allows for filtering related objects.","pos":[255,360],"source":" The <xref:System.Data.Linq.DataLoadOptions.AssociateWith%2A> method allows for filtering related objects."}]}]},{"pos":[675,680],"content":"Rules","linkify":"Rules","nodes":[{"content":"Rules","pos":[0,5]}]},{"pos":[684,765],"content":"Note the following rules regarding <xref:System.Data.Linq.DataLoadOptions> usage:","nodes":[{"content":"Note the following rules regarding <ph id=\"ph1\">&lt;xref:System.Data.Linq.DataLoadOptions&gt;</ph> usage:","pos":[0,81],"source":"Note the following rules regarding <xref:System.Data.Linq.DataLoadOptions> usage:"}]},{"pos":[775,931],"content":"Assigning a <xref:System.Data.Linq.DataLoadOptions> to a <xref:System.Data.Linq.DataContext> after the first query has been executed generates an exception.","nodes":[{"content":"Assigning a <ph id=\"ph1\">&lt;xref:System.Data.Linq.DataLoadOptions&gt;</ph> to a <ph id=\"ph2\">&lt;xref:System.Data.Linq.DataContext&gt;</ph> after the first query has been executed generates an exception.","pos":[0,156],"source":"Assigning a <xref:System.Data.Linq.DataLoadOptions> to a <xref:System.Data.Linq.DataContext> after the first query has been executed generates an exception."}]},{"pos":[941,1083],"content":"Modifying a <xref:System.Data.Linq.DataLoadOptions> after it has been assigned to a <xref:System.Data.Linq.DataContext> generates an exception","nodes":[{"content":"Modifying a <ph id=\"ph1\">&lt;xref:System.Data.Linq.DataLoadOptions&gt;</ph> after it has been assigned to a <ph id=\"ph2\">&lt;xref:System.Data.Linq.DataContext&gt;</ph> generates an exception","pos":[0,142],"source":"Modifying a <xref:System.Data.Linq.DataLoadOptions> after it has been assigned to a <xref:System.Data.Linq.DataContext> generates an exception"}]},{"pos":[1092,1106],"content":"Cycle Handling","linkify":"Cycle Handling","nodes":[{"content":"Cycle Handling","pos":[0,14]}]},{"pos":[1110,1306],"content":"<xref:System.Data.Linq.DataLoadOptions.LoadWith%2A> and <xref:System.Data.Linq.DataLoadOptions.AssociateWith%2A> directives must not create cycles. The following represent examples of such graphs:","nodes":[{"content":"<xref:System.Data.Linq.DataLoadOptions.LoadWith%2A> and <xref:System.Data.Linq.DataLoadOptions.AssociateWith%2A> directives must not create cycles. The following represent examples of such graphs:","pos":[0,196],"nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Data.Linq.DataLoadOptions.LoadWith%2A&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Data.Linq.DataLoadOptions.AssociateWith%2A&gt;</ph> directives must not create cycles.","pos":[0,147],"source":"<xref:System.Data.Linq.DataLoadOptions.LoadWith%2A> and <xref:System.Data.Linq.DataLoadOptions.AssociateWith%2A> directives must not create cycles."},{"content":"The following represent examples of such graphs:","pos":[148,196]}]}]},{"pos":[1316,1341],"content":"Example 1: Self recursive","nodes":[{"content":"Example 1: Self recursive","pos":[0,25]}]},{"pos":[1406,1430],"content":"Example 2: Back-pointers","nodes":[{"content":"Example 2: Back-pointers","pos":[0,24]}]},{"pos":[1549,1573],"content":"Example 3: Longer cycles","nodes":[{"content":"Example 3: Longer cycles","pos":[0,24]}]},{"pos":[1584,1658],"content":"Although this should not occur in a well-normalized model, it is possible.","nodes":[{"content":"Although this should not occur in a well-normalized model, it is possible.","pos":[0,74]}]},{"pos":[1800,1836],"content":"Example 4: Self recursive subQueries","nodes":[{"content":"Example 4: Self recursive subQueries","pos":[0,36]}]},{"pos":[1910,1948],"content":"Example 5: Longer recursive subqueries","nodes":[{"content":"Example 5: Longer recursive subqueries","pos":[0,38]}]},{"pos":[2083,2176],"content":"The following are some general rules that help you understand what occurs in these scenarios.","nodes":[{"content":"The following are some general rules that help you understand what occurs in these scenarios.","pos":[0,93]}]},{"pos":[2183,2385],"content":"**LoadWith** Each call to <xref:System.Data.Linq.DataLoadOptions.LoadWith%2A> checks whether cycles have been introduced into the graph. If there are, as in Examples 1, 2, and 3, an exception is thrown.","nodes":[{"content":"<bpt id=\"p1\">**</bpt>LoadWith<ept id=\"p1\">**</ept> Each call to <ph id=\"ph1\">&lt;xref:System.Data.Linq.DataLoadOptions.LoadWith%2A&gt;</ph> checks whether cycles have been introduced into the graph.","pos":[0,136],"source":"**LoadWith** Each call to <xref:System.Data.Linq.DataLoadOptions.LoadWith%2A> checks whether cycles have been introduced into the graph."},{"content":"If there are, as in Examples 1, 2, and 3, an exception is thrown.","pos":[137,202]}]},{"pos":[2392,2520],"content":"<bpt id=\"p1\">**</bpt>AssociateWith<ept id=\"p1\">**</ept> The engine at run time does not apply the existing SubQuery clauses to the relationship inside the expression.","source":"**AssociateWith** The engine at run time does not apply the existing SubQuery clauses to the relationship inside the expression."},{"pos":[2530,2690],"content":"In Example 4, the <ph id=\"ph1\">`Where`</ph> clause is executed against all <ph id=\"ph2\">`A`</ph>, not just the ones sub-filtered by the SubQuery expression itself (because that would be recursive)","source":"In Example 4, the `Where` clause is executed against all `A`, not just the ones sub-filtered by the SubQuery expression itself (because that would be recursive)"},{"pos":[2700,2901],"content":"In Example 5, the first `Where` clause is applied to all the `B`s, even though there are subqueries on `B`. The second `Where` clause is applied to all the `A`s even though there are subqueries on `A`.","nodes":[{"content":"In Example 5, the first <ph id=\"ph1\">`Where`</ph> clause is applied to all the <ph id=\"ph2\">`B`</ph>s, even though there are subqueries on <ph id=\"ph3\">`B`</ph>.","pos":[0,107],"source":"In Example 5, the first `Where` clause is applied to all the `B`s, even though there are subqueries on `B`."},{"content":"The second <ph id=\"ph1\">`Where`</ph> clause is applied to all the <ph id=\"ph2\">`A`</ph>s even though there are subqueries on <ph id=\"ph3\">`A`</ph>.","pos":[108,201],"source":" The second `Where` clause is applied to all the `A`s even though there are subqueries on `A`."}]}],"pos":[1116,4073],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.Data.Linq.DataLoadOptions\"></xref> class.","nodes":[{"pos":[0,94],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Data.Linq.DataLoadOptions\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.Data.Linq.DataLoadOptions\"></xref> class."}],"pos":[5685,5780],"yaml":true},{"content":"Filters the objects retrieved for a particular relationship.","nodes":[{"pos":[0,60],"content":"Filters the objects retrieved for a particular relationship.","nodes":[{"content":"Filters the objects retrieved for a particular relationship.","pos":[0,60]}]}],"pos":[7070,7131],"yaml":true},{"content":"In the following example, the inner loop iterates only over those `Orders` that have not been shipped today.","nodes":[{"pos":[0,108],"content":"In the following example, the inner loop iterates only over those <ph id=\"ph1\">`Orders`</ph> that have not been shipped today.","source":"In the following example, the inner loop iterates only over those `Orders` that have not been shipped today."}],"pos":[7142,7251],"yaml":true,"extradata":"MT"},{"content":"Identifies the query to be used on a particular one-to-many field or property. Note the following:  \n  \n If the expression does not start with a field or property that represents a one-to-many relationship, an exception is thrown.  \n  \n If an operator other than a valid operator appears in the expression, an exception is thrown. Valid operators are as follows:  \n  \n Where  \n  \n OrderBy  \n  \n ThenBy  \n  \n OrderByDescending  \n  \n ThenByDescending  \n  \n Take","nodes":[{"pos":[0,98],"content":"Identifies the query to be used on a particular one-to-many field or property. Note the following:","nodes":[{"content":"Identifies the query to be used on a particular one-to-many field or property. Note the following:","pos":[0,98],"nodes":[{"content":"Identifies the query to be used on a particular one-to-many field or property.","pos":[0,78]},{"content":"Note the following:","pos":[79,98]}]}]},{"pos":[105,230],"content":"If the expression does not start with a field or property that represents a one-to-many relationship, an exception is thrown.","nodes":[{"content":"If the expression does not start with a field or property that represents a one-to-many relationship, an exception is thrown.","pos":[0,125]}]},{"pos":[237,362],"content":"If an operator other than a valid operator appears in the expression, an exception is thrown. Valid operators are as follows:","nodes":[{"content":"If an operator other than a valid operator appears in the expression, an exception is thrown. Valid operators are as follows:","pos":[0,125],"nodes":[{"content":"If an operator other than a valid operator appears in the expression, an exception is thrown.","pos":[0,93]},{"content":"Valid operators are as follows:","pos":[94,125]}]}]},{"pos":[369,374],"content":"Where","nodes":[{"content":"Where","pos":[0,5]}]},{"pos":[381,388],"content":"OrderBy","nodes":[{"content":"OrderBy","pos":[0,7]}]},{"pos":[395,401],"content":"ThenBy","nodes":[{"content":"ThenBy","pos":[0,6]}]},{"pos":[408,425],"content":"OrderByDescending","nodes":[{"content":"OrderByDescending","pos":[0,17]}]},{"pos":[432,448],"content":"ThenByDescending","nodes":[{"content":"ThenByDescending","pos":[0,16]}]},{"pos":[455,459],"content":"Take","nodes":[{"content":"Take","pos":[0,4]}]}],"pos":[7780,8258],"yaml":true},{"content":"Filters objects retrieved for a particular relationship.","nodes":[{"pos":[0,56],"content":"Filters objects retrieved for a particular relationship.","nodes":[{"content":"Filters objects retrieved for a particular relationship.","pos":[0,56]}]}],"pos":[9613,9670],"yaml":true},{"content":"For information about how to avoid cycles, see <xref:System.Data.Linq.DataLoadOptions>.","nodes":[{"pos":[0,87],"content":"For information about how to avoid cycles, see <xref:System.Data.Linq.DataLoadOptions>.","nodes":[{"content":"For information about how to avoid cycles, see <ph id=\"ph1\">&lt;xref:System.Data.Linq.DataLoadOptions&gt;</ph>.","pos":[0,87],"source":"For information about how to avoid cycles, see <xref:System.Data.Linq.DataLoadOptions>."}]}],"pos":[9681,9769],"yaml":true,"extradata":"MT"},{"content":"Identifies the query to be used on a particular one-to-many field or property. Note the following:  \n  \n If the expression does not start with a field or property that represents a one-to-many relationship, an exception is thrown.  \n  \n If an operator other than a valid operator appears in the expression, an exception is thrown. Valid operators are as follows:  \n  \n Where  \n  \n OrderBy  \n  \n ThenBy  \n  \n OrderByDescending  \n  \n ThenByDescending  \n  \n Take","nodes":[{"pos":[0,98],"content":"Identifies the query to be used on a particular one-to-many field or property. Note the following:","nodes":[{"content":"Identifies the query to be used on a particular one-to-many field or property. Note the following:","pos":[0,98],"nodes":[{"content":"Identifies the query to be used on a particular one-to-many field or property.","pos":[0,78]},{"content":"Note the following:","pos":[79,98]}]}]},{"pos":[105,230],"content":"If the expression does not start with a field or property that represents a one-to-many relationship, an exception is thrown.","nodes":[{"content":"If the expression does not start with a field or property that represents a one-to-many relationship, an exception is thrown.","pos":[0,125]}]},{"pos":[237,362],"content":"If an operator other than a valid operator appears in the expression, an exception is thrown. Valid operators are as follows:","nodes":[{"content":"If an operator other than a valid operator appears in the expression, an exception is thrown. Valid operators are as follows:","pos":[0,125],"nodes":[{"content":"If an operator other than a valid operator appears in the expression, an exception is thrown.","pos":[0,93]},{"content":"Valid operators are as follows:","pos":[94,125]}]}]},{"pos":[369,374],"content":"Where","nodes":[{"content":"Where","pos":[0,5]}]},{"pos":[381,388],"content":"OrderBy","nodes":[{"content":"OrderBy","pos":[0,7]}]},{"pos":[395,401],"content":"ThenBy","nodes":[{"content":"ThenBy","pos":[0,6]}]},{"pos":[408,425],"content":"OrderByDescending","nodes":[{"content":"OrderByDescending","pos":[0,17]}]},{"pos":[432,448],"content":"ThenByDescending","nodes":[{"content":"ThenByDescending","pos":[0,16]}]},{"pos":[455,459],"content":"Take","nodes":[{"content":"Take","pos":[0,4]}]}],"pos":[10444,10922],"yaml":true},{"content":"The type that is queried against.  \n  \n If the type is unmapped, an exception is thrown.","nodes":[{"pos":[0,33],"content":"The type that is queried against.","nodes":[{"content":"The type that is queried against.","pos":[0,33]}]},{"pos":[40,88],"content":"If the type is unmapped, an exception is thrown.","nodes":[{"content":"If the type is unmapped, an exception is thrown.","pos":[0,48]}]}],"pos":[10973,11066],"yaml":true},{"content":"Retrieves specified data related to the main target by using a lambda expression.","nodes":[{"pos":[0,81],"content":"Retrieves specified data related to the main target by using a lambda expression.","nodes":[{"content":"Retrieves specified data related to the main target by using a lambda expression.","pos":[0,81]}]}],"pos":[14693,14775],"yaml":true},{"content":"In the following example, all the `Orders` for all the `Customers` who are located in London are retrieved when the query is executed. As a result, successive access to the `Orders` property on a `Customer` object does not trigger a new database query.","nodes":[{"pos":[0,252],"content":"In the following example, all the `Orders` for all the `Customers` who are located in London are retrieved when the query is executed. As a result, successive access to the `Orders` property on a `Customer` object does not trigger a new database query.","nodes":[{"content":"In the following example, all the <ph id=\"ph1\">`Orders`</ph> for all the <ph id=\"ph2\">`Customers`</ph> who are located in London are retrieved when the query is executed.","pos":[0,134],"source":"In the following example, all the `Orders` for all the `Customers` who are located in London are retrieved when the query is executed."},{"content":"As a result, successive access to the <ph id=\"ph1\">`Orders`</ph> property on a <ph id=\"ph2\">`Customer`</ph> object does not trigger a new database query.","pos":[135,252],"source":" As a result, successive access to the `Orders` property on a `Customer` object does not trigger a new database query."}]}],"pos":[14786,15039],"yaml":true,"extradata":"MT"},{"content":"A lambda expression that identifies the related material.","nodes":[{"pos":[0,57],"content":"A lambda expression that identifies the related material.","nodes":[{"content":"A lambda expression that identifies the related material.","pos":[0,57]}]}],"pos":[15563,15621],"yaml":true},{"content":"Specifies which sub-objects to retrieve when a query is submitted for an object of type T.","nodes":[{"pos":[0,90],"content":"Specifies which sub-objects to retrieve when a query is submitted for an object of type T.","nodes":[{"content":"Specifies which sub-objects to retrieve when a query is submitted for an object of type T.","pos":[0,90]}]}],"pos":[16941,17032],"yaml":true},{"content":"You cannot specify the loading of two levels of relationships (for example, `Orders.OrderDetails`). In these scenarios you must specify two separate <xref:System.Data.Linq.DataLoadOptions.LoadWith%2A> methods.  \n  \n To avoid cycling, see Remarks section in <xref:System.Data.Linq.DataLoadOptions>.","nodes":[{"pos":[0,209],"content":"You cannot specify the loading of two levels of relationships (for example, `Orders.OrderDetails`). In these scenarios you must specify two separate <xref:System.Data.Linq.DataLoadOptions.LoadWith%2A> methods.","nodes":[{"content":"You cannot specify the loading of two levels of relationships (for example, <ph id=\"ph1\">`Orders.OrderDetails`</ph>).","pos":[0,99],"source":"You cannot specify the loading of two levels of relationships (for example, `Orders.OrderDetails`)."},{"content":"In these scenarios you must specify two separate <ph id=\"ph1\">&lt;xref:System.Data.Linq.DataLoadOptions.LoadWith%2A&gt;</ph> methods.","pos":[100,209],"source":" In these scenarios you must specify two separate <xref:System.Data.Linq.DataLoadOptions.LoadWith%2A> methods."}]},{"pos":[216,297],"content":"To avoid cycling, see Remarks section in <xref:System.Data.Linq.DataLoadOptions>.","nodes":[{"content":"To avoid cycling, see Remarks section in <ph id=\"ph1\">&lt;xref:System.Data.Linq.DataLoadOptions&gt;</ph>.","pos":[0,81],"source":"To avoid cycling, see Remarks section in <xref:System.Data.Linq.DataLoadOptions>."}]}],"pos":[17043,17345],"yaml":true,"extradata":"MT"},{"content":"Identifies the field or property to be retrieved.  \n  \n If the expression does not identify a field or property that represents a one-to-one or one-to-many relationship, an exception is thrown.","nodes":[{"pos":[0,49],"content":"Identifies the field or property to be retrieved.","nodes":[{"content":"Identifies the field or property to be retrieved.","pos":[0,49]}]},{"pos":[56,193],"content":"If the expression does not identify a field or property that represents a one-to-one or one-to-many relationship, an exception is thrown.","nodes":[{"content":"If the expression does not identify a field or property that represents a one-to-one or one-to-many relationship, an exception is thrown.","pos":[0,137]}]}],"pos":[18159,18357],"yaml":true},{"content":"Type that is queried against.  \n  \n If this type is unmapped, an exception is thrown.","nodes":[{"pos":[0,29],"content":"Type that is queried against.","nodes":[{"content":"Type that is queried against.","pos":[0,29]}]},{"pos":[36,85],"content":"If this type is unmapped, an exception is thrown.","nodes":[{"content":"If this type is unmapped, an exception is thrown.","pos":[0,49]}]}],"pos":[18408,18498],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Data.Linq.DataLoadOptions\n  commentId: T:System.Data.Linq.DataLoadOptions\n  id: DataLoadOptions\n  children:\n  - System.Data.Linq.DataLoadOptions.#ctor\n  - System.Data.Linq.DataLoadOptions.AssociateWith(System.Linq.Expressions.LambdaExpression)\n  - System.Data.Linq.DataLoadOptions.AssociateWith``1(System.Linq.Expressions.Expression{System.Func{``0,System.Object}})\n  - System.Data.Linq.DataLoadOptions.GetAssociationCriteria(System.Reflection.MemberInfo,System.Linq.Expressions.LambdaExpression@)\n  - System.Data.Linq.DataLoadOptions.IsImmediate(System.Reflection.MemberInfo)\n  - System.Data.Linq.DataLoadOptions.LoadWith(System.Linq.Expressions.LambdaExpression)\n  - System.Data.Linq.DataLoadOptions.LoadWith``1(System.Linq.Expressions.Expression{System.Func{``0,System.Object}})\n  langs:\n  - csharp\n  name: DataLoadOptions\n  nameWithType: DataLoadOptions\n  fullName: System.Data.Linq.DataLoadOptions\n  type: Class\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq\n  summary: Provides for immediate loading and filtering of related data.\n  remarks: \"## General  \\n When you query for an object, you actually retrieve only the object you requested. The *related* objects are not automatically fetched at the same time. (For more information, see [Querying Across Relationships](~/docs/framework/data/adonet/sql/linq/querying-across-relationships.md).)  \\n  \\n The <xref:System.Data.Linq.DataLoadOptions> class provides two methods to achieve immediate loading of specified related data. The <xref:System.Data.Linq.DataLoadOptions.LoadWith%2A> method allows for immediate loading of data related to the main target. The <xref:System.Data.Linq.DataLoadOptions.AssociateWith%2A> method allows for filtering related objects.  \\n  \\n## Rules  \\n Note the following rules regarding <xref:System.Data.Linq.DataLoadOptions> usage:  \\n  \\n-   Assigning a <xref:System.Data.Linq.DataLoadOptions> to a <xref:System.Data.Linq.DataContext> after the first query has been executed generates an exception.  \\n  \\n-   Modifying a <xref:System.Data.Linq.DataLoadOptions> after it has been assigned to a <xref:System.Data.Linq.DataContext> generates an exception  \\n  \\n## Cycle Handling  \\n <xref:System.Data.Linq.DataLoadOptions.LoadWith%2A> and <xref:System.Data.Linq.DataLoadOptions.AssociateWith%2A> directives must not create cycles. The following represent examples of such graphs:  \\n  \\n-   Example 1: Self recursive  \\n  \\n    -   `dlo.LoadWith<Employee>(e => e.Reports);`  \\n  \\n-   Example 2: Back-pointers  \\n  \\n    -   `dlo.LoadWith <Customer>(c => C.Orders);`  \\n  \\n    -   `dlo.LoadWith <Order>(o => o.Customer);`  \\n  \\n-   Example 3: Longer cycles  \\n  \\n     Although this should not occur in a well-normalized model, it is possible.  \\n  \\n    -   `dlo.LoadWith <A>(a => a.Bs);`  \\n  \\n    -   `dlo.LoadWith <B>(b => b.Cs);`  \\n  \\n    -   `dlo.LoadWith <C>(c => c.As);`  \\n  \\n-   Example 4: Self recursive subQueries  \\n  \\n    -   `dlo.AssociateWith<A>(a=>a.As.Where(a=>a.Id=33));`  \\n  \\n-   Example 5: Longer recursive subqueries  \\n  \\n    -   `dlo.AssociateWith<A>(a=>a.Bs.Where(b=>b.Id==3));`  \\n  \\n    -   `dlo.AssociateWith<B>(b=>b.As.Where(a=>a.Id==3));`  \\n  \\n The following are some general rules that help you understand what occurs in these scenarios.  \\n  \\n **LoadWith** Each call to <xref:System.Data.Linq.DataLoadOptions.LoadWith%2A> checks whether cycles have been introduced into the graph. If there are, as in Examples 1, 2, and 3, an exception is thrown.  \\n  \\n **AssociateWith** The engine at run time does not apply the existing SubQuery clauses to the relationship inside the expression.  \\n  \\n-   In Example 4, the `Where` clause is executed against all `A`, not just the ones sub-filtered by the SubQuery expression itself (because that would be recursive)  \\n  \\n-   In Example 5, the first `Where` clause is applied to all the `B`s, even though there are subqueries on `B`. The second `Where` clause is applied to all the `A`s even though there are subqueries on `A`.\"\n  example:\n  - When you retrieve `Customers` from the Northwind sample database, you can use <xref:System.Data.Linq.DataLoadOptions> to specify that `Orders` is also to be retrieved. You can even specify which subset of `Orders` to retrieve.\n  syntax:\n    content: public sealed class DataLoadOptions\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq/DataLoadOptions.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Linq.DataLoadOptions.#ctor\n  commentId: M:System.Data.Linq.DataLoadOptions.#ctor\n  id: '#ctor'\n  parent: System.Data.Linq.DataLoadOptions\n  langs:\n  - csharp\n  name: DataLoadOptions()\n  nameWithType: DataLoadOptions.DataLoadOptions()\n  fullName: DataLoadOptions.DataLoadOptions()\n  type: Constructor\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq\n  summary: Initializes a new instance of the <xref href=\"System.Data.Linq.DataLoadOptions\"></xref> class.\n  syntax:\n    content: public DataLoadOptions ();\n    parameters: []\n  overload: System.Data.Linq.DataLoadOptions.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq/DataLoadOptions.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Linq.DataLoadOptions.AssociateWith(System.Linq.Expressions.LambdaExpression)\n  commentId: M:System.Data.Linq.DataLoadOptions.AssociateWith(System.Linq.Expressions.LambdaExpression)\n  id: AssociateWith(System.Linq.Expressions.LambdaExpression)\n  parent: System.Data.Linq.DataLoadOptions\n  langs:\n  - csharp\n  name: AssociateWith(LambdaExpression)\n  nameWithType: DataLoadOptions.AssociateWith(LambdaExpression)\n  fullName: DataLoadOptions.AssociateWith(LambdaExpression)\n  type: Method\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq\n  summary: Filters the objects retrieved for a particular relationship.\n  remarks: In the following example, the inner loop iterates only over those `Orders` that have not been shipped today.\n  example:\n  - >-\n    [!code-csharp[System.Data.Linq.DataLoadOptions#1](~/samples/snippets/csharp/VS_Snippets_Data/system.data.linq.dataloadoptions/cs/program.cs#1)]\n     [!code-vb[System.Data.Linq.DataLoadOptions#1](~/samples/snippets/visualbasic/VS_Snippets_Data/system.data.linq.dataloadoptions/vb/module1.vb#1)]\n  syntax:\n    content: public void AssociateWith (System.Linq.Expressions.LambdaExpression expression);\n    parameters:\n    - id: expression\n      type: System.Linq.Expressions.LambdaExpression\n      description: \"Identifies the query to be used on a particular one-to-many field or property. Note the following:  \\n  \\n If the expression does not start with a field or property that represents a one-to-many relationship, an exception is thrown.  \\n  \\n If an operator other than a valid operator appears in the expression, an exception is thrown. Valid operators are as follows:  \\n  \\n Where  \\n  \\n OrderBy  \\n  \\n ThenBy  \\n  \\n OrderByDescending  \\n  \\n ThenByDescending  \\n  \\n Take\"\n  overload: System.Data.Linq.DataLoadOptions.AssociateWith*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq/DataLoadOptions.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Linq.DataLoadOptions.AssociateWith``1(System.Linq.Expressions.Expression{System.Func{``0,System.Object}})\n  commentId: M:System.Data.Linq.DataLoadOptions.AssociateWith``1(System.Linq.Expressions.Expression{System.Func{``0,System.Object}})\n  id: AssociateWith``1(System.Linq.Expressions.Expression{System.Func{``0,System.Object}})\n  parent: System.Data.Linq.DataLoadOptions\n  langs:\n  - csharp\n  name: AssociateWith<T>(Expression<Func<T,Object>>)\n  nameWithType: DataLoadOptions.AssociateWith<T>(Expression<Func<T,Object>>)\n  fullName: DataLoadOptions.AssociateWith<T>(Expression<Func<T,Object>>)\n  type: Method\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq\n  summary: Filters objects retrieved for a particular relationship.\n  remarks: For information about how to avoid cycles, see <xref:System.Data.Linq.DataLoadOptions>.\n  example:\n  - \"In the following example, the inner loop iterates only over those `Orders` that have not been shipped today.  \\n  \\n [!code-csharp[System.Data.Linq.DataLoadOptions#1](~/samples/snippets/csharp/VS_Snippets_Data/system.data.linq.dataloadoptions/cs/program.cs#1)]\\n [!code-vb[System.Data.Linq.DataLoadOptions#1](~/samples/snippets/visualbasic/VS_Snippets_Data/system.data.linq.dataloadoptions/vb/module1.vb#1)]\"\n  syntax:\n    content: public void AssociateWith<T> (System.Linq.Expressions.Expression<Func<T,object>> expression);\n    parameters:\n    - id: expression\n      type: System.Linq.Expressions.Expression{System.Func{T,System.Object}}\n      description: \"Identifies the query to be used on a particular one-to-many field or property. Note the following:  \\n  \\n If the expression does not start with a field or property that represents a one-to-many relationship, an exception is thrown.  \\n  \\n If an operator other than a valid operator appears in the expression, an exception is thrown. Valid operators are as follows:  \\n  \\n Where  \\n  \\n OrderBy  \\n  \\n ThenBy  \\n  \\n OrderByDescending  \\n  \\n ThenByDescending  \\n  \\n Take\"\n    typeParameters:\n    - id: T\n      description: \"The type that is queried against.  \\n  \\n If the type is unmapped, an exception is thrown.\"\n  overload: System.Data.Linq.DataLoadOptions.AssociateWith``1*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq/DataLoadOptions.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Linq.DataLoadOptions.GetAssociationCriteria(System.Reflection.MemberInfo,System.Linq.Expressions.LambdaExpression@)\n  commentId: M:System.Data.Linq.DataLoadOptions.GetAssociationCriteria(System.Reflection.MemberInfo,System.Linq.Expressions.LambdaExpression@)\n  id: GetAssociationCriteria(System.Reflection.MemberInfo,System.Linq.Expressions.LambdaExpression@)\n  parent: System.Data.Linq.DataLoadOptions\n  langs:\n  - csharp\n  name: GetAssociationCriteria(MemberInfo, LambdaExpression)\n  nameWithType: DataLoadOptions.GetAssociationCriteria(MemberInfo, LambdaExpression)\n  fullName: DataLoadOptions.GetAssociationCriteria(MemberInfo, LambdaExpression)\n  type: Method\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq\n  syntax:\n    content: public bool GetAssociationCriteria (System.Reflection.MemberInfo memberInfo, out System.Linq.Expressions.LambdaExpression associationCriteria);\n    parameters:\n    - id: memberInfo\n      type: System.Reflection.MemberInfo\n      description: ''\n    - id: associationCriteria\n      type: System.Linq.Expressions.LambdaExpression\n      description: ''\n    return:\n      type: System.Boolean\n      description: ''\n  overload: System.Data.Linq.DataLoadOptions.GetAssociationCriteria*\n  exceptions: []\n  version:\n  - xamarinmac-3.0\n  monikers:\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq/DataLoadOptions.xml\n- uid: System.Data.Linq.DataLoadOptions.IsImmediate(System.Reflection.MemberInfo)\n  commentId: M:System.Data.Linq.DataLoadOptions.IsImmediate(System.Reflection.MemberInfo)\n  id: IsImmediate(System.Reflection.MemberInfo)\n  parent: System.Data.Linq.DataLoadOptions\n  langs:\n  - csharp\n  name: IsImmediate(MemberInfo)\n  nameWithType: DataLoadOptions.IsImmediate(MemberInfo)\n  fullName: DataLoadOptions.IsImmediate(MemberInfo)\n  type: Method\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq\n  syntax:\n    content: public bool IsImmediate (System.Reflection.MemberInfo memberInfo);\n    parameters:\n    - id: memberInfo\n      type: System.Reflection.MemberInfo\n      description: ''\n    return:\n      type: System.Boolean\n      description: ''\n  overload: System.Data.Linq.DataLoadOptions.IsImmediate*\n  exceptions: []\n  version:\n  - xamarinmac-3.0\n  monikers:\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq/DataLoadOptions.xml\n- uid: System.Data.Linq.DataLoadOptions.LoadWith(System.Linq.Expressions.LambdaExpression)\n  commentId: M:System.Data.Linq.DataLoadOptions.LoadWith(System.Linq.Expressions.LambdaExpression)\n  id: LoadWith(System.Linq.Expressions.LambdaExpression)\n  parent: System.Data.Linq.DataLoadOptions\n  langs:\n  - csharp\n  name: LoadWith(LambdaExpression)\n  nameWithType: DataLoadOptions.LoadWith(LambdaExpression)\n  fullName: DataLoadOptions.LoadWith(LambdaExpression)\n  type: Method\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq\n  summary: Retrieves specified data related to the main target by using a lambda expression.\n  remarks: In the following example, all the `Orders` for all the `Customers` who are located in London are retrieved when the query is executed. As a result, successive access to the `Orders` property on a `Customer` object does not trigger a new database query.\n  example:\n  - >-\n    [!code-csharp[System.Data.Linq.DataLoadOptions#2](~/samples/snippets/csharp/VS_Snippets_Data/system.data.linq.dataloadoptions/cs/program.cs#2)]\n     [!code-vb[System.Data.Linq.DataLoadOptions#2](~/samples/snippets/visualbasic/VS_Snippets_Data/system.data.linq.dataloadoptions/vb/module1.vb#2)]\n  syntax:\n    content: public void LoadWith (System.Linq.Expressions.LambdaExpression expression);\n    parameters:\n    - id: expression\n      type: System.Linq.Expressions.LambdaExpression\n      description: A lambda expression that identifies the related material.\n  overload: System.Data.Linq.DataLoadOptions.LoadWith*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq/DataLoadOptions.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.Linq.DataLoadOptions.LoadWith``1(System.Linq.Expressions.Expression{System.Func{``0,System.Object}})\n  commentId: M:System.Data.Linq.DataLoadOptions.LoadWith``1(System.Linq.Expressions.Expression{System.Func{``0,System.Object}})\n  id: LoadWith``1(System.Linq.Expressions.Expression{System.Func{``0,System.Object}})\n  parent: System.Data.Linq.DataLoadOptions\n  langs:\n  - csharp\n  name: LoadWith<T>(Expression<Func<T,Object>>)\n  nameWithType: DataLoadOptions.LoadWith<T>(Expression<Func<T,Object>>)\n  fullName: DataLoadOptions.LoadWith<T>(Expression<Func<T,Object>>)\n  type: Method\n  assemblies:\n  - System.Data.Linq\n  namespace: System.Data.Linq\n  summary: Specifies which sub-objects to retrieve when a query is submitted for an object of type T.\n  remarks: \"You cannot specify the loading of two levels of relationships (for example, `Orders.OrderDetails`). In these scenarios you must specify two separate <xref:System.Data.Linq.DataLoadOptions.LoadWith%2A> methods.  \\n  \\n To avoid cycling, see Remarks section in <xref:System.Data.Linq.DataLoadOptions>.\"\n  example:\n  - \"In the following example, all the `Orders` for all the `Customers` who are located in London are retrieved when the query is executed. As a result, successive access to the `Orders` property on a `Customer` object does not trigger a new database query.  \\n  \\n [!code-csharp[System.Data.Linq.DataLoadOptions#2](~/samples/snippets/csharp/VS_Snippets_Data/system.data.linq.dataloadoptions/cs/program.cs#2)]\\n [!code-vb[System.Data.Linq.DataLoadOptions#2](~/samples/snippets/visualbasic/VS_Snippets_Data/system.data.linq.dataloadoptions/vb/module1.vb#2)]\"\n  syntax:\n    content: public void LoadWith<T> (System.Linq.Expressions.Expression<Func<T,object>> expression);\n    parameters:\n    - id: expression\n      type: System.Linq.Expressions.Expression{System.Func{T,System.Object}}\n      description: \"Identifies the field or property to be retrieved.  \\n  \\n If the expression does not identify a field or property that represents a one-to-one or one-to-many relationship, an exception is thrown.\"\n    typeParameters:\n    - id: T\n      description: \"Type that is queried against.  \\n  \\n If this type is unmapped, an exception is thrown.\"\n  overload: System.Data.Linq.DataLoadOptions.LoadWith``1*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq/DataLoadOptions.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\nreferences:\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Data.Linq.DataLoadOptions.#ctor\n  parent: System.Data.Linq.DataLoadOptions\n  isExternal: false\n  name: DataLoadOptions()\n  nameWithType: DataLoadOptions.DataLoadOptions()\n  fullName: DataLoadOptions.DataLoadOptions()\n- uid: System.Data.Linq.DataLoadOptions.AssociateWith(System.Linq.Expressions.LambdaExpression)\n  parent: System.Data.Linq.DataLoadOptions\n  isExternal: false\n  name: AssociateWith(LambdaExpression)\n  nameWithType: DataLoadOptions.AssociateWith(LambdaExpression)\n  fullName: DataLoadOptions.AssociateWith(LambdaExpression)\n- uid: System.Linq.Expressions.LambdaExpression\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: LambdaExpression\n  nameWithType: LambdaExpression\n  fullName: System.Linq.Expressions.LambdaExpression\n- uid: System.Data.Linq.DataLoadOptions.AssociateWith``1(System.Linq.Expressions.Expression{System.Func{``0,System.Object}})\n  parent: System.Data.Linq.DataLoadOptions\n  isExternal: false\n  name: AssociateWith<T>(Expression<Func<T,Object>>)\n  nameWithType: DataLoadOptions.AssociateWith<T>(Expression<Func<T,Object>>)\n  fullName: DataLoadOptions.AssociateWith<T>(Expression<Func<T,Object>>)\n- uid: System.Linq.Expressions.Expression`1\n  name: Expression<TDelegate>\n  nameWithType: Expression<TDelegate>\n  fullName: System.Linq.Expressions.Expression<TDelegate>\n- uid: System.Func`2\n  name: Func<T,TResult>\n  nameWithType: Func<T,TResult>\n  fullName: System.Func<T,TResult>\n- uid: T\n  name: T\n  nameWithType: T\n  fullName: T\n- uid: System.Linq.Expressions.Expression{System.Func{T,System.Object}}\n  parent: System.Linq.Expressions\n  isExternal: false\n  name: Expression<Func<T,Object>>\n  nameWithType: Expression<Func<T,Object>>\n  fullName: System.Linq.Expressions.Expression<System.Func<T,System.Object>>\n  spec.csharp:\n  - uid: System.Linq.Expressions.Expression`1\n    name: Expression\n    nameWithType: Expression\n    fullName: System.Linq.Expressions.Expression\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Func`2\n    name: Func\n    nameWithType: Func\n    fullName: System.Func\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: T\n    name: T\n    nameWithType: T\n    fullName: T\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: System.Object\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Data.Linq.DataLoadOptions.GetAssociationCriteria(System.Reflection.MemberInfo,System.Linq.Expressions.LambdaExpression@)\n  parent: System.Data.Linq.DataLoadOptions\n  isExternal: false\n  name: GetAssociationCriteria(MemberInfo, LambdaExpression)\n  nameWithType: DataLoadOptions.GetAssociationCriteria(MemberInfo, LambdaExpression)\n  fullName: DataLoadOptions.GetAssociationCriteria(MemberInfo, LambdaExpression)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Reflection.MemberInfo\n  parent: System.Reflection\n  isExternal: false\n  name: MemberInfo\n  nameWithType: MemberInfo\n  fullName: System.Reflection.MemberInfo\n- uid: System.Data.Linq.DataLoadOptions.IsImmediate(System.Reflection.MemberInfo)\n  parent: System.Data.Linq.DataLoadOptions\n  isExternal: false\n  name: IsImmediate(MemberInfo)\n  nameWithType: DataLoadOptions.IsImmediate(MemberInfo)\n  fullName: DataLoadOptions.IsImmediate(MemberInfo)\n- uid: System.Data.Linq.DataLoadOptions.LoadWith(System.Linq.Expressions.LambdaExpression)\n  parent: System.Data.Linq.DataLoadOptions\n  isExternal: false\n  name: LoadWith(LambdaExpression)\n  nameWithType: DataLoadOptions.LoadWith(LambdaExpression)\n  fullName: DataLoadOptions.LoadWith(LambdaExpression)\n- uid: System.Data.Linq.DataLoadOptions.LoadWith``1(System.Linq.Expressions.Expression{System.Func{``0,System.Object}})\n  parent: System.Data.Linq.DataLoadOptions\n  isExternal: false\n  name: LoadWith<T>(Expression<Func<T,Object>>)\n  nameWithType: DataLoadOptions.LoadWith<T>(Expression<Func<T,Object>>)\n  fullName: DataLoadOptions.LoadWith<T>(Expression<Func<T,Object>>)\n- uid: System.Data.Linq.DataLoadOptions.#ctor*\n  parent: System.Data.Linq.DataLoadOptions\n  isExternal: false\n  name: DataLoadOptions\n  nameWithType: DataLoadOptions.DataLoadOptions\n  fullName: DataLoadOptions.DataLoadOptions\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq/DataLoadOptions.xml\n- uid: System.Data.Linq.DataLoadOptions.AssociateWith*\n  parent: System.Data.Linq.DataLoadOptions\n  isExternal: false\n  name: AssociateWith\n  nameWithType: DataLoadOptions.AssociateWith\n  fullName: DataLoadOptions.AssociateWith\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq/DataLoadOptions.xml\n- uid: System.Data.Linq.DataLoadOptions.AssociateWith``1*\n  parent: System.Data.Linq.DataLoadOptions\n  isExternal: false\n  name: AssociateWith<T>\n  nameWithType: DataLoadOptions.AssociateWith<T>\n  fullName: DataLoadOptions.AssociateWith<T>\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq/DataLoadOptions.xml\n- uid: System.Data.Linq.DataLoadOptions.GetAssociationCriteria*\n  parent: System.Data.Linq.DataLoadOptions\n  isExternal: false\n  name: GetAssociationCriteria\n  nameWithType: DataLoadOptions.GetAssociationCriteria\n  fullName: DataLoadOptions.GetAssociationCriteria\n  monikers:\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq/DataLoadOptions.xml\n- uid: System.Data.Linq.DataLoadOptions.IsImmediate*\n  parent: System.Data.Linq.DataLoadOptions\n  isExternal: false\n  name: IsImmediate\n  nameWithType: DataLoadOptions.IsImmediate\n  fullName: DataLoadOptions.IsImmediate\n  monikers:\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq/DataLoadOptions.xml\n- uid: System.Data.Linq.DataLoadOptions.LoadWith*\n  parent: System.Data.Linq.DataLoadOptions\n  isExternal: false\n  name: LoadWith\n  nameWithType: DataLoadOptions.LoadWith\n  fullName: DataLoadOptions.LoadWith\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq/DataLoadOptions.xml\n- uid: System.Data.Linq.DataLoadOptions.LoadWith``1*\n  parent: System.Data.Linq.DataLoadOptions\n  isExternal: false\n  name: LoadWith<T>\n  nameWithType: DataLoadOptions.LoadWith<T>\n  fullName: DataLoadOptions.LoadWith<T>\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data.Linq/DataLoadOptions.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n"}