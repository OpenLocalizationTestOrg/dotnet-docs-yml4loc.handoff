{"nodes":[{"content":"Specifies address types for local variables, parameters, and fields in the methods <xref href=\"System.Diagnostics.SymbolStore.ISymbolWriter.DefineLocalVariable(System.String,System.Reflection.FieldAttributes,System.Byte[],System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)\"></xref>, <xref href=\"System.Diagnostics.SymbolStore.ISymbolWriter.DefineParameter(System.String,System.Reflection.ParameterAttributes,System.Int32,System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32)\"></xref>, and <xref href=\"System.Diagnostics.SymbolStore.ISymbolWriter.DefineField(System.Diagnostics.SymbolStore.SymbolToken,System.String,System.Reflection.FieldAttributes,System.Byte[],System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32)\"></xref> of the <xref href=\"System.Diagnostics.SymbolStore.ISymbolWriter\"></xref> interface.","nodes":[{"pos":[0,934],"content":"Specifies address types for local variables, parameters, and fields in the methods <ph id=\"ph1\">&lt;xref href=\"System.Diagnostics.SymbolStore.ISymbolWriter.DefineLocalVariable(System.String,System.Reflection.FieldAttributes,System.Byte[],System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)\"&gt;&lt;/xref&gt;</ph>, <ph id=\"ph2\">&lt;xref href=\"System.Diagnostics.SymbolStore.ISymbolWriter.DefineParameter(System.String,System.Reflection.ParameterAttributes,System.Int32,System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32)\"&gt;&lt;/xref&gt;</ph>, and <ph id=\"ph3\">&lt;xref href=\"System.Diagnostics.SymbolStore.ISymbolWriter.DefineField(System.Diagnostics.SymbolStore.SymbolToken,System.String,System.Reflection.FieldAttributes,System.Byte[],System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32)\"&gt;&lt;/xref&gt;</ph> of the <ph id=\"ph4\">&lt;xref href=\"System.Diagnostics.SymbolStore.ISymbolWriter\"&gt;&lt;/xref&gt;</ph> interface.","source":"Specifies address types for local variables, parameters, and fields in the methods <xref href=\"System.Diagnostics.SymbolStore.ISymbolWriter.DefineLocalVariable(System.String,System.Reflection.FieldAttributes,System.Byte[],System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)\"></xref>, <xref href=\"System.Diagnostics.SymbolStore.ISymbolWriter.DefineParameter(System.String,System.Reflection.ParameterAttributes,System.Int32,System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32)\"></xref>, and <xref href=\"System.Diagnostics.SymbolStore.ISymbolWriter.DefineField(System.Diagnostics.SymbolStore.SymbolToken,System.String,System.Reflection.FieldAttributes,System.Byte[],System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32)\"></xref> of the <xref href=\"System.Diagnostics.SymbolStore.ISymbolWriter\"></xref> interface."}],"pos":[1122,2057],"yaml":true},{"content":"The `addr1`, `addr2`, and `addr3` parameters refer to the address parameters in the <xref:System.Diagnostics.SymbolStore.ISymbolWriter> interface methods.","nodes":[{"pos":[0,154],"content":"The <ph id=\"ph1\">`addr1`</ph>, <ph id=\"ph2\">`addr2`</ph>, and <ph id=\"ph3\">`addr3`</ph> parameters refer to the address parameters in the <ph id=\"ph4\">&lt;xref:System.Diagnostics.SymbolStore.ISymbolWriter&gt;</ph> interface methods.","source":"The `addr1`, `addr2`, and `addr3` parameters refer to the address parameters in the <xref:System.Diagnostics.SymbolStore.ISymbolWriter> interface methods."}],"pos":[2068,2223],"yaml":true,"extradata":"MT"},{"content":"A bit field. The <code>addr1</code> parameter is the position where the field starts, and the <code>addr2</code> parameter is the field length.","nodes":[{"pos":[0,143],"content":"A bit field. The <code>addr1</code> parameter is the position where the field starts, and the <code>addr2</code> parameter is the field length.","nodes":[{"content":"A bit field.","pos":[0,12]},{"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">addr1</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is the position where the field starts, and the <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">addr2</ph><ept id=\"p2\">&lt;/code&gt;</ept> parameter is the field length.","pos":[13,143],"source":" The <code>addr1</code> parameter is the position where the field starts, and the <code>addr2</code> parameter is the field length."}]}],"pos":[3685,3829],"yaml":true},{"content":"A Microsoft intermediate language (MSIL) offset. The <code>addr1</code> parameter is the MSIL local variable or parameter index.","nodes":[{"pos":[0,128],"content":"A Microsoft intermediate language (MSIL) offset. The <code>addr1</code> parameter is the MSIL local variable or parameter index.","nodes":[{"content":"A Microsoft intermediate language (MSIL) offset.","pos":[0,48]},{"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">addr1</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is the MSIL local variable or parameter index.","pos":[49,128],"source":" The <code>addr1</code> parameter is the MSIL local variable or parameter index."}]}],"pos":[5077,5206],"yaml":true},{"content":"A native offset. The <code>addr1</code> parameter is the offset from the start of the parent.","nodes":[{"pos":[0,93],"content":"A native offset. The <code>addr1</code> parameter is the offset from the start of the parent.","nodes":[{"content":"A native offset.","pos":[0,16]},{"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">addr1</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is the offset from the start of the parent.","pos":[17,93],"source":" The <code>addr1</code> parameter is the offset from the start of the parent."}]}],"pos":[6478,6572],"yaml":true},{"content":"A native register address. The <code>addr1</code> parameter is the register in which the variable is stored.","nodes":[{"pos":[0,108],"content":"A native register address. The <code>addr1</code> parameter is the register in which the variable is stored.","nodes":[{"content":"A native register address.","pos":[0,26]},{"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">addr1</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is the register in which the variable is stored.","pos":[27,108],"source":" The <code>addr1</code> parameter is the register in which the variable is stored."}]}],"pos":[7860,7969],"yaml":true},{"content":"A register-relative address. The <code>addr1</code> parameter is the low-order register, and the <code>addr2</code> parameter is the high-order register.","nodes":[{"pos":[0,153],"content":"A register-relative address. The <code>addr1</code> parameter is the low-order register, and the <code>addr2</code> parameter is the high-order register.","nodes":[{"content":"A register-relative address.","pos":[0,28]},{"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">addr1</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is the low-order register, and the <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">addr2</ph><ept id=\"p2\">&lt;/code&gt;</ept> parameter is the high-order register.","pos":[29,153],"source":" The <code>addr1</code> parameter is the low-order register, and the <code>addr2</code> parameter is the high-order register."}]}],"pos":[9307,9461],"yaml":true},{"content":"A register-relative address. The <code>addr1</code> parameter is the register, and the <code>addr2</code> parameter is the offset.","nodes":[{"pos":[0,130],"content":"A register-relative address. The <code>addr1</code> parameter is the register, and the <code>addr2</code> parameter is the offset.","nodes":[{"content":"A register-relative address.","pos":[0,28]},{"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">addr1</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is the register, and the <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">addr2</ph><ept id=\"p2\">&lt;/code&gt;</ept> parameter is the offset.","pos":[29,130],"source":" The <code>addr1</code> parameter is the register, and the <code>addr2</code> parameter is the offset."}]}],"pos":[10807,10938],"yaml":true},{"content":"A register-relative address. The <code>addr1</code> parameter is the low-order register, the <code>addr2</code> parameter is the stack register, and the <code>addr3</code> parameter is the offset from the stack pointer to the high-order part of the value.","nodes":[{"pos":[0,255],"content":"A register-relative address. The <code>addr1</code> parameter is the low-order register, the <code>addr2</code> parameter is the stack register, and the <code>addr3</code> parameter is the offset from the stack pointer to the high-order part of the value.","nodes":[{"content":"A register-relative address.","pos":[0,28]},{"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">addr1</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is the low-order register, the <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">addr2</ph><ept id=\"p2\">&lt;/code&gt;</ept> parameter is the stack register, and the <bpt id=\"p3\">&lt;code&gt;</bpt><ph id=\"ph3\">addr3</ph><ept id=\"p3\">&lt;/code&gt;</ept> parameter is the offset from the stack pointer to the high-order part of the value.","pos":[29,255],"source":" The <code>addr1</code> parameter is the low-order register, the <code>addr2</code> parameter is the stack register, and the <code>addr3</code> parameter is the offset from the stack pointer to the high-order part of the value."}]}],"pos":[12266,12522],"yaml":true},{"content":"A native Relevant Virtual Address (RVA). The <code>addr1</code> parameter is the RVA in the module.","nodes":[{"pos":[0,99],"content":"A native Relevant Virtual Address (RVA). The <code>addr1</code> parameter is the RVA in the module.","nodes":[{"content":"A native Relevant Virtual Address (RVA).","pos":[0,40]},{"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">addr1</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is the RVA in the module.","pos":[41,99],"source":" The <code>addr1</code> parameter is the RVA in the module."}]}],"pos":[13787,13887],"yaml":true},{"content":"A native section offset. The <code>addr1</code> parameter is the section, and the <code>addr2</code> parameter is the offset.","nodes":[{"pos":[0,125],"content":"A native section offset. The <code>addr1</code> parameter is the section, and the <code>addr2</code> parameter is the offset.","nodes":[{"content":"A native section offset.","pos":[0,24]},{"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">addr1</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is the section, and the <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">addr2</ph><ept id=\"p2\">&lt;/code&gt;</ept> parameter is the offset.","pos":[25,125],"source":" The <code>addr1</code> parameter is the section, and the <code>addr2</code> parameter is the offset."}]}],"pos":[15202,15328],"yaml":true},{"content":"A register-relative address. The <code>addr1</code> parameter is the stack register, the <code>addr2</code> parameter is the offset from the stack pointer to the low-order part of the value, and the <code>addr3</code> parameter is the high-order register.","nodes":[{"pos":[0,255],"content":"A register-relative address. The <code>addr1</code> parameter is the stack register, the <code>addr2</code> parameter is the offset from the stack pointer to the low-order part of the value, and the <code>addr3</code> parameter is the high-order register.","nodes":[{"content":"A register-relative address.","pos":[0,28]},{"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">addr1</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is the stack register, the <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">addr2</ph><ept id=\"p2\">&lt;/code&gt;</ept> parameter is the offset from the stack pointer to the low-order part of the value, and the <bpt id=\"p3\">&lt;code&gt;</bpt><ph id=\"ph3\">addr3</ph><ept id=\"p3\">&lt;/code&gt;</ept> parameter is the high-order register.","pos":[29,255],"source":" The <code>addr1</code> parameter is the stack register, the <code>addr2</code> parameter is the offset from the stack pointer to the low-order part of the value, and the <code>addr3</code> parameter is the high-order register."}]}],"pos":[16653,16909],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Diagnostics.SymbolStore.SymAddressKind\n  commentId: T:System.Diagnostics.SymbolStore.SymAddressKind\n  id: SymAddressKind\n  children:\n  - System.Diagnostics.SymbolStore.SymAddressKind.BitField\n  - System.Diagnostics.SymbolStore.SymAddressKind.ILOffset\n  - System.Diagnostics.SymbolStore.SymAddressKind.NativeOffset\n  - System.Diagnostics.SymbolStore.SymAddressKind.NativeRegister\n  - System.Diagnostics.SymbolStore.SymAddressKind.NativeRegisterRegister\n  - System.Diagnostics.SymbolStore.SymAddressKind.NativeRegisterRelative\n  - System.Diagnostics.SymbolStore.SymAddressKind.NativeRegisterStack\n  - System.Diagnostics.SymbolStore.SymAddressKind.NativeRVA\n  - System.Diagnostics.SymbolStore.SymAddressKind.NativeSectionOffset\n  - System.Diagnostics.SymbolStore.SymAddressKind.NativeStackRegister\n  langs:\n  - csharp\n  name: SymAddressKind\n  nameWithType: SymAddressKind\n  fullName: System.Diagnostics.SymbolStore.SymAddressKind\n  type: Enum\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Diagnostics.StackTrace\n  namespace: System.Diagnostics.SymbolStore\n  summary: Specifies address types for local variables, parameters, and fields in the methods <xref href=\"System.Diagnostics.SymbolStore.ISymbolWriter.DefineLocalVariable(System.String,System.Reflection.FieldAttributes,System.Byte[],System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)\"></xref>, <xref href=\"System.Diagnostics.SymbolStore.ISymbolWriter.DefineParameter(System.String,System.Reflection.ParameterAttributes,System.Int32,System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32)\"></xref>, and <xref href=\"System.Diagnostics.SymbolStore.ISymbolWriter.DefineField(System.Diagnostics.SymbolStore.SymbolToken,System.String,System.Reflection.FieldAttributes,System.Byte[],System.Diagnostics.SymbolStore.SymAddressKind,System.Int32,System.Int32,System.Int32)\"></xref> of the <xref href=\"System.Diagnostics.SymbolStore.ISymbolWriter\"></xref> interface.\n  remarks: The `addr1`, `addr2`, and `addr3` parameters refer to the address parameters in the <xref:System.Diagnostics.SymbolStore.ISymbolWriter> interface methods.\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public enum SymAddressKind\n  inheritance:\n  - System.Object\n  - System.ValueType\n  - System.Enum\n  attributes:\n  - type: System.Runtime.InteropServices.ComVisibleAttribute\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics.SymbolStore/SymAddressKind.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Diagnostics.SymbolStore.SymAddressKind.BitField\n  commentId: F:System.Diagnostics.SymbolStore.SymAddressKind.BitField\n  id: BitField\n  parent: System.Diagnostics.SymbolStore.SymAddressKind\n  langs:\n  - csharp\n  name: BitField\n  nameWithType: SymAddressKind.BitField\n  fullName: SymAddressKind.BitField\n  type: Field\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Diagnostics.StackTrace\n  namespace: System.Diagnostics.SymbolStore\n  summary: A bit field. The <code>addr1</code> parameter is the position where the field starts, and the <code>addr2</code> parameter is the field length.\n  syntax:\n    content: BitField\n    return:\n      type: System.Diagnostics.SymbolStore.SymAddressKind\n      description: ''\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics.SymbolStore/SymAddressKind.xml\n- uid: System.Diagnostics.SymbolStore.SymAddressKind.ILOffset\n  commentId: F:System.Diagnostics.SymbolStore.SymAddressKind.ILOffset\n  id: ILOffset\n  parent: System.Diagnostics.SymbolStore.SymAddressKind\n  langs:\n  - csharp\n  name: ILOffset\n  nameWithType: SymAddressKind.ILOffset\n  fullName: SymAddressKind.ILOffset\n  type: Field\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Diagnostics.StackTrace\n  namespace: System.Diagnostics.SymbolStore\n  summary: A Microsoft intermediate language (MSIL) offset. The <code>addr1</code> parameter is the MSIL local variable or parameter index.\n  syntax:\n    content: ILOffset\n    return:\n      type: System.Diagnostics.SymbolStore.SymAddressKind\n      description: ''\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics.SymbolStore/SymAddressKind.xml\n- uid: System.Diagnostics.SymbolStore.SymAddressKind.NativeOffset\n  commentId: F:System.Diagnostics.SymbolStore.SymAddressKind.NativeOffset\n  id: NativeOffset\n  parent: System.Diagnostics.SymbolStore.SymAddressKind\n  langs:\n  - csharp\n  name: NativeOffset\n  nameWithType: SymAddressKind.NativeOffset\n  fullName: SymAddressKind.NativeOffset\n  type: Field\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Diagnostics.StackTrace\n  namespace: System.Diagnostics.SymbolStore\n  summary: A native offset. The <code>addr1</code> parameter is the offset from the start of the parent.\n  syntax:\n    content: NativeOffset\n    return:\n      type: System.Diagnostics.SymbolStore.SymAddressKind\n      description: ''\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics.SymbolStore/SymAddressKind.xml\n- uid: System.Diagnostics.SymbolStore.SymAddressKind.NativeRegister\n  commentId: F:System.Diagnostics.SymbolStore.SymAddressKind.NativeRegister\n  id: NativeRegister\n  parent: System.Diagnostics.SymbolStore.SymAddressKind\n  langs:\n  - csharp\n  name: NativeRegister\n  nameWithType: SymAddressKind.NativeRegister\n  fullName: SymAddressKind.NativeRegister\n  type: Field\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Diagnostics.StackTrace\n  namespace: System.Diagnostics.SymbolStore\n  summary: A native register address. The <code>addr1</code> parameter is the register in which the variable is stored.\n  syntax:\n    content: NativeRegister\n    return:\n      type: System.Diagnostics.SymbolStore.SymAddressKind\n      description: ''\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics.SymbolStore/SymAddressKind.xml\n- uid: System.Diagnostics.SymbolStore.SymAddressKind.NativeRegisterRegister\n  commentId: F:System.Diagnostics.SymbolStore.SymAddressKind.NativeRegisterRegister\n  id: NativeRegisterRegister\n  parent: System.Diagnostics.SymbolStore.SymAddressKind\n  langs:\n  - csharp\n  name: NativeRegisterRegister\n  nameWithType: SymAddressKind.NativeRegisterRegister\n  fullName: SymAddressKind.NativeRegisterRegister\n  type: Field\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Diagnostics.StackTrace\n  namespace: System.Diagnostics.SymbolStore\n  summary: A register-relative address. The <code>addr1</code> parameter is the low-order register, and the <code>addr2</code> parameter is the high-order register.\n  syntax:\n    content: NativeRegisterRegister\n    return:\n      type: System.Diagnostics.SymbolStore.SymAddressKind\n      description: ''\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics.SymbolStore/SymAddressKind.xml\n- uid: System.Diagnostics.SymbolStore.SymAddressKind.NativeRegisterRelative\n  commentId: F:System.Diagnostics.SymbolStore.SymAddressKind.NativeRegisterRelative\n  id: NativeRegisterRelative\n  parent: System.Diagnostics.SymbolStore.SymAddressKind\n  langs:\n  - csharp\n  name: NativeRegisterRelative\n  nameWithType: SymAddressKind.NativeRegisterRelative\n  fullName: SymAddressKind.NativeRegisterRelative\n  type: Field\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Diagnostics.StackTrace\n  namespace: System.Diagnostics.SymbolStore\n  summary: A register-relative address. The <code>addr1</code> parameter is the register, and the <code>addr2</code> parameter is the offset.\n  syntax:\n    content: NativeRegisterRelative\n    return:\n      type: System.Diagnostics.SymbolStore.SymAddressKind\n      description: ''\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics.SymbolStore/SymAddressKind.xml\n- uid: System.Diagnostics.SymbolStore.SymAddressKind.NativeRegisterStack\n  commentId: F:System.Diagnostics.SymbolStore.SymAddressKind.NativeRegisterStack\n  id: NativeRegisterStack\n  parent: System.Diagnostics.SymbolStore.SymAddressKind\n  langs:\n  - csharp\n  name: NativeRegisterStack\n  nameWithType: SymAddressKind.NativeRegisterStack\n  fullName: SymAddressKind.NativeRegisterStack\n  type: Field\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Diagnostics.StackTrace\n  namespace: System.Diagnostics.SymbolStore\n  summary: A register-relative address. The <code>addr1</code> parameter is the low-order register, the <code>addr2</code> parameter is the stack register, and the <code>addr3</code> parameter is the offset from the stack pointer to the high-order part of the value.\n  syntax:\n    content: NativeRegisterStack\n    return:\n      type: System.Diagnostics.SymbolStore.SymAddressKind\n      description: ''\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics.SymbolStore/SymAddressKind.xml\n- uid: System.Diagnostics.SymbolStore.SymAddressKind.NativeRVA\n  commentId: F:System.Diagnostics.SymbolStore.SymAddressKind.NativeRVA\n  id: NativeRVA\n  parent: System.Diagnostics.SymbolStore.SymAddressKind\n  langs:\n  - csharp\n  name: NativeRVA\n  nameWithType: SymAddressKind.NativeRVA\n  fullName: SymAddressKind.NativeRVA\n  type: Field\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Diagnostics.StackTrace\n  namespace: System.Diagnostics.SymbolStore\n  summary: A native Relevant Virtual Address (RVA). The <code>addr1</code> parameter is the RVA in the module.\n  syntax:\n    content: NativeRVA\n    return:\n      type: System.Diagnostics.SymbolStore.SymAddressKind\n      description: ''\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics.SymbolStore/SymAddressKind.xml\n- uid: System.Diagnostics.SymbolStore.SymAddressKind.NativeSectionOffset\n  commentId: F:System.Diagnostics.SymbolStore.SymAddressKind.NativeSectionOffset\n  id: NativeSectionOffset\n  parent: System.Diagnostics.SymbolStore.SymAddressKind\n  langs:\n  - csharp\n  name: NativeSectionOffset\n  nameWithType: SymAddressKind.NativeSectionOffset\n  fullName: SymAddressKind.NativeSectionOffset\n  type: Field\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Diagnostics.StackTrace\n  namespace: System.Diagnostics.SymbolStore\n  summary: A native section offset. The <code>addr1</code> parameter is the section, and the <code>addr2</code> parameter is the offset.\n  syntax:\n    content: NativeSectionOffset\n    return:\n      type: System.Diagnostics.SymbolStore.SymAddressKind\n      description: ''\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics.SymbolStore/SymAddressKind.xml\n- uid: System.Diagnostics.SymbolStore.SymAddressKind.NativeStackRegister\n  commentId: F:System.Diagnostics.SymbolStore.SymAddressKind.NativeStackRegister\n  id: NativeStackRegister\n  parent: System.Diagnostics.SymbolStore.SymAddressKind\n  langs:\n  - csharp\n  name: NativeStackRegister\n  nameWithType: SymAddressKind.NativeStackRegister\n  fullName: SymAddressKind.NativeStackRegister\n  type: Field\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Diagnostics.StackTrace\n  namespace: System.Diagnostics.SymbolStore\n  summary: A register-relative address. The <code>addr1</code> parameter is the stack register, the <code>addr2</code> parameter is the offset from the stack pointer to the low-order part of the value, and the <code>addr3</code> parameter is the high-order register.\n  syntax:\n    content: NativeStackRegister\n    return:\n      type: System.Diagnostics.SymbolStore.SymAddressKind\n      description: ''\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics.SymbolStore/SymAddressKind.xml\nreferences:\n- uid: System.Enum\n  parent: System\n  isExternal: false\n  name: Enum\n  nameWithType: Enum\n  fullName: System.Enum\n- uid: System.Diagnostics.SymbolStore.SymAddressKind.BitField\n  parent: System.Diagnostics.SymbolStore.SymAddressKind\n  isExternal: false\n  name: BitField\n  nameWithType: SymAddressKind.BitField\n  fullName: SymAddressKind.BitField\n- uid: System.Diagnostics.SymbolStore.SymAddressKind\n  parent: System.Diagnostics.SymbolStore\n  isExternal: false\n  name: SymAddressKind\n  nameWithType: SymAddressKind\n  fullName: System.Diagnostics.SymbolStore.SymAddressKind\n- uid: System.Diagnostics.SymbolStore.SymAddressKind.ILOffset\n  parent: System.Diagnostics.SymbolStore.SymAddressKind\n  isExternal: false\n  name: ILOffset\n  nameWithType: SymAddressKind.ILOffset\n  fullName: SymAddressKind.ILOffset\n- uid: System.Diagnostics.SymbolStore.SymAddressKind.NativeOffset\n  parent: System.Diagnostics.SymbolStore.SymAddressKind\n  isExternal: false\n  name: NativeOffset\n  nameWithType: SymAddressKind.NativeOffset\n  fullName: SymAddressKind.NativeOffset\n- uid: System.Diagnostics.SymbolStore.SymAddressKind.NativeRegister\n  parent: System.Diagnostics.SymbolStore.SymAddressKind\n  isExternal: false\n  name: NativeRegister\n  nameWithType: SymAddressKind.NativeRegister\n  fullName: SymAddressKind.NativeRegister\n- uid: System.Diagnostics.SymbolStore.SymAddressKind.NativeRegisterRegister\n  parent: System.Diagnostics.SymbolStore.SymAddressKind\n  isExternal: false\n  name: NativeRegisterRegister\n  nameWithType: SymAddressKind.NativeRegisterRegister\n  fullName: SymAddressKind.NativeRegisterRegister\n- uid: System.Diagnostics.SymbolStore.SymAddressKind.NativeRegisterRelative\n  parent: System.Diagnostics.SymbolStore.SymAddressKind\n  isExternal: false\n  name: NativeRegisterRelative\n  nameWithType: SymAddressKind.NativeRegisterRelative\n  fullName: SymAddressKind.NativeRegisterRelative\n- uid: System.Diagnostics.SymbolStore.SymAddressKind.NativeRegisterStack\n  parent: System.Diagnostics.SymbolStore.SymAddressKind\n  isExternal: false\n  name: NativeRegisterStack\n  nameWithType: SymAddressKind.NativeRegisterStack\n  fullName: SymAddressKind.NativeRegisterStack\n- uid: System.Diagnostics.SymbolStore.SymAddressKind.NativeRVA\n  parent: System.Diagnostics.SymbolStore.SymAddressKind\n  isExternal: false\n  name: NativeRVA\n  nameWithType: SymAddressKind.NativeRVA\n  fullName: SymAddressKind.NativeRVA\n- uid: System.Diagnostics.SymbolStore.SymAddressKind.NativeSectionOffset\n  parent: System.Diagnostics.SymbolStore.SymAddressKind\n  isExternal: false\n  name: NativeSectionOffset\n  nameWithType: SymAddressKind.NativeSectionOffset\n  fullName: SymAddressKind.NativeSectionOffset\n- uid: System.Diagnostics.SymbolStore.SymAddressKind.NativeStackRegister\n  parent: System.Diagnostics.SymbolStore.SymAddressKind\n  isExternal: false\n  name: NativeStackRegister\n  nameWithType: SymAddressKind.NativeStackRegister\n  fullName: SymAddressKind.NativeStackRegister\n"}