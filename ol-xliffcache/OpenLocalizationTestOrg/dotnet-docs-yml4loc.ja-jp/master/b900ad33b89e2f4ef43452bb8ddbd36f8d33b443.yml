### YamlMime:ManagedReference
items:
- uid: System.Xml.XmlNamespaceManager
  commentId: T:System.Xml.XmlNamespaceManager
  id: XmlNamespaceManager
  children:
  - System.Xml.XmlNamespaceManager.#ctor(System.Xml.XmlNameTable)
  - System.Xml.XmlNamespaceManager.AddNamespace(System.String,System.String)
  - System.Xml.XmlNamespaceManager.DefaultNamespace
  - System.Xml.XmlNamespaceManager.GetEnumerator
  - System.Xml.XmlNamespaceManager.GetNamespacesInScope(System.Xml.XmlNamespaceScope)
  - System.Xml.XmlNamespaceManager.HasNamespace(System.String)
  - System.Xml.XmlNamespaceManager.LookupNamespace(System.String)
  - System.Xml.XmlNamespaceManager.LookupPrefix(System.String)
  - System.Xml.XmlNamespaceManager.NameTable
  - System.Xml.XmlNamespaceManager.PopScope
  - System.Xml.XmlNamespaceManager.PushScope
  - System.Xml.XmlNamespaceManager.RemoveNamespace(System.String,System.String)
  langs:
  - csharp
  name: XmlNamespaceManager
  nameWithType: XmlNamespaceManager
  fullName: System.Xml.XmlNamespaceManager
  type: Class
  assemblies:
  - System.Xml.ReaderWriter
  - System.Xml
  - netstandard
  namespace: System.Xml
  summary: Resolves, adds, and removes namespaces to a collection and provides scope management for these namespaces.
  remarks: "For general information about how namespaces are declared and used in XML documents, see [Managing Namespaces in an XML Document](~/docs/standard/data/xml/managing-namespaces-in-an-xml-document.md).  \n  \n <xref:System.Xml.XmlNamespaceManager> stores prefixes and namespaces as strings. Here's a summary of management and lookup tasks you can perform with this class. For more information and examples, follow the links to the reference page for each method or property.  \n  \n|To|Use|  \n|--------|---------|  \n|Add a namespace|<xref:System.Xml.XmlNamespaceManager.AddNamespace%2A> method|  \n|Remove a namespace|<xref:System.Xml.XmlNamespaceManager.RemoveNamespace%2A> method|  \n|Find the URI for the default namespace|<xref:System.Xml.XmlNamespaceManager.DefaultNamespace%2A> property|  \n|Find the URI for a namespace prefix|<xref:System.Xml.XmlNamespaceManager.LookupNamespace%2A> method|  \n|Find the prefix for a namespace URI|<xref:System.Xml.XmlNamespaceManager.LookupPrefix%2A> method|  \n|Get a list of namespaces in the current node|<xref:System.Xml.XmlNamespaceManager.GetNamespacesInScope%2A> method|  \n|Scope a namespace|<xref:System.Xml.XmlNamespaceManager.PushScope%2A> and <xref:System.Xml.XmlNamespaceManager.PopScope%2A> methods|  \n|Check whether a prefix is defined in the current scope|<xref:System.Xml.XmlNamespaceManager.HasNamespace%2A> method|  \n|Get the name table used to look up prefixes and URIs|<xref:System.Xml.XmlNamespaceManager.NameTable%2A> property|  \n  \n To add namespaces to the namespace manager, you create a <xref:System.Xml.XmlNamespaceManager> object and then use the <xref:System.Xml.XmlNamespaceManager.AddNamespace%2A> method. Default prefix and namespace pairs are automatically added to the namespace manager on creation.  \n  \n When you create the namespace manager, you can specify a name table from the <xref:System.Xml.XmlReader>, <xref:System.Xml.Xsl.XsltContext>, or <xref:System.Xml.XmlDocument> class, and then use the <xref:System.Xml.XmlNamespaceManager.AddNamespace%2A> method to add the namespaces.  \n  \n You can supply the <xref:System.Xml.XmlNamespaceManager> object as a parameter to the <xref:System.Xml.XmlNode.SelectNodes%2A> or <xref:System.Xml.XmlNode.SelectSingleNode%2A> method of the <xref:System.Xml.XmlDocument> class to execute XPath query expressions that reference namespace-qualified element and attribute names.  \n  \n The namespace manager assumes that prefixes and namespaces have already been verified and conform to the [W3C Namespaces](http://www.w3.org/TR/REC-xml-names/) specification. The namespace manager does not perform any validation.  \n  \n The namespace manager atomizes the strings when they are added by using the <xref:System.Xml.XmlNamespaceManager.AddNamespace%2A> method and when a lookup is performed by using the <xref:System.Xml.XmlNamespaceManager.LookupNamespace%2A> or <xref:System.Xml.XmlNamespaceManager.LookupPrefix%2A> method.  \n  \n The namespace manager implements enumeration support in addition to adding and retrieving namespaces. You can loop through the information saved in the namespace manager by using the `foreach` construct. For example, if you create a namespace manager with the name `nsmanager`, you can iterate through the table by using `foreach (String prefix in nsmanager)`.  \n  \n Because the namespace manager provides a string comparison with the prefix and namespaces as objects, there is a performance improvement when using the namespace manager over the direct comparison of a string.  \n  \n The following code example shows how to bind the prefix `xsd` with the namespace URI of `http://www.w3.org/2001/XMLSchema` and add it to the namespace manager:  \n  \n```vb  \nnsmgr.AddNamespace(\"xsd\", \"http://www.w3.org/2001/XMLSchema\")  \n```  \n  \n```csharp  \nnsmgr.AddNamespace(\"xsd\", \"http://www.w3.org/2001/XMLSchema\");  \n```  \n  \n You can then find the namespace by using the <xref:System.Xml.XmlNamespaceManager.LookupNamespace%2A> method:  \n  \n```vb  \nnsmgr.LookupNamespace(\"xsd\")  \n```  \n  \n```csharp  \nnsmgr.LookupNamespace(\"xsd\");  \n```  \n  \n The following example creates an <xref:System.Xml.XmlNamespaceManager> by using the name table from an XML reader:  \n  \n```vb  \nDim reader As New XmlTextReader(\"myfile.xml\")  \nDim nsmanager As New XmlNamespaceManager(reader.NameTable)  \nnsmanager.AddNamespace(\"msbooks\", \"www.microsoft.com/books\")  \nnsmanager.PushScope()  \nnsmanager.AddNamespace(\"msstore\", \"www.microsoft.com/store\")  \nWhile reader.Read()  \n    Console.WriteLine(\"Reader Prefix:{0}\", reader.Prefix)  \n    Console.WriteLine(\"XmlNamespaceManager Prefix:{0}\",  \n     nsmanager.LookupPrefix(nsmanager.NameTable.Get(reader.NamespaceURI)))  \nEnd While  \n```  \n  \n```csharp  \nXmlTextReader reader = new XmlTextReader(\"myfile.xml\");  \nXmlNamespaceManager nsmanager = new XmlNamespaceManager(reader.NameTable);  \nnsmanager.AddNamespace(\"msbooks\", \"www.microsoft.com/books\");  \nnsmanager.PushScope();  \nnsmanager.AddNamespace(\"msstore\", \"www.microsoft.com/store\");  \nwhile (reader.Read())  \n{  \n    Console.WriteLine(\"Reader Prefix:{0}\", reader.Prefix);  \n    Console.WriteLine(\"XmlNamespaceManager Prefix:{0}\",  \n    nsmanager.LookupPrefix(nsmanager.NameTable.Get(reader.NamespaceURI)));  \n}  \n```"
  syntax:
    content: 'public class XmlNamespaceManager : System.Collections.IEnumerable, System.Xml.IXmlNamespaceResolver'
  inheritance:
  - System.Object
  derivedClasses:
  - System.Windows.Data.XmlNamespaceMappingCollection
  - System.Xml.Xsl.XsltContext
  implements:
  - System.Collections.IEnumerable
  - System.Xml.IXmlNamespaceResolver
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)
  - System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)
  - System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)
  - System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlNamespaceManager.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Xml.XmlNamespaceManager.#ctor(System.Xml.XmlNameTable)
  commentId: M:System.Xml.XmlNamespaceManager.#ctor(System.Xml.XmlNameTable)
  id: '#ctor(System.Xml.XmlNameTable)'
  parent: System.Xml.XmlNamespaceManager
  langs:
  - csharp
  name: XmlNamespaceManager(XmlNameTable)
  nameWithType: XmlNamespaceManager.XmlNamespaceManager(XmlNameTable)
  fullName: XmlNamespaceManager.XmlNamespaceManager(XmlNameTable)
  type: Constructor
  assemblies:
  - System.Xml.ReaderWriter
  - System.Xml
  - netstandard
  namespace: System.Xml
  summary: Initializes a new instance of the <xref href="System.Xml.XmlNamespaceManager"></xref> class with the specified <xref href="System.Xml.XmlNameTable"></xref>.
  remarks: "The name table is used to look up prefixes and namespaces. An existing name table with pre-atomized strings can be specified in the constructor. There are several advantages in doing so. For example, if the name table of an <xref:System.Xml.XmlReader> object is used, after each read, any namespace and prefix strings pushed into the name table can be re-used by <xref:System.Xml.XmlNamespaceManager>.  \n  \n For more information on atomized strings, see <xref:System.Xml.XmlNameTable>.  \n  \n> [!NOTE]\n>  If you specify an existing name table, any namespaces in the name table are not automatically added to <xref:System.Xml.XmlNamespaceManager>. You must use <xref:System.Xml.XmlNamespaceManager.AddNamespace%2A> and <xref:System.Xml.XmlNamespaceManager.RemoveNamespace%2A> to add or remove namespaces."
  example:
  - "The following example creates an <xref:System.Xml.XmlNamespaceManager> using the name table of the reader.  \n  \n [!code-cpp[Classic WebData XmlNamespaceManager.XmlNamespaceManager Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNamespaceManager.XmlNamespaceManager Example/CPP/source.cpp#1)]\n [!code-csharp[Classic WebData XmlNamespaceManager.XmlNamespaceManager Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNamespaceManager.XmlNamespaceManager Example/CS/source.cs#1)]\n [!code-vb[Classic WebData XmlNamespaceManager.XmlNamespaceManager Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNamespaceManager.XmlNamespaceManager Example/VB/source.vb#1)]"
  syntax:
    content: public XmlNamespaceManager (System.Xml.XmlNameTable nameTable);
    parameters:
    - id: nameTable
      type: System.Xml.XmlNameTable
      description: The <xref href="System.Xml.XmlNameTable"></xref> to use.
  overload: System.Xml.XmlNamespaceManager.#ctor*
  exceptions:
  - type: System.NullReferenceException
    commentId: T:System.NullReferenceException
    description: '`null` is passed to the constructor'
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlNamespaceManager.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Xml.XmlNamespaceManager.AddNamespace(System.String,System.String)
  commentId: M:System.Xml.XmlNamespaceManager.AddNamespace(System.String,System.String)
  id: AddNamespace(System.String,System.String)
  parent: System.Xml.XmlNamespaceManager
  langs:
  - csharp
  name: AddNamespace(String, String)
  nameWithType: XmlNamespaceManager.AddNamespace(String, String)
  fullName: XmlNamespaceManager.AddNamespace(String, String)
  type: Method
  assemblies:
  - System.Xml.ReaderWriter
  - System.Xml
  - netstandard
  namespace: System.Xml
  summary: Adds the given namespace to the collection.
  remarks: "<xref:System.Xml.XmlNamespaceManager> does not check `prefix` and `uri` for conformance.  \n  \n <xref:System.Xml.XmlReader> checks names, including prefixes and namespaces, to ensure they are valid XML names according to the World Wide Web Consortium (W3C) [Namespaces specification](http://www.w3.org/TR/REC-xml-names/). <xref:System.Xml.XmlNamespaceManager> is used internally by <xref:System.Xml.XmlReader>, so to avoid a duplication of efforts, <xref:System.Xml.XmlNamespaceManager> assumes all prefixes and namespaces are valid.  \n  \n If the prefix and namespace already exist within the current scope, the new prefix and namespace pair will replace the existing prefix/namespace combination. The same prefix and namespace combination can exist across different scopes.  \n  \n The following prefix/namespace pairs are added by default to the <xref:System.Xml.XmlNamespaceManager>. They can be determined at any scope.  \n  \n|Prefix|Namespace|  \n|------------|---------------|  \n|xmlns|http://www.w3.org/2000/xmlns/ (the xmlns prefix namespace)|  \n|xml|http://www.w3.org/XML/1998/namespace (the XML namespace)|  \n|String.Empty|String.Empty (the empty namespace). This value can be reassigned a different prefix. For example, xmlns=\"\" defines the default namespace to be the empty namespace|"
  example:
  - "The following example uses <xref:System.Xml.XmlNamespaceManager> to resolve namespaces in an XML fragment.  \n  \n [!code-csharp[Classic WebData XmlNamespaceManager.AddNamespace Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNamespaceManager.AddNamespace Example/CS/source.cs#1)]\n [!code-vb[Classic WebData XmlNamespaceManager.AddNamespace Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNamespaceManager.AddNamespace Example/VB/source.vb#1)]"
  syntax:
    content: public virtual void AddNamespace (string prefix, string uri);
    parameters:
    - id: prefix
      type: System.String
      description: "The prefix to associate with the namespace being added. Use String.Empty to add a default namespace.  \n  \n **Note**If the <xref href=\"System.Xml.XmlNamespaceManager\"></xref> will be used for resolving namespaces in an XML Path Language (XPath) expression, a prefix must be specified. If an XPath expression does not include a prefix, it is assumed that the namespace Uniform Resource Identifier (URI) is the empty namespace. For more information about XPath expressions and the <xref href=\"System.Xml.XmlNamespaceManager\"></xref>, refer to the <xref href=\"System.Xml.XmlNode.SelectNodes(System.String)\"></xref> and <xref href=\"System.Xml.XPath.XPathExpression.SetContext(System.Xml.XmlNamespaceManager)\"></xref> methods."
    - id: uri
      type: System.String
      description: The namespace to add.
  overload: System.Xml.XmlNamespaceManager.AddNamespace*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: The value for <code>prefix</code> is "xml" or "xmlns".
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The value for <code>prefix</code> or <code>uri</code> is `null`.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlNamespaceManager.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Xml.XmlNamespaceManager.DefaultNamespace
  commentId: P:System.Xml.XmlNamespaceManager.DefaultNamespace
  id: DefaultNamespace
  parent: System.Xml.XmlNamespaceManager
  langs:
  - csharp
  name: DefaultNamespace
  nameWithType: XmlNamespaceManager.DefaultNamespace
  fullName: XmlNamespaceManager.DefaultNamespace
  type: Property
  assemblies:
  - System.Xml.ReaderWriter
  - System.Xml
  - netstandard
  namespace: System.Xml
  summary: Gets the namespace URI for the default namespace.
  remarks: This method is equivalent to calling LookupNamespace(String.Empty).
  example:
  - "The following example displays the default namespace, if one exists.  \n  \n [!code-cpp[Classic WebData XmlNamespaceManager.DefaultNamespace Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNamespaceManager.DefaultNamespace Example/CPP/source.cpp#1)]\n [!code-csharp[Classic WebData XmlNamespaceManager.DefaultNamespace Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNamespaceManager.DefaultNamespace Example/CS/source.cs#1)]\n [!code-vb[Classic WebData XmlNamespaceManager.DefaultNamespace Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNamespaceManager.DefaultNamespace Example/VB/source.vb#1)]"
  syntax:
    content: public virtual string DefaultNamespace { get; }
    return:
      type: System.String
      description: Returns the namespace URI for the default namespace, or String.Empty if there is no default namespace.
  overload: System.Xml.XmlNamespaceManager.DefaultNamespace*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlNamespaceManager.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Xml.XmlNamespaceManager.GetEnumerator
  commentId: M:System.Xml.XmlNamespaceManager.GetEnumerator
  id: GetEnumerator
  parent: System.Xml.XmlNamespaceManager
  langs:
  - csharp
  name: GetEnumerator()
  nameWithType: XmlNamespaceManager.GetEnumerator()
  fullName: XmlNamespaceManager.GetEnumerator()
  type: Method
  assemblies:
  - System.Xml.ReaderWriter
  - System.Xml
  - netstandard
  namespace: System.Xml
  summary: Returns an enumerator to use to iterate through the namespaces in the <xref href="System.Xml.XmlNamespaceManager"></xref>.
  remarks: "The following code shows how to use the <xref:System.Collections.IEnumerator> to view all the namespace pairs stored in the <xref:System.Xml.XmlNamespaceManager> object.  \n  \n```  \nDim nsEnum As IEnumerator = nsmgr.GetEnumerator()  \nDo While nsEnum.MoveNext  \n  If nsEnum.Current <> \"\" Then  \n    MsgBox(\"xmlns:\" + nsEnum.Current + \"=\" + nsmgr.LookupNamespace(nsEnum.Current))  \n  End If  \nLoop  \n```"
  syntax:
    content: public virtual System.Collections.IEnumerator GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: An <xref href="System.Collections.IEnumerator"></xref> containing the prefixes stored by the <xref href="System.Xml.XmlNamespaceManager"></xref>.
  overload: System.Xml.XmlNamespaceManager.GetEnumerator*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlNamespaceManager.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Xml.XmlNamespaceManager.GetNamespacesInScope(System.Xml.XmlNamespaceScope)
  commentId: M:System.Xml.XmlNamespaceManager.GetNamespacesInScope(System.Xml.XmlNamespaceScope)
  id: GetNamespacesInScope(System.Xml.XmlNamespaceScope)
  parent: System.Xml.XmlNamespaceManager
  langs:
  - csharp
  name: GetNamespacesInScope(XmlNamespaceScope)
  nameWithType: XmlNamespaceManager.GetNamespacesInScope(XmlNamespaceScope)
  fullName: XmlNamespaceManager.GetNamespacesInScope(XmlNamespaceScope)
  type: Method
  assemblies:
  - System.Xml.ReaderWriter
  - System.Xml
  - netstandard
  namespace: System.Xml
  summary: Gets a collection of namespace names keyed by prefix which can be used to enumerate the namespaces currently in scope.
  remarks: "The dictionary consists of a collection of namespace names keyed by prefix. It can be used to enumerate the in-scope namespaces. The dictionary is a disconnected copy of the namespace list. It remains unchanged as the current in-scope namespace list changes.  \n  \n The following table shows how <xref:System.Xml.XmlNamespaceScope> values affect the namespaces returned by the <xref:System.Xml.XmlNamespaceManager.GetNamespacesInScope%2A> method.  \n  \n|XmlNamespaceScope value|xmlns:xml|xmlns:xmlns|xmlns=\"\"|  \n|-----------------------------|---------------|-----------------|---------------|  \n|`All`|Yes|No|No|  \n|`ExcludeXml`|No|No|No|  \n|`Local`|No|No|Yes|"
  syntax:
    content: public virtual System.Collections.Generic.IDictionary<string,string> GetNamespacesInScope (System.Xml.XmlNamespaceScope scope);
    parameters:
    - id: scope
      type: System.Xml.XmlNamespaceScope
      description: An enumeration value that specifies the type of namespace nodes to return.
    return:
      type: System.Collections.Generic.IDictionary{System.String,System.String}
      description: A collection of namespace and prefix pairs currently in scope.
  overload: System.Xml.XmlNamespaceManager.GetNamespacesInScope*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlNamespaceManager.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Xml.XmlNamespaceManager.HasNamespace(System.String)
  commentId: M:System.Xml.XmlNamespaceManager.HasNamespace(System.String)
  id: HasNamespace(System.String)
  parent: System.Xml.XmlNamespaceManager
  langs:
  - csharp
  name: HasNamespace(String)
  nameWithType: XmlNamespaceManager.HasNamespace(String)
  fullName: XmlNamespaceManager.HasNamespace(String)
  type: Method
  assemblies:
  - System.Xml.ReaderWriter
  - System.Xml
  - netstandard
  namespace: System.Xml
  summary: Gets a value indicating whether the supplied prefix has a namespace defined for the current pushed scope.
  remarks: "To determine whether there is a default empty namespace defined, set `prefix` to String.Empty. A return value of `true` indicates that there is a default namespace defined in the current scope; `false` indicates that no default namespace is defined.  \n  \n> [!NOTE]\n>  xmlns:x= \"\" is illegal according to the [W3C Namespaces](http://www.w3.org/TR/REC-xml-names/) recommendation."
  example:
  - "The following example displays the default namespace, if one exists.  \n  \n [!code-cpp[Classic WebData XmlNamespaceManager.DefaultNamespace Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNamespaceManager.DefaultNamespace Example/CPP/source.cpp#1)]\n [!code-csharp[Classic WebData XmlNamespaceManager.DefaultNamespace Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNamespaceManager.DefaultNamespace Example/CS/source.cs#1)]\n [!code-vb[Classic WebData XmlNamespaceManager.DefaultNamespace Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNamespaceManager.DefaultNamespace Example/VB/source.vb#1)]"
  syntax:
    content: public virtual bool HasNamespace (string prefix);
    parameters:
    - id: prefix
      type: System.String
      description: The prefix of the namespace you want to find.
    return:
      type: System.Boolean
      description: '`true` if there is a namespace defined; otherwise, `false`.'
  overload: System.Xml.XmlNamespaceManager.HasNamespace*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlNamespaceManager.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Xml.XmlNamespaceManager.LookupNamespace(System.String)
  commentId: M:System.Xml.XmlNamespaceManager.LookupNamespace(System.String)
  id: LookupNamespace(System.String)
  parent: System.Xml.XmlNamespaceManager
  langs:
  - csharp
  name: LookupNamespace(String)
  nameWithType: XmlNamespaceManager.LookupNamespace(String)
  fullName: XmlNamespaceManager.LookupNamespace(String)
  type: Method
  assemblies:
  - System.Xml.ReaderWriter
  - System.Xml
  - netstandard
  namespace: System.Xml
  summary: Gets the namespace URI for the specified prefix.
  remarks: ''
  example:
  - "The following example adds prefix/namespace pairs to the <xref:System.Xml.XmlNamespaceManager>, and then displays all the pairs in the collection.  \n  \n [!code-cpp[Classic WebData XmlNamespaceManager.PopScope Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNamespaceManager.PopScope Example/CPP/source.cpp#1)]\n [!code-csharp[Classic WebData XmlNamespaceManager.PopScope Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNamespaceManager.PopScope Example/CS/source.cs#1)]\n [!code-vb[Classic WebData XmlNamespaceManager.PopScope Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNamespaceManager.PopScope Example/VB/source.vb#1)]"
  syntax:
    content: public virtual string LookupNamespace (string prefix);
    parameters:
    - id: prefix
      type: System.String
      description: The prefix whose namespace URI you want to resolve. To match the default namespace, pass String.Empty.
    return:
      type: System.String
      description: "Returns the namespace URI for <code>prefix</code> or `null` if there is no mapped namespace. The returned string is atomized.  \n  \n For more information on atomized strings, see the <xref href=\"System.Xml.XmlNameTable\"></xref> class."
  overload: System.Xml.XmlNamespaceManager.LookupNamespace*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlNamespaceManager.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Xml.XmlNamespaceManager.LookupPrefix(System.String)
  commentId: M:System.Xml.XmlNamespaceManager.LookupPrefix(System.String)
  id: LookupPrefix(System.String)
  parent: System.Xml.XmlNamespaceManager
  langs:
  - csharp
  name: LookupPrefix(String)
  nameWithType: XmlNamespaceManager.LookupPrefix(String)
  fullName: XmlNamespaceManager.LookupPrefix(String)
  type: Method
  assemblies:
  - System.Xml.ReaderWriter
  - System.Xml
  - netstandard
  namespace: System.Xml
  summary: Finds the prefix declared for the given namespace URI.
  remarks: "This method finds the mapped prefix by walking the stack (that is, it looks globally). The supplied string must be atomized for the lookup to succeed. In other words, the supplied string object must exist in the namespace manager's name table (<xref:System.Xml.XmlNamespaceManager.NameTable%2A>).  \n  \n The returned string is also atomized. For more information on atomized strings, see the <xref:System.Xml.XmlNameTable> class."
  example:
  - "The following example shows how to use the <xref:System.Xml.XmlNamespaceManager.LookupPrefix%2A> method when writing an attribute. It uses the <xref:System.Xml.XmlWriter.WriteStartAttribute%2A?displayProperty=fullName> method to start the attribute, looks up the prefix for the `urn:samples` namespace URI, and then uses that prefix in the <xref:System.Xml.XmlWriter.WriteStartAttribute%2A?displayProperty=fullName> when writing the `ISBN` attribute:  \n  \n```vb  \nDim prefix As String = nsMgr.LookupPrefix(\"urn:samples\")  \nwriter.WriteStartAttribute(prefix, \"ISBN\", \"urn:samples\")  \n  \n```  \n  \n```csharp  \nXmlNameTable nt = new XmlNameTable();  \nXmlNamespaceManager nsMgr = new XmlNamespaceManager(nt);  \nnsMgr.AddNamespace(\"bk\",\"urn:samples\");string prefix = writer nsMgr.LookupPrefix(\"urn:samples\");  \nwriter.WriteStartAttribute(prefix, \"ISBN\", \"urn:samples\");  \n```  \n  \n The following example uses <xref:System.Xml.XmlNamespaceManager.LookupPrefix%2A> to find the prefix defined on an element.  \n  \n```vb  \nwriter.WriteStartElement(\"root\", \"book\")  \nwriter.WriteStartElement(\"x\", \"node\", \"author\")  \ns = writer.LookupPrefix(\"author\")  \nCError.Compare(s, \"x\", \"Error in nested element\")  \nwriter.WriteEndElement()  \ns = writer.LookupPrefix(\"book\")  \nCError.Compare(s, Nothing, \"Error in root element\")  \nwriter.WriteEndElement()  \n  \n```  \n  \n **Output**  \n  \n```  \n<root xmlns=\"book\">  \n  <x:node xmlns:x=\"author\" />   \n</root>  \n```"
  syntax:
    content: public virtual string LookupPrefix (string uri);
    parameters:
    - id: uri
      type: System.String
      description: The namespace to resolve for the prefix.
    return:
      type: System.String
      description: The matching prefix. If there is no mapped prefix, the method returns String.Empty. If a null value is supplied, then `null` is returned.
  overload: System.Xml.XmlNamespaceManager.LookupPrefix*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlNamespaceManager.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Xml.XmlNamespaceManager.NameTable
  commentId: P:System.Xml.XmlNamespaceManager.NameTable
  id: NameTable
  parent: System.Xml.XmlNamespaceManager
  langs:
  - csharp
  name: NameTable
  nameWithType: XmlNamespaceManager.NameTable
  fullName: XmlNamespaceManager.NameTable
  type: Property
  assemblies:
  - System.Xml.ReaderWriter
  - System.Xml
  - netstandard
  namespace: System.Xml
  summary: Gets the <xref href="System.Xml.XmlNameTable"></xref> associated with this object.
  remarks: The name table is used to look up prefixes and namespace URIs.
  syntax:
    content: public virtual System.Xml.XmlNameTable NameTable { get; }
    return:
      type: System.Xml.XmlNameTable
      description: The <xref href="System.Xml.XmlNameTable"></xref> used by this object.
  overload: System.Xml.XmlNamespaceManager.NameTable*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlNamespaceManager.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Xml.XmlNamespaceManager.PopScope
  commentId: M:System.Xml.XmlNamespaceManager.PopScope
  id: PopScope
  parent: System.Xml.XmlNamespaceManager
  langs:
  - csharp
  name: PopScope()
  nameWithType: XmlNamespaceManager.PopScope()
  fullName: XmlNamespaceManager.PopScope()
  type: Method
  assemblies:
  - System.Xml.ReaderWriter
  - System.Xml
  - netstandard
  namespace: System.Xml
  summary: Pops a namespace scope off the stack.
  remarks: When you call this method, all namespaces which were added to <xref:System.Xml.XmlNamespaceManager> (by calling <xref:System.Xml.XmlNamespaceManager.AddNamespace%2A>) since the last call to <xref:System.Xml.XmlNamespaceManager.PopScope%2A> are removed.
  example:
  - "The following example adds prefix/namespace pairs to the <xref:System.Xml.XmlNamespaceManager> and then displays all the pairs in the collection.  \n  \n [!code-cpp[Classic WebData XmlNamespaceManager.PopScope Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNamespaceManager.PopScope Example/CPP/source.cpp#1)]\n [!code-csharp[Classic WebData XmlNamespaceManager.PopScope Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNamespaceManager.PopScope Example/CS/source.cs#1)]\n [!code-vb[Classic WebData XmlNamespaceManager.PopScope Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNamespaceManager.PopScope Example/VB/source.vb#1)]"
  syntax:
    content: public virtual bool PopScope ();
    parameters: []
    return:
      type: System.Boolean
      description: '`true` if there are namespace scopes left on the stack; `false` if there are no more namespaces to pop.'
  overload: System.Xml.XmlNamespaceManager.PopScope*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlNamespaceManager.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Xml.XmlNamespaceManager.PushScope
  commentId: M:System.Xml.XmlNamespaceManager.PushScope
  id: PushScope
  parent: System.Xml.XmlNamespaceManager
  langs:
  - csharp
  name: PushScope()
  nameWithType: XmlNamespaceManager.PushScope()
  fullName: XmlNamespaceManager.PushScope()
  type: Method
  assemblies:
  - System.Xml.ReaderWriter
  - System.Xml
  - netstandard
  namespace: System.Xml
  summary: Pushes a namespace scope onto the stack.
  remarks: After a call to this method, all namespaces, which are added to <xref:System.Xml.XmlNamespaceManager> (by calling <xref:System.Xml.XmlNamespaceManager.AddNamespace%2A>), belong to the pushed namespace scope.
  example:
  - "The following example adds prefix/namespace pairs to the <xref:System.Xml.XmlNamespaceManager> and then displays all the pairs in the collection.  \n  \n [!code-cpp[Classic WebData XmlNamespaceManager.PopScope Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlNamespaceManager.PopScope Example/CPP/source.cpp#1)]\n [!code-csharp[Classic WebData XmlNamespaceManager.PopScope Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlNamespaceManager.PopScope Example/CS/source.cs#1)]\n [!code-vb[Classic WebData XmlNamespaceManager.PopScope Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlNamespaceManager.PopScope Example/VB/source.vb#1)]"
  syntax:
    content: public virtual void PushScope ();
    parameters: []
  overload: System.Xml.XmlNamespaceManager.PushScope*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlNamespaceManager.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Xml.XmlNamespaceManager.RemoveNamespace(System.String,System.String)
  commentId: M:System.Xml.XmlNamespaceManager.RemoveNamespace(System.String,System.String)
  id: RemoveNamespace(System.String,System.String)
  parent: System.Xml.XmlNamespaceManager
  langs:
  - csharp
  name: RemoveNamespace(String, String)
  nameWithType: XmlNamespaceManager.RemoveNamespace(String, String)
  fullName: XmlNamespaceManager.RemoveNamespace(String, String)
  type: Method
  assemblies:
  - System.Xml.ReaderWriter
  - System.Xml
  - netstandard
  namespace: System.Xml
  summary: Removes the given namespace for the given prefix.
  syntax:
    content: public virtual void RemoveNamespace (string prefix, string uri);
    parameters:
    - id: prefix
      type: System.String
      description: The prefix for the namespace
    - id: uri
      type: System.String
      description: The namespace to remove for the given prefix. The namespace removed is from the current namespace scope. Namespaces outside the current scope are ignored.
  overload: System.Xml.XmlNamespaceManager.RemoveNamespace*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The value of <code>prefix</code> or <code>uri</code> is `null`.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlNamespaceManager.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
references:
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.NullReferenceException
  parent: System
  isExternal: false
  name: NullReferenceException
  nameWithType: NullReferenceException
  fullName: System.NullReferenceException
- uid: System.ArgumentException
  parent: System
  isExternal: false
  name: ArgumentException
  nameWithType: ArgumentException
  fullName: System.ArgumentException
- uid: System.ArgumentNullException
  parent: System
  isExternal: false
  name: ArgumentNullException
  nameWithType: ArgumentNullException
  fullName: System.ArgumentNullException
- uid: System.Xml.XmlNamespaceManager.#ctor(System.Xml.XmlNameTable)
  parent: System.Xml.XmlNamespaceManager
  isExternal: false
  name: XmlNamespaceManager(XmlNameTable)
  nameWithType: XmlNamespaceManager.XmlNamespaceManager(XmlNameTable)
  fullName: XmlNamespaceManager.XmlNamespaceManager(XmlNameTable)
- uid: System.Xml.XmlNameTable
  parent: System.Xml
  isExternal: false
  name: XmlNameTable
  nameWithType: XmlNameTable
  fullName: System.Xml.XmlNameTable
- uid: System.Xml.XmlNamespaceManager.AddNamespace(System.String,System.String)
  parent: System.Xml.XmlNamespaceManager
  isExternal: false
  name: AddNamespace(String, String)
  nameWithType: XmlNamespaceManager.AddNamespace(String, String)
  fullName: XmlNamespaceManager.AddNamespace(String, String)
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Xml.XmlNamespaceManager.DefaultNamespace
  parent: System.Xml.XmlNamespaceManager
  isExternal: false
  name: DefaultNamespace
  nameWithType: XmlNamespaceManager.DefaultNamespace
  fullName: XmlNamespaceManager.DefaultNamespace
- uid: System.Xml.XmlNamespaceManager.GetEnumerator
  parent: System.Xml.XmlNamespaceManager
  isExternal: false
  name: GetEnumerator()
  nameWithType: XmlNamespaceManager.GetEnumerator()
  fullName: XmlNamespaceManager.GetEnumerator()
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: false
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Xml.XmlNamespaceManager.GetNamespacesInScope(System.Xml.XmlNamespaceScope)
  parent: System.Xml.XmlNamespaceManager
  isExternal: false
  name: GetNamespacesInScope(XmlNamespaceScope)
  nameWithType: XmlNamespaceManager.GetNamespacesInScope(XmlNamespaceScope)
  fullName: XmlNamespaceManager.GetNamespacesInScope(XmlNamespaceScope)
- uid: System.Collections.Generic.IDictionary`2
  name: IDictionary<TKey,TValue>
  nameWithType: IDictionary<TKey,TValue>
  fullName: System.Collections.Generic.IDictionary<TKey,TValue>
- uid: System.Collections.Generic.IDictionary{System.String,System.String}
  parent: System.Collections.Generic
  isExternal: false
  name: IDictionary<String,String>
  nameWithType: IDictionary<String,String>
  fullName: System.Collections.Generic.IDictionary<System.String,System.String>
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Xml.XmlNamespaceScope
  parent: System.Xml
  isExternal: false
  name: XmlNamespaceScope
  nameWithType: XmlNamespaceScope
  fullName: System.Xml.XmlNamespaceScope
- uid: System.Xml.XmlNamespaceManager.HasNamespace(System.String)
  parent: System.Xml.XmlNamespaceManager
  isExternal: false
  name: HasNamespace(String)
  nameWithType: XmlNamespaceManager.HasNamespace(String)
  fullName: XmlNamespaceManager.HasNamespace(String)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Xml.XmlNamespaceManager.LookupNamespace(System.String)
  parent: System.Xml.XmlNamespaceManager
  isExternal: false
  name: LookupNamespace(String)
  nameWithType: XmlNamespaceManager.LookupNamespace(String)
  fullName: XmlNamespaceManager.LookupNamespace(String)
- uid: System.Xml.XmlNamespaceManager.LookupPrefix(System.String)
  parent: System.Xml.XmlNamespaceManager
  isExternal: false
  name: LookupPrefix(String)
  nameWithType: XmlNamespaceManager.LookupPrefix(String)
  fullName: XmlNamespaceManager.LookupPrefix(String)
- uid: System.Xml.XmlNamespaceManager.NameTable
  parent: System.Xml.XmlNamespaceManager
  isExternal: false
  name: NameTable
  nameWithType: XmlNamespaceManager.NameTable
  fullName: XmlNamespaceManager.NameTable
- uid: System.Xml.XmlNamespaceManager.PopScope
  parent: System.Xml.XmlNamespaceManager
  isExternal: false
  name: PopScope()
  nameWithType: XmlNamespaceManager.PopScope()
  fullName: XmlNamespaceManager.PopScope()
- uid: System.Xml.XmlNamespaceManager.PushScope
  parent: System.Xml.XmlNamespaceManager
  isExternal: false
  name: PushScope()
  nameWithType: XmlNamespaceManager.PushScope()
  fullName: XmlNamespaceManager.PushScope()
- uid: System.Xml.XmlNamespaceManager.RemoveNamespace(System.String,System.String)
  parent: System.Xml.XmlNamespaceManager
  isExternal: false
  name: RemoveNamespace(String, String)
  nameWithType: XmlNamespaceManager.RemoveNamespace(String, String)
  fullName: XmlNamespaceManager.RemoveNamespace(String, String)
- uid: System.Xml.XmlNamespaceManager.#ctor*
  parent: System.Xml.XmlNamespaceManager
  isExternal: false
  name: XmlNamespaceManager
  nameWithType: XmlNamespaceManager.XmlNamespaceManager
  fullName: XmlNamespaceManager.XmlNamespaceManager
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlNamespaceManager.xml
- uid: System.Xml.XmlNamespaceManager.AddNamespace*
  parent: System.Xml.XmlNamespaceManager
  isExternal: false
  name: AddNamespace
  nameWithType: XmlNamespaceManager.AddNamespace
  fullName: XmlNamespaceManager.AddNamespace
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlNamespaceManager.xml
- uid: System.Xml.XmlNamespaceManager.DefaultNamespace*
  parent: System.Xml.XmlNamespaceManager
  isExternal: false
  name: DefaultNamespace
  nameWithType: XmlNamespaceManager.DefaultNamespace
  fullName: XmlNamespaceManager.DefaultNamespace
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlNamespaceManager.xml
- uid: System.Xml.XmlNamespaceManager.GetEnumerator*
  parent: System.Xml.XmlNamespaceManager
  isExternal: false
  name: GetEnumerator
  nameWithType: XmlNamespaceManager.GetEnumerator
  fullName: XmlNamespaceManager.GetEnumerator
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlNamespaceManager.xml
- uid: System.Xml.XmlNamespaceManager.GetNamespacesInScope*
  parent: System.Xml.XmlNamespaceManager
  isExternal: false
  name: GetNamespacesInScope
  nameWithType: XmlNamespaceManager.GetNamespacesInScope
  fullName: XmlNamespaceManager.GetNamespacesInScope
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlNamespaceManager.xml
- uid: System.Xml.XmlNamespaceManager.HasNamespace*
  parent: System.Xml.XmlNamespaceManager
  isExternal: false
  name: HasNamespace
  nameWithType: XmlNamespaceManager.HasNamespace
  fullName: XmlNamespaceManager.HasNamespace
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlNamespaceManager.xml
- uid: System.Xml.XmlNamespaceManager.LookupNamespace*
  parent: System.Xml.XmlNamespaceManager
  isExternal: false
  name: LookupNamespace
  nameWithType: XmlNamespaceManager.LookupNamespace
  fullName: XmlNamespaceManager.LookupNamespace
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlNamespaceManager.xml
- uid: System.Xml.XmlNamespaceManager.LookupPrefix*
  parent: System.Xml.XmlNamespaceManager
  isExternal: false
  name: LookupPrefix
  nameWithType: XmlNamespaceManager.LookupPrefix
  fullName: XmlNamespaceManager.LookupPrefix
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlNamespaceManager.xml
- uid: System.Xml.XmlNamespaceManager.NameTable*
  parent: System.Xml.XmlNamespaceManager
  isExternal: false
  name: NameTable
  nameWithType: XmlNamespaceManager.NameTable
  fullName: XmlNamespaceManager.NameTable
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlNamespaceManager.xml
- uid: System.Xml.XmlNamespaceManager.PopScope*
  parent: System.Xml.XmlNamespaceManager
  isExternal: false
  name: PopScope
  nameWithType: XmlNamespaceManager.PopScope
  fullName: XmlNamespaceManager.PopScope
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlNamespaceManager.xml
- uid: System.Xml.XmlNamespaceManager.PushScope*
  parent: System.Xml.XmlNamespaceManager
  isExternal: false
  name: PushScope
  nameWithType: XmlNamespaceManager.PushScope
  fullName: XmlNamespaceManager.PushScope
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlNamespaceManager.xml
- uid: System.Xml.XmlNamespaceManager.RemoveNamespace*
  parent: System.Xml.XmlNamespaceManager
  isExternal: false
  name: RemoveNamespace
  nameWithType: XmlNamespaceManager.RemoveNamespace
  fullName: XmlNamespaceManager.RemoveNamespace
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlNamespaceManager.xml
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: Object.Equals(Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: Object.Equals(Object, Object)
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: false
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: Object.GetHashCode()
- uid: System.Object.GetType
  parent: System.Object
  isExternal: false
  name: GetType()
  nameWithType: Object.GetType()
  fullName: Object.GetType()
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: false
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: Object.MemberwiseClone()
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: Object.ReferenceEquals(Object, Object)
- uid: System.Object.ToString
  parent: System.Object
  isExternal: false
  name: ToString()
  nameWithType: Object.ToString()
  fullName: Object.ToString()
- uid: System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)
  parent: System.Linq.Enumerable
  isExternal: false
  name: Cast<TResult>(IEnumerable)
  nameWithType: Enumerable.Cast<TResult>(IEnumerable)
  fullName: Enumerable.Cast<TResult>(IEnumerable)
- uid: System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)
  parent: System.Linq.Enumerable
  isExternal: false
  name: OfType<TResult>(IEnumerable)
  nameWithType: Enumerable.OfType<TResult>(IEnumerable)
  fullName: Enumerable.OfType<TResult>(IEnumerable)
- uid: System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)
  parent: System.Linq.ParallelEnumerable
  isExternal: false
  name: AsParallel(IEnumerable)
  nameWithType: ParallelEnumerable.AsParallel(IEnumerable)
  fullName: ParallelEnumerable.AsParallel(IEnumerable)
- uid: System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)
  parent: System.Linq.Queryable
  isExternal: false
  name: AsQueryable(IEnumerable)
  nameWithType: Queryable.AsQueryable(IEnumerable)
  fullName: Queryable.AsQueryable(IEnumerable)
- uid: System.Collections.IEnumerable
  parent: System.Collections
  isExternal: false
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: System.Xml.IXmlNamespaceResolver
  parent: System.Xml
  isExternal: false
  name: IXmlNamespaceResolver
  nameWithType: IXmlNamespaceResolver
  fullName: System.Xml.IXmlNamespaceResolver
