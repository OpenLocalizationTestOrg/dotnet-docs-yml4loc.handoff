### YamlMime:ManagedReference
items:
- uid: System.IO.TextReader
  commentId: T:System.IO.TextReader
  id: TextReader
  children:
  - System.IO.TextReader.#ctor
  - System.IO.TextReader.Close
  - System.IO.TextReader.Dispose
  - System.IO.TextReader.Dispose(System.Boolean)
  - System.IO.TextReader.Null
  - System.IO.TextReader.Peek
  - System.IO.TextReader.Read
  - System.IO.TextReader.Read(System.Char[],System.Int32,System.Int32)
  - System.IO.TextReader.ReadAsync(System.Char[],System.Int32,System.Int32)
  - System.IO.TextReader.ReadBlock(System.Char[],System.Int32,System.Int32)
  - System.IO.TextReader.ReadBlockAsync(System.Char[],System.Int32,System.Int32)
  - System.IO.TextReader.ReadLine
  - System.IO.TextReader.ReadLineAsync
  - System.IO.TextReader.ReadToEnd
  - System.IO.TextReader.ReadToEndAsync
  - System.IO.TextReader.Synchronized(System.IO.TextReader)
  langs:
  - csharp
  name: TextReader
  nameWithType: TextReader
  fullName: System.IO.TextReader
  type: Class
  assemblies:
  - System.IO
  - mscorlib
  - netstandard
  - System.Runtime.Extensions
  namespace: System.IO
  summary: Represents a reader that can read a sequential series of characters.
  remarks: "<xref:System.IO.TextReader> is the abstract base class of <xref:System.IO.StreamReader> and <xref:System.IO.StringReader>, which read characters from streams and strings, respectively. Use these derived classes to open a text file for reading a specified range of characters, or to create a reader based on an existing stream.  \n  \n> [!IMPORTANT]\n>  This type implements the <xref:System.IDisposable> interface. When you have finished using any type that derives from this type, you should dispose of it either directly or indirectly. To dispose of the type directly, call its <xref:System.IO.TextReader.Dispose%2A> method in a `try`/`catch` block. To dispose of it indirectly, use a language construct such as `using` (in C#) or `Using` (in Visual Basic). For more information, see Dispose and the \"Using an Object that Implements IDisposable\" section in the <xref:System.IDisposable> interface topic."
  example:
  - "The <xref:System.IO.TextReader> class is an abstract class. Therefore, you do not instantiate it in your code. The <xref:System.IO.StreamReader> class derives from <xref:System.IO.TextReader> and provides implementations of the members for reading from a stream. The following example shows how to read all the characters in a file by using the <xref:System.IO.StreamReader.ReadAsync%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29?displayProperty=fullName> method. It checks whether each character is a letter, digit, or white space before adding the character to an instance of the <xref:System.Text.StringBuilder> class.  \n  \n [!code-csharp[System.IO.StreamReader#42](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.StreamReader/CS/example42.cs#42)]\n [!code-vb[System.IO.StreamReader#42](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.StreamReader/VB/example42.vb#42)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public abstract class TextReader : MarshalByRefObject, IDisposable
  inheritance:
  - System.Object
  derivedClasses:
  - System.IO.StreamReader
  - System.IO.StringReader
  implements:
  - System.IDisposable
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  attributes:
  - type: System.Runtime.InteropServices.ComVisibleAttribute
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/TextReader.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.IO.TextReader.#ctor
  commentId: M:System.IO.TextReader.#ctor
  id: '#ctor'
  parent: System.IO.TextReader
  langs:
  - csharp
  name: TextReader()
  nameWithType: TextReader.TextReader()
  fullName: TextReader.TextReader()
  type: Constructor
  assemblies:
  - System.IO
  - mscorlib
  - netstandard
  - System.Runtime.Extensions
  namespace: System.IO
  summary: Initializes a new instance of the <xref href="System.IO.TextReader"></xref> class.
  remarks: Use this constructor for derived classes.
  syntax:
    content: protected TextReader ();
    parameters: []
  overload: System.IO.TextReader.#ctor*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/TextReader.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.IO.TextReader.Close
  commentId: M:System.IO.TextReader.Close
  id: Close
  parent: System.IO.TextReader
  langs:
  - csharp
  name: Close()
  nameWithType: TextReader.Close()
  fullName: TextReader.Close()
  type: Method
  assemblies:
  - mscorlib
  - netstandard
  - System.Runtime.Extensions
  namespace: System.IO
  summary: Closes the <xref href="System.IO.TextReader"></xref> and releases any system resources associated with the `TextReader`.
  remarks: "This implementation of `Close` calls the <xref:System.IO.StringReader.Dispose%28System.Boolean%29?displayProperty=fullName> method and passes it a `true` value.  \n  \n Flushing the text reader will not flush its underlying encoder unless you explicitly call `Close`. Setting the <xref:System.IO.StreamWriter.AutoFlush%2A?displayProperty=fullName> property to `true` means that data will be flushed from the buffer to the stream, but the encoder state will not be flushed. This allows the encoder to keep its state (partial characters) so that it can encode the next block of characters correctly. This scenario affects UTF8 and UTF7 where certain characters can be encoded only after the encoder receives the adjacent character or characters.  \n  \n> [!NOTE]\n>  In derived classes, do not override the <xref:System.IO.TextReader.Close%2A> method. Instead, override the <xref:System.IO.TextReader.Dispose%28System.Boolean%29?displayProperty=fullName> method to add code for releasing resources."
  syntax:
    content: public virtual void Close ();
    parameters: []
  overload: System.IO.TextReader.Close*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/TextReader.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.IO.TextReader.Dispose
  commentId: M:System.IO.TextReader.Dispose
  id: Dispose
  parent: System.IO.TextReader
  langs:
  - csharp
  name: Dispose()
  nameWithType: TextReader.Dispose()
  fullName: TextReader.Dispose()
  type: Method
  assemblies:
  - System.IO
  - mscorlib
  - netstandard
  - System.Runtime.Extensions
  namespace: System.IO
  summary: Releases all resources used by the <xref href="System.IO.TextReader"></xref> object.
  remarks: "Call <xref:System.IO.TextReader.Dispose%2A> when you are finished using the <xref:System.IO.TextReader>. The <xref:System.IO.TextReader.Dispose%2A> method leaves the <xref:System.IO.TextReader> in an unusable state. After calling <xref:System.IO.TextReader.Dispose%2A>, you must release all references to the <xref:System.IO.TextReader> so the garbage collector can reclaim the memory that the <xref:System.IO.TextReader> was occupying.  \n  \n For more information, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).  \n  \n> [!NOTE]\n>  Always call <xref:System.IO.TextReader.Dispose%2A> before you release your last reference to the <xref:System.IO.TextReader>. Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.IO.TextReader> object's <xref:System.Object.Finalize%2A> method."
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.IO.TextReader.Dispose*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/TextReader.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.IO.TextReader.Dispose(System.Boolean)
  commentId: M:System.IO.TextReader.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.IO.TextReader
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: TextReader.Dispose(Boolean)
  fullName: TextReader.Dispose(Boolean)
  type: Method
  assemblies:
  - System.IO
  - mscorlib
  - netstandard
  - System.Runtime.Extensions
  namespace: System.IO
  summary: Releases the unmanaged resources used by the <xref href="System.IO.TextReader"></xref> and optionally releases the managed resources.
  remarks: "This method is called by the public `Dispose` method and the <xref:System.Object.Finalize%2A> method. By default, this method specifies the `disposing` parameter as `true`. <xref:System.Object.Finalize%2A> specifies the `disposing` parameter as `false`.  \n  \n When the `disposing` parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.IO.TextReader> references. This method invokes the `Dispose` method of each referenced object."
  syntax:
    content: protected virtual void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: '`true` to release both managed and unmanaged resources; `false` to release only unmanaged resources.'
  overload: System.IO.TextReader.Dispose*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/TextReader.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.IO.TextReader.Null
  commentId: F:System.IO.TextReader.Null
  id: "Null"
  parent: System.IO.TextReader
  langs:
  - csharp
  name: "Null"
  nameWithType: TextReader.Null
  fullName: TextReader.Null
  type: Field
  assemblies:
  - System.IO
  - mscorlib
  - netstandard
  - System.Runtime.Extensions
  namespace: System.IO
  summary: Provides a `TextReader` with no data to read from.
  remarks: "Reading from the <xref:System.IO.TextReader.Null> text reader is similar to reading from the end of a stream:  \n  \n-   The <xref:System.IO.TextReader.Read%2A> and <xref:System.IO.TextReader.Peek%2A> methods return -1.  \n  \n-   The <xref:System.IO.TextReader.ReadBlock%2A> method returns zero.  \n  \n-   The <xref:System.IO.TextReader.ReadLine%2A> method returns `null`.  \n  \n-   The <xref:System.IO.TextReader.ReadToEnd%2A> method returns an empty string."
  syntax:
    content: public static readonly System.IO.TextReader Null;
    return:
      type: System.IO.TextReader
      description: ''
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/TextReader.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.IO.TextReader.Peek
  commentId: M:System.IO.TextReader.Peek
  id: Peek
  parent: System.IO.TextReader
  langs:
  - csharp
  name: Peek()
  nameWithType: TextReader.Peek()
  fullName: TextReader.Peek()
  type: Method
  assemblies:
  - System.IO
  - mscorlib
  - netstandard
  - System.Runtime.Extensions
  namespace: System.IO
  summary: Reads the next character without changing the state of the reader or the character source. Returns the next available character without actually reading it from the reader.
  remarks: "The <xref:System.IO.TextReader.Peek%2A> method returns an integer value in order to determine whether the end of the file, or another error has occurred. This allows a user to first check if the returned value is -1 before casting it to a <xref:System.Char> type.  \n  \n The current position of the <xref:System.IO.TextReader> is not changed by this operation. The returned value is -1 if no more characters are available. The default implementation returns -1.  \n  \n The <xref:System.IO.TextReader> class is an abstract class. Therefore, you do not instantiate it in your code. For an example of using the <xref:System.IO.TextReader.Peek%2A> method, see the <xref:System.IO.StreamReader.Peek%2A?displayProperty=fullName> method."
  syntax:
    content: public virtual int Peek ();
    parameters: []
    return:
      type: System.Int32
      description: An integer representing the next character to be read, or -1 if no more characters are available or the reader does not support seeking.
  overload: System.IO.TextReader.Peek*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: The <xref href="System.IO.TextReader"></xref> is closed.
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: An I/O error occurs.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/TextReader.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.IO.TextReader.Read
  commentId: M:System.IO.TextReader.Read
  id: Read
  parent: System.IO.TextReader
  langs:
  - csharp
  name: Read()
  nameWithType: TextReader.Read()
  fullName: TextReader.Read()
  type: Method
  assemblies:
  - System.IO
  - mscorlib
  - netstandard
  - System.Runtime.Extensions
  namespace: System.IO
  summary: Reads the next character from the text reader and advances the character position by one character.
  remarks: The <xref:System.IO.TextReader> class is an abstract class. Therefore, you do not instantiate it in your code. For an example of using the <xref:System.IO.TextReader.Read%2A> method, see the <xref:System.IO.StreamReader.Read%2A?displayProperty=fullName> method.
  syntax:
    content: public virtual int Read ();
    parameters: []
    return:
      type: System.Int32
      description: The next character from the text reader, or -1 if no more characters are available. The default implementation returns -1.
  overload: System.IO.TextReader.Read*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: The <xref href="System.IO.TextReader"></xref> is closed.
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: An I/O error occurs.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/TextReader.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.IO.TextReader.Read(System.Char[],System.Int32,System.Int32)
  commentId: M:System.IO.TextReader.Read(System.Char[],System.Int32,System.Int32)
  id: Read(System.Char[],System.Int32,System.Int32)
  parent: System.IO.TextReader
  langs:
  - csharp
  name: Read(Char[], Int32, Int32)
  nameWithType: TextReader.Read(Char[], Int32, Int32)
  fullName: TextReader.Read(Char[], Int32, Int32)
  type: Method
  assemblies:
  - System.IO
  - mscorlib
  - netstandard
  - System.Runtime.Extensions
  namespace: System.IO
  summary: Reads a specified maximum number of characters from the current reader and writes the data to a buffer, beginning at the specified index.
  remarks: "This method returns after either `count` characters are read or the end of the file is reached. <xref:System.IO.TextReader.ReadBlock%2A> is a blocking version of this method.  \n  \n The <xref:System.IO.TextReader> class is an abstract class. Therefore, you do not instantiate it in your code. For an example of using the <xref:System.IO.TextReader.Read%2A> method, see the <xref:System.IO.StreamReader.Read%2A?displayProperty=fullName> method."
  syntax:
    content: public virtual int Read (char[] buffer, int index, int count);
    parameters:
    - id: buffer
      type: System.Char[]
      description: When this method returns, contains the specified character array with the values between <code>index</code> and (<code>index</code> + <code>count</code> - 1) replaced by the characters read from the current source.
    - id: index
      type: System.Int32
      description: The position in <code>buffer</code> at which to begin writing.
    - id: count
      type: System.Int32
      description: The maximum number of characters to read. If the end of the reader is reached before the specified number of characters is read into the buffer, the method returns.
    return:
      type: System.Int32
      description: The number of characters that have been read. The number will be less than or equal to <code>count</code>, depending on whether the data is available within the reader. This method returns 0 (zero) if it is called when no more characters are left to read.
  overload: System.IO.TextReader.Read*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>buffer</code> is `null`.
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: The buffer length minus <code>index</code> is less than <code>count</code>.
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: <code>index</code> or <code>count</code> is negative.
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: The <xref href="System.IO.TextReader"></xref> is closed.
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: An I/O error occurs.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/TextReader.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.IO.TextReader.ReadAsync(System.Char[],System.Int32,System.Int32)
  commentId: M:System.IO.TextReader.ReadAsync(System.Char[],System.Int32,System.Int32)
  id: ReadAsync(System.Char[],System.Int32,System.Int32)
  parent: System.IO.TextReader
  langs:
  - csharp
  name: ReadAsync(Char[], Int32, Int32)
  nameWithType: TextReader.ReadAsync(Char[], Int32, Int32)
  fullName: TextReader.ReadAsync(Char[], Int32, Int32)
  type: Method
  assemblies:
  - System.IO
  - mscorlib
  - netstandard
  - System.Runtime.Extensions
  namespace: System.IO
  summary: Reads a specified maximum number of characters from the current text reader asynchronously and writes the data to a buffer, beginning at the specified index.
  remarks: "The task completes after either the number of characters specified by the `count` parameter are read or the end of the file is reached.  \n  \n The <xref:System.IO.TextReader> class is an abstract class. Therefore, you do not instantiate it in your code. For an example of using the <xref:System.IO.TextReader.ReadAsync%2A> method, see the <xref:System.IO.StreamReader.ReadAsync%2A?displayProperty=fullName> method."
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(false)]

      public virtual System.Threading.Tasks.Task<int> ReadAsync (char[] buffer, int index, int count);
    parameters:
    - id: buffer
      type: System.Char[]
      description: When this method returns, contains the specified character array with the values between <code>index</code> and (<code>index</code> + <code>count</code> - 1) replaced by the characters read from the current source.
    - id: index
      type: System.Int32
      description: The position in <code>buffer</code> at which to begin writing.
    - id: count
      type: System.Int32
      description: The maximum number of characters to read. If the end of the text is reached before the specified number of characters is read into the buffer, the current method returns.
    return:
      type: System.Threading.Tasks.Task{System.Int32}
      description: A task that represents the asynchronous read operation. The value of the <code>TResult</code> parameter contains the total number of bytes read into the buffer. The result value can be less than the number of bytes requested if the number of bytes currently available is less than the requested number, or it can be 0 (zero) if the end of the text has been reached.
  overload: System.IO.TextReader.ReadAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>buffer</code> is `null`.
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: <code>index</code> or <code>count</code> is negative.
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: The sum of <code>index</code> and <code>count</code> is larger than the buffer length.
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: The text reader has been disposed.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: The reader is currently in use by a previous read operation.
  attributes:
  - type: System.Runtime.InteropServices.ComVisibleAttribute
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/TextReader.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.IO.TextReader.ReadBlock(System.Char[],System.Int32,System.Int32)
  commentId: M:System.IO.TextReader.ReadBlock(System.Char[],System.Int32,System.Int32)
  id: ReadBlock(System.Char[],System.Int32,System.Int32)
  parent: System.IO.TextReader
  langs:
  - csharp
  name: ReadBlock(Char[], Int32, Int32)
  nameWithType: TextReader.ReadBlock(Char[], Int32, Int32)
  fullName: TextReader.ReadBlock(Char[], Int32, Int32)
  type: Method
  assemblies:
  - System.IO
  - mscorlib
  - netstandard
  - System.Runtime.Extensions
  namespace: System.IO
  summary: Reads a specified maximum number of characters from the current text reader and writes the data to a buffer, beginning at the specified index.
  remarks: "The position of the underlying text reader is advanced by the number of characters that were read into `buffer`.  \n  \n The method blocks until either `count` characters are read, or all characters have been read. This is a blocking version of <xref:System.IO.TextReader.Read%2A>."
  syntax:
    content: public virtual int ReadBlock (char[] buffer, int index, int count);
    parameters:
    - id: buffer
      type: System.Char[]
      description: When this method returns, this parameter contains the specified character array with the values between <code>index</code> and (<code>index</code> + <code>count</code> -1) replaced by the characters read from the current source.
    - id: index
      type: System.Int32
      description: The position in <code>buffer</code> at which to begin writing.
    - id: count
      type: System.Int32
      description: The maximum number of characters to read.
    return:
      type: System.Int32
      description: The number of characters that have been read. The number will be less than or equal to <code>count</code>, depending on whether all input characters have been read.
  overload: System.IO.TextReader.ReadBlock*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>buffer</code> is `null`.
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: The buffer length minus <code>index</code> is less than <code>count</code>.
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: <code>index</code> or <code>count</code> is negative.
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: The <xref href="System.IO.TextReader"></xref> is closed.
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: An I/O error occurs.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/TextReader.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.IO.TextReader.ReadBlockAsync(System.Char[],System.Int32,System.Int32)
  commentId: M:System.IO.TextReader.ReadBlockAsync(System.Char[],System.Int32,System.Int32)
  id: ReadBlockAsync(System.Char[],System.Int32,System.Int32)
  parent: System.IO.TextReader
  langs:
  - csharp
  name: ReadBlockAsync(Char[], Int32, Int32)
  nameWithType: TextReader.ReadBlockAsync(Char[], Int32, Int32)
  fullName: TextReader.ReadBlockAsync(Char[], Int32, Int32)
  type: Method
  assemblies:
  - System.IO
  - mscorlib
  - netstandard
  - System.Runtime.Extensions
  namespace: System.IO
  summary: Reads a specified maximum number of characters from the current text reader asynchronously and writes the data to a buffer, beginning at the specified index.
  remarks: The task does not complete until either the number of characters specified by the `count` parameter are read, or the end of the text has been reached.
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(false)]

      public virtual System.Threading.Tasks.Task<int> ReadBlockAsync (char[] buffer, int index, int count);
    parameters:
    - id: buffer
      type: System.Char[]
      description: When this method returns, contains the specified character array with the values between <code>index</code> and (<code>index</code> + <code>count</code> - 1) replaced by the characters read from the current source.
    - id: index
      type: System.Int32
      description: The position in <code>buffer</code> at which to begin writing.
    - id: count
      type: System.Int32
      description: The maximum number of characters to read. If the end of the text is reached before the specified number of characters is read into the buffer, the current method returns.
    return:
      type: System.Threading.Tasks.Task{System.Int32}
      description: A task that represents the asynchronous read operation. The value of the <code>TResult</code> parameter contains the total number of bytes read into the buffer. The result value can be less than the number of bytes requested if the number of bytes currently available is less than the requested number, or it can be 0 (zero) if the end of the text has been reached.
  overload: System.IO.TextReader.ReadBlockAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>buffer</code> is `null`.
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: <code>index</code> or <code>count</code> is negative.
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: The sum of <code>index</code> and <code>count</code> is larger than the buffer length.
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: The text reader has been disposed.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: The reader is currently in use by a previous read operation.
  attributes:
  - type: System.Runtime.InteropServices.ComVisibleAttribute
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/TextReader.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.IO.TextReader.ReadLine
  commentId: M:System.IO.TextReader.ReadLine
  id: ReadLine
  parent: System.IO.TextReader
  langs:
  - csharp
  name: ReadLine()
  nameWithType: TextReader.ReadLine()
  fullName: TextReader.ReadLine()
  type: Method
  assemblies:
  - System.IO
  - mscorlib
  - netstandard
  - System.Runtime.Extensions
  namespace: System.IO
  summary: Reads a line of characters from the text reader and returns the data as a string.
  remarks: "A line is defined as a sequence of characters followed by a carriage return (0x000d), a line feed (0x000a), a carriage return followed by a line feed, <xref:System.Environment.NewLine%2A?displayProperty=fullName>, or the end-of-stream marker. The string that is returned does not contain the terminating carriage return or line feed. The return value is `null` if the end of the input stream has been reached.  \n  \n If the method throws an <xref:System.OutOfMemoryException> exception, the reader's position in the underlying <xref:System.IO.Stream> is advanced by the number of characters the method was able to read, but the characters that were already read into the internal <xref:System.IO.TextReader.ReadLine%2A> buffer are discarded. Because the position of the reader in the stream cannot be changed, the characters that were already read are unrecoverable and can be accessed only by reinitializing the <xref:System.IO.TextReader> object. If the initial position within the stream is unknown or the stream does not support seeking, the underlying <xref:System.IO.Stream> also needs to be reinitialized.  \n  \n To avoid such a situation and produce robust code you should use the <xref:System.IO.TextReader.Read%2A> method and store the read characters in a preallocated buffer.  \n  \n The <xref:System.IO.TextReader> class is an abstract class. Therefore, you do not instantiate it in your code. For an example of using the <xref:System.IO.TextReader.ReadLine%2A> method, see the <xref:System.IO.StreamReader.ReadLine%2A?displayProperty=fullName> method."
  syntax:
    content: public virtual string ReadLine ();
    parameters: []
    return:
      type: System.String
      description: The next line from the reader, or `null` if all characters have been read.
  overload: System.IO.TextReader.ReadLine*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: An I/O error occurs.
  - type: System.OutOfMemoryException
    commentId: T:System.OutOfMemoryException
    description: There is insufficient memory to allocate a buffer for the returned string.
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: The <xref href="System.IO.TextReader"></xref> is closed.
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: The number of characters in the next line is larger than <xref href="System.Int32.MaxValue"></xref>
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/TextReader.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.IO.TextReader.ReadLineAsync
  commentId: M:System.IO.TextReader.ReadLineAsync
  id: ReadLineAsync
  parent: System.IO.TextReader
  langs:
  - csharp
  name: ReadLineAsync()
  nameWithType: TextReader.ReadLineAsync()
  fullName: TextReader.ReadLineAsync()
  type: Method
  assemblies:
  - System.IO
  - mscorlib
  - netstandard
  - System.Runtime.Extensions
  namespace: System.IO
  summary: Reads a line of characters asynchronously and returns the data as a string.
  remarks: "The <xref:System.IO.TextReader> class is an abstract class. Therefore, you do not instantiate it in your code. For an example of using the <xref:System.IO.TextReader.ReadLineAsync%2A> method, see the <xref:System.IO.StreamReader.ReadLineAsync%2A?displayProperty=fullName> method.  \n  \n If the current <xref:System.IO.TextReader> represents the standard input stream returned by the <xref:System.Console.In%2A?displayProperty=fullName> property, the <xref:System.IO.TextReader.ReadLineAsync%2A> method executes synchronously rather than asynchronously."
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(false)]

      public virtual System.Threading.Tasks.Task<string> ReadLineAsync ();
    parameters: []
    return:
      type: System.Threading.Tasks.Task{System.String}
      description: A task that represents the asynchronous read operation. The value of the <code>TResult</code> parameter contains the next line from the text reader, or is `null` if all of the characters have been read.
  overload: System.IO.TextReader.ReadLineAsync*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: The number of characters in the next line is larger than <xref href="System.Int32.MaxValue"></xref>.
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: The text reader has been disposed.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: The reader is currently in use by a previous read operation.
  attributes:
  - type: System.Runtime.InteropServices.ComVisibleAttribute
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/TextReader.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.IO.TextReader.ReadToEnd
  commentId: M:System.IO.TextReader.ReadToEnd
  id: ReadToEnd
  parent: System.IO.TextReader
  langs:
  - csharp
  name: ReadToEnd()
  nameWithType: TextReader.ReadToEnd()
  fullName: TextReader.ReadToEnd()
  type: Method
  assemblies:
  - System.IO
  - mscorlib
  - netstandard
  - System.Runtime.Extensions
  namespace: System.IO
  summary: Reads all characters from the current position to the end of the text reader and returns them as one string.
  remarks: "If the method throws an <xref:System.OutOfMemoryException> exception, the reader's position in the underlying <xref:System.IO.Stream> is advanced by the number of characters the method was able to read, but the characters that were already read into the internal <xref:System.IO.TextReader.ReadToEnd%2A> buffer are discarded. Because the position of the reader in the stream cannot be changed, the characters that were already read are unrecoverable and can be accessed only by reinitializing the <xref:System.IO.TextReader>. If the initial position within the stream is unknown or the stream does not support seeking, the underlying <xref:System.IO.Stream> also needs to be reinitialized.  \n  \n To avoid such a situation and produce robust code you should use the <xref:System.IO.TextReader.Read%2A> method and store the read characters in a preallocated buffer.  \n  \n The <xref:System.IO.TextReader> class is an abstract class. Therefore, you do not instantiate it in your code. For an example of using the <xref:System.IO.TextReader.ReadToEnd%2A> method, see the <xref:System.IO.StreamReader.ReadToEnd%2A?displayProperty=fullName> method."
  syntax:
    content: public virtual string ReadToEnd ();
    parameters: []
    return:
      type: System.String
      description: A string that contains all characters from the current position to the end of the text reader.
  overload: System.IO.TextReader.ReadToEnd*
  exceptions:
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: An I/O error occurs.
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: The <xref href="System.IO.TextReader"></xref> is closed.
  - type: System.OutOfMemoryException
    commentId: T:System.OutOfMemoryException
    description: There is insufficient memory to allocate a buffer for the returned string.
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: The number of characters in the next line is larger than <xref href="System.Int32.MaxValue"></xref>
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/TextReader.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.IO.TextReader.ReadToEndAsync
  commentId: M:System.IO.TextReader.ReadToEndAsync
  id: ReadToEndAsync
  parent: System.IO.TextReader
  langs:
  - csharp
  name: ReadToEndAsync()
  nameWithType: TextReader.ReadToEndAsync()
  fullName: TextReader.ReadToEndAsync()
  type: Method
  assemblies:
  - System.IO
  - mscorlib
  - netstandard
  - System.Runtime.Extensions
  namespace: System.IO
  summary: Reads all characters from the current position to the end of the text reader asynchronously and returns them as one string.
  remarks: The <xref:System.IO.TextReader> class is an abstract class. Therefore, you do not instantiate it in your code. For an example of using the <xref:System.IO.TextReader.ReadToEndAsync%2A> method, see the <xref:System.IO.StreamReader.ReadToEndAsync%2A?displayProperty=fullName> method.
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(false)]

      public virtual System.Threading.Tasks.Task<string> ReadToEndAsync ();
    parameters: []
    return:
      type: System.Threading.Tasks.Task{System.String}
      description: A task that represents the asynchronous read operation. The value of the <code>TResult</code> parameter contains a string with the characters from the current position to the end of the text reader.
  overload: System.IO.TextReader.ReadToEndAsync*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: The number of characters is larger than <xref href="System.Int32.MaxValue"></xref>.
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: The text reader has been disposed.
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: The reader is currently in use by a previous read operation.
  attributes:
  - type: System.Runtime.InteropServices.ComVisibleAttribute
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/TextReader.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.IO.TextReader.Synchronized(System.IO.TextReader)
  commentId: M:System.IO.TextReader.Synchronized(System.IO.TextReader)
  id: Synchronized(System.IO.TextReader)
  parent: System.IO.TextReader
  langs:
  - csharp
  name: Synchronized(TextReader)
  nameWithType: TextReader.Synchronized(TextReader)
  fullName: TextReader.Synchronized(TextReader)
  type: Method
  assemblies:
  - mscorlib
  - netstandard
  - System.Runtime.Extensions
  namespace: System.IO
  summary: Creates a thread-safe wrapper around the specified `TextReader`.
  remarks: The current method returns a class that wraps around the specified <xref:System.IO.TextReader> instance and restricts access to it by multiple threads. All reads from the returned wrapper will be thread safe.
  syntax:
    content: public static System.IO.TextReader Synchronized (System.IO.TextReader reader);
    parameters:
    - id: reader
      type: System.IO.TextReader
      description: The `TextReader` to synchronize.
    return:
      type: System.IO.TextReader
      description: A thread-safe <xref href="System.IO.TextReader"></xref>.
  overload: System.IO.TextReader.Synchronized*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>reader</code> is `null`.
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/TextReader.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
references:
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.ObjectDisposedException
  parent: System
  isExternal: false
  name: ObjectDisposedException
  nameWithType: ObjectDisposedException
  fullName: System.ObjectDisposedException
- uid: System.IO.IOException
  parent: System.IO
  isExternal: false
  name: IOException
  nameWithType: IOException
  fullName: System.IO.IOException
- uid: System.ArgumentNullException
  parent: System
  isExternal: false
  name: ArgumentNullException
  nameWithType: ArgumentNullException
  fullName: System.ArgumentNullException
- uid: System.ArgumentException
  parent: System
  isExternal: false
  name: ArgumentException
  nameWithType: ArgumentException
  fullName: System.ArgumentException
- uid: System.ArgumentOutOfRangeException
  parent: System
  isExternal: false
  name: ArgumentOutOfRangeException
  nameWithType: ArgumentOutOfRangeException
  fullName: System.ArgumentOutOfRangeException
- uid: System.InvalidOperationException
  parent: System
  isExternal: false
  name: InvalidOperationException
  nameWithType: InvalidOperationException
  fullName: System.InvalidOperationException
- uid: System.OutOfMemoryException
  parent: System
  isExternal: false
  name: OutOfMemoryException
  nameWithType: OutOfMemoryException
  fullName: System.OutOfMemoryException
- uid: System.IO.TextReader.#ctor
  parent: System.IO.TextReader
  isExternal: false
  name: TextReader()
  nameWithType: TextReader.TextReader()
  fullName: TextReader.TextReader()
- uid: System.IO.TextReader.Close
  parent: System.IO.TextReader
  isExternal: false
  name: Close()
  nameWithType: TextReader.Close()
  fullName: TextReader.Close()
- uid: System.IO.TextReader.Dispose
  parent: System.IO.TextReader
  isExternal: false
  name: Dispose()
  nameWithType: TextReader.Dispose()
  fullName: TextReader.Dispose()
- uid: System.IO.TextReader.Dispose(System.Boolean)
  parent: System.IO.TextReader
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: TextReader.Dispose(Boolean)
  fullName: TextReader.Dispose(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.IO.TextReader.Null
  parent: System.IO.TextReader
  isExternal: false
  name: "Null"
  nameWithType: TextReader.Null
  fullName: TextReader.Null
- uid: System.IO.TextReader
  parent: System.IO
  isExternal: false
  name: TextReader
  nameWithType: TextReader
  fullName: System.IO.TextReader
- uid: System.IO.TextReader.Peek
  parent: System.IO.TextReader
  isExternal: false
  name: Peek()
  nameWithType: TextReader.Peek()
  fullName: TextReader.Peek()
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.IO.TextReader.Read
  parent: System.IO.TextReader
  isExternal: false
  name: Read()
  nameWithType: TextReader.Read()
  fullName: TextReader.Read()
- uid: System.IO.TextReader.Read(System.Char[],System.Int32,System.Int32)
  parent: System.IO.TextReader
  isExternal: false
  name: Read(Char[], Int32, Int32)
  nameWithType: TextReader.Read(Char[], Int32, Int32)
  fullName: TextReader.Read(Char[], Int32, Int32)
- uid: System.Char
  name: Char
  nameWithType: Char
  fullName: System.Char
- uid: System.Char[]
  parent: System
  isExternal: false
  name: Char[]
  nameWithType: Char[]
  fullName: System.Char[]
  spec.csharp:
  - uid: System.Char
    name: Char
    nameWithType: Char
    fullName: System.Char
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.IO.TextReader.ReadAsync(System.Char[],System.Int32,System.Int32)
  parent: System.IO.TextReader
  isExternal: false
  name: ReadAsync(Char[], Int32, Int32)
  nameWithType: TextReader.ReadAsync(Char[], Int32, Int32)
  fullName: TextReader.ReadAsync(Char[], Int32, Int32)
- uid: System.Threading.Tasks.Task`1
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
- uid: System.Threading.Tasks.Task{System.Int32}
  parent: System.Threading.Tasks
  isExternal: false
  name: Task<Int32>
  nameWithType: Task<Int32>
  fullName: System.Threading.Tasks.Task<System.Int32>
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.IO.TextReader.ReadBlock(System.Char[],System.Int32,System.Int32)
  parent: System.IO.TextReader
  isExternal: false
  name: ReadBlock(Char[], Int32, Int32)
  nameWithType: TextReader.ReadBlock(Char[], Int32, Int32)
  fullName: TextReader.ReadBlock(Char[], Int32, Int32)
- uid: System.IO.TextReader.ReadBlockAsync(System.Char[],System.Int32,System.Int32)
  parent: System.IO.TextReader
  isExternal: false
  name: ReadBlockAsync(Char[], Int32, Int32)
  nameWithType: TextReader.ReadBlockAsync(Char[], Int32, Int32)
  fullName: TextReader.ReadBlockAsync(Char[], Int32, Int32)
- uid: System.IO.TextReader.ReadLine
  parent: System.IO.TextReader
  isExternal: false
  name: ReadLine()
  nameWithType: TextReader.ReadLine()
  fullName: TextReader.ReadLine()
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.IO.TextReader.ReadLineAsync
  parent: System.IO.TextReader
  isExternal: false
  name: ReadLineAsync()
  nameWithType: TextReader.ReadLineAsync()
  fullName: TextReader.ReadLineAsync()
- uid: System.Threading.Tasks.Task{System.String}
  parent: System.Threading.Tasks
  isExternal: false
  name: Task<String>
  nameWithType: Task<String>
  fullName: System.Threading.Tasks.Task<System.String>
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.IO.TextReader.ReadToEnd
  parent: System.IO.TextReader
  isExternal: false
  name: ReadToEnd()
  nameWithType: TextReader.ReadToEnd()
  fullName: TextReader.ReadToEnd()
- uid: System.IO.TextReader.ReadToEndAsync
  parent: System.IO.TextReader
  isExternal: false
  name: ReadToEndAsync()
  nameWithType: TextReader.ReadToEndAsync()
  fullName: TextReader.ReadToEndAsync()
- uid: System.IO.TextReader.Synchronized(System.IO.TextReader)
  parent: System.IO.TextReader
  isExternal: false
  name: Synchronized(TextReader)
  nameWithType: TextReader.Synchronized(TextReader)
  fullName: TextReader.Synchronized(TextReader)
- uid: System.IO.TextReader.#ctor*
  parent: System.IO.TextReader
  isExternal: false
  name: TextReader
  nameWithType: TextReader.TextReader
  fullName: TextReader.TextReader
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/TextReader.xml
- uid: System.IO.TextReader.Close*
  parent: System.IO.TextReader
  isExternal: false
  name: Close
  nameWithType: TextReader.Close
  fullName: TextReader.Close
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/TextReader.xml
- uid: System.IO.TextReader.Dispose*
  parent: System.IO.TextReader
  isExternal: false
  name: Dispose
  nameWithType: TextReader.Dispose
  fullName: TextReader.Dispose
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/TextReader.xml
- uid: System.IO.TextReader.Peek*
  parent: System.IO.TextReader
  isExternal: false
  name: Peek
  nameWithType: TextReader.Peek
  fullName: TextReader.Peek
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/TextReader.xml
- uid: System.IO.TextReader.Read*
  parent: System.IO.TextReader
  isExternal: false
  name: Read
  nameWithType: TextReader.Read
  fullName: TextReader.Read
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/TextReader.xml
- uid: System.IO.TextReader.ReadAsync*
  parent: System.IO.TextReader
  isExternal: false
  name: ReadAsync
  nameWithType: TextReader.ReadAsync
  fullName: TextReader.ReadAsync
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/TextReader.xml
- uid: System.IO.TextReader.ReadBlock*
  parent: System.IO.TextReader
  isExternal: false
  name: ReadBlock
  nameWithType: TextReader.ReadBlock
  fullName: TextReader.ReadBlock
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/TextReader.xml
- uid: System.IO.TextReader.ReadBlockAsync*
  parent: System.IO.TextReader
  isExternal: false
  name: ReadBlockAsync
  nameWithType: TextReader.ReadBlockAsync
  fullName: TextReader.ReadBlockAsync
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/TextReader.xml
- uid: System.IO.TextReader.ReadLine*
  parent: System.IO.TextReader
  isExternal: false
  name: ReadLine
  nameWithType: TextReader.ReadLine
  fullName: TextReader.ReadLine
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/TextReader.xml
- uid: System.IO.TextReader.ReadLineAsync*
  parent: System.IO.TextReader
  isExternal: false
  name: ReadLineAsync
  nameWithType: TextReader.ReadLineAsync
  fullName: TextReader.ReadLineAsync
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/TextReader.xml
- uid: System.IO.TextReader.ReadToEnd*
  parent: System.IO.TextReader
  isExternal: false
  name: ReadToEnd
  nameWithType: TextReader.ReadToEnd
  fullName: TextReader.ReadToEnd
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/TextReader.xml
- uid: System.IO.TextReader.ReadToEndAsync*
  parent: System.IO.TextReader
  isExternal: false
  name: ReadToEndAsync
  nameWithType: TextReader.ReadToEndAsync
  fullName: TextReader.ReadToEndAsync
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.0
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.5
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/TextReader.xml
- uid: System.IO.TextReader.Synchronized*
  parent: System.IO.TextReader
  isExternal: false
  name: Synchronized
  nameWithType: TextReader.Synchronized
  fullName: TextReader.Synchronized
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IO/TextReader.xml
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: Object.Equals(Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: Object.Equals(Object, Object)
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: false
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: Object.GetHashCode()
- uid: System.Object.GetType
  parent: System.Object
  isExternal: false
  name: GetType()
  nameWithType: Object.GetType()
  fullName: Object.GetType()
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: false
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: Object.MemberwiseClone()
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: Object.ReferenceEquals(Object, Object)
- uid: System.Object.ToString
  parent: System.Object
  isExternal: false
  name: ToString()
  nameWithType: Object.ToString()
  fullName: Object.ToString()
- uid: System.IDisposable
  parent: System
  isExternal: false
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
