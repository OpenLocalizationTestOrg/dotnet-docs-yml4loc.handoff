### YamlMime:ManagedReference
items:
- uid: System.Security.Cryptography.ManifestSignatureInformation
  commentId: T:System.Security.Cryptography.ManifestSignatureInformation
  id: ManifestSignatureInformation
  children:
  - System.Security.Cryptography.ManifestSignatureInformation.AuthenticodeSignature
  - System.Security.Cryptography.ManifestSignatureInformation.Manifest
  - System.Security.Cryptography.ManifestSignatureInformation.StrongNameSignature
  - System.Security.Cryptography.ManifestSignatureInformation.VerifySignature(System.ActivationContext)
  - System.Security.Cryptography.ManifestSignatureInformation.VerifySignature(System.ActivationContext,System.Security.ManifestKinds)
  - System.Security.Cryptography.ManifestSignatureInformation.VerifySignature(System.ActivationContext,System.Security.ManifestKinds,System.Security.Cryptography.X509Certificates.X509RevocationFlag,System.Security.Cryptography.X509Certificates.X509RevocationMode)
  langs:
  - csharp
  name: ManifestSignatureInformation
  nameWithType: ManifestSignatureInformation
  fullName: System.Security.Cryptography.ManifestSignatureInformation
  type: Class
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: Provides information for a manifest signature.
  remarks: Use the <xref:System.Security.Cryptography.ManifestSignatureInformation.VerifySignature%2A> method to obtain a <xref:System.Security.Cryptography.ManifestSignatureInformationCollection> object that can be use to examine the signature information.
  syntax:
    content: public sealed class ManifestSignatureInformation
  inheritance:
  - System.Object
  implements: []
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/ManifestSignatureInformation.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.Cryptography.ManifestSignatureInformation.AuthenticodeSignature
  commentId: P:System.Security.Cryptography.ManifestSignatureInformation.AuthenticodeSignature
  id: AuthenticodeSignature
  parent: System.Security.Cryptography.ManifestSignatureInformation
  langs:
  - csharp
  name: AuthenticodeSignature
  nameWithType: ManifestSignatureInformation.AuthenticodeSignature
  fullName: ManifestSignatureInformation.AuthenticodeSignature
  type: Property
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: Gets the Authenticode signature information for a manifest.
  syntax:
    content: public System.Security.Cryptography.X509Certificates.AuthenticodeSignatureInformation AuthenticodeSignature { get; }
    return:
      type: System.Security.Cryptography.X509Certificates.AuthenticodeSignatureInformation
      description: An <xref href="System.Security.Cryptography.X509Certificates.AuthenticodeSignatureInformation"></xref> object that contains Authenticode signature information for the manifest, or `null` if there is no signature.
  overload: System.Security.Cryptography.ManifestSignatureInformation.AuthenticodeSignature*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/ManifestSignatureInformation.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.Cryptography.ManifestSignatureInformation.Manifest
  commentId: P:System.Security.Cryptography.ManifestSignatureInformation.Manifest
  id: Manifest
  parent: System.Security.Cryptography.ManifestSignatureInformation
  langs:
  - csharp
  name: Manifest
  nameWithType: ManifestSignatureInformation.Manifest
  fullName: ManifestSignatureInformation.Manifest
  type: Property
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: Gets the type of a manifest.
  syntax:
    content: public System.Security.ManifestKinds Manifest { get; }
    return:
      type: System.Security.ManifestKinds
      description: One of the <xref href="System.Security.ManifestKinds"></xref> values.
  overload: System.Security.Cryptography.ManifestSignatureInformation.Manifest*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/ManifestSignatureInformation.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.Cryptography.ManifestSignatureInformation.StrongNameSignature
  commentId: P:System.Security.Cryptography.ManifestSignatureInformation.StrongNameSignature
  id: StrongNameSignature
  parent: System.Security.Cryptography.ManifestSignatureInformation
  langs:
  - csharp
  name: StrongNameSignature
  nameWithType: ManifestSignatureInformation.StrongNameSignature
  fullName: ManifestSignatureInformation.StrongNameSignature
  type: Property
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: Gets the details of the strong name signature of a manifest.
  syntax:
    content: public System.Security.Cryptography.StrongNameSignatureInformation StrongNameSignature { get; }
    return:
      type: System.Security.Cryptography.StrongNameSignatureInformation
      description: A <xref href="System.Security.Cryptography.ManifestSignatureInformation.StrongNameSignature"></xref> object that contains the signature, or `null` if there is no strong name signature.
  overload: System.Security.Cryptography.ManifestSignatureInformation.StrongNameSignature*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/ManifestSignatureInformation.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.Cryptography.ManifestSignatureInformation.VerifySignature(System.ActivationContext)
  commentId: M:System.Security.Cryptography.ManifestSignatureInformation.VerifySignature(System.ActivationContext)
  id: VerifySignature(System.ActivationContext)
  parent: System.Security.Cryptography.ManifestSignatureInformation
  langs:
  - csharp
  name: VerifySignature(ActivationContext)
  nameWithType: ManifestSignatureInformation.VerifySignature(ActivationContext)
  fullName: ManifestSignatureInformation.VerifySignature(ActivationContext)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: Gathers and verifies information about the signatures of manifests that belong to a specified activation context.
  syntax:
    content: public static System.Security.Cryptography.ManifestSignatureInformationCollection VerifySignature (ActivationContext application);
    parameters:
    - id: application
      type: System.ActivationContext
      description: The activation context of the manifest. Activation contexts belong to an application and contain multiple manifests.
    return:
      type: System.Security.Cryptography.ManifestSignatureInformationCollection
      description: A collection that contains a <xref href="System.Security.Cryptography.ManifestSignatureInformation"></xref> object for each manifest that is verified.
  overload: System.Security.Cryptography.ManifestSignatureInformation.VerifySignature*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code>application</code> parameter is `null`.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/ManifestSignatureInformation.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.Cryptography.ManifestSignatureInformation.VerifySignature(System.ActivationContext,System.Security.ManifestKinds)
  commentId: M:System.Security.Cryptography.ManifestSignatureInformation.VerifySignature(System.ActivationContext,System.Security.ManifestKinds)
  id: VerifySignature(System.ActivationContext,System.Security.ManifestKinds)
  parent: System.Security.Cryptography.ManifestSignatureInformation
  langs:
  - csharp
  name: VerifySignature(ActivationContext, ManifestKinds)
  nameWithType: ManifestSignatureInformation.VerifySignature(ActivationContext, ManifestKinds)
  fullName: ManifestSignatureInformation.VerifySignature(ActivationContext, ManifestKinds)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: Gathers and verifies information about the signatures of manifests that belong to a specified activation context and manifest type.
  syntax:
    content: public static System.Security.Cryptography.ManifestSignatureInformationCollection VerifySignature (ActivationContext application, System.Security.ManifestKinds manifests);
    parameters:
    - id: application
      type: System.ActivationContext
      description: The activation context of the manifest. Activation contexts belong to an application and contain multiple manifests.
    - id: manifests
      type: System.Security.ManifestKinds
      description: The type of manifest. This parameter specifies which manifests in the activation context you want to verify.
    return:
      type: System.Security.Cryptography.ManifestSignatureInformationCollection
      description: A collection that contains a <xref href="System.Security.Cryptography.ManifestSignatureInformation"></xref> object for each manifest that is verified.
  overload: System.Security.Cryptography.ManifestSignatureInformation.VerifySignature*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code>application</code> parameter is `null`.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/ManifestSignatureInformation.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.Cryptography.ManifestSignatureInformation.VerifySignature(System.ActivationContext,System.Security.ManifestKinds,System.Security.Cryptography.X509Certificates.X509RevocationFlag,System.Security.Cryptography.X509Certificates.X509RevocationMode)
  commentId: M:System.Security.Cryptography.ManifestSignatureInformation.VerifySignature(System.ActivationContext,System.Security.ManifestKinds,System.Security.Cryptography.X509Certificates.X509RevocationFlag,System.Security.Cryptography.X509Certificates.X509RevocationMode)
  id: VerifySignature(System.ActivationContext,System.Security.ManifestKinds,System.Security.Cryptography.X509Certificates.X509RevocationFlag,System.Security.Cryptography.X509Certificates.X509RevocationMode)
  parent: System.Security.Cryptography.ManifestSignatureInformation
  langs:
  - csharp
  name: VerifySignature(ActivationContext, ManifestKinds, X509RevocationFlag, X509RevocationMode)
  nameWithType: ManifestSignatureInformation.VerifySignature(ActivationContext, ManifestKinds, X509RevocationFlag, X509RevocationMode)
  fullName: ManifestSignatureInformation.VerifySignature(ActivationContext, ManifestKinds, X509RevocationFlag, X509RevocationMode)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: Gathers and verifies information about the signatures of manifests that belong to a specified activation context and manifest type, and allows certificates to be selected for revocation.
  syntax:
    content: public static System.Security.Cryptography.ManifestSignatureInformationCollection VerifySignature (ActivationContext application, System.Security.ManifestKinds manifests, System.Security.Cryptography.X509Certificates.X509RevocationFlag revocationFlag, System.Security.Cryptography.X509Certificates.X509RevocationMode revocationMode);
    parameters:
    - id: application
      type: System.ActivationContext
      description: The application context of the manifests. Activation contexts belong to an application and contain multiple manifests.
    - id: manifests
      type: System.Security.ManifestKinds
      description: The type of manifest. This parameter specifies which manifests in the activation context you want to verify.
    - id: revocationFlag
      type: System.Security.Cryptography.X509Certificates.X509RevocationFlag
      description: One of the enumeration values that specifies which certificates in the chain are checked for revocation. The default is <xref href="System.Security.Cryptography.X509Certificates.X509RevocationFlag.ExcludeRoot"></xref>.
    - id: revocationMode
      type: System.Security.Cryptography.X509Certificates.X509RevocationMode
      description: Determines whether the X.509 verification should look online for revocation lists.
    return:
      type: System.Security.Cryptography.ManifestSignatureInformationCollection
      description: A collection that contains a <xref href="System.Security.Cryptography.ManifestSignatureInformation"></xref> object for each manifest that is verified.
  overload: System.Security.Cryptography.ManifestSignatureInformation.VerifySignature*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code>application</code> parameter is `null`.
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: A value specified for the <code>revocationFlag</code> or <code>revocationMode</code> parameter is invalid.
  attributes: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/ManifestSignatureInformation.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
references:
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.ArgumentNullException
  parent: System
  isExternal: false
  name: ArgumentNullException
  nameWithType: ArgumentNullException
  fullName: System.ArgumentNullException
- uid: System.ArgumentOutOfRangeException
  parent: System
  isExternal: false
  name: ArgumentOutOfRangeException
  nameWithType: ArgumentOutOfRangeException
  fullName: System.ArgumentOutOfRangeException
- uid: System.Security.Cryptography.ManifestSignatureInformation.AuthenticodeSignature
  parent: System.Security.Cryptography.ManifestSignatureInformation
  isExternal: false
  name: AuthenticodeSignature
  nameWithType: ManifestSignatureInformation.AuthenticodeSignature
  fullName: ManifestSignatureInformation.AuthenticodeSignature
- uid: System.Security.Cryptography.X509Certificates.AuthenticodeSignatureInformation
  parent: System.Security.Cryptography.X509Certificates
  isExternal: false
  name: AuthenticodeSignatureInformation
  nameWithType: AuthenticodeSignatureInformation
  fullName: System.Security.Cryptography.X509Certificates.AuthenticodeSignatureInformation
- uid: System.Security.Cryptography.ManifestSignatureInformation.Manifest
  parent: System.Security.Cryptography.ManifestSignatureInformation
  isExternal: false
  name: Manifest
  nameWithType: ManifestSignatureInformation.Manifest
  fullName: ManifestSignatureInformation.Manifest
- uid: System.Security.ManifestKinds
  parent: System.Security
  isExternal: false
  name: ManifestKinds
  nameWithType: ManifestKinds
  fullName: System.Security.ManifestKinds
- uid: System.Security.Cryptography.ManifestSignatureInformation.StrongNameSignature
  parent: System.Security.Cryptography.ManifestSignatureInformation
  isExternal: false
  name: StrongNameSignature
  nameWithType: ManifestSignatureInformation.StrongNameSignature
  fullName: ManifestSignatureInformation.StrongNameSignature
- uid: System.Security.Cryptography.StrongNameSignatureInformation
  parent: System.Security.Cryptography
  isExternal: false
  name: StrongNameSignatureInformation
  nameWithType: StrongNameSignatureInformation
  fullName: System.Security.Cryptography.StrongNameSignatureInformation
- uid: System.Security.Cryptography.ManifestSignatureInformation.VerifySignature(System.ActivationContext)
  parent: System.Security.Cryptography.ManifestSignatureInformation
  isExternal: false
  name: VerifySignature(ActivationContext)
  nameWithType: ManifestSignatureInformation.VerifySignature(ActivationContext)
  fullName: ManifestSignatureInformation.VerifySignature(ActivationContext)
- uid: System.Security.Cryptography.ManifestSignatureInformationCollection
  parent: System.Security.Cryptography
  isExternal: false
  name: ManifestSignatureInformationCollection
  nameWithType: ManifestSignatureInformationCollection
  fullName: System.Security.Cryptography.ManifestSignatureInformationCollection
- uid: System.ActivationContext
  parent: System
  isExternal: false
  name: ActivationContext
  nameWithType: ActivationContext
  fullName: System.ActivationContext
- uid: System.Security.Cryptography.ManifestSignatureInformation.VerifySignature(System.ActivationContext,System.Security.ManifestKinds)
  parent: System.Security.Cryptography.ManifestSignatureInformation
  isExternal: false
  name: VerifySignature(ActivationContext, ManifestKinds)
  nameWithType: ManifestSignatureInformation.VerifySignature(ActivationContext, ManifestKinds)
  fullName: ManifestSignatureInformation.VerifySignature(ActivationContext, ManifestKinds)
- uid: System.Security.Cryptography.ManifestSignatureInformation.VerifySignature(System.ActivationContext,System.Security.ManifestKinds,System.Security.Cryptography.X509Certificates.X509RevocationFlag,System.Security.Cryptography.X509Certificates.X509RevocationMode)
  parent: System.Security.Cryptography.ManifestSignatureInformation
  isExternal: false
  name: VerifySignature(ActivationContext, ManifestKinds, X509RevocationFlag, X509RevocationMode)
  nameWithType: ManifestSignatureInformation.VerifySignature(ActivationContext, ManifestKinds, X509RevocationFlag, X509RevocationMode)
  fullName: ManifestSignatureInformation.VerifySignature(ActivationContext, ManifestKinds, X509RevocationFlag, X509RevocationMode)
- uid: System.Security.Cryptography.X509Certificates.X509RevocationFlag
  parent: System.Security.Cryptography.X509Certificates
  isExternal: false
  name: X509RevocationFlag
  nameWithType: X509RevocationFlag
  fullName: System.Security.Cryptography.X509Certificates.X509RevocationFlag
- uid: System.Security.Cryptography.X509Certificates.X509RevocationMode
  parent: System.Security.Cryptography.X509Certificates
  isExternal: false
  name: X509RevocationMode
  nameWithType: X509RevocationMode
  fullName: System.Security.Cryptography.X509Certificates.X509RevocationMode
- uid: System.Security.Cryptography.ManifestSignatureInformation.AuthenticodeSignature*
  parent: System.Security.Cryptography.ManifestSignatureInformation
  isExternal: false
  name: AuthenticodeSignature
  nameWithType: ManifestSignatureInformation.AuthenticodeSignature
  fullName: ManifestSignatureInformation.AuthenticodeSignature
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/ManifestSignatureInformation.xml
- uid: System.Security.Cryptography.ManifestSignatureInformation.Manifest*
  parent: System.Security.Cryptography.ManifestSignatureInformation
  isExternal: false
  name: Manifest
  nameWithType: ManifestSignatureInformation.Manifest
  fullName: ManifestSignatureInformation.Manifest
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/ManifestSignatureInformation.xml
- uid: System.Security.Cryptography.ManifestSignatureInformation.StrongNameSignature*
  parent: System.Security.Cryptography.ManifestSignatureInformation
  isExternal: false
  name: StrongNameSignature
  nameWithType: ManifestSignatureInformation.StrongNameSignature
  fullName: ManifestSignatureInformation.StrongNameSignature
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/ManifestSignatureInformation.xml
- uid: System.Security.Cryptography.ManifestSignatureInformation.VerifySignature*
  parent: System.Security.Cryptography.ManifestSignatureInformation
  isExternal: false
  name: VerifySignature
  nameWithType: ManifestSignatureInformation.VerifySignature
  fullName: ManifestSignatureInformation.VerifySignature
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Cryptography/ManifestSignatureInformation.xml
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: Object.Equals(Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: Object.Equals(Object, Object)
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: false
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: Object.GetHashCode()
- uid: System.Object.GetType
  parent: System.Object
  isExternal: false
  name: GetType()
  nameWithType: Object.GetType()
  fullName: Object.GetType()
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: false
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: Object.MemberwiseClone()
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: Object.ReferenceEquals(Object, Object)
- uid: System.Object.ToString
  parent: System.Object
  isExternal: false
  name: ToString()
  nameWithType: Object.ToString()
  fullName: Object.ToString()
