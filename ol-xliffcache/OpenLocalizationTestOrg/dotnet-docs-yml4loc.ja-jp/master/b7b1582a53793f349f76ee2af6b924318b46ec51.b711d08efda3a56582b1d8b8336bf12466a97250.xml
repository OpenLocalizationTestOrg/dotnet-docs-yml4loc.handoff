{"nodes":[{"content":"Represents an issuer name registry that maintains a list of trusted issuers loaded from elements in the application configuration file that associate each issuer name to the X.509 certificate that is needed to verify the signature of tokens produced by the issuer.","nodes":[{"pos":[0,264],"content":"Represents an issuer name registry that maintains a list of trusted issuers loaded from elements in the application configuration file that associate each issuer name to the X.509 certificate that is needed to verify the signature of tokens produced by the issuer.","nodes":[{"content":"Represents an issuer name registry that maintains a list of trusted issuers loaded from elements in the application configuration file that associate each issuer name to the X.509 certificate that is needed to verify the signature of tokens produced by the issuer.","pos":[0,264]}]}],"pos":[1070,1335],"yaml":true},{"content":"The <xref:System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry> class maintains a dictionary of trusted issuers by mapping the certificate of each trusted issuer to a name that refers to that issuer. The certificates are specified using the ASN.1 encoded form of the thumbprint. The issuer name can be any string, as long as it is unique within the scope of the application. This dictionary can be accessed through the <xref:System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry.ConfiguredTrustedIssuers%2A> property. The class can only resolve X.509 certificates.  \n  \n The map of trusted issuers is specified in a configuration file by adding entries under the [\\&lt;trustedIssuers\\&gt;](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/trustedissuers.md) element. The `<trustedIssuers>` element is a child element of the [\\&lt;issuerNameRegistry\\&gt;](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/issuernameregistry.md) element and it is valid when the <xref:System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry> class is specified in the `type` attribute of that element. For more information, see the documentation for each of these elements in the [WIF Configuration Schema](http://msdn.microsoft.com/library/4d4f6d76-49a5-4bad-b345-097b2e2844e9). For more information about issuer name registries, see the <xref:System.IdentityModel.Tokens.IssuerNameRegistry> class.  \n  \n You can derive from <xref:System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry> to implement your own configuration based issuer name registry. Which methods you override will depend upon your implementation. For example, you can override the <xref:System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry.LoadCustomConfiguration%2A> method to load configuration from a custom configuration schema.","nodes":[{"pos":[0,587],"content":"The <xref:System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry> class maintains a dictionary of trusted issuers by mapping the certificate of each trusted issuer to a name that refers to that issuer. The certificates are specified using the ASN.1 encoded form of the thumbprint. The issuer name can be any string, as long as it is unique within the scope of the application. This dictionary can be accessed through the <xref:System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry.ConfiguredTrustedIssuers%2A> property. The class can only resolve X.509 certificates.","nodes":[{"content":"The <xref:System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry> class maintains a dictionary of trusted issuers by mapping the certificate of each trusted issuer to a name that refers to that issuer. The certificates are specified using the ASN.1 encoded form of the thumbprint. The issuer name can be any string, as long as it is unique within the scope of the application. This dictionary can be accessed through the <xref:System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry.ConfiguredTrustedIssuers%2A> property. The class can only resolve X.509 certificates.","pos":[0,587],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry&gt;</ph> class maintains a dictionary of trusted issuers by mapping the certificate of each trusted issuer to a name that refers to that issuer.","pos":[0,211],"source":"The <xref:System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry> class maintains a dictionary of trusted issuers by mapping the certificate of each trusted issuer to a name that refers to that issuer."},{"content":"The certificates are specified using the ASN.1 encoded form of the thumbprint.","pos":[212,290]},{"content":"The issuer name can be any string, as long as it is unique within the scope of the application.","pos":[291,386]},{"content":"This dictionary can be accessed through the <ph id=\"ph1\">&lt;xref:System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry.ConfiguredTrustedIssuers%2A&gt;</ph> property.","pos":[387,540],"source":" This dictionary can be accessed through the <xref:System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry.ConfiguredTrustedIssuers%2A> property."},{"content":"The class can only resolve X.509 certificates.","pos":[541,587]}]}]},{"pos":[594,1458],"content":"The map of trusted issuers is specified in a configuration file by adding entries under the [\\&lt;trustedIssuers\\&gt;](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/trustedissuers.md) element. The `<trustedIssuers>` element is a child element of the [\\&lt;issuerNameRegistry\\&gt;](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/issuernameregistry.md) element and it is valid when the <xref:System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry> class is specified in the `type` attribute of that element. For more information, see the documentation for each of these elements in the [WIF Configuration Schema](http://msdn.microsoft.com/library/4d4f6d76-49a5-4bad-b345-097b2e2844e9). For more information about issuer name registries, see the <xref:System.IdentityModel.Tokens.IssuerNameRegistry> class.","nodes":[{"content":"The map of trusted issuers is specified in a configuration file by adding entries under the <bpt id=\"p1\">[</bpt><ph id=\"ph1\">\\&amp;</ph>lt;trustedIssuers<ph id=\"ph2\">\\&amp;</ph>gt;<ept id=\"p1\">](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/trustedissuers.md)</ept> element.","pos":[0,218],"source":"The map of trusted issuers is specified in a configuration file by adding entries under the [\\&lt;trustedIssuers\\&gt;](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/trustedissuers.md) element."},{"content":"The <ph id=\"ph1\">`&lt;trustedIssuers&gt;`</ph> element is a child element of the <bpt id=\"p1\">[</bpt><ph id=\"ph2\">\\&amp;</ph>lt;issuerNameRegistry<ph id=\"ph3\">\\&amp;</ph>gt;<ept id=\"p1\">](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/issuernameregistry.md)</ept> element and it is valid when the <ph id=\"ph4\">&lt;xref:System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry&gt;</ph> class is specified in the <ph id=\"ph5\">`type`</ph> attribute of that element.","pos":[219,566],"source":" The `<trustedIssuers>` element is a child element of the [\\&lt;issuerNameRegistry\\&gt;](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/issuernameregistry.md) element and it is valid when the <xref:System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry> class is specified in the `type` attribute of that element."},{"content":"For more information, see the documentation for each of these elements in the <bpt id=\"p1\">[</bpt>WIF Configuration Schema<ept id=\"p1\">](http://msdn.microsoft.com/library/4d4f6d76-49a5-4bad-b345-097b2e2844e9)</ept>.","pos":[567,744],"source":" For more information, see the documentation for each of these elements in the [WIF Configuration Schema](http://msdn.microsoft.com/library/4d4f6d76-49a5-4bad-b345-097b2e2844e9)."},{"content":"For more information about issuer name registries, see the <ph id=\"ph1\">&lt;xref:System.IdentityModel.Tokens.IssuerNameRegistry&gt;</ph> class.","pos":[745,864],"source":" For more information about issuer name registries, see the <xref:System.IdentityModel.Tokens.IssuerNameRegistry> class."}]},{"pos":[1465,1883],"content":"You can derive from <xref:System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry> to implement your own configuration based issuer name registry. Which methods you override will depend upon your implementation. For example, you can override the <xref:System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry.LoadCustomConfiguration%2A> method to load configuration from a custom configuration schema.","nodes":[{"content":"You can derive from <xref:System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry> to implement your own configuration based issuer name registry. Which methods you override will depend upon your implementation. For example, you can override the <xref:System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry.LoadCustomConfiguration%2A> method to load configuration from a custom configuration schema.","pos":[0,418],"nodes":[{"content":"You can derive from <ph id=\"ph1\">&lt;xref:System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry&gt;</ph> to implement your own configuration based issuer name registry.","pos":[0,155],"source":"You can derive from <xref:System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry> to implement your own configuration based issuer name registry."},{"content":"Which methods you override will depend upon your implementation.","pos":[156,220]},{"content":"For example, you can override the <ph id=\"ph1\">&lt;xref:System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry.LoadCustomConfiguration%2A&gt;</ph> method to load configuration from a custom configuration schema.","pos":[221,418],"source":" For example, you can override the <xref:System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry.LoadCustomConfiguration%2A> method to load configuration from a custom configuration schema."}]}]}],"pos":[1346,3240],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry\"></xref> class.","nodes":[{"pos":[0,126],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry\"></xref> class."}],"pos":[6012,6139],"yaml":true},{"content":"Adds an issuer to the dictionary of trusted issuers.","nodes":[{"pos":[0,52],"content":"Adds an issuer to the dictionary of trusted issuers.","nodes":[{"content":"Adds an issuer to the dictionary of trusted issuers.","pos":[0,52]}]}],"pos":[7582,7635],"yaml":true},{"content":"You can call this method to add issuers to the <xref:System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry.ConfiguredTrustedIssuers%2A> dictionary. In derived classes, you can call this method from the <xref:System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry.LoadCustomConfiguration%2A> method to add issuers to the dictionary.","nodes":[{"pos":[0,352],"content":"You can call this method to add issuers to the <xref:System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry.ConfiguredTrustedIssuers%2A> dictionary. In derived classes, you can call this method from the <xref:System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry.LoadCustomConfiguration%2A> method to add issuers to the dictionary.","nodes":[{"content":"You can call this method to add issuers to the <xref:System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry.ConfiguredTrustedIssuers%2A> dictionary. In derived classes, you can call this method from the <xref:System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry.LoadCustomConfiguration%2A> method to add issuers to the dictionary.","pos":[0,352],"nodes":[{"content":"You can call this method to add issuers to the <ph id=\"ph1\">&lt;xref:System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry.ConfiguredTrustedIssuers%2A&gt;</ph> dictionary.","pos":[0,158],"source":"You can call this method to add issuers to the <xref:System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry.ConfiguredTrustedIssuers%2A> dictionary."},{"content":"In derived classes, you can call this method from the <ph id=\"ph1\">&lt;xref:System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry.LoadCustomConfiguration%2A&gt;</ph> method to add issuers to the dictionary.","pos":[159,352],"source":" In derived classes, you can call this method from the <xref:System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry.LoadCustomConfiguration%2A> method to add issuers to the dictionary."}]}]}],"pos":[7646,7999],"yaml":true,"extradata":"MT"},{"content":"ASN.1 encoded form of the issuer's certificate thumbprint.","nodes":[{"pos":[0,58],"content":"ASN.1 encoded form of the issuer's certificate thumbprint.","nodes":[{"content":"ASN.1 encoded form of the issuer's certificate thumbprint.","pos":[0,58]}]}],"pos":[8189,8248],"yaml":true},{"content":"The name of the issuer.","nodes":[{"pos":[0,23],"content":"The name of the issuer.","nodes":[{"content":"The name of the issuer.","pos":[0,23]}]}],"pos":[8308,8332],"yaml":true},{"content":"<code>certificateThumbprint</code> is `null` or empty.  \n  \n -or-  \n  \n <code>name</code> is `null` or empty.","nodes":[{"pos":[0,54],"content":"<ph id=\"ph1\">&lt;code&gt;certificateThumbprint&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph> or empty.","source":"<code>certificateThumbprint</code> is `null` or empty."},{"pos":[61,65],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[72,109],"content":"<ph id=\"ph1\">&lt;code&gt;name&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph> or empty.","source":"<code>name</code> is `null` or empty."}],"pos":[8535,8651],"yaml":true},{"content":"The issuer specified by <code>certificateThumbprint</code> has already been configured. (The issuer already exists in the <xref href=\"System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry.ConfiguredTrustedIssuers\"></xref> dictionary.)","nodes":[{"pos":[0,245],"content":"The issuer specified by <code>certificateThumbprint</code> has already been configured. (The issuer already exists in the <xref href=\"System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry.ConfiguredTrustedIssuers\"></xref> dictionary.)","nodes":[{"content":"The issuer specified by <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">certificateThumbprint</ph><ept id=\"p1\">&lt;/code&gt;</ept> has already been configured.","pos":[0,87],"source":"The issuer specified by <code>certificateThumbprint</code> has already been configured."},{"content":"(The issuer already exists in the <ph id=\"ph1\">&lt;xref href=\"System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry.ConfiguredTrustedIssuers\"&gt;&lt;/xref&gt;</ph> dictionary.)","pos":[88,245],"source":" (The issuer already exists in the <xref href=\"System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry.ConfiguredTrustedIssuers\"></xref> dictionary.)"}]}],"pos":[8761,9007],"yaml":true},{"content":"Gets the dictionary of trusted issuers that have been configured for this instance.","nodes":[{"pos":[0,83],"content":"Gets the dictionary of trusted issuers that have been configured for this instance.","nodes":[{"content":"Gets the dictionary of trusted issuers that have been configured for this instance.","pos":[0,83]}]}],"pos":[10174,10258],"yaml":true},{"content":"The key to the dictionary is the ASN.1 encoded form of the thumbprint of the trusted issuer's certificate and the value is the issuer name. The dictionary contains the issuers that were specified in configuration and any additional issuers that have been added with the <xref:System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry.AddTrustedIssuer%2A> method.","nodes":[{"pos":[0,369],"content":"The key to the dictionary is the ASN.1 encoded form of the thumbprint of the trusted issuer's certificate and the value is the issuer name. The dictionary contains the issuers that were specified in configuration and any additional issuers that have been added with the <xref:System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry.AddTrustedIssuer%2A> method.","nodes":[{"content":"The key to the dictionary is the ASN.1 encoded form of the thumbprint of the trusted issuer's certificate and the value is the issuer name. The dictionary contains the issuers that were specified in configuration and any additional issuers that have been added with the <xref:System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry.AddTrustedIssuer%2A> method.","pos":[0,369],"nodes":[{"content":"The key to the dictionary is the ASN.1 encoded form of the thumbprint of the trusted issuer's certificate and the value is the issuer name.","pos":[0,139]},{"content":"The dictionary contains the issuers that were specified in configuration and any additional issuers that have been added with the <ph id=\"ph1\">&lt;xref:System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry.AddTrustedIssuer%2A&gt;</ph> method.","pos":[140,369],"source":" The dictionary contains the issuers that were specified in configuration and any additional issuers that have been added with the <xref:System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry.AddTrustedIssuer%2A> method."}]}]}],"pos":[10269,10639],"yaml":true,"extradata":"MT"},{"content":"A dictionary that contains the trusted issuers.","nodes":[{"pos":[0,47],"content":"A dictionary that contains the trusted issuers.","nodes":[{"content":"A dictionary that contains the trusted issuers.","pos":[0,47]}]}],"pos":[10868,10916],"yaml":true},{"content":"Returns the issuer name associated with the specified <xref href=\"System.IdentityModel.Tokens.X509SecurityToken\"></xref> by mapping the certificate thumbprint to a name in the trusted issuers dictionary.","nodes":[{"pos":[0,203],"content":"Returns the issuer name associated with the specified <ph id=\"ph1\">&lt;xref href=\"System.IdentityModel.Tokens.X509SecurityToken\"&gt;&lt;/xref&gt;</ph> by mapping the certificate thumbprint to a name in the trusted issuers dictionary.","source":"Returns the issuer name associated with the specified <xref href=\"System.IdentityModel.Tokens.X509SecurityToken\"></xref> by mapping the certificate thumbprint to a name in the trusted issuers dictionary."}],"pos":[12309,12513],"yaml":true},{"content":"The default implementation searches the <xref:System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry.ConfiguredTrustedIssuers%2A> dictionary for the thumbprint of the X.509 certificate specified in `securityToken`. If an entry is found, the issuer name is returned; otherwise, `null` is returned. If `securityToken` is not assignable from <xref:System.IdentityModel.Tokens.X509SecurityToken>, `null` is returned.","nodes":[{"pos":[0,422],"content":"The default implementation searches the <xref:System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry.ConfiguredTrustedIssuers%2A> dictionary for the thumbprint of the X.509 certificate specified in `securityToken`. If an entry is found, the issuer name is returned; otherwise, `null` is returned. If `securityToken` is not assignable from <xref:System.IdentityModel.Tokens.X509SecurityToken>, `null` is returned.","nodes":[{"content":"The default implementation searches the <ph id=\"ph1\">&lt;xref:System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry.ConfiguredTrustedIssuers%2A&gt;</ph> dictionary for the thumbprint of the X.509 certificate specified in <ph id=\"ph2\">`securityToken`</ph>.","pos":[0,224],"source":"The default implementation searches the <xref:System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry.ConfiguredTrustedIssuers%2A> dictionary for the thumbprint of the X.509 certificate specified in `securityToken`."},{"content":"If an entry is found, the issuer name is returned; otherwise, <ph id=\"ph1\">`null`</ph> is returned.","pos":[225,306],"source":" If an entry is found, the issuer name is returned; otherwise, `null` is returned."},{"content":"If <ph id=\"ph1\">`securityToken`</ph> is not assignable from <ph id=\"ph2\">&lt;xref:System.IdentityModel.Tokens.X509SecurityToken&gt;</ph>, <ph id=\"ph3\">`null`</ph> is returned.","pos":[307,422],"source":" If `securityToken` is not assignable from <xref:System.IdentityModel.Tokens.X509SecurityToken>, `null` is returned."}]}],"pos":[12524,12947],"yaml":true,"extradata":"MT"},{"content":"The security token for which the issuer name is requested. Should be assignable as <xref href=\"System.IdentityModel.Tokens.X509SecurityToken\"></xref>.","nodes":[{"pos":[0,150],"content":"The security token for which the issuer name is requested. Should be assignable as <xref href=\"System.IdentityModel.Tokens.X509SecurityToken\"></xref>.","nodes":[{"content":"The security token for which the issuer name is requested.","pos":[0,58]},{"content":"Should be assignable as <ph id=\"ph1\">&lt;xref href=\"System.IdentityModel.Tokens.X509SecurityToken\"&gt;&lt;/xref&gt;</ph>.","pos":[59,150],"source":" Should be assignable as <xref href=\"System.IdentityModel.Tokens.X509SecurityToken\"></xref>."}]}],"pos":[13179,13330],"yaml":true},{"content":"The issuer name if an entry for the certificate thumbprint of the token exists in the <xref href=\"System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry.ConfiguredTrustedIssuers\"></xref> dictionary; otherwise, `null`.","nodes":[{"pos":[0,227],"content":"The issuer name if an entry for the certificate thumbprint of the token exists in the <ph id=\"ph1\">&lt;xref href=\"System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry.ConfiguredTrustedIssuers\"&gt;&lt;/xref&gt;</ph> dictionary; otherwise, <ph id=\"ph2\">`null`</ph>.","source":"The issuer name if an entry for the certificate thumbprint of the token exists in the <xref href=\"System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry.ConfiguredTrustedIssuers\"></xref> dictionary; otherwise, `null`."}],"pos":[13387,13615],"yaml":true},{"content":"<code>securityToken</code> is `null`.","nodes":[{"pos":[0,37],"content":"<ph id=\"ph1\">&lt;code&gt;securityToken&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>securityToken</code> is `null`."}],"pos":[13823,13861],"yaml":true},{"content":"Loads the trusted issuers from configuration.","nodes":[{"pos":[0,45],"content":"Loads the trusted issuers from configuration.","nodes":[{"content":"Loads the trusted issuers from configuration.","pos":[0,45]}]}],"pos":[15131,15177],"yaml":true},{"content":"The <xref:System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry.LoadCustomConfiguration%2A> method is called by the configuration infrastructure. When this method is called, the `nodelist` will contain the top-level child elements of the [\\&lt;issuerNameRegistry\\&gt;](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/issuernameregistry.md) element from the configuration file. Each of these may, in turn, contain attributes or child elements depending on the configuration schema you define for your derived class.  \n  \n This method is called by the configuration infrastructure. The default implementation loads configuration from a [\\&lt;trustedIssuers\\&gt;](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/trustedissuers.md) element (configured under the [\\&lt;issuerNameRegistry\\&gt;](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/issuernameregistry.md) element). You can override this method to provide support for your own custom configuration elements in derived classes.","nodes":[{"pos":[0,549],"content":"The <xref:System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry.LoadCustomConfiguration%2A> method is called by the configuration infrastructure. When this method is called, the `nodelist` will contain the top-level child elements of the [\\&lt;issuerNameRegistry\\&gt;](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/issuernameregistry.md) element from the configuration file. Each of these may, in turn, contain attributes or child elements depending on the configuration schema you define for your derived class.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry.LoadCustomConfiguration%2A&gt;</ph> method is called by the configuration infrastructure.","pos":[0,156],"source":"The <xref:System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry.LoadCustomConfiguration%2A> method is called by the configuration infrastructure."},{"content":"When this method is called, the <ph id=\"ph1\">`nodelist`</ph> will contain the top-level child elements of the <bpt id=\"p1\">[</bpt><ph id=\"ph2\">\\&amp;</ph>lt;issuerNameRegistry<ph id=\"ph3\">\\&amp;</ph>gt;<ept id=\"p1\">](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/issuernameregistry.md)</ept> element from the configuration file.","pos":[157,411],"source":" When this method is called, the `nodelist` will contain the top-level child elements of the [\\&lt;issuerNameRegistry\\&gt;](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/issuernameregistry.md) element from the configuration file."},{"content":"Each of these may, in turn, contain attributes or child elements depending on the configuration schema you define for your derived class.","pos":[412,549]}]},{"pos":[556,1063],"content":"This method is called by the configuration infrastructure. The default implementation loads configuration from a [\\&lt;trustedIssuers\\&gt;](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/trustedissuers.md) element (configured under the [\\&lt;issuerNameRegistry\\&gt;](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/issuernameregistry.md) element). You can override this method to provide support for your own custom configuration elements in derived classes.","nodes":[{"content":"This method is called by the configuration infrastructure.","pos":[0,58]},{"content":"The default implementation loads configuration from a <bpt id=\"p1\">[</bpt><ph id=\"ph1\">\\&amp;</ph>lt;trustedIssuers<ph id=\"ph2\">\\&amp;</ph>gt;<ept id=\"p1\">](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/trustedissuers.md)</ept> element (configured under the <bpt id=\"p2\">[</bpt><ph id=\"ph3\">\\&amp;</ph>lt;issuerNameRegistry<ph id=\"ph4\">\\&amp;</ph>gt;<ept id=\"p2\">](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/issuernameregistry.md)</ept> element).","pos":[59,396],"source":" The default implementation loads configuration from a [\\&lt;trustedIssuers\\&gt;](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/trustedissuers.md) element (configured under the [\\&lt;issuerNameRegistry\\&gt;](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/issuernameregistry.md) element)."},{"content":"You can override this method to provide support for your own custom configuration elements in derived classes.","pos":[397,507]}]}],"pos":[15188,16262],"yaml":true,"extradata":"MT"},{"content":"The XML that represents the map of trusted issuers that is specified in the configuration file.","nodes":[{"pos":[0,95],"content":"The XML that represents the map of trusted issuers that is specified in the configuration file.","nodes":[{"content":"The XML that represents the map of trusted issuers that is specified in the configuration file.","pos":[0,95]}]}],"pos":[16476,16572],"yaml":true},{"content":"<code>customConfiguration</code> is `null`.","nodes":[{"pos":[0,43],"content":"<ph id=\"ph1\">&lt;code&gt;customConfiguration&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>customConfiguration</code> is `null`."}],"pos":[16790,16834],"yaml":true},{"content":"The configuration contains one or more elements that are not recognized.","nodes":[{"pos":[0,72],"content":"The configuration contains one or more elements that are not recognized.","nodes":[{"content":"The configuration contains one or more elements that are not recognized.","pos":[0,72]}]}],"pos":[16944,17017],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry\n  commentId: T:System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry\n  id: ConfigurationBasedIssuerNameRegistry\n  children:\n  - System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry.#ctor\n  - System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry.AddTrustedIssuer(System.String,System.String)\n  - System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry.ConfiguredTrustedIssuers\n  - System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry.GetIssuerName(System.IdentityModel.Tokens.SecurityToken)\n  - System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry.LoadCustomConfiguration(System.Xml.XmlNodeList)\n  langs:\n  - csharp\n  name: ConfigurationBasedIssuerNameRegistry\n  nameWithType: ConfigurationBasedIssuerNameRegistry\n  fullName: System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry\n  type: Class\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Represents an issuer name registry that maintains a list of trusted issuers loaded from elements in the application configuration file that associate each issuer name to the X.509 certificate that is needed to verify the signature of tokens produced by the issuer.\n  remarks: \"The <xref:System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry> class maintains a dictionary of trusted issuers by mapping the certificate of each trusted issuer to a name that refers to that issuer. The certificates are specified using the ASN.1 encoded form of the thumbprint. The issuer name can be any string, as long as it is unique within the scope of the application. This dictionary can be accessed through the <xref:System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry.ConfiguredTrustedIssuers%2A> property. The class can only resolve X.509 certificates.  \\n  \\n The map of trusted issuers is specified in a configuration file by adding entries under the [\\\\&lt;trustedIssuers\\\\&gt;](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/trustedissuers.md) element. The `<trustedIssuers>` element is a child element of the [\\\\&lt;issuerNameRegistry\\\\&gt;](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/issuernameregistry.md) element and it is valid when the <xref:System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry> class is specified in the `type` attribute of that element. For more information, see the documentation for each of these elements in the [WIF Configuration Schema](http://msdn.microsoft.com/library/4d4f6d76-49a5-4bad-b345-097b2e2844e9). For more information about issuer name registries, see the <xref:System.IdentityModel.Tokens.IssuerNameRegistry> class.  \\n  \\n You can derive from <xref:System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry> to implement your own configuration based issuer name registry. Which methods you override will depend upon your implementation. For example, you can override the <xref:System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry.LoadCustomConfiguration%2A> method to load configuration from a custom configuration schema.\"\n  example:\n  - \"The following XML shows configuration for a <xref:System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry> added for a collection of security token handlers. The `<trustedIssuers>` element behaves like a classic .NET configuration collection, allowing the `<add>`, `<delete>` and `<clear>` elements as child elements.  \\n  \\n```  \\n<system.identityModel>  \\n  <identityConfiguration>  \\n    <securityTokenHandlersCollection>  \\n      <securityTokenHandlerConfiguration>  \\n        <issuerNameRegistry type=\\\"System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry, System.IdentityModel\\\">  \\n          <trustedIssuers>  \\n             <add thumbprint=\\\"97249e … 158de\\\" name=\\\"contoso.com\\\" />  \\n         </trustedIssuers>  \\n        </issuerNameRegistry>  \\n      </securityTokenHandlerConfiguration>  \\n  </identityConfiguration>  \\n</system.identityModel>  \\n```\"\n  syntax:\n    content: 'public class ConfigurationBasedIssuerNameRegistry : System.IdentityModel.Tokens.IssuerNameRegistry'\n  inheritance:\n  - System.Object\n  - System.IdentityModel.Tokens.IssuerNameRegistry\n  implements: []\n  inheritedMembers:\n  - System.IdentityModel.Tokens.IssuerNameRegistry.GetIssuerName(System.IdentityModel.Tokens.SecurityToken,System.String)\n  - System.IdentityModel.Tokens.IssuerNameRegistry.GetWindowsIssuerName\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/ConfigurationBasedIssuerNameRegistry.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: v-jibran\n  manager: markgal\n- uid: System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry.#ctor\n  commentId: M:System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry.#ctor\n  id: '#ctor'\n  parent: System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry\n  langs:\n  - csharp\n  name: ConfigurationBasedIssuerNameRegistry()\n  nameWithType: ConfigurationBasedIssuerNameRegistry.ConfigurationBasedIssuerNameRegistry()\n  fullName: ConfigurationBasedIssuerNameRegistry.ConfigurationBasedIssuerNameRegistry()\n  type: Constructor\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Initializes a new instance of the <xref href=\"System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry\"></xref> class.\n  syntax:\n    content: public ConfigurationBasedIssuerNameRegistry ();\n    parameters: []\n  overload: System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/ConfigurationBasedIssuerNameRegistry.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: v-jibran\n  manager: markgal\n- uid: System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry.AddTrustedIssuer(System.String,System.String)\n  commentId: M:System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry.AddTrustedIssuer(System.String,System.String)\n  id: AddTrustedIssuer(System.String,System.String)\n  parent: System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry\n  langs:\n  - csharp\n  name: AddTrustedIssuer(String, String)\n  nameWithType: ConfigurationBasedIssuerNameRegistry.AddTrustedIssuer(String, String)\n  fullName: ConfigurationBasedIssuerNameRegistry.AddTrustedIssuer(String, String)\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Adds an issuer to the dictionary of trusted issuers.\n  remarks: You can call this method to add issuers to the <xref:System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry.ConfiguredTrustedIssuers%2A> dictionary. In derived classes, you can call this method from the <xref:System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry.LoadCustomConfiguration%2A> method to add issuers to the dictionary.\n  syntax:\n    content: public void AddTrustedIssuer (string certificateThumbprint, string name);\n    parameters:\n    - id: certificateThumbprint\n      type: System.String\n      description: ASN.1 encoded form of the issuer's certificate thumbprint.\n    - id: name\n      type: System.String\n      description: The name of the issuer.\n  overload: System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry.AddTrustedIssuer*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"<code>certificateThumbprint</code> is `null` or empty.  \\n  \\n -or-  \\n  \\n <code>name</code> is `null` or empty.\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The issuer specified by <code>certificateThumbprint</code> has already been configured. (The issuer already exists in the <xref href=\"System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry.ConfiguredTrustedIssuers\"></xref> dictionary.)\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/ConfigurationBasedIssuerNameRegistry.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: v-jibran\n  manager: markgal\n- uid: System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry.ConfiguredTrustedIssuers\n  commentId: P:System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry.ConfiguredTrustedIssuers\n  id: ConfiguredTrustedIssuers\n  parent: System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry\n  langs:\n  - csharp\n  name: ConfiguredTrustedIssuers\n  nameWithType: ConfigurationBasedIssuerNameRegistry.ConfiguredTrustedIssuers\n  fullName: ConfigurationBasedIssuerNameRegistry.ConfiguredTrustedIssuers\n  type: Property\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Gets the dictionary of trusted issuers that have been configured for this instance.\n  remarks: The key to the dictionary is the ASN.1 encoded form of the thumbprint of the trusted issuer's certificate and the value is the issuer name. The dictionary contains the issuers that were specified in configuration and any additional issuers that have been added with the <xref:System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry.AddTrustedIssuer%2A> method.\n  syntax:\n    content: public System.Collections.Generic.IDictionary<string,string> ConfiguredTrustedIssuers { get; }\n    return:\n      type: System.Collections.Generic.IDictionary{System.String,System.String}\n      description: A dictionary that contains the trusted issuers.\n  overload: System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry.ConfiguredTrustedIssuers*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/ConfigurationBasedIssuerNameRegistry.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: v-jibran\n  manager: markgal\n- uid: System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry.GetIssuerName(System.IdentityModel.Tokens.SecurityToken)\n  commentId: M:System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry.GetIssuerName(System.IdentityModel.Tokens.SecurityToken)\n  id: GetIssuerName(System.IdentityModel.Tokens.SecurityToken)\n  parent: System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry\n  langs:\n  - csharp\n  name: GetIssuerName(SecurityToken)\n  nameWithType: ConfigurationBasedIssuerNameRegistry.GetIssuerName(SecurityToken)\n  fullName: ConfigurationBasedIssuerNameRegistry.GetIssuerName(SecurityToken)\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Returns the issuer name associated with the specified <xref href=\"System.IdentityModel.Tokens.X509SecurityToken\"></xref> by mapping the certificate thumbprint to a name in the trusted issuers dictionary.\n  remarks: The default implementation searches the <xref:System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry.ConfiguredTrustedIssuers%2A> dictionary for the thumbprint of the X.509 certificate specified in `securityToken`. If an entry is found, the issuer name is returned; otherwise, `null` is returned. If `securityToken` is not assignable from <xref:System.IdentityModel.Tokens.X509SecurityToken>, `null` is returned.\n  syntax:\n    content: public override string GetIssuerName (System.IdentityModel.Tokens.SecurityToken securityToken);\n    parameters:\n    - id: securityToken\n      type: System.IdentityModel.Tokens.SecurityToken\n      description: The security token for which the issuer name is requested. Should be assignable as <xref href=\"System.IdentityModel.Tokens.X509SecurityToken\"></xref>.\n    return:\n      type: System.String\n      description: The issuer name if an entry for the certificate thumbprint of the token exists in the <xref href=\"System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry.ConfiguredTrustedIssuers\"></xref> dictionary; otherwise, `null`.\n  overload: System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry.GetIssuerName*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>securityToken</code> is `null`.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/ConfigurationBasedIssuerNameRegistry.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: v-jibran\n  manager: markgal\n- uid: System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry.LoadCustomConfiguration(System.Xml.XmlNodeList)\n  commentId: M:System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry.LoadCustomConfiguration(System.Xml.XmlNodeList)\n  id: LoadCustomConfiguration(System.Xml.XmlNodeList)\n  parent: System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry\n  langs:\n  - csharp\n  name: LoadCustomConfiguration(XmlNodeList)\n  nameWithType: ConfigurationBasedIssuerNameRegistry.LoadCustomConfiguration(XmlNodeList)\n  fullName: ConfigurationBasedIssuerNameRegistry.LoadCustomConfiguration(XmlNodeList)\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel.Tokens\n  summary: Loads the trusted issuers from configuration.\n  remarks: \"The <xref:System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry.LoadCustomConfiguration%2A> method is called by the configuration infrastructure. When this method is called, the `nodelist` will contain the top-level child elements of the [\\\\&lt;issuerNameRegistry\\\\&gt;](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/issuernameregistry.md) element from the configuration file. Each of these may, in turn, contain attributes or child elements depending on the configuration schema you define for your derived class.  \\n  \\n This method is called by the configuration infrastructure. The default implementation loads configuration from a [\\\\&lt;trustedIssuers\\\\&gt;](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/trustedissuers.md) element (configured under the [\\\\&lt;issuerNameRegistry\\\\&gt;](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/issuernameregistry.md) element). You can override this method to provide support for your own custom configuration elements in derived classes.\"\n  syntax:\n    content: public override void LoadCustomConfiguration (System.Xml.XmlNodeList customConfiguration);\n    parameters:\n    - id: customConfiguration\n      type: System.Xml.XmlNodeList\n      description: The XML that represents the map of trusted issuers that is specified in the configuration file.\n  overload: System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry.LoadCustomConfiguration*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>customConfiguration</code> is `null`.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The configuration contains one or more elements that are not recognized.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/ConfigurationBasedIssuerNameRegistry.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: v-jibran\n  manager: markgal\nreferences:\n- uid: System.IdentityModel.Tokens.IssuerNameRegistry\n  parent: System.IdentityModel.Tokens\n  isExternal: false\n  name: IssuerNameRegistry\n  nameWithType: IssuerNameRegistry\n  fullName: System.IdentityModel.Tokens.IssuerNameRegistry\n- uid: System.ArgumentException\n  parent: System\n  isExternal: false\n  name: ArgumentException\n  nameWithType: ArgumentException\n  fullName: System.ArgumentException\n- uid: System.InvalidOperationException\n  parent: System\n  isExternal: false\n  name: InvalidOperationException\n  nameWithType: InvalidOperationException\n  fullName: System.InvalidOperationException\n- uid: System.ArgumentNullException\n  parent: System\n  isExternal: false\n  name: ArgumentNullException\n  nameWithType: ArgumentNullException\n  fullName: System.ArgumentNullException\n- uid: System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry.#ctor\n  parent: System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry\n  isExternal: false\n  name: ConfigurationBasedIssuerNameRegistry()\n  nameWithType: ConfigurationBasedIssuerNameRegistry.ConfigurationBasedIssuerNameRegistry()\n  fullName: ConfigurationBasedIssuerNameRegistry.ConfigurationBasedIssuerNameRegistry()\n- uid: System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry.AddTrustedIssuer(System.String,System.String)\n  parent: System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry\n  isExternal: false\n  name: AddTrustedIssuer(String, String)\n  nameWithType: ConfigurationBasedIssuerNameRegistry.AddTrustedIssuer(String, String)\n  fullName: ConfigurationBasedIssuerNameRegistry.AddTrustedIssuer(String, String)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry.ConfiguredTrustedIssuers\n  parent: System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry\n  isExternal: false\n  name: ConfiguredTrustedIssuers\n  nameWithType: ConfigurationBasedIssuerNameRegistry.ConfiguredTrustedIssuers\n  fullName: ConfigurationBasedIssuerNameRegistry.ConfiguredTrustedIssuers\n- uid: System.Collections.Generic.IDictionary`2\n  name: IDictionary<TKey,TValue>\n  nameWithType: IDictionary<TKey,TValue>\n  fullName: System.Collections.Generic.IDictionary<TKey,TValue>\n- uid: System.Collections.Generic.IDictionary{System.String,System.String}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IDictionary<String,String>\n  nameWithType: IDictionary<String,String>\n  fullName: System.Collections.Generic.IDictionary<System.String,System.String>\n  spec.csharp:\n  - uid: System.Collections.Generic.IDictionary`2\n    name: IDictionary\n    nameWithType: IDictionary\n    fullName: System.Collections.Generic.IDictionary\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.String\n    name: String\n    nameWithType: String\n    fullName: System.String\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: System.String\n    name: String\n    nameWithType: String\n    fullName: System.String\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry.GetIssuerName(System.IdentityModel.Tokens.SecurityToken)\n  parent: System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry\n  isExternal: false\n  name: GetIssuerName(SecurityToken)\n  nameWithType: ConfigurationBasedIssuerNameRegistry.GetIssuerName(SecurityToken)\n  fullName: ConfigurationBasedIssuerNameRegistry.GetIssuerName(SecurityToken)\n- uid: System.IdentityModel.Tokens.SecurityToken\n  parent: System.IdentityModel.Tokens\n  isExternal: false\n  name: SecurityToken\n  nameWithType: SecurityToken\n  fullName: System.IdentityModel.Tokens.SecurityToken\n- uid: System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry.LoadCustomConfiguration(System.Xml.XmlNodeList)\n  parent: System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry\n  isExternal: false\n  name: LoadCustomConfiguration(XmlNodeList)\n  nameWithType: ConfigurationBasedIssuerNameRegistry.LoadCustomConfiguration(XmlNodeList)\n  fullName: ConfigurationBasedIssuerNameRegistry.LoadCustomConfiguration(XmlNodeList)\n- uid: System.Xml.XmlNodeList\n  parent: System.Xml\n  isExternal: false\n  name: XmlNodeList\n  nameWithType: XmlNodeList\n  fullName: System.Xml.XmlNodeList\n- uid: System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry.#ctor*\n  parent: System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry\n  isExternal: false\n  name: ConfigurationBasedIssuerNameRegistry\n  nameWithType: ConfigurationBasedIssuerNameRegistry.ConfigurationBasedIssuerNameRegistry\n  fullName: ConfigurationBasedIssuerNameRegistry.ConfigurationBasedIssuerNameRegistry\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/ConfigurationBasedIssuerNameRegistry.xml\n- uid: System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry.AddTrustedIssuer*\n  parent: System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry\n  isExternal: false\n  name: AddTrustedIssuer\n  nameWithType: ConfigurationBasedIssuerNameRegistry.AddTrustedIssuer\n  fullName: ConfigurationBasedIssuerNameRegistry.AddTrustedIssuer\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/ConfigurationBasedIssuerNameRegistry.xml\n- uid: System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry.ConfiguredTrustedIssuers*\n  parent: System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry\n  isExternal: false\n  name: ConfiguredTrustedIssuers\n  nameWithType: ConfigurationBasedIssuerNameRegistry.ConfiguredTrustedIssuers\n  fullName: ConfigurationBasedIssuerNameRegistry.ConfiguredTrustedIssuers\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/ConfigurationBasedIssuerNameRegistry.xml\n- uid: System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry.GetIssuerName*\n  parent: System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry\n  isExternal: false\n  name: GetIssuerName\n  nameWithType: ConfigurationBasedIssuerNameRegistry.GetIssuerName\n  fullName: ConfigurationBasedIssuerNameRegistry.GetIssuerName\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/ConfigurationBasedIssuerNameRegistry.xml\n- uid: System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry.LoadCustomConfiguration*\n  parent: System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry\n  isExternal: false\n  name: LoadCustomConfiguration\n  nameWithType: ConfigurationBasedIssuerNameRegistry.LoadCustomConfiguration\n  fullName: ConfigurationBasedIssuerNameRegistry.LoadCustomConfiguration\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/ConfigurationBasedIssuerNameRegistry.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.IdentityModel.Tokens.IssuerNameRegistry.GetIssuerName(System.IdentityModel.Tokens.SecurityToken,System.String)\n  parent: System.IdentityModel.Tokens.IssuerNameRegistry\n  isExternal: false\n  name: GetIssuerName(SecurityToken, String)\n  nameWithType: IssuerNameRegistry.GetIssuerName(SecurityToken, String)\n  fullName: IssuerNameRegistry.GetIssuerName(SecurityToken, String)\n- uid: System.IdentityModel.Tokens.IssuerNameRegistry.GetWindowsIssuerName\n  parent: System.IdentityModel.Tokens.IssuerNameRegistry\n  isExternal: false\n  name: GetWindowsIssuerName()\n  nameWithType: IssuerNameRegistry.GetWindowsIssuerName()\n  fullName: IssuerNameRegistry.GetWindowsIssuerName()\n"}