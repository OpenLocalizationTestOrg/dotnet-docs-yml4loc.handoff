{"nodes":[{"content":"Specifies flags that control binding and the way in which the search for members and types is conducted by reflection.","nodes":[{"pos":[0,118],"content":"Specifies flags that control binding and the way in which the search for members and types is conducted by reflection.","nodes":[{"content":"Specifies flags that control binding and the way in which the search for members and types is conducted by reflection.","pos":[0,118]}]}],"pos":[1356,1475],"yaml":true},{"content":"These `BindingFlags` control binding for a great many classes in the `System`, `System.Reflection`, and `System.Runtime` namespaces that invoke, create, get, set, and find members and types.  \n  \n `BindingFlags` are used in the following <xref:System.Type> methods and other places such as <xref:System.Reflection.MethodBase.Invoke%2A?displayProperty=fullName> :  \n  \n-   <xref:System.Reflection.MethodBase.Invoke%2A?displayProperty=fullName>  \n  \n-   <xref:System.Type.GetMembers%2A>  \n  \n-   <xref:System.Type.GetEvents%2A>  \n  \n-   <xref:System.Type.InvokeMember%2A>  \n  \n-   <xref:System.Activator.CreateInstance%2A?displayProperty=fullName>  \n  \n-   <xref:System.Type.GetConstructor%2A>  \n  \n-   <xref:System.Type.GetConstructors%2A>  \n  \n-   <xref:System.Type.GetMethod%2A>  \n  \n-   <xref:System.Type.GetMethods%2A>  \n  \n-   <xref:System.Type.GetField%2A>  \n  \n-   <xref:System.Type.GetFields%2A>  \n  \n-   <xref:System.Type.GetEvent%2A>  \n  \n-   <xref:System.Type.GetProperty%2A>  \n  \n-   <xref:System.Type.GetProperties%2A>  \n  \n-   <xref:System.Type.GetMember%2A>  \n  \n-   <xref:System.Type.FindMembers%2A>  \n  \n `InvokeMember` and `GetMethod` are especially important.  \n  \n The binding flags can be categorized by how they identify a type member, as listed in the following table.  \n  \n|Identified by Accessibility|Identified by Binding Argument|Identified by Operation|  \n|---------------------------------|------------------------------------|-----------------------------|  \n|DeclaredOnly<br /><br /> FlattenHierarchy<br /><br /> IgnoreCase<br /><br /> IgnoreReturn<br /><br /> Instance<br /><br /> NonPublic<br /><br /> Public<br /><br /> Static|ExactBinding<br /><br /> OptionalParamBinding|CreateInstance<br /><br /> GetField<br /><br /> SetField<br /><br /> GetProperty<br /><br /> SetProperty<br /><br /> InvokeMethod<br /><br /> PutDispProperty<br /><br /> PutRefDispProperty|  \n  \n> [!NOTE]\n>  You must specify `Instance` or `Static` along with `Public` or `NonPublic` or no members will be returned.  \n  \n The following table lists the coercions performed by the default <xref:System.Reflection.Binder.ChangeType%2A?displayProperty=fullName>. This table applies especially to the `ExactBinding` binding flag.  \n  \n|Source Type|Target Type|  \n|-----------------|-----------------|  \n|Any type|Its base type.|  \n|Any type|The interface it implements.|  \n|`Char`|`UInt16`, `UInt32`, `Int32`, `UInt64`, `Int64`, `Single`, `Double`|  \n|`Byte`|`Char`, `UInt16`, `Int16`, `UInt32`, `Int32`, `UInt64`, `Int64`, `Single`, `Double`|  \n|`SByte`|`Int16`, `Int32`, `Int64`, `Single`, `Double`|  \n|`UInt16`|`UInt32`, `Int32`, `UInt64`, `Int64`, `Single`, `Double`|  \n|`Int16`|`Int32`, `Int64`, `Single`, `Double`|  \n|`UInt32`|`UInt64`, `Int64`, `Single`, `Double`|  \n|`Int32`|`Int64`, `Single`, `Double`|  \n|`UInt64`|`Single`, `Double`|  \n|`Int64`|`Single`, `Double`|  \n|`Single`|`Double`|  \n|Non-reference|By-reference.|","nodes":[{"pos":[0,190],"content":"These <ph id=\"ph1\">`BindingFlags`</ph> control binding for a great many classes in the <ph id=\"ph2\">`System`</ph>, <ph id=\"ph3\">`System.Reflection`</ph>, and <ph id=\"ph4\">`System.Runtime`</ph> namespaces that invoke, create, get, set, and find members and types.","source":"These `BindingFlags` control binding for a great many classes in the `System`, `System.Reflection`, and `System.Runtime` namespaces that invoke, create, get, set, and find members and types."},{"pos":[197,362],"content":"<ph id=\"ph1\">`BindingFlags`</ph> are used in the following <ph id=\"ph2\">&lt;xref:System.Type&gt;</ph> methods and other places such as <ph id=\"ph3\">&lt;xref:System.Reflection.MethodBase.Invoke%2A?displayProperty=fullName&gt;</ph> :","source":"`BindingFlags` are used in the following <xref:System.Type> methods and other places such as <xref:System.Reflection.MethodBase.Invoke%2A?displayProperty=fullName> :"},{"pos":[372,442],"content":"<xref:System.Reflection.MethodBase.Invoke%2A?displayProperty=fullName>","nodes":[]},{"pos":[452,484],"content":"<xref:System.Type.GetMembers%2A>","nodes":[]},{"pos":[494,525],"content":"<xref:System.Type.GetEvents%2A>","nodes":[]},{"pos":[535,569],"content":"<xref:System.Type.InvokeMember%2A>","nodes":[]},{"pos":[579,645],"content":"<xref:System.Activator.CreateInstance%2A?displayProperty=fullName>","nodes":[]},{"pos":[655,691],"content":"<xref:System.Type.GetConstructor%2A>","nodes":[]},{"pos":[701,738],"content":"<xref:System.Type.GetConstructors%2A>","nodes":[]},{"pos":[748,779],"content":"<xref:System.Type.GetMethod%2A>","nodes":[]},{"pos":[789,821],"content":"<xref:System.Type.GetMethods%2A>","nodes":[]},{"pos":[831,861],"content":"<xref:System.Type.GetField%2A>","nodes":[]},{"pos":[871,902],"content":"<xref:System.Type.GetFields%2A>","nodes":[]},{"pos":[912,942],"content":"<xref:System.Type.GetEvent%2A>","nodes":[]},{"pos":[952,985],"content":"<xref:System.Type.GetProperty%2A>","nodes":[]},{"pos":[995,1030],"content":"<xref:System.Type.GetProperties%2A>","nodes":[]},{"pos":[1040,1071],"content":"<xref:System.Type.GetMember%2A>","nodes":[]},{"pos":[1081,1114],"content":"<xref:System.Type.FindMembers%2A>","nodes":[]},{"pos":[1121,1177],"content":"<ph id=\"ph1\">`InvokeMember`</ph> and <ph id=\"ph2\">`GetMethod`</ph> are especially important.","source":"`InvokeMember` and `GetMethod` are especially important."},{"pos":[1184,1290],"content":"The binding flags can be categorized by how they identify a type member, as listed in the following table.","nodes":[{"content":"The binding flags can be categorized by how they identify a type member, as listed in the following table.","pos":[0,106]}]},{"pos":[1297,1324],"content":"Identified by Accessibility","nodes":[{"content":"Identified by Accessibility","pos":[0,27]}]},{"pos":[1325,1355],"content":"Identified by Binding Argument","nodes":[{"content":"Identified by Binding Argument","pos":[0,30]}]},{"pos":[1356,1379],"content":"Identified by Operation","nodes":[{"content":"Identified by Operation","pos":[0,23]}]},{"pos":[1489,1659],"content":"DeclaredOnly<br /><br /> FlattenHierarchy<br /><br /> IgnoreCase<br /><br /> IgnoreReturn<br /><br /> Instance<br /><br /> NonPublic<br /><br /> Public<br /><br /> Static","nodes":[{"content":"DeclaredOnly","pos":[0,12]},{"content":"FlattenHierarchy","pos":[25,41]},{"content":"IgnoreCase","pos":[54,64]},{"content":"IgnoreReturn","pos":[77,89]},{"content":"Instance","pos":[102,110]},{"content":"NonPublic","pos":[123,132]},{"content":"Public","pos":[145,151]},{"content":"Static","pos":[164,170]}]},{"pos":[1660,1705],"content":"ExactBinding<br /><br /> OptionalParamBinding","nodes":[{"content":"ExactBinding","pos":[0,12]},{"content":"OptionalParamBinding","pos":[25,45]}]},{"pos":[1706,1894],"content":"CreateInstance<br /><br /> GetField<br /><br /> SetField<br /><br /> GetProperty<br /><br /> SetProperty<br /><br /> InvokeMethod<br /><br /> PutDispProperty<br /><br /> PutRefDispProperty","nodes":[{"content":"CreateInstance","pos":[0,14]},{"content":"GetField","pos":[27,35]},{"content":"SetField","pos":[48,56]},{"content":"GetProperty","pos":[69,80]},{"content":"SetProperty","pos":[93,104]},{"content":"InvokeMethod","pos":[117,129]},{"content":"PutDispProperty","pos":[142,157]},{"content":"PutRefDispProperty","pos":[170,188]}]},{"pos":[1903,2020],"content":"[!NOTE]\n You must specify `Instance` or `Static` along with `Public` or `NonPublic` or no members will be returned.","leadings":["","> "],"nodes":[{"content":"You must specify <ph id=\"ph1\">`Instance`</ph> or <ph id=\"ph2\">`Static`</ph> along with <ph id=\"ph3\">`Public`</ph> or <ph id=\"ph4\">`NonPublic`</ph> or no members will be returned.","pos":[9,115],"source":" You must specify `Instance` or `Static` along with `Public` or `NonPublic` or no members will be returned."}]},{"pos":[2027,2229],"content":"The following table lists the coercions performed by the default <xref:System.Reflection.Binder.ChangeType%2A?displayProperty=fullName>. This table applies especially to the `ExactBinding` binding flag.","nodes":[{"content":"The following table lists the coercions performed by the default <ph id=\"ph1\">&lt;xref:System.Reflection.Binder.ChangeType%2A?displayProperty=fullName&gt;</ph>.","pos":[0,136],"source":"The following table lists the coercions performed by the default <xref:System.Reflection.Binder.ChangeType%2A?displayProperty=fullName>."},{"content":"This table applies especially to the <ph id=\"ph1\">`ExactBinding`</ph> binding flag.","pos":[137,202],"source":" This table applies especially to the `ExactBinding` binding flag."}]},{"pos":[2236,2247],"content":"Source Type","nodes":[{"content":"Source Type","pos":[0,11]}]},{"pos":[2248,2259],"content":"Target Type","nodes":[{"content":"Target Type","pos":[0,11]}]},{"pos":[2304,2312],"content":"Any type","nodes":[{"content":"Any type","pos":[0,8]}]},{"pos":[2313,2327],"content":"Its base type.","nodes":[{"content":"Its base type.","pos":[0,14]}]},{"pos":[2332,2340],"content":"Any type","nodes":[{"content":"Any type","pos":[0,8]}]},{"pos":[2341,2369],"content":"The interface it implements.","nodes":[{"content":"The interface it implements.","pos":[0,28]}]},{"pos":[2381,2447],"content":"<ph id=\"ph1\">`UInt16`</ph>, <ph id=\"ph2\">`UInt32`</ph>, <ph id=\"ph3\">`Int32`</ph>, <ph id=\"ph4\">`UInt64`</ph>, <ph id=\"ph5\">`Int64`</ph>, <ph id=\"ph6\">`Single`</ph>, <ph id=\"ph7\">`Double`</ph>","source":"`UInt16`, `UInt32`, `Int32`, `UInt64`, `Int64`, `Single`, `Double`"},{"pos":[2459,2542],"content":"<ph id=\"ph1\">`Char`</ph>, <ph id=\"ph2\">`UInt16`</ph>, <ph id=\"ph3\">`Int16`</ph>, <ph id=\"ph4\">`UInt32`</ph>, <ph id=\"ph5\">`Int32`</ph>, <ph id=\"ph6\">`UInt64`</ph>, <ph id=\"ph7\">`Int64`</ph>, <ph id=\"ph8\">`Single`</ph>, <ph id=\"ph9\">`Double`</ph>","source":"`Char`, `UInt16`, `Int16`, `UInt32`, `Int32`, `UInt64`, `Int64`, `Single`, `Double`"},{"pos":[2555,2600],"content":"<ph id=\"ph1\">`Int16`</ph>, <ph id=\"ph2\">`Int32`</ph>, <ph id=\"ph3\">`Int64`</ph>, <ph id=\"ph4\">`Single`</ph>, <ph id=\"ph5\">`Double`</ph>","source":"`Int16`, `Int32`, `Int64`, `Single`, `Double`"},{"pos":[2614,2670],"content":"<ph id=\"ph1\">`UInt32`</ph>, <ph id=\"ph2\">`Int32`</ph>, <ph id=\"ph3\">`UInt64`</ph>, <ph id=\"ph4\">`Int64`</ph>, <ph id=\"ph5\">`Single`</ph>, <ph id=\"ph6\">`Double`</ph>","source":"`UInt32`, `Int32`, `UInt64`, `Int64`, `Single`, `Double`"},{"pos":[2683,2719],"content":"<ph id=\"ph1\">`Int32`</ph>, <ph id=\"ph2\">`Int64`</ph>, <ph id=\"ph3\">`Single`</ph>, <ph id=\"ph4\">`Double`</ph>","source":"`Int32`, `Int64`, `Single`, `Double`"},{"pos":[2733,2770],"content":"<ph id=\"ph1\">`UInt64`</ph>, <ph id=\"ph2\">`Int64`</ph>, <ph id=\"ph3\">`Single`</ph>, <ph id=\"ph4\">`Double`</ph>","source":"`UInt64`, `Int64`, `Single`, `Double`"},{"pos":[2783,2810],"content":"<ph id=\"ph1\">`Int64`</ph>, <ph id=\"ph2\">`Single`</ph>, <ph id=\"ph3\">`Double`</ph>","source":"`Int64`, `Single`, `Double`"},{"pos":[2824,2842],"content":"<ph id=\"ph1\">`Single`</ph>, <ph id=\"ph2\">`Double`</ph>","source":"`Single`, `Double`"},{"pos":[2855,2873],"content":"<ph id=\"ph1\">`Single`</ph>, <ph id=\"ph2\">`Double`</ph>","source":"`Single`, `Double`"},{"pos":[2900,2913],"content":"Non-reference","nodes":[{"content":"Non-reference","pos":[0,13]}]},{"pos":[2914,2927],"content":"By-reference.","nodes":[{"content":"By-reference.","pos":[0,13]}]}],"pos":[1486,4480],"yaml":true,"extradata":"MT"},{"content":"Specifies that reflection should create an instance of the specified type. Calls the constructor that matches the given arguments. The supplied member name is ignored. If the type of lookup is not specified, (Instance | Public) will apply. It is not possible to call a type initializer.  \n  \n This flag is passed to an `InvokeMember` method to invoke a constructor.","nodes":[{"pos":[0,286],"content":"Specifies that reflection should create an instance of the specified type. Calls the constructor that matches the given arguments. The supplied member name is ignored. If the type of lookup is not specified, (Instance | Public) will apply. It is not possible to call a type initializer.","nodes":[{"content":"Specifies that reflection should create an instance of the specified type. Calls the constructor that matches the given arguments. The supplied member name is ignored. If the type of lookup is not specified, (Instance | Public) will apply. It is not possible to call a type initializer.","pos":[0,286],"nodes":[{"content":"Specifies that reflection should create an instance of the specified type.","pos":[0,74]},{"content":"Calls the constructor that matches the given arguments.","pos":[75,130]},{"content":"The supplied member name is ignored.","pos":[131,167]},{"content":"If the type of lookup is not specified, (Instance | Public) will apply.","pos":[168,239]},{"content":"It is not possible to call a type initializer.","pos":[240,286]}]}]},{"pos":[293,365],"content":"This flag is passed to an <ph id=\"ph1\">`InvokeMember`</ph> method to invoke a constructor.","source":"This flag is passed to an `InvokeMember` method to invoke a constructor."}],"pos":[6537,6907],"yaml":true},{"content":"Specifies that only members declared at the level of the supplied type's hierarchy should be considered. Inherited members are not considered.","nodes":[{"pos":[0,142],"content":"Specifies that only members declared at the level of the supplied type's hierarchy should be considered. Inherited members are not considered.","nodes":[{"content":"Specifies that only members declared at the level of the supplied type's hierarchy should be considered. Inherited members are not considered.","pos":[0,142],"nodes":[{"content":"Specifies that only members declared at the level of the supplied type's hierarchy should be considered.","pos":[0,104]},{"content":"Inherited members are not considered.","pos":[105,142]}]}]}],"pos":[8244,8387],"yaml":true},{"content":"Specifies that no binding flags are defined.","nodes":[{"pos":[0,44],"content":"Specifies that no binding flags are defined.","nodes":[{"content":"Specifies that no binding flags are defined.","pos":[0,44]}]}],"pos":[9692,9737],"yaml":true},{"content":"Specifies that types of the supplied arguments must exactly match the types of the corresponding formal parameters. Reflection throws an exception if the caller supplies a non-null `Binder` object, since that implies that the caller is supplying `BindToXXX` implementations that will pick the appropriate method.","nodes":[{"pos":[0,312],"content":"Specifies that types of the supplied arguments must exactly match the types of the corresponding formal parameters. Reflection throws an exception if the caller supplies a non-null `Binder` object, since that implies that the caller is supplying `BindToXXX` implementations that will pick the appropriate method.","nodes":[{"content":"Specifies that types of the supplied arguments must exactly match the types of the corresponding formal parameters.","pos":[0,115]},{"content":"Reflection throws an exception if the caller supplies a non-null <ph id=\"ph1\">`Binder`</ph> object, since that implies that the caller is supplying <ph id=\"ph2\">`BindToXXX`</ph> implementations that will pick the appropriate method.","pos":[116,312],"source":" Reflection throws an exception if the caller supplies a non-null `Binder` object, since that implies that the caller is supplying `BindToXXX` implementations that will pick the appropriate method."}]}],"pos":[11045,11358],"yaml":true},{"content":"Reflection models the accessibility rules of the common type system. For example, if the caller is in the same assembly, the caller does not need special permissions for internal members. Otherwise, the caller needs <xref:System.Security.Permissions.ReflectionPermission>. This is consistent with lookup of members that are protected, private, and so on.  \n  \n The general principle is that <xref:System.Reflection.Binder.ChangeType%2A> should perform only widening coercions, which never lose data. An example of a widening coercion is coercing a value that is a 32-bit signed integer to a value that is a 64-bit signed integer. This is distinguished from a narrowing coercion, which may lose data. An example of a narrowing coercion is coercing a 64-bit signed integer to a 32-bit signed integer.  \n  \n The default binder ignores this flag, while custom binders can implement the semantics of this flag.","nodes":[{"pos":[0,354],"content":"Reflection models the accessibility rules of the common type system. For example, if the caller is in the same assembly, the caller does not need special permissions for internal members. Otherwise, the caller needs <xref:System.Security.Permissions.ReflectionPermission>. This is consistent with lookup of members that are protected, private, and so on.","nodes":[{"content":"Reflection models the accessibility rules of the common type system. For example, if the caller is in the same assembly, the caller does not need special permissions for internal members. Otherwise, the caller needs <xref:System.Security.Permissions.ReflectionPermission>. This is consistent with lookup of members that are protected, private, and so on.","pos":[0,354],"nodes":[{"content":"Reflection models the accessibility rules of the common type system.","pos":[0,68]},{"content":"For example, if the caller is in the same assembly, the caller does not need special permissions for internal members.","pos":[69,187]},{"content":"Otherwise, the caller needs <ph id=\"ph1\">&lt;xref:System.Security.Permissions.ReflectionPermission&gt;</ph>.","pos":[188,272],"source":" Otherwise, the caller needs <xref:System.Security.Permissions.ReflectionPermission>."},{"content":"This is consistent with lookup of members that are protected, private, and so on.","pos":[273,354]}]}]},{"pos":[361,798],"content":"The general principle is that <xref:System.Reflection.Binder.ChangeType%2A> should perform only widening coercions, which never lose data. An example of a widening coercion is coercing a value that is a 32-bit signed integer to a value that is a 64-bit signed integer. This is distinguished from a narrowing coercion, which may lose data. An example of a narrowing coercion is coercing a 64-bit signed integer to a 32-bit signed integer.","nodes":[{"content":"The general principle is that <xref:System.Reflection.Binder.ChangeType%2A> should perform only widening coercions, which never lose data. An example of a widening coercion is coercing a value that is a 32-bit signed integer to a value that is a 64-bit signed integer. This is distinguished from a narrowing coercion, which may lose data. An example of a narrowing coercion is coercing a 64-bit signed integer to a 32-bit signed integer.","pos":[0,437],"nodes":[{"content":"The general principle is that <ph id=\"ph1\">&lt;xref:System.Reflection.Binder.ChangeType%2A&gt;</ph> should perform only widening coercions, which never lose data.","pos":[0,138],"source":"The general principle is that <xref:System.Reflection.Binder.ChangeType%2A> should perform only widening coercions, which never lose data."},{"content":"An example of a widening coercion is coercing a value that is a 32-bit signed integer to a value that is a 64-bit signed integer.","pos":[139,268]},{"content":"This is distinguished from a narrowing coercion, which may lose data.","pos":[269,338]},{"content":"An example of a narrowing coercion is coercing a 64-bit signed integer to a 32-bit signed integer.","pos":[339,437]}]}]},{"pos":[805,905],"content":"The default binder ignores this flag, while custom binders can implement the semantics of this flag.","nodes":[{"content":"The default binder ignores this flag, while custom binders can implement the semantics of this flag.","pos":[0,100]}]}],"pos":[11369,12281],"yaml":true,"extradata":"MT"},{"content":"Specifies that public and protected static members up the hierarchy should be returned. Private static members in inherited classes are not returned. Static members include fields, methods, events, and properties. Nested types are not returned.","nodes":[{"pos":[0,244],"content":"Specifies that public and protected static members up the hierarchy should be returned. Private static members in inherited classes are not returned. Static members include fields, methods, events, and properties. Nested types are not returned.","nodes":[{"content":"Specifies that public and protected static members up the hierarchy should be returned. Private static members in inherited classes are not returned. Static members include fields, methods, events, and properties. Nested types are not returned.","pos":[0,244],"nodes":[{"content":"Specifies that public and protected static members up the hierarchy should be returned.","pos":[0,87]},{"content":"Private static members in inherited classes are not returned.","pos":[88,149]},{"content":"Static members include fields, methods, events, and properties.","pos":[150,213]},{"content":"Nested types are not returned.","pos":[214,244]}]}]}],"pos":[13496,13741],"yaml":true},{"content":"Specifies that the value of the specified field should be returned.  \n  \n This flag is passed to an `InvokeMember` method to get a field value.","nodes":[{"pos":[0,67],"content":"Specifies that the value of the specified field should be returned.","nodes":[{"content":"Specifies that the value of the specified field should be returned.","pos":[0,67]}]},{"pos":[74,143],"content":"This flag is passed to an <ph id=\"ph1\">`InvokeMember`</ph> method to get a field value.","source":"This flag is passed to an `InvokeMember` method to get a field value."}],"pos":[15056,15204],"yaml":true},{"content":"Specifies that the value of the specified property should be returned.  \n  \n This flag is passed to an `InvokeMember` method to invoke a property getter.","nodes":[{"pos":[0,70],"content":"Specifies that the value of the specified property should be returned.","nodes":[{"content":"Specifies that the value of the specified property should be returned.","pos":[0,70]}]},{"pos":[77,153],"content":"This flag is passed to an <ph id=\"ph1\">`InvokeMember`</ph> method to invoke a property getter.","source":"This flag is passed to an `InvokeMember` method to invoke a property getter."}],"pos":[16529,16687],"yaml":true},{"content":"Specifies that the case of the member name should not be considered when binding.","nodes":[{"pos":[0,81],"content":"Specifies that the case of the member name should not be considered when binding.","nodes":[{"content":"Specifies that the case of the member name should not be considered when binding.","pos":[0,81]}]}],"pos":[18009,18091],"yaml":true},{"content":"Used in COM interop to specify that the return value of the member can be ignored.","nodes":[{"pos":[0,82],"content":"Used in COM interop to specify that the return value of the member can be ignored.","nodes":[{"content":"Used in COM interop to specify that the return value of the member can be ignored.","pos":[0,82]}]}],"pos":[19402,19485],"yaml":true},{"content":"Specifies that instance members are to be included in the search.","nodes":[{"pos":[0,65],"content":"Specifies that instance members are to be included in the search.","nodes":[{"content":"Specifies that instance members are to be included in the search.","pos":[0,65]}]}],"pos":[20652,20718],"yaml":true},{"content":"Specifies that a method is to be invoked. This must not be a constructor or a type initializer.  \n  \n This flag is passed to an `InvokeMember` method to invoke a method.","nodes":[{"pos":[0,95],"content":"Specifies that a method is to be invoked. This must not be a constructor or a type initializer.","nodes":[{"content":"Specifies that a method is to be invoked. This must not be a constructor or a type initializer.","pos":[0,95],"nodes":[{"content":"Specifies that a method is to be invoked.","pos":[0,41]},{"content":"This must not be a constructor or a type initializer.","pos":[42,95]}]}]},{"pos":[102,169],"content":"This flag is passed to an <ph id=\"ph1\">`InvokeMember`</ph> method to invoke a method.","source":"This flag is passed to an `InvokeMember` method to invoke a method."}],"pos":[22049,22223],"yaml":true},{"content":"Specifies that non-public members are to be included in the search.","nodes":[{"pos":[0,67],"content":"Specifies that non-public members are to be included in the search.","nodes":[{"content":"Specifies that non-public members are to be included in the search.","pos":[0,67]}]}],"pos":[23540,23608],"yaml":true},{"content":"Returns the set of members whose parameter count matches the number of supplied arguments. This binding flag is used for methods with parameters that have default values and methods with variable arguments (varargs). This flag should only be used with <xref href=\"System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])\"></xref>.","nodes":[{"pos":[0,486],"content":"Returns the set of members whose parameter count matches the number of supplied arguments. This binding flag is used for methods with parameters that have default values and methods with variable arguments (varargs). This flag should only be used with <xref href=\"System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])\"></xref>.","nodes":[{"content":"Returns the set of members whose parameter count matches the number of supplied arguments.","pos":[0,90]},{"content":"This binding flag is used for methods with parameters that have default values and methods with variable arguments (varargs).","pos":[91,216]},{"content":"This flag should only be used with <ph id=\"ph1\">&lt;xref href=\"System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])\"&gt;&lt;/xref&gt;</ph>.","pos":[217,486],"source":" This flag should only be used with <xref href=\"System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])\"></xref>."}]}],"pos":[24966,25453],"yaml":true},{"content":"Parameters with default values are used only in calls where trailing arguments are omitted. They must be the last arguments.","nodes":[{"pos":[0,124],"content":"Parameters with default values are used only in calls where trailing arguments are omitted. They must be the last arguments.","nodes":[{"content":"Parameters with default values are used only in calls where trailing arguments are omitted. They must be the last arguments.","pos":[0,124],"nodes":[{"content":"Parameters with default values are used only in calls where trailing arguments are omitted.","pos":[0,91]},{"content":"They must be the last arguments.","pos":[92,124]}]}]}],"pos":[25464,25589],"yaml":true,"extradata":"MT"},{"content":"Specifies that public members are to be included in the search.","nodes":[{"pos":[0,63],"content":"Specifies that public members are to be included in the search.","nodes":[{"content":"Specifies that public members are to be included in the search.","pos":[0,63]}]}],"pos":[26752,26816],"yaml":true},{"content":"Specifies that the `PROPPUT` member on a COM object should be invoked. `PROPPUT` specifies a property-setting function that uses a value. Use `PutDispProperty` if a property has both `PROPPUT` and `PROPPUTREF` and you need to distinguish which one is called.","nodes":[{"pos":[0,258],"content":"Specifies that the `PROPPUT` member on a COM object should be invoked. `PROPPUT` specifies a property-setting function that uses a value. Use `PutDispProperty` if a property has both `PROPPUT` and `PROPPUTREF` and you need to distinguish which one is called.","nodes":[{"content":"Specifies that the <ph id=\"ph1\">`PROPPUT`</ph> member on a COM object should be invoked.","pos":[0,70],"source":"Specifies that the `PROPPUT` member on a COM object should be invoked."},{"content":"<ph id=\"ph1\">`PROPPUT`</ph> specifies a property-setting function that uses a value.","pos":[71,137],"source":"`PROPPUT` specifies a property-setting function that uses a value."},{"content":"Use <ph id=\"ph1\">`PutDispProperty`</ph> if a property has both <ph id=\"ph2\">`PROPPUT`</ph> and <ph id=\"ph3\">`PROPPUTREF`</ph> and you need to distinguish which one is called.","pos":[138,258],"source":" Use `PutDispProperty` if a property has both `PROPPUT` and `PROPPUTREF` and you need to distinguish which one is called."}]}],"pos":[28141,28400],"yaml":true},{"content":"Specifies that the `PROPPUTREF` member on a COM object should be invoked. `PROPPUTREF` specifies a property-setting function that uses a reference instead of a value. Use `PutRefDispProperty` if a property has both `PROPPUT` and `PROPPUTREF` and you need to distinguish which one is called.","nodes":[{"pos":[0,290],"content":"Specifies that the `PROPPUTREF` member on a COM object should be invoked. `PROPPUTREF` specifies a property-setting function that uses a reference instead of a value. Use `PutRefDispProperty` if a property has both `PROPPUT` and `PROPPUTREF` and you need to distinguish which one is called.","nodes":[{"content":"Specifies that the <ph id=\"ph1\">`PROPPUTREF`</ph> member on a COM object should be invoked.","pos":[0,73],"source":"Specifies that the `PROPPUTREF` member on a COM object should be invoked."},{"content":"<ph id=\"ph1\">`PROPPUTREF`</ph> specifies a property-setting function that uses a reference instead of a value.","pos":[74,166],"source":"`PROPPUTREF` specifies a property-setting function that uses a reference instead of a value."},{"content":"Use <ph id=\"ph1\">`PutRefDispProperty`</ph> if a property has both <ph id=\"ph2\">`PROPPUT`</ph> and <ph id=\"ph3\">`PROPPUTREF`</ph> and you need to distinguish which one is called.","pos":[167,290],"source":" Use `PutRefDispProperty` if a property has both `PROPPUT` and `PROPPUTREF` and you need to distinguish which one is called."}]}],"pos":[29608,29899],"yaml":true},{"content":"Specifies that the value of the specified field should be set.  \n  \n This flag is passed to an `InvokeMember` method to set a field value.","nodes":[{"pos":[0,62],"content":"Specifies that the value of the specified field should be set.","nodes":[{"content":"Specifies that the value of the specified field should be set.","pos":[0,62]}]},{"pos":[69,138],"content":"This flag is passed to an <ph id=\"ph1\">`InvokeMember`</ph> method to set a field value.","source":"This flag is passed to an `InvokeMember` method to set a field value."}],"pos":[31072,31215],"yaml":true},{"content":"Specifies that the value of the specified property should be set. For COM properties, specifying this binding flag is equivalent to specifying `PutDispProperty` and `PutRefDispProperty`.  \n  \n This flag is passed to an `InvokeMember` method to invoke a property setter.","nodes":[{"pos":[0,186],"content":"Specifies that the value of the specified property should be set. For COM properties, specifying this binding flag is equivalent to specifying `PutDispProperty` and `PutRefDispProperty`.","nodes":[{"content":"Specifies that the value of the specified property should be set.","pos":[0,65]},{"content":"For COM properties, specifying this binding flag is equivalent to specifying <ph id=\"ph1\">`PutDispProperty`</ph> and <ph id=\"ph2\">`PutRefDispProperty`</ph>.","pos":[66,186],"source":" For COM properties, specifying this binding flag is equivalent to specifying `PutDispProperty` and `PutRefDispProperty`."}]},{"pos":[193,269],"content":"This flag is passed to an <ph id=\"ph1\">`InvokeMember`</ph> method to invoke a property setter.","source":"This flag is passed to an `InvokeMember` method to invoke a property setter."}],"pos":[32540,32814],"yaml":true},{"content":"Specifies that static members are to be included in the search.","nodes":[{"pos":[0,63],"content":"Specifies that static members are to be included in the search.","nodes":[{"content":"Specifies that static members are to be included in the search.","pos":[0,63]}]}],"pos":[34112,34176],"yaml":true},{"content":"Not implemented.","nodes":[{"pos":[0,16],"content":"Not implemented.","nodes":[{"content":"Not implemented.","pos":[0,16]}]}],"pos":[35519,35536],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Reflection.BindingFlags\n  commentId: T:System.Reflection.BindingFlags\n  id: BindingFlags\n  children:\n  - System.Reflection.BindingFlags.CreateInstance\n  - System.Reflection.BindingFlags.DeclaredOnly\n  - System.Reflection.BindingFlags.Default\n  - System.Reflection.BindingFlags.ExactBinding\n  - System.Reflection.BindingFlags.FlattenHierarchy\n  - System.Reflection.BindingFlags.GetField\n  - System.Reflection.BindingFlags.GetProperty\n  - System.Reflection.BindingFlags.IgnoreCase\n  - System.Reflection.BindingFlags.IgnoreReturn\n  - System.Reflection.BindingFlags.Instance\n  - System.Reflection.BindingFlags.InvokeMethod\n  - System.Reflection.BindingFlags.NonPublic\n  - System.Reflection.BindingFlags.OptionalParamBinding\n  - System.Reflection.BindingFlags.Public\n  - System.Reflection.BindingFlags.PutDispProperty\n  - System.Reflection.BindingFlags.PutRefDispProperty\n  - System.Reflection.BindingFlags.SetField\n  - System.Reflection.BindingFlags.SetProperty\n  - System.Reflection.BindingFlags.Static\n  - System.Reflection.BindingFlags.SuppressChangeType\n  langs:\n  - csharp\n  name: BindingFlags\n  nameWithType: BindingFlags\n  fullName: System.Reflection.BindingFlags\n  type: Enum\n  assemblies:\n  - System.Reflection\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Reflection\n  summary: Specifies flags that control binding and the way in which the search for members and types is conducted by reflection.\n  remarks: \"These `BindingFlags` control binding for a great many classes in the `System`, `System.Reflection`, and `System.Runtime` namespaces that invoke, create, get, set, and find members and types.  \\n  \\n `BindingFlags` are used in the following <xref:System.Type> methods and other places such as <xref:System.Reflection.MethodBase.Invoke%2A?displayProperty=fullName> :  \\n  \\n-   <xref:System.Reflection.MethodBase.Invoke%2A?displayProperty=fullName>  \\n  \\n-   <xref:System.Type.GetMembers%2A>  \\n  \\n-   <xref:System.Type.GetEvents%2A>  \\n  \\n-   <xref:System.Type.InvokeMember%2A>  \\n  \\n-   <xref:System.Activator.CreateInstance%2A?displayProperty=fullName>  \\n  \\n-   <xref:System.Type.GetConstructor%2A>  \\n  \\n-   <xref:System.Type.GetConstructors%2A>  \\n  \\n-   <xref:System.Type.GetMethod%2A>  \\n  \\n-   <xref:System.Type.GetMethods%2A>  \\n  \\n-   <xref:System.Type.GetField%2A>  \\n  \\n-   <xref:System.Type.GetFields%2A>  \\n  \\n-   <xref:System.Type.GetEvent%2A>  \\n  \\n-   <xref:System.Type.GetProperty%2A>  \\n  \\n-   <xref:System.Type.GetProperties%2A>  \\n  \\n-   <xref:System.Type.GetMember%2A>  \\n  \\n-   <xref:System.Type.FindMembers%2A>  \\n  \\n `InvokeMember` and `GetMethod` are especially important.  \\n  \\n The binding flags can be categorized by how they identify a type member, as listed in the following table.  \\n  \\n|Identified by Accessibility|Identified by Binding Argument|Identified by Operation|  \\n|---------------------------------|------------------------------------|-----------------------------|  \\n|DeclaredOnly<br /><br /> FlattenHierarchy<br /><br /> IgnoreCase<br /><br /> IgnoreReturn<br /><br /> Instance<br /><br /> NonPublic<br /><br /> Public<br /><br /> Static|ExactBinding<br /><br /> OptionalParamBinding|CreateInstance<br /><br /> GetField<br /><br /> SetField<br /><br /> GetProperty<br /><br /> SetProperty<br /><br /> InvokeMethod<br /><br /> PutDispProperty<br /><br /> PutRefDispProperty|  \\n  \\n> [!NOTE]\\n>  You must specify `Instance` or `Static` along with `Public` or `NonPublic` or no members will be returned.  \\n  \\n The following table lists the coercions performed by the default <xref:System.Reflection.Binder.ChangeType%2A?displayProperty=fullName>. This table applies especially to the `ExactBinding` binding flag.  \\n  \\n|Source Type|Target Type|  \\n|-----------------|-----------------|  \\n|Any type|Its base type.|  \\n|Any type|The interface it implements.|  \\n|`Char`|`UInt16`, `UInt32`, `Int32`, `UInt64`, `Int64`, `Single`, `Double`|  \\n|`Byte`|`Char`, `UInt16`, `Int16`, `UInt32`, `Int32`, `UInt64`, `Int64`, `Single`, `Double`|  \\n|`SByte`|`Int16`, `Int32`, `Int64`, `Single`, `Double`|  \\n|`UInt16`|`UInt32`, `Int32`, `UInt64`, `Int64`, `Single`, `Double`|  \\n|`Int16`|`Int32`, `Int64`, `Single`, `Double`|  \\n|`UInt32`|`UInt64`, `Int64`, `Single`, `Double`|  \\n|`Int32`|`Int64`, `Single`, `Double`|  \\n|`UInt64`|`Single`, `Double`|  \\n|`Int64`|`Single`, `Double`|  \\n|`Single`|`Double`|  \\n|Non-reference|By-reference.|\"\n  example:\n  - \"The following example demonstrates many of the binding flags.  \\n  \\n [!code-cpp[BindingFlags#1](~/samples/snippets/cpp/VS_Snippets_CLR/BindingFlags/CPP/bindingflagssample.cpp#1)]\\n [!code-csharp[BindingFlags#1](~/samples/snippets/csharp/VS_Snippets_CLR/BindingFlags/CS/bindingflagssample.cs#1)]\\n [!code-vb[BindingFlags#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/BindingFlags/VB/bindingflagssample.vb#1)]\"\n  syntax:\n    content: >-\n      [System.Flags]\n\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public enum BindingFlags\n  inheritance:\n  - System.Object\n  - System.ValueType\n  - System.Enum\n  attributes:\n  - type: System.FlagsAttribute\n  - type: System.Runtime.InteropServices.ComVisibleAttribute\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/BindingFlags.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.BindingFlags.CreateInstance\n  commentId: F:System.Reflection.BindingFlags.CreateInstance\n  id: CreateInstance\n  parent: System.Reflection.BindingFlags\n  langs:\n  - csharp\n  name: CreateInstance\n  nameWithType: BindingFlags.CreateInstance\n  fullName: BindingFlags.CreateInstance\n  type: Field\n  assemblies:\n  - System.Reflection\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Reflection\n  summary: \"Specifies that reflection should create an instance of the specified type. Calls the constructor that matches the given arguments. The supplied member name is ignored. If the type of lookup is not specified, (Instance | Public) will apply. It is not possible to call a type initializer.  \\n  \\n This flag is passed to an `InvokeMember` method to invoke a constructor.\"\n  syntax:\n    content: CreateInstance\n    return:\n      type: System.Reflection.BindingFlags\n      description: ''\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/BindingFlags.xml\n- uid: System.Reflection.BindingFlags.DeclaredOnly\n  commentId: F:System.Reflection.BindingFlags.DeclaredOnly\n  id: DeclaredOnly\n  parent: System.Reflection.BindingFlags\n  langs:\n  - csharp\n  name: DeclaredOnly\n  nameWithType: BindingFlags.DeclaredOnly\n  fullName: BindingFlags.DeclaredOnly\n  type: Field\n  assemblies:\n  - System.Reflection\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Reflection\n  summary: Specifies that only members declared at the level of the supplied type's hierarchy should be considered. Inherited members are not considered.\n  syntax:\n    content: DeclaredOnly\n    return:\n      type: System.Reflection.BindingFlags\n      description: ''\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/BindingFlags.xml\n- uid: System.Reflection.BindingFlags.Default\n  commentId: F:System.Reflection.BindingFlags.Default\n  id: Default\n  parent: System.Reflection.BindingFlags\n  langs:\n  - csharp\n  name: Default\n  nameWithType: BindingFlags.Default\n  fullName: BindingFlags.Default\n  type: Field\n  assemblies:\n  - System.Reflection\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Reflection\n  summary: Specifies that no binding flags are defined.\n  syntax:\n    content: Default\n    return:\n      type: System.Reflection.BindingFlags\n      description: ''\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/BindingFlags.xml\n- uid: System.Reflection.BindingFlags.ExactBinding\n  commentId: F:System.Reflection.BindingFlags.ExactBinding\n  id: ExactBinding\n  parent: System.Reflection.BindingFlags\n  langs:\n  - csharp\n  name: ExactBinding\n  nameWithType: BindingFlags.ExactBinding\n  fullName: BindingFlags.ExactBinding\n  type: Field\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Reflection\n  summary: Specifies that types of the supplied arguments must exactly match the types of the corresponding formal parameters. Reflection throws an exception if the caller supplies a non-null `Binder` object, since that implies that the caller is supplying `BindToXXX` implementations that will pick the appropriate method.\n  remarks: \"Reflection models the accessibility rules of the common type system. For example, if the caller is in the same assembly, the caller does not need special permissions for internal members. Otherwise, the caller needs <xref:System.Security.Permissions.ReflectionPermission>. This is consistent with lookup of members that are protected, private, and so on.  \\n  \\n The general principle is that <xref:System.Reflection.Binder.ChangeType%2A> should perform only widening coercions, which never lose data. An example of a widening coercion is coercing a value that is a 32-bit signed integer to a value that is a 64-bit signed integer. This is distinguished from a narrowing coercion, which may lose data. An example of a narrowing coercion is coercing a 64-bit signed integer to a 32-bit signed integer.  \\n  \\n The default binder ignores this flag, while custom binders can implement the semantics of this flag.\"\n  syntax:\n    content: ExactBinding\n    return:\n      type: System.Reflection.BindingFlags\n      description: ''\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/BindingFlags.xml\n- uid: System.Reflection.BindingFlags.FlattenHierarchy\n  commentId: F:System.Reflection.BindingFlags.FlattenHierarchy\n  id: FlattenHierarchy\n  parent: System.Reflection.BindingFlags\n  langs:\n  - csharp\n  name: FlattenHierarchy\n  nameWithType: BindingFlags.FlattenHierarchy\n  fullName: BindingFlags.FlattenHierarchy\n  type: Field\n  assemblies:\n  - System.Reflection\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Reflection\n  summary: Specifies that public and protected static members up the hierarchy should be returned. Private static members in inherited classes are not returned. Static members include fields, methods, events, and properties. Nested types are not returned.\n  syntax:\n    content: FlattenHierarchy\n    return:\n      type: System.Reflection.BindingFlags\n      description: ''\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/BindingFlags.xml\n- uid: System.Reflection.BindingFlags.GetField\n  commentId: F:System.Reflection.BindingFlags.GetField\n  id: GetField\n  parent: System.Reflection.BindingFlags\n  langs:\n  - csharp\n  name: GetField\n  nameWithType: BindingFlags.GetField\n  fullName: BindingFlags.GetField\n  type: Field\n  assemblies:\n  - System.Reflection\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Reflection\n  summary: \"Specifies that the value of the specified field should be returned.  \\n  \\n This flag is passed to an `InvokeMember` method to get a field value.\"\n  syntax:\n    content: GetField\n    return:\n      type: System.Reflection.BindingFlags\n      description: ''\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/BindingFlags.xml\n- uid: System.Reflection.BindingFlags.GetProperty\n  commentId: F:System.Reflection.BindingFlags.GetProperty\n  id: GetProperty\n  parent: System.Reflection.BindingFlags\n  langs:\n  - csharp\n  name: GetProperty\n  nameWithType: BindingFlags.GetProperty\n  fullName: BindingFlags.GetProperty\n  type: Field\n  assemblies:\n  - System.Reflection\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Reflection\n  summary: \"Specifies that the value of the specified property should be returned.  \\n  \\n This flag is passed to an `InvokeMember` method to invoke a property getter.\"\n  syntax:\n    content: GetProperty\n    return:\n      type: System.Reflection.BindingFlags\n      description: ''\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/BindingFlags.xml\n- uid: System.Reflection.BindingFlags.IgnoreCase\n  commentId: F:System.Reflection.BindingFlags.IgnoreCase\n  id: IgnoreCase\n  parent: System.Reflection.BindingFlags\n  langs:\n  - csharp\n  name: IgnoreCase\n  nameWithType: BindingFlags.IgnoreCase\n  fullName: BindingFlags.IgnoreCase\n  type: Field\n  assemblies:\n  - System.Reflection\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Reflection\n  summary: Specifies that the case of the member name should not be considered when binding.\n  syntax:\n    content: IgnoreCase\n    return:\n      type: System.Reflection.BindingFlags\n      description: ''\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/BindingFlags.xml\n- uid: System.Reflection.BindingFlags.IgnoreReturn\n  commentId: F:System.Reflection.BindingFlags.IgnoreReturn\n  id: IgnoreReturn\n  parent: System.Reflection.BindingFlags\n  langs:\n  - csharp\n  name: IgnoreReturn\n  nameWithType: BindingFlags.IgnoreReturn\n  fullName: BindingFlags.IgnoreReturn\n  type: Field\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Reflection\n  summary: Used in COM interop to specify that the return value of the member can be ignored.\n  syntax:\n    content: IgnoreReturn\n    return:\n      type: System.Reflection.BindingFlags\n      description: ''\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/BindingFlags.xml\n- uid: System.Reflection.BindingFlags.Instance\n  commentId: F:System.Reflection.BindingFlags.Instance\n  id: Instance\n  parent: System.Reflection.BindingFlags\n  langs:\n  - csharp\n  name: Instance\n  nameWithType: BindingFlags.Instance\n  fullName: BindingFlags.Instance\n  type: Field\n  assemblies:\n  - System.Reflection\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Reflection\n  summary: Specifies that instance members are to be included in the search.\n  syntax:\n    content: Instance\n    return:\n      type: System.Reflection.BindingFlags\n      description: ''\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/BindingFlags.xml\n- uid: System.Reflection.BindingFlags.InvokeMethod\n  commentId: F:System.Reflection.BindingFlags.InvokeMethod\n  id: InvokeMethod\n  parent: System.Reflection.BindingFlags\n  langs:\n  - csharp\n  name: InvokeMethod\n  nameWithType: BindingFlags.InvokeMethod\n  fullName: BindingFlags.InvokeMethod\n  type: Field\n  assemblies:\n  - System.Reflection\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Reflection\n  summary: \"Specifies that a method is to be invoked. This must not be a constructor or a type initializer.  \\n  \\n This flag is passed to an `InvokeMember` method to invoke a method.\"\n  syntax:\n    content: InvokeMethod\n    return:\n      type: System.Reflection.BindingFlags\n      description: ''\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/BindingFlags.xml\n- uid: System.Reflection.BindingFlags.NonPublic\n  commentId: F:System.Reflection.BindingFlags.NonPublic\n  id: NonPublic\n  parent: System.Reflection.BindingFlags\n  langs:\n  - csharp\n  name: NonPublic\n  nameWithType: BindingFlags.NonPublic\n  fullName: BindingFlags.NonPublic\n  type: Field\n  assemblies:\n  - System.Reflection\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Reflection\n  summary: Specifies that non-public members are to be included in the search.\n  syntax:\n    content: NonPublic\n    return:\n      type: System.Reflection.BindingFlags\n      description: ''\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/BindingFlags.xml\n- uid: System.Reflection.BindingFlags.OptionalParamBinding\n  commentId: F:System.Reflection.BindingFlags.OptionalParamBinding\n  id: OptionalParamBinding\n  parent: System.Reflection.BindingFlags\n  langs:\n  - csharp\n  name: OptionalParamBinding\n  nameWithType: BindingFlags.OptionalParamBinding\n  fullName: BindingFlags.OptionalParamBinding\n  type: Field\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Reflection\n  summary: Returns the set of members whose parameter count matches the number of supplied arguments. This binding flag is used for methods with parameters that have default values and methods with variable arguments (varargs). This flag should only be used with <xref href=\"System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])\"></xref>.\n  remarks: Parameters with default values are used only in calls where trailing arguments are omitted. They must be the last arguments.\n  syntax:\n    content: OptionalParamBinding\n    return:\n      type: System.Reflection.BindingFlags\n      description: ''\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/BindingFlags.xml\n- uid: System.Reflection.BindingFlags.Public\n  commentId: F:System.Reflection.BindingFlags.Public\n  id: Public\n  parent: System.Reflection.BindingFlags\n  langs:\n  - csharp\n  name: Public\n  nameWithType: BindingFlags.Public\n  fullName: BindingFlags.Public\n  type: Field\n  assemblies:\n  - System.Reflection\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Reflection\n  summary: Specifies that public members are to be included in the search.\n  syntax:\n    content: Public\n    return:\n      type: System.Reflection.BindingFlags\n      description: ''\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/BindingFlags.xml\n- uid: System.Reflection.BindingFlags.PutDispProperty\n  commentId: F:System.Reflection.BindingFlags.PutDispProperty\n  id: PutDispProperty\n  parent: System.Reflection.BindingFlags\n  langs:\n  - csharp\n  name: PutDispProperty\n  nameWithType: BindingFlags.PutDispProperty\n  fullName: BindingFlags.PutDispProperty\n  type: Field\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Reflection\n  summary: Specifies that the `PROPPUT` member on a COM object should be invoked. `PROPPUT` specifies a property-setting function that uses a value. Use `PutDispProperty` if a property has both `PROPPUT` and `PROPPUTREF` and you need to distinguish which one is called.\n  syntax:\n    content: PutDispProperty\n    return:\n      type: System.Reflection.BindingFlags\n      description: ''\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/BindingFlags.xml\n- uid: System.Reflection.BindingFlags.PutRefDispProperty\n  commentId: F:System.Reflection.BindingFlags.PutRefDispProperty\n  id: PutRefDispProperty\n  parent: System.Reflection.BindingFlags\n  langs:\n  - csharp\n  name: PutRefDispProperty\n  nameWithType: BindingFlags.PutRefDispProperty\n  fullName: BindingFlags.PutRefDispProperty\n  type: Field\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Reflection\n  summary: Specifies that the `PROPPUTREF` member on a COM object should be invoked. `PROPPUTREF` specifies a property-setting function that uses a reference instead of a value. Use `PutRefDispProperty` if a property has both `PROPPUT` and `PROPPUTREF` and you need to distinguish which one is called.\n  syntax:\n    content: PutRefDispProperty\n    return:\n      type: System.Reflection.BindingFlags\n      description: ''\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/BindingFlags.xml\n- uid: System.Reflection.BindingFlags.SetField\n  commentId: F:System.Reflection.BindingFlags.SetField\n  id: SetField\n  parent: System.Reflection.BindingFlags\n  langs:\n  - csharp\n  name: SetField\n  nameWithType: BindingFlags.SetField\n  fullName: BindingFlags.SetField\n  type: Field\n  assemblies:\n  - System.Reflection\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Reflection\n  summary: \"Specifies that the value of the specified field should be set.  \\n  \\n This flag is passed to an `InvokeMember` method to set a field value.\"\n  syntax:\n    content: SetField\n    return:\n      type: System.Reflection.BindingFlags\n      description: ''\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/BindingFlags.xml\n- uid: System.Reflection.BindingFlags.SetProperty\n  commentId: F:System.Reflection.BindingFlags.SetProperty\n  id: SetProperty\n  parent: System.Reflection.BindingFlags\n  langs:\n  - csharp\n  name: SetProperty\n  nameWithType: BindingFlags.SetProperty\n  fullName: BindingFlags.SetProperty\n  type: Field\n  assemblies:\n  - System.Reflection\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Reflection\n  summary: \"Specifies that the value of the specified property should be set. For COM properties, specifying this binding flag is equivalent to specifying `PutDispProperty` and `PutRefDispProperty`.  \\n  \\n This flag is passed to an `InvokeMember` method to invoke a property setter.\"\n  syntax:\n    content: SetProperty\n    return:\n      type: System.Reflection.BindingFlags\n      description: ''\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/BindingFlags.xml\n- uid: System.Reflection.BindingFlags.Static\n  commentId: F:System.Reflection.BindingFlags.Static\n  id: Static\n  parent: System.Reflection.BindingFlags\n  langs:\n  - csharp\n  name: Static\n  nameWithType: BindingFlags.Static\n  fullName: BindingFlags.Static\n  type: Field\n  assemblies:\n  - System.Reflection\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Reflection\n  summary: Specifies that static members are to be included in the search.\n  syntax:\n    content: Static\n    return:\n      type: System.Reflection.BindingFlags\n      description: ''\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/BindingFlags.xml\n- uid: System.Reflection.BindingFlags.SuppressChangeType\n  commentId: F:System.Reflection.BindingFlags.SuppressChangeType\n  id: SuppressChangeType\n  parent: System.Reflection.BindingFlags\n  langs:\n  - csharp\n  name: SuppressChangeType\n  nameWithType: BindingFlags.SuppressChangeType\n  fullName: BindingFlags.SuppressChangeType\n  type: Field\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Reflection\n  summary: Not implemented.\n  syntax:\n    content: SuppressChangeType\n    return:\n      type: System.Reflection.BindingFlags\n      description: ''\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/BindingFlags.xml\nreferences:\n- uid: System.Enum\n  parent: System\n  isExternal: false\n  name: Enum\n  nameWithType: Enum\n  fullName: System.Enum\n- uid: System.Reflection.BindingFlags.CreateInstance\n  parent: System.Reflection.BindingFlags\n  isExternal: false\n  name: CreateInstance\n  nameWithType: BindingFlags.CreateInstance\n  fullName: BindingFlags.CreateInstance\n- uid: System.Reflection.BindingFlags\n  parent: System.Reflection\n  isExternal: false\n  name: BindingFlags\n  nameWithType: BindingFlags\n  fullName: System.Reflection.BindingFlags\n- uid: System.Reflection.BindingFlags.DeclaredOnly\n  parent: System.Reflection.BindingFlags\n  isExternal: false\n  name: DeclaredOnly\n  nameWithType: BindingFlags.DeclaredOnly\n  fullName: BindingFlags.DeclaredOnly\n- uid: System.Reflection.BindingFlags.Default\n  parent: System.Reflection.BindingFlags\n  isExternal: false\n  name: Default\n  nameWithType: BindingFlags.Default\n  fullName: BindingFlags.Default\n- uid: System.Reflection.BindingFlags.ExactBinding\n  parent: System.Reflection.BindingFlags\n  isExternal: false\n  name: ExactBinding\n  nameWithType: BindingFlags.ExactBinding\n  fullName: BindingFlags.ExactBinding\n- uid: System.Reflection.BindingFlags.FlattenHierarchy\n  parent: System.Reflection.BindingFlags\n  isExternal: false\n  name: FlattenHierarchy\n  nameWithType: BindingFlags.FlattenHierarchy\n  fullName: BindingFlags.FlattenHierarchy\n- uid: System.Reflection.BindingFlags.GetField\n  parent: System.Reflection.BindingFlags\n  isExternal: false\n  name: GetField\n  nameWithType: BindingFlags.GetField\n  fullName: BindingFlags.GetField\n- uid: System.Reflection.BindingFlags.GetProperty\n  parent: System.Reflection.BindingFlags\n  isExternal: false\n  name: GetProperty\n  nameWithType: BindingFlags.GetProperty\n  fullName: BindingFlags.GetProperty\n- uid: System.Reflection.BindingFlags.IgnoreCase\n  parent: System.Reflection.BindingFlags\n  isExternal: false\n  name: IgnoreCase\n  nameWithType: BindingFlags.IgnoreCase\n  fullName: BindingFlags.IgnoreCase\n- uid: System.Reflection.BindingFlags.IgnoreReturn\n  parent: System.Reflection.BindingFlags\n  isExternal: false\n  name: IgnoreReturn\n  nameWithType: BindingFlags.IgnoreReturn\n  fullName: BindingFlags.IgnoreReturn\n- uid: System.Reflection.BindingFlags.Instance\n  parent: System.Reflection.BindingFlags\n  isExternal: false\n  name: Instance\n  nameWithType: BindingFlags.Instance\n  fullName: BindingFlags.Instance\n- uid: System.Reflection.BindingFlags.InvokeMethod\n  parent: System.Reflection.BindingFlags\n  isExternal: false\n  name: InvokeMethod\n  nameWithType: BindingFlags.InvokeMethod\n  fullName: BindingFlags.InvokeMethod\n- uid: System.Reflection.BindingFlags.NonPublic\n  parent: System.Reflection.BindingFlags\n  isExternal: false\n  name: NonPublic\n  nameWithType: BindingFlags.NonPublic\n  fullName: BindingFlags.NonPublic\n- uid: System.Reflection.BindingFlags.OptionalParamBinding\n  parent: System.Reflection.BindingFlags\n  isExternal: false\n  name: OptionalParamBinding\n  nameWithType: BindingFlags.OptionalParamBinding\n  fullName: BindingFlags.OptionalParamBinding\n- uid: System.Reflection.BindingFlags.Public\n  parent: System.Reflection.BindingFlags\n  isExternal: false\n  name: Public\n  nameWithType: BindingFlags.Public\n  fullName: BindingFlags.Public\n- uid: System.Reflection.BindingFlags.PutDispProperty\n  parent: System.Reflection.BindingFlags\n  isExternal: false\n  name: PutDispProperty\n  nameWithType: BindingFlags.PutDispProperty\n  fullName: BindingFlags.PutDispProperty\n- uid: System.Reflection.BindingFlags.PutRefDispProperty\n  parent: System.Reflection.BindingFlags\n  isExternal: false\n  name: PutRefDispProperty\n  nameWithType: BindingFlags.PutRefDispProperty\n  fullName: BindingFlags.PutRefDispProperty\n- uid: System.Reflection.BindingFlags.SetField\n  parent: System.Reflection.BindingFlags\n  isExternal: false\n  name: SetField\n  nameWithType: BindingFlags.SetField\n  fullName: BindingFlags.SetField\n- uid: System.Reflection.BindingFlags.SetProperty\n  parent: System.Reflection.BindingFlags\n  isExternal: false\n  name: SetProperty\n  nameWithType: BindingFlags.SetProperty\n  fullName: BindingFlags.SetProperty\n- uid: System.Reflection.BindingFlags.Static\n  parent: System.Reflection.BindingFlags\n  isExternal: false\n  name: Static\n  nameWithType: BindingFlags.Static\n  fullName: BindingFlags.Static\n- uid: System.Reflection.BindingFlags.SuppressChangeType\n  parent: System.Reflection.BindingFlags\n  isExternal: false\n  name: SuppressChangeType\n  nameWithType: BindingFlags.SuppressChangeType\n  fullName: BindingFlags.SuppressChangeType\n"}