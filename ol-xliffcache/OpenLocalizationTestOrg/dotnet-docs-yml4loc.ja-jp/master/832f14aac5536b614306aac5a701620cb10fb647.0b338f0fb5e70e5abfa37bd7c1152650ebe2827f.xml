{"nodes":[{"content":"Indicates how to marshal the data between managed and unmanaged code.","nodes":[{"pos":[0,69],"content":"Indicates how to marshal the data between managed and unmanaged code.","nodes":[{"content":"Indicates how to marshal the data between managed and unmanaged code.","pos":[0,69]}]}],"pos":[1354,1424],"yaml":true},{"content":"You can apply this attribute to parameters, fields, or return values.  \n  \n This attribute is optional, as each data type has a default marshaling behavior. This attribute is only necessary when a given type can be marshaled to multiple types. For example, you can marshal a string to unmanaged code as either a <xref:System.Runtime.InteropServices.UnmanagedType.LPStr>, a <xref:System.Runtime.InteropServices.UnmanagedType.LPWStr>, a <xref:System.Runtime.InteropServices.UnmanagedType.LPTStr>, or a <xref:System.Runtime.InteropServices.UnmanagedType.BStr>. By default, the common language runtime marshals a string parameter as a <xref:System.Runtime.InteropServices.UnmanagedType.BStr> to COM methods. You can apply the <xref:System.Runtime.InteropServices.MarshalAsAttribute> attribute to an individual field or parameter to cause that particular string to be marshaled as a <xref:System.Runtime.InteropServices.UnmanagedType.LPStr> instead of a <xref:System.Runtime.InteropServices.UnmanagedType.BStr>. The [Tlbexp.exe (Type Library Exporter)](~/docs/framework/tools/tlbexp-exe-type-library-exporter.md) passes your marshaling preferences to the common language runtime.  \n  \n Some parameters and return values have different default marshaling behavior when used with COM interop or platform invoke. By default, the runtime marshals a string parameter (and fields in a value type) as a <xref:System.Runtime.InteropServices.UnmanagedType.LPStr> to a platform invoke method or function. For additional information, see [Default Marshaling Behavior](~/docs/framework/interop/default-marshaling-behavior.md).  \n  \n In most cases, the attribute simply identifies the format of the unmanaged data using the <xref:System.Runtime.InteropServices.UnmanagedType> enumeration, as shown in the following C# signature:  \n  \n [!code-csharp[system.runtime.interopservices.MarshalAsAttribute#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.runtime.interopservices.MarshalAsAttribute/cs/Signature1.cs#2)]\n [!code-vb[system.runtime.interopservices.MarshalAsAttribute#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.runtime.interopservices.MarshalAsAttribute/vb/Signature1.vb#2)]  \n  \n Some <xref:System.Runtime.InteropServices.UnmanagedType> enumeration members require additional information. For example, additional information is needed when the <xref:System.Runtime.InteropServices.UnmanagedType> is <xref:System.Runtime.InteropServices.UnmanagedType.LPArray>. For a complete description of how to use this attribute with arrays, see [Default Marshaling for Arrays](~/docs/framework/interop/default-marshaling-for-arrays.md).  \n  \n The [Tlbimp.exe (Type Library Importer)](~/docs/framework/tools/tlbimp-exe-type-library-importer.md) also applies this attribute to parameters, fields, and return values to indicate that the data type in the input type library is not the default type for the corresponding managed data type. Tlbimp.exe always applies the <xref:System.Runtime.InteropServices.MarshalAsAttribute> to <xref:System.String> and <xref:System.Object> types for clarity, regardless of the type specified in the input type library.  \n  \n> [!NOTE]\n>  The <xref:System.Runtime.InteropServices.MarshalAsAttribute> does not support marshaling of generic types.","nodes":[{"pos":[0,69],"content":"You can apply this attribute to parameters, fields, or return values.","nodes":[{"content":"You can apply this attribute to parameters, fields, or return values.","pos":[0,69]}]},{"pos":[76,1174],"content":"This attribute is optional, as each data type has a default marshaling behavior. This attribute is only necessary when a given type can be marshaled to multiple types. For example, you can marshal a string to unmanaged code as either a <xref:System.Runtime.InteropServices.UnmanagedType.LPStr>, a <xref:System.Runtime.InteropServices.UnmanagedType.LPWStr>, a <xref:System.Runtime.InteropServices.UnmanagedType.LPTStr>, or a <xref:System.Runtime.InteropServices.UnmanagedType.BStr>. By default, the common language runtime marshals a string parameter as a <xref:System.Runtime.InteropServices.UnmanagedType.BStr> to COM methods. You can apply the <xref:System.Runtime.InteropServices.MarshalAsAttribute> attribute to an individual field or parameter to cause that particular string to be marshaled as a <xref:System.Runtime.InteropServices.UnmanagedType.LPStr> instead of a <xref:System.Runtime.InteropServices.UnmanagedType.BStr>. The [Tlbexp.exe (Type Library Exporter)](~/docs/framework/tools/tlbexp-exe-type-library-exporter.md) passes your marshaling preferences to the common language runtime.","nodes":[{"content":"This attribute is optional, as each data type has a default marshaling behavior.","pos":[0,80]},{"content":"This attribute is only necessary when a given type can be marshaled to multiple types.","pos":[81,167]},{"content":"For example, you can marshal a string to unmanaged code as either a <ph id=\"ph1\">&lt;xref:System.Runtime.InteropServices.UnmanagedType.LPStr&gt;</ph>, a <ph id=\"ph2\">&lt;xref:System.Runtime.InteropServices.UnmanagedType.LPWStr&gt;</ph>, a <ph id=\"ph3\">&lt;xref:System.Runtime.InteropServices.UnmanagedType.LPTStr&gt;</ph>, or a <ph id=\"ph4\">&lt;xref:System.Runtime.InteropServices.UnmanagedType.BStr&gt;</ph>.","pos":[168,481],"source":" For example, you can marshal a string to unmanaged code as either a <xref:System.Runtime.InteropServices.UnmanagedType.LPStr>, a <xref:System.Runtime.InteropServices.UnmanagedType.LPWStr>, a <xref:System.Runtime.InteropServices.UnmanagedType.LPTStr>, or a <xref:System.Runtime.InteropServices.UnmanagedType.BStr>."},{"content":"By default, the common language runtime marshals a string parameter as a <ph id=\"ph1\">&lt;xref:System.Runtime.InteropServices.UnmanagedType.BStr&gt;</ph> to COM methods.","pos":[482,627],"source":" By default, the common language runtime marshals a string parameter as a <xref:System.Runtime.InteropServices.UnmanagedType.BStr> to COM methods."},{"content":"You can apply the <ph id=\"ph1\">&lt;xref:System.Runtime.InteropServices.MarshalAsAttribute&gt;</ph> attribute to an individual field or parameter to cause that particular string to be marshaled as a <ph id=\"ph2\">&lt;xref:System.Runtime.InteropServices.UnmanagedType.LPStr&gt;</ph> instead of a <ph id=\"ph3\">&lt;xref:System.Runtime.InteropServices.UnmanagedType.BStr&gt;</ph>.","pos":[628,930],"source":" You can apply the <xref:System.Runtime.InteropServices.MarshalAsAttribute> attribute to an individual field or parameter to cause that particular string to be marshaled as a <xref:System.Runtime.InteropServices.UnmanagedType.LPStr> instead of a <xref:System.Runtime.InteropServices.UnmanagedType.BStr>."},{"content":"The <bpt id=\"p1\">[</bpt>Tlbexp.exe (Type Library Exporter)<ept id=\"p1\">](~/docs/framework/tools/tlbexp-exe-type-library-exporter.md)</ept> passes your marshaling preferences to the common language runtime.","pos":[931,1098],"source":" The [Tlbexp.exe (Type Library Exporter)](~/docs/framework/tools/tlbexp-exe-type-library-exporter.md) passes your marshaling preferences to the common language runtime."}]},{"pos":[1181,1609],"content":"Some parameters and return values have different default marshaling behavior when used with COM interop or platform invoke. By default, the runtime marshals a string parameter (and fields in a value type) as a <xref:System.Runtime.InteropServices.UnmanagedType.LPStr> to a platform invoke method or function. For additional information, see [Default Marshaling Behavior](~/docs/framework/interop/default-marshaling-behavior.md).","nodes":[{"content":"Some parameters and return values have different default marshaling behavior when used with COM interop or platform invoke.","pos":[0,123]},{"content":"By default, the runtime marshals a string parameter (and fields in a value type) as a <ph id=\"ph1\">&lt;xref:System.Runtime.InteropServices.UnmanagedType.LPStr&gt;</ph> to a platform invoke method or function.","pos":[124,308],"source":" By default, the runtime marshals a string parameter (and fields in a value type) as a <xref:System.Runtime.InteropServices.UnmanagedType.LPStr> to a platform invoke method or function."},{"content":"For additional information, see <bpt id=\"p1\">[</bpt>Default Marshaling Behavior<ept id=\"p1\">](~/docs/framework/interop/default-marshaling-behavior.md)</ept>.","pos":[309,428],"source":" For additional information, see [Default Marshaling Behavior](~/docs/framework/interop/default-marshaling-behavior.md)."}]},{"pos":[1616,1810],"content":"In most cases, the attribute simply identifies the format of the unmanaged data using the <xref:System.Runtime.InteropServices.UnmanagedType> enumeration, as shown in the following C# signature:","nodes":[{"content":"In most cases, the attribute simply identifies the format of the unmanaged data using the <ph id=\"ph1\">&lt;xref:System.Runtime.InteropServices.UnmanagedType&gt;</ph> enumeration, as shown in the following C# signature:","pos":[0,194],"source":"In most cases, the attribute simply identifies the format of the unmanaged data using the <xref:System.Runtime.InteropServices.UnmanagedType> enumeration, as shown in the following C# signature:"}]},{"pos":[1817,2192],"content":"<bpt id=\"p1\">[!code-csharp</bpt><bpt id=\"p2\">[</bpt>system.runtime.interopservices.MarshalAsAttribute#2<ept id=\"p2\">](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.runtime.interopservices.MarshalAsAttribute/cs/Signature1.cs#2)</ept><ept id=\"p1\">]</ept> <bpt id=\"p3\">[!code-vb</bpt><bpt id=\"p4\">[</bpt>system.runtime.interopservices.MarshalAsAttribute#2<ept id=\"p4\">](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.runtime.interopservices.MarshalAsAttribute/vb/Signature1.vb#2)</ept><ept id=\"p3\">]</ept>","source":"[!code-csharp[system.runtime.interopservices.MarshalAsAttribute#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.runtime.interopservices.MarshalAsAttribute/cs/Signature1.cs#2)]\n [!code-vb[system.runtime.interopservices.MarshalAsAttribute#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.runtime.interopservices.MarshalAsAttribute/vb/Signature1.vb#2)]"},{"pos":[2199,2643],"content":"Some <xref:System.Runtime.InteropServices.UnmanagedType> enumeration members require additional information. For example, additional information is needed when the <xref:System.Runtime.InteropServices.UnmanagedType> is <xref:System.Runtime.InteropServices.UnmanagedType.LPArray>. For a complete description of how to use this attribute with arrays, see [Default Marshaling for Arrays](~/docs/framework/interop/default-marshaling-for-arrays.md).","nodes":[{"content":"Some <ph id=\"ph1\">&lt;xref:System.Runtime.InteropServices.UnmanagedType&gt;</ph> enumeration members require additional information.","pos":[0,108],"source":"Some <xref:System.Runtime.InteropServices.UnmanagedType> enumeration members require additional information."},{"content":"For example, additional information is needed when the <ph id=\"ph1\">&lt;xref:System.Runtime.InteropServices.UnmanagedType&gt;</ph> is <ph id=\"ph2\">&lt;xref:System.Runtime.InteropServices.UnmanagedType.LPArray&gt;</ph>.","pos":[109,279],"source":" For example, additional information is needed when the <xref:System.Runtime.InteropServices.UnmanagedType> is <xref:System.Runtime.InteropServices.UnmanagedType.LPArray>."},{"content":"For a complete description of how to use this attribute with arrays, see <bpt id=\"p1\">[</bpt>Default Marshaling for Arrays<ept id=\"p1\">](~/docs/framework/interop/default-marshaling-for-arrays.md)</ept>.","pos":[280,444],"source":" For a complete description of how to use this attribute with arrays, see [Default Marshaling for Arrays](~/docs/framework/interop/default-marshaling-for-arrays.md)."}]},{"pos":[2650,3156],"content":"The [Tlbimp.exe (Type Library Importer)](~/docs/framework/tools/tlbimp-exe-type-library-importer.md) also applies this attribute to parameters, fields, and return values to indicate that the data type in the input type library is not the default type for the corresponding managed data type. Tlbimp.exe always applies the <xref:System.Runtime.InteropServices.MarshalAsAttribute> to <xref:System.String> and <xref:System.Object> types for clarity, regardless of the type specified in the input type library.","nodes":[{"content":"The <bpt id=\"p1\">[</bpt>Tlbimp.exe (Type Library Importer)<ept id=\"p1\">](~/docs/framework/tools/tlbimp-exe-type-library-importer.md)</ept> also applies this attribute to parameters, fields, and return values to indicate that the data type in the input type library is not the default type for the corresponding managed data type.","pos":[0,291],"source":"The [Tlbimp.exe (Type Library Importer)](~/docs/framework/tools/tlbimp-exe-type-library-importer.md) also applies this attribute to parameters, fields, and return values to indicate that the data type in the input type library is not the default type for the corresponding managed data type."},{"content":"Tlbimp.exe always applies the <ph id=\"ph1\">&lt;xref:System.Runtime.InteropServices.MarshalAsAttribute&gt;</ph> to <ph id=\"ph2\">&lt;xref:System.String&gt;</ph> and <ph id=\"ph3\">&lt;xref:System.Object&gt;</ph> types for clarity, regardless of the type specified in the input type library.","pos":[292,506],"source":" Tlbimp.exe always applies the <xref:System.Runtime.InteropServices.MarshalAsAttribute> to <xref:System.String> and <xref:System.Object> types for clarity, regardless of the type specified in the input type library."}]},{"pos":[3164,3281],"content":"[!NOTE]\n The <xref:System.Runtime.InteropServices.MarshalAsAttribute> does not support marshaling of generic types.","leadings":["","> "],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Runtime.InteropServices.MarshalAsAttribute&gt;</ph> does not support marshaling of generic types.","pos":[9,115],"source":" The <xref:System.Runtime.InteropServices.MarshalAsAttribute> does not support marshaling of generic types."}]}],"pos":[1435,4735],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.Runtime.InteropServices.MarshalAsAttribute\"></xref> class with the specified <xref href=\"System.Runtime.InteropServices.UnmanagedType\"></xref> value.","nodes":[{"pos":[0,202],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Runtime.InteropServices.MarshalAsAttribute\"&gt;&lt;/xref&gt;</ph> class with the specified <ph id=\"ph2\">&lt;xref href=\"System.Runtime.InteropServices.UnmanagedType\"&gt;&lt;/xref&gt;</ph> value.","source":"Initializes a new instance of the <xref href=\"System.Runtime.InteropServices.MarshalAsAttribute\"></xref> class with the specified <xref href=\"System.Runtime.InteropServices.UnmanagedType\"></xref> value."}],"pos":[11575,11778],"yaml":true},{"content":"This constructor takes an underlying 16-bit signed integer that represents each <xref:System.Runtime.InteropServices.UnmanagedType> enumeration member. The [Tlbimp.exe (Type Library Importer)](~/docs/framework/tools/tlbimp-exe-type-library-importer.md) uses this constructor.","nodes":[{"pos":[0,275],"content":"This constructor takes an underlying 16-bit signed integer that represents each <xref:System.Runtime.InteropServices.UnmanagedType> enumeration member. The [Tlbimp.exe (Type Library Importer)](~/docs/framework/tools/tlbimp-exe-type-library-importer.md) uses this constructor.","nodes":[{"content":"This constructor takes an underlying 16-bit signed integer that represents each <ph id=\"ph1\">&lt;xref:System.Runtime.InteropServices.UnmanagedType&gt;</ph> enumeration member.","pos":[0,151],"source":"This constructor takes an underlying 16-bit signed integer that represents each <xref:System.Runtime.InteropServices.UnmanagedType> enumeration member."},{"content":"The <bpt id=\"p1\">[</bpt>Tlbimp.exe (Type Library Importer)<ept id=\"p1\">](~/docs/framework/tools/tlbimp-exe-type-library-importer.md)</ept> uses this constructor.","pos":[152,275],"source":" The [Tlbimp.exe (Type Library Importer)](~/docs/framework/tools/tlbimp-exe-type-library-importer.md) uses this constructor."}]}],"pos":[11789,12065],"yaml":true,"extradata":"MT"},{"content":"The value the data is to be marshaled as.","nodes":[{"pos":[0,41],"content":"The value the data is to be marshaled as.","nodes":[{"content":"The value the data is to be marshaled as.","pos":[0,41]}]}],"pos":[12221,12263],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Runtime.InteropServices.MarshalAsAttribute\"></xref> class with the specified <xref href=\"System.Runtime.InteropServices.UnmanagedType\"></xref> enumeration member.","nodes":[{"pos":[0,215],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Runtime.InteropServices.MarshalAsAttribute\"&gt;&lt;/xref&gt;</ph> class with the specified <ph id=\"ph2\">&lt;xref href=\"System.Runtime.InteropServices.UnmanagedType\"&gt;&lt;/xref&gt;</ph> enumeration member.","source":"Initializes a new instance of the <xref href=\"System.Runtime.InteropServices.MarshalAsAttribute\"></xref> class with the specified <xref href=\"System.Runtime.InteropServices.UnmanagedType\"></xref> enumeration member."}],"pos":[14094,14310],"yaml":true},{"content":"For readable code that is less prone to error, always use this constructor.","nodes":[{"pos":[0,75],"content":"For readable code that is less prone to error, always use this constructor.","nodes":[{"content":"For readable code that is less prone to error, always use this constructor.","pos":[0,75]}]}],"pos":[14321,14397],"yaml":true,"extradata":"MT"},{"content":"The value the data is to be marshaled as.","nodes":[{"pos":[0,41],"content":"The value the data is to be marshaled as.","nodes":[{"content":"The value the data is to be marshaled as.","pos":[0,41]}]}],"pos":[14624,14666],"yaml":true},{"content":"Specifies the element type of the unmanaged <xref href=\"System.Runtime.InteropServices.UnmanagedType.LPArray\"></xref> or <xref href=\"System.Runtime.InteropServices.UnmanagedType.ByValArray\"></xref>.","nodes":[{"pos":[0,198],"content":"Specifies the element type of the unmanaged <ph id=\"ph1\">&lt;xref href=\"System.Runtime.InteropServices.UnmanagedType.LPArray\"&gt;&lt;/xref&gt;</ph> or <ph id=\"ph2\">&lt;xref href=\"System.Runtime.InteropServices.UnmanagedType.ByValArray\"&gt;&lt;/xref&gt;</ph>.","source":"Specifies the element type of the unmanaged <xref href=\"System.Runtime.InteropServices.UnmanagedType.LPArray\"></xref> or <xref href=\"System.Runtime.InteropServices.UnmanagedType.ByValArray\"></xref>."}],"pos":[16309,16508],"yaml":true},{"content":"You can set this parameter to a value from the <xref:System.Runtime.InteropServices.UnmanagedType?displayProperty=fullName> enumeration to specify the type of the array's elements. If a type is not specified, the default unmanaged type corresponding to the managed array's element type is used. For example, the `ArraySubType` for a `LPWStr` array in COM is <xref:System.Runtime.InteropServices.UnmanagedType?displayProperty=fullName>. For additional information, see [Default Marshaling for Arrays](~/docs/framework/interop/default-marshaling-for-arrays.md).","nodes":[{"pos":[0,559],"content":"You can set this parameter to a value from the <xref:System.Runtime.InteropServices.UnmanagedType?displayProperty=fullName> enumeration to specify the type of the array's elements. If a type is not specified, the default unmanaged type corresponding to the managed array's element type is used. For example, the `ArraySubType` for a `LPWStr` array in COM is <xref:System.Runtime.InteropServices.UnmanagedType?displayProperty=fullName>. For additional information, see [Default Marshaling for Arrays](~/docs/framework/interop/default-marshaling-for-arrays.md).","nodes":[{"content":"You can set this parameter to a value from the <ph id=\"ph1\">&lt;xref:System.Runtime.InteropServices.UnmanagedType?displayProperty=fullName&gt;</ph> enumeration to specify the type of the array's elements.","pos":[0,180],"source":"You can set this parameter to a value from the <xref:System.Runtime.InteropServices.UnmanagedType?displayProperty=fullName> enumeration to specify the type of the array's elements."},{"content":"If a type is not specified, the default unmanaged type corresponding to the managed array's element type is used.","pos":[181,294]},{"content":"For example, the <ph id=\"ph1\">`ArraySubType`</ph> for a <ph id=\"ph2\">`LPWStr`</ph> array in COM is <ph id=\"ph3\">&lt;xref:System.Runtime.InteropServices.UnmanagedType?displayProperty=fullName&gt;</ph>.","pos":[295,435],"source":" For example, the `ArraySubType` for a `LPWStr` array in COM is <xref:System.Runtime.InteropServices.UnmanagedType?displayProperty=fullName>."},{"content":"For additional information, see <bpt id=\"p1\">[</bpt>Default Marshaling for Arrays<ept id=\"p1\">](~/docs/framework/interop/default-marshaling-for-arrays.md)</ept>.","pos":[436,559],"source":" For additional information, see [Default Marshaling for Arrays](~/docs/framework/interop/default-marshaling-for-arrays.md)."}]}],"pos":[16519,17079],"yaml":true,"extradata":"MT"},{"content":"Specifies the parameter index of the unmanaged `iid_is` attribute used by COM.","nodes":[{"pos":[0,78],"content":"Specifies the parameter index of the unmanaged <ph id=\"ph1\">`iid_is`</ph> attribute used by COM.","source":"Specifies the parameter index of the unmanaged `iid_is` attribute used by COM."}],"pos":[18863,18942],"yaml":true},{"content":"Provides additional information to a custom marshaler.","nodes":[{"pos":[0,54],"content":"Provides additional information to a custom marshaler.","nodes":[{"content":"Provides additional information to a custom marshaler.","pos":[0,54]}]}],"pos":[20634,20689],"yaml":true},{"content":"This field is optional when using a custom marshaler.  \n  \n You can set this field to a string that supplies additional information to a custom marshaler. For example, the same marshaler can be used to provide a number of wrappers, where the cookie is used to indicate the specific wrapper.","nodes":[{"pos":[0,53],"content":"This field is optional when using a custom marshaler.","nodes":[{"content":"This field is optional when using a custom marshaler.","pos":[0,53]}]},{"pos":[60,290],"content":"You can set this field to a string that supplies additional information to a custom marshaler. For example, the same marshaler can be used to provide a number of wrappers, where the cookie is used to indicate the specific wrapper.","nodes":[{"content":"You can set this field to a string that supplies additional information to a custom marshaler. For example, the same marshaler can be used to provide a number of wrappers, where the cookie is used to indicate the specific wrapper.","pos":[0,230],"nodes":[{"content":"You can set this field to a string that supplies additional information to a custom marshaler.","pos":[0,94]},{"content":"For example, the same marshaler can be used to provide a number of wrappers, where the cookie is used to indicate the specific wrapper.","pos":[95,230]}]}]}],"pos":[20700,20995],"yaml":true,"extradata":"MT"},{"content":"Specifies the fully qualified name of a custom marshaler.","nodes":[{"pos":[0,57],"content":"Specifies the fully qualified name of a custom marshaler.","nodes":[{"content":"Specifies the fully qualified name of a custom marshaler.","pos":[0,57]}]}],"pos":[22675,22733],"yaml":true},{"content":"You can use either the <xref:System.Runtime.InteropServices.MarshalAsAttribute.MarshalType> or <xref:System.Runtime.InteropServices.MarshalAsAttribute.MarshalTypeRef?displayProperty=fullName> field specify a custom marshaler type for the attributed parameter, field, or return type. The <xref:System.Runtime.InteropServices.MarshalAsAttribute.MarshalType> field enables you to specify a string representing the fully qualified name of a custom marshaler. It is useful for late-bound references, but is less preferred than <xref:System.Runtime.InteropServices.MarshalAsAttribute.MarshalTypeRef> for specifying a custom marshaler. For additional information about creating and using custom marshalers, see [Custom Marshaling](http://msdn.microsoft.com/en-us/49f9ac47-1619-4d6e-9da6-bf06bba12079).","nodes":[{"pos":[0,794],"content":"You can use either the <xref:System.Runtime.InteropServices.MarshalAsAttribute.MarshalType> or <xref:System.Runtime.InteropServices.MarshalAsAttribute.MarshalTypeRef?displayProperty=fullName> field specify a custom marshaler type for the attributed parameter, field, or return type. The <xref:System.Runtime.InteropServices.MarshalAsAttribute.MarshalType> field enables you to specify a string representing the fully qualified name of a custom marshaler. It is useful for late-bound references, but is less preferred than <xref:System.Runtime.InteropServices.MarshalAsAttribute.MarshalTypeRef> for specifying a custom marshaler. For additional information about creating and using custom marshalers, see [Custom Marshaling](http://msdn.microsoft.com/en-us/49f9ac47-1619-4d6e-9da6-bf06bba12079).","nodes":[{"content":"You can use either the <ph id=\"ph1\">&lt;xref:System.Runtime.InteropServices.MarshalAsAttribute.MarshalType&gt;</ph> or <ph id=\"ph2\">&lt;xref:System.Runtime.InteropServices.MarshalAsAttribute.MarshalTypeRef?displayProperty=fullName&gt;</ph> field specify a custom marshaler type for the attributed parameter, field, or return type.","pos":[0,282],"source":"You can use either the <xref:System.Runtime.InteropServices.MarshalAsAttribute.MarshalType> or <xref:System.Runtime.InteropServices.MarshalAsAttribute.MarshalTypeRef?displayProperty=fullName> field specify a custom marshaler type for the attributed parameter, field, or return type."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Runtime.InteropServices.MarshalAsAttribute.MarshalType&gt;</ph> field enables you to specify a string representing the fully qualified name of a custom marshaler.","pos":[283,454],"source":" The <xref:System.Runtime.InteropServices.MarshalAsAttribute.MarshalType> field enables you to specify a string representing the fully qualified name of a custom marshaler."},{"content":"It is useful for late-bound references, but is less preferred than <ph id=\"ph1\">&lt;xref:System.Runtime.InteropServices.MarshalAsAttribute.MarshalTypeRef&gt;</ph> for specifying a custom marshaler.","pos":[455,628],"source":" It is useful for late-bound references, but is less preferred than <xref:System.Runtime.InteropServices.MarshalAsAttribute.MarshalTypeRef> for specifying a custom marshaler."},{"content":"For additional information about creating and using custom marshalers, see <bpt id=\"p1\">[</bpt>Custom Marshaling<ept id=\"p1\">](http://msdn.microsoft.com/en-us/49f9ac47-1619-4d6e-9da6-bf06bba12079)</ept>.","pos":[629,794],"source":" For additional information about creating and using custom marshalers, see [Custom Marshaling](http://msdn.microsoft.com/en-us/49f9ac47-1619-4d6e-9da6-bf06bba12079)."}]}],"pos":[22744,23539],"yaml":true,"extradata":"MT"},{"content":"Implements <xref href=\"System.Runtime.InteropServices.MarshalAsAttribute.MarshalType\"></xref> as a type.","nodes":[{"pos":[0,104],"content":"Implements <ph id=\"ph1\">&lt;xref href=\"System.Runtime.InteropServices.MarshalAsAttribute.MarshalType\"&gt;&lt;/xref&gt;</ph> as a type.","source":"Implements <xref href=\"System.Runtime.InteropServices.MarshalAsAttribute.MarshalType\"></xref> as a type."}],"pos":[25376,25481],"yaml":true},{"content":"You can use either the <xref:System.Runtime.InteropServices.MarshalAsAttribute.MarshalTypeRef> or <xref:System.Runtime.InteropServices.MarshalAsAttribute.MarshalType> field to specify a custom marshaler type for the attributed parameter, field, or return type. The <xref:System.Runtime.InteropServices.MarshalAsAttribute.MarshalTypeRef> field allows easier usage of <xref:System.Runtime.InteropServices.MarshalAsAttribute.MarshalType> by shortening the syntax. In the following example, the first line represents syntax using <xref:System.Runtime.InteropServices.MarshalAsAttribute.MarshalType> and the second line represents syntax using <xref:System.Runtime.InteropServices.MarshalAsAttribute.MarshalTypeRef>.  \n  \n```  \n[MarshalAs(UnmanagedType.CustomMarshaler, MarshalType = \"Assembly, NameSpace.TypeName\")]   \n```  \n  \n```  \n[MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(NameSpace.TypeName)]  \n```  \n  \n You can set a <xref:System.Type> object using `typeof` in C#, `GetType` in Visual Basic, or `typeid` in C++. For additional information about creating and using custom marshalers, see [Custom Marshaling](http://msdn.microsoft.com/en-us/49f9ac47-1619-4d6e-9da6-bf06bba12079).","nodes":[{"pos":[0,711],"content":"You can use either the <xref:System.Runtime.InteropServices.MarshalAsAttribute.MarshalTypeRef> or <xref:System.Runtime.InteropServices.MarshalAsAttribute.MarshalType> field to specify a custom marshaler type for the attributed parameter, field, or return type. The <xref:System.Runtime.InteropServices.MarshalAsAttribute.MarshalTypeRef> field allows easier usage of <xref:System.Runtime.InteropServices.MarshalAsAttribute.MarshalType> by shortening the syntax. In the following example, the first line represents syntax using <xref:System.Runtime.InteropServices.MarshalAsAttribute.MarshalType> and the second line represents syntax using <xref:System.Runtime.InteropServices.MarshalAsAttribute.MarshalTypeRef>.","nodes":[{"content":"You can use either the <xref:System.Runtime.InteropServices.MarshalAsAttribute.MarshalTypeRef> or <xref:System.Runtime.InteropServices.MarshalAsAttribute.MarshalType> field to specify a custom marshaler type for the attributed parameter, field, or return type. The <xref:System.Runtime.InteropServices.MarshalAsAttribute.MarshalTypeRef> field allows easier usage of <xref:System.Runtime.InteropServices.MarshalAsAttribute.MarshalType> by shortening the syntax. In the following example, the first line represents syntax using <xref:System.Runtime.InteropServices.MarshalAsAttribute.MarshalType> and the second line represents syntax using <xref:System.Runtime.InteropServices.MarshalAsAttribute.MarshalTypeRef>.","pos":[0,711],"nodes":[{"content":"You can use either the <ph id=\"ph1\">&lt;xref:System.Runtime.InteropServices.MarshalAsAttribute.MarshalTypeRef&gt;</ph> or <ph id=\"ph2\">&lt;xref:System.Runtime.InteropServices.MarshalAsAttribute.MarshalType&gt;</ph> field to specify a custom marshaler type for the attributed parameter, field, or return type.","pos":[0,260],"source":"You can use either the <xref:System.Runtime.InteropServices.MarshalAsAttribute.MarshalTypeRef> or <xref:System.Runtime.InteropServices.MarshalAsAttribute.MarshalType> field to specify a custom marshaler type for the attributed parameter, field, or return type."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Runtime.InteropServices.MarshalAsAttribute.MarshalTypeRef&gt;</ph> field allows easier usage of <ph id=\"ph2\">&lt;xref:System.Runtime.InteropServices.MarshalAsAttribute.MarshalType&gt;</ph> by shortening the syntax.","pos":[261,460],"source":" The <xref:System.Runtime.InteropServices.MarshalAsAttribute.MarshalTypeRef> field allows easier usage of <xref:System.Runtime.InteropServices.MarshalAsAttribute.MarshalType> by shortening the syntax."},{"content":"In the following example, the first line represents syntax using <ph id=\"ph1\">&lt;xref:System.Runtime.InteropServices.MarshalAsAttribute.MarshalType&gt;</ph> and the second line represents syntax using <ph id=\"ph2\">&lt;xref:System.Runtime.InteropServices.MarshalAsAttribute.MarshalTypeRef&gt;</ph>.","pos":[461,711],"source":" In the following example, the first line represents syntax using <xref:System.Runtime.InteropServices.MarshalAsAttribute.MarshalType> and the second line represents syntax using <xref:System.Runtime.InteropServices.MarshalAsAttribute.MarshalTypeRef>."}]}]},{"pos":[929,1203],"content":"You can set a <xref:System.Type> object using `typeof` in C#, `GetType` in Visual Basic, or `typeid` in C++. For additional information about creating and using custom marshalers, see [Custom Marshaling](http://msdn.microsoft.com/en-us/49f9ac47-1619-4d6e-9da6-bf06bba12079).","nodes":[{"content":"You can set a <ph id=\"ph1\">&lt;xref:System.Type&gt;</ph> object using <ph id=\"ph2\">`typeof`</ph> in C#, <ph id=\"ph3\">`GetType`</ph> in Visual Basic, or <ph id=\"ph4\">`typeid`</ph> in C++.","pos":[0,108],"source":"You can set a <xref:System.Type> object using `typeof` in C#, `GetType` in Visual Basic, or `typeid` in C++."},{"content":"For additional information about creating and using custom marshalers, see <bpt id=\"p1\">[</bpt>Custom Marshaling<ept id=\"p1\">](http://msdn.microsoft.com/en-us/49f9ac47-1619-4d6e-9da6-bf06bba12079)</ept>.","pos":[109,274],"source":" For additional information about creating and using custom marshalers, see [Custom Marshaling](http://msdn.microsoft.com/en-us/49f9ac47-1619-4d6e-9da6-bf06bba12079)."}]}],"pos":[25492,26710],"yaml":true,"extradata":"MT"},{"content":"Indicates the element type of the <xref href=\"System.Runtime.InteropServices.UnmanagedType.SafeArray\"></xref>.","nodes":[{"pos":[0,110],"content":"Indicates the element type of the <ph id=\"ph1\">&lt;xref href=\"System.Runtime.InteropServices.UnmanagedType.SafeArray\"&gt;&lt;/xref&gt;</ph>.","source":"Indicates the element type of the <xref href=\"System.Runtime.InteropServices.UnmanagedType.SafeArray\"></xref>."}],"pos":[28558,28669],"yaml":true},{"content":"You can set this field to a value from the <xref:System.Runtime.InteropServices.VarEnum?displayProperty=fullName> enumeration to specify the type of the safe array's elements. If a type is not specified, the managed element type's default type (if passed as a VARIANT) is used. For example, the `SafeArraySubType` for an `int` array in COM is <xref:System.Runtime.InteropServices.VarEnum.VT_I4>. For additional information, see [Default Marshaling for Arrays](~/docs/framework/interop/default-marshaling-for-arrays.md).","nodes":[{"pos":[0,519],"content":"You can set this field to a value from the <xref:System.Runtime.InteropServices.VarEnum?displayProperty=fullName> enumeration to specify the type of the safe array's elements. If a type is not specified, the managed element type's default type (if passed as a VARIANT) is used. For example, the `SafeArraySubType` for an `int` array in COM is <xref:System.Runtime.InteropServices.VarEnum.VT_I4>. For additional information, see [Default Marshaling for Arrays](~/docs/framework/interop/default-marshaling-for-arrays.md).","nodes":[{"content":"You can set this field to a value from the <ph id=\"ph1\">&lt;xref:System.Runtime.InteropServices.VarEnum?displayProperty=fullName&gt;</ph> enumeration to specify the type of the safe array's elements.","pos":[0,175],"source":"You can set this field to a value from the <xref:System.Runtime.InteropServices.VarEnum?displayProperty=fullName> enumeration to specify the type of the safe array's elements."},{"content":"If a type is not specified, the managed element type's default type (if passed as a VARIANT) is used.","pos":[176,277]},{"content":"For example, the <ph id=\"ph1\">`SafeArraySubType`</ph> for an <ph id=\"ph2\">`int`</ph> array in COM is <ph id=\"ph3\">&lt;xref:System.Runtime.InteropServices.VarEnum.VT_I4&gt;</ph>.","pos":[278,395],"source":" For example, the `SafeArraySubType` for an `int` array in COM is <xref:System.Runtime.InteropServices.VarEnum.VT_I4>."},{"content":"For additional information, see <bpt id=\"p1\">[</bpt>Default Marshaling for Arrays<ept id=\"p1\">](~/docs/framework/interop/default-marshaling-for-arrays.md)</ept>.","pos":[396,519],"source":" For additional information, see [Default Marshaling for Arrays](~/docs/framework/interop/default-marshaling-for-arrays.md)."}]}],"pos":[28680,29200],"yaml":true,"extradata":"MT"},{"content":"Indicates the user-defined element type of the <xref href=\"System.Runtime.InteropServices.UnmanagedType.SafeArray\"></xref>.","nodes":[{"pos":[0,123],"content":"Indicates the user-defined element type of the <ph id=\"ph1\">&lt;xref href=\"System.Runtime.InteropServices.UnmanagedType.SafeArray\"&gt;&lt;/xref&gt;</ph>.","source":"Indicates the user-defined element type of the <xref href=\"System.Runtime.InteropServices.UnmanagedType.SafeArray\"></xref>."}],"pos":[31036,31160],"yaml":true},{"content":"Initialize this field with your custom type to enable the elements of the `SAFEARRAY` to be marshaled successfully. This field is only needed when the <xref:System.Runtime.InteropServices.MarshalAsAttribute.SafeArraySubType?displayProperty=fullName> is either <xref:System.Runtime.InteropServices.VarEnum?displayProperty=fullName>, <xref:System.Runtime.InteropServices.VarEnum?displayProperty=fullName>, or <xref:System.Runtime.InteropServices.VarEnum?displayProperty=fullName>. For additional information, see [Default Marshaling for Arrays](~/docs/framework/interop/default-marshaling-for-arrays.md).","nodes":[{"pos":[0,602],"content":"Initialize this field with your custom type to enable the elements of the `SAFEARRAY` to be marshaled successfully. This field is only needed when the <xref:System.Runtime.InteropServices.MarshalAsAttribute.SafeArraySubType?displayProperty=fullName> is either <xref:System.Runtime.InteropServices.VarEnum?displayProperty=fullName>, <xref:System.Runtime.InteropServices.VarEnum?displayProperty=fullName>, or <xref:System.Runtime.InteropServices.VarEnum?displayProperty=fullName>. For additional information, see [Default Marshaling for Arrays](~/docs/framework/interop/default-marshaling-for-arrays.md).","nodes":[{"content":"Initialize this field with your custom type to enable the elements of the <ph id=\"ph1\">`SAFEARRAY`</ph> to be marshaled successfully.","pos":[0,115],"source":"Initialize this field with your custom type to enable the elements of the `SAFEARRAY` to be marshaled successfully."},{"content":"This field is only needed when the <ph id=\"ph1\">&lt;xref:System.Runtime.InteropServices.MarshalAsAttribute.SafeArraySubType?displayProperty=fullName&gt;</ph> is either <ph id=\"ph2\">&lt;xref:System.Runtime.InteropServices.VarEnum?displayProperty=fullName&gt;</ph>, <ph id=\"ph3\">&lt;xref:System.Runtime.InteropServices.VarEnum?displayProperty=fullName&gt;</ph>, or <ph id=\"ph4\">&lt;xref:System.Runtime.InteropServices.VarEnum?displayProperty=fullName&gt;</ph>.","pos":[116,478],"source":" This field is only needed when the <xref:System.Runtime.InteropServices.MarshalAsAttribute.SafeArraySubType?displayProperty=fullName> is either <xref:System.Runtime.InteropServices.VarEnum?displayProperty=fullName>, <xref:System.Runtime.InteropServices.VarEnum?displayProperty=fullName>, or <xref:System.Runtime.InteropServices.VarEnum?displayProperty=fullName>."},{"content":"For additional information, see <bpt id=\"p1\">[</bpt>Default Marshaling for Arrays<ept id=\"p1\">](~/docs/framework/interop/default-marshaling-for-arrays.md)</ept>.","pos":[479,602],"source":" For additional information, see [Default Marshaling for Arrays](~/docs/framework/interop/default-marshaling-for-arrays.md)."}]}],"pos":[31171,31774],"yaml":true,"extradata":"MT"},{"content":"Indicates the number of elements in the fixed-length array or the number of characters (not bytes) in a string to import.","nodes":[{"pos":[0,121],"content":"Indicates the number of elements in the fixed-length array or the number of characters (not bytes) in a string to import.","nodes":[{"content":"Indicates the number of elements in the fixed-length array or the number of characters (not bytes) in a string to import.","pos":[0,121]}]}],"pos":[33452,33574],"yaml":true},{"content":"This field is required for the <xref:System.Runtime.InteropServices.UnmanagedType.ByValArray> and <xref:System.Runtime.InteropServices.UnmanagedType.ByValTStr> members of the <xref:System.Runtime.InteropServices.UnmanagedType?displayProperty=fullName> enumeration. Because the compressed format of the metadata is limited to 0x1FFFFFFF, the range of allowed values for <xref:System.Runtime.InteropServices.MarshalAsAttribute.SizeConst> are (>= 0 and <= 0x1FFFFFFF).  \n  \n For additional information, see [Default Marshaling for Arrays](~/docs/framework/interop/default-marshaling-for-arrays.md).","nodes":[{"pos":[0,465],"content":"This field is required for the <xref:System.Runtime.InteropServices.UnmanagedType.ByValArray> and <xref:System.Runtime.InteropServices.UnmanagedType.ByValTStr> members of the <xref:System.Runtime.InteropServices.UnmanagedType?displayProperty=fullName> enumeration. Because the compressed format of the metadata is limited to 0x1FFFFFFF, the range of allowed values for <xref:System.Runtime.InteropServices.MarshalAsAttribute.SizeConst> are (>= 0 and <= 0x1FFFFFFF).","nodes":[{"content":"This field is required for the <xref:System.Runtime.InteropServices.UnmanagedType.ByValArray> and <xref:System.Runtime.InteropServices.UnmanagedType.ByValTStr> members of the <xref:System.Runtime.InteropServices.UnmanagedType?displayProperty=fullName> enumeration. Because the compressed format of the metadata is limited to 0x1FFFFFFF, the range of allowed values for <xref:System.Runtime.InteropServices.MarshalAsAttribute.SizeConst> are (>= 0 and <= 0x1FFFFFFF).","pos":[0,465],"nodes":[{"content":"This field is required for the <ph id=\"ph1\">&lt;xref:System.Runtime.InteropServices.UnmanagedType.ByValArray&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Runtime.InteropServices.UnmanagedType.ByValTStr&gt;</ph> members of the <ph id=\"ph3\">&lt;xref:System.Runtime.InteropServices.UnmanagedType?displayProperty=fullName&gt;</ph> enumeration.","pos":[0,264],"source":"This field is required for the <xref:System.Runtime.InteropServices.UnmanagedType.ByValArray> and <xref:System.Runtime.InteropServices.UnmanagedType.ByValTStr> members of the <xref:System.Runtime.InteropServices.UnmanagedType?displayProperty=fullName> enumeration."},{"content":"Because the compressed format of the metadata is limited to 0x1FFFFFFF, the range of allowed values for <ph id=\"ph1\">&lt;xref:System.Runtime.InteropServices.MarshalAsAttribute.SizeConst&gt;</ph> are (&gt;= 0 and &lt;= 0x1FFFFFFF).","pos":[265,465],"source":" Because the compressed format of the metadata is limited to 0x1FFFFFFF, the range of allowed values for <xref:System.Runtime.InteropServices.MarshalAsAttribute.SizeConst> are (>= 0 and <= 0x1FFFFFFF)."}]}]},{"pos":[472,595],"content":"For additional information, see <bpt id=\"p1\">[</bpt>Default Marshaling for Arrays<ept id=\"p1\">](~/docs/framework/interop/default-marshaling-for-arrays.md)</ept>.","source":"For additional information, see [Default Marshaling for Arrays](~/docs/framework/interop/default-marshaling-for-arrays.md)."}],"pos":[33585,34185],"yaml":true,"extradata":"MT"},{"content":"Indicates the zero-based parameter that contains the count of array elements, similar to `size_is` in COM.","nodes":[{"pos":[0,106],"content":"Indicates the zero-based parameter that contains the count of array elements, similar to <ph id=\"ph1\">`size_is`</ph> in COM.","source":"Indicates the zero-based parameter that contains the count of array elements, similar to `size_is` in COM."}],"pos":[35875,35982],"yaml":true},{"content":"The <xref:System.Runtime.InteropServices.MarshalAsAttribute.SizeParamIndex> field supports managed-to-unmanaged and unmanaged-to-managed calls. It does not have any effect on managed code that calls COM objects.  \n  \n Depending on the managed type and the attributes applied to it, the array can be passed as a safe array or C-style array.  \n  \n When arrays are passed as C-style arrays, the marshaler cannot determine the size of the array. Therefore, to pass an managed array to an unmanaged function or method, you must provide two arguments:  \n  \n-   The array, defined by reference or value.  \n  \n-   The array size, defined by reference or value.  \n  \n The zero-based index of the array size parameter is defined by using the <xref:System.Runtime.InteropServices.MarshalAsAttribute.SizeParamIndex> field.  \n  \n If you specify both <xref:System.Runtime.InteropServices.MarshalAsAttribute.SizeParamIndex> and <xref:System.Runtime.InteropServices.MarshalAsAttribute.SizeConst?displayProperty=fullName> with a <xref:System.Runtime.InteropServices.UnmanagedType?displayProperty=fullName> field, the sum of the fields' values produces a size total.  \n  \n For more information, see [Default Marshaling for Arrays](~/docs/framework/interop/default-marshaling-for-arrays.md).","nodes":[{"pos":[0,211],"content":"The <xref:System.Runtime.InteropServices.MarshalAsAttribute.SizeParamIndex> field supports managed-to-unmanaged and unmanaged-to-managed calls. It does not have any effect on managed code that calls COM objects.","nodes":[{"content":"The <xref:System.Runtime.InteropServices.MarshalAsAttribute.SizeParamIndex> field supports managed-to-unmanaged and unmanaged-to-managed calls. It does not have any effect on managed code that calls COM objects.","pos":[0,211],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Runtime.InteropServices.MarshalAsAttribute.SizeParamIndex&gt;</ph> field supports managed-to-unmanaged and unmanaged-to-managed calls.","pos":[0,143],"source":"The <xref:System.Runtime.InteropServices.MarshalAsAttribute.SizeParamIndex> field supports managed-to-unmanaged and unmanaged-to-managed calls."},{"content":"It does not have any effect on managed code that calls COM objects.","pos":[144,211]}]}]},{"pos":[218,339],"content":"Depending on the managed type and the attributes applied to it, the array can be passed as a safe array or C-style array.","nodes":[{"content":"Depending on the managed type and the attributes applied to it, the array can be passed as a safe array or C-style array.","pos":[0,121]}]},{"pos":[346,545],"content":"When arrays are passed as C-style arrays, the marshaler cannot determine the size of the array. Therefore, to pass an managed array to an unmanaged function or method, you must provide two arguments:","nodes":[{"content":"When arrays are passed as C-style arrays, the marshaler cannot determine the size of the array. Therefore, to pass an managed array to an unmanaged function or method, you must provide two arguments:","pos":[0,199],"nodes":[{"content":"When arrays are passed as C-style arrays, the marshaler cannot determine the size of the array.","pos":[0,95]},{"content":"Therefore, to pass an managed array to an unmanaged function or method, you must provide two arguments:","pos":[96,199]}]}]},{"pos":[555,596],"content":"The array, defined by reference or value.","nodes":[{"content":"The array, defined by reference or value.","pos":[0,41]}]},{"pos":[606,652],"content":"The array size, defined by reference or value.","nodes":[{"content":"The array size, defined by reference or value.","pos":[0,46]}]},{"pos":[659,810],"content":"The zero-based index of the array size parameter is defined by using the <xref:System.Runtime.InteropServices.MarshalAsAttribute.SizeParamIndex> field.","nodes":[{"content":"The zero-based index of the array size parameter is defined by using the <ph id=\"ph1\">&lt;xref:System.Runtime.InteropServices.MarshalAsAttribute.SizeParamIndex&gt;</ph> field.","pos":[0,151],"source":"The zero-based index of the array size parameter is defined by using the <xref:System.Runtime.InteropServices.MarshalAsAttribute.SizeParamIndex> field."}]},{"pos":[817,1148],"content":"If you specify both <xref:System.Runtime.InteropServices.MarshalAsAttribute.SizeParamIndex> and <xref:System.Runtime.InteropServices.MarshalAsAttribute.SizeConst?displayProperty=fullName> with a <xref:System.Runtime.InteropServices.UnmanagedType?displayProperty=fullName> field, the sum of the fields' values produces a size total.","nodes":[{"content":"If you specify both <ph id=\"ph1\">&lt;xref:System.Runtime.InteropServices.MarshalAsAttribute.SizeParamIndex&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Runtime.InteropServices.MarshalAsAttribute.SizeConst?displayProperty=fullName&gt;</ph> with a <ph id=\"ph3\">&lt;xref:System.Runtime.InteropServices.UnmanagedType?displayProperty=fullName&gt;</ph> field, the sum of the fields' values produces a size total.","pos":[0,331],"source":"If you specify both <xref:System.Runtime.InteropServices.MarshalAsAttribute.SizeParamIndex> and <xref:System.Runtime.InteropServices.MarshalAsAttribute.SizeConst?displayProperty=fullName> with a <xref:System.Runtime.InteropServices.UnmanagedType?displayProperty=fullName> field, the sum of the fields' values produces a size total."}]},{"pos":[1155,1272],"content":"For more information, see <bpt id=\"p1\">[</bpt>Default Marshaling for Arrays<ept id=\"p1\">](~/docs/framework/interop/default-marshaling-for-arrays.md)</ept>.","source":"For more information, see [Default Marshaling for Arrays](~/docs/framework/interop/default-marshaling-for-arrays.md)."}],"pos":[35993,37282],"yaml":true,"extradata":"MT"},{"content":"Gets the <xref href=\"System.Runtime.InteropServices.UnmanagedType\"></xref> value the data is to be marshaled as.","nodes":[{"pos":[0,112],"content":"Gets the <ph id=\"ph1\">&lt;xref href=\"System.Runtime.InteropServices.UnmanagedType\"&gt;&lt;/xref&gt;</ph> value the data is to be marshaled as.","source":"Gets the <xref href=\"System.Runtime.InteropServices.UnmanagedType\"></xref> value the data is to be marshaled as."}],"pos":[39650,39763],"yaml":true},{"content":"This value is used with <xref:System.Runtime.InteropServices.MarshalAsAttribute> to indicate how types should be marshaled between managed and unmanaged code. In some cases, you can use this field with certain `UnmanagedType` enumeration members. For <xref:System.Runtime.InteropServices.UnmanagedType.CustomMarshaler> and <xref:System.Runtime.InteropServices.UnmanagedType.ByValArray>, you must use additional named parameters.","nodes":[{"pos":[0,428],"content":"This value is used with <xref:System.Runtime.InteropServices.MarshalAsAttribute> to indicate how types should be marshaled between managed and unmanaged code. In some cases, you can use this field with certain `UnmanagedType` enumeration members. For <xref:System.Runtime.InteropServices.UnmanagedType.CustomMarshaler> and <xref:System.Runtime.InteropServices.UnmanagedType.ByValArray>, you must use additional named parameters.","nodes":[{"content":"This value is used with <ph id=\"ph1\">&lt;xref:System.Runtime.InteropServices.MarshalAsAttribute&gt;</ph> to indicate how types should be marshaled between managed and unmanaged code.","pos":[0,158],"source":"This value is used with <xref:System.Runtime.InteropServices.MarshalAsAttribute> to indicate how types should be marshaled between managed and unmanaged code."},{"content":"In some cases, you can use this field with certain <ph id=\"ph1\">`UnmanagedType`</ph> enumeration members.","pos":[159,246],"source":" In some cases, you can use this field with certain `UnmanagedType` enumeration members."},{"content":"For <ph id=\"ph1\">&lt;xref:System.Runtime.InteropServices.UnmanagedType.CustomMarshaler&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Runtime.InteropServices.UnmanagedType.ByValArray&gt;</ph>, you must use additional named parameters.","pos":[247,428],"source":" For <xref:System.Runtime.InteropServices.UnmanagedType.CustomMarshaler> and <xref:System.Runtime.InteropServices.UnmanagedType.ByValArray>, you must use additional named parameters."}]}],"pos":[39774,40203],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.Runtime.InteropServices.UnmanagedType\"></xref> value the data is to be marshaled as.","nodes":[{"pos":[0,107],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Runtime.InteropServices.UnmanagedType\"&gt;&lt;/xref&gt;</ph> value the data is to be marshaled as.","source":"The <xref href=\"System.Runtime.InteropServices.UnmanagedType\"></xref> value the data is to be marshaled as."}],"pos":[40381,40489],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Runtime.InteropServices.MarshalAsAttribute\n  commentId: T:System.Runtime.InteropServices.MarshalAsAttribute\n  id: MarshalAsAttribute\n  children:\n  - System.Runtime.InteropServices.MarshalAsAttribute.#ctor(System.Int16)\n  - System.Runtime.InteropServices.MarshalAsAttribute.#ctor(System.Runtime.InteropServices.UnmanagedType)\n  - System.Runtime.InteropServices.MarshalAsAttribute.ArraySubType\n  - System.Runtime.InteropServices.MarshalAsAttribute.IidParameterIndex\n  - System.Runtime.InteropServices.MarshalAsAttribute.MarshalCookie\n  - System.Runtime.InteropServices.MarshalAsAttribute.MarshalType\n  - System.Runtime.InteropServices.MarshalAsAttribute.MarshalTypeRef\n  - System.Runtime.InteropServices.MarshalAsAttribute.SafeArraySubType\n  - System.Runtime.InteropServices.MarshalAsAttribute.SafeArrayUserDefinedSubType\n  - System.Runtime.InteropServices.MarshalAsAttribute.SizeConst\n  - System.Runtime.InteropServices.MarshalAsAttribute.SizeParamIndex\n  - System.Runtime.InteropServices.MarshalAsAttribute.Value\n  langs:\n  - csharp\n  name: MarshalAsAttribute\n  nameWithType: MarshalAsAttribute\n  fullName: System.Runtime.InteropServices.MarshalAsAttribute\n  type: Class\n  assemblies:\n  - System.Runtime.InteropServices\n  - mscorlib\n  - netstandard\n  namespace: System.Runtime.InteropServices\n  summary: Indicates how to marshal the data between managed and unmanaged code.\n  remarks: \"You can apply this attribute to parameters, fields, or return values.  \\n  \\n This attribute is optional, as each data type has a default marshaling behavior. This attribute is only necessary when a given type can be marshaled to multiple types. For example, you can marshal a string to unmanaged code as either a <xref:System.Runtime.InteropServices.UnmanagedType.LPStr>, a <xref:System.Runtime.InteropServices.UnmanagedType.LPWStr>, a <xref:System.Runtime.InteropServices.UnmanagedType.LPTStr>, or a <xref:System.Runtime.InteropServices.UnmanagedType.BStr>. By default, the common language runtime marshals a string parameter as a <xref:System.Runtime.InteropServices.UnmanagedType.BStr> to COM methods. You can apply the <xref:System.Runtime.InteropServices.MarshalAsAttribute> attribute to an individual field or parameter to cause that particular string to be marshaled as a <xref:System.Runtime.InteropServices.UnmanagedType.LPStr> instead of a <xref:System.Runtime.InteropServices.UnmanagedType.BStr>. The [Tlbexp.exe (Type Library Exporter)](~/docs/framework/tools/tlbexp-exe-type-library-exporter.md) passes your marshaling preferences to the common language runtime.  \\n  \\n Some parameters and return values have different default marshaling behavior when used with COM interop or platform invoke. By default, the runtime marshals a string parameter (and fields in a value type) as a <xref:System.Runtime.InteropServices.UnmanagedType.LPStr> to a platform invoke method or function. For additional information, see [Default Marshaling Behavior](~/docs/framework/interop/default-marshaling-behavior.md).  \\n  \\n In most cases, the attribute simply identifies the format of the unmanaged data using the <xref:System.Runtime.InteropServices.UnmanagedType> enumeration, as shown in the following C# signature:  \\n  \\n [!code-csharp[system.runtime.interopservices.MarshalAsAttribute#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.runtime.interopservices.MarshalAsAttribute/cs/Signature1.cs#2)]\\n [!code-vb[system.runtime.interopservices.MarshalAsAttribute#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.runtime.interopservices.MarshalAsAttribute/vb/Signature1.vb#2)]  \\n  \\n Some <xref:System.Runtime.InteropServices.UnmanagedType> enumeration members require additional information. For example, additional information is needed when the <xref:System.Runtime.InteropServices.UnmanagedType> is <xref:System.Runtime.InteropServices.UnmanagedType.LPArray>. For a complete description of how to use this attribute with arrays, see [Default Marshaling for Arrays](~/docs/framework/interop/default-marshaling-for-arrays.md).  \\n  \\n The [Tlbimp.exe (Type Library Importer)](~/docs/framework/tools/tlbimp-exe-type-library-importer.md) also applies this attribute to parameters, fields, and return values to indicate that the data type in the input type library is not the default type for the corresponding managed data type. Tlbimp.exe always applies the <xref:System.Runtime.InteropServices.MarshalAsAttribute> to <xref:System.String> and <xref:System.Object> types for clarity, regardless of the type specified in the input type library.  \\n  \\n> [!NOTE]\\n>  The <xref:System.Runtime.InteropServices.MarshalAsAttribute> does not support marshaling of generic types.\"\n  example:\n  - \"The following example applies the <xref:System.Runtime.InteropServices.MarshalAsAttribute> to a field, a method parameter, and a method return value in a managed type.  \\n  \\n [!code-csharp[System.Runtime.InteropServices.MarshalAsAttribute#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.runtime.interopservices.MarshalAsAttribute/cs/marshalasattribute.cs#1)]\\n [!code-vb[System.Runtime.InteropServices.MarshalAsAttribute#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.runtime.interopservices.MarshalAsAttribute/vb/marshalasattribute.vb#1)]  \\n  \\n The following example applies the <xref:System.Runtime.InteropServices.MarshalAsAttribute> attribute to a property:  \\n  \\n [!code-csharp[System.Runtime.InteropServices.MarshalAsAttribute#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.runtime.interopservices.MarshalAsAttribute/cs/Signature1.cs#3)]\\n [!code-vb[System.Runtime.InteropServices.MarshalAsAttribute#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.runtime.interopservices.MarshalAsAttribute/vb/Signature1.vb#3)]\"\n  syntax:\n    content: >-\n      [System.AttributeUsage(System.AttributeTargets.Field | System.AttributeTargets.Parameter | System.AttributeTargets.ReturnValue, Inherited=false)]\n\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public sealed class MarshalAsAttribute : Attribute\n  inheritance:\n  - System.Object\n  - System.Attribute\n  implements: []\n  inheritedMembers:\n  - System.Attribute.Equals(System.Object)\n  - System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type)\n  - System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)\n  - System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type)\n  - System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type)\n  - System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo)\n  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)\n  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Module)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo)\n  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type)\n  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  - System.Attribute.GetHashCode\n  - System.Attribute.IsDefaultAttribute\n  - System.Attribute.IsDefined(System.Reflection.Assembly,System.Type)\n  - System.Attribute.IsDefined(System.Reflection.Assembly,System.Type,System.Boolean)\n  - System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type)\n  - System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  - System.Attribute.IsDefined(System.Reflection.Module,System.Type)\n  - System.Attribute.IsDefined(System.Reflection.Module,System.Type,System.Boolean)\n  - System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type)\n  - System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  - System.Attribute.Match(System.Object)\n  - System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)\n  - System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)\n  - System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)\n  - System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)\n  - System.Attribute.TypeId\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  attributes:\n  - type: System.AttributeUsageAttribute\n  - type: System.Runtime.InteropServices.ComVisibleAttribute\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/MarshalAsAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Runtime.InteropServices.MarshalAsAttribute.#ctor(System.Int16)\n  commentId: M:System.Runtime.InteropServices.MarshalAsAttribute.#ctor(System.Int16)\n  id: '#ctor(System.Int16)'\n  parent: System.Runtime.InteropServices.MarshalAsAttribute\n  langs:\n  - csharp\n  name: MarshalAsAttribute(Int16)\n  nameWithType: MarshalAsAttribute.MarshalAsAttribute(Int16)\n  fullName: MarshalAsAttribute.MarshalAsAttribute(Int16)\n  type: Constructor\n  assemblies:\n  - System.Runtime.InteropServices\n  - mscorlib\n  - netstandard\n  namespace: System.Runtime.InteropServices\n  summary: Initializes a new instance of the <xref href=\"System.Runtime.InteropServices.MarshalAsAttribute\"></xref> class with the specified <xref href=\"System.Runtime.InteropServices.UnmanagedType\"></xref> value.\n  remarks: This constructor takes an underlying 16-bit signed integer that represents each <xref:System.Runtime.InteropServices.UnmanagedType> enumeration member. The [Tlbimp.exe (Type Library Importer)](~/docs/framework/tools/tlbimp-exe-type-library-importer.md) uses this constructor.\n  syntax:\n    content: public MarshalAsAttribute (short unmanagedType);\n    parameters:\n    - id: unmanagedType\n      type: System.Int16\n      description: The value the data is to be marshaled as.\n  overload: System.Runtime.InteropServices.MarshalAsAttribute.#ctor*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/MarshalAsAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Runtime.InteropServices.MarshalAsAttribute.#ctor(System.Runtime.InteropServices.UnmanagedType)\n  commentId: M:System.Runtime.InteropServices.MarshalAsAttribute.#ctor(System.Runtime.InteropServices.UnmanagedType)\n  id: '#ctor(System.Runtime.InteropServices.UnmanagedType)'\n  parent: System.Runtime.InteropServices.MarshalAsAttribute\n  langs:\n  - csharp\n  name: MarshalAsAttribute(UnmanagedType)\n  nameWithType: MarshalAsAttribute.MarshalAsAttribute(UnmanagedType)\n  fullName: MarshalAsAttribute.MarshalAsAttribute(UnmanagedType)\n  type: Constructor\n  assemblies:\n  - System.Runtime.InteropServices\n  - mscorlib\n  - netstandard\n  namespace: System.Runtime.InteropServices\n  summary: Initializes a new instance of the <xref href=\"System.Runtime.InteropServices.MarshalAsAttribute\"></xref> class with the specified <xref href=\"System.Runtime.InteropServices.UnmanagedType\"></xref> enumeration member.\n  remarks: For readable code that is less prone to error, always use this constructor.\n  syntax:\n    content: public MarshalAsAttribute (System.Runtime.InteropServices.UnmanagedType unmanagedType);\n    parameters:\n    - id: unmanagedType\n      type: System.Runtime.InteropServices.UnmanagedType\n      description: The value the data is to be marshaled as.\n  overload: System.Runtime.InteropServices.MarshalAsAttribute.#ctor*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/MarshalAsAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Runtime.InteropServices.MarshalAsAttribute.ArraySubType\n  commentId: F:System.Runtime.InteropServices.MarshalAsAttribute.ArraySubType\n  id: ArraySubType\n  parent: System.Runtime.InteropServices.MarshalAsAttribute\n  langs:\n  - csharp\n  name: ArraySubType\n  nameWithType: MarshalAsAttribute.ArraySubType\n  fullName: MarshalAsAttribute.ArraySubType\n  type: Field\n  assemblies:\n  - System.Runtime.InteropServices\n  - mscorlib\n  - netstandard\n  namespace: System.Runtime.InteropServices\n  summary: Specifies the element type of the unmanaged <xref href=\"System.Runtime.InteropServices.UnmanagedType.LPArray\"></xref> or <xref href=\"System.Runtime.InteropServices.UnmanagedType.ByValArray\"></xref>.\n  remarks: You can set this parameter to a value from the <xref:System.Runtime.InteropServices.UnmanagedType?displayProperty=fullName> enumeration to specify the type of the array's elements. If a type is not specified, the default unmanaged type corresponding to the managed array's element type is used. For example, the `ArraySubType` for a `LPWStr` array in COM is <xref:System.Runtime.InteropServices.UnmanagedType?displayProperty=fullName>. For additional information, see [Default Marshaling for Arrays](~/docs/framework/interop/default-marshaling-for-arrays.md).\n  syntax:\n    content: public System.Runtime.InteropServices.UnmanagedType ArraySubType;\n    return:\n      type: System.Runtime.InteropServices.UnmanagedType\n      description: ''\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/MarshalAsAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Runtime.InteropServices.MarshalAsAttribute.IidParameterIndex\n  commentId: F:System.Runtime.InteropServices.MarshalAsAttribute.IidParameterIndex\n  id: IidParameterIndex\n  parent: System.Runtime.InteropServices.MarshalAsAttribute\n  langs:\n  - csharp\n  name: IidParameterIndex\n  nameWithType: MarshalAsAttribute.IidParameterIndex\n  fullName: MarshalAsAttribute.IidParameterIndex\n  type: Field\n  assemblies:\n  - System.Runtime.InteropServices\n  - mscorlib\n  - netstandard\n  namespace: System.Runtime.InteropServices\n  summary: Specifies the parameter index of the unmanaged `iid_is` attribute used by COM.\n  syntax:\n    content: public int IidParameterIndex;\n    return:\n      type: System.Int32\n      description: ''\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/MarshalAsAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Runtime.InteropServices.MarshalAsAttribute.MarshalCookie\n  commentId: F:System.Runtime.InteropServices.MarshalAsAttribute.MarshalCookie\n  id: MarshalCookie\n  parent: System.Runtime.InteropServices.MarshalAsAttribute\n  langs:\n  - csharp\n  name: MarshalCookie\n  nameWithType: MarshalAsAttribute.MarshalCookie\n  fullName: MarshalAsAttribute.MarshalCookie\n  type: Field\n  assemblies:\n  - System.Runtime.InteropServices\n  - mscorlib\n  - netstandard\n  namespace: System.Runtime.InteropServices\n  summary: Provides additional information to a custom marshaler.\n  remarks: \"This field is optional when using a custom marshaler.  \\n  \\n You can set this field to a string that supplies additional information to a custom marshaler. For example, the same marshaler can be used to provide a number of wrappers, where the cookie is used to indicate the specific wrapper.\"\n  syntax:\n    content: public string MarshalCookie;\n    return:\n      type: System.String\n      description: ''\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/MarshalAsAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Runtime.InteropServices.MarshalAsAttribute.MarshalType\n  commentId: F:System.Runtime.InteropServices.MarshalAsAttribute.MarshalType\n  id: MarshalType\n  parent: System.Runtime.InteropServices.MarshalAsAttribute\n  langs:\n  - csharp\n  name: MarshalType\n  nameWithType: MarshalAsAttribute.MarshalType\n  fullName: MarshalAsAttribute.MarshalType\n  type: Field\n  assemblies:\n  - System.Runtime.InteropServices\n  - mscorlib\n  - netstandard\n  namespace: System.Runtime.InteropServices\n  summary: Specifies the fully qualified name of a custom marshaler.\n  remarks: You can use either the <xref:System.Runtime.InteropServices.MarshalAsAttribute.MarshalType> or <xref:System.Runtime.InteropServices.MarshalAsAttribute.MarshalTypeRef?displayProperty=fullName> field specify a custom marshaler type for the attributed parameter, field, or return type. The <xref:System.Runtime.InteropServices.MarshalAsAttribute.MarshalType> field enables you to specify a string representing the fully qualified name of a custom marshaler. It is useful for late-bound references, but is less preferred than <xref:System.Runtime.InteropServices.MarshalAsAttribute.MarshalTypeRef> for specifying a custom marshaler. For additional information about creating and using custom marshalers, see [Custom Marshaling](http://msdn.microsoft.com/en-us/49f9ac47-1619-4d6e-9da6-bf06bba12079).\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public string MarshalType;\n    return:\n      type: System.String\n      description: ''\n  exceptions: []\n  attributes:\n  - type: System.Runtime.InteropServices.ComVisibleAttribute\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/MarshalAsAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Runtime.InteropServices.MarshalAsAttribute.MarshalTypeRef\n  commentId: F:System.Runtime.InteropServices.MarshalAsAttribute.MarshalTypeRef\n  id: MarshalTypeRef\n  parent: System.Runtime.InteropServices.MarshalAsAttribute\n  langs:\n  - csharp\n  name: MarshalTypeRef\n  nameWithType: MarshalAsAttribute.MarshalTypeRef\n  fullName: MarshalAsAttribute.MarshalTypeRef\n  type: Field\n  assemblies:\n  - System.Runtime.InteropServices\n  - mscorlib\n  - netstandard\n  namespace: System.Runtime.InteropServices\n  summary: Implements <xref href=\"System.Runtime.InteropServices.MarshalAsAttribute.MarshalType\"></xref> as a type.\n  remarks: \"You can use either the <xref:System.Runtime.InteropServices.MarshalAsAttribute.MarshalTypeRef> or <xref:System.Runtime.InteropServices.MarshalAsAttribute.MarshalType> field to specify a custom marshaler type for the attributed parameter, field, or return type. The <xref:System.Runtime.InteropServices.MarshalAsAttribute.MarshalTypeRef> field allows easier usage of <xref:System.Runtime.InteropServices.MarshalAsAttribute.MarshalType> by shortening the syntax. In the following example, the first line represents syntax using <xref:System.Runtime.InteropServices.MarshalAsAttribute.MarshalType> and the second line represents syntax using <xref:System.Runtime.InteropServices.MarshalAsAttribute.MarshalTypeRef>.  \\n  \\n```  \\n[MarshalAs(UnmanagedType.CustomMarshaler, MarshalType = \\\"Assembly, NameSpace.TypeName\\\")]   \\n```  \\n  \\n```  \\n[MarshalAs(UnmanagedType.CustomMarshaler, MarshalTypeRef = typeof(NameSpace.TypeName)]  \\n```  \\n  \\n You can set a <xref:System.Type> object using `typeof` in C#, `GetType` in Visual Basic, or `typeid` in C++. For additional information about creating and using custom marshalers, see [Custom Marshaling](http://msdn.microsoft.com/en-us/49f9ac47-1619-4d6e-9da6-bf06bba12079).\"\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public Type MarshalTypeRef;\n    return:\n      type: System.Type\n      description: ''\n  exceptions: []\n  attributes:\n  - type: System.Runtime.InteropServices.ComVisibleAttribute\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/MarshalAsAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Runtime.InteropServices.MarshalAsAttribute.SafeArraySubType\n  commentId: F:System.Runtime.InteropServices.MarshalAsAttribute.SafeArraySubType\n  id: SafeArraySubType\n  parent: System.Runtime.InteropServices.MarshalAsAttribute\n  langs:\n  - csharp\n  name: SafeArraySubType\n  nameWithType: MarshalAsAttribute.SafeArraySubType\n  fullName: MarshalAsAttribute.SafeArraySubType\n  type: Field\n  assemblies:\n  - System.Runtime.InteropServices\n  - mscorlib\n  - netstandard\n  namespace: System.Runtime.InteropServices\n  summary: Indicates the element type of the <xref href=\"System.Runtime.InteropServices.UnmanagedType.SafeArray\"></xref>.\n  remarks: You can set this field to a value from the <xref:System.Runtime.InteropServices.VarEnum?displayProperty=fullName> enumeration to specify the type of the safe array's elements. If a type is not specified, the managed element type's default type (if passed as a VARIANT) is used. For example, the `SafeArraySubType` for an `int` array in COM is <xref:System.Runtime.InteropServices.VarEnum.VT_I4>. For additional information, see [Default Marshaling for Arrays](~/docs/framework/interop/default-marshaling-for-arrays.md).\n  syntax:\n    content: public System.Runtime.InteropServices.VarEnum SafeArraySubType;\n    return:\n      type: System.Runtime.InteropServices.VarEnum\n      description: ''\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/MarshalAsAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Runtime.InteropServices.MarshalAsAttribute.SafeArrayUserDefinedSubType\n  commentId: F:System.Runtime.InteropServices.MarshalAsAttribute.SafeArrayUserDefinedSubType\n  id: SafeArrayUserDefinedSubType\n  parent: System.Runtime.InteropServices.MarshalAsAttribute\n  langs:\n  - csharp\n  name: SafeArrayUserDefinedSubType\n  nameWithType: MarshalAsAttribute.SafeArrayUserDefinedSubType\n  fullName: MarshalAsAttribute.SafeArrayUserDefinedSubType\n  type: Field\n  assemblies:\n  - System.Runtime.InteropServices\n  - mscorlib\n  - netstandard\n  namespace: System.Runtime.InteropServices\n  summary: Indicates the user-defined element type of the <xref href=\"System.Runtime.InteropServices.UnmanagedType.SafeArray\"></xref>.\n  remarks: Initialize this field with your custom type to enable the elements of the `SAFEARRAY` to be marshaled successfully. This field is only needed when the <xref:System.Runtime.InteropServices.MarshalAsAttribute.SafeArraySubType?displayProperty=fullName> is either <xref:System.Runtime.InteropServices.VarEnum?displayProperty=fullName>, <xref:System.Runtime.InteropServices.VarEnum?displayProperty=fullName>, or <xref:System.Runtime.InteropServices.VarEnum?displayProperty=fullName>. For additional information, see [Default Marshaling for Arrays](~/docs/framework/interop/default-marshaling-for-arrays.md).\n  syntax:\n    content: public Type SafeArrayUserDefinedSubType;\n    return:\n      type: System.Type\n      description: ''\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/MarshalAsAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Runtime.InteropServices.MarshalAsAttribute.SizeConst\n  commentId: F:System.Runtime.InteropServices.MarshalAsAttribute.SizeConst\n  id: SizeConst\n  parent: System.Runtime.InteropServices.MarshalAsAttribute\n  langs:\n  - csharp\n  name: SizeConst\n  nameWithType: MarshalAsAttribute.SizeConst\n  fullName: MarshalAsAttribute.SizeConst\n  type: Field\n  assemblies:\n  - System.Runtime.InteropServices\n  - mscorlib\n  - netstandard\n  namespace: System.Runtime.InteropServices\n  summary: Indicates the number of elements in the fixed-length array or the number of characters (not bytes) in a string to import.\n  remarks: \"This field is required for the <xref:System.Runtime.InteropServices.UnmanagedType.ByValArray> and <xref:System.Runtime.InteropServices.UnmanagedType.ByValTStr> members of the <xref:System.Runtime.InteropServices.UnmanagedType?displayProperty=fullName> enumeration. Because the compressed format of the metadata is limited to 0x1FFFFFFF, the range of allowed values for <xref:System.Runtime.InteropServices.MarshalAsAttribute.SizeConst> are (>= 0 and <= 0x1FFFFFFF).  \\n  \\n For additional information, see [Default Marshaling for Arrays](~/docs/framework/interop/default-marshaling-for-arrays.md).\"\n  syntax:\n    content: public int SizeConst;\n    return:\n      type: System.Int32\n      description: ''\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/MarshalAsAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Runtime.InteropServices.MarshalAsAttribute.SizeParamIndex\n  commentId: F:System.Runtime.InteropServices.MarshalAsAttribute.SizeParamIndex\n  id: SizeParamIndex\n  parent: System.Runtime.InteropServices.MarshalAsAttribute\n  langs:\n  - csharp\n  name: SizeParamIndex\n  nameWithType: MarshalAsAttribute.SizeParamIndex\n  fullName: MarshalAsAttribute.SizeParamIndex\n  type: Field\n  assemblies:\n  - System.Runtime.InteropServices\n  - mscorlib\n  - netstandard\n  namespace: System.Runtime.InteropServices\n  summary: Indicates the zero-based parameter that contains the count of array elements, similar to `size_is` in COM.\n  remarks: \"The <xref:System.Runtime.InteropServices.MarshalAsAttribute.SizeParamIndex> field supports managed-to-unmanaged and unmanaged-to-managed calls. It does not have any effect on managed code that calls COM objects.  \\n  \\n Depending on the managed type and the attributes applied to it, the array can be passed as a safe array or C-style array.  \\n  \\n When arrays are passed as C-style arrays, the marshaler cannot determine the size of the array. Therefore, to pass an managed array to an unmanaged function or method, you must provide two arguments:  \\n  \\n-   The array, defined by reference or value.  \\n  \\n-   The array size, defined by reference or value.  \\n  \\n The zero-based index of the array size parameter is defined by using the <xref:System.Runtime.InteropServices.MarshalAsAttribute.SizeParamIndex> field.  \\n  \\n If you specify both <xref:System.Runtime.InteropServices.MarshalAsAttribute.SizeParamIndex> and <xref:System.Runtime.InteropServices.MarshalAsAttribute.SizeConst?displayProperty=fullName> with a <xref:System.Runtime.InteropServices.UnmanagedType?displayProperty=fullName> field, the sum of the fields' values produces a size total.  \\n  \\n For more information, see [Default Marshaling for Arrays](~/docs/framework/interop/default-marshaling-for-arrays.md).\"\n  example:\n  - >-\n    [!code-cpp[System.Runtime.InteropServices.MarshalAsAttribute.SizeParamIndex#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Runtime.InteropServices.MarshalAsAttribute.SizeParamIndex/CPP/marshalas.sizeparamindex.cpp#1)]\n     [!code-csharp[System.Runtime.InteropServices.MarshalAsAttribute.SizeParamIndex#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Runtime.InteropServices.MarshalAsAttribute.SizeParamIndex/CS/marshalas.sizeparamindex.cs#1)]\n     [!code-vb[System.Runtime.InteropServices.MarshalAsAttribute.SizeParamIndex#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Runtime.InteropServices.MarshalAsAttribute.SizeParamIndex/VB/marshalas.sizeparamindex.vb#1)]\n  syntax:\n    content: public short SizeParamIndex;\n    return:\n      type: System.Int16\n      description: ''\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/MarshalAsAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Runtime.InteropServices.MarshalAsAttribute.Value\n  commentId: P:System.Runtime.InteropServices.MarshalAsAttribute.Value\n  id: Value\n  parent: System.Runtime.InteropServices.MarshalAsAttribute\n  langs:\n  - csharp\n  name: Value\n  nameWithType: MarshalAsAttribute.Value\n  fullName: MarshalAsAttribute.Value\n  type: Property\n  assemblies:\n  - System.Runtime.InteropServices\n  - mscorlib\n  - netstandard\n  namespace: System.Runtime.InteropServices\n  summary: Gets the <xref href=\"System.Runtime.InteropServices.UnmanagedType\"></xref> value the data is to be marshaled as.\n  remarks: This value is used with <xref:System.Runtime.InteropServices.MarshalAsAttribute> to indicate how types should be marshaled between managed and unmanaged code. In some cases, you can use this field with certain `UnmanagedType` enumeration members. For <xref:System.Runtime.InteropServices.UnmanagedType.CustomMarshaler> and <xref:System.Runtime.InteropServices.UnmanagedType.ByValArray>, you must use additional named parameters.\n  syntax:\n    content: public System.Runtime.InteropServices.UnmanagedType Value { get; }\n    return:\n      type: System.Runtime.InteropServices.UnmanagedType\n      description: The <xref href=\"System.Runtime.InteropServices.UnmanagedType\"></xref> value the data is to be marshaled as.\n  overload: System.Runtime.InteropServices.MarshalAsAttribute.Value*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/MarshalAsAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\nreferences:\n- uid: System.Attribute\n  parent: System\n  isExternal: false\n  name: Attribute\n  nameWithType: Attribute\n  fullName: System.Attribute\n- uid: System.Runtime.InteropServices.MarshalAsAttribute.#ctor(System.Int16)\n  parent: System.Runtime.InteropServices.MarshalAsAttribute\n  isExternal: false\n  name: MarshalAsAttribute(Int16)\n  nameWithType: MarshalAsAttribute.MarshalAsAttribute(Int16)\n  fullName: MarshalAsAttribute.MarshalAsAttribute(Int16)\n- uid: System.Int16\n  parent: System\n  isExternal: false\n  name: Int16\n  nameWithType: Int16\n  fullName: System.Int16\n- uid: System.Runtime.InteropServices.MarshalAsAttribute.#ctor(System.Runtime.InteropServices.UnmanagedType)\n  parent: System.Runtime.InteropServices.MarshalAsAttribute\n  isExternal: false\n  name: MarshalAsAttribute(UnmanagedType)\n  nameWithType: MarshalAsAttribute.MarshalAsAttribute(UnmanagedType)\n  fullName: MarshalAsAttribute.MarshalAsAttribute(UnmanagedType)\n- uid: System.Runtime.InteropServices.UnmanagedType\n  parent: System.Runtime.InteropServices\n  isExternal: false\n  name: UnmanagedType\n  nameWithType: UnmanagedType\n  fullName: System.Runtime.InteropServices.UnmanagedType\n- uid: System.Runtime.InteropServices.MarshalAsAttribute.ArraySubType\n  parent: System.Runtime.InteropServices.MarshalAsAttribute\n  isExternal: false\n  name: ArraySubType\n  nameWithType: MarshalAsAttribute.ArraySubType\n  fullName: MarshalAsAttribute.ArraySubType\n- uid: System.Runtime.InteropServices.MarshalAsAttribute.IidParameterIndex\n  parent: System.Runtime.InteropServices.MarshalAsAttribute\n  isExternal: false\n  name: IidParameterIndex\n  nameWithType: MarshalAsAttribute.IidParameterIndex\n  fullName: MarshalAsAttribute.IidParameterIndex\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Runtime.InteropServices.MarshalAsAttribute.MarshalCookie\n  parent: System.Runtime.InteropServices.MarshalAsAttribute\n  isExternal: false\n  name: MarshalCookie\n  nameWithType: MarshalAsAttribute.MarshalCookie\n  fullName: MarshalAsAttribute.MarshalCookie\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Runtime.InteropServices.MarshalAsAttribute.MarshalType\n  parent: System.Runtime.InteropServices.MarshalAsAttribute\n  isExternal: false\n  name: MarshalType\n  nameWithType: MarshalAsAttribute.MarshalType\n  fullName: MarshalAsAttribute.MarshalType\n- uid: System.Runtime.InteropServices.MarshalAsAttribute.MarshalTypeRef\n  parent: System.Runtime.InteropServices.MarshalAsAttribute\n  isExternal: false\n  name: MarshalTypeRef\n  nameWithType: MarshalAsAttribute.MarshalTypeRef\n  fullName: MarshalAsAttribute.MarshalTypeRef\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.Runtime.InteropServices.MarshalAsAttribute.SafeArraySubType\n  parent: System.Runtime.InteropServices.MarshalAsAttribute\n  isExternal: false\n  name: SafeArraySubType\n  nameWithType: MarshalAsAttribute.SafeArraySubType\n  fullName: MarshalAsAttribute.SafeArraySubType\n- uid: System.Runtime.InteropServices.VarEnum\n  parent: System.Runtime.InteropServices\n  isExternal: false\n  name: VarEnum\n  nameWithType: VarEnum\n  fullName: System.Runtime.InteropServices.VarEnum\n- uid: System.Runtime.InteropServices.MarshalAsAttribute.SafeArrayUserDefinedSubType\n  parent: System.Runtime.InteropServices.MarshalAsAttribute\n  isExternal: false\n  name: SafeArrayUserDefinedSubType\n  nameWithType: MarshalAsAttribute.SafeArrayUserDefinedSubType\n  fullName: MarshalAsAttribute.SafeArrayUserDefinedSubType\n- uid: System.Runtime.InteropServices.MarshalAsAttribute.SizeConst\n  parent: System.Runtime.InteropServices.MarshalAsAttribute\n  isExternal: false\n  name: SizeConst\n  nameWithType: MarshalAsAttribute.SizeConst\n  fullName: MarshalAsAttribute.SizeConst\n- uid: System.Runtime.InteropServices.MarshalAsAttribute.SizeParamIndex\n  parent: System.Runtime.InteropServices.MarshalAsAttribute\n  isExternal: false\n  name: SizeParamIndex\n  nameWithType: MarshalAsAttribute.SizeParamIndex\n  fullName: MarshalAsAttribute.SizeParamIndex\n- uid: System.Runtime.InteropServices.MarshalAsAttribute.Value\n  parent: System.Runtime.InteropServices.MarshalAsAttribute\n  isExternal: false\n  name: Value\n  nameWithType: MarshalAsAttribute.Value\n  fullName: MarshalAsAttribute.Value\n- uid: System.Runtime.InteropServices.MarshalAsAttribute.#ctor*\n  parent: System.Runtime.InteropServices.MarshalAsAttribute\n  isExternal: false\n  name: MarshalAsAttribute\n  nameWithType: MarshalAsAttribute.MarshalAsAttribute\n  fullName: MarshalAsAttribute.MarshalAsAttribute\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/MarshalAsAttribute.xml\n- uid: System.Runtime.InteropServices.MarshalAsAttribute.Value*\n  parent: System.Runtime.InteropServices.MarshalAsAttribute\n  isExternal: false\n  name: Value\n  nameWithType: MarshalAsAttribute.Value\n  fullName: MarshalAsAttribute.Value\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.5\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/MarshalAsAttribute.xml\n- uid: System.Attribute.Equals(System.Object)\n  parent: System.Attribute\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Attribute.Equals(Object)\n  fullName: Attribute.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Attribute.GetHashCode\n  parent: System.Attribute\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Attribute.GetHashCode()\n  fullName: Attribute.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(ParameterInfo, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttribute(ParameterInfo, Type, Boolean)\n  fullName: Attribute.GetCustomAttribute(ParameterInfo, Type, Boolean)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(MemberInfo, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttribute(MemberInfo, Type, Boolean)\n  fullName: Attribute.GetCustomAttribute(MemberInfo, Type, Boolean)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(Assembly, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttribute(Assembly, Type, Boolean)\n  fullName: Attribute.GetCustomAttribute(Assembly, Type, Boolean)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(Module, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttribute(Module, Type, Boolean)\n  fullName: Attribute.GetCustomAttribute(Module, Type, Boolean)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(Module, Type)\n  nameWithType: Attribute.GetCustomAttribute(Module, Type)\n  fullName: Attribute.GetCustomAttribute(Module, Type)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(MemberInfo, Type)\n  nameWithType: Attribute.GetCustomAttribute(MemberInfo, Type)\n  fullName: Attribute.GetCustomAttribute(MemberInfo, Type)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(Assembly, Type)\n  nameWithType: Attribute.GetCustomAttribute(Assembly, Type)\n  fullName: Attribute.GetCustomAttribute(Assembly, Type)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(ParameterInfo, Type)\n  nameWithType: Attribute.GetCustomAttribute(ParameterInfo, Type)\n  fullName: Attribute.GetCustomAttribute(ParameterInfo, Type)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Module, Type)\n  nameWithType: Attribute.GetCustomAttributes(Module, Type)\n  fullName: Attribute.GetCustomAttributes(Module, Type)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(ParameterInfo, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(ParameterInfo, Type, Boolean)\n  fullName: Attribute.GetCustomAttributes(ParameterInfo, Type, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Module, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(Module, Type, Boolean)\n  fullName: Attribute.GetCustomAttributes(Module, Type, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(MemberInfo, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(MemberInfo, Type, Boolean)\n  fullName: Attribute.GetCustomAttributes(MemberInfo, Type, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Assembly, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(Assembly, Type, Boolean)\n  fullName: Attribute.GetCustomAttributes(Assembly, Type, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(ParameterInfo, Type)\n  nameWithType: Attribute.GetCustomAttributes(ParameterInfo, Type)\n  fullName: Attribute.GetCustomAttributes(ParameterInfo, Type)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Module, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(Module, Boolean)\n  fullName: Attribute.GetCustomAttributes(Module, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(ParameterInfo, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(ParameterInfo, Boolean)\n  fullName: Attribute.GetCustomAttributes(ParameterInfo, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(MemberInfo, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(MemberInfo, Boolean)\n  fullName: Attribute.GetCustomAttributes(MemberInfo, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Assembly, Type)\n  nameWithType: Attribute.GetCustomAttributes(Assembly, Type)\n  fullName: Attribute.GetCustomAttributes(Assembly, Type)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Assembly, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(Assembly, Boolean)\n  fullName: Attribute.GetCustomAttributes(Assembly, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(ParameterInfo)\n  nameWithType: Attribute.GetCustomAttributes(ParameterInfo)\n  fullName: Attribute.GetCustomAttributes(ParameterInfo)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Module)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Module)\n  nameWithType: Attribute.GetCustomAttributes(Module)\n  fullName: Attribute.GetCustomAttributes(Module)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(MemberInfo)\n  nameWithType: Attribute.GetCustomAttributes(MemberInfo)\n  fullName: Attribute.GetCustomAttributes(MemberInfo)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Assembly)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Assembly)\n  nameWithType: Attribute.GetCustomAttributes(Assembly)\n  fullName: Attribute.GetCustomAttributes(Assembly)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(MemberInfo, Type)\n  nameWithType: Attribute.GetCustomAttributes(MemberInfo, Type)\n  fullName: Attribute.GetCustomAttributes(MemberInfo, Type)\n- uid: System.Attribute.IsDefaultAttribute\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefaultAttribute()\n  nameWithType: Attribute.IsDefaultAttribute()\n  fullName: Attribute.IsDefaultAttribute()\n- uid: System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(ParameterInfo, Type, Boolean)\n  nameWithType: Attribute.IsDefined(ParameterInfo, Type, Boolean)\n  fullName: Attribute.IsDefined(ParameterInfo, Type, Boolean)\n- uid: System.Attribute.IsDefined(System.Reflection.Module,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(Module, Type, Boolean)\n  nameWithType: Attribute.IsDefined(Module, Type, Boolean)\n  fullName: Attribute.IsDefined(Module, Type, Boolean)\n- uid: System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(MemberInfo, Type, Boolean)\n  nameWithType: Attribute.IsDefined(MemberInfo, Type, Boolean)\n  fullName: Attribute.IsDefined(MemberInfo, Type, Boolean)\n- uid: System.Attribute.IsDefined(System.Reflection.Assembly,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(Assembly, Type, Boolean)\n  nameWithType: Attribute.IsDefined(Assembly, Type, Boolean)\n  fullName: Attribute.IsDefined(Assembly, Type, Boolean)\n- uid: System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(MemberInfo, Type)\n  nameWithType: Attribute.IsDefined(MemberInfo, Type)\n  fullName: Attribute.IsDefined(MemberInfo, Type)\n- uid: System.Attribute.IsDefined(System.Reflection.Module,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(Module, Type)\n  nameWithType: Attribute.IsDefined(Module, Type)\n  fullName: Attribute.IsDefined(Module, Type)\n- uid: System.Attribute.IsDefined(System.Reflection.Assembly,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(Assembly, Type)\n  nameWithType: Attribute.IsDefined(Assembly, Type)\n  fullName: Attribute.IsDefined(Assembly, Type)\n- uid: System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(ParameterInfo, Type)\n  nameWithType: Attribute.IsDefined(ParameterInfo, Type)\n  fullName: Attribute.IsDefined(ParameterInfo, Type)\n- uid: System.Attribute.Match(System.Object)\n  parent: System.Attribute\n  isExternal: false\n  name: Match(Object)\n  nameWithType: Attribute.Match(Object)\n  fullName: Attribute.Match(Object)\n- uid: System.Attribute.TypeId\n  parent: System.Attribute\n  isExternal: false\n  name: TypeId\n  nameWithType: Attribute.TypeId\n  fullName: Attribute.TypeId\n- uid: System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)\n  parent: System.Attribute\n  isExternal: false\n  name: _Attribute.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)\n  nameWithType: Attribute._Attribute.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)\n  fullName: Attribute._Attribute.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)\n- uid: System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)\n  parent: System.Attribute\n  isExternal: false\n  name: _Attribute.GetTypeInfo(UInt32, UInt32, IntPtr)\n  nameWithType: Attribute._Attribute.GetTypeInfo(UInt32, UInt32, IntPtr)\n  fullName: Attribute._Attribute.GetTypeInfo(UInt32, UInt32, IntPtr)\n- uid: System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)\n  parent: System.Attribute\n  isExternal: false\n  name: _Attribute.GetTypeInfoCount(UInt32)\n  nameWithType: Attribute._Attribute.GetTypeInfoCount(UInt32)\n  fullName: Attribute._Attribute.GetTypeInfoCount(UInt32)\n- uid: System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)\n  parent: System.Attribute\n  isExternal: false\n  name: _Attribute.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)\n  nameWithType: Attribute._Attribute.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)\n  fullName: Attribute._Attribute.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)\n"}