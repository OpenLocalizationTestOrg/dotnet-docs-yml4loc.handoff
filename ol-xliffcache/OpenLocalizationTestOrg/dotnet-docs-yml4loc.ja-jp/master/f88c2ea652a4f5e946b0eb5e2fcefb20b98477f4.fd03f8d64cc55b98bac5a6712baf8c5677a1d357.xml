{"nodes":[{"content":"Converts instances of other types to and from instances of a <xref href=\"System.Double\"></xref> that represent an object's length.","nodes":[{"pos":[0,130],"content":"Converts instances of other types to and from instances of a <ph id=\"ph1\">&lt;xref href=\"System.Double\"&gt;&lt;/xref&gt;</ph> that represent an object's length.","source":"Converts instances of other types to and from instances of a <xref href=\"System.Double\"></xref> that represent an object's length."}],"pos":[911,1042],"yaml":true},{"content":"<xref:System.Windows.LengthConverter> supports conversion to and from the following types: <xref:System.String>, <xref:System.Decimal>, <xref:System.Single>, <xref:System.Double>, <xref:System.Int16>, <xref:System.Int32>, <xref:System.Int64>, <xref:System.UInt16>, <xref:System.UInt32>, and <xref:System.UInt64>.  \n  \n<a name=\"XAMLTextUsage_LengthConverter\"></a>   \n## XAML Text Usage","nodes":[{"pos":[0,312],"content":"<xref:System.Windows.LengthConverter> supports conversion to and from the following types: <xref:System.String>, <xref:System.Decimal>, <xref:System.Single>, <xref:System.Double>, <xref:System.Int16>, <xref:System.Int32>, <xref:System.Int64>, <xref:System.UInt16>, <xref:System.UInt32>, and <xref:System.UInt64>.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Windows.LengthConverter&gt;</ph> supports conversion to and from the following types: <ph id=\"ph2\">&lt;xref:System.String&gt;</ph>, <ph id=\"ph3\">&lt;xref:System.Decimal&gt;</ph>, <ph id=\"ph4\">&lt;xref:System.Single&gt;</ph>, <ph id=\"ph5\">&lt;xref:System.Double&gt;</ph>, <ph id=\"ph6\">&lt;xref:System.Int16&gt;</ph>, <ph id=\"ph7\">&lt;xref:System.Int32&gt;</ph>, <ph id=\"ph8\">&lt;xref:System.Int64&gt;</ph>, <ph id=\"ph9\">&lt;xref:System.UInt16&gt;</ph>, <ph id=\"ph10\">&lt;xref:System.UInt32&gt;</ph>, and <ph id=\"ph11\">&lt;xref:System.UInt64&gt;</ph>.","pos":[0,312],"source":"<xref:System.Windows.LengthConverter> supports conversion to and from the following types: <xref:System.String>, <xref:System.Decimal>, <xref:System.Single>, <xref:System.Double>, <xref:System.Int16>, <xref:System.Int32>, <xref:System.Int64>, <xref:System.UInt16>, <xref:System.UInt32>, and <xref:System.UInt64>."}]},{"pos":[369,384],"content":"XAML Text Usage","linkify":"XAML Text Usage","nodes":[{"content":"XAML Text Usage","pos":[0,15]}]}],"pos":[1053,1445],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.Windows.LengthConverter\"></xref> class.","nodes":[{"pos":[0,92],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Windows.LengthConverter\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.Windows.LengthConverter\"></xref> class."}],"pos":[7462,7555],"yaml":true},{"content":"Determines whether conversion is possible from a specified type to a <xref href=\"System.Double\"></xref> that represents an object's length.","nodes":[{"pos":[0,139],"content":"Determines whether conversion is possible from a specified type to a <ph id=\"ph1\">&lt;xref href=\"System.Double\"&gt;&lt;/xref&gt;</ph> that represents an object's length.","source":"Determines whether conversion is possible from a specified type to a <xref href=\"System.Double\"></xref> that represents an object's length."}],"pos":[8883,9023],"yaml":true},{"content":"<xref:System.Windows.LengthConverter> supports conversion to and from the following types: <xref:System.String>, <xref:System.Decimal>, <xref:System.Single>, <xref:System.Double>, <xref:System.Int16>, <xref:System.Int32>, <xref:System.Int64>, <xref:System.UInt16>, <xref:System.UInt32>, and <xref:System.UInt64>.","nodes":[{"pos":[0,312],"content":"<xref:System.Windows.LengthConverter> supports conversion to and from the following types: <xref:System.String>, <xref:System.Decimal>, <xref:System.Single>, <xref:System.Double>, <xref:System.Int16>, <xref:System.Int32>, <xref:System.Int64>, <xref:System.UInt16>, <xref:System.UInt32>, and <xref:System.UInt64>.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Windows.LengthConverter&gt;</ph> supports conversion to and from the following types: <ph id=\"ph2\">&lt;xref:System.String&gt;</ph>, <ph id=\"ph3\">&lt;xref:System.Decimal&gt;</ph>, <ph id=\"ph4\">&lt;xref:System.Single&gt;</ph>, <ph id=\"ph5\">&lt;xref:System.Double&gt;</ph>, <ph id=\"ph6\">&lt;xref:System.Int16&gt;</ph>, <ph id=\"ph7\">&lt;xref:System.Int32&gt;</ph>, <ph id=\"ph8\">&lt;xref:System.Int64&gt;</ph>, <ph id=\"ph9\">&lt;xref:System.UInt16&gt;</ph>, <ph id=\"ph10\">&lt;xref:System.UInt32&gt;</ph>, and <ph id=\"ph11\">&lt;xref:System.UInt64&gt;</ph>.","pos":[0,312],"source":"<xref:System.Windows.LengthConverter> supports conversion to and from the following types: <xref:System.String>, <xref:System.Decimal>, <xref:System.Single>, <xref:System.Double>, <xref:System.Int16>, <xref:System.Int32>, <xref:System.Int64>, <xref:System.UInt16>, <xref:System.UInt32>, and <xref:System.UInt64>."}]}],"pos":[9034,9349],"yaml":true,"extradata":"MT"},{"content":"Provides contextual information about a component.","nodes":[{"pos":[0,50],"content":"Provides contextual information about a component.","nodes":[{"content":"Provides contextual information about a component.","pos":[0,50]}]}],"pos":[9619,9670],"yaml":true},{"content":"Identifies the data type to evaluate for conversion.","nodes":[{"pos":[0,52],"content":"Identifies the data type to evaluate for conversion.","nodes":[{"content":"Identifies the data type to evaluate for conversion.","pos":[0,52]}]}],"pos":[9734,9787],"yaml":true},{"content":"`true` if conversion is possible; otherwise, `false`.","nodes":[{"pos":[0,53],"content":"<ph id=\"ph1\">`true`</ph> if conversion is possible; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if conversion is possible; otherwise, `false`."}],"pos":[9845,9901],"yaml":true},{"content":"Determines whether conversion is possible to a specified type from a <xref href=\"System.Double\"></xref> that represents an object's length.","nodes":[{"pos":[0,139],"content":"Determines whether conversion is possible to a specified type from a <ph id=\"ph1\">&lt;xref href=\"System.Double\"&gt;&lt;/xref&gt;</ph> that represents an object's length.","source":"Determines whether conversion is possible to a specified type from a <xref href=\"System.Double\"></xref> that represents an object's length."}],"pos":[11157,11297],"yaml":true},{"content":"<xref:System.Windows.LengthConverter> supports conversion of the following types: <xref:System.String>, <xref:System.Decimal>, <xref:System.Single>, <xref:System.Double>, <xref:System.Int16>, <xref:System.Int32>, <xref:System.Int64>, <xref:System.UInt16>, <xref:System.UInt32>, and <xref:System.UInt64>.","nodes":[{"pos":[0,303],"content":"<xref:System.Windows.LengthConverter> supports conversion of the following types: <xref:System.String>, <xref:System.Decimal>, <xref:System.Single>, <xref:System.Double>, <xref:System.Int16>, <xref:System.Int32>, <xref:System.Int64>, <xref:System.UInt16>, <xref:System.UInt32>, and <xref:System.UInt64>.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Windows.LengthConverter&gt;</ph> supports conversion of the following types: <ph id=\"ph2\">&lt;xref:System.String&gt;</ph>, <ph id=\"ph3\">&lt;xref:System.Decimal&gt;</ph>, <ph id=\"ph4\">&lt;xref:System.Single&gt;</ph>, <ph id=\"ph5\">&lt;xref:System.Double&gt;</ph>, <ph id=\"ph6\">&lt;xref:System.Int16&gt;</ph>, <ph id=\"ph7\">&lt;xref:System.Int32&gt;</ph>, <ph id=\"ph8\">&lt;xref:System.Int64&gt;</ph>, <ph id=\"ph9\">&lt;xref:System.UInt16&gt;</ph>, <ph id=\"ph10\">&lt;xref:System.UInt32&gt;</ph>, and <ph id=\"ph11\">&lt;xref:System.UInt64&gt;</ph>.","pos":[0,303],"source":"<xref:System.Windows.LengthConverter> supports conversion of the following types: <xref:System.String>, <xref:System.Decimal>, <xref:System.Single>, <xref:System.Double>, <xref:System.Int16>, <xref:System.Int32>, <xref:System.Int64>, <xref:System.UInt16>, <xref:System.UInt32>, and <xref:System.UInt64>."}]}],"pos":[11308,11614],"yaml":true,"extradata":"MT"},{"content":"Provides contextual information about a component.","nodes":[{"pos":[0,50],"content":"Provides contextual information about a component.","nodes":[{"content":"Provides contextual information about a component.","pos":[0,50]}]}],"pos":[11887,11938],"yaml":true},{"content":"Identifies the data type to evaluate for conversion.","nodes":[{"pos":[0,52],"content":"Identifies the data type to evaluate for conversion.","nodes":[{"content":"Identifies the data type to evaluate for conversion.","pos":[0,52]}]}],"pos":[12007,12060],"yaml":true},{"content":"`true` if conversion to the <code>destinationType</code> is possible; otherwise, `false`.","nodes":[{"pos":[0,89],"content":"<ph id=\"ph1\">`true`</ph> if conversion to the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">destinationType</ph><ept id=\"p1\">&lt;/code&gt;</ept> is possible; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` if conversion to the <code>destinationType</code> is possible; otherwise, `false`."}],"pos":[12118,12210],"yaml":true},{"content":"Converts instances of other data types into instances of <xref href=\"System.Double\"></xref> that represent an object's length.","nodes":[{"pos":[0,126],"content":"Converts instances of other data types into instances of <ph id=\"ph1\">&lt;xref href=\"System.Double\"&gt;&lt;/xref&gt;</ph> that represent an object's length.","source":"Converts instances of other data types into instances of <xref href=\"System.Double\"></xref> that represent an object's length."}],"pos":[13608,13735],"yaml":true},{"content":"<xref:System.Windows.LengthConverter> supports conversion of the following types: <xref:System.String>, <xref:System.Decimal>, <xref:System.Single>, <xref:System.Double>, <xref:System.Int16>, <xref:System.Int32>, <xref:System.Int64>, <xref:System.UInt16>, <xref:System.UInt32>, <xref:System.UInt64>.","nodes":[{"pos":[0,299],"content":"<xref:System.Windows.LengthConverter> supports conversion of the following types: <xref:System.String>, <xref:System.Decimal>, <xref:System.Single>, <xref:System.Double>, <xref:System.Int16>, <xref:System.Int32>, <xref:System.Int64>, <xref:System.UInt16>, <xref:System.UInt32>, <xref:System.UInt64>.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Windows.LengthConverter&gt;</ph> supports conversion of the following types: <ph id=\"ph2\">&lt;xref:System.String&gt;</ph>, <ph id=\"ph3\">&lt;xref:System.Decimal&gt;</ph>, <ph id=\"ph4\">&lt;xref:System.Single&gt;</ph>, <ph id=\"ph5\">&lt;xref:System.Double&gt;</ph>, <ph id=\"ph6\">&lt;xref:System.Int16&gt;</ph>, <ph id=\"ph7\">&lt;xref:System.Int32&gt;</ph>, <ph id=\"ph8\">&lt;xref:System.Int64&gt;</ph>, <ph id=\"ph9\">&lt;xref:System.UInt16&gt;</ph>, <ph id=\"ph10\">&lt;xref:System.UInt32&gt;</ph>, <ph id=\"ph11\">&lt;xref:System.UInt64&gt;</ph>.","pos":[0,299],"source":"<xref:System.Windows.LengthConverter> supports conversion of the following types: <xref:System.String>, <xref:System.Decimal>, <xref:System.Single>, <xref:System.Double>, <xref:System.Int16>, <xref:System.Int32>, <xref:System.Int64>, <xref:System.UInt16>, <xref:System.UInt32>, <xref:System.UInt64>."}]}],"pos":[13746,14048],"yaml":true,"extradata":"MT"},{"content":"Provides contextual information about a component.","nodes":[{"pos":[0,50],"content":"Provides contextual information about a component.","nodes":[{"content":"Provides contextual information about a component.","pos":[0,50]}]}],"pos":[14361,14412],"yaml":true},{"content":"Represents culture-specific information that is maintained during a conversion.","nodes":[{"pos":[0,79],"content":"Represents culture-specific information that is maintained during a conversion.","nodes":[{"content":"Represents culture-specific information that is maintained during a conversion.","pos":[0,79]}]}],"pos":[14498,14578],"yaml":true},{"content":"Identifies the object that is being converted to <xref href=\"System.Double\"></xref>.","nodes":[{"pos":[0,84],"content":"Identifies the object that is being converted to <ph id=\"ph1\">&lt;xref href=\"System.Double\"&gt;&lt;/xref&gt;</ph>.","source":"Identifies the object that is being converted to <xref href=\"System.Double\"></xref>."}],"pos":[14640,14725],"yaml":true},{"content":"An instance of <xref href=\"System.Double\"></xref> that is the value of the conversion.","nodes":[{"pos":[0,86],"content":"An instance of <ph id=\"ph1\">&lt;xref href=\"System.Double\"&gt;&lt;/xref&gt;</ph> that is the value of the conversion.","source":"An instance of <xref href=\"System.Double\"></xref> that is the value of the conversion."}],"pos":[14782,14869],"yaml":true},{"content":"Occurs if the <code>source</code> is `null`.","nodes":[{"pos":[0,44],"content":"Occurs if the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">source</ph><ept id=\"p1\">&lt;/code&gt;</ept> is <ph id=\"ph2\">`null`</ph>.","source":"Occurs if the <code>source</code> is `null`."}],"pos":[15041,15086],"yaml":true},{"content":"Occurs if the <code>source</code> is not `null` and is not a valid type for conversion.","nodes":[{"pos":[0,87],"content":"Occurs if the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">source</ph><ept id=\"p1\">&lt;/code&gt;</ept> is not <ph id=\"ph2\">`null`</ph> and is not a valid type for conversion.","source":"Occurs if the <code>source</code> is not `null` and is not a valid type for conversion."}],"pos":[15180,15268],"yaml":true},{"content":"Converts other types into instances of <xref href=\"System.Double\"></xref> that represent an object's length.","nodes":[{"pos":[0,108],"content":"Converts other types into instances of <ph id=\"ph1\">&lt;xref href=\"System.Double\"&gt;&lt;/xref&gt;</ph> that represent an object's length.","source":"Converts other types into instances of <xref href=\"System.Double\"></xref> that represent an object's length."}],"pos":[16612,16721],"yaml":true},{"content":"Describes context information of a component, such as its container and <xref href=\"System.ComponentModel.PropertyDescriptor\"></xref>.","nodes":[{"pos":[0,134],"content":"Describes context information of a component, such as its container and <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.PropertyDescriptor\"&gt;&lt;/xref&gt;</ph>.","source":"Describes context information of a component, such as its container and <xref href=\"System.ComponentModel.PropertyDescriptor\"></xref>."}],"pos":[17104,17239],"yaml":true},{"content":"Identifies culture-specific information, including the writing system and the calendar that is used.","nodes":[{"pos":[0,100],"content":"Identifies culture-specific information, including the writing system and the calendar that is used.","nodes":[{"content":"Identifies culture-specific information, including the writing system and the calendar that is used.","pos":[0,100]}]}],"pos":[17325,17426],"yaml":true},{"content":"Identifies the <xref href=\"System.Object\"></xref> that is being converted.","nodes":[{"pos":[0,74],"content":"Identifies the <ph id=\"ph1\">&lt;xref href=\"System.Object\"&gt;&lt;/xref&gt;</ph> that is being converted.","source":"Identifies the <xref href=\"System.Object\"></xref> that is being converted."}],"pos":[17487,17562],"yaml":true},{"content":"The data type that this instance of <xref href=\"System.Double\"></xref> is being converted to.","nodes":[{"pos":[0,93],"content":"The data type that this instance of <ph id=\"ph1\">&lt;xref href=\"System.Double\"&gt;&lt;/xref&gt;</ph> is being converted to.","source":"The data type that this instance of <xref href=\"System.Double\"></xref> is being converted to."}],"pos":[17631,17725],"yaml":true},{"content":"A new <xref href=\"System.Object\"></xref> that is the value of the conversion.","nodes":[{"pos":[0,77],"content":"A new <ph id=\"ph1\">&lt;xref href=\"System.Object\"&gt;&lt;/xref&gt;</ph> that is the value of the conversion.","source":"A new <xref href=\"System.Object\"></xref> that is the value of the conversion."}],"pos":[17782,17860],"yaml":true},{"content":"Occurs if the <code>value</code> is `null`.","nodes":[{"pos":[0,43],"content":"Occurs if the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">value</ph><ept id=\"p1\">&lt;/code&gt;</ept> is <ph id=\"ph2\">`null`</ph>.","source":"Occurs if the <code>value</code> is `null`."}],"pos":[18030,18074],"yaml":true},{"content":"Occurs if the <code>value</code> is not `null` and is not a <xref href=\"System.Windows.Media.Brush\"></xref>, or the <code>destinationType</code> is not valid.","nodes":[{"pos":[0,158],"content":"Occurs if the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">value</ph><ept id=\"p1\">&lt;/code&gt;</ept> is not <ph id=\"ph2\">`null`</ph> and is not a <ph id=\"ph3\">&lt;xref href=\"System.Windows.Media.Brush\"&gt;&lt;/xref&gt;</ph>, or the <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph4\">destinationType</ph><ept id=\"p2\">&lt;/code&gt;</ept> is not valid.","source":"Occurs if the <code>value</code> is not `null` and is not a <xref href=\"System.Windows.Media.Brush\"></xref>, or the <code>destinationType</code> is not valid."}],"pos":[18168,18327],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Windows.LengthConverter\n  commentId: T:System.Windows.LengthConverter\n  id: LengthConverter\n  children:\n  - System.Windows.LengthConverter.#ctor\n  - System.Windows.LengthConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  - System.Windows.LengthConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  - System.Windows.LengthConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)\n  - System.Windows.LengthConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)\n  langs:\n  - csharp\n  name: LengthConverter\n  nameWithType: LengthConverter\n  fullName: System.Windows.LengthConverter\n  type: Class\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows\n  summary: Converts instances of other types to and from instances of a <xref href=\"System.Double\"></xref> that represent an object's length.\n  remarks: \"<xref:System.Windows.LengthConverter> supports conversion to and from the following types: <xref:System.String>, <xref:System.Decimal>, <xref:System.Single>, <xref:System.Double>, <xref:System.Int16>, <xref:System.Int32>, <xref:System.Int64>, <xref:System.UInt16>, <xref:System.UInt32>, and <xref:System.UInt64>.  \\n  \\n<a name=\\\"XAMLTextUsage_LengthConverter\\\"></a>   \\n## XAML Text Usage\"\n  example:\n  - \"The following example shows how to create and use an instance of the <xref:System.Windows.LengthConverter> object. A custom method called `ChangeLeft` is defined, which converts the content of a <xref:System.Windows.Controls.ListBoxItem> (defined in a separate [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] file) to an instance of <xref:System.Double>, and later into a <xref:System.String>. This method passes the <xref:System.Windows.Controls.ListBoxItem> to a <xref:System.Windows.LengthConverter> object, which converts the <xref:System.Windows.Controls.ListBoxItem> <xref:System.Windows.Controls.ContentControl.Content%2A> to an instance of <xref:System.Double>. Notice that this value has already been converted to a <xref:System.String> by using the <xref:System.Windows.Controls.Control.ToString%2A> method. This value is then passed back to the <xref:System.Windows.Controls.Canvas.SetLeft%2A> method and the <xref:System.Windows.Controls.Canvas.GetLeft%2A> method of the <xref:System.Windows.Controls.Canvas> in order to change the position of the `text1` object.  \\n  \\n [!code-csharp[CanvasPositioningProperties#2](~/samples/snippets/csharp/VS_Snippets_Wpf/CanvasPositioningProperties/CSharp/Window1.xaml.cs#2)]\\n [!code-vb[CanvasPositioningProperties#2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/CanvasPositioningProperties/VisualBasic/Window1.xaml.vb#2)]\"\n  syntax:\n    content: 'public class LengthConverter : System.ComponentModel.TypeConverter'\n  inheritance:\n  - System.Object\n  - System.ComponentModel.TypeConverter\n  implements: []\n  inheritedMembers:\n  - System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)\n  - System.ComponentModel.TypeConverter.CanConvertTo(System.Type)\n  - System.ComponentModel.TypeConverter.ConvertFrom(System.Object)\n  - System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.ComponentModel.ITypeDescriptorContext,System.String)\n  - System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.String)\n  - System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.String)\n  - System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.String)\n  - System.ComponentModel.TypeConverter.ConvertFromString(System.String)\n  - System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)\n  - System.ComponentModel.TypeConverter.ConvertToInvariantString(System.ComponentModel.ITypeDescriptorContext,System.Object)\n  - System.ComponentModel.TypeConverter.ConvertToInvariantString(System.Object)\n  - System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)\n  - System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Object)\n  - System.ComponentModel.TypeConverter.ConvertToString(System.Object)\n  - System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)\n  - System.ComponentModel.TypeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)\n  - System.ComponentModel.TypeConverter.GetConvertFromException(System.Object)\n  - System.ComponentModel.TypeConverter.GetConvertToException(System.Object,System.Type)\n  - System.ComponentModel.TypeConverter.GetCreateInstanceSupported\n  - System.ComponentModel.TypeConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)\n  - System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object)\n  - System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])\n  - System.ComponentModel.TypeConverter.GetProperties(System.Object)\n  - System.ComponentModel.TypeConverter.GetPropertiesSupported\n  - System.ComponentModel.TypeConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)\n  - System.ComponentModel.TypeConverter.GetStandardValues\n  - System.ComponentModel.TypeConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)\n  - System.ComponentModel.TypeConverter.GetStandardValuesExclusive\n  - System.ComponentModel.TypeConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)\n  - System.ComponentModel.TypeConverter.GetStandardValuesSupported\n  - System.ComponentModel.TypeConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)\n  - System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)\n  - System.ComponentModel.TypeConverter.IsValid(System.Object)\n  - System.ComponentModel.TypeConverter.SortProperties(System.ComponentModel.PropertyDescriptorCollection,System.String[])\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/LengthConverter.xml\n  ms.technology:\n  - dotnet-wpf\n  ms.author: kempb\n  manager: ghogen\n- uid: System.Windows.LengthConverter.#ctor\n  commentId: M:System.Windows.LengthConverter.#ctor\n  id: '#ctor'\n  parent: System.Windows.LengthConverter\n  langs:\n  - csharp\n  name: LengthConverter()\n  nameWithType: LengthConverter.LengthConverter()\n  fullName: LengthConverter.LengthConverter()\n  type: Constructor\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows\n  summary: Initializes a new instance of the <xref href=\"System.Windows.LengthConverter\"></xref> class.\n  syntax:\n    content: public LengthConverter ();\n    parameters: []\n  overload: System.Windows.LengthConverter.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/LengthConverter.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.LengthConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  commentId: M:System.Windows.LengthConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  id: CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  parent: System.Windows.LengthConverter\n  langs:\n  - csharp\n  name: CanConvertFrom(ITypeDescriptorContext, Type)\n  nameWithType: LengthConverter.CanConvertFrom(ITypeDescriptorContext, Type)\n  fullName: LengthConverter.CanConvertFrom(ITypeDescriptorContext, Type)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows\n  summary: Determines whether conversion is possible from a specified type to a <xref href=\"System.Double\"></xref> that represents an object's length.\n  remarks: '<xref:System.Windows.LengthConverter> supports conversion to and from the following types: <xref:System.String>, <xref:System.Decimal>, <xref:System.Single>, <xref:System.Double>, <xref:System.Int16>, <xref:System.Int32>, <xref:System.Int64>, <xref:System.UInt16>, <xref:System.UInt32>, and <xref:System.UInt64>.'\n  syntax:\n    content: public override bool CanConvertFrom (System.ComponentModel.ITypeDescriptorContext typeDescriptorContext, Type sourceType);\n    parameters:\n    - id: typeDescriptorContext\n      type: System.ComponentModel.ITypeDescriptorContext\n      description: Provides contextual information about a component.\n    - id: sourceType\n      type: System.Type\n      description: Identifies the data type to evaluate for conversion.\n    return:\n      type: System.Boolean\n      description: '`true` if conversion is possible; otherwise, `false`.'\n  overload: System.Windows.LengthConverter.CanConvertFrom*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/LengthConverter.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.LengthConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  commentId: M:System.Windows.LengthConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  id: CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  parent: System.Windows.LengthConverter\n  langs:\n  - csharp\n  name: CanConvertTo(ITypeDescriptorContext, Type)\n  nameWithType: LengthConverter.CanConvertTo(ITypeDescriptorContext, Type)\n  fullName: LengthConverter.CanConvertTo(ITypeDescriptorContext, Type)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows\n  summary: Determines whether conversion is possible to a specified type from a <xref href=\"System.Double\"></xref> that represents an object's length.\n  remarks: '<xref:System.Windows.LengthConverter> supports conversion of the following types: <xref:System.String>, <xref:System.Decimal>, <xref:System.Single>, <xref:System.Double>, <xref:System.Int16>, <xref:System.Int32>, <xref:System.Int64>, <xref:System.UInt16>, <xref:System.UInt32>, and <xref:System.UInt64>.'\n  syntax:\n    content: public override bool CanConvertTo (System.ComponentModel.ITypeDescriptorContext typeDescriptorContext, Type destinationType);\n    parameters:\n    - id: typeDescriptorContext\n      type: System.ComponentModel.ITypeDescriptorContext\n      description: Provides contextual information about a component.\n    - id: destinationType\n      type: System.Type\n      description: Identifies the data type to evaluate for conversion.\n    return:\n      type: System.Boolean\n      description: '`true` if conversion to the <code>destinationType</code> is possible; otherwise, `false`.'\n  overload: System.Windows.LengthConverter.CanConvertTo*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/LengthConverter.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.LengthConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)\n  commentId: M:System.Windows.LengthConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)\n  id: ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)\n  parent: System.Windows.LengthConverter\n  langs:\n  - csharp\n  name: ConvertFrom(ITypeDescriptorContext, CultureInfo, Object)\n  nameWithType: LengthConverter.ConvertFrom(ITypeDescriptorContext, CultureInfo, Object)\n  fullName: LengthConverter.ConvertFrom(ITypeDescriptorContext, CultureInfo, Object)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows\n  summary: Converts instances of other data types into instances of <xref href=\"System.Double\"></xref> that represent an object's length.\n  remarks: '<xref:System.Windows.LengthConverter> supports conversion of the following types: <xref:System.String>, <xref:System.Decimal>, <xref:System.Single>, <xref:System.Double>, <xref:System.Int16>, <xref:System.Int32>, <xref:System.Int64>, <xref:System.UInt16>, <xref:System.UInt32>, <xref:System.UInt64>.'\n  syntax:\n    content: public override object ConvertFrom (System.ComponentModel.ITypeDescriptorContext typeDescriptorContext, System.Globalization.CultureInfo cultureInfo, object source);\n    parameters:\n    - id: typeDescriptorContext\n      type: System.ComponentModel.ITypeDescriptorContext\n      description: Provides contextual information about a component.\n    - id: cultureInfo\n      type: System.Globalization.CultureInfo\n      description: Represents culture-specific information that is maintained during a conversion.\n    - id: source\n      type: System.Object\n      description: Identifies the object that is being converted to <xref href=\"System.Double\"></xref>.\n    return:\n      type: System.Object\n      description: An instance of <xref href=\"System.Double\"></xref> that is the value of the conversion.\n  overload: System.Windows.LengthConverter.ConvertFrom*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: Occurs if the <code>source</code> is `null`.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: Occurs if the <code>source</code> is not `null` and is not a valid type for conversion.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/LengthConverter.xml\n  ms.technology:\n  - dotnet-wpf\n  ms.author: kempb\n  manager: ghogen\n- uid: System.Windows.LengthConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)\n  commentId: M:System.Windows.LengthConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)\n  id: ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)\n  parent: System.Windows.LengthConverter\n  langs:\n  - csharp\n  name: ConvertTo(ITypeDescriptorContext, CultureInfo, Object, Type)\n  nameWithType: LengthConverter.ConvertTo(ITypeDescriptorContext, CultureInfo, Object, Type)\n  fullName: LengthConverter.ConvertTo(ITypeDescriptorContext, CultureInfo, Object, Type)\n  type: Method\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows\n  summary: Converts other types into instances of <xref href=\"System.Double\"></xref> that represent an object's length.\n  syntax:\n    content: >-\n      [System.Security.SecurityCritical]\n\n      public override object ConvertTo (System.ComponentModel.ITypeDescriptorContext typeDescriptorContext, System.Globalization.CultureInfo cultureInfo, object value, Type destinationType);\n    parameters:\n    - id: typeDescriptorContext\n      type: System.ComponentModel.ITypeDescriptorContext\n      description: Describes context information of a component, such as its container and <xref href=\"System.ComponentModel.PropertyDescriptor\"></xref>.\n    - id: cultureInfo\n      type: System.Globalization.CultureInfo\n      description: Identifies culture-specific information, including the writing system and the calendar that is used.\n    - id: value\n      type: System.Object\n      description: Identifies the <xref href=\"System.Object\"></xref> that is being converted.\n    - id: destinationType\n      type: System.Type\n      description: The data type that this instance of <xref href=\"System.Double\"></xref> is being converted to.\n    return:\n      type: System.Object\n      description: A new <xref href=\"System.Object\"></xref> that is the value of the conversion.\n  overload: System.Windows.LengthConverter.ConvertTo*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: Occurs if the <code>value</code> is `null`.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: Occurs if the <code>value</code> is not `null` and is not a <xref href=\"System.Windows.Media.Brush\"></xref>, or the <code>destinationType</code> is not valid.\n  attributes:\n  - type: System.Security.SecurityCriticalAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/LengthConverter.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\nreferences:\n- uid: System.ComponentModel.TypeConverter\n  parent: System.ComponentModel\n  isExternal: false\n  name: TypeConverter\n  nameWithType: TypeConverter\n  fullName: System.ComponentModel.TypeConverter\n- uid: System.ArgumentNullException\n  parent: System\n  isExternal: false\n  name: ArgumentNullException\n  nameWithType: ArgumentNullException\n  fullName: System.ArgumentNullException\n- uid: System.ArgumentException\n  parent: System\n  isExternal: false\n  name: ArgumentException\n  nameWithType: ArgumentException\n  fullName: System.ArgumentException\n- uid: System.Windows.LengthConverter.#ctor\n  parent: System.Windows.LengthConverter\n  isExternal: false\n  name: LengthConverter()\n  nameWithType: LengthConverter.LengthConverter()\n  fullName: LengthConverter.LengthConverter()\n- uid: System.Windows.LengthConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  parent: System.Windows.LengthConverter\n  isExternal: false\n  name: CanConvertFrom(ITypeDescriptorContext, Type)\n  nameWithType: LengthConverter.CanConvertFrom(ITypeDescriptorContext, Type)\n  fullName: LengthConverter.CanConvertFrom(ITypeDescriptorContext, Type)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.ComponentModel.ITypeDescriptorContext\n  parent: System.ComponentModel\n  isExternal: false\n  name: ITypeDescriptorContext\n  nameWithType: ITypeDescriptorContext\n  fullName: System.ComponentModel.ITypeDescriptorContext\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.Windows.LengthConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)\n  parent: System.Windows.LengthConverter\n  isExternal: false\n  name: CanConvertTo(ITypeDescriptorContext, Type)\n  nameWithType: LengthConverter.CanConvertTo(ITypeDescriptorContext, Type)\n  fullName: LengthConverter.CanConvertTo(ITypeDescriptorContext, Type)\n- uid: System.Windows.LengthConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)\n  parent: System.Windows.LengthConverter\n  isExternal: false\n  name: ConvertFrom(ITypeDescriptorContext, CultureInfo, Object)\n  nameWithType: LengthConverter.ConvertFrom(ITypeDescriptorContext, CultureInfo, Object)\n  fullName: LengthConverter.ConvertFrom(ITypeDescriptorContext, CultureInfo, Object)\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Globalization.CultureInfo\n  parent: System.Globalization\n  isExternal: false\n  name: CultureInfo\n  nameWithType: CultureInfo\n  fullName: System.Globalization.CultureInfo\n- uid: System.Windows.LengthConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)\n  parent: System.Windows.LengthConverter\n  isExternal: false\n  name: ConvertTo(ITypeDescriptorContext, CultureInfo, Object, Type)\n  nameWithType: LengthConverter.ConvertTo(ITypeDescriptorContext, CultureInfo, Object, Type)\n  fullName: LengthConverter.ConvertTo(ITypeDescriptorContext, CultureInfo, Object, Type)\n- uid: System.Windows.LengthConverter.#ctor*\n  parent: System.Windows.LengthConverter\n  isExternal: false\n  name: LengthConverter\n  nameWithType: LengthConverter.LengthConverter\n  fullName: LengthConverter.LengthConverter\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/LengthConverter.xml\n- uid: System.Windows.LengthConverter.CanConvertFrom*\n  parent: System.Windows.LengthConverter\n  isExternal: false\n  name: CanConvertFrom\n  nameWithType: LengthConverter.CanConvertFrom\n  fullName: LengthConverter.CanConvertFrom\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/LengthConverter.xml\n- uid: System.Windows.LengthConverter.CanConvertTo*\n  parent: System.Windows.LengthConverter\n  isExternal: false\n  name: CanConvertTo\n  nameWithType: LengthConverter.CanConvertTo\n  fullName: LengthConverter.CanConvertTo\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/LengthConverter.xml\n- uid: System.Windows.LengthConverter.ConvertFrom*\n  parent: System.Windows.LengthConverter\n  isExternal: false\n  name: ConvertFrom\n  nameWithType: LengthConverter.ConvertFrom\n  fullName: LengthConverter.ConvertFrom\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/LengthConverter.xml\n- uid: System.Windows.LengthConverter.ConvertTo*\n  parent: System.Windows.LengthConverter\n  isExternal: false\n  name: ConvertTo\n  nameWithType: LengthConverter.ConvertTo\n  fullName: LengthConverter.ConvertTo\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/LengthConverter.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: CanConvertFrom(Type)\n  nameWithType: TypeConverter.CanConvertFrom(Type)\n  fullName: TypeConverter.CanConvertFrom(Type)\n- uid: System.ComponentModel.TypeConverter.CanConvertTo(System.Type)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: CanConvertTo(Type)\n  nameWithType: TypeConverter.CanConvertTo(Type)\n  fullName: TypeConverter.CanConvertTo(Type)\n- uid: System.ComponentModel.TypeConverter.ConvertFrom(System.Object)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: ConvertFrom(Object)\n  nameWithType: TypeConverter.ConvertFrom(Object)\n  fullName: TypeConverter.ConvertFrom(Object)\n- uid: System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.String)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: ConvertFromInvariantString(String)\n  nameWithType: TypeConverter.ConvertFromInvariantString(String)\n  fullName: TypeConverter.ConvertFromInvariantString(String)\n- uid: System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.ComponentModel.ITypeDescriptorContext,System.String)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: ConvertFromInvariantString(ITypeDescriptorContext, String)\n  nameWithType: TypeConverter.ConvertFromInvariantString(ITypeDescriptorContext, String)\n  fullName: TypeConverter.ConvertFromInvariantString(ITypeDescriptorContext, String)\n- uid: System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.String)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: ConvertFromString(ITypeDescriptorContext, CultureInfo, String)\n  nameWithType: TypeConverter.ConvertFromString(ITypeDescriptorContext, CultureInfo, String)\n  fullName: TypeConverter.ConvertFromString(ITypeDescriptorContext, CultureInfo, String)\n- uid: System.ComponentModel.TypeConverter.ConvertFromString(System.String)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: ConvertFromString(String)\n  nameWithType: TypeConverter.ConvertFromString(String)\n  fullName: TypeConverter.ConvertFromString(String)\n- uid: System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.String)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: ConvertFromString(ITypeDescriptorContext, String)\n  nameWithType: TypeConverter.ConvertFromString(ITypeDescriptorContext, String)\n  fullName: TypeConverter.ConvertFromString(ITypeDescriptorContext, String)\n- uid: System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: ConvertTo(Object, Type)\n  nameWithType: TypeConverter.ConvertTo(Object, Type)\n  fullName: TypeConverter.ConvertTo(Object, Type)\n- uid: System.ComponentModel.TypeConverter.ConvertToInvariantString(System.Object)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: ConvertToInvariantString(Object)\n  nameWithType: TypeConverter.ConvertToInvariantString(Object)\n  fullName: TypeConverter.ConvertToInvariantString(Object)\n- uid: System.ComponentModel.TypeConverter.ConvertToInvariantString(System.ComponentModel.ITypeDescriptorContext,System.Object)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: ConvertToInvariantString(ITypeDescriptorContext, Object)\n  nameWithType: TypeConverter.ConvertToInvariantString(ITypeDescriptorContext, Object)\n  fullName: TypeConverter.ConvertToInvariantString(ITypeDescriptorContext, Object)\n- uid: System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: ConvertToString(ITypeDescriptorContext, CultureInfo, Object)\n  nameWithType: TypeConverter.ConvertToString(ITypeDescriptorContext, CultureInfo, Object)\n  fullName: TypeConverter.ConvertToString(ITypeDescriptorContext, CultureInfo, Object)\n- uid: System.ComponentModel.TypeConverter.ConvertToString(System.Object)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: ConvertToString(Object)\n  nameWithType: TypeConverter.ConvertToString(Object)\n  fullName: TypeConverter.ConvertToString(Object)\n- uid: System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Object)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: ConvertToString(ITypeDescriptorContext, Object)\n  nameWithType: TypeConverter.ConvertToString(ITypeDescriptorContext, Object)\n  fullName: TypeConverter.ConvertToString(ITypeDescriptorContext, Object)\n- uid: System.ComponentModel.TypeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: CreateInstance(ITypeDescriptorContext, IDictionary)\n  nameWithType: TypeConverter.CreateInstance(ITypeDescriptorContext, IDictionary)\n  fullName: TypeConverter.CreateInstance(ITypeDescriptorContext, IDictionary)\n- uid: System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: CreateInstance(IDictionary)\n  nameWithType: TypeConverter.CreateInstance(IDictionary)\n  fullName: TypeConverter.CreateInstance(IDictionary)\n- uid: System.ComponentModel.TypeConverter.GetConvertFromException(System.Object)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetConvertFromException(Object)\n  nameWithType: TypeConverter.GetConvertFromException(Object)\n  fullName: TypeConverter.GetConvertFromException(Object)\n- uid: System.ComponentModel.TypeConverter.GetConvertToException(System.Object,System.Type)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetConvertToException(Object, Type)\n  nameWithType: TypeConverter.GetConvertToException(Object, Type)\n  fullName: TypeConverter.GetConvertToException(Object, Type)\n- uid: System.ComponentModel.TypeConverter.GetCreateInstanceSupported\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetCreateInstanceSupported()\n  nameWithType: TypeConverter.GetCreateInstanceSupported()\n  fullName: TypeConverter.GetCreateInstanceSupported()\n- uid: System.ComponentModel.TypeConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetCreateInstanceSupported(ITypeDescriptorContext)\n  nameWithType: TypeConverter.GetCreateInstanceSupported(ITypeDescriptorContext)\n  fullName: TypeConverter.GetCreateInstanceSupported(ITypeDescriptorContext)\n- uid: System.ComponentModel.TypeConverter.GetProperties(System.Object)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetProperties(Object)\n  nameWithType: TypeConverter.GetProperties(Object)\n  fullName: TypeConverter.GetProperties(Object)\n- uid: System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetProperties(ITypeDescriptorContext, Object)\n  nameWithType: TypeConverter.GetProperties(ITypeDescriptorContext, Object)\n  fullName: TypeConverter.GetProperties(ITypeDescriptorContext, Object)\n- uid: System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetProperties(ITypeDescriptorContext, Object, Attribute[])\n  nameWithType: TypeConverter.GetProperties(ITypeDescriptorContext, Object, Attribute[])\n  fullName: TypeConverter.GetProperties(ITypeDescriptorContext, Object, Attribute[])\n- uid: System.ComponentModel.TypeConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetPropertiesSupported(ITypeDescriptorContext)\n  nameWithType: TypeConverter.GetPropertiesSupported(ITypeDescriptorContext)\n  fullName: TypeConverter.GetPropertiesSupported(ITypeDescriptorContext)\n- uid: System.ComponentModel.TypeConverter.GetPropertiesSupported\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetPropertiesSupported()\n  nameWithType: TypeConverter.GetPropertiesSupported()\n  fullName: TypeConverter.GetPropertiesSupported()\n- uid: System.ComponentModel.TypeConverter.GetStandardValues\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetStandardValues()\n  nameWithType: TypeConverter.GetStandardValues()\n  fullName: TypeConverter.GetStandardValues()\n- uid: System.ComponentModel.TypeConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetStandardValues(ITypeDescriptorContext)\n  nameWithType: TypeConverter.GetStandardValues(ITypeDescriptorContext)\n  fullName: TypeConverter.GetStandardValues(ITypeDescriptorContext)\n- uid: System.ComponentModel.TypeConverter.GetStandardValuesExclusive\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetStandardValuesExclusive()\n  nameWithType: TypeConverter.GetStandardValuesExclusive()\n  fullName: TypeConverter.GetStandardValuesExclusive()\n- uid: System.ComponentModel.TypeConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetStandardValuesExclusive(ITypeDescriptorContext)\n  nameWithType: TypeConverter.GetStandardValuesExclusive(ITypeDescriptorContext)\n  fullName: TypeConverter.GetStandardValuesExclusive(ITypeDescriptorContext)\n- uid: System.ComponentModel.TypeConverter.GetStandardValuesSupported\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetStandardValuesSupported()\n  nameWithType: TypeConverter.GetStandardValuesSupported()\n  fullName: TypeConverter.GetStandardValuesSupported()\n- uid: System.ComponentModel.TypeConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: GetStandardValuesSupported(ITypeDescriptorContext)\n  nameWithType: TypeConverter.GetStandardValuesSupported(ITypeDescriptorContext)\n  fullName: TypeConverter.GetStandardValuesSupported(ITypeDescriptorContext)\n- uid: System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: IsValid(ITypeDescriptorContext, Object)\n  nameWithType: TypeConverter.IsValid(ITypeDescriptorContext, Object)\n  fullName: TypeConverter.IsValid(ITypeDescriptorContext, Object)\n- uid: System.ComponentModel.TypeConverter.IsValid(System.Object)\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: IsValid(Object)\n  nameWithType: TypeConverter.IsValid(Object)\n  fullName: TypeConverter.IsValid(Object)\n- uid: System.ComponentModel.TypeConverter.SortProperties(System.ComponentModel.PropertyDescriptorCollection,System.String[])\n  parent: System.ComponentModel.TypeConverter\n  isExternal: false\n  name: SortProperties(PropertyDescriptorCollection, String[])\n  nameWithType: TypeConverter.SortProperties(PropertyDescriptorCollection, String[])\n  fullName: TypeConverter.SortProperties(PropertyDescriptorCollection, String[])\n"}