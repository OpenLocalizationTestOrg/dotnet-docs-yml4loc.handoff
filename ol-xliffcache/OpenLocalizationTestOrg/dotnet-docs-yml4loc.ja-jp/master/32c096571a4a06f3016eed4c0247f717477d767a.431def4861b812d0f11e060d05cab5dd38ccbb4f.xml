{"nodes":[{"content":"Indicates the direction of a trust.","nodes":[{"pos":[0,35],"content":"Indicates the direction of a trust.","nodes":[{"content":"Indicates the direction of a trust.","pos":[0,35]}]}],"pos":[677,713],"yaml":true},{"content":"The trust direction is always relative to one side of a trust. For example, if domain A has an inbound trust relationship with domain B, then by definition, domain B has an outbound trust with domain A.","nodes":[{"pos":[0,202],"content":"The trust direction is always relative to one side of a trust. For example, if domain A has an inbound trust relationship with domain B, then by definition, domain B has an outbound trust with domain A.","nodes":[{"content":"The trust direction is always relative to one side of a trust. For example, if domain A has an inbound trust relationship with domain B, then by definition, domain B has an outbound trust with domain A.","pos":[0,202],"nodes":[{"content":"The trust direction is always relative to one side of a trust.","pos":[0,62]},{"content":"For example, if domain A has an inbound trust relationship with domain B, then by definition, domain B has an outbound trust with domain A.","pos":[63,202]}]}]}],"pos":[724,927],"yaml":true,"extradata":"MT"},{"content":"Each domain or forest has access to the resources of the other domain or forest.","nodes":[{"pos":[0,80],"content":"Each domain or forest has access to the resources of the other domain or forest.","nodes":[{"content":"Each domain or forest has access to the resources of the other domain or forest.","pos":[0,80]}]}],"pos":[2102,2183],"yaml":true},{"content":"This is a trusting domain or forest. The other domain or forest has access to the resources of this domain or forest. This domain or forest does not have access to resources that belong to the other domain or forest.","nodes":[{"pos":[0,216],"content":"This is a trusting domain or forest. The other domain or forest has access to the resources of this domain or forest. This domain or forest does not have access to resources that belong to the other domain or forest.","nodes":[{"content":"This is a trusting domain or forest. The other domain or forest has access to the resources of this domain or forest. This domain or forest does not have access to resources that belong to the other domain or forest.","pos":[0,216],"nodes":[{"content":"This is a trusting domain or forest.","pos":[0,36]},{"content":"The other domain or forest has access to the resources of this domain or forest.","pos":[37,117]},{"content":"This domain or forest does not have access to resources that belong to the other domain or forest.","pos":[118,216]}]}]}],"pos":[3292,3509],"yaml":true},{"content":"This is a trusted domain or forest. This domain or forest has access to resources of the other domain or forest. The other domain or forest does not have access to the resources of this domain or forest.","nodes":[{"pos":[0,203],"content":"This is a trusted domain or forest. This domain or forest has access to resources of the other domain or forest. The other domain or forest does not have access to the resources of this domain or forest.","nodes":[{"content":"This is a trusted domain or forest. This domain or forest has access to resources of the other domain or forest. The other domain or forest does not have access to the resources of this domain or forest.","pos":[0,203],"nodes":[{"content":"This is a trusted domain or forest.","pos":[0,35]},{"content":"This domain or forest has access to resources of the other domain or forest.","pos":[36,112]},{"content":"The other domain or forest does not have access to the resources of this domain or forest.","pos":[113,203]}]}]}],"pos":[4618,4822],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.DirectoryServices.ActiveDirectory.TrustDirection\n  commentId: T:System.DirectoryServices.ActiveDirectory.TrustDirection\n  id: TrustDirection\n  children:\n  - System.DirectoryServices.ActiveDirectory.TrustDirection.Bidirectional\n  - System.DirectoryServices.ActiveDirectory.TrustDirection.Inbound\n  - System.DirectoryServices.ActiveDirectory.TrustDirection.Outbound\n  langs:\n  - csharp\n  name: TrustDirection\n  nameWithType: TrustDirection\n  fullName: System.DirectoryServices.ActiveDirectory.TrustDirection\n  type: Enum\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices.ActiveDirectory\n  summary: Indicates the direction of a trust.\n  remarks: The trust direction is always relative to one side of a trust. For example, if domain A has an inbound trust relationship with domain B, then by definition, domain B has an outbound trust with domain A.\n  syntax:\n    content: public enum TrustDirection\n  inheritance:\n  - System.Object\n  - System.ValueType\n  - System.Enum\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices.ActiveDirectory/TrustDirection.xml\n  author: BrucePerlerMS\n  ms.author: bruceper\n  manager: mbaldwin\n- uid: System.DirectoryServices.ActiveDirectory.TrustDirection.Bidirectional\n  commentId: F:System.DirectoryServices.ActiveDirectory.TrustDirection.Bidirectional\n  id: Bidirectional\n  parent: System.DirectoryServices.ActiveDirectory.TrustDirection\n  langs:\n  - csharp\n  name: Bidirectional\n  nameWithType: TrustDirection.Bidirectional\n  fullName: TrustDirection.Bidirectional\n  type: Field\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices.ActiveDirectory\n  summary: Each domain or forest has access to the resources of the other domain or forest.\n  syntax:\n    content: Bidirectional\n    return:\n      type: System.DirectoryServices.ActiveDirectory.TrustDirection\n      description: ''\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices.ActiveDirectory/TrustDirection.xml\n- uid: System.DirectoryServices.ActiveDirectory.TrustDirection.Inbound\n  commentId: F:System.DirectoryServices.ActiveDirectory.TrustDirection.Inbound\n  id: Inbound\n  parent: System.DirectoryServices.ActiveDirectory.TrustDirection\n  langs:\n  - csharp\n  name: Inbound\n  nameWithType: TrustDirection.Inbound\n  fullName: TrustDirection.Inbound\n  type: Field\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices.ActiveDirectory\n  summary: This is a trusting domain or forest. The other domain or forest has access to the resources of this domain or forest. This domain or forest does not have access to resources that belong to the other domain or forest.\n  syntax:\n    content: Inbound\n    return:\n      type: System.DirectoryServices.ActiveDirectory.TrustDirection\n      description: ''\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices.ActiveDirectory/TrustDirection.xml\n- uid: System.DirectoryServices.ActiveDirectory.TrustDirection.Outbound\n  commentId: F:System.DirectoryServices.ActiveDirectory.TrustDirection.Outbound\n  id: Outbound\n  parent: System.DirectoryServices.ActiveDirectory.TrustDirection\n  langs:\n  - csharp\n  name: Outbound\n  nameWithType: TrustDirection.Outbound\n  fullName: TrustDirection.Outbound\n  type: Field\n  assemblies:\n  - System.DirectoryServices\n  namespace: System.DirectoryServices.ActiveDirectory\n  summary: This is a trusted domain or forest. This domain or forest has access to resources of the other domain or forest. The other domain or forest does not have access to the resources of this domain or forest.\n  syntax:\n    content: Outbound\n    return:\n      type: System.DirectoryServices.ActiveDirectory.TrustDirection\n      description: ''\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices.ActiveDirectory/TrustDirection.xml\nreferences:\n- uid: System.Enum\n  parent: System\n  isExternal: false\n  name: Enum\n  nameWithType: Enum\n  fullName: System.Enum\n- uid: System.DirectoryServices.ActiveDirectory.TrustDirection.Bidirectional\n  parent: System.DirectoryServices.ActiveDirectory.TrustDirection\n  isExternal: false\n  name: Bidirectional\n  nameWithType: TrustDirection.Bidirectional\n  fullName: TrustDirection.Bidirectional\n- uid: System.DirectoryServices.ActiveDirectory.TrustDirection\n  parent: System.DirectoryServices.ActiveDirectory\n  isExternal: false\n  name: TrustDirection\n  nameWithType: TrustDirection\n  fullName: System.DirectoryServices.ActiveDirectory.TrustDirection\n- uid: System.DirectoryServices.ActiveDirectory.TrustDirection.Inbound\n  parent: System.DirectoryServices.ActiveDirectory.TrustDirection\n  isExternal: false\n  name: Inbound\n  nameWithType: TrustDirection.Inbound\n  fullName: TrustDirection.Inbound\n- uid: System.DirectoryServices.ActiveDirectory.TrustDirection.Outbound\n  parent: System.DirectoryServices.ActiveDirectory.TrustDirection\n  isExternal: false\n  name: Outbound\n  nameWithType: TrustDirection.Outbound\n  fullName: TrustDirection.Outbound\n"}