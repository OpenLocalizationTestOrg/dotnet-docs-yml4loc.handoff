{"nodes":[{"content":"Provides an abstract base class for a custom type converter.","nodes":[{"pos":[0,60],"content":"Provides an abstract base class for a custom type converter.","nodes":[{"content":"Provides an abstract base class for a custom type converter.","pos":[0,60]}]}],"pos":[927,988],"yaml":true},{"content":"The <xref:System.Web.Script.Serialization.JavaScriptConverter> class enables you to implement serialization and deserialization processes for managed types that are not natively supported by the <xref:System.Web.Script.Serialization.JavaScriptSerializer> class. You can also use <xref:System.Web.Script.Serialization.JavaScriptConverter> when you need more control over the serialization and deserialization process.  \n  \n The <xref:System.Web.Script.Serialization.JavaScriptConverter.SupportedTypes%2A> property indicates the types for which a custom converter provides converter services.  \n  \n To indicate that a custom converter must be used by the <xref:System.Web.Script.Serialization.JavaScriptSerializer> instance, you must register the converter with the instance. If you are using the <xref:System.Web.Script.Serialization.JavaScriptSerializer> class directly, you should use the <xref:System.Web.Script.Serialization.JavaScriptSerializer.RegisterConverters%2A> method to register the converter. Otherwise, if you are invoking Web methods from ECMAScript (JavaScript) and you want to use the custom converter, you can register it by adding a `converters` element in the configuration file. For more information, see [How to: Configure ASP.NET Services in Microsoft Ajax](http://msdn.microsoft.com/library/ea4fb56e-bc1d-405a-9877-00cf5e552a30).  \n  \n When the <xref:System.Web.Script.Serialization.JavaScriptSerializer> instance is serializing a type for which it has a custom converter registered, the serializer calls the <xref:System.Web.Script.Serialization.JavaScriptConverter.Serialize%2A> method. Similarly, when the <xref:System.Web.Script.Serialization.JavaScriptSerializer> instance is deserializing a JavaScript Object Notation (JSON) string and recognizes that a type inside the JSON string has a custom converter associated with it, the serializer calls the <xref:System.Web.Script.Serialization.JavaScriptConverter.Deserialize%2A> method.","nodes":[{"pos":[0,416],"content":"The <xref:System.Web.Script.Serialization.JavaScriptConverter> class enables you to implement serialization and deserialization processes for managed types that are not natively supported by the <xref:System.Web.Script.Serialization.JavaScriptSerializer> class. You can also use <xref:System.Web.Script.Serialization.JavaScriptConverter> when you need more control over the serialization and deserialization process.","nodes":[{"content":"The <xref:System.Web.Script.Serialization.JavaScriptConverter> class enables you to implement serialization and deserialization processes for managed types that are not natively supported by the <xref:System.Web.Script.Serialization.JavaScriptSerializer> class. You can also use <xref:System.Web.Script.Serialization.JavaScriptConverter> when you need more control over the serialization and deserialization process.","pos":[0,416],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.Script.Serialization.JavaScriptConverter&gt;</ph> class enables you to implement serialization and deserialization processes for managed types that are not natively supported by the <ph id=\"ph2\">&lt;xref:System.Web.Script.Serialization.JavaScriptSerializer&gt;</ph> class.","pos":[0,261],"source":"The <xref:System.Web.Script.Serialization.JavaScriptConverter> class enables you to implement serialization and deserialization processes for managed types that are not natively supported by the <xref:System.Web.Script.Serialization.JavaScriptSerializer> class."},{"content":"You can also use <ph id=\"ph1\">&lt;xref:System.Web.Script.Serialization.JavaScriptConverter&gt;</ph> when you need more control over the serialization and deserialization process.","pos":[262,416],"source":" You can also use <xref:System.Web.Script.Serialization.JavaScriptConverter> when you need more control over the serialization and deserialization process."}]}]},{"pos":[423,590],"content":"The <xref:System.Web.Script.Serialization.JavaScriptConverter.SupportedTypes%2A> property indicates the types for which a custom converter provides converter services.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.Script.Serialization.JavaScriptConverter.SupportedTypes%2A&gt;</ph> property indicates the types for which a custom converter provides converter services.","pos":[0,167],"source":"The <xref:System.Web.Script.Serialization.JavaScriptConverter.SupportedTypes%2A> property indicates the types for which a custom converter provides converter services."}]},{"pos":[597,1353],"content":"To indicate that a custom converter must be used by the <xref:System.Web.Script.Serialization.JavaScriptSerializer> instance, you must register the converter with the instance. If you are using the <xref:System.Web.Script.Serialization.JavaScriptSerializer> class directly, you should use the <xref:System.Web.Script.Serialization.JavaScriptSerializer.RegisterConverters%2A> method to register the converter. Otherwise, if you are invoking Web methods from ECMAScript (JavaScript) and you want to use the custom converter, you can register it by adding a `converters` element in the configuration file. For more information, see [How to: Configure ASP.NET Services in Microsoft Ajax](http://msdn.microsoft.com/library/ea4fb56e-bc1d-405a-9877-00cf5e552a30).","nodes":[{"content":"To indicate that a custom converter must be used by the <ph id=\"ph1\">&lt;xref:System.Web.Script.Serialization.JavaScriptSerializer&gt;</ph> instance, you must register the converter with the instance.","pos":[0,176],"source":"To indicate that a custom converter must be used by the <xref:System.Web.Script.Serialization.JavaScriptSerializer> instance, you must register the converter with the instance."},{"content":"If you are using the <ph id=\"ph1\">&lt;xref:System.Web.Script.Serialization.JavaScriptSerializer&gt;</ph> class directly, you should use the <ph id=\"ph2\">&lt;xref:System.Web.Script.Serialization.JavaScriptSerializer.RegisterConverters%2A&gt;</ph> method to register the converter.","pos":[177,408],"source":" If you are using the <xref:System.Web.Script.Serialization.JavaScriptSerializer> class directly, you should use the <xref:System.Web.Script.Serialization.JavaScriptSerializer.RegisterConverters%2A> method to register the converter."},{"content":"Otherwise, if you are invoking Web methods from ECMAScript (JavaScript) and you want to use the custom converter, you can register it by adding a <ph id=\"ph1\">`converters`</ph> element in the configuration file.","pos":[409,602],"source":" Otherwise, if you are invoking Web methods from ECMAScript (JavaScript) and you want to use the custom converter, you can register it by adding a `converters` element in the configuration file."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>How to: Configure ASP.NET Services in Microsoft Ajax<ept id=\"p1\">](http://msdn.microsoft.com/library/ea4fb56e-bc1d-405a-9877-00cf5e552a30)</ept>.","pos":[603,756],"source":" For more information, see [How to: Configure ASP.NET Services in Microsoft Ajax](http://msdn.microsoft.com/library/ea4fb56e-bc1d-405a-9877-00cf5e552a30)."}]},{"pos":[1360,1961],"content":"When the <xref:System.Web.Script.Serialization.JavaScriptSerializer> instance is serializing a type for which it has a custom converter registered, the serializer calls the <xref:System.Web.Script.Serialization.JavaScriptConverter.Serialize%2A> method. Similarly, when the <xref:System.Web.Script.Serialization.JavaScriptSerializer> instance is deserializing a JavaScript Object Notation (JSON) string and recognizes that a type inside the JSON string has a custom converter associated with it, the serializer calls the <xref:System.Web.Script.Serialization.JavaScriptConverter.Deserialize%2A> method.","nodes":[{"content":"When the <xref:System.Web.Script.Serialization.JavaScriptSerializer> instance is serializing a type for which it has a custom converter registered, the serializer calls the <xref:System.Web.Script.Serialization.JavaScriptConverter.Serialize%2A> method. Similarly, when the <xref:System.Web.Script.Serialization.JavaScriptSerializer> instance is deserializing a JavaScript Object Notation (JSON) string and recognizes that a type inside the JSON string has a custom converter associated with it, the serializer calls the <xref:System.Web.Script.Serialization.JavaScriptConverter.Deserialize%2A> method.","pos":[0,601],"nodes":[{"content":"When the <ph id=\"ph1\">&lt;xref:System.Web.Script.Serialization.JavaScriptSerializer&gt;</ph> instance is serializing a type for which it has a custom converter registered, the serializer calls the <ph id=\"ph2\">&lt;xref:System.Web.Script.Serialization.JavaScriptConverter.Serialize%2A&gt;</ph> method.","pos":[0,252],"source":"When the <xref:System.Web.Script.Serialization.JavaScriptSerializer> instance is serializing a type for which it has a custom converter registered, the serializer calls the <xref:System.Web.Script.Serialization.JavaScriptConverter.Serialize%2A> method."},{"content":"Similarly, when the <ph id=\"ph1\">&lt;xref:System.Web.Script.Serialization.JavaScriptSerializer&gt;</ph> instance is deserializing a JavaScript Object Notation (JSON) string and recognizes that a type inside the JSON string has a custom converter associated with it, the serializer calls the <ph id=\"ph2\">&lt;xref:System.Web.Script.Serialization.JavaScriptConverter.Deserialize%2A&gt;</ph> method.","pos":[253,601],"source":" Similarly, when the <xref:System.Web.Script.Serialization.JavaScriptSerializer> instance is deserializing a JavaScript Object Notation (JSON) string and recognizes that a type inside the JSON string has a custom converter associated with it, the serializer calls the <xref:System.Web.Script.Serialization.JavaScriptConverter.Deserialize%2A> method."}]}]}],"pos":[999,2969],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.Web.Script.Serialization.JavaScriptConverter\"></xref> class.","nodes":[{"pos":[0,113],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Web.Script.Serialization.JavaScriptConverter\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.Web.Script.Serialization.JavaScriptConverter\"></xref> class."}],"pos":[4902,5016],"yaml":true},{"content":"When overridden in a derived class, converts the provided dictionary into an object of the specified type.","nodes":[{"pos":[0,106],"content":"When overridden in a derived class, converts the provided dictionary into an object of the specified type.","nodes":[{"content":"When overridden in a derived class, converts the provided dictionary into an object of the specified type.","pos":[0,106]}]}],"pos":[6755,6862],"yaml":true},{"content":"An <xref href=\"System.Collections.Generic.IDictionary`2\"></xref> instance of property data stored as name/value pairs.","nodes":[{"pos":[0,118],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Collections.Generic.IDictionary`2\"&gt;&lt;/xref&gt;</ph> instance of property data stored as name/value pairs.","source":"An <xref href=\"System.Collections.Generic.IDictionary`2\"></xref> instance of property data stored as name/value pairs."}],"pos":[7200,7319],"yaml":true},{"content":"The type of the resulting object.","nodes":[{"pos":[0,33],"content":"The type of the resulting object.","nodes":[{"content":"The type of the resulting object.","pos":[0,33]}]}],"pos":[7377,7411],"yaml":true},{"content":"The <xref href=\"System.Web.Script.Serialization.JavaScriptSerializer\"></xref> instance.","nodes":[{"pos":[0,87],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Web.Script.Serialization.JavaScriptSerializer\"&gt;&lt;/xref&gt;</ph> instance.","source":"The <xref href=\"System.Web.Script.Serialization.JavaScriptSerializer\"></xref> instance."}],"pos":[7516,7604],"yaml":true},{"content":"The deserialized object.","nodes":[{"pos":[0,24],"content":"The deserialized object.","nodes":[{"content":"The deserialized object.","pos":[0,24]}]}],"pos":[7661,7686],"yaml":true},{"content":"When overridden in a derived class, builds a dictionary of name/value pairs.","nodes":[{"pos":[0,76],"content":"When overridden in a derived class, builds a dictionary of name/value pairs.","nodes":[{"content":"When overridden in a derived class, builds a dictionary of name/value pairs.","pos":[0,76]}]}],"pos":[9067,9144],"yaml":true},{"content":"When you serialize a type for which a custom converter is registered, the <xref:System.Web.Script.Serialization.JavaScriptSerializer> instance invokes the <xref:System.Web.Script.Serialization.JavaScriptConverter.Serialize%2A> method.","nodes":[{"pos":[0,234],"content":"When you serialize a type for which a custom converter is registered, the <xref:System.Web.Script.Serialization.JavaScriptSerializer> instance invokes the <xref:System.Web.Script.Serialization.JavaScriptConverter.Serialize%2A> method.","nodes":[{"content":"When you serialize a type for which a custom converter is registered, the <ph id=\"ph1\">&lt;xref:System.Web.Script.Serialization.JavaScriptSerializer&gt;</ph> instance invokes the <ph id=\"ph2\">&lt;xref:System.Web.Script.Serialization.JavaScriptConverter.Serialize%2A&gt;</ph> method.","pos":[0,234],"source":"When you serialize a type for which a custom converter is registered, the <xref:System.Web.Script.Serialization.JavaScriptSerializer> instance invokes the <xref:System.Web.Script.Serialization.JavaScriptConverter.Serialize%2A> method."}]}],"pos":[9155,9390],"yaml":true,"extradata":"MT"},{"content":"The object to serialize.","nodes":[{"pos":[0,24],"content":"The object to serialize.","nodes":[{"content":"The object to serialize.","pos":[0,24]}]}],"pos":[9647,9672],"yaml":true},{"content":"The object that is responsible for the serialization.","nodes":[{"pos":[0,53],"content":"The object that is responsible for the serialization.","nodes":[{"content":"The object that is responsible for the serialization.","pos":[0,53]}]}],"pos":[9777,9831],"yaml":true},{"content":"An object that contains key/value pairs that represent the object’s data.","nodes":[{"pos":[0,73],"content":"An object that contains key/value pairs that represent the object’s data.","nodes":[{"content":"An object that contains key/value pairs that represent the object’s data.","pos":[0,73]}]}],"pos":[9942,10016],"yaml":true},{"content":"When overridden in a derived class, gets a collection of the supported types.","nodes":[{"pos":[0,77],"content":"When overridden in a derived class, gets a collection of the supported types.","nodes":[{"content":"When overridden in a derived class, gets a collection of the supported types.","pos":[0,77]}]}],"pos":[11133,11211],"yaml":true},{"content":"The <xref:System.Web.Script.Serialization.JavaScriptConverter.SupportedTypes%2A> property lists the types that are supported by the converter. At run time, a <xref:System.Web.Script.Serialization.JavaScriptSerializer> instance uses this property to determine the mapping of managed types to their corresponding custom converters.","nodes":[{"pos":[0,329],"content":"The <xref:System.Web.Script.Serialization.JavaScriptConverter.SupportedTypes%2A> property lists the types that are supported by the converter. At run time, a <xref:System.Web.Script.Serialization.JavaScriptSerializer> instance uses this property to determine the mapping of managed types to their corresponding custom converters.","nodes":[{"content":"The <xref:System.Web.Script.Serialization.JavaScriptConverter.SupportedTypes%2A> property lists the types that are supported by the converter. At run time, a <xref:System.Web.Script.Serialization.JavaScriptSerializer> instance uses this property to determine the mapping of managed types to their corresponding custom converters.","pos":[0,329],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.Script.Serialization.JavaScriptConverter.SupportedTypes%2A&gt;</ph> property lists the types that are supported by the converter.","pos":[0,142],"source":"The <xref:System.Web.Script.Serialization.JavaScriptConverter.SupportedTypes%2A> property lists the types that are supported by the converter."},{"content":"At run time, a <ph id=\"ph1\">&lt;xref:System.Web.Script.Serialization.JavaScriptSerializer&gt;</ph> instance uses this property to determine the mapping of managed types to their corresponding custom converters.","pos":[143,329],"source":" At run time, a <xref:System.Web.Script.Serialization.JavaScriptSerializer> instance uses this property to determine the mapping of managed types to their corresponding custom converters."}]}]}],"pos":[11222,11552],"yaml":true,"extradata":"MT"},{"content":"An object that implements <xref href=\"System.Collections.Generic.IEnumerable`1\"></xref> that represents the types supported by the converter.","nodes":[{"pos":[0,141],"content":"An object that implements <ph id=\"ph1\">&lt;xref href=\"System.Collections.Generic.IEnumerable`1\"&gt;&lt;/xref&gt;</ph> that represents the types supported by the converter.","source":"An object that implements <xref href=\"System.Collections.Generic.IEnumerable`1\"></xref> that represents the types supported by the converter."}],"pos":[12517,12659],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Web.Script.Serialization.JavaScriptConverter\n  commentId: T:System.Web.Script.Serialization.JavaScriptConverter\n  id: JavaScriptConverter\n  children:\n  - System.Web.Script.Serialization.JavaScriptConverter.#ctor\n  - System.Web.Script.Serialization.JavaScriptConverter.Deserialize(System.Collections.Generic.IDictionary{System.String,System.Object},System.Type,System.Web.Script.Serialization.JavaScriptSerializer)\n  - System.Web.Script.Serialization.JavaScriptConverter.Serialize(System.Object,System.Web.Script.Serialization.JavaScriptSerializer)\n  - System.Web.Script.Serialization.JavaScriptConverter.SupportedTypes\n  langs:\n  - csharp\n  name: JavaScriptConverter\n  nameWithType: JavaScriptConverter\n  fullName: System.Web.Script.Serialization.JavaScriptConverter\n  type: Class\n  assemblies:\n  - System.Web.Extensions\n  namespace: System.Web.Script.Serialization\n  summary: Provides an abstract base class for a custom type converter.\n  remarks: \"The <xref:System.Web.Script.Serialization.JavaScriptConverter> class enables you to implement serialization and deserialization processes for managed types that are not natively supported by the <xref:System.Web.Script.Serialization.JavaScriptSerializer> class. You can also use <xref:System.Web.Script.Serialization.JavaScriptConverter> when you need more control over the serialization and deserialization process.  \\n  \\n The <xref:System.Web.Script.Serialization.JavaScriptConverter.SupportedTypes%2A> property indicates the types for which a custom converter provides converter services.  \\n  \\n To indicate that a custom converter must be used by the <xref:System.Web.Script.Serialization.JavaScriptSerializer> instance, you must register the converter with the instance. If you are using the <xref:System.Web.Script.Serialization.JavaScriptSerializer> class directly, you should use the <xref:System.Web.Script.Serialization.JavaScriptSerializer.RegisterConverters%2A> method to register the converter. Otherwise, if you are invoking Web methods from ECMAScript (JavaScript) and you want to use the custom converter, you can register it by adding a `converters` element in the configuration file. For more information, see [How to: Configure ASP.NET Services in Microsoft Ajax](http://msdn.microsoft.com/library/ea4fb56e-bc1d-405a-9877-00cf5e552a30).  \\n  \\n When the <xref:System.Web.Script.Serialization.JavaScriptSerializer> instance is serializing a type for which it has a custom converter registered, the serializer calls the <xref:System.Web.Script.Serialization.JavaScriptConverter.Serialize%2A> method. Similarly, when the <xref:System.Web.Script.Serialization.JavaScriptSerializer> instance is deserializing a JavaScript Object Notation (JSON) string and recognizes that a type inside the JSON string has a custom converter associated with it, the serializer calls the <xref:System.Web.Script.Serialization.JavaScriptConverter.Deserialize%2A> method.\"\n  example:\n  - \"The following example shows how to create a custom converter for the <xref:System.Web.UI.WebControls.ListItemCollection> class.  \\n  \\n [!code-csharp[System.Web.Script.Serialization#2](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.Script.Serialization/CS/App_Code/ListItemCollectionConverter.cs#2)]\\n [!code-vb[System.Web.Script.Serialization#2](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.Script.Serialization/VB/App_Code/ListItemCollectionConverter.vb#2)]\"\n  syntax:\n    content: public abstract class JavaScriptConverter\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Script.Serialization/JavaScriptConverter.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.Script.Serialization.JavaScriptConverter.#ctor\n  commentId: M:System.Web.Script.Serialization.JavaScriptConverter.#ctor\n  id: '#ctor'\n  parent: System.Web.Script.Serialization.JavaScriptConverter\n  langs:\n  - csharp\n  name: JavaScriptConverter()\n  nameWithType: JavaScriptConverter.JavaScriptConverter()\n  fullName: JavaScriptConverter.JavaScriptConverter()\n  type: Constructor\n  assemblies:\n  - System.Web.Extensions\n  namespace: System.Web.Script.Serialization\n  summary: Initializes a new instance of the <xref href=\"System.Web.Script.Serialization.JavaScriptConverter\"></xref> class.\n  syntax:\n    content: protected JavaScriptConverter ();\n    parameters: []\n  overload: System.Web.Script.Serialization.JavaScriptConverter.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Script.Serialization/JavaScriptConverter.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.Script.Serialization.JavaScriptConverter.Deserialize(System.Collections.Generic.IDictionary{System.String,System.Object},System.Type,System.Web.Script.Serialization.JavaScriptSerializer)\n  commentId: M:System.Web.Script.Serialization.JavaScriptConverter.Deserialize(System.Collections.Generic.IDictionary{System.String,System.Object},System.Type,System.Web.Script.Serialization.JavaScriptSerializer)\n  id: Deserialize(System.Collections.Generic.IDictionary{System.String,System.Object},System.Type,System.Web.Script.Serialization.JavaScriptSerializer)\n  parent: System.Web.Script.Serialization.JavaScriptConverter\n  langs:\n  - csharp\n  name: Deserialize(IDictionary<String,Object>, Type, JavaScriptSerializer)\n  nameWithType: JavaScriptConverter.Deserialize(IDictionary<String,Object>, Type, JavaScriptSerializer)\n  fullName: JavaScriptConverter.Deserialize(IDictionary<String,Object>, Type, JavaScriptSerializer)\n  type: Method\n  assemblies:\n  - System.Web.Extensions\n  namespace: System.Web.Script.Serialization\n  summary: When overridden in a derived class, converts the provided dictionary into an object of the specified type.\n  syntax:\n    content: public abstract object Deserialize (System.Collections.Generic.IDictionary<string,object> dictionary, Type type, System.Web.Script.Serialization.JavaScriptSerializer serializer);\n    parameters:\n    - id: dictionary\n      type: System.Collections.Generic.IDictionary{System.String,System.Object}\n      description: An <xref href=\"System.Collections.Generic.IDictionary`2\"></xref> instance of property data stored as name/value pairs.\n    - id: type\n      type: System.Type\n      description: The type of the resulting object.\n    - id: serializer\n      type: System.Web.Script.Serialization.JavaScriptSerializer\n      description: The <xref href=\"System.Web.Script.Serialization.JavaScriptSerializer\"></xref> instance.\n    return:\n      type: System.Object\n      description: The deserialized object.\n  overload: System.Web.Script.Serialization.JavaScriptConverter.Deserialize*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Script.Serialization/JavaScriptConverter.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.Script.Serialization.JavaScriptConverter.Serialize(System.Object,System.Web.Script.Serialization.JavaScriptSerializer)\n  commentId: M:System.Web.Script.Serialization.JavaScriptConverter.Serialize(System.Object,System.Web.Script.Serialization.JavaScriptSerializer)\n  id: Serialize(System.Object,System.Web.Script.Serialization.JavaScriptSerializer)\n  parent: System.Web.Script.Serialization.JavaScriptConverter\n  langs:\n  - csharp\n  name: Serialize(Object, JavaScriptSerializer)\n  nameWithType: JavaScriptConverter.Serialize(Object, JavaScriptSerializer)\n  fullName: JavaScriptConverter.Serialize(Object, JavaScriptSerializer)\n  type: Method\n  assemblies:\n  - System.Web.Extensions\n  namespace: System.Web.Script.Serialization\n  summary: When overridden in a derived class, builds a dictionary of name/value pairs.\n  remarks: When you serialize a type for which a custom converter is registered, the <xref:System.Web.Script.Serialization.JavaScriptSerializer> instance invokes the <xref:System.Web.Script.Serialization.JavaScriptConverter.Serialize%2A> method.\n  syntax:\n    content: public abstract System.Collections.Generic.IDictionary<string,object> Serialize (object obj, System.Web.Script.Serialization.JavaScriptSerializer serializer);\n    parameters:\n    - id: obj\n      type: System.Object\n      description: The object to serialize.\n    - id: serializer\n      type: System.Web.Script.Serialization.JavaScriptSerializer\n      description: The object that is responsible for the serialization.\n    return:\n      type: System.Collections.Generic.IDictionary{System.String,System.Object}\n      description: An object that contains key/value pairs that represent the object’s data.\n  overload: System.Web.Script.Serialization.JavaScriptConverter.Serialize*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Script.Serialization/JavaScriptConverter.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.Script.Serialization.JavaScriptConverter.SupportedTypes\n  commentId: P:System.Web.Script.Serialization.JavaScriptConverter.SupportedTypes\n  id: SupportedTypes\n  parent: System.Web.Script.Serialization.JavaScriptConverter\n  langs:\n  - csharp\n  name: SupportedTypes\n  nameWithType: JavaScriptConverter.SupportedTypes\n  fullName: JavaScriptConverter.SupportedTypes\n  type: Property\n  assemblies:\n  - System.Web.Extensions\n  namespace: System.Web.Script.Serialization\n  summary: When overridden in a derived class, gets a collection of the supported types.\n  remarks: The <xref:System.Web.Script.Serialization.JavaScriptConverter.SupportedTypes%2A> property lists the types that are supported by the converter. At run time, a <xref:System.Web.Script.Serialization.JavaScriptSerializer> instance uses this property to determine the mapping of managed types to their corresponding custom converters.\n  example:\n  - \"The following example shows how to override the <xref:System.Web.Script.Serialization.JavaScriptConverter.SupportedTypes%2A> property in a derived class. In this example, the converter supports only the <xref:System.Web.UI.WebControls.ListItemCollection> type. This code example is part of a larger example provided for the <xref:System.Web.Script.Serialization.JavaScriptConverter> class.  \\n  \\n [!code-csharp[System.Web.Script.Serialization#3](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.Script.Serialization/CS/App_Code/ListItemCollectionConverter.cs#3)]\\n [!code-vb[System.Web.Script.Serialization#3](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.Script.Serialization/VB/App_Code/ListItemCollectionConverter.vb#3)]\"\n  syntax:\n    content: public abstract System.Collections.Generic.IEnumerable<Type> SupportedTypes { get; }\n    return:\n      type: System.Collections.Generic.IEnumerable{System.Type}\n      description: An object that implements <xref href=\"System.Collections.Generic.IEnumerable`1\"></xref> that represents the types supported by the converter.\n  overload: System.Web.Script.Serialization.JavaScriptConverter.SupportedTypes*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Script.Serialization/JavaScriptConverter.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\nreferences:\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Web.Script.Serialization.JavaScriptConverter.#ctor\n  parent: System.Web.Script.Serialization.JavaScriptConverter\n  isExternal: false\n  name: JavaScriptConverter()\n  nameWithType: JavaScriptConverter.JavaScriptConverter()\n  fullName: JavaScriptConverter.JavaScriptConverter()\n- uid: System.Web.Script.Serialization.JavaScriptConverter.Deserialize(System.Collections.Generic.IDictionary{System.String,System.Object},System.Type,System.Web.Script.Serialization.JavaScriptSerializer)\n  parent: System.Web.Script.Serialization.JavaScriptConverter\n  isExternal: false\n  name: Deserialize(IDictionary<String,Object>, Type, JavaScriptSerializer)\n  nameWithType: JavaScriptConverter.Deserialize(IDictionary<String,Object>, Type, JavaScriptSerializer)\n  fullName: JavaScriptConverter.Deserialize(IDictionary<String,Object>, Type, JavaScriptSerializer)\n- uid: System.Collections.Generic.IDictionary`2\n  name: IDictionary<TKey,TValue>\n  nameWithType: IDictionary<TKey,TValue>\n  fullName: System.Collections.Generic.IDictionary<TKey,TValue>\n- uid: System.String\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Collections.Generic.IDictionary{System.String,System.Object}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IDictionary<String,Object>\n  nameWithType: IDictionary<String,Object>\n  fullName: System.Collections.Generic.IDictionary<System.String,System.Object>\n  spec.csharp:\n  - uid: System.Collections.Generic.IDictionary`2\n    name: IDictionary\n    nameWithType: IDictionary\n    fullName: System.Collections.Generic.IDictionary\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.String\n    name: String\n    nameWithType: String\n    fullName: System.String\n  - name: ','\n    nameWithType: ','\n    fullName: ','\n  - uid: System.Object\n    name: Object\n    nameWithType: Object\n    fullName: System.Object\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.Web.Script.Serialization.JavaScriptSerializer\n  parent: System.Web.Script.Serialization\n  isExternal: false\n  name: JavaScriptSerializer\n  nameWithType: JavaScriptSerializer\n  fullName: System.Web.Script.Serialization.JavaScriptSerializer\n- uid: System.Web.Script.Serialization.JavaScriptConverter.Serialize(System.Object,System.Web.Script.Serialization.JavaScriptSerializer)\n  parent: System.Web.Script.Serialization.JavaScriptConverter\n  isExternal: false\n  name: Serialize(Object, JavaScriptSerializer)\n  nameWithType: JavaScriptConverter.Serialize(Object, JavaScriptSerializer)\n  fullName: JavaScriptConverter.Serialize(Object, JavaScriptSerializer)\n- uid: System.Web.Script.Serialization.JavaScriptConverter.SupportedTypes\n  parent: System.Web.Script.Serialization.JavaScriptConverter\n  isExternal: false\n  name: SupportedTypes\n  nameWithType: JavaScriptConverter.SupportedTypes\n  fullName: JavaScriptConverter.SupportedTypes\n- uid: System.Collections.Generic.IEnumerable`1\n  name: IEnumerable<T>\n  nameWithType: IEnumerable<T>\n  fullName: System.Collections.Generic.IEnumerable<T>\n- uid: System.Collections.Generic.IEnumerable{System.Type}\n  parent: System.Collections.Generic\n  isExternal: false\n  name: IEnumerable<Type>\n  nameWithType: IEnumerable<Type>\n  fullName: System.Collections.Generic.IEnumerable<System.Type>\n  spec.csharp:\n  - uid: System.Collections.Generic.IEnumerable`1\n    name: IEnumerable\n    nameWithType: IEnumerable\n    fullName: System.Collections.Generic.IEnumerable\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Type\n    name: Type\n    nameWithType: Type\n    fullName: System.Type\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Web.Script.Serialization.JavaScriptConverter.#ctor*\n  parent: System.Web.Script.Serialization.JavaScriptConverter\n  isExternal: false\n  name: JavaScriptConverter\n  nameWithType: JavaScriptConverter.JavaScriptConverter\n  fullName: JavaScriptConverter.JavaScriptConverter\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Script.Serialization/JavaScriptConverter.xml\n- uid: System.Web.Script.Serialization.JavaScriptConverter.Deserialize*\n  parent: System.Web.Script.Serialization.JavaScriptConverter\n  isExternal: false\n  name: Deserialize\n  nameWithType: JavaScriptConverter.Deserialize\n  fullName: JavaScriptConverter.Deserialize\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Script.Serialization/JavaScriptConverter.xml\n- uid: System.Web.Script.Serialization.JavaScriptConverter.Serialize*\n  parent: System.Web.Script.Serialization.JavaScriptConverter\n  isExternal: false\n  name: Serialize\n  nameWithType: JavaScriptConverter.Serialize\n  fullName: JavaScriptConverter.Serialize\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Script.Serialization/JavaScriptConverter.xml\n- uid: System.Web.Script.Serialization.JavaScriptConverter.SupportedTypes*\n  parent: System.Web.Script.Serialization.JavaScriptConverter\n  isExternal: false\n  name: SupportedTypes\n  nameWithType: JavaScriptConverter.SupportedTypes\n  fullName: JavaScriptConverter.SupportedTypes\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Script.Serialization/JavaScriptConverter.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n"}