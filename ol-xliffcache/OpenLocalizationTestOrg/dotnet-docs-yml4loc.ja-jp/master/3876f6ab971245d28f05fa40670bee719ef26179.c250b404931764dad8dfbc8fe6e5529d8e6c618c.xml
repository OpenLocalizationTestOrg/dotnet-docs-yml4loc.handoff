{"nodes":[{"content":"Provides a container for services.","nodes":[{"pos":[0,34],"content":"Provides a container for services.","nodes":[{"content":"Provides a container for services.","pos":[0,34]}]}],"pos":[1112,1147],"yaml":true},{"content":"A service container is, by definition, a service provider. In addition to providing services, it also provides a mechanism for adding and removing services. Services are a foundation of the .NET Framework design-time architecture. Services provide design-time objects access to specific features and methods implemented by a service object that provides a service or services.  \n  \n To obtain a service at design time, call the <xref:System.ComponentModel.Component.GetService%2A> method of a component sited in design mode. Designers and other objects can add or remove services at design time through the <xref:System.ComponentModel.Design.IDesignerHost> interface.  \n  \n Service containers can be contained by other service containers, forming a tree of service containers. By default, the <xref:System.ComponentModel.Design.IServiceContainer> interface adds services to the closest service container. When a service is added, it can be added with instructions to promote it. When a service is promoted, it is added to any parent service container, on up until the top of the service container tree is reached. This allows a designer to provide a global service that other objects in the process can use.","nodes":[{"pos":[0,376],"content":"A service container is, by definition, a service provider. In addition to providing services, it also provides a mechanism for adding and removing services. Services are a foundation of the .NET Framework design-time architecture. Services provide design-time objects access to specific features and methods implemented by a service object that provides a service or services.","nodes":[{"content":"A service container is, by definition, a service provider. In addition to providing services, it also provides a mechanism for adding and removing services. Services are a foundation of the .NET Framework design-time architecture. Services provide design-time objects access to specific features and methods implemented by a service object that provides a service or services.","pos":[0,376],"nodes":[{"content":"A service container is, by definition, a service provider.","pos":[0,58]},{"content":"In addition to providing services, it also provides a mechanism for adding and removing services.","pos":[59,156]},{"content":"Services are a foundation of the .NET Framework design-time architecture.","pos":[157,230]},{"content":"Services provide design-time objects access to specific features and methods implemented by a service object that provides a service or services.","pos":[231,376]}]}]},{"pos":[383,667],"content":"To obtain a service at design time, call the <xref:System.ComponentModel.Component.GetService%2A> method of a component sited in design mode. Designers and other objects can add or remove services at design time through the <xref:System.ComponentModel.Design.IDesignerHost> interface.","nodes":[{"content":"To obtain a service at design time, call the <xref:System.ComponentModel.Component.GetService%2A> method of a component sited in design mode. Designers and other objects can add or remove services at design time through the <xref:System.ComponentModel.Design.IDesignerHost> interface.","pos":[0,284],"nodes":[{"content":"To obtain a service at design time, call the <ph id=\"ph1\">&lt;xref:System.ComponentModel.Component.GetService%2A&gt;</ph> method of a component sited in design mode.","pos":[0,141],"source":"To obtain a service at design time, call the <xref:System.ComponentModel.Component.GetService%2A> method of a component sited in design mode."},{"content":"Designers and other objects can add or remove services at design time through the <ph id=\"ph1\">&lt;xref:System.ComponentModel.Design.IDesignerHost&gt;</ph> interface.","pos":[142,284],"source":" Designers and other objects can add or remove services at design time through the <xref:System.ComponentModel.Design.IDesignerHost> interface."}]}]},{"pos":[674,1207],"content":"Service containers can be contained by other service containers, forming a tree of service containers. By default, the <xref:System.ComponentModel.Design.IServiceContainer> interface adds services to the closest service container. When a service is added, it can be added with instructions to promote it. When a service is promoted, it is added to any parent service container, on up until the top of the service container tree is reached. This allows a designer to provide a global service that other objects in the process can use.","nodes":[{"content":"Service containers can be contained by other service containers, forming a tree of service containers. By default, the <xref:System.ComponentModel.Design.IServiceContainer> interface adds services to the closest service container. When a service is added, it can be added with instructions to promote it. When a service is promoted, it is added to any parent service container, on up until the top of the service container tree is reached. This allows a designer to provide a global service that other objects in the process can use.","pos":[0,533],"nodes":[{"content":"Service containers can be contained by other service containers, forming a tree of service containers.","pos":[0,102]},{"content":"By default, the <ph id=\"ph1\">&lt;xref:System.ComponentModel.Design.IServiceContainer&gt;</ph> interface adds services to the closest service container.","pos":[103,230],"source":" By default, the <xref:System.ComponentModel.Design.IServiceContainer> interface adds services to the closest service container."},{"content":"When a service is added, it can be added with instructions to promote it.","pos":[231,304]},{"content":"When a service is promoted, it is added to any parent service container, on up until the top of the service container tree is reached.","pos":[305,439]},{"content":"This allows a designer to provide a global service that other objects in the process can use.","pos":[440,533]}]}]}],"pos":[1158,2372],"yaml":true,"extradata":"MT"},{"content":"Adds the specified service to the service container.","nodes":[{"pos":[0,52],"content":"Adds the specified service to the service container.","nodes":[{"content":"Adds the specified service to the service container.","pos":[0,52]}]}],"pos":[4868,4921],"yaml":true},{"content":"The type of service to add.","nodes":[{"pos":[0,27],"content":"The type of service to add.","nodes":[{"content":"The type of service to add.","pos":[0,27]}]}],"pos":[5670,5698],"yaml":true},{"content":"A callback object that is used to create the service. This allows a service to be declared as available, but delays the creation of the object until the service is requested.","nodes":[{"pos":[0,174],"content":"A callback object that is used to create the service. This allows a service to be declared as available, but delays the creation of the object until the service is requested.","nodes":[{"content":"A callback object that is used to create the service. This allows a service to be declared as available, but delays the creation of the object until the service is requested.","pos":[0,174],"nodes":[{"content":"A callback object that is used to create the service.","pos":[0,53]},{"content":"This allows a service to be declared as available, but delays the creation of the object until the service is requested.","pos":[54,174]}]}]}],"pos":[5800,5975],"yaml":true},{"content":"Adds the specified service to the service container.","nodes":[{"pos":[0,52],"content":"Adds the specified service to the service container.","nodes":[{"content":"Adds the specified service to the service container.","pos":[0,52]}]}],"pos":[7414,7467],"yaml":true},{"content":"The type of service to add.","nodes":[{"pos":[0,27],"content":"The type of service to add.","nodes":[{"content":"The type of service to add.","pos":[0,27]}]}],"pos":[8178,8206],"yaml":true},{"content":"An instance of the service type to add. This object must implement or inherit from the type indicated by the <code>serviceType</code> parameter.","nodes":[{"pos":[0,144],"content":"An instance of the service type to add. This object must implement or inherit from the type indicated by the <code>serviceType</code> parameter.","nodes":[{"content":"An instance of the service type to add.","pos":[0,39]},{"content":"This object must implement or inherit from the type indicated by the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">serviceType</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter.","pos":[40,144],"source":" This object must implement or inherit from the type indicated by the <code>serviceType</code> parameter."}]}],"pos":[8277,8422],"yaml":true},{"content":"Adds the specified service to the service container, and optionally promotes the service to parent service containers.","nodes":[{"pos":[0,118],"content":"Adds the specified service to the service container, and optionally promotes the service to parent service containers.","nodes":[{"content":"Adds the specified service to the service container, and optionally promotes the service to parent service containers.","pos":[0,118]}]}],"pos":[10095,10214],"yaml":true},{"content":"The type of service to add.","nodes":[{"pos":[0,27],"content":"The type of service to add.","nodes":[{"content":"The type of service to add.","pos":[0,27]}]}],"pos":[10437,10465],"yaml":true},{"content":"A callback object that is used to create the service. This allows a service to be declared as available, but delays the creation of the object until the service is requested.","nodes":[{"pos":[0,174],"content":"A callback object that is used to create the service. This allows a service to be declared as available, but delays the creation of the object until the service is requested.","nodes":[{"content":"A callback object that is used to create the service. This allows a service to be declared as available, but delays the creation of the object until the service is requested.","pos":[0,174],"nodes":[{"content":"A callback object that is used to create the service.","pos":[0,53]},{"content":"This allows a service to be declared as available, but delays the creation of the object until the service is requested.","pos":[54,174]}]}]}],"pos":[10567,10742],"yaml":true},{"content":"`true` to promote this request to any parent service containers; otherwise, `false`.","nodes":[{"pos":[0,84],"content":"<ph id=\"ph1\">`true`</ph> to promote this request to any parent service containers; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` to promote this request to any parent service containers; otherwise, `false`."}],"pos":[10806,10893],"yaml":true},{"content":"Adds the specified service to the service container, and optionally promotes the service to any parent service containers.","nodes":[{"pos":[0,122],"content":"Adds the specified service to the service container, and optionally promotes the service to any parent service containers.","nodes":[{"content":"Adds the specified service to the service container, and optionally promotes the service to any parent service containers.","pos":[0,122]}]}],"pos":[12404,12527],"yaml":true},{"content":"The type of service to add.","nodes":[{"pos":[0,27],"content":"The type of service to add.","nodes":[{"content":"The type of service to add.","pos":[0,27]}]}],"pos":[12712,12740],"yaml":true},{"content":"An instance of the service type to add. This object must implement or inherit from the type indicated by the <code>serviceType</code> parameter.","nodes":[{"pos":[0,144],"content":"An instance of the service type to add. This object must implement or inherit from the type indicated by the <code>serviceType</code> parameter.","nodes":[{"content":"An instance of the service type to add.","pos":[0,39]},{"content":"This object must implement or inherit from the type indicated by the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">serviceType</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter.","pos":[40,144],"source":" This object must implement or inherit from the type indicated by the <code>serviceType</code> parameter."}]}],"pos":[12811,12956],"yaml":true},{"content":"`true` to promote this request to any parent service containers; otherwise, `false`.","nodes":[{"pos":[0,84],"content":"<ph id=\"ph1\">`true`</ph> to promote this request to any parent service containers; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` to promote this request to any parent service containers; otherwise, `false`."}],"pos":[13020,13107],"yaml":true},{"content":"Removes the specified service type from the service container.","nodes":[{"pos":[0,62],"content":"Removes the specified service type from the service container.","nodes":[{"content":"Removes the specified service type from the service container.","pos":[0,62]}]}],"pos":[14498,14561],"yaml":true},{"content":"The type of service to remove.","nodes":[{"pos":[0,30],"content":"The type of service to remove.","nodes":[{"content":"The type of service to remove.","pos":[0,30]}]}],"pos":[15257,15288],"yaml":true},{"content":"Removes the specified service type from the service container, and optionally promotes the service to parent service containers.","nodes":[{"pos":[0,128],"content":"Removes the specified service type from the service container, and optionally promotes the service to parent service containers.","nodes":[{"content":"Removes the specified service type from the service container, and optionally promotes the service to parent service containers.","pos":[0,128]}]}],"pos":[16754,16883],"yaml":true},{"content":"The type of service to remove.","nodes":[{"pos":[0,30],"content":"The type of service to remove.","nodes":[{"content":"The type of service to remove.","pos":[0,30]}]}],"pos":[17593,17624],"yaml":true},{"content":"`true` to promote this request to any parent service containers; otherwise, `false`.","nodes":[{"pos":[0,84],"content":"<ph id=\"ph1\">`true`</ph> to promote this request to any parent service containers; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` to promote this request to any parent service containers; otherwise, `false`."}],"pos":[17688,17775],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.ComponentModel.Design.IServiceContainer\n  commentId: T:System.ComponentModel.Design.IServiceContainer\n  id: IServiceContainer\n  children:\n  - System.ComponentModel.Design.IServiceContainer.AddService(System.Type,System.ComponentModel.Design.ServiceCreatorCallback)\n  - System.ComponentModel.Design.IServiceContainer.AddService(System.Type,System.Object)\n  - System.ComponentModel.Design.IServiceContainer.AddService(System.Type,System.ComponentModel.Design.ServiceCreatorCallback,System.Boolean)\n  - System.ComponentModel.Design.IServiceContainer.AddService(System.Type,System.Object,System.Boolean)\n  - System.ComponentModel.Design.IServiceContainer.RemoveService(System.Type)\n  - System.ComponentModel.Design.IServiceContainer.RemoveService(System.Type,System.Boolean)\n  langs:\n  - csharp\n  name: IServiceContainer\n  nameWithType: IServiceContainer\n  fullName: System.ComponentModel.Design.IServiceContainer\n  type: Interface\n  assemblies:\n  - System\n  - netstandard\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel.Design\n  summary: Provides a container for services.\n  remarks: \"A service container is, by definition, a service provider. In addition to providing services, it also provides a mechanism for adding and removing services. Services are a foundation of the .NET Framework design-time architecture. Services provide design-time objects access to specific features and methods implemented by a service object that provides a service or services.  \\n  \\n To obtain a service at design time, call the <xref:System.ComponentModel.Component.GetService%2A> method of a component sited in design mode. Designers and other objects can add or remove services at design time through the <xref:System.ComponentModel.Design.IDesignerHost> interface.  \\n  \\n Service containers can be contained by other service containers, forming a tree of service containers. By default, the <xref:System.ComponentModel.Design.IServiceContainer> interface adds services to the closest service container. When a service is added, it can be added with instructions to promote it. When a service is promoted, it is added to any parent service container, on up until the top of the service container tree is reached. This allows a designer to provide a global service that other objects in the process can use.\"\n  example:\n  - \"The following code example contains the code for a <xref:System.Windows.Forms.Form> that is configured to demonstrate the behavior of a network of linked service containers.  \\n  \\n [!code-cpp[IServiceContainerExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/IServiceContainerExample/CPP/serviceform.cpp#1)]\\n [!code-csharp[IServiceContainerExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/IServiceContainerExample/CS/serviceform.cs#1)]\\n [!code-vb[IServiceContainerExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/IServiceContainerExample/VB/serviceform.vb#1)]\"\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public interface IServiceContainer : IServiceProvider\n  derivedClasses:\n  - System.ComponentModel.Design.IDesignerHost\n  - System.ComponentModel.Design.ServiceContainer\n  implements:\n  - System.IServiceProvider\n  attributes:\n  - type: System.Runtime.InteropServices.ComVisibleAttribute\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design/IServiceContainer.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.Design.IServiceContainer.AddService(System.Type,System.ComponentModel.Design.ServiceCreatorCallback)\n  commentId: M:System.ComponentModel.Design.IServiceContainer.AddService(System.Type,System.ComponentModel.Design.ServiceCreatorCallback)\n  id: AddService(System.Type,System.ComponentModel.Design.ServiceCreatorCallback)\n  parent: System.ComponentModel.Design.IServiceContainer\n  langs:\n  - csharp\n  name: AddService(Type, ServiceCreatorCallback)\n  nameWithType: IServiceContainer.AddService(Type, ServiceCreatorCallback)\n  fullName: IServiceContainer.AddService(Type, ServiceCreatorCallback)\n  type: Method\n  assemblies:\n  - System\n  - netstandard\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel.Design\n  summary: Adds the specified service to the service container.\n  remarks: ''\n  example:\n  - \"The following example illustrates how to add a service to an <xref:System.ComponentModel.Design.IServiceContainer>.  \\n  \\n [!code-cpp[ServiceContainerExample#3](~/samples/snippets/cpp/VS_Snippets_Winforms/ServiceContainerExample/CPP/form1.cpp#3)]\\n [!code-csharp[ServiceContainerExample#3](~/samples/snippets/csharp/VS_Snippets_Winforms/ServiceContainerExample/CS/form1.cs#3)]\\n [!code-vb[ServiceContainerExample#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ServiceContainerExample/VB/form1.vb#3)]\"\n  syntax:\n    content: public void AddService (Type serviceType, System.ComponentModel.Design.ServiceCreatorCallback callback);\n    parameters:\n    - id: serviceType\n      type: System.Type\n      description: The type of service to add.\n    - id: callback\n      type: System.ComponentModel.Design.ServiceCreatorCallback\n      description: A callback object that is used to create the service. This allows a service to be declared as available, but delays the creation of the object until the service is requested.\n  overload: System.ComponentModel.Design.IServiceContainer.AddService*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design/IServiceContainer.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.Design.IServiceContainer.AddService(System.Type,System.Object)\n  commentId: M:System.ComponentModel.Design.IServiceContainer.AddService(System.Type,System.Object)\n  id: AddService(System.Type,System.Object)\n  parent: System.ComponentModel.Design.IServiceContainer\n  langs:\n  - csharp\n  name: AddService(Type, Object)\n  nameWithType: IServiceContainer.AddService(Type, Object)\n  fullName: IServiceContainer.AddService(Type, Object)\n  type: Method\n  assemblies:\n  - System\n  - netstandard\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel.Design\n  summary: Adds the specified service to the service container.\n  remarks: ''\n  example:\n  - \"The following example illustrates how to add a service to an <xref:System.ComponentModel.Design.IServiceContainer>.  \\n  \\n [!code-cpp[ServiceContainerExample#2](~/samples/snippets/cpp/VS_Snippets_Winforms/ServiceContainerExample/CPP/form1.cpp#2)]\\n [!code-csharp[ServiceContainerExample#2](~/samples/snippets/csharp/VS_Snippets_Winforms/ServiceContainerExample/CS/form1.cs#2)]\\n [!code-vb[ServiceContainerExample#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ServiceContainerExample/VB/form1.vb#2)]\"\n  syntax:\n    content: public void AddService (Type serviceType, object serviceInstance);\n    parameters:\n    - id: serviceType\n      type: System.Type\n      description: The type of service to add.\n    - id: serviceInstance\n      type: System.Object\n      description: An instance of the service type to add. This object must implement or inherit from the type indicated by the <code>serviceType</code> parameter.\n  overload: System.ComponentModel.Design.IServiceContainer.AddService*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design/IServiceContainer.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.Design.IServiceContainer.AddService(System.Type,System.ComponentModel.Design.ServiceCreatorCallback,System.Boolean)\n  commentId: M:System.ComponentModel.Design.IServiceContainer.AddService(System.Type,System.ComponentModel.Design.ServiceCreatorCallback,System.Boolean)\n  id: AddService(System.Type,System.ComponentModel.Design.ServiceCreatorCallback,System.Boolean)\n  parent: System.ComponentModel.Design.IServiceContainer\n  langs:\n  - csharp\n  name: AddService(Type, ServiceCreatorCallback, Boolean)\n  nameWithType: IServiceContainer.AddService(Type, ServiceCreatorCallback, Boolean)\n  fullName: IServiceContainer.AddService(Type, ServiceCreatorCallback, Boolean)\n  type: Method\n  assemblies:\n  - System\n  - netstandard\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel.Design\n  summary: Adds the specified service to the service container, and optionally promotes the service to parent service containers.\n  syntax:\n    content: public void AddService (Type serviceType, System.ComponentModel.Design.ServiceCreatorCallback callback, bool promote);\n    parameters:\n    - id: serviceType\n      type: System.Type\n      description: The type of service to add.\n    - id: callback\n      type: System.ComponentModel.Design.ServiceCreatorCallback\n      description: A callback object that is used to create the service. This allows a service to be declared as available, but delays the creation of the object until the service is requested.\n    - id: promote\n      type: System.Boolean\n      description: '`true` to promote this request to any parent service containers; otherwise, `false`.'\n  overload: System.ComponentModel.Design.IServiceContainer.AddService*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design/IServiceContainer.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.Design.IServiceContainer.AddService(System.Type,System.Object,System.Boolean)\n  commentId: M:System.ComponentModel.Design.IServiceContainer.AddService(System.Type,System.Object,System.Boolean)\n  id: AddService(System.Type,System.Object,System.Boolean)\n  parent: System.ComponentModel.Design.IServiceContainer\n  langs:\n  - csharp\n  name: AddService(Type, Object, Boolean)\n  nameWithType: IServiceContainer.AddService(Type, Object, Boolean)\n  fullName: IServiceContainer.AddService(Type, Object, Boolean)\n  type: Method\n  assemblies:\n  - System\n  - netstandard\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel.Design\n  summary: Adds the specified service to the service container, and optionally promotes the service to any parent service containers.\n  syntax:\n    content: public void AddService (Type serviceType, object serviceInstance, bool promote);\n    parameters:\n    - id: serviceType\n      type: System.Type\n      description: The type of service to add.\n    - id: serviceInstance\n      type: System.Object\n      description: An instance of the service type to add. This object must implement or inherit from the type indicated by the <code>serviceType</code> parameter.\n    - id: promote\n      type: System.Boolean\n      description: '`true` to promote this request to any parent service containers; otherwise, `false`.'\n  overload: System.ComponentModel.Design.IServiceContainer.AddService*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design/IServiceContainer.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.Design.IServiceContainer.RemoveService(System.Type)\n  commentId: M:System.ComponentModel.Design.IServiceContainer.RemoveService(System.Type)\n  id: RemoveService(System.Type)\n  parent: System.ComponentModel.Design.IServiceContainer\n  langs:\n  - csharp\n  name: RemoveService(Type)\n  nameWithType: IServiceContainer.RemoveService(Type)\n  fullName: IServiceContainer.RemoveService(Type)\n  type: Method\n  assemblies:\n  - System\n  - netstandard\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel.Design\n  summary: Removes the specified service type from the service container.\n  remarks: ''\n  example:\n  - \"The following example demonstrates how to remove a service from an <xref:System.ComponentModel.Design.IServiceContainer>.  \\n  \\n [!code-cpp[ServiceContainerExample#4](~/samples/snippets/cpp/VS_Snippets_Winforms/ServiceContainerExample/CPP/form1.cpp#4)]\\n [!code-csharp[ServiceContainerExample#4](~/samples/snippets/csharp/VS_Snippets_Winforms/ServiceContainerExample/CS/form1.cs#4)]\\n [!code-vb[ServiceContainerExample#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ServiceContainerExample/VB/form1.vb#4)]\"\n  syntax:\n    content: public void RemoveService (Type serviceType);\n    parameters:\n    - id: serviceType\n      type: System.Type\n      description: The type of service to remove.\n  overload: System.ComponentModel.Design.IServiceContainer.RemoveService*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design/IServiceContainer.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.Design.IServiceContainer.RemoveService(System.Type,System.Boolean)\n  commentId: M:System.ComponentModel.Design.IServiceContainer.RemoveService(System.Type,System.Boolean)\n  id: RemoveService(System.Type,System.Boolean)\n  parent: System.ComponentModel.Design.IServiceContainer\n  langs:\n  - csharp\n  name: RemoveService(Type, Boolean)\n  nameWithType: IServiceContainer.RemoveService(Type, Boolean)\n  fullName: IServiceContainer.RemoveService(Type, Boolean)\n  type: Method\n  assemblies:\n  - System\n  - netstandard\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel.Design\n  summary: Removes the specified service type from the service container, and optionally promotes the service to parent service containers.\n  remarks: ''\n  example:\n  - \"The following example demonstrates how to remove a service from an <xref:System.ComponentModel.Design.IServiceContainer>.  \\n  \\n [!code-cpp[ServiceContainerExample#4](~/samples/snippets/cpp/VS_Snippets_Winforms/ServiceContainerExample/CPP/form1.cpp#4)]\\n [!code-csharp[ServiceContainerExample#4](~/samples/snippets/csharp/VS_Snippets_Winforms/ServiceContainerExample/CS/form1.cs#4)]\\n [!code-vb[ServiceContainerExample#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ServiceContainerExample/VB/form1.vb#4)]\"\n  syntax:\n    content: public void RemoveService (Type serviceType, bool promote);\n    parameters:\n    - id: serviceType\n      type: System.Type\n      description: The type of service to remove.\n    - id: promote\n      type: System.Boolean\n      description: '`true` to promote this request to any parent service containers; otherwise, `false`.'\n  overload: System.ComponentModel.Design.IServiceContainer.RemoveService*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design/IServiceContainer.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\nreferences:\n- uid: System.ComponentModel.Design.IServiceContainer.AddService(System.Type,System.ComponentModel.Design.ServiceCreatorCallback)\n  parent: System.ComponentModel.Design.IServiceContainer\n  isExternal: false\n  name: AddService(Type, ServiceCreatorCallback)\n  nameWithType: IServiceContainer.AddService(Type, ServiceCreatorCallback)\n  fullName: IServiceContainer.AddService(Type, ServiceCreatorCallback)\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.ComponentModel.Design.ServiceCreatorCallback\n  parent: System.ComponentModel.Design\n  isExternal: false\n  name: ServiceCreatorCallback\n  nameWithType: ServiceCreatorCallback\n  fullName: System.ComponentModel.Design.ServiceCreatorCallback\n- uid: System.ComponentModel.Design.IServiceContainer.AddService(System.Type,System.Object)\n  parent: System.ComponentModel.Design.IServiceContainer\n  isExternal: false\n  name: AddService(Type, Object)\n  nameWithType: IServiceContainer.AddService(Type, Object)\n  fullName: IServiceContainer.AddService(Type, Object)\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.ComponentModel.Design.IServiceContainer.AddService(System.Type,System.ComponentModel.Design.ServiceCreatorCallback,System.Boolean)\n  parent: System.ComponentModel.Design.IServiceContainer\n  isExternal: false\n  name: AddService(Type, ServiceCreatorCallback, Boolean)\n  nameWithType: IServiceContainer.AddService(Type, ServiceCreatorCallback, Boolean)\n  fullName: IServiceContainer.AddService(Type, ServiceCreatorCallback, Boolean)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.ComponentModel.Design.IServiceContainer.AddService(System.Type,System.Object,System.Boolean)\n  parent: System.ComponentModel.Design.IServiceContainer\n  isExternal: false\n  name: AddService(Type, Object, Boolean)\n  nameWithType: IServiceContainer.AddService(Type, Object, Boolean)\n  fullName: IServiceContainer.AddService(Type, Object, Boolean)\n- uid: System.ComponentModel.Design.IServiceContainer.RemoveService(System.Type)\n  parent: System.ComponentModel.Design.IServiceContainer\n  isExternal: false\n  name: RemoveService(Type)\n  nameWithType: IServiceContainer.RemoveService(Type)\n  fullName: IServiceContainer.RemoveService(Type)\n- uid: System.ComponentModel.Design.IServiceContainer.RemoveService(System.Type,System.Boolean)\n  parent: System.ComponentModel.Design.IServiceContainer\n  isExternal: false\n  name: RemoveService(Type, Boolean)\n  nameWithType: IServiceContainer.RemoveService(Type, Boolean)\n  fullName: IServiceContainer.RemoveService(Type, Boolean)\n- uid: System.ComponentModel.Design.IServiceContainer.AddService*\n  parent: System.ComponentModel.Design.IServiceContainer\n  isExternal: false\n  name: AddService\n  nameWithType: IServiceContainer.AddService\n  fullName: IServiceContainer.AddService\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design/IServiceContainer.xml\n- uid: System.ComponentModel.Design.IServiceContainer.RemoveService*\n  parent: System.ComponentModel.Design.IServiceContainer\n  isExternal: false\n  name: RemoveService\n  nameWithType: IServiceContainer.RemoveService\n  fullName: IServiceContainer.RemoveService\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel.Design/IServiceContainer.xml\n- uid: System.IServiceProvider\n  parent: System\n  isExternal: false\n  name: IServiceProvider\n  nameWithType: IServiceProvider\n  fullName: System.IServiceProvider\n"}