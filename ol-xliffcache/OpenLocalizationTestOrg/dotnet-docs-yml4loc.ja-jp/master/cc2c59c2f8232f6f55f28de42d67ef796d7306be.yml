### YamlMime:ManagedReference
items:
- uid: System.Net.Http.HttpMessageInvoker
  commentId: T:System.Net.Http.HttpMessageInvoker
  id: HttpMessageInvoker
  children:
  - System.Net.Http.HttpMessageInvoker.#ctor(System.Net.Http.HttpMessageHandler)
  - System.Net.Http.HttpMessageInvoker.#ctor(System.Net.Http.HttpMessageHandler,System.Boolean)
  - System.Net.Http.HttpMessageInvoker.Dispose
  - System.Net.Http.HttpMessageInvoker.Dispose(System.Boolean)
  - System.Net.Http.HttpMessageInvoker.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)
  langs:
  - csharp
  name: HttpMessageInvoker
  nameWithType: HttpMessageInvoker
  fullName: System.Net.Http.HttpMessageInvoker
  type: Class
  assemblies:
  - System.Net.Http
  - netstandard
  namespace: System.Net.Http
  summary: A specialty class that allows applications to call the <xref href="System.Net.Http.HttpMessageInvoker.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)"></xref> method on an Http handler chain.
  remarks: "This class is the base type for <xref:System.Net.Http.HttpClient> and other message originators.  \n  \n Most applications that are connecting to a web site will use one of the <xref:System.Net.Http.HttpClient.SendAsync%2A> methods on the <xref:System.Net.Http.HttpClient> class."
  syntax:
    content: 'public class HttpMessageInvoker : IDisposable'
  inheritance:
  - System.Object
  derivedClasses:
  - System.Net.Http.HttpClient
  implements:
  - System.IDisposable
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Http/HttpMessageInvoker.xml
  ms.author: bobdel
  manager: markl
- uid: System.Net.Http.HttpMessageInvoker.#ctor(System.Net.Http.HttpMessageHandler)
  commentId: M:System.Net.Http.HttpMessageInvoker.#ctor(System.Net.Http.HttpMessageHandler)
  id: '#ctor(System.Net.Http.HttpMessageHandler)'
  parent: System.Net.Http.HttpMessageInvoker
  langs:
  - csharp
  name: HttpMessageInvoker(HttpMessageHandler)
  nameWithType: HttpMessageInvoker.HttpMessageInvoker(HttpMessageHandler)
  fullName: HttpMessageInvoker.HttpMessageInvoker(HttpMessageHandler)
  type: Constructor
  assemblies:
  - System.Net.Http
  - netstandard
  namespace: System.Net.Http
  summary: Initializes an instance of a <xref href="System.Net.Http.HttpMessageInvoker"></xref> class with a specific <xref href="System.Net.Http.HttpMessageHandler"></xref>.
  syntax:
    content: public HttpMessageInvoker (System.Net.Http.HttpMessageHandler handler);
    parameters:
    - id: handler
      type: System.Net.Http.HttpMessageHandler
      description: The <xref href="System.Net.Http.HttpMessageHandler"></xref> responsible for processing the HTTP response messages.
  overload: System.Net.Http.HttpMessageInvoker.#ctor*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Http/HttpMessageInvoker.xml
  ms.author: bobdel
  manager: markl
- uid: System.Net.Http.HttpMessageInvoker.#ctor(System.Net.Http.HttpMessageHandler,System.Boolean)
  commentId: M:System.Net.Http.HttpMessageInvoker.#ctor(System.Net.Http.HttpMessageHandler,System.Boolean)
  id: '#ctor(System.Net.Http.HttpMessageHandler,System.Boolean)'
  parent: System.Net.Http.HttpMessageInvoker
  langs:
  - csharp
  name: HttpMessageInvoker(HttpMessageHandler, Boolean)
  nameWithType: HttpMessageInvoker.HttpMessageInvoker(HttpMessageHandler, Boolean)
  fullName: HttpMessageInvoker.HttpMessageInvoker(HttpMessageHandler, Boolean)
  type: Constructor
  assemblies:
  - System.Net.Http
  - netstandard
  namespace: System.Net.Http
  summary: Initializes an instance of a <xref href="System.Net.Http.HttpMessageInvoker"></xref> class with a specific <xref href="System.Net.Http.HttpMessageHandler"></xref>.
  syntax:
    content: public HttpMessageInvoker (System.Net.Http.HttpMessageHandler handler, bool disposeHandler);
    parameters:
    - id: handler
      type: System.Net.Http.HttpMessageHandler
      description: The <xref href="System.Net.Http.HttpMessageHandler"></xref> responsible for processing the HTTP response messages.
    - id: disposeHandler
      type: System.Boolean
      description: '`true` if the inner handler should be disposed of by Dispose(), `false` if you intend to reuse the inner handler.'
  overload: System.Net.Http.HttpMessageInvoker.#ctor*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Http/HttpMessageInvoker.xml
  ms.author: bobdel
  manager: markl
- uid: System.Net.Http.HttpMessageInvoker.Dispose
  commentId: M:System.Net.Http.HttpMessageInvoker.Dispose
  id: Dispose
  parent: System.Net.Http.HttpMessageInvoker
  langs:
  - csharp
  name: Dispose()
  nameWithType: HttpMessageInvoker.Dispose()
  fullName: HttpMessageInvoker.Dispose()
  type: Method
  assemblies:
  - System.Net.Http
  - netstandard
  namespace: System.Net.Http
  summary: Releases the unmanaged resources and disposes of the managed resources used by the <xref href="System.Net.Http.HttpMessageInvoker"></xref>.
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.Net.Http.HttpMessageInvoker.Dispose*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Http/HttpMessageInvoker.xml
  ms.author: bobdel
  manager: markl
- uid: System.Net.Http.HttpMessageInvoker.Dispose(System.Boolean)
  commentId: M:System.Net.Http.HttpMessageInvoker.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Net.Http.HttpMessageInvoker
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: HttpMessageInvoker.Dispose(Boolean)
  fullName: HttpMessageInvoker.Dispose(Boolean)
  type: Method
  assemblies:
  - System.Net.Http
  - netstandard
  namespace: System.Net.Http
  summary: Releases the unmanaged resources used by the <xref href="System.Net.Http.HttpMessageInvoker"></xref> and optionally disposes of the managed resources.
  syntax:
    content: protected virtual void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: '`true` to release both managed and unmanaged resources; `false` to releases only unmanaged resources.'
  overload: System.Net.Http.HttpMessageInvoker.Dispose*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Http/HttpMessageInvoker.xml
  ms.author: bobdel
  manager: markl
- uid: System.Net.Http.HttpMessageInvoker.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)
  commentId: M:System.Net.Http.HttpMessageInvoker.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)
  id: SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)
  parent: System.Net.Http.HttpMessageInvoker
  langs:
  - csharp
  name: SendAsync(HttpRequestMessage, CancellationToken)
  nameWithType: HttpMessageInvoker.SendAsync(HttpRequestMessage, CancellationToken)
  fullName: HttpMessageInvoker.SendAsync(HttpRequestMessage, CancellationToken)
  type: Method
  assemblies:
  - System.Net.Http
  - netstandard
  namespace: System.Net.Http
  summary: Send an HTTP request as an asynchronous operation.
  remarks: "This operation will not block. The returned <xref:System.Threading.Tasks.Task%601> object will complete once the entire response including content is read.  \n  \n Most applications that are connecting to a web site will use one of the <xref:System.Net.Http.HttpClient.SendAsync%2A> methods on the <xref:System.Net.Http.HttpClient> class."
  syntax:
    content: public virtual System.Threading.Tasks.Task<System.Net.Http.HttpResponseMessage> SendAsync (System.Net.Http.HttpRequestMessage request, System.Threading.CancellationToken cancellationToken);
    parameters:
    - id: request
      type: System.Net.Http.HttpRequestMessage
      description: The HTTP request message to send.
    - id: cancellationToken
      type: System.Threading.CancellationToken
      description: The cancellation token to cancel operation.
    return:
      type: System.Threading.Tasks.Task{System.Net.Http.HttpResponseMessage}
      description: The task object representing the asynchronous operation.
  overload: System.Net.Http.HttpMessageInvoker.SendAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code>request</code> was `null`.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Http/HttpMessageInvoker.xml
  ms.author: bobdel
  manager: markl
references:
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.ArgumentNullException
  parent: System
  isExternal: false
  name: ArgumentNullException
  nameWithType: ArgumentNullException
  fullName: System.ArgumentNullException
- uid: System.Net.Http.HttpMessageInvoker.#ctor(System.Net.Http.HttpMessageHandler)
  parent: System.Net.Http.HttpMessageInvoker
  isExternal: false
  name: HttpMessageInvoker(HttpMessageHandler)
  nameWithType: HttpMessageInvoker.HttpMessageInvoker(HttpMessageHandler)
  fullName: HttpMessageInvoker.HttpMessageInvoker(HttpMessageHandler)
- uid: System.Net.Http.HttpMessageHandler
  parent: System.Net.Http
  isExternal: false
  name: HttpMessageHandler
  nameWithType: HttpMessageHandler
  fullName: System.Net.Http.HttpMessageHandler
- uid: System.Net.Http.HttpMessageInvoker.#ctor(System.Net.Http.HttpMessageHandler,System.Boolean)
  parent: System.Net.Http.HttpMessageInvoker
  isExternal: false
  name: HttpMessageInvoker(HttpMessageHandler, Boolean)
  nameWithType: HttpMessageInvoker.HttpMessageInvoker(HttpMessageHandler, Boolean)
  fullName: HttpMessageInvoker.HttpMessageInvoker(HttpMessageHandler, Boolean)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Net.Http.HttpMessageInvoker.Dispose
  parent: System.Net.Http.HttpMessageInvoker
  isExternal: false
  name: Dispose()
  nameWithType: HttpMessageInvoker.Dispose()
  fullName: HttpMessageInvoker.Dispose()
- uid: System.Net.Http.HttpMessageInvoker.Dispose(System.Boolean)
  parent: System.Net.Http.HttpMessageInvoker
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: HttpMessageInvoker.Dispose(Boolean)
  fullName: HttpMessageInvoker.Dispose(Boolean)
- uid: System.Net.Http.HttpMessageInvoker.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)
  parent: System.Net.Http.HttpMessageInvoker
  isExternal: false
  name: SendAsync(HttpRequestMessage, CancellationToken)
  nameWithType: HttpMessageInvoker.SendAsync(HttpRequestMessage, CancellationToken)
  fullName: HttpMessageInvoker.SendAsync(HttpRequestMessage, CancellationToken)
- uid: System.Threading.Tasks.Task`1
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
- uid: System.Net.Http.HttpResponseMessage
  name: HttpResponseMessage
  nameWithType: HttpResponseMessage
  fullName: System.Net.Http.HttpResponseMessage
- uid: System.Threading.Tasks.Task{System.Net.Http.HttpResponseMessage}
  parent: System.Threading.Tasks
  isExternal: false
  name: Task<HttpResponseMessage>
  nameWithType: Task<HttpResponseMessage>
  fullName: System.Threading.Tasks.Task<System.Net.Http.HttpResponseMessage>
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Net.Http.HttpResponseMessage
    name: HttpResponseMessage
    nameWithType: HttpResponseMessage
    fullName: System.Net.Http.HttpResponseMessage
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Net.Http.HttpRequestMessage
  parent: System.Net.Http
  isExternal: false
  name: HttpRequestMessage
  nameWithType: HttpRequestMessage
  fullName: System.Net.Http.HttpRequestMessage
- uid: System.Threading.CancellationToken
  parent: System.Threading
  isExternal: false
  name: CancellationToken
  nameWithType: CancellationToken
  fullName: System.Threading.CancellationToken
- uid: System.Net.Http.HttpMessageInvoker.#ctor*
  parent: System.Net.Http.HttpMessageInvoker
  isExternal: false
  name: HttpMessageInvoker
  nameWithType: HttpMessageInvoker.HttpMessageInvoker
  fullName: HttpMessageInvoker.HttpMessageInvoker
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Http/HttpMessageInvoker.xml
- uid: System.Net.Http.HttpMessageInvoker.Dispose*
  parent: System.Net.Http.HttpMessageInvoker
  isExternal: false
  name: Dispose
  nameWithType: HttpMessageInvoker.Dispose
  fullName: HttpMessageInvoker.Dispose
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Http/HttpMessageInvoker.xml
- uid: System.Net.Http.HttpMessageInvoker.SendAsync*
  parent: System.Net.Http.HttpMessageInvoker
  isExternal: false
  name: SendAsync
  nameWithType: HttpMessageInvoker.SendAsync
  fullName: HttpMessageInvoker.SendAsync
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.1
  - netstandard-1.2
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Http/HttpMessageInvoker.xml
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: Object.Equals(Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: Object.Equals(Object, Object)
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: false
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: Object.GetHashCode()
- uid: System.Object.GetType
  parent: System.Object
  isExternal: false
  name: GetType()
  nameWithType: Object.GetType()
  fullName: Object.GetType()
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: false
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: Object.MemberwiseClone()
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: Object.ReferenceEquals(Object, Object)
- uid: System.Object.ToString
  parent: System.Object
  isExternal: false
  name: ToString()
  nameWithType: Object.ToString()
  fullName: Object.ToString()
- uid: System.IDisposable
  parent: System
  isExternal: false
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
