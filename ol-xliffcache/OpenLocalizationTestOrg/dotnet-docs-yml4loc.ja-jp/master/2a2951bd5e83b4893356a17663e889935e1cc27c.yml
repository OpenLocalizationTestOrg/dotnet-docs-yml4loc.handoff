### YamlMime:ManagedReference
items:
- uid: System.Web.Security.RolePrincipal
  commentId: T:System.Web.Security.RolePrincipal
  id: RolePrincipal
  children:
  - System.Web.Security.RolePrincipal.#ctor(System.Security.Principal.IIdentity)
  - System.Web.Security.RolePrincipal.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Web.Security.RolePrincipal.#ctor(System.Security.Principal.IIdentity,System.String)
  - System.Web.Security.RolePrincipal.#ctor(System.String,System.Security.Principal.IIdentity)
  - System.Web.Security.RolePrincipal.#ctor(System.String,System.Security.Principal.IIdentity,System.String)
  - System.Web.Security.RolePrincipal.CachedListChanged
  - System.Web.Security.RolePrincipal.CookiePath
  - System.Web.Security.RolePrincipal.Expired
  - System.Web.Security.RolePrincipal.ExpireDate
  - System.Web.Security.RolePrincipal.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Web.Security.RolePrincipal.GetRoles
  - System.Web.Security.RolePrincipal.Identity
  - System.Web.Security.RolePrincipal.IsInRole(System.String)
  - System.Web.Security.RolePrincipal.IsRoleListCached
  - System.Web.Security.RolePrincipal.IssueDate
  - System.Web.Security.RolePrincipal.ProviderName
  - System.Web.Security.RolePrincipal.SetDirty
  - System.Web.Security.RolePrincipal.ToEncryptedTicket
  - System.Web.Security.RolePrincipal.Version
  - System.Web.Security.RolePrincipal.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  langs:
  - csharp
  name: RolePrincipal
  nameWithType: RolePrincipal
  fullName: System.Web.Security.RolePrincipal
  type: Class
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: Represents security information for the current HTTP request, including role membership. This class cannot be inherited.
  remarks: "The <xref:System.Web.Security.RolePrincipal> object implements the <xref:System.Security.Principal.IPrincipal> interface and represents the current security context for the HTTP request.  \n  \n When role management is enabled (see <xref:System.Web.Security.Roles>), the <xref:System.Web.Security.RoleManagerModule> assigns a <xref:System.Web.Security.RolePrincipal> object to the <xref:System.Web.HttpContext.User%2A> property of the <xref:System.Web.HttpContext.Current%2A><xref:System.Web.HttpContext>.  \n  \n The <xref:System.Web.Security.RolePrincipal> class exposes the security identity for the current HTTP request and additionally performs checks for role membership. If <xref:System.Web.Security.Roles.CacheRolesInCookie%2A> is `true`, then the <xref:System.Web.Security.RolePrincipal> object manages the cached list of roles and looks up role membership for the current user in the cached list first, then the role <xref:System.Web.Security.Roles.Provider%2A>. If <xref:System.Web.Security.Roles.CacheRolesInCookie%2A> is `false`, the <xref:System.Web.Security.RolePrincipal> object always looks up role membership using the role provider.  \n  \n The <xref:System.Web.Security.RolePrincipal> object encrypts and decrypts role information cached in the cookie identified by the <xref:System.Web.Security.Roles.CookieName%2A> based on the <xref:System.Web.Security.Roles.CookieProtectionValue%2A>."
  syntax:
    content: 'public class RolePrincipal : System.Security.Claims.ClaimsPrincipal, System.Runtime.Serialization.ISerializable'
  inheritance:
  - System.Object
  - System.Security.Claims.ClaimsPrincipal
  implements:
  - System.Runtime.Serialization.ISerializable
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  - System.Security.Claims.ClaimsPrincipal.AddIdentities(System.Collections.Generic.IEnumerable{System.Security.Claims.ClaimsIdentity})
  - System.Security.Claims.ClaimsPrincipal.AddIdentity(System.Security.Claims.ClaimsIdentity)
  - System.Security.Claims.ClaimsPrincipal.Claims
  - System.Security.Claims.ClaimsPrincipal.ClaimsPrincipalSelector
  - System.Security.Claims.ClaimsPrincipal.Clone
  - System.Security.Claims.ClaimsPrincipal.CreateClaimsIdentity(System.IO.BinaryReader)
  - System.Security.Claims.ClaimsPrincipal.Current
  - System.Security.Claims.ClaimsPrincipal.CustomSerializationData
  - System.Security.Claims.ClaimsPrincipal.FindAll(System.Predicate{System.Security.Claims.Claim})
  - System.Security.Claims.ClaimsPrincipal.FindAll(System.String)
  - System.Security.Claims.ClaimsPrincipal.FindFirst(System.Predicate{System.Security.Claims.Claim})
  - System.Security.Claims.ClaimsPrincipal.FindFirst(System.String)
  - System.Security.Claims.ClaimsPrincipal.HasClaim(System.Predicate{System.Security.Claims.Claim})
  - System.Security.Claims.ClaimsPrincipal.HasClaim(System.String,System.String)
  - System.Security.Claims.ClaimsPrincipal.Identities
  - System.Security.Claims.ClaimsPrincipal.PrimaryIdentitySelector
  - System.Security.Claims.ClaimsPrincipal.WriteTo(System.IO.BinaryWriter)
  - System.Security.Claims.ClaimsPrincipal.WriteTo(System.IO.BinaryWriter,System.Byte[])
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Security/RolePrincipal.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.Security.RolePrincipal.#ctor(System.Security.Principal.IIdentity)
  commentId: M:System.Web.Security.RolePrincipal.#ctor(System.Security.Principal.IIdentity)
  id: '#ctor(System.Security.Principal.IIdentity)'
  parent: System.Web.Security.RolePrincipal
  langs:
  - csharp
  name: RolePrincipal(IIdentity)
  nameWithType: RolePrincipal.RolePrincipal(IIdentity)
  fullName: RolePrincipal.RolePrincipal(IIdentity)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: Instantiates a <xref href="System.Web.Security.RolePrincipal"></xref> object for the specified <code>identity</code>.
  remarks: "This overload of the <xref:System.Web.Security.RolePrincipal.%23ctor%2A> constructor creates a new <xref:System.Web.Security.RolePrincipal> object and initializes its property values. Cached role information is not read from the cookie identified by the <xref:System.Web.Security.Roles.CookieName%2A> property. The <xref:System.Web.Security.RolePrincipal.ProviderName%2A> property is set to the <xref:System.Configuration.Provider.ProviderBase.Name%2A> of the default role provider.  \n  \n For information on enabling role management, see the <xref:System.Web.Security.Roles> class."
  example:
  - "The following code example creates a new <xref:System.Web.Security.RolePrincipal> object. If <xref:System.Web.Security.Roles.CacheRolesInCookie%2A> is `true`, the example creates the <xref:System.Web.Security.RolePrincipal> with cookie information from the cookie identified by the <xref:System.Web.Security.Roles.CookieName%2A> property.  \n  \n [!code-csharp[System.Web.Security.RolePrincipal#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.RolePrincipal/CS/snippetscs.aspx#2)]\n [!code-vb[System.Web.Security.RolePrincipal#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.RolePrincipal/VB/snippetsvb.aspx#2)]"
  syntax:
    content: public RolePrincipal (System.Security.Principal.IIdentity identity);
    parameters:
    - id: identity
      type: System.Security.Principal.IIdentity
      description: The user identity to create the <xref href="System.Web.Security.RolePrincipal"></xref> for.
  overload: System.Web.Security.RolePrincipal.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>identity</code> is `null`.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Security/RolePrincipal.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.Security.RolePrincipal.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  commentId: M:System.Web.Security.RolePrincipal.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: '#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)'
  parent: System.Web.Security.RolePrincipal
  langs:
  - csharp
  name: RolePrincipal(SerializationInfo, StreamingContext)
  nameWithType: RolePrincipal.RolePrincipal(SerializationInfo, StreamingContext)
  fullName: RolePrincipal.RolePrincipal(SerializationInfo, StreamingContext)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: Initializes a new instance of the <xref href="System.Web.Security.RolePrincipal"></xref> class using information that is contained in the specified <xref href="System.Runtime.Serialization.SerializationInfo"></xref> object and using the specified streaming context.
  syntax:
    content: protected RolePrincipal (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: The <xref href="System.Runtime.Serialization.SerializationInfo"></xref> object to populate with data.
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: The destination for this serialization.
  overload: System.Web.Security.RolePrincipal.#ctor*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Security/RolePrincipal.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.Security.RolePrincipal.#ctor(System.Security.Principal.IIdentity,System.String)
  commentId: M:System.Web.Security.RolePrincipal.#ctor(System.Security.Principal.IIdentity,System.String)
  id: '#ctor(System.Security.Principal.IIdentity,System.String)'
  parent: System.Web.Security.RolePrincipal
  langs:
  - csharp
  name: RolePrincipal(IIdentity, String)
  nameWithType: RolePrincipal.RolePrincipal(IIdentity, String)
  fullName: RolePrincipal.RolePrincipal(IIdentity, String)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: Instantiates a <xref href="System.Web.Security.RolePrincipal"></xref> object for the specified <code>identity</code> with role information from the specified <code>encryptedTicket</code>.
  remarks: "This overload of the <xref:System.Web.Security.RolePrincipal.%23ctor%2A> constructor creates a new <xref:System.Web.Security.RolePrincipal> object and initializes its property values. Role information for the current user is read from the supplied `encryptedTicket` and cached with the <xref:System.Web.Security.RolePrincipal> object. The <xref:System.Web.Security.RolePrincipal.ProviderName%2A> property is set to the <xref:System.Configuration.Provider.ProviderBase.Name%2A> of the default role provider.  \n  \n For information on enabling role management, see the <xref:System.Web.Security.Roles> class."
  example:
  - "The following code example creates a new <xref:System.Web.Security.RolePrincipal> object. If <xref:System.Web.Security.Roles.CacheRolesInCookie%2A> is `true`, the example creates the <xref:System.Web.Security.RolePrincipal> with cookie information from the cookie identified by the <xref:System.Web.Security.Roles.CookieName%2A> property.  \n  \n [!code-csharp[System.Web.Security.RolePrincipal#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.RolePrincipal/CS/snippetscs.aspx#2)]\n [!code-vb[System.Web.Security.RolePrincipal#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.RolePrincipal/VB/snippetsvb.aspx#2)]"
  syntax:
    content: public RolePrincipal (System.Security.Principal.IIdentity identity, string encryptedTicket);
    parameters:
    - id: identity
      type: System.Security.Principal.IIdentity
      description: The user identity to create the <xref href="System.Web.Security.RolePrincipal"></xref> for.
    - id: encryptedTicket
      type: System.String
      description: A string that contains encrypted role information.
  overload: System.Web.Security.RolePrincipal.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>identity</code> is `null`.  \n  \n -or-  \n  \n <code>encryptedTicket</code> is `null`."
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Security/RolePrincipal.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.Security.RolePrincipal.#ctor(System.String,System.Security.Principal.IIdentity)
  commentId: M:System.Web.Security.RolePrincipal.#ctor(System.String,System.Security.Principal.IIdentity)
  id: '#ctor(System.String,System.Security.Principal.IIdentity)'
  parent: System.Web.Security.RolePrincipal
  langs:
  - csharp
  name: RolePrincipal(String, IIdentity)
  nameWithType: RolePrincipal.RolePrincipal(String, IIdentity)
  fullName: RolePrincipal.RolePrincipal(String, IIdentity)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: Instantiates a <xref href="System.Web.Security.RolePrincipal"></xref> object for the specified <code>identity</code> using the specified <code>providerName</code>.
  remarks: "This overload of the <xref:System.Web.Security.RolePrincipal.%23ctor%2A> constructor creates a new <xref:System.Web.Security.RolePrincipal> object and initializes its property values. The <xref:System.Web.Security.RolePrincipal.ProviderName%2A> property is set to the value specified in the `providerName` parameter.  \n  \n For information on enabling role management, see the <xref:System.Web.Security.Roles> class."
  syntax:
    content: public RolePrincipal (string providerName, System.Security.Principal.IIdentity identity);
    parameters:
    - id: providerName
      type: System.String
      description: The name of the role provider for the user.
    - id: identity
      type: System.Security.Principal.IIdentity
      description: The user identity to create the <xref href="System.Web.Security.RolePrincipal"></xref> for.
  overload: System.Web.Security.RolePrincipal.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>identity</code> is `null`.
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>providerName</code> is `null`.  \n  \n -or-  \n  \n <code>providerName</code> refers to a role provider that does not exist in the configuration for the application."
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Security/RolePrincipal.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.Security.RolePrincipal.#ctor(System.String,System.Security.Principal.IIdentity,System.String)
  commentId: M:System.Web.Security.RolePrincipal.#ctor(System.String,System.Security.Principal.IIdentity,System.String)
  id: '#ctor(System.String,System.Security.Principal.IIdentity,System.String)'
  parent: System.Web.Security.RolePrincipal
  langs:
  - csharp
  name: RolePrincipal(String, IIdentity, String)
  nameWithType: RolePrincipal.RolePrincipal(String, IIdentity, String)
  fullName: RolePrincipal.RolePrincipal(String, IIdentity, String)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: Instantiates a <xref href="System.Web.Security.RolePrincipal"></xref> object for the specified <code>identity</code> using the specified <code>providerName</code> and role information from the specified <code>encryptedTicket</code>.
  remarks: "This overload of the <xref:System.Web.Security.RolePrincipal.%23ctor%2A> constructor creates a new <xref:System.Web.Security.RolePrincipal> object and initializes its property values. Role information for the current user is read from the supplied `encryptedTicket` and cached with the <xref:System.Web.Security.RolePrincipal> object. The <xref:System.Web.Security.RolePrincipal.ProviderName%2A> property is set to the value specified in the `providerName` parameter.  \n  \n For information on enabling role management, see the <xref:System.Web.Security.Roles> class."
  syntax:
    content: public RolePrincipal (string providerName, System.Security.Principal.IIdentity identity, string encryptedTicket);
    parameters:
    - id: providerName
      type: System.String
      description: The name of the role provider for the user.
    - id: identity
      type: System.Security.Principal.IIdentity
      description: The user identity to create the <xref href="System.Web.Security.RolePrincipal"></xref> for.
    - id: encryptedTicket
      type: System.String
      description: A string that contains encrypted role information.
  overload: System.Web.Security.RolePrincipal.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>identity</code> is `null`.  \n  \n -or-  \n  \n <code>encryptedTicket</code> is `null`."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>providerName</code> is `null`.  \n  \n -or-  \n  \n <code>providerName</code> refers to a role provider that does not exist in the configuration for the application."
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Security/RolePrincipal.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.Security.RolePrincipal.CachedListChanged
  commentId: P:System.Web.Security.RolePrincipal.CachedListChanged
  id: CachedListChanged
  parent: System.Web.Security.RolePrincipal
  langs:
  - csharp
  name: CachedListChanged
  nameWithType: RolePrincipal.CachedListChanged
  fullName: RolePrincipal.CachedListChanged
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: Gets a value indicating whether the list of role names cached with the <xref href="System.Web.Security.RolePrincipal"></xref> object has been modified.
  remarks: "The <xref:System.Web.Security.RolePrincipal.CachedListChanged%2A> property will return `true` after role names have been retrieved from the default role <xref:System.Web.Security.Roles.Provider%2A> and added to the cache by the <xref:System.Web.Security.RolePrincipal.GetRoles%2A> method, or when the <xref:System.Web.Security.RolePrincipal.IsInRole%2A> method calls the <xref:System.Web.Security.RoleProvider.IsUserInRole%2A> method of the default role provider and then receives a response of `true`, resulting in the role name passed to the <xref:System.Web.Security.RolePrincipal.IsInRole%2A> method being added to the cache.  \n  \n The <xref:System.Web.Security.RolePrincipal.CachedListChanged%2A> property will also return true if <xref:System.Web.Security.Roles.CookieSlidingExpiration%2A> is set to `true` and the <xref:System.Web.Security.RolePrincipal.ExpireDate%2A> has passed, resulting in a new <xref:System.Web.Security.RolePrincipal.ExpireDate%2A> being set."
  example:
  - "The following example displays role-caching information for the current user if role management is enabled. For information on enabling role management, see the <xref:System.Web.Security.Roles> class.  \n  \n <!-- TODO: review snippet reference [!code-csharp[System.Web.Security.RolePrincipal#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.RolePrincipal/CS/getroleinfocs.aspx#1)]  -->\n <!-- TODO: review snippet reference [!code-vb[System.Web.Security.RolePrincipal#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.RolePrincipal/VB/getroleinfovb.aspx#1)]  -->"
  syntax:
    content: public bool CachedListChanged { get; }
    return:
      type: System.Boolean
      description: '`true` if the list of role names cached with the <xref href="System.Web.Security.RolePrincipal"></xref> object has been modified; otherwise, `false`.'
  overload: System.Web.Security.RolePrincipal.CachedListChanged*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Security/RolePrincipal.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.Security.RolePrincipal.CookiePath
  commentId: P:System.Web.Security.RolePrincipal.CookiePath
  id: CookiePath
  parent: System.Web.Security.RolePrincipal
  langs:
  - csharp
  name: CookiePath
  nameWithType: RolePrincipal.CookiePath
  fullName: RolePrincipal.CookiePath
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: Gets the path for the cached role names cookie.
  remarks: The <xref:System.Web.Security.RolePrincipal.CookiePath%2A> property returns the value of the `cookiePath` attribute from the Web.config file for your ASP.NET application. For more information on cookie paths, see <xref:System.Web.HttpCookie.Path%2A>.
  example:
  - "The following example displays role-caching information for the current user if role management is enabled. For information on enabling role management, see the <xref:System.Web.Security.Roles> class.  \n  \n <!-- TODO: review snippet reference [!code-csharp[System.Web.Security.RolePrincipal#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.RolePrincipal/CS/getroleinfocs.aspx#1)]  -->\n <!-- TODO: review snippet reference [!code-vb[System.Web.Security.RolePrincipal#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.RolePrincipal/VB/getroleinfovb.aspx#1)]  -->"
  syntax:
    content: public string CookiePath { get; }
    return:
      type: System.String
      description: The path of the cookie where role names are cached. The default is /.
  overload: System.Web.Security.RolePrincipal.CookiePath*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Security/RolePrincipal.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.Security.RolePrincipal.Expired
  commentId: P:System.Web.Security.RolePrincipal.Expired
  id: Expired
  parent: System.Web.Security.RolePrincipal
  langs:
  - csharp
  name: Expired
  nameWithType: RolePrincipal.Expired
  fullName: RolePrincipal.Expired
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: Gets a value indicating whether the roles cookie has expired.
  remarks: The <xref:System.Web.Security.RolePrincipal.Expired%2A> property returns a `Boolean` value indicating whether the roles cookie has expired based on the <xref:System.Web.Security.RolePrincipal.ExpireDate%2A> and the current date and time.
  example:
  - "The following example displays role-caching information for the current user if role management is enabled. For information on enabling role management, see the <xref:System.Web.Security.Roles> class.  \n  \n <!-- TODO: review snippet reference [!code-csharp[System.Web.Security.RolePrincipal#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.RolePrincipal/CS/getroleinfocs.aspx#1)]  -->\n <!-- TODO: review snippet reference [!code-vb[System.Web.Security.RolePrincipal#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.RolePrincipal/VB/getroleinfovb.aspx#1)]  -->"
  syntax:
    content: public bool Expired { get; }
    return:
      type: System.Boolean
      description: '`true` if the roles cookie has expired; otherwise, `false`.'
  overload: System.Web.Security.RolePrincipal.Expired*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Security/RolePrincipal.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.Security.RolePrincipal.ExpireDate
  commentId: P:System.Web.Security.RolePrincipal.ExpireDate
  id: ExpireDate
  parent: System.Web.Security.RolePrincipal
  langs:
  - csharp
  name: ExpireDate
  nameWithType: RolePrincipal.ExpireDate
  fullName: RolePrincipal.ExpireDate
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: Gets the date and time when the roles cookie will expire.
  remarks: ''
  example:
  - "The following example displays role-caching information for the current user if role management is enabled. For information on enabling role management, see the <xref:System.Web.Security.Roles> class.  \n  \n <!-- TODO: review snippet reference [!code-csharp[System.Web.Security.RolePrincipal#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.RolePrincipal/CS/getroleinfocs.aspx#1)]  -->\n <!-- TODO: review snippet reference [!code-vb[System.Web.Security.RolePrincipal#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.RolePrincipal/VB/getroleinfovb.aspx#1)]  -->"
  syntax:
    content: public DateTime ExpireDate { get; }
    return:
      type: System.DateTime
      description: The <xref href="System.DateTime"></xref> value when the roles cookie will expire.
  overload: System.Web.Security.RolePrincipal.ExpireDate*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Security/RolePrincipal.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.Security.RolePrincipal.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  commentId: M:System.Web.Security.RolePrincipal.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Web.Security.RolePrincipal
  langs:
  - csharp
  name: GetObjectData(SerializationInfo, StreamingContext)
  nameWithType: RolePrincipal.GetObjectData(SerializationInfo, StreamingContext)
  fullName: RolePrincipal.GetObjectData(SerializationInfo, StreamingContext)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: Populates a <xref href="System.Runtime.Serialization.SerializationInfo"></xref> object with the data that is required in order to serialize the target object using the specified streaming context.
  remarks: For more information, see the <xref:System.Runtime.Serialization.ISerializable.GetObjectData%28System.Runtime.Serialization.SerializationInfo%2CSystem.Runtime.Serialization.StreamingContext%29> method.
  syntax:
    content: protected override void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: The <xref href="System.Runtime.Serialization.SerializationInfo"></xref> object to populate with data.
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: The destination for this serialization.
  overload: System.Web.Security.RolePrincipal.GetObjectData*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Security/RolePrincipal.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.Security.RolePrincipal.GetRoles
  commentId: M:System.Web.Security.RolePrincipal.GetRoles
  id: GetRoles
  parent: System.Web.Security.RolePrincipal
  langs:
  - csharp
  name: GetRoles()
  nameWithType: RolePrincipal.GetRoles()
  fullName: RolePrincipal.GetRoles()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: Gets a list of roles that the <xref href="System.Web.Security.RolePrincipal"></xref> is a member of.
  remarks: If <xref:System.Web.Security.Roles.CacheRolesInCookie%2A> is `true` and role names have been cached for the user represented by the <xref:System.Web.Security.RolePrincipal>, then the <xref:System.Web.Security.RolePrincipal.GetRoles%2A> method will return the list of role names in the cache that the user is a member of. If role names have not been cached, then the <xref:System.Web.Security.RolePrincipal.GetRoles%2A> method returns the list of role names that the user is a member of from the default role <xref:System.Web.Security.Roles.Provider%2A>. Only role names for the current <xref:System.Web.Security.Roles.ApplicationName%2A> are returned. To determine whether role names have been cached in the <xref:System.Web.Security.RolePrincipal> object, check the <xref:System.Web.Security.RolePrincipal.IsRoleListCached%2A> property.
  example:
  - "The following code example displays the roles that the logged-on user is a member of.  \n  \n <!-- TODO: review snippet reference [!code-csharp[System.Web.Security.RolePrincipal#7](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.RolePrincipal/CS/GetRolescs.aspx#7)]  -->\n <!-- TODO: review snippet reference [!code-vb[System.Web.Security.RolePrincipal#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.RolePrincipal/VB/GetRolesvb.aspx#7)]  -->"
  syntax:
    content: public string[] GetRoles ();
    parameters: []
    return:
      type: System.String[]
      description: The list of roles that the <xref href="System.Web.Security.RolePrincipal"></xref> is a member of.
  overload: System.Web.Security.RolePrincipal.GetRoles*
  exceptions:
  - type: System.Configuration.Provider.ProviderException
    commentId: T:System.Configuration.Provider.ProviderException
    description: The <xref href="System.Web.Security.RolePrincipal.Identity"></xref> property is `null`.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Security/RolePrincipal.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.Security.RolePrincipal.Identity
  commentId: P:System.Web.Security.RolePrincipal.Identity
  id: Identity
  parent: System.Web.Security.RolePrincipal
  langs:
  - csharp
  name: Identity
  nameWithType: RolePrincipal.Identity
  fullName: RolePrincipal.Identity
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: Gets the security identity for the current HTTP request.
  remarks: The <xref:System.Web.Security.RolePrincipal.Identity%2A> of a <xref:System.Web.Security.RolePrincipal> object is set when the <xref:System.Web.Security.RolePrincipal> constructor is called.
  example:
  - "The following example displays role-caching information for the current user if role management is enabled. For information on enabling role management, see the <xref:System.Web.Security.Roles> class.  \n  \n <!-- TODO: review snippet reference [!code-csharp[System.Web.Security.RolePrincipal#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.RolePrincipal/CS/getroleinfocs.aspx#1)]  -->\n <!-- TODO: review snippet reference [!code-vb[System.Web.Security.RolePrincipal#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.RolePrincipal/VB/getroleinfovb.aspx#1)]  -->"
  syntax:
    content: public override System.Security.Principal.IIdentity Identity { get; }
    return:
      type: System.Security.Principal.IIdentity
      description: The security identity for the current HTTP request.
  overload: System.Web.Security.RolePrincipal.Identity*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Security/RolePrincipal.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.Security.RolePrincipal.IsInRole(System.String)
  commentId: M:System.Web.Security.RolePrincipal.IsInRole(System.String)
  id: IsInRole(System.String)
  parent: System.Web.Security.RolePrincipal
  langs:
  - csharp
  name: IsInRole(String)
  nameWithType: RolePrincipal.IsInRole(String)
  fullName: RolePrincipal.IsInRole(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: Gets a value indicating whether the user represented by the <xref href="System.Web.Security.RolePrincipal"></xref> is in the specified role.
  remarks: "<xref:System.Web.Security.RolePrincipal.IsInRole%2A> first checks the <xref:System.Web.Security.RolePrincipal.IsRoleListCached%2A> property to determine whether a cached list of role names for the current user is available. If the <xref:System.Web.Security.RolePrincipal.IsRoleListCached%2A> property is `true`, the cached list is checked for the specified role. If the <xref:System.Web.Security.RolePrincipal.IsInRole%2A> method finds the specified role in the cached list, it returns `true`.  \n  \n If <xref:System.Web.Security.RolePrincipal.IsInRole%2A> does not find the specified role, it calls the <xref:System.Web.Security.RoleProvider.GetRolesForUser%2A> method of the default <xref:System.Web.Security.Roles.Provider%2A> instance to determine whether the user name is associated with a role from the data source for the configured <xref:System.Web.Security.Roles.ApplicationName%2A> value."
  example:
  - "The following code example checks to see whether the logged-on user is in the Administrators role before allowing the user to view user roles.  \n  \n <!-- TODO: review snippet reference [!code-csharp[System.Web.Security.RolePrincipal#8](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.RolePrincipal/CS/ViewRolescs.aspx#8)]  -->\n <!-- TODO: review snippet reference [!code-vb[System.Web.Security.RolePrincipal#8](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.RolePrincipal/VB/ViewRolesvb.aspx#8)]  -->"
  syntax:
    content: public override bool IsInRole (string role);
    parameters:
    - id: role
      type: System.String
      description: The role to search for.
    return:
      type: System.Boolean
      description: '`true` if user represented by the <xref href="System.Web.Security.RolePrincipal"></xref> is in the specified role; otherwise, `false`.'
  overload: System.Web.Security.RolePrincipal.IsInRole*
  exceptions:
  - type: System.Configuration.Provider.ProviderException
    commentId: T:System.Configuration.Provider.ProviderException
    description: The <xref href="System.Web.Security.RolePrincipal.Identity"></xref> property is `null`.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Security/RolePrincipal.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.Security.RolePrincipal.IsRoleListCached
  commentId: P:System.Web.Security.RolePrincipal.IsRoleListCached
  id: IsRoleListCached
  parent: System.Web.Security.RolePrincipal
  langs:
  - csharp
  name: IsRoleListCached
  nameWithType: RolePrincipal.IsRoleListCached
  fullName: RolePrincipal.IsRoleListCached
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: Gets a value indicating whether the list of roles for the user has been cached in a cookie.
  remarks: If the `cacheRolesInCookie` attribute in the Web.config file for the application is set to `true`, then a list of role names for the current user is written to a cookie when user membership in a particular role is checked. The <xref:System.Web.Security.RolePrincipal.IsRoleListCached%2A> property indicates whether role names have been written to the cookie. Note that, even though the `cacheRolesInCookie` configuration attribute may be `true`, the <xref:System.Web.Security.RolePrincipal.IsRoleListCached%2A> property does not return `true` until after role information has been written to the cookie. If no role checks are performed for a user, <xref:System.Web.Security.RolePrincipal.IsRoleListCached%2A> will return `false`.
  example:
  - "The following example displays role-caching information for the current user if role management is enabled. For information on enabling role management, see the <xref:System.Web.Security.Roles> class.  \n  \n <!-- TODO: review snippet reference [!code-csharp[System.Web.Security.RolePrincipal#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.RolePrincipal/CS/getroleinfocs.aspx#1)]  -->\n <!-- TODO: review snippet reference [!code-vb[System.Web.Security.RolePrincipal#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.RolePrincipal/VB/getroleinfovb.aspx#1)]  -->"
  syntax:
    content: public bool IsRoleListCached { get; }
    return:
      type: System.Boolean
      description: '`true` if role names are cached in a cookie; otherwise, `false`.'
  overload: System.Web.Security.RolePrincipal.IsRoleListCached*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Security/RolePrincipal.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.Security.RolePrincipal.IssueDate
  commentId: P:System.Web.Security.RolePrincipal.IssueDate
  id: IssueDate
  parent: System.Web.Security.RolePrincipal
  langs:
  - csharp
  name: IssueDate
  nameWithType: RolePrincipal.IssueDate
  fullName: RolePrincipal.IssueDate
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: Gets the date and time that the roles cookie was issued.
  remarks: ''
  example:
  - "The following example displays role-caching information for the current user if role management is enabled. For information on enabling role management, see the <xref:System.Web.Security.Roles> class.  \n  \n <!-- TODO: review snippet reference [!code-csharp[System.Web.Security.RolePrincipal#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.RolePrincipal/CS/getroleinfocs.aspx#1)]  -->\n <!-- TODO: review snippet reference [!code-vb[System.Web.Security.RolePrincipal#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.RolePrincipal/VB/getroleinfovb.aspx#1)]  -->"
  syntax:
    content: public DateTime IssueDate { get; }
    return:
      type: System.DateTime
      description: The <xref href="System.DateTime"></xref> that the roles cookie was issued.
  overload: System.Web.Security.RolePrincipal.IssueDate*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Security/RolePrincipal.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.Security.RolePrincipal.ProviderName
  commentId: P:System.Web.Security.RolePrincipal.ProviderName
  id: ProviderName
  parent: System.Web.Security.RolePrincipal
  langs:
  - csharp
  name: ProviderName
  nameWithType: RolePrincipal.ProviderName
  fullName: RolePrincipal.ProviderName
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: Gets the name of the role provider that stores and retrieves role information for the user.
  remarks: "The <xref:System.Web.Security.RolePrincipal.ProviderName%2A> property exposes the name of the role provider that manages the role information for the user represented by the <xref:System.Web.Security.RolePrincipal> object. This enables you to access the specific role-provider instance for a user by using the <xref:System.Web.Security.Roles.Providers%2A> property of the <xref:System.Web.Security.Roles> class regardless of whether the provider is the default provider for the application. For example, you may create a method that takes a <xref:System.Web.Security.RolePrincipal> as input and returns the list of roles for the represented user. You can ensure that the appropriate role provider is used to return the list of roles for the <xref:System.Web.Security.RolePrincipal> by calling the <xref:System.Web.Security.RoleProvider.GetRolesForUser%2A> method of the role provider from the <xref:System.Web.Security.Roles.Providers%2A> collection that is indexed by the <xref:System.Web.Security.RolePrincipal.ProviderName%2A> property value.  \n  \n To populate the <xref:System.Web.Security.RolePrincipal> object for each request, you must use a <xref:System.Web.Security.RoleManagerModule.GetRoles> event handler defined in the Global.asax file for the application."
  syntax:
    content: public string ProviderName { get; }
    return:
      type: System.String
      description: The name of the role provider that stores and retrieves role information for the user.
  overload: System.Web.Security.RolePrincipal.ProviderName*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Security/RolePrincipal.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.Security.RolePrincipal.SetDirty
  commentId: M:System.Web.Security.RolePrincipal.SetDirty
  id: SetDirty
  parent: System.Web.Security.RolePrincipal
  langs:
  - csharp
  name: SetDirty()
  nameWithType: RolePrincipal.SetDirty()
  fullName: RolePrincipal.SetDirty()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: Marks the cached role list as having been changed.
  remarks: The <xref:System.Web.Security.RolePrincipal.SetDirty%2A> method marks the cached role list as having been changed by setting <xref:System.Web.Security.RolePrincipal.CachedListChanged%2A> to `true` and <xref:System.Web.Security.RolePrincipal.IsRoleListCached%2A> to `false`.
  syntax:
    content: public void SetDirty ();
    parameters: []
  overload: System.Web.Security.RolePrincipal.SetDirty*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Security/RolePrincipal.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.Security.RolePrincipal.ToEncryptedTicket
  commentId: M:System.Web.Security.RolePrincipal.ToEncryptedTicket
  id: ToEncryptedTicket
  parent: System.Web.Security.RolePrincipal
  langs:
  - csharp
  name: ToEncryptedTicket()
  nameWithType: RolePrincipal.ToEncryptedTicket()
  fullName: RolePrincipal.ToEncryptedTicket()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: Returns the role information cached with the <xref href="System.Web.Security.RolePrincipal"></xref> object encrypted based on the <xref href="System.Web.Security.Roles.CookieProtectionValue"></xref>.
  remarks: The value returned by the <xref:System.Web.Security.RolePrincipal.ToEncryptedTicket%2A> method is stored in the roles cookie when <xref:System.Web.Security.Roles.CacheRolesInCookie%2A> is `true`.
  example:
  - "The following code example writes the results of the <xref:System.Web.Security.RolePrincipal.ToEncryptedTicket%2A> method to the roles cookie.  \n  \n [!code-csharp[System.Web.Security.RolePrincipal#6](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.RolePrincipal/CS/snippetscs.aspx#6)]\n [!code-vb[System.Web.Security.RolePrincipal#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.RolePrincipal/VB/snippetsvb.aspx#6)]"
  syntax:
    content: public string ToEncryptedTicket ();
    parameters: []
    return:
      type: System.String
      description: The role information cached with the <xref href="System.Web.Security.RolePrincipal"></xref> object encrypted based on the <xref href="System.Web.Security.Roles.CookieProtectionValue"></xref>.
  overload: System.Web.Security.RolePrincipal.ToEncryptedTicket*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Security/RolePrincipal.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.Security.RolePrincipal.Version
  commentId: P:System.Web.Security.RolePrincipal.Version
  id: Version
  parent: System.Web.Security.RolePrincipal
  langs:
  - csharp
  name: Version
  nameWithType: RolePrincipal.Version
  fullName: RolePrincipal.Version
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: Gets the version number of the roles cookie.
  remarks: By including a version number in the roles cookie, future releases of ASP.NET can modify the format of the roles cookie and use the <xref:System.Web.Security.RolePrincipal.Version%2A> property to distinguish between different formats.
  example:
  - "The following example displays role-caching information for the current user if role management is enabled. For information on enabling role management, see the <xref:System.Web.Security.Roles> class.  \n  \n <!-- TODO: review snippet reference [!code-csharp[System.Web.Security.RolePrincipal#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.RolePrincipal/CS/getroleinfocs.aspx#1)]  -->\n <!-- TODO: review snippet reference [!code-vb[System.Web.Security.RolePrincipal#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.RolePrincipal/VB/getroleinfovb.aspx#1)]  -->"
  syntax:
    content: public int Version { get; }
    return:
      type: System.Int32
      description: The version number of the roles cookie.
  overload: System.Web.Security.RolePrincipal.Version*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Security/RolePrincipal.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.Security.RolePrincipal.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  commentId: M:System.Web.Security.RolePrincipal.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  isEii: true
  parent: System.Web.Security.RolePrincipal
  langs:
  - csharp
  name: ISerializable.GetObjectData(SerializationInfo, StreamingContext)
  nameWithType: RolePrincipal.ISerializable.GetObjectData(SerializationInfo, StreamingContext)
  fullName: RolePrincipal.ISerializable.GetObjectData(SerializationInfo, StreamingContext)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: For a description of this member, see <xref href="System.Runtime.Serialization.ISerializationSurrogate.GetObjectData(System.Object,System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)"></xref>.
  remarks: This member is an explicit-interface member implementation. It can be used only when the <xref:System.Web.Security.RolePrincipal> instance is cast to an <xref:System.Runtime.Serialization.ISerializable> interface.
  syntax:
    content: void ISerializable.GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: The <xref href="System.Runtime.Serialization.SerializationInfo"></xref> to populate with data.
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: The destination for this serialization.
  overload: System.Web.Security.RolePrincipal.System#Runtime#Serialization#ISerializable#GetObjectData*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Security/RolePrincipal.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
references:
- uid: System.Security.Claims.ClaimsPrincipal
  parent: System.Security.Claims
  isExternal: false
  name: ClaimsPrincipal
  nameWithType: ClaimsPrincipal
  fullName: System.Security.Claims.ClaimsPrincipal
- uid: System.ArgumentNullException
  parent: System
  isExternal: false
  name: ArgumentNullException
  nameWithType: ArgumentNullException
  fullName: System.ArgumentNullException
- uid: System.ArgumentException
  parent: System
  isExternal: false
  name: ArgumentException
  nameWithType: ArgumentException
  fullName: System.ArgumentException
- uid: System.Configuration.Provider.ProviderException
  parent: System.Configuration.Provider
  isExternal: false
  name: ProviderException
  nameWithType: ProviderException
  fullName: System.Configuration.Provider.ProviderException
- uid: System.Web.Security.RolePrincipal.#ctor(System.Security.Principal.IIdentity)
  parent: System.Web.Security.RolePrincipal
  isExternal: false
  name: RolePrincipal(IIdentity)
  nameWithType: RolePrincipal.RolePrincipal(IIdentity)
  fullName: RolePrincipal.RolePrincipal(IIdentity)
- uid: System.Security.Principal.IIdentity
  parent: System.Security.Principal
  isExternal: false
  name: IIdentity
  nameWithType: IIdentity
  fullName: System.Security.Principal.IIdentity
- uid: System.Web.Security.RolePrincipal.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Web.Security.RolePrincipal
  isExternal: false
  name: RolePrincipal(SerializationInfo, StreamingContext)
  nameWithType: RolePrincipal.RolePrincipal(SerializationInfo, StreamingContext)
  fullName: RolePrincipal.RolePrincipal(SerializationInfo, StreamingContext)
- uid: System.Runtime.Serialization.SerializationInfo
  parent: System.Runtime.Serialization
  isExternal: false
  name: SerializationInfo
  nameWithType: SerializationInfo
  fullName: System.Runtime.Serialization.SerializationInfo
- uid: System.Runtime.Serialization.StreamingContext
  parent: System.Runtime.Serialization
  isExternal: false
  name: StreamingContext
  nameWithType: StreamingContext
  fullName: System.Runtime.Serialization.StreamingContext
- uid: System.Web.Security.RolePrincipal.#ctor(System.Security.Principal.IIdentity,System.String)
  parent: System.Web.Security.RolePrincipal
  isExternal: false
  name: RolePrincipal(IIdentity, String)
  nameWithType: RolePrincipal.RolePrincipal(IIdentity, String)
  fullName: RolePrincipal.RolePrincipal(IIdentity, String)
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.Security.RolePrincipal.#ctor(System.String,System.Security.Principal.IIdentity)
  parent: System.Web.Security.RolePrincipal
  isExternal: false
  name: RolePrincipal(String, IIdentity)
  nameWithType: RolePrincipal.RolePrincipal(String, IIdentity)
  fullName: RolePrincipal.RolePrincipal(String, IIdentity)
- uid: System.Web.Security.RolePrincipal.#ctor(System.String,System.Security.Principal.IIdentity,System.String)
  parent: System.Web.Security.RolePrincipal
  isExternal: false
  name: RolePrincipal(String, IIdentity, String)
  nameWithType: RolePrincipal.RolePrincipal(String, IIdentity, String)
  fullName: RolePrincipal.RolePrincipal(String, IIdentity, String)
- uid: System.Web.Security.RolePrincipal.CachedListChanged
  parent: System.Web.Security.RolePrincipal
  isExternal: false
  name: CachedListChanged
  nameWithType: RolePrincipal.CachedListChanged
  fullName: RolePrincipal.CachedListChanged
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.Security.RolePrincipal.CookiePath
  parent: System.Web.Security.RolePrincipal
  isExternal: false
  name: CookiePath
  nameWithType: RolePrincipal.CookiePath
  fullName: RolePrincipal.CookiePath
- uid: System.Web.Security.RolePrincipal.Expired
  parent: System.Web.Security.RolePrincipal
  isExternal: false
  name: Expired
  nameWithType: RolePrincipal.Expired
  fullName: RolePrincipal.Expired
- uid: System.Web.Security.RolePrincipal.ExpireDate
  parent: System.Web.Security.RolePrincipal
  isExternal: false
  name: ExpireDate
  nameWithType: RolePrincipal.ExpireDate
  fullName: RolePrincipal.ExpireDate
- uid: System.DateTime
  parent: System
  isExternal: false
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: System.Web.Security.RolePrincipal.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Web.Security.RolePrincipal
  isExternal: false
  name: GetObjectData(SerializationInfo, StreamingContext)
  nameWithType: RolePrincipal.GetObjectData(SerializationInfo, StreamingContext)
  fullName: RolePrincipal.GetObjectData(SerializationInfo, StreamingContext)
- uid: System.Web.Security.RolePrincipal.GetRoles
  parent: System.Web.Security.RolePrincipal
  isExternal: false
  name: GetRoles()
  nameWithType: RolePrincipal.GetRoles()
  fullName: RolePrincipal.GetRoles()
- uid: System.String[]
  parent: System
  isExternal: false
  name: String[]
  nameWithType: String[]
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Web.Security.RolePrincipal.Identity
  parent: System.Web.Security.RolePrincipal
  isExternal: false
  name: Identity
  nameWithType: RolePrincipal.Identity
  fullName: RolePrincipal.Identity
- uid: System.Web.Security.RolePrincipal.IsInRole(System.String)
  parent: System.Web.Security.RolePrincipal
  isExternal: false
  name: IsInRole(String)
  nameWithType: RolePrincipal.IsInRole(String)
  fullName: RolePrincipal.IsInRole(String)
- uid: System.Web.Security.RolePrincipal.IsRoleListCached
  parent: System.Web.Security.RolePrincipal
  isExternal: false
  name: IsRoleListCached
  nameWithType: RolePrincipal.IsRoleListCached
  fullName: RolePrincipal.IsRoleListCached
- uid: System.Web.Security.RolePrincipal.IssueDate
  parent: System.Web.Security.RolePrincipal
  isExternal: false
  name: IssueDate
  nameWithType: RolePrincipal.IssueDate
  fullName: RolePrincipal.IssueDate
- uid: System.Web.Security.RolePrincipal.ProviderName
  parent: System.Web.Security.RolePrincipal
  isExternal: false
  name: ProviderName
  nameWithType: RolePrincipal.ProviderName
  fullName: RolePrincipal.ProviderName
- uid: System.Web.Security.RolePrincipal.SetDirty
  parent: System.Web.Security.RolePrincipal
  isExternal: false
  name: SetDirty()
  nameWithType: RolePrincipal.SetDirty()
  fullName: RolePrincipal.SetDirty()
- uid: System.Web.Security.RolePrincipal.ToEncryptedTicket
  parent: System.Web.Security.RolePrincipal
  isExternal: false
  name: ToEncryptedTicket()
  nameWithType: RolePrincipal.ToEncryptedTicket()
  fullName: RolePrincipal.ToEncryptedTicket()
- uid: System.Web.Security.RolePrincipal.Version
  parent: System.Web.Security.RolePrincipal
  isExternal: false
  name: Version
  nameWithType: RolePrincipal.Version
  fullName: RolePrincipal.Version
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.Security.RolePrincipal.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Web.Security.RolePrincipal
  isExternal: false
  name: ISerializable.GetObjectData(SerializationInfo, StreamingContext)
  nameWithType: RolePrincipal.ISerializable.GetObjectData(SerializationInfo, StreamingContext)
  fullName: RolePrincipal.ISerializable.GetObjectData(SerializationInfo, StreamingContext)
- uid: System.Web.Security.RolePrincipal.#ctor*
  parent: System.Web.Security.RolePrincipal
  isExternal: false
  name: RolePrincipal
  nameWithType: RolePrincipal.RolePrincipal
  fullName: RolePrincipal.RolePrincipal
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Security/RolePrincipal.xml
- uid: System.Web.Security.RolePrincipal.CachedListChanged*
  parent: System.Web.Security.RolePrincipal
  isExternal: false
  name: CachedListChanged
  nameWithType: RolePrincipal.CachedListChanged
  fullName: RolePrincipal.CachedListChanged
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Security/RolePrincipal.xml
- uid: System.Web.Security.RolePrincipal.CookiePath*
  parent: System.Web.Security.RolePrincipal
  isExternal: false
  name: CookiePath
  nameWithType: RolePrincipal.CookiePath
  fullName: RolePrincipal.CookiePath
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Security/RolePrincipal.xml
- uid: System.Web.Security.RolePrincipal.Expired*
  parent: System.Web.Security.RolePrincipal
  isExternal: false
  name: Expired
  nameWithType: RolePrincipal.Expired
  fullName: RolePrincipal.Expired
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Security/RolePrincipal.xml
- uid: System.Web.Security.RolePrincipal.ExpireDate*
  parent: System.Web.Security.RolePrincipal
  isExternal: false
  name: ExpireDate
  nameWithType: RolePrincipal.ExpireDate
  fullName: RolePrincipal.ExpireDate
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Security/RolePrincipal.xml
- uid: System.Web.Security.RolePrincipal.GetObjectData*
  parent: System.Web.Security.RolePrincipal
  isExternal: false
  name: GetObjectData
  nameWithType: RolePrincipal.GetObjectData
  fullName: RolePrincipal.GetObjectData
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Security/RolePrincipal.xml
- uid: System.Web.Security.RolePrincipal.GetRoles*
  parent: System.Web.Security.RolePrincipal
  isExternal: false
  name: GetRoles
  nameWithType: RolePrincipal.GetRoles
  fullName: RolePrincipal.GetRoles
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Security/RolePrincipal.xml
- uid: System.Web.Security.RolePrincipal.Identity*
  parent: System.Web.Security.RolePrincipal
  isExternal: false
  name: Identity
  nameWithType: RolePrincipal.Identity
  fullName: RolePrincipal.Identity
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Security/RolePrincipal.xml
- uid: System.Web.Security.RolePrincipal.IsInRole*
  parent: System.Web.Security.RolePrincipal
  isExternal: false
  name: IsInRole
  nameWithType: RolePrincipal.IsInRole
  fullName: RolePrincipal.IsInRole
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Security/RolePrincipal.xml
- uid: System.Web.Security.RolePrincipal.IsRoleListCached*
  parent: System.Web.Security.RolePrincipal
  isExternal: false
  name: IsRoleListCached
  nameWithType: RolePrincipal.IsRoleListCached
  fullName: RolePrincipal.IsRoleListCached
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Security/RolePrincipal.xml
- uid: System.Web.Security.RolePrincipal.IssueDate*
  parent: System.Web.Security.RolePrincipal
  isExternal: false
  name: IssueDate
  nameWithType: RolePrincipal.IssueDate
  fullName: RolePrincipal.IssueDate
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Security/RolePrincipal.xml
- uid: System.Web.Security.RolePrincipal.ProviderName*
  parent: System.Web.Security.RolePrincipal
  isExternal: false
  name: ProviderName
  nameWithType: RolePrincipal.ProviderName
  fullName: RolePrincipal.ProviderName
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Security/RolePrincipal.xml
- uid: System.Web.Security.RolePrincipal.SetDirty*
  parent: System.Web.Security.RolePrincipal
  isExternal: false
  name: SetDirty
  nameWithType: RolePrincipal.SetDirty
  fullName: RolePrincipal.SetDirty
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Security/RolePrincipal.xml
- uid: System.Web.Security.RolePrincipal.ToEncryptedTicket*
  parent: System.Web.Security.RolePrincipal
  isExternal: false
  name: ToEncryptedTicket
  nameWithType: RolePrincipal.ToEncryptedTicket
  fullName: RolePrincipal.ToEncryptedTicket
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Security/RolePrincipal.xml
- uid: System.Web.Security.RolePrincipal.Version*
  parent: System.Web.Security.RolePrincipal
  isExternal: false
  name: Version
  nameWithType: RolePrincipal.Version
  fullName: RolePrincipal.Version
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Security/RolePrincipal.xml
- uid: System.Web.Security.RolePrincipal.System#Runtime#Serialization#ISerializable#GetObjectData*
  parent: System.Web.Security.RolePrincipal
  isExternal: false
  name: System.Runtime.Serialization.ISerializable.GetObjectData
  nameWithType: RolePrincipal.System.Runtime.Serialization.ISerializable.GetObjectData
  fullName: RolePrincipal.System.Runtime.Serialization.ISerializable.GetObjectData
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Security/RolePrincipal.xml
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: Object.Equals(Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: Object.Equals(Object, Object)
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: false
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: Object.GetHashCode()
- uid: System.Object.GetType
  parent: System.Object
  isExternal: false
  name: GetType()
  nameWithType: Object.GetType()
  fullName: Object.GetType()
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: false
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: Object.MemberwiseClone()
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: Object.ReferenceEquals(Object, Object)
- uid: System.Object.ToString
  parent: System.Object
  isExternal: false
  name: ToString()
  nameWithType: Object.ToString()
  fullName: Object.ToString()
- uid: System.Security.Claims.ClaimsPrincipal.AddIdentities(System.Collections.Generic.IEnumerable{System.Security.Claims.ClaimsIdentity})
  parent: System.Security.Claims.ClaimsPrincipal
  isExternal: false
  name: AddIdentities(IEnumerable<ClaimsIdentity>)
  nameWithType: ClaimsPrincipal.AddIdentities(IEnumerable<ClaimsIdentity>)
  fullName: ClaimsPrincipal.AddIdentities(IEnumerable<ClaimsIdentity>)
- uid: System.Security.Claims.ClaimsPrincipal.AddIdentity(System.Security.Claims.ClaimsIdentity)
  parent: System.Security.Claims.ClaimsPrincipal
  isExternal: false
  name: AddIdentity(ClaimsIdentity)
  nameWithType: ClaimsPrincipal.AddIdentity(ClaimsIdentity)
  fullName: ClaimsPrincipal.AddIdentity(ClaimsIdentity)
- uid: System.Security.Claims.ClaimsPrincipal.Claims
  parent: System.Security.Claims.ClaimsPrincipal
  isExternal: false
  name: Claims
  nameWithType: ClaimsPrincipal.Claims
  fullName: ClaimsPrincipal.Claims
- uid: System.Security.Claims.ClaimsPrincipal.ClaimsPrincipalSelector
  parent: System.Security.Claims.ClaimsPrincipal
  isExternal: false
  name: ClaimsPrincipalSelector
  nameWithType: ClaimsPrincipal.ClaimsPrincipalSelector
  fullName: ClaimsPrincipal.ClaimsPrincipalSelector
- uid: System.Security.Claims.ClaimsPrincipal.Clone
  parent: System.Security.Claims.ClaimsPrincipal
  isExternal: false
  name: Clone()
  nameWithType: ClaimsPrincipal.Clone()
  fullName: ClaimsPrincipal.Clone()
- uid: System.Security.Claims.ClaimsPrincipal.CreateClaimsIdentity(System.IO.BinaryReader)
  parent: System.Security.Claims.ClaimsPrincipal
  isExternal: false
  name: CreateClaimsIdentity(BinaryReader)
  nameWithType: ClaimsPrincipal.CreateClaimsIdentity(BinaryReader)
  fullName: ClaimsPrincipal.CreateClaimsIdentity(BinaryReader)
- uid: System.Security.Claims.ClaimsPrincipal.Current
  parent: System.Security.Claims.ClaimsPrincipal
  isExternal: false
  name: Current
  nameWithType: ClaimsPrincipal.Current
  fullName: ClaimsPrincipal.Current
- uid: System.Security.Claims.ClaimsPrincipal.CustomSerializationData
  parent: System.Security.Claims.ClaimsPrincipal
  isExternal: false
  name: CustomSerializationData
  nameWithType: ClaimsPrincipal.CustomSerializationData
  fullName: ClaimsPrincipal.CustomSerializationData
- uid: System.Security.Claims.ClaimsPrincipal.FindAll(System.Predicate{System.Security.Claims.Claim})
  parent: System.Security.Claims.ClaimsPrincipal
  isExternal: false
  name: FindAll(Predicate<Claim>)
  nameWithType: ClaimsPrincipal.FindAll(Predicate<Claim>)
  fullName: ClaimsPrincipal.FindAll(Predicate<Claim>)
- uid: System.Security.Claims.ClaimsPrincipal.FindAll(System.String)
  parent: System.Security.Claims.ClaimsPrincipal
  isExternal: false
  name: FindAll(String)
  nameWithType: ClaimsPrincipal.FindAll(String)
  fullName: ClaimsPrincipal.FindAll(String)
- uid: System.Security.Claims.ClaimsPrincipal.FindFirst(System.Predicate{System.Security.Claims.Claim})
  parent: System.Security.Claims.ClaimsPrincipal
  isExternal: false
  name: FindFirst(Predicate<Claim>)
  nameWithType: ClaimsPrincipal.FindFirst(Predicate<Claim>)
  fullName: ClaimsPrincipal.FindFirst(Predicate<Claim>)
- uid: System.Security.Claims.ClaimsPrincipal.FindFirst(System.String)
  parent: System.Security.Claims.ClaimsPrincipal
  isExternal: false
  name: FindFirst(String)
  nameWithType: ClaimsPrincipal.FindFirst(String)
  fullName: ClaimsPrincipal.FindFirst(String)
- uid: System.Security.Claims.ClaimsPrincipal.HasClaim(System.Predicate{System.Security.Claims.Claim})
  parent: System.Security.Claims.ClaimsPrincipal
  isExternal: false
  name: HasClaim(Predicate<Claim>)
  nameWithType: ClaimsPrincipal.HasClaim(Predicate<Claim>)
  fullName: ClaimsPrincipal.HasClaim(Predicate<Claim>)
- uid: System.Security.Claims.ClaimsPrincipal.HasClaim(System.String,System.String)
  parent: System.Security.Claims.ClaimsPrincipal
  isExternal: false
  name: HasClaim(String, String)
  nameWithType: ClaimsPrincipal.HasClaim(String, String)
  fullName: ClaimsPrincipal.HasClaim(String, String)
- uid: System.Security.Claims.ClaimsPrincipal.Identities
  parent: System.Security.Claims.ClaimsPrincipal
  isExternal: false
  name: Identities
  nameWithType: ClaimsPrincipal.Identities
  fullName: ClaimsPrincipal.Identities
- uid: System.Security.Claims.ClaimsPrincipal.PrimaryIdentitySelector
  parent: System.Security.Claims.ClaimsPrincipal
  isExternal: false
  name: PrimaryIdentitySelector
  nameWithType: ClaimsPrincipal.PrimaryIdentitySelector
  fullName: ClaimsPrincipal.PrimaryIdentitySelector
- uid: System.Security.Claims.ClaimsPrincipal.WriteTo(System.IO.BinaryWriter)
  parent: System.Security.Claims.ClaimsPrincipal
  isExternal: false
  name: WriteTo(BinaryWriter)
  nameWithType: ClaimsPrincipal.WriteTo(BinaryWriter)
  fullName: ClaimsPrincipal.WriteTo(BinaryWriter)
- uid: System.Security.Claims.ClaimsPrincipal.WriteTo(System.IO.BinaryWriter,System.Byte[])
  parent: System.Security.Claims.ClaimsPrincipal
  isExternal: false
  name: WriteTo(BinaryWriter, Byte[])
  nameWithType: ClaimsPrincipal.WriteTo(BinaryWriter, Byte[])
  fullName: ClaimsPrincipal.WriteTo(BinaryWriter, Byte[])
- uid: System.Runtime.Serialization.ISerializable
  parent: System.Runtime.Serialization
  isExternal: false
  name: ISerializable
  nameWithType: ISerializable
  fullName: System.Runtime.Serialization.ISerializable
