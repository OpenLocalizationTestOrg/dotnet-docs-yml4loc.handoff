{"nodes":[{"content":"Specifies flags for the attributes of a method implementation.","nodes":[{"pos":[0,62],"content":"Specifies flags for the attributes of a method implementation.","nodes":[{"content":"Specifies flags for the attributes of a method implementation.","pos":[0,62]}]}],"pos":[1328,1391],"yaml":true},{"content":"The attributes are combined using the bitwise OR operation as follows:  \n  \n **Code implementation masks:**  \n  \n-   `CodeTypeMask`  \n  \n-   `IL`  \n  \n-   `Native`  \n  \n-   `OPTIL`  \n  \n-   `Runtime`  \n  \n **Managed masks:**  \n  \n-   `ManagedMask`  \n  \n-   `Unmanaged`  \n  \n-   `Managed`  \n  \n **Implementation information and interop masks:**  \n  \n-   `ForwardRef`  \n  \n-   `PreserveSig`  \n  \n-   `InternalCall`  \n  \n-   `Synchronized`  \n  \n-   `NoInlining`  \n  \n-   `NoOptimization`  \n  \n-   `MaxMethodImplVal`  \n  \n> [!NOTE]\n>  Locking on the instance or on the type, as with the Synchronized flag, is not recommended for public types, because code other than your own can take locks on public types and instances. This might cause deadlocks or other synchronization problems.","nodes":[{"pos":[0,70],"content":"The attributes are combined using the bitwise OR operation as follows:","nodes":[{"content":"The attributes are combined using the bitwise OR operation as follows:","pos":[0,70]}]},{"pos":[77,107],"content":"<bpt id=\"p1\">**</bpt>Code implementation masks:<ept id=\"p1\">**</ept>","source":"**Code implementation masks:**"},{"pos":[206,224],"content":"<bpt id=\"p1\">**</bpt>Managed masks:<ept id=\"p1\">**</ept>","source":"**Managed masks:**"},{"pos":[294,343],"content":"<bpt id=\"p1\">**</bpt>Implementation information and interop masks:<ept id=\"p1\">**</ept>","source":"**Implementation information and interop masks:**"},{"pos":[520,779],"content":"[!NOTE]\n Locking on the instance or on the type, as with the Synchronized flag, is not recommended for public types, because code other than your own can take locks on public types and instances. This might cause deadlocks or other synchronization problems.","leadings":["","> "],"nodes":[{"content":" Locking on the instance or on the type, as with the Synchronized flag, is not recommended for public types, because code other than your own can take locks on public types and instances. This might cause deadlocks or other synchronization problems.","pos":[8,257],"nodes":[{"content":"Locking on the instance or on the type, as with the Synchronized flag, is not recommended for public types, because code other than your own can take locks on public types and instances.","pos":[1,187]},{"content":"This might cause deadlocks or other synchronization problems.","pos":[188,249]}]}]}],"pos":[1402,2223],"yaml":true,"extradata":"MT"},{"content":"Specifies that the method should be inlined wherever possible.","nodes":[{"pos":[0,62],"content":"Specifies that the method should be inlined wherever possible.","nodes":[{"content":"Specifies that the method should be inlined wherever possible.","pos":[0,62]}]}],"pos":[4073,4136],"yaml":true},{"content":"Specifies flags about code type.","nodes":[{"pos":[0,32],"content":"Specifies flags about code type.","nodes":[{"content":"Specifies flags about code type.","pos":[0,32]}]}],"pos":[5872,5905],"yaml":true},{"content":"Specifies that the method is not defined.","nodes":[{"pos":[0,41],"content":"Specifies that the method is not defined.","nodes":[{"content":"Specifies that the method is not defined.","pos":[0,41]}]}],"pos":[7481,7523],"yaml":true},{"content":"Specifies that the method implementation is in Microsoft intermediate language (MSIL).","nodes":[{"pos":[0,86],"content":"Specifies that the method implementation is in Microsoft intermediate language (MSIL).","nodes":[{"content":"Specifies that the method implementation is in Microsoft intermediate language (MSIL).","pos":[0,86]}]}],"pos":[9049,9136],"yaml":true},{"content":"Specifies an internal call.","nodes":[{"pos":[0,27],"content":"Specifies an internal call.","nodes":[{"content":"Specifies an internal call.","pos":[0,27]}]}],"pos":[10714,10742],"yaml":true},{"content":"Specifies that the method is implemented in managed code.","nodes":[{"pos":[0,57],"content":"Specifies that the method is implemented in managed code.","nodes":[{"content":"Specifies that the method is implemented in managed code.","pos":[0,57]}]}],"pos":[12300,12358],"yaml":true},{"content":"Specifies whether the method is implemented in managed or unmanaged code.","nodes":[{"pos":[0,73],"content":"Specifies whether the method is implemented in managed or unmanaged code.","nodes":[{"content":"Specifies whether the method is implemented in managed or unmanaged code.","pos":[0,73]}]}],"pos":[13935,14009],"yaml":true},{"content":"Specifies a range check value.","nodes":[{"pos":[0,30],"content":"Specifies a range check value.","nodes":[{"content":"Specifies a range check value.","pos":[0,30]}]}],"pos":[15587,15618],"yaml":true},{"content":"Specifies that the method implementation is native.","nodes":[{"pos":[0,51],"content":"Specifies that the method implementation is native.","nodes":[{"content":"Specifies that the method implementation is native.","pos":[0,51]}]}],"pos":[16870,16922],"yaml":true},{"content":"Specifies that the method cannot be inlined.","nodes":[{"pos":[0,44],"content":"Specifies that the method cannot be inlined.","nodes":[{"content":"Specifies that the method cannot be inlined.","pos":[0,44]}]}],"pos":[18492,18537],"yaml":true},{"content":"Specifies that the method is not optimized by the just-in-time (JIT) compiler or by native code generation (see [Ngen.exe](~/docs/framework/tools/ngen-exe-native-image-generator.md)) when debugging possible code generation problems.","nodes":[{"pos":[0,232],"content":"Specifies that the method is not optimized by the just-in-time (JIT) compiler or by native code generation (see <bpt id=\"p1\">[</bpt>Ngen.exe<ept id=\"p1\">](~/docs/framework/tools/ngen-exe-native-image-generator.md)</ept>) when debugging possible code generation problems.","source":"Specifies that the method is not optimized by the just-in-time (JIT) compiler or by native code generation (see [Ngen.exe](~/docs/framework/tools/ngen-exe-native-image-generator.md)) when debugging possible code generation problems."}],"pos":[20135,20368],"yaml":true},{"content":"Specifies that the method implementation is in Optimized Intermediate Language (OPTIL).","nodes":[{"pos":[0,87],"content":"Specifies that the method implementation is in Optimized Intermediate Language (OPTIL).","nodes":[{"content":"Specifies that the method implementation is in Optimized Intermediate Language (OPTIL).","pos":[0,87]}]}],"pos":[21916,22004],"yaml":true},{"content":"Specifies that the method signature is exported exactly as declared.","nodes":[{"pos":[0,68],"content":"Specifies that the method signature is exported exactly as declared.","nodes":[{"content":"Specifies that the method signature is exported exactly as declared.","pos":[0,68]}]}],"pos":[23579,23648],"yaml":true},{"content":"Specifies that the method implementation is provided by the runtime.","nodes":[{"pos":[0,68],"content":"Specifies that the method implementation is provided by the runtime.","nodes":[{"content":"Specifies that the method implementation is provided by the runtime.","pos":[0,68]}]}],"pos":[25205,25274],"yaml":true},{"content":"Specifies that the method is single-threaded through the body. Static methods (`Shared` in Visual Basic) lock on the type, whereas instance methods lock on the instance. You can also use the C# [lock statement](~/docs/csharp/language-reference/keywords/lock-statement.md) or the Visual Basic [SyncLock statement](~/docs/visual-basic/language-reference/statements/synclock-statement.md) for this purpose.","nodes":[{"pos":[0,403],"content":"Specifies that the method is single-threaded through the body. Static methods (`Shared` in Visual Basic) lock on the type, whereas instance methods lock on the instance. You can also use the C# [lock statement](~/docs/csharp/language-reference/keywords/lock-statement.md) or the Visual Basic [SyncLock statement](~/docs/visual-basic/language-reference/statements/synclock-statement.md) for this purpose.","nodes":[{"content":"Specifies that the method is single-threaded through the body.","pos":[0,62]},{"content":"Static methods (<ph id=\"ph1\">`Shared`</ph> in Visual Basic) lock on the type, whereas instance methods lock on the instance.","pos":[63,169],"source":" Static methods (`Shared` in Visual Basic) lock on the type, whereas instance methods lock on the instance."},{"content":"You can also use the C# <bpt id=\"p1\">[</bpt>lock statement<ept id=\"p1\">](~/docs/csharp/language-reference/keywords/lock-statement.md)</ept> or the Visual Basic <bpt id=\"p2\">[</bpt>SyncLock statement<ept id=\"p2\">](~/docs/visual-basic/language-reference/statements/synclock-statement.md)</ept> for this purpose.","pos":[170,403],"source":" You can also use the C# [lock statement](~/docs/csharp/language-reference/keywords/lock-statement.md) or the Visual Basic [SyncLock statement](~/docs/visual-basic/language-reference/statements/synclock-statement.md) for this purpose."}]}],"pos":[26857,27261],"yaml":true},{"content":"Specifies that the method is implemented in unmanaged code.","nodes":[{"pos":[0,59],"content":"Specifies that the method is implemented in unmanaged code.","nodes":[{"content":"Specifies that the method is implemented in unmanaged code.","pos":[0,59]}]}],"pos":[28831,28891],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Reflection.MethodImplAttributes\n  commentId: T:System.Reflection.MethodImplAttributes\n  id: MethodImplAttributes\n  children:\n  - System.Reflection.MethodImplAttributes.AggressiveInlining\n  - System.Reflection.MethodImplAttributes.CodeTypeMask\n  - System.Reflection.MethodImplAttributes.ForwardRef\n  - System.Reflection.MethodImplAttributes.IL\n  - System.Reflection.MethodImplAttributes.InternalCall\n  - System.Reflection.MethodImplAttributes.Managed\n  - System.Reflection.MethodImplAttributes.ManagedMask\n  - System.Reflection.MethodImplAttributes.MaxMethodImplVal\n  - System.Reflection.MethodImplAttributes.Native\n  - System.Reflection.MethodImplAttributes.NoInlining\n  - System.Reflection.MethodImplAttributes.NoOptimization\n  - System.Reflection.MethodImplAttributes.OPTIL\n  - System.Reflection.MethodImplAttributes.PreserveSig\n  - System.Reflection.MethodImplAttributes.Runtime\n  - System.Reflection.MethodImplAttributes.Synchronized\n  - System.Reflection.MethodImplAttributes.Unmanaged\n  langs:\n  - csharp\n  name: MethodImplAttributes\n  nameWithType: MethodImplAttributes\n  fullName: System.Reflection.MethodImplAttributes\n  type: Enum\n  assemblies:\n  - System.Reflection.Primitives\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Reflection\n  summary: Specifies flags for the attributes of a method implementation.\n  remarks: \"The attributes are combined using the bitwise OR operation as follows:  \\n  \\n **Code implementation masks:**  \\n  \\n-   `CodeTypeMask`  \\n  \\n-   `IL`  \\n  \\n-   `Native`  \\n  \\n-   `OPTIL`  \\n  \\n-   `Runtime`  \\n  \\n **Managed masks:**  \\n  \\n-   `ManagedMask`  \\n  \\n-   `Unmanaged`  \\n  \\n-   `Managed`  \\n  \\n **Implementation information and interop masks:**  \\n  \\n-   `ForwardRef`  \\n  \\n-   `PreserveSig`  \\n  \\n-   `InternalCall`  \\n  \\n-   `Synchronized`  \\n  \\n-   `NoInlining`  \\n  \\n-   `NoOptimization`  \\n  \\n-   `MaxMethodImplVal`  \\n  \\n> [!NOTE]\\n>  Locking on the instance or on the type, as with the Synchronized flag, is not recommended for public types, because code other than your own can take locks on public types and instances. This might cause deadlocks or other synchronization problems.\"\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public enum MethodImplAttributes\n  inheritance:\n  - System.Object\n  - System.ValueType\n  - System.Enum\n  attributes:\n  - type: System.Runtime.InteropServices.ComVisibleAttribute\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  internal_use_only: true\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/MethodImplAttributes.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Reflection.MethodImplAttributes.AggressiveInlining\n  commentId: F:System.Reflection.MethodImplAttributes.AggressiveInlining\n  id: AggressiveInlining\n  parent: System.Reflection.MethodImplAttributes\n  langs:\n  - csharp\n  name: AggressiveInlining\n  nameWithType: MethodImplAttributes.AggressiveInlining\n  fullName: MethodImplAttributes.AggressiveInlining\n  type: Field\n  assemblies:\n  - System.Reflection.Primitives\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Reflection\n  summary: Specifies that the method should be inlined wherever possible.\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(false)]\n\n      AggressiveInlining\n    return:\n      type: System.Reflection.MethodImplAttributes\n      description: ''\n  exceptions: []\n  attributes:\n  - type: System.Runtime.InteropServices.ComVisibleAttribute\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  internal_use_only: true\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/MethodImplAttributes.xml\n- uid: System.Reflection.MethodImplAttributes.CodeTypeMask\n  commentId: F:System.Reflection.MethodImplAttributes.CodeTypeMask\n  id: CodeTypeMask\n  parent: System.Reflection.MethodImplAttributes\n  langs:\n  - csharp\n  name: CodeTypeMask\n  nameWithType: MethodImplAttributes.CodeTypeMask\n  fullName: MethodImplAttributes.CodeTypeMask\n  type: Field\n  assemblies:\n  - System.Reflection.Primitives\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Reflection\n  summary: Specifies flags about code type.\n  syntax:\n    content: CodeTypeMask\n    return:\n      type: System.Reflection.MethodImplAttributes\n      description: ''\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  internal_use_only: true\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/MethodImplAttributes.xml\n- uid: System.Reflection.MethodImplAttributes.ForwardRef\n  commentId: F:System.Reflection.MethodImplAttributes.ForwardRef\n  id: ForwardRef\n  parent: System.Reflection.MethodImplAttributes\n  langs:\n  - csharp\n  name: ForwardRef\n  nameWithType: MethodImplAttributes.ForwardRef\n  fullName: MethodImplAttributes.ForwardRef\n  type: Field\n  assemblies:\n  - System.Reflection.Primitives\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Reflection\n  summary: Specifies that the method is not defined.\n  syntax:\n    content: ForwardRef\n    return:\n      type: System.Reflection.MethodImplAttributes\n      description: ''\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  internal_use_only: true\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/MethodImplAttributes.xml\n- uid: System.Reflection.MethodImplAttributes.IL\n  commentId: F:System.Reflection.MethodImplAttributes.IL\n  id: IL\n  parent: System.Reflection.MethodImplAttributes\n  langs:\n  - csharp\n  name: IL\n  nameWithType: MethodImplAttributes.IL\n  fullName: MethodImplAttributes.IL\n  type: Field\n  assemblies:\n  - System.Reflection.Primitives\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Reflection\n  summary: Specifies that the method implementation is in Microsoft intermediate language (MSIL).\n  syntax:\n    content: IL\n    return:\n      type: System.Reflection.MethodImplAttributes\n      description: ''\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  internal_use_only: true\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/MethodImplAttributes.xml\n- uid: System.Reflection.MethodImplAttributes.InternalCall\n  commentId: F:System.Reflection.MethodImplAttributes.InternalCall\n  id: InternalCall\n  parent: System.Reflection.MethodImplAttributes\n  langs:\n  - csharp\n  name: InternalCall\n  nameWithType: MethodImplAttributes.InternalCall\n  fullName: MethodImplAttributes.InternalCall\n  type: Field\n  assemblies:\n  - System.Reflection.Primitives\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Reflection\n  summary: Specifies an internal call.\n  syntax:\n    content: InternalCall\n    return:\n      type: System.Reflection.MethodImplAttributes\n      description: ''\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  internal_use_only: true\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/MethodImplAttributes.xml\n- uid: System.Reflection.MethodImplAttributes.Managed\n  commentId: F:System.Reflection.MethodImplAttributes.Managed\n  id: Managed\n  parent: System.Reflection.MethodImplAttributes\n  langs:\n  - csharp\n  name: Managed\n  nameWithType: MethodImplAttributes.Managed\n  fullName: MethodImplAttributes.Managed\n  type: Field\n  assemblies:\n  - System.Reflection.Primitives\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Reflection\n  summary: Specifies that the method is implemented in managed code.\n  syntax:\n    content: Managed\n    return:\n      type: System.Reflection.MethodImplAttributes\n      description: ''\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  internal_use_only: true\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/MethodImplAttributes.xml\n- uid: System.Reflection.MethodImplAttributes.ManagedMask\n  commentId: F:System.Reflection.MethodImplAttributes.ManagedMask\n  id: ManagedMask\n  parent: System.Reflection.MethodImplAttributes\n  langs:\n  - csharp\n  name: ManagedMask\n  nameWithType: MethodImplAttributes.ManagedMask\n  fullName: MethodImplAttributes.ManagedMask\n  type: Field\n  assemblies:\n  - System.Reflection.Primitives\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Reflection\n  summary: Specifies whether the method is implemented in managed or unmanaged code.\n  syntax:\n    content: ManagedMask\n    return:\n      type: System.Reflection.MethodImplAttributes\n      description: ''\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  internal_use_only: true\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/MethodImplAttributes.xml\n- uid: System.Reflection.MethodImplAttributes.MaxMethodImplVal\n  commentId: F:System.Reflection.MethodImplAttributes.MaxMethodImplVal\n  id: MaxMethodImplVal\n  parent: System.Reflection.MethodImplAttributes\n  langs:\n  - csharp\n  name: MaxMethodImplVal\n  nameWithType: MethodImplAttributes.MaxMethodImplVal\n  fullName: MethodImplAttributes.MaxMethodImplVal\n  type: Field\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Reflection\n  summary: Specifies a range check value.\n  syntax:\n    content: MaxMethodImplVal\n    return:\n      type: System.Reflection.MethodImplAttributes\n      description: ''\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  internal_use_only: true\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/MethodImplAttributes.xml\n- uid: System.Reflection.MethodImplAttributes.Native\n  commentId: F:System.Reflection.MethodImplAttributes.Native\n  id: Native\n  parent: System.Reflection.MethodImplAttributes\n  langs:\n  - csharp\n  name: Native\n  nameWithType: MethodImplAttributes.Native\n  fullName: MethodImplAttributes.Native\n  type: Field\n  assemblies:\n  - System.Reflection.Primitives\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Reflection\n  summary: Specifies that the method implementation is native.\n  syntax:\n    content: Native\n    return:\n      type: System.Reflection.MethodImplAttributes\n      description: ''\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  internal_use_only: true\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/MethodImplAttributes.xml\n- uid: System.Reflection.MethodImplAttributes.NoInlining\n  commentId: F:System.Reflection.MethodImplAttributes.NoInlining\n  id: NoInlining\n  parent: System.Reflection.MethodImplAttributes\n  langs:\n  - csharp\n  name: NoInlining\n  nameWithType: MethodImplAttributes.NoInlining\n  fullName: MethodImplAttributes.NoInlining\n  type: Field\n  assemblies:\n  - System.Reflection.Primitives\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Reflection\n  summary: Specifies that the method cannot be inlined.\n  syntax:\n    content: NoInlining\n    return:\n      type: System.Reflection.MethodImplAttributes\n      description: ''\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  internal_use_only: true\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/MethodImplAttributes.xml\n- uid: System.Reflection.MethodImplAttributes.NoOptimization\n  commentId: F:System.Reflection.MethodImplAttributes.NoOptimization\n  id: NoOptimization\n  parent: System.Reflection.MethodImplAttributes\n  langs:\n  - csharp\n  name: NoOptimization\n  nameWithType: MethodImplAttributes.NoOptimization\n  fullName: MethodImplAttributes.NoOptimization\n  type: Field\n  assemblies:\n  - System.Reflection.Primitives\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Reflection\n  summary: Specifies that the method is not optimized by the just-in-time (JIT) compiler or by native code generation (see [Ngen.exe](~/docs/framework/tools/ngen-exe-native-image-generator.md)) when debugging possible code generation problems.\n  syntax:\n    content: NoOptimization\n    return:\n      type: System.Reflection.MethodImplAttributes\n      description: ''\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  internal_use_only: true\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/MethodImplAttributes.xml\n- uid: System.Reflection.MethodImplAttributes.OPTIL\n  commentId: F:System.Reflection.MethodImplAttributes.OPTIL\n  id: OPTIL\n  parent: System.Reflection.MethodImplAttributes\n  langs:\n  - csharp\n  name: OPTIL\n  nameWithType: MethodImplAttributes.OPTIL\n  fullName: MethodImplAttributes.OPTIL\n  type: Field\n  assemblies:\n  - System.Reflection.Primitives\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Reflection\n  summary: Specifies that the method implementation is in Optimized Intermediate Language (OPTIL).\n  syntax:\n    content: OPTIL\n    return:\n      type: System.Reflection.MethodImplAttributes\n      description: ''\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  internal_use_only: true\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/MethodImplAttributes.xml\n- uid: System.Reflection.MethodImplAttributes.PreserveSig\n  commentId: F:System.Reflection.MethodImplAttributes.PreserveSig\n  id: PreserveSig\n  parent: System.Reflection.MethodImplAttributes\n  langs:\n  - csharp\n  name: PreserveSig\n  nameWithType: MethodImplAttributes.PreserveSig\n  fullName: MethodImplAttributes.PreserveSig\n  type: Field\n  assemblies:\n  - System.Reflection.Primitives\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Reflection\n  summary: Specifies that the method signature is exported exactly as declared.\n  syntax:\n    content: PreserveSig\n    return:\n      type: System.Reflection.MethodImplAttributes\n      description: ''\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  internal_use_only: true\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/MethodImplAttributes.xml\n- uid: System.Reflection.MethodImplAttributes.Runtime\n  commentId: F:System.Reflection.MethodImplAttributes.Runtime\n  id: Runtime\n  parent: System.Reflection.MethodImplAttributes\n  langs:\n  - csharp\n  name: Runtime\n  nameWithType: MethodImplAttributes.Runtime\n  fullName: MethodImplAttributes.Runtime\n  type: Field\n  assemblies:\n  - System.Reflection.Primitives\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Reflection\n  summary: Specifies that the method implementation is provided by the runtime.\n  syntax:\n    content: Runtime\n    return:\n      type: System.Reflection.MethodImplAttributes\n      description: ''\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  internal_use_only: true\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/MethodImplAttributes.xml\n- uid: System.Reflection.MethodImplAttributes.Synchronized\n  commentId: F:System.Reflection.MethodImplAttributes.Synchronized\n  id: Synchronized\n  parent: System.Reflection.MethodImplAttributes\n  langs:\n  - csharp\n  name: Synchronized\n  nameWithType: MethodImplAttributes.Synchronized\n  fullName: MethodImplAttributes.Synchronized\n  type: Field\n  assemblies:\n  - System.Reflection.Primitives\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Reflection\n  summary: Specifies that the method is single-threaded through the body. Static methods (`Shared` in Visual Basic) lock on the type, whereas instance methods lock on the instance. You can also use the C# [lock statement](~/docs/csharp/language-reference/keywords/lock-statement.md) or the Visual Basic [SyncLock statement](~/docs/visual-basic/language-reference/statements/synclock-statement.md) for this purpose.\n  syntax:\n    content: Synchronized\n    return:\n      type: System.Reflection.MethodImplAttributes\n      description: ''\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  internal_use_only: true\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/MethodImplAttributes.xml\n- uid: System.Reflection.MethodImplAttributes.Unmanaged\n  commentId: F:System.Reflection.MethodImplAttributes.Unmanaged\n  id: Unmanaged\n  parent: System.Reflection.MethodImplAttributes\n  langs:\n  - csharp\n  name: Unmanaged\n  nameWithType: MethodImplAttributes.Unmanaged\n  fullName: MethodImplAttributes.Unmanaged\n  type: Field\n  assemblies:\n  - System.Reflection.Primitives\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Reflection\n  summary: Specifies that the method is implemented in unmanaged code.\n  syntax:\n    content: Unmanaged\n    return:\n      type: System.Reflection.MethodImplAttributes\n      description: ''\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.0\n  - netstandard-1.1\n  - netstandard-1.2\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  internal_use_only: true\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Reflection/MethodImplAttributes.xml\nreferences:\n- uid: System.Enum\n  parent: System\n  isExternal: false\n  name: Enum\n  nameWithType: Enum\n  fullName: System.Enum\n- uid: System.Reflection.MethodImplAttributes.AggressiveInlining\n  parent: System.Reflection.MethodImplAttributes\n  isExternal: false\n  name: AggressiveInlining\n  nameWithType: MethodImplAttributes.AggressiveInlining\n  fullName: MethodImplAttributes.AggressiveInlining\n- uid: System.Reflection.MethodImplAttributes\n  parent: System.Reflection\n  isExternal: false\n  name: MethodImplAttributes\n  nameWithType: MethodImplAttributes\n  fullName: System.Reflection.MethodImplAttributes\n- uid: System.Reflection.MethodImplAttributes.CodeTypeMask\n  parent: System.Reflection.MethodImplAttributes\n  isExternal: false\n  name: CodeTypeMask\n  nameWithType: MethodImplAttributes.CodeTypeMask\n  fullName: MethodImplAttributes.CodeTypeMask\n- uid: System.Reflection.MethodImplAttributes.ForwardRef\n  parent: System.Reflection.MethodImplAttributes\n  isExternal: false\n  name: ForwardRef\n  nameWithType: MethodImplAttributes.ForwardRef\n  fullName: MethodImplAttributes.ForwardRef\n- uid: System.Reflection.MethodImplAttributes.IL\n  parent: System.Reflection.MethodImplAttributes\n  isExternal: false\n  name: IL\n  nameWithType: MethodImplAttributes.IL\n  fullName: MethodImplAttributes.IL\n- uid: System.Reflection.MethodImplAttributes.InternalCall\n  parent: System.Reflection.MethodImplAttributes\n  isExternal: false\n  name: InternalCall\n  nameWithType: MethodImplAttributes.InternalCall\n  fullName: MethodImplAttributes.InternalCall\n- uid: System.Reflection.MethodImplAttributes.Managed\n  parent: System.Reflection.MethodImplAttributes\n  isExternal: false\n  name: Managed\n  nameWithType: MethodImplAttributes.Managed\n  fullName: MethodImplAttributes.Managed\n- uid: System.Reflection.MethodImplAttributes.ManagedMask\n  parent: System.Reflection.MethodImplAttributes\n  isExternal: false\n  name: ManagedMask\n  nameWithType: MethodImplAttributes.ManagedMask\n  fullName: MethodImplAttributes.ManagedMask\n- uid: System.Reflection.MethodImplAttributes.MaxMethodImplVal\n  parent: System.Reflection.MethodImplAttributes\n  isExternal: false\n  name: MaxMethodImplVal\n  nameWithType: MethodImplAttributes.MaxMethodImplVal\n  fullName: MethodImplAttributes.MaxMethodImplVal\n- uid: System.Reflection.MethodImplAttributes.Native\n  parent: System.Reflection.MethodImplAttributes\n  isExternal: false\n  name: Native\n  nameWithType: MethodImplAttributes.Native\n  fullName: MethodImplAttributes.Native\n- uid: System.Reflection.MethodImplAttributes.NoInlining\n  parent: System.Reflection.MethodImplAttributes\n  isExternal: false\n  name: NoInlining\n  nameWithType: MethodImplAttributes.NoInlining\n  fullName: MethodImplAttributes.NoInlining\n- uid: System.Reflection.MethodImplAttributes.NoOptimization\n  parent: System.Reflection.MethodImplAttributes\n  isExternal: false\n  name: NoOptimization\n  nameWithType: MethodImplAttributes.NoOptimization\n  fullName: MethodImplAttributes.NoOptimization\n- uid: System.Reflection.MethodImplAttributes.OPTIL\n  parent: System.Reflection.MethodImplAttributes\n  isExternal: false\n  name: OPTIL\n  nameWithType: MethodImplAttributes.OPTIL\n  fullName: MethodImplAttributes.OPTIL\n- uid: System.Reflection.MethodImplAttributes.PreserveSig\n  parent: System.Reflection.MethodImplAttributes\n  isExternal: false\n  name: PreserveSig\n  nameWithType: MethodImplAttributes.PreserveSig\n  fullName: MethodImplAttributes.PreserveSig\n- uid: System.Reflection.MethodImplAttributes.Runtime\n  parent: System.Reflection.MethodImplAttributes\n  isExternal: false\n  name: Runtime\n  nameWithType: MethodImplAttributes.Runtime\n  fullName: MethodImplAttributes.Runtime\n- uid: System.Reflection.MethodImplAttributes.Synchronized\n  parent: System.Reflection.MethodImplAttributes\n  isExternal: false\n  name: Synchronized\n  nameWithType: MethodImplAttributes.Synchronized\n  fullName: MethodImplAttributes.Synchronized\n- uid: System.Reflection.MethodImplAttributes.Unmanaged\n  parent: System.Reflection.MethodImplAttributes\n  isExternal: false\n  name: Unmanaged\n  nameWithType: MethodImplAttributes.Unmanaged\n  fullName: MethodImplAttributes.Unmanaged\n"}