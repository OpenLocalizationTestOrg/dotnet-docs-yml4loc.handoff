### YamlMime:ManagedReference
items:
- uid: System.Globalization.HijriCalendar
  commentId: T:System.Globalization.HijriCalendar
  id: HijriCalendar
  children:
  - System.Globalization.HijriCalendar.#ctor
  - System.Globalization.HijriCalendar.AddMonths(System.DateTime,System.Int32)
  - System.Globalization.HijriCalendar.AddYears(System.DateTime,System.Int32)
  - System.Globalization.HijriCalendar.AlgorithmType
  - System.Globalization.HijriCalendar.DaysInYearBeforeMinSupportedYear
  - System.Globalization.HijriCalendar.Eras
  - System.Globalization.HijriCalendar.GetDayOfMonth(System.DateTime)
  - System.Globalization.HijriCalendar.GetDayOfWeek(System.DateTime)
  - System.Globalization.HijriCalendar.GetDayOfYear(System.DateTime)
  - System.Globalization.HijriCalendar.GetDaysInMonth(System.Int32,System.Int32,System.Int32)
  - System.Globalization.HijriCalendar.GetDaysInYear(System.Int32,System.Int32)
  - System.Globalization.HijriCalendar.GetEra(System.DateTime)
  - System.Globalization.HijriCalendar.GetLeapMonth(System.Int32,System.Int32)
  - System.Globalization.HijriCalendar.GetMonth(System.DateTime)
  - System.Globalization.HijriCalendar.GetMonthsInYear(System.Int32,System.Int32)
  - System.Globalization.HijriCalendar.GetYear(System.DateTime)
  - System.Globalization.HijriCalendar.HijriAdjustment
  - System.Globalization.HijriCalendar.HijriEra
  - System.Globalization.HijriCalendar.IsLeapDay(System.Int32,System.Int32,System.Int32,System.Int32)
  - System.Globalization.HijriCalendar.IsLeapMonth(System.Int32,System.Int32,System.Int32)
  - System.Globalization.HijriCalendar.IsLeapYear(System.Int32,System.Int32)
  - System.Globalization.HijriCalendar.MaxSupportedDateTime
  - System.Globalization.HijriCalendar.MinSupportedDateTime
  - System.Globalization.HijriCalendar.ToDateTime(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  - System.Globalization.HijriCalendar.ToFourDigitYear(System.Int32)
  - System.Globalization.HijriCalendar.TwoDigitYearMax
  langs:
  - csharp
  name: HijriCalendar
  nameWithType: HijriCalendar
  fullName: System.Globalization.HijriCalendar
  type: Class
  assemblies:
  - System.Globalization.Calendars
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System.Globalization
  summary: Represents the Hijri calendar.
  remarks: "The Hijri calendar recognizes one era: A.H. (Latin \"Anno Hegirae\", which means \"the year of the migration,\" in reference to the migration of Muhammad (PBUH) from Mecca).  \n  \n> [!NOTE]\n>  For information about using the <xref:System.Globalization.HijriCalendar> class and the other calendar classes in the .NET Framework, see [Working with Calendars](~/docs/standard/datetime/working-with-calendars.md).  \n  \n In every 30-year cycle that ends with a year that is evenly divisible by 30, the 2nd, 5th, 7th, 10th, 13th, 16th, 18th, 21st, 24th, 26th, and 29th years are leap years. A common year has 354 days and a leap year has 355 days.  \n  \n The Hijri calendar has 12 months with 29 to 30 days each:  \n  \n|GetMonth value|Month|Days in common years|Days in leap years|  \n|--------------------|-----------|--------------------------|------------------------|  \n|1|محرم (Muharram)|30|30|  \n|2|صفر (Safar)|29|29|  \n|3|‏ربيع الاول (Rabi I)|30|30|  \n|4|‏ربيع الثاني (Rabi II)|29|29|  \n|5|جمادى الاولى (Jumada I)|30|30|  \n|6|جمادى الثانية (Jumada II)|29|29|  \n|7|رجب (Rajab)|30|30|  \n|8|شعبان (Shaban)|29|29|  \n|9|رمضان (Ramadan)|30|30|  \n|10|شوال (Shawwal)|29|29|  \n|11|ذو القعدة (Zulkadah)|30|30|  \n|12|ذو الحجة (Zulhijjah)|29|30|  \n  \n Ramadan, the month of fasting in the Muslim world, officially starts and ends according to a decree that is based on the observation of the new moon. Therefore, the number of days in Shaban and the number of days in Ramadan vary.  \n  \n The date January 1, 2001 A.D. in the Gregorian calendar is roughly equivalent to the sixth day of Shawwal in the year 1421 A.H. in the Hijri calendar.  \n  \n This implementation of the <xref:System.Globalization.HijriCalendar> class adjusts the calendar date by adding or subtracting a value from zero to two days to accommodate the variances in the start and the end of Ramadan and to accommodate the date difference between countries/regions. That value is stored in the <xref:System.Globalization.HijriCalendar.HijriAdjustment%2A> property. If <xref:System.Globalization.HijriCalendar.HijriAdjustment%2A> is not set explicitly, it derives its value from the settings in the regional and language options portion of Control Panel and is stored in the registry value HKEY_CURRENT_USER\\Control Panel\\International\\AddHijriDate. However, that information can change during the life of the <xref:System.AppDomain>. The <xref:System.Globalization.HijriCalendar> class does not detect changes in the system settings automatically.  \n  \n Each <xref:System.Globalization.CultureInfo> supports a set of calendars. The <xref:System.Globalization.CultureInfo.Calendar%2A> property returns the default calendar for the culture, and the <xref:System.Globalization.CultureInfo.OptionalCalendars%2A> property returns an array containing all the calendars supported by the culture. To change the calendar used by a <xref:System.Globalization.CultureInfo>, the application should set the <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> property of <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=fullName> to a new <xref:System.Globalization.Calendar>."
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public class HijriCalendar : System.Globalization.Calendar
  inheritance:
  - System.Object
  - System.Globalization.Calendar
  implements: []
  inheritedMembers:
  - System.Globalization.Calendar.AddDays(System.DateTime,System.Int32)
  - System.Globalization.Calendar.AddHours(System.DateTime,System.Int32)
  - System.Globalization.Calendar.AddMilliseconds(System.DateTime,System.Double)
  - System.Globalization.Calendar.AddMinutes(System.DateTime,System.Int32)
  - System.Globalization.Calendar.AddSeconds(System.DateTime,System.Int32)
  - System.Globalization.Calendar.AddWeeks(System.DateTime,System.Int32)
  - System.Globalization.Calendar.Clone
  - System.Globalization.Calendar.CurrentEra
  - System.Globalization.Calendar.GetDaysInMonth(System.Int32,System.Int32)
  - System.Globalization.Calendar.GetDaysInYear(System.Int32)
  - System.Globalization.Calendar.GetHour(System.DateTime)
  - System.Globalization.Calendar.GetLeapMonth(System.Int32)
  - System.Globalization.Calendar.GetMilliseconds(System.DateTime)
  - System.Globalization.Calendar.GetMinute(System.DateTime)
  - System.Globalization.Calendar.GetMonthsInYear(System.Int32)
  - System.Globalization.Calendar.GetSecond(System.DateTime)
  - System.Globalization.Calendar.GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek)
  - System.Globalization.Calendar.IsLeapDay(System.Int32,System.Int32,System.Int32)
  - System.Globalization.Calendar.IsLeapMonth(System.Int32,System.Int32)
  - System.Globalization.Calendar.IsLeapYear(System.Int32)
  - System.Globalization.Calendar.IsReadOnly
  - System.Globalization.Calendar.ReadOnly(System.Globalization.Calendar)
  - System.Globalization.Calendar.ToDateTime(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  attributes:
  - type: System.Runtime.InteropServices.ComVisibleAttribute
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/HijriCalendar.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Globalization.HijriCalendar.#ctor
  commentId: M:System.Globalization.HijriCalendar.#ctor
  id: '#ctor'
  parent: System.Globalization.HijriCalendar
  langs:
  - csharp
  name: HijriCalendar()
  nameWithType: HijriCalendar.HijriCalendar()
  fullName: HijriCalendar.HijriCalendar()
  type: Constructor
  assemblies:
  - System.Globalization.Calendars
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System.Globalization
  summary: Initializes a new instance of the <xref href="System.Globalization.HijriCalendar"></xref> class.
  syntax:
    content: public HijriCalendar ();
    parameters: []
  overload: System.Globalization.HijriCalendar.#ctor*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/HijriCalendar.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Globalization.HijriCalendar.AddMonths(System.DateTime,System.Int32)
  commentId: M:System.Globalization.HijriCalendar.AddMonths(System.DateTime,System.Int32)
  id: AddMonths(System.DateTime,System.Int32)
  parent: System.Globalization.HijriCalendar
  langs:
  - csharp
  name: AddMonths(DateTime, Int32)
  nameWithType: HijriCalendar.AddMonths(DateTime, Int32)
  fullName: HijriCalendar.AddMonths(DateTime, Int32)
  type: Method
  assemblies:
  - System.Globalization.Calendars
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System.Globalization
  summary: Returns a <xref href="System.DateTime"></xref> that is the specified number of months away from the specified <xref href="System.DateTime"></xref>.
  remarks: "The day part of the resulting <xref:System.DateTime> is affected if the resulting day is not a valid day in the resulting month of the resulting year. It is changed to the last valid day in the resulting month of the resulting year. The year part of the resulting <xref:System.DateTime> is affected if the resulting month is outside the year of the specified <xref:System.DateTime>. This implementation supports only the current era. Therefore, <xref:System.ArgumentException> is thrown if the resulting year is outside the era of the specified <xref:System.DateTime>. The time-of-day part of the resulting <xref:System.DateTime> remains the same as the specified <xref:System.DateTime>.  \n  \n For example, if the specified month is Zulkadah, which has 30 days, the specified day is the 30th day of that month, and the value of the `months` parameter is 3, the resulting year is one more than the specified year, the resulting month is Safar, and the resulting day is the 29th day, which is the last day in Safar.  \n  \n If the value of the `months` parameter is negative, the resulting <xref:System.DateTime> is earlier than the specified <xref:System.DateTime>.  \n  \n The<xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> value always equals <xref:System.DateTimeKind?displayProperty=fullName>. You can preserve the <xref:System.DateTime.Kind%2A> property of the `time` parameter by calling the <xref:System.DateTime.SpecifyKind%2A?displayProperty=fullName> method, as the following example shows.  \n  \n [!code-csharp[System.Globalization.Calendar.AddMethods#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.calendar.addmethods/cs/add1.cs#5)]\n [!code-vb[System.Globalization.Calendar.AddMethods#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.calendar.addmethods/vb/add1.vb#5)]"
  example:
  - "The following code example displays the values of several components of a <xref:System.DateTime> in terms of the Hijri calendar.  \n  \n [!code-cpp[System.Globalization.HijriCalendar_AddGet#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.HijriCalendar_AddGet/CPP/hijricalendar_addget.cpp#1)]\n [!code-csharp[System.Globalization.HijriCalendar_AddGet#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.HijriCalendar_AddGet/CS/hijricalendar_addget.cs#1)]\n [!code-vb[System.Globalization.HijriCalendar_AddGet#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.HijriCalendar_AddGet/VB/hijricalendar_addget.vb#1)]"
  syntax:
    content: public override DateTime AddMonths (DateTime time, int months);
    parameters:
    - id: time
      type: System.DateTime
      description: The <xref href="System.DateTime"></xref> to add months to.
    - id: months
      type: System.Int32
      description: The number of months to add.
    return:
      type: System.DateTime
      description: The <xref href="System.DateTime"></xref> that results from adding the specified number of months to the specified <xref href="System.DateTime"></xref>.
  overload: System.Globalization.HijriCalendar.AddMonths*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: The resulting <xref href="System.DateTime"></xref>.
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>months</code> is less than -120000.  \n  \n -or-  \n  \n <code>months</code> is greater than 120000."
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/HijriCalendar.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Globalization.HijriCalendar.AddYears(System.DateTime,System.Int32)
  commentId: M:System.Globalization.HijriCalendar.AddYears(System.DateTime,System.Int32)
  id: AddYears(System.DateTime,System.Int32)
  parent: System.Globalization.HijriCalendar
  langs:
  - csharp
  name: AddYears(DateTime, Int32)
  nameWithType: HijriCalendar.AddYears(DateTime, Int32)
  fullName: HijriCalendar.AddYears(DateTime, Int32)
  type: Method
  assemblies:
  - System.Globalization.Calendars
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System.Globalization
  summary: Returns a <xref href="System.DateTime"></xref> that is the specified number of years away from the specified <xref href="System.DateTime"></xref>.
  remarks: "The day part of the resulting <xref:System.DateTime> is affected if the resulting day is not a valid day in the resulting month of the resulting year. It is changed to the last valid day in the resulting month of the resulting year. The month part of the resulting <xref:System.DateTime> remains the same as the specified <xref:System.DateTime>. This implementation supports only the current era. Therefore, <xref:System.ArgumentException> is thrown if the resulting year is outside the era of the specified <xref:System.DateTime>. The time-of-day part of the resulting <xref:System.DateTime> remains the same as the specified <xref:System.DateTime>.  \n  \n For example, Zulhijjah has 29 days, except during leap years when it has 30 days. If the specified date is the 30th day of Zulhijjah in a leap year and the value of `years` is 1, the resulting date will be the 29th day of Zulhijjah in the following year.  \n  \n If `years` is negative, the resulting <xref:System.DateTime> is earlier than the specified <xref:System.DateTime>.  \n  \n The<xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> value always equals <xref:System.DateTimeKind?displayProperty=fullName>. You can preserve the <xref:System.DateTime.Kind%2A> property of the `time` parameter by calling the <xref:System.DateTime.SpecifyKind%2A?displayProperty=fullName> method, as the following example shows.  \n  \n [!code-csharp[System.Globalization.Calendar.AddMethods#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.calendar.addmethods/cs/add1.cs#8)]\n [!code-vb[System.Globalization.Calendar.AddMethods#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.calendar.addmethods/vb/add1.vb#8)]"
  example:
  - "The following code example displays the values of several components of a <xref:System.DateTime> in terms of the Hijri calendar.  \n  \n [!code-cpp[System.Globalization.HijriCalendar_AddGet#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.HijriCalendar_AddGet/CPP/hijricalendar_addget.cpp#1)]\n [!code-csharp[System.Globalization.HijriCalendar_AddGet#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.HijriCalendar_AddGet/CS/hijricalendar_addget.cs#1)]\n [!code-vb[System.Globalization.HijriCalendar_AddGet#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.HijriCalendar_AddGet/VB/hijricalendar_addget.vb#1)]"
  syntax:
    content: public override DateTime AddYears (DateTime time, int years);
    parameters:
    - id: time
      type: System.DateTime
      description: The <xref href="System.DateTime"></xref> to add years to.
    - id: years
      type: System.Int32
      description: The number of years to add.
    return:
      type: System.DateTime
      description: The <xref href="System.DateTime"></xref> that results from adding the specified number of years to the specified <xref href="System.DateTime"></xref>.
  overload: System.Globalization.HijriCalendar.AddYears*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: The resulting <xref href="System.DateTime"></xref> is outside the supported range.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/HijriCalendar.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Globalization.HijriCalendar.AlgorithmType
  commentId: P:System.Globalization.HijriCalendar.AlgorithmType
  id: AlgorithmType
  parent: System.Globalization.HijriCalendar
  langs:
  - csharp
  name: AlgorithmType
  nameWithType: HijriCalendar.AlgorithmType
  fullName: HijriCalendar.AlgorithmType
  type: Property
  assemblies:
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System.Globalization
  summary: Gets a value that indicates whether the current calendar is solar-based, lunar-based, or a combination of both.
  remarks: ''
  example:
  - "The following example uses reflection to instantiate each <xref:System.Globalization.Calendar> type found in the .NET Framework and displays the value of its <xref:System.Globalization.Calendar.AlgorithmType%2A> property.  \n  \n [!code-csharp[System.Globalization.Calendar.AlgorithmType#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.calendar.algorithmtype/cs/algorithmtype1.cs#1)]\n [!code-vb[System.Globalization.Calendar.AlgorithmType#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.calendar.algorithmtype/vb/algorithmtype1.vb#1)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(false)]

      public override System.Globalization.CalendarAlgorithmType AlgorithmType { get; }
    return:
      type: System.Globalization.CalendarAlgorithmType
      description: Always returns <xref href="System.Globalization.CalendarAlgorithmType.LunarCalendar"></xref>.
  overload: System.Globalization.HijriCalendar.AlgorithmType*
  exceptions: []
  attributes:
  - type: System.Runtime.InteropServices.ComVisibleAttribute
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/HijriCalendar.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Globalization.HijriCalendar.DaysInYearBeforeMinSupportedYear
  commentId: P:System.Globalization.HijriCalendar.DaysInYearBeforeMinSupportedYear
  id: DaysInYearBeforeMinSupportedYear
  parent: System.Globalization.HijriCalendar
  langs:
  - csharp
  name: DaysInYearBeforeMinSupportedYear
  nameWithType: HijriCalendar.DaysInYearBeforeMinSupportedYear
  fullName: HijriCalendar.DaysInYearBeforeMinSupportedYear
  type: Property
  assemblies:
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System.Globalization
  summary: Gets the number of days in the year that precedes the year that is specified by the <xref href="System.Globalization.HijriCalendar.MinSupportedDateTime"></xref> property.
  remarks: This property returns a constant value of 354.
  syntax:
    content: protected override int DaysInYearBeforeMinSupportedYear { get; }
    return:
      type: System.Int32
      description: The number of days in the year that precedes the year specified by <xref href="System.Globalization.HijriCalendar.MinSupportedDateTime"></xref>.
  overload: System.Globalization.HijriCalendar.DaysInYearBeforeMinSupportedYear*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/HijriCalendar.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Globalization.HijriCalendar.Eras
  commentId: P:System.Globalization.HijriCalendar.Eras
  id: Eras
  parent: System.Globalization.HijriCalendar
  langs:
  - csharp
  name: Eras
  nameWithType: HijriCalendar.Eras
  fullName: HijriCalendar.Eras
  type: Property
  assemblies:
  - System.Globalization.Calendars
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System.Globalization
  summary: Gets the list of eras in the <xref href="System.Globalization.HijriCalendar"></xref>.
  remarks: 'The Hijri calendar recognizes one era: A.H. (Latin "Anno Hegirae", which means "the year of the migration," in reference to the migration of Muhammad (PBUH) from Mecca). This property always returns an array with only one element.'
  syntax:
    content: public override int[] Eras { get; }
    return:
      type: System.Int32[]
      description: An array of integers that represents the eras in the <xref href="System.Globalization.HijriCalendar"></xref>.
  overload: System.Globalization.HijriCalendar.Eras*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/HijriCalendar.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Globalization.HijriCalendar.GetDayOfMonth(System.DateTime)
  commentId: M:System.Globalization.HijriCalendar.GetDayOfMonth(System.DateTime)
  id: GetDayOfMonth(System.DateTime)
  parent: System.Globalization.HijriCalendar
  langs:
  - csharp
  name: GetDayOfMonth(DateTime)
  nameWithType: HijriCalendar.GetDayOfMonth(DateTime)
  fullName: HijriCalendar.GetDayOfMonth(DateTime)
  type: Method
  assemblies:
  - System.Globalization.Calendars
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System.Globalization
  summary: Returns the day of the month in the specified <xref href="System.DateTime"></xref>.
  remarks: ''
  example:
  - "The following code example displays the values of several components of a <xref:System.DateTime> in terms of the Hijri calendar.  \n  \n [!code-cpp[System.Globalization.HijriCalendar_AddGet#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.HijriCalendar_AddGet/CPP/hijricalendar_addget.cpp#1)]\n [!code-csharp[System.Globalization.HijriCalendar_AddGet#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.HijriCalendar_AddGet/CS/hijricalendar_addget.cs#1)]\n [!code-vb[System.Globalization.HijriCalendar_AddGet#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.HijriCalendar_AddGet/VB/hijricalendar_addget.vb#1)]"
  syntax:
    content: public override int GetDayOfMonth (DateTime time);
    parameters:
    - id: time
      type: System.DateTime
      description: The <xref href="System.DateTime"></xref> to read.
    return:
      type: System.Int32
      description: An integer from 1 to 30 that represents the day of the month in the specified <xref href="System.DateTime"></xref>.
  overload: System.Globalization.HijriCalendar.GetDayOfMonth*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/HijriCalendar.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Globalization.HijriCalendar.GetDayOfWeek(System.DateTime)
  commentId: M:System.Globalization.HijriCalendar.GetDayOfWeek(System.DateTime)
  id: GetDayOfWeek(System.DateTime)
  parent: System.Globalization.HijriCalendar
  langs:
  - csharp
  name: GetDayOfWeek(DateTime)
  nameWithType: HijriCalendar.GetDayOfWeek(DateTime)
  fullName: HijriCalendar.GetDayOfWeek(DateTime)
  type: Method
  assemblies:
  - System.Globalization.Calendars
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System.Globalization
  summary: Returns the day of the week in the specified <xref href="System.DateTime"></xref>.
  remarks: "The <xref:System.DayOfWeek> values are as follows:  \n  \n|DayOfWeek value|which indicates|  \n|---------------------|---------------------|  \n|Sunday|الاحد (Al-Ahad)|  \n|Monday|الاثنين (Al-Ithnayn)|  \n|Tuesday|الثلاثاء (At-Thulaathaa')|  \n|Wednesday|الاربعاء (Al-Arbi'aa')|  \n|Thursday|الخميس (Al-Khamiis)|  \n|Friday|الجمعة (Al-Jumu'ah)|  \n|Saturday|السبت (As-Sabt)|"
  example:
  - "The following code example displays the values of several components of a <xref:System.DateTime> in terms of the Hijri calendar.  \n  \n [!code-cpp[System.Globalization.HijriCalendar_AddGet#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.HijriCalendar_AddGet/CPP/hijricalendar_addget.cpp#1)]\n [!code-csharp[System.Globalization.HijriCalendar_AddGet#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.HijriCalendar_AddGet/CS/hijricalendar_addget.cs#1)]\n [!code-vb[System.Globalization.HijriCalendar_AddGet#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.HijriCalendar_AddGet/VB/hijricalendar_addget.vb#1)]"
  syntax:
    content: public override DayOfWeek GetDayOfWeek (DateTime time);
    parameters:
    - id: time
      type: System.DateTime
      description: The <xref href="System.DateTime"></xref> to read.
    return:
      type: System.DayOfWeek
      description: A <xref href="System.DayOfWeek"></xref> value that represents the day of the week in the specified <xref href="System.DateTime"></xref>.
  overload: System.Globalization.HijriCalendar.GetDayOfWeek*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/HijriCalendar.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Globalization.HijriCalendar.GetDayOfYear(System.DateTime)
  commentId: M:System.Globalization.HijriCalendar.GetDayOfYear(System.DateTime)
  id: GetDayOfYear(System.DateTime)
  parent: System.Globalization.HijriCalendar
  langs:
  - csharp
  name: GetDayOfYear(DateTime)
  nameWithType: HijriCalendar.GetDayOfYear(DateTime)
  fullName: HijriCalendar.GetDayOfYear(DateTime)
  type: Method
  assemblies:
  - System.Globalization.Calendars
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System.Globalization
  summary: Returns the day of the year in the specified <xref href="System.DateTime"></xref>.
  remarks: The day of the year is defined as the number of days from the first day of the year. For example, <xref:System.Globalization.HijriCalendar.GetDayOfYear%2A> for the first day of the first month returns 1, and <xref:System.Globalization.HijriCalendar.GetDayOfYear%2A> for the last day of the last month returns the total number of days in that year, which is the same value returned by <xref:System.Globalization.HijriCalendar.GetDaysInYear%2A>.
  example:
  - "The following code example displays the values of several components of a <xref:System.DateTime> in terms of the Hijri calendar.  \n  \n [!code-cpp[System.Globalization.HijriCalendar_AddGet#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.HijriCalendar_AddGet/CPP/hijricalendar_addget.cpp#1)]\n [!code-csharp[System.Globalization.HijriCalendar_AddGet#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.HijriCalendar_AddGet/CS/hijricalendar_addget.cs#1)]\n [!code-vb[System.Globalization.HijriCalendar_AddGet#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.HijriCalendar_AddGet/VB/hijricalendar_addget.vb#1)]"
  syntax:
    content: public override int GetDayOfYear (DateTime time);
    parameters:
    - id: time
      type: System.DateTime
      description: The <xref href="System.DateTime"></xref> to read.
    return:
      type: System.Int32
      description: An integer from 1 to 355 that represents the day of the year in the specified <xref href="System.DateTime"></xref>.
  overload: System.Globalization.HijriCalendar.GetDayOfYear*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/HijriCalendar.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Globalization.HijriCalendar.GetDaysInMonth(System.Int32,System.Int32,System.Int32)
  commentId: M:System.Globalization.HijriCalendar.GetDaysInMonth(System.Int32,System.Int32,System.Int32)
  id: GetDaysInMonth(System.Int32,System.Int32,System.Int32)
  parent: System.Globalization.HijriCalendar
  langs:
  - csharp
  name: GetDaysInMonth(Int32, Int32, Int32)
  nameWithType: HijriCalendar.GetDaysInMonth(Int32, Int32, Int32)
  fullName: HijriCalendar.GetDaysInMonth(Int32, Int32, Int32)
  type: Method
  assemblies:
  - System.Globalization.Calendars
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System.Globalization
  summary: Returns the number of days in the specified month of the specified year and era.
  remarks: For example, this method returns 29 or 30 for Zulhijjah (`month` = 12), depending on whether `year` is a leap year.
  example:
  - "The following code example calls `GetDaysInMonth` for the twelfth month in each of five years in each era.  \n  \n [!code-cpp[System.Globalization.HijriCalendar.GetDaysInMonth#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.HijriCalendar.GetDaysInMonth/CPP/hijricalendar_getdaysinmonth.cpp#1)]\n [!code-csharp[System.Globalization.HijriCalendar.GetDaysInMonth#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.HijriCalendar.GetDaysInMonth/CS/hijricalendar_getdaysinmonth.cs#1)]\n [!code-vb[System.Globalization.HijriCalendar.GetDaysInMonth#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.HijriCalendar.GetDaysInMonth/VB/hijricalendar_getdaysinmonth.vb#1)]"
  syntax:
    content: public override int GetDaysInMonth (int year, int month, int era);
    parameters:
    - id: year
      type: System.Int32
      description: An integer that represents the year.
    - id: month
      type: System.Int32
      description: An integer from 1 to 12 that represents the month.
    - id: era
      type: System.Int32
      description: An integer that represents the era.
    return:
      type: System.Int32
      description: The number of days in the specified month in the specified year in the specified era.
  overload: System.Globalization.HijriCalendar.GetDaysInMonth*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>era</code> is outside the range supported by this calendar.  \n  \n -or-  \n  \n <code>year</code> is outside the range supported by this calendar.  \n  \n -or-  \n  \n <code>month</code> is outside the range supported by this calendar."
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/HijriCalendar.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Globalization.HijriCalendar.GetDaysInYear(System.Int32,System.Int32)
  commentId: M:System.Globalization.HijriCalendar.GetDaysInYear(System.Int32,System.Int32)
  id: GetDaysInYear(System.Int32,System.Int32)
  parent: System.Globalization.HijriCalendar
  langs:
  - csharp
  name: GetDaysInYear(Int32, Int32)
  nameWithType: HijriCalendar.GetDaysInYear(Int32, Int32)
  fullName: HijriCalendar.GetDaysInYear(Int32, Int32)
  type: Method
  assemblies:
  - System.Globalization.Calendars
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System.Globalization
  summary: Returns the number of days in the specified year and era.
  remarks: ''
  example:
  - "The following code example calls `GetDaysInYear` for five years in each era.  \n  \n [!code-cpp[System.Globalization.HijriCalendar.GetDaysInYear#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.HijriCalendar.GetDaysInYear/CPP/hijricalendar_getdaysinyear.cpp#1)]\n [!code-csharp[System.Globalization.HijriCalendar.GetDaysInYear#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.HijriCalendar.GetDaysInYear/CS/hijricalendar_getdaysinyear.cs#1)]\n [!code-vb[System.Globalization.HijriCalendar.GetDaysInYear#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.HijriCalendar.GetDaysInYear/VB/hijricalendar_getdaysinyear.vb#1)]"
  syntax:
    content: public override int GetDaysInYear (int year, int era);
    parameters:
    - id: year
      type: System.Int32
      description: An integer that represents the year.
    - id: era
      type: System.Int32
      description: An integer that represents the era.
    return:
      type: System.Int32
      description: The number of days in the specified year and era. The number of days is 354 in a common year or 355 in a leap year.
  overload: System.Globalization.HijriCalendar.GetDaysInYear*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: <code>year</code> or <code>era</code> is outside the range supported by this calendar.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/HijriCalendar.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Globalization.HijriCalendar.GetEra(System.DateTime)
  commentId: M:System.Globalization.HijriCalendar.GetEra(System.DateTime)
  id: GetEra(System.DateTime)
  parent: System.Globalization.HijriCalendar
  langs:
  - csharp
  name: GetEra(DateTime)
  nameWithType: HijriCalendar.GetEra(DateTime)
  fullName: HijriCalendar.GetEra(DateTime)
  type: Method
  assemblies:
  - System.Globalization.Calendars
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System.Globalization
  summary: Returns the era in the specified <xref href="System.DateTime"></xref>.
  remarks: 'The Hijri calendar recognizes one era: A.H. (Latin "Anno Hegirae", which means "the year of the migration," in reference to the migration of Muhammad (PBUH) from Mecca).'
  example:
  - "The following code example displays the values of several components of a <xref:System.DateTime> in terms of the Hijri calendar.  \n  \n [!code-cpp[System.Globalization.HijriCalendar_AddGet#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.HijriCalendar_AddGet/CPP/hijricalendar_addget.cpp#1)]\n [!code-csharp[System.Globalization.HijriCalendar_AddGet#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.HijriCalendar_AddGet/CS/hijricalendar_addget.cs#1)]\n [!code-vb[System.Globalization.HijriCalendar_AddGet#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.HijriCalendar_AddGet/VB/hijricalendar_addget.vb#1)]"
  syntax:
    content: public override int GetEra (DateTime time);
    parameters:
    - id: time
      type: System.DateTime
      description: The <xref href="System.DateTime"></xref> to read.
    return:
      type: System.Int32
      description: An integer that represents the era in the specified <xref href="System.DateTime"></xref>.
  overload: System.Globalization.HijriCalendar.GetEra*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/HijriCalendar.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Globalization.HijriCalendar.GetLeapMonth(System.Int32,System.Int32)
  commentId: M:System.Globalization.HijriCalendar.GetLeapMonth(System.Int32,System.Int32)
  id: GetLeapMonth(System.Int32,System.Int32)
  parent: System.Globalization.HijriCalendar
  langs:
  - csharp
  name: GetLeapMonth(Int32, Int32)
  nameWithType: HijriCalendar.GetLeapMonth(Int32, Int32)
  fullName: HijriCalendar.GetLeapMonth(Int32, Int32)
  type: Method
  assemblies:
  - System.Globalization.Calendars
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System.Globalization
  summary: Calculates the leap month for a specified year and era.
  remarks: In a calendar that supports the notion of a leap month, the leap month can occur either after a particular month or after any month in a year. For example, the <xref:System.Globalization.EastAsianLunisolarCalendar.GetMonth%2A> method returns a number between 1 and 13 that indicates the month associated with a specified date. If there is a leap month between the eighth and ninth months of the year, the <xref:System.Globalization.EastAsianLunisolarCalendar.GetMonth%2A> method returns 8 for the eighth month, 9 for the leap eighth month, and 10 for the ninth month.
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(false)]

      public override int GetLeapMonth (int year, int era);
    parameters:
    - id: year
      type: System.Int32
      description: A year.
    - id: era
      type: System.Int32
      description: An era. Specify <xref href="System.Globalization.Calendar.CurrentEra"></xref> or <xref href="System.Globalization.HijriCalendar.HijriEra"></xref>.
    return:
      type: System.Int32
      description: Always 0 because the <xref href="System.Globalization.HijriCalendar"></xref> type does not support the notion of a leap month.
  overload: System.Globalization.HijriCalendar.GetLeapMonth*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>year</code> is less than the Hijri calendar year 1 or greater than the year 9666.  \n  \n -or-  \n  \n <code>era</code> is not <xref href=\"System.Globalization.Calendar.CurrentEra\"></xref> or <xref href=\"System.Globalization.HijriCalendar.HijriEra\"></xref>."
  attributes:
  - type: System.Runtime.InteropServices.ComVisibleAttribute
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/HijriCalendar.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Globalization.HijriCalendar.GetMonth(System.DateTime)
  commentId: M:System.Globalization.HijriCalendar.GetMonth(System.DateTime)
  id: GetMonth(System.DateTime)
  parent: System.Globalization.HijriCalendar
  langs:
  - csharp
  name: GetMonth(DateTime)
  nameWithType: HijriCalendar.GetMonth(DateTime)
  fullName: HijriCalendar.GetMonth(DateTime)
  type: Method
  assemblies:
  - System.Globalization.Calendars
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System.Globalization
  summary: Returns the month in the specified <xref href="System.DateTime"></xref>.
  remarks: ''
  example:
  - "The following code example displays the values of several components of a <xref:System.DateTime> in terms of the Hijri calendar.  \n  \n [!code-cpp[System.Globalization.HijriCalendar_AddGet#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.HijriCalendar_AddGet/CPP/hijricalendar_addget.cpp#1)]\n [!code-csharp[System.Globalization.HijriCalendar_AddGet#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.HijriCalendar_AddGet/CS/hijricalendar_addget.cs#1)]\n [!code-vb[System.Globalization.HijriCalendar_AddGet#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.HijriCalendar_AddGet/VB/hijricalendar_addget.vb#1)]"
  syntax:
    content: public override int GetMonth (DateTime time);
    parameters:
    - id: time
      type: System.DateTime
      description: The <xref href="System.DateTime"></xref> to read.
    return:
      type: System.Int32
      description: An integer from 1 to 12 that represents the month in the specified <xref href="System.DateTime"></xref>.
  overload: System.Globalization.HijriCalendar.GetMonth*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/HijriCalendar.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Globalization.HijriCalendar.GetMonthsInYear(System.Int32,System.Int32)
  commentId: M:System.Globalization.HijriCalendar.GetMonthsInYear(System.Int32,System.Int32)
  id: GetMonthsInYear(System.Int32,System.Int32)
  parent: System.Globalization.HijriCalendar
  langs:
  - csharp
  name: GetMonthsInYear(Int32, Int32)
  nameWithType: HijriCalendar.GetMonthsInYear(Int32, Int32)
  fullName: HijriCalendar.GetMonthsInYear(Int32, Int32)
  type: Method
  assemblies:
  - System.Globalization.Calendars
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System.Globalization
  summary: Returns the number of months in the specified year and era.
  remarks: ''
  example:
  - "The following code example calls the GetMonthsInYear method for five years in each era.  \n  \n [!code-cpp[System.Globalization.HijriCalendar.GetMonthsInYear#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.HijriCalendar.GetMonthsInYear/CPP/hijricalendar_getmonthsinyear.cpp#1)]\n [!code-csharp[System.Globalization.HijriCalendar.GetMonthsInYear#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.HijriCalendar.GetMonthsInYear/CS/hijricalendar_getmonthsinyear.cs#1)]\n [!code-vb[System.Globalization.HijriCalendar.GetMonthsInYear#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.HijriCalendar.GetMonthsInYear/VB/hijricalendar_getmonthsinyear.vb#1)]"
  syntax:
    content: public override int GetMonthsInYear (int year, int era);
    parameters:
    - id: year
      type: System.Int32
      description: An integer that represents the year.
    - id: era
      type: System.Int32
      description: An integer that represents the era.
    return:
      type: System.Int32
      description: The number of months in the specified year and era.
  overload: System.Globalization.HijriCalendar.GetMonthsInYear*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>era</code> is outside the range supported by this calendar.  \n  \n -or-  \n  \n <code>year</code> is outside the range supported by this calendar."
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/HijriCalendar.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Globalization.HijriCalendar.GetYear(System.DateTime)
  commentId: M:System.Globalization.HijriCalendar.GetYear(System.DateTime)
  id: GetYear(System.DateTime)
  parent: System.Globalization.HijriCalendar
  langs:
  - csharp
  name: GetYear(DateTime)
  nameWithType: HijriCalendar.GetYear(DateTime)
  fullName: HijriCalendar.GetYear(DateTime)
  type: Method
  assemblies:
  - System.Globalization.Calendars
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System.Globalization
  summary: Returns the year in the specified <xref href="System.DateTime"></xref>.
  remarks: ''
  example:
  - "The following code example displays the values of several components of a <xref:System.DateTime> in terms of the Hijri calendar.  \n  \n [!code-cpp[System.Globalization.HijriCalendar_AddGet#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.HijriCalendar_AddGet/CPP/hijricalendar_addget.cpp#1)]\n [!code-csharp[System.Globalization.HijriCalendar_AddGet#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.HijriCalendar_AddGet/CS/hijricalendar_addget.cs#1)]\n [!code-vb[System.Globalization.HijriCalendar_AddGet#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.HijriCalendar_AddGet/VB/hijricalendar_addget.vb#1)]"
  syntax:
    content: public override int GetYear (DateTime time);
    parameters:
    - id: time
      type: System.DateTime
      description: The <xref href="System.DateTime"></xref> to read.
    return:
      type: System.Int32
      description: An integer that represents the year in the specified <xref href="System.DateTime"></xref>.
  overload: System.Globalization.HijriCalendar.GetYear*
  exceptions: []
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/HijriCalendar.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Globalization.HijriCalendar.HijriAdjustment
  commentId: P:System.Globalization.HijriCalendar.HijriAdjustment
  id: HijriAdjustment
  parent: System.Globalization.HijriCalendar
  langs:
  - csharp
  name: HijriAdjustment
  nameWithType: HijriCalendar.HijriAdjustment
  fullName: HijriCalendar.HijriAdjustment
  type: Property
  assemblies:
  - System.Globalization.Calendars
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System.Globalization
  summary: Gets or sets the number of days to add or subtract from the calendar to accommodate the variances in the start and the end of Ramadan and to accommodate the date difference between countries/regions.
  remarks: This implementation of the <xref:System.Globalization.HijriCalendar> class adjusts the calendar date by adding or subtracting a value from zero to two days to accommodate the variances in the start and the end of Ramadan and to accommodate the date difference between countries/regions. That value is stored in the <xref:System.Globalization.HijriCalendar.HijriAdjustment%2A> property. If <xref:System.Globalization.HijriCalendar.HijriAdjustment%2A> is not set explicitly, it derives its value from the settings in the regional and language options portion of Control Panel and is stored in the registry value HKEY_CURRENT_USER\Control Panel\International\AddHijriDate. However, that information can change during the life of the <xref:System.AppDomain>. The <xref:System.Globalization.HijriCalendar> class does not detect changes in the system settings automatically.
  example:
  - "The following code example shows how <xref:System.Globalization.HijriCalendar.HijriAdjustment%2A> affects the date.  \n  \n [!code-cpp[System.Globalization.HijriCalendar.HijriAdjustment#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.HijriCalendar.HijriAdjustment/CPP/hijriadjustment.cpp#1)]\n [!code-csharp[System.Globalization.HijriCalendar.HijriAdjustment#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.HijriCalendar.HijriAdjustment/CS/hijriadjustment.cs#1)]\n [!code-vb[System.Globalization.HijriCalendar.HijriAdjustment#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.HijriCalendar.HijriAdjustment/VB/hijriadjustment.vb#1)]"
  syntax:
    content: >-
      [get: System.Security.SecuritySafeCritical]

      public int HijriAdjustment { get; set; }
    return:
      type: System.Int32
      description: An integer from -2 to 2 that represents the number of days to add or subtract from the calendar.
  overload: System.Globalization.HijriCalendar.HijriAdjustment*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: The property is being set to an invalid value.
  attributes:
  - type: 'get: System.Security.SecuritySafeCritical'
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/HijriCalendar.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Globalization.HijriCalendar.HijriEra
  commentId: F:System.Globalization.HijriCalendar.HijriEra
  id: HijriEra
  parent: System.Globalization.HijriCalendar
  langs:
  - csharp
  name: HijriEra
  nameWithType: HijriCalendar.HijriEra
  fullName: HijriCalendar.HijriEra
  type: Field
  assemblies:
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System.Globalization
  summary: Represents the current era. This field is constant.
  remarks: "The value of the <xref:System.Globalization.HijriCalendar.HijriEra> field is 1.  \n  \n The Hijri calendar recognizes one era: A.H. (Latin \"Anno Hegirae\", which means \"the year of the migration,\" in reference to the migration of Muhammad (PBUH) from Mecca)."
  syntax:
    content: public static readonly int HijriEra;
    return:
      type: System.Int32
      description: ''
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/HijriCalendar.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Globalization.HijriCalendar.IsLeapDay(System.Int32,System.Int32,System.Int32,System.Int32)
  commentId: M:System.Globalization.HijriCalendar.IsLeapDay(System.Int32,System.Int32,System.Int32,System.Int32)
  id: IsLeapDay(System.Int32,System.Int32,System.Int32,System.Int32)
  parent: System.Globalization.HijriCalendar
  langs:
  - csharp
  name: IsLeapDay(Int32, Int32, Int32, Int32)
  nameWithType: HijriCalendar.IsLeapDay(Int32, Int32, Int32, Int32)
  fullName: HijriCalendar.IsLeapDay(Int32, Int32, Int32, Int32)
  type: Method
  assemblies:
  - System.Globalization.Calendars
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System.Globalization
  summary: Determines whether the specified date is a leap day.
  remarks: "In every 30-year cycle that ends with a year that is evenly divisible by 30, the 2nd, 5th, 7th, 10th, 13th, 16th, 18th, 21st, 24th, 26th, and 29th years are leap years. A common year has 354 days and a leap year has 355 days.  \n  \n A leap day is a day that occurs only in a leap year. In the Hijri calendar, the 30th day of Zulhijjah is the only leap day."
  example:
  - "The following code example calls the `IsLeapDay` method for the last day of the second month (February) for five years in each of the eras.  \n  \n [!code-cpp[System.Globalization.HijriCalendar.IsLeapDay#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.HijriCalendar.IsLeapDay/CPP/hijricalendar_isleapday.cpp#1)]\n [!code-csharp[System.Globalization.HijriCalendar.IsLeapDay#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.HijriCalendar.IsLeapDay/CS/hijricalendar_isleapday.cs#1)]\n [!code-vb[System.Globalization.HijriCalendar.IsLeapDay#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.HijriCalendar.IsLeapDay/VB/hijricalendar_isleapday.vb#1)]"
  syntax:
    content: public override bool IsLeapDay (int year, int month, int day, int era);
    parameters:
    - id: year
      type: System.Int32
      description: An integer that represents the year.
    - id: month
      type: System.Int32
      description: An integer from 1 to 12 that represents the month.
    - id: day
      type: System.Int32
      description: An integer from 1 to 30 that represents the day.
    - id: era
      type: System.Int32
      description: An integer that represents the era.
    return:
      type: System.Boolean
      description: '`true` if the specified day is a leap day; otherwise, `false`.'
  overload: System.Globalization.HijriCalendar.IsLeapDay*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>era</code> is outside the range supported by this calendar.  \n  \n -or-  \n  \n <code>year</code> is outside the range supported by this calendar.  \n  \n -or-  \n  \n <code>month</code> is outside the range supported by this calendar.  \n  \n -or-  \n  \n <code>day</code> is outside the range supported by this calendar."
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/HijriCalendar.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Globalization.HijriCalendar.IsLeapMonth(System.Int32,System.Int32,System.Int32)
  commentId: M:System.Globalization.HijriCalendar.IsLeapMonth(System.Int32,System.Int32,System.Int32)
  id: IsLeapMonth(System.Int32,System.Int32,System.Int32)
  parent: System.Globalization.HijriCalendar
  langs:
  - csharp
  name: IsLeapMonth(Int32, Int32, Int32)
  nameWithType: HijriCalendar.IsLeapMonth(Int32, Int32, Int32)
  fullName: HijriCalendar.IsLeapMonth(Int32, Int32, Int32)
  type: Method
  assemblies:
  - System.Globalization.Calendars
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System.Globalization
  summary: Determines whether the specified month in the specified year and era is a leap month.
  remarks: "In every 30-year cycle that ends with a year that is evenly divisible by 30, the 2nd, 5th, 7th, 10th, 13th, 16th, 18th, 21st, 24th, 26th, and 29th years are leap years. A common year has 354 days and a leap year has 355 days.  \n  \n A leap month is an entire month that occurs only in a leap year. The Hijri calendar does not have any leap months."
  example:
  - "The following code example calls `IsLeapMonth` for all the months in five years in the current era.  \n  \n [!code-cpp[System.Globalization.HijriCalendar.IsLeapMonth#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.HijriCalendar.IsLeapMonth/CPP/hijricalendar_isleapmonth.cpp#1)]\n [!code-csharp[System.Globalization.HijriCalendar.IsLeapMonth#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.HijriCalendar.IsLeapMonth/CS/hijricalendar_isleapmonth.cs#1)]\n [!code-vb[System.Globalization.HijriCalendar.IsLeapMonth#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.HijriCalendar.IsLeapMonth/VB/hijricalendar_isleapmonth.vb#1)]"
  syntax:
    content: public override bool IsLeapMonth (int year, int month, int era);
    parameters:
    - id: year
      type: System.Int32
      description: An integer that represents the year.
    - id: month
      type: System.Int32
      description: An integer from 1 to 12 that represents the month.
    - id: era
      type: System.Int32
      description: An integer that represents the era.
    return:
      type: System.Boolean
      description: This method always returns `false`.
  overload: System.Globalization.HijriCalendar.IsLeapMonth*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>era</code> is outside the range supported by this calendar.  \n  \n -or-  \n  \n <code>year</code> is outside the range supported by this calendar.  \n  \n -or-  \n  \n <code>month</code> is outside the range supported by this calendar."
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/HijriCalendar.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Globalization.HijriCalendar.IsLeapYear(System.Int32,System.Int32)
  commentId: M:System.Globalization.HijriCalendar.IsLeapYear(System.Int32,System.Int32)
  id: IsLeapYear(System.Int32,System.Int32)
  parent: System.Globalization.HijriCalendar
  langs:
  - csharp
  name: IsLeapYear(Int32, Int32)
  nameWithType: HijriCalendar.IsLeapYear(Int32, Int32)
  fullName: HijriCalendar.IsLeapYear(Int32, Int32)
  type: Method
  assemblies:
  - System.Globalization.Calendars
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System.Globalization
  summary: Determines whether the specified year in the specified era is a leap year.
  remarks: In every 30-year cycle that ends with a year that is evenly divisible by 30, the 2nd, 5th, 7th, 10th, 13th, 16th, 18th, 21st, 24th, 26th, and 29th years are leap years. A common year has 354 days and a leap year has 355 days.
  example:
  - "The following code example calls the `IsLeapYear` method for five years in each of the eras.  \n  \n [!code-cpp[System.Globalization.HijriCalendar.IsLeapYear#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.HijriCalendar.IsLeapYear/CPP/hijricalendar_isleapyear.cpp#1)]\n [!code-csharp[System.Globalization.HijriCalendar.IsLeapYear#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.HijriCalendar.IsLeapYear/CS/hijricalendar_isleapyear.cs#1)]\n [!code-vb[System.Globalization.HijriCalendar.IsLeapYear#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.HijriCalendar.IsLeapYear/VB/hijricalendar_isleapyear.vb#1)]"
  syntax:
    content: public override bool IsLeapYear (int year, int era);
    parameters:
    - id: year
      type: System.Int32
      description: An integer that represents the year.
    - id: era
      type: System.Int32
      description: An integer that represents the era.
    return:
      type: System.Boolean
      description: '`true` if the specified year is a leap year; otherwise, `false`.'
  overload: System.Globalization.HijriCalendar.IsLeapYear*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>era</code> is outside the range supported by this calendar.  \n  \n -or-  \n  \n <code>year</code> is outside the range supported by this calendar."
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/HijriCalendar.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Globalization.HijriCalendar.MaxSupportedDateTime
  commentId: P:System.Globalization.HijriCalendar.MaxSupportedDateTime
  id: MaxSupportedDateTime
  parent: System.Globalization.HijriCalendar
  langs:
  - csharp
  name: MaxSupportedDateTime
  nameWithType: HijriCalendar.MaxSupportedDateTime
  fullName: HijriCalendar.MaxSupportedDateTime
  type: Property
  assemblies:
  - System.Globalization.Calendars
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System.Globalization
  summary: Gets the latest date and time supported by this calendar.
  remarks: December 31, 9999 C.E. is equivalent to the 3rd day of the 4th month of the year 9666 in the Hijri calendar.
  example:
  - "The following code example gets the minimum value and the maximum value of the calendar.  \n  \n [!code-cpp[System.Globalization.HijriCalendar_MinMax#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.HijriCalendar_MinMax/CPP/hijricalendar_minmax.cpp#1)]\n [!code-csharp[System.Globalization.HijriCalendar_MinMax#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.HijriCalendar_MinMax/CS/hijricalendar_minmax.cs#1)]\n [!code-vb[System.Globalization.HijriCalendar_MinMax#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.HijriCalendar_MinMax/VB/hijricalendar_minmax.vb#1)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(false)]

      public override DateTime MaxSupportedDateTime { get; }
    return:
      type: System.DateTime
      description: The latest date and time supported by the <xref href="System.Globalization.HijriCalendar"></xref> type, which is equivalent to the last moment of December 31, 9999 C.E. in the Gregorian calendar.
  overload: System.Globalization.HijriCalendar.MaxSupportedDateTime*
  exceptions: []
  attributes:
  - type: System.Runtime.InteropServices.ComVisibleAttribute
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/HijriCalendar.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Globalization.HijriCalendar.MinSupportedDateTime
  commentId: P:System.Globalization.HijriCalendar.MinSupportedDateTime
  id: MinSupportedDateTime
  parent: System.Globalization.HijriCalendar
  langs:
  - csharp
  name: MinSupportedDateTime
  nameWithType: HijriCalendar.MinSupportedDateTime
  fullName: HijriCalendar.MinSupportedDateTime
  type: Property
  assemblies:
  - System.Globalization.Calendars
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System.Globalization
  summary: Gets the earliest date and time supported by this calendar.
  remarks: Microsoft Visual Basic represents time of day as the specified time on the minimum date  supported by the <xref:System.DateTime> type, which is January 1, 0001 C.E. However, the <xref:System.Globalization.HijriCalendar> type does not support that minimum date. Consequently, if you call a method to format the time of day using the current calendar but you do not specify a format specifier, formatting uses the ISO 8601 sortable ("s") date/time pattern format specifier instead of the default general ("G") date/time pattern format specifier. For more information, see [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md).
  example:
  - "The following code example gets the minimum value and the maximum value of the calendar.  \n  \n [!code-cpp[System.Globalization.HijriCalendar_MinMax#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.HijriCalendar_MinMax/CPP/hijricalendar_minmax.cpp#1)]\n [!code-csharp[System.Globalization.HijriCalendar_MinMax#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.HijriCalendar_MinMax/CS/hijricalendar_minmax.cs#1)]\n [!code-vb[System.Globalization.HijriCalendar_MinMax#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.HijriCalendar_MinMax/VB/hijricalendar_minmax.vb#1)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(false)]

      public override DateTime MinSupportedDateTime { get; }
    return:
      type: System.DateTime
      description: The earliest date and time supported by the <xref href="System.Globalization.HijriCalendar"></xref> type, which is equivalent to the first moment of July 18, 622 C.E. in the Gregorian calendar.
  overload: System.Globalization.HijriCalendar.MinSupportedDateTime*
  exceptions: []
  attributes:
  - type: System.Runtime.InteropServices.ComVisibleAttribute
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/HijriCalendar.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Globalization.HijriCalendar.ToDateTime(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  commentId: M:System.Globalization.HijriCalendar.ToDateTime(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  id: ToDateTime(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  parent: System.Globalization.HijriCalendar
  langs:
  - csharp
  name: ToDateTime(Int32, Int32, Int32, Int32, Int32, Int32, Int32, Int32)
  nameWithType: HijriCalendar.ToDateTime(Int32, Int32, Int32, Int32, Int32, Int32, Int32, Int32)
  fullName: HijriCalendar.ToDateTime(Int32, Int32, Int32, Int32, Int32, Int32, Int32, Int32)
  type: Method
  assemblies:
  - System.Globalization.Calendars
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System.Globalization
  summary: Returns a <xref href="System.DateTime"></xref> that is set to the specified date, time, and era.
  syntax:
    content: public override DateTime ToDateTime (int year, int month, int day, int hour, int minute, int second, int millisecond, int era);
    parameters:
    - id: year
      type: System.Int32
      description: An integer that represents the year.
    - id: month
      type: System.Int32
      description: An integer from 1 to 12 that represents the month.
    - id: day
      type: System.Int32
      description: An integer from 1 to 30 that represents the day.
    - id: hour
      type: System.Int32
      description: An integer from 0 to 23 that represents the hour.
    - id: minute
      type: System.Int32
      description: An integer from 0 to 59 that represents the minute.
    - id: second
      type: System.Int32
      description: An integer from 0 to 59 that represents the second.
    - id: millisecond
      type: System.Int32
      description: An integer from 0 to 999 that represents the millisecond.
    - id: era
      type: System.Int32
      description: An integer that represents the era.
    return:
      type: System.DateTime
      description: The <xref href="System.DateTime"></xref> that is set to the specified date and time in the current era.
  overload: System.Globalization.HijriCalendar.ToDateTime*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>era</code> is outside the range supported by this calendar.  \n  \n -or-  \n  \n <code>year</code> is outside the range supported by this calendar.  \n  \n -or-  \n  \n <code>month</code> is outside the range supported by this calendar.  \n  \n -or-  \n  \n <code>day</code> is outside the range supported by this calendar.  \n  \n -or-  \n  \n <code>hour</code> is less than zero or greater than 23.  \n  \n -or-  \n  \n <code>minute</code> is less than zero or greater than 59.  \n  \n -or-  \n  \n <code>second</code> is less than zero or greater than 59.  \n  \n -or-  \n  \n <code>millisecond</code> is less than zero or greater than 999."
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/HijriCalendar.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Globalization.HijriCalendar.ToFourDigitYear(System.Int32)
  commentId: M:System.Globalization.HijriCalendar.ToFourDigitYear(System.Int32)
  id: ToFourDigitYear(System.Int32)
  parent: System.Globalization.HijriCalendar
  langs:
  - csharp
  name: ToFourDigitYear(Int32)
  nameWithType: HijriCalendar.ToFourDigitYear(Int32)
  fullName: HijriCalendar.ToFourDigitYear(Int32)
  type: Method
  assemblies:
  - System.Globalization.Calendars
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System.Globalization
  summary: Converts the specified year to a four-digit year by using the <xref href="System.Globalization.HijriCalendar.TwoDigitYearMax"></xref> property to determine the appropriate century.
  remarks: "<xref:System.Globalization.HijriCalendar.TwoDigitYearMax%2A> is the last year in the 100-year range that can be represented by a two-digit year. The century is determined by finding the sole occurrence of the two-digit `year` within that 100-year range. For example, if <xref:System.Globalization.HijriCalendar.TwoDigitYearMax%2A> is set to 1429, the 100-year range is from 1330 to 1429; therefore, a 2-digit value of 30 is interpreted as 1330, while a 2-digit value of 29 is interpreted as 1429.  \n  \n <xref:System.Globalization.HijriCalendar.ToFourDigitYear%2A> supports either a two-digit year or a four-digit year. Passing a two-digit year value (less than 100) causes the method to convert the value to a four-digit value according to the <xref:System.Globalization.HijriCalendar.TwoDigitYearMax%2A> value representing the appropriate century. If the application supplies a four-digit year value that is within the supported calendar range to <xref:System.Globalization.HijriCalendar.ToFourDigitYear%2A>, the method returns the actual input value. If the application supplies a four-digit value that is outside the supported calendar range, or if it supplies a negative value, the method throws an exception."
  syntax:
    content: public override int ToFourDigitYear (int year);
    parameters:
    - id: year
      type: System.Int32
      description: A two-digit or four-digit integer that represents the year to convert.
    return:
      type: System.Int32
      description: An integer that contains the four-digit representation of <code>year</code>.
  overload: System.Globalization.HijriCalendar.ToFourDigitYear*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: <code>year</code> is outside the range supported by this calendar.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/HijriCalendar.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.Globalization.HijriCalendar.TwoDigitYearMax
  commentId: P:System.Globalization.HijriCalendar.TwoDigitYearMax
  id: TwoDigitYearMax
  parent: System.Globalization.HijriCalendar
  langs:
  - csharp
  name: TwoDigitYearMax
  nameWithType: HijriCalendar.TwoDigitYearMax
  fullName: HijriCalendar.TwoDigitYearMax
  type: Property
  assemblies:
  - System.Globalization.Calendars
  - mscorlib
  - netstandard
  - System.Runtime
  namespace: System.Globalization
  summary: Gets or sets the last year of a 100-year range that can be represented by a 2-digit year.
  remarks: "This property allows a 2-digit year to be properly translated to a 4-digit year. For example, if this property is set to 1429, the 100-year range is from 1330 to 1429. Therefore, a 2-digit value of 30 is interpreted as 1330, while a 2-digit value of 29 is interpreted as 1429.  \n  \n The initial value of this property is derived from the settings in the regional and language options portion of Control Panel. However, that information can change during the life of the <xref:System.AppDomain>. The <xref:System.Globalization.HijriCalendar> class does not detect changes in the system settings automatically.  \n  \n The application should set this value to 99 to indicate that 2-digit years are to be taken literally. For example, if this property is set to 99, the 100-year range is from 0 (not a valid value for most calendars) to 99. Therefore, a 2-digit value of 30 is interpreted as 30."
  syntax:
    content: public override int TwoDigitYearMax { get; set; }
    return:
      type: System.Int32
      description: The last year of a 100-year range that can be represented by a 2-digit year.
  overload: System.Globalization.HijriCalendar.TwoDigitYearMax*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: This calendar is read-only.
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: The value in a set operation is less than 100 or greater than 9666.
  version:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/HijriCalendar.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
references:
- uid: System.Globalization.Calendar
  parent: System.Globalization
  isExternal: false
  name: Calendar
  nameWithType: Calendar
  fullName: System.Globalization.Calendar
- uid: System.ArgumentException
  parent: System
  isExternal: false
  name: ArgumentException
  nameWithType: ArgumentException
  fullName: System.ArgumentException
- uid: System.ArgumentOutOfRangeException
  parent: System
  isExternal: false
  name: ArgumentOutOfRangeException
  nameWithType: ArgumentOutOfRangeException
  fullName: System.ArgumentOutOfRangeException
- uid: System.InvalidOperationException
  parent: System
  isExternal: false
  name: InvalidOperationException
  nameWithType: InvalidOperationException
  fullName: System.InvalidOperationException
- uid: System.Globalization.HijriCalendar.#ctor
  parent: System.Globalization.HijriCalendar
  isExternal: false
  name: HijriCalendar()
  nameWithType: HijriCalendar.HijriCalendar()
  fullName: HijriCalendar.HijriCalendar()
- uid: System.Globalization.HijriCalendar.AddMonths(System.DateTime,System.Int32)
  parent: System.Globalization.HijriCalendar
  isExternal: false
  name: AddMonths(DateTime, Int32)
  nameWithType: HijriCalendar.AddMonths(DateTime, Int32)
  fullName: HijriCalendar.AddMonths(DateTime, Int32)
- uid: System.DateTime
  parent: System
  isExternal: false
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Globalization.HijriCalendar.AddYears(System.DateTime,System.Int32)
  parent: System.Globalization.HijriCalendar
  isExternal: false
  name: AddYears(DateTime, Int32)
  nameWithType: HijriCalendar.AddYears(DateTime, Int32)
  fullName: HijriCalendar.AddYears(DateTime, Int32)
- uid: System.Globalization.HijriCalendar.AlgorithmType
  parent: System.Globalization.HijriCalendar
  isExternal: false
  name: AlgorithmType
  nameWithType: HijriCalendar.AlgorithmType
  fullName: HijriCalendar.AlgorithmType
- uid: System.Globalization.CalendarAlgorithmType
  parent: System.Globalization
  isExternal: false
  name: CalendarAlgorithmType
  nameWithType: CalendarAlgorithmType
  fullName: System.Globalization.CalendarAlgorithmType
- uid: System.Globalization.HijriCalendar.DaysInYearBeforeMinSupportedYear
  parent: System.Globalization.HijriCalendar
  isExternal: false
  name: DaysInYearBeforeMinSupportedYear
  nameWithType: HijriCalendar.DaysInYearBeforeMinSupportedYear
  fullName: HijriCalendar.DaysInYearBeforeMinSupportedYear
- uid: System.Globalization.HijriCalendar.Eras
  parent: System.Globalization.HijriCalendar
  isExternal: false
  name: Eras
  nameWithType: HijriCalendar.Eras
  fullName: HijriCalendar.Eras
- uid: System.Int32[]
  parent: System
  isExternal: false
  name: Int32[]
  nameWithType: Int32[]
  fullName: System.Int32[]
  spec.csharp:
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Globalization.HijriCalendar.GetDayOfMonth(System.DateTime)
  parent: System.Globalization.HijriCalendar
  isExternal: false
  name: GetDayOfMonth(DateTime)
  nameWithType: HijriCalendar.GetDayOfMonth(DateTime)
  fullName: HijriCalendar.GetDayOfMonth(DateTime)
- uid: System.Globalization.HijriCalendar.GetDayOfWeek(System.DateTime)
  parent: System.Globalization.HijriCalendar
  isExternal: false
  name: GetDayOfWeek(DateTime)
  nameWithType: HijriCalendar.GetDayOfWeek(DateTime)
  fullName: HijriCalendar.GetDayOfWeek(DateTime)
- uid: System.DayOfWeek
  parent: System
  isExternal: false
  name: DayOfWeek
  nameWithType: DayOfWeek
  fullName: System.DayOfWeek
- uid: System.Globalization.HijriCalendar.GetDayOfYear(System.DateTime)
  parent: System.Globalization.HijriCalendar
  isExternal: false
  name: GetDayOfYear(DateTime)
  nameWithType: HijriCalendar.GetDayOfYear(DateTime)
  fullName: HijriCalendar.GetDayOfYear(DateTime)
- uid: System.Globalization.HijriCalendar.GetDaysInMonth(System.Int32,System.Int32,System.Int32)
  parent: System.Globalization.HijriCalendar
  isExternal: false
  name: GetDaysInMonth(Int32, Int32, Int32)
  nameWithType: HijriCalendar.GetDaysInMonth(Int32, Int32, Int32)
  fullName: HijriCalendar.GetDaysInMonth(Int32, Int32, Int32)
- uid: System.Globalization.HijriCalendar.GetDaysInYear(System.Int32,System.Int32)
  parent: System.Globalization.HijriCalendar
  isExternal: false
  name: GetDaysInYear(Int32, Int32)
  nameWithType: HijriCalendar.GetDaysInYear(Int32, Int32)
  fullName: HijriCalendar.GetDaysInYear(Int32, Int32)
- uid: System.Globalization.HijriCalendar.GetEra(System.DateTime)
  parent: System.Globalization.HijriCalendar
  isExternal: false
  name: GetEra(DateTime)
  nameWithType: HijriCalendar.GetEra(DateTime)
  fullName: HijriCalendar.GetEra(DateTime)
- uid: System.Globalization.HijriCalendar.GetLeapMonth(System.Int32,System.Int32)
  parent: System.Globalization.HijriCalendar
  isExternal: false
  name: GetLeapMonth(Int32, Int32)
  nameWithType: HijriCalendar.GetLeapMonth(Int32, Int32)
  fullName: HijriCalendar.GetLeapMonth(Int32, Int32)
- uid: System.Globalization.HijriCalendar.GetMonth(System.DateTime)
  parent: System.Globalization.HijriCalendar
  isExternal: false
  name: GetMonth(DateTime)
  nameWithType: HijriCalendar.GetMonth(DateTime)
  fullName: HijriCalendar.GetMonth(DateTime)
- uid: System.Globalization.HijriCalendar.GetMonthsInYear(System.Int32,System.Int32)
  parent: System.Globalization.HijriCalendar
  isExternal: false
  name: GetMonthsInYear(Int32, Int32)
  nameWithType: HijriCalendar.GetMonthsInYear(Int32, Int32)
  fullName: HijriCalendar.GetMonthsInYear(Int32, Int32)
- uid: System.Globalization.HijriCalendar.GetYear(System.DateTime)
  parent: System.Globalization.HijriCalendar
  isExternal: false
  name: GetYear(DateTime)
  nameWithType: HijriCalendar.GetYear(DateTime)
  fullName: HijriCalendar.GetYear(DateTime)
- uid: System.Globalization.HijriCalendar.HijriAdjustment
  parent: System.Globalization.HijriCalendar
  isExternal: false
  name: HijriAdjustment
  nameWithType: HijriCalendar.HijriAdjustment
  fullName: HijriCalendar.HijriAdjustment
- uid: System.Globalization.HijriCalendar.HijriEra
  parent: System.Globalization.HijriCalendar
  isExternal: false
  name: HijriEra
  nameWithType: HijriCalendar.HijriEra
  fullName: HijriCalendar.HijriEra
- uid: System.Globalization.HijriCalendar.IsLeapDay(System.Int32,System.Int32,System.Int32,System.Int32)
  parent: System.Globalization.HijriCalendar
  isExternal: false
  name: IsLeapDay(Int32, Int32, Int32, Int32)
  nameWithType: HijriCalendar.IsLeapDay(Int32, Int32, Int32, Int32)
  fullName: HijriCalendar.IsLeapDay(Int32, Int32, Int32, Int32)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Globalization.HijriCalendar.IsLeapMonth(System.Int32,System.Int32,System.Int32)
  parent: System.Globalization.HijriCalendar
  isExternal: false
  name: IsLeapMonth(Int32, Int32, Int32)
  nameWithType: HijriCalendar.IsLeapMonth(Int32, Int32, Int32)
  fullName: HijriCalendar.IsLeapMonth(Int32, Int32, Int32)
- uid: System.Globalization.HijriCalendar.IsLeapYear(System.Int32,System.Int32)
  parent: System.Globalization.HijriCalendar
  isExternal: false
  name: IsLeapYear(Int32, Int32)
  nameWithType: HijriCalendar.IsLeapYear(Int32, Int32)
  fullName: HijriCalendar.IsLeapYear(Int32, Int32)
- uid: System.Globalization.HijriCalendar.MaxSupportedDateTime
  parent: System.Globalization.HijriCalendar
  isExternal: false
  name: MaxSupportedDateTime
  nameWithType: HijriCalendar.MaxSupportedDateTime
  fullName: HijriCalendar.MaxSupportedDateTime
- uid: System.Globalization.HijriCalendar.MinSupportedDateTime
  parent: System.Globalization.HijriCalendar
  isExternal: false
  name: MinSupportedDateTime
  nameWithType: HijriCalendar.MinSupportedDateTime
  fullName: HijriCalendar.MinSupportedDateTime
- uid: System.Globalization.HijriCalendar.ToDateTime(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  parent: System.Globalization.HijriCalendar
  isExternal: false
  name: ToDateTime(Int32, Int32, Int32, Int32, Int32, Int32, Int32, Int32)
  nameWithType: HijriCalendar.ToDateTime(Int32, Int32, Int32, Int32, Int32, Int32, Int32, Int32)
  fullName: HijriCalendar.ToDateTime(Int32, Int32, Int32, Int32, Int32, Int32, Int32, Int32)
- uid: System.Globalization.HijriCalendar.ToFourDigitYear(System.Int32)
  parent: System.Globalization.HijriCalendar
  isExternal: false
  name: ToFourDigitYear(Int32)
  nameWithType: HijriCalendar.ToFourDigitYear(Int32)
  fullName: HijriCalendar.ToFourDigitYear(Int32)
- uid: System.Globalization.HijriCalendar.TwoDigitYearMax
  parent: System.Globalization.HijriCalendar
  isExternal: false
  name: TwoDigitYearMax
  nameWithType: HijriCalendar.TwoDigitYearMax
  fullName: HijriCalendar.TwoDigitYearMax
- uid: System.Globalization.HijriCalendar.#ctor*
  parent: System.Globalization.HijriCalendar
  isExternal: false
  name: HijriCalendar
  nameWithType: HijriCalendar.HijriCalendar
  fullName: HijriCalendar.HijriCalendar
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/HijriCalendar.xml
- uid: System.Globalization.HijriCalendar.AddMonths*
  parent: System.Globalization.HijriCalendar
  isExternal: false
  name: AddMonths
  nameWithType: HijriCalendar.AddMonths
  fullName: HijriCalendar.AddMonths
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/HijriCalendar.xml
- uid: System.Globalization.HijriCalendar.AddYears*
  parent: System.Globalization.HijriCalendar
  isExternal: false
  name: AddYears
  nameWithType: HijriCalendar.AddYears
  fullName: HijriCalendar.AddYears
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/HijriCalendar.xml
- uid: System.Globalization.HijriCalendar.AlgorithmType*
  parent: System.Globalization.HijriCalendar
  isExternal: false
  name: AlgorithmType
  nameWithType: HijriCalendar.AlgorithmType
  fullName: HijriCalendar.AlgorithmType
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/HijriCalendar.xml
- uid: System.Globalization.HijriCalendar.DaysInYearBeforeMinSupportedYear*
  parent: System.Globalization.HijriCalendar
  isExternal: false
  name: DaysInYearBeforeMinSupportedYear
  nameWithType: HijriCalendar.DaysInYearBeforeMinSupportedYear
  fullName: HijriCalendar.DaysInYearBeforeMinSupportedYear
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/HijriCalendar.xml
- uid: System.Globalization.HijriCalendar.Eras*
  parent: System.Globalization.HijriCalendar
  isExternal: false
  name: Eras
  nameWithType: HijriCalendar.Eras
  fullName: HijriCalendar.Eras
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/HijriCalendar.xml
- uid: System.Globalization.HijriCalendar.GetDayOfMonth*
  parent: System.Globalization.HijriCalendar
  isExternal: false
  name: GetDayOfMonth
  nameWithType: HijriCalendar.GetDayOfMonth
  fullName: HijriCalendar.GetDayOfMonth
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/HijriCalendar.xml
- uid: System.Globalization.HijriCalendar.GetDayOfWeek*
  parent: System.Globalization.HijriCalendar
  isExternal: false
  name: GetDayOfWeek
  nameWithType: HijriCalendar.GetDayOfWeek
  fullName: HijriCalendar.GetDayOfWeek
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/HijriCalendar.xml
- uid: System.Globalization.HijriCalendar.GetDayOfYear*
  parent: System.Globalization.HijriCalendar
  isExternal: false
  name: GetDayOfYear
  nameWithType: HijriCalendar.GetDayOfYear
  fullName: HijriCalendar.GetDayOfYear
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/HijriCalendar.xml
- uid: System.Globalization.HijriCalendar.GetDaysInMonth*
  parent: System.Globalization.HijriCalendar
  isExternal: false
  name: GetDaysInMonth
  nameWithType: HijriCalendar.GetDaysInMonth
  fullName: HijriCalendar.GetDaysInMonth
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/HijriCalendar.xml
- uid: System.Globalization.HijriCalendar.GetDaysInYear*
  parent: System.Globalization.HijriCalendar
  isExternal: false
  name: GetDaysInYear
  nameWithType: HijriCalendar.GetDaysInYear
  fullName: HijriCalendar.GetDaysInYear
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/HijriCalendar.xml
- uid: System.Globalization.HijriCalendar.GetEra*
  parent: System.Globalization.HijriCalendar
  isExternal: false
  name: GetEra
  nameWithType: HijriCalendar.GetEra
  fullName: HijriCalendar.GetEra
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/HijriCalendar.xml
- uid: System.Globalization.HijriCalendar.GetLeapMonth*
  parent: System.Globalization.HijriCalendar
  isExternal: false
  name: GetLeapMonth
  nameWithType: HijriCalendar.GetLeapMonth
  fullName: HijriCalendar.GetLeapMonth
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/HijriCalendar.xml
- uid: System.Globalization.HijriCalendar.GetMonth*
  parent: System.Globalization.HijriCalendar
  isExternal: false
  name: GetMonth
  nameWithType: HijriCalendar.GetMonth
  fullName: HijriCalendar.GetMonth
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/HijriCalendar.xml
- uid: System.Globalization.HijriCalendar.GetMonthsInYear*
  parent: System.Globalization.HijriCalendar
  isExternal: false
  name: GetMonthsInYear
  nameWithType: HijriCalendar.GetMonthsInYear
  fullName: HijriCalendar.GetMonthsInYear
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/HijriCalendar.xml
- uid: System.Globalization.HijriCalendar.GetYear*
  parent: System.Globalization.HijriCalendar
  isExternal: false
  name: GetYear
  nameWithType: HijriCalendar.GetYear
  fullName: HijriCalendar.GetYear
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/HijriCalendar.xml
- uid: System.Globalization.HijriCalendar.HijriAdjustment*
  parent: System.Globalization.HijriCalendar
  isExternal: false
  name: HijriAdjustment
  nameWithType: HijriCalendar.HijriAdjustment
  fullName: HijriCalendar.HijriAdjustment
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/HijriCalendar.xml
- uid: System.Globalization.HijriCalendar.IsLeapDay*
  parent: System.Globalization.HijriCalendar
  isExternal: false
  name: IsLeapDay
  nameWithType: HijriCalendar.IsLeapDay
  fullName: HijriCalendar.IsLeapDay
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/HijriCalendar.xml
- uid: System.Globalization.HijriCalendar.IsLeapMonth*
  parent: System.Globalization.HijriCalendar
  isExternal: false
  name: IsLeapMonth
  nameWithType: HijriCalendar.IsLeapMonth
  fullName: HijriCalendar.IsLeapMonth
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/HijriCalendar.xml
- uid: System.Globalization.HijriCalendar.IsLeapYear*
  parent: System.Globalization.HijriCalendar
  isExternal: false
  name: IsLeapYear
  nameWithType: HijriCalendar.IsLeapYear
  fullName: HijriCalendar.IsLeapYear
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/HijriCalendar.xml
- uid: System.Globalization.HijriCalendar.MaxSupportedDateTime*
  parent: System.Globalization.HijriCalendar
  isExternal: false
  name: MaxSupportedDateTime
  nameWithType: HijriCalendar.MaxSupportedDateTime
  fullName: HijriCalendar.MaxSupportedDateTime
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/HijriCalendar.xml
- uid: System.Globalization.HijriCalendar.MinSupportedDateTime*
  parent: System.Globalization.HijriCalendar
  isExternal: false
  name: MinSupportedDateTime
  nameWithType: HijriCalendar.MinSupportedDateTime
  fullName: HijriCalendar.MinSupportedDateTime
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/HijriCalendar.xml
- uid: System.Globalization.HijriCalendar.ToDateTime*
  parent: System.Globalization.HijriCalendar
  isExternal: false
  name: ToDateTime
  nameWithType: HijriCalendar.ToDateTime
  fullName: HijriCalendar.ToDateTime
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/HijriCalendar.xml
- uid: System.Globalization.HijriCalendar.ToFourDigitYear*
  parent: System.Globalization.HijriCalendar
  isExternal: false
  name: ToFourDigitYear
  nameWithType: HijriCalendar.ToFourDigitYear
  fullName: HijriCalendar.ToFourDigitYear
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/HijriCalendar.xml
- uid: System.Globalization.HijriCalendar.TwoDigitYearMax*
  parent: System.Globalization.HijriCalendar
  isExternal: false
  name: TwoDigitYearMax
  nameWithType: HijriCalendar.TwoDigitYearMax
  fullName: HijriCalendar.TwoDigitYearMax
  monikers:
  - netcore-1.0
  - netcore-1.1
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - netstandard-1.3
  - netstandard-1.4
  - netstandard-1.6
  - netstandard-2.0
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/HijriCalendar.xml
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: Object.Equals(Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: Object.Equals(Object, Object)
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: false
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: Object.GetHashCode()
- uid: System.Object.GetType
  parent: System.Object
  isExternal: false
  name: GetType()
  nameWithType: Object.GetType()
  fullName: Object.GetType()
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: false
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: Object.MemberwiseClone()
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: Object.ReferenceEquals(Object, Object)
- uid: System.Object.ToString
  parent: System.Object
  isExternal: false
  name: ToString()
  nameWithType: Object.ToString()
  fullName: Object.ToString()
- uid: System.Globalization.Calendar.AddDays(System.DateTime,System.Int32)
  parent: System.Globalization.Calendar
  isExternal: false
  name: AddDays(DateTime, Int32)
  nameWithType: Calendar.AddDays(DateTime, Int32)
  fullName: Calendar.AddDays(DateTime, Int32)
- uid: System.Globalization.Calendar.AddHours(System.DateTime,System.Int32)
  parent: System.Globalization.Calendar
  isExternal: false
  name: AddHours(DateTime, Int32)
  nameWithType: Calendar.AddHours(DateTime, Int32)
  fullName: Calendar.AddHours(DateTime, Int32)
- uid: System.Globalization.Calendar.AddMilliseconds(System.DateTime,System.Double)
  parent: System.Globalization.Calendar
  isExternal: false
  name: AddMilliseconds(DateTime, Double)
  nameWithType: Calendar.AddMilliseconds(DateTime, Double)
  fullName: Calendar.AddMilliseconds(DateTime, Double)
- uid: System.Globalization.Calendar.AddMinutes(System.DateTime,System.Int32)
  parent: System.Globalization.Calendar
  isExternal: false
  name: AddMinutes(DateTime, Int32)
  nameWithType: Calendar.AddMinutes(DateTime, Int32)
  fullName: Calendar.AddMinutes(DateTime, Int32)
- uid: System.Globalization.Calendar.AddSeconds(System.DateTime,System.Int32)
  parent: System.Globalization.Calendar
  isExternal: false
  name: AddSeconds(DateTime, Int32)
  nameWithType: Calendar.AddSeconds(DateTime, Int32)
  fullName: Calendar.AddSeconds(DateTime, Int32)
- uid: System.Globalization.Calendar.AddWeeks(System.DateTime,System.Int32)
  parent: System.Globalization.Calendar
  isExternal: false
  name: AddWeeks(DateTime, Int32)
  nameWithType: Calendar.AddWeeks(DateTime, Int32)
  fullName: Calendar.AddWeeks(DateTime, Int32)
- uid: System.Globalization.Calendar.Clone
  parent: System.Globalization.Calendar
  isExternal: false
  name: Clone()
  nameWithType: Calendar.Clone()
  fullName: Calendar.Clone()
- uid: System.Globalization.Calendar.CurrentEra
  parent: System.Globalization.Calendar
  isExternal: false
  name: CurrentEra
  nameWithType: Calendar.CurrentEra
  fullName: Calendar.CurrentEra
- uid: System.Globalization.Calendar.GetDaysInMonth(System.Int32,System.Int32)
  parent: System.Globalization.Calendar
  isExternal: false
  name: GetDaysInMonth(Int32, Int32)
  nameWithType: Calendar.GetDaysInMonth(Int32, Int32)
  fullName: Calendar.GetDaysInMonth(Int32, Int32)
- uid: System.Globalization.Calendar.GetDaysInYear(System.Int32)
  parent: System.Globalization.Calendar
  isExternal: false
  name: GetDaysInYear(Int32)
  nameWithType: Calendar.GetDaysInYear(Int32)
  fullName: Calendar.GetDaysInYear(Int32)
- uid: System.Globalization.Calendar.GetHour(System.DateTime)
  parent: System.Globalization.Calendar
  isExternal: false
  name: GetHour(DateTime)
  nameWithType: Calendar.GetHour(DateTime)
  fullName: Calendar.GetHour(DateTime)
- uid: System.Globalization.Calendar.GetLeapMonth(System.Int32)
  parent: System.Globalization.Calendar
  isExternal: false
  name: GetLeapMonth(Int32)
  nameWithType: Calendar.GetLeapMonth(Int32)
  fullName: Calendar.GetLeapMonth(Int32)
- uid: System.Globalization.Calendar.GetMilliseconds(System.DateTime)
  parent: System.Globalization.Calendar
  isExternal: false
  name: GetMilliseconds(DateTime)
  nameWithType: Calendar.GetMilliseconds(DateTime)
  fullName: Calendar.GetMilliseconds(DateTime)
- uid: System.Globalization.Calendar.GetMinute(System.DateTime)
  parent: System.Globalization.Calendar
  isExternal: false
  name: GetMinute(DateTime)
  nameWithType: Calendar.GetMinute(DateTime)
  fullName: Calendar.GetMinute(DateTime)
- uid: System.Globalization.Calendar.GetMonthsInYear(System.Int32)
  parent: System.Globalization.Calendar
  isExternal: false
  name: GetMonthsInYear(Int32)
  nameWithType: Calendar.GetMonthsInYear(Int32)
  fullName: Calendar.GetMonthsInYear(Int32)
- uid: System.Globalization.Calendar.GetSecond(System.DateTime)
  parent: System.Globalization.Calendar
  isExternal: false
  name: GetSecond(DateTime)
  nameWithType: Calendar.GetSecond(DateTime)
  fullName: Calendar.GetSecond(DateTime)
- uid: System.Globalization.Calendar.GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek)
  parent: System.Globalization.Calendar
  isExternal: false
  name: GetWeekOfYear(DateTime, CalendarWeekRule, DayOfWeek)
  nameWithType: Calendar.GetWeekOfYear(DateTime, CalendarWeekRule, DayOfWeek)
  fullName: Calendar.GetWeekOfYear(DateTime, CalendarWeekRule, DayOfWeek)
- uid: System.Globalization.Calendar.IsLeapDay(System.Int32,System.Int32,System.Int32)
  parent: System.Globalization.Calendar
  isExternal: false
  name: IsLeapDay(Int32, Int32, Int32)
  nameWithType: Calendar.IsLeapDay(Int32, Int32, Int32)
  fullName: Calendar.IsLeapDay(Int32, Int32, Int32)
- uid: System.Globalization.Calendar.IsLeapMonth(System.Int32,System.Int32)
  parent: System.Globalization.Calendar
  isExternal: false
  name: IsLeapMonth(Int32, Int32)
  nameWithType: Calendar.IsLeapMonth(Int32, Int32)
  fullName: Calendar.IsLeapMonth(Int32, Int32)
- uid: System.Globalization.Calendar.IsLeapYear(System.Int32)
  parent: System.Globalization.Calendar
  isExternal: false
  name: IsLeapYear(Int32)
  nameWithType: Calendar.IsLeapYear(Int32)
  fullName: Calendar.IsLeapYear(Int32)
- uid: System.Globalization.Calendar.IsReadOnly
  parent: System.Globalization.Calendar
  isExternal: false
  name: IsReadOnly
  nameWithType: Calendar.IsReadOnly
  fullName: Calendar.IsReadOnly
- uid: System.Globalization.Calendar.ReadOnly(System.Globalization.Calendar)
  parent: System.Globalization.Calendar
  isExternal: false
  name: ReadOnly(Calendar)
  nameWithType: Calendar.ReadOnly(Calendar)
  fullName: Calendar.ReadOnly(Calendar)
- uid: System.Globalization.Calendar.ToDateTime(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  parent: System.Globalization.Calendar
  isExternal: false
  name: ToDateTime(Int32, Int32, Int32, Int32, Int32, Int32, Int32)
  nameWithType: Calendar.ToDateTime(Int32, Int32, Int32, Int32, Int32, Int32, Int32)
  fullName: Calendar.ToDateTime(Int32, Int32, Int32, Int32, Int32, Int32, Int32)
