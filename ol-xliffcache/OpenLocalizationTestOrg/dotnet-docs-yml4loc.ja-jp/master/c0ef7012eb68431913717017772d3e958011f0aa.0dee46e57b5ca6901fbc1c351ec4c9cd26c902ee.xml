{"nodes":[{"content":"Provides a thread-safe list of <xref href=\"System.Diagnostics.TraceListener\"></xref> objects.","nodes":[{"pos":[0,93],"content":"Provides a thread-safe list of <ph id=\"ph1\">&lt;xref href=\"System.Diagnostics.TraceListener\"&gt;&lt;/xref&gt;</ph> objects.","source":"Provides a thread-safe list of <xref href=\"System.Diagnostics.TraceListener\"></xref> objects."}],"pos":[2686,2780],"yaml":true},{"content":"The <xref:System.Diagnostics.TraceListenerCollection> list is used to specify the output listeners for the <xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=fullName> and the <xref:System.Diagnostics.Debug.Listeners%2A?displayProperty=fullName> collections. You cannot create an instance of this class.  \n  \n This list is thread-safe, however the methods used to access the list and the enumerator do not take synchronization locks. Instead, the collection is copied, the copy is modified, and a reference is set to the copy of the collection. Methods like <xref:System.Diagnostics.TraceListenerCollection.Add%2A>, <xref:System.Diagnostics.TraceListenerCollection.Remove%2A>, and <xref:System.Diagnostics.TraceListenerCollection.Clear%2A> modify the elements in the collection.  \n  \n The <xref:System.Diagnostics.TraceListenerCollection> class provides the <xref:System.Diagnostics.TraceListenerCollection.Count%2A> property for information about the list. It also provides the following methods: <xref:System.Diagnostics.TraceListenerCollection.Contains%2A>, <xref:System.Diagnostics.TraceListenerCollection.GetEnumerator%2A>, <xref:System.Diagnostics.TraceListenerCollection.IndexOf%2A>.  \n  \n This class also provides the following methods to modify the list: <xref:System.Diagnostics.TraceListenerCollection.Add%2A>, <xref:System.Diagnostics.TraceListenerCollection.Clear%2A>, <xref:System.Diagnostics.TraceListenerCollection.Insert%2A>, and <xref:System.Diagnostics.TraceListenerCollection.Remove%2A>. The <xref:System.Diagnostics.TraceListenerCollection.CopyTo%2A> method copies a part of the list to an array. The <xref:System.Diagnostics.TraceListenerCollection.RemoveAt%2A> method deletes the list member at a specified index number.","nodes":[{"pos":[0,312],"content":"The <xref:System.Diagnostics.TraceListenerCollection> list is used to specify the output listeners for the <xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=fullName> and the <xref:System.Diagnostics.Debug.Listeners%2A?displayProperty=fullName> collections. You cannot create an instance of this class.","nodes":[{"content":"The <xref:System.Diagnostics.TraceListenerCollection> list is used to specify the output listeners for the <xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=fullName> and the <xref:System.Diagnostics.Debug.Listeners%2A?displayProperty=fullName> collections. You cannot create an instance of this class.","pos":[0,312],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Diagnostics.TraceListenerCollection&gt;</ph> list is used to specify the output listeners for the <ph id=\"ph2\">&lt;xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=fullName&gt;</ph> and the <ph id=\"ph3\">&lt;xref:System.Diagnostics.Debug.Listeners%2A?displayProperty=fullName&gt;</ph> collections.","pos":[0,267],"source":"The <xref:System.Diagnostics.TraceListenerCollection> list is used to specify the output listeners for the <xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=fullName> and the <xref:System.Diagnostics.Debug.Listeners%2A?displayProperty=fullName> collections."},{"content":"You cannot create an instance of this class.","pos":[268,312]}]}]},{"pos":[319,787],"content":"This list is thread-safe, however the methods used to access the list and the enumerator do not take synchronization locks. Instead, the collection is copied, the copy is modified, and a reference is set to the copy of the collection. Methods like <xref:System.Diagnostics.TraceListenerCollection.Add%2A>, <xref:System.Diagnostics.TraceListenerCollection.Remove%2A>, and <xref:System.Diagnostics.TraceListenerCollection.Clear%2A> modify the elements in the collection.","nodes":[{"content":"This list is thread-safe, however the methods used to access the list and the enumerator do not take synchronization locks. Instead, the collection is copied, the copy is modified, and a reference is set to the copy of the collection. Methods like <xref:System.Diagnostics.TraceListenerCollection.Add%2A>, <xref:System.Diagnostics.TraceListenerCollection.Remove%2A>, and <xref:System.Diagnostics.TraceListenerCollection.Clear%2A> modify the elements in the collection.","pos":[0,468],"nodes":[{"content":"This list is thread-safe, however the methods used to access the list and the enumerator do not take synchronization locks.","pos":[0,123]},{"content":"Instead, the collection is copied, the copy is modified, and a reference is set to the copy of the collection.","pos":[124,234]},{"content":"Methods like <ph id=\"ph1\">&lt;xref:System.Diagnostics.TraceListenerCollection.Add%2A&gt;</ph>, <ph id=\"ph2\">&lt;xref:System.Diagnostics.TraceListenerCollection.Remove%2A&gt;</ph>, and <ph id=\"ph3\">&lt;xref:System.Diagnostics.TraceListenerCollection.Clear%2A&gt;</ph> modify the elements in the collection.","pos":[235,468],"source":" Methods like <xref:System.Diagnostics.TraceListenerCollection.Add%2A>, <xref:System.Diagnostics.TraceListenerCollection.Remove%2A>, and <xref:System.Diagnostics.TraceListenerCollection.Clear%2A> modify the elements in the collection."}]}]},{"pos":[794,1199],"content":"The <xref:System.Diagnostics.TraceListenerCollection> class provides the <xref:System.Diagnostics.TraceListenerCollection.Count%2A> property for information about the list. It also provides the following methods: <xref:System.Diagnostics.TraceListenerCollection.Contains%2A>, <xref:System.Diagnostics.TraceListenerCollection.GetEnumerator%2A>, <xref:System.Diagnostics.TraceListenerCollection.IndexOf%2A>.","nodes":[{"content":"The <xref:System.Diagnostics.TraceListenerCollection> class provides the <xref:System.Diagnostics.TraceListenerCollection.Count%2A> property for information about the list. It also provides the following methods: <xref:System.Diagnostics.TraceListenerCollection.Contains%2A>, <xref:System.Diagnostics.TraceListenerCollection.GetEnumerator%2A>, <xref:System.Diagnostics.TraceListenerCollection.IndexOf%2A>.","pos":[0,405],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Diagnostics.TraceListenerCollection&gt;</ph> class provides the <ph id=\"ph2\">&lt;xref:System.Diagnostics.TraceListenerCollection.Count%2A&gt;</ph> property for information about the list.","pos":[0,172],"source":"The <xref:System.Diagnostics.TraceListenerCollection> class provides the <xref:System.Diagnostics.TraceListenerCollection.Count%2A> property for information about the list."},{"content":"It also provides the following methods: <ph id=\"ph1\">&lt;xref:System.Diagnostics.TraceListenerCollection.Contains%2A&gt;</ph>, <ph id=\"ph2\">&lt;xref:System.Diagnostics.TraceListenerCollection.GetEnumerator%2A&gt;</ph>, <ph id=\"ph3\">&lt;xref:System.Diagnostics.TraceListenerCollection.IndexOf%2A&gt;</ph>.","pos":[173,405],"source":" It also provides the following methods: <xref:System.Diagnostics.TraceListenerCollection.Contains%2A>, <xref:System.Diagnostics.TraceListenerCollection.GetEnumerator%2A>, <xref:System.Diagnostics.TraceListenerCollection.IndexOf%2A>."}]}]},{"pos":[1206,1752],"content":"This class also provides the following methods to modify the list: <xref:System.Diagnostics.TraceListenerCollection.Add%2A>, <xref:System.Diagnostics.TraceListenerCollection.Clear%2A>, <xref:System.Diagnostics.TraceListenerCollection.Insert%2A>, and <xref:System.Diagnostics.TraceListenerCollection.Remove%2A>. The <xref:System.Diagnostics.TraceListenerCollection.CopyTo%2A> method copies a part of the list to an array. The <xref:System.Diagnostics.TraceListenerCollection.RemoveAt%2A> method deletes the list member at a specified index number.","nodes":[{"content":"This class also provides the following methods to modify the list: <xref:System.Diagnostics.TraceListenerCollection.Add%2A>, <xref:System.Diagnostics.TraceListenerCollection.Clear%2A>, <xref:System.Diagnostics.TraceListenerCollection.Insert%2A>, and <xref:System.Diagnostics.TraceListenerCollection.Remove%2A>. The <xref:System.Diagnostics.TraceListenerCollection.CopyTo%2A> method copies a part of the list to an array. The <xref:System.Diagnostics.TraceListenerCollection.RemoveAt%2A> method deletes the list member at a specified index number.","pos":[0,546],"nodes":[{"content":"This class also provides the following methods to modify the list: <ph id=\"ph1\">&lt;xref:System.Diagnostics.TraceListenerCollection.Add%2A&gt;</ph>, <ph id=\"ph2\">&lt;xref:System.Diagnostics.TraceListenerCollection.Clear%2A&gt;</ph>, <ph id=\"ph3\">&lt;xref:System.Diagnostics.TraceListenerCollection.Insert%2A&gt;</ph>, and <ph id=\"ph4\">&lt;xref:System.Diagnostics.TraceListenerCollection.Remove%2A&gt;</ph>.","pos":[0,310],"source":"This class also provides the following methods to modify the list: <xref:System.Diagnostics.TraceListenerCollection.Add%2A>, <xref:System.Diagnostics.TraceListenerCollection.Clear%2A>, <xref:System.Diagnostics.TraceListenerCollection.Insert%2A>, and <xref:System.Diagnostics.TraceListenerCollection.Remove%2A>."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Diagnostics.TraceListenerCollection.CopyTo%2A&gt;</ph> method copies a part of the list to an array.","pos":[311,420],"source":" The <xref:System.Diagnostics.TraceListenerCollection.CopyTo%2A> method copies a part of the list to an array."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Diagnostics.TraceListenerCollection.RemoveAt%2A&gt;</ph> method deletes the list member at a specified index number.","pos":[421,546],"source":" The <xref:System.Diagnostics.TraceListenerCollection.RemoveAt%2A> method deletes the list member at a specified index number."}]}]}],"pos":[2791,4552],"yaml":true,"extradata":"MT"},{"content":"Adds a <xref href=\"System.Diagnostics.TraceListener\"></xref> to the list.","nodes":[{"pos":[0,73],"content":"Adds a <ph id=\"ph1\">&lt;xref href=\"System.Diagnostics.TraceListener\"&gt;&lt;/xref&gt;</ph> to the list.","source":"Adds a <xref href=\"System.Diagnostics.TraceListener\"></xref> to the list."}],"pos":[7392,7466],"yaml":true},{"content":"A <xref href=\"System.Diagnostics.TraceListener\"></xref> to add to the list.","nodes":[{"pos":[0,75],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Diagnostics.TraceListener\"&gt;&lt;/xref&gt;</ph> to add to the list.","source":"A <xref href=\"System.Diagnostics.TraceListener\"></xref> to add to the list."}],"pos":[8436,8512],"yaml":true},{"content":"The position at which the new listener was inserted.","nodes":[{"pos":[0,52],"content":"The position at which the new listener was inserted.","nodes":[{"content":"The position at which the new listener was inserted.","pos":[0,52]}]}],"pos":[8568,8621],"yaml":true},{"content":"Adds an array of <xref href=\"System.Diagnostics.TraceListener\"></xref> objects to the list.","nodes":[{"pos":[0,91],"content":"Adds an array of <ph id=\"ph1\">&lt;xref href=\"System.Diagnostics.TraceListener\"&gt;&lt;/xref&gt;</ph> objects to the list.","source":"Adds an array of <xref href=\"System.Diagnostics.TraceListener\"></xref> objects to the list."}],"pos":[10116,10208],"yaml":true},{"content":"An array of <xref href=\"System.Diagnostics.TraceListener\"></xref> objects to add to the list.","nodes":[{"pos":[0,93],"content":"An array of <ph id=\"ph1\">&lt;xref href=\"System.Diagnostics.TraceListener\"&gt;&lt;/xref&gt;</ph> objects to add to the list.","source":"An array of <xref href=\"System.Diagnostics.TraceListener\"></xref> objects to add to the list."}],"pos":[10394,10488],"yaml":true},{"content":"<code>value</code> is `null`.","nodes":[{"pos":[0,29],"content":"<ph id=\"ph1\">&lt;code&gt;value&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>value</code> is `null`."}],"pos":[10669,10699],"yaml":true},{"content":"Adds the contents of another <xref href=\"System.Diagnostics.TraceListenerCollection\"></xref> to the list.","nodes":[{"pos":[0,105],"content":"Adds the contents of another <ph id=\"ph1\">&lt;xref href=\"System.Diagnostics.TraceListenerCollection\"&gt;&lt;/xref&gt;</ph> to the list.","source":"Adds the contents of another <xref href=\"System.Diagnostics.TraceListenerCollection\"></xref> to the list."}],"pos":[12165,12271],"yaml":true},{"content":"Another <xref href=\"System.Diagnostics.TraceListenerCollection\"></xref> whose contents are added to the list.","nodes":[{"pos":[0,109],"content":"Another <ph id=\"ph1\">&lt;xref href=\"System.Diagnostics.TraceListenerCollection\"&gt;&lt;/xref&gt;</ph> whose contents are added to the list.","source":"Another <xref href=\"System.Diagnostics.TraceListenerCollection\"></xref> whose contents are added to the list."}],"pos":[12473,12583],"yaml":true},{"content":"<code>value</code> is `null`.","nodes":[{"pos":[0,29],"content":"<ph id=\"ph1\">&lt;code&gt;value&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>value</code> is `null`."}],"pos":[12764,12794],"yaml":true},{"content":"Clears all the listeners from the list.","nodes":[{"pos":[0,39],"content":"Clears all the listeners from the list.","nodes":[{"content":"Clears all the listeners from the list.","pos":[0,39]}]}],"pos":[14041,14081],"yaml":true},{"content":"Checks whether the list contains the specified listener.","nodes":[{"pos":[0,56],"content":"Checks whether the list contains the specified listener.","nodes":[{"content":"Checks whether the list contains the specified listener.","pos":[0,56]}]}],"pos":[15630,15687],"yaml":true},{"content":"The <xref:System.Diagnostics.TraceListenerCollection.Contains%2A> method can confirm the existence of a <xref:System.Diagnostics.TraceListener> before you perform further operations.","nodes":[{"pos":[0,182],"content":"The <xref:System.Diagnostics.TraceListenerCollection.Contains%2A> method can confirm the existence of a <xref:System.Diagnostics.TraceListener> before you perform further operations.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Diagnostics.TraceListenerCollection.Contains%2A&gt;</ph> method can confirm the existence of a <ph id=\"ph2\">&lt;xref:System.Diagnostics.TraceListener&gt;</ph> before you perform further operations.","pos":[0,182],"source":"The <xref:System.Diagnostics.TraceListenerCollection.Contains%2A> method can confirm the existence of a <xref:System.Diagnostics.TraceListener> before you perform further operations."}]}],"pos":[15698,15881],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Diagnostics.TraceListener\"></xref> to find in the list.","nodes":[{"pos":[0,76],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Diagnostics.TraceListener\"&gt;&lt;/xref&gt;</ph> to find in the list.","source":"A <xref href=\"System.Diagnostics.TraceListener\"></xref> to find in the list."}],"pos":[16069,16146],"yaml":true},{"content":"`true` if the listener is in the list; otherwise, `false`.","nodes":[{"pos":[0,58],"content":"<ph id=\"ph1\">`true`</ph> if the listener is in the list; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the listener is in the list; otherwise, `false`."}],"pos":[16204,16265],"yaml":true},{"content":"Copies a section of the current <xref href=\"System.Diagnostics.TraceListenerCollection\"></xref> list to the specified array at the specified index.","nodes":[{"pos":[0,147],"content":"Copies a section of the current <ph id=\"ph1\">&lt;xref href=\"System.Diagnostics.TraceListenerCollection\"&gt;&lt;/xref&gt;</ph> list to the specified array at the specified index.","source":"Copies a section of the current <xref href=\"System.Diagnostics.TraceListenerCollection\"></xref> list to the specified array at the specified index."}],"pos":[17813,17961],"yaml":true},{"content":"An array of type <xref href=\"System.Array\"></xref> to copy the elements into.","nodes":[{"pos":[0,77],"content":"An array of type <ph id=\"ph1\">&lt;xref href=\"System.Array\"&gt;&lt;/xref&gt;</ph> to copy the elements into.","source":"An array of type <xref href=\"System.Array\"></xref> to copy the elements into."}],"pos":[18164,18242],"yaml":true},{"content":"The starting index number in the current list to copy from.","nodes":[{"pos":[0,59],"content":"The starting index number in the current list to copy from.","nodes":[{"content":"The starting index number in the current list to copy from.","pos":[0,59]}]}],"pos":[18302,18362],"yaml":true},{"content":"Gets the number of listeners in the list.","nodes":[{"pos":[0,41],"content":"Gets the number of listeners in the list.","nodes":[{"content":"Gets the number of listeners in the list.","pos":[0,41]}]}],"pos":[19685,19727],"yaml":true},{"content":"The number of listeners in the list.","nodes":[{"pos":[0,36],"content":"The number of listeners in the list.","nodes":[{"content":"The number of listeners in the list.","pos":[0,36]}]}],"pos":[19832,19869],"yaml":true},{"content":"Gets an enumerator for this list.","nodes":[{"pos":[0,33],"content":"Gets an enumerator for this list.","nodes":[{"content":"Gets an enumerator for this list.","pos":[0,33]}]}],"pos":[21243,21277],"yaml":true},{"content":"An enumerator of type <xref href=\"System.Collections.IEnumerator\"></xref>.","nodes":[{"pos":[0,74],"content":"An enumerator of type <ph id=\"ph1\">&lt;xref href=\"System.Collections.IEnumerator\"&gt;&lt;/xref&gt;</ph>.","source":"An enumerator of type <xref href=\"System.Collections.IEnumerator\"></xref>."}],"pos":[21449,21524],"yaml":true},{"content":"Gets the index of the specified listener.","nodes":[{"pos":[0,41],"content":"Gets the index of the specified listener.","nodes":[{"content":"Gets the index of the specified listener.","pos":[0,41]}]}],"pos":[23011,23053],"yaml":true},{"content":"A <xref href=\"System.Diagnostics.TraceListener\"></xref> to find in the list.","nodes":[{"pos":[0,76],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Diagnostics.TraceListener\"&gt;&lt;/xref&gt;</ph> to find in the list.","source":"A <xref href=\"System.Diagnostics.TraceListener\"></xref> to find in the list."}],"pos":[23239,23316],"yaml":true},{"content":"The index of the listener, if it can be found in the list; otherwise, -1.","nodes":[{"pos":[0,73],"content":"The index of the listener, if it can be found in the list; otherwise, -1.","nodes":[{"content":"The index of the listener, if it can be found in the list; otherwise, -1.","pos":[0,73]}]}],"pos":[23372,23446],"yaml":true},{"content":"Inserts the listener at the specified index.","nodes":[{"pos":[0,44],"content":"Inserts the listener at the specified index.","nodes":[{"content":"Inserts the listener at the specified index.","pos":[0,44]}]}],"pos":[24981,25026],"yaml":true},{"content":"If the index equals the number of items in the list, then the listener is appended to the end of the list.  \n  \n The index is zero-based. Therefore, if you want to insert the listener into the third position, you must call `myTraceListenerColl.Insert(2, myNewListener)`.","nodes":[{"pos":[0,106],"content":"If the index equals the number of items in the list, then the listener is appended to the end of the list.","nodes":[{"content":"If the index equals the number of items in the list, then the listener is appended to the end of the list.","pos":[0,106]}]},{"pos":[113,270],"content":"The index is zero-based. Therefore, if you want to insert the listener into the third position, you must call `myTraceListenerColl.Insert(2, myNewListener)`.","nodes":[{"content":"The index is zero-based.","pos":[0,24]},{"content":"Therefore, if you want to insert the listener into the third position, you must call <ph id=\"ph1\">`myTraceListenerColl.Insert(2, myNewListener)`</ph>.","pos":[25,157],"source":" Therefore, if you want to insert the listener into the third position, you must call `myTraceListenerColl.Insert(2, myNewListener)`."}]}],"pos":[25037,25312],"yaml":true,"extradata":"MT"},{"content":"The position in the list to insert the new <xref href=\"System.Diagnostics.TraceListener\"></xref>.","nodes":[{"pos":[0,97],"content":"The position in the list to insert the new <ph id=\"ph1\">&lt;xref href=\"System.Diagnostics.TraceListener\"&gt;&lt;/xref&gt;</ph>.","source":"The position in the list to insert the new <xref href=\"System.Diagnostics.TraceListener\"></xref>."}],"pos":[25486,25584],"yaml":true},{"content":"A <xref href=\"System.Diagnostics.TraceListener\"></xref> to insert in the list.","nodes":[{"pos":[0,78],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Diagnostics.TraceListener\"&gt;&lt;/xref&gt;</ph> to insert in the list.","source":"A <xref href=\"System.Diagnostics.TraceListener\"></xref> to insert in the list."}],"pos":[25667,25746],"yaml":true},{"content":"The <code>index</code> is not a valid index in the list.","nodes":[{"pos":[0,56],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">index</ph><ept id=\"p1\">&lt;/code&gt;</ept> is not a valid index in the list.","source":"The <code>index</code> is not a valid index in the list."}],"pos":[25937,25994],"yaml":true},{"content":"<code>listener</code> is `null`.","nodes":[{"pos":[0,32],"content":"<ph id=\"ph1\">&lt;code&gt;listener&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>listener</code> is `null`."}],"pos":[26088,26121],"yaml":true},{"content":"Gets or sets the <xref href=\"System.Diagnostics.TraceListener\"></xref> at the specified index.","nodes":[{"pos":[0,94],"content":"Gets or sets the <ph id=\"ph1\">&lt;xref href=\"System.Diagnostics.TraceListener\"&gt;&lt;/xref&gt;</ph> at the specified index.","source":"Gets or sets the <xref href=\"System.Diagnostics.TraceListener\"></xref> at the specified index."}],"pos":[27421,27516],"yaml":true},{"content":"The index is zero-based. Therefore, you must subtract one from the numerical position of a particular <xref:System.Diagnostics.TraceListener> to access that <xref:System.Diagnostics.TraceListener>. For example, to get the third <xref:System.Diagnostics.TraceListener>, you need to specify `myTraceListenerColl[2]`.","nodes":[{"pos":[0,314],"content":"The index is zero-based. Therefore, you must subtract one from the numerical position of a particular <xref:System.Diagnostics.TraceListener> to access that <xref:System.Diagnostics.TraceListener>. For example, to get the third <xref:System.Diagnostics.TraceListener>, you need to specify `myTraceListenerColl[2]`.","nodes":[{"content":"The index is zero-based.","pos":[0,24]},{"content":"Therefore, you must subtract one from the numerical position of a particular <ph id=\"ph1\">&lt;xref:System.Diagnostics.TraceListener&gt;</ph> to access that <ph id=\"ph2\">&lt;xref:System.Diagnostics.TraceListener&gt;</ph>.","pos":[25,197],"source":" Therefore, you must subtract one from the numerical position of a particular <xref:System.Diagnostics.TraceListener> to access that <xref:System.Diagnostics.TraceListener>."},{"content":"For example, to get the third <ph id=\"ph1\">&lt;xref:System.Diagnostics.TraceListener&gt;</ph>, you need to specify <ph id=\"ph2\">`myTraceListenerColl[2]`</ph>.","pos":[198,314],"source":" For example, to get the third <xref:System.Diagnostics.TraceListener>, you need to specify `myTraceListenerColl[2]`."}]}],"pos":[27527,27842],"yaml":true,"extradata":"MT"},{"content":"The zero-based index of the <xref href=\"System.Diagnostics.TraceListener\"></xref> to get from the list.","nodes":[{"pos":[0,103],"content":"The zero-based index of the <ph id=\"ph1\">&lt;xref href=\"System.Diagnostics.TraceListener\"&gt;&lt;/xref&gt;</ph> to get from the list.","source":"The zero-based index of the <xref href=\"System.Diagnostics.TraceListener\"></xref> to get from the list."}],"pos":[28003,28107],"yaml":true},{"content":"A <xref href=\"System.Diagnostics.TraceListener\"></xref> with the specified index.","nodes":[{"pos":[0,81],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Diagnostics.TraceListener\"&gt;&lt;/xref&gt;</ph> with the specified index.","source":"A <xref href=\"System.Diagnostics.TraceListener\"></xref> with the specified index."}],"pos":[28183,28265],"yaml":true},{"content":"The value is `null`.","nodes":[{"pos":[0,20],"content":"The value is <ph id=\"ph1\">`null`</ph>.","source":"The value is `null`."}],"pos":[28442,28463],"yaml":true},{"content":"Gets the first <xref href=\"System.Diagnostics.TraceListener\"></xref> in the list with the specified name.","nodes":[{"pos":[0,105],"content":"Gets the first <ph id=\"ph1\">&lt;xref href=\"System.Diagnostics.TraceListener\"&gt;&lt;/xref&gt;</ph> in the list with the specified name.","source":"Gets the first <xref href=\"System.Diagnostics.TraceListener\"></xref> in the list with the specified name."}],"pos":[29769,29875],"yaml":true},{"content":"The <xref:System.Diagnostics.TraceListenerCollection.Item%2A> property is case-sensitive when searching for names. That is, if two listeners exist with the names \"Lname\" and \"lname\", <xref:System.Diagnostics.TraceListenerCollection.Item%2A> property will find only the <xref:System.Diagnostics.TraceListener> with the <xref:System.Diagnostics.TraceListener.Name%2A> that you specify, not both.","nodes":[{"pos":[0,393],"content":"The <xref:System.Diagnostics.TraceListenerCollection.Item%2A> property is case-sensitive when searching for names. That is, if two listeners exist with the names \"Lname\" and \"lname\", <xref:System.Diagnostics.TraceListenerCollection.Item%2A> property will find only the <xref:System.Diagnostics.TraceListener> with the <xref:System.Diagnostics.TraceListener.Name%2A> that you specify, not both.","nodes":[{"content":"The <xref:System.Diagnostics.TraceListenerCollection.Item%2A> property is case-sensitive when searching for names. That is, if two listeners exist with the names \"Lname\" and \"lname\", <xref:System.Diagnostics.TraceListenerCollection.Item%2A> property will find only the <xref:System.Diagnostics.TraceListener> with the <xref:System.Diagnostics.TraceListener.Name%2A> that you specify, not both.","pos":[0,393],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Diagnostics.TraceListenerCollection.Item%2A&gt;</ph> property is case-sensitive when searching for names.","pos":[0,114],"source":"The <xref:System.Diagnostics.TraceListenerCollection.Item%2A> property is case-sensitive when searching for names."},{"content":"That is, if two listeners exist with the names \"Lname\" and \"lname\", <ph id=\"ph1\">&lt;xref:System.Diagnostics.TraceListenerCollection.Item%2A&gt;</ph> property will find only the <ph id=\"ph2\">&lt;xref:System.Diagnostics.TraceListener&gt;</ph> with the <ph id=\"ph3\">&lt;xref:System.Diagnostics.TraceListener.Name%2A&gt;</ph> that you specify, not both.","pos":[115,393],"source":" That is, if two listeners exist with the names \"Lname\" and \"lname\", <xref:System.Diagnostics.TraceListenerCollection.Item%2A> property will find only the <xref:System.Diagnostics.TraceListener> with the <xref:System.Diagnostics.TraceListener.Name%2A> that you specify, not both."}]}]}],"pos":[29886,30280],"yaml":true,"extradata":"MT"},{"content":"The name of the <xref href=\"System.Diagnostics.TraceListener\"></xref> to get from the list.","nodes":[{"pos":[0,91],"content":"The name of the <ph id=\"ph1\">&lt;xref href=\"System.Diagnostics.TraceListener\"&gt;&lt;/xref&gt;</ph> to get from the list.","source":"The name of the <xref href=\"System.Diagnostics.TraceListener\"></xref> to get from the list."}],"pos":[30446,30538],"yaml":true},{"content":"The first <xref href=\"System.Diagnostics.TraceListener\"></xref> in the list with the given <xref href=\"System.Diagnostics.TraceListener.Name\"></xref>. This item returns `null` if no <xref href=\"System.Diagnostics.TraceListener\"></xref> with the given name can be found.","nodes":[{"pos":[0,269],"content":"The first <xref href=\"System.Diagnostics.TraceListener\"></xref> in the list with the given <xref href=\"System.Diagnostics.TraceListener.Name\"></xref>. This item returns `null` if no <xref href=\"System.Diagnostics.TraceListener\"></xref> with the given name can be found.","nodes":[{"content":"The first <ph id=\"ph1\">&lt;xref href=\"System.Diagnostics.TraceListener\"&gt;&lt;/xref&gt;</ph> in the list with the given <ph id=\"ph2\">&lt;xref href=\"System.Diagnostics.TraceListener.Name\"&gt;&lt;/xref&gt;</ph>.","pos":[0,150],"source":"The first <xref href=\"System.Diagnostics.TraceListener\"></xref> in the list with the given <xref href=\"System.Diagnostics.TraceListener.Name\"></xref>."},{"content":"This item returns <ph id=\"ph1\">`null`</ph> if no <ph id=\"ph2\">&lt;xref href=\"System.Diagnostics.TraceListener\"&gt;&lt;/xref&gt;</ph> with the given name can be found.","pos":[151,269],"source":" This item returns `null` if no <xref href=\"System.Diagnostics.TraceListener\"></xref> with the given name can be found."}]}],"pos":[30614,30884],"yaml":true},{"content":"Removes from the collection the first <xref href=\"System.Diagnostics.TraceListener\"></xref> with the specified name.","nodes":[{"pos":[0,116],"content":"Removes from the collection the first <ph id=\"ph1\">&lt;xref href=\"System.Diagnostics.TraceListener\"&gt;&lt;/xref&gt;</ph> with the specified name.","source":"Removes from the collection the first <xref href=\"System.Diagnostics.TraceListener\"></xref> with the specified name."}],"pos":[32278,32395],"yaml":true},{"content":"The `name` parameter is case-sensitive. That is, if two listeners exist with the names \"Rname\" and \"rname\", the <xref:System.Diagnostics.TraceListenerCollection.Remove%2A> method will find the specific listener you name.","nodes":[{"pos":[0,220],"content":"The `name` parameter is case-sensitive. That is, if two listeners exist with the names \"Rname\" and \"rname\", the <xref:System.Diagnostics.TraceListenerCollection.Remove%2A> method will find the specific listener you name.","nodes":[{"content":"The <ph id=\"ph1\">`name`</ph> parameter is case-sensitive.","pos":[0,39],"source":"The `name` parameter is case-sensitive."},{"content":"That is, if two listeners exist with the names \"Rname\" and \"rname\", the <ph id=\"ph1\">&lt;xref:System.Diagnostics.TraceListenerCollection.Remove%2A&gt;</ph> method will find the specific listener you name.","pos":[40,220],"source":" That is, if two listeners exist with the names \"Rname\" and \"rname\", the <xref:System.Diagnostics.TraceListenerCollection.Remove%2A> method will find the specific listener you name."}]}],"pos":[32406,32627],"yaml":true,"extradata":"MT"},{"content":"The name of the <xref href=\"System.Diagnostics.TraceListener\"></xref> to remove from the list.","nodes":[{"pos":[0,94],"content":"The name of the <ph id=\"ph1\">&lt;xref href=\"System.Diagnostics.TraceListener\"&gt;&lt;/xref&gt;</ph> to remove from the list.","source":"The name of the <xref href=\"System.Diagnostics.TraceListener\"></xref> to remove from the list."}],"pos":[32760,32855],"yaml":true},{"content":"Removes from the collection the specified <xref href=\"System.Diagnostics.TraceListener\"></xref>.","nodes":[{"pos":[0,96],"content":"Removes from the collection the specified <ph id=\"ph1\">&lt;xref href=\"System.Diagnostics.TraceListener\"&gt;&lt;/xref&gt;</ph>.","source":"Removes from the collection the specified <xref href=\"System.Diagnostics.TraceListener\"></xref>."}],"pos":[34329,34426],"yaml":true},{"content":"A <xref href=\"System.Diagnostics.TraceListener\"></xref> to remove from the list.","nodes":[{"pos":[0,80],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Diagnostics.TraceListener\"&gt;&lt;/xref&gt;</ph> to remove from the list.","source":"A <xref href=\"System.Diagnostics.TraceListener\"></xref> to remove from the list."}],"pos":[34612,34693],"yaml":true},{"content":"Removes from the collection the <xref href=\"System.Diagnostics.TraceListener\"></xref> at the specified index.","nodes":[{"pos":[0,109],"content":"Removes from the collection the <ph id=\"ph1\">&lt;xref href=\"System.Diagnostics.TraceListener\"&gt;&lt;/xref&gt;</ph> at the specified index.","source":"Removes from the collection the <xref href=\"System.Diagnostics.TraceListener\"></xref> at the specified index."}],"pos":[36095,36205],"yaml":true},{"content":"The index is zero-based. Therefore, you must subtract one from the numerical position of a particular <xref:System.Diagnostics.TraceListener> to delete that <xref:System.Diagnostics.TraceListener>. For example, to remove the third <xref:System.Diagnostics.TraceListener>, you need to specify `myTraceListenerColl.RemoveAt(2)`.","nodes":[{"pos":[0,326],"content":"The index is zero-based. Therefore, you must subtract one from the numerical position of a particular <xref:System.Diagnostics.TraceListener> to delete that <xref:System.Diagnostics.TraceListener>. For example, to remove the third <xref:System.Diagnostics.TraceListener>, you need to specify `myTraceListenerColl.RemoveAt(2)`.","nodes":[{"content":"The index is zero-based.","pos":[0,24]},{"content":"Therefore, you must subtract one from the numerical position of a particular <ph id=\"ph1\">&lt;xref:System.Diagnostics.TraceListener&gt;</ph> to delete that <ph id=\"ph2\">&lt;xref:System.Diagnostics.TraceListener&gt;</ph>.","pos":[25,197],"source":" Therefore, you must subtract one from the numerical position of a particular <xref:System.Diagnostics.TraceListener> to delete that <xref:System.Diagnostics.TraceListener>."},{"content":"For example, to remove the third <ph id=\"ph1\">&lt;xref:System.Diagnostics.TraceListener&gt;</ph>, you need to specify <ph id=\"ph2\">`myTraceListenerColl.RemoveAt(2)`</ph>.","pos":[198,326],"source":" For example, to remove the third <xref:System.Diagnostics.TraceListener>, you need to specify `myTraceListenerColl.RemoveAt(2)`."}]}],"pos":[36216,36543],"yaml":true,"extradata":"MT"},{"content":"The zero-based index of the <xref href=\"System.Diagnostics.TraceListener\"></xref> to remove from the list.","nodes":[{"pos":[0,106],"content":"The zero-based index of the <ph id=\"ph1\">&lt;xref href=\"System.Diagnostics.TraceListener\"&gt;&lt;/xref&gt;</ph> to remove from the list.","source":"The zero-based index of the <xref href=\"System.Diagnostics.TraceListener\"></xref> to remove from the list."}],"pos":[36676,36783],"yaml":true},{"content":"The <code>index</code> is not a valid index in the list.","nodes":[{"pos":[0,56],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">index</ph><ept id=\"p1\">&lt;/code&gt;</ept> is not a valid index in the list.","source":"The <code>index</code> is not a valid index in the list."}],"pos":[36976,37033],"yaml":true},{"content":"Copies a section of the current <xref href=\"System.Diagnostics.TraceListenerCollection\"></xref> to the specified array of <xref href=\"System.Diagnostics.TraceListener\"></xref> objects.","nodes":[{"pos":[0,184],"content":"Copies a section of the current <ph id=\"ph1\">&lt;xref href=\"System.Diagnostics.TraceListenerCollection\"&gt;&lt;/xref&gt;</ph> to the specified array of <ph id=\"ph2\">&lt;xref href=\"System.Diagnostics.TraceListener\"&gt;&lt;/xref&gt;</ph> objects.","source":"Copies a section of the current <xref href=\"System.Diagnostics.TraceListenerCollection\"></xref> to the specified array of <xref href=\"System.Diagnostics.TraceListener\"></xref> objects."}],"pos":[38546,38731],"yaml":true},{"content":"Use the <xref:System.Diagnostics.TraceListenerCollection.CopyTo%2A> method of the <xref:System.Diagnostics.TraceListenerCollection> class to copy all or part of the collection to an array.","nodes":[{"pos":[0,188],"content":"Use the <xref:System.Diagnostics.TraceListenerCollection.CopyTo%2A> method of the <xref:System.Diagnostics.TraceListenerCollection> class to copy all or part of the collection to an array.","nodes":[{"content":"Use the <ph id=\"ph1\">&lt;xref:System.Diagnostics.TraceListenerCollection.CopyTo%2A&gt;</ph> method of the <ph id=\"ph2\">&lt;xref:System.Diagnostics.TraceListenerCollection&gt;</ph> class to copy all or part of the collection to an array.","pos":[0,188],"source":"Use the <xref:System.Diagnostics.TraceListenerCollection.CopyTo%2A> method of the <xref:System.Diagnostics.TraceListenerCollection> class to copy all or part of the collection to an array."}]}],"pos":[38742,38931],"yaml":true,"extradata":"MT"},{"content":"The one-dimensional array of <xref href=\"System.Diagnostics.TraceListener\"></xref> objects that is the destination of the elements copied from the <xref href=\"System.Diagnostics.TraceListenerCollection\"></xref>. The array must have zero-based indexing.","nodes":[{"pos":[0,252],"content":"The one-dimensional array of <xref href=\"System.Diagnostics.TraceListener\"></xref> objects that is the destination of the elements copied from the <xref href=\"System.Diagnostics.TraceListenerCollection\"></xref>. The array must have zero-based indexing.","nodes":[{"content":"The one-dimensional array of <ph id=\"ph1\">&lt;xref href=\"System.Diagnostics.TraceListener\"&gt;&lt;/xref&gt;</ph> objects that is the destination of the elements copied from the <ph id=\"ph2\">&lt;xref href=\"System.Diagnostics.TraceListenerCollection\"&gt;&lt;/xref&gt;</ph>.","pos":[0,211],"source":"The one-dimensional array of <xref href=\"System.Diagnostics.TraceListener\"></xref> objects that is the destination of the elements copied from the <xref href=\"System.Diagnostics.TraceListenerCollection\"></xref>."},{"content":"The array must have zero-based indexing.","pos":[212,252]}]}],"pos":[39080,39333],"yaml":true},{"content":"The zero-based index in <code>array</code> at which copying begins.","nodes":[{"pos":[0,67],"content":"The zero-based index in <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">array</ph><ept id=\"p1\">&lt;/code&gt;</ept> at which copying begins.","source":"The zero-based index in <code>array</code> at which copying begins."}],"pos":[39393,39461],"yaml":true},{"content":"Gets a value indicating whether access to the <xref href=\"System.Diagnostics.TraceListenerCollection\"></xref> is synchronized (thread safe).","nodes":[{"pos":[0,140],"content":"Gets a value indicating whether access to the <ph id=\"ph1\">&lt;xref href=\"System.Diagnostics.TraceListenerCollection\"&gt;&lt;/xref&gt;</ph> is synchronized (thread safe).","source":"Gets a value indicating whether access to the <xref href=\"System.Diagnostics.TraceListenerCollection\"></xref> is synchronized (thread safe)."}],"pos":[41012,41153],"yaml":true},{"content":"Always `true`.","nodes":[{"pos":[0,14],"content":"Always <ph id=\"ph1\">`true`</ph>.","source":"Always `true`."}],"pos":[41294,41309],"yaml":true},{"content":"Gets an object that can be used to synchronize access to the <xref href=\"System.Diagnostics.TraceListenerCollection\"></xref>.","nodes":[{"pos":[0,125],"content":"Gets an object that can be used to synchronize access to the <ph id=\"ph1\">&lt;xref href=\"System.Diagnostics.TraceListenerCollection\"&gt;&lt;/xref&gt;</ph>.","source":"Gets an object that can be used to synchronize access to the <xref href=\"System.Diagnostics.TraceListenerCollection\"></xref>."}],"pos":[42795,42921],"yaml":true},{"content":"The current <xref href=\"System.Diagnostics.TraceListenerCollection\"></xref> object.","nodes":[{"pos":[0,83],"content":"The current <ph id=\"ph1\">&lt;xref href=\"System.Diagnostics.TraceListenerCollection\"&gt;&lt;/xref&gt;</ph> object.","source":"The current <xref href=\"System.Diagnostics.TraceListenerCollection\"></xref> object."}],"pos":[43057,43141],"yaml":true},{"content":"Adds a trace listener to the <xref href=\"System.Diagnostics.TraceListenerCollection\"></xref>.","nodes":[{"pos":[0,93],"content":"Adds a trace listener to the <ph id=\"ph1\">&lt;xref href=\"System.Diagnostics.TraceListenerCollection\"&gt;&lt;/xref&gt;</ph>.","source":"Adds a trace listener to the <xref href=\"System.Diagnostics.TraceListenerCollection\"></xref>."}],"pos":[44622,44716],"yaml":true},{"content":"Use the <xref:System.Diagnostics.TraceListenerCollection.Add%2A> method to add a new trace listener to the collection.","nodes":[{"pos":[0,118],"content":"Use the <xref:System.Diagnostics.TraceListenerCollection.Add%2A> method to add a new trace listener to the collection.","nodes":[{"content":"Use the <ph id=\"ph1\">&lt;xref:System.Diagnostics.TraceListenerCollection.Add%2A&gt;</ph> method to add a new trace listener to the collection.","pos":[0,118],"source":"Use the <xref:System.Diagnostics.TraceListenerCollection.Add%2A> method to add a new trace listener to the collection."}]}],"pos":[44727,44846],"yaml":true,"extradata":"MT"},{"content":"The object to add to the <xref href=\"System.Diagnostics.TraceListenerCollection\"></xref>.","nodes":[{"pos":[0,89],"content":"The object to add to the <ph id=\"ph1\">&lt;xref href=\"System.Diagnostics.TraceListenerCollection\"&gt;&lt;/xref&gt;</ph>.","source":"The object to add to the <xref href=\"System.Diagnostics.TraceListenerCollection\"></xref>."}],"pos":[44976,45066],"yaml":true},{"content":"The position into which the new trace listener was inserted.","nodes":[{"pos":[0,60],"content":"The position into which the new trace listener was inserted.","nodes":[{"content":"The position into which the new trace listener was inserted.","pos":[0,60]}]}],"pos":[45122,45183],"yaml":true},{"content":"<code>value</code> is `null`.  \n  \n -or-  \n  \n <code>value</code> is not a <xref href=\"System.Diagnostics.TraceListener\"></xref>.","nodes":[{"pos":[0,29],"content":"<ph id=\"ph1\">&lt;code&gt;value&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>value</code> is `null`."},{"pos":[36,40],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[47,129],"content":"<ph id=\"ph1\">&lt;code&gt;value&lt;/code&gt;</ph> is not a <ph id=\"ph2\">&lt;xref href=\"System.Diagnostics.TraceListener\"&gt;&lt;/xref&gt;</ph>.","source":"<code>value</code> is not a <xref href=\"System.Diagnostics.TraceListener\"></xref>."}],"pos":[45376,45514],"yaml":true},{"content":"Determines whether the <xref href=\"System.Diagnostics.TraceListenerCollection\"></xref> contains a specific object.","nodes":[{"pos":[0,114],"content":"Determines whether the <ph id=\"ph1\">&lt;xref href=\"System.Diagnostics.TraceListenerCollection\"&gt;&lt;/xref&gt;</ph> contains a specific object.","source":"Determines whether the <xref href=\"System.Diagnostics.TraceListenerCollection\"></xref> contains a specific object."}],"pos":[46949,47064],"yaml":true},{"content":"Use the <xref:System.Diagnostics.TraceListenerCollection.Contains%2A> method of the <xref:System.Diagnostics.TraceListenerCollection> class to determine whether the collection contains a specific <xref:System.Diagnostics.TraceListener> object.","nodes":[{"pos":[0,243],"content":"Use the <xref:System.Diagnostics.TraceListenerCollection.Contains%2A> method of the <xref:System.Diagnostics.TraceListenerCollection> class to determine whether the collection contains a specific <xref:System.Diagnostics.TraceListener> object.","nodes":[{"content":"Use the <ph id=\"ph1\">&lt;xref:System.Diagnostics.TraceListenerCollection.Contains%2A&gt;</ph> method of the <ph id=\"ph2\">&lt;xref:System.Diagnostics.TraceListenerCollection&gt;</ph> class to determine whether the collection contains a specific <ph id=\"ph3\">&lt;xref:System.Diagnostics.TraceListener&gt;</ph> object.","pos":[0,243],"source":"Use the <xref:System.Diagnostics.TraceListenerCollection.Contains%2A> method of the <xref:System.Diagnostics.TraceListenerCollection> class to determine whether the collection contains a specific <xref:System.Diagnostics.TraceListener> object."}]}],"pos":[47075,47319],"yaml":true,"extradata":"MT"},{"content":"The object to locate in the <xref href=\"System.Diagnostics.TraceListenerCollection\"></xref>.","nodes":[{"pos":[0,92],"content":"The object to locate in the <ph id=\"ph1\">&lt;xref href=\"System.Diagnostics.TraceListenerCollection\"&gt;&lt;/xref&gt;</ph>.","source":"The object to locate in the <xref href=\"System.Diagnostics.TraceListenerCollection\"></xref>."}],"pos":[47455,47548],"yaml":true},{"content":"`true` if the <xref href=\"System.Object\"></xref> is found in the <xref href=\"System.Diagnostics.TraceListenerCollection\"></xref>; otherwise, `false`.","nodes":[{"pos":[0,149],"content":"<ph id=\"ph1\">`true`</ph> if the <ph id=\"ph2\">&lt;xref href=\"System.Object\"&gt;&lt;/xref&gt;</ph> is found in the <ph id=\"ph3\">&lt;xref href=\"System.Diagnostics.TraceListenerCollection\"&gt;&lt;/xref&gt;</ph>; otherwise, <ph id=\"ph4\">`false`</ph>.","source":"`true` if the <xref href=\"System.Object\"></xref> is found in the <xref href=\"System.Diagnostics.TraceListenerCollection\"></xref>; otherwise, `false`."}],"pos":[47606,47758],"yaml":true},{"content":"Determines the index of a specific object in the <xref href=\"System.Diagnostics.TraceListenerCollection\"></xref>.","nodes":[{"pos":[0,113],"content":"Determines the index of a specific object in the <ph id=\"ph1\">&lt;xref href=\"System.Diagnostics.TraceListenerCollection\"&gt;&lt;/xref&gt;</ph>.","source":"Determines the index of a specific object in the <xref href=\"System.Diagnostics.TraceListenerCollection\"></xref>."}],"pos":[49294,49408],"yaml":true},{"content":"Use the <xref:System.Diagnostics.TraceListenerCollection.IndexOf%2A> method of the <xref:System.Diagnostics.TraceListenerCollection> class to determine the index of a <xref:System.Diagnostics.TraceListener> object in the collection.","nodes":[{"pos":[0,232],"content":"Use the <xref:System.Diagnostics.TraceListenerCollection.IndexOf%2A> method of the <xref:System.Diagnostics.TraceListenerCollection> class to determine the index of a <xref:System.Diagnostics.TraceListener> object in the collection.","nodes":[{"content":"Use the <ph id=\"ph1\">&lt;xref:System.Diagnostics.TraceListenerCollection.IndexOf%2A&gt;</ph> method of the <ph id=\"ph2\">&lt;xref:System.Diagnostics.TraceListenerCollection&gt;</ph> class to determine the index of a <ph id=\"ph3\">&lt;xref:System.Diagnostics.TraceListener&gt;</ph> object in the collection.","pos":[0,232],"source":"Use the <xref:System.Diagnostics.TraceListenerCollection.IndexOf%2A> method of the <xref:System.Diagnostics.TraceListenerCollection> class to determine the index of a <xref:System.Diagnostics.TraceListener> object in the collection."}]}],"pos":[49419,49652],"yaml":true,"extradata":"MT"},{"content":"The object to locate in the <xref href=\"System.Diagnostics.TraceListenerCollection\"></xref>.","nodes":[{"pos":[0,92],"content":"The object to locate in the <ph id=\"ph1\">&lt;xref href=\"System.Diagnostics.TraceListenerCollection\"&gt;&lt;/xref&gt;</ph>.","source":"The object to locate in the <xref href=\"System.Diagnostics.TraceListenerCollection\"></xref>."}],"pos":[49786,49879],"yaml":true},{"content":"The index of <code>value</code> if found in the <xref href=\"System.Diagnostics.TraceListenerCollection\"></xref>; otherwise, -1.","nodes":[{"pos":[0,127],"content":"The index of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">value</ph><ept id=\"p1\">&lt;/code&gt;</ept> if found in the <ph id=\"ph2\">&lt;xref href=\"System.Diagnostics.TraceListenerCollection\"&gt;&lt;/xref&gt;</ph>; otherwise, -1.","source":"The index of <code>value</code> if found in the <xref href=\"System.Diagnostics.TraceListenerCollection\"></xref>; otherwise, -1."}],"pos":[49935,50063],"yaml":true},{"content":"Inserts a <xref href=\"System.Diagnostics.TraceListener\"></xref> object at the specified position in the <xref href=\"System.Diagnostics.TraceListenerCollection\"></xref>.","nodes":[{"pos":[0,168],"content":"Inserts a <ph id=\"ph1\">&lt;xref href=\"System.Diagnostics.TraceListener\"&gt;&lt;/xref&gt;</ph> object at the specified position in the <ph id=\"ph2\">&lt;xref href=\"System.Diagnostics.TraceListenerCollection\"&gt;&lt;/xref&gt;</ph>.","source":"Inserts a <xref href=\"System.Diagnostics.TraceListener\"></xref> object at the specified position in the <xref href=\"System.Diagnostics.TraceListenerCollection\"></xref>."}],"pos":[51652,51821],"yaml":true},{"content":"Use the <xref:System.Diagnostics.TraceListenerCollection.Insert%2A> method of the <xref:System.Diagnostics.TraceListenerCollection> class to insert a <xref:System.Diagnostics.TraceListener> object into the collection.","nodes":[{"pos":[0,217],"content":"Use the <xref:System.Diagnostics.TraceListenerCollection.Insert%2A> method of the <xref:System.Diagnostics.TraceListenerCollection> class to insert a <xref:System.Diagnostics.TraceListener> object into the collection.","nodes":[{"content":"Use the <ph id=\"ph1\">&lt;xref:System.Diagnostics.TraceListenerCollection.Insert%2A&gt;</ph> method of the <ph id=\"ph2\">&lt;xref:System.Diagnostics.TraceListenerCollection&gt;</ph> class to insert a <ph id=\"ph3\">&lt;xref:System.Diagnostics.TraceListener&gt;</ph> object into the collection.","pos":[0,217],"source":"Use the <xref:System.Diagnostics.TraceListenerCollection.Insert%2A> method of the <xref:System.Diagnostics.TraceListenerCollection> class to insert a <xref:System.Diagnostics.TraceListener> object into the collection."}]}],"pos":[51832,52050],"yaml":true,"extradata":"MT"},{"content":"The zero-based index at which <code>value</code> should be inserted.","nodes":[{"pos":[0,68],"content":"The zero-based index at which <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">value</ph><ept id=\"p1\">&lt;/code&gt;</ept> should be inserted.","source":"The zero-based index at which <code>value</code> should be inserted."}],"pos":[52194,52263],"yaml":true},{"content":"The <xref href=\"System.Diagnostics.TraceListener\"></xref> object to insert into the <xref href=\"System.Diagnostics.TraceListenerCollection\"></xref>.","nodes":[{"pos":[0,148],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Diagnostics.TraceListener\"&gt;&lt;/xref&gt;</ph> object to insert into the <ph id=\"ph2\">&lt;xref href=\"System.Diagnostics.TraceListenerCollection\"&gt;&lt;/xref&gt;</ph>.","source":"The <xref href=\"System.Diagnostics.TraceListener\"></xref> object to insert into the <xref href=\"System.Diagnostics.TraceListenerCollection\"></xref>."}],"pos":[52324,52473],"yaml":true},{"content":"<code>value</code> is not a <xref href=\"System.Diagnostics.TraceListener\"></xref> object.","nodes":[{"pos":[0,89],"content":"<ph id=\"ph1\">&lt;code&gt;value&lt;/code&gt;</ph> is not a <ph id=\"ph2\">&lt;xref href=\"System.Diagnostics.TraceListener\"&gt;&lt;/xref&gt;</ph> object.","source":"<code>value</code> is not a <xref href=\"System.Diagnostics.TraceListener\"></xref> object."}],"pos":[52669,52759],"yaml":true},{"content":"Gets a value indicating whether the <xref href=\"System.Diagnostics.TraceListenerCollection\"></xref> has a fixed size.","nodes":[{"pos":[0,117],"content":"Gets a value indicating whether the <ph id=\"ph1\">&lt;xref href=\"System.Diagnostics.TraceListenerCollection\"&gt;&lt;/xref&gt;</ph> has a fixed size.","source":"Gets a value indicating whether the <xref href=\"System.Diagnostics.TraceListenerCollection\"></xref> has a fixed size."}],"pos":[54145,54263],"yaml":true},{"content":"Always `false`.","nodes":[{"pos":[0,15],"content":"Always <ph id=\"ph1\">`false`</ph>.","source":"Always `false`."}],"pos":[54395,54411],"yaml":true},{"content":"Gets a value indicating whether the <xref href=\"System.Diagnostics.TraceListenerCollection\"></xref> is read-only","nodes":[{"pos":[0,112],"content":"Gets a value indicating whether the <ph id=\"ph1\">&lt;xref href=\"System.Diagnostics.TraceListenerCollection\"&gt;&lt;/xref&gt;</ph> is read-only","source":"Gets a value indicating whether the <xref href=\"System.Diagnostics.TraceListenerCollection\"></xref> is read-only"}],"pos":[55864,55977],"yaml":true},{"content":"Always `false`.","nodes":[{"pos":[0,15],"content":"Always <ph id=\"ph1\">`false`</ph>.","source":"Always `false`."}],"pos":[56108,56124],"yaml":true},{"content":"Gets or sets the <xref href=\"System.Diagnostics.TraceListener\"></xref> at the specified index in the <xref href=\"System.Diagnostics.TraceListenerCollection\"></xref>.","nodes":[{"pos":[0,165],"content":"Gets or sets the <ph id=\"ph1\">&lt;xref href=\"System.Diagnostics.TraceListener\"&gt;&lt;/xref&gt;</ph> at the specified index in the <ph id=\"ph2\">&lt;xref href=\"System.Diagnostics.TraceListenerCollection\"&gt;&lt;/xref&gt;</ph>.","source":"Gets or sets the <xref href=\"System.Diagnostics.TraceListener\"></xref> at the specified index in the <xref href=\"System.Diagnostics.TraceListenerCollection\"></xref>."}],"pos":[57603,57769],"yaml":true},{"content":"Use the <xref:System.Diagnostics.TraceListenerCollection.Item%2A> property or the indexer of the <xref:System.Diagnostics.TraceListenerCollection> class to get or set a <xref:System.Diagnostics.TraceListener> in the collection.","nodes":[{"pos":[0,227],"content":"Use the <xref:System.Diagnostics.TraceListenerCollection.Item%2A> property or the indexer of the <xref:System.Diagnostics.TraceListenerCollection> class to get or set a <xref:System.Diagnostics.TraceListener> in the collection.","nodes":[{"content":"Use the <ph id=\"ph1\">&lt;xref:System.Diagnostics.TraceListenerCollection.Item%2A&gt;</ph> property or the indexer of the <ph id=\"ph2\">&lt;xref:System.Diagnostics.TraceListenerCollection&gt;</ph> class to get or set a <ph id=\"ph3\">&lt;xref:System.Diagnostics.TraceListener&gt;</ph> in the collection.","pos":[0,227],"source":"Use the <xref:System.Diagnostics.TraceListenerCollection.Item%2A> property or the indexer of the <xref:System.Diagnostics.TraceListenerCollection> class to get or set a <xref:System.Diagnostics.TraceListener> in the collection."}]}],"pos":[57780,58008],"yaml":true,"extradata":"MT"},{"content":"The zero-based index of the <code>value</code> to get.","nodes":[{"pos":[0,54],"content":"The zero-based index of the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">value</ph><ept id=\"p1\">&lt;/code&gt;</ept> to get.","source":"The zero-based index of the <code>value</code> to get."}],"pos":[58169,58224],"yaml":true},{"content":"The <xref href=\"System.Diagnostics.TraceListener\"></xref> at the specified index.","nodes":[{"pos":[0,81],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Diagnostics.TraceListener\"&gt;&lt;/xref&gt;</ph> at the specified index.","source":"The <xref href=\"System.Diagnostics.TraceListener\"></xref> at the specified index."}],"pos":[58281,58363],"yaml":true},{"content":"Removes an object from the <xref href=\"System.Diagnostics.TraceListenerCollection\"></xref>.","nodes":[{"pos":[0,91],"content":"Removes an object from the <ph id=\"ph1\">&lt;xref href=\"System.Diagnostics.TraceListenerCollection\"&gt;&lt;/xref&gt;</ph>.","source":"Removes an object from the <xref href=\"System.Diagnostics.TraceListenerCollection\"></xref>."}],"pos":[59852,59944],"yaml":true},{"content":"Use the <xref:System.Diagnostics.TraceListenerCollection.Remove%2A> method of the <xref:System.Diagnostics.TraceListenerCollection> class to remove a <xref:System.Diagnostics.TraceListener> from the collection.","nodes":[{"pos":[0,210],"content":"Use the <xref:System.Diagnostics.TraceListenerCollection.Remove%2A> method of the <xref:System.Diagnostics.TraceListenerCollection> class to remove a <xref:System.Diagnostics.TraceListener> from the collection.","nodes":[{"content":"Use the <ph id=\"ph1\">&lt;xref:System.Diagnostics.TraceListenerCollection.Remove%2A&gt;</ph> method of the <ph id=\"ph2\">&lt;xref:System.Diagnostics.TraceListenerCollection&gt;</ph> class to remove a <ph id=\"ph3\">&lt;xref:System.Diagnostics.TraceListener&gt;</ph> from the collection.","pos":[0,210],"source":"Use the <xref:System.Diagnostics.TraceListenerCollection.Remove%2A> method of the <xref:System.Diagnostics.TraceListenerCollection> class to remove a <xref:System.Diagnostics.TraceListener> from the collection."}]}],"pos":[59955,60166],"yaml":true,"extradata":"MT"},{"content":"The object to remove from the <xref href=\"System.Diagnostics.TraceListenerCollection\"></xref>.","nodes":[{"pos":[0,94],"content":"The object to remove from the <ph id=\"ph1\">&lt;xref href=\"System.Diagnostics.TraceListenerCollection\"&gt;&lt;/xref&gt;</ph>.","source":"The object to remove from the <xref href=\"System.Diagnostics.TraceListenerCollection\"></xref>."}],"pos":[60300,60395],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Diagnostics.TraceListenerCollection\n  commentId: T:System.Diagnostics.TraceListenerCollection\n  id: TraceListenerCollection\n  children:\n  - System.Diagnostics.TraceListenerCollection.Add(System.Diagnostics.TraceListener)\n  - System.Diagnostics.TraceListenerCollection.AddRange(System.Diagnostics.TraceListener[])\n  - System.Diagnostics.TraceListenerCollection.AddRange(System.Diagnostics.TraceListenerCollection)\n  - System.Diagnostics.TraceListenerCollection.Clear\n  - System.Diagnostics.TraceListenerCollection.Contains(System.Diagnostics.TraceListener)\n  - System.Diagnostics.TraceListenerCollection.CopyTo(System.Diagnostics.TraceListener[],System.Int32)\n  - System.Diagnostics.TraceListenerCollection.Count\n  - System.Diagnostics.TraceListenerCollection.GetEnumerator\n  - System.Diagnostics.TraceListenerCollection.IndexOf(System.Diagnostics.TraceListener)\n  - System.Diagnostics.TraceListenerCollection.Insert(System.Int32,System.Diagnostics.TraceListener)\n  - System.Diagnostics.TraceListenerCollection.Item(System.Int32)\n  - System.Diagnostics.TraceListenerCollection.Item(System.String)\n  - System.Diagnostics.TraceListenerCollection.Remove(System.String)\n  - System.Diagnostics.TraceListenerCollection.Remove(System.Diagnostics.TraceListener)\n  - System.Diagnostics.TraceListenerCollection.RemoveAt(System.Int32)\n  - System.Diagnostics.TraceListenerCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)\n  - System.Diagnostics.TraceListenerCollection.System#Collections#ICollection#IsSynchronized\n  - System.Diagnostics.TraceListenerCollection.System#Collections#ICollection#SyncRoot\n  - System.Diagnostics.TraceListenerCollection.System#Collections#IList#Add(System.Object)\n  - System.Diagnostics.TraceListenerCollection.System#Collections#IList#Contains(System.Object)\n  - System.Diagnostics.TraceListenerCollection.System#Collections#IList#IndexOf(System.Object)\n  - System.Diagnostics.TraceListenerCollection.System#Collections#IList#Insert(System.Int32,System.Object)\n  - System.Diagnostics.TraceListenerCollection.System#Collections#IList#IsFixedSize\n  - System.Diagnostics.TraceListenerCollection.System#Collections#IList#IsReadOnly\n  - System.Diagnostics.TraceListenerCollection.System#Collections#IList#Item(System.Int32)\n  - System.Diagnostics.TraceListenerCollection.System#Collections#IList#Remove(System.Object)\n  langs:\n  - csharp\n  name: TraceListenerCollection\n  nameWithType: TraceListenerCollection\n  fullName: System.Diagnostics.TraceListenerCollection\n  type: Class\n  assemblies:\n  - System.Diagnostics.TraceSource\n  - System\n  - netstandard\n  namespace: System.Diagnostics\n  summary: Provides a thread-safe list of <xref href=\"System.Diagnostics.TraceListener\"></xref> objects.\n  remarks: \"The <xref:System.Diagnostics.TraceListenerCollection> list is used to specify the output listeners for the <xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=fullName> and the <xref:System.Diagnostics.Debug.Listeners%2A?displayProperty=fullName> collections. You cannot create an instance of this class.  \\n  \\n This list is thread-safe, however the methods used to access the list and the enumerator do not take synchronization locks. Instead, the collection is copied, the copy is modified, and a reference is set to the copy of the collection. Methods like <xref:System.Diagnostics.TraceListenerCollection.Add%2A>, <xref:System.Diagnostics.TraceListenerCollection.Remove%2A>, and <xref:System.Diagnostics.TraceListenerCollection.Clear%2A> modify the elements in the collection.  \\n  \\n The <xref:System.Diagnostics.TraceListenerCollection> class provides the <xref:System.Diagnostics.TraceListenerCollection.Count%2A> property for information about the list. It also provides the following methods: <xref:System.Diagnostics.TraceListenerCollection.Contains%2A>, <xref:System.Diagnostics.TraceListenerCollection.GetEnumerator%2A>, <xref:System.Diagnostics.TraceListenerCollection.IndexOf%2A>.  \\n  \\n This class also provides the following methods to modify the list: <xref:System.Diagnostics.TraceListenerCollection.Add%2A>, <xref:System.Diagnostics.TraceListenerCollection.Clear%2A>, <xref:System.Diagnostics.TraceListenerCollection.Insert%2A>, and <xref:System.Diagnostics.TraceListenerCollection.Remove%2A>. The <xref:System.Diagnostics.TraceListenerCollection.CopyTo%2A> method copies a part of the list to an array. The <xref:System.Diagnostics.TraceListenerCollection.RemoveAt%2A> method deletes the list member at a specified index number.\"\n  example:\n  - \"The following example creates a <xref:System.Diagnostics.TextWriterTraceListener> that writes to the console screen. The code then adds the new listener to the <xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=fullName>.  \\n  \\n [!code-cpp[Classic Trace.Listeners Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Trace.Listeners Example/CPP/source.cpp#1)]\\n [!code-csharp[Classic Trace.Listeners Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Trace.Listeners Example/CS/source.cs#1)]\\n [!code-vb[Classic Trace.Listeners Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Trace.Listeners Example/VB/source.vb#1)]\"\n  syntax:\n    content: 'public class TraceListenerCollection : System.Collections.IList'\n  inheritance:\n  - System.Object\n  implements:\n  - System.Collections.IList\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  extensionMethods:\n  - System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)\n  - System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)\n  - System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)\n  - System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/TraceListenerCollection.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Diagnostics.TraceListenerCollection.Add(System.Diagnostics.TraceListener)\n  commentId: M:System.Diagnostics.TraceListenerCollection.Add(System.Diagnostics.TraceListener)\n  id: Add(System.Diagnostics.TraceListener)\n  parent: System.Diagnostics.TraceListenerCollection\n  langs:\n  - csharp\n  name: Add(TraceListener)\n  nameWithType: TraceListenerCollection.Add(TraceListener)\n  fullName: TraceListenerCollection.Add(TraceListener)\n  type: Method\n  assemblies:\n  - System.Diagnostics.TraceSource\n  - System\n  - netstandard\n  namespace: System.Diagnostics\n  summary: Adds a <xref href=\"System.Diagnostics.TraceListener\"></xref> to the list.\n  remarks: ''\n  example:\n  - \"The following example creates a <xref:System.Diagnostics.TextWriterTraceListener> that outputs to the console screen. The code then adds the new listener to the <xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=fullName>.  \\n  \\n [!code-cpp[Classic TraceListenerCollection.Add Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic TraceListenerCollection.Add Example/CPP/source.cpp#1)]\\n [!code-csharp[Classic TraceListenerCollection.Add Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic TraceListenerCollection.Add Example/CS/source.cs#1)]\\n [!code-vb[Classic TraceListenerCollection.Add Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic TraceListenerCollection.Add Example/VB/source.vb#1)]\"\n  syntax:\n    content: public int Add (System.Diagnostics.TraceListener listener);\n    parameters:\n    - id: listener\n      type: System.Diagnostics.TraceListener\n      description: A <xref href=\"System.Diagnostics.TraceListener\"></xref> to add to the list.\n    return:\n      type: System.Int32\n      description: The position at which the new listener was inserted.\n  overload: System.Diagnostics.TraceListenerCollection.Add*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/TraceListenerCollection.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Diagnostics.TraceListenerCollection.AddRange(System.Diagnostics.TraceListener[])\n  commentId: M:System.Diagnostics.TraceListenerCollection.AddRange(System.Diagnostics.TraceListener[])\n  id: AddRange(System.Diagnostics.TraceListener[])\n  parent: System.Diagnostics.TraceListenerCollection\n  langs:\n  - csharp\n  name: AddRange(TraceListener[])\n  nameWithType: TraceListenerCollection.AddRange(TraceListener[])\n  fullName: TraceListenerCollection.AddRange(TraceListener[])\n  type: Method\n  assemblies:\n  - System.Diagnostics.TraceSource\n  - System\n  - netstandard\n  namespace: System.Diagnostics\n  summary: Adds an array of <xref href=\"System.Diagnostics.TraceListener\"></xref> objects to the list.\n  syntax:\n    content: public void AddRange (System.Diagnostics.TraceListener[] value);\n    parameters:\n    - id: value\n      type: System.Diagnostics.TraceListener[]\n      description: An array of <xref href=\"System.Diagnostics.TraceListener\"></xref> objects to add to the list.\n  overload: System.Diagnostics.TraceListenerCollection.AddRange*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>value</code> is `null`.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/TraceListenerCollection.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Diagnostics.TraceListenerCollection.AddRange(System.Diagnostics.TraceListenerCollection)\n  commentId: M:System.Diagnostics.TraceListenerCollection.AddRange(System.Diagnostics.TraceListenerCollection)\n  id: AddRange(System.Diagnostics.TraceListenerCollection)\n  parent: System.Diagnostics.TraceListenerCollection\n  langs:\n  - csharp\n  name: AddRange(TraceListenerCollection)\n  nameWithType: TraceListenerCollection.AddRange(TraceListenerCollection)\n  fullName: TraceListenerCollection.AddRange(TraceListenerCollection)\n  type: Method\n  assemblies:\n  - System.Diagnostics.TraceSource\n  - System\n  - netstandard\n  namespace: System.Diagnostics\n  summary: Adds the contents of another <xref href=\"System.Diagnostics.TraceListenerCollection\"></xref> to the list.\n  syntax:\n    content: public void AddRange (System.Diagnostics.TraceListenerCollection value);\n    parameters:\n    - id: value\n      type: System.Diagnostics.TraceListenerCollection\n      description: Another <xref href=\"System.Diagnostics.TraceListenerCollection\"></xref> whose contents are added to the list.\n  overload: System.Diagnostics.TraceListenerCollection.AddRange*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>value</code> is `null`.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/TraceListenerCollection.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Diagnostics.TraceListenerCollection.Clear\n  commentId: M:System.Diagnostics.TraceListenerCollection.Clear\n  id: Clear\n  parent: System.Diagnostics.TraceListenerCollection\n  langs:\n  - csharp\n  name: Clear()\n  nameWithType: TraceListenerCollection.Clear()\n  fullName: TraceListenerCollection.Clear()\n  type: Method\n  assemblies:\n  - System.Diagnostics.TraceSource\n  - System\n  - netstandard\n  namespace: System.Diagnostics\n  summary: Clears all the listeners from the list.\n  syntax:\n    content: public void Clear ();\n    parameters: []\n  overload: System.Diagnostics.TraceListenerCollection.Clear*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/TraceListenerCollection.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Diagnostics.TraceListenerCollection.Contains(System.Diagnostics.TraceListener)\n  commentId: M:System.Diagnostics.TraceListenerCollection.Contains(System.Diagnostics.TraceListener)\n  id: Contains(System.Diagnostics.TraceListener)\n  parent: System.Diagnostics.TraceListenerCollection\n  langs:\n  - csharp\n  name: Contains(TraceListener)\n  nameWithType: TraceListenerCollection.Contains(TraceListener)\n  fullName: TraceListenerCollection.Contains(TraceListener)\n  type: Method\n  assemblies:\n  - System.Diagnostics.TraceSource\n  - System\n  - netstandard\n  namespace: System.Diagnostics\n  summary: Checks whether the list contains the specified listener.\n  remarks: The <xref:System.Diagnostics.TraceListenerCollection.Contains%2A> method can confirm the existence of a <xref:System.Diagnostics.TraceListener> before you perform further operations.\n  syntax:\n    content: public bool Contains (System.Diagnostics.TraceListener listener);\n    parameters:\n    - id: listener\n      type: System.Diagnostics.TraceListener\n      description: A <xref href=\"System.Diagnostics.TraceListener\"></xref> to find in the list.\n    return:\n      type: System.Boolean\n      description: '`true` if the listener is in the list; otherwise, `false`.'\n  overload: System.Diagnostics.TraceListenerCollection.Contains*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/TraceListenerCollection.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Diagnostics.TraceListenerCollection.CopyTo(System.Diagnostics.TraceListener[],System.Int32)\n  commentId: M:System.Diagnostics.TraceListenerCollection.CopyTo(System.Diagnostics.TraceListener[],System.Int32)\n  id: CopyTo(System.Diagnostics.TraceListener[],System.Int32)\n  parent: System.Diagnostics.TraceListenerCollection\n  langs:\n  - csharp\n  name: CopyTo(TraceListener[], Int32)\n  nameWithType: TraceListenerCollection.CopyTo(TraceListener[], Int32)\n  fullName: TraceListenerCollection.CopyTo(TraceListener[], Int32)\n  type: Method\n  assemblies:\n  - System.Diagnostics.TraceSource\n  - System\n  - netstandard\n  namespace: System.Diagnostics\n  summary: Copies a section of the current <xref href=\"System.Diagnostics.TraceListenerCollection\"></xref> list to the specified array at the specified index.\n  syntax:\n    content: public void CopyTo (System.Diagnostics.TraceListener[] listeners, int index);\n    parameters:\n    - id: listeners\n      type: System.Diagnostics.TraceListener[]\n      description: An array of type <xref href=\"System.Array\"></xref> to copy the elements into.\n    - id: index\n      type: System.Int32\n      description: The starting index number in the current list to copy from.\n  overload: System.Diagnostics.TraceListenerCollection.CopyTo*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/TraceListenerCollection.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Diagnostics.TraceListenerCollection.Count\n  commentId: P:System.Diagnostics.TraceListenerCollection.Count\n  id: Count\n  parent: System.Diagnostics.TraceListenerCollection\n  langs:\n  - csharp\n  name: Count\n  nameWithType: TraceListenerCollection.Count\n  fullName: TraceListenerCollection.Count\n  type: Property\n  assemblies:\n  - System.Diagnostics.TraceSource\n  - System\n  - netstandard\n  namespace: System.Diagnostics\n  summary: Gets the number of listeners in the list.\n  syntax:\n    content: public int Count { get; }\n    return:\n      type: System.Int32\n      description: The number of listeners in the list.\n  overload: System.Diagnostics.TraceListenerCollection.Count*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/TraceListenerCollection.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Diagnostics.TraceListenerCollection.GetEnumerator\n  commentId: M:System.Diagnostics.TraceListenerCollection.GetEnumerator\n  id: GetEnumerator\n  parent: System.Diagnostics.TraceListenerCollection\n  langs:\n  - csharp\n  name: GetEnumerator()\n  nameWithType: TraceListenerCollection.GetEnumerator()\n  fullName: TraceListenerCollection.GetEnumerator()\n  type: Method\n  assemblies:\n  - System.Diagnostics.TraceSource\n  - System\n  - netstandard\n  namespace: System.Diagnostics\n  summary: Gets an enumerator for this list.\n  syntax:\n    content: public System.Collections.IEnumerator GetEnumerator ();\n    parameters: []\n    return:\n      type: System.Collections.IEnumerator\n      description: An enumerator of type <xref href=\"System.Collections.IEnumerator\"></xref>.\n  overload: System.Diagnostics.TraceListenerCollection.GetEnumerator*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/TraceListenerCollection.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Diagnostics.TraceListenerCollection.IndexOf(System.Diagnostics.TraceListener)\n  commentId: M:System.Diagnostics.TraceListenerCollection.IndexOf(System.Diagnostics.TraceListener)\n  id: IndexOf(System.Diagnostics.TraceListener)\n  parent: System.Diagnostics.TraceListenerCollection\n  langs:\n  - csharp\n  name: IndexOf(TraceListener)\n  nameWithType: TraceListenerCollection.IndexOf(TraceListener)\n  fullName: TraceListenerCollection.IndexOf(TraceListener)\n  type: Method\n  assemblies:\n  - System.Diagnostics.TraceSource\n  - System\n  - netstandard\n  namespace: System.Diagnostics\n  summary: Gets the index of the specified listener.\n  syntax:\n    content: public int IndexOf (System.Diagnostics.TraceListener listener);\n    parameters:\n    - id: listener\n      type: System.Diagnostics.TraceListener\n      description: A <xref href=\"System.Diagnostics.TraceListener\"></xref> to find in the list.\n    return:\n      type: System.Int32\n      description: The index of the listener, if it can be found in the list; otherwise, -1.\n  overload: System.Diagnostics.TraceListenerCollection.IndexOf*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/TraceListenerCollection.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Diagnostics.TraceListenerCollection.Insert(System.Int32,System.Diagnostics.TraceListener)\n  commentId: M:System.Diagnostics.TraceListenerCollection.Insert(System.Int32,System.Diagnostics.TraceListener)\n  id: Insert(System.Int32,System.Diagnostics.TraceListener)\n  parent: System.Diagnostics.TraceListenerCollection\n  langs:\n  - csharp\n  name: Insert(Int32, TraceListener)\n  nameWithType: TraceListenerCollection.Insert(Int32, TraceListener)\n  fullName: TraceListenerCollection.Insert(Int32, TraceListener)\n  type: Method\n  assemblies:\n  - System.Diagnostics.TraceSource\n  - System\n  - netstandard\n  namespace: System.Diagnostics\n  summary: Inserts the listener at the specified index.\n  remarks: \"If the index equals the number of items in the list, then the listener is appended to the end of the list.  \\n  \\n The index is zero-based. Therefore, if you want to insert the listener into the third position, you must call `myTraceListenerColl.Insert(2, myNewListener)`.\"\n  syntax:\n    content: public void Insert (int index, System.Diagnostics.TraceListener listener);\n    parameters:\n    - id: index\n      type: System.Int32\n      description: The position in the list to insert the new <xref href=\"System.Diagnostics.TraceListener\"></xref>.\n    - id: listener\n      type: System.Diagnostics.TraceListener\n      description: A <xref href=\"System.Diagnostics.TraceListener\"></xref> to insert in the list.\n  overload: System.Diagnostics.TraceListenerCollection.Insert*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: The <code>index</code> is not a valid index in the list.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>listener</code> is `null`.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/TraceListenerCollection.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Diagnostics.TraceListenerCollection.Item(System.Int32)\n  commentId: P:System.Diagnostics.TraceListenerCollection.Item(System.Int32)\n  id: Item(System.Int32)\n  parent: System.Diagnostics.TraceListenerCollection\n  langs:\n  - csharp\n  name: Item(Int32)\n  nameWithType: TraceListenerCollection.Item(Int32)\n  fullName: TraceListenerCollection.Item(Int32)\n  type: Property\n  assemblies:\n  - System.Diagnostics.TraceSource\n  - System\n  - netstandard\n  namespace: System.Diagnostics\n  summary: Gets or sets the <xref href=\"System.Diagnostics.TraceListener\"></xref> at the specified index.\n  remarks: The index is zero-based. Therefore, you must subtract one from the numerical position of a particular <xref:System.Diagnostics.TraceListener> to access that <xref:System.Diagnostics.TraceListener>. For example, to get the third <xref:System.Diagnostics.TraceListener>, you need to specify `myTraceListenerColl[2]`.\n  syntax:\n    content: public System.Diagnostics.TraceListener this[int i] { get; set; }\n    parameters:\n    - id: i\n      type: System.Int32\n      description: The zero-based index of the <xref href=\"System.Diagnostics.TraceListener\"></xref> to get from the list.\n    return:\n      type: System.Diagnostics.TraceListener\n      description: A <xref href=\"System.Diagnostics.TraceListener\"></xref> with the specified index.\n  overload: System.Diagnostics.TraceListenerCollection.Item*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The value is `null`.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/TraceListenerCollection.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Diagnostics.TraceListenerCollection.Item(System.String)\n  commentId: P:System.Diagnostics.TraceListenerCollection.Item(System.String)\n  id: Item(System.String)\n  parent: System.Diagnostics.TraceListenerCollection\n  langs:\n  - csharp\n  name: Item(String)\n  nameWithType: TraceListenerCollection.Item(String)\n  fullName: TraceListenerCollection.Item(String)\n  type: Property\n  assemblies:\n  - System.Diagnostics.TraceSource\n  - System\n  - netstandard\n  namespace: System.Diagnostics\n  summary: Gets the first <xref href=\"System.Diagnostics.TraceListener\"></xref> in the list with the specified name.\n  remarks: The <xref:System.Diagnostics.TraceListenerCollection.Item%2A> property is case-sensitive when searching for names. That is, if two listeners exist with the names \"Lname\" and \"lname\", <xref:System.Diagnostics.TraceListenerCollection.Item%2A> property will find only the <xref:System.Diagnostics.TraceListener> with the <xref:System.Diagnostics.TraceListener.Name%2A> that you specify, not both.\n  syntax:\n    content: public System.Diagnostics.TraceListener this[string name] { get; }\n    parameters:\n    - id: name\n      type: System.String\n      description: The name of the <xref href=\"System.Diagnostics.TraceListener\"></xref> to get from the list.\n    return:\n      type: System.Diagnostics.TraceListener\n      description: The first <xref href=\"System.Diagnostics.TraceListener\"></xref> in the list with the given <xref href=\"System.Diagnostics.TraceListener.Name\"></xref>. This item returns `null` if no <xref href=\"System.Diagnostics.TraceListener\"></xref> with the given name can be found.\n  overload: System.Diagnostics.TraceListenerCollection.Item*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/TraceListenerCollection.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Diagnostics.TraceListenerCollection.Remove(System.String)\n  commentId: M:System.Diagnostics.TraceListenerCollection.Remove(System.String)\n  id: Remove(System.String)\n  parent: System.Diagnostics.TraceListenerCollection\n  langs:\n  - csharp\n  name: Remove(String)\n  nameWithType: TraceListenerCollection.Remove(String)\n  fullName: TraceListenerCollection.Remove(String)\n  type: Method\n  assemblies:\n  - System.Diagnostics.TraceSource\n  - System\n  - netstandard\n  namespace: System.Diagnostics\n  summary: Removes from the collection the first <xref href=\"System.Diagnostics.TraceListener\"></xref> with the specified name.\n  remarks: The `name` parameter is case-sensitive. That is, if two listeners exist with the names \"Rname\" and \"rname\", the <xref:System.Diagnostics.TraceListenerCollection.Remove%2A> method will find the specific listener you name.\n  syntax:\n    content: public void Remove (string name);\n    parameters:\n    - id: name\n      type: System.String\n      description: The name of the <xref href=\"System.Diagnostics.TraceListener\"></xref> to remove from the list.\n  overload: System.Diagnostics.TraceListenerCollection.Remove*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/TraceListenerCollection.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Diagnostics.TraceListenerCollection.Remove(System.Diagnostics.TraceListener)\n  commentId: M:System.Diagnostics.TraceListenerCollection.Remove(System.Diagnostics.TraceListener)\n  id: Remove(System.Diagnostics.TraceListener)\n  parent: System.Diagnostics.TraceListenerCollection\n  langs:\n  - csharp\n  name: Remove(TraceListener)\n  nameWithType: TraceListenerCollection.Remove(TraceListener)\n  fullName: TraceListenerCollection.Remove(TraceListener)\n  type: Method\n  assemblies:\n  - System.Diagnostics.TraceSource\n  - System\n  - netstandard\n  namespace: System.Diagnostics\n  summary: Removes from the collection the specified <xref href=\"System.Diagnostics.TraceListener\"></xref>.\n  syntax:\n    content: public void Remove (System.Diagnostics.TraceListener listener);\n    parameters:\n    - id: listener\n      type: System.Diagnostics.TraceListener\n      description: A <xref href=\"System.Diagnostics.TraceListener\"></xref> to remove from the list.\n  overload: System.Diagnostics.TraceListenerCollection.Remove*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/TraceListenerCollection.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Diagnostics.TraceListenerCollection.RemoveAt(System.Int32)\n  commentId: M:System.Diagnostics.TraceListenerCollection.RemoveAt(System.Int32)\n  id: RemoveAt(System.Int32)\n  parent: System.Diagnostics.TraceListenerCollection\n  langs:\n  - csharp\n  name: RemoveAt(Int32)\n  nameWithType: TraceListenerCollection.RemoveAt(Int32)\n  fullName: TraceListenerCollection.RemoveAt(Int32)\n  type: Method\n  assemblies:\n  - System.Diagnostics.TraceSource\n  - System\n  - netstandard\n  namespace: System.Diagnostics\n  summary: Removes from the collection the <xref href=\"System.Diagnostics.TraceListener\"></xref> at the specified index.\n  remarks: The index is zero-based. Therefore, you must subtract one from the numerical position of a particular <xref:System.Diagnostics.TraceListener> to delete that <xref:System.Diagnostics.TraceListener>. For example, to remove the third <xref:System.Diagnostics.TraceListener>, you need to specify `myTraceListenerColl.RemoveAt(2)`.\n  syntax:\n    content: public void RemoveAt (int index);\n    parameters:\n    - id: index\n      type: System.Int32\n      description: The zero-based index of the <xref href=\"System.Diagnostics.TraceListener\"></xref> to remove from the list.\n  overload: System.Diagnostics.TraceListenerCollection.RemoveAt*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: The <code>index</code> is not a valid index in the list.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/TraceListenerCollection.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Diagnostics.TraceListenerCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)\n  commentId: M:System.Diagnostics.TraceListenerCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)\n  id: System#Collections#ICollection#CopyTo(System.Array,System.Int32)\n  isEii: true\n  parent: System.Diagnostics.TraceListenerCollection\n  langs:\n  - csharp\n  name: ICollection.CopyTo(Array, Int32)\n  nameWithType: TraceListenerCollection.ICollection.CopyTo(Array, Int32)\n  fullName: TraceListenerCollection.ICollection.CopyTo(Array, Int32)\n  type: Method\n  assemblies:\n  - System.Diagnostics.TraceSource\n  - System\n  - netstandard\n  namespace: System.Diagnostics\n  summary: Copies a section of the current <xref href=\"System.Diagnostics.TraceListenerCollection\"></xref> to the specified array of <xref href=\"System.Diagnostics.TraceListener\"></xref> objects.\n  remarks: Use the <xref:System.Diagnostics.TraceListenerCollection.CopyTo%2A> method of the <xref:System.Diagnostics.TraceListenerCollection> class to copy all or part of the collection to an array.\n  syntax:\n    content: void ICollection.CopyTo (Array array, int index);\n    parameters:\n    - id: array\n      type: System.Array\n      description: The one-dimensional array of <xref href=\"System.Diagnostics.TraceListener\"></xref> objects that is the destination of the elements copied from the <xref href=\"System.Diagnostics.TraceListenerCollection\"></xref>. The array must have zero-based indexing.\n    - id: index\n      type: System.Int32\n      description: The zero-based index in <code>array</code> at which copying begins.\n  overload: System.Diagnostics.TraceListenerCollection.System#Collections#ICollection#CopyTo*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/TraceListenerCollection.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Diagnostics.TraceListenerCollection.System#Collections#ICollection#IsSynchronized\n  commentId: P:System.Diagnostics.TraceListenerCollection.System#Collections#ICollection#IsSynchronized\n  id: System#Collections#ICollection#IsSynchronized\n  isEii: true\n  parent: System.Diagnostics.TraceListenerCollection\n  langs:\n  - csharp\n  name: ICollection.IsSynchronized\n  nameWithType: TraceListenerCollection.ICollection.IsSynchronized\n  fullName: TraceListenerCollection.ICollection.IsSynchronized\n  type: Property\n  assemblies:\n  - System.Diagnostics.TraceSource\n  - System\n  - netstandard\n  namespace: System.Diagnostics\n  summary: Gets a value indicating whether access to the <xref href=\"System.Diagnostics.TraceListenerCollection\"></xref> is synchronized (thread safe).\n  syntax:\n    content: bool System.Collections.ICollection.IsSynchronized { get; }\n    return:\n      type: System.Boolean\n      description: Always `true`.\n  overload: System.Diagnostics.TraceListenerCollection.System#Collections#ICollection#IsSynchronized*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/TraceListenerCollection.xml\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Diagnostics.TraceListenerCollection.System#Collections#ICollection#SyncRoot\n  commentId: P:System.Diagnostics.TraceListenerCollection.System#Collections#ICollection#SyncRoot\n  id: System#Collections#ICollection#SyncRoot\n  isEii: true\n  parent: System.Diagnostics.TraceListenerCollection\n  langs:\n  - csharp\n  name: ICollection.SyncRoot\n  nameWithType: TraceListenerCollection.ICollection.SyncRoot\n  fullName: TraceListenerCollection.ICollection.SyncRoot\n  type: Property\n  assemblies:\n  - System.Diagnostics.TraceSource\n  - System\n  - netstandard\n  namespace: System.Diagnostics\n  summary: Gets an object that can be used to synchronize access to the <xref href=\"System.Diagnostics.TraceListenerCollection\"></xref>.\n  syntax:\n    content: object System.Collections.ICollection.SyncRoot { get; }\n    return:\n      type: System.Object\n      description: The current <xref href=\"System.Diagnostics.TraceListenerCollection\"></xref> object.\n  overload: System.Diagnostics.TraceListenerCollection.System#Collections#ICollection#SyncRoot*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/TraceListenerCollection.xml\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Diagnostics.TraceListenerCollection.System#Collections#IList#Add(System.Object)\n  commentId: M:System.Diagnostics.TraceListenerCollection.System#Collections#IList#Add(System.Object)\n  id: System#Collections#IList#Add(System.Object)\n  isEii: true\n  parent: System.Diagnostics.TraceListenerCollection\n  langs:\n  - csharp\n  name: IList.Add(Object)\n  nameWithType: TraceListenerCollection.IList.Add(Object)\n  fullName: TraceListenerCollection.IList.Add(Object)\n  type: Method\n  assemblies:\n  - System.Diagnostics.TraceSource\n  - System\n  - netstandard\n  namespace: System.Diagnostics\n  summary: Adds a trace listener to the <xref href=\"System.Diagnostics.TraceListenerCollection\"></xref>.\n  remarks: Use the <xref:System.Diagnostics.TraceListenerCollection.Add%2A> method to add a new trace listener to the collection.\n  syntax:\n    content: int IList.Add (object value);\n    parameters:\n    - id: value\n      type: System.Object\n      description: The object to add to the <xref href=\"System.Diagnostics.TraceListenerCollection\"></xref>.\n    return:\n      type: System.Int32\n      description: The position into which the new trace listener was inserted.\n  overload: System.Diagnostics.TraceListenerCollection.System#Collections#IList#Add*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"<code>value</code> is `null`.  \\n  \\n -or-  \\n  \\n <code>value</code> is not a <xref href=\\\"System.Diagnostics.TraceListener\\\"></xref>.\"\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/TraceListenerCollection.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Diagnostics.TraceListenerCollection.System#Collections#IList#Contains(System.Object)\n  commentId: M:System.Diagnostics.TraceListenerCollection.System#Collections#IList#Contains(System.Object)\n  id: System#Collections#IList#Contains(System.Object)\n  isEii: true\n  parent: System.Diagnostics.TraceListenerCollection\n  langs:\n  - csharp\n  name: IList.Contains(Object)\n  nameWithType: TraceListenerCollection.IList.Contains(Object)\n  fullName: TraceListenerCollection.IList.Contains(Object)\n  type: Method\n  assemblies:\n  - System.Diagnostics.TraceSource\n  - System\n  - netstandard\n  namespace: System.Diagnostics\n  summary: Determines whether the <xref href=\"System.Diagnostics.TraceListenerCollection\"></xref> contains a specific object.\n  remarks: Use the <xref:System.Diagnostics.TraceListenerCollection.Contains%2A> method of the <xref:System.Diagnostics.TraceListenerCollection> class to determine whether the collection contains a specific <xref:System.Diagnostics.TraceListener> object.\n  syntax:\n    content: bool IList.Contains (object value);\n    parameters:\n    - id: value\n      type: System.Object\n      description: The object to locate in the <xref href=\"System.Diagnostics.TraceListenerCollection\"></xref>.\n    return:\n      type: System.Boolean\n      description: '`true` if the <xref href=\"System.Object\"></xref> is found in the <xref href=\"System.Diagnostics.TraceListenerCollection\"></xref>; otherwise, `false`.'\n  overload: System.Diagnostics.TraceListenerCollection.System#Collections#IList#Contains*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/TraceListenerCollection.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Diagnostics.TraceListenerCollection.System#Collections#IList#IndexOf(System.Object)\n  commentId: M:System.Diagnostics.TraceListenerCollection.System#Collections#IList#IndexOf(System.Object)\n  id: System#Collections#IList#IndexOf(System.Object)\n  isEii: true\n  parent: System.Diagnostics.TraceListenerCollection\n  langs:\n  - csharp\n  name: IList.IndexOf(Object)\n  nameWithType: TraceListenerCollection.IList.IndexOf(Object)\n  fullName: TraceListenerCollection.IList.IndexOf(Object)\n  type: Method\n  assemblies:\n  - System.Diagnostics.TraceSource\n  - System\n  - netstandard\n  namespace: System.Diagnostics\n  summary: Determines the index of a specific object in the <xref href=\"System.Diagnostics.TraceListenerCollection\"></xref>.\n  remarks: Use the <xref:System.Diagnostics.TraceListenerCollection.IndexOf%2A> method of the <xref:System.Diagnostics.TraceListenerCollection> class to determine the index of a <xref:System.Diagnostics.TraceListener> object in the collection.\n  syntax:\n    content: int IList.IndexOf (object value);\n    parameters:\n    - id: value\n      type: System.Object\n      description: The object to locate in the <xref href=\"System.Diagnostics.TraceListenerCollection\"></xref>.\n    return:\n      type: System.Int32\n      description: The index of <code>value</code> if found in the <xref href=\"System.Diagnostics.TraceListenerCollection\"></xref>; otherwise, -1.\n  overload: System.Diagnostics.TraceListenerCollection.System#Collections#IList#IndexOf*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/TraceListenerCollection.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Diagnostics.TraceListenerCollection.System#Collections#IList#Insert(System.Int32,System.Object)\n  commentId: M:System.Diagnostics.TraceListenerCollection.System#Collections#IList#Insert(System.Int32,System.Object)\n  id: System#Collections#IList#Insert(System.Int32,System.Object)\n  isEii: true\n  parent: System.Diagnostics.TraceListenerCollection\n  langs:\n  - csharp\n  name: IList.Insert(Int32, Object)\n  nameWithType: TraceListenerCollection.IList.Insert(Int32, Object)\n  fullName: TraceListenerCollection.IList.Insert(Int32, Object)\n  type: Method\n  assemblies:\n  - System.Diagnostics.TraceSource\n  - System\n  - netstandard\n  namespace: System.Diagnostics\n  summary: Inserts a <xref href=\"System.Diagnostics.TraceListener\"></xref> object at the specified position in the <xref href=\"System.Diagnostics.TraceListenerCollection\"></xref>.\n  remarks: Use the <xref:System.Diagnostics.TraceListenerCollection.Insert%2A> method of the <xref:System.Diagnostics.TraceListenerCollection> class to insert a <xref:System.Diagnostics.TraceListener> object into the collection.\n  syntax:\n    content: void IList.Insert (int index, object value);\n    parameters:\n    - id: index\n      type: System.Int32\n      description: The zero-based index at which <code>value</code> should be inserted.\n    - id: value\n      type: System.Object\n      description: The <xref href=\"System.Diagnostics.TraceListener\"></xref> object to insert into the <xref href=\"System.Diagnostics.TraceListenerCollection\"></xref>.\n  overload: System.Diagnostics.TraceListenerCollection.System#Collections#IList#Insert*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>value</code> is not a <xref href=\"System.Diagnostics.TraceListener\"></xref> object.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/TraceListenerCollection.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Diagnostics.TraceListenerCollection.System#Collections#IList#IsFixedSize\n  commentId: P:System.Diagnostics.TraceListenerCollection.System#Collections#IList#IsFixedSize\n  id: System#Collections#IList#IsFixedSize\n  isEii: true\n  parent: System.Diagnostics.TraceListenerCollection\n  langs:\n  - csharp\n  name: IList.IsFixedSize\n  nameWithType: TraceListenerCollection.IList.IsFixedSize\n  fullName: TraceListenerCollection.IList.IsFixedSize\n  type: Property\n  assemblies:\n  - System.Diagnostics.TraceSource\n  - System\n  - netstandard\n  namespace: System.Diagnostics\n  summary: Gets a value indicating whether the <xref href=\"System.Diagnostics.TraceListenerCollection\"></xref> has a fixed size.\n  syntax:\n    content: bool System.Collections.IList.IsFixedSize { get; }\n    return:\n      type: System.Boolean\n      description: Always `false`.\n  overload: System.Diagnostics.TraceListenerCollection.System#Collections#IList#IsFixedSize*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/TraceListenerCollection.xml\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Diagnostics.TraceListenerCollection.System#Collections#IList#IsReadOnly\n  commentId: P:System.Diagnostics.TraceListenerCollection.System#Collections#IList#IsReadOnly\n  id: System#Collections#IList#IsReadOnly\n  isEii: true\n  parent: System.Diagnostics.TraceListenerCollection\n  langs:\n  - csharp\n  name: IList.IsReadOnly\n  nameWithType: TraceListenerCollection.IList.IsReadOnly\n  fullName: TraceListenerCollection.IList.IsReadOnly\n  type: Property\n  assemblies:\n  - System.Diagnostics.TraceSource\n  - System\n  - netstandard\n  namespace: System.Diagnostics\n  summary: Gets a value indicating whether the <xref href=\"System.Diagnostics.TraceListenerCollection\"></xref> is read-only\n  syntax:\n    content: bool System.Collections.IList.IsReadOnly { get; }\n    return:\n      type: System.Boolean\n      description: Always `false`.\n  overload: System.Diagnostics.TraceListenerCollection.System#Collections#IList#IsReadOnly*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/TraceListenerCollection.xml\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Diagnostics.TraceListenerCollection.System#Collections#IList#Item(System.Int32)\n  commentId: P:System.Diagnostics.TraceListenerCollection.System#Collections#IList#Item(System.Int32)\n  id: System#Collections#IList#Item(System.Int32)\n  isEii: true\n  parent: System.Diagnostics.TraceListenerCollection\n  langs:\n  - csharp\n  name: IList.Item(Int32)\n  nameWithType: TraceListenerCollection.IList.Item(Int32)\n  fullName: TraceListenerCollection.IList.Item(Int32)\n  type: Property\n  assemblies:\n  - System.Diagnostics.TraceSource\n  - System\n  - netstandard\n  namespace: System.Diagnostics\n  summary: Gets or sets the <xref href=\"System.Diagnostics.TraceListener\"></xref> at the specified index in the <xref href=\"System.Diagnostics.TraceListenerCollection\"></xref>.\n  remarks: Use the <xref:System.Diagnostics.TraceListenerCollection.Item%2A> property or the indexer of the <xref:System.Diagnostics.TraceListenerCollection> class to get or set a <xref:System.Diagnostics.TraceListener> in the collection.\n  syntax:\n    content: object System.Collections.IList.Item[int index] { get; set; }\n    parameters:\n    - id: index\n      type: System.Int32\n      description: The zero-based index of the <code>value</code> to get.\n    return:\n      type: System.Object\n      description: The <xref href=\"System.Diagnostics.TraceListener\"></xref> at the specified index.\n  overload: System.Diagnostics.TraceListenerCollection.System#Collections#IList#Item*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/TraceListenerCollection.xml\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Diagnostics.TraceListenerCollection.System#Collections#IList#Remove(System.Object)\n  commentId: M:System.Diagnostics.TraceListenerCollection.System#Collections#IList#Remove(System.Object)\n  id: System#Collections#IList#Remove(System.Object)\n  isEii: true\n  parent: System.Diagnostics.TraceListenerCollection\n  langs:\n  - csharp\n  name: IList.Remove(Object)\n  nameWithType: TraceListenerCollection.IList.Remove(Object)\n  fullName: TraceListenerCollection.IList.Remove(Object)\n  type: Method\n  assemblies:\n  - System.Diagnostics.TraceSource\n  - System\n  - netstandard\n  namespace: System.Diagnostics\n  summary: Removes an object from the <xref href=\"System.Diagnostics.TraceListenerCollection\"></xref>.\n  remarks: Use the <xref:System.Diagnostics.TraceListenerCollection.Remove%2A> method of the <xref:System.Diagnostics.TraceListenerCollection> class to remove a <xref:System.Diagnostics.TraceListener> from the collection.\n  syntax:\n    content: void IList.Remove (object value);\n    parameters:\n    - id: value\n      type: System.Object\n      description: The object to remove from the <xref href=\"System.Diagnostics.TraceListenerCollection\"></xref>.\n  overload: System.Diagnostics.TraceListenerCollection.System#Collections#IList#Remove*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/TraceListenerCollection.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\nreferences:\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.ArgumentNullException\n  parent: System\n  isExternal: false\n  name: ArgumentNullException\n  nameWithType: ArgumentNullException\n  fullName: System.ArgumentNullException\n- uid: System.ArgumentOutOfRangeException\n  parent: System\n  isExternal: false\n  name: ArgumentOutOfRangeException\n  nameWithType: ArgumentOutOfRangeException\n  fullName: System.ArgumentOutOfRangeException\n- uid: System.ArgumentException\n  parent: System\n  isExternal: false\n  name: ArgumentException\n  nameWithType: ArgumentException\n  fullName: System.ArgumentException\n- uid: System.Diagnostics.TraceListenerCollection.Add(System.Diagnostics.TraceListener)\n  parent: System.Diagnostics.TraceListenerCollection\n  isExternal: false\n  name: Add(TraceListener)\n  nameWithType: TraceListenerCollection.Add(TraceListener)\n  fullName: TraceListenerCollection.Add(TraceListener)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Diagnostics.TraceListener\n  parent: System.Diagnostics\n  isExternal: false\n  name: TraceListener\n  nameWithType: TraceListener\n  fullName: System.Diagnostics.TraceListener\n- uid: System.Diagnostics.TraceListenerCollection.AddRange(System.Diagnostics.TraceListener[])\n  parent: System.Diagnostics.TraceListenerCollection\n  isExternal: false\n  name: AddRange(TraceListener[])\n  nameWithType: TraceListenerCollection.AddRange(TraceListener[])\n  fullName: TraceListenerCollection.AddRange(TraceListener[])\n- uid: System.Diagnostics.TraceListener[]\n  parent: System.Diagnostics\n  isExternal: false\n  name: TraceListener[]\n  nameWithType: TraceListener[]\n  fullName: System.Diagnostics.TraceListener[]\n  spec.csharp:\n  - uid: System.Diagnostics.TraceListener\n    name: TraceListener\n    nameWithType: TraceListener\n    fullName: System.Diagnostics.TraceListener\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Diagnostics.TraceListenerCollection.AddRange(System.Diagnostics.TraceListenerCollection)\n  parent: System.Diagnostics.TraceListenerCollection\n  isExternal: false\n  name: AddRange(TraceListenerCollection)\n  nameWithType: TraceListenerCollection.AddRange(TraceListenerCollection)\n  fullName: TraceListenerCollection.AddRange(TraceListenerCollection)\n- uid: System.Diagnostics.TraceListenerCollection\n  parent: System.Diagnostics\n  isExternal: false\n  name: TraceListenerCollection\n  nameWithType: TraceListenerCollection\n  fullName: System.Diagnostics.TraceListenerCollection\n- uid: System.Diagnostics.TraceListenerCollection.Clear\n  parent: System.Diagnostics.TraceListenerCollection\n  isExternal: false\n  name: Clear()\n  nameWithType: TraceListenerCollection.Clear()\n  fullName: TraceListenerCollection.Clear()\n- uid: System.Diagnostics.TraceListenerCollection.Contains(System.Diagnostics.TraceListener)\n  parent: System.Diagnostics.TraceListenerCollection\n  isExternal: false\n  name: Contains(TraceListener)\n  nameWithType: TraceListenerCollection.Contains(TraceListener)\n  fullName: TraceListenerCollection.Contains(TraceListener)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Diagnostics.TraceListenerCollection.CopyTo(System.Diagnostics.TraceListener[],System.Int32)\n  parent: System.Diagnostics.TraceListenerCollection\n  isExternal: false\n  name: CopyTo(TraceListener[], Int32)\n  nameWithType: TraceListenerCollection.CopyTo(TraceListener[], Int32)\n  fullName: TraceListenerCollection.CopyTo(TraceListener[], Int32)\n- uid: System.Diagnostics.TraceListenerCollection.Count\n  parent: System.Diagnostics.TraceListenerCollection\n  isExternal: false\n  name: Count\n  nameWithType: TraceListenerCollection.Count\n  fullName: TraceListenerCollection.Count\n- uid: System.Diagnostics.TraceListenerCollection.GetEnumerator\n  parent: System.Diagnostics.TraceListenerCollection\n  isExternal: false\n  name: GetEnumerator()\n  nameWithType: TraceListenerCollection.GetEnumerator()\n  fullName: TraceListenerCollection.GetEnumerator()\n- uid: System.Collections.IEnumerator\n  parent: System.Collections\n  isExternal: false\n  name: IEnumerator\n  nameWithType: IEnumerator\n  fullName: System.Collections.IEnumerator\n- uid: System.Diagnostics.TraceListenerCollection.IndexOf(System.Diagnostics.TraceListener)\n  parent: System.Diagnostics.TraceListenerCollection\n  isExternal: false\n  name: IndexOf(TraceListener)\n  nameWithType: TraceListenerCollection.IndexOf(TraceListener)\n  fullName: TraceListenerCollection.IndexOf(TraceListener)\n- uid: System.Diagnostics.TraceListenerCollection.Insert(System.Int32,System.Diagnostics.TraceListener)\n  parent: System.Diagnostics.TraceListenerCollection\n  isExternal: false\n  name: Insert(Int32, TraceListener)\n  nameWithType: TraceListenerCollection.Insert(Int32, TraceListener)\n  fullName: TraceListenerCollection.Insert(Int32, TraceListener)\n- uid: System.Diagnostics.TraceListenerCollection.Item(System.Int32)\n  parent: System.Diagnostics.TraceListenerCollection\n  isExternal: false\n  name: Item(Int32)\n  nameWithType: TraceListenerCollection.Item(Int32)\n  fullName: TraceListenerCollection.Item(Int32)\n- uid: System.Diagnostics.TraceListenerCollection.Item(System.String)\n  parent: System.Diagnostics.TraceListenerCollection\n  isExternal: false\n  name: Item(String)\n  nameWithType: TraceListenerCollection.Item(String)\n  fullName: TraceListenerCollection.Item(String)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Diagnostics.TraceListenerCollection.Remove(System.String)\n  parent: System.Diagnostics.TraceListenerCollection\n  isExternal: false\n  name: Remove(String)\n  nameWithType: TraceListenerCollection.Remove(String)\n  fullName: TraceListenerCollection.Remove(String)\n- uid: System.Diagnostics.TraceListenerCollection.Remove(System.Diagnostics.TraceListener)\n  parent: System.Diagnostics.TraceListenerCollection\n  isExternal: false\n  name: Remove(TraceListener)\n  nameWithType: TraceListenerCollection.Remove(TraceListener)\n  fullName: TraceListenerCollection.Remove(TraceListener)\n- uid: System.Diagnostics.TraceListenerCollection.RemoveAt(System.Int32)\n  parent: System.Diagnostics.TraceListenerCollection\n  isExternal: false\n  name: RemoveAt(Int32)\n  nameWithType: TraceListenerCollection.RemoveAt(Int32)\n  fullName: TraceListenerCollection.RemoveAt(Int32)\n- uid: System.Diagnostics.TraceListenerCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)\n  parent: System.Diagnostics.TraceListenerCollection\n  isExternal: false\n  name: ICollection.CopyTo(Array, Int32)\n  nameWithType: TraceListenerCollection.ICollection.CopyTo(Array, Int32)\n  fullName: TraceListenerCollection.ICollection.CopyTo(Array, Int32)\n- uid: System.Array\n  parent: System\n  isExternal: false\n  name: Array\n  nameWithType: Array\n  fullName: System.Array\n- uid: System.Diagnostics.TraceListenerCollection.System#Collections#ICollection#IsSynchronized\n  parent: System.Diagnostics.TraceListenerCollection\n  isExternal: false\n  name: ICollection.IsSynchronized\n  nameWithType: TraceListenerCollection.ICollection.IsSynchronized\n  fullName: TraceListenerCollection.ICollection.IsSynchronized\n- uid: System.Diagnostics.TraceListenerCollection.System#Collections#ICollection#SyncRoot\n  parent: System.Diagnostics.TraceListenerCollection\n  isExternal: false\n  name: ICollection.SyncRoot\n  nameWithType: TraceListenerCollection.ICollection.SyncRoot\n  fullName: TraceListenerCollection.ICollection.SyncRoot\n- uid: System.Diagnostics.TraceListenerCollection.System#Collections#IList#Add(System.Object)\n  parent: System.Diagnostics.TraceListenerCollection\n  isExternal: false\n  name: IList.Add(Object)\n  nameWithType: TraceListenerCollection.IList.Add(Object)\n  fullName: TraceListenerCollection.IList.Add(Object)\n- uid: System.Diagnostics.TraceListenerCollection.System#Collections#IList#Contains(System.Object)\n  parent: System.Diagnostics.TraceListenerCollection\n  isExternal: false\n  name: IList.Contains(Object)\n  nameWithType: TraceListenerCollection.IList.Contains(Object)\n  fullName: TraceListenerCollection.IList.Contains(Object)\n- uid: System.Diagnostics.TraceListenerCollection.System#Collections#IList#IndexOf(System.Object)\n  parent: System.Diagnostics.TraceListenerCollection\n  isExternal: false\n  name: IList.IndexOf(Object)\n  nameWithType: TraceListenerCollection.IList.IndexOf(Object)\n  fullName: TraceListenerCollection.IList.IndexOf(Object)\n- uid: System.Diagnostics.TraceListenerCollection.System#Collections#IList#Insert(System.Int32,System.Object)\n  parent: System.Diagnostics.TraceListenerCollection\n  isExternal: false\n  name: IList.Insert(Int32, Object)\n  nameWithType: TraceListenerCollection.IList.Insert(Int32, Object)\n  fullName: TraceListenerCollection.IList.Insert(Int32, Object)\n- uid: System.Diagnostics.TraceListenerCollection.System#Collections#IList#IsFixedSize\n  parent: System.Diagnostics.TraceListenerCollection\n  isExternal: false\n  name: IList.IsFixedSize\n  nameWithType: TraceListenerCollection.IList.IsFixedSize\n  fullName: TraceListenerCollection.IList.IsFixedSize\n- uid: System.Diagnostics.TraceListenerCollection.System#Collections#IList#IsReadOnly\n  parent: System.Diagnostics.TraceListenerCollection\n  isExternal: false\n  name: IList.IsReadOnly\n  nameWithType: TraceListenerCollection.IList.IsReadOnly\n  fullName: TraceListenerCollection.IList.IsReadOnly\n- uid: System.Diagnostics.TraceListenerCollection.System#Collections#IList#Item(System.Int32)\n  parent: System.Diagnostics.TraceListenerCollection\n  isExternal: false\n  name: IList.Item(Int32)\n  nameWithType: TraceListenerCollection.IList.Item(Int32)\n  fullName: TraceListenerCollection.IList.Item(Int32)\n- uid: System.Diagnostics.TraceListenerCollection.System#Collections#IList#Remove(System.Object)\n  parent: System.Diagnostics.TraceListenerCollection\n  isExternal: false\n  name: IList.Remove(Object)\n  nameWithType: TraceListenerCollection.IList.Remove(Object)\n  fullName: TraceListenerCollection.IList.Remove(Object)\n- uid: System.Diagnostics.TraceListenerCollection.Add*\n  parent: System.Diagnostics.TraceListenerCollection\n  isExternal: false\n  name: Add\n  nameWithType: TraceListenerCollection.Add\n  fullName: TraceListenerCollection.Add\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/TraceListenerCollection.xml\n- uid: System.Diagnostics.TraceListenerCollection.AddRange*\n  parent: System.Diagnostics.TraceListenerCollection\n  isExternal: false\n  name: AddRange\n  nameWithType: TraceListenerCollection.AddRange\n  fullName: TraceListenerCollection.AddRange\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/TraceListenerCollection.xml\n- uid: System.Diagnostics.TraceListenerCollection.Clear*\n  parent: System.Diagnostics.TraceListenerCollection\n  isExternal: false\n  name: Clear\n  nameWithType: TraceListenerCollection.Clear\n  fullName: TraceListenerCollection.Clear\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/TraceListenerCollection.xml\n- uid: System.Diagnostics.TraceListenerCollection.Contains*\n  parent: System.Diagnostics.TraceListenerCollection\n  isExternal: false\n  name: Contains\n  nameWithType: TraceListenerCollection.Contains\n  fullName: TraceListenerCollection.Contains\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/TraceListenerCollection.xml\n- uid: System.Diagnostics.TraceListenerCollection.CopyTo*\n  parent: System.Diagnostics.TraceListenerCollection\n  isExternal: false\n  name: CopyTo\n  nameWithType: TraceListenerCollection.CopyTo\n  fullName: TraceListenerCollection.CopyTo\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/TraceListenerCollection.xml\n- uid: System.Diagnostics.TraceListenerCollection.Count*\n  parent: System.Diagnostics.TraceListenerCollection\n  isExternal: false\n  name: Count\n  nameWithType: TraceListenerCollection.Count\n  fullName: TraceListenerCollection.Count\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/TraceListenerCollection.xml\n- uid: System.Diagnostics.TraceListenerCollection.GetEnumerator*\n  parent: System.Diagnostics.TraceListenerCollection\n  isExternal: false\n  name: GetEnumerator\n  nameWithType: TraceListenerCollection.GetEnumerator\n  fullName: TraceListenerCollection.GetEnumerator\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/TraceListenerCollection.xml\n- uid: System.Diagnostics.TraceListenerCollection.IndexOf*\n  parent: System.Diagnostics.TraceListenerCollection\n  isExternal: false\n  name: IndexOf\n  nameWithType: TraceListenerCollection.IndexOf\n  fullName: TraceListenerCollection.IndexOf\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/TraceListenerCollection.xml\n- uid: System.Diagnostics.TraceListenerCollection.Insert*\n  parent: System.Diagnostics.TraceListenerCollection\n  isExternal: false\n  name: Insert\n  nameWithType: TraceListenerCollection.Insert\n  fullName: TraceListenerCollection.Insert\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/TraceListenerCollection.xml\n- uid: System.Diagnostics.TraceListenerCollection.Item*\n  parent: System.Diagnostics.TraceListenerCollection\n  isExternal: false\n  name: Item\n  nameWithType: TraceListenerCollection.Item\n  fullName: TraceListenerCollection.Item\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/TraceListenerCollection.xml\n- uid: System.Diagnostics.TraceListenerCollection.Remove*\n  parent: System.Diagnostics.TraceListenerCollection\n  isExternal: false\n  name: Remove\n  nameWithType: TraceListenerCollection.Remove\n  fullName: TraceListenerCollection.Remove\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/TraceListenerCollection.xml\n- uid: System.Diagnostics.TraceListenerCollection.RemoveAt*\n  parent: System.Diagnostics.TraceListenerCollection\n  isExternal: false\n  name: RemoveAt\n  nameWithType: TraceListenerCollection.RemoveAt\n  fullName: TraceListenerCollection.RemoveAt\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/TraceListenerCollection.xml\n- uid: System.Diagnostics.TraceListenerCollection.System#Collections#ICollection#CopyTo*\n  parent: System.Diagnostics.TraceListenerCollection\n  isExternal: false\n  name: System.Collections.ICollection.CopyTo\n  nameWithType: TraceListenerCollection.System.Collections.ICollection.CopyTo\n  fullName: TraceListenerCollection.System.Collections.ICollection.CopyTo\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/TraceListenerCollection.xml\n- uid: System.Diagnostics.TraceListenerCollection.System#Collections#ICollection#IsSynchronized*\n  parent: System.Diagnostics.TraceListenerCollection\n  isExternal: false\n  name: System.Collections.ICollection.IsSynchronized\n  nameWithType: TraceListenerCollection.System.Collections.ICollection.IsSynchronized\n  fullName: TraceListenerCollection.System.Collections.ICollection.IsSynchronized\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/TraceListenerCollection.xml\n- uid: System.Diagnostics.TraceListenerCollection.System#Collections#ICollection#SyncRoot*\n  parent: System.Diagnostics.TraceListenerCollection\n  isExternal: false\n  name: System.Collections.ICollection.SyncRoot\n  nameWithType: TraceListenerCollection.System.Collections.ICollection.SyncRoot\n  fullName: TraceListenerCollection.System.Collections.ICollection.SyncRoot\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/TraceListenerCollection.xml\n- uid: System.Diagnostics.TraceListenerCollection.System#Collections#IList#Add*\n  parent: System.Diagnostics.TraceListenerCollection\n  isExternal: false\n  name: System.Collections.IList.Add\n  nameWithType: TraceListenerCollection.System.Collections.IList.Add\n  fullName: TraceListenerCollection.System.Collections.IList.Add\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/TraceListenerCollection.xml\n- uid: System.Diagnostics.TraceListenerCollection.System#Collections#IList#Contains*\n  parent: System.Diagnostics.TraceListenerCollection\n  isExternal: false\n  name: System.Collections.IList.Contains\n  nameWithType: TraceListenerCollection.System.Collections.IList.Contains\n  fullName: TraceListenerCollection.System.Collections.IList.Contains\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/TraceListenerCollection.xml\n- uid: System.Diagnostics.TraceListenerCollection.System#Collections#IList#IndexOf*\n  parent: System.Diagnostics.TraceListenerCollection\n  isExternal: false\n  name: System.Collections.IList.IndexOf\n  nameWithType: TraceListenerCollection.System.Collections.IList.IndexOf\n  fullName: TraceListenerCollection.System.Collections.IList.IndexOf\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/TraceListenerCollection.xml\n- uid: System.Diagnostics.TraceListenerCollection.System#Collections#IList#Insert*\n  parent: System.Diagnostics.TraceListenerCollection\n  isExternal: false\n  name: System.Collections.IList.Insert\n  nameWithType: TraceListenerCollection.System.Collections.IList.Insert\n  fullName: TraceListenerCollection.System.Collections.IList.Insert\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/TraceListenerCollection.xml\n- uid: System.Diagnostics.TraceListenerCollection.System#Collections#IList#IsFixedSize*\n  parent: System.Diagnostics.TraceListenerCollection\n  isExternal: false\n  name: System.Collections.IList.IsFixedSize\n  nameWithType: TraceListenerCollection.System.Collections.IList.IsFixedSize\n  fullName: TraceListenerCollection.System.Collections.IList.IsFixedSize\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/TraceListenerCollection.xml\n- uid: System.Diagnostics.TraceListenerCollection.System#Collections#IList#IsReadOnly*\n  parent: System.Diagnostics.TraceListenerCollection\n  isExternal: false\n  name: System.Collections.IList.IsReadOnly\n  nameWithType: TraceListenerCollection.System.Collections.IList.IsReadOnly\n  fullName: TraceListenerCollection.System.Collections.IList.IsReadOnly\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/TraceListenerCollection.xml\n- uid: System.Diagnostics.TraceListenerCollection.System#Collections#IList#Item*\n  parent: System.Diagnostics.TraceListenerCollection\n  isExternal: false\n  name: System.Collections.IList.Item\n  nameWithType: TraceListenerCollection.System.Collections.IList.Item\n  fullName: TraceListenerCollection.System.Collections.IList.Item\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/TraceListenerCollection.xml\n- uid: System.Diagnostics.TraceListenerCollection.System#Collections#IList#Remove*\n  parent: System.Diagnostics.TraceListenerCollection\n  isExternal: false\n  name: System.Collections.IList.Remove\n  nameWithType: TraceListenerCollection.System.Collections.IList.Remove\n  fullName: TraceListenerCollection.System.Collections.IList.Remove\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Diagnostics/TraceListenerCollection.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Cast<TResult>(IEnumerable)\n  nameWithType: Enumerable.Cast<TResult>(IEnumerable)\n  fullName: Enumerable.Cast<TResult>(IEnumerable)\n- uid: System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: OfType<TResult>(IEnumerable)\n  nameWithType: Enumerable.OfType<TResult>(IEnumerable)\n  fullName: Enumerable.OfType<TResult>(IEnumerable)\n- uid: System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)\n  parent: System.Linq.ParallelEnumerable\n  isExternal: false\n  name: AsParallel(IEnumerable)\n  nameWithType: ParallelEnumerable.AsParallel(IEnumerable)\n  fullName: ParallelEnumerable.AsParallel(IEnumerable)\n- uid: System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: AsQueryable(IEnumerable)\n  nameWithType: Queryable.AsQueryable(IEnumerable)\n  fullName: Queryable.AsQueryable(IEnumerable)\n- uid: System.Collections.IList\n  parent: System.Collections\n  isExternal: false\n  name: IList\n  nameWithType: IList\n  fullName: System.Collections.IList\n"}