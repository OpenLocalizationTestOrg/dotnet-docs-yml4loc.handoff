{"nodes":[{"content":"Indicates the determinism and data access properties of a method or property on a user-defined type (UDT). The properties on the attribute reflect the physical characteristics that are used when the type is registered with SQL Server.","nodes":[{"pos":[0,234],"content":"Indicates the determinism and data access properties of a method or property on a user-defined type (UDT). The properties on the attribute reflect the physical characteristics that are used when the type is registered with SQL Server.","nodes":[{"content":"Indicates the determinism and data access properties of a method or property on a user-defined type (UDT). The properties on the attribute reflect the physical characteristics that are used when the type is registered with SQL Server.","pos":[0,234],"nodes":[{"content":"Indicates the determinism and data access properties of a method or property on a user-defined type (UDT).","pos":[0,106]},{"content":"The properties on the attribute reflect the physical characteristics that are used when the type is registered with SQL Server.","pos":[107,234]}]}]}],"pos":[672,907],"yaml":true},{"content":"For a property, the <xref:Microsoft.SqlServer.Server.SqlMethodAttribute> should be used on the setter or the getter directly.  \n  \n <xref:Microsoft.SqlServer.Server.SqlMethodAttribute> inherits from a <xref:Microsoft.SqlServer.Server.SqlFunctionAttribute>, so <xref:Microsoft.SqlServer.Server.SqlMethodAttribute> inherits the `FillRowMethodName` and `TableDefinition` fields from <xref:Microsoft.SqlServer.Server.SqlFunctionAttribute>. Note that it is not possible to write a table-valued method, although the names of these fields might suggest that it is possible.","nodes":[{"pos":[0,125],"content":"For a property, the <xref:Microsoft.SqlServer.Server.SqlMethodAttribute> should be used on the setter or the getter directly.","nodes":[{"content":"For a property, the <ph id=\"ph1\">&lt;xref:Microsoft.SqlServer.Server.SqlMethodAttribute&gt;</ph> should be used on the setter or the getter directly.","pos":[0,125],"source":"For a property, the <xref:Microsoft.SqlServer.Server.SqlMethodAttribute> should be used on the setter or the getter directly."}]},{"pos":[132,566],"content":"<xref:Microsoft.SqlServer.Server.SqlMethodAttribute> inherits from a <xref:Microsoft.SqlServer.Server.SqlFunctionAttribute>, so <xref:Microsoft.SqlServer.Server.SqlMethodAttribute> inherits the `FillRowMethodName` and `TableDefinition` fields from <xref:Microsoft.SqlServer.Server.SqlFunctionAttribute>. Note that it is not possible to write a table-valued method, although the names of these fields might suggest that it is possible.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:Microsoft.SqlServer.Server.SqlMethodAttribute&gt;</ph> inherits from a <ph id=\"ph2\">&lt;xref:Microsoft.SqlServer.Server.SqlFunctionAttribute&gt;</ph>, so <ph id=\"ph3\">&lt;xref:Microsoft.SqlServer.Server.SqlMethodAttribute&gt;</ph> inherits the <ph id=\"ph4\">`FillRowMethodName`</ph> and <ph id=\"ph5\">`TableDefinition`</ph> fields from <ph id=\"ph6\">&lt;xref:Microsoft.SqlServer.Server.SqlFunctionAttribute&gt;</ph>.","pos":[0,303],"source":"<xref:Microsoft.SqlServer.Server.SqlMethodAttribute> inherits from a <xref:Microsoft.SqlServer.Server.SqlFunctionAttribute>, so <xref:Microsoft.SqlServer.Server.SqlMethodAttribute> inherits the `FillRowMethodName` and `TableDefinition` fields from <xref:Microsoft.SqlServer.Server.SqlFunctionAttribute>."},{"content":"Note that it is not possible to write a table-valued method, although the names of these fields might suggest that it is possible.","pos":[304,434]}]}],"pos":[918,1489],"yaml":true,"extradata":"MT"},{"content":"An attribute on a user-defined type (UDT), used to indicate the determinism and data access properties of a method or a property on a UDT.","nodes":[{"pos":[0,138],"content":"An attribute on a user-defined type (UDT), used to indicate the determinism and data access properties of a method or a property on a UDT.","nodes":[{"content":"An attribute on a user-defined type (UDT), used to indicate the determinism and data access properties of a method or a property on a UDT.","pos":[0,138]}]}],"pos":[7659,7798],"yaml":true},{"content":"Indicates whether SQL Server should invoke the method on null instances.","nodes":[{"pos":[0,72],"content":"Indicates whether SQL Server should invoke the method on null instances.","nodes":[{"content":"Indicates whether SQL Server should invoke the method on null instances.","pos":[0,72]}]}],"pos":[9050,9123],"yaml":true},{"content":"The default value for the <xref:Microsoft.SqlServer.Server.SqlMethodAttribute.InvokeIfReceiverIsNull%2A> property is `false`.  \n  \n That is, the method is not invoked on a null instance. If <xref:Microsoft.SqlServer.Server.SqlMethodAttribute.InvokeIfReceiverIsNull%2A> is true, the return value of the method depends upon its type. If the return type of the method is nullable, the distinguished null value for the type is returned. If the return type is non-nullable, the default CLR value for the type is returned. The default value for reference types is null. The default value for a value type is the value that is  returned when you call the default constructor for the type.","nodes":[{"pos":[0,125],"content":"The default value for the <ph id=\"ph1\">&lt;xref:Microsoft.SqlServer.Server.SqlMethodAttribute.InvokeIfReceiverIsNull%2A&gt;</ph> property is <ph id=\"ph2\">`false`</ph>.","source":"The default value for the <xref:Microsoft.SqlServer.Server.SqlMethodAttribute.InvokeIfReceiverIsNull%2A> property is `false`."},{"pos":[132,681],"content":"That is, the method is not invoked on a null instance. If <xref:Microsoft.SqlServer.Server.SqlMethodAttribute.InvokeIfReceiverIsNull%2A> is true, the return value of the method depends upon its type. If the return type of the method is nullable, the distinguished null value for the type is returned. If the return type is non-nullable, the default CLR value for the type is returned. The default value for reference types is null. The default value for a value type is the value that is  returned when you call the default constructor for the type.","nodes":[{"content":"That is, the method is not invoked on a null instance. If <xref:Microsoft.SqlServer.Server.SqlMethodAttribute.InvokeIfReceiverIsNull%2A> is true, the return value of the method depends upon its type. If the return type of the method is nullable, the distinguished null value for the type is returned. If the return type is non-nullable, the default CLR value for the type is returned. The default value for reference types is null. The default value for a value type is the value that is  returned when you call the default constructor for the type.","pos":[0,549],"nodes":[{"content":"That is, the method is not invoked on a null instance.","pos":[0,54]},{"content":"If <ph id=\"ph1\">&lt;xref:Microsoft.SqlServer.Server.SqlMethodAttribute.InvokeIfReceiverIsNull%2A&gt;</ph> is true, the return value of the method depends upon its type.","pos":[55,199],"source":" If <xref:Microsoft.SqlServer.Server.SqlMethodAttribute.InvokeIfReceiverIsNull%2A> is true, the return value of the method depends upon its type."},{"content":"If the return type of the method is nullable, the distinguished null value for the type is returned.","pos":[200,300]},{"content":"If the return type is non-nullable, the default CLR value for the type is returned.","pos":[301,384]},{"content":"The default value for reference types is null.","pos":[385,431]},{"content":"The default value for a value type is the value that is  returned when you call the default constructor for the type.","pos":[432,549]}]}]}],"pos":[9134,9820],"yaml":true,"extradata":"MT"},{"content":"`true` if SQL Server should invoke the method on null instances; otherwise, `false`. If the method cannot be invoked (because of an attribute on the method), the [!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)]`DbNull` is returned.","nodes":[{"pos":[0,236],"content":"`true` if SQL Server should invoke the method on null instances; otherwise, `false`. If the method cannot be invoked (because of an attribute on the method), the [!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)]`DbNull` is returned.","nodes":[{"content":"<ph id=\"ph1\">`true`</ph> if SQL Server should invoke the method on null instances; otherwise, <ph id=\"ph2\">`false`</ph>.","pos":[0,84],"source":"`true` if SQL Server should invoke the method on null instances; otherwise, `false`."},{"content":"If the method cannot be invoked (because of an attribute on the method), the <ph id=\"ph1\">[!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)]</ph><ph id=\"ph2\">`DbNull`</ph> is returned.","pos":[85,236],"source":" If the method cannot be invoked (because of an attribute on the method), the [!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)]`DbNull` is returned."}]}],"pos":[9950,10189],"yaml":true},{"content":"Indicates whether a method on a user-defined type (UDT) is a mutator.","nodes":[{"pos":[0,69],"content":"Indicates whether a method on a user-defined type (UDT) is a mutator.","nodes":[{"content":"Indicates whether a method on a user-defined type (UDT) is a mutator.","pos":[0,69]}]}],"pos":[11308,11378],"yaml":true},{"content":"If the <xref:Microsoft.SqlServer.Server.SqlMethodAttribute.IsMutator%2A> property is set to `true` and the return type of the method is `void`, SQL Server marks the method as a mutator. A mutator method is one that causes a state change in the UDT instance. Mutator methods can be called in assignment statements or data modification statements, but cannot be used in queries. If a method is marked as a mutator but does not return void, then CREATE TYPE does not fail with an error. Even though a returned value other than `void` does not raise an error, the returned value is not accessible and cannot be used.  \n  \n The default value of the <xref:Microsoft.SqlServer.Server.SqlMethodAttribute.IsMutator%2A> property is `false`.  \n  \n A property can be a mutator if <xref:Microsoft.SqlServer.Server.SqlMethodAttribute> is used on the setter and <xref:Microsoft.SqlServer.Server.SqlMethodAttribute.IsMutator%2A> is set to `true`. However, a property setter is implicitly treated as a mutator, so it is not necessary to set the <xref:Microsoft.SqlServer.Server.SqlMethodAttribute.IsMutator%2A> property of the <xref:Microsoft.SqlServer.Server.SqlMethodAttribute> to `true`.","nodes":[{"pos":[0,612],"content":"If the <xref:Microsoft.SqlServer.Server.SqlMethodAttribute.IsMutator%2A> property is set to `true` and the return type of the method is `void`, SQL Server marks the method as a mutator. A mutator method is one that causes a state change in the UDT instance. Mutator methods can be called in assignment statements or data modification statements, but cannot be used in queries. If a method is marked as a mutator but does not return void, then CREATE TYPE does not fail with an error. Even though a returned value other than `void` does not raise an error, the returned value is not accessible and cannot be used.","nodes":[{"content":"If the <ph id=\"ph1\">&lt;xref:Microsoft.SqlServer.Server.SqlMethodAttribute.IsMutator%2A&gt;</ph> property is set to <ph id=\"ph2\">`true`</ph> and the return type of the method is <ph id=\"ph3\">`void`</ph>, SQL Server marks the method as a mutator.","pos":[0,185],"source":"If the <xref:Microsoft.SqlServer.Server.SqlMethodAttribute.IsMutator%2A> property is set to `true` and the return type of the method is `void`, SQL Server marks the method as a mutator."},{"content":"A mutator method is one that causes a state change in the UDT instance.","pos":[186,257]},{"content":"Mutator methods can be called in assignment statements or data modification statements, but cannot be used in queries.","pos":[258,376]},{"content":"If a method is marked as a mutator but does not return void, then CREATE TYPE does not fail with an error.","pos":[377,483]},{"content":"Even though a returned value other than <ph id=\"ph1\">`void`</ph> does not raise an error, the returned value is not accessible and cannot be used.","pos":[484,612],"source":" Even though a returned value other than `void` does not raise an error, the returned value is not accessible and cannot be used."}]},{"pos":[619,730],"content":"The default value of the <ph id=\"ph1\">&lt;xref:Microsoft.SqlServer.Server.SqlMethodAttribute.IsMutator%2A&gt;</ph> property is <ph id=\"ph2\">`false`</ph>.","source":"The default value of the <xref:Microsoft.SqlServer.Server.SqlMethodAttribute.IsMutator%2A> property is `false`."},{"pos":[737,1173],"content":"A property can be a mutator if <xref:Microsoft.SqlServer.Server.SqlMethodAttribute> is used on the setter and <xref:Microsoft.SqlServer.Server.SqlMethodAttribute.IsMutator%2A> is set to `true`. However, a property setter is implicitly treated as a mutator, so it is not necessary to set the <xref:Microsoft.SqlServer.Server.SqlMethodAttribute.IsMutator%2A> property of the <xref:Microsoft.SqlServer.Server.SqlMethodAttribute> to `true`.","nodes":[{"content":"A property can be a mutator if <ph id=\"ph1\">&lt;xref:Microsoft.SqlServer.Server.SqlMethodAttribute&gt;</ph> is used on the setter and <ph id=\"ph2\">&lt;xref:Microsoft.SqlServer.Server.SqlMethodAttribute.IsMutator%2A&gt;</ph> is set to <ph id=\"ph3\">`true`</ph>.","pos":[0,193],"source":"A property can be a mutator if <xref:Microsoft.SqlServer.Server.SqlMethodAttribute> is used on the setter and <xref:Microsoft.SqlServer.Server.SqlMethodAttribute.IsMutator%2A> is set to `true`."},{"content":"However, a property setter is implicitly treated as a mutator, so it is not necessary to set the <ph id=\"ph1\">&lt;xref:Microsoft.SqlServer.Server.SqlMethodAttribute.IsMutator%2A&gt;</ph> property of the <ph id=\"ph2\">&lt;xref:Microsoft.SqlServer.Server.SqlMethodAttribute&gt;</ph> to <ph id=\"ph3\">`true`</ph>.","pos":[194,436],"source":" However, a property setter is implicitly treated as a mutator, so it is not necessary to set the <xref:Microsoft.SqlServer.Server.SqlMethodAttribute.IsMutator%2A> property of the <xref:Microsoft.SqlServer.Server.SqlMethodAttribute> to `true`."}]}],"pos":[11389,12569],"yaml":true,"extradata":"MT"},{"content":"`true` if the method is a mutator; otherwise `false`.","nodes":[{"pos":[0,53],"content":"<ph id=\"ph1\">`true`</ph> if the method is a mutator; otherwise <ph id=\"ph2\">`false`</ph>.","source":"`true` if the method is a mutator; otherwise `false`."}],"pos":[12686,12742],"yaml":true},{"content":"Indicates whether the method on a user-defined type (UDT) is called when `null` input arguments are specified in the method invocation.","nodes":[{"pos":[0,135],"content":"Indicates whether the method on a user-defined type (UDT) is called when <ph id=\"ph1\">`null`</ph> input arguments are specified in the method invocation.","source":"Indicates whether the method on a user-defined type (UDT) is called when `null` input arguments are specified in the method invocation."}],"pos":[13854,13990],"yaml":true},{"content":"The default value of the <xref:Microsoft.SqlServer.Server.SqlMethodAttribute.OnNullCall%2A> property is `true`.","nodes":[{"pos":[0,111],"content":"The default value of the <ph id=\"ph1\">&lt;xref:Microsoft.SqlServer.Server.SqlMethodAttribute.OnNullCall%2A&gt;</ph> property is <ph id=\"ph2\">`true`</ph>.","source":"The default value of the <xref:Microsoft.SqlServer.Server.SqlMethodAttribute.OnNullCall%2A> property is `true`."}],"pos":[14001,14113],"yaml":true,"extradata":"MT"},{"content":"`true` if the method is called when `null` input arguments are specified in the method invocation; `false` if the method returns a `null` value when any of its input parameters are `null`. If the method cannot be invoked (because of an attribute on the method), the [!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)]`DbNull` is returned.","nodes":[{"pos":[0,340],"content":"`true` if the method is called when `null` input arguments are specified in the method invocation; `false` if the method returns a `null` value when any of its input parameters are `null`. If the method cannot be invoked (because of an attribute on the method), the [!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)]`DbNull` is returned.","nodes":[{"content":"<ph id=\"ph1\">`true`</ph> if the method is called when <ph id=\"ph2\">`null`</ph> input arguments are specified in the method invocation; <ph id=\"ph3\">`false`</ph> if the method returns a <ph id=\"ph4\">`null`</ph> value when any of its input parameters are <ph id=\"ph5\">`null`</ph>.","pos":[0,188],"source":"`true` if the method is called when `null` input arguments are specified in the method invocation; `false` if the method returns a `null` value when any of its input parameters are `null`."},{"content":"If the method cannot be invoked (because of an attribute on the method), the <ph id=\"ph1\">[!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)]</ph><ph id=\"ph2\">`DbNull`</ph> is returned.","pos":[189,340],"source":" If the method cannot be invoked (because of an attribute on the method), the [!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)]`DbNull` is returned."}]}],"pos":[14231,14574],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: Microsoft.SqlServer.Server.SqlMethodAttribute\n  commentId: T:Microsoft.SqlServer.Server.SqlMethodAttribute\n  id: SqlMethodAttribute\n  children:\n  - Microsoft.SqlServer.Server.SqlMethodAttribute.#ctor\n  - Microsoft.SqlServer.Server.SqlMethodAttribute.InvokeIfReceiverIsNull\n  - Microsoft.SqlServer.Server.SqlMethodAttribute.IsMutator\n  - Microsoft.SqlServer.Server.SqlMethodAttribute.OnNullCall\n  langs:\n  - csharp\n  name: SqlMethodAttribute\n  nameWithType: SqlMethodAttribute\n  fullName: Microsoft.SqlServer.Server.SqlMethodAttribute\n  type: Class\n  assemblies:\n  - System.Data\n  namespace: Microsoft.SqlServer.Server\n  summary: Indicates the determinism and data access properties of a method or property on a user-defined type (UDT). The properties on the attribute reflect the physical characteristics that are used when the type is registered with SQL Server.\n  remarks: \"For a property, the <xref:Microsoft.SqlServer.Server.SqlMethodAttribute> should be used on the setter or the getter directly.  \\n  \\n <xref:Microsoft.SqlServer.Server.SqlMethodAttribute> inherits from a <xref:Microsoft.SqlServer.Server.SqlFunctionAttribute>, so <xref:Microsoft.SqlServer.Server.SqlMethodAttribute> inherits the `FillRowMethodName` and `TableDefinition` fields from <xref:Microsoft.SqlServer.Server.SqlFunctionAttribute>. Note that it is not possible to write a table-valued method, although the names of these fields might suggest that it is possible.\"\n  example:\n  - \"The following example shows a UDT method that is attributed to indicate that the method will not be invoked on null instances of the type, that the method will not change the state of the type, and that the method will not be called when `null` parameters are supplied to the method invocation.  \\n  \\n [!code-csharp[DataWorks SqlMethodAttribute Sample#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlMethodAttribute Sample/CS/source.cs#1)]\\n [!code-vb[DataWorks SqlMethodAttribute Sample#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlMethodAttribute Sample/VB/source.vb#1)]\"\n  syntax:\n    content: >-\n      [System.AttributeUsage(System.AttributeTargets.Method, AllowMultiple=false, Inherited=false)]\n\n      public sealed class SqlMethodAttribute : Microsoft.SqlServer.Server.SqlFunctionAttribute\n  inheritance:\n  - System.Object\n  - System.Attribute\n  - Microsoft.SqlServer.Server.SqlFunctionAttribute\n  implements: []\n  inheritedMembers:\n  - Microsoft.SqlServer.Server.SqlFunctionAttribute.DataAccess\n  - Microsoft.SqlServer.Server.SqlFunctionAttribute.FillRowMethodName\n  - Microsoft.SqlServer.Server.SqlFunctionAttribute.IsDeterministic\n  - Microsoft.SqlServer.Server.SqlFunctionAttribute.IsPrecise\n  - Microsoft.SqlServer.Server.SqlFunctionAttribute.Name\n  - Microsoft.SqlServer.Server.SqlFunctionAttribute.SystemDataAccess\n  - Microsoft.SqlServer.Server.SqlFunctionAttribute.TableDefinition\n  - System.Attribute.Equals(System.Object)\n  - System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type)\n  - System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)\n  - System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type)\n  - System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type)\n  - System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo)\n  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)\n  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Module)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo)\n  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type)\n  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  - System.Attribute.GetHashCode\n  - System.Attribute.IsDefaultAttribute\n  - System.Attribute.IsDefined(System.Reflection.Assembly,System.Type)\n  - System.Attribute.IsDefined(System.Reflection.Assembly,System.Type,System.Boolean)\n  - System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type)\n  - System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  - System.Attribute.IsDefined(System.Reflection.Module,System.Type)\n  - System.Attribute.IsDefined(System.Reflection.Module,System.Type,System.Boolean)\n  - System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type)\n  - System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  - System.Attribute.Match(System.Object)\n  - System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)\n  - System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)\n  - System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)\n  - System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)\n  - System.Attribute.TypeId\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  attributes:\n  - type: System.AttributeUsageAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.SqlServer.Server/SqlMethodAttribute.xml\n  manager: mblythe\n- uid: Microsoft.SqlServer.Server.SqlMethodAttribute.#ctor\n  commentId: M:Microsoft.SqlServer.Server.SqlMethodAttribute.#ctor\n  id: '#ctor'\n  parent: Microsoft.SqlServer.Server.SqlMethodAttribute\n  langs:\n  - csharp\n  name: SqlMethodAttribute()\n  nameWithType: SqlMethodAttribute.SqlMethodAttribute()\n  fullName: SqlMethodAttribute.SqlMethodAttribute()\n  type: Constructor\n  assemblies:\n  - System.Data\n  namespace: Microsoft.SqlServer.Server\n  summary: An attribute on a user-defined type (UDT), used to indicate the determinism and data access properties of a method or a property on a UDT.\n  syntax:\n    content: public SqlMethodAttribute ();\n    parameters: []\n  overload: Microsoft.SqlServer.Server.SqlMethodAttribute.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.SqlServer.Server/SqlMethodAttribute.xml\n  manager: mblythe\n- uid: Microsoft.SqlServer.Server.SqlMethodAttribute.InvokeIfReceiverIsNull\n  commentId: P:Microsoft.SqlServer.Server.SqlMethodAttribute.InvokeIfReceiverIsNull\n  id: InvokeIfReceiverIsNull\n  parent: Microsoft.SqlServer.Server.SqlMethodAttribute\n  langs:\n  - csharp\n  name: InvokeIfReceiverIsNull\n  nameWithType: SqlMethodAttribute.InvokeIfReceiverIsNull\n  fullName: SqlMethodAttribute.InvokeIfReceiverIsNull\n  type: Property\n  assemblies:\n  - System.Data\n  namespace: Microsoft.SqlServer.Server\n  summary: Indicates whether SQL Server should invoke the method on null instances.\n  remarks: \"The default value for the <xref:Microsoft.SqlServer.Server.SqlMethodAttribute.InvokeIfReceiverIsNull%2A> property is `false`.  \\n  \\n That is, the method is not invoked on a null instance. If <xref:Microsoft.SqlServer.Server.SqlMethodAttribute.InvokeIfReceiverIsNull%2A> is true, the return value of the method depends upon its type. If the return type of the method is nullable, the distinguished null value for the type is returned. If the return type is non-nullable, the default CLR value for the type is returned. The default value for reference types is null. The default value for a value type is the value that is  returned when you call the default constructor for the type.\"\n  syntax:\n    content: public bool InvokeIfReceiverIsNull { get; set; }\n    return:\n      type: System.Boolean\n      description: '`true` if SQL Server should invoke the method on null instances; otherwise, `false`. If the method cannot be invoked (because of an attribute on the method), the [!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)]`DbNull` is returned.'\n  overload: Microsoft.SqlServer.Server.SqlMethodAttribute.InvokeIfReceiverIsNull*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.SqlServer.Server/SqlMethodAttribute.xml\n  manager: mblythe\n- uid: Microsoft.SqlServer.Server.SqlMethodAttribute.IsMutator\n  commentId: P:Microsoft.SqlServer.Server.SqlMethodAttribute.IsMutator\n  id: IsMutator\n  parent: Microsoft.SqlServer.Server.SqlMethodAttribute\n  langs:\n  - csharp\n  name: IsMutator\n  nameWithType: SqlMethodAttribute.IsMutator\n  fullName: SqlMethodAttribute.IsMutator\n  type: Property\n  assemblies:\n  - System.Data\n  namespace: Microsoft.SqlServer.Server\n  summary: Indicates whether a method on a user-defined type (UDT) is a mutator.\n  remarks: \"If the <xref:Microsoft.SqlServer.Server.SqlMethodAttribute.IsMutator%2A> property is set to `true` and the return type of the method is `void`, SQL Server marks the method as a mutator. A mutator method is one that causes a state change in the UDT instance. Mutator methods can be called in assignment statements or data modification statements, but cannot be used in queries. If a method is marked as a mutator but does not return void, then CREATE TYPE does not fail with an error. Even though a returned value other than `void` does not raise an error, the returned value is not accessible and cannot be used.  \\n  \\n The default value of the <xref:Microsoft.SqlServer.Server.SqlMethodAttribute.IsMutator%2A> property is `false`.  \\n  \\n A property can be a mutator if <xref:Microsoft.SqlServer.Server.SqlMethodAttribute> is used on the setter and <xref:Microsoft.SqlServer.Server.SqlMethodAttribute.IsMutator%2A> is set to `true`. However, a property setter is implicitly treated as a mutator, so it is not necessary to set the <xref:Microsoft.SqlServer.Server.SqlMethodAttribute.IsMutator%2A> property of the <xref:Microsoft.SqlServer.Server.SqlMethodAttribute> to `true`.\"\n  syntax:\n    content: public bool IsMutator { get; set; }\n    return:\n      type: System.Boolean\n      description: '`true` if the method is a mutator; otherwise `false`.'\n  overload: Microsoft.SqlServer.Server.SqlMethodAttribute.IsMutator*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.SqlServer.Server/SqlMethodAttribute.xml\n  manager: mblythe\n- uid: Microsoft.SqlServer.Server.SqlMethodAttribute.OnNullCall\n  commentId: P:Microsoft.SqlServer.Server.SqlMethodAttribute.OnNullCall\n  id: OnNullCall\n  parent: Microsoft.SqlServer.Server.SqlMethodAttribute\n  langs:\n  - csharp\n  name: OnNullCall\n  nameWithType: SqlMethodAttribute.OnNullCall\n  fullName: SqlMethodAttribute.OnNullCall\n  type: Property\n  assemblies:\n  - System.Data\n  namespace: Microsoft.SqlServer.Server\n  summary: Indicates whether the method on a user-defined type (UDT) is called when `null` input arguments are specified in the method invocation.\n  remarks: The default value of the <xref:Microsoft.SqlServer.Server.SqlMethodAttribute.OnNullCall%2A> property is `true`.\n  syntax:\n    content: public bool OnNullCall { get; set; }\n    return:\n      type: System.Boolean\n      description: '`true` if the method is called when `null` input arguments are specified in the method invocation; `false` if the method returns a `null` value when any of its input parameters are `null`. If the method cannot be invoked (because of an attribute on the method), the [!INCLUDE[ssNoVersion](~/includes/ssnoversion-md.md)]`DbNull` is returned.'\n  overload: Microsoft.SqlServer.Server.SqlMethodAttribute.OnNullCall*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.SqlServer.Server/SqlMethodAttribute.xml\n  manager: mblythe\nreferences:\n- uid: Microsoft.SqlServer.Server.SqlFunctionAttribute\n  parent: Microsoft.SqlServer.Server\n  isExternal: false\n  name: SqlFunctionAttribute\n  nameWithType: SqlFunctionAttribute\n  fullName: Microsoft.SqlServer.Server.SqlFunctionAttribute\n- uid: Microsoft.SqlServer.Server.SqlMethodAttribute.#ctor\n  parent: Microsoft.SqlServer.Server.SqlMethodAttribute\n  isExternal: false\n  name: SqlMethodAttribute()\n  nameWithType: SqlMethodAttribute.SqlMethodAttribute()\n  fullName: SqlMethodAttribute.SqlMethodAttribute()\n- uid: Microsoft.SqlServer.Server.SqlMethodAttribute.InvokeIfReceiverIsNull\n  parent: Microsoft.SqlServer.Server.SqlMethodAttribute\n  isExternal: false\n  name: InvokeIfReceiverIsNull\n  nameWithType: SqlMethodAttribute.InvokeIfReceiverIsNull\n  fullName: SqlMethodAttribute.InvokeIfReceiverIsNull\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: Microsoft.SqlServer.Server.SqlMethodAttribute.IsMutator\n  parent: Microsoft.SqlServer.Server.SqlMethodAttribute\n  isExternal: false\n  name: IsMutator\n  nameWithType: SqlMethodAttribute.IsMutator\n  fullName: SqlMethodAttribute.IsMutator\n- uid: Microsoft.SqlServer.Server.SqlMethodAttribute.OnNullCall\n  parent: Microsoft.SqlServer.Server.SqlMethodAttribute\n  isExternal: false\n  name: OnNullCall\n  nameWithType: SqlMethodAttribute.OnNullCall\n  fullName: SqlMethodAttribute.OnNullCall\n- uid: Microsoft.SqlServer.Server.SqlMethodAttribute.#ctor*\n  parent: Microsoft.SqlServer.Server.SqlMethodAttribute\n  isExternal: false\n  name: SqlMethodAttribute\n  nameWithType: SqlMethodAttribute.SqlMethodAttribute\n  fullName: SqlMethodAttribute.SqlMethodAttribute\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.SqlServer.Server/SqlMethodAttribute.xml\n- uid: Microsoft.SqlServer.Server.SqlMethodAttribute.InvokeIfReceiverIsNull*\n  parent: Microsoft.SqlServer.Server.SqlMethodAttribute\n  isExternal: false\n  name: InvokeIfReceiverIsNull\n  nameWithType: SqlMethodAttribute.InvokeIfReceiverIsNull\n  fullName: SqlMethodAttribute.InvokeIfReceiverIsNull\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.SqlServer.Server/SqlMethodAttribute.xml\n- uid: Microsoft.SqlServer.Server.SqlMethodAttribute.IsMutator*\n  parent: Microsoft.SqlServer.Server.SqlMethodAttribute\n  isExternal: false\n  name: IsMutator\n  nameWithType: SqlMethodAttribute.IsMutator\n  fullName: SqlMethodAttribute.IsMutator\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.SqlServer.Server/SqlMethodAttribute.xml\n- uid: Microsoft.SqlServer.Server.SqlMethodAttribute.OnNullCall*\n  parent: Microsoft.SqlServer.Server.SqlMethodAttribute\n  isExternal: false\n  name: OnNullCall\n  nameWithType: SqlMethodAttribute.OnNullCall\n  fullName: SqlMethodAttribute.OnNullCall\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.SqlServer.Server/SqlMethodAttribute.xml\n- uid: System.Attribute.Equals(System.Object)\n  parent: System.Attribute\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Attribute.Equals(Object)\n  fullName: Attribute.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Attribute.GetHashCode\n  parent: System.Attribute\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Attribute.GetHashCode()\n  fullName: Attribute.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(ParameterInfo, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttribute(ParameterInfo, Type, Boolean)\n  fullName: Attribute.GetCustomAttribute(ParameterInfo, Type, Boolean)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(MemberInfo, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttribute(MemberInfo, Type, Boolean)\n  fullName: Attribute.GetCustomAttribute(MemberInfo, Type, Boolean)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(Assembly, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttribute(Assembly, Type, Boolean)\n  fullName: Attribute.GetCustomAttribute(Assembly, Type, Boolean)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(Module, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttribute(Module, Type, Boolean)\n  fullName: Attribute.GetCustomAttribute(Module, Type, Boolean)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(Module, Type)\n  nameWithType: Attribute.GetCustomAttribute(Module, Type)\n  fullName: Attribute.GetCustomAttribute(Module, Type)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(MemberInfo, Type)\n  nameWithType: Attribute.GetCustomAttribute(MemberInfo, Type)\n  fullName: Attribute.GetCustomAttribute(MemberInfo, Type)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(Assembly, Type)\n  nameWithType: Attribute.GetCustomAttribute(Assembly, Type)\n  fullName: Attribute.GetCustomAttribute(Assembly, Type)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(ParameterInfo, Type)\n  nameWithType: Attribute.GetCustomAttribute(ParameterInfo, Type)\n  fullName: Attribute.GetCustomAttribute(ParameterInfo, Type)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Module, Type)\n  nameWithType: Attribute.GetCustomAttributes(Module, Type)\n  fullName: Attribute.GetCustomAttributes(Module, Type)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(ParameterInfo, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(ParameterInfo, Type, Boolean)\n  fullName: Attribute.GetCustomAttributes(ParameterInfo, Type, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Module, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(Module, Type, Boolean)\n  fullName: Attribute.GetCustomAttributes(Module, Type, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(MemberInfo, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(MemberInfo, Type, Boolean)\n  fullName: Attribute.GetCustomAttributes(MemberInfo, Type, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Assembly, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(Assembly, Type, Boolean)\n  fullName: Attribute.GetCustomAttributes(Assembly, Type, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(ParameterInfo, Type)\n  nameWithType: Attribute.GetCustomAttributes(ParameterInfo, Type)\n  fullName: Attribute.GetCustomAttributes(ParameterInfo, Type)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Module, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(Module, Boolean)\n  fullName: Attribute.GetCustomAttributes(Module, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(ParameterInfo, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(ParameterInfo, Boolean)\n  fullName: Attribute.GetCustomAttributes(ParameterInfo, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(MemberInfo, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(MemberInfo, Boolean)\n  fullName: Attribute.GetCustomAttributes(MemberInfo, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Assembly, Type)\n  nameWithType: Attribute.GetCustomAttributes(Assembly, Type)\n  fullName: Attribute.GetCustomAttributes(Assembly, Type)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Assembly, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(Assembly, Boolean)\n  fullName: Attribute.GetCustomAttributes(Assembly, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(ParameterInfo)\n  nameWithType: Attribute.GetCustomAttributes(ParameterInfo)\n  fullName: Attribute.GetCustomAttributes(ParameterInfo)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Module)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Module)\n  nameWithType: Attribute.GetCustomAttributes(Module)\n  fullName: Attribute.GetCustomAttributes(Module)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(MemberInfo)\n  nameWithType: Attribute.GetCustomAttributes(MemberInfo)\n  fullName: Attribute.GetCustomAttributes(MemberInfo)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Assembly)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Assembly)\n  nameWithType: Attribute.GetCustomAttributes(Assembly)\n  fullName: Attribute.GetCustomAttributes(Assembly)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(MemberInfo, Type)\n  nameWithType: Attribute.GetCustomAttributes(MemberInfo, Type)\n  fullName: Attribute.GetCustomAttributes(MemberInfo, Type)\n- uid: System.Attribute.IsDefaultAttribute\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefaultAttribute()\n  nameWithType: Attribute.IsDefaultAttribute()\n  fullName: Attribute.IsDefaultAttribute()\n- uid: System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(ParameterInfo, Type, Boolean)\n  nameWithType: Attribute.IsDefined(ParameterInfo, Type, Boolean)\n  fullName: Attribute.IsDefined(ParameterInfo, Type, Boolean)\n- uid: System.Attribute.IsDefined(System.Reflection.Module,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(Module, Type, Boolean)\n  nameWithType: Attribute.IsDefined(Module, Type, Boolean)\n  fullName: Attribute.IsDefined(Module, Type, Boolean)\n- uid: System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(MemberInfo, Type, Boolean)\n  nameWithType: Attribute.IsDefined(MemberInfo, Type, Boolean)\n  fullName: Attribute.IsDefined(MemberInfo, Type, Boolean)\n- uid: System.Attribute.IsDefined(System.Reflection.Assembly,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(Assembly, Type, Boolean)\n  nameWithType: Attribute.IsDefined(Assembly, Type, Boolean)\n  fullName: Attribute.IsDefined(Assembly, Type, Boolean)\n- uid: System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(MemberInfo, Type)\n  nameWithType: Attribute.IsDefined(MemberInfo, Type)\n  fullName: Attribute.IsDefined(MemberInfo, Type)\n- uid: System.Attribute.IsDefined(System.Reflection.Module,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(Module, Type)\n  nameWithType: Attribute.IsDefined(Module, Type)\n  fullName: Attribute.IsDefined(Module, Type)\n- uid: System.Attribute.IsDefined(System.Reflection.Assembly,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(Assembly, Type)\n  nameWithType: Attribute.IsDefined(Assembly, Type)\n  fullName: Attribute.IsDefined(Assembly, Type)\n- uid: System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(ParameterInfo, Type)\n  nameWithType: Attribute.IsDefined(ParameterInfo, Type)\n  fullName: Attribute.IsDefined(ParameterInfo, Type)\n- uid: System.Attribute.Match(System.Object)\n  parent: System.Attribute\n  isExternal: false\n  name: Match(Object)\n  nameWithType: Attribute.Match(Object)\n  fullName: Attribute.Match(Object)\n- uid: System.Attribute.TypeId\n  parent: System.Attribute\n  isExternal: false\n  name: TypeId\n  nameWithType: Attribute.TypeId\n  fullName: Attribute.TypeId\n- uid: System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)\n  parent: System.Attribute\n  isExternal: false\n  name: _Attribute.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)\n  nameWithType: Attribute._Attribute.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)\n  fullName: Attribute._Attribute.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)\n- uid: System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)\n  parent: System.Attribute\n  isExternal: false\n  name: _Attribute.GetTypeInfo(UInt32, UInt32, IntPtr)\n  nameWithType: Attribute._Attribute.GetTypeInfo(UInt32, UInt32, IntPtr)\n  fullName: Attribute._Attribute.GetTypeInfo(UInt32, UInt32, IntPtr)\n- uid: System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)\n  parent: System.Attribute\n  isExternal: false\n  name: _Attribute.GetTypeInfoCount(UInt32)\n  nameWithType: Attribute._Attribute.GetTypeInfoCount(UInt32)\n  fullName: Attribute._Attribute.GetTypeInfoCount(UInt32)\n- uid: System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)\n  parent: System.Attribute\n  isExternal: false\n  name: _Attribute.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)\n  nameWithType: Attribute._Attribute.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)\n  fullName: Attribute._Attribute.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)\n- uid: Microsoft.SqlServer.Server.SqlFunctionAttribute.DataAccess\n  parent: Microsoft.SqlServer.Server.SqlFunctionAttribute\n  isExternal: false\n  name: DataAccess\n  nameWithType: SqlFunctionAttribute.DataAccess\n  fullName: SqlFunctionAttribute.DataAccess\n- uid: Microsoft.SqlServer.Server.SqlFunctionAttribute.FillRowMethodName\n  parent: Microsoft.SqlServer.Server.SqlFunctionAttribute\n  isExternal: false\n  name: FillRowMethodName\n  nameWithType: SqlFunctionAttribute.FillRowMethodName\n  fullName: SqlFunctionAttribute.FillRowMethodName\n- uid: Microsoft.SqlServer.Server.SqlFunctionAttribute.IsDeterministic\n  parent: Microsoft.SqlServer.Server.SqlFunctionAttribute\n  isExternal: false\n  name: IsDeterministic\n  nameWithType: SqlFunctionAttribute.IsDeterministic\n  fullName: SqlFunctionAttribute.IsDeterministic\n- uid: Microsoft.SqlServer.Server.SqlFunctionAttribute.IsPrecise\n  parent: Microsoft.SqlServer.Server.SqlFunctionAttribute\n  isExternal: false\n  name: IsPrecise\n  nameWithType: SqlFunctionAttribute.IsPrecise\n  fullName: SqlFunctionAttribute.IsPrecise\n- uid: Microsoft.SqlServer.Server.SqlFunctionAttribute.Name\n  parent: Microsoft.SqlServer.Server.SqlFunctionAttribute\n  isExternal: false\n  name: Name\n  nameWithType: SqlFunctionAttribute.Name\n  fullName: SqlFunctionAttribute.Name\n- uid: Microsoft.SqlServer.Server.SqlFunctionAttribute.SystemDataAccess\n  parent: Microsoft.SqlServer.Server.SqlFunctionAttribute\n  isExternal: false\n  name: SystemDataAccess\n  nameWithType: SqlFunctionAttribute.SystemDataAccess\n  fullName: SqlFunctionAttribute.SystemDataAccess\n- uid: Microsoft.SqlServer.Server.SqlFunctionAttribute.TableDefinition\n  parent: Microsoft.SqlServer.Server.SqlFunctionAttribute\n  isExternal: false\n  name: TableDefinition\n  nameWithType: SqlFunctionAttribute.TableDefinition\n  fullName: SqlFunctionAttribute.TableDefinition\n"}