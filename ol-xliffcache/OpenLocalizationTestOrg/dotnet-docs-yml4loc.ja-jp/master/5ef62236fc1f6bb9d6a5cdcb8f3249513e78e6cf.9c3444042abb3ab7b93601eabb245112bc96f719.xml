{"nodes":[{"content":"Represents the Korean calendar.","nodes":[{"pos":[0,31],"content":"Represents the Korean calendar.","nodes":[{"content":"Represents the Korean calendar.","pos":[0,31]}]}],"pos":[2343,2375],"yaml":true},{"content":"The Korean calendar is exactly like the Gregorian calendar, except that the year and era are different.  \n  \n> [!NOTE]\n>  For information about using the <xref:System.Globalization.KoreanCalendar> class and the other calendar classes in the .NET Framework, see [Working with Calendars](~/docs/standard/datetime/working-with-calendars.md).  \n  \n The <xref:System.Globalization.KoreanCalendar> class recognizes only the current era.  \n  \n Leap years in the Korean calendar correspond to the same leap years in the Gregorian calendar. A leap year in the Gregorian calendar is defined as a Gregorian year that is evenly divisible by four, except if it is divisible by 100. However, Gregorian years that are divisible by 400 are leap years. A common year has 365 days and a leap year has 366 days.  \n  \n The Korean calendar has 12 months with 28 to 31 days each:  \n  \n|GetMonth value|Month|Days in common years|Days in leap years|  \n|--------------------|-----------|--------------------------|------------------------|  \n|1|1월 (January)|31|31|  \n|2|2월 (February)|28|29|  \n|3|3월 (March)|31|31|  \n|4|4월 (April)|30|30|  \n|5|5월 (May)|31|31|  \n|6|6월 (June)|30|30|  \n|7|7월 (July)|31|31|  \n|8|8월 (August)|31|31|  \n|9|9월 (September)|30|30|  \n|10|10월 (October)|31|31|  \n|11|11월 (November)|30|30|  \n|12|12월 (December)|31|31|  \n  \n February has 29 days during leap years and 28 days during common years.  \n  \n The date January 1, 2001 A.D. in the Gregorian calendar is equivalent to the first day of January in the year 4334 of the current era in the Korean calendar.  \n  \n Each <xref:System.Globalization.CultureInfo> object supports a set of calendars. The <xref:System.Globalization.CultureInfo.Calendar%2A> property returns the default calendar for the culture, and the <xref:System.Globalization.CultureInfo.OptionalCalendars%2A> property returns an array containing all the calendars supported by the culture. To change the calendar used by a <xref:System.Globalization.CultureInfo>, the application should set the <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> property of <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=fullName> to a new <xref:System.Globalization.Calendar>.","nodes":[{"pos":[0,103],"content":"The Korean calendar is exactly like the Gregorian calendar, except that the year and era are different.","nodes":[{"content":"The Korean calendar is exactly like the Gregorian calendar, except that the year and era are different.","pos":[0,103]}]},{"pos":[111,338],"content":"[!NOTE]\n For information about using the <xref:System.Globalization.KoreanCalendar> class and the other calendar classes in the .NET Framework, see [Working with Calendars](~/docs/standard/datetime/working-with-calendars.md).","leadings":["","> "],"nodes":[{"content":"For information about using the <ph id=\"ph1\">&lt;xref:System.Globalization.KoreanCalendar&gt;</ph> class and the other calendar classes in the .NET Framework, see <bpt id=\"p1\">[</bpt>Working with Calendars<ept id=\"p1\">](~/docs/standard/datetime/working-with-calendars.md)</ept>.","pos":[9,225],"source":" For information about using the <xref:System.Globalization.KoreanCalendar> class and the other calendar classes in the .NET Framework, see [Working with Calendars](~/docs/standard/datetime/working-with-calendars.md)."}]},{"pos":[345,430],"content":"The <xref:System.Globalization.KoreanCalendar> class recognizes only the current era.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Globalization.KoreanCalendar&gt;</ph> class recognizes only the current era.","pos":[0,85],"source":"The <xref:System.Globalization.KoreanCalendar> class recognizes only the current era."}]},{"pos":[437,792],"content":"Leap years in the Korean calendar correspond to the same leap years in the Gregorian calendar. A leap year in the Gregorian calendar is defined as a Gregorian year that is evenly divisible by four, except if it is divisible by 100. However, Gregorian years that are divisible by 400 are leap years. A common year has 365 days and a leap year has 366 days.","nodes":[{"content":"Leap years in the Korean calendar correspond to the same leap years in the Gregorian calendar. A leap year in the Gregorian calendar is defined as a Gregorian year that is evenly divisible by four, except if it is divisible by 100. However, Gregorian years that are divisible by 400 are leap years. A common year has 365 days and a leap year has 366 days.","pos":[0,355],"nodes":[{"content":"Leap years in the Korean calendar correspond to the same leap years in the Gregorian calendar.","pos":[0,94]},{"content":"A leap year in the Gregorian calendar is defined as a Gregorian year that is evenly divisible by four, except if it is divisible by 100.","pos":[95,231]},{"content":"However, Gregorian years that are divisible by 400 are leap years.","pos":[232,298]},{"content":"A common year has 365 days and a leap year has 366 days.","pos":[299,355]}]}]},{"pos":[799,857],"content":"The Korean calendar has 12 months with 28 to 31 days each:","nodes":[{"content":"The Korean calendar has 12 months with 28 to 31 days each:","pos":[0,58]}]},{"pos":[864,878],"content":"GetMonth value","nodes":[{"content":"GetMonth value","pos":[0,14]}]},{"pos":[879,884],"content":"Month","nodes":[{"content":"Month","pos":[0,5]}]},{"pos":[885,905],"content":"Days in common years","nodes":[{"content":"Days in common years","pos":[0,20]}]},{"pos":[906,924],"content":"Days in leap years","nodes":[{"content":"Days in leap years","pos":[0,18]}]},{"pos":[1018,1019],"content":"1","nodes":[{"content":"1","pos":[0,1]}]},{"pos":[1020,1032],"content":"1월 (January)","nodes":[{"content":"1월 (January)","pos":[0,12]}]},{"pos":[1033,1035],"content":"31","nodes":[{"content":"31","pos":[0,2]}]},{"pos":[1036,1038],"content":"31","nodes":[{"content":"31","pos":[0,2]}]},{"pos":[1043,1044],"content":"2","nodes":[{"content":"2","pos":[0,1]}]},{"pos":[1045,1058],"content":"2월 (February)","nodes":[{"content":"2월 (February)","pos":[0,13]}]},{"pos":[1059,1061],"content":"28","nodes":[{"content":"28","pos":[0,2]}]},{"pos":[1062,1064],"content":"29","nodes":[{"content":"29","pos":[0,2]}]},{"pos":[1069,1070],"content":"3","nodes":[{"content":"3","pos":[0,1]}]},{"pos":[1071,1081],"content":"3월 (March)","nodes":[{"content":"3월 (March)","pos":[0,10]}]},{"pos":[1082,1084],"content":"31","nodes":[{"content":"31","pos":[0,2]}]},{"pos":[1085,1087],"content":"31","nodes":[{"content":"31","pos":[0,2]}]},{"pos":[1092,1093],"content":"4","nodes":[{"content":"4","pos":[0,1]}]},{"pos":[1094,1104],"content":"4월 (April)","nodes":[{"content":"4월 (April)","pos":[0,10]}]},{"pos":[1105,1107],"content":"30","nodes":[{"content":"30","pos":[0,2]}]},{"pos":[1108,1110],"content":"30","nodes":[{"content":"30","pos":[0,2]}]},{"pos":[1115,1116],"content":"5","nodes":[{"content":"5","pos":[0,1]}]},{"pos":[1117,1125],"content":"5월 (May)","nodes":[{"content":"5월 (May)","pos":[0,8]}]},{"pos":[1126,1128],"content":"31","nodes":[{"content":"31","pos":[0,2]}]},{"pos":[1129,1131],"content":"31","nodes":[{"content":"31","pos":[0,2]}]},{"pos":[1136,1137],"content":"6","nodes":[{"content":"6","pos":[0,1]}]},{"pos":[1138,1147],"content":"6월 (June)","nodes":[{"content":"6월 (June)","pos":[0,9]}]},{"pos":[1148,1150],"content":"30","nodes":[{"content":"30","pos":[0,2]}]},{"pos":[1151,1153],"content":"30","nodes":[{"content":"30","pos":[0,2]}]},{"pos":[1158,1159],"content":"7","nodes":[{"content":"7","pos":[0,1]}]},{"pos":[1160,1169],"content":"7월 (July)","nodes":[{"content":"7월 (July)","pos":[0,9]}]},{"pos":[1170,1172],"content":"31","nodes":[{"content":"31","pos":[0,2]}]},{"pos":[1173,1175],"content":"31","nodes":[{"content":"31","pos":[0,2]}]},{"pos":[1180,1181],"content":"8","nodes":[{"content":"8","pos":[0,1]}]},{"pos":[1182,1193],"content":"8월 (August)","nodes":[{"content":"8월 (August)","pos":[0,11]}]},{"pos":[1194,1196],"content":"31","nodes":[{"content":"31","pos":[0,2]}]},{"pos":[1197,1199],"content":"31","nodes":[{"content":"31","pos":[0,2]}]},{"pos":[1204,1205],"content":"9","nodes":[{"content":"9","pos":[0,1]}]},{"pos":[1206,1220],"content":"9월 (September)","nodes":[{"content":"9월 (September)","pos":[0,14]}]},{"pos":[1221,1223],"content":"30","nodes":[{"content":"30","pos":[0,2]}]},{"pos":[1224,1226],"content":"30","nodes":[{"content":"30","pos":[0,2]}]},{"pos":[1231,1233],"content":"10","nodes":[{"content":"10","pos":[0,2]}]},{"pos":[1234,1247],"content":"10월 (October)","nodes":[{"content":"10월 (October)","pos":[0,13]}]},{"pos":[1248,1250],"content":"31","nodes":[{"content":"31","pos":[0,2]}]},{"pos":[1251,1253],"content":"31","nodes":[{"content":"31","pos":[0,2]}]},{"pos":[1258,1260],"content":"11","nodes":[{"content":"11","pos":[0,2]}]},{"pos":[1261,1275],"content":"11월 (November)","nodes":[{"content":"11월 (November)","pos":[0,14]}]},{"pos":[1276,1278],"content":"30","nodes":[{"content":"30","pos":[0,2]}]},{"pos":[1279,1281],"content":"30","nodes":[{"content":"30","pos":[0,2]}]},{"pos":[1286,1288],"content":"12","nodes":[{"content":"12","pos":[0,2]}]},{"pos":[1289,1303],"content":"12월 (December)","nodes":[{"content":"12월 (December)","pos":[0,14]}]},{"pos":[1304,1306],"content":"31","nodes":[{"content":"31","pos":[0,2]}]},{"pos":[1307,1309],"content":"31","nodes":[{"content":"31","pos":[0,2]}]},{"pos":[1317,1388],"content":"February has 29 days during leap years and 28 days during common years.","nodes":[{"content":"February has 29 days during leap years and 28 days during common years.","pos":[0,71]}]},{"pos":[1395,1552],"content":"The date January 1, 2001 A.D. in the Gregorian calendar is equivalent to the first day of January in the year 4334 of the current era in the Korean calendar.","nodes":[{"content":"The date January 1, 2001 A.D. in the Gregorian calendar is equivalent to the first day of January in the year 4334 of the current era in the Korean calendar.","pos":[0,157],"nodes":[{"content":"The date January 1, 2001 A.D.","pos":[0,29]},{"content":"in the Gregorian calendar is equivalent to the first day of January in the year 4334 of the current era in the Korean calendar.","pos":[30,157]}]}]},{"pos":[1559,2206],"content":"Each <xref:System.Globalization.CultureInfo> object supports a set of calendars. The <xref:System.Globalization.CultureInfo.Calendar%2A> property returns the default calendar for the culture, and the <xref:System.Globalization.CultureInfo.OptionalCalendars%2A> property returns an array containing all the calendars supported by the culture. To change the calendar used by a <xref:System.Globalization.CultureInfo>, the application should set the <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> property of <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=fullName> to a new <xref:System.Globalization.Calendar>.","nodes":[{"content":"Each <xref:System.Globalization.CultureInfo> object supports a set of calendars. The <xref:System.Globalization.CultureInfo.Calendar%2A> property returns the default calendar for the culture, and the <xref:System.Globalization.CultureInfo.OptionalCalendars%2A> property returns an array containing all the calendars supported by the culture. To change the calendar used by a <xref:System.Globalization.CultureInfo>, the application should set the <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> property of <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=fullName> to a new <xref:System.Globalization.Calendar>.","pos":[0,647],"nodes":[{"content":"Each <ph id=\"ph1\">&lt;xref:System.Globalization.CultureInfo&gt;</ph> object supports a set of calendars.","pos":[0,80],"source":"Each <xref:System.Globalization.CultureInfo> object supports a set of calendars."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Globalization.CultureInfo.Calendar%2A&gt;</ph> property returns the default calendar for the culture, and the <ph id=\"ph2\">&lt;xref:System.Globalization.CultureInfo.OptionalCalendars%2A&gt;</ph> property returns an array containing all the calendars supported by the culture.","pos":[81,341],"source":" The <xref:System.Globalization.CultureInfo.Calendar%2A> property returns the default calendar for the culture, and the <xref:System.Globalization.CultureInfo.OptionalCalendars%2A> property returns an array containing all the calendars supported by the culture."},{"content":"To change the calendar used by a <ph id=\"ph1\">&lt;xref:System.Globalization.CultureInfo&gt;</ph>, the application should set the <ph id=\"ph2\">&lt;xref:System.Globalization.DateTimeFormatInfo.Calendar%2A&gt;</ph> property of <ph id=\"ph3\">&lt;xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=fullName&gt;</ph> to a new <ph id=\"ph4\">&lt;xref:System.Globalization.Calendar&gt;</ph>.","pos":[342,647],"source":" To change the calendar used by a <xref:System.Globalization.CultureInfo>, the application should set the <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> property of <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=fullName> to a new <xref:System.Globalization.Calendar>."}]}]}],"pos":[2386,4625],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.Globalization.KoreanCalendar\"></xref> class.","nodes":[{"pos":[0,97],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Globalization.KoreanCalendar\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.Globalization.KoreanCalendar\"></xref> class."}],"pos":[8192,8290],"yaml":true},{"content":"Unable to initialize a <xref href=\"System.Globalization.KoreanCalendar\"></xref> object because of missing culture information.","nodes":[{"pos":[0,126],"content":"Unable to initialize a <ph id=\"ph1\">&lt;xref href=\"System.Globalization.KoreanCalendar\"&gt;&lt;/xref&gt;</ph> object because of missing culture information.","source":"Unable to initialize a <xref href=\"System.Globalization.KoreanCalendar\"></xref> object because of missing culture information."}],"pos":[8541,8668],"yaml":true},{"content":"Returns a <xref href=\"System.DateTime\"></xref> that is the specified number of months away from the specified <xref href=\"System.DateTime\"></xref>.","nodes":[{"pos":[0,147],"content":"Returns a <ph id=\"ph1\">&lt;xref href=\"System.DateTime\"&gt;&lt;/xref&gt;</ph> that is the specified number of months away from the specified <ph id=\"ph2\">&lt;xref href=\"System.DateTime\"&gt;&lt;/xref&gt;</ph>.","source":"Returns a <xref href=\"System.DateTime\"></xref> that is the specified number of months away from the specified <xref href=\"System.DateTime\"></xref>."}],"pos":[10174,10322],"yaml":true},{"content":"The day part of the resulting <xref:System.DateTime> is affected if the resulting day is not a valid day in the resulting month of the resulting year. It is changed to the last valid day in the resulting month of the resulting year. The year part of the resulting <xref:System.DateTime> is affected if the resulting month is outside the year of the specified <xref:System.DateTime>. This implementation supports only the current era. Therefore, <xref:System.ArgumentException> is thrown if the resulting year is outside the era of the specified <xref:System.DateTime>. The time-of-day part of the resulting <xref:System.DateTime> remains the same as the specified <xref:System.DateTime>.  \n  \n For example, if the specified month is October, which has 31 days, the specified day is the 31st day of that month, and the value of the `months` parameter is 6, the resulting year is one more than the specified year, the resulting month is April, and the resulting day is the 30th day, which is the last day in April.  \n  \n If the value of the `months` parameter is negative, the resulting <xref:System.DateTime> is earlier than the specified <xref:System.DateTime>.  \n  \n The<xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> value always equals <xref:System.DateTimeKind?displayProperty=fullName>. You can preserve the <xref:System.DateTime.Kind%2A> property of the `time` parameter by calling the <xref:System.DateTime.SpecifyKind%2A?displayProperty=fullName> method, as the following example shows.  \n  \n [!code-csharp[System.Globalization.Calendar.AddMethods#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.calendar.addmethods/cs/add1.cs#5)]\n [!code-vb[System.Globalization.Calendar.AddMethods#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.calendar.addmethods/vb/add1.vb#5)]","nodes":[{"pos":[0,687],"content":"The day part of the resulting <xref:System.DateTime> is affected if the resulting day is not a valid day in the resulting month of the resulting year. It is changed to the last valid day in the resulting month of the resulting year. The year part of the resulting <xref:System.DateTime> is affected if the resulting month is outside the year of the specified <xref:System.DateTime>. This implementation supports only the current era. Therefore, <xref:System.ArgumentException> is thrown if the resulting year is outside the era of the specified <xref:System.DateTime>. The time-of-day part of the resulting <xref:System.DateTime> remains the same as the specified <xref:System.DateTime>.","nodes":[{"content":"The day part of the resulting <xref:System.DateTime> is affected if the resulting day is not a valid day in the resulting month of the resulting year. It is changed to the last valid day in the resulting month of the resulting year. The year part of the resulting <xref:System.DateTime> is affected if the resulting month is outside the year of the specified <xref:System.DateTime>. This implementation supports only the current era. Therefore, <xref:System.ArgumentException> is thrown if the resulting year is outside the era of the specified <xref:System.DateTime>. The time-of-day part of the resulting <xref:System.DateTime> remains the same as the specified <xref:System.DateTime>.","pos":[0,687],"nodes":[{"content":"The day part of the resulting <ph id=\"ph1\">&lt;xref:System.DateTime&gt;</ph> is affected if the resulting day is not a valid day in the resulting month of the resulting year.","pos":[0,150],"source":"The day part of the resulting <xref:System.DateTime> is affected if the resulting day is not a valid day in the resulting month of the resulting year."},{"content":"It is changed to the last valid day in the resulting month of the resulting year.","pos":[151,232]},{"content":"The year part of the resulting <ph id=\"ph1\">&lt;xref:System.DateTime&gt;</ph> is affected if the resulting month is outside the year of the specified <ph id=\"ph2\">&lt;xref:System.DateTime&gt;</ph>.","pos":[233,382],"source":" The year part of the resulting <xref:System.DateTime> is affected if the resulting month is outside the year of the specified <xref:System.DateTime>."},{"content":"This implementation supports only the current era.","pos":[383,433]},{"content":"Therefore, <ph id=\"ph1\">&lt;xref:System.ArgumentException&gt;</ph> is thrown if the resulting year is outside the era of the specified <ph id=\"ph2\">&lt;xref:System.DateTime&gt;</ph>.","pos":[434,568],"source":" Therefore, <xref:System.ArgumentException> is thrown if the resulting year is outside the era of the specified <xref:System.DateTime>."},{"content":"The time-of-day part of the resulting <ph id=\"ph1\">&lt;xref:System.DateTime&gt;</ph> remains the same as the specified <ph id=\"ph2\">&lt;xref:System.DateTime&gt;</ph>.","pos":[569,687],"source":" The time-of-day part of the resulting <xref:System.DateTime> remains the same as the specified <xref:System.DateTime>."}]}]},{"pos":[694,1012],"content":"For example, if the specified month is October, which has 31 days, the specified day is the 31st day of that month, and the value of the <ph id=\"ph1\">`months`</ph> parameter is 6, the resulting year is one more than the specified year, the resulting month is April, and the resulting day is the 30th day, which is the last day in April.","source":"For example, if the specified month is October, which has 31 days, the specified day is the 31st day of that month, and the value of the `months` parameter is 6, the resulting year is one more than the specified year, the resulting month is April, and the resulting day is the 30th day, which is the last day in April."},{"pos":[1019,1161],"content":"If the value of the <ph id=\"ph1\">`months`</ph> parameter is negative, the resulting <ph id=\"ph2\">&lt;xref:System.DateTime&gt;</ph> is earlier than the specified <ph id=\"ph3\">&lt;xref:System.DateTime&gt;</ph>.","source":"If the value of the `months` parameter is negative, the resulting <xref:System.DateTime> is earlier than the specified <xref:System.DateTime>."},{"pos":[1168,1525],"content":"The<xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> value always equals <xref:System.DateTimeKind?displayProperty=fullName>. You can preserve the <xref:System.DateTime.Kind%2A> property of the `time` parameter by calling the <xref:System.DateTime.SpecifyKind%2A?displayProperty=fullName> method, as the following example shows.","nodes":[{"content":"The<ph id=\"ph1\">&lt;xref:System.DateTime.Kind%2A&gt;</ph> property of the returned <ph id=\"ph2\">&lt;xref:System.DateTime&gt;</ph> value always equals <ph id=\"ph3\">&lt;xref:System.DateTimeKind?displayProperty=fullName&gt;</ph>.","pos":[0,154],"source":"The<xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> value always equals <xref:System.DateTimeKind?displayProperty=fullName>."},{"content":"You can preserve the <ph id=\"ph1\">&lt;xref:System.DateTime.Kind%2A&gt;</ph> property of the <ph id=\"ph2\">`time`</ph> parameter by calling the <ph id=\"ph3\">&lt;xref:System.DateTime.SpecifyKind%2A?displayProperty=fullName&gt;</ph> method, as the following example shows.","pos":[155,357],"source":" You can preserve the <xref:System.DateTime.Kind%2A> property of the `time` parameter by calling the <xref:System.DateTime.SpecifyKind%2A?displayProperty=fullName> method, as the following example shows."}]},{"pos":[1532,1859],"content":"<bpt id=\"p1\">[!code-csharp</bpt><bpt id=\"p2\">[</bpt>System.Globalization.Calendar.AddMethods#5<ept id=\"p2\">](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.calendar.addmethods/cs/add1.cs#5)</ept><ept id=\"p1\">]</ept> <bpt id=\"p3\">[!code-vb</bpt><bpt id=\"p4\">[</bpt>System.Globalization.Calendar.AddMethods#5<ept id=\"p4\">](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.calendar.addmethods/vb/add1.vb#5)</ept><ept id=\"p3\">]</ept>","source":"[!code-csharp[System.Globalization.Calendar.AddMethods#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.calendar.addmethods/cs/add1.cs#5)]\n [!code-vb[System.Globalization.Calendar.AddMethods#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.calendar.addmethods/vb/add1.vb#5)]"}],"pos":[10333,12204],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.DateTime\"></xref> to which to add months.","nodes":[{"pos":[0,64],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.DateTime\"&gt;&lt;/xref&gt;</ph> to which to add months.","source":"The <xref href=\"System.DateTime\"></xref> to which to add months."}],"pos":[13077,13142],"yaml":true},{"content":"The number of months to add.","nodes":[{"pos":[0,28],"content":"The number of months to add.","nodes":[{"content":"The number of months to add.","pos":[0,28]}]}],"pos":[13203,13232],"yaml":true},{"content":"The <xref href=\"System.DateTime\"></xref> that results from adding the specified number of months to the specified <xref href=\"System.DateTime\"></xref>.","nodes":[{"pos":[0,151],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.DateTime\"&gt;&lt;/xref&gt;</ph> that results from adding the specified number of months to the specified <ph id=\"ph2\">&lt;xref href=\"System.DateTime\"&gt;&lt;/xref&gt;</ph>.","source":"The <xref href=\"System.DateTime\"></xref> that results from adding the specified number of months to the specified <xref href=\"System.DateTime\"></xref>."}],"pos":[13291,13443],"yaml":true},{"content":"<code>months</code> is less than -120000.  \n  \n -or-  \n  \n <code>months</code> is greater than 120000.","nodes":[{"pos":[0,41],"content":"<ph id=\"ph1\">&lt;code&gt;months&lt;/code&gt;</ph> is less than -120000.","source":"<code>months</code> is less than -120000."},{"pos":[48,52],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[59,102],"content":"<ph id=\"ph1\">&lt;code&gt;months&lt;/code&gt;</ph> is greater than 120000.","source":"<code>months</code> is greater than 120000."}],"pos":[13630,13739],"yaml":true},{"content":"Returns a <xref href=\"System.DateTime\"></xref> that is the specified number of years away from the specified <xref href=\"System.DateTime\"></xref>.","nodes":[{"pos":[0,146],"content":"Returns a <ph id=\"ph1\">&lt;xref href=\"System.DateTime\"&gt;&lt;/xref&gt;</ph> that is the specified number of years away from the specified <ph id=\"ph2\">&lt;xref href=\"System.DateTime\"&gt;&lt;/xref&gt;</ph>.","source":"Returns a <xref href=\"System.DateTime\"></xref> that is the specified number of years away from the specified <xref href=\"System.DateTime\"></xref>."}],"pos":[15239,15386],"yaml":true},{"content":"The day part of the resulting <xref:System.DateTime> is affected if the resulting day is not a valid day in the resulting month of the resulting year. It is changed to the last valid day in the resulting month of the resulting year. The month part of the resulting <xref:System.DateTime> remains the same as the specified <xref:System.DateTime>. This implementation supports only the current era. Therefore, <xref:System.ArgumentException> is thrown if the resulting year is outside the era of the specified <xref:System.DateTime>. The time-of-day part of the resulting <xref:System.DateTime> remains the same as the specified <xref:System.DateTime>.  \n  \n For example, February has 28 days, except during leap years when it has 29 days. If the specified date is the 29th day of February in a leap year and the value of `years` is 1, the resulting date is the 28th day of February in the following year.  \n  \n If `years` is negative, the resulting <xref:System.DateTime> is earlier than the specified <xref:System.DateTime>.  \n  \n The<xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> value always equals <xref:System.DateTimeKind?displayProperty=fullName>. You can preserve the <xref:System.DateTime.Kind%2A> property of the `time` parameter by calling the <xref:System.DateTime.SpecifyKind%2A?displayProperty=fullName> method, as the following example shows.  \n  \n [!code-csharp[System.Globalization.Calendar.AddMethods#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.calendar.addmethods/cs/add1.cs#8)]\n [!code-vb[System.Globalization.Calendar.AddMethods#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.calendar.addmethods/vb/add1.vb#8)]","nodes":[{"pos":[0,650],"content":"The day part of the resulting <xref:System.DateTime> is affected if the resulting day is not a valid day in the resulting month of the resulting year. It is changed to the last valid day in the resulting month of the resulting year. The month part of the resulting <xref:System.DateTime> remains the same as the specified <xref:System.DateTime>. This implementation supports only the current era. Therefore, <xref:System.ArgumentException> is thrown if the resulting year is outside the era of the specified <xref:System.DateTime>. The time-of-day part of the resulting <xref:System.DateTime> remains the same as the specified <xref:System.DateTime>.","nodes":[{"content":"The day part of the resulting <xref:System.DateTime> is affected if the resulting day is not a valid day in the resulting month of the resulting year. It is changed to the last valid day in the resulting month of the resulting year. The month part of the resulting <xref:System.DateTime> remains the same as the specified <xref:System.DateTime>. This implementation supports only the current era. Therefore, <xref:System.ArgumentException> is thrown if the resulting year is outside the era of the specified <xref:System.DateTime>. The time-of-day part of the resulting <xref:System.DateTime> remains the same as the specified <xref:System.DateTime>.","pos":[0,650],"nodes":[{"content":"The day part of the resulting <ph id=\"ph1\">&lt;xref:System.DateTime&gt;</ph> is affected if the resulting day is not a valid day in the resulting month of the resulting year.","pos":[0,150],"source":"The day part of the resulting <xref:System.DateTime> is affected if the resulting day is not a valid day in the resulting month of the resulting year."},{"content":"It is changed to the last valid day in the resulting month of the resulting year.","pos":[151,232]},{"content":"The month part of the resulting <ph id=\"ph1\">&lt;xref:System.DateTime&gt;</ph> remains the same as the specified <ph id=\"ph2\">&lt;xref:System.DateTime&gt;</ph>.","pos":[233,345],"source":" The month part of the resulting <xref:System.DateTime> remains the same as the specified <xref:System.DateTime>."},{"content":"This implementation supports only the current era.","pos":[346,396]},{"content":"Therefore, <ph id=\"ph1\">&lt;xref:System.ArgumentException&gt;</ph> is thrown if the resulting year is outside the era of the specified <ph id=\"ph2\">&lt;xref:System.DateTime&gt;</ph>.","pos":[397,531],"source":" Therefore, <xref:System.ArgumentException> is thrown if the resulting year is outside the era of the specified <xref:System.DateTime>."},{"content":"The time-of-day part of the resulting <ph id=\"ph1\">&lt;xref:System.DateTime&gt;</ph> remains the same as the specified <ph id=\"ph2\">&lt;xref:System.DateTime&gt;</ph>.","pos":[532,650],"source":" The time-of-day part of the resulting <xref:System.DateTime> remains the same as the specified <xref:System.DateTime>."}]}]},{"pos":[657,903],"content":"For example, February has 28 days, except during leap years when it has 29 days. If the specified date is the 29th day of February in a leap year and the value of `years` is 1, the resulting date is the 28th day of February in the following year.","nodes":[{"content":"For example, February has 28 days, except during leap years when it has 29 days.","pos":[0,80]},{"content":"If the specified date is the 29th day of February in a leap year and the value of <ph id=\"ph1\">`years`</ph> is 1, the resulting date is the 28th day of February in the following year.","pos":[81,246],"source":" If the specified date is the 29th day of February in a leap year and the value of `years` is 1, the resulting date is the 28th day of February in the following year."}]},{"pos":[910,1024],"content":"If <ph id=\"ph1\">`years`</ph> is negative, the resulting <ph id=\"ph2\">&lt;xref:System.DateTime&gt;</ph> is earlier than the specified <ph id=\"ph3\">&lt;xref:System.DateTime&gt;</ph>.","source":"If `years` is negative, the resulting <xref:System.DateTime> is earlier than the specified <xref:System.DateTime>."},{"pos":[1031,1388],"content":"The<xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> value always equals <xref:System.DateTimeKind?displayProperty=fullName>. You can preserve the <xref:System.DateTime.Kind%2A> property of the `time` parameter by calling the <xref:System.DateTime.SpecifyKind%2A?displayProperty=fullName> method, as the following example shows.","nodes":[{"content":"The<ph id=\"ph1\">&lt;xref:System.DateTime.Kind%2A&gt;</ph> property of the returned <ph id=\"ph2\">&lt;xref:System.DateTime&gt;</ph> value always equals <ph id=\"ph3\">&lt;xref:System.DateTimeKind?displayProperty=fullName&gt;</ph>.","pos":[0,154],"source":"The<xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> value always equals <xref:System.DateTimeKind?displayProperty=fullName>."},{"content":"You can preserve the <ph id=\"ph1\">&lt;xref:System.DateTime.Kind%2A&gt;</ph> property of the <ph id=\"ph2\">`time`</ph> parameter by calling the <ph id=\"ph3\">&lt;xref:System.DateTime.SpecifyKind%2A?displayProperty=fullName&gt;</ph> method, as the following example shows.","pos":[155,357],"source":" You can preserve the <xref:System.DateTime.Kind%2A> property of the `time` parameter by calling the <xref:System.DateTime.SpecifyKind%2A?displayProperty=fullName> method, as the following example shows."}]},{"pos":[1395,1722],"content":"<bpt id=\"p1\">[!code-csharp</bpt><bpt id=\"p2\">[</bpt>System.Globalization.Calendar.AddMethods#8<ept id=\"p2\">](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.calendar.addmethods/cs/add1.cs#8)</ept><ept id=\"p1\">]</ept> <bpt id=\"p3\">[!code-vb</bpt><bpt id=\"p4\">[</bpt>System.Globalization.Calendar.AddMethods#8<ept id=\"p4\">](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.calendar.addmethods/vb/add1.vb#8)</ept><ept id=\"p3\">]</ept>","source":"[!code-csharp[System.Globalization.Calendar.AddMethods#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.calendar.addmethods/cs/add1.cs#8)]\n [!code-vb[System.Globalization.Calendar.AddMethods#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.calendar.addmethods/vb/add1.vb#8)]"}],"pos":[15397,17131],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.DateTime\"></xref> to which to add years.","nodes":[{"pos":[0,63],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.DateTime\"&gt;&lt;/xref&gt;</ph> to which to add years.","source":"The <xref href=\"System.DateTime\"></xref> to which to add years."}],"pos":[18002,18066],"yaml":true},{"content":"The number of years to add.","nodes":[{"pos":[0,27],"content":"The number of years to add.","nodes":[{"content":"The number of years to add.","pos":[0,27]}]}],"pos":[18126,18154],"yaml":true},{"content":"The <xref href=\"System.DateTime\"></xref> that results from adding the specified number of years to the specified <xref href=\"System.DateTime\"></xref>.","nodes":[{"pos":[0,150],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.DateTime\"&gt;&lt;/xref&gt;</ph> that results from adding the specified number of years to the specified <ph id=\"ph2\">&lt;xref href=\"System.DateTime\"&gt;&lt;/xref&gt;</ph>.","source":"The <xref href=\"System.DateTime\"></xref> that results from adding the specified number of years to the specified <xref href=\"System.DateTime\"></xref>."}],"pos":[18213,18364],"yaml":true},{"content":"<code>years</code> or <code>time</code> is out of range.","nodes":[{"pos":[0,56],"content":"<ph id=\"ph1\">&lt;code&gt;years&lt;/code&gt;</ph> or <ph id=\"ph2\">&lt;code&gt;time&lt;/code&gt;</ph> is out of range.","source":"<code>years</code> or <code>time</code> is out of range."}],"pos":[18550,18607],"yaml":true},{"content":"Gets a value indicating whether the current calendar is solar-based, lunar-based, or a combination of both.","nodes":[{"pos":[0,107],"content":"Gets a value indicating whether the current calendar is solar-based, lunar-based, or a combination of both.","nodes":[{"content":"Gets a value indicating whether the current calendar is solar-based, lunar-based, or a combination of both.","pos":[0,107]}]}],"pos":[19963,20071],"yaml":true},{"content":"Always returns <xref href=\"System.Globalization.CalendarAlgorithmType.SolarCalendar\"></xref>.","nodes":[{"pos":[0,93],"content":"Always returns <ph id=\"ph1\">&lt;xref href=\"System.Globalization.CalendarAlgorithmType.SolarCalendar\"&gt;&lt;/xref&gt;</ph>.","source":"Always returns <xref href=\"System.Globalization.CalendarAlgorithmType.SolarCalendar\"></xref>."}],"pos":[20951,21045],"yaml":true},{"content":"Gets the list of eras in the <xref href=\"System.Globalization.KoreanCalendar\"></xref>.","nodes":[{"pos":[0,86],"content":"Gets the list of eras in the <ph id=\"ph1\">&lt;xref href=\"System.Globalization.KoreanCalendar\"&gt;&lt;/xref&gt;</ph>.","source":"Gets the list of eras in the <xref href=\"System.Globalization.KoreanCalendar\"></xref>."}],"pos":[22353,22440],"yaml":true},{"content":"The <xref:System.Globalization.KoreanCalendar> class recognizes only the current era. This property always returns an array with only one element.","nodes":[{"pos":[0,146],"content":"The <xref:System.Globalization.KoreanCalendar> class recognizes only the current era. This property always returns an array with only one element.","nodes":[{"content":"The <xref:System.Globalization.KoreanCalendar> class recognizes only the current era. This property always returns an array with only one element.","pos":[0,146],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Globalization.KoreanCalendar&gt;</ph> class recognizes only the current era.","pos":[0,85],"source":"The <xref:System.Globalization.KoreanCalendar> class recognizes only the current era."},{"content":"This property always returns an array with only one element.","pos":[86,146]}]}]}],"pos":[22451,22598],"yaml":true,"extradata":"MT"},{"content":"An array of integers that represents the eras in the <xref href=\"System.Globalization.KoreanCalendar\"></xref>.","nodes":[{"pos":[0,110],"content":"An array of integers that represents the eras in the <ph id=\"ph1\">&lt;xref href=\"System.Globalization.KoreanCalendar\"&gt;&lt;/xref&gt;</ph>.","source":"An array of integers that represents the eras in the <xref href=\"System.Globalization.KoreanCalendar\"></xref>."}],"pos":[22715,22826],"yaml":true},{"content":"Returns the day of the month in the specified <xref href=\"System.DateTime\"></xref>.","nodes":[{"pos":[0,83],"content":"Returns the day of the month in the specified <ph id=\"ph1\">&lt;xref href=\"System.DateTime\"&gt;&lt;/xref&gt;</ph>.","source":"Returns the day of the month in the specified <xref href=\"System.DateTime\"></xref>."}],"pos":[24367,24451],"yaml":true},{"content":"The <xref href=\"System.DateTime\"></xref> to read.","nodes":[{"pos":[0,49],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.DateTime\"&gt;&lt;/xref&gt;</ph> to read.","source":"The <xref href=\"System.DateTime\"></xref> to read."}],"pos":[25325,25375],"yaml":true},{"content":"An integer from 1 to 31 that represents the day of the month in the specified <xref href=\"System.DateTime\"></xref>.","nodes":[{"pos":[0,115],"content":"An integer from 1 to 31 that represents the day of the month in the specified <ph id=\"ph1\">&lt;xref href=\"System.DateTime\"&gt;&lt;/xref&gt;</ph>.","source":"An integer from 1 to 31 that represents the day of the month in the specified <xref href=\"System.DateTime\"></xref>."}],"pos":[25431,25547],"yaml":true},{"content":"Returns the day of the week in the specified <xref href=\"System.DateTime\"></xref>.","nodes":[{"pos":[0,82],"content":"Returns the day of the week in the specified <ph id=\"ph1\">&lt;xref href=\"System.DateTime\"&gt;&lt;/xref&gt;</ph>.","source":"Returns the day of the week in the specified <xref href=\"System.DateTime\"></xref>."}],"pos":[27091,27174],"yaml":true},{"content":"The <xref:System.DayOfWeek> values are as follows:  \n  \n|DayOfWeek value|Which indicates|  \n|---------------------|---------------------|  \n|Sunday|일요일|  \n|Monday|월요일|  \n|Tuesday|화요일|  \n|Wednesday|수요일|  \n|Thursday|목요일|  \n|Friday|금요일|  \n|Saturday|토요일|","nodes":[{"pos":[0,50],"content":"The <xref:System.DayOfWeek> values are as follows:","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.DayOfWeek&gt;</ph> values are as follows:","pos":[0,50],"source":"The <xref:System.DayOfWeek> values are as follows:"}]},{"pos":[57,72],"content":"DayOfWeek value","nodes":[{"content":"DayOfWeek value","pos":[0,15]}]},{"pos":[73,88],"content":"Which indicates","nodes":[{"content":"Which indicates","pos":[0,15]}]},{"pos":[141,147],"content":"Sunday","nodes":[{"content":"Sunday","pos":[0,6]}]},{"pos":[148,151],"content":"일요일","nodes":[{"content":"일요일","pos":[0,3]}]},{"pos":[156,162],"content":"Monday","nodes":[{"content":"Monday","pos":[0,6]}]},{"pos":[163,166],"content":"월요일","nodes":[{"content":"월요일","pos":[0,3]}]},{"pos":[171,178],"content":"Tuesday","nodes":[{"content":"Tuesday","pos":[0,7]}]},{"pos":[179,182],"content":"화요일","nodes":[{"content":"화요일","pos":[0,3]}]},{"pos":[187,196],"content":"Wednesday","nodes":[{"content":"Wednesday","pos":[0,9]}]},{"pos":[197,200],"content":"수요일","nodes":[{"content":"수요일","pos":[0,3]}]},{"pos":[205,213],"content":"Thursday","nodes":[{"content":"Thursday","pos":[0,8]}]},{"pos":[214,217],"content":"목요일","nodes":[{"content":"목요일","pos":[0,3]}]},{"pos":[222,228],"content":"Friday","nodes":[{"content":"Friday","pos":[0,6]}]},{"pos":[229,232],"content":"금요일","nodes":[{"content":"금요일","pos":[0,3]}]},{"pos":[237,245],"content":"Saturday","nodes":[{"content":"Saturday","pos":[0,8]}]},{"pos":[246,249],"content":"토요일","nodes":[{"content":"토요일","pos":[0,3]}]}],"pos":[27185,27448],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.DateTime\"></xref> to read.","nodes":[{"pos":[0,49],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.DateTime\"&gt;&lt;/xref&gt;</ph> to read.","source":"The <xref href=\"System.DateTime\"></xref> to read."}],"pos":[28313,28363],"yaml":true},{"content":"A <xref href=\"System.DayOfWeek\"></xref> value that represents the day of the week in the specified <xref href=\"System.DateTime\"></xref>.","nodes":[{"pos":[0,136],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.DayOfWeek\"&gt;&lt;/xref&gt;</ph> value that represents the day of the week in the specified <ph id=\"ph2\">&lt;xref href=\"System.DateTime\"&gt;&lt;/xref&gt;</ph>.","source":"A <xref href=\"System.DayOfWeek\"></xref> value that represents the day of the week in the specified <xref href=\"System.DateTime\"></xref>."}],"pos":[28423,28560],"yaml":true},{"content":"Returns the day of the year in the specified <xref href=\"System.DateTime\"></xref>.","nodes":[{"pos":[0,82],"content":"Returns the day of the year in the specified <ph id=\"ph1\">&lt;xref href=\"System.DateTime\"&gt;&lt;/xref&gt;</ph>.","source":"Returns the day of the year in the specified <xref href=\"System.DateTime\"></xref>."}],"pos":[30103,30186],"yaml":true},{"content":"The day of the year is defined as the number of days from the first day of the year. For example, <xref:System.Globalization.KoreanCalendar.GetDayOfYear%2A> for the first day of the first month returns 1, and <xref:System.Globalization.KoreanCalendar.GetDayOfYear%2A> for the last day of the last month returns the total number of days in that year. The total is the same value as that returned by <xref:System.Globalization.KoreanCalendar.GetDaysInYear%2A>.","nodes":[{"pos":[0,458],"content":"The day of the year is defined as the number of days from the first day of the year. For example, <xref:System.Globalization.KoreanCalendar.GetDayOfYear%2A> for the first day of the first month returns 1, and <xref:System.Globalization.KoreanCalendar.GetDayOfYear%2A> for the last day of the last month returns the total number of days in that year. The total is the same value as that returned by <xref:System.Globalization.KoreanCalendar.GetDaysInYear%2A>.","nodes":[{"content":"The day of the year is defined as the number of days from the first day of the year. For example, <xref:System.Globalization.KoreanCalendar.GetDayOfYear%2A> for the first day of the first month returns 1, and <xref:System.Globalization.KoreanCalendar.GetDayOfYear%2A> for the last day of the last month returns the total number of days in that year. The total is the same value as that returned by <xref:System.Globalization.KoreanCalendar.GetDaysInYear%2A>.","pos":[0,458],"nodes":[{"content":"The day of the year is defined as the number of days from the first day of the year.","pos":[0,84]},{"content":"For example, <ph id=\"ph1\">&lt;xref:System.Globalization.KoreanCalendar.GetDayOfYear%2A&gt;</ph> for the first day of the first month returns 1, and <ph id=\"ph2\">&lt;xref:System.Globalization.KoreanCalendar.GetDayOfYear%2A&gt;</ph> for the last day of the last month returns the total number of days in that year.","pos":[85,349],"source":" For example, <xref:System.Globalization.KoreanCalendar.GetDayOfYear%2A> for the first day of the first month returns 1, and <xref:System.Globalization.KoreanCalendar.GetDayOfYear%2A> for the last day of the last month returns the total number of days in that year."},{"content":"The total is the same value as that returned by <ph id=\"ph1\">&lt;xref:System.Globalization.KoreanCalendar.GetDaysInYear%2A&gt;</ph>.","pos":[350,458],"source":" The total is the same value as that returned by <xref:System.Globalization.KoreanCalendar.GetDaysInYear%2A>."}]}]}],"pos":[30197,30656],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.DateTime\"></xref> to read.","nodes":[{"pos":[0,49],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.DateTime\"&gt;&lt;/xref&gt;</ph> to read.","source":"The <xref href=\"System.DateTime\"></xref> to read."}],"pos":[31515,31565],"yaml":true},{"content":"An integer from 1 to 366 that represents the day of the year in the specified <xref href=\"System.DateTime\"></xref>.","nodes":[{"pos":[0,115],"content":"An integer from 1 to 366 that represents the day of the year in the specified <ph id=\"ph1\">&lt;xref href=\"System.DateTime\"&gt;&lt;/xref&gt;</ph>.","source":"An integer from 1 to 366 that represents the day of the year in the specified <xref href=\"System.DateTime\"></xref>."}],"pos":[31621,31737],"yaml":true},{"content":"Returns the number of days in the specified month in the specified year in the specified era.","nodes":[{"pos":[0,93],"content":"Returns the number of days in the specified month in the specified year in the specified era.","nodes":[{"content":"Returns the number of days in the specified month in the specified year in the specified era.","pos":[0,93]}]}],"pos":[33394,33488],"yaml":true},{"content":"For example, this method returns 28 or 29 for February (`month` = 2), depending on whether `year` is a leap year.","nodes":[{"pos":[0,113],"content":"For example, this method returns 28 or 29 for February (<ph id=\"ph1\">`month`</ph> = 2), depending on whether <ph id=\"ph2\">`year`</ph> is a leap year.","source":"For example, this method returns 28 or 29 for February (`month` = 2), depending on whether `year` is a leap year."}],"pos":[33499,33613],"yaml":true,"extradata":"MT"},{"content":"An integer that represents the year.","nodes":[{"pos":[0,36],"content":"An integer that represents the year.","nodes":[{"content":"An integer that represents the year.","pos":[0,36]}]}],"pos":[34532,34569],"yaml":true},{"content":"An integer from 1 to 12 that represents the month.","nodes":[{"pos":[0,50],"content":"An integer from 1 to 12 that represents the month.","nodes":[{"content":"An integer from 1 to 12 that represents the month.","pos":[0,50]}]}],"pos":[34629,34680],"yaml":true},{"content":"An integer that represents the era.","nodes":[{"pos":[0,35],"content":"An integer that represents the era.","nodes":[{"content":"An integer that represents the era.","pos":[0,35]}]}],"pos":[34738,34774],"yaml":true},{"content":"The number of days in the specified month in the specified year in the specified era.","nodes":[{"pos":[0,85],"content":"The number of days in the specified month in the specified year in the specified era.","nodes":[{"content":"The number of days in the specified month in the specified year in the specified era.","pos":[0,85]}]}],"pos":[34830,34916],"yaml":true},{"content":"<code>year</code> is outside the range supported by the calendar.  \n  \n -or-  \n  \n <code>month</code> is outside the range supported by the calendar.  \n  \n -or-  \n  \n <code>era</code> is outside the range supported by the calendar.","nodes":[{"pos":[0,65],"content":"<ph id=\"ph1\">&lt;code&gt;year&lt;/code&gt;</ph> is outside the range supported by the calendar.","source":"<code>year</code> is outside the range supported by the calendar."},{"pos":[72,76],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[83,149],"content":"<ph id=\"ph1\">&lt;code&gt;month&lt;/code&gt;</ph> is outside the range supported by the calendar.","source":"<code>month</code> is outside the range supported by the calendar."},{"pos":[156,160],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[167,231],"content":"<ph id=\"ph1\">&lt;code&gt;era&lt;/code&gt;</ph> is outside the range supported by the calendar.","source":"<code>era</code> is outside the range supported by the calendar."}],"pos":[35108,35350],"yaml":true},{"content":"Returns the number of days in the specified year in the specified era.","nodes":[{"pos":[0,70],"content":"Returns the number of days in the specified year in the specified era.","nodes":[{"content":"Returns the number of days in the specified year in the specified era.","pos":[0,70]}]}],"pos":[36862,36933],"yaml":true},{"content":"For example, this method returns 365 or 366, depending on whether `year` is a leap year.","nodes":[{"pos":[0,88],"content":"For example, this method returns 365 or 366, depending on whether <ph id=\"ph1\">`year`</ph> is a leap year.","source":"For example, this method returns 365 or 366, depending on whether `year` is a leap year."}],"pos":[36944,37033],"yaml":true,"extradata":"MT"},{"content":"An integer that represents the year.","nodes":[{"pos":[0,36],"content":"An integer that represents the year.","nodes":[{"content":"An integer that represents the year.","pos":[0,36]}]}],"pos":[37943,37980],"yaml":true},{"content":"An integer that represents the era.","nodes":[{"pos":[0,35],"content":"An integer that represents the era.","nodes":[{"content":"An integer that represents the era.","pos":[0,35]}]}],"pos":[38038,38074],"yaml":true},{"content":"The number of days in the specified year in the specified era.","nodes":[{"pos":[0,62],"content":"The number of days in the specified year in the specified era.","nodes":[{"content":"The number of days in the specified year in the specified era.","pos":[0,62]}]}],"pos":[38130,38193],"yaml":true},{"content":"<code>year</code> is outside the range supported by the calendar.  \n  \n -or-  \n  \n <code>era</code> is outside the range supported by the calendar.","nodes":[{"pos":[0,65],"content":"<ph id=\"ph1\">&lt;code&gt;year&lt;/code&gt;</ph> is outside the range supported by the calendar.","source":"<code>year</code> is outside the range supported by the calendar."},{"pos":[72,76],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[83,147],"content":"<ph id=\"ph1\">&lt;code&gt;era&lt;/code&gt;</ph> is outside the range supported by the calendar.","source":"<code>era</code> is outside the range supported by the calendar."}],"pos":[38384,38538],"yaml":true},{"content":"Returns the era in the specified <xref href=\"System.DateTime\"></xref>.","nodes":[{"pos":[0,70],"content":"Returns the era in the specified <ph id=\"ph1\">&lt;xref href=\"System.DateTime\"&gt;&lt;/xref&gt;</ph>.","source":"Returns the era in the specified <xref href=\"System.DateTime\"></xref>."}],"pos":[39966,40037],"yaml":true},{"content":"The <xref:System.Globalization.KoreanCalendar> class recognizes only the current era.","nodes":[{"pos":[0,85],"content":"The <xref:System.Globalization.KoreanCalendar> class recognizes only the current era.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Globalization.KoreanCalendar&gt;</ph> class recognizes only the current era.","pos":[0,85],"source":"The <xref:System.Globalization.KoreanCalendar> class recognizes only the current era."}]}],"pos":[40048,40134],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.DateTime\"></xref> to read.","nodes":[{"pos":[0,49],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.DateTime\"&gt;&lt;/xref&gt;</ph> to read.","source":"The <xref href=\"System.DateTime\"></xref> to read."}],"pos":[40987,41037],"yaml":true},{"content":"An integer that represents the era in the specified <xref href=\"System.DateTime\"></xref>.","nodes":[{"pos":[0,89],"content":"An integer that represents the era in the specified <ph id=\"ph1\">&lt;xref href=\"System.DateTime\"&gt;&lt;/xref&gt;</ph>.","source":"An integer that represents the era in the specified <xref href=\"System.DateTime\"></xref>."}],"pos":[41093,41183],"yaml":true},{"content":"Calculates the leap month for a specified year and era.","nodes":[{"pos":[0,55],"content":"Calculates the leap month for a specified year and era.","nodes":[{"content":"Calculates the leap month for a specified year and era.","pos":[0,55]}]}],"pos":[42762,42818],"yaml":true},{"content":"In a calendar that supports the notion of a leap month, the leap month can occur either after a particular month or after any month in a year. For example, the <xref:System.Globalization.EastAsianLunisolarCalendar.GetMonth%28System.DateTime%29?displayProperty=fullName> method returns a number between 1 and 13 that indicates the month associated with a specified date. If there is a leap month between the eighth and ninth months of the year, the <xref:System.Globalization.EastAsianLunisolarCalendar.GetMonth%2A> method returns 8 for the eighth month, 9 for the leap eighth month, and 10 for the ninth month.","nodes":[{"pos":[0,610],"content":"In a calendar that supports the notion of a leap month, the leap month can occur either after a particular month or after any month in a year. For example, the <xref:System.Globalization.EastAsianLunisolarCalendar.GetMonth%28System.DateTime%29?displayProperty=fullName> method returns a number between 1 and 13 that indicates the month associated with a specified date. If there is a leap month between the eighth and ninth months of the year, the <xref:System.Globalization.EastAsianLunisolarCalendar.GetMonth%2A> method returns 8 for the eighth month, 9 for the leap eighth month, and 10 for the ninth month.","nodes":[{"content":"In a calendar that supports the notion of a leap month, the leap month can occur either after a particular month or after any month in a year. For example, the <xref:System.Globalization.EastAsianLunisolarCalendar.GetMonth%28System.DateTime%29?displayProperty=fullName> method returns a number between 1 and 13 that indicates the month associated with a specified date. If there is a leap month between the eighth and ninth months of the year, the <xref:System.Globalization.EastAsianLunisolarCalendar.GetMonth%2A> method returns 8 for the eighth month, 9 for the leap eighth month, and 10 for the ninth month.","pos":[0,610],"nodes":[{"content":"In a calendar that supports the notion of a leap month, the leap month can occur either after a particular month or after any month in a year.","pos":[0,142]},{"content":"For example, the <ph id=\"ph1\">&lt;xref:System.Globalization.EastAsianLunisolarCalendar.GetMonth%28System.DateTime%29?displayProperty=fullName&gt;</ph> method returns a number between 1 and 13 that indicates the month associated with a specified date.","pos":[143,369],"source":" For example, the <xref:System.Globalization.EastAsianLunisolarCalendar.GetMonth%28System.DateTime%29?displayProperty=fullName> method returns a number between 1 and 13 that indicates the month associated with a specified date."},{"content":"If there is a leap month between the eighth and ninth months of the year, the <ph id=\"ph1\">&lt;xref:System.Globalization.EastAsianLunisolarCalendar.GetMonth%2A&gt;</ph> method returns 8 for the eighth month, 9 for the leap eighth month, and 10 for the ninth month.","pos":[370,610],"source":" If there is a leap month between the eighth and ninth months of the year, the <xref:System.Globalization.EastAsianLunisolarCalendar.GetMonth%2A> method returns 8 for the eighth month, 9 for the leap eighth month, and 10 for the ninth month."}]}]}],"pos":[42829,43440],"yaml":true,"extradata":"MT"},{"content":"A year.","nodes":[{"pos":[0,7],"content":"A year.","nodes":[{"content":"A year.","pos":[0,7]}]}],"pos":[43659,43667],"yaml":true},{"content":"An era.","nodes":[{"pos":[0,7],"content":"An era.","nodes":[{"content":"An era.","pos":[0,7]}]}],"pos":[43725,43733],"yaml":true},{"content":"The return value is always 0 because the <xref href=\"System.Globalization.KoreanCalendar\"></xref> class does not support the notion of a leap month.","nodes":[{"pos":[0,148],"content":"The return value is always 0 because the <ph id=\"ph1\">&lt;xref href=\"System.Globalization.KoreanCalendar\"&gt;&lt;/xref&gt;</ph> class does not support the notion of a leap month.","source":"The return value is always 0 because the <xref href=\"System.Globalization.KoreanCalendar\"></xref> class does not support the notion of a leap month."}],"pos":[43789,43938],"yaml":true},{"content":"Returns the month in the specified <xref href=\"System.DateTime\"></xref>.","nodes":[{"pos":[0,72],"content":"Returns the month in the specified <ph id=\"ph1\">&lt;xref href=\"System.DateTime\"&gt;&lt;/xref&gt;</ph>.","source":"Returns the month in the specified <xref href=\"System.DateTime\"></xref>."}],"pos":[45532,45605],"yaml":true},{"content":"The <xref href=\"System.DateTime\"></xref> to read.","nodes":[{"pos":[0,49],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.DateTime\"&gt;&lt;/xref&gt;</ph> to read.","source":"The <xref href=\"System.DateTime\"></xref> to read."}],"pos":[46474,46524],"yaml":true},{"content":"An integer from 1 to 12 that represents the month in the specified <xref href=\"System.DateTime\"></xref>.","nodes":[{"pos":[0,104],"content":"An integer from 1 to 12 that represents the month in the specified <ph id=\"ph1\">&lt;xref href=\"System.DateTime\"&gt;&lt;/xref&gt;</ph>.","source":"An integer from 1 to 12 that represents the month in the specified <xref href=\"System.DateTime\"></xref>."}],"pos":[46580,46685],"yaml":true},{"content":"Returns the number of months in the specified year in the specified era.","nodes":[{"pos":[0,72],"content":"Returns the number of months in the specified year in the specified era.","nodes":[{"content":"Returns the number of months in the specified year in the specified era.","pos":[0,72]}]}],"pos":[48284,48357],"yaml":true},{"content":"An integer that represents the year.","nodes":[{"pos":[0,36],"content":"An integer that represents the year.","nodes":[{"content":"An integer that represents the year.","pos":[0,36]}]}],"pos":[49303,49340],"yaml":true},{"content":"An integer that represents the era.","nodes":[{"pos":[0,35],"content":"An integer that represents the era.","nodes":[{"content":"An integer that represents the era.","pos":[0,35]}]}],"pos":[49398,49434],"yaml":true},{"content":"The number of months in the specified year in the specified era.","nodes":[{"pos":[0,64],"content":"The number of months in the specified year in the specified era.","nodes":[{"content":"The number of months in the specified year in the specified era.","pos":[0,64]}]}],"pos":[49490,49555],"yaml":true},{"content":"<code>year</code> is outside the range supported by the calendar.  \n  \n -or-  \n  \n <code>era</code> is outside the range supported by the calendar.","nodes":[{"pos":[0,65],"content":"<ph id=\"ph1\">&lt;code&gt;year&lt;/code&gt;</ph> is outside the range supported by the calendar.","source":"<code>year</code> is outside the range supported by the calendar."},{"pos":[72,76],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[83,147],"content":"<ph id=\"ph1\">&lt;code&gt;era&lt;/code&gt;</ph> is outside the range supported by the calendar.","source":"<code>era</code> is outside the range supported by the calendar."}],"pos":[49748,49902],"yaml":true},{"content":"Returns the week of the year that includes the date in the specified <xref href=\"System.DateTime\"></xref>.","nodes":[{"pos":[0,106],"content":"Returns the week of the year that includes the date in the specified <ph id=\"ph1\">&lt;xref href=\"System.DateTime\"&gt;&lt;/xref&gt;</ph>.","source":"Returns the week of the year that includes the date in the specified <xref href=\"System.DateTime\"></xref>."}],"pos":[51624,51731],"yaml":true},{"content":"This method can be used to determine the number of weeks in the year by setting the `time` parameter to the last day of the year.  \n  \n <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=fullName> contains culture-specific values that can be used for the `rule` and `firstDayOfWeek` parameters.  \n  \n The <xref:System.Globalization.DateTimeFormatInfo.FirstDayOfWeek%2A> property of <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=fullName> contains the default <xref:System.DayOfWeek> value that represents the first day of the week for a specific culture, using the calendar specified in the <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> property of <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=fullName>.  \n  \n The <xref:System.Globalization.DateTimeFormatInfo.CalendarWeekRule%2A> property of <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=fullName> contains the default <xref:System.Globalization.CalendarWeekRule> value that defines a calendar week for a specific culture, using the calendar specified in the <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> property of <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=fullName>.  \n  \n For example, in <xref:System.Globalization.GregorianCalendar>, <xref:System.Globalization.Calendar.GetWeekOfYear%2A> for January 1 returns 1.","nodes":[{"pos":[0,129],"content":"This method can be used to determine the number of weeks in the year by setting the <ph id=\"ph1\">`time`</ph> parameter to the last day of the year.","source":"This method can be used to determine the number of weeks in the year by setting the `time` parameter to the last day of the year."},{"pos":[136,316],"content":"<ph id=\"ph1\">&lt;xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=fullName&gt;</ph> contains culture-specific values that can be used for the <ph id=\"ph2\">`rule`</ph> and <ph id=\"ph3\">`firstDayOfWeek`</ph> parameters.","source":"<xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=fullName> contains culture-specific values that can be used for the `rule` and `firstDayOfWeek` parameters."},{"pos":[323,794],"content":"The <xref:System.Globalization.DateTimeFormatInfo.FirstDayOfWeek%2A> property of <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=fullName> contains the default <xref:System.DayOfWeek> value that represents the first day of the week for a specific culture, using the calendar specified in the <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> property of <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=fullName>.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Globalization.DateTimeFormatInfo.FirstDayOfWeek%2A&gt;</ph> property of <ph id=\"ph2\">&lt;xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=fullName&gt;</ph> contains the default <ph id=\"ph3\">&lt;xref:System.DayOfWeek&gt;</ph> value that represents the first day of the week for a specific culture, using the calendar specified in the <ph id=\"ph4\">&lt;xref:System.Globalization.DateTimeFormatInfo.Calendar%2A&gt;</ph> property of <ph id=\"ph5\">&lt;xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=fullName&gt;</ph>.","pos":[0,471],"source":"The <xref:System.Globalization.DateTimeFormatInfo.FirstDayOfWeek%2A> property of <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=fullName> contains the default <xref:System.DayOfWeek> value that represents the first day of the week for a specific culture, using the calendar specified in the <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> property of <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=fullName>."}]},{"pos":[801,1282],"content":"The <xref:System.Globalization.DateTimeFormatInfo.CalendarWeekRule%2A> property of <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=fullName> contains the default <xref:System.Globalization.CalendarWeekRule> value that defines a calendar week for a specific culture, using the calendar specified in the <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> property of <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=fullName>.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Globalization.DateTimeFormatInfo.CalendarWeekRule%2A&gt;</ph> property of <ph id=\"ph2\">&lt;xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=fullName&gt;</ph> contains the default <ph id=\"ph3\">&lt;xref:System.Globalization.CalendarWeekRule&gt;</ph> value that defines a calendar week for a specific culture, using the calendar specified in the <ph id=\"ph4\">&lt;xref:System.Globalization.DateTimeFormatInfo.Calendar%2A&gt;</ph> property of <ph id=\"ph5\">&lt;xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=fullName&gt;</ph>.","pos":[0,481],"source":"The <xref:System.Globalization.DateTimeFormatInfo.CalendarWeekRule%2A> property of <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=fullName> contains the default <xref:System.Globalization.CalendarWeekRule> value that defines a calendar week for a specific culture, using the calendar specified in the <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> property of <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=fullName>."}]},{"pos":[1289,1430],"content":"For example, in <xref:System.Globalization.GregorianCalendar>, <xref:System.Globalization.Calendar.GetWeekOfYear%2A> for January 1 returns 1.","nodes":[{"content":"For example, in <ph id=\"ph1\">&lt;xref:System.Globalization.GregorianCalendar&gt;</ph>, <ph id=\"ph2\">&lt;xref:System.Globalization.Calendar.GetWeekOfYear%2A&gt;</ph> for January 1 returns 1.","pos":[0,141],"source":"For example, in <xref:System.Globalization.GregorianCalendar>, <xref:System.Globalization.Calendar.GetWeekOfYear%2A> for January 1 returns 1."}]}],"pos":[51742,53183],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.DateTime\"></xref> to read.","nodes":[{"pos":[0,49],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.DateTime\"&gt;&lt;/xref&gt;</ph> to read.","source":"The <xref href=\"System.DateTime\"></xref> to read."}],"pos":[54486,54536],"yaml":true},{"content":"One of the <xref href=\"System.Globalization.CalendarWeekRule\"></xref> values that defines a calendar week.","nodes":[{"pos":[0,106],"content":"One of the <ph id=\"ph1\">&lt;xref href=\"System.Globalization.CalendarWeekRule\"&gt;&lt;/xref&gt;</ph> values that defines a calendar week.","source":"One of the <xref href=\"System.Globalization.CalendarWeekRule\"></xref> values that defines a calendar week."}],"pos":[54620,54727],"yaml":true},{"content":"One of the <xref href=\"System.DayOfWeek\"></xref> values that represents the first day of the week.","nodes":[{"pos":[0,98],"content":"One of the <ph id=\"ph1\">&lt;xref href=\"System.DayOfWeek\"&gt;&lt;/xref&gt;</ph> values that represents the first day of the week.","source":"One of the <xref href=\"System.DayOfWeek\"></xref> values that represents the first day of the week."}],"pos":[54800,54899],"yaml":true},{"content":"A 1-based integer that represents the week of the year that includes the date in the <code>time</code> parameter.","nodes":[{"pos":[0,113],"content":"A 1-based integer that represents the week of the year that includes the date in the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">time</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter.","source":"A 1-based integer that represents the week of the year that includes the date in the <code>time</code> parameter."}],"pos":[54955,55069],"yaml":true},{"content":"<code>time</code> or <code>firstDayOfWeek</code> is outside the range supported by the calendar.  \n  \n -or-  \n  \n <code>rule</code> is not a valid <xref href=\"System.Globalization.CalendarWeekRule\"></xref> value.","nodes":[{"pos":[0,96],"content":"<ph id=\"ph1\">&lt;code&gt;time&lt;/code&gt;</ph> or <ph id=\"ph2\">&lt;code&gt;firstDayOfWeek&lt;/code&gt;</ph> is outside the range supported by the calendar.","source":"<code>time</code> or <code>firstDayOfWeek</code> is outside the range supported by the calendar."},{"pos":[103,107],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[114,212],"content":"<ph id=\"ph1\">&lt;code&gt;rule&lt;/code&gt;</ph> is not a valid <ph id=\"ph2\">&lt;xref href=\"System.Globalization.CalendarWeekRule\"&gt;&lt;/xref&gt;</ph> value.","source":"<code>rule</code> is not a valid <xref href=\"System.Globalization.CalendarWeekRule\"></xref> value."}],"pos":[55260,55481],"yaml":true},{"content":"Returns the year in the specified <xref href=\"System.DateTime\"></xref>.","nodes":[{"pos":[0,71],"content":"Returns the year in the specified <ph id=\"ph1\">&lt;xref href=\"System.DateTime\"&gt;&lt;/xref&gt;</ph>.","source":"Returns the year in the specified <xref href=\"System.DateTime\"></xref>."}],"pos":[56990,57062],"yaml":true},{"content":"The <xref href=\"System.DateTime\"></xref> to read.","nodes":[{"pos":[0,49],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.DateTime\"&gt;&lt;/xref&gt;</ph> to read.","source":"The <xref href=\"System.DateTime\"></xref> to read."}],"pos":[57930,57980],"yaml":true},{"content":"An integer that represents the year in the specified <xref href=\"System.DateTime\"></xref>.","nodes":[{"pos":[0,90],"content":"An integer that represents the year in the specified <ph id=\"ph1\">&lt;xref href=\"System.DateTime\"&gt;&lt;/xref&gt;</ph>.","source":"An integer that represents the year in the specified <xref href=\"System.DateTime\"></xref>."}],"pos":[58036,58127],"yaml":true},{"content":"Determines whether the specified date in the specified era is a leap day.","nodes":[{"pos":[0,73],"content":"Determines whether the specified date in the specified era is a leap day.","nodes":[{"content":"Determines whether the specified date in the specified era is a leap day.","pos":[0,73]}]}],"pos":[59809,59883],"yaml":true},{"content":"Leap years in the Korean calendar correspond to the same leap years in the Gregorian calendar. A leap year in the Gregorian calendar is defined as a Gregorian year that is evenly divisible by four, except if it is divisible by 100. However, Gregorian years that are divisible by 400 are leap years. A common year has 365 days and a leap year has 366 days.  \n  \n A leap day is a day that occurs only in a leap year. For example, the 29th day of February is the only leap day.","nodes":[{"pos":[0,355],"content":"Leap years in the Korean calendar correspond to the same leap years in the Gregorian calendar. A leap year in the Gregorian calendar is defined as a Gregorian year that is evenly divisible by four, except if it is divisible by 100. However, Gregorian years that are divisible by 400 are leap years. A common year has 365 days and a leap year has 366 days.","nodes":[{"content":"Leap years in the Korean calendar correspond to the same leap years in the Gregorian calendar. A leap year in the Gregorian calendar is defined as a Gregorian year that is evenly divisible by four, except if it is divisible by 100. However, Gregorian years that are divisible by 400 are leap years. A common year has 365 days and a leap year has 366 days.","pos":[0,355],"nodes":[{"content":"Leap years in the Korean calendar correspond to the same leap years in the Gregorian calendar.","pos":[0,94]},{"content":"A leap year in the Gregorian calendar is defined as a Gregorian year that is evenly divisible by four, except if it is divisible by 100.","pos":[95,231]},{"content":"However, Gregorian years that are divisible by 400 are leap years.","pos":[232,298]},{"content":"A common year has 365 days and a leap year has 366 days.","pos":[299,355]}]}]},{"pos":[362,474],"content":"A leap day is a day that occurs only in a leap year. For example, the 29th day of February is the only leap day.","nodes":[{"content":"A leap day is a day that occurs only in a leap year. For example, the 29th day of February is the only leap day.","pos":[0,112],"nodes":[{"content":"A leap day is a day that occurs only in a leap year.","pos":[0,52]},{"content":"For example, the 29th day of February is the only leap day.","pos":[53,112]}]}]}],"pos":[59894,60373],"yaml":true,"extradata":"MT"},{"content":"An integer that represents the year.","nodes":[{"pos":[0,36],"content":"An integer that represents the year.","nodes":[{"content":"An integer that represents the year.","pos":[0,36]}]}],"pos":[61316,61353],"yaml":true},{"content":"An integer from 1 to 12 that represents the month.","nodes":[{"pos":[0,50],"content":"An integer from 1 to 12 that represents the month.","nodes":[{"content":"An integer from 1 to 12 that represents the month.","pos":[0,50]}]}],"pos":[61413,61464],"yaml":true},{"content":"An integer from 1 to 31 that represents the day.","nodes":[{"pos":[0,48],"content":"An integer from 1 to 31 that represents the day.","nodes":[{"content":"An integer from 1 to 31 that represents the day.","pos":[0,48]}]}],"pos":[61522,61571],"yaml":true},{"content":"An integer that represents the era.","nodes":[{"pos":[0,35],"content":"An integer that represents the era.","nodes":[{"content":"An integer that represents the era.","pos":[0,35]}]}],"pos":[61629,61665],"yaml":true},{"content":"`true` if the specified day is a leap day; otherwise, `false`.","nodes":[{"pos":[0,62],"content":"<ph id=\"ph1\">`true`</ph> if the specified day is a leap day; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the specified day is a leap day; otherwise, `false`."}],"pos":[61723,61788],"yaml":true},{"content":"<code>year</code> is outside the range supported by the calendar.  \n  \n -or-  \n  \n <code>month</code> is outside the range supported by the calendar.  \n  \n -or-  \n  \n <code>day</code> is outside the range supported by the calendar.  \n  \n -or-  \n  \n <code>era</code> is outside the range supported by the calendar.","nodes":[{"pos":[0,65],"content":"<ph id=\"ph1\">&lt;code&gt;year&lt;/code&gt;</ph> is outside the range supported by the calendar.","source":"<code>year</code> is outside the range supported by the calendar."},{"pos":[72,76],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[83,149],"content":"<ph id=\"ph1\">&lt;code&gt;month&lt;/code&gt;</ph> is outside the range supported by the calendar.","source":"<code>month</code> is outside the range supported by the calendar."},{"pos":[156,160],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[167,231],"content":"<ph id=\"ph1\">&lt;code&gt;day&lt;/code&gt;</ph> is outside the range supported by the calendar.","source":"<code>day</code> is outside the range supported by the calendar."},{"pos":[238,242],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[249,313],"content":"<ph id=\"ph1\">&lt;code&gt;era&lt;/code&gt;</ph> is outside the range supported by the calendar.","source":"<code>era</code> is outside the range supported by the calendar."}],"pos":[61975,62303],"yaml":true},{"content":"Determines whether the specified month in the specified year in the specified era is a leap month.","nodes":[{"pos":[0,98],"content":"Determines whether the specified month in the specified year in the specified era is a leap month.","nodes":[{"content":"Determines whether the specified month in the specified year in the specified era is a leap month.","pos":[0,98]}]}],"pos":[63863,63962],"yaml":true},{"content":"Leap years in the Korean calendar correspond to the same leap years in the Gregorian calendar. A leap year in the Gregorian calendar is defined as a Gregorian year that is evenly divisible by four, except if it is divisible by 100. However, Gregorian years that are divisible by 400 are leap years. A common year has 365 days and a leap year has 366 days.  \n  \n A leap month is an entire month that occurs only in a leap year. The Korean calendar does not have any leap months.","nodes":[{"pos":[0,355],"content":"Leap years in the Korean calendar correspond to the same leap years in the Gregorian calendar. A leap year in the Gregorian calendar is defined as a Gregorian year that is evenly divisible by four, except if it is divisible by 100. However, Gregorian years that are divisible by 400 are leap years. A common year has 365 days and a leap year has 366 days.","nodes":[{"content":"Leap years in the Korean calendar correspond to the same leap years in the Gregorian calendar. A leap year in the Gregorian calendar is defined as a Gregorian year that is evenly divisible by four, except if it is divisible by 100. However, Gregorian years that are divisible by 400 are leap years. A common year has 365 days and a leap year has 366 days.","pos":[0,355],"nodes":[{"content":"Leap years in the Korean calendar correspond to the same leap years in the Gregorian calendar.","pos":[0,94]},{"content":"A leap year in the Gregorian calendar is defined as a Gregorian year that is evenly divisible by four, except if it is divisible by 100.","pos":[95,231]},{"content":"However, Gregorian years that are divisible by 400 are leap years.","pos":[232,298]},{"content":"A common year has 365 days and a leap year has 366 days.","pos":[299,355]}]}]},{"pos":[362,477],"content":"A leap month is an entire month that occurs only in a leap year. The Korean calendar does not have any leap months.","nodes":[{"content":"A leap month is an entire month that occurs only in a leap year. The Korean calendar does not have any leap months.","pos":[0,115],"nodes":[{"content":"A leap month is an entire month that occurs only in a leap year.","pos":[0,64]},{"content":"The Korean calendar does not have any leap months.","pos":[65,115]}]}]}],"pos":[63973,64455],"yaml":true,"extradata":"MT"},{"content":"An integer that represents the year.","nodes":[{"pos":[0,36],"content":"An integer that represents the year.","nodes":[{"content":"An integer that represents the year.","pos":[0,36]}]}],"pos":[65380,65417],"yaml":true},{"content":"An integer from 1 to 12 that represents the month.","nodes":[{"pos":[0,50],"content":"An integer from 1 to 12 that represents the month.","nodes":[{"content":"An integer from 1 to 12 that represents the month.","pos":[0,50]}]}],"pos":[65477,65528],"yaml":true},{"content":"An integer that represents the era.","nodes":[{"pos":[0,35],"content":"An integer that represents the era.","nodes":[{"content":"An integer that represents the era.","pos":[0,35]}]}],"pos":[65586,65622],"yaml":true},{"content":"This method always returns `false`, unless overridden by a derived class.","nodes":[{"pos":[0,73],"content":"This method always returns <ph id=\"ph1\">`false`</ph>, unless overridden by a derived class.","source":"This method always returns `false`, unless overridden by a derived class."}],"pos":[65680,65754],"yaml":true},{"content":"<code>year</code> is outside the range supported by the calendar.  \n  \n -or-  \n  \n <code>month</code> is outside the range supported by the calendar.  \n  \n -or-  \n  \n <code>era</code> is outside the range supported by the calendar.","nodes":[{"pos":[0,65],"content":"<ph id=\"ph1\">&lt;code&gt;year&lt;/code&gt;</ph> is outside the range supported by the calendar.","source":"<code>year</code> is outside the range supported by the calendar."},{"pos":[72,76],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[83,149],"content":"<ph id=\"ph1\">&lt;code&gt;month&lt;/code&gt;</ph> is outside the range supported by the calendar.","source":"<code>month</code> is outside the range supported by the calendar."},{"pos":[156,160],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[167,231],"content":"<ph id=\"ph1\">&lt;code&gt;era&lt;/code&gt;</ph> is outside the range supported by the calendar.","source":"<code>era</code> is outside the range supported by the calendar."}],"pos":[65943,66185],"yaml":true},{"content":"Determines whether the specified year in the specified era is a leap year.","nodes":[{"pos":[0,74],"content":"Determines whether the specified year in the specified era is a leap year.","nodes":[{"content":"Determines whether the specified year in the specified era is a leap year.","pos":[0,74]}]}],"pos":[67679,67754],"yaml":true},{"content":"Leap years in the Korean calendar correspond to the same leap years in the Gregorian calendar. A leap year in the Gregorian calendar is defined as a Gregorian year that is evenly divisible by four, except if it is divisible by 100. However, Gregorian years that are divisible by 400 are leap years. A common year has 365 days and a leap year has 366 days.","nodes":[{"pos":[0,355],"content":"Leap years in the Korean calendar correspond to the same leap years in the Gregorian calendar. A leap year in the Gregorian calendar is defined as a Gregorian year that is evenly divisible by four, except if it is divisible by 100. However, Gregorian years that are divisible by 400 are leap years. A common year has 365 days and a leap year has 366 days.","nodes":[{"content":"Leap years in the Korean calendar correspond to the same leap years in the Gregorian calendar. A leap year in the Gregorian calendar is defined as a Gregorian year that is evenly divisible by four, except if it is divisible by 100. However, Gregorian years that are divisible by 400 are leap years. A common year has 365 days and a leap year has 366 days.","pos":[0,355],"nodes":[{"content":"Leap years in the Korean calendar correspond to the same leap years in the Gregorian calendar.","pos":[0,94]},{"content":"A leap year in the Gregorian calendar is defined as a Gregorian year that is evenly divisible by four, except if it is divisible by 100.","pos":[95,231]},{"content":"However, Gregorian years that are divisible by 400 are leap years.","pos":[232,298]},{"content":"A common year has 365 days and a leap year has 366 days.","pos":[299,355]}]}]}],"pos":[67765,68121],"yaml":true,"extradata":"MT"},{"content":"An integer that represents the year.","nodes":[{"pos":[0,36],"content":"An integer that represents the year.","nodes":[{"content":"An integer that represents the year.","pos":[0,36]}]}],"pos":[69007,69044],"yaml":true},{"content":"An integer that represents the era.","nodes":[{"pos":[0,35],"content":"An integer that represents the era.","nodes":[{"content":"An integer that represents the era.","pos":[0,35]}]}],"pos":[69102,69138],"yaml":true},{"content":"`true` if the specified year is a leap year; otherwise, `false`.","nodes":[{"pos":[0,64],"content":"<ph id=\"ph1\">`true`</ph> if the specified year is a leap year; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the specified year is a leap year; otherwise, `false`."}],"pos":[69196,69263],"yaml":true},{"content":"<code>year</code> is outside the range supported by the calendar.  \n  \n -or-  \n  \n <code>era</code> is outside the range supported by the calendar.","nodes":[{"pos":[0,65],"content":"<ph id=\"ph1\">&lt;code&gt;year&lt;/code&gt;</ph> is outside the range supported by the calendar.","source":"<code>year</code> is outside the range supported by the calendar."},{"pos":[72,76],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[83,147],"content":"<ph id=\"ph1\">&lt;code&gt;era&lt;/code&gt;</ph> is outside the range supported by the calendar.","source":"<code>era</code> is outside the range supported by the calendar."}],"pos":[69451,69605],"yaml":true},{"content":"Represents the current era. This field is constant.","nodes":[{"pos":[0,51],"content":"Represents the current era. This field is constant.","nodes":[{"content":"Represents the current era. This field is constant.","pos":[0,51],"nodes":[{"content":"Represents the current era.","pos":[0,27]},{"content":"This field is constant.","pos":[28,51]}]}]}],"pos":[70934,70986],"yaml":true},{"content":"The <xref:System.Globalization.KoreanCalendar> class recognizes only the current era. This field always returns 1.","nodes":[{"pos":[0,114],"content":"The <xref:System.Globalization.KoreanCalendar> class recognizes only the current era. This field always returns 1.","nodes":[{"content":"The <xref:System.Globalization.KoreanCalendar> class recognizes only the current era. This field always returns 1.","pos":[0,114],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Globalization.KoreanCalendar&gt;</ph> class recognizes only the current era.","pos":[0,85],"source":"The <xref:System.Globalization.KoreanCalendar> class recognizes only the current era."},{"content":"This field always returns 1.","pos":[86,114]}]}]}],"pos":[70997,71112],"yaml":true,"extradata":"MT"},{"content":"Gets the latest date and time supported by the <xref href=\"System.Globalization.KoreanCalendar\"></xref> class.","nodes":[{"pos":[0,110],"content":"Gets the latest date and time supported by the <ph id=\"ph1\">&lt;xref href=\"System.Globalization.KoreanCalendar\"&gt;&lt;/xref&gt;</ph> class.","source":"Gets the latest date and time supported by the <xref href=\"System.Globalization.KoreanCalendar\"></xref> class."}],"pos":[72492,72603],"yaml":true},{"content":"The latest date and time supported by the <xref href=\"System.Globalization.KoreanCalendar\"></xref> class, which is equivalent to the last moment of December 31, 9999 C.E. in the Gregorian calendar.","nodes":[{"pos":[0,197],"content":"The latest date and time supported by the <xref href=\"System.Globalization.KoreanCalendar\"></xref> class, which is equivalent to the last moment of December 31, 9999 C.E. in the Gregorian calendar.","nodes":[{"content":"The latest date and time supported by the <ph id=\"ph1\">&lt;xref href=\"System.Globalization.KoreanCalendar\"&gt;&lt;/xref&gt;</ph> class, which is equivalent to the last moment of December 31, 9999 C.E.","pos":[0,170],"source":"The latest date and time supported by the <xref href=\"System.Globalization.KoreanCalendar\"></xref> class, which is equivalent to the last moment of December 31, 9999 C.E."},{"content":"in the Gregorian calendar.","pos":[171,197]}]}],"pos":[73488,73686],"yaml":true},{"content":"Gets the earliest date and time supported by the <xref href=\"System.Globalization.KoreanCalendar\"></xref> class.","nodes":[{"pos":[0,112],"content":"Gets the earliest date and time supported by the <ph id=\"ph1\">&lt;xref href=\"System.Globalization.KoreanCalendar\"&gt;&lt;/xref&gt;</ph> class.","source":"Gets the earliest date and time supported by the <xref href=\"System.Globalization.KoreanCalendar\"></xref> class."}],"pos":[75281,75394],"yaml":true},{"content":"The earliest date and time supported by the <xref href=\"System.Globalization.KoreanCalendar\"></xref> class, which is equivalent to the first moment of January 1, 0001 C.E. in the Gregorian calendar.","nodes":[{"pos":[0,198],"content":"The earliest date and time supported by the <xref href=\"System.Globalization.KoreanCalendar\"></xref> class, which is equivalent to the first moment of January 1, 0001 C.E. in the Gregorian calendar.","nodes":[{"content":"The earliest date and time supported by the <ph id=\"ph1\">&lt;xref href=\"System.Globalization.KoreanCalendar\"&gt;&lt;/xref&gt;</ph> class, which is equivalent to the first moment of January 1, 0001 C.E.","pos":[0,171],"source":"The earliest date and time supported by the <xref href=\"System.Globalization.KoreanCalendar\"></xref> class, which is equivalent to the first moment of January 1, 0001 C.E."},{"content":"in the Gregorian calendar.","pos":[172,198]}]}],"pos":[76279,76478],"yaml":true},{"content":"Returns a <xref href=\"System.DateTime\"></xref> that is set to the specified date and time in the specified era.","nodes":[{"pos":[0,111],"content":"Returns a <ph id=\"ph1\">&lt;xref href=\"System.DateTime\"&gt;&lt;/xref&gt;</ph> that is set to the specified date and time in the specified era.","source":"Returns a <xref href=\"System.DateTime\"></xref> that is set to the specified date and time in the specified era."}],"pos":[78494,78606],"yaml":true},{"content":"An integer that represents the year.","nodes":[{"pos":[0,36],"content":"An integer that represents the year.","nodes":[{"content":"An integer that represents the year.","pos":[0,36]}]}],"pos":[78832,78869],"yaml":true},{"content":"An integer from 1 to 12 that represents the month.","nodes":[{"pos":[0,50],"content":"An integer from 1 to 12 that represents the month.","nodes":[{"content":"An integer from 1 to 12 that represents the month.","pos":[0,50]}]}],"pos":[78929,78980],"yaml":true},{"content":"An integer from 1 to 31 that represents the day.","nodes":[{"pos":[0,48],"content":"An integer from 1 to 31 that represents the day.","nodes":[{"content":"An integer from 1 to 31 that represents the day.","pos":[0,48]}]}],"pos":[79038,79087],"yaml":true},{"content":"An integer from 0 to 23 that represents the hour.","nodes":[{"pos":[0,49],"content":"An integer from 0 to 23 that represents the hour.","nodes":[{"content":"An integer from 0 to 23 that represents the hour.","pos":[0,49]}]}],"pos":[79146,79196],"yaml":true},{"content":"An integer from 0 to 59 that represents the minute.","nodes":[{"pos":[0,51],"content":"An integer from 0 to 59 that represents the minute.","nodes":[{"content":"An integer from 0 to 59 that represents the minute.","pos":[0,51]}]}],"pos":[79257,79309],"yaml":true},{"content":"An integer from 0 to 59 that represents the second.","nodes":[{"pos":[0,51],"content":"An integer from 0 to 59 that represents the second.","nodes":[{"content":"An integer from 0 to 59 that represents the second.","pos":[0,51]}]}],"pos":[79370,79422],"yaml":true},{"content":"An integer from 0 to 999 that represents the millisecond.","nodes":[{"pos":[0,57],"content":"An integer from 0 to 999 that represents the millisecond.","nodes":[{"content":"An integer from 0 to 999 that represents the millisecond.","pos":[0,57]}]}],"pos":[79488,79546],"yaml":true},{"content":"An integer that represents the era.","nodes":[{"pos":[0,35],"content":"An integer that represents the era.","nodes":[{"content":"An integer that represents the era.","pos":[0,35]}]}],"pos":[79604,79640],"yaml":true},{"content":"The <xref href=\"System.DateTime\"></xref> that is set to the specified date and time in the current era.","nodes":[{"pos":[0,103],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.DateTime\"&gt;&lt;/xref&gt;</ph> that is set to the specified date and time in the current era.","source":"The <xref href=\"System.DateTime\"></xref> that is set to the specified date and time in the current era."}],"pos":[79699,79803],"yaml":true},{"content":"<code>year</code> is outside the range supported by the calendar.  \n  \n -or-  \n  \n <code>month</code> is outside the range supported by the calendar.  \n  \n -or-  \n  \n <code>day</code> is outside the range supported by the calendar.  \n  \n -or-  \n  \n <code>hour</code> is less than zero or greater than 23.  \n  \n -or-  \n  \n <code>minute</code> is less than zero or greater than 59.  \n  \n -or-  \n  \n <code>second</code> is less than zero or greater than 59.  \n  \n -or-  \n  \n <code>millisecond</code> is less than zero or greater than 999.  \n  \n -or-  \n  \n <code>era</code> is outside the range supported by the calendar.","nodes":[{"pos":[0,65],"content":"<ph id=\"ph1\">&lt;code&gt;year&lt;/code&gt;</ph> is outside the range supported by the calendar.","source":"<code>year</code> is outside the range supported by the calendar."},{"pos":[72,76],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[83,149],"content":"<ph id=\"ph1\">&lt;code&gt;month&lt;/code&gt;</ph> is outside the range supported by the calendar.","source":"<code>month</code> is outside the range supported by the calendar."},{"pos":[156,160],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[167,231],"content":"<ph id=\"ph1\">&lt;code&gt;day&lt;/code&gt;</ph> is outside the range supported by the calendar.","source":"<code>day</code> is outside the range supported by the calendar."},{"pos":[238,242],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[249,304],"content":"<ph id=\"ph1\">&lt;code&gt;hour&lt;/code&gt;</ph> is less than zero or greater than 23.","source":"<code>hour</code> is less than zero or greater than 23."},{"pos":[311,315],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[322,379],"content":"<ph id=\"ph1\">&lt;code&gt;minute&lt;/code&gt;</ph> is less than zero or greater than 59.","source":"<code>minute</code> is less than zero or greater than 59."},{"pos":[386,390],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[397,454],"content":"<ph id=\"ph1\">&lt;code&gt;second&lt;/code&gt;</ph> is less than zero or greater than 59.","source":"<code>second</code> is less than zero or greater than 59."},{"pos":[461,465],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[472,535],"content":"<ph id=\"ph1\">&lt;code&gt;millisecond&lt;/code&gt;</ph> is less than zero or greater than 999.","source":"<code>millisecond</code> is less than zero or greater than 999."},{"pos":[542,546],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[553,617],"content":"<ph id=\"ph1\">&lt;code&gt;era&lt;/code&gt;</ph> is outside the range supported by the calendar.","source":"<code>era</code> is outside the range supported by the calendar."}],"pos":[79991,80639],"yaml":true},{"content":"Converts the specified year to a four-digit year by using the <xref href=\"System.Globalization.KoreanCalendar.TwoDigitYearMax\"></xref> property to determine the appropriate century.","nodes":[{"pos":[0,181],"content":"Converts the specified year to a four-digit year by using the <ph id=\"ph1\">&lt;xref href=\"System.Globalization.KoreanCalendar.TwoDigitYearMax\"&gt;&lt;/xref&gt;</ph> property to determine the appropriate century.","source":"Converts the specified year to a four-digit year by using the <xref href=\"System.Globalization.KoreanCalendar.TwoDigitYearMax\"></xref> property to determine the appropriate century."}],"pos":[82103,82285],"yaml":true},{"content":"<xref:System.Globalization.KoreanCalendar.TwoDigitYearMax%2A> defines the last year in the 100-year range that can be represented by <xref:System.Globalization.KoreanCalendar.ToFourDigitYear%2A>. The century is determined by finding the sole occurrence of the two-digit year within that 100-year range. For example, if <xref:System.Globalization.KoreanCalendar.TwoDigitYearMax%2A> is set to 2029, the 100-year range is from 1930 to 2029. Therefore, a two-digit value of 30 is interpreted as 1930, while a two-digit value of 29 is interpreted as 2029.  \n  \n <xref:System.Globalization.KoreanCalendar.ToFourDigitYear%2A> supports either a two-digit year or a four-digit year. Passing a two-digit year value (less than 100) causes the method to convert the value to a four-digit value according to the <xref:System.Globalization.KoreanCalendar.TwoDigitYearMax%2A> value representing the appropriate century. If the application supplies a four-digit year value that is within the supported calendar range to <xref:System.Globalization.KoreanCalendar.ToFourDigitYear%2A>, the method returns the actual input value. If the application supplies a four-digit value that is outside the supported calendar range, or if it supplies a negative value, the method throws an exception.","nodes":[{"pos":[0,550],"content":"<xref:System.Globalization.KoreanCalendar.TwoDigitYearMax%2A> defines the last year in the 100-year range that can be represented by <xref:System.Globalization.KoreanCalendar.ToFourDigitYear%2A>. The century is determined by finding the sole occurrence of the two-digit year within that 100-year range. For example, if <xref:System.Globalization.KoreanCalendar.TwoDigitYearMax%2A> is set to 2029, the 100-year range is from 1930 to 2029. Therefore, a two-digit value of 30 is interpreted as 1930, while a two-digit value of 29 is interpreted as 2029.","nodes":[{"content":"<xref:System.Globalization.KoreanCalendar.TwoDigitYearMax%2A> defines the last year in the 100-year range that can be represented by <xref:System.Globalization.KoreanCalendar.ToFourDigitYear%2A>. The century is determined by finding the sole occurrence of the two-digit year within that 100-year range. For example, if <xref:System.Globalization.KoreanCalendar.TwoDigitYearMax%2A> is set to 2029, the 100-year range is from 1930 to 2029. Therefore, a two-digit value of 30 is interpreted as 1930, while a two-digit value of 29 is interpreted as 2029.","pos":[0,550],"nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Globalization.KoreanCalendar.TwoDigitYearMax%2A&gt;</ph> defines the last year in the 100-year range that can be represented by <ph id=\"ph2\">&lt;xref:System.Globalization.KoreanCalendar.ToFourDigitYear%2A&gt;</ph>.","pos":[0,195],"source":"<xref:System.Globalization.KoreanCalendar.TwoDigitYearMax%2A> defines the last year in the 100-year range that can be represented by <xref:System.Globalization.KoreanCalendar.ToFourDigitYear%2A>."},{"content":"The century is determined by finding the sole occurrence of the two-digit year within that 100-year range.","pos":[196,302]},{"content":"For example, if <ph id=\"ph1\">&lt;xref:System.Globalization.KoreanCalendar.TwoDigitYearMax%2A&gt;</ph> is set to 2029, the 100-year range is from 1930 to 2029.","pos":[303,437],"source":" For example, if <xref:System.Globalization.KoreanCalendar.TwoDigitYearMax%2A> is set to 2029, the 100-year range is from 1930 to 2029."},{"content":"Therefore, a two-digit value of 30 is interpreted as 1930, while a two-digit value of 29 is interpreted as 2029.","pos":[438,550]}]}]},{"pos":[557,1270],"content":"<xref:System.Globalization.KoreanCalendar.ToFourDigitYear%2A> supports either a two-digit year or a four-digit year. Passing a two-digit year value (less than 100) causes the method to convert the value to a four-digit value according to the <xref:System.Globalization.KoreanCalendar.TwoDigitYearMax%2A> value representing the appropriate century. If the application supplies a four-digit year value that is within the supported calendar range to <xref:System.Globalization.KoreanCalendar.ToFourDigitYear%2A>, the method returns the actual input value. If the application supplies a four-digit value that is outside the supported calendar range, or if it supplies a negative value, the method throws an exception.","nodes":[{"content":"<xref:System.Globalization.KoreanCalendar.ToFourDigitYear%2A> supports either a two-digit year or a four-digit year. Passing a two-digit year value (less than 100) causes the method to convert the value to a four-digit value according to the <xref:System.Globalization.KoreanCalendar.TwoDigitYearMax%2A> value representing the appropriate century. If the application supplies a four-digit year value that is within the supported calendar range to <xref:System.Globalization.KoreanCalendar.ToFourDigitYear%2A>, the method returns the actual input value. If the application supplies a four-digit value that is outside the supported calendar range, or if it supplies a negative value, the method throws an exception.","pos":[0,713],"nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Globalization.KoreanCalendar.ToFourDigitYear%2A&gt;</ph> supports either a two-digit year or a four-digit year.","pos":[0,116],"source":"<xref:System.Globalization.KoreanCalendar.ToFourDigitYear%2A> supports either a two-digit year or a four-digit year."},{"content":"Passing a two-digit year value (less than 100) causes the method to convert the value to a four-digit value according to the <ph id=\"ph1\">&lt;xref:System.Globalization.KoreanCalendar.TwoDigitYearMax%2A&gt;</ph> value representing the appropriate century.","pos":[117,347],"source":" Passing a two-digit year value (less than 100) causes the method to convert the value to a four-digit value according to the <xref:System.Globalization.KoreanCalendar.TwoDigitYearMax%2A> value representing the appropriate century."},{"content":"If the application supplies a four-digit year value that is within the supported calendar range to <ph id=\"ph1\">&lt;xref:System.Globalization.KoreanCalendar.ToFourDigitYear%2A&gt;</ph>, the method returns the actual input value.","pos":[348,552],"source":" If the application supplies a four-digit year value that is within the supported calendar range to <xref:System.Globalization.KoreanCalendar.ToFourDigitYear%2A>, the method returns the actual input value."},{"content":"If the application supplies a four-digit value that is outside the supported calendar range, or if it supplies a negative value, the method throws an exception.","pos":[553,713]}]}]}],"pos":[82296,83571],"yaml":true,"extradata":"MT"},{"content":"A two-digit or four-digit integer that represents the year to convert.","nodes":[{"pos":[0,70],"content":"A two-digit or four-digit integer that represents the year to convert.","nodes":[{"content":"A two-digit or four-digit integer that represents the year to convert.","pos":[0,70]}]}],"pos":[83717,83788],"yaml":true},{"content":"An integer that contains the four-digit representation of <code>year</code>.","nodes":[{"pos":[0,76],"content":"An integer that contains the four-digit representation of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">year</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"An integer that contains the four-digit representation of <code>year</code>."}],"pos":[83844,83921],"yaml":true},{"content":"<code>year</code> is outside the range supported by the calendar.","nodes":[{"pos":[0,65],"content":"<ph id=\"ph1\">&lt;code&gt;year&lt;/code&gt;</ph> is outside the range supported by the calendar.","source":"<code>year</code> is outside the range supported by the calendar."}],"pos":[84114,84180],"yaml":true},{"content":"Gets or sets the last year of a 100-year range that can be represented by a 2-digit year.","nodes":[{"pos":[0,89],"content":"Gets or sets the last year of a 100-year range that can be represented by a 2-digit year.","nodes":[{"content":"Gets or sets the last year of a 100-year range that can be represented by a 2-digit year.","pos":[0,89]}]}],"pos":[85583,85673],"yaml":true},{"content":"This property allows a 2-digit year to be properly translated to a 4-digit year. For example, in the Gregorian calendar, if this property is set to 2029, the 100-year range is from 1930 to 2029. Therefore, a 2-digit value of 30 is interpreted as 1930, while a 2-digit value of 29 is interpreted as 2029.  \n  \n The initial value of this property is derived from the settings in the regional and language options portion of Control Panel. However, that information can change during the life of the <xref:System.AppDomain>. The <xref:System.Globalization.KoreanCalendar> class does not detect changes in the system settings automatically.  \n  \n The application should set this value to 99 to indicate that 2-digit years are to be taken literally. For example, if this property is set to 99, the 100-year range is from 0 (not a valid value for most calendars) to 99. Therefore, a 2-digit value of 30 is interpreted as 30.","nodes":[{"pos":[0,303],"content":"This property allows a 2-digit year to be properly translated to a 4-digit year. For example, in the Gregorian calendar, if this property is set to 2029, the 100-year range is from 1930 to 2029. Therefore, a 2-digit value of 30 is interpreted as 1930, while a 2-digit value of 29 is interpreted as 2029.","nodes":[{"content":"This property allows a 2-digit year to be properly translated to a 4-digit year. For example, in the Gregorian calendar, if this property is set to 2029, the 100-year range is from 1930 to 2029. Therefore, a 2-digit value of 30 is interpreted as 1930, while a 2-digit value of 29 is interpreted as 2029.","pos":[0,303],"nodes":[{"content":"This property allows a 2-digit year to be properly translated to a 4-digit year.","pos":[0,80]},{"content":"For example, in the Gregorian calendar, if this property is set to 2029, the 100-year range is from 1930 to 2029.","pos":[81,194]},{"content":"Therefore, a 2-digit value of 30 is interpreted as 1930, while a 2-digit value of 29 is interpreted as 2029.","pos":[195,303]}]}]},{"pos":[310,636],"content":"The initial value of this property is derived from the settings in the regional and language options portion of Control Panel. However, that information can change during the life of the <xref:System.AppDomain>. The <xref:System.Globalization.KoreanCalendar> class does not detect changes in the system settings automatically.","nodes":[{"content":"The initial value of this property is derived from the settings in the regional and language options portion of Control Panel. However, that information can change during the life of the <xref:System.AppDomain>. The <xref:System.Globalization.KoreanCalendar> class does not detect changes in the system settings automatically.","pos":[0,326],"nodes":[{"content":"The initial value of this property is derived from the settings in the regional and language options portion of Control Panel.","pos":[0,126]},{"content":"However, that information can change during the life of the <ph id=\"ph1\">&lt;xref:System.AppDomain&gt;</ph>.","pos":[127,211],"source":" However, that information can change during the life of the <xref:System.AppDomain>."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Globalization.KoreanCalendar&gt;</ph> class does not detect changes in the system settings automatically.","pos":[212,326],"source":" The <xref:System.Globalization.KoreanCalendar> class does not detect changes in the system settings automatically."}]}]},{"pos":[643,918],"content":"The application should set this value to 99 to indicate that 2-digit years are to be taken literally. For example, if this property is set to 99, the 100-year range is from 0 (not a valid value for most calendars) to 99. Therefore, a 2-digit value of 30 is interpreted as 30.","nodes":[{"content":"The application should set this value to 99 to indicate that 2-digit years are to be taken literally. For example, if this property is set to 99, the 100-year range is from 0 (not a valid value for most calendars) to 99. Therefore, a 2-digit value of 30 is interpreted as 30.","pos":[0,275],"nodes":[{"content":"The application should set this value to 99 to indicate that 2-digit years are to be taken literally.","pos":[0,101]},{"content":"For example, if this property is set to 99, the 100-year range is from 0 (not a valid value for most calendars) to 99.","pos":[102,220]},{"content":"Therefore, a 2-digit value of 30 is interpreted as 30.","pos":[221,275]}]}]}],"pos":[85684,86609],"yaml":true,"extradata":"MT"},{"content":"The last year of a 100-year range that can be represented by a 2-digit year.","nodes":[{"pos":[0,76],"content":"The last year of a 100-year range that can be represented by a 2-digit year.","nodes":[{"content":"The last year of a 100-year range that can be represented by a 2-digit year.","pos":[0,76]}]}],"pos":[86738,86815],"yaml":true},{"content":"The value specified in a set operation is less than 99.  \n  \n -or-  \n  \n The value specified in a set operation is greater than `MaxSupportedDateTime.Year`.","nodes":[{"pos":[0,55],"content":"The value specified in a set operation is less than 99.","nodes":[{"content":"The value specified in a set operation is less than 99.","pos":[0,55]}]},{"pos":[62,66],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[73,156],"content":"The value specified in a set operation is greater than <ph id=\"ph1\">`MaxSupportedDateTime.Year`</ph>.","source":"The value specified in a set operation is greater than `MaxSupportedDateTime.Year`."}],"pos":[87008,87171],"yaml":true},{"content":"In a set operation, the current instance is read-only.","nodes":[{"pos":[0,54],"content":"In a set operation, the current instance is read-only.","nodes":[{"content":"In a set operation, the current instance is read-only.","pos":[0,54]}]}],"pos":[87281,87336],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Globalization.KoreanCalendar\n  commentId: T:System.Globalization.KoreanCalendar\n  id: KoreanCalendar\n  children:\n  - System.Globalization.KoreanCalendar.#ctor\n  - System.Globalization.KoreanCalendar.AddMonths(System.DateTime,System.Int32)\n  - System.Globalization.KoreanCalendar.AddYears(System.DateTime,System.Int32)\n  - System.Globalization.KoreanCalendar.AlgorithmType\n  - System.Globalization.KoreanCalendar.Eras\n  - System.Globalization.KoreanCalendar.GetDayOfMonth(System.DateTime)\n  - System.Globalization.KoreanCalendar.GetDayOfWeek(System.DateTime)\n  - System.Globalization.KoreanCalendar.GetDayOfYear(System.DateTime)\n  - System.Globalization.KoreanCalendar.GetDaysInMonth(System.Int32,System.Int32,System.Int32)\n  - System.Globalization.KoreanCalendar.GetDaysInYear(System.Int32,System.Int32)\n  - System.Globalization.KoreanCalendar.GetEra(System.DateTime)\n  - System.Globalization.KoreanCalendar.GetLeapMonth(System.Int32,System.Int32)\n  - System.Globalization.KoreanCalendar.GetMonth(System.DateTime)\n  - System.Globalization.KoreanCalendar.GetMonthsInYear(System.Int32,System.Int32)\n  - System.Globalization.KoreanCalendar.GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek)\n  - System.Globalization.KoreanCalendar.GetYear(System.DateTime)\n  - System.Globalization.KoreanCalendar.IsLeapDay(System.Int32,System.Int32,System.Int32,System.Int32)\n  - System.Globalization.KoreanCalendar.IsLeapMonth(System.Int32,System.Int32,System.Int32)\n  - System.Globalization.KoreanCalendar.IsLeapYear(System.Int32,System.Int32)\n  - System.Globalization.KoreanCalendar.KoreanEra\n  - System.Globalization.KoreanCalendar.MaxSupportedDateTime\n  - System.Globalization.KoreanCalendar.MinSupportedDateTime\n  - System.Globalization.KoreanCalendar.ToDateTime(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)\n  - System.Globalization.KoreanCalendar.ToFourDigitYear(System.Int32)\n  - System.Globalization.KoreanCalendar.TwoDigitYearMax\n  langs:\n  - csharp\n  name: KoreanCalendar\n  nameWithType: KoreanCalendar\n  fullName: System.Globalization.KoreanCalendar\n  type: Class\n  assemblies:\n  - System.Globalization.Calendars\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Globalization\n  summary: Represents the Korean calendar.\n  remarks: \"The Korean calendar is exactly like the Gregorian calendar, except that the year and era are different.  \\n  \\n> [!NOTE]\\n>  For information about using the <xref:System.Globalization.KoreanCalendar> class and the other calendar classes in the .NET Framework, see [Working with Calendars](~/docs/standard/datetime/working-with-calendars.md).  \\n  \\n The <xref:System.Globalization.KoreanCalendar> class recognizes only the current era.  \\n  \\n Leap years in the Korean calendar correspond to the same leap years in the Gregorian calendar. A leap year in the Gregorian calendar is defined as a Gregorian year that is evenly divisible by four, except if it is divisible by 100. However, Gregorian years that are divisible by 400 are leap years. A common year has 365 days and a leap year has 366 days.  \\n  \\n The Korean calendar has 12 months with 28 to 31 days each:  \\n  \\n|GetMonth value|Month|Days in common years|Days in leap years|  \\n|--------------------|-----------|--------------------------|------------------------|  \\n|1|1월 (January)|31|31|  \\n|2|2월 (February)|28|29|  \\n|3|3월 (March)|31|31|  \\n|4|4월 (April)|30|30|  \\n|5|5월 (May)|31|31|  \\n|6|6월 (June)|30|30|  \\n|7|7월 (July)|31|31|  \\n|8|8월 (August)|31|31|  \\n|9|9월 (September)|30|30|  \\n|10|10월 (October)|31|31|  \\n|11|11월 (November)|30|30|  \\n|12|12월 (December)|31|31|  \\n  \\n February has 29 days during leap years and 28 days during common years.  \\n  \\n The date January 1, 2001 A.D. in the Gregorian calendar is equivalent to the first day of January in the year 4334 of the current era in the Korean calendar.  \\n  \\n Each <xref:System.Globalization.CultureInfo> object supports a set of calendars. The <xref:System.Globalization.CultureInfo.Calendar%2A> property returns the default calendar for the culture, and the <xref:System.Globalization.CultureInfo.OptionalCalendars%2A> property returns an array containing all the calendars supported by the culture. To change the calendar used by a <xref:System.Globalization.CultureInfo>, the application should set the <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> property of <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=fullName> to a new <xref:System.Globalization.Calendar>.\"\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public class KoreanCalendar : System.Globalization.Calendar\n  inheritance:\n  - System.Object\n  - System.Globalization.Calendar\n  implements: []\n  inheritedMembers:\n  - System.Globalization.Calendar.AddDays(System.DateTime,System.Int32)\n  - System.Globalization.Calendar.AddHours(System.DateTime,System.Int32)\n  - System.Globalization.Calendar.AddMilliseconds(System.DateTime,System.Double)\n  - System.Globalization.Calendar.AddMinutes(System.DateTime,System.Int32)\n  - System.Globalization.Calendar.AddSeconds(System.DateTime,System.Int32)\n  - System.Globalization.Calendar.AddWeeks(System.DateTime,System.Int32)\n  - System.Globalization.Calendar.Clone\n  - System.Globalization.Calendar.CurrentEra\n  - System.Globalization.Calendar.DaysInYearBeforeMinSupportedYear\n  - System.Globalization.Calendar.GetDaysInMonth(System.Int32,System.Int32)\n  - System.Globalization.Calendar.GetDaysInYear(System.Int32)\n  - System.Globalization.Calendar.GetHour(System.DateTime)\n  - System.Globalization.Calendar.GetLeapMonth(System.Int32)\n  - System.Globalization.Calendar.GetMilliseconds(System.DateTime)\n  - System.Globalization.Calendar.GetMinute(System.DateTime)\n  - System.Globalization.Calendar.GetMonthsInYear(System.Int32)\n  - System.Globalization.Calendar.GetSecond(System.DateTime)\n  - System.Globalization.Calendar.IsLeapDay(System.Int32,System.Int32,System.Int32)\n  - System.Globalization.Calendar.IsLeapMonth(System.Int32,System.Int32)\n  - System.Globalization.Calendar.IsLeapYear(System.Int32)\n  - System.Globalization.Calendar.IsReadOnly\n  - System.Globalization.Calendar.ReadOnly(System.Globalization.Calendar)\n  - System.Globalization.Calendar.ToDateTime(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  attributes:\n  - type: System.Runtime.InteropServices.ComVisibleAttribute\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/KoreanCalendar.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Globalization.KoreanCalendar.#ctor\n  commentId: M:System.Globalization.KoreanCalendar.#ctor\n  id: '#ctor'\n  parent: System.Globalization.KoreanCalendar\n  langs:\n  - csharp\n  name: KoreanCalendar()\n  nameWithType: KoreanCalendar.KoreanCalendar()\n  fullName: KoreanCalendar.KoreanCalendar()\n  type: Constructor\n  assemblies:\n  - System.Globalization.Calendars\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Globalization\n  summary: Initializes a new instance of the <xref href=\"System.Globalization.KoreanCalendar\"></xref> class.\n  syntax:\n    content: public KoreanCalendar ();\n    parameters: []\n  overload: System.Globalization.KoreanCalendar.#ctor*\n  exceptions:\n  - type: System.TypeInitializationException\n    commentId: T:System.TypeInitializationException\n    description: Unable to initialize a <xref href=\"System.Globalization.KoreanCalendar\"></xref> object because of missing culture information.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/KoreanCalendar.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Globalization.KoreanCalendar.AddMonths(System.DateTime,System.Int32)\n  commentId: M:System.Globalization.KoreanCalendar.AddMonths(System.DateTime,System.Int32)\n  id: AddMonths(System.DateTime,System.Int32)\n  parent: System.Globalization.KoreanCalendar\n  langs:\n  - csharp\n  name: AddMonths(DateTime, Int32)\n  nameWithType: KoreanCalendar.AddMonths(DateTime, Int32)\n  fullName: KoreanCalendar.AddMonths(DateTime, Int32)\n  type: Method\n  assemblies:\n  - System.Globalization.Calendars\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Globalization\n  summary: Returns a <xref href=\"System.DateTime\"></xref> that is the specified number of months away from the specified <xref href=\"System.DateTime\"></xref>.\n  remarks: \"The day part of the resulting <xref:System.DateTime> is affected if the resulting day is not a valid day in the resulting month of the resulting year. It is changed to the last valid day in the resulting month of the resulting year. The year part of the resulting <xref:System.DateTime> is affected if the resulting month is outside the year of the specified <xref:System.DateTime>. This implementation supports only the current era. Therefore, <xref:System.ArgumentException> is thrown if the resulting year is outside the era of the specified <xref:System.DateTime>. The time-of-day part of the resulting <xref:System.DateTime> remains the same as the specified <xref:System.DateTime>.  \\n  \\n For example, if the specified month is October, which has 31 days, the specified day is the 31st day of that month, and the value of the `months` parameter is 6, the resulting year is one more than the specified year, the resulting month is April, and the resulting day is the 30th day, which is the last day in April.  \\n  \\n If the value of the `months` parameter is negative, the resulting <xref:System.DateTime> is earlier than the specified <xref:System.DateTime>.  \\n  \\n The<xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> value always equals <xref:System.DateTimeKind?displayProperty=fullName>. You can preserve the <xref:System.DateTime.Kind%2A> property of the `time` parameter by calling the <xref:System.DateTime.SpecifyKind%2A?displayProperty=fullName> method, as the following example shows.  \\n  \\n [!code-csharp[System.Globalization.Calendar.AddMethods#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.calendar.addmethods/cs/add1.cs#5)]\\n [!code-vb[System.Globalization.Calendar.AddMethods#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.calendar.addmethods/vb/add1.vb#5)]\"\n  example:\n  - \"The following code example displays the values of several components of a <xref:System.DateTime> in terms of the Korean calendar.  \\n  \\n [!code-cpp[System.Globalization.KoreanCalendar_AddGet#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.KoreanCalendar_AddGet/CPP/koreancalendar_addget.cpp#1)]\\n [!code-csharp[System.Globalization.KoreanCalendar_AddGet#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.KoreanCalendar_AddGet/CS/koreancalendar_addget.cs#1)]\\n [!code-vb[System.Globalization.KoreanCalendar_AddGet#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.KoreanCalendar_AddGet/VB/koreancalendar_addget.vb#1)]\"\n  syntax:\n    content: public override DateTime AddMonths (DateTime time, int months);\n    parameters:\n    - id: time\n      type: System.DateTime\n      description: The <xref href=\"System.DateTime\"></xref> to which to add months.\n    - id: months\n      type: System.Int32\n      description: The number of months to add.\n    return:\n      type: System.DateTime\n      description: The <xref href=\"System.DateTime\"></xref> that results from adding the specified number of months to the specified <xref href=\"System.DateTime\"></xref>.\n  overload: System.Globalization.KoreanCalendar.AddMonths*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"<code>months</code> is less than -120000.  \\n  \\n -or-  \\n  \\n <code>months</code> is greater than 120000.\"\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/KoreanCalendar.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Globalization.KoreanCalendar.AddYears(System.DateTime,System.Int32)\n  commentId: M:System.Globalization.KoreanCalendar.AddYears(System.DateTime,System.Int32)\n  id: AddYears(System.DateTime,System.Int32)\n  parent: System.Globalization.KoreanCalendar\n  langs:\n  - csharp\n  name: AddYears(DateTime, Int32)\n  nameWithType: KoreanCalendar.AddYears(DateTime, Int32)\n  fullName: KoreanCalendar.AddYears(DateTime, Int32)\n  type: Method\n  assemblies:\n  - System.Globalization.Calendars\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Globalization\n  summary: Returns a <xref href=\"System.DateTime\"></xref> that is the specified number of years away from the specified <xref href=\"System.DateTime\"></xref>.\n  remarks: \"The day part of the resulting <xref:System.DateTime> is affected if the resulting day is not a valid day in the resulting month of the resulting year. It is changed to the last valid day in the resulting month of the resulting year. The month part of the resulting <xref:System.DateTime> remains the same as the specified <xref:System.DateTime>. This implementation supports only the current era. Therefore, <xref:System.ArgumentException> is thrown if the resulting year is outside the era of the specified <xref:System.DateTime>. The time-of-day part of the resulting <xref:System.DateTime> remains the same as the specified <xref:System.DateTime>.  \\n  \\n For example, February has 28 days, except during leap years when it has 29 days. If the specified date is the 29th day of February in a leap year and the value of `years` is 1, the resulting date is the 28th day of February in the following year.  \\n  \\n If `years` is negative, the resulting <xref:System.DateTime> is earlier than the specified <xref:System.DateTime>.  \\n  \\n The<xref:System.DateTime.Kind%2A> property of the returned <xref:System.DateTime> value always equals <xref:System.DateTimeKind?displayProperty=fullName>. You can preserve the <xref:System.DateTime.Kind%2A> property of the `time` parameter by calling the <xref:System.DateTime.SpecifyKind%2A?displayProperty=fullName> method, as the following example shows.  \\n  \\n [!code-csharp[System.Globalization.Calendar.AddMethods#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.calendar.addmethods/cs/add1.cs#8)]\\n [!code-vb[System.Globalization.Calendar.AddMethods#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.calendar.addmethods/vb/add1.vb#8)]\"\n  example:\n  - \"The following code example displays the values of several components of a <xref:System.DateTime> in terms of the Korean calendar.  \\n  \\n [!code-cpp[System.Globalization.KoreanCalendar_AddGet#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.KoreanCalendar_AddGet/CPP/koreancalendar_addget.cpp#1)]\\n [!code-csharp[System.Globalization.KoreanCalendar_AddGet#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.KoreanCalendar_AddGet/CS/koreancalendar_addget.cs#1)]\\n [!code-vb[System.Globalization.KoreanCalendar_AddGet#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.KoreanCalendar_AddGet/VB/koreancalendar_addget.vb#1)]\"\n  syntax:\n    content: public override DateTime AddYears (DateTime time, int years);\n    parameters:\n    - id: time\n      type: System.DateTime\n      description: The <xref href=\"System.DateTime\"></xref> to which to add years.\n    - id: years\n      type: System.Int32\n      description: The number of years to add.\n    return:\n      type: System.DateTime\n      description: The <xref href=\"System.DateTime\"></xref> that results from adding the specified number of years to the specified <xref href=\"System.DateTime\"></xref>.\n  overload: System.Globalization.KoreanCalendar.AddYears*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: <code>years</code> or <code>time</code> is out of range.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/KoreanCalendar.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Globalization.KoreanCalendar.AlgorithmType\n  commentId: P:System.Globalization.KoreanCalendar.AlgorithmType\n  id: AlgorithmType\n  parent: System.Globalization.KoreanCalendar\n  langs:\n  - csharp\n  name: AlgorithmType\n  nameWithType: KoreanCalendar.AlgorithmType\n  fullName: KoreanCalendar.AlgorithmType\n  type: Property\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Globalization\n  summary: Gets a value indicating whether the current calendar is solar-based, lunar-based, or a combination of both.\n  remarks: ''\n  example:\n  - \"The following example uses reflection to instantiate each <xref:System.Globalization.Calendar> type found in the .NET Framework and displays the value of its <xref:System.Globalization.Calendar.AlgorithmType%2A> property.  \\n  \\n [!code-csharp[System.Globalization.Calendar.AlgorithmType#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.globalization.calendar.algorithmtype/cs/algorithmtype1.cs#1)]\\n [!code-vb[System.Globalization.Calendar.AlgorithmType#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.globalization.calendar.algorithmtype/vb/algorithmtype1.vb#1)]\"\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(false)]\n\n      public override System.Globalization.CalendarAlgorithmType AlgorithmType { get; }\n    return:\n      type: System.Globalization.CalendarAlgorithmType\n      description: Always returns <xref href=\"System.Globalization.CalendarAlgorithmType.SolarCalendar\"></xref>.\n  overload: System.Globalization.KoreanCalendar.AlgorithmType*\n  exceptions: []\n  attributes:\n  - type: System.Runtime.InteropServices.ComVisibleAttribute\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/KoreanCalendar.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Globalization.KoreanCalendar.Eras\n  commentId: P:System.Globalization.KoreanCalendar.Eras\n  id: Eras\n  parent: System.Globalization.KoreanCalendar\n  langs:\n  - csharp\n  name: Eras\n  nameWithType: KoreanCalendar.Eras\n  fullName: KoreanCalendar.Eras\n  type: Property\n  assemblies:\n  - System.Globalization.Calendars\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Globalization\n  summary: Gets the list of eras in the <xref href=\"System.Globalization.KoreanCalendar\"></xref>.\n  remarks: The <xref:System.Globalization.KoreanCalendar> class recognizes only the current era. This property always returns an array with only one element.\n  syntax:\n    content: public override int[] Eras { get; }\n    return:\n      type: System.Int32[]\n      description: An array of integers that represents the eras in the <xref href=\"System.Globalization.KoreanCalendar\"></xref>.\n  overload: System.Globalization.KoreanCalendar.Eras*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/KoreanCalendar.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Globalization.KoreanCalendar.GetDayOfMonth(System.DateTime)\n  commentId: M:System.Globalization.KoreanCalendar.GetDayOfMonth(System.DateTime)\n  id: GetDayOfMonth(System.DateTime)\n  parent: System.Globalization.KoreanCalendar\n  langs:\n  - csharp\n  name: GetDayOfMonth(DateTime)\n  nameWithType: KoreanCalendar.GetDayOfMonth(DateTime)\n  fullName: KoreanCalendar.GetDayOfMonth(DateTime)\n  type: Method\n  assemblies:\n  - System.Globalization.Calendars\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Globalization\n  summary: Returns the day of the month in the specified <xref href=\"System.DateTime\"></xref>.\n  remarks: ''\n  example:\n  - \"The following code example displays the values of several components of a <xref:System.DateTime> in terms of the Korean calendar.  \\n  \\n [!code-cpp[System.Globalization.KoreanCalendar_AddGet#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.KoreanCalendar_AddGet/CPP/koreancalendar_addget.cpp#1)]\\n [!code-csharp[System.Globalization.KoreanCalendar_AddGet#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.KoreanCalendar_AddGet/CS/koreancalendar_addget.cs#1)]\\n [!code-vb[System.Globalization.KoreanCalendar_AddGet#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.KoreanCalendar_AddGet/VB/koreancalendar_addget.vb#1)]\"\n  syntax:\n    content: public override int GetDayOfMonth (DateTime time);\n    parameters:\n    - id: time\n      type: System.DateTime\n      description: The <xref href=\"System.DateTime\"></xref> to read.\n    return:\n      type: System.Int32\n      description: An integer from 1 to 31 that represents the day of the month in the specified <xref href=\"System.DateTime\"></xref>.\n  overload: System.Globalization.KoreanCalendar.GetDayOfMonth*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/KoreanCalendar.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Globalization.KoreanCalendar.GetDayOfWeek(System.DateTime)\n  commentId: M:System.Globalization.KoreanCalendar.GetDayOfWeek(System.DateTime)\n  id: GetDayOfWeek(System.DateTime)\n  parent: System.Globalization.KoreanCalendar\n  langs:\n  - csharp\n  name: GetDayOfWeek(DateTime)\n  nameWithType: KoreanCalendar.GetDayOfWeek(DateTime)\n  fullName: KoreanCalendar.GetDayOfWeek(DateTime)\n  type: Method\n  assemblies:\n  - System.Globalization.Calendars\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Globalization\n  summary: Returns the day of the week in the specified <xref href=\"System.DateTime\"></xref>.\n  remarks: \"The <xref:System.DayOfWeek> values are as follows:  \\n  \\n|DayOfWeek value|Which indicates|  \\n|---------------------|---------------------|  \\n|Sunday|일요일|  \\n|Monday|월요일|  \\n|Tuesday|화요일|  \\n|Wednesday|수요일|  \\n|Thursday|목요일|  \\n|Friday|금요일|  \\n|Saturday|토요일|\"\n  example:\n  - \"The following code example displays the values of several components of a <xref:System.DateTime> in terms of the Korean calendar.  \\n  \\n [!code-cpp[System.Globalization.KoreanCalendar_AddGet#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.KoreanCalendar_AddGet/CPP/koreancalendar_addget.cpp#1)]\\n [!code-csharp[System.Globalization.KoreanCalendar_AddGet#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.KoreanCalendar_AddGet/CS/koreancalendar_addget.cs#1)]\\n [!code-vb[System.Globalization.KoreanCalendar_AddGet#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.KoreanCalendar_AddGet/VB/koreancalendar_addget.vb#1)]\"\n  syntax:\n    content: public override DayOfWeek GetDayOfWeek (DateTime time);\n    parameters:\n    - id: time\n      type: System.DateTime\n      description: The <xref href=\"System.DateTime\"></xref> to read.\n    return:\n      type: System.DayOfWeek\n      description: A <xref href=\"System.DayOfWeek\"></xref> value that represents the day of the week in the specified <xref href=\"System.DateTime\"></xref>.\n  overload: System.Globalization.KoreanCalendar.GetDayOfWeek*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/KoreanCalendar.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Globalization.KoreanCalendar.GetDayOfYear(System.DateTime)\n  commentId: M:System.Globalization.KoreanCalendar.GetDayOfYear(System.DateTime)\n  id: GetDayOfYear(System.DateTime)\n  parent: System.Globalization.KoreanCalendar\n  langs:\n  - csharp\n  name: GetDayOfYear(DateTime)\n  nameWithType: KoreanCalendar.GetDayOfYear(DateTime)\n  fullName: KoreanCalendar.GetDayOfYear(DateTime)\n  type: Method\n  assemblies:\n  - System.Globalization.Calendars\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Globalization\n  summary: Returns the day of the year in the specified <xref href=\"System.DateTime\"></xref>.\n  remarks: The day of the year is defined as the number of days from the first day of the year. For example, <xref:System.Globalization.KoreanCalendar.GetDayOfYear%2A> for the first day of the first month returns 1, and <xref:System.Globalization.KoreanCalendar.GetDayOfYear%2A> for the last day of the last month returns the total number of days in that year. The total is the same value as that returned by <xref:System.Globalization.KoreanCalendar.GetDaysInYear%2A>.\n  example:\n  - \"The following code example displays the values of several components of a <xref:System.DateTime> in terms of the Korean calendar.  \\n  \\n [!code-cpp[System.Globalization.KoreanCalendar_AddGet#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.KoreanCalendar_AddGet/CPP/koreancalendar_addget.cpp#1)]\\n [!code-csharp[System.Globalization.KoreanCalendar_AddGet#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.KoreanCalendar_AddGet/CS/koreancalendar_addget.cs#1)]\\n [!code-vb[System.Globalization.KoreanCalendar_AddGet#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.KoreanCalendar_AddGet/VB/koreancalendar_addget.vb#1)]\"\n  syntax:\n    content: public override int GetDayOfYear (DateTime time);\n    parameters:\n    - id: time\n      type: System.DateTime\n      description: The <xref href=\"System.DateTime\"></xref> to read.\n    return:\n      type: System.Int32\n      description: An integer from 1 to 366 that represents the day of the year in the specified <xref href=\"System.DateTime\"></xref>.\n  overload: System.Globalization.KoreanCalendar.GetDayOfYear*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/KoreanCalendar.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Globalization.KoreanCalendar.GetDaysInMonth(System.Int32,System.Int32,System.Int32)\n  commentId: M:System.Globalization.KoreanCalendar.GetDaysInMonth(System.Int32,System.Int32,System.Int32)\n  id: GetDaysInMonth(System.Int32,System.Int32,System.Int32)\n  parent: System.Globalization.KoreanCalendar\n  langs:\n  - csharp\n  name: GetDaysInMonth(Int32, Int32, Int32)\n  nameWithType: KoreanCalendar.GetDaysInMonth(Int32, Int32, Int32)\n  fullName: KoreanCalendar.GetDaysInMonth(Int32, Int32, Int32)\n  type: Method\n  assemblies:\n  - System.Globalization.Calendars\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Globalization\n  summary: Returns the number of days in the specified month in the specified year in the specified era.\n  remarks: For example, this method returns 28 or 29 for February (`month` = 2), depending on whether `year` is a leap year.\n  example:\n  - \"The following code example calls GetDaysInMonth for the second month in each of five years in each era.  \\n  \\n [!code-cpp[System.Globalization.KoreanCalendar.GetDaysInMonth#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.KoreanCalendar.GetDaysInMonth/CPP/koreancalendar_getdaysinmonth.cpp#1)]\\n [!code-csharp[System.Globalization.KoreanCalendar.GetDaysInMonth#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.KoreanCalendar.GetDaysInMonth/CS/koreancalendar_getdaysinmonth.cs#1)]\\n [!code-vb[System.Globalization.KoreanCalendar.GetDaysInMonth#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.KoreanCalendar.GetDaysInMonth/VB/koreancalendar_getdaysinmonth.vb#1)]\"\n  syntax:\n    content: public override int GetDaysInMonth (int year, int month, int era);\n    parameters:\n    - id: year\n      type: System.Int32\n      description: An integer that represents the year.\n    - id: month\n      type: System.Int32\n      description: An integer from 1 to 12 that represents the month.\n    - id: era\n      type: System.Int32\n      description: An integer that represents the era.\n    return:\n      type: System.Int32\n      description: The number of days in the specified month in the specified year in the specified era.\n  overload: System.Globalization.KoreanCalendar.GetDaysInMonth*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"<code>year</code> is outside the range supported by the calendar.  \\n  \\n -or-  \\n  \\n <code>month</code> is outside the range supported by the calendar.  \\n  \\n -or-  \\n  \\n <code>era</code> is outside the range supported by the calendar.\"\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/KoreanCalendar.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Globalization.KoreanCalendar.GetDaysInYear(System.Int32,System.Int32)\n  commentId: M:System.Globalization.KoreanCalendar.GetDaysInYear(System.Int32,System.Int32)\n  id: GetDaysInYear(System.Int32,System.Int32)\n  parent: System.Globalization.KoreanCalendar\n  langs:\n  - csharp\n  name: GetDaysInYear(Int32, Int32)\n  nameWithType: KoreanCalendar.GetDaysInYear(Int32, Int32)\n  fullName: KoreanCalendar.GetDaysInYear(Int32, Int32)\n  type: Method\n  assemblies:\n  - System.Globalization.Calendars\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Globalization\n  summary: Returns the number of days in the specified year in the specified era.\n  remarks: For example, this method returns 365 or 366, depending on whether `year` is a leap year.\n  example:\n  - \"The following example calls <xref:System.Globalization.KoreanCalendar.GetDaysInYear%2A> for five years in each era.  \\n  \\n [!code-cpp[System.Globalization.KoreanCalendar.GetDaysInYear#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.KoreanCalendar.GetDaysInYear/CPP/koreancalendar_getdaysinyear.cpp#1)]\\n [!code-csharp[System.Globalization.KoreanCalendar.GetDaysInYear#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.KoreanCalendar.GetDaysInYear/CS/koreancalendar_getdaysinyear.cs#1)]\\n [!code-vb[System.Globalization.KoreanCalendar.GetDaysInYear#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.KoreanCalendar.GetDaysInYear/VB/koreancalendar_getdaysinyear.vb#1)]\"\n  syntax:\n    content: public override int GetDaysInYear (int year, int era);\n    parameters:\n    - id: year\n      type: System.Int32\n      description: An integer that represents the year.\n    - id: era\n      type: System.Int32\n      description: An integer that represents the era.\n    return:\n      type: System.Int32\n      description: The number of days in the specified year in the specified era.\n  overload: System.Globalization.KoreanCalendar.GetDaysInYear*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"<code>year</code> is outside the range supported by the calendar.  \\n  \\n -or-  \\n  \\n <code>era</code> is outside the range supported by the calendar.\"\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/KoreanCalendar.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Globalization.KoreanCalendar.GetEra(System.DateTime)\n  commentId: M:System.Globalization.KoreanCalendar.GetEra(System.DateTime)\n  id: GetEra(System.DateTime)\n  parent: System.Globalization.KoreanCalendar\n  langs:\n  - csharp\n  name: GetEra(DateTime)\n  nameWithType: KoreanCalendar.GetEra(DateTime)\n  fullName: KoreanCalendar.GetEra(DateTime)\n  type: Method\n  assemblies:\n  - System.Globalization.Calendars\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Globalization\n  summary: Returns the era in the specified <xref href=\"System.DateTime\"></xref>.\n  remarks: The <xref:System.Globalization.KoreanCalendar> class recognizes only the current era.\n  example:\n  - \"The following code example displays the values of several components of a <xref:System.DateTime> in terms of the Korean calendar.  \\n  \\n [!code-cpp[System.Globalization.KoreanCalendar_AddGet#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.KoreanCalendar_AddGet/CPP/koreancalendar_addget.cpp#1)]\\n [!code-csharp[System.Globalization.KoreanCalendar_AddGet#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.KoreanCalendar_AddGet/CS/koreancalendar_addget.cs#1)]\\n [!code-vb[System.Globalization.KoreanCalendar_AddGet#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.KoreanCalendar_AddGet/VB/koreancalendar_addget.vb#1)]\"\n  syntax:\n    content: public override int GetEra (DateTime time);\n    parameters:\n    - id: time\n      type: System.DateTime\n      description: The <xref href=\"System.DateTime\"></xref> to read.\n    return:\n      type: System.Int32\n      description: An integer that represents the era in the specified <xref href=\"System.DateTime\"></xref>.\n  overload: System.Globalization.KoreanCalendar.GetEra*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/KoreanCalendar.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Globalization.KoreanCalendar.GetLeapMonth(System.Int32,System.Int32)\n  commentId: M:System.Globalization.KoreanCalendar.GetLeapMonth(System.Int32,System.Int32)\n  id: GetLeapMonth(System.Int32,System.Int32)\n  parent: System.Globalization.KoreanCalendar\n  langs:\n  - csharp\n  name: GetLeapMonth(Int32, Int32)\n  nameWithType: KoreanCalendar.GetLeapMonth(Int32, Int32)\n  fullName: KoreanCalendar.GetLeapMonth(Int32, Int32)\n  type: Method\n  assemblies:\n  - System.Globalization.Calendars\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Globalization\n  summary: Calculates the leap month for a specified year and era.\n  remarks: In a calendar that supports the notion of a leap month, the leap month can occur either after a particular month or after any month in a year. For example, the <xref:System.Globalization.EastAsianLunisolarCalendar.GetMonth%28System.DateTime%29?displayProperty=fullName> method returns a number between 1 and 13 that indicates the month associated with a specified date. If there is a leap month between the eighth and ninth months of the year, the <xref:System.Globalization.EastAsianLunisolarCalendar.GetMonth%2A> method returns 8 for the eighth month, 9 for the leap eighth month, and 10 for the ninth month.\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(false)]\n\n      public override int GetLeapMonth (int year, int era);\n    parameters:\n    - id: year\n      type: System.Int32\n      description: A year.\n    - id: era\n      type: System.Int32\n      description: An era.\n    return:\n      type: System.Int32\n      description: The return value is always 0 because the <xref href=\"System.Globalization.KoreanCalendar\"></xref> class does not support the notion of a leap month.\n  overload: System.Globalization.KoreanCalendar.GetLeapMonth*\n  exceptions: []\n  attributes:\n  - type: System.Runtime.InteropServices.ComVisibleAttribute\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/KoreanCalendar.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Globalization.KoreanCalendar.GetMonth(System.DateTime)\n  commentId: M:System.Globalization.KoreanCalendar.GetMonth(System.DateTime)\n  id: GetMonth(System.DateTime)\n  parent: System.Globalization.KoreanCalendar\n  langs:\n  - csharp\n  name: GetMonth(DateTime)\n  nameWithType: KoreanCalendar.GetMonth(DateTime)\n  fullName: KoreanCalendar.GetMonth(DateTime)\n  type: Method\n  assemblies:\n  - System.Globalization.Calendars\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Globalization\n  summary: Returns the month in the specified <xref href=\"System.DateTime\"></xref>.\n  remarks: ''\n  example:\n  - \"The following code example displays the values of several components of a <xref:System.DateTime> in terms of the Korean calendar.  \\n  \\n [!code-cpp[System.Globalization.KoreanCalendar_AddGet#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.KoreanCalendar_AddGet/CPP/koreancalendar_addget.cpp#1)]\\n [!code-csharp[System.Globalization.KoreanCalendar_AddGet#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.KoreanCalendar_AddGet/CS/koreancalendar_addget.cs#1)]\\n [!code-vb[System.Globalization.KoreanCalendar_AddGet#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.KoreanCalendar_AddGet/VB/koreancalendar_addget.vb#1)]\"\n  syntax:\n    content: public override int GetMonth (DateTime time);\n    parameters:\n    - id: time\n      type: System.DateTime\n      description: The <xref href=\"System.DateTime\"></xref> to read.\n    return:\n      type: System.Int32\n      description: An integer from 1 to 12 that represents the month in the specified <xref href=\"System.DateTime\"></xref>.\n  overload: System.Globalization.KoreanCalendar.GetMonth*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/KoreanCalendar.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Globalization.KoreanCalendar.GetMonthsInYear(System.Int32,System.Int32)\n  commentId: M:System.Globalization.KoreanCalendar.GetMonthsInYear(System.Int32,System.Int32)\n  id: GetMonthsInYear(System.Int32,System.Int32)\n  parent: System.Globalization.KoreanCalendar\n  langs:\n  - csharp\n  name: GetMonthsInYear(Int32, Int32)\n  nameWithType: KoreanCalendar.GetMonthsInYear(Int32, Int32)\n  fullName: KoreanCalendar.GetMonthsInYear(Int32, Int32)\n  type: Method\n  assemblies:\n  - System.Globalization.Calendars\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Globalization\n  summary: Returns the number of months in the specified year in the specified era.\n  remarks: ''\n  example:\n  - \"The following example calls <xref:System.Globalization.KoreanCalendar.GetMonthsInYear%2A> for five years in each era.  \\n  \\n [!code-cpp[System.Globalization.KoreanCalendar.GetMonthsInYear#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.KoreanCalendar.GetMonthsInYear/CPP/koreancalendar_getmonthsinyear.cpp#1)]\\n [!code-csharp[System.Globalization.KoreanCalendar.GetMonthsInYear#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.KoreanCalendar.GetMonthsInYear/CS/koreancalendar_getmonthsinyear.cs#1)]\\n [!code-vb[System.Globalization.KoreanCalendar.GetMonthsInYear#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.KoreanCalendar.GetMonthsInYear/VB/koreancalendar_getmonthsinyear.vb#1)]\"\n  syntax:\n    content: public override int GetMonthsInYear (int year, int era);\n    parameters:\n    - id: year\n      type: System.Int32\n      description: An integer that represents the year.\n    - id: era\n      type: System.Int32\n      description: An integer that represents the era.\n    return:\n      type: System.Int32\n      description: The number of months in the specified year in the specified era.\n  overload: System.Globalization.KoreanCalendar.GetMonthsInYear*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"<code>year</code> is outside the range supported by the calendar.  \\n  \\n -or-  \\n  \\n <code>era</code> is outside the range supported by the calendar.\"\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/KoreanCalendar.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Globalization.KoreanCalendar.GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek)\n  commentId: M:System.Globalization.KoreanCalendar.GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek)\n  id: GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek)\n  parent: System.Globalization.KoreanCalendar\n  langs:\n  - csharp\n  name: GetWeekOfYear(DateTime, CalendarWeekRule, DayOfWeek)\n  nameWithType: KoreanCalendar.GetWeekOfYear(DateTime, CalendarWeekRule, DayOfWeek)\n  fullName: KoreanCalendar.GetWeekOfYear(DateTime, CalendarWeekRule, DayOfWeek)\n  type: Method\n  assemblies:\n  - System.Globalization.Calendars\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Globalization\n  summary: Returns the week of the year that includes the date in the specified <xref href=\"System.DateTime\"></xref>.\n  remarks: \"This method can be used to determine the number of weeks in the year by setting the `time` parameter to the last day of the year.  \\n  \\n <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=fullName> contains culture-specific values that can be used for the `rule` and `firstDayOfWeek` parameters.  \\n  \\n The <xref:System.Globalization.DateTimeFormatInfo.FirstDayOfWeek%2A> property of <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=fullName> contains the default <xref:System.DayOfWeek> value that represents the first day of the week for a specific culture, using the calendar specified in the <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> property of <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=fullName>.  \\n  \\n The <xref:System.Globalization.DateTimeFormatInfo.CalendarWeekRule%2A> property of <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=fullName> contains the default <xref:System.Globalization.CalendarWeekRule> value that defines a calendar week for a specific culture, using the calendar specified in the <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> property of <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=fullName>.  \\n  \\n For example, in <xref:System.Globalization.GregorianCalendar>, <xref:System.Globalization.Calendar.GetWeekOfYear%2A> for January 1 returns 1.\"\n  example:\n  - \"The following code example shows how the result of <xref:System.Globalization.Calendar.GetWeekOfYear%2A> varies depending on the <xref:System.Globalization.DateTimeFormatInfo.FirstDayOfWeek%2A> and <xref:System.Globalization.CalendarWeekRule> values used. If the specified date is the last day of the year, <xref:System.Globalization.Calendar.GetWeekOfYear%2A> returns the total number of weeks in that year.  \\n  \\n [!code-cpp[System.Globalization.Calendar.GetWeekOfYear#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.Calendar.GetWeekOfYear/CPP/yslin_calendar_getweekofyear.cpp#1)]\\n [!code-csharp[System.Globalization.Calendar.GetWeekOfYear#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.Calendar.GetWeekOfYear/CS/yslin_calendar_getweekofyear.cs#1)]\\n [!code-vb[System.Globalization.Calendar.GetWeekOfYear#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.Calendar.GetWeekOfYear/VB/yslin_calendar_getweekofyear.vb#1)]\"\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(false)]\n\n      public override int GetWeekOfYear (DateTime time, System.Globalization.CalendarWeekRule rule, DayOfWeek firstDayOfWeek);\n    parameters:\n    - id: time\n      type: System.DateTime\n      description: The <xref href=\"System.DateTime\"></xref> to read.\n    - id: rule\n      type: System.Globalization.CalendarWeekRule\n      description: One of the <xref href=\"System.Globalization.CalendarWeekRule\"></xref> values that defines a calendar week.\n    - id: firstDayOfWeek\n      type: System.DayOfWeek\n      description: One of the <xref href=\"System.DayOfWeek\"></xref> values that represents the first day of the week.\n    return:\n      type: System.Int32\n      description: A 1-based integer that represents the week of the year that includes the date in the <code>time</code> parameter.\n  overload: System.Globalization.KoreanCalendar.GetWeekOfYear*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"<code>time</code> or <code>firstDayOfWeek</code> is outside the range supported by the calendar.  \\n  \\n -or-  \\n  \\n <code>rule</code> is not a valid <xref href=\\\"System.Globalization.CalendarWeekRule\\\"></xref> value.\"\n  attributes:\n  - type: System.Runtime.InteropServices.ComVisibleAttribute\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/KoreanCalendar.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Globalization.KoreanCalendar.GetYear(System.DateTime)\n  commentId: M:System.Globalization.KoreanCalendar.GetYear(System.DateTime)\n  id: GetYear(System.DateTime)\n  parent: System.Globalization.KoreanCalendar\n  langs:\n  - csharp\n  name: GetYear(DateTime)\n  nameWithType: KoreanCalendar.GetYear(DateTime)\n  fullName: KoreanCalendar.GetYear(DateTime)\n  type: Method\n  assemblies:\n  - System.Globalization.Calendars\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Globalization\n  summary: Returns the year in the specified <xref href=\"System.DateTime\"></xref>.\n  remarks: ''\n  example:\n  - \"The following code example displays the values of several components of a <xref:System.DateTime> in terms of the Korean calendar.  \\n  \\n [!code-cpp[System.Globalization.KoreanCalendar_AddGet#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.KoreanCalendar_AddGet/CPP/koreancalendar_addget.cpp#1)]\\n [!code-csharp[System.Globalization.KoreanCalendar_AddGet#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.KoreanCalendar_AddGet/CS/koreancalendar_addget.cs#1)]\\n [!code-vb[System.Globalization.KoreanCalendar_AddGet#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.KoreanCalendar_AddGet/VB/koreancalendar_addget.vb#1)]\"\n  syntax:\n    content: public override int GetYear (DateTime time);\n    parameters:\n    - id: time\n      type: System.DateTime\n      description: The <xref href=\"System.DateTime\"></xref> to read.\n    return:\n      type: System.Int32\n      description: An integer that represents the year in the specified <xref href=\"System.DateTime\"></xref>.\n  overload: System.Globalization.KoreanCalendar.GetYear*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/KoreanCalendar.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Globalization.KoreanCalendar.IsLeapDay(System.Int32,System.Int32,System.Int32,System.Int32)\n  commentId: M:System.Globalization.KoreanCalendar.IsLeapDay(System.Int32,System.Int32,System.Int32,System.Int32)\n  id: IsLeapDay(System.Int32,System.Int32,System.Int32,System.Int32)\n  parent: System.Globalization.KoreanCalendar\n  langs:\n  - csharp\n  name: IsLeapDay(Int32, Int32, Int32, Int32)\n  nameWithType: KoreanCalendar.IsLeapDay(Int32, Int32, Int32, Int32)\n  fullName: KoreanCalendar.IsLeapDay(Int32, Int32, Int32, Int32)\n  type: Method\n  assemblies:\n  - System.Globalization.Calendars\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Globalization\n  summary: Determines whether the specified date in the specified era is a leap day.\n  remarks: \"Leap years in the Korean calendar correspond to the same leap years in the Gregorian calendar. A leap year in the Gregorian calendar is defined as a Gregorian year that is evenly divisible by four, except if it is divisible by 100. However, Gregorian years that are divisible by 400 are leap years. A common year has 365 days and a leap year has 366 days.  \\n  \\n A leap day is a day that occurs only in a leap year. For example, the 29th day of February is the only leap day.\"\n  example:\n  - \"The following example calls <xref:System.Globalization.KoreanCalendar.IsLeapDay%2A> for the last day of the second month (February) for five years in each of the eras.  \\n  \\n [!code-cpp[System.Globalization.KoreanCalendar.IsLeapDay#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.KoreanCalendar.IsLeapDay/CPP/koreancalendar_isleapday.cpp#1)]\\n [!code-csharp[System.Globalization.KoreanCalendar.IsLeapDay#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.KoreanCalendar.IsLeapDay/CS/koreancalendar_isleapday.cs#1)]\\n [!code-vb[System.Globalization.KoreanCalendar.IsLeapDay#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.KoreanCalendar.IsLeapDay/VB/koreancalendar_isleapday.vb#1)]\"\n  syntax:\n    content: public override bool IsLeapDay (int year, int month, int day, int era);\n    parameters:\n    - id: year\n      type: System.Int32\n      description: An integer that represents the year.\n    - id: month\n      type: System.Int32\n      description: An integer from 1 to 12 that represents the month.\n    - id: day\n      type: System.Int32\n      description: An integer from 1 to 31 that represents the day.\n    - id: era\n      type: System.Int32\n      description: An integer that represents the era.\n    return:\n      type: System.Boolean\n      description: '`true` if the specified day is a leap day; otherwise, `false`.'\n  overload: System.Globalization.KoreanCalendar.IsLeapDay*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"<code>year</code> is outside the range supported by the calendar.  \\n  \\n -or-  \\n  \\n <code>month</code> is outside the range supported by the calendar.  \\n  \\n -or-  \\n  \\n <code>day</code> is outside the range supported by the calendar.  \\n  \\n -or-  \\n  \\n <code>era</code> is outside the range supported by the calendar.\"\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/KoreanCalendar.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Globalization.KoreanCalendar.IsLeapMonth(System.Int32,System.Int32,System.Int32)\n  commentId: M:System.Globalization.KoreanCalendar.IsLeapMonth(System.Int32,System.Int32,System.Int32)\n  id: IsLeapMonth(System.Int32,System.Int32,System.Int32)\n  parent: System.Globalization.KoreanCalendar\n  langs:\n  - csharp\n  name: IsLeapMonth(Int32, Int32, Int32)\n  nameWithType: KoreanCalendar.IsLeapMonth(Int32, Int32, Int32)\n  fullName: KoreanCalendar.IsLeapMonth(Int32, Int32, Int32)\n  type: Method\n  assemblies:\n  - System.Globalization.Calendars\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Globalization\n  summary: Determines whether the specified month in the specified year in the specified era is a leap month.\n  remarks: \"Leap years in the Korean calendar correspond to the same leap years in the Gregorian calendar. A leap year in the Gregorian calendar is defined as a Gregorian year that is evenly divisible by four, except if it is divisible by 100. However, Gregorian years that are divisible by 400 are leap years. A common year has 365 days and a leap year has 366 days.  \\n  \\n A leap month is an entire month that occurs only in a leap year. The Korean calendar does not have any leap months.\"\n  example:\n  - \"The following example calls <xref:System.Globalization.KoreanCalendar.IsLeapMonth%2A> for all the months in five years in the current era.  \\n  \\n [!code-cpp[System.Globalization.KoreanCalendar.IsLeapMonth#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.KoreanCalendar.IsLeapMonth/CPP/koreancalendar_isleapmonth.cpp#1)]\\n [!code-csharp[System.Globalization.KoreanCalendar.IsLeapMonth#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.KoreanCalendar.IsLeapMonth/CS/koreancalendar_isleapmonth.cs#1)]\\n [!code-vb[System.Globalization.KoreanCalendar.IsLeapMonth#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.KoreanCalendar.IsLeapMonth/VB/koreancalendar_isleapmonth.vb#1)]\"\n  syntax:\n    content: public override bool IsLeapMonth (int year, int month, int era);\n    parameters:\n    - id: year\n      type: System.Int32\n      description: An integer that represents the year.\n    - id: month\n      type: System.Int32\n      description: An integer from 1 to 12 that represents the month.\n    - id: era\n      type: System.Int32\n      description: An integer that represents the era.\n    return:\n      type: System.Boolean\n      description: This method always returns `false`, unless overridden by a derived class.\n  overload: System.Globalization.KoreanCalendar.IsLeapMonth*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"<code>year</code> is outside the range supported by the calendar.  \\n  \\n -or-  \\n  \\n <code>month</code> is outside the range supported by the calendar.  \\n  \\n -or-  \\n  \\n <code>era</code> is outside the range supported by the calendar.\"\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/KoreanCalendar.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Globalization.KoreanCalendar.IsLeapYear(System.Int32,System.Int32)\n  commentId: M:System.Globalization.KoreanCalendar.IsLeapYear(System.Int32,System.Int32)\n  id: IsLeapYear(System.Int32,System.Int32)\n  parent: System.Globalization.KoreanCalendar\n  langs:\n  - csharp\n  name: IsLeapYear(Int32, Int32)\n  nameWithType: KoreanCalendar.IsLeapYear(Int32, Int32)\n  fullName: KoreanCalendar.IsLeapYear(Int32, Int32)\n  type: Method\n  assemblies:\n  - System.Globalization.Calendars\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Globalization\n  summary: Determines whether the specified year in the specified era is a leap year.\n  remarks: Leap years in the Korean calendar correspond to the same leap years in the Gregorian calendar. A leap year in the Gregorian calendar is defined as a Gregorian year that is evenly divisible by four, except if it is divisible by 100. However, Gregorian years that are divisible by 400 are leap years. A common year has 365 days and a leap year has 366 days.\n  example:\n  - \"The following example calls <xref:System.Globalization.KoreanCalendar.IsLeapYear%2A> for five years in each of the eras.  \\n  \\n [!code-cpp[System.Globalization.KoreanCalendar.IsLeapYear#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.KoreanCalendar.IsLeapYear/CPP/koreancalendar_isleapyear.cpp#1)]\\n [!code-csharp[System.Globalization.KoreanCalendar.IsLeapYear#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.KoreanCalendar.IsLeapYear/CS/koreancalendar_isleapyear.cs#1)]\\n [!code-vb[System.Globalization.KoreanCalendar.IsLeapYear#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.KoreanCalendar.IsLeapYear/VB/koreancalendar_isleapyear.vb#1)]\"\n  syntax:\n    content: public override bool IsLeapYear (int year, int era);\n    parameters:\n    - id: year\n      type: System.Int32\n      description: An integer that represents the year.\n    - id: era\n      type: System.Int32\n      description: An integer that represents the era.\n    return:\n      type: System.Boolean\n      description: '`true` if the specified year is a leap year; otherwise, `false`.'\n  overload: System.Globalization.KoreanCalendar.IsLeapYear*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"<code>year</code> is outside the range supported by the calendar.  \\n  \\n -or-  \\n  \\n <code>era</code> is outside the range supported by the calendar.\"\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/KoreanCalendar.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Globalization.KoreanCalendar.KoreanEra\n  commentId: F:System.Globalization.KoreanCalendar.KoreanEra\n  id: KoreanEra\n  parent: System.Globalization.KoreanCalendar\n  langs:\n  - csharp\n  name: KoreanEra\n  nameWithType: KoreanCalendar.KoreanEra\n  fullName: KoreanCalendar.KoreanEra\n  type: Field\n  assemblies:\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Globalization\n  summary: Represents the current era. This field is constant.\n  remarks: The <xref:System.Globalization.KoreanCalendar> class recognizes only the current era. This field always returns 1.\n  syntax:\n    content: public const int KoreanEra = 1;\n    return:\n      type: System.Int32\n      description: ''\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/KoreanCalendar.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Globalization.KoreanCalendar.MaxSupportedDateTime\n  commentId: P:System.Globalization.KoreanCalendar.MaxSupportedDateTime\n  id: MaxSupportedDateTime\n  parent: System.Globalization.KoreanCalendar\n  langs:\n  - csharp\n  name: MaxSupportedDateTime\n  nameWithType: KoreanCalendar.MaxSupportedDateTime\n  fullName: KoreanCalendar.MaxSupportedDateTime\n  type: Property\n  assemblies:\n  - System.Globalization.Calendars\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Globalization\n  summary: Gets the latest date and time supported by the <xref href=\"System.Globalization.KoreanCalendar\"></xref> class.\n  remarks: ''\n  example:\n  - \"The following code example gets the minimum value and the maximum value of the calendar.  \\n  \\n [!code-cpp[System.Globalization.KoreanCalendar_MinMax#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.KoreanCalendar_MinMax/CPP/koreancalendar_minmax.cpp#1)]\\n [!code-csharp[System.Globalization.KoreanCalendar_MinMax#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.KoreanCalendar_MinMax/CS/koreancalendar_minmax.cs#1)]\\n [!code-vb[System.Globalization.KoreanCalendar_MinMax#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.KoreanCalendar_MinMax/VB/koreancalendar_minmax.vb#1)]\"\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(false)]\n\n      public override DateTime MaxSupportedDateTime { get; }\n    return:\n      type: System.DateTime\n      description: The latest date and time supported by the <xref href=\"System.Globalization.KoreanCalendar\"></xref> class, which is equivalent to the last moment of December 31, 9999 C.E. in the Gregorian calendar.\n  overload: System.Globalization.KoreanCalendar.MaxSupportedDateTime*\n  exceptions: []\n  attributes:\n  - type: System.Runtime.InteropServices.ComVisibleAttribute\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/KoreanCalendar.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Globalization.KoreanCalendar.MinSupportedDateTime\n  commentId: P:System.Globalization.KoreanCalendar.MinSupportedDateTime\n  id: MinSupportedDateTime\n  parent: System.Globalization.KoreanCalendar\n  langs:\n  - csharp\n  name: MinSupportedDateTime\n  nameWithType: KoreanCalendar.MinSupportedDateTime\n  fullName: KoreanCalendar.MinSupportedDateTime\n  type: Property\n  assemblies:\n  - System.Globalization.Calendars\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Globalization\n  summary: Gets the earliest date and time supported by the <xref href=\"System.Globalization.KoreanCalendar\"></xref> class.\n  remarks: ''\n  example:\n  - \"The following code example gets the minimum value and the maximum value of the calendar.  \\n  \\n [!code-cpp[System.Globalization.KoreanCalendar_MinMax#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Globalization.KoreanCalendar_MinMax/CPP/koreancalendar_minmax.cpp#1)]\\n [!code-csharp[System.Globalization.KoreanCalendar_MinMax#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Globalization.KoreanCalendar_MinMax/CS/koreancalendar_minmax.cs#1)]\\n [!code-vb[System.Globalization.KoreanCalendar_MinMax#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Globalization.KoreanCalendar_MinMax/VB/koreancalendar_minmax.vb#1)]\"\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(false)]\n\n      public override DateTime MinSupportedDateTime { get; }\n    return:\n      type: System.DateTime\n      description: The earliest date and time supported by the <xref href=\"System.Globalization.KoreanCalendar\"></xref> class, which is equivalent to the first moment of January 1, 0001 C.E. in the Gregorian calendar.\n  overload: System.Globalization.KoreanCalendar.MinSupportedDateTime*\n  exceptions: []\n  attributes:\n  - type: System.Runtime.InteropServices.ComVisibleAttribute\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/KoreanCalendar.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Globalization.KoreanCalendar.ToDateTime(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)\n  commentId: M:System.Globalization.KoreanCalendar.ToDateTime(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)\n  id: ToDateTime(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)\n  parent: System.Globalization.KoreanCalendar\n  langs:\n  - csharp\n  name: ToDateTime(Int32, Int32, Int32, Int32, Int32, Int32, Int32, Int32)\n  nameWithType: KoreanCalendar.ToDateTime(Int32, Int32, Int32, Int32, Int32, Int32, Int32, Int32)\n  fullName: KoreanCalendar.ToDateTime(Int32, Int32, Int32, Int32, Int32, Int32, Int32, Int32)\n  type: Method\n  assemblies:\n  - System.Globalization.Calendars\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Globalization\n  summary: Returns a <xref href=\"System.DateTime\"></xref> that is set to the specified date and time in the specified era.\n  syntax:\n    content: public override DateTime ToDateTime (int year, int month, int day, int hour, int minute, int second, int millisecond, int era);\n    parameters:\n    - id: year\n      type: System.Int32\n      description: An integer that represents the year.\n    - id: month\n      type: System.Int32\n      description: An integer from 1 to 12 that represents the month.\n    - id: day\n      type: System.Int32\n      description: An integer from 1 to 31 that represents the day.\n    - id: hour\n      type: System.Int32\n      description: An integer from 0 to 23 that represents the hour.\n    - id: minute\n      type: System.Int32\n      description: An integer from 0 to 59 that represents the minute.\n    - id: second\n      type: System.Int32\n      description: An integer from 0 to 59 that represents the second.\n    - id: millisecond\n      type: System.Int32\n      description: An integer from 0 to 999 that represents the millisecond.\n    - id: era\n      type: System.Int32\n      description: An integer that represents the era.\n    return:\n      type: System.DateTime\n      description: The <xref href=\"System.DateTime\"></xref> that is set to the specified date and time in the current era.\n  overload: System.Globalization.KoreanCalendar.ToDateTime*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"<code>year</code> is outside the range supported by the calendar.  \\n  \\n -or-  \\n  \\n <code>month</code> is outside the range supported by the calendar.  \\n  \\n -or-  \\n  \\n <code>day</code> is outside the range supported by the calendar.  \\n  \\n -or-  \\n  \\n <code>hour</code> is less than zero or greater than 23.  \\n  \\n -or-  \\n  \\n <code>minute</code> is less than zero or greater than 59.  \\n  \\n -or-  \\n  \\n <code>second</code> is less than zero or greater than 59.  \\n  \\n -or-  \\n  \\n <code>millisecond</code> is less than zero or greater than 999.  \\n  \\n -or-  \\n  \\n <code>era</code> is outside the range supported by the calendar.\"\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/KoreanCalendar.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Globalization.KoreanCalendar.ToFourDigitYear(System.Int32)\n  commentId: M:System.Globalization.KoreanCalendar.ToFourDigitYear(System.Int32)\n  id: ToFourDigitYear(System.Int32)\n  parent: System.Globalization.KoreanCalendar\n  langs:\n  - csharp\n  name: ToFourDigitYear(Int32)\n  nameWithType: KoreanCalendar.ToFourDigitYear(Int32)\n  fullName: KoreanCalendar.ToFourDigitYear(Int32)\n  type: Method\n  assemblies:\n  - System.Globalization.Calendars\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Globalization\n  summary: Converts the specified year to a four-digit year by using the <xref href=\"System.Globalization.KoreanCalendar.TwoDigitYearMax\"></xref> property to determine the appropriate century.\n  remarks: \"<xref:System.Globalization.KoreanCalendar.TwoDigitYearMax%2A> defines the last year in the 100-year range that can be represented by <xref:System.Globalization.KoreanCalendar.ToFourDigitYear%2A>. The century is determined by finding the sole occurrence of the two-digit year within that 100-year range. For example, if <xref:System.Globalization.KoreanCalendar.TwoDigitYearMax%2A> is set to 2029, the 100-year range is from 1930 to 2029. Therefore, a two-digit value of 30 is interpreted as 1930, while a two-digit value of 29 is interpreted as 2029.  \\n  \\n <xref:System.Globalization.KoreanCalendar.ToFourDigitYear%2A> supports either a two-digit year or a four-digit year. Passing a two-digit year value (less than 100) causes the method to convert the value to a four-digit value according to the <xref:System.Globalization.KoreanCalendar.TwoDigitYearMax%2A> value representing the appropriate century. If the application supplies a four-digit year value that is within the supported calendar range to <xref:System.Globalization.KoreanCalendar.ToFourDigitYear%2A>, the method returns the actual input value. If the application supplies a four-digit value that is outside the supported calendar range, or if it supplies a negative value, the method throws an exception.\"\n  syntax:\n    content: public override int ToFourDigitYear (int year);\n    parameters:\n    - id: year\n      type: System.Int32\n      description: A two-digit or four-digit integer that represents the year to convert.\n    return:\n      type: System.Int32\n      description: An integer that contains the four-digit representation of <code>year</code>.\n  overload: System.Globalization.KoreanCalendar.ToFourDigitYear*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: <code>year</code> is outside the range supported by the calendar.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/KoreanCalendar.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Globalization.KoreanCalendar.TwoDigitYearMax\n  commentId: P:System.Globalization.KoreanCalendar.TwoDigitYearMax\n  id: TwoDigitYearMax\n  parent: System.Globalization.KoreanCalendar\n  langs:\n  - csharp\n  name: TwoDigitYearMax\n  nameWithType: KoreanCalendar.TwoDigitYearMax\n  fullName: KoreanCalendar.TwoDigitYearMax\n  type: Property\n  assemblies:\n  - System.Globalization.Calendars\n  - mscorlib\n  - netstandard\n  - System.Runtime\n  namespace: System.Globalization\n  summary: Gets or sets the last year of a 100-year range that can be represented by a 2-digit year.\n  remarks: \"This property allows a 2-digit year to be properly translated to a 4-digit year. For example, in the Gregorian calendar, if this property is set to 2029, the 100-year range is from 1930 to 2029. Therefore, a 2-digit value of 30 is interpreted as 1930, while a 2-digit value of 29 is interpreted as 2029.  \\n  \\n The initial value of this property is derived from the settings in the regional and language options portion of Control Panel. However, that information can change during the life of the <xref:System.AppDomain>. The <xref:System.Globalization.KoreanCalendar> class does not detect changes in the system settings automatically.  \\n  \\n The application should set this value to 99 to indicate that 2-digit years are to be taken literally. For example, if this property is set to 99, the 100-year range is from 0 (not a valid value for most calendars) to 99. Therefore, a 2-digit value of 30 is interpreted as 30.\"\n  syntax:\n    content: public override int TwoDigitYearMax { get; set; }\n    return:\n      type: System.Int32\n      description: The last year of a 100-year range that can be represented by a 2-digit year.\n  overload: System.Globalization.KoreanCalendar.TwoDigitYearMax*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"The value specified in a set operation is less than 99.  \\n  \\n -or-  \\n  \\n The value specified in a set operation is greater than `MaxSupportedDateTime.Year`.\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: In a set operation, the current instance is read-only.\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/KoreanCalendar.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\nreferences:\n- uid: System.Globalization.Calendar\n  parent: System.Globalization\n  isExternal: false\n  name: Calendar\n  nameWithType: Calendar\n  fullName: System.Globalization.Calendar\n- uid: System.TypeInitializationException\n  parent: System\n  isExternal: false\n  name: TypeInitializationException\n  nameWithType: TypeInitializationException\n  fullName: System.TypeInitializationException\n- uid: System.ArgumentOutOfRangeException\n  parent: System\n  isExternal: false\n  name: ArgumentOutOfRangeException\n  nameWithType: ArgumentOutOfRangeException\n  fullName: System.ArgumentOutOfRangeException\n- uid: System.InvalidOperationException\n  parent: System\n  isExternal: false\n  name: InvalidOperationException\n  nameWithType: InvalidOperationException\n  fullName: System.InvalidOperationException\n- uid: System.Globalization.KoreanCalendar.#ctor\n  parent: System.Globalization.KoreanCalendar\n  isExternal: false\n  name: KoreanCalendar()\n  nameWithType: KoreanCalendar.KoreanCalendar()\n  fullName: KoreanCalendar.KoreanCalendar()\n- uid: System.Globalization.KoreanCalendar.AddMonths(System.DateTime,System.Int32)\n  parent: System.Globalization.KoreanCalendar\n  isExternal: false\n  name: AddMonths(DateTime, Int32)\n  nameWithType: KoreanCalendar.AddMonths(DateTime, Int32)\n  fullName: KoreanCalendar.AddMonths(DateTime, Int32)\n- uid: System.DateTime\n  parent: System\n  isExternal: false\n  name: DateTime\n  nameWithType: DateTime\n  fullName: System.DateTime\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Globalization.KoreanCalendar.AddYears(System.DateTime,System.Int32)\n  parent: System.Globalization.KoreanCalendar\n  isExternal: false\n  name: AddYears(DateTime, Int32)\n  nameWithType: KoreanCalendar.AddYears(DateTime, Int32)\n  fullName: KoreanCalendar.AddYears(DateTime, Int32)\n- uid: System.Globalization.KoreanCalendar.AlgorithmType\n  parent: System.Globalization.KoreanCalendar\n  isExternal: false\n  name: AlgorithmType\n  nameWithType: KoreanCalendar.AlgorithmType\n  fullName: KoreanCalendar.AlgorithmType\n- uid: System.Globalization.CalendarAlgorithmType\n  parent: System.Globalization\n  isExternal: false\n  name: CalendarAlgorithmType\n  nameWithType: CalendarAlgorithmType\n  fullName: System.Globalization.CalendarAlgorithmType\n- uid: System.Globalization.KoreanCalendar.Eras\n  parent: System.Globalization.KoreanCalendar\n  isExternal: false\n  name: Eras\n  nameWithType: KoreanCalendar.Eras\n  fullName: KoreanCalendar.Eras\n- uid: System.Int32[]\n  parent: System\n  isExternal: false\n  name: Int32[]\n  nameWithType: Int32[]\n  fullName: System.Int32[]\n  spec.csharp:\n  - uid: System.Int32\n    name: Int32\n    nameWithType: Int32\n    fullName: System.Int32\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Globalization.KoreanCalendar.GetDayOfMonth(System.DateTime)\n  parent: System.Globalization.KoreanCalendar\n  isExternal: false\n  name: GetDayOfMonth(DateTime)\n  nameWithType: KoreanCalendar.GetDayOfMonth(DateTime)\n  fullName: KoreanCalendar.GetDayOfMonth(DateTime)\n- uid: System.Globalization.KoreanCalendar.GetDayOfWeek(System.DateTime)\n  parent: System.Globalization.KoreanCalendar\n  isExternal: false\n  name: GetDayOfWeek(DateTime)\n  nameWithType: KoreanCalendar.GetDayOfWeek(DateTime)\n  fullName: KoreanCalendar.GetDayOfWeek(DateTime)\n- uid: System.DayOfWeek\n  parent: System\n  isExternal: false\n  name: DayOfWeek\n  nameWithType: DayOfWeek\n  fullName: System.DayOfWeek\n- uid: System.Globalization.KoreanCalendar.GetDayOfYear(System.DateTime)\n  parent: System.Globalization.KoreanCalendar\n  isExternal: false\n  name: GetDayOfYear(DateTime)\n  nameWithType: KoreanCalendar.GetDayOfYear(DateTime)\n  fullName: KoreanCalendar.GetDayOfYear(DateTime)\n- uid: System.Globalization.KoreanCalendar.GetDaysInMonth(System.Int32,System.Int32,System.Int32)\n  parent: System.Globalization.KoreanCalendar\n  isExternal: false\n  name: GetDaysInMonth(Int32, Int32, Int32)\n  nameWithType: KoreanCalendar.GetDaysInMonth(Int32, Int32, Int32)\n  fullName: KoreanCalendar.GetDaysInMonth(Int32, Int32, Int32)\n- uid: System.Globalization.KoreanCalendar.GetDaysInYear(System.Int32,System.Int32)\n  parent: System.Globalization.KoreanCalendar\n  isExternal: false\n  name: GetDaysInYear(Int32, Int32)\n  nameWithType: KoreanCalendar.GetDaysInYear(Int32, Int32)\n  fullName: KoreanCalendar.GetDaysInYear(Int32, Int32)\n- uid: System.Globalization.KoreanCalendar.GetEra(System.DateTime)\n  parent: System.Globalization.KoreanCalendar\n  isExternal: false\n  name: GetEra(DateTime)\n  nameWithType: KoreanCalendar.GetEra(DateTime)\n  fullName: KoreanCalendar.GetEra(DateTime)\n- uid: System.Globalization.KoreanCalendar.GetLeapMonth(System.Int32,System.Int32)\n  parent: System.Globalization.KoreanCalendar\n  isExternal: false\n  name: GetLeapMonth(Int32, Int32)\n  nameWithType: KoreanCalendar.GetLeapMonth(Int32, Int32)\n  fullName: KoreanCalendar.GetLeapMonth(Int32, Int32)\n- uid: System.Globalization.KoreanCalendar.GetMonth(System.DateTime)\n  parent: System.Globalization.KoreanCalendar\n  isExternal: false\n  name: GetMonth(DateTime)\n  nameWithType: KoreanCalendar.GetMonth(DateTime)\n  fullName: KoreanCalendar.GetMonth(DateTime)\n- uid: System.Globalization.KoreanCalendar.GetMonthsInYear(System.Int32,System.Int32)\n  parent: System.Globalization.KoreanCalendar\n  isExternal: false\n  name: GetMonthsInYear(Int32, Int32)\n  nameWithType: KoreanCalendar.GetMonthsInYear(Int32, Int32)\n  fullName: KoreanCalendar.GetMonthsInYear(Int32, Int32)\n- uid: System.Globalization.KoreanCalendar.GetWeekOfYear(System.DateTime,System.Globalization.CalendarWeekRule,System.DayOfWeek)\n  parent: System.Globalization.KoreanCalendar\n  isExternal: false\n  name: GetWeekOfYear(DateTime, CalendarWeekRule, DayOfWeek)\n  nameWithType: KoreanCalendar.GetWeekOfYear(DateTime, CalendarWeekRule, DayOfWeek)\n  fullName: KoreanCalendar.GetWeekOfYear(DateTime, CalendarWeekRule, DayOfWeek)\n- uid: System.Globalization.CalendarWeekRule\n  parent: System.Globalization\n  isExternal: false\n  name: CalendarWeekRule\n  nameWithType: CalendarWeekRule\n  fullName: System.Globalization.CalendarWeekRule\n- uid: System.Globalization.KoreanCalendar.GetYear(System.DateTime)\n  parent: System.Globalization.KoreanCalendar\n  isExternal: false\n  name: GetYear(DateTime)\n  nameWithType: KoreanCalendar.GetYear(DateTime)\n  fullName: KoreanCalendar.GetYear(DateTime)\n- uid: System.Globalization.KoreanCalendar.IsLeapDay(System.Int32,System.Int32,System.Int32,System.Int32)\n  parent: System.Globalization.KoreanCalendar\n  isExternal: false\n  name: IsLeapDay(Int32, Int32, Int32, Int32)\n  nameWithType: KoreanCalendar.IsLeapDay(Int32, Int32, Int32, Int32)\n  fullName: KoreanCalendar.IsLeapDay(Int32, Int32, Int32, Int32)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Globalization.KoreanCalendar.IsLeapMonth(System.Int32,System.Int32,System.Int32)\n  parent: System.Globalization.KoreanCalendar\n  isExternal: false\n  name: IsLeapMonth(Int32, Int32, Int32)\n  nameWithType: KoreanCalendar.IsLeapMonth(Int32, Int32, Int32)\n  fullName: KoreanCalendar.IsLeapMonth(Int32, Int32, Int32)\n- uid: System.Globalization.KoreanCalendar.IsLeapYear(System.Int32,System.Int32)\n  parent: System.Globalization.KoreanCalendar\n  isExternal: false\n  name: IsLeapYear(Int32, Int32)\n  nameWithType: KoreanCalendar.IsLeapYear(Int32, Int32)\n  fullName: KoreanCalendar.IsLeapYear(Int32, Int32)\n- uid: System.Globalization.KoreanCalendar.KoreanEra\n  parent: System.Globalization.KoreanCalendar\n  isExternal: false\n  name: KoreanEra\n  nameWithType: KoreanCalendar.KoreanEra\n  fullName: KoreanCalendar.KoreanEra\n- uid: System.Globalization.KoreanCalendar.MaxSupportedDateTime\n  parent: System.Globalization.KoreanCalendar\n  isExternal: false\n  name: MaxSupportedDateTime\n  nameWithType: KoreanCalendar.MaxSupportedDateTime\n  fullName: KoreanCalendar.MaxSupportedDateTime\n- uid: System.Globalization.KoreanCalendar.MinSupportedDateTime\n  parent: System.Globalization.KoreanCalendar\n  isExternal: false\n  name: MinSupportedDateTime\n  nameWithType: KoreanCalendar.MinSupportedDateTime\n  fullName: KoreanCalendar.MinSupportedDateTime\n- uid: System.Globalization.KoreanCalendar.ToDateTime(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)\n  parent: System.Globalization.KoreanCalendar\n  isExternal: false\n  name: ToDateTime(Int32, Int32, Int32, Int32, Int32, Int32, Int32, Int32)\n  nameWithType: KoreanCalendar.ToDateTime(Int32, Int32, Int32, Int32, Int32, Int32, Int32, Int32)\n  fullName: KoreanCalendar.ToDateTime(Int32, Int32, Int32, Int32, Int32, Int32, Int32, Int32)\n- uid: System.Globalization.KoreanCalendar.ToFourDigitYear(System.Int32)\n  parent: System.Globalization.KoreanCalendar\n  isExternal: false\n  name: ToFourDigitYear(Int32)\n  nameWithType: KoreanCalendar.ToFourDigitYear(Int32)\n  fullName: KoreanCalendar.ToFourDigitYear(Int32)\n- uid: System.Globalization.KoreanCalendar.TwoDigitYearMax\n  parent: System.Globalization.KoreanCalendar\n  isExternal: false\n  name: TwoDigitYearMax\n  nameWithType: KoreanCalendar.TwoDigitYearMax\n  fullName: KoreanCalendar.TwoDigitYearMax\n- uid: System.Globalization.KoreanCalendar.#ctor*\n  parent: System.Globalization.KoreanCalendar\n  isExternal: false\n  name: KoreanCalendar\n  nameWithType: KoreanCalendar.KoreanCalendar\n  fullName: KoreanCalendar.KoreanCalendar\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/KoreanCalendar.xml\n- uid: System.Globalization.KoreanCalendar.AddMonths*\n  parent: System.Globalization.KoreanCalendar\n  isExternal: false\n  name: AddMonths\n  nameWithType: KoreanCalendar.AddMonths\n  fullName: KoreanCalendar.AddMonths\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/KoreanCalendar.xml\n- uid: System.Globalization.KoreanCalendar.AddYears*\n  parent: System.Globalization.KoreanCalendar\n  isExternal: false\n  name: AddYears\n  nameWithType: KoreanCalendar.AddYears\n  fullName: KoreanCalendar.AddYears\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/KoreanCalendar.xml\n- uid: System.Globalization.KoreanCalendar.AlgorithmType*\n  parent: System.Globalization.KoreanCalendar\n  isExternal: false\n  name: AlgorithmType\n  nameWithType: KoreanCalendar.AlgorithmType\n  fullName: KoreanCalendar.AlgorithmType\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/KoreanCalendar.xml\n- uid: System.Globalization.KoreanCalendar.Eras*\n  parent: System.Globalization.KoreanCalendar\n  isExternal: false\n  name: Eras\n  nameWithType: KoreanCalendar.Eras\n  fullName: KoreanCalendar.Eras\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/KoreanCalendar.xml\n- uid: System.Globalization.KoreanCalendar.GetDayOfMonth*\n  parent: System.Globalization.KoreanCalendar\n  isExternal: false\n  name: GetDayOfMonth\n  nameWithType: KoreanCalendar.GetDayOfMonth\n  fullName: KoreanCalendar.GetDayOfMonth\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/KoreanCalendar.xml\n- uid: System.Globalization.KoreanCalendar.GetDayOfWeek*\n  parent: System.Globalization.KoreanCalendar\n  isExternal: false\n  name: GetDayOfWeek\n  nameWithType: KoreanCalendar.GetDayOfWeek\n  fullName: KoreanCalendar.GetDayOfWeek\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/KoreanCalendar.xml\n- uid: System.Globalization.KoreanCalendar.GetDayOfYear*\n  parent: System.Globalization.KoreanCalendar\n  isExternal: false\n  name: GetDayOfYear\n  nameWithType: KoreanCalendar.GetDayOfYear\n  fullName: KoreanCalendar.GetDayOfYear\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/KoreanCalendar.xml\n- uid: System.Globalization.KoreanCalendar.GetDaysInMonth*\n  parent: System.Globalization.KoreanCalendar\n  isExternal: false\n  name: GetDaysInMonth\n  nameWithType: KoreanCalendar.GetDaysInMonth\n  fullName: KoreanCalendar.GetDaysInMonth\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/KoreanCalendar.xml\n- uid: System.Globalization.KoreanCalendar.GetDaysInYear*\n  parent: System.Globalization.KoreanCalendar\n  isExternal: false\n  name: GetDaysInYear\n  nameWithType: KoreanCalendar.GetDaysInYear\n  fullName: KoreanCalendar.GetDaysInYear\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/KoreanCalendar.xml\n- uid: System.Globalization.KoreanCalendar.GetEra*\n  parent: System.Globalization.KoreanCalendar\n  isExternal: false\n  name: GetEra\n  nameWithType: KoreanCalendar.GetEra\n  fullName: KoreanCalendar.GetEra\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/KoreanCalendar.xml\n- uid: System.Globalization.KoreanCalendar.GetLeapMonth*\n  parent: System.Globalization.KoreanCalendar\n  isExternal: false\n  name: GetLeapMonth\n  nameWithType: KoreanCalendar.GetLeapMonth\n  fullName: KoreanCalendar.GetLeapMonth\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/KoreanCalendar.xml\n- uid: System.Globalization.KoreanCalendar.GetMonth*\n  parent: System.Globalization.KoreanCalendar\n  isExternal: false\n  name: GetMonth\n  nameWithType: KoreanCalendar.GetMonth\n  fullName: KoreanCalendar.GetMonth\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/KoreanCalendar.xml\n- uid: System.Globalization.KoreanCalendar.GetMonthsInYear*\n  parent: System.Globalization.KoreanCalendar\n  isExternal: false\n  name: GetMonthsInYear\n  nameWithType: KoreanCalendar.GetMonthsInYear\n  fullName: KoreanCalendar.GetMonthsInYear\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/KoreanCalendar.xml\n- uid: System.Globalization.KoreanCalendar.GetWeekOfYear*\n  parent: System.Globalization.KoreanCalendar\n  isExternal: false\n  name: GetWeekOfYear\n  nameWithType: KoreanCalendar.GetWeekOfYear\n  fullName: KoreanCalendar.GetWeekOfYear\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/KoreanCalendar.xml\n- uid: System.Globalization.KoreanCalendar.GetYear*\n  parent: System.Globalization.KoreanCalendar\n  isExternal: false\n  name: GetYear\n  nameWithType: KoreanCalendar.GetYear\n  fullName: KoreanCalendar.GetYear\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/KoreanCalendar.xml\n- uid: System.Globalization.KoreanCalendar.IsLeapDay*\n  parent: System.Globalization.KoreanCalendar\n  isExternal: false\n  name: IsLeapDay\n  nameWithType: KoreanCalendar.IsLeapDay\n  fullName: KoreanCalendar.IsLeapDay\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/KoreanCalendar.xml\n- uid: System.Globalization.KoreanCalendar.IsLeapMonth*\n  parent: System.Globalization.KoreanCalendar\n  isExternal: false\n  name: IsLeapMonth\n  nameWithType: KoreanCalendar.IsLeapMonth\n  fullName: KoreanCalendar.IsLeapMonth\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/KoreanCalendar.xml\n- uid: System.Globalization.KoreanCalendar.IsLeapYear*\n  parent: System.Globalization.KoreanCalendar\n  isExternal: false\n  name: IsLeapYear\n  nameWithType: KoreanCalendar.IsLeapYear\n  fullName: KoreanCalendar.IsLeapYear\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/KoreanCalendar.xml\n- uid: System.Globalization.KoreanCalendar.MaxSupportedDateTime*\n  parent: System.Globalization.KoreanCalendar\n  isExternal: false\n  name: MaxSupportedDateTime\n  nameWithType: KoreanCalendar.MaxSupportedDateTime\n  fullName: KoreanCalendar.MaxSupportedDateTime\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/KoreanCalendar.xml\n- uid: System.Globalization.KoreanCalendar.MinSupportedDateTime*\n  parent: System.Globalization.KoreanCalendar\n  isExternal: false\n  name: MinSupportedDateTime\n  nameWithType: KoreanCalendar.MinSupportedDateTime\n  fullName: KoreanCalendar.MinSupportedDateTime\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/KoreanCalendar.xml\n- uid: System.Globalization.KoreanCalendar.ToDateTime*\n  parent: System.Globalization.KoreanCalendar\n  isExternal: false\n  name: ToDateTime\n  nameWithType: KoreanCalendar.ToDateTime\n  fullName: KoreanCalendar.ToDateTime\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/KoreanCalendar.xml\n- uid: System.Globalization.KoreanCalendar.ToFourDigitYear*\n  parent: System.Globalization.KoreanCalendar\n  isExternal: false\n  name: ToFourDigitYear\n  nameWithType: KoreanCalendar.ToFourDigitYear\n  fullName: KoreanCalendar.ToFourDigitYear\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/KoreanCalendar.xml\n- uid: System.Globalization.KoreanCalendar.TwoDigitYearMax*\n  parent: System.Globalization.KoreanCalendar\n  isExternal: false\n  name: TwoDigitYearMax\n  nameWithType: KoreanCalendar.TwoDigitYearMax\n  fullName: KoreanCalendar.TwoDigitYearMax\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-1.3\n  - netstandard-1.4\n  - netstandard-1.6\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Globalization/KoreanCalendar.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.Globalization.Calendar.AddDays(System.DateTime,System.Int32)\n  parent: System.Globalization.Calendar\n  isExternal: false\n  name: AddDays(DateTime, Int32)\n  nameWithType: Calendar.AddDays(DateTime, Int32)\n  fullName: Calendar.AddDays(DateTime, Int32)\n- uid: System.Globalization.Calendar.AddHours(System.DateTime,System.Int32)\n  parent: System.Globalization.Calendar\n  isExternal: false\n  name: AddHours(DateTime, Int32)\n  nameWithType: Calendar.AddHours(DateTime, Int32)\n  fullName: Calendar.AddHours(DateTime, Int32)\n- uid: System.Globalization.Calendar.AddMilliseconds(System.DateTime,System.Double)\n  parent: System.Globalization.Calendar\n  isExternal: false\n  name: AddMilliseconds(DateTime, Double)\n  nameWithType: Calendar.AddMilliseconds(DateTime, Double)\n  fullName: Calendar.AddMilliseconds(DateTime, Double)\n- uid: System.Globalization.Calendar.AddMinutes(System.DateTime,System.Int32)\n  parent: System.Globalization.Calendar\n  isExternal: false\n  name: AddMinutes(DateTime, Int32)\n  nameWithType: Calendar.AddMinutes(DateTime, Int32)\n  fullName: Calendar.AddMinutes(DateTime, Int32)\n- uid: System.Globalization.Calendar.AddSeconds(System.DateTime,System.Int32)\n  parent: System.Globalization.Calendar\n  isExternal: false\n  name: AddSeconds(DateTime, Int32)\n  nameWithType: Calendar.AddSeconds(DateTime, Int32)\n  fullName: Calendar.AddSeconds(DateTime, Int32)\n- uid: System.Globalization.Calendar.AddWeeks(System.DateTime,System.Int32)\n  parent: System.Globalization.Calendar\n  isExternal: false\n  name: AddWeeks(DateTime, Int32)\n  nameWithType: Calendar.AddWeeks(DateTime, Int32)\n  fullName: Calendar.AddWeeks(DateTime, Int32)\n- uid: System.Globalization.Calendar.Clone\n  parent: System.Globalization.Calendar\n  isExternal: false\n  name: Clone()\n  nameWithType: Calendar.Clone()\n  fullName: Calendar.Clone()\n- uid: System.Globalization.Calendar.CurrentEra\n  parent: System.Globalization.Calendar\n  isExternal: false\n  name: CurrentEra\n  nameWithType: Calendar.CurrentEra\n  fullName: Calendar.CurrentEra\n- uid: System.Globalization.Calendar.DaysInYearBeforeMinSupportedYear\n  parent: System.Globalization.Calendar\n  isExternal: false\n  name: DaysInYearBeforeMinSupportedYear\n  nameWithType: Calendar.DaysInYearBeforeMinSupportedYear\n  fullName: Calendar.DaysInYearBeforeMinSupportedYear\n- uid: System.Globalization.Calendar.GetDaysInMonth(System.Int32,System.Int32)\n  parent: System.Globalization.Calendar\n  isExternal: false\n  name: GetDaysInMonth(Int32, Int32)\n  nameWithType: Calendar.GetDaysInMonth(Int32, Int32)\n  fullName: Calendar.GetDaysInMonth(Int32, Int32)\n- uid: System.Globalization.Calendar.GetDaysInYear(System.Int32)\n  parent: System.Globalization.Calendar\n  isExternal: false\n  name: GetDaysInYear(Int32)\n  nameWithType: Calendar.GetDaysInYear(Int32)\n  fullName: Calendar.GetDaysInYear(Int32)\n- uid: System.Globalization.Calendar.GetHour(System.DateTime)\n  parent: System.Globalization.Calendar\n  isExternal: false\n  name: GetHour(DateTime)\n  nameWithType: Calendar.GetHour(DateTime)\n  fullName: Calendar.GetHour(DateTime)\n- uid: System.Globalization.Calendar.GetLeapMonth(System.Int32)\n  parent: System.Globalization.Calendar\n  isExternal: false\n  name: GetLeapMonth(Int32)\n  nameWithType: Calendar.GetLeapMonth(Int32)\n  fullName: Calendar.GetLeapMonth(Int32)\n- uid: System.Globalization.Calendar.GetMilliseconds(System.DateTime)\n  parent: System.Globalization.Calendar\n  isExternal: false\n  name: GetMilliseconds(DateTime)\n  nameWithType: Calendar.GetMilliseconds(DateTime)\n  fullName: Calendar.GetMilliseconds(DateTime)\n- uid: System.Globalization.Calendar.GetMinute(System.DateTime)\n  parent: System.Globalization.Calendar\n  isExternal: false\n  name: GetMinute(DateTime)\n  nameWithType: Calendar.GetMinute(DateTime)\n  fullName: Calendar.GetMinute(DateTime)\n- uid: System.Globalization.Calendar.GetMonthsInYear(System.Int32)\n  parent: System.Globalization.Calendar\n  isExternal: false\n  name: GetMonthsInYear(Int32)\n  nameWithType: Calendar.GetMonthsInYear(Int32)\n  fullName: Calendar.GetMonthsInYear(Int32)\n- uid: System.Globalization.Calendar.GetSecond(System.DateTime)\n  parent: System.Globalization.Calendar\n  isExternal: false\n  name: GetSecond(DateTime)\n  nameWithType: Calendar.GetSecond(DateTime)\n  fullName: Calendar.GetSecond(DateTime)\n- uid: System.Globalization.Calendar.IsLeapDay(System.Int32,System.Int32,System.Int32)\n  parent: System.Globalization.Calendar\n  isExternal: false\n  name: IsLeapDay(Int32, Int32, Int32)\n  nameWithType: Calendar.IsLeapDay(Int32, Int32, Int32)\n  fullName: Calendar.IsLeapDay(Int32, Int32, Int32)\n- uid: System.Globalization.Calendar.IsLeapMonth(System.Int32,System.Int32)\n  parent: System.Globalization.Calendar\n  isExternal: false\n  name: IsLeapMonth(Int32, Int32)\n  nameWithType: Calendar.IsLeapMonth(Int32, Int32)\n  fullName: Calendar.IsLeapMonth(Int32, Int32)\n- uid: System.Globalization.Calendar.IsLeapYear(System.Int32)\n  parent: System.Globalization.Calendar\n  isExternal: false\n  name: IsLeapYear(Int32)\n  nameWithType: Calendar.IsLeapYear(Int32)\n  fullName: Calendar.IsLeapYear(Int32)\n- uid: System.Globalization.Calendar.IsReadOnly\n  parent: System.Globalization.Calendar\n  isExternal: false\n  name: IsReadOnly\n  nameWithType: Calendar.IsReadOnly\n  fullName: Calendar.IsReadOnly\n- uid: System.Globalization.Calendar.ReadOnly(System.Globalization.Calendar)\n  parent: System.Globalization.Calendar\n  isExternal: false\n  name: ReadOnly(Calendar)\n  nameWithType: Calendar.ReadOnly(Calendar)\n  fullName: Calendar.ReadOnly(Calendar)\n- uid: System.Globalization.Calendar.ToDateTime(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)\n  parent: System.Globalization.Calendar\n  isExternal: false\n  name: ToDateTime(Int32, Int32, Int32, Int32, Int32, Int32, Int32)\n  nameWithType: Calendar.ToDateTime(Int32, Int32, Int32, Int32, Int32, Int32, Int32)\n  fullName: Calendar.ToDateTime(Int32, Int32, Int32, Int32, Int32, Int32, Int32)\n"}