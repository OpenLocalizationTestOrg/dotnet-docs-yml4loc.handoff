### YamlMime:ManagedReference
items:
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener
  commentId: T:Microsoft.VisualBasic.Logging.FileLogTraceListener
  id: FileLogTraceListener
  children:
  - Microsoft.VisualBasic.Logging.FileLogTraceListener.#ctor
  - Microsoft.VisualBasic.Logging.FileLogTraceListener.#ctor(System.String)
  - Microsoft.VisualBasic.Logging.FileLogTraceListener.Append
  - Microsoft.VisualBasic.Logging.FileLogTraceListener.AutoFlush
  - Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName
  - Microsoft.VisualBasic.Logging.FileLogTraceListener.Close
  - Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation
  - Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter
  - Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior
  - Microsoft.VisualBasic.Logging.FileLogTraceListener.Dispose(System.Boolean)
  - Microsoft.VisualBasic.Logging.FileLogTraceListener.Encoding
  - Microsoft.VisualBasic.Logging.FileLogTraceListener.Flush
  - Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName
  - Microsoft.VisualBasic.Logging.FileLogTraceListener.GetSupportedAttributes
  - Microsoft.VisualBasic.Logging.FileLogTraceListener.IncludeHostName
  - Microsoft.VisualBasic.Logging.FileLogTraceListener.Location
  - Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule
  - Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize
  - Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace
  - Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)
  - Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])
  - Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)
  - Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])
  - Microsoft.VisualBasic.Logging.FileLogTraceListener.Write(System.String)
  - Microsoft.VisualBasic.Logging.FileLogTraceListener.WriteLine(System.String)
  langs:
  - csharp
  name: FileLogTraceListener
  nameWithType: FileLogTraceListener
  fullName: Microsoft.VisualBasic.Logging.FileLogTraceListener
  type: Class
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Logging
  summary: Provides a simple listener that directs logging output to file.
  remarks: "The <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> class provides automated maintenance capabilities to archive log files as needed, on a daily or per-application basis. This automatic archival functionality helps reduce the maintenance responsibilities of developers and administrators.  \n  \n An instance of <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> can be added to the <xref:System.Diagnostics.Debug.Listeners%2A?displayProperty=fullName> or <xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=fullName> collections to redirect output from logging to a text file. Instances of this class can also be added to `My.Application.Log` or `My.Log` (for Web applications) in [!INCLUDE[vbprvb](~/includes/vbprvb-md.md)] applications. For more information, see [Walkthrough: Changing Where My.Application.Log Writes Information](~/docs/visual-basic/developing-apps/programming/log-info/walkthrough-changing-where-my-application-log-writes-information.md)`.`  \n  \n The main features of this class are:  \n  \n1.  *Archival functionality*. The log files generated by this class are named according to the base name and the date, along with a number to distinguish the log file from successive versions of the log. New log files are created on an as-needed basis.  \n  \n     The explicit form of the file name is `baseName`[-`dateStamp`][-`version`].log, where:  \n  \n    -   The `baseName` part is the fundamental log name, specified by the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName%2A> property.  \n  \n    -   The `dateStamp` part has the format \"YYYY-MM-DD\", and it is shown when <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A> is <xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Daily> or <xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Weekly>.  \n  \n    -   If more than one log file is needed with the same `baseName` and `dateStamp`, the `version` part, a positive `Integer`, is added to the file name.  \n  \n2.  *Multiple class instances*. If an instance of the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> class writes to a file that is in use:  \n  \n    -   The class shares the file if it is being used by another instance of the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> class in the same process.  \n  \n    -   The class creates a new log file using the next available name if the file is being used by another process.  \n  \n3.  *Thread safety*. The <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> class is thread safe. This allows you to safely write messages to the log from multiple threads without using locks.  \n  \n **Log-File Location**  \n  \n-   The <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location%2A> property takes a <xref:Microsoft.VisualBasic.Logging.LogFileLocation> enumeration to specify one of the typical directories to write the log file to.  \n  \n-   To write the log to another location, set the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation%2A> property to that location.  \n  \n **Log-File Name**  \n  \n-   The base name for the log file is specified by the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName%2A> property.  \n  \n-   The current log file name can be read from the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A> property. It is derived from several other properties and the current state of the logs in the file system.  \n  \n **Log Maintenance**  \n  \n-   The minimum frequency for creating new log files is determined by the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A> property. When the value is <xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Daily> or <xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Weekly>, a new log file is created at least once every day or week, and a date stamp is incorporated into the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A> name.  \n  \n-   The maximum size (in bytes) of the log file is determined by the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize%2A> property. If the log file size exceeds this size, additional messages written to the log are discarded and, depending on the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A> property, an exception is thrown.  \n  \n-   The <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace%2A> property determines how much free space (in bytes) must be available. This helps ensure that the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> class will not consume all available disk space. Use the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A> property to specify the behavior of log writes when there are less than <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace%2A> bytes free.  \n  \n **Log-File Output Settings**  \n  \n-   The <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.AutoFlush%2A> property specifies whether the underlying stream should be flushed automatically after each write to the log file.  \n  \n-   The <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Append%2A> property specifies whether to append messages to the current log file, if allowed, or write them to a new log file.  \n  \n-   The <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A> property specifies the string to use for delimiting the fields within a log message.  \n  \n-   The <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Encoding%2A> property specifies the encoding to use when creating a new log file.  \n  \n **Log-File Output**  \n  \n-   The <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData%2A> and <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent%2A> methods write messages to the log file. These methods check the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A> property, along with any existing logs with the same base name to determine if a new log should be created.  \n  \n-   The <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Flush%2A> method flushes any messages currently in the output buffer to the log file.  \n  \n-   The <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Close%2A> method closes the log file so that it can be used by other processes.  \n  \n **Enabling Output**  \n  \n You must enable tracing or debugging to use a trace listener. The following syntax is compiler specific. If you use compilers other than C# or [!INCLUDE[vbprvb](~/includes/vbprvb-md.md)], refer to the documentation for your compiler.  \n  \n-   To enable debugging in C#, add the `/d:DEBUG` flag to the compiler command line when you compile your code, or you can add `#define DEBUG` to the top of your file. In [!INCLUDE[vbprvb](~/includes/vbprvb-md.md)], add the `/d:DEBUG=True` flag to the compiler command line.  \n  \n-   To enable tracing in C#, add the `/d:TRACE` flag to the compiler command line when you compile your code, or add `#define TRACE` to the top of your file. In [!INCLUDE[vbprvb](~/includes/vbprvb-md.md)], add the `/d:TRACE=True` flag to the compiler command line.  \n  \n To set the level of your listener, edit the configuration file for your application. Within this file, you can add a listener, set its type and set its parameters, remove a listener, or clear all the listeners previously set by the application. The configuration file should be formatted like the following example.  \n  \n For this example to run, you must provide the fully qualified assembly name. For information about how to obtain the fully qualified assembly name, see [Assembly Names](~/docs/framework/app-domains/assembly-names.md).  \n  \n```  \n<configuration>  \n    <system.diagnostics>  \n        <sharedListeners>  \n            <add name=\"FileLog\"  \n                type=\"Microsoft.VisualBasic.Logging.FileLogTraceListener,   \n                      Microsoft.VisualBasic, Version=8.0.0.0,   \n                      Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a,   \n                      processorArchitecture=MSIL\"   \n                initializeData=\"FileLogWriter\"/>  \n        </sharedListeners>  \n    </system.diagnostics>  \n</configuration>  \n```"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(false)]

      public class FileLogTraceListener : System.Diagnostics.TraceListener
  inheritance:
  - System.Object
  - System.Diagnostics.TraceListener
  implements: []
  inheritedMembers:
  - System.Diagnostics.TraceListener.Attributes
  - System.Diagnostics.TraceListener.Dispose
  - System.Diagnostics.TraceListener.Fail(System.String)
  - System.Diagnostics.TraceListener.Fail(System.String,System.String)
  - System.Diagnostics.TraceListener.Filter
  - System.Diagnostics.TraceListener.IndentLevel
  - System.Diagnostics.TraceListener.IndentSize
  - System.Diagnostics.TraceListener.IsThreadSafe
  - System.Diagnostics.TraceListener.Name
  - System.Diagnostics.TraceListener.NeedIndent
  - System.Diagnostics.TraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32)
  - System.Diagnostics.TraceListener.TraceOutputOptions
  - System.Diagnostics.TraceListener.TraceTransfer(System.Diagnostics.TraceEventCache,System.String,System.Int32,System.String,System.Guid)
  - System.Diagnostics.TraceListener.Write(System.Object)
  - System.Diagnostics.TraceListener.Write(System.Object,System.String)
  - System.Diagnostics.TraceListener.Write(System.String,System.String)
  - System.Diagnostics.TraceListener.WriteIndent
  - System.Diagnostics.TraceListener.WriteLine(System.Object)
  - System.Diagnostics.TraceListener.WriteLine(System.Object,System.String)
  - System.Diagnostics.TraceListener.WriteLine(System.String,System.String)
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  attributes:
  - type: System.Runtime.InteropServices.ComVisibleAttribute
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.Logging/FileLogTraceListener.xml
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.#ctor
  commentId: M:Microsoft.VisualBasic.Logging.FileLogTraceListener.#ctor
  id: '#ctor'
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  langs:
  - csharp
  name: FileLogTraceListener()
  nameWithType: FileLogTraceListener.FileLogTraceListener()
  fullName: FileLogTraceListener.FileLogTraceListener()
  type: Constructor
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Logging
  summary: Initializes a new instance of the <xref href="Microsoft.VisualBasic.Logging.FileLogTraceListener"></xref> class with the default name.
  remarks: "This method sets the instance name of the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> class to FileLogTraceListener.  \n  \n You can access the instance name through the <xref:System.Diagnostics.TraceListener.Name%2A> property."
  syntax:
    content: public FileLogTraceListener ();
    parameters: []
  overload: Microsoft.VisualBasic.Logging.FileLogTraceListener.#ctor*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.Logging/FileLogTraceListener.xml
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.#ctor(System.String)
  commentId: M:Microsoft.VisualBasic.Logging.FileLogTraceListener.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  langs:
  - csharp
  name: FileLogTraceListener(String)
  nameWithType: FileLogTraceListener.FileLogTraceListener(String)
  fullName: FileLogTraceListener.FileLogTraceListener(String)
  type: Constructor
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Logging
  summary: Initializes a new instance of the <xref href="Microsoft.VisualBasic.Logging.FileLogTraceListener"></xref> class with the supplied name.
  remarks: "This method sets the instance name of the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> class to `name`.  \n  \n You can access the instance name thought the <xref:System.Diagnostics.TraceListener.Name%2A> property."
  syntax:
    content: public FileLogTraceListener (string name);
    parameters:
    - id: name
      type: System.String
      description: '`String`. The name of the instance object.'
  overload: Microsoft.VisualBasic.Logging.FileLogTraceListener.#ctor*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.Logging/FileLogTraceListener.xml
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.Append
  commentId: P:Microsoft.VisualBasic.Logging.FileLogTraceListener.Append
  id: Append
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  langs:
  - csharp
  name: Append
  nameWithType: FileLogTraceListener.Append
  fullName: FileLogTraceListener.Append
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Logging
  summary: Determines whether to append the output to the current file or write it to a new file.
  remarks: "When the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Append%2A> property is `False`, the output is written to a new file. When the property is `True`, the output is appended to the current file, unless:  \n  \n-   The output file is locked by another process. In this situation, a new log file is created with a version number that is incorporated into the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A> name.  \n  \n-   The current file size is greater than what the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize%2A> property allows. In this situation, additional messages are discarded and, depending on the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A> property, an exception is thrown.  \n  \n-   The existing file name is out of date according to the log-creation schedule specified by the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A> property. In this situation, a new log file is created and the date stamp is incorporated into the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A> name."
  syntax:
    content: >-
      [set: System.Security.SecuritySafeCritical]

      public bool Append { get; set; }
    return:
      type: System.Boolean
      description: '`Boolean`, with `True` indicating that the output is appended to the current file, and `False` indicating that output is written to a new file. The default setting for this property is `True`.'
  overload: Microsoft.VisualBasic.Logging.FileLogTraceListener.Append*
  exceptions: []
  attributes:
  - type: 'set: System.Security.SecuritySafeCritical'
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.Logging/FileLogTraceListener.xml
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.AutoFlush
  commentId: P:Microsoft.VisualBasic.Logging.FileLogTraceListener.AutoFlush
  id: AutoFlush
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  langs:
  - csharp
  name: AutoFlush
  nameWithType: FileLogTraceListener.AutoFlush
  fullName: FileLogTraceListener.AutoFlush
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Logging
  summary: Indicates whether or not the writing to the log file stream flushes the buffer.
  remarks: The `False` setting for the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.AutoFlush%2A> property provides the best performance for most applications, because it is more efficient to write multiple messages to the log file at one time. You can use the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Flush%2A> method to flush any messages currently in the log file's output buffer. You can also use the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Close%2A> method, which implicitly flushes the stream before closing the log file.
  syntax:
    content: >-
      [set: System.Security.SecuritySafeCritical]

      public bool AutoFlush { get; set; }
    return:
      type: System.Boolean
      description: '`Boolean`, with `True` indicating that the stream is flushed after every write; otherwise the log entries are buffered and written more efficiently. The default setting for this property is `False`.'
  overload: Microsoft.VisualBasic.Logging.FileLogTraceListener.AutoFlush*
  exceptions: []
  attributes:
  - type: 'set: System.Security.SecuritySafeCritical'
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.Logging/FileLogTraceListener.xml
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName
  commentId: P:Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName
  id: BaseFileName
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  langs:
  - csharp
  name: BaseFileName
  nameWithType: FileLogTraceListener.BaseFileName
  fullName: FileLogTraceListener.BaseFileName
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Logging
  summary: Gets or sets the base name for the log files, which is used to create the full log-file name.
  remarks: "The <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName%2A> property determines the base name for the log files that the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> class writes to.  \n  \n The <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A> property gives the current full log-file name. It is generated according to the log path, the base name, the date, and a number to distinguish it from different versions of the log. New log files are created on an as-needed basis.  \n  \n The explicit form of the full log file name is `path`\\\\`baseName`[-`dateStamp`][-`iteration`].log, where  \n  \n-   The `path` part is determined by the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location%2A> property and, if that property value is set to <xref:Microsoft.VisualBasic.Logging.LogFileLocation.Custom>, the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation%2A> property.  \n  \n-   The `baseName` part is the fundamental log name, specified by the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName%2A> property.  \n  \n-   The `dateStamp` part has the format \"YYYY-MM-DD\", and it is shown when <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A> is set to <xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Daily> or <xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Weekly>.  \n  \n-   If more than one log file is needed with the same `baseName` and `dateStamp`, the `iteration` part, a positive `Integer`, is added to the file name."
  syntax:
    content: public string BaseFileName { get; set; }
    return:
      type: System.String
      description: "`String`. The base name for the log files. The default is the application's product name."
  overload: Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.Logging/FileLogTraceListener.xml
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.Close
  commentId: M:Microsoft.VisualBasic.Logging.FileLogTraceListener.Close
  id: Close
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  langs:
  - csharp
  name: Close()
  nameWithType: FileLogTraceListener.Close()
  fullName: FileLogTraceListener.Close()
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Logging
  summary: Closes the underlying stream for the current log file and releases any resources associated with the current stream.
  remarks: You do not need to call the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Close%2A> method explicitly, because the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> class manages the underlying steam.
  syntax:
    content: public override void Close ();
    parameters: []
  overload: Microsoft.VisualBasic.Logging.FileLogTraceListener.Close*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.Logging/FileLogTraceListener.xml
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation
  commentId: P:Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation
  id: CustomLocation
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  langs:
  - csharp
  name: CustomLocation
  nameWithType: FileLogTraceListener.CustomLocation
  fullName: FileLogTraceListener.CustomLocation
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Logging
  summary: Gets or sets the log file directory when the <xref href="Microsoft.VisualBasic.Logging.FileLogTraceListener.Location"></xref> property is set to <xref href="Microsoft.VisualBasic.Logging.LogFileLocation.Custom"></xref>.
  remarks: "When the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation%2A> property is set, it also sets the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location%2A> property to <xref:Microsoft.VisualBasic.Logging.LogFileLocation.Custom>.  \n  \n The <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation%2A> property will throw an exception if the directory cannot be resolved."
  syntax:
    content: >-
      [get: System.Security.SecuritySafeCritical]

      public string CustomLocation { get; set; }
    return:
      type: System.String
      description: "`String`, which is the name of the log-file directory. The default setting for this property is the user's directory for application data."
  overload: Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation*
  exceptions: []
  attributes:
  - type: 'get: System.Security.SecuritySafeCritical'
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.Logging/FileLogTraceListener.xml
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter
  commentId: P:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter
  id: Delimiter
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  langs:
  - csharp
  name: Delimiter
  nameWithType: FileLogTraceListener.Delimiter
  fullName: FileLogTraceListener.Delimiter
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Logging
  summary: Gets or sets the delimiter used to delimit fields within a log message.
  remarks: The <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A> property allows you to change the default delimiter.
  syntax:
    content: public string Delimiter { get; set; }
    return:
      type: System.String
      description: '`String`, which is the delimiter used for fields within a log message. The default setting for this property is the TAB character.'
  overload: Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.Logging/FileLogTraceListener.xml
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior
  commentId: P:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior
  id: DiskSpaceExhaustedBehavior
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  langs:
  - csharp
  name: DiskSpaceExhaustedBehavior
  nameWithType: FileLogTraceListener.DiskSpaceExhaustedBehavior
  fullName: FileLogTraceListener.DiskSpaceExhaustedBehavior
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Logging
  summary: Determines what to do when writing to the log file and there is less free disk space available than specified by the <xref href="Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace"></xref> property.
  remarks: "When the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A> property is set to <xref:Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption.DiscardMessages>, the log messages are silently discarded if there is not enough reserved disk space. This is the default behavior, and it prevents simple applications from failing if the disk gets too full.  \n  \n More robust applications can set the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A> property to <xref:Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption.ThrowException>, and add `Try...Catch` blocks around all code that writes to the log."
  syntax:
    content: >-
      [set: System.Security.SecuritySafeCritical]

      public Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption DiskSpaceExhaustedBehavior { get; set; }
    return:
      type: Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption
      description: <xref href="Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption"></xref>. Determines what to do when attempting to write to the log file and there is less free disk space available than specified by the <xref href="Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace"></xref> property, or if the log file size is greater than what the <xref href="Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize"></xref> property allows. The default value is <xref href="Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption.DiscardMessages"></xref>.
  overload: Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior*
  exceptions: []
  attributes:
  - type: 'set: System.Security.SecuritySafeCritical'
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.Logging/FileLogTraceListener.xml
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.Dispose(System.Boolean)
  commentId: M:Microsoft.VisualBasic.Logging.FileLogTraceListener.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: FileLogTraceListener.Dispose(Boolean)
  fullName: FileLogTraceListener.Dispose(Boolean)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Logging
  summary: Closes the underlying stream and optionally releases the managed resources.
  remarks: When the `disposing` parameter is `True`, this method releases all resources held by any managed objects that this <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> references. This method invokes the `Dispose` method of each referenced object.
  syntax:
    content: protected override void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: '`True` releases both managed and unmanaged resources; `False` releases only unmanaged resources.'
  overload: Microsoft.VisualBasic.Logging.FileLogTraceListener.Dispose*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.Logging/FileLogTraceListener.xml
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.Encoding
  commentId: P:Microsoft.VisualBasic.Logging.FileLogTraceListener.Encoding
  id: Encoding
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  langs:
  - csharp
  name: Encoding
  nameWithType: FileLogTraceListener.Encoding
  fullName: FileLogTraceListener.Encoding
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Logging
  summary: Gets or sets the encoding to use when creating a new log file.
  remarks: When appending text to an existing log file, the encoding for that file is used instead of the encoding specified by the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Encoding%2A> property.
  syntax:
    content: public System.Text.Encoding Encoding { get; set; }
    return:
      type: System.Text.Encoding
      description: <xref href="System.Text.Encoding"></xref>, which is the encoding to use when creating a new log file. The default value of this property is <xref href="System.Text.UTF8Encoding"></xref>.
  overload: Microsoft.VisualBasic.Logging.FileLogTraceListener.Encoding*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.Logging/FileLogTraceListener.xml
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.Flush
  commentId: M:Microsoft.VisualBasic.Logging.FileLogTraceListener.Flush
  id: Flush
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  langs:
  - csharp
  name: Flush()
  nameWithType: FileLogTraceListener.Flush()
  fullName: FileLogTraceListener.Flush()
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Logging
  summary: Flushes the underlying stream that writes to the current log file.
  remarks: Use the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Flush%2A> method to write all buffered data to the current log file.
  syntax:
    content: public override void Flush ();
    parameters: []
  overload: Microsoft.VisualBasic.Logging.FileLogTraceListener.Flush*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.Logging/FileLogTraceListener.xml
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName
  commentId: P:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName
  id: FullLogFileName
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  langs:
  - csharp
  name: FullLogFileName
  nameWithType: FileLogTraceListener.FullLogFileName
  fullName: FileLogTraceListener.FullLogFileName
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Logging
  summary: Gets the current full log-file name.
  remarks: "The <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A> property gives the current full log-file name. It is generated according to the log path, the base name, the date, and a number to distinguish it from different versions of the log. New log files are created on an as-needed basis.  \n  \n The explicit form of the full log-file name is `path`\\\\`baseName`[-`dateStamp`][-`iteration`].log, where:  \n  \n-   The `path` part is determined by the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location%2A> property and, if that property value is set to <xref:Microsoft.VisualBasic.Logging.LogFileLocation.Custom>, the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation%2A> property.  \n  \n-   The `baseName` part is the fundamental log name, specified by the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName%2A> property.  \n  \n-   The `dateStamp` part has the format YYYY-MM-DD, and it is shown when <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A> is <xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Daily> or <xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Weekly>.  \n  \n-   If more than one log file is needed with the same `baseName` and `dateStamp`, the `iteration` part, a positive `Integer`, is added to the file name."
  syntax:
    content: >-
      [get: System.Security.SecuritySafeCritical]

      public string FullLogFileName { get; }
    return:
      type: System.String
      description: '`String`, which is the current full log-file name.'
  overload: Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName*
  exceptions: []
  attributes:
  - type: 'get: System.Security.SecuritySafeCritical'
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.Logging/FileLogTraceListener.xml
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.GetSupportedAttributes
  commentId: M:Microsoft.VisualBasic.Logging.FileLogTraceListener.GetSupportedAttributes
  id: GetSupportedAttributes
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  langs:
  - csharp
  name: GetSupportedAttributes()
  nameWithType: FileLogTraceListener.GetSupportedAttributes()
  fullName: FileLogTraceListener.GetSupportedAttributes()
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Logging
  summary: Gets the custom XML configuration attributes supported by the trace listener.
  remarks: The custom attributes for the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> can be used in the XML configuration file for controlling the behavior of an instance of the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> class. Using any other attribute causes a configuration exception.
  syntax:
    content: protected override string[] GetSupportedAttributes ();
    parameters: []
    return:
      type: System.String[]
      description: '`String` array containing the XML configuration attributes recognized by this listener.'
  overload: Microsoft.VisualBasic.Logging.FileLogTraceListener.GetSupportedAttributes*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.Logging/FileLogTraceListener.xml
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.IncludeHostName
  commentId: P:Microsoft.VisualBasic.Logging.FileLogTraceListener.IncludeHostName
  id: IncludeHostName
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  langs:
  - csharp
  name: IncludeHostName
  nameWithType: FileLogTraceListener.IncludeHostName
  fullName: FileLogTraceListener.IncludeHostName
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Logging
  summary: Indicates whether or not the host name of the logging machine should be included in the output.
  remarks: Use the property to configure the behavior of the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData%2A> and <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent%2A> methods.
  syntax:
    content: >-
      [set: System.Security.SecuritySafeCritical]

      public bool IncludeHostName { get; set; }
    return:
      type: System.Boolean
      description: '`Boolean`. Use `True` if the host identifier should be included; otherwise use `False`. The default value is `False`.'
  overload: Microsoft.VisualBasic.Logging.FileLogTraceListener.IncludeHostName*
  exceptions: []
  attributes:
  - type: 'set: System.Security.SecuritySafeCritical'
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.Logging/FileLogTraceListener.xml
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.Location
  commentId: P:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location
  id: Location
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  langs:
  - csharp
  name: Location
  nameWithType: FileLogTraceListener.Location
  fullName: FileLogTraceListener.Location
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Logging
  summary: Gets or sets location for the log files.
  remarks: "Use the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location%2A> property to set the log path to one of the predefined paths, determined by the <xref:Microsoft.VisualBasic.Logging.LogFileLocation> enumeration values.  \n  \n|**Location value**|**Path**|  \n|------------------------|--------------|  \n|<xref:Microsoft.VisualBasic.Logging.LogFileLocation.CommonApplicationDirectory>|The path for the application data that is shared among all users, with the format:<br /><br /> `BasePath`\\\\`CompanyName`\\\\`ProductName`\\\\`ProductVersion`<br /><br /> A typical value for `BasePath` is:<br /><br /> C:\\Documents and Settings\\All Users\\Application Data<br /><br /> The values of `CompanyName`, `ProductName`, and `ProductVersion` come from the assembly.|  \n|<xref:Microsoft.VisualBasic.Logging.LogFileLocation.ExecutableDirectory>|The path for the executable file that started the application.|  \n|<xref:Microsoft.VisualBasic.Logging.LogFileLocation.LocalUserApplicationDirectory>|The path for the application data of a user, with the format:<br /><br /> `BasePath`\\\\`CompanyName`\\\\`ProductName`\\\\`ProductVersion`<br /><br /> A typical value for `BasePath` is:<br /><br /> C:\\Documents and Settings\\\\`username`\\Application Data<br /><br /> The values of `CompanyName`, `ProductName`, and `ProductVersion` come form the assembly.|  \n|<xref:Microsoft.VisualBasic.Logging.LogFileLocation.TempDirectory>|The path of the current system's temporary folder.|  \n|<xref:Microsoft.VisualBasic.Logging.LogFileLocation.Custom>|If the string specified by <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation%2A> is not empty, then use it as the path; otherwise use the path for the application data of a user.|"
  syntax:
    content: public Microsoft.VisualBasic.Logging.LogFileLocation Location { get; set; }
    return:
      type: Microsoft.VisualBasic.Logging.LogFileLocation
      description: <xref href="Microsoft.VisualBasic.Logging.LogFileLocation"></xref>, which is the location for the log file. The default value is <xref href="Microsoft.VisualBasic.Logging.LogFileLocation.LocalUserApplicationDirectory"></xref>.
  overload: Microsoft.VisualBasic.Logging.FileLogTraceListener.Location*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.Logging/FileLogTraceListener.xml
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule
  commentId: P:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule
  id: LogFileCreationSchedule
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  langs:
  - csharp
  name: LogFileCreationSchedule
  nameWithType: FileLogTraceListener.LogFileCreationSchedule
  fullName: FileLogTraceListener.LogFileCreationSchedule
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Logging
  summary: Determines which date to include in the names of the log files.
  remarks: "Assign one of the <xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption> enumeration values to the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A> property to specify which date to include in the names of the log files.  \n  \n The format of the date is YYYY-MM-DD. For more information on the format of the log file name, see <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A>.  \n  \n|**LogFileCreationSchedule value**|**Date in the log file name**|  \n|---------------------------------------|-----------------------------------|  \n|<xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Daily>|Include the current date in the log file name.|  \n|<xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.None>|Do not include the date in the log file name.|  \n|<xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Weekly>|Include the first day of the current week in the log file name.<br /><br /> The week starts on Saturday.|"
  syntax:
    content: public Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption LogFileCreationSchedule { get; set; }
    return:
      type: Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption
      description: <xref href="Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption"></xref>. This indicates which date to include in the log-file names. The default value is <xref href="Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.None"></xref>.
  overload: Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.Logging/FileLogTraceListener.xml
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize
  commentId: P:Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize
  id: MaxFileSize
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  langs:
  - csharp
  name: MaxFileSize
  nameWithType: FileLogTraceListener.MaxFileSize
  fullName: FileLogTraceListener.MaxFileSize
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Logging
  summary: Gets or sets the maximum allowed size of the log file, in bytes.
  remarks: "Use this property to make sure that the log files do not grow too large.  \n  \n If the log file size (in bytes) is greater than the value of this property, then when the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> class attempts to write a message to the log, the message is discarded and the failure is either silent or an exception is thrown depending on the value of the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A> property. Otherwise, the message is written to the log, if the amount of free disk space (in bytes) is less than <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace%2A>."
  syntax:
    content: >-
      [set: System.Security.SecuritySafeCritical]

      public long MaxFileSize { get; set; }
    return:
      type: System.Int64
      description: '`Long`. This is the maximum allowed log-file size, in bytes. The default value is 5000000.'
  overload: Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: When this property is set to a value less than 1000.
  attributes:
  - type: 'set: System.Security.SecuritySafeCritical'
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.Logging/FileLogTraceListener.xml
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace
  commentId: P:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace
  id: ReserveDiskSpace
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  langs:
  - csharp
  name: ReserveDiskSpace
  nameWithType: FileLogTraceListener.ReserveDiskSpace
  fullName: FileLogTraceListener.ReserveDiskSpace
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Logging
  summary: Gets or sets the amount of free disk space, in bytes, necessary before messages can be written to the log file.
  remarks: "Use this property to make sure that the log files do not completely fill the disk.  \n  \n If the amount of free disk space (in bytes) is less than the value of this property, then when the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> class attempts to write a message to the log, the message is discarded and the failure is either silent or an exception is thrown depending on the value of the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A> property. Otherwise, the message is written to the log, if the log file size (in bytes) is greater than <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize%2A>."
  syntax:
    content: >-
      [set: System.Security.SecuritySafeCritical]

      public long ReserveDiskSpace { get; set; }
    return:
      type: System.Int64
      description: '`Long`. This is the amount of free disk space necessary. The default value is 10000000.'
  overload: Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: When this property is set to a value less than 0.
  attributes:
  - type: 'set: System.Security.SecuritySafeCritical'
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.Logging/FileLogTraceListener.xml
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)
  commentId: M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)
  id: TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  langs:
  - csharp
  name: TraceData(TraceEventCache, String, TraceEventType, Int32, Object)
  nameWithType: FileLogTraceListener.TraceData(TraceEventCache, String, TraceEventType, Int32, Object)
  fullName: FileLogTraceListener.TraceData(TraceEventCache, String, TraceEventType, Int32, Object)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Logging
  summary: Writes trace information, a data object, and event information to the output file or stream.
  remarks: "This method:  \n  \n1.  Formats the data and context information for output.  \n  \n2.  Creates a new log file, if necessary.  \n  \n3.  Writes the information to the log file.  \n  \n For more information on creating new log files, see <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A>.  \n  \n The following table lists the output fields in the order they appear. The fields are delimited by the string that the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A> property specifies, and are followed by a line terminator.  \n  \n|**Field**|**Output condition**|**Description**|  \n|---------------|--------------------------|---------------------|  \n|`source`|Always|The value of `name`.|  \n|`severity`|Always|The enumeration-value name of `eventType`.|  \n|`id`|Always|The string representation of `id`.|  \n|`message`|Always|The string representation of `data`.|  \n|`callStack`|When the <xref:System.Diagnostics.TraceOptions.Callstack> flag is set in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.|The <xref:System.Diagnostics.TraceEventCache.Callstack%2A> property of `eventCache`.|  \n|`CorrelationID`|When the <xref:System.Diagnostics.TraceOptions.LogicalOperationStack> flag is set in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.|The <xref:System.Diagnostics.TraceEventCache.ThreadId%2A> property of `eventCache`.|  \n|`DateTime`|When the <xref:System.Diagnostics.TraceOptions.DateTime> flag is set in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.|The string representation of the <xref:System.Diagnostics.TraceEventCache.DateTime%2A> property of `eventCache`. The invariant culture is used for the string conversion.|  \n|`ProcessID`|When the <xref:System.Diagnostics.TraceOptions.ProcessId> flag is set in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.|The string representation of the <xref:System.Diagnostics.TraceEventCache.ProcessId%2A> property of `eventCache`. The invariant culture is used for the string conversion.|  \n|`ThreadID`|When the <xref:System.Diagnostics.TraceOptions.ThreadId> flag is set in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.|The <xref:System.Diagnostics.TraceEventCache.ThreadId%2A> property of `eventCache`.|  \n|`Timestamp`|When the <xref:System.Diagnostics.TraceOptions.Timestamp> flag is set in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.|The string representation of the <xref:System.Diagnostics.TraceEventCache.Timestamp%2A> property of `eventCache`. The invariant culture is used for the string conversion.|  \n|`HostName`|When the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.IncludeHostName%2A> property is `True`.|The name of the computer.|"
  syntax:
    content: public override void TraceData (System.Diagnostics.TraceEventCache eventCache, string source, System.Diagnostics.TraceEventType eventType, int id, object data);
    parameters:
    - id: eventCache
      type: System.Diagnostics.TraceEventCache
      description: A <xref href="System.Diagnostics.TraceEventCache"></xref> object that contains the current process ID, thread ID, and stack trace information.
    - id: source
      type: System.String
      description: A name of the trace source that invoked this method.
    - id: eventType
      type: System.Diagnostics.TraceEventType
      description: One of the <xref href="System.Diagnostics.TraceEventType"></xref> enumeration values.
    - id: id
      type: System.Int32
      description: A numeric identifier for the event.
    - id: data
      type: System.Object
      description: The trace data to emit.
  overload: Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.Logging/FileLogTraceListener.xml
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])
  commentId: M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])
  id: TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  langs:
  - csharp
  name: TraceData(TraceEventCache, String, TraceEventType, Int32, Object[])
  nameWithType: FileLogTraceListener.TraceData(TraceEventCache, String, TraceEventType, Int32, Object[])
  fullName: FileLogTraceListener.TraceData(TraceEventCache, String, TraceEventType, Int32, Object[])
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Logging
  summary: Writes trace information, an array of data objects, and event information to the output file or stream.
  remarks: "This method:  \n  \n1.  Formats the data and context information for output,  \n  \n2.  Creates a new log file, if necessary,  \n  \n3.  Writes the information to the log file.  \n  \n For more information on creating new log files, see <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A>.  \n  \n This table lists the output fields in the order they appear. The fields are delimited by the string that the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A> property specifies, and are followed by a line terminator.  \n  \n|**Field**|**Output condition**|**Description**|  \n|---------------|--------------------------|---------------------|  \n|`source`|Always|The value of `name`.|  \n|`severity`|Always|The enumeration-value name of `eventType`.|  \n|`id`|Always|The string representation of `id`.|  \n|`message`|Always|The string consisting of the string representation of each element in `data`, each separated by <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A>.|  \n|`callStack`|When the <xref:System.Diagnostics.TraceOptions.Callstack> flag is set in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.|The <xref:System.Diagnostics.TraceEventCache.Callstack%2A> property of `eventCache`.|  \n|`CorrelationID`|When the <xref:System.Diagnostics.TraceOptions.LogicalOperationStack> flag is set in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.|The <xref:System.Diagnostics.TraceEventCache.ThreadId%2A> property of `eventCache`.|  \n|`DateTime`|When the <xref:System.Diagnostics.TraceOptions.DateTime> flag is set in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.|The string representation of the <xref:System.Diagnostics.TraceEventCache.DateTime%2A> property of `eventCache`. The invariant culture is used for the string conversion.|  \n|`ProcessID`|When the <xref:System.Diagnostics.TraceOptions.ProcessId> flag is set in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.|The string representation of the <xref:System.Diagnostics.TraceEventCache.ProcessId%2A> property of `eventCache`. The invariant culture is used for the string conversion.|  \n|`ThreadID`|When the <xref:System.Diagnostics.TraceOptions.ThreadId> flag is set in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.|The <xref:System.Diagnostics.TraceEventCache.ThreadId%2A> property of `eventCache`.|  \n|`Timestamp`|When the <xref:System.Diagnostics.TraceOptions.Timestamp> flag is set in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.|The string representation of the <xref:System.Diagnostics.TraceEventCache.Timestamp%2A> property of `eventCache`. The invariant culture is used for the string conversion.|  \n|`HostName`|When the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.IncludeHostName%2A> property is `True`.|The name of the computer.|"
  syntax:
    content: public override void TraceData (System.Diagnostics.TraceEventCache eventCache, string source, System.Diagnostics.TraceEventType eventType, int id, object[] data);
    parameters:
    - id: eventCache
      type: System.Diagnostics.TraceEventCache
      description: A <xref href="System.Diagnostics.TraceEventCache"></xref> object that contains the current process ID, thread ID, and stack trace information.
    - id: source
      type: System.String
      description: The name of the trace source that invoked this method.
    - id: eventType
      type: System.Diagnostics.TraceEventType
      description: One of the <xref href="System.Diagnostics.TraceEventType"></xref> enumeration values.
    - id: id
      type: System.Int32
      description: A numeric identifier for the event.
    - id: data
      type: System.Object[]
      description: An array of objects to emit as data.
  overload: Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.Logging/FileLogTraceListener.xml
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)
  commentId: M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)
  id: TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  langs:
  - csharp
  name: TraceEvent(TraceEventCache, String, TraceEventType, Int32, String)
  nameWithType: FileLogTraceListener.TraceEvent(TraceEventCache, String, TraceEventType, Int32, String)
  fullName: FileLogTraceListener.TraceEvent(TraceEventCache, String, TraceEventType, Int32, String)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Logging
  summary: Writes trace information, a message and event information to the output file or stream.
  remarks: "This method:  \n  \n1.  Formats the data and context information for output.  \n  \n2.  Creates a new log file, if necessary.  \n  \n3.  Writes the information to the log file.  \n  \n For more information on creating new log files, see <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A>.  \n  \n This table lists the output fields in the order in which they appear. The fields are delimited by the string that the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A> property specifies, and are followed by a line terminator.  \n  \n|**Field**|**Output condition**|**Description**|  \n|---------------|--------------------------|---------------------|  \n|`source`|Always.|The value of `name`.|  \n|`severity`|Always.|The enumeration-value name of `eventType`.|  \n|`id`|Always.|The string representation of `id`.|  \n|`message`|Always.|The value of `message`.|  \n|`callStack`|When the <xref:System.Diagnostics.TraceOptions.Callstack> flag is set in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.|The <xref:System.Diagnostics.TraceEventCache.Callstack%2A> property of `eventCache`.|  \n|`CorrelationID`|When the <xref:System.Diagnostics.TraceOptions.LogicalOperationStack> flag is set in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.|The <xref:System.Diagnostics.TraceEventCache.ThreadId%2A> property of `eventCache`.|  \n|`DateTime`|When the <xref:System.Diagnostics.TraceOptions.DateTime> flag is set in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.|The string representation of the <xref:System.Diagnostics.TraceEventCache.DateTime%2A> property of `eventCache`. The invariant culture is used for the string conversion.|  \n|`ProcessID`|When the <xref:System.Diagnostics.TraceOptions.ProcessId> flag is set in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.|The string representation of the <xref:System.Diagnostics.TraceEventCache.ProcessId%2A> property of `eventCache`. The invariant culture is used for the string conversion.|  \n|`ThreadID`|When the <xref:System.Diagnostics.TraceOptions.ThreadId> flag is set in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.|The <xref:System.Diagnostics.TraceEventCache.ThreadId%2A> property of `eventCache`.|  \n|`Timestamp`|When the <xref:System.Diagnostics.TraceOptions.Timestamp> flag is set in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.|The string representation of the <xref:System.Diagnostics.TraceEventCache.Timestamp%2A> property of `eventCache`. The invariant culture is used for the string conversion.|  \n|`HostName`|When the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.IncludeHostName%2A> property is `True`.|The name of the computer.|"
  syntax:
    content: public override void TraceEvent (System.Diagnostics.TraceEventCache eventCache, string source, System.Diagnostics.TraceEventType eventType, int id, string message);
    parameters:
    - id: eventCache
      type: System.Diagnostics.TraceEventCache
      description: A <xref href="System.Diagnostics.TraceEventCache"></xref> object that contains the current process ID, thread ID, and stack trace information.
    - id: source
      type: System.String
      description: A name of the trace source that invoked this method.
    - id: eventType
      type: System.Diagnostics.TraceEventType
      description: One of the <xref href="System.Diagnostics.TraceEventType"></xref> enumeration values.
    - id: id
      type: System.Int32
      description: A numeric identifier for the event.
    - id: message
      type: System.String
      description: A message to write.
  overload: Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.Logging/FileLogTraceListener.xml
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])
  commentId: M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])
  id: TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  langs:
  - csharp
  name: TraceEvent(TraceEventCache, String, TraceEventType, Int32, String, Object[])
  nameWithType: FileLogTraceListener.TraceEvent(TraceEventCache, String, TraceEventType, Int32, String, Object[])
  fullName: FileLogTraceListener.TraceEvent(TraceEventCache, String, TraceEventType, Int32, String, Object[])
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Logging
  summary: Writes trace information, a formatted array of objects, and event information to the output file or stream.
  remarks: "This method:  \n  \n1.  Formats the data and context information for output.  \n  \n2.  Creates a new a new log file, if necessary.  \n  \n3.  Writes the information to the log file.  \n  \n For more information on creating new log file, see <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A>.  \n  \n This table lists the output fields in the order in which they appear. The fields are delimited by the string that the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A> property specifies, and followed by a line terminator.  \n  \n|**Field**|**Output condition**|**Description**|  \n|---------------|--------------------------|---------------------|  \n|`source`|Always|The value of `name`.|  \n|`severity`|Always|The enumeration-value name of `eventType`.|  \n|`id`|Always|The string representation of `id`.|  \n|`message`|Always|The data in `args` formatted with the `format` string and using the invariant culture for string conversions.|  \n|`callStack`|When the <xref:System.Diagnostics.TraceOptions.Callstack> flag is set in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.|The <xref:System.Diagnostics.TraceEventCache.Callstack%2A> property of `eventCache`.|  \n|`CorrelationID`|When the <xref:System.Diagnostics.TraceOptions.LogicalOperationStack> flag is set in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.|The <xref:System.Diagnostics.TraceEventCache.ThreadId%2A> property of `eventCache`.|  \n|`DateTime`|When the <xref:System.Diagnostics.TraceOptions.DateTime> flag is set in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.|The string representation of the <xref:System.Diagnostics.TraceEventCache.DateTime%2A> property of `eventCache`. The invariant culture is used for the string conversion.|  \n|`ProcessID`|When the <xref:System.Diagnostics.TraceOptions.ProcessId> flag is set in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.|The string representation of the <xref:System.Diagnostics.TraceEventCache.ProcessId%2A> property of `eventCache`. The invariant culture is used for the string conversion.|  \n|`ThreadID`|When the <xref:System.Diagnostics.TraceOptions.ThreadId> flag is set in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.|The <xref:System.Diagnostics.TraceEventCache.ThreadId%2A> property of `eventCache`.|  \n|`Timestamp`|When the <xref:System.Diagnostics.TraceOptions.Timestamp> flag is set in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.|The string representation of the <xref:System.Diagnostics.TraceEventCache.Timestamp%2A> property of `eventCache`. The invariant culture is used for the string conversion.|  \n|`HostName`|When the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.IncludeHostName%2A> property is `True`.|The name of the computer.|"
  syntax:
    content: public override void TraceEvent (System.Diagnostics.TraceEventCache eventCache, string source, System.Diagnostics.TraceEventType eventType, int id, string format, object[] args);
    parameters:
    - id: eventCache
      type: System.Diagnostics.TraceEventCache
      description: A <xref href="System.Diagnostics.TraceEventCache"></xref> object that contains the current process ID, thread ID, and stack trace information.
    - id: source
      type: System.String
      description: A name of the trace source that invoked this method.
    - id: eventType
      type: System.Diagnostics.TraceEventType
      description: One of the <xref href="System.Diagnostics.TraceEventType"></xref> enumeration values.
    - id: id
      type: System.Int32
      description: A numeric identifier for the event.
    - id: format
      type: System.String
      description: A format string that contains zero or more format items, which correspond to objects in the <code>args</code> array.
    - id: args
      type: System.Object[]
      description: An `Object` array containing zero or more objects to format.
  overload: Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.Logging/FileLogTraceListener.xml
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.Write(System.String)
  commentId: M:Microsoft.VisualBasic.Logging.FileLogTraceListener.Write(System.String)
  id: Write(System.String)
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  langs:
  - csharp
  name: Write(String)
  nameWithType: FileLogTraceListener.Write(String)
  fullName: FileLogTraceListener.Write(String)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Logging
  summary: Writes a verbatim message to disk, without any additional context information.
  remarks: "The <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Write%2A> method writes a specific message to the log file, without any additional context information.  \n  \n Use the one of the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData%2A> methods to include the context information in the log output."
  syntax:
    content: public override void Write (string message);
    parameters:
    - id: message
      type: System.String
      description: '`String`. The custom message to write.'
  overload: Microsoft.VisualBasic.Logging.FileLogTraceListener.Write*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.Logging/FileLogTraceListener.xml
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.WriteLine(System.String)
  commentId: M:Microsoft.VisualBasic.Logging.FileLogTraceListener.WriteLine(System.String)
  id: WriteLine(System.String)
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  langs:
  - csharp
  name: WriteLine(String)
  nameWithType: FileLogTraceListener.WriteLine(String)
  fullName: FileLogTraceListener.WriteLine(String)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.Logging
  summary: Writes a verbatim message to disk, followed by the current line terminator, without any additional context information.
  remarks: "The <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.WriteLine%2A> method writes a specific message to the log file, without any additional context information.  \n  \n Use the one of the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData%2A> methods to include the context information in the log output."
  syntax:
    content: public override void WriteLine (string message);
    parameters:
    - id: message
      type: System.String
      description: '`String`. The custom message to write.'
  overload: Microsoft.VisualBasic.Logging.FileLogTraceListener.WriteLine*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.Logging/FileLogTraceListener.xml
  author: stevehoag
  ms.author: shoag
  manager: wpickett
references:
- uid: System.Diagnostics.TraceListener
  parent: System.Diagnostics
  isExternal: false
  name: TraceListener
  nameWithType: TraceListener
  fullName: System.Diagnostics.TraceListener
- uid: System.ArgumentException
  parent: System
  isExternal: false
  name: ArgumentException
  nameWithType: ArgumentException
  fullName: System.ArgumentException
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.#ctor
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: FileLogTraceListener()
  nameWithType: FileLogTraceListener.FileLogTraceListener()
  fullName: FileLogTraceListener.FileLogTraceListener()
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.#ctor(System.String)
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: FileLogTraceListener(String)
  nameWithType: FileLogTraceListener.FileLogTraceListener(String)
  fullName: FileLogTraceListener.FileLogTraceListener(String)
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.Append
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: Append
  nameWithType: FileLogTraceListener.Append
  fullName: FileLogTraceListener.Append
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.AutoFlush
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: AutoFlush
  nameWithType: FileLogTraceListener.AutoFlush
  fullName: FileLogTraceListener.AutoFlush
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: BaseFileName
  nameWithType: FileLogTraceListener.BaseFileName
  fullName: FileLogTraceListener.BaseFileName
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.Close
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: Close()
  nameWithType: FileLogTraceListener.Close()
  fullName: FileLogTraceListener.Close()
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: CustomLocation
  nameWithType: FileLogTraceListener.CustomLocation
  fullName: FileLogTraceListener.CustomLocation
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: Delimiter
  nameWithType: FileLogTraceListener.Delimiter
  fullName: FileLogTraceListener.Delimiter
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: DiskSpaceExhaustedBehavior
  nameWithType: FileLogTraceListener.DiskSpaceExhaustedBehavior
  fullName: FileLogTraceListener.DiskSpaceExhaustedBehavior
- uid: Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption
  parent: Microsoft.VisualBasic.Logging
  isExternal: false
  name: DiskSpaceExhaustedOption
  nameWithType: DiskSpaceExhaustedOption
  fullName: Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.Dispose(System.Boolean)
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: FileLogTraceListener.Dispose(Boolean)
  fullName: FileLogTraceListener.Dispose(Boolean)
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.Encoding
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: Encoding
  nameWithType: FileLogTraceListener.Encoding
  fullName: FileLogTraceListener.Encoding
- uid: System.Text.Encoding
  parent: System.Text
  isExternal: false
  name: Encoding
  nameWithType: Encoding
  fullName: System.Text.Encoding
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.Flush
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: Flush()
  nameWithType: FileLogTraceListener.Flush()
  fullName: FileLogTraceListener.Flush()
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: FullLogFileName
  nameWithType: FileLogTraceListener.FullLogFileName
  fullName: FileLogTraceListener.FullLogFileName
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.GetSupportedAttributes
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: GetSupportedAttributes()
  nameWithType: FileLogTraceListener.GetSupportedAttributes()
  fullName: FileLogTraceListener.GetSupportedAttributes()
- uid: System.String[]
  parent: System
  isExternal: false
  name: String[]
  nameWithType: String[]
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.IncludeHostName
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: IncludeHostName
  nameWithType: FileLogTraceListener.IncludeHostName
  fullName: FileLogTraceListener.IncludeHostName
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.Location
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: Location
  nameWithType: FileLogTraceListener.Location
  fullName: FileLogTraceListener.Location
- uid: Microsoft.VisualBasic.Logging.LogFileLocation
  parent: Microsoft.VisualBasic.Logging
  isExternal: false
  name: LogFileLocation
  nameWithType: LogFileLocation
  fullName: Microsoft.VisualBasic.Logging.LogFileLocation
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: LogFileCreationSchedule
  nameWithType: FileLogTraceListener.LogFileCreationSchedule
  fullName: FileLogTraceListener.LogFileCreationSchedule
- uid: Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption
  parent: Microsoft.VisualBasic.Logging
  isExternal: false
  name: LogFileCreationScheduleOption
  nameWithType: LogFileCreationScheduleOption
  fullName: Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: MaxFileSize
  nameWithType: FileLogTraceListener.MaxFileSize
  fullName: FileLogTraceListener.MaxFileSize
- uid: System.Int64
  parent: System
  isExternal: false
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: ReserveDiskSpace
  nameWithType: FileLogTraceListener.ReserveDiskSpace
  fullName: FileLogTraceListener.ReserveDiskSpace
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: TraceData(TraceEventCache, String, TraceEventType, Int32, Object)
  nameWithType: FileLogTraceListener.TraceData(TraceEventCache, String, TraceEventType, Int32, Object)
  fullName: FileLogTraceListener.TraceData(TraceEventCache, String, TraceEventType, Int32, Object)
- uid: System.Diagnostics.TraceEventCache
  parent: System.Diagnostics
  isExternal: false
  name: TraceEventCache
  nameWithType: TraceEventCache
  fullName: System.Diagnostics.TraceEventCache
- uid: System.Diagnostics.TraceEventType
  parent: System.Diagnostics
  isExternal: false
  name: TraceEventType
  nameWithType: TraceEventType
  fullName: System.Diagnostics.TraceEventType
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: TraceData(TraceEventCache, String, TraceEventType, Int32, Object[])
  nameWithType: FileLogTraceListener.TraceData(TraceEventCache, String, TraceEventType, Int32, Object[])
  fullName: FileLogTraceListener.TraceData(TraceEventCache, String, TraceEventType, Int32, Object[])
- uid: System.Object[]
  parent: System
  isExternal: false
  name: Object[]
  nameWithType: Object[]
  fullName: System.Object[]
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: TraceEvent(TraceEventCache, String, TraceEventType, Int32, String)
  nameWithType: FileLogTraceListener.TraceEvent(TraceEventCache, String, TraceEventType, Int32, String)
  fullName: FileLogTraceListener.TraceEvent(TraceEventCache, String, TraceEventType, Int32, String)
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: TraceEvent(TraceEventCache, String, TraceEventType, Int32, String, Object[])
  nameWithType: FileLogTraceListener.TraceEvent(TraceEventCache, String, TraceEventType, Int32, String, Object[])
  fullName: FileLogTraceListener.TraceEvent(TraceEventCache, String, TraceEventType, Int32, String, Object[])
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.Write(System.String)
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: Write(String)
  nameWithType: FileLogTraceListener.Write(String)
  fullName: FileLogTraceListener.Write(String)
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.WriteLine(System.String)
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: WriteLine(String)
  nameWithType: FileLogTraceListener.WriteLine(String)
  fullName: FileLogTraceListener.WriteLine(String)
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData*
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: TraceData
  nameWithType: FileLogTraceListener.TraceData
  fullName: FileLogTraceListener.TraceData
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.Logging/FileLogTraceListener.xml
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent*
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: TraceEvent
  nameWithType: FileLogTraceListener.TraceEvent
  fullName: FileLogTraceListener.TraceEvent
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.Logging/FileLogTraceListener.xml
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.#ctor*
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: FileLogTraceListener
  nameWithType: FileLogTraceListener.FileLogTraceListener
  fullName: FileLogTraceListener.FileLogTraceListener
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.Logging/FileLogTraceListener.xml
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.Append*
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: Append
  nameWithType: FileLogTraceListener.Append
  fullName: FileLogTraceListener.Append
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.Logging/FileLogTraceListener.xml
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.AutoFlush*
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: AutoFlush
  nameWithType: FileLogTraceListener.AutoFlush
  fullName: FileLogTraceListener.AutoFlush
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.Logging/FileLogTraceListener.xml
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName*
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: BaseFileName
  nameWithType: FileLogTraceListener.BaseFileName
  fullName: FileLogTraceListener.BaseFileName
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.Logging/FileLogTraceListener.xml
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.Close*
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: Close
  nameWithType: FileLogTraceListener.Close
  fullName: FileLogTraceListener.Close
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.Logging/FileLogTraceListener.xml
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation*
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: CustomLocation
  nameWithType: FileLogTraceListener.CustomLocation
  fullName: FileLogTraceListener.CustomLocation
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.Logging/FileLogTraceListener.xml
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter*
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: Delimiter
  nameWithType: FileLogTraceListener.Delimiter
  fullName: FileLogTraceListener.Delimiter
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.Logging/FileLogTraceListener.xml
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior*
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: DiskSpaceExhaustedBehavior
  nameWithType: FileLogTraceListener.DiskSpaceExhaustedBehavior
  fullName: FileLogTraceListener.DiskSpaceExhaustedBehavior
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.Logging/FileLogTraceListener.xml
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.Dispose*
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: Dispose
  nameWithType: FileLogTraceListener.Dispose
  fullName: FileLogTraceListener.Dispose
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.Logging/FileLogTraceListener.xml
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.Encoding*
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: Encoding
  nameWithType: FileLogTraceListener.Encoding
  fullName: FileLogTraceListener.Encoding
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.Logging/FileLogTraceListener.xml
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.Flush*
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: Flush
  nameWithType: FileLogTraceListener.Flush
  fullName: FileLogTraceListener.Flush
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.Logging/FileLogTraceListener.xml
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName*
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: FullLogFileName
  nameWithType: FileLogTraceListener.FullLogFileName
  fullName: FileLogTraceListener.FullLogFileName
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.Logging/FileLogTraceListener.xml
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.GetSupportedAttributes*
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: GetSupportedAttributes
  nameWithType: FileLogTraceListener.GetSupportedAttributes
  fullName: FileLogTraceListener.GetSupportedAttributes
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.Logging/FileLogTraceListener.xml
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.IncludeHostName*
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: IncludeHostName
  nameWithType: FileLogTraceListener.IncludeHostName
  fullName: FileLogTraceListener.IncludeHostName
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.Logging/FileLogTraceListener.xml
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.Location*
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: Location
  nameWithType: FileLogTraceListener.Location
  fullName: FileLogTraceListener.Location
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.Logging/FileLogTraceListener.xml
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule*
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: LogFileCreationSchedule
  nameWithType: FileLogTraceListener.LogFileCreationSchedule
  fullName: FileLogTraceListener.LogFileCreationSchedule
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.Logging/FileLogTraceListener.xml
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize*
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: MaxFileSize
  nameWithType: FileLogTraceListener.MaxFileSize
  fullName: FileLogTraceListener.MaxFileSize
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.Logging/FileLogTraceListener.xml
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace*
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: ReserveDiskSpace
  nameWithType: FileLogTraceListener.ReserveDiskSpace
  fullName: FileLogTraceListener.ReserveDiskSpace
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.Logging/FileLogTraceListener.xml
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.Write*
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: Write
  nameWithType: FileLogTraceListener.Write
  fullName: FileLogTraceListener.Write
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.Logging/FileLogTraceListener.xml
- uid: Microsoft.VisualBasic.Logging.FileLogTraceListener.WriteLine*
  parent: Microsoft.VisualBasic.Logging.FileLogTraceListener
  isExternal: false
  name: WriteLine
  nameWithType: FileLogTraceListener.WriteLine
  fullName: FileLogTraceListener.WriteLine
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/Microsoft.VisualBasic.Logging/FileLogTraceListener.xml
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: Object.Equals(Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: Object.Equals(Object, Object)
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: false
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: Object.GetHashCode()
- uid: System.Object.GetType
  parent: System.Object
  isExternal: false
  name: GetType()
  nameWithType: Object.GetType()
  fullName: Object.GetType()
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: false
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: Object.MemberwiseClone()
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: Object.ReferenceEquals(Object, Object)
- uid: System.Object.ToString
  parent: System.Object
  isExternal: false
  name: ToString()
  nameWithType: Object.ToString()
  fullName: Object.ToString()
- uid: System.Diagnostics.TraceListener.Attributes
  parent: System.Diagnostics.TraceListener
  isExternal: false
  name: Attributes
  nameWithType: TraceListener.Attributes
  fullName: TraceListener.Attributes
- uid: System.Diagnostics.TraceListener.Dispose
  parent: System.Diagnostics.TraceListener
  isExternal: false
  name: Dispose()
  nameWithType: TraceListener.Dispose()
  fullName: TraceListener.Dispose()
- uid: System.Diagnostics.TraceListener.Fail(System.String)
  parent: System.Diagnostics.TraceListener
  isExternal: false
  name: Fail(String)
  nameWithType: TraceListener.Fail(String)
  fullName: TraceListener.Fail(String)
- uid: System.Diagnostics.TraceListener.Fail(System.String,System.String)
  parent: System.Diagnostics.TraceListener
  isExternal: false
  name: Fail(String, String)
  nameWithType: TraceListener.Fail(String, String)
  fullName: TraceListener.Fail(String, String)
- uid: System.Diagnostics.TraceListener.Filter
  parent: System.Diagnostics.TraceListener
  isExternal: false
  name: Filter
  nameWithType: TraceListener.Filter
  fullName: TraceListener.Filter
- uid: System.Diagnostics.TraceListener.IndentLevel
  parent: System.Diagnostics.TraceListener
  isExternal: false
  name: IndentLevel
  nameWithType: TraceListener.IndentLevel
  fullName: TraceListener.IndentLevel
- uid: System.Diagnostics.TraceListener.IndentSize
  parent: System.Diagnostics.TraceListener
  isExternal: false
  name: IndentSize
  nameWithType: TraceListener.IndentSize
  fullName: TraceListener.IndentSize
- uid: System.Diagnostics.TraceListener.IsThreadSafe
  parent: System.Diagnostics.TraceListener
  isExternal: false
  name: IsThreadSafe
  nameWithType: TraceListener.IsThreadSafe
  fullName: TraceListener.IsThreadSafe
- uid: System.Diagnostics.TraceListener.Name
  parent: System.Diagnostics.TraceListener
  isExternal: false
  name: Name
  nameWithType: TraceListener.Name
  fullName: TraceListener.Name
- uid: System.Diagnostics.TraceListener.NeedIndent
  parent: System.Diagnostics.TraceListener
  isExternal: false
  name: NeedIndent
  nameWithType: TraceListener.NeedIndent
  fullName: TraceListener.NeedIndent
- uid: System.Diagnostics.TraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32)
  parent: System.Diagnostics.TraceListener
  isExternal: false
  name: TraceEvent(TraceEventCache, String, TraceEventType, Int32)
  nameWithType: TraceListener.TraceEvent(TraceEventCache, String, TraceEventType, Int32)
  fullName: TraceListener.TraceEvent(TraceEventCache, String, TraceEventType, Int32)
- uid: System.Diagnostics.TraceListener.TraceOutputOptions
  parent: System.Diagnostics.TraceListener
  isExternal: false
  name: TraceOutputOptions
  nameWithType: TraceListener.TraceOutputOptions
  fullName: TraceListener.TraceOutputOptions
- uid: System.Diagnostics.TraceListener.TraceTransfer(System.Diagnostics.TraceEventCache,System.String,System.Int32,System.String,System.Guid)
  parent: System.Diagnostics.TraceListener
  isExternal: false
  name: TraceTransfer(TraceEventCache, String, Int32, String, Guid)
  nameWithType: TraceListener.TraceTransfer(TraceEventCache, String, Int32, String, Guid)
  fullName: TraceListener.TraceTransfer(TraceEventCache, String, Int32, String, Guid)
- uid: System.Diagnostics.TraceListener.Write(System.Object)
  parent: System.Diagnostics.TraceListener
  isExternal: false
  name: Write(Object)
  nameWithType: TraceListener.Write(Object)
  fullName: TraceListener.Write(Object)
- uid: System.Diagnostics.TraceListener.Write(System.Object,System.String)
  parent: System.Diagnostics.TraceListener
  isExternal: false
  name: Write(Object, String)
  nameWithType: TraceListener.Write(Object, String)
  fullName: TraceListener.Write(Object, String)
- uid: System.Diagnostics.TraceListener.Write(System.String,System.String)
  parent: System.Diagnostics.TraceListener
  isExternal: false
  name: Write(String, String)
  nameWithType: TraceListener.Write(String, String)
  fullName: TraceListener.Write(String, String)
- uid: System.Diagnostics.TraceListener.WriteIndent
  parent: System.Diagnostics.TraceListener
  isExternal: false
  name: WriteIndent()
  nameWithType: TraceListener.WriteIndent()
  fullName: TraceListener.WriteIndent()
- uid: System.Diagnostics.TraceListener.WriteLine(System.Object)
  parent: System.Diagnostics.TraceListener
  isExternal: false
  name: WriteLine(Object)
  nameWithType: TraceListener.WriteLine(Object)
  fullName: TraceListener.WriteLine(Object)
- uid: System.Diagnostics.TraceListener.WriteLine(System.Object,System.String)
  parent: System.Diagnostics.TraceListener
  isExternal: false
  name: WriteLine(Object, String)
  nameWithType: TraceListener.WriteLine(Object, String)
  fullName: TraceListener.WriteLine(Object, String)
- uid: System.Diagnostics.TraceListener.WriteLine(System.String,System.String)
  parent: System.Diagnostics.TraceListener
  isExternal: false
  name: WriteLine(String, String)
  nameWithType: TraceListener.WriteLine(String, String)
  fullName: TraceListener.WriteLine(String, String)
