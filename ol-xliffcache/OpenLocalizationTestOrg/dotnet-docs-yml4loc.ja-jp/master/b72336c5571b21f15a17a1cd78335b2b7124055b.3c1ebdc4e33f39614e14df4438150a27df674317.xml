{"nodes":[{"content":"Specifies the name of the property that an implementer of <xref href=\"System.ComponentModel.IExtenderProvider\"></xref> offers to other components. This class cannot be inherited","nodes":[{"pos":[0,177],"content":"Specifies the name of the property that an implementer of <xref href=\"System.ComponentModel.IExtenderProvider\"></xref> offers to other components. This class cannot be inherited","nodes":[{"content":"Specifies the name of the property that an implementer of <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.IExtenderProvider\"&gt;&lt;/xref&gt;</ph> offers to other components.","pos":[0,146],"source":"Specifies the name of the property that an implementer of <xref href=\"System.ComponentModel.IExtenderProvider\"></xref> offers to other components."},{"content":"This class cannot be inherited","pos":[147,177]}]}],"pos":[985,1163],"yaml":true},{"content":"When you mark a class with this attribute, you tell the code generator to create an extender property with the name you provide. The marked class must implement <xref:System.ComponentModel.IExtenderProvider>. As a result, the new property can be used by other components in a container.  \n  \n Within the marked class, you must implement `Get` \\<name> and `Set` \\<name> methods. For example, if you mark a class with [ProvideProperty(\"PropertyName\")], you must implement `GetPropertyName` and `SetPropertyName` methods. To specify that the new property will be an extender property, you must implement from <xref:System.ComponentModel.IExtenderProvider>, you must also implement a `CanExtend` method.  \n  \n For more information, see [Attributes](http://msdn.microsoft.com/library/30386922-1e00-4602-9ebf-526b271a8b87).","nodes":[{"pos":[0,286],"content":"When you mark a class with this attribute, you tell the code generator to create an extender property with the name you provide. The marked class must implement <xref:System.ComponentModel.IExtenderProvider>. As a result, the new property can be used by other components in a container.","nodes":[{"content":"When you mark a class with this attribute, you tell the code generator to create an extender property with the name you provide. The marked class must implement <xref:System.ComponentModel.IExtenderProvider>. As a result, the new property can be used by other components in a container.","pos":[0,286],"nodes":[{"content":"When you mark a class with this attribute, you tell the code generator to create an extender property with the name you provide.","pos":[0,128]},{"content":"The marked class must implement <ph id=\"ph1\">&lt;xref:System.ComponentModel.IExtenderProvider&gt;</ph>.","pos":[129,208],"source":" The marked class must implement <xref:System.ComponentModel.IExtenderProvider>."},{"content":"As a result, the new property can be used by other components in a container.","pos":[209,286]}]}]},{"pos":[293,699],"content":"Within the marked class, you must implement `Get` \\<name> and `Set` \\<name> methods. For example, if you mark a class with [ProvideProperty(\"PropertyName\")], you must implement `GetPropertyName` and `SetPropertyName` methods. To specify that the new property will be an extender property, you must implement from <xref:System.ComponentModel.IExtenderProvider>, you must also implement a `CanExtend` method.","nodes":[{"content":"Within the marked class, you must implement <ph id=\"ph1\">`Get`</ph> <ph id=\"ph2\">\\&lt;</ph>name&gt; and <ph id=\"ph3\">`Set`</ph> <ph id=\"ph4\">\\&lt;</ph>name&gt; methods.","pos":[0,84],"source":"Within the marked class, you must implement `Get` \\<name> and `Set` \\<name> methods."},{"content":"For example, if you mark a class with [ProvideProperty(\"PropertyName\")], you must implement <ph id=\"ph1\">`GetPropertyName`</ph> and <ph id=\"ph2\">`SetPropertyName`</ph> methods.","pos":[85,225],"source":" For example, if you mark a class with [ProvideProperty(\"PropertyName\")], you must implement `GetPropertyName` and `SetPropertyName` methods."},{"content":"To specify that the new property will be an extender property, you must implement from <ph id=\"ph1\">&lt;xref:System.ComponentModel.IExtenderProvider&gt;</ph>, you must also implement a <ph id=\"ph2\">`CanExtend`</ph> method.","pos":[226,406],"source":" To specify that the new property will be an extender property, you must implement from <xref:System.ComponentModel.IExtenderProvider>, you must also implement a `CanExtend` method."}]},{"pos":[706,817],"content":"For more information, see <bpt id=\"p1\">[</bpt>Attributes<ept id=\"p1\">](http://msdn.microsoft.com/library/30386922-1e00-4602-9ebf-526b271a8b87)</ept>.","source":"For more information, see [Attributes](http://msdn.microsoft.com/library/30386922-1e00-4602-9ebf-526b271a8b87)."}],"pos":[1174,2002],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.ComponentModel.ProvidePropertyAttribute\"></xref> class with the name of the property and the type of its receiver.","nodes":[{"pos":[0,167],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.ProvidePropertyAttribute\"&gt;&lt;/xref&gt;</ph> class with the name of the property and the type of its receiver.","source":"Initializes a new instance of the <xref href=\"System.ComponentModel.ProvidePropertyAttribute\"></xref> class with the name of the property and the type of its receiver."}],"pos":[8036,8204],"yaml":true},{"content":"The name of the property extending to an object of the specified type.","nodes":[{"pos":[0,70],"content":"The name of the property extending to an object of the specified type.","nodes":[{"content":"The name of the property extending to an object of the specified type.","pos":[0,70]}]}],"pos":[8391,8462],"yaml":true},{"content":"The name of the data type this property can extend.","nodes":[{"pos":[0,51],"content":"The name of the data type this property can extend.","nodes":[{"content":"The name of the data type this property can extend.","pos":[0,51]}]}],"pos":[8534,8586],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.ComponentModel.ProvidePropertyAttribute\"></xref> class with the name of the property and its <xref href=\"System.Type\"></xref>.","nodes":[{"pos":[0,179],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.ProvidePropertyAttribute\"&gt;&lt;/xref&gt;</ph> class with the name of the property and its <ph id=\"ph2\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph>.","source":"Initializes a new instance of the <xref href=\"System.ComponentModel.ProvidePropertyAttribute\"></xref> class with the name of the property and its <xref href=\"System.Type\"></xref>."}],"pos":[10125,10305],"yaml":true},{"content":"The name of the property extending to an object of the specified type.","nodes":[{"pos":[0,70],"content":"The name of the property extending to an object of the specified type.","nodes":[{"content":"The name of the property extending to an object of the specified type.","pos":[0,70]}]}],"pos":[10486,10557],"yaml":true},{"content":"The <xref href=\"System.Type\"></xref> of the data type of the object that can receive the property.","nodes":[{"pos":[0,98],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph> of the data type of the object that can receive the property.","source":"The <xref href=\"System.Type\"></xref> of the data type of the object that can receive the property."}],"pos":[10623,10722],"yaml":true},{"content":"Returns whether the value of the given object is equal to the current <xref href=\"System.ComponentModel.ProvidePropertyAttribute\"></xref>.","nodes":[{"pos":[0,138],"content":"Returns whether the value of the given object is equal to the current <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.ProvidePropertyAttribute\"&gt;&lt;/xref&gt;</ph>.","source":"Returns whether the value of the given object is equal to the current <xref href=\"System.ComponentModel.ProvidePropertyAttribute\"></xref>."}],"pos":[12149,12288],"yaml":true},{"content":"The object to test the value equality of.","nodes":[{"pos":[0,41],"content":"The object to test the value equality of.","nodes":[{"content":"The object to test the value equality of.","pos":[0,41]}]}],"pos":[12428,12470],"yaml":true},{"content":"`true` if the value of the given object is equal to that of the current; otherwise, `false`.","nodes":[{"pos":[0,92],"content":"<ph id=\"ph1\">`true`</ph> if the value of the given object is equal to that of the current; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the value of the given object is equal to that of the current; otherwise, `false`."}],"pos":[12528,12623],"yaml":true},{"content":"Returns the hash code for this instance.","nodes":[{"pos":[0,40],"content":"Returns the hash code for this instance.","nodes":[{"content":"Returns the hash code for this instance.","pos":[0,40]}]}],"pos":[14018,14059],"yaml":true},{"content":"A hash code for the current <xref href=\"System.ComponentModel.ProvidePropertyAttribute\"></xref>.","nodes":[{"pos":[0,96],"content":"A hash code for the current <ph id=\"ph1\">&lt;xref href=\"System.ComponentModel.ProvidePropertyAttribute\"&gt;&lt;/xref&gt;</ph>.","source":"A hash code for the current <xref href=\"System.ComponentModel.ProvidePropertyAttribute\"></xref>."}],"pos":[14193,14290],"yaml":true},{"content":"Gets the name of a property that this class provides.","nodes":[{"pos":[0,53],"content":"Gets the name of a property that this class provides.","nodes":[{"content":"Gets the name of a property that this class provides.","pos":[0,53]}]}],"pos":[15692,15746],"yaml":true},{"content":"The name of a property that this class provides.","nodes":[{"pos":[0,48],"content":"The name of a property that this class provides.","nodes":[{"content":"The name of a property that this class provides.","pos":[0,48]}]}],"pos":[15862,15911],"yaml":true},{"content":"Gets the name of the data type this property can extend.","nodes":[{"pos":[0,56],"content":"Gets the name of the data type this property can extend.","nodes":[{"content":"Gets the name of the data type this property can extend.","pos":[0,56]}]}],"pos":[17338,17395],"yaml":true},{"content":"The name of the data type this property can extend.","nodes":[{"pos":[0,51],"content":"The name of the data type this property can extend.","nodes":[{"content":"The name of the data type this property can extend.","pos":[0,51]}]}],"pos":[17515,17567],"yaml":true},{"content":"Gets a unique identifier for this attribute.","nodes":[{"pos":[0,44],"content":"Gets a unique identifier for this attribute.","nodes":[{"content":"Gets a unique identifier for this attribute.","pos":[0,44]}]}],"pos":[18938,18983],"yaml":true},{"content":"An <xref href=\"System.Object\"></xref> that is a unique identifier for the attribute.","nodes":[{"pos":[0,84],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Object\"&gt;&lt;/xref&gt;</ph> that is a unique identifier for the attribute.","source":"An <xref href=\"System.Object\"></xref> that is a unique identifier for the attribute."}],"pos":[19102,19187],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.ComponentModel.ProvidePropertyAttribute\n  commentId: T:System.ComponentModel.ProvidePropertyAttribute\n  id: ProvidePropertyAttribute\n  children:\n  - System.ComponentModel.ProvidePropertyAttribute.#ctor(System.String,System.String)\n  - System.ComponentModel.ProvidePropertyAttribute.#ctor(System.String,System.Type)\n  - System.ComponentModel.ProvidePropertyAttribute.Equals(System.Object)\n  - System.ComponentModel.ProvidePropertyAttribute.GetHashCode\n  - System.ComponentModel.ProvidePropertyAttribute.PropertyName\n  - System.ComponentModel.ProvidePropertyAttribute.ReceiverTypeName\n  - System.ComponentModel.ProvidePropertyAttribute.TypeId\n  langs:\n  - csharp\n  name: ProvidePropertyAttribute\n  nameWithType: ProvidePropertyAttribute\n  fullName: System.ComponentModel.ProvidePropertyAttribute\n  type: Class\n  assemblies:\n  - System.ComponentModel.TypeConverter\n  - System\n  - netstandard\n  namespace: System.ComponentModel\n  summary: Specifies the name of the property that an implementer of <xref href=\"System.ComponentModel.IExtenderProvider\"></xref> offers to other components. This class cannot be inherited\n  remarks: \"When you mark a class with this attribute, you tell the code generator to create an extender property with the name you provide. The marked class must implement <xref:System.ComponentModel.IExtenderProvider>. As a result, the new property can be used by other components in a container.  \\n  \\n Within the marked class, you must implement `Get` \\\\<name> and `Set` \\\\<name> methods. For example, if you mark a class with [ProvideProperty(\\\"PropertyName\\\")], you must implement `GetPropertyName` and `SetPropertyName` methods. To specify that the new property will be an extender property, you must implement from <xref:System.ComponentModel.IExtenderProvider>, you must also implement a `CanExtend` method.  \\n  \\n For more information, see [Attributes](http://msdn.microsoft.com/library/30386922-1e00-4602-9ebf-526b271a8b87).\"\n  example:\n  - \"The following example marks `MyClass` with a <xref:System.ComponentModel.ProvidePropertyAttribute> that tells the compiler to create a property called `MyProperty` from the `GetMyProperty` and `SetMyProperty` methods.  \\n  \\n [!code-cpp[Classic ProvidePropertyAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic ProvidePropertyAttribute Example/CPP/source.cpp#1)]\\n [!code-csharp[Classic ProvidePropertyAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic ProvidePropertyAttribute Example/CS/source.cs#1)]\\n [!code-vb[Classic ProvidePropertyAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic ProvidePropertyAttribute Example/VB/source.vb#1)]\"\n  syntax:\n    content: >-\n      [System.AttributeUsage(System.AttributeTargets.Class, AllowMultiple=true)]\n\n      public sealed class ProvidePropertyAttribute : Attribute\n  inheritance:\n  - System.Object\n  - System.Attribute\n  implements: []\n  inheritedMembers:\n  - System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type)\n  - System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)\n  - System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type)\n  - System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type)\n  - System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo)\n  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)\n  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Module)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo)\n  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type)\n  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  - System.Attribute.IsDefaultAttribute\n  - System.Attribute.IsDefined(System.Reflection.Assembly,System.Type)\n  - System.Attribute.IsDefined(System.Reflection.Assembly,System.Type,System.Boolean)\n  - System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type)\n  - System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  - System.Attribute.IsDefined(System.Reflection.Module,System.Type)\n  - System.Attribute.IsDefined(System.Reflection.Module,System.Type,System.Boolean)\n  - System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type)\n  - System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  - System.Attribute.Match(System.Object)\n  - System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)\n  - System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)\n  - System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)\n  - System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  attributes:\n  - type: System.AttributeUsageAttribute\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/ProvidePropertyAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.ProvidePropertyAttribute.#ctor(System.String,System.String)\n  commentId: M:System.ComponentModel.ProvidePropertyAttribute.#ctor(System.String,System.String)\n  id: '#ctor(System.String,System.String)'\n  parent: System.ComponentModel.ProvidePropertyAttribute\n  langs:\n  - csharp\n  name: ProvidePropertyAttribute(String, String)\n  nameWithType: ProvidePropertyAttribute.ProvidePropertyAttribute(String, String)\n  fullName: ProvidePropertyAttribute.ProvidePropertyAttribute(String, String)\n  type: Constructor\n  assemblies:\n  - System.ComponentModel.TypeConverter\n  - System\n  - netstandard\n  namespace: System.ComponentModel\n  summary: Initializes a new instance of the <xref href=\"System.ComponentModel.ProvidePropertyAttribute\"></xref> class with the name of the property and the type of its receiver.\n  syntax:\n    content: public ProvidePropertyAttribute (string propertyName, string receiverTypeName);\n    parameters:\n    - id: propertyName\n      type: System.String\n      description: The name of the property extending to an object of the specified type.\n    - id: receiverTypeName\n      type: System.String\n      description: The name of the data type this property can extend.\n  overload: System.ComponentModel.ProvidePropertyAttribute.#ctor*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/ProvidePropertyAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.ProvidePropertyAttribute.#ctor(System.String,System.Type)\n  commentId: M:System.ComponentModel.ProvidePropertyAttribute.#ctor(System.String,System.Type)\n  id: '#ctor(System.String,System.Type)'\n  parent: System.ComponentModel.ProvidePropertyAttribute\n  langs:\n  - csharp\n  name: ProvidePropertyAttribute(String, Type)\n  nameWithType: ProvidePropertyAttribute.ProvidePropertyAttribute(String, Type)\n  fullName: ProvidePropertyAttribute.ProvidePropertyAttribute(String, Type)\n  type: Constructor\n  assemblies:\n  - System.ComponentModel.TypeConverter\n  - System\n  - netstandard\n  namespace: System.ComponentModel\n  summary: Initializes a new instance of the <xref href=\"System.ComponentModel.ProvidePropertyAttribute\"></xref> class with the name of the property and its <xref href=\"System.Type\"></xref>.\n  syntax:\n    content: public ProvidePropertyAttribute (string propertyName, Type receiverType);\n    parameters:\n    - id: propertyName\n      type: System.String\n      description: The name of the property extending to an object of the specified type.\n    - id: receiverType\n      type: System.Type\n      description: The <xref href=\"System.Type\"></xref> of the data type of the object that can receive the property.\n  overload: System.ComponentModel.ProvidePropertyAttribute.#ctor*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/ProvidePropertyAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.ProvidePropertyAttribute.Equals(System.Object)\n  commentId: M:System.ComponentModel.ProvidePropertyAttribute.Equals(System.Object)\n  id: Equals(System.Object)\n  parent: System.ComponentModel.ProvidePropertyAttribute\n  langs:\n  - csharp\n  name: Equals(Object)\n  nameWithType: ProvidePropertyAttribute.Equals(Object)\n  fullName: ProvidePropertyAttribute.Equals(Object)\n  type: Method\n  assemblies:\n  - System.ComponentModel.TypeConverter\n  - System\n  - netstandard\n  namespace: System.ComponentModel\n  summary: Returns whether the value of the given object is equal to the current <xref href=\"System.ComponentModel.ProvidePropertyAttribute\"></xref>.\n  syntax:\n    content: public override bool Equals (object obj);\n    parameters:\n    - id: obj\n      type: System.Object\n      description: The object to test the value equality of.\n    return:\n      type: System.Boolean\n      description: '`true` if the value of the given object is equal to that of the current; otherwise, `false`.'\n  overload: System.ComponentModel.ProvidePropertyAttribute.Equals*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/ProvidePropertyAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.ProvidePropertyAttribute.GetHashCode\n  commentId: M:System.ComponentModel.ProvidePropertyAttribute.GetHashCode\n  id: GetHashCode\n  parent: System.ComponentModel.ProvidePropertyAttribute\n  langs:\n  - csharp\n  name: GetHashCode()\n  nameWithType: ProvidePropertyAttribute.GetHashCode()\n  fullName: ProvidePropertyAttribute.GetHashCode()\n  type: Method\n  assemblies:\n  - System.ComponentModel.TypeConverter\n  - System\n  - netstandard\n  namespace: System.ComponentModel\n  summary: Returns the hash code for this instance.\n  syntax:\n    content: public override int GetHashCode ();\n    parameters: []\n    return:\n      type: System.Int32\n      description: A hash code for the current <xref href=\"System.ComponentModel.ProvidePropertyAttribute\"></xref>.\n  overload: System.ComponentModel.ProvidePropertyAttribute.GetHashCode*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/ProvidePropertyAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.ProvidePropertyAttribute.PropertyName\n  commentId: P:System.ComponentModel.ProvidePropertyAttribute.PropertyName\n  id: PropertyName\n  parent: System.ComponentModel.ProvidePropertyAttribute\n  langs:\n  - csharp\n  name: PropertyName\n  nameWithType: ProvidePropertyAttribute.PropertyName\n  fullName: ProvidePropertyAttribute.PropertyName\n  type: Property\n  assemblies:\n  - System.ComponentModel.TypeConverter\n  - System\n  - netstandard\n  namespace: System.ComponentModel\n  summary: Gets the name of a property that this class provides.\n  syntax:\n    content: public string PropertyName { get; }\n    return:\n      type: System.String\n      description: The name of a property that this class provides.\n  overload: System.ComponentModel.ProvidePropertyAttribute.PropertyName*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/ProvidePropertyAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.ProvidePropertyAttribute.ReceiverTypeName\n  commentId: P:System.ComponentModel.ProvidePropertyAttribute.ReceiverTypeName\n  id: ReceiverTypeName\n  parent: System.ComponentModel.ProvidePropertyAttribute\n  langs:\n  - csharp\n  name: ReceiverTypeName\n  nameWithType: ProvidePropertyAttribute.ReceiverTypeName\n  fullName: ProvidePropertyAttribute.ReceiverTypeName\n  type: Property\n  assemblies:\n  - System.ComponentModel.TypeConverter\n  - System\n  - netstandard\n  namespace: System.ComponentModel\n  summary: Gets the name of the data type this property can extend.\n  syntax:\n    content: public string ReceiverTypeName { get; }\n    return:\n      type: System.String\n      description: The name of the data type this property can extend.\n  overload: System.ComponentModel.ProvidePropertyAttribute.ReceiverTypeName*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/ProvidePropertyAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.ComponentModel.ProvidePropertyAttribute.TypeId\n  commentId: P:System.ComponentModel.ProvidePropertyAttribute.TypeId\n  id: TypeId\n  parent: System.ComponentModel.ProvidePropertyAttribute\n  langs:\n  - csharp\n  name: TypeId\n  nameWithType: ProvidePropertyAttribute.TypeId\n  fullName: ProvidePropertyAttribute.TypeId\n  type: Property\n  assemblies:\n  - System\n  - netstandard\n  - System.ComponentModel.TypeConverter\n  namespace: System.ComponentModel\n  summary: Gets a unique identifier for this attribute.\n  syntax:\n    content: public override object TypeId { get; }\n    return:\n      type: System.Object\n      description: An <xref href=\"System.Object\"></xref> that is a unique identifier for the attribute.\n  overload: System.ComponentModel.ProvidePropertyAttribute.TypeId*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/ProvidePropertyAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\nreferences:\n- uid: System.Attribute\n  parent: System\n  isExternal: false\n  name: Attribute\n  nameWithType: Attribute\n  fullName: System.Attribute\n- uid: System.ComponentModel.ProvidePropertyAttribute.#ctor(System.String,System.String)\n  parent: System.ComponentModel.ProvidePropertyAttribute\n  isExternal: false\n  name: ProvidePropertyAttribute(String, String)\n  nameWithType: ProvidePropertyAttribute.ProvidePropertyAttribute(String, String)\n  fullName: ProvidePropertyAttribute.ProvidePropertyAttribute(String, String)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.ComponentModel.ProvidePropertyAttribute.#ctor(System.String,System.Type)\n  parent: System.ComponentModel.ProvidePropertyAttribute\n  isExternal: false\n  name: ProvidePropertyAttribute(String, Type)\n  nameWithType: ProvidePropertyAttribute.ProvidePropertyAttribute(String, Type)\n  fullName: ProvidePropertyAttribute.ProvidePropertyAttribute(String, Type)\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.ComponentModel.ProvidePropertyAttribute.Equals(System.Object)\n  parent: System.ComponentModel.ProvidePropertyAttribute\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: ProvidePropertyAttribute.Equals(Object)\n  fullName: ProvidePropertyAttribute.Equals(Object)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.ComponentModel.ProvidePropertyAttribute.GetHashCode\n  parent: System.ComponentModel.ProvidePropertyAttribute\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: ProvidePropertyAttribute.GetHashCode()\n  fullName: ProvidePropertyAttribute.GetHashCode()\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.ComponentModel.ProvidePropertyAttribute.PropertyName\n  parent: System.ComponentModel.ProvidePropertyAttribute\n  isExternal: false\n  name: PropertyName\n  nameWithType: ProvidePropertyAttribute.PropertyName\n  fullName: ProvidePropertyAttribute.PropertyName\n- uid: System.ComponentModel.ProvidePropertyAttribute.ReceiverTypeName\n  parent: System.ComponentModel.ProvidePropertyAttribute\n  isExternal: false\n  name: ReceiverTypeName\n  nameWithType: ProvidePropertyAttribute.ReceiverTypeName\n  fullName: ProvidePropertyAttribute.ReceiverTypeName\n- uid: System.ComponentModel.ProvidePropertyAttribute.TypeId\n  parent: System.ComponentModel.ProvidePropertyAttribute\n  isExternal: false\n  name: TypeId\n  nameWithType: ProvidePropertyAttribute.TypeId\n  fullName: ProvidePropertyAttribute.TypeId\n- uid: System.ComponentModel.ProvidePropertyAttribute.#ctor*\n  parent: System.ComponentModel.ProvidePropertyAttribute\n  isExternal: false\n  name: ProvidePropertyAttribute\n  nameWithType: ProvidePropertyAttribute.ProvidePropertyAttribute\n  fullName: ProvidePropertyAttribute.ProvidePropertyAttribute\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/ProvidePropertyAttribute.xml\n- uid: System.ComponentModel.ProvidePropertyAttribute.Equals*\n  parent: System.ComponentModel.ProvidePropertyAttribute\n  isExternal: false\n  name: Equals\n  nameWithType: ProvidePropertyAttribute.Equals\n  fullName: ProvidePropertyAttribute.Equals\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/ProvidePropertyAttribute.xml\n- uid: System.ComponentModel.ProvidePropertyAttribute.GetHashCode*\n  parent: System.ComponentModel.ProvidePropertyAttribute\n  isExternal: false\n  name: GetHashCode\n  nameWithType: ProvidePropertyAttribute.GetHashCode\n  fullName: ProvidePropertyAttribute.GetHashCode\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/ProvidePropertyAttribute.xml\n- uid: System.ComponentModel.ProvidePropertyAttribute.PropertyName*\n  parent: System.ComponentModel.ProvidePropertyAttribute\n  isExternal: false\n  name: PropertyName\n  nameWithType: ProvidePropertyAttribute.PropertyName\n  fullName: ProvidePropertyAttribute.PropertyName\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/ProvidePropertyAttribute.xml\n- uid: System.ComponentModel.ProvidePropertyAttribute.ReceiverTypeName*\n  parent: System.ComponentModel.ProvidePropertyAttribute\n  isExternal: false\n  name: ReceiverTypeName\n  nameWithType: ProvidePropertyAttribute.ReceiverTypeName\n  fullName: ProvidePropertyAttribute.ReceiverTypeName\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/ProvidePropertyAttribute.xml\n- uid: System.ComponentModel.ProvidePropertyAttribute.TypeId*\n  parent: System.ComponentModel.ProvidePropertyAttribute\n  isExternal: false\n  name: TypeId\n  nameWithType: ProvidePropertyAttribute.TypeId\n  fullName: ProvidePropertyAttribute.TypeId\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ComponentModel/ProvidePropertyAttribute.xml\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(ParameterInfo, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttribute(ParameterInfo, Type, Boolean)\n  fullName: Attribute.GetCustomAttribute(ParameterInfo, Type, Boolean)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(MemberInfo, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttribute(MemberInfo, Type, Boolean)\n  fullName: Attribute.GetCustomAttribute(MemberInfo, Type, Boolean)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(Assembly, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttribute(Assembly, Type, Boolean)\n  fullName: Attribute.GetCustomAttribute(Assembly, Type, Boolean)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(Module, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttribute(Module, Type, Boolean)\n  fullName: Attribute.GetCustomAttribute(Module, Type, Boolean)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(Module, Type)\n  nameWithType: Attribute.GetCustomAttribute(Module, Type)\n  fullName: Attribute.GetCustomAttribute(Module, Type)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(MemberInfo, Type)\n  nameWithType: Attribute.GetCustomAttribute(MemberInfo, Type)\n  fullName: Attribute.GetCustomAttribute(MemberInfo, Type)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(Assembly, Type)\n  nameWithType: Attribute.GetCustomAttribute(Assembly, Type)\n  fullName: Attribute.GetCustomAttribute(Assembly, Type)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(ParameterInfo, Type)\n  nameWithType: Attribute.GetCustomAttribute(ParameterInfo, Type)\n  fullName: Attribute.GetCustomAttribute(ParameterInfo, Type)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Module, Type)\n  nameWithType: Attribute.GetCustomAttributes(Module, Type)\n  fullName: Attribute.GetCustomAttributes(Module, Type)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(ParameterInfo, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(ParameterInfo, Type, Boolean)\n  fullName: Attribute.GetCustomAttributes(ParameterInfo, Type, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Module, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(Module, Type, Boolean)\n  fullName: Attribute.GetCustomAttributes(Module, Type, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(MemberInfo, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(MemberInfo, Type, Boolean)\n  fullName: Attribute.GetCustomAttributes(MemberInfo, Type, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Assembly, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(Assembly, Type, Boolean)\n  fullName: Attribute.GetCustomAttributes(Assembly, Type, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(ParameterInfo, Type)\n  nameWithType: Attribute.GetCustomAttributes(ParameterInfo, Type)\n  fullName: Attribute.GetCustomAttributes(ParameterInfo, Type)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Module, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(Module, Boolean)\n  fullName: Attribute.GetCustomAttributes(Module, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(ParameterInfo, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(ParameterInfo, Boolean)\n  fullName: Attribute.GetCustomAttributes(ParameterInfo, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(MemberInfo, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(MemberInfo, Boolean)\n  fullName: Attribute.GetCustomAttributes(MemberInfo, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Assembly, Type)\n  nameWithType: Attribute.GetCustomAttributes(Assembly, Type)\n  fullName: Attribute.GetCustomAttributes(Assembly, Type)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Assembly, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(Assembly, Boolean)\n  fullName: Attribute.GetCustomAttributes(Assembly, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(ParameterInfo)\n  nameWithType: Attribute.GetCustomAttributes(ParameterInfo)\n  fullName: Attribute.GetCustomAttributes(ParameterInfo)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Module)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Module)\n  nameWithType: Attribute.GetCustomAttributes(Module)\n  fullName: Attribute.GetCustomAttributes(Module)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(MemberInfo)\n  nameWithType: Attribute.GetCustomAttributes(MemberInfo)\n  fullName: Attribute.GetCustomAttributes(MemberInfo)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Assembly)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Assembly)\n  nameWithType: Attribute.GetCustomAttributes(Assembly)\n  fullName: Attribute.GetCustomAttributes(Assembly)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(MemberInfo, Type)\n  nameWithType: Attribute.GetCustomAttributes(MemberInfo, Type)\n  fullName: Attribute.GetCustomAttributes(MemberInfo, Type)\n- uid: System.Attribute.IsDefaultAttribute\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefaultAttribute()\n  nameWithType: Attribute.IsDefaultAttribute()\n  fullName: Attribute.IsDefaultAttribute()\n- uid: System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(ParameterInfo, Type, Boolean)\n  nameWithType: Attribute.IsDefined(ParameterInfo, Type, Boolean)\n  fullName: Attribute.IsDefined(ParameterInfo, Type, Boolean)\n- uid: System.Attribute.IsDefined(System.Reflection.Module,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(Module, Type, Boolean)\n  nameWithType: Attribute.IsDefined(Module, Type, Boolean)\n  fullName: Attribute.IsDefined(Module, Type, Boolean)\n- uid: System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(MemberInfo, Type, Boolean)\n  nameWithType: Attribute.IsDefined(MemberInfo, Type, Boolean)\n  fullName: Attribute.IsDefined(MemberInfo, Type, Boolean)\n- uid: System.Attribute.IsDefined(System.Reflection.Assembly,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(Assembly, Type, Boolean)\n  nameWithType: Attribute.IsDefined(Assembly, Type, Boolean)\n  fullName: Attribute.IsDefined(Assembly, Type, Boolean)\n- uid: System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(MemberInfo, Type)\n  nameWithType: Attribute.IsDefined(MemberInfo, Type)\n  fullName: Attribute.IsDefined(MemberInfo, Type)\n- uid: System.Attribute.IsDefined(System.Reflection.Module,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(Module, Type)\n  nameWithType: Attribute.IsDefined(Module, Type)\n  fullName: Attribute.IsDefined(Module, Type)\n- uid: System.Attribute.IsDefined(System.Reflection.Assembly,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(Assembly, Type)\n  nameWithType: Attribute.IsDefined(Assembly, Type)\n  fullName: Attribute.IsDefined(Assembly, Type)\n- uid: System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(ParameterInfo, Type)\n  nameWithType: Attribute.IsDefined(ParameterInfo, Type)\n  fullName: Attribute.IsDefined(ParameterInfo, Type)\n- uid: System.Attribute.Match(System.Object)\n  parent: System.Attribute\n  isExternal: false\n  name: Match(Object)\n  nameWithType: Attribute.Match(Object)\n  fullName: Attribute.Match(Object)\n- uid: System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)\n  parent: System.Attribute\n  isExternal: false\n  name: _Attribute.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)\n  nameWithType: Attribute._Attribute.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)\n  fullName: Attribute._Attribute.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)\n- uid: System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)\n  parent: System.Attribute\n  isExternal: false\n  name: _Attribute.GetTypeInfo(UInt32, UInt32, IntPtr)\n  nameWithType: Attribute._Attribute.GetTypeInfo(UInt32, UInt32, IntPtr)\n  fullName: Attribute._Attribute.GetTypeInfo(UInt32, UInt32, IntPtr)\n- uid: System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)\n  parent: System.Attribute\n  isExternal: false\n  name: _Attribute.GetTypeInfoCount(UInt32)\n  nameWithType: Attribute._Attribute.GetTypeInfoCount(UInt32)\n  fullName: Attribute._Attribute.GetTypeInfoCount(UInt32)\n- uid: System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)\n  parent: System.Attribute\n  isExternal: false\n  name: _Attribute.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)\n  nameWithType: Attribute._Attribute.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)\n  fullName: Attribute._Attribute.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)\n"}