### YamlMime:ManagedReference
items:
- uid: System.Security.Permissions.KeyContainerPermissionAccessEntry
  commentId: T:System.Security.Permissions.KeyContainerPermissionAccessEntry
  id: KeyContainerPermissionAccessEntry
  children:
  - System.Security.Permissions.KeyContainerPermissionAccessEntry.#ctor(System.Security.Cryptography.CspParameters,System.Security.Permissions.KeyContainerPermissionFlags)
  - System.Security.Permissions.KeyContainerPermissionAccessEntry.#ctor(System.String,System.Security.Permissions.KeyContainerPermissionFlags)
  - System.Security.Permissions.KeyContainerPermissionAccessEntry.#ctor(System.String,System.String,System.Int32,System.String,System.Int32,System.Security.Permissions.KeyContainerPermissionFlags)
  - System.Security.Permissions.KeyContainerPermissionAccessEntry.Equals(System.Object)
  - System.Security.Permissions.KeyContainerPermissionAccessEntry.Flags
  - System.Security.Permissions.KeyContainerPermissionAccessEntry.GetHashCode
  - System.Security.Permissions.KeyContainerPermissionAccessEntry.KeyContainerName
  - System.Security.Permissions.KeyContainerPermissionAccessEntry.KeySpec
  - System.Security.Permissions.KeyContainerPermissionAccessEntry.KeyStore
  - System.Security.Permissions.KeyContainerPermissionAccessEntry.ProviderName
  - System.Security.Permissions.KeyContainerPermissionAccessEntry.ProviderType
  langs:
  - csharp
  name: KeyContainerPermissionAccessEntry
  nameWithType: KeyContainerPermissionAccessEntry
  fullName: System.Security.Permissions.KeyContainerPermissionAccessEntry
  type: Class
  assemblies:
  - mscorlib
  - System.Security.Permissions
  namespace: System.Security.Permissions
  summary: Specifies access rights for specific key containers. This class cannot be inherited.
  remarks: This permission is intended to enable users to easily manage key containers when either a small number of keys is involved, or access is to be granted to only some keys.
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public sealed class KeyContainerPermissionAccessEntry
  inheritance:
  - System.Object
  implements: []
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  attributes:
  - type: System.Runtime.InteropServices.ComVisibleAttribute
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/KeyContainerPermissionAccessEntry.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.Permissions.KeyContainerPermissionAccessEntry.#ctor(System.Security.Cryptography.CspParameters,System.Security.Permissions.KeyContainerPermissionFlags)
  commentId: M:System.Security.Permissions.KeyContainerPermissionAccessEntry.#ctor(System.Security.Cryptography.CspParameters,System.Security.Permissions.KeyContainerPermissionFlags)
  id: '#ctor(System.Security.Cryptography.CspParameters,System.Security.Permissions.KeyContainerPermissionFlags)'
  parent: System.Security.Permissions.KeyContainerPermissionAccessEntry
  langs:
  - csharp
  name: KeyContainerPermissionAccessEntry(CspParameters, KeyContainerPermissionFlags)
  nameWithType: KeyContainerPermissionAccessEntry.KeyContainerPermissionAccessEntry(CspParameters, KeyContainerPermissionFlags)
  fullName: KeyContainerPermissionAccessEntry.KeyContainerPermissionAccessEntry(CspParameters, KeyContainerPermissionFlags)
  type: Constructor
  assemblies:
  - mscorlib
  - System.Security.Permissions
  namespace: System.Security.Permissions
  summary: Initializes a new instance of the <xref href="System.Security.Permissions.KeyContainerPermissionAccessEntry"></xref> class, using the specified cryptographic service provider (CSP) parameters and access permissions.
  remarks: This constructor allows access rights to be assigned for specific key containers identified in a <xref:System.Security.Cryptography.CspParameters> object.
  example:
  - "The following code example shows the use of the <xref:System.Security.Permissions.KeyContainerPermissionAccessEntry.%23ctor%28System.Security.Cryptography.CspParameters%2CSystem.Security.Permissions.KeyContainerPermissionFlags%29> constructor.  \n  \n [!code-cpp[System.Security.Permissions.KeyContainerPermission#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Permissions.KeyContainerPermission/CPP/keycontainerpermission.cpp#3)]\n [!code-csharp[System.Security.Permissions.KeyContainerPermission#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Permissions.KeyContainerPermission/CS/keycontainerpermission.cs#3)]\n [!code-vb[System.Security.Permissions.KeyContainerPermission#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Permissions.KeyContainerPermission/VB/Form1.vb#3)]"
  syntax:
    content: public KeyContainerPermissionAccessEntry (System.Security.Cryptography.CspParameters parameters, System.Security.Permissions.KeyContainerPermissionFlags flags);
    parameters:
    - id: parameters
      type: System.Security.Cryptography.CspParameters
      description: A <xref href="System.Security.Cryptography.CspParameters"></xref> object that contains the cryptographic service provider (CSP) parameters.
    - id: flags
      type: System.Security.Permissions.KeyContainerPermissionFlags
      description: A bitwise combination of the <xref href="System.Security.Permissions.KeyContainerPermissionFlags"></xref> values.
  overload: System.Security.Permissions.KeyContainerPermissionAccessEntry.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: The resulting entry would have unrestricted access.
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/KeyContainerPermissionAccessEntry.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.Permissions.KeyContainerPermissionAccessEntry.#ctor(System.String,System.Security.Permissions.KeyContainerPermissionFlags)
  commentId: M:System.Security.Permissions.KeyContainerPermissionAccessEntry.#ctor(System.String,System.Security.Permissions.KeyContainerPermissionFlags)
  id: '#ctor(System.String,System.Security.Permissions.KeyContainerPermissionFlags)'
  parent: System.Security.Permissions.KeyContainerPermissionAccessEntry
  langs:
  - csharp
  name: KeyContainerPermissionAccessEntry(String, KeyContainerPermissionFlags)
  nameWithType: KeyContainerPermissionAccessEntry.KeyContainerPermissionAccessEntry(String, KeyContainerPermissionFlags)
  fullName: KeyContainerPermissionAccessEntry.KeyContainerPermissionAccessEntry(String, KeyContainerPermissionFlags)
  type: Constructor
  assemblies:
  - mscorlib
  - System.Security.Permissions
  namespace: System.Security.Permissions
  summary: Initializes a new instance of the <xref href="System.Security.Permissions.KeyContainerPermissionAccessEntry"></xref> class, using the specified key container name and access permissions.
  remarks: This constructor allows you to specify access rights for specific key containers identified by name; use an asterisk ("*") to represent all the key containers.
  example:
  - "The following code example shows the use of the <xref:System.Security.Permissions.KeyContainerPermissionAccessEntry.%23ctor%28System.String%2CSystem.Security.Permissions.KeyContainerPermissionFlags%29> constructor.  \n  \n [!code-cpp[System.Security.Permissions.KeyContainerPermission#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Permissions.KeyContainerPermission/CPP/keycontainerpermission.cpp#2)]\n [!code-csharp[System.Security.Permissions.KeyContainerPermission#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Permissions.KeyContainerPermission/CS/keycontainerpermission.cs#2)]\n [!code-vb[System.Security.Permissions.KeyContainerPermission#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Permissions.KeyContainerPermission/VB/Form1.vb#2)]"
  syntax:
    content: public KeyContainerPermissionAccessEntry (string keyContainerName, System.Security.Permissions.KeyContainerPermissionFlags flags);
    parameters:
    - id: keyContainerName
      type: System.String
      description: The name of the key container.
    - id: flags
      type: System.Security.Permissions.KeyContainerPermissionFlags
      description: A bitwise combination of the <xref href="System.Security.Permissions.KeyContainerPermissionFlags"></xref> values.
  overload: System.Security.Permissions.KeyContainerPermissionAccessEntry.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: The resulting entry would have unrestricted access.
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/KeyContainerPermissionAccessEntry.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.Permissions.KeyContainerPermissionAccessEntry.#ctor(System.String,System.String,System.Int32,System.String,System.Int32,System.Security.Permissions.KeyContainerPermissionFlags)
  commentId: M:System.Security.Permissions.KeyContainerPermissionAccessEntry.#ctor(System.String,System.String,System.Int32,System.String,System.Int32,System.Security.Permissions.KeyContainerPermissionFlags)
  id: '#ctor(System.String,System.String,System.Int32,System.String,System.Int32,System.Security.Permissions.KeyContainerPermissionFlags)'
  parent: System.Security.Permissions.KeyContainerPermissionAccessEntry
  langs:
  - csharp
  name: KeyContainerPermissionAccessEntry(String, String, Int32, String, Int32, KeyContainerPermissionFlags)
  nameWithType: KeyContainerPermissionAccessEntry.KeyContainerPermissionAccessEntry(String, String, Int32, String, Int32, KeyContainerPermissionFlags)
  fullName: KeyContainerPermissionAccessEntry.KeyContainerPermissionAccessEntry(String, String, Int32, String, Int32, KeyContainerPermissionFlags)
  type: Constructor
  assemblies:
  - mscorlib
  - System.Security.Permissions
  namespace: System.Security.Permissions
  summary: Initializes a new instance of the <xref href="System.Security.Permissions.KeyContainerPermissionAccessEntry"></xref> class with the specified property values.
  remarks: This constructor allows access rights to be assigned for specific key containers. A `keySpec` or `providerType` value of –1 represents all key specifications or provider types. A `keyStore`, `providerName`, or `keyContainerName` of "*" represents all key stores, providers, or key containers. A `providerName` or `keyContainerName` that is `null` represents all providers or key containers.
  example:
  - "The following code example shows the use of the <xref:System.Security.Permissions.KeyContainerPermissionAccessEntry.%23ctor%28System.String%2CSystem.String%2CSystem.Int32%2CSystem.String%2CSystem.Int32%2CSystem.Security.Permissions.KeyContainerPermissionFlags%29> constructor.  \n  \n [!code-cpp[System.Security.Permissions.KeyContainerPermission#4](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Security.Permissions.KeyContainerPermission/CPP/keycontainerpermission.cpp#4)]\n [!code-csharp[System.Security.Permissions.KeyContainerPermission#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Security.Permissions.KeyContainerPermission/CS/keycontainerpermission.cs#4)]\n [!code-vb[System.Security.Permissions.KeyContainerPermission#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Security.Permissions.KeyContainerPermission/VB/Form1.vb#4)]"
  syntax:
    content: public KeyContainerPermissionAccessEntry (string keyStore, string providerName, int providerType, string keyContainerName, int keySpec, System.Security.Permissions.KeyContainerPermissionFlags flags);
    parameters:
    - id: keyStore
      type: System.String
      description: The name of the key store.
    - id: providerName
      type: System.String
      description: The name of the provider.
    - id: providerType
      type: System.Int32
      description: The type code for the provider. See the <xref href="System.Security.Permissions.KeyContainerPermissionAccessEntry.ProviderType"></xref> property for values.
    - id: keyContainerName
      type: System.String
      description: The name of the key container.
    - id: keySpec
      type: System.Int32
      description: The key specification. See the <xref href="System.Security.Permissions.KeyContainerPermissionAccessEntry.KeySpec"></xref> property for values.
    - id: flags
      type: System.Security.Permissions.KeyContainerPermissionFlags
      description: A bitwise combination of the <xref href="System.Security.Permissions.KeyContainerPermissionFlags"></xref> values.
  overload: System.Security.Permissions.KeyContainerPermissionAccessEntry.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: The resulting entry would have unrestricted access.
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/KeyContainerPermissionAccessEntry.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.Permissions.KeyContainerPermissionAccessEntry.Equals(System.Object)
  commentId: M:System.Security.Permissions.KeyContainerPermissionAccessEntry.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Security.Permissions.KeyContainerPermissionAccessEntry
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: KeyContainerPermissionAccessEntry.Equals(Object)
  fullName: KeyContainerPermissionAccessEntry.Equals(Object)
  type: Method
  assemblies:
  - mscorlib
  - System.Security.Permissions
  namespace: System.Security.Permissions
  summary: Determines whether the specified <xref href="System.Security.Permissions.KeyContainerPermissionAccessEntry"></xref> object is equal to the current instance.
  remarks: The <xref:System.Security.Permissions.KeyContainerPermissionAccessEntry.Equals%2A> method compares the properties of the two <xref:System.Security.Permissions.KeyContainerPermissionAccessEntry> objects to determine if they are equal.
  syntax:
    content: public override bool Equals (object o);
    parameters:
    - id: o
      type: System.Object
      description: The <xref href="System.Security.Permissions.KeyContainerPermissionAccessEntry"></xref> object to compare with the currentinstance.
    return:
      type: System.Boolean
      description: '`true` if the specified <xref href="System.Security.Permissions.KeyContainerPermissionAccessEntry"></xref> is equal to the current <xref href="System.Security.Permissions.KeyContainerPermissionAccessEntry"></xref> object; otherwise, `false`.'
  overload: System.Security.Permissions.KeyContainerPermissionAccessEntry.Equals*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/KeyContainerPermissionAccessEntry.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.Permissions.KeyContainerPermissionAccessEntry.Flags
  commentId: P:System.Security.Permissions.KeyContainerPermissionAccessEntry.Flags
  id: Flags
  parent: System.Security.Permissions.KeyContainerPermissionAccessEntry
  langs:
  - csharp
  name: Flags
  nameWithType: KeyContainerPermissionAccessEntry.Flags
  fullName: KeyContainerPermissionAccessEntry.Flags
  type: Property
  assemblies:
  - mscorlib
  - System.Security.Permissions
  namespace: System.Security.Permissions
  summary: Gets or sets the key container permissions.
  remarks: "> [!CAUTION]\n>  Many of these flags are powerful and permit access to key containers that should only be granted to highly trusted code.  \n  \n The most powerful of the flags are <xref:System.Security.Permissions.KeyContainerPermissionFlags.Create>, <xref:System.Security.Permissions.KeyContainerPermissionFlags.Delete>, <xref:System.Security.Permissions.KeyContainerPermissionFlags.Import>, <xref:System.Security.Permissions.KeyContainerPermissionFlags.Export>, <xref:System.Security.Permissions.KeyContainerPermissionFlags.Sign>, <xref:System.Security.Permissions.KeyContainerPermissionFlags.Decrypt>, and <xref:System.Security.Permissions.KeyContainerPermissionFlags.AllFlags>. For specific threats posed by the use of these flags, see individual flag descriptions."
  syntax:
    content: public System.Security.Permissions.KeyContainerPermissionFlags Flags { get; set; }
    return:
      type: System.Security.Permissions.KeyContainerPermissionFlags
      description: A bitwise combination of the <xref href="System.Security.Permissions.KeyContainerPermissionFlags"></xref> values. The default is <xref href="System.Security.Permissions.KeyContainerPermissionFlags.NoFlags"></xref>.
  overload: System.Security.Permissions.KeyContainerPermissionAccessEntry.Flags*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/KeyContainerPermissionAccessEntry.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.Permissions.KeyContainerPermissionAccessEntry.GetHashCode
  commentId: M:System.Security.Permissions.KeyContainerPermissionAccessEntry.GetHashCode
  id: GetHashCode
  parent: System.Security.Permissions.KeyContainerPermissionAccessEntry
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: KeyContainerPermissionAccessEntry.GetHashCode()
  fullName: KeyContainerPermissionAccessEntry.GetHashCode()
  type: Method
  assemblies:
  - mscorlib
  - System.Security.Permissions
  namespace: System.Security.Permissions
  summary: Gets a hash code for the current instance that is suitable for use in hashing algorithms and data structures such as a hash table.
  remarks: Serves as a hash function for the <xref:System.Security.Permissions.KeyContainerPermissionAccessEntry>, suitable for use in hashing algorithms and data structures such as a hash table.
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: A hash code for the current <xref href="System.Security.Permissions.KeyContainerPermissionAccessEntry"></xref> object.
  overload: System.Security.Permissions.KeyContainerPermissionAccessEntry.GetHashCode*
  exceptions: []
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/KeyContainerPermissionAccessEntry.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.Permissions.KeyContainerPermissionAccessEntry.KeyContainerName
  commentId: P:System.Security.Permissions.KeyContainerPermissionAccessEntry.KeyContainerName
  id: KeyContainerName
  parent: System.Security.Permissions.KeyContainerPermissionAccessEntry
  langs:
  - csharp
  name: KeyContainerName
  nameWithType: KeyContainerPermissionAccessEntry.KeyContainerName
  fullName: KeyContainerPermissionAccessEntry.KeyContainerName
  type: Property
  assemblies:
  - mscorlib
  - System.Security.Permissions
  namespace: System.Security.Permissions
  summary: Gets or sets the key container name.
  remarks: Use a value of "*" to apply the access entry to all key containers within the specified provider name and provider type.
  syntax:
    content: public string KeyContainerName { get; set; }
    return:
      type: System.String
      description: The name of the key container.
  overload: System.Security.Permissions.KeyContainerPermissionAccessEntry.KeyContainerName*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: The resulting entry would have unrestricted access.
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/KeyContainerPermissionAccessEntry.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.Permissions.KeyContainerPermissionAccessEntry.KeySpec
  commentId: P:System.Security.Permissions.KeyContainerPermissionAccessEntry.KeySpec
  id: KeySpec
  parent: System.Security.Permissions.KeyContainerPermissionAccessEntry
  langs:
  - csharp
  name: KeySpec
  nameWithType: KeyContainerPermissionAccessEntry.KeySpec
  fullName: KeyContainerPermissionAccessEntry.KeySpec
  type: Property
  assemblies:
  - mscorlib
  - System.Security.Permissions
  namespace: System.Security.Permissions
  summary: Gets or sets the key specification.
  remarks: Valid values for this property are AT_KEYEXCHANGE (1) and AT_SIGNATURE (2). The default value is –1, representing all possible values.
  syntax:
    content: public int KeySpec { get; set; }
    return:
      type: System.Int32
      description: One of the AT_ values defined in the Wincrypt.h header file.
  overload: System.Security.Permissions.KeyContainerPermissionAccessEntry.KeySpec*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: The resulting entry would have unrestricted access.
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/KeyContainerPermissionAccessEntry.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.Permissions.KeyContainerPermissionAccessEntry.KeyStore
  commentId: P:System.Security.Permissions.KeyContainerPermissionAccessEntry.KeyStore
  id: KeyStore
  parent: System.Security.Permissions.KeyContainerPermissionAccessEntry
  langs:
  - csharp
  name: KeyStore
  nameWithType: KeyContainerPermissionAccessEntry.KeyStore
  fullName: KeyContainerPermissionAccessEntry.KeyStore
  type: Property
  assemblies:
  - mscorlib
  - System.Security.Permissions
  namespace: System.Security.Permissions
  summary: Gets or sets the name of the key store.
  remarks: Valid values are "User", "Machine", or "*". If `null` is specified, the value is set to "\*".
  syntax:
    content: public string KeyStore { get; set; }
    return:
      type: System.String
      description: The name of the key store.
  overload: System.Security.Permissions.KeyContainerPermissionAccessEntry.KeyStore*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: The resulting entry would have unrestricted access.
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/KeyContainerPermissionAccessEntry.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.Permissions.KeyContainerPermissionAccessEntry.ProviderName
  commentId: P:System.Security.Permissions.KeyContainerPermissionAccessEntry.ProviderName
  id: ProviderName
  parent: System.Security.Permissions.KeyContainerPermissionAccessEntry
  langs:
  - csharp
  name: ProviderName
  nameWithType: KeyContainerPermissionAccessEntry.ProviderName
  fullName: KeyContainerPermissionAccessEntry.ProviderName
  type: Property
  assemblies:
  - mscorlib
  - System.Security.Permissions
  namespace: System.Security.Permissions
  summary: Gets or sets the provider name.
  remarks: An example of a provider name is "Microsoft Enhanced Cryptographic Provider". If `null` is specified, the enhanced cryptographic provider name is used.
  syntax:
    content: public string ProviderName { get; set; }
    return:
      type: System.String
      description: The name of the provider.
  overload: System.Security.Permissions.KeyContainerPermissionAccessEntry.ProviderName*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: The resulting entry would have unrestricted access.
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/KeyContainerPermissionAccessEntry.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Security.Permissions.KeyContainerPermissionAccessEntry.ProviderType
  commentId: P:System.Security.Permissions.KeyContainerPermissionAccessEntry.ProviderType
  id: ProviderType
  parent: System.Security.Permissions.KeyContainerPermissionAccessEntry
  langs:
  - csharp
  name: ProviderType
  nameWithType: KeyContainerPermissionAccessEntry.ProviderType
  fullName: KeyContainerPermissionAccessEntry.ProviderType
  type: Property
  assemblies:
  - mscorlib
  - System.Security.Permissions
  namespace: System.Security.Permissions
  summary: Gets or sets the provider type.
  remarks: "The default value is –1, representing all possible values.  \n  \n The Wincrypt.h header file defines the following values:  \n  \n-   \\#define PROV_RSA_FULL 1  \n  \n-   \\#define PROV_RSA_SIG 2  \n  \n-   \\#define PROV_DSS 3  \n  \n-   \\#define PROV_FORTEZZA 4  \n  \n-   \\#define PROV_MS_EXCHANGE 5  \n  \n-   \\#define PROV_SSL 6  \n  \n-   \\#define PROV_RSA_SCHANNEL 12  \n  \n-   \\#define PROV_DSS_DH 13  \n  \n-   \\#define PROV_EC_ECDSA_SIG 14  \n  \n-   \\#define PROV_EC_ECNRA_SIG 15  \n  \n-   \\#define PROV_EC_ECDSA_FULL 16  \n  \n-   \\#define PROV_EC_ECNRA_FULL 17  \n  \n-   \\#define PROV_DH_SCHANNEL 18  \n  \n-   \\#define PROV_SPYRUS_LYNKS 20  \n  \n-   \\#define PROV_RNG 21  \n  \n-   \\#define PROV_INTEL_SEC 22  \n  \n-   \\#define PROV_REPLACE_OWF 23  \n  \n-   \\#define PROV_RSA_AES 24"
  syntax:
    content: public int ProviderType { get; set; }
    return:
      type: System.Int32
      description: One of the PROV_ values defined in the Wincrypt.h header file.
  overload: System.Security.Permissions.KeyContainerPermissionAccessEntry.ProviderType*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: The resulting entry would have unrestricted access.
  version:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/KeyContainerPermissionAccessEntry.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
references:
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.ArgumentException
  parent: System
  isExternal: false
  name: ArgumentException
  nameWithType: ArgumentException
  fullName: System.ArgumentException
- uid: System.Security.Permissions.KeyContainerPermissionAccessEntry.#ctor(System.Security.Cryptography.CspParameters,System.Security.Permissions.KeyContainerPermissionFlags)
  parent: System.Security.Permissions.KeyContainerPermissionAccessEntry
  isExternal: false
  name: KeyContainerPermissionAccessEntry(CspParameters, KeyContainerPermissionFlags)
  nameWithType: KeyContainerPermissionAccessEntry.KeyContainerPermissionAccessEntry(CspParameters, KeyContainerPermissionFlags)
  fullName: KeyContainerPermissionAccessEntry.KeyContainerPermissionAccessEntry(CspParameters, KeyContainerPermissionFlags)
- uid: System.Security.Cryptography.CspParameters
  parent: System.Security.Cryptography
  isExternal: false
  name: CspParameters
  nameWithType: CspParameters
  fullName: System.Security.Cryptography.CspParameters
- uid: System.Security.Permissions.KeyContainerPermissionFlags
  parent: System.Security.Permissions
  isExternal: false
  name: KeyContainerPermissionFlags
  nameWithType: KeyContainerPermissionFlags
  fullName: System.Security.Permissions.KeyContainerPermissionFlags
- uid: System.Security.Permissions.KeyContainerPermissionAccessEntry.#ctor(System.String,System.Security.Permissions.KeyContainerPermissionFlags)
  parent: System.Security.Permissions.KeyContainerPermissionAccessEntry
  isExternal: false
  name: KeyContainerPermissionAccessEntry(String, KeyContainerPermissionFlags)
  nameWithType: KeyContainerPermissionAccessEntry.KeyContainerPermissionAccessEntry(String, KeyContainerPermissionFlags)
  fullName: KeyContainerPermissionAccessEntry.KeyContainerPermissionAccessEntry(String, KeyContainerPermissionFlags)
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.Permissions.KeyContainerPermissionAccessEntry.#ctor(System.String,System.String,System.Int32,System.String,System.Int32,System.Security.Permissions.KeyContainerPermissionFlags)
  parent: System.Security.Permissions.KeyContainerPermissionAccessEntry
  isExternal: false
  name: KeyContainerPermissionAccessEntry(String, String, Int32, String, Int32, KeyContainerPermissionFlags)
  nameWithType: KeyContainerPermissionAccessEntry.KeyContainerPermissionAccessEntry(String, String, Int32, String, Int32, KeyContainerPermissionFlags)
  fullName: KeyContainerPermissionAccessEntry.KeyContainerPermissionAccessEntry(String, String, Int32, String, Int32, KeyContainerPermissionFlags)
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Security.Permissions.KeyContainerPermissionAccessEntry.Equals(System.Object)
  parent: System.Security.Permissions.KeyContainerPermissionAccessEntry
  isExternal: false
  name: Equals(Object)
  nameWithType: KeyContainerPermissionAccessEntry.Equals(Object)
  fullName: KeyContainerPermissionAccessEntry.Equals(Object)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Security.Permissions.KeyContainerPermissionAccessEntry.Flags
  parent: System.Security.Permissions.KeyContainerPermissionAccessEntry
  isExternal: false
  name: Flags
  nameWithType: KeyContainerPermissionAccessEntry.Flags
  fullName: KeyContainerPermissionAccessEntry.Flags
- uid: System.Security.Permissions.KeyContainerPermissionAccessEntry.GetHashCode
  parent: System.Security.Permissions.KeyContainerPermissionAccessEntry
  isExternal: false
  name: GetHashCode()
  nameWithType: KeyContainerPermissionAccessEntry.GetHashCode()
  fullName: KeyContainerPermissionAccessEntry.GetHashCode()
- uid: System.Security.Permissions.KeyContainerPermissionAccessEntry.KeyContainerName
  parent: System.Security.Permissions.KeyContainerPermissionAccessEntry
  isExternal: false
  name: KeyContainerName
  nameWithType: KeyContainerPermissionAccessEntry.KeyContainerName
  fullName: KeyContainerPermissionAccessEntry.KeyContainerName
- uid: System.Security.Permissions.KeyContainerPermissionAccessEntry.KeySpec
  parent: System.Security.Permissions.KeyContainerPermissionAccessEntry
  isExternal: false
  name: KeySpec
  nameWithType: KeyContainerPermissionAccessEntry.KeySpec
  fullName: KeyContainerPermissionAccessEntry.KeySpec
- uid: System.Security.Permissions.KeyContainerPermissionAccessEntry.KeyStore
  parent: System.Security.Permissions.KeyContainerPermissionAccessEntry
  isExternal: false
  name: KeyStore
  nameWithType: KeyContainerPermissionAccessEntry.KeyStore
  fullName: KeyContainerPermissionAccessEntry.KeyStore
- uid: System.Security.Permissions.KeyContainerPermissionAccessEntry.ProviderName
  parent: System.Security.Permissions.KeyContainerPermissionAccessEntry
  isExternal: false
  name: ProviderName
  nameWithType: KeyContainerPermissionAccessEntry.ProviderName
  fullName: KeyContainerPermissionAccessEntry.ProviderName
- uid: System.Security.Permissions.KeyContainerPermissionAccessEntry.ProviderType
  parent: System.Security.Permissions.KeyContainerPermissionAccessEntry
  isExternal: false
  name: ProviderType
  nameWithType: KeyContainerPermissionAccessEntry.ProviderType
  fullName: KeyContainerPermissionAccessEntry.ProviderType
- uid: System.Security.Permissions.KeyContainerPermissionAccessEntry.#ctor*
  parent: System.Security.Permissions.KeyContainerPermissionAccessEntry
  isExternal: false
  name: KeyContainerPermissionAccessEntry
  nameWithType: KeyContainerPermissionAccessEntry.KeyContainerPermissionAccessEntry
  fullName: KeyContainerPermissionAccessEntry.KeyContainerPermissionAccessEntry
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/KeyContainerPermissionAccessEntry.xml
- uid: System.Security.Permissions.KeyContainerPermissionAccessEntry.Equals*
  parent: System.Security.Permissions.KeyContainerPermissionAccessEntry
  isExternal: false
  name: Equals
  nameWithType: KeyContainerPermissionAccessEntry.Equals
  fullName: KeyContainerPermissionAccessEntry.Equals
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/KeyContainerPermissionAccessEntry.xml
- uid: System.Security.Permissions.KeyContainerPermissionAccessEntry.Flags*
  parent: System.Security.Permissions.KeyContainerPermissionAccessEntry
  isExternal: false
  name: Flags
  nameWithType: KeyContainerPermissionAccessEntry.Flags
  fullName: KeyContainerPermissionAccessEntry.Flags
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/KeyContainerPermissionAccessEntry.xml
- uid: System.Security.Permissions.KeyContainerPermissionAccessEntry.GetHashCode*
  parent: System.Security.Permissions.KeyContainerPermissionAccessEntry
  isExternal: false
  name: GetHashCode
  nameWithType: KeyContainerPermissionAccessEntry.GetHashCode
  fullName: KeyContainerPermissionAccessEntry.GetHashCode
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/KeyContainerPermissionAccessEntry.xml
- uid: System.Security.Permissions.KeyContainerPermissionAccessEntry.KeyContainerName*
  parent: System.Security.Permissions.KeyContainerPermissionAccessEntry
  isExternal: false
  name: KeyContainerName
  nameWithType: KeyContainerPermissionAccessEntry.KeyContainerName
  fullName: KeyContainerPermissionAccessEntry.KeyContainerName
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/KeyContainerPermissionAccessEntry.xml
- uid: System.Security.Permissions.KeyContainerPermissionAccessEntry.KeySpec*
  parent: System.Security.Permissions.KeyContainerPermissionAccessEntry
  isExternal: false
  name: KeySpec
  nameWithType: KeyContainerPermissionAccessEntry.KeySpec
  fullName: KeyContainerPermissionAccessEntry.KeySpec
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/KeyContainerPermissionAccessEntry.xml
- uid: System.Security.Permissions.KeyContainerPermissionAccessEntry.KeyStore*
  parent: System.Security.Permissions.KeyContainerPermissionAccessEntry
  isExternal: false
  name: KeyStore
  nameWithType: KeyContainerPermissionAccessEntry.KeyStore
  fullName: KeyContainerPermissionAccessEntry.KeyStore
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/KeyContainerPermissionAccessEntry.xml
- uid: System.Security.Permissions.KeyContainerPermissionAccessEntry.ProviderName*
  parent: System.Security.Permissions.KeyContainerPermissionAccessEntry
  isExternal: false
  name: ProviderName
  nameWithType: KeyContainerPermissionAccessEntry.ProviderName
  fullName: KeyContainerPermissionAccessEntry.ProviderName
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/KeyContainerPermissionAccessEntry.xml
- uid: System.Security.Permissions.KeyContainerPermissionAccessEntry.ProviderType*
  parent: System.Security.Permissions.KeyContainerPermissionAccessEntry
  isExternal: false
  name: ProviderType
  nameWithType: KeyContainerPermissionAccessEntry.ProviderType
  fullName: KeyContainerPermissionAccessEntry.ProviderType
  monikers:
  - netcore-2.0
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/KeyContainerPermissionAccessEntry.xml
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: Object.Equals(Object, Object)
- uid: System.Object.GetType
  parent: System.Object
  isExternal: false
  name: GetType()
  nameWithType: Object.GetType()
  fullName: Object.GetType()
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: false
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: Object.MemberwiseClone()
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: Object.ReferenceEquals(Object, Object)
- uid: System.Object.ToString
  parent: System.Object
  isExternal: false
  name: ToString()
  nameWithType: Object.ToString()
  fullName: Object.ToString()
