<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">182c62cf808e1cc7c6c424d59b18e3b8b40e379b</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">System.ServiceModel.Channels.Message.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">785d12b483c7b678286a4dc78f9d44029ed0b23d</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c0e4a05fe6be7d78605d69f1dc1937bd3647ccce</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Represents the unit of communication between endpoints in a distributed environment.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Channels.Message&gt;</ph> class provides a means of communicating arbitrary information between a sender and a receiver on a network.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>It can be used to relay information, suggest or demand a course of action, or request data.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>The structure of a <ph id="ph1">&lt;xref:System.ServiceModel.Channels.Message&gt;</ph> object represents a SOAP envelope.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>It consists of two distinct parts: the message's body and an optional collection of headers, represented by the <ph id="ph1">&lt;xref:System.ServiceModel.Channels.Message.Headers%2A&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>The message content is application-defined data sent from a sender to a receiver.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>The message headers enable system and application extensibility to meet the changing requirements, because you can define code to manipulate and respond to specific headers.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can also define your own headers.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>Message headers are serialized or deserialized along with the contents of the message.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>Messages are received and sent in particular formats.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>Support is provided for two formats: the standard text-based XML format and a binary-based XML format.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Channels.Message&gt;</ph> object can be used to represent both SOAP 1.1 and SOAP 1.2 envelopes.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>Note that an instance of <ph id="ph1">&lt;xref:System.ServiceModel.Channels.Message&gt;</ph> is fixed upon creation and is bound to a specific SOAP version.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Channels.Message.Version%2A&gt;</ph> property represents the SOAP version of the message.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>A <ph id="ph1">&lt;xref:System.ServiceModel.Channels.Message&gt;</ph> object can be serialized to an external store by using the <ph id="ph2">&lt;xref:System.ServiceModel.Channels.Message.WriteMessage%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>Properties of the message can also be serialized, but they have to be individually identified and serialized separately.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>Deserializing a message to create an in-memory <ph id="ph1">&lt;xref:System.ServiceModel.Channels.Message&gt;</ph> object can be done using <ph id="ph2">&lt;xref:System.ServiceModel.Channels.Message.CreateMessage%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>Properties must also be deserialized individually and manually added to the property collection for the specific <ph id="ph1">&lt;xref:System.ServiceModel.Channels.Message&gt;</ph> instance.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>The size of a <ph id="ph1">&lt;xref:System.ServiceModel.Channels.Message&gt;</ph> object is fixed to the size of data it is transmitting.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source>Every body is modeled as an instance of <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>, with no predefined limit on the size of the stream that the <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph> instance is wrapping.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, specific channel providers can have a limit on the size of messages that they process.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source>A <ph id="ph1">&lt;xref:System.ServiceModel.Channels.Message&gt;</ph> can be annotated with useful information generated by an entity that has examined and processed the message.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT">
          <source>This functionality is provided by the <ph id="ph1">&lt;xref:System.ServiceModel.Channels.Message.Headers%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.ServiceModel.Channels.Message.Properties%2A&gt;</ph> properties.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Channels.Message.Headers%2A&gt;</ph> collection represents the set of SOAP headers on the message.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Channels.Message.Properties%2A&gt;</ph> property represents the set of processing-level annotations on the message.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because information in headers is transmitted on the wire, an entity that examines a header must support the underlying version(s) of the protocols used by the header.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, properties provide a more version-independent way of annotating a message.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT">
          <source>To create a <ph id="ph1">&lt;xref:System.ServiceModel.Channels.Message&gt;</ph> instance, use one of the <ph id="ph2">&lt;xref:System.ServiceModel.Channels.Message.CreateMessage%2A&gt;</ph> methods.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT">
          <source>It is recommended that a consumer of a message always call <ph id="ph1">&lt;xref:System.ServiceModel.Channels.Message.Close%2A&gt;</ph> when the consumer is finished accessing the contents of the message.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT">
          <source>This action frees finite system resources (for example, sockets, named pipes) that are tied to the lifetime of the message.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT">
          <source>Special note for Managed C++ users deriving from this class:</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT">
          <source>Put your cleanup code in (On)(Begin)Close (and/or OnAbort), not in a destructor.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT">
          <source>Avoid destructors: they cause the compiler to auto-generate <ph id="ph1">&lt;xref:System.IDisposable&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT">
          <source>Avoid non-reference members: they can cause the compiler to auto-generate <ph id="ph1">&lt;xref:System.IDisposable&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT">
          <source>Avoid finalizers; but if you include one, suppress the build warning and call <ph id="ph1">&lt;xref:System.GC.SuppressFinalize%28System.Object%29&gt;</ph> and the finalizer itself from (On)(Begin)Close (and/or OnAbort) to emulate what would have been the auto-generated <ph id="ph2">&lt;xref:System.IDisposable&gt;</ph> behavior.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.ServiceModel.Channels.Message"&gt;&lt;/xref&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>Starts the asynchronous writing of the contents of the message body.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>The writer used to serialize the message body.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>The delegate method that receives the notification when the operation completed.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>The user-defined object that represents the state of the operation.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.IAsyncResult"&gt;&lt;/xref&gt;</ph> object that represents the result of the asynchronous operation.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Starts the asynchronous writing of the entire message.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>The writer used to serialize the entire message.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>The delegate method that receives the notification when the operation completed.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>The user-defined object that represents the state of the operation.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.IAsyncResult"&gt;&lt;/xref&gt;</ph> object that represents the result of the asynchronous operation.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Closes the <ph id="ph1">&lt;xref href="System.ServiceModel.Channels.Message"&gt;&lt;/xref&gt;</ph> and releases any resources.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Channels.Message&gt;</ph> does have a finalizer, which causes <ph id="ph2">&lt;xref:System.ServiceModel.Channels.Message.Close%2A&gt;</ph> to be called for you when the message is garbage-collected.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is non-optimal, as the .NET Framework's Garbage Collection (GC) mechanism does not necessarily run when you run out of system resources other than memory.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT">
          <source>For this reason, you should always call this method when finished with the contents of the message.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Channels.Message.Close%2A&gt;</ph> method is a synonym for <ph id="ph2">&lt;xref:System.IDisposable.Dispose%2A&gt;</ph> (which <ph id="ph3">&lt;xref:System.ServiceModel.Channels.Message&gt;</ph> also implements).</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT">
          <source>The message also disposes the object that was used to construct the body when it is disposed.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT">
          <source>An <ph id="ph1">&lt;xref:System.ObjectDisposedException&gt;</ph> is thrown if you call any method or access any properties of the message once it is closed.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT">
          <source>Calling any method or accessing any properties of other objects related to the message once it is closed, (such as message header collection, message property values, or <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> instances returned for the body or for a header) has undefined behavior.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Stores an entire <ph id="ph1">&lt;xref href="System.ServiceModel.Channels.Message"&gt;&lt;/xref&gt;</ph> into a memory buffer for future access.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT">
          <source>The body of a <ph id="ph1">&lt;xref:System.ServiceModel.Channels.Message&gt;</ph> instance can only be accessed or written once.</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you want to access a <ph id="ph1">&lt;xref:System.ServiceModel.Channels.Message&gt;</ph> instance more than once, you should use the <ph id="ph2">&lt;xref:System.ServiceModel.Channels.MessageBuffer&gt;</ph> class to completely store an entire <ph id="ph3">&lt;xref:System.ServiceModel.Channels.Message&gt;</ph> instance into memory.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT">
          <source>A <ph id="ph1">&lt;xref:System.ServiceModel.Channels.MessageBuffer&gt;</ph> instance is constructed by calling <ph id="ph2">&lt;xref:System.ServiceModel.Channels.Message.CreateBufferedCopy%2A&gt;</ph> of a <ph id="ph3">&lt;xref:System.ServiceModel.Channels.Message&gt;</ph> instance.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">&lt;xref:System.ServiceModel.Channels.Message.Version%2A&gt;</ph> is equal to <ph id="ph2">&lt;xref:System.ServiceModel.Channels.MessageVersion.None%2A&gt;</ph>, this method only stores the body of the message, not the entire message into the memory buffer.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>The maximum size of the buffer to be created.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>A newly created <ph id="ph1">&lt;xref href="System.ServiceModel.Channels.MessageBuffer"&gt;&lt;/xref&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;maxBufferSize&lt;/code&gt;</ph> is smaller than zero.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>The message is closed.</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>The message has been copied, read or written.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>Creates a message that contains a SOAP fault, a reason and the detail for the fault, a version and an action.</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT">
          <source>This static method is used to create a new copy of message ready for sending.</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.ServiceModel.Channels.MessageVersion"&gt;&lt;/xref&gt;</ph> object that specifies the SOAP version to use for the message.</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>The reason of the SOAP fault.</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>The details of the SOAP fault.</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>A description of how the message should be processed.</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.ServiceModel.Channels.Message"&gt;&lt;/xref&gt;</ph> object for the message created.</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;version&lt;/code&gt;</ph>, <ph id="ph2">&lt;code&gt;fault&lt;/code&gt;</ph>, <ph id="ph3">&lt;code&gt;action&lt;/code&gt;</ph>, <ph id="ph4">&lt;code&gt;detail&lt;/code&gt;</ph> or <ph id="ph5">&lt;code&gt;faultCode&lt;/code&gt;</ph> is <ph id="ph6">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>Creates a message using the specified version, action, message body and serializer.</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT">
          <source>This static method is used to create a new copy of message ready for sending.</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT">
          <source>When working with JSON messages use the <ph id="ph1">&lt;xref:System.ServiceModel.Channels.Message.CreateMessage%28System.ServiceModel.Channels.MessageVersion%2CSystem.String%2CSystem.Object%2CSystem.Runtime.Serialization.XmlObjectSerializer%29&gt;</ph> method, the <ph id="ph2">&lt;xref:System.ServiceModel.Channels.Message.CreateMessage%28System.ServiceModel.Channels.MessageVersion%2CSystem.String%2CSystem.Object%29&gt;</ph> method does not work with JSON messages.</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.ServiceModel.Channels.MessageVersion"&gt;&lt;/xref&gt;</ph> object that specifies the SOAP version to use for the message.</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>A description of how the message should be processed.</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>The body of the message.</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Runtime.Serialization.XmlObjectSerializer"&gt;&lt;/xref&gt;</ph> object used to serialize the message.</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.ServiceModel.Channels.Message"&gt;&lt;/xref&gt;</ph> object for the message created.</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;version&lt;/code&gt;</ph>, <ph id="ph2">&lt;code&gt;fault&lt;/code&gt;</ph> or <ph id="ph3">&lt;code&gt;action&lt;/code&gt;</ph> is <ph id="ph4">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>Creates a message that contains a SOAP fault, the reason for the fault, a version and an action.</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT">
          <source>This static method is used to create a new copy of message ready for sending.</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.ServiceModel.Channels.MessageVersion"&gt;&lt;/xref&gt;</ph> object that specifies the SOAP version to use for the message.</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>The reason of the SOAP fault.</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>A description of how the message should be processed.</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.ServiceModel.Channels.Message"&gt;&lt;/xref&gt;</ph> object for the message created.</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;version&lt;/code&gt;</ph>, <ph id="ph2">&lt;code&gt;fault&lt;/code&gt;</ph>, <ph id="ph3">&lt;code&gt;action&lt;/code&gt;</ph> or <ph id="ph4">&lt;code&gt;faultCode&lt;/code&gt;</ph> is <ph id="ph5">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>Creates a message using the specified reader, action and version.</source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.ServiceModel.Channels.Message&gt;</ph> takes ownership of <ph id="ph2">`envelopeReader.`</ph></source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method reads the envelope, buffers all the headers into the header collection, and reads up to but not including the <ph id="ph1">`Body`</ph> start tag, and returns the message.</source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the method call throws an exception, it closes the reader.</source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT">
          <source>The body of the returned message can then be either read or written.</source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT">
          <source>The message body can be read using the <ph id="ph1">&lt;xref:System.ServiceModel.Channels.Message.GetBody%2A&gt;</ph> methods on the returned message.</source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT">
          <source>The returned object encapsulates all the child elements within the <ph id="ph1">`Body`</ph> element.</source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT">
          <source>The message body can be written using <ph id="ph1">&lt;xref:System.ServiceModel.Channels.Message.WriteBody%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.ServiceModel.Channels.Message.WriteMessage%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT">
          <source>Once written, it cannot be read.</source>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT">
          <source>Closing the message closes the underlying envelope reader.</source>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Xml.XmlDictionaryReader"&gt;&lt;/xref&gt;</ph> object to be used for reading the SOAP message.</source>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>The maximum size in bytes of a header.</source>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>A valid <ph id="ph1">&lt;xref href="System.ServiceModel.Channels.MessageVersion"&gt;&lt;/xref&gt;</ph> value that specifies the SOAP version to use for the message.</source>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.ServiceModel.Channels.Message"&gt;&lt;/xref&gt;</ph> object for the message created.</source>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;envelopeReader&lt;/code&gt;</ph> or <ph id="ph2">&lt;code&gt;version&lt;/code&gt;</ph> is <ph id="ph3">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>Creates a message using the specified reader, action and version.</source>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT">
          <source>This static method is used to create a new copy of message ready for sending.</source>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.ServiceModel.Channels.MessageVersion"&gt;&lt;/xref&gt;</ph> object that specifies the SOAP version to use for the message.</source>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>A description of how the message should be processed.</source>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Xml.XmlReader"&gt;&lt;/xref&gt;</ph> object to be used for reading the SOAP message.</source>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.ServiceModel.Channels.Message"&gt;&lt;/xref&gt;</ph> object for the message created.</source>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;version&lt;/code&gt;</ph>, <ph id="ph2">&lt;code&gt;action&lt;/code&gt;</ph> or <ph id="ph3">&lt;code&gt;body&lt;/code&gt;</ph> is <ph id="ph4">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve">
          <source>Creates a message using the specified reader, action and version.</source>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.ServiceModel.Channels.Message&gt;</ph> takes ownership of <ph id="ph2">`envelopeReader.`</ph></source>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method reads the envelope, buffers all the headers into the header collection, and reads up to but not including the <ph id="ph1">`Body`</ph> start tag, and returns the message.</source>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the method call throws an exception, it closes the reader.</source>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT">
          <source>The body of the returned message can then be either read or written.</source>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT">
          <source>The message body can be read using the <ph id="ph1">&lt;xref:System.ServiceModel.Channels.Message.GetBody%2A&gt;</ph> methods on the returned message.</source>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT">
          <source>The returned object encapsulates all the child elements within the <ph id="ph1">`Body`</ph> element.</source>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT">
          <source>The message body can be written using <ph id="ph1">&lt;xref:System.ServiceModel.Channels.Message.WriteBody%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.ServiceModel.Channels.Message.WriteMessage%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT">
          <source>Once written, it cannot be read.</source>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT">
          <source>Closing the message closes the underlying envelope reader.</source>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Xml.XmlReader"&gt;&lt;/xref&gt;</ph> object to be used for reading the SOAP message.</source>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve">
          <source>The maximum size in bytes of a header.</source>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.ServiceModel.Channels.MessageVersion"&gt;&lt;/xref&gt;</ph> object that specifies the SOAP version to use for the message.</source>
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.ServiceModel.Channels.Message"&gt;&lt;/xref&gt;</ph> object for the message created.</source>
        </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;envelopeReader&lt;/code&gt;</ph> or <ph id="ph2">&lt;code&gt;version&lt;/code&gt;</ph> is <ph id="ph3">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve">
          <source>Creates a message with a body that consists of an array of bytes.</source>
        </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT">
          <source>An empty message is useful for an endpoint to send an alert to another endpoint without any actual content.</source>
        </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.ServiceModel.Channels.MessageVersion"&gt;&lt;/xref&gt;</ph> object that specifies the SOAP version to use for the message.</source>
        </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve">
          <source>A description of how the message should be processed.</source>
        </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.ServiceModel.Channels.BodyWriter"&gt;&lt;/xref&gt;</ph> of type byte.</source>
        </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.ServiceModel.Channels.Message"&gt;&lt;/xref&gt;</ph> object for the message created.</source>
        </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;Version&lt;/code&gt;</ph>, <ph id="ph2">&lt;code&gt;action&lt;/code&gt;</ph> or <ph id="ph3">&lt;code&gt;body&lt;/code&gt;</ph> is <ph id="ph4">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve">
          <source>Creates a message with the specified version, action and body.</source>
        </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT">
          <source>This static method is used to create a new copy of message ready for sending.</source>
        </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT">
          <source>When working with JSON messages use the <ph id="ph1">&lt;xref:System.ServiceModel.Channels.Message.CreateMessage%28System.ServiceModel.Channels.MessageVersion%2CSystem.String%2CSystem.Object%2CSystem.Runtime.Serialization.XmlObjectSerializer%29&gt;</ph> method, the <ph id="ph2">&lt;xref:System.ServiceModel.Channels.Message.CreateMessage%28System.ServiceModel.Channels.MessageVersion%2CSystem.String%2CSystem.Object%29&gt;</ph> method does not work with JSON messages.</source>
        </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.ServiceModel.Channels.MessageVersion"&gt;&lt;/xref&gt;</ph> object that specifies the SOAP version to use for the message.</source>
        </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve">
          <source>A description of how the message should be processed.</source>
        </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>The body of the message.</source>
        </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.ServiceModel.Channels.Message"&gt;&lt;/xref&gt;</ph> object for the message created.</source>
        </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;version&lt;/code&gt;</ph>, <ph id="ph2">&lt;code&gt;action&lt;/code&gt;</ph> or <ph id="ph3">&lt;code&gt;body&lt;/code&gt;</ph> is <ph id="ph4">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve">
          <source>Creates a message that contains a SOAP fault, a version and an action.</source>
        </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT">
          <source>This static method is used to create a new copy of message ready for sending.</source>
        </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.ServiceModel.Channels.MessageVersion"&gt;&lt;/xref&gt;</ph> object that specifies the SOAP version to use for the message.</source>
        </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.ServiceModel.Channels.MessageFault"&gt;&lt;/xref&gt;</ph> object that represents a SOAP fault.</source>
        </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve">
          <source>A description of how the message should be processed.</source>
        </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.ServiceModel.Channels.Message"&gt;&lt;/xref&gt;</ph> object for the message created.</source>
        </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;Version&lt;/code&gt;</ph>, <ph id="ph2">&lt;code&gt;fault&lt;/code&gt;</ph> or <ph id="ph3">&lt;code&gt;action&lt;/code&gt;</ph> is <ph id="ph4">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve">
          <source>Creates a message that contains a version and an action.</source>
        </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT">
          <source>This static method is used to create a new copy of message ready for sending.</source>
        </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.ServiceModel.Channels.MessageVersion"&gt;&lt;/xref&gt;</ph> object that specifies the SOAP version to use for the message.</source>
        </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve">
          <source>A description of how the message should be processed.</source>
        </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.ServiceModel.Channels.Message"&gt;&lt;/xref&gt;</ph> object for the message created.</source>
        </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;version&lt;/code&gt;</ph> or <ph id="ph2">&lt;code&gt;action&lt;/code&gt;</ph> is <ph id="ph3">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve">
          <source>Creates a message with the specified version, action and body.</source>
        </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT">
          <source>This static method is used to create a new copy of message ready for sending.</source>
        </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.ServiceModel.Channels.MessageVersion"&gt;&lt;/xref&gt;</ph> object that specifies the SOAP version to use for the message.</source>
        </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve">
          <source>A description of how the message should be processed.</source>
        </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve">
          <source>The body of the message.</source>
        </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.ServiceModel.Channels.Message"&gt;&lt;/xref&gt;</ph> object for the message created.</source>
        </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;version&lt;/code&gt;</ph>, <ph id="ph2">&lt;code&gt;action&lt;/code&gt;</ph> or <ph id="ph3">&lt;code&gt;body&lt;/code&gt;</ph> is <ph id="ph4">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve">
          <source>Ends the asynchronous writing of the contents of the message body.</source>
        </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.IAsyncResult"&gt;&lt;/xref&gt;</ph> object that represents the result of the asynchronous operation.</source>
        </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve">
          <source>Ends the asynchronous writing of the entire message.</source>
        </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.IAsyncResult"&gt;&lt;/xref&gt;</ph> object that represents the result of the asynchronous operation.</source>
        </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve">
          <source>Retrieves the body of this <ph id="ph1">&lt;xref href="System.ServiceModel.Channels.Message"&gt;&lt;/xref&gt;</ph> instance.</source>
        </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT">
          <source>A <ph id="ph1">&lt;xref:System.ServiceModel.Channels.Message&gt;</ph> instance has a body that corresponds to the SOAP body.</source>
        </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT">
          <source>It can be accessed as an <ph id="ph1">&lt;xref:System.Xml.XmlDictionaryReader&gt;</ph> by calling <ph id="ph2">&lt;xref:System.ServiceModel.Channels.Message.GetReaderAtBodyContents%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT">
          <source>It is initially positioned directly after the <ph id="ph1">`&lt;S:Body&gt;`</ph> element, and it returns <ph id="ph2">`EOF`</ph> on reaching the <ph id="ph3">`&lt;/S:Body&gt;`</ph> element.</source>
        </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT">
          <source>Alternatively, if you expect the body to contain a serialized object, you can call <ph id="ph1">&lt;xref:System.ServiceModel.Channels.Message.GetBody%2A&gt;</ph> instead.</source>
        </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT">
          <source>You should be aware that a message body can only be accessed once and a message can only be written once.</source>
        </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you want to access the <ph id="ph1">`Body`</ph> multiple times, use <ph id="ph2">&lt;xref:System.ServiceModel.Channels.Message.CreateBufferedCopy%2A&gt;</ph> to create a <ph id="ph3">&lt;xref:System.ServiceModel.Channels.MessageBuffer&gt;</ph> instance.</source>
        </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the <ph id="ph1">&lt;xref:System.ServiceModel.Channels.Message.GetBody%60%601%28System.Runtime.Serialization.XmlObjectSerializer%29&gt;</ph> overload when working with JSON messages; the <ph id="ph2">&lt;xref:System.ServiceModel.Channels.Message.GetBody%60%601&gt;</ph> overload does not work.</source>
        </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve">
          <source>The body of the message.</source>
        </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve">
          <source>An object of type <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">T</ph><ept id="p1">&lt;/code&gt;</ept> that contains the body of this message.</source>
        </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve">
          <source>Retrieves the body of this <ph id="ph1">&lt;xref href="System.ServiceModel.Channels.Message"&gt;&lt;/xref&gt;</ph> using the specified serializer.</source>
        </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT">
          <source>A <ph id="ph1">&lt;xref:System.ServiceModel.Channels.Message&gt;</ph> instance has a body that corresponds to the SOAP body.</source>
        </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT">
          <source>It can be accessed as an <ph id="ph1">&lt;xref:System.Xml.XmlDictionaryReader&gt;</ph> by calling <ph id="ph2">&lt;xref:System.ServiceModel.Channels.Message.GetReaderAtBodyContents%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT">
          <source>It is initially positioned directly after the <ph id="ph1">`&lt;S:Body&gt;`</ph> element, and it returns <ph id="ph2">`EOF`</ph> on reaching the <ph id="ph3">`&lt;/S:Body&gt;`</ph> element.</source>
        </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT">
          <source>Alternatively, if you expect the body to contain a serialized object, you can call <ph id="ph1">&lt;xref:System.ServiceModel.Channels.Message.GetBody%2A&gt;</ph> instead.</source>
        </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT">
          <source>You should be aware that a message body can only be accessed once and a message can only be written once.</source>
        </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you want to access the body multiple times, use <ph id="ph1">&lt;xref:System.ServiceModel.Channels.Message.CreateBufferedCopy%2A&gt;</ph> to create a <ph id="ph2">&lt;xref:System.ServiceModel.Channels.MessageBuffer&gt;</ph> instance.</source>
        </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use the <ph id="ph1">&lt;xref:System.ServiceModel.Channels.Message.GetBody%60%601%28System.Runtime.Serialization.XmlObjectSerializer%29&gt;</ph> overload when working with JSON messages; the <ph id="ph2">&lt;xref:System.ServiceModel.Channels.Message.GetBody%60%601&gt;</ph> overload does not work.</source>
        </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Runtime.Serialization.XmlObjectSerializer"&gt;&lt;/xref&gt;</ph> object used to read the body of the message.</source>
        </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve">
          <source>The body of the message.</source>
        </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve">
          <source>An object of type <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">T</ph><ept id="p1">&lt;/code&gt;</ept> that contains the body of this message.</source>
        </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;serializer&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve">
          <source>Retrieves the attributes of the message body.</source>
        </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" extradata="MT">
          <source>A <ph id="ph1">&lt;xref:System.ServiceModel.Channels.Message&gt;</ph> instance has a body that corresponds to the SOAP body.</source>
        </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT">
          <source>It can be accessed as an <ph id="ph1">&lt;xref:System.Xml.XmlDictionaryReader&gt;</ph> by calling <ph id="ph2">&lt;xref:System.ServiceModel.Channels.Message.GetReaderAtBodyContents%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT">
          <source>It is initially positioned directly after the <ph id="ph1">`&lt;S:Body&gt;`</ph> element, and it returns <ph id="ph2">`EOF`</ph> on reaching the <ph id="ph3">`&lt;/S:Body&gt;`</ph> element.</source>
        </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT">
          <source>Alternatively, if you expect the body to contain a serialized object, you can call <ph id="ph1">&lt;xref:System.ServiceModel.Channels.Message.GetBody%2A&gt;</ph> instead.</source>
        </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" extradata="MT">
          <source>You should be aware that a message body can only be accessed once and a message can only be written once.</source>
        </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you want to access the body multiple times, use <ph id="ph1">&lt;xref:System.ServiceModel.Channels.Message.CreateBufferedCopy%2A&gt;</ph> to create a <ph id="ph2">&lt;xref:System.ServiceModel.Channels.MessageBuffer&gt;</ph> instance.</source>
        </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve">
          <source>The local name of the XML node.</source>
        </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve">
          <source>The name of the element that corresponds to this member.</source>
        </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve">
          <source>This string must be a valid XML element name.</source>
        </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve">
          <source>The namespace to which this XML element belongs.</source>
        </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve">
          <source>The namespace URI of the element that corresponds to this member.</source>
        </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve">
          <source>The system does not validate any URIs other than transport addresses.</source>
        </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve">
          <source>The attributes of the message body.</source>
        </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;localName&lt;/code&gt;</ph> or <ph id="ph2">&lt;code&gt;ns&lt;/code&gt;</ph> is <ph id="ph3">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve">
          <source>The message is closed.</source>
        </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve">
          <source>The message has been copied, read or written.</source>
        </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve">
          <source>Gets the XML dictionary reader that accesses the body content of this message.</source>
        </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" extradata="MT">
          <source>A <ph id="ph1">&lt;xref:System.ServiceModel.Channels.Message&gt;</ph> instance has a body that corresponds to the SOAP body.</source>
        </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" extradata="MT">
          <source>It can be accessed as an <ph id="ph1">&lt;xref:System.Xml.XmlDictionaryReader&gt;</ph> by calling <ph id="ph2">&lt;xref:System.ServiceModel.Channels.Message.GetReaderAtBodyContents%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" extradata="MT">
          <source>It is initially positioned directly after the <ph id="ph1">`&lt;S:Body&gt;`</ph> element.</source>
        </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" extradata="MT">
          <source>Alternatively, if you expect the body to contain a serialized object, you can call <ph id="ph1">&lt;xref:System.ServiceModel.Channels.Message.GetBody%2A&gt;</ph> instead.</source>
        </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" extradata="MT">
          <source>You should be aware that a message body can only be accessed once and a message can only be written once.</source>
        </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you want to access the body multiple times, use <ph id="ph1">&lt;xref:System.ServiceModel.Channels.Message.CreateBufferedCopy%2A&gt;</ph> to create a <ph id="ph2">&lt;xref:System.ServiceModel.Channels.MessageBuffer&gt;</ph> instance.</source>
        </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Xml.XmlDictionaryReader"&gt;&lt;/xref&gt;</ph> object that accesses the body content of this message.</source>
        </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve">
          <source>The message is closed.</source>
        </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve">
          <source>The message is empty, or has been copied, read or written.</source>
        </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, gets the headers of the message.</source>
        </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" extradata="MT">
          <source>A <ph id="ph1">&lt;xref:System.ServiceModel.Channels.Message&gt;</ph> can have zero or more headers that are used as an extension mechanism to pass information in messages that is application-specific.</source>
        </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use <ph id="ph1">&lt;xref:System.ServiceModel.Channels.Message.Headers%2A&gt;</ph> to add message headers to a message by calling the <ph id="ph2">&lt;xref:System.ServiceModel.Channels.MessageHeaders.Add%2A&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">[!INCLUDE[indigo1](~/includes/indigo1-md.md)]</ph> provides a number of predefined message headers, as shown in the following table.</source>
        </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" extradata="MT">
          <source>Header Name</source>
        </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" extradata="MT">
          <source>Contains the header name.</source>
        </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" extradata="MT">
          <source>To</source>
        </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" extradata="MT">
          <source>Contains the role that the message is targeting.</source>
        </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" extradata="MT">
          <source>Action</source>
        </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" extradata="MT">
          <source>Provides a description of how the message should be processed.</source>
        </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" extradata="MT">
          <source>FaultTo</source>
        </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" extradata="MT">
          <source>Contains the address of the node to which faults should be sent.</source>
        </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" extradata="MT">
          <source>From</source>
        </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" extradata="MT">
          <source>Contains the address of the node that sent the message.</source>
        </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" extradata="MT">
          <source>Request</source>
        </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" extradata="MT">
          <source>Indicates whether the message is a request.</source>
        </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" extradata="MT">
          <source>MessageID</source>
        </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" extradata="MT">
          <source>Contains the unique ID of the message.</source>
        </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" extradata="MT">
          <source>RelatesTo</source>
        </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" extradata="MT">
          <source>Contains the IDs of messages that are related to this message.</source>
        </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" extradata="MT">
          <source>ReplyTo</source>
        </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" extradata="MT">
          <source>Contains the address of the node to which a reply should be sent for a request.</source>
        </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.ServiceModel.Channels.MessageHeaders"&gt;&lt;/xref&gt;</ph> object that represents the headers of the message.</source>
        </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve">
          <source>The message has been disposed of.</source>
        </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve">
          <source>Returns a value that indicates whether the <ph id="ph1">&lt;xref href="System.ServiceModel.Channels.Message"&gt;&lt;/xref&gt;</ph> is disposed.</source>
        </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the message is disposed; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve">
          <source>Returns a value that indicates whether the <ph id="ph1">&lt;xref href="System.ServiceModel.Channels.Message"&gt;&lt;/xref&gt;</ph> is empty.</source>
        </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the message is empty; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve">
          <source>The message has been disposed of.</source>
        </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve">
          <source>Gets a value that indicates whether this message generates any SOAP faults.</source>
        </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if this message generates any SOAP faults; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve">
          <source>The message has been disposed of.</source>
        </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve">
          <source>Raises an event when the message starts writing the contents of the message body.</source>
        </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve">
          <source>The writer used to serialize the contents of the message body.</source>
        </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve">
          <source>The delegate method that receives the notification when the operation completed.</source>
        </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve">
          <source>The user-defined object that represents the state of the operation.</source>
        </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.IAsyncResult"&gt;&lt;/xref&gt;</ph> object that represents the result of the asynchronous operation.</source>
        </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve">
          <source>Raises an event the writing of entire messages starts.</source>
        </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve">
          <source>The writer used to serialize the entire message.</source>
        </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve">
          <source>The delegate method that receives the notification when the operation completed.</source>
        </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve">
          <source>The user-defined object that represents the state of the operation.</source>
        </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.IAsyncResult"&gt;&lt;/xref&gt;</ph> object that represents the result of the asynchronous operation.</source>
        </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve">
          <source>Called when the message body is converted to a string.</source>
        </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Xml.XmlDictionaryWriter"&gt;&lt;/xref&gt;</ph> that is used to convert the message body to a string.</source>
        </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve">
          <source>Called when the message is closing.</source>
        </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve">
          <source>Called when a message buffer is created to store this message.</source>
        </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve">
          <source>The maximum size of the buffer to be created.</source>
        </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.ServiceModel.Channels.MessageBuffer"&gt;&lt;/xref&gt;</ph> object for the newly created message copy.</source>
        </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve">
          <source>Raises an event when writing of the contents of the message body ends.</source>
        </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.IAsyncResult"&gt;&lt;/xref&gt;</ph> object that represents the result of the asynchronous operation.</source>
        </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve">
          <source>Raises an event when the writing of the entire message ends.</source>
        </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.IAsyncResult"&gt;&lt;/xref&gt;</ph> object that represents the result of the asynchronous operation.</source>
        </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve">
          <source>Called when the body of the message is retrieved.</source>
        </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Xml.XmlDictionaryReader"&gt;&lt;/xref&gt;</ph> object used to read the body of the message.</source>
        </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve">
          <source>The type of the message body.</source>
        </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.ServiceModel.Channels.MessageBuffer"&gt;&lt;/xref&gt;</ph> that represents the body of the message.</source>
        </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve">
          <source>Called when the attributes of the message body is retrieved.</source>
        </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve">
          <source>The local name of the XML node.</source>
        </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve">
          <source>The name of the element that corresponds to this member.</source>
        </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve">
          <source>This string must be a valid XML element name.</source>
        </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve">
          <source>The namespace to which this XML element belongs.</source>
        </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve">
          <source>The namespace URI of the element that corresponds to this member.</source>
        </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve">
          <source>The system does not validate any URIs other than transport addresses.</source>
        </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve">
          <source>The attributes of the message body.</source>
        </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve">
          <source>Called when an XML dictionary reader that accesses the body content of this message is retrieved.</source>
        </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Xml.XmlDictionaryReader"&gt;&lt;/xref&gt;</ph> object that accesses the body content of this message.</source>
        </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve">
          <source>Called when the message body is written to an XML file.</source>
        </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Xml.XmlDictionaryWriter"&gt;&lt;/xref&gt;</ph> that is used to write this message body to an XML file.</source>
        </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve">
          <source>Called when the entire message is written to an XML file.</source>
        </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Xml.XmlDictionaryWriter"&gt;&lt;/xref&gt;</ph> that is used to write this message to an XML file.</source>
        </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve">
          <source>Called when the start body is written to an XML file.</source>
        </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Xml.XmlDictionaryWriter"&gt;&lt;/xref&gt;</ph> that is used to write the start body to an XML file.</source>
        </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve">
          <source>Called when the start envelope is written to an XML file.</source>
        </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Xml.XmlDictionaryWriter"&gt;&lt;/xref&gt;</ph> that is used to write the start envelope to an XML file.</source>
        </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve">
          <source>Called when the start header is written to an XML file.</source>
        </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.Xml.XmlDictionaryWriter"&gt;&lt;/xref&gt;</ph> that is used to write the start header to an XML file.</source>
        </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, gets a set of processing-level annotations to the message.</source>
        </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because information in headers is transmitted on the wire, an entity that examines a header must support the underlying version(s) of the protocols used by the header.</source>
        </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, properties provide a more version-independent way of annotating a message.</source>
        </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.ServiceModel.Channels.MessageProperties"&gt;&lt;/xref&gt;</ph> that contains a set of processing-level annotations to the message.</source>
        </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve">
          <source>The message has been disposed of.</source>
        </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve">
          <source>Gets the current state of this <ph id="ph1">&lt;xref href="System.ServiceModel.Channels.Message"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because the body of a <ph id="ph1">&lt;xref:System.ServiceModel.Channels.Message&gt;</ph> object is a stream, it can only be read or written once.</source>
        </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is enforced by maintaining the current state of the <ph id="ph1">&lt;xref:System.ServiceModel.Channels.Message&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve" extradata="MT">
          <source>A <ph id="ph1">&lt;xref:System.ServiceModel.Channels.Message&gt;</ph> object can be read, written, or copied when in the <ph id="ph2">&lt;xref:System.ServiceModel.Channels.MessageState.Created&gt;</ph> state.</source>
        </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve" extradata="MT">
          <source>Other states are <ph id="ph1">&lt;xref:System.ServiceModel.Channels.MessageState.Read&gt;</ph>, <ph id="ph2">&lt;xref:System.ServiceModel.Channels.MessageState.Written&gt;</ph> and <ph id="ph3">&lt;xref:System.ServiceModel.Channels.MessageState.Copied&gt;</ph>, which means that the respective action has been performed already once.</source>
        </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.ServiceModel.Channels.MessageState"&gt;&lt;/xref&gt;</ph> that contains the current state of this <ph id="ph2">&lt;xref href="System.ServiceModel.Channels.Message"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve">
          <source>Returns a string that represents the current <ph id="ph1">&lt;xref href="System.ServiceModel.Channels.Message"&gt;&lt;/xref&gt;</ph> instance.</source>
        </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve">
          <source>The string representation of the current <ph id="ph1">&lt;xref href="System.ServiceModel.Channels.Message"&gt;&lt;/xref&gt;</ph> instance.</source>
        </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve">
          <source>When overridden in a derived class, gets the SOAP version of the message.</source>
        </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve" extradata="MT">
          <source>This value is immutable for the message.</source>
        </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve" extradata="MT">
          <source>There are two possible values for the version: <ph id="ph1">&lt;xref:System.ServiceModel.Channels.MessageVersion.Soap11%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.ServiceModel.Channels.MessageVersion.Soap12%2A&gt;</ph> that correspond to SOAP 1.1 and SOAP 1.2 respectively.</source>
        </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve" extradata="MT">
          <source>Knowing the underlying SOAP version is important because the structure of <ph id="ph1">&lt;xref:System.ServiceModel.Channels.Message&gt;</ph> is firmly correlated with that of a SOAP message.</source>
        </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve" extradata="MT">
          <source>Inheritors must note that when overridden in a derived class, this method returns a <ph id="ph1">&lt;xref:System.ServiceModel.Channels.MessageVersion&gt;</ph> object for the SOAP version of the message.</source>
        </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve">
          <source>A <ph id="ph1">&lt;xref href="System.ServiceModel.Channels.MessageVersion"&gt;&lt;/xref&gt;</ph> object that represents the SOAP version.</source>
        </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve">
          <source>The message has been disposed of.</source>
        </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve">
          <source>Writes the body element using the specified <ph id="ph1">&lt;xref href="System.Xml.XmlDictionaryWriter"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method writes the body contents as well as the start and end tags of the element.</source>
        </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.Xml.XmlDictionaryWriter"&gt;&lt;/xref&gt;</ph> object to be used to write the body element.</source>
        </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;writer&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve">
          <source>Serializes the message body using the specified <ph id="ph1">&lt;xref href="System.Xml.XmlWriter"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method writes the body contents as well as the start and end tags of the element.</source>
        </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Xml.XmlWriter"&gt;&lt;/xref&gt;</ph> object to be used to write the body of the message.</source>
        </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;writer&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve">
          <source>The message is disposed.</source>
        </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve">
          <source>Serializes the body content using the specified <ph id="ph1">&lt;xref href="System.Xml.XmlDictionaryWriter"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.Xml.XmlDictionaryWriter"&gt;&lt;/xref&gt;</ph> object to be used to write the body element.</source>
        </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;writer&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve">
          <source>The message is closed.</source>
        </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve">
          <source>The message has been copied, read or written.</source>
        </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve">
          <source>Serializes the entire message using the specified <ph id="ph1">&lt;xref href="System.Xml.XmlDictionaryWriter"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method serializes the entire message.</source>
        </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve" extradata="MT">
          <source>Once a message is written, it cannot be rewritten unless a <ph id="ph1">&lt;xref:System.ServiceModel.Channels.MessageBuffer&gt;</ph> instance exists for the message.</source>
        </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.Xml.XmlDictionaryWriter"&gt;&lt;/xref&gt;</ph> object to be used to write the message.</source>
        </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;writer&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve">
          <source>The message is closed.</source>
        </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve">
          <source>The message has been copied, read or written.</source>
        </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve">
          <source>Serializes the entire message using the specified <ph id="ph1">&lt;xref href="System.Xml.XmlWriter"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method serializes the entire message.</source>
        </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve" extradata="MT">
          <source>Once a message is written, it cannot be rewritten unless there is a <ph id="ph1">&lt;xref:System.ServiceModel.Channels.MessageBuffer&gt;</ph> for the message.</source>
        </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Xml.XmlWriter"&gt;&lt;/xref&gt;</ph> object to be used to write the entire message.</source>
        </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;writer&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve">
          <source>The message is closed.</source>
        </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve">
          <source>The message has been copied, read or written.</source>
        </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve">
          <source>Serializes the start body of the message using the specified <ph id="ph1">&lt;xref href="System.Xml.XmlDictionaryWriter"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.Xml.XmlDictionaryWriter"&gt;&lt;/xref&gt;</ph> object to be used to write the start body.</source>
        </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;writer&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve">
          <source>Serializes the start body of the message using the specified <ph id="ph1">&lt;xref href="System.Xml.XmlDictionaryWriter"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Xml.XmlDictionaryWriter"&gt;&lt;/xref&gt;</ph> object to be used to write the start body of the message.</source>
        </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;writer&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve">
          <source>Serializes the start envelope using the specified <ph id="ph1">&lt;xref href="System.Xml.XmlDictionaryWriter"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.Xml.XmlDictionaryWriter"&gt;&lt;/xref&gt;</ph> object to be used to write the start envelope.</source>
        </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve">
          <source><ph id="ph1">&lt;code&gt;writer&lt;/code&gt;</ph> is <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve">
          <source>Closes all the resources used by this message.</source>
        </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve">
          <source>This method cannot be inherited.</source>
        </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve" extradata="MT">
          <source>Call this method when you are finished using the <ph id="ph1">&lt;xref:System.ServiceModel.Channels.Message&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method leaves the <ph id="ph1">&lt;xref:System.ServiceModel.Channels.Message&gt;</ph> in an unusable state.</source>
        </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve" extradata="MT">
          <source>After calling this method, you must release all references to the <ph id="ph1">&lt;xref:System.ServiceModel.Channels.Message&gt;</ph> so the garbage collector can reclaim the memory that the <ph id="ph2">&lt;xref:System.ServiceModel.Channels.Message&gt;</ph> resided in.</source>
        </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve" extradata="MT">
          <source>Always call this method before you release your last reference to the <ph id="ph1">&lt;xref:System.ServiceModel.Channels.Message&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve" extradata="MT">
          <source>Otherwise, the resources it is using are not freed until the garbage collector calls the <ph id="ph1">&lt;xref:System.ServiceModel.Channels.Message&gt;</ph> object's <ph id="ph2">`Finalize`</ph> method.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>