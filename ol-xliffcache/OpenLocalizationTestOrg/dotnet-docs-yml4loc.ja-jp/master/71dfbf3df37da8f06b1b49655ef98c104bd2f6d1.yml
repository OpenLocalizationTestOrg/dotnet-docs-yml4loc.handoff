### YamlMime:ManagedReference
items:
- uid: System.Activities.Statements.TransactionScope
  commentId: T:System.Activities.Statements.TransactionScope
  id: TransactionScope
  children:
  - System.Activities.Statements.TransactionScope.#ctor
  - System.Activities.Statements.TransactionScope.AbortInstanceOnTransactionFailure
  - System.Activities.Statements.TransactionScope.Body
  - System.Activities.Statements.TransactionScope.CacheMetadata(System.Activities.NativeActivityMetadata)
  - System.Activities.Statements.TransactionScope.CanInduceIdle
  - System.Activities.Statements.TransactionScope.Execute(System.Activities.NativeActivityContext)
  - System.Activities.Statements.TransactionScope.IsolationLevel
  - System.Activities.Statements.TransactionScope.ShouldSerializeIsolationLevel
  - System.Activities.Statements.TransactionScope.ShouldSerializeTimeout
  - System.Activities.Statements.TransactionScope.Timeout
  langs:
  - csharp
  name: TransactionScope
  nameWithType: TransactionScope
  fullName: System.Activities.Statements.TransactionScope
  type: Class
  assemblies:
  - System.Activities
  namespace: System.Activities.Statements
  summary: An activity that demarcates a transaction boundary.
  remarks: "When this activity begins executing, a new <xref:System.Transactions.Transaction> is started if one does not already exist. The transaction commits when the activity and all other participants in the transaction have completed successfully.  \n  \n> [!NOTE]\n>  The <xref:System.Activities.Statements.TryCatch.Finally%2A> activity member of a <xref:System.Activities.Statements.TryCatch> activity that is the child of a <xref:System.Activities.Statements.TransactionScope> will not execute if an unhandled exception propagates past the <xref:System.Activities.Statements.TransactionScope> boundary."
  example:
  - "The following code sample demonstrates creating a <xref:System.Activities.Statements.TransactionScope> activity. This example is from the [Basic TransactionScope](~/docs/framework/windows-workflow-foundation/samples/basic-transactionscope.md) sample.  \n  \n [!code-csharp[wfs_NestedTransactionScope#1](~/samples/snippets/csharp/VS_Snippets_CFX/wfs_nestedtransactionscope/cs/program.cs#1)]"
  syntax:
    content: >-
      [System.Windows.Markup.ContentProperty("Body")]

      public sealed class TransactionScope : System.Activities.NativeActivity
  inheritance:
  - System.Object
  - System.Activities.Activity
  - System.Activities.NativeActivity
  implements: []
  inheritedMembers:
  - System.Activities.Activity.CacheId
  - System.Activities.Activity.Constraints
  - System.Activities.Activity.DisplayName
  - System.Activities.Activity.Id
  - System.Activities.Activity.ShouldSerializeDisplayName
  - System.Activities.Activity.ToString
  - System.Activities.NativeActivity.Abort(System.Activities.NativeActivityAbortContext)
  - System.Activities.NativeActivity.CacheMetadata(System.Activities.ActivityMetadata)
  - System.Activities.NativeActivity.Cancel(System.Activities.NativeActivityContext)
  - System.Activities.NativeActivity.Implementation
  - System.Activities.NativeActivity.ImplementationVersion
  - System.Activities.NativeActivity.OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata,System.Activities.Activity)
  - System.Activities.NativeActivity.OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.UpdateMapMetadata,System.Activities.Activity)
  - System.Activities.NativeActivity.UpdateInstance(System.Activities.DynamicUpdate.NativeActivityUpdateContext)
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  attributes:
  - type: System.Windows.Markup.ContentPropertyAttribute
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Statements/TransactionScope.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.Activities.Statements.TransactionScope.#ctor
  commentId: M:System.Activities.Statements.TransactionScope.#ctor
  id: '#ctor'
  parent: System.Activities.Statements.TransactionScope
  langs:
  - csharp
  name: TransactionScope()
  nameWithType: TransactionScope.TransactionScope()
  fullName: TransactionScope.TransactionScope()
  type: Constructor
  assemblies:
  - System.Activities
  namespace: System.Activities.Statements
  summary: Initializes a new instance of the <xref href="System.Activities.Statements.TransactionScope"></xref> class.
  remarks: ''
  example:
  - "The following code sample demonstrates creating a <xref:System.Activities.Statements.TransactionScope> activity. This example is from the [Basic TransactionScope](~/docs/framework/windows-workflow-foundation/samples/basic-transactionscope.md) sample.  \n  \n [!code-csharp[wfs_NestedTransactionScope#1](~/samples/snippets/csharp/VS_Snippets_CFX/wfs_nestedtransactionscope/cs/program.cs#1)]"
  syntax:
    content: public TransactionScope ();
    parameters: []
  overload: System.Activities.Statements.TransactionScope.#ctor*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Statements/TransactionScope.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.Activities.Statements.TransactionScope.AbortInstanceOnTransactionFailure
  commentId: P:System.Activities.Statements.TransactionScope.AbortInstanceOnTransactionFailure
  id: AbortInstanceOnTransactionFailure
  parent: System.Activities.Statements.TransactionScope
  langs:
  - csharp
  name: AbortInstanceOnTransactionFailure
  nameWithType: TransactionScope.AbortInstanceOnTransactionFailure
  fullName: TransactionScope.AbortInstanceOnTransactionFailure
  type: Property
  assemblies:
  - System.Activities
  namespace: System.Activities.Statements
  summary: Gets or sets the value that indicates whether the workflow should be aborted if the transaction aborts.
  remarks: This property is read-only at runtime. If the value is set at runtime an <xref:System.InvalidOperationException> is thrown.
  syntax:
    content: public bool AbortInstanceOnTransactionFailure { get; set; }
    return:
      type: System.Boolean
      description: '`true` if the workflow should be aborted.'
  overload: System.Activities.Statements.TransactionScope.AbortInstanceOnTransactionFailure*
  exceptions: []
  attributes: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Statements/TransactionScope.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.Activities.Statements.TransactionScope.Body
  commentId: P:System.Activities.Statements.TransactionScope.Body
  id: Body
  parent: System.Activities.Statements.TransactionScope
  langs:
  - csharp
  name: Body
  nameWithType: TransactionScope.Body
  fullName: TransactionScope.Body
  type: Property
  assemblies:
  - System.Activities
  namespace: System.Activities.Statements
  summary: Gets or sets the activity that is scheduled when the <xref href="System.Activities.Statements.TransactionScope"></xref> executes.
  remarks: This property is read-only at runtime. If the value is set at runtime an <xref:System.InvalidOperationException> is thrown.
  syntax:
    content: public System.Activities.Activity Body { get; set; }
    return:
      type: System.Activities.Activity
      description: The activity that is scheduled when the <xref href="System.Activities.Statements.TransactionScope"></xref> executes.
  overload: System.Activities.Statements.TransactionScope.Body*
  exceptions: []
  attributes: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Statements/TransactionScope.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.Activities.Statements.TransactionScope.CacheMetadata(System.Activities.NativeActivityMetadata)
  commentId: M:System.Activities.Statements.TransactionScope.CacheMetadata(System.Activities.NativeActivityMetadata)
  id: CacheMetadata(System.Activities.NativeActivityMetadata)
  parent: System.Activities.Statements.TransactionScope
  langs:
  - csharp
  name: CacheMetadata(NativeActivityMetadata)
  nameWithType: TransactionScope.CacheMetadata(NativeActivityMetadata)
  fullName: TransactionScope.CacheMetadata(NativeActivityMetadata)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities.Statements
  syntax:
    content: protected override void CacheMetadata (System.Activities.NativeActivityMetadata metadata);
    parameters:
    - id: metadata
      type: System.Activities.NativeActivityMetadata
      description: ''
  overload: System.Activities.Statements.TransactionScope.CacheMetadata*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Statements/TransactionScope.xml
- uid: System.Activities.Statements.TransactionScope.CanInduceIdle
  commentId: P:System.Activities.Statements.TransactionScope.CanInduceIdle
  id: CanInduceIdle
  parent: System.Activities.Statements.TransactionScope
  langs:
  - csharp
  name: CanInduceIdle
  nameWithType: TransactionScope.CanInduceIdle
  fullName: TransactionScope.CanInduceIdle
  type: Property
  assemblies:
  - System.Activities
  namespace: System.Activities.Statements
  syntax:
    content: protected override bool CanInduceIdle { get; }
    return:
      type: System.Boolean
      description: ''
  overload: System.Activities.Statements.TransactionScope.CanInduceIdle*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Statements/TransactionScope.xml
- uid: System.Activities.Statements.TransactionScope.Execute(System.Activities.NativeActivityContext)
  commentId: M:System.Activities.Statements.TransactionScope.Execute(System.Activities.NativeActivityContext)
  id: Execute(System.Activities.NativeActivityContext)
  parent: System.Activities.Statements.TransactionScope
  langs:
  - csharp
  name: Execute(NativeActivityContext)
  nameWithType: TransactionScope.Execute(NativeActivityContext)
  fullName: TransactionScope.Execute(NativeActivityContext)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities.Statements
  syntax:
    content: protected override void Execute (System.Activities.NativeActivityContext context);
    parameters:
    - id: context
      type: System.Activities.NativeActivityContext
      description: ''
  overload: System.Activities.Statements.TransactionScope.Execute*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Statements/TransactionScope.xml
- uid: System.Activities.Statements.TransactionScope.IsolationLevel
  commentId: P:System.Activities.Statements.TransactionScope.IsolationLevel
  id: IsolationLevel
  parent: System.Activities.Statements.TransactionScope
  langs:
  - csharp
  name: IsolationLevel
  nameWithType: TransactionScope.IsolationLevel
  fullName: TransactionScope.IsolationLevel
  type: Property
  assemblies:
  - System.Activities
  namespace: System.Activities.Statements
  summary: Gets or sets the <xref href="System.Transactions.IsolationLevel"></xref> for this <xref href="System.Activities.Statements.TransactionScope"></xref>.
  remarks: This property is read-only at runtime. If the value is set at runtime an <xref:System.InvalidOperationException> is thrown.
  syntax:
    content: public System.Transactions.IsolationLevel IsolationLevel { get; set; }
    return:
      type: System.Transactions.IsolationLevel
      description: The <xref href="System.Transactions.IsolationLevel"></xref> for this <xref href="System.Activities.Statements.TransactionScope"></xref>.
  overload: System.Activities.Statements.TransactionScope.IsolationLevel*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Statements/TransactionScope.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.Activities.Statements.TransactionScope.ShouldSerializeIsolationLevel
  commentId: M:System.Activities.Statements.TransactionScope.ShouldSerializeIsolationLevel
  id: ShouldSerializeIsolationLevel
  parent: System.Activities.Statements.TransactionScope
  langs:
  - csharp
  name: ShouldSerializeIsolationLevel()
  nameWithType: TransactionScope.ShouldSerializeIsolationLevel()
  fullName: TransactionScope.ShouldSerializeIsolationLevel()
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities.Statements
  summary: Indicates whether the <xref href="System.Activities.Statements.TransactionScope.IsolationLevel"></xref> for this <xref href="System.Activities.Statements.TransactionScope"></xref> should be serialized.
  syntax:
    content: public bool ShouldSerializeIsolationLevel ();
    parameters: []
    return:
      type: System.Boolean
      description: '`true` if the <xref href="System.Activities.Statements.TransactionScope.IsolationLevel"></xref> property value should be serialized; otherwise, `false`.'
  overload: System.Activities.Statements.TransactionScope.ShouldSerializeIsolationLevel*
  exceptions: []
  attributes: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Statements/TransactionScope.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.Activities.Statements.TransactionScope.ShouldSerializeTimeout
  commentId: M:System.Activities.Statements.TransactionScope.ShouldSerializeTimeout
  id: ShouldSerializeTimeout
  parent: System.Activities.Statements.TransactionScope
  langs:
  - csharp
  name: ShouldSerializeTimeout()
  nameWithType: TransactionScope.ShouldSerializeTimeout()
  fullName: TransactionScope.ShouldSerializeTimeout()
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities.Statements
  summary: Indicates whether the <xref href="System.Activities.Statements.TransactionScope.Timeout"></xref> for this <xref href="System.Activities.Statements.TransactionScope"></xref> should be serialized.
  syntax:
    content: public bool ShouldSerializeTimeout ();
    parameters: []
    return:
      type: System.Boolean
      description: '`true` if the <xref href="System.Activities.Statements.TransactionScope.Timeout"></xref> property value should be serialized; otherwise, `false`.'
  overload: System.Activities.Statements.TransactionScope.ShouldSerializeTimeout*
  exceptions: []
  attributes: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Statements/TransactionScope.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.Activities.Statements.TransactionScope.Timeout
  commentId: P:System.Activities.Statements.TransactionScope.Timeout
  id: Timeout
  parent: System.Activities.Statements.TransactionScope
  langs:
  - csharp
  name: Timeout
  nameWithType: TransactionScope.Timeout
  fullName: TransactionScope.Timeout
  type: Property
  assemblies:
  - System.Activities
  namespace: System.Activities.Statements
  summary: Gets or sets the <xref href="System.TimeSpan"></xref> that indicates the timeout period for the transaction used for this <xref href="System.Activities.Statements.TransactionScope"></xref>.
  remarks: This property is read-only at runtime. If the value is set at runtime an <xref:System.InvalidOperationException> is thrown.
  example:
  - "The following code sample demonstrates setting the Timeout property of a <xref:System.Activities.Statements.TransactionScope> activity. This example is from the [Basic TransactionScope](~/docs/framework/windows-workflow-foundation/samples/basic-transactionscope.md) sample.  \n  \n [!code-csharp[wfs_NestedTransactionScope#1](~/samples/snippets/csharp/VS_Snippets_CFX/wfs_nestedtransactionscope/cs/program.cs#1)]"
  syntax:
    content: public System.Activities.InArgument<TimeSpan> Timeout { get; set; }
    return:
      type: System.Activities.InArgument{System.TimeSpan}
      description: The <xref href="System.TimeSpan"></xref> that indicates the timeout period for the transaction used for this <xref href="System.Activities.Statements.TransactionScope"></xref>.
  overload: System.Activities.Statements.TransactionScope.Timeout*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Statements/TransactionScope.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
references:
- uid: System.Activities.NativeActivity
  parent: System.Activities
  isExternal: false
  name: NativeActivity
  nameWithType: NativeActivity
  fullName: System.Activities.NativeActivity
- uid: System.Activities.Statements.TransactionScope.#ctor
  parent: System.Activities.Statements.TransactionScope
  isExternal: false
  name: TransactionScope()
  nameWithType: TransactionScope.TransactionScope()
  fullName: TransactionScope.TransactionScope()
- uid: System.Activities.Statements.TransactionScope.AbortInstanceOnTransactionFailure
  parent: System.Activities.Statements.TransactionScope
  isExternal: false
  name: AbortInstanceOnTransactionFailure
  nameWithType: TransactionScope.AbortInstanceOnTransactionFailure
  fullName: TransactionScope.AbortInstanceOnTransactionFailure
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Activities.Statements.TransactionScope.Body
  parent: System.Activities.Statements.TransactionScope
  isExternal: false
  name: Body
  nameWithType: TransactionScope.Body
  fullName: TransactionScope.Body
- uid: System.Activities.Activity
  parent: System.Activities
  isExternal: false
  name: Activity
  nameWithType: Activity
  fullName: System.Activities.Activity
- uid: System.Activities.Statements.TransactionScope.CacheMetadata(System.Activities.NativeActivityMetadata)
  parent: System.Activities.Statements.TransactionScope
  isExternal: false
  name: CacheMetadata(NativeActivityMetadata)
  nameWithType: TransactionScope.CacheMetadata(NativeActivityMetadata)
  fullName: TransactionScope.CacheMetadata(NativeActivityMetadata)
- uid: System.Activities.NativeActivityMetadata
  parent: System.Activities
  isExternal: false
  name: NativeActivityMetadata
  nameWithType: NativeActivityMetadata
  fullName: System.Activities.NativeActivityMetadata
- uid: System.Activities.Statements.TransactionScope.CanInduceIdle
  parent: System.Activities.Statements.TransactionScope
  isExternal: false
  name: CanInduceIdle
  nameWithType: TransactionScope.CanInduceIdle
  fullName: TransactionScope.CanInduceIdle
- uid: System.Activities.Statements.TransactionScope.Execute(System.Activities.NativeActivityContext)
  parent: System.Activities.Statements.TransactionScope
  isExternal: false
  name: Execute(NativeActivityContext)
  nameWithType: TransactionScope.Execute(NativeActivityContext)
  fullName: TransactionScope.Execute(NativeActivityContext)
- uid: System.Activities.NativeActivityContext
  parent: System.Activities
  isExternal: false
  name: NativeActivityContext
  nameWithType: NativeActivityContext
  fullName: System.Activities.NativeActivityContext
- uid: System.Activities.Statements.TransactionScope.IsolationLevel
  parent: System.Activities.Statements.TransactionScope
  isExternal: false
  name: IsolationLevel
  nameWithType: TransactionScope.IsolationLevel
  fullName: TransactionScope.IsolationLevel
- uid: System.Transactions.IsolationLevel
  parent: System.Transactions
  isExternal: false
  name: IsolationLevel
  nameWithType: IsolationLevel
  fullName: System.Transactions.IsolationLevel
- uid: System.Activities.Statements.TransactionScope.ShouldSerializeIsolationLevel
  parent: System.Activities.Statements.TransactionScope
  isExternal: false
  name: ShouldSerializeIsolationLevel()
  nameWithType: TransactionScope.ShouldSerializeIsolationLevel()
  fullName: TransactionScope.ShouldSerializeIsolationLevel()
- uid: System.Activities.Statements.TransactionScope.ShouldSerializeTimeout
  parent: System.Activities.Statements.TransactionScope
  isExternal: false
  name: ShouldSerializeTimeout()
  nameWithType: TransactionScope.ShouldSerializeTimeout()
  fullName: TransactionScope.ShouldSerializeTimeout()
- uid: System.Activities.Statements.TransactionScope.Timeout
  parent: System.Activities.Statements.TransactionScope
  isExternal: false
  name: Timeout
  nameWithType: TransactionScope.Timeout
  fullName: TransactionScope.Timeout
- uid: System.Activities.InArgument`1
  name: InArgument<T>
  nameWithType: InArgument<T>
  fullName: System.Activities.InArgument<T>
- uid: System.TimeSpan
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.Activities.InArgument{System.TimeSpan}
  parent: System.Activities
  isExternal: false
  name: InArgument<TimeSpan>
  nameWithType: InArgument<TimeSpan>
  fullName: System.Activities.InArgument<System.TimeSpan>
  spec.csharp:
  - uid: System.Activities.InArgument`1
    name: InArgument
    nameWithType: InArgument
    fullName: System.Activities.InArgument
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: System.TimeSpan
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Activities.Statements.TransactionScope.#ctor*
  parent: System.Activities.Statements.TransactionScope
  isExternal: false
  name: TransactionScope
  nameWithType: TransactionScope.TransactionScope
  fullName: TransactionScope.TransactionScope
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Statements/TransactionScope.xml
- uid: System.Activities.Statements.TransactionScope.AbortInstanceOnTransactionFailure*
  parent: System.Activities.Statements.TransactionScope
  isExternal: false
  name: AbortInstanceOnTransactionFailure
  nameWithType: TransactionScope.AbortInstanceOnTransactionFailure
  fullName: TransactionScope.AbortInstanceOnTransactionFailure
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Statements/TransactionScope.xml
- uid: System.Activities.Statements.TransactionScope.Body*
  parent: System.Activities.Statements.TransactionScope
  isExternal: false
  name: Body
  nameWithType: TransactionScope.Body
  fullName: TransactionScope.Body
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Statements/TransactionScope.xml
- uid: System.Activities.Statements.TransactionScope.CacheMetadata*
  parent: System.Activities.Statements.TransactionScope
  isExternal: false
  name: CacheMetadata
  nameWithType: TransactionScope.CacheMetadata
  fullName: TransactionScope.CacheMetadata
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Statements/TransactionScope.xml
- uid: System.Activities.Statements.TransactionScope.CanInduceIdle*
  parent: System.Activities.Statements.TransactionScope
  isExternal: false
  name: CanInduceIdle
  nameWithType: TransactionScope.CanInduceIdle
  fullName: TransactionScope.CanInduceIdle
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Statements/TransactionScope.xml
- uid: System.Activities.Statements.TransactionScope.Execute*
  parent: System.Activities.Statements.TransactionScope
  isExternal: false
  name: Execute
  nameWithType: TransactionScope.Execute
  fullName: TransactionScope.Execute
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Statements/TransactionScope.xml
- uid: System.Activities.Statements.TransactionScope.IsolationLevel*
  parent: System.Activities.Statements.TransactionScope
  isExternal: false
  name: IsolationLevel
  nameWithType: TransactionScope.IsolationLevel
  fullName: TransactionScope.IsolationLevel
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Statements/TransactionScope.xml
- uid: System.Activities.Statements.TransactionScope.ShouldSerializeIsolationLevel*
  parent: System.Activities.Statements.TransactionScope
  isExternal: false
  name: ShouldSerializeIsolationLevel
  nameWithType: TransactionScope.ShouldSerializeIsolationLevel
  fullName: TransactionScope.ShouldSerializeIsolationLevel
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Statements/TransactionScope.xml
- uid: System.Activities.Statements.TransactionScope.ShouldSerializeTimeout*
  parent: System.Activities.Statements.TransactionScope
  isExternal: false
  name: ShouldSerializeTimeout
  nameWithType: TransactionScope.ShouldSerializeTimeout
  fullName: TransactionScope.ShouldSerializeTimeout
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Statements/TransactionScope.xml
- uid: System.Activities.Statements.TransactionScope.Timeout*
  parent: System.Activities.Statements.TransactionScope
  isExternal: false
  name: Timeout
  nameWithType: TransactionScope.Timeout
  fullName: TransactionScope.Timeout
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Activities.Statements/TransactionScope.xml
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: Object.Equals(Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: Object.Equals(Object, Object)
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: false
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: Object.GetHashCode()
- uid: System.Object.GetType
  parent: System.Object
  isExternal: false
  name: GetType()
  nameWithType: Object.GetType()
  fullName: Object.GetType()
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: false
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: Object.MemberwiseClone()
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: Object.ReferenceEquals(Object, Object)
- uid: System.Activities.Activity.ToString
  parent: System.Activities.Activity
  isExternal: false
  name: ToString()
  nameWithType: Activity.ToString()
  fullName: Activity.ToString()
- uid: System.Activities.Activity.CacheId
  parent: System.Activities.Activity
  isExternal: false
  name: CacheId
  nameWithType: Activity.CacheId
  fullName: Activity.CacheId
- uid: System.Activities.NativeActivity.CacheMetadata(System.Activities.ActivityMetadata)
  parent: System.Activities.NativeActivity
  isExternal: false
  name: CacheMetadata(ActivityMetadata)
  nameWithType: NativeActivity.CacheMetadata(ActivityMetadata)
  fullName: NativeActivity.CacheMetadata(ActivityMetadata)
- uid: System.Activities.Activity.Constraints
  parent: System.Activities.Activity
  isExternal: false
  name: Constraints
  nameWithType: Activity.Constraints
  fullName: Activity.Constraints
- uid: System.Activities.Activity.DisplayName
  parent: System.Activities.Activity
  isExternal: false
  name: DisplayName
  nameWithType: Activity.DisplayName
  fullName: Activity.DisplayName
- uid: System.Activities.Activity.Id
  parent: System.Activities.Activity
  isExternal: false
  name: Id
  nameWithType: Activity.Id
  fullName: Activity.Id
- uid: System.Activities.NativeActivity.Implementation
  parent: System.Activities.NativeActivity
  isExternal: false
  name: Implementation
  nameWithType: NativeActivity.Implementation
  fullName: NativeActivity.Implementation
- uid: System.Activities.NativeActivity.ImplementationVersion
  parent: System.Activities.NativeActivity
  isExternal: false
  name: ImplementationVersion
  nameWithType: NativeActivity.ImplementationVersion
  fullName: NativeActivity.ImplementationVersion
- uid: System.Activities.NativeActivity.OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.UpdateMapMetadata,System.Activities.Activity)
  parent: System.Activities.NativeActivity
  isExternal: false
  name: OnCreateDynamicUpdateMap(UpdateMapMetadata, Activity)
  nameWithType: NativeActivity.OnCreateDynamicUpdateMap(UpdateMapMetadata, Activity)
  fullName: NativeActivity.OnCreateDynamicUpdateMap(UpdateMapMetadata, Activity)
- uid: System.Activities.Activity.ShouldSerializeDisplayName
  parent: System.Activities.Activity
  isExternal: false
  name: ShouldSerializeDisplayName()
  nameWithType: Activity.ShouldSerializeDisplayName()
  fullName: Activity.ShouldSerializeDisplayName()
- uid: System.Activities.NativeActivity.Abort(System.Activities.NativeActivityAbortContext)
  parent: System.Activities.NativeActivity
  isExternal: false
  name: Abort(NativeActivityAbortContext)
  nameWithType: NativeActivity.Abort(NativeActivityAbortContext)
  fullName: NativeActivity.Abort(NativeActivityAbortContext)
- uid: System.Activities.NativeActivity.Cancel(System.Activities.NativeActivityContext)
  parent: System.Activities.NativeActivity
  isExternal: false
  name: Cancel(NativeActivityContext)
  nameWithType: NativeActivity.Cancel(NativeActivityContext)
  fullName: NativeActivity.Cancel(NativeActivityContext)
- uid: System.Activities.NativeActivity.OnCreateDynamicUpdateMap(System.Activities.DynamicUpdate.NativeActivityUpdateMapMetadata,System.Activities.Activity)
  parent: System.Activities.NativeActivity
  isExternal: false
  name: OnCreateDynamicUpdateMap(NativeActivityUpdateMapMetadata, Activity)
  nameWithType: NativeActivity.OnCreateDynamicUpdateMap(NativeActivityUpdateMapMetadata, Activity)
  fullName: NativeActivity.OnCreateDynamicUpdateMap(NativeActivityUpdateMapMetadata, Activity)
- uid: System.Activities.NativeActivity.UpdateInstance(System.Activities.DynamicUpdate.NativeActivityUpdateContext)
  parent: System.Activities.NativeActivity
  isExternal: false
  name: UpdateInstance(NativeActivityUpdateContext)
  nameWithType: NativeActivity.UpdateInstance(NativeActivityUpdateContext)
  fullName: NativeActivity.UpdateInstance(NativeActivityUpdateContext)
