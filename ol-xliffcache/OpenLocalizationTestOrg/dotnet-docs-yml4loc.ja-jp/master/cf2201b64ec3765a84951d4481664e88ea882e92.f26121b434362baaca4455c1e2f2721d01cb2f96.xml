{"nodes":[{"content":"Represents a non-rooted transaction that can be delegated. This class cannot be inherited.","nodes":[{"pos":[0,90],"content":"Represents a non-rooted transaction that can be delegated. This class cannot be inherited.","nodes":[{"content":"Represents a non-rooted transaction that can be delegated. This class cannot be inherited.","pos":[0,90],"nodes":[{"content":"Represents a non-rooted transaction that can be delegated.","pos":[0,58]},{"content":"This class cannot be inherited.","pos":[59,90]}]}]}],"pos":[608,699],"yaml":true},{"content":"This class derives from <xref:System.Transactions.Transaction> and provides a constructor that takes an implementation of the <xref:System.Transactions.ISimpleTransactionSuperior> interface. Instances of this type are not the root transaction but can be delegated.","nodes":[{"pos":[0,264],"content":"This class derives from <xref:System.Transactions.Transaction> and provides a constructor that takes an implementation of the <xref:System.Transactions.ISimpleTransactionSuperior> interface. Instances of this type are not the root transaction but can be delegated.","nodes":[{"content":"This class derives from <xref:System.Transactions.Transaction> and provides a constructor that takes an implementation of the <xref:System.Transactions.ISimpleTransactionSuperior> interface. Instances of this type are not the root transaction but can be delegated.","pos":[0,264],"nodes":[{"content":"This class derives from <ph id=\"ph1\">&lt;xref:System.Transactions.Transaction&gt;</ph> and provides a constructor that takes an implementation of the <ph id=\"ph2\">&lt;xref:System.Transactions.ISimpleTransactionSuperior&gt;</ph> interface.","pos":[0,190],"source":"This class derives from <xref:System.Transactions.Transaction> and provides a constructor that takes an implementation of the <xref:System.Transactions.ISimpleTransactionSuperior> interface."},{"content":"Instances of this type are not the root transaction but can be delegated.","pos":[191,264]}]}]}],"pos":[710,975],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.Transactions.SubordinateTransaction\"></xref> class.","nodes":[{"pos":[0,104],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Transactions.SubordinateTransaction\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.Transactions.SubordinateTransaction\"></xref> class."}],"pos":[5408,5513],"yaml":true},{"content":"> [!NOTE]\n>  Only one <xref:System.Transactions.SubordinateTransaction> can be created for a given <xref:System.Transactions.ISimpleTransactionSuperior>.","nodes":[{"pos":[2,153],"content":"[!NOTE]\n Only one <xref:System.Transactions.SubordinateTransaction> can be created for a given <xref:System.Transactions.ISimpleTransactionSuperior>.","leadings":["","> "],"nodes":[{"content":"Only one <ph id=\"ph1\">&lt;xref:System.Transactions.SubordinateTransaction&gt;</ph> can be created for a given <ph id=\"ph2\">&lt;xref:System.Transactions.ISimpleTransactionSuperior&gt;</ph>.","pos":[9,149],"source":" Only one <xref:System.Transactions.SubordinateTransaction> can be created for a given <xref:System.Transactions.ISimpleTransactionSuperior>."}]}],"pos":[5524,5690],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Transactions.ISimpleTransactionSuperior\"></xref>","nodes":[{"pos":[0,69],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Transactions.ISimpleTransactionSuperior\"&gt;&lt;/xref&gt;</ph>","source":"A <xref href=\"System.Transactions.ISimpleTransactionSuperior\"></xref>"}],"pos":[6045,6115],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Transactions.SubordinateTransaction\n  commentId: T:System.Transactions.SubordinateTransaction\n  id: SubordinateTransaction\n  children:\n  - System.Transactions.SubordinateTransaction.#ctor(System.Transactions.IsolationLevel,System.Transactions.ISimpleTransactionSuperior)\n  langs:\n  - csharp\n  name: SubordinateTransaction\n  nameWithType: SubordinateTransaction\n  fullName: System.Transactions.SubordinateTransaction\n  type: Class\n  assemblies:\n  - System.Transactions\n  - netstandard\n  - System.Transactions.Local\n  namespace: System.Transactions\n  summary: Represents a non-rooted transaction that can be delegated. This class cannot be inherited.\n  remarks: This class derives from <xref:System.Transactions.Transaction> and provides a constructor that takes an implementation of the <xref:System.Transactions.ISimpleTransactionSuperior> interface. Instances of this type are not the root transaction but can be delegated.\n  syntax:\n    content: 'public sealed class SubordinateTransaction : System.Transactions.Transaction'\n  inheritance:\n  - System.Object\n  - System.Transactions.Transaction\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  - System.Transactions.Transaction.BeginCommitInternal(System.AsyncCallback)\n  - System.Transactions.Transaction.Clone\n  - System.Transactions.Transaction.Current\n  - System.Transactions.Transaction.DependentClone(System.Transactions.DependentCloneOption)\n  - System.Transactions.Transaction.Dispose\n  - System.Transactions.Transaction.EndCommitInternal(System.IAsyncResult)\n  - System.Transactions.Transaction.EnlistDurable(System.Guid,System.Transactions.IEnlistmentNotification,System.Transactions.EnlistmentOptions)\n  - System.Transactions.Transaction.EnlistDurable(System.Guid,System.Transactions.ISinglePhaseNotification,System.Transactions.EnlistmentOptions)\n  - System.Transactions.Transaction.EnlistPromotableSinglePhase(System.Transactions.IPromotableSinglePhaseNotification)\n  - System.Transactions.Transaction.EnlistPromotableSinglePhase(System.Transactions.IPromotableSinglePhaseNotification,System.Guid)\n  - System.Transactions.Transaction.EnlistVolatile(System.Transactions.IEnlistmentNotification,System.Transactions.EnlistmentOptions)\n  - System.Transactions.Transaction.EnlistVolatile(System.Transactions.ISinglePhaseNotification,System.Transactions.EnlistmentOptions)\n  - System.Transactions.Transaction.Equals(System.Object)\n  - System.Transactions.Transaction.GetHashCode\n  - System.Transactions.Transaction.GetPromotedToken\n  - System.Transactions.Transaction.IsolationLevel\n  - System.Transactions.Transaction.op_Equality(System.Transactions.Transaction,System.Transactions.Transaction)\n  - System.Transactions.Transaction.op_Inequality(System.Transactions.Transaction,System.Transactions.Transaction)\n  - System.Transactions.Transaction.PromoteAndEnlistDurable(System.Guid,System.Transactions.IPromotableSinglePhaseNotification,System.Transactions.ISinglePhaseNotification,System.Transactions.EnlistmentOptions)\n  - System.Transactions.Transaction.PromoterType\n  - System.Transactions.Transaction.Rollback\n  - System.Transactions.Transaction.Rollback(System.Exception)\n  - System.Transactions.Transaction.SetDistributedTransactionIdentifier(System.Transactions.IPromotableSinglePhaseNotification,System.Guid)\n  - System.Transactions.Transaction.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  - System.Transactions.Transaction.TransactionCompleted\n  - System.Transactions.Transaction.TransactionInformation\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Transactions/SubordinateTransaction.xml\n  ms.technology:\n  - dotnet-standard\n  manager: ghogen\n- uid: System.Transactions.SubordinateTransaction.#ctor(System.Transactions.IsolationLevel,System.Transactions.ISimpleTransactionSuperior)\n  commentId: M:System.Transactions.SubordinateTransaction.#ctor(System.Transactions.IsolationLevel,System.Transactions.ISimpleTransactionSuperior)\n  id: '#ctor(System.Transactions.IsolationLevel,System.Transactions.ISimpleTransactionSuperior)'\n  parent: System.Transactions.SubordinateTransaction\n  langs:\n  - csharp\n  name: SubordinateTransaction(IsolationLevel, ISimpleTransactionSuperior)\n  nameWithType: SubordinateTransaction.SubordinateTransaction(IsolationLevel, ISimpleTransactionSuperior)\n  fullName: SubordinateTransaction.SubordinateTransaction(IsolationLevel, ISimpleTransactionSuperior)\n  type: Constructor\n  assemblies:\n  - System.Transactions\n  - netstandard\n  - System.Transactions.Local\n  namespace: System.Transactions\n  summary: Initializes a new instance of the <xref href=\"System.Transactions.SubordinateTransaction\"></xref> class.\n  remarks: >-\n    > [!NOTE]\n\n    >  Only one <xref:System.Transactions.SubordinateTransaction> can be created for a given <xref:System.Transactions.ISimpleTransactionSuperior>.\n  syntax:\n    content: public SubordinateTransaction (System.Transactions.IsolationLevel level, System.Transactions.ISimpleTransactionSuperior superior);\n    parameters:\n    - id: isoLevel\n      type: System.Transactions.IsolationLevel\n      description: ''\n    - id: superior\n      type: System.Transactions.ISimpleTransactionSuperior\n      description: A <xref href=\"System.Transactions.ISimpleTransactionSuperior\"></xref>\n  overload: System.Transactions.SubordinateTransaction.#ctor*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Transactions/SubordinateTransaction.xml\n  ms.technology:\n  - dotnet-standard\n  manager: ghogen\nreferences:\n- uid: System.Transactions.Transaction\n  parent: System.Transactions\n  isExternal: false\n  name: Transaction\n  nameWithType: Transaction\n  fullName: System.Transactions.Transaction\n- uid: System.Transactions.SubordinateTransaction.#ctor(System.Transactions.IsolationLevel,System.Transactions.ISimpleTransactionSuperior)\n  parent: System.Transactions.SubordinateTransaction\n  isExternal: false\n  name: SubordinateTransaction(IsolationLevel, ISimpleTransactionSuperior)\n  nameWithType: SubordinateTransaction.SubordinateTransaction(IsolationLevel, ISimpleTransactionSuperior)\n  fullName: SubordinateTransaction.SubordinateTransaction(IsolationLevel, ISimpleTransactionSuperior)\n- uid: System.Transactions.IsolationLevel\n  parent: System.Transactions\n  isExternal: false\n  name: IsolationLevel\n  nameWithType: IsolationLevel\n  fullName: System.Transactions.IsolationLevel\n- uid: System.Transactions.ISimpleTransactionSuperior\n  parent: System.Transactions\n  isExternal: false\n  name: ISimpleTransactionSuperior\n  nameWithType: ISimpleTransactionSuperior\n  fullName: System.Transactions.ISimpleTransactionSuperior\n- uid: System.Transactions.SubordinateTransaction.#ctor*\n  parent: System.Transactions.SubordinateTransaction\n  isExternal: false\n  name: SubordinateTransaction\n  nameWithType: SubordinateTransaction.SubordinateTransaction\n  fullName: SubordinateTransaction.SubordinateTransaction\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Transactions/SubordinateTransaction.xml\n- uid: System.Transactions.Transaction.Equals(System.Object)\n  parent: System.Transactions.Transaction\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Transaction.Equals(Object)\n  fullName: Transaction.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Transactions.Transaction.GetHashCode\n  parent: System.Transactions.Transaction\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Transaction.GetHashCode()\n  fullName: Transaction.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.Transactions.Transaction.BeginCommitInternal(System.AsyncCallback)\n  parent: System.Transactions.Transaction\n  isExternal: false\n  name: BeginCommitInternal(AsyncCallback)\n  nameWithType: Transaction.BeginCommitInternal(AsyncCallback)\n  fullName: Transaction.BeginCommitInternal(AsyncCallback)\n- uid: System.Transactions.Transaction.Clone\n  parent: System.Transactions.Transaction\n  isExternal: false\n  name: Clone()\n  nameWithType: Transaction.Clone()\n  fullName: Transaction.Clone()\n- uid: System.Transactions.Transaction.Current\n  parent: System.Transactions.Transaction\n  isExternal: false\n  name: Current\n  nameWithType: Transaction.Current\n  fullName: Transaction.Current\n- uid: System.Transactions.Transaction.DependentClone(System.Transactions.DependentCloneOption)\n  parent: System.Transactions.Transaction\n  isExternal: false\n  name: DependentClone(DependentCloneOption)\n  nameWithType: Transaction.DependentClone(DependentCloneOption)\n  fullName: Transaction.DependentClone(DependentCloneOption)\n- uid: System.Transactions.Transaction.Dispose\n  parent: System.Transactions.Transaction\n  isExternal: false\n  name: Dispose()\n  nameWithType: Transaction.Dispose()\n  fullName: Transaction.Dispose()\n- uid: System.Transactions.Transaction.EndCommitInternal(System.IAsyncResult)\n  parent: System.Transactions.Transaction\n  isExternal: false\n  name: EndCommitInternal(IAsyncResult)\n  nameWithType: Transaction.EndCommitInternal(IAsyncResult)\n  fullName: Transaction.EndCommitInternal(IAsyncResult)\n- uid: System.Transactions.Transaction.EnlistDurable(System.Guid,System.Transactions.IEnlistmentNotification,System.Transactions.EnlistmentOptions)\n  parent: System.Transactions.Transaction\n  isExternal: false\n  name: EnlistDurable(Guid, IEnlistmentNotification, EnlistmentOptions)\n  nameWithType: Transaction.EnlistDurable(Guid, IEnlistmentNotification, EnlistmentOptions)\n  fullName: Transaction.EnlistDurable(Guid, IEnlistmentNotification, EnlistmentOptions)\n- uid: System.Transactions.Transaction.EnlistDurable(System.Guid,System.Transactions.ISinglePhaseNotification,System.Transactions.EnlistmentOptions)\n  parent: System.Transactions.Transaction\n  isExternal: false\n  name: EnlistDurable(Guid, ISinglePhaseNotification, EnlistmentOptions)\n  nameWithType: Transaction.EnlistDurable(Guid, ISinglePhaseNotification, EnlistmentOptions)\n  fullName: Transaction.EnlistDurable(Guid, ISinglePhaseNotification, EnlistmentOptions)\n- uid: System.Transactions.Transaction.EnlistPromotableSinglePhase(System.Transactions.IPromotableSinglePhaseNotification)\n  parent: System.Transactions.Transaction\n  isExternal: false\n  name: EnlistPromotableSinglePhase(IPromotableSinglePhaseNotification)\n  nameWithType: Transaction.EnlistPromotableSinglePhase(IPromotableSinglePhaseNotification)\n  fullName: Transaction.EnlistPromotableSinglePhase(IPromotableSinglePhaseNotification)\n- uid: System.Transactions.Transaction.EnlistPromotableSinglePhase(System.Transactions.IPromotableSinglePhaseNotification,System.Guid)\n  parent: System.Transactions.Transaction\n  isExternal: false\n  name: EnlistPromotableSinglePhase(IPromotableSinglePhaseNotification, Guid)\n  nameWithType: Transaction.EnlistPromotableSinglePhase(IPromotableSinglePhaseNotification, Guid)\n  fullName: Transaction.EnlistPromotableSinglePhase(IPromotableSinglePhaseNotification, Guid)\n- uid: System.Transactions.Transaction.EnlistVolatile(System.Transactions.IEnlistmentNotification,System.Transactions.EnlistmentOptions)\n  parent: System.Transactions.Transaction\n  isExternal: false\n  name: EnlistVolatile(IEnlistmentNotification, EnlistmentOptions)\n  nameWithType: Transaction.EnlistVolatile(IEnlistmentNotification, EnlistmentOptions)\n  fullName: Transaction.EnlistVolatile(IEnlistmentNotification, EnlistmentOptions)\n- uid: System.Transactions.Transaction.EnlistVolatile(System.Transactions.ISinglePhaseNotification,System.Transactions.EnlistmentOptions)\n  parent: System.Transactions.Transaction\n  isExternal: false\n  name: EnlistVolatile(ISinglePhaseNotification, EnlistmentOptions)\n  nameWithType: Transaction.EnlistVolatile(ISinglePhaseNotification, EnlistmentOptions)\n  fullName: Transaction.EnlistVolatile(ISinglePhaseNotification, EnlistmentOptions)\n- uid: System.Transactions.Transaction.GetPromotedToken\n  parent: System.Transactions.Transaction\n  isExternal: false\n  name: GetPromotedToken()\n  nameWithType: Transaction.GetPromotedToken()\n  fullName: Transaction.GetPromotedToken()\n- uid: System.Transactions.Transaction.IsolationLevel\n  parent: System.Transactions.Transaction\n  isExternal: false\n  name: IsolationLevel\n  nameWithType: Transaction.IsolationLevel\n  fullName: Transaction.IsolationLevel\n- uid: System.Transactions.Transaction.op_Equality(System.Transactions.Transaction,System.Transactions.Transaction)\n  parent: System.Transactions.Transaction\n  isExternal: false\n  name: op_Equality(Transaction, Transaction)\n  nameWithType: Transaction.op_Equality(Transaction, Transaction)\n  fullName: Transaction.op_Equality(Transaction, Transaction)\n- uid: System.Transactions.Transaction.op_Inequality(System.Transactions.Transaction,System.Transactions.Transaction)\n  parent: System.Transactions.Transaction\n  isExternal: false\n  name: op_Inequality(Transaction, Transaction)\n  nameWithType: Transaction.op_Inequality(Transaction, Transaction)\n  fullName: Transaction.op_Inequality(Transaction, Transaction)\n- uid: System.Transactions.Transaction.PromoteAndEnlistDurable(System.Guid,System.Transactions.IPromotableSinglePhaseNotification,System.Transactions.ISinglePhaseNotification,System.Transactions.EnlistmentOptions)\n  parent: System.Transactions.Transaction\n  isExternal: false\n  name: PromoteAndEnlistDurable(Guid, IPromotableSinglePhaseNotification, ISinglePhaseNotification, EnlistmentOptions)\n  nameWithType: Transaction.PromoteAndEnlistDurable(Guid, IPromotableSinglePhaseNotification, ISinglePhaseNotification, EnlistmentOptions)\n  fullName: Transaction.PromoteAndEnlistDurable(Guid, IPromotableSinglePhaseNotification, ISinglePhaseNotification, EnlistmentOptions)\n- uid: System.Transactions.Transaction.PromoterType\n  parent: System.Transactions.Transaction\n  isExternal: false\n  name: PromoterType\n  nameWithType: Transaction.PromoterType\n  fullName: Transaction.PromoterType\n- uid: System.Transactions.Transaction.Rollback\n  parent: System.Transactions.Transaction\n  isExternal: false\n  name: Rollback()\n  nameWithType: Transaction.Rollback()\n  fullName: Transaction.Rollback()\n- uid: System.Transactions.Transaction.Rollback(System.Exception)\n  parent: System.Transactions.Transaction\n  isExternal: false\n  name: Rollback(Exception)\n  nameWithType: Transaction.Rollback(Exception)\n  fullName: Transaction.Rollback(Exception)\n- uid: System.Transactions.Transaction.SetDistributedTransactionIdentifier(System.Transactions.IPromotableSinglePhaseNotification,System.Guid)\n  parent: System.Transactions.Transaction\n  isExternal: false\n  name: SetDistributedTransactionIdentifier(IPromotableSinglePhaseNotification, Guid)\n  nameWithType: Transaction.SetDistributedTransactionIdentifier(IPromotableSinglePhaseNotification, Guid)\n  fullName: Transaction.SetDistributedTransactionIdentifier(IPromotableSinglePhaseNotification, Guid)\n- uid: System.Transactions.Transaction.TransactionCompleted\n  parent: System.Transactions.Transaction\n  isExternal: false\n  name: TransactionCompleted\n  nameWithType: Transaction.TransactionCompleted\n  fullName: Transaction.TransactionCompleted\n- uid: System.Transactions.Transaction.TransactionInformation\n  parent: System.Transactions.Transaction\n  isExternal: false\n  name: TransactionInformation\n  nameWithType: Transaction.TransactionInformation\n  fullName: Transaction.TransactionInformation\n- uid: System.Transactions.Transaction.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)\n  parent: System.Transactions.Transaction\n  isExternal: false\n  name: ISerializable.GetObjectData(SerializationInfo, StreamingContext)\n  nameWithType: Transaction.ISerializable.GetObjectData(SerializationInfo, StreamingContext)\n  fullName: Transaction.ISerializable.GetObjectData(SerializationInfo, StreamingContext)\n"}