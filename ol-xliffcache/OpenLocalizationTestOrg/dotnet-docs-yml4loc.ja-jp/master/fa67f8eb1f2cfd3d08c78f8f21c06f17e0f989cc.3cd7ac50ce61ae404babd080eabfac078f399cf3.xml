{"nodes":[{"content":"Computes aggregates over a sequence of `Int64` values.","nodes":[{"pos":[0,54],"content":"Computes aggregates over a sequence of <ph id=\"ph1\">`Int64`</ph> values.","source":"Computes aggregates over a sequence of `Int64` values."}],"pos":[992,1047],"yaml":true},{"content":"Finds an average of a sequence of `Int64` values.","nodes":[{"pos":[0,49],"content":"Finds an average of a sequence of <ph id=\"ph1\">`Int64`</ph> values.","source":"Finds an average of a sequence of `Int64` values."}],"pos":[2256,2306],"yaml":true},{"content":"A value of type `Int64`.","nodes":[{"pos":[0,24],"content":"A value of type <ph id=\"ph1\">`Int64`</ph>.","source":"A value of type `Int64`."}],"pos":[2439,2464],"yaml":true},{"content":"Returns an `Int64` value that contains the average of a sequence of `Int64` values.","nodes":[{"pos":[0,83],"content":"Returns an <ph id=\"ph1\">`Int64`</ph> value that contains the average of a sequence of <ph id=\"ph2\">`Int64`</ph> values.","source":"Returns an `Int64` value that contains the average of a sequence of `Int64` values."}],"pos":[3584,3668],"yaml":true},{"content":"An `Int64` value that contains the average of a sequence of `Int64` values.","nodes":[{"pos":[0,75],"content":"An <ph id=\"ph1\">`Int64`</ph> value that contains the average of a sequence of <ph id=\"ph2\">`Int64`</ph> values.","source":"An `Int64` value that contains the average of a sequence of `Int64` values."}],"pos":[3782,3858],"yaml":true},{"content":"Initializes a sequence of `Int64` values.","nodes":[{"pos":[0,41],"content":"Initializes a sequence of <ph id=\"ph1\">`Int64`</ph> values.","source":"Initializes a sequence of `Int64` values."}],"pos":[4946,4988],"yaml":true},{"content":"Returns a Boolean value that indicates whether the sequence of `Int64` values is empty.","nodes":[{"pos":[0,87],"content":"Returns a Boolean value that indicates whether the sequence of <ph id=\"ph1\">`Int64`</ph> values is empty.","source":"Returns a Boolean value that indicates whether the sequence of `Int64` values is empty."}],"pos":[6136,6224],"yaml":true},{"content":"`true` if the sequence of `Int64` values is empty; otherwise, `false`.","nodes":[{"pos":[0,70],"content":"<ph id=\"ph1\">`true`</ph> if the sequence of <ph id=\"ph2\">`Int64`</ph> values is empty; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` if the sequence of `Int64` values is empty; otherwise, `false`."}],"pos":[6334,6407],"yaml":true},{"content":"Assigns the <code>value</code> parameter to the existing result if the <code>value</code> parameter is greater than the existing result.","nodes":[{"pos":[0,136],"content":"Assigns the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">value</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter to the existing result if the <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">value</ph><ept id=\"p2\">&lt;/code&gt;</ept> parameter is greater than the existing result.","source":"Assigns the <code>value</code> parameter to the existing result if the <code>value</code> parameter is greater than the existing result."}],"pos":[7552,7689],"yaml":true},{"content":"A value of type `Int64`.","nodes":[{"pos":[0,24],"content":"A value of type <ph id=\"ph1\">`Int64`</ph>.","source":"A value of type `Int64`."}],"pos":[7822,7847],"yaml":true},{"content":"Gets the largest `Int64` value.","nodes":[{"pos":[0,31],"content":"Gets the largest <ph id=\"ph1\">`Int64`</ph> value.","source":"Gets the largest `Int64` value."}],"pos":[8967,8999],"yaml":true},{"content":"The largest `Int64` value.","nodes":[{"pos":[0,26],"content":"The largest <ph id=\"ph1\">`Int64`</ph> value.","source":"The largest `Int64` value."}],"pos":[9113,9140],"yaml":true},{"content":"Assigns the <code>value</code> parameter to the existing result if the <code>value</code> parameter is less than the existing result.","nodes":[{"pos":[0,133],"content":"Assigns the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">value</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter to the existing result if the <bpt id=\"p2\">&lt;code&gt;</bpt><ph id=\"ph2\">value</ph><ept id=\"p2\">&lt;/code&gt;</ept> parameter is less than the existing result.","source":"Assigns the <code>value</code> parameter to the existing result if the <code>value</code> parameter is less than the existing result."}],"pos":[10291,10425],"yaml":true},{"content":"A value of type `Int64`.","nodes":[{"pos":[0,24],"content":"A value of type <ph id=\"ph1\">`Int64`</ph>.","source":"A value of type `Int64`."}],"pos":[10558,10583],"yaml":true},{"content":"Gest the smallest `Int64` value.","nodes":[{"pos":[0,32],"content":"Gest the smallest <ph id=\"ph1\">`Int64`</ph> value.","source":"Gest the smallest `Int64` value."}],"pos":[11703,11736],"yaml":true},{"content":"The smallest `Int64` value.","nodes":[{"pos":[0,27],"content":"The smallest <ph id=\"ph1\">`Int64`</ph> value.","source":"The smallest `Int64` value."}],"pos":[11850,11878],"yaml":true},{"content":"Adds an `Int64` value to the existing result.","nodes":[{"pos":[0,45],"content":"Adds an <ph id=\"ph1\">`Int64`</ph> value to the existing result.","source":"Adds an `Int64` value to the existing result."}],"pos":[13005,13051],"yaml":true},{"content":"A value of type `Int64`.","nodes":[{"pos":[0,24],"content":"A value of type <ph id=\"ph1\">`Int64`</ph>.","source":"A value of type `Int64`."}],"pos":[13180,13205],"yaml":true},{"content":"Returns an `Int64` value that contains the sum of a sequence of `Int64` values.","nodes":[{"pos":[0,79],"content":"Returns an <ph id=\"ph1\">`Int64`</ph> value that contains the sum of a sequence of <ph id=\"ph2\">`Int64`</ph> values.","source":"Returns an `Int64` value that contains the sum of a sequence of `Int64` values."}],"pos":[14297,14377],"yaml":true},{"content":"An `Int64` value that contains the sum of a sequence of `Int64` values.","nodes":[{"pos":[0,71],"content":"An <ph id=\"ph1\">`Int64`</ph> value that contains the sum of a sequence of <ph id=\"ph2\">`Int64`</ph> values.","source":"An `Int64` value that contains the sum of a sequence of `Int64` values."}],"pos":[14487,14559],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Xml.Xsl.Runtime.Int64Aggregator\n  commentId: T:System.Xml.Xsl.Runtime.Int64Aggregator\n  id: Int64Aggregator\n  children:\n  - System.Xml.Xsl.Runtime.Int64Aggregator.Average(System.Int64)\n  - System.Xml.Xsl.Runtime.Int64Aggregator.AverageResult\n  - System.Xml.Xsl.Runtime.Int64Aggregator.Create\n  - System.Xml.Xsl.Runtime.Int64Aggregator.IsEmpty\n  - System.Xml.Xsl.Runtime.Int64Aggregator.Maximum(System.Int64)\n  - System.Xml.Xsl.Runtime.Int64Aggregator.MaximumResult\n  - System.Xml.Xsl.Runtime.Int64Aggregator.Minimum(System.Int64)\n  - System.Xml.Xsl.Runtime.Int64Aggregator.MinimumResult\n  - System.Xml.Xsl.Runtime.Int64Aggregator.Sum(System.Int64)\n  - System.Xml.Xsl.Runtime.Int64Aggregator.SumResult\n  langs:\n  - csharp\n  name: Int64Aggregator\n  nameWithType: Int64Aggregator\n  fullName: System.Xml.Xsl.Runtime.Int64Aggregator\n  type: Struct\n  assemblies:\n  - System.Data.SqlXml\n  - System.Xml\n  namespace: System.Xml.Xsl.Runtime\n  summary: Computes aggregates over a sequence of `Int64` values.\n  syntax:\n    content: public struct Int64Aggregator\n  inheritance:\n  - System.Object\n  - System.ValueType\n  implements: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  internal_use_only: true\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml.Xsl.Runtime/Int64Aggregator.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Xml.Xsl.Runtime.Int64Aggregator.Average(System.Int64)\n  commentId: M:System.Xml.Xsl.Runtime.Int64Aggregator.Average(System.Int64)\n  id: Average(System.Int64)\n  parent: System.Xml.Xsl.Runtime.Int64Aggregator\n  langs:\n  - csharp\n  name: Average(Int64)\n  nameWithType: Int64Aggregator.Average(Int64)\n  fullName: Int64Aggregator.Average(Int64)\n  type: Method\n  assemblies:\n  - System.Data.SqlXml\n  - System.Xml\n  namespace: System.Xml.Xsl.Runtime\n  summary: Finds an average of a sequence of `Int64` values.\n  syntax:\n    content: public void Average (long value);\n    parameters:\n    - id: value\n      type: System.Int64\n      description: A value of type `Int64`.\n  overload: System.Xml.Xsl.Runtime.Int64Aggregator.Average*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  internal_use_only: true\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml.Xsl.Runtime/Int64Aggregator.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Xml.Xsl.Runtime.Int64Aggregator.AverageResult\n  commentId: P:System.Xml.Xsl.Runtime.Int64Aggregator.AverageResult\n  id: AverageResult\n  parent: System.Xml.Xsl.Runtime.Int64Aggregator\n  langs:\n  - csharp\n  name: AverageResult\n  nameWithType: Int64Aggregator.AverageResult\n  fullName: Int64Aggregator.AverageResult\n  type: Property\n  assemblies:\n  - System.Data.SqlXml\n  - System.Xml\n  namespace: System.Xml.Xsl.Runtime\n  summary: Returns an `Int64` value that contains the average of a sequence of `Int64` values.\n  syntax:\n    content: public long AverageResult { get; }\n    return:\n      type: System.Int64\n      description: An `Int64` value that contains the average of a sequence of `Int64` values.\n  overload: System.Xml.Xsl.Runtime.Int64Aggregator.AverageResult*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  internal_use_only: true\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml.Xsl.Runtime/Int64Aggregator.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Xml.Xsl.Runtime.Int64Aggregator.Create\n  commentId: M:System.Xml.Xsl.Runtime.Int64Aggregator.Create\n  id: Create\n  parent: System.Xml.Xsl.Runtime.Int64Aggregator\n  langs:\n  - csharp\n  name: Create()\n  nameWithType: Int64Aggregator.Create()\n  fullName: Int64Aggregator.Create()\n  type: Method\n  assemblies:\n  - System.Data.SqlXml\n  - System.Xml\n  namespace: System.Xml.Xsl.Runtime\n  summary: Initializes a sequence of `Int64` values.\n  syntax:\n    content: public void Create ();\n    parameters: []\n  overload: System.Xml.Xsl.Runtime.Int64Aggregator.Create*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  internal_use_only: true\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml.Xsl.Runtime/Int64Aggregator.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Xml.Xsl.Runtime.Int64Aggregator.IsEmpty\n  commentId: P:System.Xml.Xsl.Runtime.Int64Aggregator.IsEmpty\n  id: IsEmpty\n  parent: System.Xml.Xsl.Runtime.Int64Aggregator\n  langs:\n  - csharp\n  name: IsEmpty\n  nameWithType: Int64Aggregator.IsEmpty\n  fullName: Int64Aggregator.IsEmpty\n  type: Property\n  assemblies:\n  - System.Data.SqlXml\n  - System.Xml\n  namespace: System.Xml.Xsl.Runtime\n  summary: Returns a Boolean value that indicates whether the sequence of `Int64` values is empty.\n  syntax:\n    content: public bool IsEmpty { get; }\n    return:\n      type: System.Boolean\n      description: '`true` if the sequence of `Int64` values is empty; otherwise, `false`.'\n  overload: System.Xml.Xsl.Runtime.Int64Aggregator.IsEmpty*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  internal_use_only: true\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml.Xsl.Runtime/Int64Aggregator.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Xml.Xsl.Runtime.Int64Aggregator.Maximum(System.Int64)\n  commentId: M:System.Xml.Xsl.Runtime.Int64Aggregator.Maximum(System.Int64)\n  id: Maximum(System.Int64)\n  parent: System.Xml.Xsl.Runtime.Int64Aggregator\n  langs:\n  - csharp\n  name: Maximum(Int64)\n  nameWithType: Int64Aggregator.Maximum(Int64)\n  fullName: Int64Aggregator.Maximum(Int64)\n  type: Method\n  assemblies:\n  - System.Data.SqlXml\n  - System.Xml\n  namespace: System.Xml.Xsl.Runtime\n  summary: Assigns the <code>value</code> parameter to the existing result if the <code>value</code> parameter is greater than the existing result.\n  syntax:\n    content: public void Maximum (long value);\n    parameters:\n    - id: value\n      type: System.Int64\n      description: A value of type `Int64`.\n  overload: System.Xml.Xsl.Runtime.Int64Aggregator.Maximum*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  internal_use_only: true\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml.Xsl.Runtime/Int64Aggregator.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Xml.Xsl.Runtime.Int64Aggregator.MaximumResult\n  commentId: P:System.Xml.Xsl.Runtime.Int64Aggregator.MaximumResult\n  id: MaximumResult\n  parent: System.Xml.Xsl.Runtime.Int64Aggregator\n  langs:\n  - csharp\n  name: MaximumResult\n  nameWithType: Int64Aggregator.MaximumResult\n  fullName: Int64Aggregator.MaximumResult\n  type: Property\n  assemblies:\n  - System.Data.SqlXml\n  - System.Xml\n  namespace: System.Xml.Xsl.Runtime\n  summary: Gets the largest `Int64` value.\n  syntax:\n    content: public long MaximumResult { get; }\n    return:\n      type: System.Int64\n      description: The largest `Int64` value.\n  overload: System.Xml.Xsl.Runtime.Int64Aggregator.MaximumResult*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  internal_use_only: true\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml.Xsl.Runtime/Int64Aggregator.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Xml.Xsl.Runtime.Int64Aggregator.Minimum(System.Int64)\n  commentId: M:System.Xml.Xsl.Runtime.Int64Aggregator.Minimum(System.Int64)\n  id: Minimum(System.Int64)\n  parent: System.Xml.Xsl.Runtime.Int64Aggregator\n  langs:\n  - csharp\n  name: Minimum(Int64)\n  nameWithType: Int64Aggregator.Minimum(Int64)\n  fullName: Int64Aggregator.Minimum(Int64)\n  type: Method\n  assemblies:\n  - System.Data.SqlXml\n  - System.Xml\n  namespace: System.Xml.Xsl.Runtime\n  summary: Assigns the <code>value</code> parameter to the existing result if the <code>value</code> parameter is less than the existing result.\n  syntax:\n    content: public void Minimum (long value);\n    parameters:\n    - id: value\n      type: System.Int64\n      description: A value of type `Int64`.\n  overload: System.Xml.Xsl.Runtime.Int64Aggregator.Minimum*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  internal_use_only: true\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml.Xsl.Runtime/Int64Aggregator.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Xml.Xsl.Runtime.Int64Aggregator.MinimumResult\n  commentId: P:System.Xml.Xsl.Runtime.Int64Aggregator.MinimumResult\n  id: MinimumResult\n  parent: System.Xml.Xsl.Runtime.Int64Aggregator\n  langs:\n  - csharp\n  name: MinimumResult\n  nameWithType: Int64Aggregator.MinimumResult\n  fullName: Int64Aggregator.MinimumResult\n  type: Property\n  assemblies:\n  - System.Data.SqlXml\n  - System.Xml\n  namespace: System.Xml.Xsl.Runtime\n  summary: Gest the smallest `Int64` value.\n  syntax:\n    content: public long MinimumResult { get; }\n    return:\n      type: System.Int64\n      description: The smallest `Int64` value.\n  overload: System.Xml.Xsl.Runtime.Int64Aggregator.MinimumResult*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  internal_use_only: true\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml.Xsl.Runtime/Int64Aggregator.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Xml.Xsl.Runtime.Int64Aggregator.Sum(System.Int64)\n  commentId: M:System.Xml.Xsl.Runtime.Int64Aggregator.Sum(System.Int64)\n  id: Sum(System.Int64)\n  parent: System.Xml.Xsl.Runtime.Int64Aggregator\n  langs:\n  - csharp\n  name: Sum(Int64)\n  nameWithType: Int64Aggregator.Sum(Int64)\n  fullName: Int64Aggregator.Sum(Int64)\n  type: Method\n  assemblies:\n  - System.Data.SqlXml\n  - System.Xml\n  namespace: System.Xml.Xsl.Runtime\n  summary: Adds an `Int64` value to the existing result.\n  syntax:\n    content: public void Sum (long value);\n    parameters:\n    - id: value\n      type: System.Int64\n      description: A value of type `Int64`.\n  overload: System.Xml.Xsl.Runtime.Int64Aggregator.Sum*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  internal_use_only: true\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml.Xsl.Runtime/Int64Aggregator.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Xml.Xsl.Runtime.Int64Aggregator.SumResult\n  commentId: P:System.Xml.Xsl.Runtime.Int64Aggregator.SumResult\n  id: SumResult\n  parent: System.Xml.Xsl.Runtime.Int64Aggregator\n  langs:\n  - csharp\n  name: SumResult\n  nameWithType: Int64Aggregator.SumResult\n  fullName: Int64Aggregator.SumResult\n  type: Property\n  assemblies:\n  - System.Data.SqlXml\n  - System.Xml\n  namespace: System.Xml.Xsl.Runtime\n  summary: Returns an `Int64` value that contains the sum of a sequence of `Int64` values.\n  syntax:\n    content: public long SumResult { get; }\n    return:\n      type: System.Int64\n      description: An `Int64` value that contains the sum of a sequence of `Int64` values.\n  overload: System.Xml.Xsl.Runtime.Int64Aggregator.SumResult*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  internal_use_only: true\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml.Xsl.Runtime/Int64Aggregator.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\nreferences:\n- uid: System.ValueType\n  parent: System\n  isExternal: false\n  name: ValueType\n  nameWithType: ValueType\n  fullName: System.ValueType\n- uid: System.Xml.Xsl.Runtime.Int64Aggregator.Average(System.Int64)\n  parent: System.Xml.Xsl.Runtime.Int64Aggregator\n  isExternal: false\n  name: Average(Int64)\n  nameWithType: Int64Aggregator.Average(Int64)\n  fullName: Int64Aggregator.Average(Int64)\n- uid: System.Int64\n  parent: System\n  isExternal: false\n  name: Int64\n  nameWithType: Int64\n  fullName: System.Int64\n- uid: System.Xml.Xsl.Runtime.Int64Aggregator.AverageResult\n  parent: System.Xml.Xsl.Runtime.Int64Aggregator\n  isExternal: false\n  name: AverageResult\n  nameWithType: Int64Aggregator.AverageResult\n  fullName: Int64Aggregator.AverageResult\n- uid: System.Xml.Xsl.Runtime.Int64Aggregator.Create\n  parent: System.Xml.Xsl.Runtime.Int64Aggregator\n  isExternal: false\n  name: Create()\n  nameWithType: Int64Aggregator.Create()\n  fullName: Int64Aggregator.Create()\n- uid: System.Xml.Xsl.Runtime.Int64Aggregator.IsEmpty\n  parent: System.Xml.Xsl.Runtime.Int64Aggregator\n  isExternal: false\n  name: IsEmpty\n  nameWithType: Int64Aggregator.IsEmpty\n  fullName: Int64Aggregator.IsEmpty\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Xml.Xsl.Runtime.Int64Aggregator.Maximum(System.Int64)\n  parent: System.Xml.Xsl.Runtime.Int64Aggregator\n  isExternal: false\n  name: Maximum(Int64)\n  nameWithType: Int64Aggregator.Maximum(Int64)\n  fullName: Int64Aggregator.Maximum(Int64)\n- uid: System.Xml.Xsl.Runtime.Int64Aggregator.MaximumResult\n  parent: System.Xml.Xsl.Runtime.Int64Aggregator\n  isExternal: false\n  name: MaximumResult\n  nameWithType: Int64Aggregator.MaximumResult\n  fullName: Int64Aggregator.MaximumResult\n- uid: System.Xml.Xsl.Runtime.Int64Aggregator.Minimum(System.Int64)\n  parent: System.Xml.Xsl.Runtime.Int64Aggregator\n  isExternal: false\n  name: Minimum(Int64)\n  nameWithType: Int64Aggregator.Minimum(Int64)\n  fullName: Int64Aggregator.Minimum(Int64)\n- uid: System.Xml.Xsl.Runtime.Int64Aggregator.MinimumResult\n  parent: System.Xml.Xsl.Runtime.Int64Aggregator\n  isExternal: false\n  name: MinimumResult\n  nameWithType: Int64Aggregator.MinimumResult\n  fullName: Int64Aggregator.MinimumResult\n- uid: System.Xml.Xsl.Runtime.Int64Aggregator.Sum(System.Int64)\n  parent: System.Xml.Xsl.Runtime.Int64Aggregator\n  isExternal: false\n  name: Sum(Int64)\n  nameWithType: Int64Aggregator.Sum(Int64)\n  fullName: Int64Aggregator.Sum(Int64)\n- uid: System.Xml.Xsl.Runtime.Int64Aggregator.SumResult\n  parent: System.Xml.Xsl.Runtime.Int64Aggregator\n  isExternal: false\n  name: SumResult\n  nameWithType: Int64Aggregator.SumResult\n  fullName: Int64Aggregator.SumResult\n- uid: System.Xml.Xsl.Runtime.Int64Aggregator.Average*\n  parent: System.Xml.Xsl.Runtime.Int64Aggregator\n  isExternal: false\n  name: Average\n  nameWithType: Int64Aggregator.Average\n  fullName: Int64Aggregator.Average\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml.Xsl.Runtime/Int64Aggregator.xml\n- uid: System.Xml.Xsl.Runtime.Int64Aggregator.AverageResult*\n  parent: System.Xml.Xsl.Runtime.Int64Aggregator\n  isExternal: false\n  name: AverageResult\n  nameWithType: Int64Aggregator.AverageResult\n  fullName: Int64Aggregator.AverageResult\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml.Xsl.Runtime/Int64Aggregator.xml\n- uid: System.Xml.Xsl.Runtime.Int64Aggregator.Create*\n  parent: System.Xml.Xsl.Runtime.Int64Aggregator\n  isExternal: false\n  name: Create\n  nameWithType: Int64Aggregator.Create\n  fullName: Int64Aggregator.Create\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml.Xsl.Runtime/Int64Aggregator.xml\n- uid: System.Xml.Xsl.Runtime.Int64Aggregator.IsEmpty*\n  parent: System.Xml.Xsl.Runtime.Int64Aggregator\n  isExternal: false\n  name: IsEmpty\n  nameWithType: Int64Aggregator.IsEmpty\n  fullName: Int64Aggregator.IsEmpty\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml.Xsl.Runtime/Int64Aggregator.xml\n- uid: System.Xml.Xsl.Runtime.Int64Aggregator.Maximum*\n  parent: System.Xml.Xsl.Runtime.Int64Aggregator\n  isExternal: false\n  name: Maximum\n  nameWithType: Int64Aggregator.Maximum\n  fullName: Int64Aggregator.Maximum\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml.Xsl.Runtime/Int64Aggregator.xml\n- uid: System.Xml.Xsl.Runtime.Int64Aggregator.MaximumResult*\n  parent: System.Xml.Xsl.Runtime.Int64Aggregator\n  isExternal: false\n  name: MaximumResult\n  nameWithType: Int64Aggregator.MaximumResult\n  fullName: Int64Aggregator.MaximumResult\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml.Xsl.Runtime/Int64Aggregator.xml\n- uid: System.Xml.Xsl.Runtime.Int64Aggregator.Minimum*\n  parent: System.Xml.Xsl.Runtime.Int64Aggregator\n  isExternal: false\n  name: Minimum\n  nameWithType: Int64Aggregator.Minimum\n  fullName: Int64Aggregator.Minimum\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml.Xsl.Runtime/Int64Aggregator.xml\n- uid: System.Xml.Xsl.Runtime.Int64Aggregator.MinimumResult*\n  parent: System.Xml.Xsl.Runtime.Int64Aggregator\n  isExternal: false\n  name: MinimumResult\n  nameWithType: Int64Aggregator.MinimumResult\n  fullName: Int64Aggregator.MinimumResult\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml.Xsl.Runtime/Int64Aggregator.xml\n- uid: System.Xml.Xsl.Runtime.Int64Aggregator.Sum*\n  parent: System.Xml.Xsl.Runtime.Int64Aggregator\n  isExternal: false\n  name: Sum\n  nameWithType: Int64Aggregator.Sum\n  fullName: Int64Aggregator.Sum\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml.Xsl.Runtime/Int64Aggregator.xml\n- uid: System.Xml.Xsl.Runtime.Int64Aggregator.SumResult*\n  parent: System.Xml.Xsl.Runtime.Int64Aggregator\n  isExternal: false\n  name: SumResult\n  nameWithType: Int64Aggregator.SumResult\n  fullName: Int64Aggregator.SumResult\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml.Xsl.Runtime/Int64Aggregator.xml\n"}