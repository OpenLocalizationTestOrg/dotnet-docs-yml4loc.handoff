### YamlMime:ManagedReference
items:
- uid: System.Web.Hosting.VirtualFileBase
  commentId: T:System.Web.Hosting.VirtualFileBase
  id: VirtualFileBase
  children:
  - System.Web.Hosting.VirtualFileBase.#ctor
  - System.Web.Hosting.VirtualFileBase.InitializeLifetimeService
  - System.Web.Hosting.VirtualFileBase.IsDirectory
  - System.Web.Hosting.VirtualFileBase.Name
  - System.Web.Hosting.VirtualFileBase.VirtualPath
  langs:
  - csharp
  name: VirtualFileBase
  nameWithType: VirtualFileBase
  fullName: System.Web.Hosting.VirtualFileBase
  type: Class
  assemblies:
  - System.Web
  namespace: System.Web.Hosting
  summary: Provides the core implementation for the <xref href="System.Web.Hosting.VirtualFile"></xref> and <xref href="System.Web.Hosting.VirtualDirectory"></xref> objects. An abstract class, it cannot be instantiated.
  remarks: The <xref:System.Web.Hosting.VirtualFileBase> abstract class provides the common methods and properties shared between the <xref:System.Web.Hosting.VirtualFile> and <xref:System.Web.Hosting.VirtualDirectory> objects. Implementations of these classes provide the ASP.NET runtime with access to files and paths used for compilation. For more information on using virtual files and paths, see the <xref:System.Web.Hosting.VirtualPathProvider> class.
  syntax:
    content: 'public abstract class VirtualFileBase : MarshalByRefObject'
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  derivedClasses:
  - System.Web.Hosting.VirtualDirectory
  - System.Web.Hosting.VirtualFile
  implements: []
  inheritedMembers:
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Hosting/VirtualFileBase.xml
  ms.technology:
  - dotnet-webforms
  ms.author: riande
  manager: wpickett
- uid: System.Web.Hosting.VirtualFileBase.#ctor
  commentId: M:System.Web.Hosting.VirtualFileBase.#ctor
  id: '#ctor'
  parent: System.Web.Hosting.VirtualFileBase
  langs:
  - csharp
  name: VirtualFileBase()
  nameWithType: VirtualFileBase.VirtualFileBase()
  fullName: VirtualFileBase.VirtualFileBase()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.Hosting
  summary: Initializes the class for use by an inherited class instance. This constructor can be called only by an inherited class.
  remarks: Although you cannot directly construct an instance of the <xref:System.Web.Hosting.VirtualFileBase> class, you can call this constructor from the constructor of an inheriting class.
  syntax:
    content: protected VirtualFileBase ();
    parameters: []
  overload: System.Web.Hosting.VirtualFileBase.#ctor*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Hosting/VirtualFileBase.xml
  ms.technology:
  - dotnet-webforms
  ms.author: riande
  manager: wpickett
- uid: System.Web.Hosting.VirtualFileBase.InitializeLifetimeService
  commentId: M:System.Web.Hosting.VirtualFileBase.InitializeLifetimeService
  id: InitializeLifetimeService
  parent: System.Web.Hosting.VirtualFileBase
  langs:
  - csharp
  name: InitializeLifetimeService()
  nameWithType: VirtualFileBase.InitializeLifetimeService()
  fullName: VirtualFileBase.InitializeLifetimeService()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Hosting
  summary: Gives a <xref href="System.Web.Hosting.VirtualFileBase"></xref> instance an infinite lifetime by preventing a lease from being created.
  remarks: This method overrides the <xref:System.MarshalByRefObject.InitializeLifetimeService%2A> method on its base class. It always returns `null` and thereby prevents a lease from being created that would limit the lifetime of the virtual file or directory.
  syntax:
    content: public override object InitializeLifetimeService ();
    parameters: []
    return:
      type: System.Object
      description: Always `null`.
  overload: System.Web.Hosting.VirtualFileBase.InitializeLifetimeService*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Hosting/VirtualFileBase.xml
  ms.technology:
  - dotnet-webforms
  ms.author: riande
  manager: wpickett
- uid: System.Web.Hosting.VirtualFileBase.IsDirectory
  commentId: P:System.Web.Hosting.VirtualFileBase.IsDirectory
  id: IsDirectory
  parent: System.Web.Hosting.VirtualFileBase
  langs:
  - csharp
  name: IsDirectory
  nameWithType: VirtualFileBase.IsDirectory
  fullName: VirtualFileBase.IsDirectory
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Hosting
  summary: When overridden in a derived class, gets a value indicating whether the <xref href="System.Web.Hosting.VirtualFileBase"></xref> instance represents a virtual file or a virtual directory.
  syntax:
    content: public abstract bool IsDirectory { get; }
    return:
      type: System.Boolean
      description: '`true` if the <xref href="System.Web.Hosting.VirtualFileBase"></xref> instance is a virtual directory; otherwise, `false` if the <xref href="System.Web.Hosting.VirtualFileBase"></xref> instance is a virtual file.'
  overload: System.Web.Hosting.VirtualFileBase.IsDirectory*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Hosting/VirtualFileBase.xml
  ms.technology:
  - dotnet-webforms
  ms.author: riande
  manager: wpickett
- uid: System.Web.Hosting.VirtualFileBase.Name
  commentId: P:System.Web.Hosting.VirtualFileBase.Name
  id: Name
  parent: System.Web.Hosting.VirtualFileBase
  langs:
  - csharp
  name: Name
  nameWithType: VirtualFileBase.Name
  fullName: VirtualFileBase.Name
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Hosting
  summary: Gets the display name of the virtual resource.
  remarks: The <xref:System.Web.Hosting.VirtualFileBase.Name%2A> property is typically the file name and extension associated with the resource, although virtual resources may use arbitrary names.
  syntax:
    content: public virtual string Name { get; }
    return:
      type: System.String
      description: The display name of the virtual file.
  overload: System.Web.Hosting.VirtualFileBase.Name*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Hosting/VirtualFileBase.xml
  ms.technology:
  - dotnet-webforms
  ms.author: riande
  manager: wpickett
- uid: System.Web.Hosting.VirtualFileBase.VirtualPath
  commentId: P:System.Web.Hosting.VirtualFileBase.VirtualPath
  id: VirtualPath
  parent: System.Web.Hosting.VirtualFileBase
  langs:
  - csharp
  name: VirtualPath
  nameWithType: VirtualFileBase.VirtualPath
  fullName: VirtualFileBase.VirtualPath
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Hosting
  summary: Gets the virtual file path.
  remarks: The <xref:System.Web.Hosting.VirtualFileBase.VirtualPath%2A> property returns the path to the file or directory represented by this object.
  syntax:
    content: public string VirtualPath { get; }
    return:
      type: System.String
      description: The path to the virtual file.
  overload: System.Web.Hosting.VirtualFileBase.VirtualPath*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Hosting/VirtualFileBase.xml
  ms.technology:
  - dotnet-webforms
  ms.author: riande
  manager: wpickett
references:
- uid: System.MarshalByRefObject
  parent: System
  isExternal: false
  name: MarshalByRefObject
  nameWithType: MarshalByRefObject
  fullName: System.MarshalByRefObject
- uid: System.Web.Hosting.VirtualFileBase.#ctor
  parent: System.Web.Hosting.VirtualFileBase
  isExternal: false
  name: VirtualFileBase()
  nameWithType: VirtualFileBase.VirtualFileBase()
  fullName: VirtualFileBase.VirtualFileBase()
- uid: System.Web.Hosting.VirtualFileBase.InitializeLifetimeService
  parent: System.Web.Hosting.VirtualFileBase
  isExternal: false
  name: InitializeLifetimeService()
  nameWithType: VirtualFileBase.InitializeLifetimeService()
  fullName: VirtualFileBase.InitializeLifetimeService()
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Web.Hosting.VirtualFileBase.IsDirectory
  parent: System.Web.Hosting.VirtualFileBase
  isExternal: false
  name: IsDirectory
  nameWithType: VirtualFileBase.IsDirectory
  fullName: VirtualFileBase.IsDirectory
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.Hosting.VirtualFileBase.Name
  parent: System.Web.Hosting.VirtualFileBase
  isExternal: false
  name: Name
  nameWithType: VirtualFileBase.Name
  fullName: VirtualFileBase.Name
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.Hosting.VirtualFileBase.VirtualPath
  parent: System.Web.Hosting.VirtualFileBase
  isExternal: false
  name: VirtualPath
  nameWithType: VirtualFileBase.VirtualPath
  fullName: VirtualFileBase.VirtualPath
- uid: System.Web.Hosting.VirtualFileBase.#ctor*
  parent: System.Web.Hosting.VirtualFileBase
  isExternal: false
  name: VirtualFileBase
  nameWithType: VirtualFileBase.VirtualFileBase
  fullName: VirtualFileBase.VirtualFileBase
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Hosting/VirtualFileBase.xml
- uid: System.Web.Hosting.VirtualFileBase.InitializeLifetimeService*
  parent: System.Web.Hosting.VirtualFileBase
  isExternal: false
  name: InitializeLifetimeService
  nameWithType: VirtualFileBase.InitializeLifetimeService
  fullName: VirtualFileBase.InitializeLifetimeService
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Hosting/VirtualFileBase.xml
- uid: System.Web.Hosting.VirtualFileBase.IsDirectory*
  parent: System.Web.Hosting.VirtualFileBase
  isExternal: false
  name: IsDirectory
  nameWithType: VirtualFileBase.IsDirectory
  fullName: VirtualFileBase.IsDirectory
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Hosting/VirtualFileBase.xml
- uid: System.Web.Hosting.VirtualFileBase.Name*
  parent: System.Web.Hosting.VirtualFileBase
  isExternal: false
  name: Name
  nameWithType: VirtualFileBase.Name
  fullName: VirtualFileBase.Name
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Hosting/VirtualFileBase.xml
- uid: System.Web.Hosting.VirtualFileBase.VirtualPath*
  parent: System.Web.Hosting.VirtualFileBase
  isExternal: false
  name: VirtualPath
  nameWithType: VirtualFileBase.VirtualPath
  fullName: VirtualFileBase.VirtualPath
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Hosting/VirtualFileBase.xml
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: Object.Equals(Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: Object.Equals(Object, Object)
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: false
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: Object.GetHashCode()
- uid: System.Object.GetType
  parent: System.Object
  isExternal: false
  name: GetType()
  nameWithType: Object.GetType()
  fullName: Object.GetType()
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: false
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: Object.MemberwiseClone()
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: Object.ReferenceEquals(Object, Object)
- uid: System.Object.ToString
  parent: System.Object
  isExternal: false
  name: ToString()
  nameWithType: Object.ToString()
  fullName: Object.ToString()
- uid: System.MarshalByRefObject.CreateObjRef(System.Type)
  parent: System.MarshalByRefObject
  isExternal: false
  name: CreateObjRef(Type)
  nameWithType: MarshalByRefObject.CreateObjRef(Type)
  fullName: MarshalByRefObject.CreateObjRef(Type)
- uid: System.MarshalByRefObject.GetLifetimeService
  parent: System.MarshalByRefObject
  isExternal: false
  name: GetLifetimeService()
  nameWithType: MarshalByRefObject.GetLifetimeService()
  fullName: MarshalByRefObject.GetLifetimeService()
- uid: System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  parent: System.MarshalByRefObject
  isExternal: false
  name: MemberwiseClone(Boolean)
  nameWithType: MarshalByRefObject.MemberwiseClone(Boolean)
  fullName: MarshalByRefObject.MemberwiseClone(Boolean)
