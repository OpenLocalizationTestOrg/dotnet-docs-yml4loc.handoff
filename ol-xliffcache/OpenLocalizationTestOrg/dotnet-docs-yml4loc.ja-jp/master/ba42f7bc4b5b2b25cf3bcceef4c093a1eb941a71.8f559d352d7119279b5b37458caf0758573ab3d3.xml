{"nodes":[{"content":"Allows you to specify an icon to represent a control in a container, such as the Microsoft Visual Studio Form Designer.","nodes":[{"pos":[0,119],"content":"Allows you to specify an icon to represent a control in a container, such as the Microsoft Visual Studio Form Designer.","nodes":[{"content":"Allows you to specify an icon to represent a control in a container, such as the Microsoft Visual Studio Form Designer.","pos":[0,119]}]}],"pos":[1256,1376],"yaml":true},{"content":"You can apply a <xref:System.Drawing.ToolboxBitmapAttribute> to a control so that containers, such as Microsoft Visual Studio Form Designer, can retrieve an icon that represents the control. The bitmap for the icon can be in a file by itself or embedded in the assembly that contains the control. The size of the bitmap that you embed in the control's assembly (or store in a separate file) should be 16 by 16. The <xref:System.Drawing.ToolboxBitmapAttribute.GetImage%2A> method of a <xref:System.Drawing.ToolboxBitmapAttribute> object can return the small 16 by 16 image or a large 32 by 32 image that it creates by scaling the small image.  \n  \n If you want to use different versions of your icons with different versions of your assembly, you do not have to modify the <xref:System.Drawing.ToolboxBitmapAttribute> for each version. Instead, you can declare the assembly with a <xref:System.Drawing.BitmapSuffixInSameAssemblyAttribute> or a <xref:System.Drawing.BitmapSuffixInSatelliteAssemblyAttribute>, and specify a <xref:System.Drawing.Configuration.SystemDrawingSection.BitmapSuffix%2A> configuration value for each assembly version. In this case, a file name indicated by a <xref:System.Drawing.ToolboxBitmapAttribute> is interpreted with the bitmap suffix appended.","nodes":[{"pos":[0,641],"content":"You can apply a <xref:System.Drawing.ToolboxBitmapAttribute> to a control so that containers, such as Microsoft Visual Studio Form Designer, can retrieve an icon that represents the control. The bitmap for the icon can be in a file by itself or embedded in the assembly that contains the control. The size of the bitmap that you embed in the control's assembly (or store in a separate file) should be 16 by 16. The <xref:System.Drawing.ToolboxBitmapAttribute.GetImage%2A> method of a <xref:System.Drawing.ToolboxBitmapAttribute> object can return the small 16 by 16 image or a large 32 by 32 image that it creates by scaling the small image.","nodes":[{"content":"You can apply a <xref:System.Drawing.ToolboxBitmapAttribute> to a control so that containers, such as Microsoft Visual Studio Form Designer, can retrieve an icon that represents the control. The bitmap for the icon can be in a file by itself or embedded in the assembly that contains the control. The size of the bitmap that you embed in the control's assembly (or store in a separate file) should be 16 by 16. The <xref:System.Drawing.ToolboxBitmapAttribute.GetImage%2A> method of a <xref:System.Drawing.ToolboxBitmapAttribute> object can return the small 16 by 16 image or a large 32 by 32 image that it creates by scaling the small image.","pos":[0,641],"nodes":[{"content":"You can apply a <ph id=\"ph1\">&lt;xref:System.Drawing.ToolboxBitmapAttribute&gt;</ph> to a control so that containers, such as Microsoft Visual Studio Form Designer, can retrieve an icon that represents the control.","pos":[0,190],"source":"You can apply a <xref:System.Drawing.ToolboxBitmapAttribute> to a control so that containers, such as Microsoft Visual Studio Form Designer, can retrieve an icon that represents the control."},{"content":"The bitmap for the icon can be in a file by itself or embedded in the assembly that contains the control.","pos":[191,296]},{"content":"The size of the bitmap that you embed in the control's assembly (or store in a separate file) should be 16 by 16.","pos":[297,410]},{"content":"The <ph id=\"ph1\">&lt;xref:System.Drawing.ToolboxBitmapAttribute.GetImage%2A&gt;</ph> method of a <ph id=\"ph2\">&lt;xref:System.Drawing.ToolboxBitmapAttribute&gt;</ph> object can return the small 16 by 16 image or a large 32 by 32 image that it creates by scaling the small image.","pos":[411,641],"source":" The <xref:System.Drawing.ToolboxBitmapAttribute.GetImage%2A> method of a <xref:System.Drawing.ToolboxBitmapAttribute> object can return the small 16 by 16 image or a large 32 by 32 image that it creates by scaling the small image."}]}]},{"pos":[648,1274],"content":"If you want to use different versions of your icons with different versions of your assembly, you do not have to modify the <xref:System.Drawing.ToolboxBitmapAttribute> for each version. Instead, you can declare the assembly with a <xref:System.Drawing.BitmapSuffixInSameAssemblyAttribute> or a <xref:System.Drawing.BitmapSuffixInSatelliteAssemblyAttribute>, and specify a <xref:System.Drawing.Configuration.SystemDrawingSection.BitmapSuffix%2A> configuration value for each assembly version. In this case, a file name indicated by a <xref:System.Drawing.ToolboxBitmapAttribute> is interpreted with the bitmap suffix appended.","nodes":[{"content":"If you want to use different versions of your icons with different versions of your assembly, you do not have to modify the <xref:System.Drawing.ToolboxBitmapAttribute> for each version. Instead, you can declare the assembly with a <xref:System.Drawing.BitmapSuffixInSameAssemblyAttribute> or a <xref:System.Drawing.BitmapSuffixInSatelliteAssemblyAttribute>, and specify a <xref:System.Drawing.Configuration.SystemDrawingSection.BitmapSuffix%2A> configuration value for each assembly version. In this case, a file name indicated by a <xref:System.Drawing.ToolboxBitmapAttribute> is interpreted with the bitmap suffix appended.","pos":[0,626],"nodes":[{"content":"If you want to use different versions of your icons with different versions of your assembly, you do not have to modify the <ph id=\"ph1\">&lt;xref:System.Drawing.ToolboxBitmapAttribute&gt;</ph> for each version.","pos":[0,186],"source":"If you want to use different versions of your icons with different versions of your assembly, you do not have to modify the <xref:System.Drawing.ToolboxBitmapAttribute> for each version."},{"content":"Instead, you can declare the assembly with a <ph id=\"ph1\">&lt;xref:System.Drawing.BitmapSuffixInSameAssemblyAttribute&gt;</ph> or a <ph id=\"ph2\">&lt;xref:System.Drawing.BitmapSuffixInSatelliteAssemblyAttribute&gt;</ph>, and specify a <ph id=\"ph3\">&lt;xref:System.Drawing.Configuration.SystemDrawingSection.BitmapSuffix%2A&gt;</ph> configuration value for each assembly version.","pos":[187,492],"source":" Instead, you can declare the assembly with a <xref:System.Drawing.BitmapSuffixInSameAssemblyAttribute> or a <xref:System.Drawing.BitmapSuffixInSatelliteAssemblyAttribute>, and specify a <xref:System.Drawing.Configuration.SystemDrawingSection.BitmapSuffix%2A> configuration value for each assembly version."},{"content":"In this case, a file name indicated by a <ph id=\"ph1\">&lt;xref:System.Drawing.ToolboxBitmapAttribute&gt;</ph> is interpreted with the bitmap suffix appended.","pos":[493,626],"source":" In this case, a file name indicated by a <xref:System.Drawing.ToolboxBitmapAttribute> is interpreted with the bitmap suffix appended."}]}]}],"pos":[1387,2666],"yaml":true,"extradata":"MT"},{"content":"Initializes a new <xref href=\"System.Drawing.ToolboxBitmapAttribute\"></xref> object with an image from a specified file.","nodes":[{"pos":[0,120],"content":"Initializes a new <ph id=\"ph1\">&lt;xref href=\"System.Drawing.ToolboxBitmapAttribute\"&gt;&lt;/xref&gt;</ph> object with an image from a specified file.","source":"Initializes a new <xref href=\"System.Drawing.ToolboxBitmapAttribute\"></xref> object with an image from a specified file."}],"pos":[8309,8430],"yaml":true},{"content":"The name of a file that contains a 16 by 16 bitmap.","nodes":[{"pos":[0,51],"content":"The name of a file that contains a 16 by 16 bitmap.","nodes":[{"content":"The name of a file that contains a 16 by 16 bitmap.","pos":[0,51]}]}],"pos":[9385,9437],"yaml":true},{"content":"Initializes a new <xref href=\"System.Drawing.ToolboxBitmapAttribute\"></xref> object based on a 16 x 16 bitmap that is embedded as a resource in a specified assembly.","nodes":[{"pos":[0,165],"content":"Initializes a new <ph id=\"ph1\">&lt;xref href=\"System.Drawing.ToolboxBitmapAttribute\"&gt;&lt;/xref&gt;</ph> object based on a 16 x 16 bitmap that is embedded as a resource in a specified assembly.","source":"Initializes a new <xref href=\"System.Drawing.ToolboxBitmapAttribute\"></xref> object based on a 16 x 16 bitmap that is embedded as a resource in a specified assembly."}],"pos":[10540,10706],"yaml":true},{"content":"This constructor searches for an embedded resource in the assembly that defines the type specified by the `t` parameter. The constructor searches for a resource named namespace.classname.bmp, where namespace is the namespace containing the definition of the class specified by the `t` parameter. For example, if ControlA is in NamespaceA in AssemblyA.dll, then the constructor searches AssemblyA.dll for a resource named NamespaceA.ControlA.bmp.","nodes":[{"pos":[0,445],"content":"This constructor searches for an embedded resource in the assembly that defines the type specified by the `t` parameter. The constructor searches for a resource named namespace.classname.bmp, where namespace is the namespace containing the definition of the class specified by the `t` parameter. For example, if ControlA is in NamespaceA in AssemblyA.dll, then the constructor searches AssemblyA.dll for a resource named NamespaceA.ControlA.bmp.","nodes":[{"content":"This constructor searches for an embedded resource in the assembly that defines the type specified by the <ph id=\"ph1\">`t`</ph> parameter.","pos":[0,120],"source":"This constructor searches for an embedded resource in the assembly that defines the type specified by the `t` parameter."},{"content":"The constructor searches for a resource named namespace.classname.bmp, where namespace is the namespace containing the definition of the class specified by the <ph id=\"ph1\">`t`</ph> parameter.","pos":[121,295],"source":" The constructor searches for a resource named namespace.classname.bmp, where namespace is the namespace containing the definition of the class specified by the `t` parameter."},{"content":"For example, if ControlA is in NamespaceA in AssemblyA.dll, then the constructor searches AssemblyA.dll for a resource named NamespaceA.ControlA.bmp.","pos":[296,445]}]}],"pos":[10717,11163],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Type\"></xref> whose defining assembly is searched for the bitmap resource.","nodes":[{"pos":[0,95],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph> whose defining assembly is searched for the bitmap resource.","source":"A <xref href=\"System.Type\"></xref> whose defining assembly is searched for the bitmap resource."}],"pos":[12059,12155],"yaml":true},{"content":"Initializes a new <xref href=\"System.Drawing.ToolboxBitmapAttribute\"></xref> object based on a 16 by 16 bitmap that is embedded as a resource in a specified assembly.","nodes":[{"pos":[0,166],"content":"Initializes a new <ph id=\"ph1\">&lt;xref href=\"System.Drawing.ToolboxBitmapAttribute\"&gt;&lt;/xref&gt;</ph> object based on a 16 by 16 bitmap that is embedded as a resource in a specified assembly.","source":"Initializes a new <xref href=\"System.Drawing.ToolboxBitmapAttribute\"></xref> object based on a 16 by 16 bitmap that is embedded as a resource in a specified assembly."}],"pos":[13324,13491],"yaml":true},{"content":"This constructor searches for an embedded resource in the assembly that defines the type specified by the `t` parameter. The constructor searches for a resource named namespace.name, where namespace is the namespace containing the definition of the class specified by the `t` parameter. For example, suppose that ControlA is a class in NamespaceA in AssemblyA.dll and that you passed \"MyBitmap.bmp\" to the `name` parameter. Then the constructor searches AssemblyA.dll for a resource named NamespaceA.MyBitmap.bmp.","nodes":[{"pos":[0,513],"content":"This constructor searches for an embedded resource in the assembly that defines the type specified by the `t` parameter. The constructor searches for a resource named namespace.name, where namespace is the namespace containing the definition of the class specified by the `t` parameter. For example, suppose that ControlA is a class in NamespaceA in AssemblyA.dll and that you passed \"MyBitmap.bmp\" to the `name` parameter. Then the constructor searches AssemblyA.dll for a resource named NamespaceA.MyBitmap.bmp.","nodes":[{"content":"This constructor searches for an embedded resource in the assembly that defines the type specified by the <ph id=\"ph1\">`t`</ph> parameter.","pos":[0,120],"source":"This constructor searches for an embedded resource in the assembly that defines the type specified by the `t` parameter."},{"content":"The constructor searches for a resource named namespace.name, where namespace is the namespace containing the definition of the class specified by the <ph id=\"ph1\">`t`</ph> parameter.","pos":[121,286],"source":" The constructor searches for a resource named namespace.name, where namespace is the namespace containing the definition of the class specified by the `t` parameter."},{"content":"For example, suppose that ControlA is a class in NamespaceA in AssemblyA.dll and that you passed \"MyBitmap.bmp\" to the <ph id=\"ph1\">`name`</ph> parameter.","pos":[287,423],"source":" For example, suppose that ControlA is a class in NamespaceA in AssemblyA.dll and that you passed \"MyBitmap.bmp\" to the `name` parameter."},{"content":"Then the constructor searches AssemblyA.dll for a resource named NamespaceA.MyBitmap.bmp.","pos":[424,513]}]}],"pos":[13502,14016],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.Type\"></xref> whose defining assembly is searched for the bitmap resource.","nodes":[{"pos":[0,95],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph> whose defining assembly is searched for the bitmap resource.","source":"A <xref href=\"System.Type\"></xref> whose defining assembly is searched for the bitmap resource."}],"pos":[15026,15122],"yaml":true},{"content":"The name of the embedded bitmap resource.","nodes":[{"pos":[0,41],"content":"The name of the embedded bitmap resource.","nodes":[{"content":"The name of the embedded bitmap resource.","pos":[0,41]}]}],"pos":[15182,15224],"yaml":true},{"content":"A <xref href=\"System.Drawing.ToolboxBitmapAttribute\"></xref> object that has its small image and its large image set to `null`.","nodes":[{"pos":[0,127],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Drawing.ToolboxBitmapAttribute\"&gt;&lt;/xref&gt;</ph> object that has its small image and its large image set to <ph id=\"ph2\">`null`</ph>.","source":"A <xref href=\"System.Drawing.ToolboxBitmapAttribute\"></xref> object that has its small image and its large image set to `null`."}],"pos":[16223,16351],"yaml":true},{"content":"Indicates whether the specified object is a <xref href=\"System.Drawing.ToolboxBitmapAttribute\"></xref> object and is identical to this <xref href=\"System.Drawing.ToolboxBitmapAttribute\"></xref> object.","nodes":[{"pos":[0,201],"content":"Indicates whether the specified object is a <ph id=\"ph1\">&lt;xref href=\"System.Drawing.ToolboxBitmapAttribute\"&gt;&lt;/xref&gt;</ph> object and is identical to this <ph id=\"ph2\">&lt;xref href=\"System.Drawing.ToolboxBitmapAttribute\"&gt;&lt;/xref&gt;</ph> object.","source":"Indicates whether the specified object is a <xref href=\"System.Drawing.ToolboxBitmapAttribute\"></xref> object and is identical to this <xref href=\"System.Drawing.ToolboxBitmapAttribute\"></xref> object."}],"pos":[17534,17736],"yaml":true},{"content":"The <xref href=\"System.Object\"></xref> to test.","nodes":[{"pos":[0,47],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Object\"&gt;&lt;/xref&gt;</ph> to test.","source":"The <xref href=\"System.Object\"></xref> to test."}],"pos":[17880,17928],"yaml":true},{"content":"This method returns `true` if <code>value</code> is both a <xref href=\"System.Drawing.ToolboxBitmapAttribute\"></xref> object and is identical to this <xref href=\"System.Drawing.ToolboxBitmapAttribute\"></xref> object.","nodes":[{"pos":[0,216],"content":"This method returns <ph id=\"ph1\">`true`</ph> if <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">value</ph><ept id=\"p1\">&lt;/code&gt;</ept> is both a <ph id=\"ph3\">&lt;xref href=\"System.Drawing.ToolboxBitmapAttribute\"&gt;&lt;/xref&gt;</ph> object and is identical to this <ph id=\"ph4\">&lt;xref href=\"System.Drawing.ToolboxBitmapAttribute\"&gt;&lt;/xref&gt;</ph> object.","source":"This method returns `true` if <code>value</code> is both a <xref href=\"System.Drawing.ToolboxBitmapAttribute\"></xref> object and is identical to this <xref href=\"System.Drawing.ToolboxBitmapAttribute\"></xref> object."}],"pos":[17986,18203],"yaml":true},{"content":"Gets a hash code for this <xref href=\"System.Drawing.ToolboxBitmapAttribute\"></xref> object.","nodes":[{"pos":[0,92],"content":"Gets a hash code for this <ph id=\"ph1\">&lt;xref href=\"System.Drawing.ToolboxBitmapAttribute\"&gt;&lt;/xref&gt;</ph> object.","source":"Gets a hash code for this <xref href=\"System.Drawing.ToolboxBitmapAttribute\"></xref> object."}],"pos":[19234,19327],"yaml":true},{"content":"The hash code for this <xref href=\"System.Drawing.ToolboxBitmapAttribute\"></xref> object.","nodes":[{"pos":[0,89],"content":"The hash code for this <ph id=\"ph1\">&lt;xref href=\"System.Drawing.ToolboxBitmapAttribute\"&gt;&lt;/xref&gt;</ph> object.","source":"The hash code for this <xref href=\"System.Drawing.ToolboxBitmapAttribute\"></xref> object."}],"pos":[19461,19551],"yaml":true},{"content":"Gets the small <xref href=\"System.Drawing.Image\"></xref> associated with this <xref href=\"System.Drawing.ToolboxBitmapAttribute\"></xref> object.","nodes":[{"pos":[0,144],"content":"Gets the small <ph id=\"ph1\">&lt;xref href=\"System.Drawing.Image\"&gt;&lt;/xref&gt;</ph> associated with this <ph id=\"ph2\">&lt;xref href=\"System.Drawing.ToolboxBitmapAttribute\"&gt;&lt;/xref&gt;</ph> object.","source":"Gets the small <xref href=\"System.Drawing.Image\"></xref> associated with this <xref href=\"System.Drawing.ToolboxBitmapAttribute\"></xref> object."}],"pos":[20632,20777],"yaml":true},{"content":"This method searches for a resource named namespace.classname.bmp, where namespace is the namespace containing the definition of the type of the object specified by the `component` parameter. For example, suppose you pass an object of type ControlA to the `component` parameter. If ControlA is in NamespaceA in AssemblyA.dll, then this method searches AssemblyA.dll for a resource named NamespaceA.ControlA.bmp.","nodes":[{"pos":[0,411],"content":"This method searches for a resource named namespace.classname.bmp, where namespace is the namespace containing the definition of the type of the object specified by the `component` parameter. For example, suppose you pass an object of type ControlA to the `component` parameter. If ControlA is in NamespaceA in AssemblyA.dll, then this method searches AssemblyA.dll for a resource named NamespaceA.ControlA.bmp.","nodes":[{"content":"This method searches for a resource named namespace.classname.bmp, where namespace is the namespace containing the definition of the type of the object specified by the <ph id=\"ph1\">`component`</ph> parameter.","pos":[0,191],"source":"This method searches for a resource named namespace.classname.bmp, where namespace is the namespace containing the definition of the type of the object specified by the `component` parameter."},{"content":"For example, suppose you pass an object of type ControlA to the <ph id=\"ph1\">`component`</ph> parameter.","pos":[192,278],"source":" For example, suppose you pass an object of type ControlA to the `component` parameter."},{"content":"If ControlA is in NamespaceA in AssemblyA.dll, then this method searches AssemblyA.dll for a resource named NamespaceA.ControlA.bmp.","pos":[279,411]}]}],"pos":[20788,21200],"yaml":true,"extradata":"MT"},{"content":"If this <xref href=\"System.Drawing.ToolboxBitmapAttribute\"></xref> object does not already have a small image, this method searches for a bitmap resource in the assembly that defines the type of the object specified by the component parameter. For example, if you pass an object of type ControlA to the component parameter, then this method searches the assembly that defines ControlA.","nodes":[{"pos":[0,385],"content":"If this <xref href=\"System.Drawing.ToolboxBitmapAttribute\"></xref> object does not already have a small image, this method searches for a bitmap resource in the assembly that defines the type of the object specified by the component parameter. For example, if you pass an object of type ControlA to the component parameter, then this method searches the assembly that defines ControlA.","nodes":[{"content":"If this <ph id=\"ph1\">&lt;xref href=\"System.Drawing.ToolboxBitmapAttribute\"&gt;&lt;/xref&gt;</ph> object does not already have a small image, this method searches for a bitmap resource in the assembly that defines the type of the object specified by the component parameter.","pos":[0,243],"source":"If this <xref href=\"System.Drawing.ToolboxBitmapAttribute\"></xref> object does not already have a small image, this method searches for a bitmap resource in the assembly that defines the type of the object specified by the component parameter."},{"content":"For example, if you pass an object of type ControlA to the component parameter, then this method searches the assembly that defines ControlA.","pos":[244,385]}]}],"pos":[21985,22371],"yaml":true},{"content":"The small <xref href=\"System.Drawing.Image\"></xref> associated with this <xref href=\"System.Drawing.ToolboxBitmapAttribute\"></xref> object.","nodes":[{"pos":[0,139],"content":"The small <ph id=\"ph1\">&lt;xref href=\"System.Drawing.Image\"&gt;&lt;/xref&gt;</ph> associated with this <ph id=\"ph2\">&lt;xref href=\"System.Drawing.ToolboxBitmapAttribute\"&gt;&lt;/xref&gt;</ph> object.","source":"The small <xref href=\"System.Drawing.Image\"></xref> associated with this <xref href=\"System.Drawing.ToolboxBitmapAttribute\"></xref> object."}],"pos":[22435,22575],"yaml":true},{"content":"Gets the small <xref href=\"System.Drawing.Image\"></xref> associated with this <xref href=\"System.Drawing.ToolboxBitmapAttribute\"></xref> object.","nodes":[{"pos":[0,144],"content":"Gets the small <ph id=\"ph1\">&lt;xref href=\"System.Drawing.Image\"&gt;&lt;/xref&gt;</ph> associated with this <ph id=\"ph2\">&lt;xref href=\"System.Drawing.ToolboxBitmapAttribute\"&gt;&lt;/xref&gt;</ph> object.","source":"Gets the small <xref href=\"System.Drawing.Image\"></xref> associated with this <xref href=\"System.Drawing.ToolboxBitmapAttribute\"></xref> object."}],"pos":[23641,23786],"yaml":true},{"content":"This method searches for a resource named namespace.classname.bmp, where namespace is the namespace containing the definition of the type specified by the `type` parameter. For example, suppose you pass typeof(ControlA) to the `type` parameter. If ControlA is in NamespaceA in AssemblyA.dll, then this method searches AssemblyA.dll for a resource named NamespaceA.ControlA.bmp.","nodes":[{"pos":[0,377],"content":"This method searches for a resource named namespace.classname.bmp, where namespace is the namespace containing the definition of the type specified by the `type` parameter. For example, suppose you pass typeof(ControlA) to the `type` parameter. If ControlA is in NamespaceA in AssemblyA.dll, then this method searches AssemblyA.dll for a resource named NamespaceA.ControlA.bmp.","nodes":[{"content":"This method searches for a resource named namespace.classname.bmp, where namespace is the namespace containing the definition of the type specified by the <ph id=\"ph1\">`type`</ph> parameter.","pos":[0,172],"source":"This method searches for a resource named namespace.classname.bmp, where namespace is the namespace containing the definition of the type specified by the `type` parameter."},{"content":"For example, suppose you pass typeof(ControlA) to the <ph id=\"ph1\">`type`</ph> parameter.","pos":[173,244],"source":" For example, suppose you pass typeof(ControlA) to the `type` parameter."},{"content":"If ControlA is in NamespaceA in AssemblyA.dll, then this method searches AssemblyA.dll for a resource named NamespaceA.ControlA.bmp.","pos":[245,377]}]}],"pos":[23797,24175],"yaml":true,"extradata":"MT"},{"content":"If this <xref href=\"System.Drawing.ToolboxBitmapAttribute\"></xref> object does not already have a small image, this method searches for a bitmap resource in the assembly that defines the type specified by the type parameter. For example, if you pass typeof(ControlA) to the type parameter, then this method searches the assembly that defines ControlA.","nodes":[{"pos":[0,351],"content":"If this <xref href=\"System.Drawing.ToolboxBitmapAttribute\"></xref> object does not already have a small image, this method searches for a bitmap resource in the assembly that defines the type specified by the type parameter. For example, if you pass typeof(ControlA) to the type parameter, then this method searches the assembly that defines ControlA.","nodes":[{"content":"If this <ph id=\"ph1\">&lt;xref href=\"System.Drawing.ToolboxBitmapAttribute\"&gt;&lt;/xref&gt;</ph> object does not already have a small image, this method searches for a bitmap resource in the assembly that defines the type specified by the type parameter.","pos":[0,224],"source":"If this <xref href=\"System.Drawing.ToolboxBitmapAttribute\"></xref> object does not already have a small image, this method searches for a bitmap resource in the assembly that defines the type specified by the type parameter."},{"content":"For example, if you pass typeof(ControlA) to the type parameter, then this method searches the assembly that defines ControlA.","pos":[225,351]}]}],"pos":[24322,24674],"yaml":true},{"content":"The small <xref href=\"System.Drawing.Image\"></xref> associated with this <xref href=\"System.Drawing.ToolboxBitmapAttribute\"></xref> object.","nodes":[{"pos":[0,139],"content":"The small <ph id=\"ph1\">&lt;xref href=\"System.Drawing.Image\"&gt;&lt;/xref&gt;</ph> associated with this <ph id=\"ph2\">&lt;xref href=\"System.Drawing.ToolboxBitmapAttribute\"&gt;&lt;/xref&gt;</ph> object.","source":"The small <xref href=\"System.Drawing.Image\"></xref> associated with this <xref href=\"System.Drawing.ToolboxBitmapAttribute\"></xref> object."}],"pos":[24738,24878],"yaml":true},{"content":"Gets the small or large <xref href=\"System.Drawing.Image\"></xref> associated with this <xref href=\"System.Drawing.ToolboxBitmapAttribute\"></xref> object.","nodes":[{"pos":[0,153],"content":"Gets the small or large <ph id=\"ph1\">&lt;xref href=\"System.Drawing.Image\"&gt;&lt;/xref&gt;</ph> associated with this <ph id=\"ph2\">&lt;xref href=\"System.Drawing.ToolboxBitmapAttribute\"&gt;&lt;/xref&gt;</ph> object.","source":"Gets the small or large <xref href=\"System.Drawing.Image\"></xref> associated with this <xref href=\"System.Drawing.ToolboxBitmapAttribute\"></xref> object."}],"pos":[26028,26182],"yaml":true},{"content":"This method searches for a resource named namespace.classname.bmp, where namespace is the namespace containing the definition of the type of the object specified by the `component` parameter. For example, suppose you pass an object of type ControlA to the `component` parameter. If ControlA is in NamespaceA in AssemblyA.dll, then this method searches AssemblyA.dll for a resource named NamespaceA.ControlA.bmp.  \n  \n If this <xref:System.Drawing.ToolboxBitmapAttribute> object does not already have a large image, this method creates a large image by scaling the small image.","nodes":[{"pos":[0,411],"content":"This method searches for a resource named namespace.classname.bmp, where namespace is the namespace containing the definition of the type of the object specified by the `component` parameter. For example, suppose you pass an object of type ControlA to the `component` parameter. If ControlA is in NamespaceA in AssemblyA.dll, then this method searches AssemblyA.dll for a resource named NamespaceA.ControlA.bmp.","nodes":[{"content":"This method searches for a resource named namespace.classname.bmp, where namespace is the namespace containing the definition of the type of the object specified by the <ph id=\"ph1\">`component`</ph> parameter.","pos":[0,191],"source":"This method searches for a resource named namespace.classname.bmp, where namespace is the namespace containing the definition of the type of the object specified by the `component` parameter."},{"content":"For example, suppose you pass an object of type ControlA to the <ph id=\"ph1\">`component`</ph> parameter.","pos":[192,278],"source":" For example, suppose you pass an object of type ControlA to the `component` parameter."},{"content":"If ControlA is in NamespaceA in AssemblyA.dll, then this method searches AssemblyA.dll for a resource named NamespaceA.ControlA.bmp.","pos":[279,411]}]},{"pos":[418,576],"content":"If this <xref:System.Drawing.ToolboxBitmapAttribute> object does not already have a large image, this method creates a large image by scaling the small image.","nodes":[{"content":"If this <ph id=\"ph1\">&lt;xref:System.Drawing.ToolboxBitmapAttribute&gt;</ph> object does not already have a large image, this method creates a large image by scaling the small image.","pos":[0,158],"source":"If this <xref:System.Drawing.ToolboxBitmapAttribute> object does not already have a large image, this method creates a large image by scaling the small image."}]}],"pos":[26193,26774],"yaml":true,"extradata":"MT"},{"content":"If this <xref href=\"System.Drawing.ToolboxBitmapAttribute\"></xref> object does not already have a small image, this method searches for a bitmap resource in the assembly that defines the type of the object specified by the component parameter. For example, if you pass an object of type ControlA to the component parameter, then this method searches the assembly that defines ControlA.","nodes":[{"pos":[0,385],"content":"If this <xref href=\"System.Drawing.ToolboxBitmapAttribute\"></xref> object does not already have a small image, this method searches for a bitmap resource in the assembly that defines the type of the object specified by the component parameter. For example, if you pass an object of type ControlA to the component parameter, then this method searches the assembly that defines ControlA.","nodes":[{"content":"If this <ph id=\"ph1\">&lt;xref href=\"System.Drawing.ToolboxBitmapAttribute\"&gt;&lt;/xref&gt;</ph> object does not already have a small image, this method searches for a bitmap resource in the assembly that defines the type of the object specified by the component parameter.","pos":[0,243],"source":"If this <xref href=\"System.Drawing.ToolboxBitmapAttribute\"></xref> object does not already have a small image, this method searches for a bitmap resource in the assembly that defines the type of the object specified by the component parameter."},{"content":"For example, if you pass an object of type ControlA to the component parameter, then this method searches the assembly that defines ControlA.","pos":[244,385]}]}],"pos":[26947,27333],"yaml":true},{"content":"Specifies whether this method returns a large image (`true`) or a small image (`false`). The small image is 16 by 16, and the large image is 32 by 32.","nodes":[{"pos":[0,150],"content":"Specifies whether this method returns a large image (`true`) or a small image (`false`). The small image is 16 by 16, and the large image is 32 by 32.","nodes":[{"content":"Specifies whether this method returns a large image (<ph id=\"ph1\">`true`</ph>) or a small image (<ph id=\"ph2\">`false`</ph>).","pos":[0,88],"source":"Specifies whether this method returns a large image (`true`) or a small image (`false`)."},{"content":"The small image is 16 by 16, and the large image is 32 by 32.","pos":[89,150]}]}],"pos":[27395,27546],"yaml":true},{"content":"An <xref href=\"System.Drawing.Image\"></xref> object associated with this <xref href=\"System.Drawing.ToolboxBitmapAttribute\"></xref> object.","nodes":[{"pos":[0,139],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Drawing.Image\"&gt;&lt;/xref&gt;</ph> object associated with this <ph id=\"ph2\">&lt;xref href=\"System.Drawing.ToolboxBitmapAttribute\"&gt;&lt;/xref&gt;</ph> object.","source":"An <xref href=\"System.Drawing.Image\"></xref> object associated with this <xref href=\"System.Drawing.ToolboxBitmapAttribute\"></xref> object."}],"pos":[27610,27750],"yaml":true},{"content":"Gets the small or large <xref href=\"System.Drawing.Image\"></xref> associated with this <xref href=\"System.Drawing.ToolboxBitmapAttribute\"></xref> object.","nodes":[{"pos":[0,153],"content":"Gets the small or large <ph id=\"ph1\">&lt;xref href=\"System.Drawing.Image\"&gt;&lt;/xref&gt;</ph> associated with this <ph id=\"ph2\">&lt;xref href=\"System.Drawing.ToolboxBitmapAttribute\"&gt;&lt;/xref&gt;</ph> object.","source":"Gets the small or large <xref href=\"System.Drawing.Image\"></xref> associated with this <xref href=\"System.Drawing.ToolboxBitmapAttribute\"></xref> object."}],"pos":[28888,29042],"yaml":true},{"content":"This method searches for a resource named namespace.classname.bmp, where namespace is the namespace containing the definition of the type specified by the `type` parameter. For example, suppose you pass an typeof(ControlA) to the `type` parameter. If ControlA is in NamespaceA in AssemblyA.dll, then this method searches AssemblyA.dll for a resource named NamespaceA.ControlA.bmp.  \n  \n If this <xref:System.Drawing.ToolboxBitmapAttribute> object does not already have a large image, this method creates a large image by scaling the small image.","nodes":[{"pos":[0,380],"content":"This method searches for a resource named namespace.classname.bmp, where namespace is the namespace containing the definition of the type specified by the `type` parameter. For example, suppose you pass an typeof(ControlA) to the `type` parameter. If ControlA is in NamespaceA in AssemblyA.dll, then this method searches AssemblyA.dll for a resource named NamespaceA.ControlA.bmp.","nodes":[{"content":"This method searches for a resource named namespace.classname.bmp, where namespace is the namespace containing the definition of the type specified by the <ph id=\"ph1\">`type`</ph> parameter.","pos":[0,172],"source":"This method searches for a resource named namespace.classname.bmp, where namespace is the namespace containing the definition of the type specified by the `type` parameter."},{"content":"For example, suppose you pass an typeof(ControlA) to the <ph id=\"ph1\">`type`</ph> parameter.","pos":[173,247],"source":" For example, suppose you pass an typeof(ControlA) to the `type` parameter."},{"content":"If ControlA is in NamespaceA in AssemblyA.dll, then this method searches AssemblyA.dll for a resource named NamespaceA.ControlA.bmp.","pos":[248,380]}]},{"pos":[387,545],"content":"If this <xref:System.Drawing.ToolboxBitmapAttribute> object does not already have a large image, this method creates a large image by scaling the small image.","nodes":[{"content":"If this <ph id=\"ph1\">&lt;xref:System.Drawing.ToolboxBitmapAttribute&gt;</ph> object does not already have a large image, this method creates a large image by scaling the small image.","pos":[0,158],"source":"If this <xref:System.Drawing.ToolboxBitmapAttribute> object does not already have a large image, this method creates a large image by scaling the small image."}]}],"pos":[29053,29603],"yaml":true,"extradata":"MT"},{"content":"If this <xref href=\"System.Drawing.ToolboxBitmapAttribute\"></xref> object does not already have a small image, this method searches for a bitmap resource in the assembly that defines the type specified by the component type. For example, if you pass typeof(ControlA) to the type parameter, then this method searches the assembly that defines ControlA.","nodes":[{"pos":[0,351],"content":"If this <xref href=\"System.Drawing.ToolboxBitmapAttribute\"></xref> object does not already have a small image, this method searches for a bitmap resource in the assembly that defines the type specified by the component type. For example, if you pass typeof(ControlA) to the type parameter, then this method searches the assembly that defines ControlA.","nodes":[{"content":"If this <ph id=\"ph1\">&lt;xref href=\"System.Drawing.ToolboxBitmapAttribute\"&gt;&lt;/xref&gt;</ph> object does not already have a small image, this method searches for a bitmap resource in the assembly that defines the type specified by the component type.","pos":[0,224],"source":"If this <xref href=\"System.Drawing.ToolboxBitmapAttribute\"></xref> object does not already have a small image, this method searches for a bitmap resource in the assembly that defines the type specified by the component type."},{"content":"For example, if you pass typeof(ControlA) to the type parameter, then this method searches the assembly that defines ControlA.","pos":[225,351]}]}],"pos":[29762,30114],"yaml":true},{"content":"Specifies whether this method returns a large image (`true`) or a small image (`false`). The small image is 16 by 16, and the large image is 32 by 32.","nodes":[{"pos":[0,150],"content":"Specifies whether this method returns a large image (`true`) or a small image (`false`). The small image is 16 by 16, and the large image is 32 by 32.","nodes":[{"content":"Specifies whether this method returns a large image (<ph id=\"ph1\">`true`</ph>) or a small image (<ph id=\"ph2\">`false`</ph>).","pos":[0,88],"source":"Specifies whether this method returns a large image (`true`) or a small image (`false`)."},{"content":"The small image is 16 by 16, and the large image is 32 by 32.","pos":[89,150]}]}],"pos":[30176,30327],"yaml":true},{"content":"An <xref href=\"System.Drawing.Image\"></xref> associated with this <xref href=\"System.Drawing.ToolboxBitmapAttribute\"></xref> object.","nodes":[{"pos":[0,132],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Drawing.Image\"&gt;&lt;/xref&gt;</ph> associated with this <ph id=\"ph2\">&lt;xref href=\"System.Drawing.ToolboxBitmapAttribute\"&gt;&lt;/xref&gt;</ph> object.","source":"An <xref href=\"System.Drawing.Image\"></xref> associated with this <xref href=\"System.Drawing.ToolboxBitmapAttribute\"></xref> object."}],"pos":[30391,30524],"yaml":true},{"content":"Gets the small or large <xref href=\"System.Drawing.Image\"></xref> associated with this <xref href=\"System.Drawing.ToolboxBitmapAttribute\"></xref> object.","nodes":[{"pos":[0,153],"content":"Gets the small or large <ph id=\"ph1\">&lt;xref href=\"System.Drawing.Image\"&gt;&lt;/xref&gt;</ph> associated with this <ph id=\"ph2\">&lt;xref href=\"System.Drawing.ToolboxBitmapAttribute\"&gt;&lt;/xref&gt;</ph> object.","source":"Gets the small or large <xref href=\"System.Drawing.Image\"></xref> associated with this <xref href=\"System.Drawing.ToolboxBitmapAttribute\"></xref> object."}],"pos":[31728,31882],"yaml":true},{"content":"This method searches for a resource named namespace.imgName, where namespace is the namespace containing the definition of the type specified by the `type` parameter. For example, suppose you pass typeof(ControlA) to the `type` parameter and that you passed \"MyBitmap.bmp\" to the imgName parameter. If ControlA is in NamespaceA in AssemblyA.dll, then this method searches AssemblyA.dll for a resource named NamespaceA.MyBitmap.bmp.  \n  \n If this <xref:System.Drawing.ToolboxBitmapAttribute> object does not already have a large image, this method creates a large image by scaling the small image.","nodes":[{"pos":[0,431],"content":"This method searches for a resource named namespace.imgName, where namespace is the namespace containing the definition of the type specified by the `type` parameter. For example, suppose you pass typeof(ControlA) to the `type` parameter and that you passed \"MyBitmap.bmp\" to the imgName parameter. If ControlA is in NamespaceA in AssemblyA.dll, then this method searches AssemblyA.dll for a resource named NamespaceA.MyBitmap.bmp.","nodes":[{"content":"This method searches for a resource named namespace.imgName, where namespace is the namespace containing the definition of the type specified by the <ph id=\"ph1\">`type`</ph> parameter.","pos":[0,166],"source":"This method searches for a resource named namespace.imgName, where namespace is the namespace containing the definition of the type specified by the `type` parameter."},{"content":"For example, suppose you pass typeof(ControlA) to the <ph id=\"ph1\">`type`</ph> parameter and that you passed \"MyBitmap.bmp\" to the imgName parameter.","pos":[167,298],"source":" For example, suppose you pass typeof(ControlA) to the `type` parameter and that you passed \"MyBitmap.bmp\" to the imgName parameter."},{"content":"If ControlA is in NamespaceA in AssemblyA.dll, then this method searches AssemblyA.dll for a resource named NamespaceA.MyBitmap.bmp.","pos":[299,431]}]},{"pos":[438,596],"content":"If this <xref:System.Drawing.ToolboxBitmapAttribute> object does not already have a large image, this method creates a large image by scaling the small image.","nodes":[{"content":"If this <ph id=\"ph1\">&lt;xref:System.Drawing.ToolboxBitmapAttribute&gt;</ph> object does not already have a large image, this method creates a large image by scaling the small image.","pos":[0,158],"source":"If this <xref:System.Drawing.ToolboxBitmapAttribute> object does not already have a large image, this method creates a large image by scaling the small image."}]}],"pos":[31893,32496],"yaml":true,"extradata":"MT"},{"content":"If this <xref href=\"System.Drawing.ToolboxBitmapAttribute\"></xref> object does not already have a small image, this method searches for an embedded bitmap resource in the assembly that defines the type specified by the component type. For example, if you pass typeof(ControlA) to the type parameter, then this method searches the assembly that defines ControlA.","nodes":[{"pos":[0,361],"content":"If this <xref href=\"System.Drawing.ToolboxBitmapAttribute\"></xref> object does not already have a small image, this method searches for an embedded bitmap resource in the assembly that defines the type specified by the component type. For example, if you pass typeof(ControlA) to the type parameter, then this method searches the assembly that defines ControlA.","nodes":[{"content":"If this <ph id=\"ph1\">&lt;xref href=\"System.Drawing.ToolboxBitmapAttribute\"&gt;&lt;/xref&gt;</ph> object does not already have a small image, this method searches for an embedded bitmap resource in the assembly that defines the type specified by the component type.","pos":[0,234],"source":"If this <xref href=\"System.Drawing.ToolboxBitmapAttribute\"></xref> object does not already have a small image, this method searches for an embedded bitmap resource in the assembly that defines the type specified by the component type."},{"content":"For example, if you pass typeof(ControlA) to the type parameter, then this method searches the assembly that defines ControlA.","pos":[235,361]}]}],"pos":[32671,33033],"yaml":true},{"content":"The name of the embedded bitmap resource.","nodes":[{"pos":[0,41],"content":"The name of the embedded bitmap resource.","nodes":[{"content":"The name of the embedded bitmap resource.","pos":[0,41]}]}],"pos":[33096,33138],"yaml":true},{"content":"Specifies whether this method returns a large image (`true`) or a small image (`false`). The small image is 16 by 16, and the large image is 32 by 32.","nodes":[{"pos":[0,150],"content":"Specifies whether this method returns a large image (`true`) or a small image (`false`). The small image is 16 by 16, and the large image is 32 by 32.","nodes":[{"content":"Specifies whether this method returns a large image (<ph id=\"ph1\">`true`</ph>) or a small image (<ph id=\"ph2\">`false`</ph>).","pos":[0,88],"source":"Specifies whether this method returns a large image (`true`) or a small image (`false`)."},{"content":"The small image is 16 by 16, and the large image is 32 by 32.","pos":[89,150]}]}],"pos":[33200,33351],"yaml":true},{"content":"An <xref href=\"System.Drawing.Image\"></xref> associated with this <xref href=\"System.Drawing.ToolboxBitmapAttribute\"></xref> object.","nodes":[{"pos":[0,132],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Drawing.Image\"&gt;&lt;/xref&gt;</ph> associated with this <ph id=\"ph2\">&lt;xref href=\"System.Drawing.ToolboxBitmapAttribute\"&gt;&lt;/xref&gt;</ph> object.","source":"An <xref href=\"System.Drawing.Image\"></xref> associated with this <xref href=\"System.Drawing.ToolboxBitmapAttribute\"></xref> object."}],"pos":[33415,33548],"yaml":true},{"content":"Returns an <xref href=\"System.Drawing.Image\"></xref> object based on a bitmap resource that is embedded in an assembly.","nodes":[{"pos":[0,119],"content":"Returns an <ph id=\"ph1\">&lt;xref href=\"System.Drawing.Image\"&gt;&lt;/xref&gt;</ph> object based on a bitmap resource that is embedded in an assembly.","source":"Returns an <xref href=\"System.Drawing.Image\"></xref> object based on a bitmap resource that is embedded in an assembly."}],"pos":[34824,34944],"yaml":true},{"content":"This method searches for a resource named namespace.imgName, where namespace is the namespace containing the definition of the type specified by the `t` parameter. For example, suppose you pass typeof(ControlA) to the `t` parameter and you pass \"MyBitmap.bmp\" to the imgName parameter. If ControlA is in NamespaceA in AssemblyA.dll, then this method searches AssemblyA.dll for a resource named NamespaceA.MyBitmap.bmp.  \n  \n This method is intended to retrieve a 16 x 16 bitmap resource that is embedded in an assembly. However, there is no requirement that the embedded bitmap has a size of 16 x 16. The bitmap that is retrieved from the assembly (no matter what size) is considered the small image. The large image is created by scaling the \"small\" image to a size of 32 x 32. So the large image will always be 32 by 32, regardless of the size of the bitmap retrieved from the assembly.","nodes":[{"pos":[0,418],"content":"This method searches for a resource named namespace.imgName, where namespace is the namespace containing the definition of the type specified by the `t` parameter. For example, suppose you pass typeof(ControlA) to the `t` parameter and you pass \"MyBitmap.bmp\" to the imgName parameter. If ControlA is in NamespaceA in AssemblyA.dll, then this method searches AssemblyA.dll for a resource named NamespaceA.MyBitmap.bmp.","nodes":[{"content":"This method searches for a resource named namespace.imgName, where namespace is the namespace containing the definition of the type specified by the <ph id=\"ph1\">`t`</ph> parameter.","pos":[0,163],"source":"This method searches for a resource named namespace.imgName, where namespace is the namespace containing the definition of the type specified by the `t` parameter."},{"content":"For example, suppose you pass typeof(ControlA) to the <ph id=\"ph1\">`t`</ph> parameter and you pass \"MyBitmap.bmp\" to the imgName parameter.","pos":[164,285],"source":" For example, suppose you pass typeof(ControlA) to the `t` parameter and you pass \"MyBitmap.bmp\" to the imgName parameter."},{"content":"If ControlA is in NamespaceA in AssemblyA.dll, then this method searches AssemblyA.dll for a resource named NamespaceA.MyBitmap.bmp.","pos":[286,418]}]},{"pos":[425,888],"content":"This method is intended to retrieve a 16 x 16 bitmap resource that is embedded in an assembly. However, there is no requirement that the embedded bitmap has a size of 16 x 16. The bitmap that is retrieved from the assembly (no matter what size) is considered the small image. The large image is created by scaling the \"small\" image to a size of 32 x 32. So the large image will always be 32 by 32, regardless of the size of the bitmap retrieved from the assembly.","nodes":[{"content":"This method is intended to retrieve a 16 x 16 bitmap resource that is embedded in an assembly. However, there is no requirement that the embedded bitmap has a size of 16 x 16. The bitmap that is retrieved from the assembly (no matter what size) is considered the small image. The large image is created by scaling the \"small\" image to a size of 32 x 32. So the large image will always be 32 by 32, regardless of the size of the bitmap retrieved from the assembly.","pos":[0,463],"nodes":[{"content":"This method is intended to retrieve a 16 x 16 bitmap resource that is embedded in an assembly.","pos":[0,94]},{"content":"However, there is no requirement that the embedded bitmap has a size of 16 x 16.","pos":[95,175]},{"content":"The bitmap that is retrieved from the assembly (no matter what size) is considered the small image.","pos":[176,275]},{"content":"The large image is created by scaling the \"small\" image to a size of 32 x 32.","pos":[276,353]},{"content":"So the large image will always be 32 by 32, regardless of the size of the bitmap retrieved from the assembly.","pos":[354,463]}]}]}],"pos":[34955,35852],"yaml":true,"extradata":"MT"},{"content":"This method searches for an embedded bitmap resource in the assembly that defines the type specified by the t parameter. For example, if you pass typeof(ControlA) to the t parameter, then this method searches the assembly that defines ControlA.","nodes":[{"pos":[0,244],"content":"This method searches for an embedded bitmap resource in the assembly that defines the type specified by the t parameter. For example, if you pass typeof(ControlA) to the t parameter, then this method searches the assembly that defines ControlA.","nodes":[{"content":"This method searches for an embedded bitmap resource in the assembly that defines the type specified by the t parameter. For example, if you pass typeof(ControlA) to the t parameter, then this method searches the assembly that defines ControlA.","pos":[0,244],"nodes":[{"content":"This method searches for an embedded bitmap resource in the assembly that defines the type specified by the t parameter.","pos":[0,120]},{"content":"For example, if you pass typeof(ControlA) to the t parameter, then this method searches the assembly that defines ControlA.","pos":[121,244]}]}]}],"pos":[36042,36287],"yaml":true},{"content":"The name of the embedded bitmap resource.","nodes":[{"pos":[0,41],"content":"The name of the embedded bitmap resource.","nodes":[{"content":"The name of the embedded bitmap resource.","pos":[0,41]}]}],"pos":[36352,36394],"yaml":true},{"content":"Specifies whether this method returns a large image (true)or a small image (false). The small image is 16 by 16, and the large image is 32 x 32.","nodes":[{"pos":[0,144],"content":"Specifies whether this method returns a large image (true)or a small image (false). The small image is 16 by 16, and the large image is 32 x 32.","nodes":[{"content":"Specifies whether this method returns a large image (true)or a small image (false). The small image is 16 by 16, and the large image is 32 x 32.","pos":[0,144],"nodes":[{"content":"Specifies whether this method returns a large image (true)or a small image (false).","pos":[0,83]},{"content":"The small image is 16 by 16, and the large image is 32 x 32.","pos":[84,144]}]}]}],"pos":[36456,36601],"yaml":true},{"content":"An <xref href=\"System.Drawing.Image\"></xref> object based on the retrieved bitmap.","nodes":[{"pos":[0,82],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Drawing.Image\"&gt;&lt;/xref&gt;</ph> object based on the retrieved bitmap.","source":"An <xref href=\"System.Drawing.Image\"></xref> object based on the retrieved bitmap."}],"pos":[36665,36748],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Drawing.ToolboxBitmapAttribute\n  commentId: T:System.Drawing.ToolboxBitmapAttribute\n  id: ToolboxBitmapAttribute\n  children:\n  - System.Drawing.ToolboxBitmapAttribute.#ctor(System.String)\n  - System.Drawing.ToolboxBitmapAttribute.#ctor(System.Type)\n  - System.Drawing.ToolboxBitmapAttribute.#ctor(System.Type,System.String)\n  - System.Drawing.ToolboxBitmapAttribute.Default\n  - System.Drawing.ToolboxBitmapAttribute.Equals(System.Object)\n  - System.Drawing.ToolboxBitmapAttribute.GetHashCode\n  - System.Drawing.ToolboxBitmapAttribute.GetImage(System.Object)\n  - System.Drawing.ToolboxBitmapAttribute.GetImage(System.Type)\n  - System.Drawing.ToolboxBitmapAttribute.GetImage(System.Object,System.Boolean)\n  - System.Drawing.ToolboxBitmapAttribute.GetImage(System.Type,System.Boolean)\n  - System.Drawing.ToolboxBitmapAttribute.GetImage(System.Type,System.String,System.Boolean)\n  - System.Drawing.ToolboxBitmapAttribute.GetImageFromResource(System.Type,System.String,System.Boolean)\n  langs:\n  - csharp\n  name: ToolboxBitmapAttribute\n  nameWithType: ToolboxBitmapAttribute\n  fullName: System.Drawing.ToolboxBitmapAttribute\n  type: Class\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing\n  summary: Allows you to specify an icon to represent a control in a container, such as the Microsoft Visual Studio Form Designer.\n  remarks: \"You can apply a <xref:System.Drawing.ToolboxBitmapAttribute> to a control so that containers, such as Microsoft Visual Studio Form Designer, can retrieve an icon that represents the control. The bitmap for the icon can be in a file by itself or embedded in the assembly that contains the control. The size of the bitmap that you embed in the control's assembly (or store in a separate file) should be 16 by 16. The <xref:System.Drawing.ToolboxBitmapAttribute.GetImage%2A> method of a <xref:System.Drawing.ToolboxBitmapAttribute> object can return the small 16 by 16 image or a large 32 by 32 image that it creates by scaling the small image.  \\n  \\n If you want to use different versions of your icons with different versions of your assembly, you do not have to modify the <xref:System.Drawing.ToolboxBitmapAttribute> for each version. Instead, you can declare the assembly with a <xref:System.Drawing.BitmapSuffixInSameAssemblyAttribute> or a <xref:System.Drawing.BitmapSuffixInSatelliteAssemblyAttribute>, and specify a <xref:System.Drawing.Configuration.SystemDrawingSection.BitmapSuffix%2A> configuration value for each assembly version. In this case, a file name indicated by a <xref:System.Drawing.ToolboxBitmapAttribute> is interpreted with the bitmap suffix appended.\"\n  example:\n  - \"The following code example demonstrates how to use the <xref:System.Drawing.ToolboxBitmapAttribute> class to set `stop.bmp` as the toolbox icon for the `StopSignControl`. This example assumes the existence of a 16-by-16-pixel bitmap named `stop.bmp` at c:\\\\\\\\.  \\n  \\n [!code-cpp[System.Drawing.ToolBoxBitmapExamples#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ToolBoxBitmapExamples/cpp/usercontrol1.cpp#1)]\\n [!code-csharp[System.Drawing.ToolBoxBitmapExamples#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ToolBoxBitmapExamples/CS/usercontrol1.cs#1)]\\n [!code-vb[System.Drawing.ToolBoxBitmapExamples#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ToolBoxBitmapExamples/VB/usercontrol1.vb#1)]\"\n  syntax:\n    content: >-\n      [System.AttributeUsage(System.AttributeTargets.Class)]\n\n      public class ToolboxBitmapAttribute : Attribute\n  inheritance:\n  - System.Object\n  - System.Attribute\n  implements: []\n  inheritedMembers:\n  - System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type)\n  - System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)\n  - System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type)\n  - System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type)\n  - System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo)\n  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)\n  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Module)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo)\n  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type)\n  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  - System.Attribute.IsDefaultAttribute\n  - System.Attribute.IsDefined(System.Reflection.Assembly,System.Type)\n  - System.Attribute.IsDefined(System.Reflection.Assembly,System.Type,System.Boolean)\n  - System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type)\n  - System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  - System.Attribute.IsDefined(System.Reflection.Module,System.Type)\n  - System.Attribute.IsDefined(System.Reflection.Module,System.Type,System.Boolean)\n  - System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type)\n  - System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  - System.Attribute.Match(System.Object)\n  - System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)\n  - System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)\n  - System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)\n  - System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)\n  - System.Attribute.TypeId\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  attributes:\n  - type: System.AttributeUsageAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing/ToolboxBitmapAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Drawing.ToolboxBitmapAttribute.#ctor(System.String)\n  commentId: M:System.Drawing.ToolboxBitmapAttribute.#ctor(System.String)\n  id: '#ctor(System.String)'\n  parent: System.Drawing.ToolboxBitmapAttribute\n  langs:\n  - csharp\n  name: ToolboxBitmapAttribute(String)\n  nameWithType: ToolboxBitmapAttribute.ToolboxBitmapAttribute(String)\n  fullName: ToolboxBitmapAttribute.ToolboxBitmapAttribute(String)\n  type: Constructor\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing\n  summary: Initializes a new <xref href=\"System.Drawing.ToolboxBitmapAttribute\"></xref> object with an image from a specified file.\n  remarks: ''\n  example:\n  - \"The following code example demonstrates how to use the <xref:System.Drawing.ToolboxBitmapAttribute.%23ctor%2A> constructor to set `stop.bmp` as the toolbox icon for the `StopSignControl`. This example assumes the existence of a 16-by-16-pixel bitmap named `stop.bmp` at c:\\\\\\\\.  \\n  \\n [!code-cpp[System.Drawing.ToolBoxBitmapExamples#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ToolBoxBitmapExamples/cpp/usercontrol1.cpp#1)]\\n [!code-csharp[System.Drawing.ToolBoxBitmapExamples#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ToolBoxBitmapExamples/CS/usercontrol1.cs#1)]\\n [!code-vb[System.Drawing.ToolBoxBitmapExamples#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ToolBoxBitmapExamples/VB/usercontrol1.vb#1)]\"\n  syntax:\n    content: public ToolboxBitmapAttribute (string imageFile);\n    parameters:\n    - id: imageFile\n      type: System.String\n      description: The name of a file that contains a 16 by 16 bitmap.\n  overload: System.Drawing.ToolboxBitmapAttribute.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing/ToolboxBitmapAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Drawing.ToolboxBitmapAttribute.#ctor(System.Type)\n  commentId: M:System.Drawing.ToolboxBitmapAttribute.#ctor(System.Type)\n  id: '#ctor(System.Type)'\n  parent: System.Drawing.ToolboxBitmapAttribute\n  langs:\n  - csharp\n  name: ToolboxBitmapAttribute(Type)\n  nameWithType: ToolboxBitmapAttribute.ToolboxBitmapAttribute(Type)\n  fullName: ToolboxBitmapAttribute.ToolboxBitmapAttribute(Type)\n  type: Constructor\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing\n  summary: Initializes a new <xref href=\"System.Drawing.ToolboxBitmapAttribute\"></xref> object based on a 16 x 16 bitmap that is embedded as a resource in a specified assembly.\n  remarks: This constructor searches for an embedded resource in the assembly that defines the type specified by the `t` parameter. The constructor searches for a resource named namespace.classname.bmp, where namespace is the namespace containing the definition of the class specified by the `t` parameter. For example, if ControlA is in NamespaceA in AssemblyA.dll, then the constructor searches AssemblyA.dll for a resource named NamespaceA.ControlA.bmp.\n  example:\n  - \"The following code example demonstrates how to use the <xref:System.Drawing.ToolboxBitmapAttribute.%23ctor%2A> constructor to set the icon of the button control to the toolbox icon for a <xref:System.Windows.Forms.UserControl> named `StopSignControl3`.  \\n  \\n [!code-cpp[System.Drawing.ToolBoxBitmapExamples#3](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ToolBoxBitmapExamples/cpp/usercontrol1.cpp#3)]\\n [!code-csharp[System.Drawing.ToolBoxBitmapExamples#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ToolBoxBitmapExamples/CS/usercontrol1.cs#3)]\\n [!code-vb[System.Drawing.ToolBoxBitmapExamples#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ToolBoxBitmapExamples/VB/usercontrol1.vb#3)]\"\n  syntax:\n    content: public ToolboxBitmapAttribute (Type t);\n    parameters:\n    - id: t\n      type: System.Type\n      description: A <xref href=\"System.Type\"></xref> whose defining assembly is searched for the bitmap resource.\n  overload: System.Drawing.ToolboxBitmapAttribute.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing/ToolboxBitmapAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Drawing.ToolboxBitmapAttribute.#ctor(System.Type,System.String)\n  commentId: M:System.Drawing.ToolboxBitmapAttribute.#ctor(System.Type,System.String)\n  id: '#ctor(System.Type,System.String)'\n  parent: System.Drawing.ToolboxBitmapAttribute\n  langs:\n  - csharp\n  name: ToolboxBitmapAttribute(Type, String)\n  nameWithType: ToolboxBitmapAttribute.ToolboxBitmapAttribute(Type, String)\n  fullName: ToolboxBitmapAttribute.ToolboxBitmapAttribute(Type, String)\n  type: Constructor\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing\n  summary: Initializes a new <xref href=\"System.Drawing.ToolboxBitmapAttribute\"></xref> object based on a 16 by 16 bitmap that is embedded as a resource in a specified assembly.\n  remarks: This constructor searches for an embedded resource in the assembly that defines the type specified by the `t` parameter. The constructor searches for a resource named namespace.name, where namespace is the namespace containing the definition of the class specified by the `t` parameter. For example, suppose that ControlA is a class in NamespaceA in AssemblyA.dll and that you passed \"MyBitmap.bmp\" to the `name` parameter. Then the constructor searches AssemblyA.dll for a resource named NamespaceA.MyBitmap.bmp.\n  example:\n  - \"'The following code example demonstrates how to use the <xref:System.Drawing.ToolboxBitmapAttribute.%23ctor%2A> constructor to set `StopSignControl2.bmp` as a toolbox icon for the `StopSignControl2`. This example assumes the existence of a 16-by-16-pixel bitmap named `StopSignControl2.bmp` with its **BuildAction** property set to **EmbeddedResource**.  \\n  \\n [!code-cpp[System.Drawing.ToolBoxBitmapExamples#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ToolBoxBitmapExamples/cpp/usercontrol1.cpp#2)]\\n [!code-csharp[System.Drawing.ToolBoxBitmapExamples#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ToolBoxBitmapExamples/CS/usercontrol1.cs#2)]\\n [!code-vb[System.Drawing.ToolBoxBitmapExamples#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ToolBoxBitmapExamples/VB/usercontrol1.vb#2)]\"\n  syntax:\n    content: public ToolboxBitmapAttribute (Type t, string name);\n    parameters:\n    - id: t\n      type: System.Type\n      description: A <xref href=\"System.Type\"></xref> whose defining assembly is searched for the bitmap resource.\n    - id: name\n      type: System.String\n      description: The name of the embedded bitmap resource.\n  overload: System.Drawing.ToolboxBitmapAttribute.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing/ToolboxBitmapAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Drawing.ToolboxBitmapAttribute.Default\n  commentId: F:System.Drawing.ToolboxBitmapAttribute.Default\n  id: Default\n  parent: System.Drawing.ToolboxBitmapAttribute\n  langs:\n  - csharp\n  name: Default\n  nameWithType: ToolboxBitmapAttribute.Default\n  fullName: ToolboxBitmapAttribute.Default\n  type: Field\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing\n  summary: A <xref href=\"System.Drawing.ToolboxBitmapAttribute\"></xref> object that has its small image and its large image set to `null`.\n  syntax:\n    content: public static readonly System.Drawing.ToolboxBitmapAttribute Default;\n    return:\n      type: System.Drawing.ToolboxBitmapAttribute\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing/ToolboxBitmapAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Drawing.ToolboxBitmapAttribute.Equals(System.Object)\n  commentId: M:System.Drawing.ToolboxBitmapAttribute.Equals(System.Object)\n  id: Equals(System.Object)\n  parent: System.Drawing.ToolboxBitmapAttribute\n  langs:\n  - csharp\n  name: Equals(Object)\n  nameWithType: ToolboxBitmapAttribute.Equals(Object)\n  fullName: ToolboxBitmapAttribute.Equals(Object)\n  type: Method\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing\n  summary: Indicates whether the specified object is a <xref href=\"System.Drawing.ToolboxBitmapAttribute\"></xref> object and is identical to this <xref href=\"System.Drawing.ToolboxBitmapAttribute\"></xref> object.\n  syntax:\n    content: public override bool Equals (object value);\n    parameters:\n    - id: value\n      type: System.Object\n      description: The <xref href=\"System.Object\"></xref> to test.\n    return:\n      type: System.Boolean\n      description: This method returns `true` if <code>value</code> is both a <xref href=\"System.Drawing.ToolboxBitmapAttribute\"></xref> object and is identical to this <xref href=\"System.Drawing.ToolboxBitmapAttribute\"></xref> object.\n  overload: System.Drawing.ToolboxBitmapAttribute.Equals*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing/ToolboxBitmapAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Drawing.ToolboxBitmapAttribute.GetHashCode\n  commentId: M:System.Drawing.ToolboxBitmapAttribute.GetHashCode\n  id: GetHashCode\n  parent: System.Drawing.ToolboxBitmapAttribute\n  langs:\n  - csharp\n  name: GetHashCode()\n  nameWithType: ToolboxBitmapAttribute.GetHashCode()\n  fullName: ToolboxBitmapAttribute.GetHashCode()\n  type: Method\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing\n  summary: Gets a hash code for this <xref href=\"System.Drawing.ToolboxBitmapAttribute\"></xref> object.\n  syntax:\n    content: public override int GetHashCode ();\n    parameters: []\n    return:\n      type: System.Int32\n      description: The hash code for this <xref href=\"System.Drawing.ToolboxBitmapAttribute\"></xref> object.\n  overload: System.Drawing.ToolboxBitmapAttribute.GetHashCode*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing/ToolboxBitmapAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Drawing.ToolboxBitmapAttribute.GetImage(System.Object)\n  commentId: M:System.Drawing.ToolboxBitmapAttribute.GetImage(System.Object)\n  id: GetImage(System.Object)\n  parent: System.Drawing.ToolboxBitmapAttribute\n  langs:\n  - csharp\n  name: GetImage(Object)\n  nameWithType: ToolboxBitmapAttribute.GetImage(Object)\n  fullName: ToolboxBitmapAttribute.GetImage(Object)\n  type: Method\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing\n  summary: Gets the small <xref href=\"System.Drawing.Image\"></xref> associated with this <xref href=\"System.Drawing.ToolboxBitmapAttribute\"></xref> object.\n  remarks: This method searches for a resource named namespace.classname.bmp, where namespace is the namespace containing the definition of the type of the object specified by the `component` parameter. For example, suppose you pass an object of type ControlA to the `component` parameter. If ControlA is in NamespaceA in AssemblyA.dll, then this method searches AssemblyA.dll for a resource named NamespaceA.ControlA.bmp.\n  example:\n  - \"The following example demonstrates how to use the <xref:System.Drawing.ToolboxBitmapAttribute.GetImage%2A> method.  \\n  \\n [!code-cpp[System.Drawing.ToolBoxBitmapExamples#4](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ToolBoxBitmapExamples/cpp/usercontrol1.cpp#4)]\\n [!code-csharp[System.Drawing.ToolBoxBitmapExamples#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ToolBoxBitmapExamples/CS/usercontrol1.cs#4)]\\n [!code-vb[System.Drawing.ToolBoxBitmapExamples#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ToolBoxBitmapExamples/VB/usercontrol1.vb#4)]\"\n  syntax:\n    content: public System.Drawing.Image GetImage (object component);\n    parameters:\n    - id: component\n      type: System.Object\n      description: If this <xref href=\"System.Drawing.ToolboxBitmapAttribute\"></xref> object does not already have a small image, this method searches for a bitmap resource in the assembly that defines the type of the object specified by the component parameter. For example, if you pass an object of type ControlA to the component parameter, then this method searches the assembly that defines ControlA.\n    return:\n      type: System.Drawing.Image\n      description: The small <xref href=\"System.Drawing.Image\"></xref> associated with this <xref href=\"System.Drawing.ToolboxBitmapAttribute\"></xref> object.\n  overload: System.Drawing.ToolboxBitmapAttribute.GetImage*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing/ToolboxBitmapAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Drawing.ToolboxBitmapAttribute.GetImage(System.Type)\n  commentId: M:System.Drawing.ToolboxBitmapAttribute.GetImage(System.Type)\n  id: GetImage(System.Type)\n  parent: System.Drawing.ToolboxBitmapAttribute\n  langs:\n  - csharp\n  name: GetImage(Type)\n  nameWithType: ToolboxBitmapAttribute.GetImage(Type)\n  fullName: ToolboxBitmapAttribute.GetImage(Type)\n  type: Method\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing\n  summary: Gets the small <xref href=\"System.Drawing.Image\"></xref> associated with this <xref href=\"System.Drawing.ToolboxBitmapAttribute\"></xref> object.\n  remarks: This method searches for a resource named namespace.classname.bmp, where namespace is the namespace containing the definition of the type specified by the `type` parameter. For example, suppose you pass typeof(ControlA) to the `type` parameter. If ControlA is in NamespaceA in AssemblyA.dll, then this method searches AssemblyA.dll for a resource named NamespaceA.ControlA.bmp.\n  syntax:\n    content: public System.Drawing.Image GetImage (Type type);\n    parameters:\n    - id: type\n      type: System.Type\n      description: If this <xref href=\"System.Drawing.ToolboxBitmapAttribute\"></xref> object does not already have a small image, this method searches for a bitmap resource in the assembly that defines the type specified by the type parameter. For example, if you pass typeof(ControlA) to the type parameter, then this method searches the assembly that defines ControlA.\n    return:\n      type: System.Drawing.Image\n      description: The small <xref href=\"System.Drawing.Image\"></xref> associated with this <xref href=\"System.Drawing.ToolboxBitmapAttribute\"></xref> object.\n  overload: System.Drawing.ToolboxBitmapAttribute.GetImage*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing/ToolboxBitmapAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Drawing.ToolboxBitmapAttribute.GetImage(System.Object,System.Boolean)\n  commentId: M:System.Drawing.ToolboxBitmapAttribute.GetImage(System.Object,System.Boolean)\n  id: GetImage(System.Object,System.Boolean)\n  parent: System.Drawing.ToolboxBitmapAttribute\n  langs:\n  - csharp\n  name: GetImage(Object, Boolean)\n  nameWithType: ToolboxBitmapAttribute.GetImage(Object, Boolean)\n  fullName: ToolboxBitmapAttribute.GetImage(Object, Boolean)\n  type: Method\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing\n  summary: Gets the small or large <xref href=\"System.Drawing.Image\"></xref> associated with this <xref href=\"System.Drawing.ToolboxBitmapAttribute\"></xref> object.\n  remarks: \"This method searches for a resource named namespace.classname.bmp, where namespace is the namespace containing the definition of the type of the object specified by the `component` parameter. For example, suppose you pass an object of type ControlA to the `component` parameter. If ControlA is in NamespaceA in AssemblyA.dll, then this method searches AssemblyA.dll for a resource named NamespaceA.ControlA.bmp.  \\n  \\n If this <xref:System.Drawing.ToolboxBitmapAttribute> object does not already have a large image, this method creates a large image by scaling the small image.\"\n  syntax:\n    content: public System.Drawing.Image GetImage (object component, bool large);\n    parameters:\n    - id: component\n      type: System.Object\n      description: If this <xref href=\"System.Drawing.ToolboxBitmapAttribute\"></xref> object does not already have a small image, this method searches for a bitmap resource in the assembly that defines the type of the object specified by the component parameter. For example, if you pass an object of type ControlA to the component parameter, then this method searches the assembly that defines ControlA.\n    - id: large\n      type: System.Boolean\n      description: Specifies whether this method returns a large image (`true`) or a small image (`false`). The small image is 16 by 16, and the large image is 32 by 32.\n    return:\n      type: System.Drawing.Image\n      description: An <xref href=\"System.Drawing.Image\"></xref> object associated with this <xref href=\"System.Drawing.ToolboxBitmapAttribute\"></xref> object.\n  overload: System.Drawing.ToolboxBitmapAttribute.GetImage*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing/ToolboxBitmapAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Drawing.ToolboxBitmapAttribute.GetImage(System.Type,System.Boolean)\n  commentId: M:System.Drawing.ToolboxBitmapAttribute.GetImage(System.Type,System.Boolean)\n  id: GetImage(System.Type,System.Boolean)\n  parent: System.Drawing.ToolboxBitmapAttribute\n  langs:\n  - csharp\n  name: GetImage(Type, Boolean)\n  nameWithType: ToolboxBitmapAttribute.GetImage(Type, Boolean)\n  fullName: ToolboxBitmapAttribute.GetImage(Type, Boolean)\n  type: Method\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing\n  summary: Gets the small or large <xref href=\"System.Drawing.Image\"></xref> associated with this <xref href=\"System.Drawing.ToolboxBitmapAttribute\"></xref> object.\n  remarks: \"This method searches for a resource named namespace.classname.bmp, where namespace is the namespace containing the definition of the type specified by the `type` parameter. For example, suppose you pass an typeof(ControlA) to the `type` parameter. If ControlA is in NamespaceA in AssemblyA.dll, then this method searches AssemblyA.dll for a resource named NamespaceA.ControlA.bmp.  \\n  \\n If this <xref:System.Drawing.ToolboxBitmapAttribute> object does not already have a large image, this method creates a large image by scaling the small image.\"\n  syntax:\n    content: public System.Drawing.Image GetImage (Type type, bool large);\n    parameters:\n    - id: type\n      type: System.Type\n      description: If this <xref href=\"System.Drawing.ToolboxBitmapAttribute\"></xref> object does not already have a small image, this method searches for a bitmap resource in the assembly that defines the type specified by the component type. For example, if you pass typeof(ControlA) to the type parameter, then this method searches the assembly that defines ControlA.\n    - id: large\n      type: System.Boolean\n      description: Specifies whether this method returns a large image (`true`) or a small image (`false`). The small image is 16 by 16, and the large image is 32 by 32.\n    return:\n      type: System.Drawing.Image\n      description: An <xref href=\"System.Drawing.Image\"></xref> associated with this <xref href=\"System.Drawing.ToolboxBitmapAttribute\"></xref> object.\n  overload: System.Drawing.ToolboxBitmapAttribute.GetImage*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing/ToolboxBitmapAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Drawing.ToolboxBitmapAttribute.GetImage(System.Type,System.String,System.Boolean)\n  commentId: M:System.Drawing.ToolboxBitmapAttribute.GetImage(System.Type,System.String,System.Boolean)\n  id: GetImage(System.Type,System.String,System.Boolean)\n  parent: System.Drawing.ToolboxBitmapAttribute\n  langs:\n  - csharp\n  name: GetImage(Type, String, Boolean)\n  nameWithType: ToolboxBitmapAttribute.GetImage(Type, String, Boolean)\n  fullName: ToolboxBitmapAttribute.GetImage(Type, String, Boolean)\n  type: Method\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing\n  summary: Gets the small or large <xref href=\"System.Drawing.Image\"></xref> associated with this <xref href=\"System.Drawing.ToolboxBitmapAttribute\"></xref> object.\n  remarks: \"This method searches for a resource named namespace.imgName, where namespace is the namespace containing the definition of the type specified by the `type` parameter. For example, suppose you pass typeof(ControlA) to the `type` parameter and that you passed \\\"MyBitmap.bmp\\\" to the imgName parameter. If ControlA is in NamespaceA in AssemblyA.dll, then this method searches AssemblyA.dll for a resource named NamespaceA.MyBitmap.bmp.  \\n  \\n If this <xref:System.Drawing.ToolboxBitmapAttribute> object does not already have a large image, this method creates a large image by scaling the small image.\"\n  syntax:\n    content: public System.Drawing.Image GetImage (Type type, string imgName, bool large);\n    parameters:\n    - id: type\n      type: System.Type\n      description: If this <xref href=\"System.Drawing.ToolboxBitmapAttribute\"></xref> object does not already have a small image, this method searches for an embedded bitmap resource in the assembly that defines the type specified by the component type. For example, if you pass typeof(ControlA) to the type parameter, then this method searches the assembly that defines ControlA.\n    - id: imgName\n      type: System.String\n      description: The name of the embedded bitmap resource.\n    - id: large\n      type: System.Boolean\n      description: Specifies whether this method returns a large image (`true`) or a small image (`false`). The small image is 16 by 16, and the large image is 32 by 32.\n    return:\n      type: System.Drawing.Image\n      description: An <xref href=\"System.Drawing.Image\"></xref> associated with this <xref href=\"System.Drawing.ToolboxBitmapAttribute\"></xref> object.\n  overload: System.Drawing.ToolboxBitmapAttribute.GetImage*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing/ToolboxBitmapAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Drawing.ToolboxBitmapAttribute.GetImageFromResource(System.Type,System.String,System.Boolean)\n  commentId: M:System.Drawing.ToolboxBitmapAttribute.GetImageFromResource(System.Type,System.String,System.Boolean)\n  id: GetImageFromResource(System.Type,System.String,System.Boolean)\n  parent: System.Drawing.ToolboxBitmapAttribute\n  langs:\n  - csharp\n  name: GetImageFromResource(Type, String, Boolean)\n  nameWithType: ToolboxBitmapAttribute.GetImageFromResource(Type, String, Boolean)\n  fullName: ToolboxBitmapAttribute.GetImageFromResource(Type, String, Boolean)\n  type: Method\n  assemblies:\n  - System.Drawing\n  namespace: System.Drawing\n  summary: Returns an <xref href=\"System.Drawing.Image\"></xref> object based on a bitmap resource that is embedded in an assembly.\n  remarks: \"This method searches for a resource named namespace.imgName, where namespace is the namespace containing the definition of the type specified by the `t` parameter. For example, suppose you pass typeof(ControlA) to the `t` parameter and you pass \\\"MyBitmap.bmp\\\" to the imgName parameter. If ControlA is in NamespaceA in AssemblyA.dll, then this method searches AssemblyA.dll for a resource named NamespaceA.MyBitmap.bmp.  \\n  \\n This method is intended to retrieve a 16 x 16 bitmap resource that is embedded in an assembly. However, there is no requirement that the embedded bitmap has a size of 16 x 16. The bitmap that is retrieved from the assembly (no matter what size) is considered the small image. The large image is created by scaling the \\\"small\\\" image to a size of 32 x 32. So the large image will always be 32 by 32, regardless of the size of the bitmap retrieved from the assembly.\"\n  syntax:\n    content: public static System.Drawing.Image GetImageFromResource (Type t, string imageName, bool large);\n    parameters:\n    - id: t\n      type: System.Type\n      description: This method searches for an embedded bitmap resource in the assembly that defines the type specified by the t parameter. For example, if you pass typeof(ControlA) to the t parameter, then this method searches the assembly that defines ControlA.\n    - id: imageName\n      type: System.String\n      description: The name of the embedded bitmap resource.\n    - id: large\n      type: System.Boolean\n      description: Specifies whether this method returns a large image (true)or a small image (false). The small image is 16 by 16, and the large image is 32 x 32.\n    return:\n      type: System.Drawing.Image\n      description: An <xref href=\"System.Drawing.Image\"></xref> object based on the retrieved bitmap.\n  overload: System.Drawing.ToolboxBitmapAttribute.GetImageFromResource*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing/ToolboxBitmapAttribute.xml\n  ms.technology:\n  - dotnet-standard\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\nreferences:\n- uid: System.Attribute\n  parent: System\n  isExternal: false\n  name: Attribute\n  nameWithType: Attribute\n  fullName: System.Attribute\n- uid: System.Drawing.ToolboxBitmapAttribute.#ctor(System.String)\n  parent: System.Drawing.ToolboxBitmapAttribute\n  isExternal: false\n  name: ToolboxBitmapAttribute(String)\n  nameWithType: ToolboxBitmapAttribute.ToolboxBitmapAttribute(String)\n  fullName: ToolboxBitmapAttribute.ToolboxBitmapAttribute(String)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Drawing.ToolboxBitmapAttribute.#ctor(System.Type)\n  parent: System.Drawing.ToolboxBitmapAttribute\n  isExternal: false\n  name: ToolboxBitmapAttribute(Type)\n  nameWithType: ToolboxBitmapAttribute.ToolboxBitmapAttribute(Type)\n  fullName: ToolboxBitmapAttribute.ToolboxBitmapAttribute(Type)\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.Drawing.ToolboxBitmapAttribute.#ctor(System.Type,System.String)\n  parent: System.Drawing.ToolboxBitmapAttribute\n  isExternal: false\n  name: ToolboxBitmapAttribute(Type, String)\n  nameWithType: ToolboxBitmapAttribute.ToolboxBitmapAttribute(Type, String)\n  fullName: ToolboxBitmapAttribute.ToolboxBitmapAttribute(Type, String)\n- uid: System.Drawing.ToolboxBitmapAttribute.Default\n  parent: System.Drawing.ToolboxBitmapAttribute\n  isExternal: false\n  name: Default\n  nameWithType: ToolboxBitmapAttribute.Default\n  fullName: ToolboxBitmapAttribute.Default\n- uid: System.Drawing.ToolboxBitmapAttribute\n  parent: System.Drawing\n  isExternal: false\n  name: ToolboxBitmapAttribute\n  nameWithType: ToolboxBitmapAttribute\n  fullName: System.Drawing.ToolboxBitmapAttribute\n- uid: System.Drawing.ToolboxBitmapAttribute.Equals(System.Object)\n  parent: System.Drawing.ToolboxBitmapAttribute\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: ToolboxBitmapAttribute.Equals(Object)\n  fullName: ToolboxBitmapAttribute.Equals(Object)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Drawing.ToolboxBitmapAttribute.GetHashCode\n  parent: System.Drawing.ToolboxBitmapAttribute\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: ToolboxBitmapAttribute.GetHashCode()\n  fullName: ToolboxBitmapAttribute.GetHashCode()\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Drawing.ToolboxBitmapAttribute.GetImage(System.Object)\n  parent: System.Drawing.ToolboxBitmapAttribute\n  isExternal: false\n  name: GetImage(Object)\n  nameWithType: ToolboxBitmapAttribute.GetImage(Object)\n  fullName: ToolboxBitmapAttribute.GetImage(Object)\n- uid: System.Drawing.Image\n  parent: System.Drawing\n  isExternal: false\n  name: Image\n  nameWithType: Image\n  fullName: System.Drawing.Image\n- uid: System.Drawing.ToolboxBitmapAttribute.GetImage(System.Type)\n  parent: System.Drawing.ToolboxBitmapAttribute\n  isExternal: false\n  name: GetImage(Type)\n  nameWithType: ToolboxBitmapAttribute.GetImage(Type)\n  fullName: ToolboxBitmapAttribute.GetImage(Type)\n- uid: System.Drawing.ToolboxBitmapAttribute.GetImage(System.Object,System.Boolean)\n  parent: System.Drawing.ToolboxBitmapAttribute\n  isExternal: false\n  name: GetImage(Object, Boolean)\n  nameWithType: ToolboxBitmapAttribute.GetImage(Object, Boolean)\n  fullName: ToolboxBitmapAttribute.GetImage(Object, Boolean)\n- uid: System.Drawing.ToolboxBitmapAttribute.GetImage(System.Type,System.Boolean)\n  parent: System.Drawing.ToolboxBitmapAttribute\n  isExternal: false\n  name: GetImage(Type, Boolean)\n  nameWithType: ToolboxBitmapAttribute.GetImage(Type, Boolean)\n  fullName: ToolboxBitmapAttribute.GetImage(Type, Boolean)\n- uid: System.Drawing.ToolboxBitmapAttribute.GetImage(System.Type,System.String,System.Boolean)\n  parent: System.Drawing.ToolboxBitmapAttribute\n  isExternal: false\n  name: GetImage(Type, String, Boolean)\n  nameWithType: ToolboxBitmapAttribute.GetImage(Type, String, Boolean)\n  fullName: ToolboxBitmapAttribute.GetImage(Type, String, Boolean)\n- uid: System.Drawing.ToolboxBitmapAttribute.GetImageFromResource(System.Type,System.String,System.Boolean)\n  parent: System.Drawing.ToolboxBitmapAttribute\n  isExternal: false\n  name: GetImageFromResource(Type, String, Boolean)\n  nameWithType: ToolboxBitmapAttribute.GetImageFromResource(Type, String, Boolean)\n  fullName: ToolboxBitmapAttribute.GetImageFromResource(Type, String, Boolean)\n- uid: System.Drawing.ToolboxBitmapAttribute.#ctor*\n  parent: System.Drawing.ToolboxBitmapAttribute\n  isExternal: false\n  name: ToolboxBitmapAttribute\n  nameWithType: ToolboxBitmapAttribute.ToolboxBitmapAttribute\n  fullName: ToolboxBitmapAttribute.ToolboxBitmapAttribute\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing/ToolboxBitmapAttribute.xml\n- uid: System.Drawing.ToolboxBitmapAttribute.Equals*\n  parent: System.Drawing.ToolboxBitmapAttribute\n  isExternal: false\n  name: Equals\n  nameWithType: ToolboxBitmapAttribute.Equals\n  fullName: ToolboxBitmapAttribute.Equals\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing/ToolboxBitmapAttribute.xml\n- uid: System.Drawing.ToolboxBitmapAttribute.GetHashCode*\n  parent: System.Drawing.ToolboxBitmapAttribute\n  isExternal: false\n  name: GetHashCode\n  nameWithType: ToolboxBitmapAttribute.GetHashCode\n  fullName: ToolboxBitmapAttribute.GetHashCode\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing/ToolboxBitmapAttribute.xml\n- uid: System.Drawing.ToolboxBitmapAttribute.GetImage*\n  parent: System.Drawing.ToolboxBitmapAttribute\n  isExternal: false\n  name: GetImage\n  nameWithType: ToolboxBitmapAttribute.GetImage\n  fullName: ToolboxBitmapAttribute.GetImage\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing/ToolboxBitmapAttribute.xml\n- uid: System.Drawing.ToolboxBitmapAttribute.GetImageFromResource*\n  parent: System.Drawing.ToolboxBitmapAttribute\n  isExternal: false\n  name: GetImageFromResource\n  nameWithType: ToolboxBitmapAttribute.GetImageFromResource\n  fullName: ToolboxBitmapAttribute.GetImageFromResource\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Drawing/ToolboxBitmapAttribute.xml\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(ParameterInfo, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttribute(ParameterInfo, Type, Boolean)\n  fullName: Attribute.GetCustomAttribute(ParameterInfo, Type, Boolean)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(MemberInfo, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttribute(MemberInfo, Type, Boolean)\n  fullName: Attribute.GetCustomAttribute(MemberInfo, Type, Boolean)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(Assembly, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttribute(Assembly, Type, Boolean)\n  fullName: Attribute.GetCustomAttribute(Assembly, Type, Boolean)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(Module, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttribute(Module, Type, Boolean)\n  fullName: Attribute.GetCustomAttribute(Module, Type, Boolean)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(Module, Type)\n  nameWithType: Attribute.GetCustomAttribute(Module, Type)\n  fullName: Attribute.GetCustomAttribute(Module, Type)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(MemberInfo, Type)\n  nameWithType: Attribute.GetCustomAttribute(MemberInfo, Type)\n  fullName: Attribute.GetCustomAttribute(MemberInfo, Type)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(Assembly, Type)\n  nameWithType: Attribute.GetCustomAttribute(Assembly, Type)\n  fullName: Attribute.GetCustomAttribute(Assembly, Type)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(ParameterInfo, Type)\n  nameWithType: Attribute.GetCustomAttribute(ParameterInfo, Type)\n  fullName: Attribute.GetCustomAttribute(ParameterInfo, Type)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Module, Type)\n  nameWithType: Attribute.GetCustomAttributes(Module, Type)\n  fullName: Attribute.GetCustomAttributes(Module, Type)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(ParameterInfo, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(ParameterInfo, Type, Boolean)\n  fullName: Attribute.GetCustomAttributes(ParameterInfo, Type, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Module, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(Module, Type, Boolean)\n  fullName: Attribute.GetCustomAttributes(Module, Type, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(MemberInfo, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(MemberInfo, Type, Boolean)\n  fullName: Attribute.GetCustomAttributes(MemberInfo, Type, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Assembly, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(Assembly, Type, Boolean)\n  fullName: Attribute.GetCustomAttributes(Assembly, Type, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(ParameterInfo, Type)\n  nameWithType: Attribute.GetCustomAttributes(ParameterInfo, Type)\n  fullName: Attribute.GetCustomAttributes(ParameterInfo, Type)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Module, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(Module, Boolean)\n  fullName: Attribute.GetCustomAttributes(Module, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(ParameterInfo, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(ParameterInfo, Boolean)\n  fullName: Attribute.GetCustomAttributes(ParameterInfo, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(MemberInfo, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(MemberInfo, Boolean)\n  fullName: Attribute.GetCustomAttributes(MemberInfo, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Assembly, Type)\n  nameWithType: Attribute.GetCustomAttributes(Assembly, Type)\n  fullName: Attribute.GetCustomAttributes(Assembly, Type)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Assembly, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(Assembly, Boolean)\n  fullName: Attribute.GetCustomAttributes(Assembly, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(ParameterInfo)\n  nameWithType: Attribute.GetCustomAttributes(ParameterInfo)\n  fullName: Attribute.GetCustomAttributes(ParameterInfo)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Module)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Module)\n  nameWithType: Attribute.GetCustomAttributes(Module)\n  fullName: Attribute.GetCustomAttributes(Module)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(MemberInfo)\n  nameWithType: Attribute.GetCustomAttributes(MemberInfo)\n  fullName: Attribute.GetCustomAttributes(MemberInfo)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Assembly)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Assembly)\n  nameWithType: Attribute.GetCustomAttributes(Assembly)\n  fullName: Attribute.GetCustomAttributes(Assembly)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(MemberInfo, Type)\n  nameWithType: Attribute.GetCustomAttributes(MemberInfo, Type)\n  fullName: Attribute.GetCustomAttributes(MemberInfo, Type)\n- uid: System.Attribute.IsDefaultAttribute\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefaultAttribute()\n  nameWithType: Attribute.IsDefaultAttribute()\n  fullName: Attribute.IsDefaultAttribute()\n- uid: System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(ParameterInfo, Type, Boolean)\n  nameWithType: Attribute.IsDefined(ParameterInfo, Type, Boolean)\n  fullName: Attribute.IsDefined(ParameterInfo, Type, Boolean)\n- uid: System.Attribute.IsDefined(System.Reflection.Module,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(Module, Type, Boolean)\n  nameWithType: Attribute.IsDefined(Module, Type, Boolean)\n  fullName: Attribute.IsDefined(Module, Type, Boolean)\n- uid: System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(MemberInfo, Type, Boolean)\n  nameWithType: Attribute.IsDefined(MemberInfo, Type, Boolean)\n  fullName: Attribute.IsDefined(MemberInfo, Type, Boolean)\n- uid: System.Attribute.IsDefined(System.Reflection.Assembly,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(Assembly, Type, Boolean)\n  nameWithType: Attribute.IsDefined(Assembly, Type, Boolean)\n  fullName: Attribute.IsDefined(Assembly, Type, Boolean)\n- uid: System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(MemberInfo, Type)\n  nameWithType: Attribute.IsDefined(MemberInfo, Type)\n  fullName: Attribute.IsDefined(MemberInfo, Type)\n- uid: System.Attribute.IsDefined(System.Reflection.Module,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(Module, Type)\n  nameWithType: Attribute.IsDefined(Module, Type)\n  fullName: Attribute.IsDefined(Module, Type)\n- uid: System.Attribute.IsDefined(System.Reflection.Assembly,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(Assembly, Type)\n  nameWithType: Attribute.IsDefined(Assembly, Type)\n  fullName: Attribute.IsDefined(Assembly, Type)\n- uid: System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(ParameterInfo, Type)\n  nameWithType: Attribute.IsDefined(ParameterInfo, Type)\n  fullName: Attribute.IsDefined(ParameterInfo, Type)\n- uid: System.Attribute.Match(System.Object)\n  parent: System.Attribute\n  isExternal: false\n  name: Match(Object)\n  nameWithType: Attribute.Match(Object)\n  fullName: Attribute.Match(Object)\n- uid: System.Attribute.TypeId\n  parent: System.Attribute\n  isExternal: false\n  name: TypeId\n  nameWithType: Attribute.TypeId\n  fullName: Attribute.TypeId\n- uid: System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)\n  parent: System.Attribute\n  isExternal: false\n  name: _Attribute.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)\n  nameWithType: Attribute._Attribute.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)\n  fullName: Attribute._Attribute.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)\n- uid: System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)\n  parent: System.Attribute\n  isExternal: false\n  name: _Attribute.GetTypeInfo(UInt32, UInt32, IntPtr)\n  nameWithType: Attribute._Attribute.GetTypeInfo(UInt32, UInt32, IntPtr)\n  fullName: Attribute._Attribute.GetTypeInfo(UInt32, UInt32, IntPtr)\n- uid: System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)\n  parent: System.Attribute\n  isExternal: false\n  name: _Attribute.GetTypeInfoCount(UInt32)\n  nameWithType: Attribute._Attribute.GetTypeInfoCount(UInt32)\n  fullName: Attribute._Attribute.GetTypeInfoCount(UInt32)\n- uid: System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)\n  parent: System.Attribute\n  isExternal: false\n  name: _Attribute.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)\n  nameWithType: Attribute._Attribute.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)\n  fullName: Attribute._Attribute.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)\n"}