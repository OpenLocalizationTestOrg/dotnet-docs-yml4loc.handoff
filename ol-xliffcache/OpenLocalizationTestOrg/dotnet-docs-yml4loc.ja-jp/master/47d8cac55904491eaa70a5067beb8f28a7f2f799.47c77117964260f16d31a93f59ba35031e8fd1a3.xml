{"nodes":[{"content":"Represents a transaction to be performed at a data source, and is implemented by .NET Framework data providers that access relational databases.","nodes":[{"pos":[0,144],"content":"Represents a transaction to be performed at a data source, and is implemented by .NET Framework data providers that access relational databases.","nodes":[{"content":"Represents a transaction to be performed at a data source, and is implemented by .NET Framework data providers that access relational databases.","pos":[0,144]}]}],"pos":[547,692],"yaml":true},{"content":"The <xref:System.Data.IDbTransaction> interface allows an inheriting class to implement a Transaction class, which represents the transaction to be performed at a data source. For more information about Transaction classes, see [Transactions and Concurrency](~/docs/framework/data/adonet/transactions-and-concurrency.md).  \n  \n An application does not create an instance of the <xref:System.Data.IDbTransaction> interface directly, but creates an instance of a class that inherits <xref:System.Data.IDbTransaction>.  \n  \n Classes that inherit <xref:System.Data.IDbTransaction> must implement the inherited members, and typically define additional members to add provider-specific functionality. For example, the <xref:System.Data.IDbTransaction> interface defines the <xref:System.Data.IDbTransaction.Commit%2A> method. In turn, the <xref:System.Data.OleDb.OleDbTransaction> class inherits this property, and also defines the <xref:System.Data.OleDb.OleDbTransaction.Begin%2A> method.","nodes":[{"pos":[0,321],"content":"The <xref:System.Data.IDbTransaction> interface allows an inheriting class to implement a Transaction class, which represents the transaction to be performed at a data source. For more information about Transaction classes, see [Transactions and Concurrency](~/docs/framework/data/adonet/transactions-and-concurrency.md).","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Data.IDbTransaction&gt;</ph> interface allows an inheriting class to implement a Transaction class, which represents the transaction to be performed at a data source.","pos":[0,175],"source":"The <xref:System.Data.IDbTransaction> interface allows an inheriting class to implement a Transaction class, which represents the transaction to be performed at a data source."},{"content":"For more information about Transaction classes, see <bpt id=\"p1\">[</bpt>Transactions and Concurrency<ept id=\"p1\">](~/docs/framework/data/adonet/transactions-and-concurrency.md)</ept>.","pos":[176,321],"source":" For more information about Transaction classes, see [Transactions and Concurrency](~/docs/framework/data/adonet/transactions-and-concurrency.md)."}]},{"pos":[328,515],"content":"An application does not create an instance of the <xref:System.Data.IDbTransaction> interface directly, but creates an instance of a class that inherits <xref:System.Data.IDbTransaction>.","nodes":[{"content":"An application does not create an instance of the <ph id=\"ph1\">&lt;xref:System.Data.IDbTransaction&gt;</ph> interface directly, but creates an instance of a class that inherits <ph id=\"ph2\">&lt;xref:System.Data.IDbTransaction&gt;</ph>.","pos":[0,187],"source":"An application does not create an instance of the <xref:System.Data.IDbTransaction> interface directly, but creates an instance of a class that inherits <xref:System.Data.IDbTransaction>."}]},{"pos":[522,984],"content":"Classes that inherit <xref:System.Data.IDbTransaction> must implement the inherited members, and typically define additional members to add provider-specific functionality. For example, the <xref:System.Data.IDbTransaction> interface defines the <xref:System.Data.IDbTransaction.Commit%2A> method. In turn, the <xref:System.Data.OleDb.OleDbTransaction> class inherits this property, and also defines the <xref:System.Data.OleDb.OleDbTransaction.Begin%2A> method.","nodes":[{"content":"Classes that inherit <xref:System.Data.IDbTransaction> must implement the inherited members, and typically define additional members to add provider-specific functionality. For example, the <xref:System.Data.IDbTransaction> interface defines the <xref:System.Data.IDbTransaction.Commit%2A> method. In turn, the <xref:System.Data.OleDb.OleDbTransaction> class inherits this property, and also defines the <xref:System.Data.OleDb.OleDbTransaction.Begin%2A> method.","pos":[0,462],"nodes":[{"content":"Classes that inherit <ph id=\"ph1\">&lt;xref:System.Data.IDbTransaction&gt;</ph> must implement the inherited members, and typically define additional members to add provider-specific functionality.","pos":[0,172],"source":"Classes that inherit <xref:System.Data.IDbTransaction> must implement the inherited members, and typically define additional members to add provider-specific functionality."},{"content":"For example, the <ph id=\"ph1\">&lt;xref:System.Data.IDbTransaction&gt;</ph> interface defines the <ph id=\"ph2\">&lt;xref:System.Data.IDbTransaction.Commit%2A&gt;</ph> method.","pos":[173,297],"source":" For example, the <xref:System.Data.IDbTransaction> interface defines the <xref:System.Data.IDbTransaction.Commit%2A> method."},{"content":"In turn, the <ph id=\"ph1\">&lt;xref:System.Data.OleDb.OleDbTransaction&gt;</ph> class inherits this property, and also defines the <ph id=\"ph2\">&lt;xref:System.Data.OleDb.OleDbTransaction.Begin%2A&gt;</ph> method.","pos":[298,462],"source":" In turn, the <xref:System.Data.OleDb.OleDbTransaction> class inherits this property, and also defines the <xref:System.Data.OleDb.OleDbTransaction.Begin%2A> method."}]}]}],"pos":[703,1694],"yaml":true,"extradata":"MT"},{"content":"Commits the database transaction.","nodes":[{"pos":[0,33],"content":"Commits the database transaction.","nodes":[{"content":"Commits the database transaction.","pos":[0,33]}]}],"pos":[3806,3840],"yaml":true},{"content":"An error occurred while trying to commit the transaction.","nodes":[{"pos":[0,57],"content":"An error occurred while trying to commit the transaction.","nodes":[{"content":"An error occurred while trying to commit the transaction.","pos":[0,57]}]}],"pos":[4848,4906],"yaml":true},{"content":"The transaction has already been committed or rolled back.  \n  \n -or-  \n  \n The connection is broken.","nodes":[{"pos":[0,58],"content":"The transaction has already been committed or rolled back.","nodes":[{"content":"The transaction has already been committed or rolled back.","pos":[0,58]}]},{"pos":[65,69],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[76,101],"content":"The connection is broken.","nodes":[{"content":"The connection is broken.","pos":[0,25]}]}],"pos":[5016,5124],"yaml":true},{"content":"Specifies the Connection object to associate with the transaction.","nodes":[{"pos":[0,66],"content":"Specifies the Connection object to associate with the transaction.","nodes":[{"content":"Specifies the Connection object to associate with the transaction.","pos":[0,66]}]}],"pos":[6305,6372],"yaml":true},{"content":"A single application may have multiple database connections, each with zero or more transactions. This property enables you to determine the connection object associated with a particular transaction.","nodes":[{"pos":[0,200],"content":"A single application may have multiple database connections, each with zero or more transactions. This property enables you to determine the connection object associated with a particular transaction.","nodes":[{"content":"A single application may have multiple database connections, each with zero or more transactions. This property enables you to determine the connection object associated with a particular transaction.","pos":[0,200],"nodes":[{"content":"A single application may have multiple database connections, each with zero or more transactions.","pos":[0,97]},{"content":"This property enables you to determine the connection object associated with a particular transaction.","pos":[98,200]}]}]}],"pos":[6383,6584],"yaml":true,"extradata":"MT"},{"content":"The Connection object to associate with the transaction.","nodes":[{"pos":[0,56],"content":"The Connection object to associate with the transaction.","nodes":[{"content":"The Connection object to associate with the transaction.","pos":[0,56]}]}],"pos":[6729,6786],"yaml":true},{"content":"Specifies the <xref href=\"System.Data.IsolationLevel\"></xref> for this transaction.","nodes":[{"pos":[0,83],"content":"Specifies the <ph id=\"ph1\">&lt;xref href=\"System.Data.IsolationLevel\"&gt;&lt;/xref&gt;</ph> for this transaction.","source":"Specifies the <xref href=\"System.Data.IsolationLevel\"></xref> for this transaction."}],"pos":[8059,8143],"yaml":true},{"content":"Parallel transactions are not supported. Therefore, the <xref:System.Data.IsolationLevel> applies to the entire transaction.","nodes":[{"pos":[0,124],"content":"Parallel transactions are not supported. Therefore, the <xref:System.Data.IsolationLevel> applies to the entire transaction.","nodes":[{"content":"Parallel transactions are not supported. Therefore, the <xref:System.Data.IsolationLevel> applies to the entire transaction.","pos":[0,124],"nodes":[{"content":"Parallel transactions are not supported.","pos":[0,40]},{"content":"Therefore, the <ph id=\"ph1\">&lt;xref:System.Data.IsolationLevel&gt;</ph> applies to the entire transaction.","pos":[41,124],"source":" Therefore, the <xref:System.Data.IsolationLevel> applies to the entire transaction."}]}]}],"pos":[8154,8279],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.Data.IsolationLevel\"></xref> for this transaction. The default is `ReadCommitted`.","nodes":[{"pos":[0,105],"content":"The <xref href=\"System.Data.IsolationLevel\"></xref> for this transaction. The default is `ReadCommitted`.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Data.IsolationLevel\"&gt;&lt;/xref&gt;</ph> for this transaction.","pos":[0,73],"source":"The <xref href=\"System.Data.IsolationLevel\"></xref> for this transaction."},{"content":"The default is <ph id=\"ph1\">`ReadCommitted`</ph>.","pos":[74,105],"source":" The default is `ReadCommitted`."}]}],"pos":[8430,8536],"yaml":true},{"content":"Rolls back a transaction from a pending state.","nodes":[{"pos":[0,46],"content":"Rolls back a transaction from a pending state.","nodes":[{"content":"Rolls back a transaction from a pending state.","pos":[0,46]}]}],"pos":[9781,9828],"yaml":true},{"content":"The transaction can only be rolled back from a pending state (after <xref:System.Data.IDbConnection.BeginTransaction%2A> has been called, but before <xref:System.Data.IDbTransaction.Commit%2A> is called).","nodes":[{"pos":[0,204],"content":"The transaction can only be rolled back from a pending state (after <xref:System.Data.IDbConnection.BeginTransaction%2A> has been called, but before <xref:System.Data.IDbTransaction.Commit%2A> is called).","nodes":[{"content":"The transaction can only be rolled back from a pending state (after <ph id=\"ph1\">&lt;xref:System.Data.IDbConnection.BeginTransaction%2A&gt;</ph> has been called, but before <ph id=\"ph2\">&lt;xref:System.Data.IDbTransaction.Commit%2A&gt;</ph> is called).","pos":[0,204],"source":"The transaction can only be rolled back from a pending state (after <xref:System.Data.IDbConnection.BeginTransaction%2A> has been called, but before <xref:System.Data.IDbTransaction.Commit%2A> is called)."}]}],"pos":[9839,10044],"yaml":true,"extradata":"MT"},{"content":"An error occurred while trying to commit the transaction.","nodes":[{"pos":[0,57],"content":"An error occurred while trying to commit the transaction.","nodes":[{"content":"An error occurred while trying to commit the transaction.","pos":[0,57]}]}],"pos":[11042,11100],"yaml":true},{"content":"The transaction has already been committed or rolled back.  \n  \n -or-  \n  \n The connection is broken.","nodes":[{"pos":[0,58],"content":"The transaction has already been committed or rolled back.","nodes":[{"content":"The transaction has already been committed or rolled back.","pos":[0,58]}]},{"pos":[65,69],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[76,101],"content":"The connection is broken.","nodes":[{"content":"The connection is broken.","pos":[0,25]}]}],"pos":[11210,11318],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Data.IDbTransaction\n  commentId: T:System.Data.IDbTransaction\n  id: IDbTransaction\n  children:\n  - System.Data.IDbTransaction.Commit\n  - System.Data.IDbTransaction.Connection\n  - System.Data.IDbTransaction.IsolationLevel\n  - System.Data.IDbTransaction.Rollback\n  langs:\n  - csharp\n  name: IDbTransaction\n  nameWithType: IDbTransaction\n  fullName: System.Data.IDbTransaction\n  type: Interface\n  assemblies:\n  - System.Data.Common\n  - System.Data\n  - netstandard\n  namespace: System.Data\n  summary: Represents a transaction to be performed at a data source, and is implemented by .NET Framework data providers that access relational databases.\n  remarks: \"The <xref:System.Data.IDbTransaction> interface allows an inheriting class to implement a Transaction class, which represents the transaction to be performed at a data source. For more information about Transaction classes, see [Transactions and Concurrency](~/docs/framework/data/adonet/transactions-and-concurrency.md).  \\n  \\n An application does not create an instance of the <xref:System.Data.IDbTransaction> interface directly, but creates an instance of a class that inherits <xref:System.Data.IDbTransaction>.  \\n  \\n Classes that inherit <xref:System.Data.IDbTransaction> must implement the inherited members, and typically define additional members to add provider-specific functionality. For example, the <xref:System.Data.IDbTransaction> interface defines the <xref:System.Data.IDbTransaction.Commit%2A> method. In turn, the <xref:System.Data.OleDb.OleDbTransaction> class inherits this property, and also defines the <xref:System.Data.OleDb.OleDbTransaction.Begin%2A> method.\"\n  example:\n  - \"The following example creates instances of the derived classes, <xref:System.Data.SqlClient.SqlConnection> and <xref:System.Data.SqlClient.SqlTransaction>. It also demonstrates how to use the <xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A>, <xref:System.Data.SqlClient.SqlTransaction.Commit%2A>, and <xref:System.Data.SqlClient.SqlTransaction.Rollback%2A> methods.  \\n  \\n [!code-csharp[Classic WebData SqlConnection.BeginTransaction Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlConnection.BeginTransaction Example/CS/source.cs#1)]\\n [!code-vb[Classic WebData SqlConnection.BeginTransaction Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlConnection.BeginTransaction Example/VB/source.vb#1)]\"\n  syntax:\n    content: 'public interface IDbTransaction : IDisposable'\n  derivedClasses:\n  - System.Data.Common.DbTransaction\n  implements:\n  - System.IDisposable\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/IDbTransaction.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.IDbTransaction.Commit\n  commentId: M:System.Data.IDbTransaction.Commit\n  id: Commit\n  parent: System.Data.IDbTransaction\n  langs:\n  - csharp\n  name: Commit()\n  nameWithType: IDbTransaction.Commit()\n  fullName: IDbTransaction.Commit()\n  type: Method\n  assemblies:\n  - System.Data.Common\n  - System.Data\n  - netstandard\n  namespace: System.Data\n  summary: Commits the database transaction.\n  remarks: ''\n  example:\n  - \"The following example creates instances of the derived classes, <xref:System.Data.SqlClient.SqlConnection> and a <xref:System.Data.SqlClient.SqlTransaction>. It also demonstrates how to use the <xref:System.Data.SqlClient.SqlTransaction.Commit%2A>, <xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A>, and <xref:System.Data.SqlClient.SqlTransaction.Rollback%2A> methods.  \\n  \\n [!code-csharp[Classic WebData SqlConnection.BeginTransaction Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlConnection.BeginTransaction Example/CS/source.cs#1)]\\n [!code-vb[Classic WebData SqlConnection.BeginTransaction Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlConnection.BeginTransaction Example/VB/source.vb#1)]\"\n  syntax:\n    content: public void Commit ();\n    parameters: []\n  overload: System.Data.IDbTransaction.Commit*\n  exceptions:\n  - type: System.Exception\n    commentId: T:System.Exception\n    description: An error occurred while trying to commit the transaction.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"The transaction has already been committed or rolled back.  \\n  \\n -or-  \\n  \\n The connection is broken.\"\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/IDbTransaction.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.IDbTransaction.Connection\n  commentId: P:System.Data.IDbTransaction.Connection\n  id: Connection\n  parent: System.Data.IDbTransaction\n  langs:\n  - csharp\n  name: Connection\n  nameWithType: IDbTransaction.Connection\n  fullName: IDbTransaction.Connection\n  type: Property\n  assemblies:\n  - System.Data.Common\n  - System.Data\n  - netstandard\n  namespace: System.Data\n  summary: Specifies the Connection object to associate with the transaction.\n  remarks: A single application may have multiple database connections, each with zero or more transactions. This property enables you to determine the connection object associated with a particular transaction.\n  syntax:\n    content: public System.Data.IDbConnection Connection { get; }\n    return:\n      type: System.Data.IDbConnection\n      description: The Connection object to associate with the transaction.\n  overload: System.Data.IDbTransaction.Connection*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/IDbTransaction.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.IDbTransaction.IsolationLevel\n  commentId: P:System.Data.IDbTransaction.IsolationLevel\n  id: IsolationLevel\n  parent: System.Data.IDbTransaction\n  langs:\n  - csharp\n  name: IsolationLevel\n  nameWithType: IDbTransaction.IsolationLevel\n  fullName: IDbTransaction.IsolationLevel\n  type: Property\n  assemblies:\n  - System.Data.Common\n  - System.Data\n  - netstandard\n  namespace: System.Data\n  summary: Specifies the <xref href=\"System.Data.IsolationLevel\"></xref> for this transaction.\n  remarks: Parallel transactions are not supported. Therefore, the <xref:System.Data.IsolationLevel> applies to the entire transaction.\n  syntax:\n    content: public System.Data.IsolationLevel IsolationLevel { get; }\n    return:\n      type: System.Data.IsolationLevel\n      description: The <xref href=\"System.Data.IsolationLevel\"></xref> for this transaction. The default is `ReadCommitted`.\n  overload: System.Data.IDbTransaction.IsolationLevel*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/IDbTransaction.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\n- uid: System.Data.IDbTransaction.Rollback\n  commentId: M:System.Data.IDbTransaction.Rollback\n  id: Rollback\n  parent: System.Data.IDbTransaction\n  langs:\n  - csharp\n  name: Rollback()\n  nameWithType: IDbTransaction.Rollback()\n  fullName: IDbTransaction.Rollback()\n  type: Method\n  assemblies:\n  - System.Data.Common\n  - System.Data\n  - netstandard\n  namespace: System.Data\n  summary: Rolls back a transaction from a pending state.\n  remarks: The transaction can only be rolled back from a pending state (after <xref:System.Data.IDbConnection.BeginTransaction%2A> has been called, but before <xref:System.Data.IDbTransaction.Commit%2A> is called).\n  example:\n  - \"The following example creates instances of the derived classes, <xref:System.Data.SqlClient.SqlConnection> and a <xref:System.Data.SqlClient.SqlTransaction>. It also demonstrates how to use the <xref:System.Data.SqlClient.SqlConnection.BeginTransaction%2A>, <xref:System.Data.SqlClient.SqlTransaction.Commit%2A>, and <xref:System.Data.SqlClient.SqlTransaction.Rollback%2A> methods.  \\n  \\n [!code-csharp[Classic WebData SqlConnection.BeginTransaction Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/Classic WebData SqlConnection.BeginTransaction Example/CS/source.cs#1)]\\n [!code-vb[Classic WebData SqlConnection.BeginTransaction Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/Classic WebData SqlConnection.BeginTransaction Example/VB/source.vb#1)]\"\n  syntax:\n    content: public void Rollback ();\n    parameters: []\n  overload: System.Data.IDbTransaction.Rollback*\n  exceptions:\n  - type: System.Exception\n    commentId: T:System.Exception\n    description: An error occurred while trying to commit the transaction.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"The transaction has already been committed or rolled back.  \\n  \\n -or-  \\n  \\n The connection is broken.\"\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/IDbTransaction.xml\n  ms.technology:\n  - dotnet-ado\n  author: JennieHubbard\n  ms.author: jhubbard\n  manager: jhubbard\nreferences:\n- uid: System.Exception\n  parent: System\n  isExternal: false\n  name: Exception\n  nameWithType: Exception\n  fullName: System.Exception\n- uid: System.InvalidOperationException\n  parent: System\n  isExternal: false\n  name: InvalidOperationException\n  nameWithType: InvalidOperationException\n  fullName: System.InvalidOperationException\n- uid: System.Data.IDbTransaction.Commit\n  parent: System.Data.IDbTransaction\n  isExternal: false\n  name: Commit()\n  nameWithType: IDbTransaction.Commit()\n  fullName: IDbTransaction.Commit()\n- uid: System.Data.IDbTransaction.Connection\n  parent: System.Data.IDbTransaction\n  isExternal: false\n  name: Connection\n  nameWithType: IDbTransaction.Connection\n  fullName: IDbTransaction.Connection\n- uid: System.Data.IDbConnection\n  parent: System.Data\n  isExternal: false\n  name: IDbConnection\n  nameWithType: IDbConnection\n  fullName: System.Data.IDbConnection\n- uid: System.Data.IDbTransaction.IsolationLevel\n  parent: System.Data.IDbTransaction\n  isExternal: false\n  name: IsolationLevel\n  nameWithType: IDbTransaction.IsolationLevel\n  fullName: IDbTransaction.IsolationLevel\n- uid: System.Data.IsolationLevel\n  parent: System.Data\n  isExternal: false\n  name: IsolationLevel\n  nameWithType: IsolationLevel\n  fullName: System.Data.IsolationLevel\n- uid: System.Data.IDbTransaction.Rollback\n  parent: System.Data.IDbTransaction\n  isExternal: false\n  name: Rollback()\n  nameWithType: IDbTransaction.Rollback()\n  fullName: IDbTransaction.Rollback()\n- uid: System.Data.IDbTransaction.Commit*\n  parent: System.Data.IDbTransaction\n  isExternal: false\n  name: Commit\n  nameWithType: IDbTransaction.Commit\n  fullName: IDbTransaction.Commit\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/IDbTransaction.xml\n- uid: System.Data.IDbTransaction.Connection*\n  parent: System.Data.IDbTransaction\n  isExternal: false\n  name: Connection\n  nameWithType: IDbTransaction.Connection\n  fullName: IDbTransaction.Connection\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/IDbTransaction.xml\n- uid: System.Data.IDbTransaction.IsolationLevel*\n  parent: System.Data.IDbTransaction\n  isExternal: false\n  name: IsolationLevel\n  nameWithType: IDbTransaction.IsolationLevel\n  fullName: IDbTransaction.IsolationLevel\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/IDbTransaction.xml\n- uid: System.Data.IDbTransaction.Rollback*\n  parent: System.Data.IDbTransaction\n  isExternal: false\n  name: Rollback\n  nameWithType: IDbTransaction.Rollback\n  fullName: IDbTransaction.Rollback\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Data/IDbTransaction.xml\n- uid: System.IDisposable\n  parent: System\n  isExternal: false\n  name: IDisposable\n  nameWithType: IDisposable\n  fullName: System.IDisposable\n"}