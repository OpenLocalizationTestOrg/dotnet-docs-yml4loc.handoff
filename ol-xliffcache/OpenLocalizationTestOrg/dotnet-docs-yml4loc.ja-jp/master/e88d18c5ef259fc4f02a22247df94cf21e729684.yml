### YamlMime:ManagedReference
items:
- uid: System.Web.Security.MembershipProvider
  commentId: T:System.Web.Security.MembershipProvider
  id: MembershipProvider
  children:
  - System.Web.Security.MembershipProvider.#ctor
  - System.Web.Security.MembershipProvider.ApplicationName
  - System.Web.Security.MembershipProvider.ChangePassword(System.String,System.String,System.String)
  - System.Web.Security.MembershipProvider.ChangePasswordQuestionAndAnswer(System.String,System.String,System.String,System.String)
  - System.Web.Security.MembershipProvider.CreateUser(System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Object,System.Web.Security.MembershipCreateStatus@)
  - System.Web.Security.MembershipProvider.DecryptPassword(System.Byte[])
  - System.Web.Security.MembershipProvider.DeleteUser(System.String,System.Boolean)
  - System.Web.Security.MembershipProvider.EnablePasswordReset
  - System.Web.Security.MembershipProvider.EnablePasswordRetrieval
  - System.Web.Security.MembershipProvider.EncryptPassword(System.Byte[])
  - System.Web.Security.MembershipProvider.EncryptPassword(System.Byte[],System.Web.Configuration.MembershipPasswordCompatibilityMode)
  - System.Web.Security.MembershipProvider.FindUsersByEmail(System.String,System.Int32,System.Int32,System.Int32@)
  - System.Web.Security.MembershipProvider.FindUsersByName(System.String,System.Int32,System.Int32,System.Int32@)
  - System.Web.Security.MembershipProvider.GetAllUsers(System.Int32,System.Int32,System.Int32@)
  - System.Web.Security.MembershipProvider.GetNumberOfUsersOnline
  - System.Web.Security.MembershipProvider.GetPassword(System.String,System.String)
  - System.Web.Security.MembershipProvider.GetUser(System.String,System.Boolean)
  - System.Web.Security.MembershipProvider.GetUser(System.Object,System.Boolean)
  - System.Web.Security.MembershipProvider.GetUserNameByEmail(System.String)
  - System.Web.Security.MembershipProvider.MaxInvalidPasswordAttempts
  - System.Web.Security.MembershipProvider.MinRequiredNonAlphanumericCharacters
  - System.Web.Security.MembershipProvider.MinRequiredPasswordLength
  - System.Web.Security.MembershipProvider.OnValidatingPassword(System.Web.Security.ValidatePasswordEventArgs)
  - System.Web.Security.MembershipProvider.PasswordAttemptWindow
  - System.Web.Security.MembershipProvider.PasswordFormat
  - System.Web.Security.MembershipProvider.PasswordStrengthRegularExpression
  - System.Web.Security.MembershipProvider.RequiresQuestionAndAnswer
  - System.Web.Security.MembershipProvider.RequiresUniqueEmail
  - System.Web.Security.MembershipProvider.ResetPassword(System.String,System.String)
  - System.Web.Security.MembershipProvider.UnlockUser(System.String)
  - System.Web.Security.MembershipProvider.UpdateUser(System.Web.Security.MembershipUser)
  - System.Web.Security.MembershipProvider.ValidateUser(System.String,System.String)
  - System.Web.Security.MembershipProvider.ValidatingPassword
  langs:
  - csharp
  name: MembershipProvider
  nameWithType: MembershipProvider
  fullName: System.Web.Security.MembershipProvider
  type: Class
  assemblies:
  - System.Web.ApplicationServices
  namespace: System.Web.Security
  summary: Defines the contract that ASP.NET implements to provide membership services using custom membership providers.
  remarks: "ASP.NET membership is designed to enable you to easily use a number of different membership providers for your ASP.NET applications. You can use the supplied membership providers that are included with the .NET Framework, or you can implement your own provider.  \n  \n> [!NOTE]\n>  If you are not familiar with the membership features of ASP.NET, see [Introduction to Membership](http://msdn.microsoft.com/library/79184d17-f4c7-4c9f-a073-cec4f5543980) before continuing. For a list of other topics related to membership, see [Managing Users by Using Membership](http://msdn.microsoft.com/library/824c3a24-f0af-427c-a652-0d2d1e9397cd).  \n  \n When implementing a custom membership provider, you are required to inherit the <xref:System.Web.Security.MembershipProvider> abstract class.  \n  \n There are two primary reasons for creating a custom membership provider.  \n  \n-   You need to store membership information in a data source that is not supported by the membership providers included with the .NET Framework, such as a FoxPro database, an Oracle database, or other data source.  \n  \n-   You need to manage membership information using a database schema that is different from the database schema used by the providers that ship with the .NET Framework. A common example of this would be membership data that already exists in a SQL Server database for a company or Web site.  \n  \n The <xref:System.Web.Security.MembershipProvider> abstract class inherits from the <xref:System.Configuration.Provider.ProviderBase> abstract class. <xref:System.Web.Security.MembershipProvider> implementations must also implement the required members of <xref:System.Configuration.Provider.ProviderBase>."
  syntax:
    content: 'public abstract class MembershipProvider : System.Configuration.Provider.ProviderBase'
  inheritance:
  - System.Object
  - System.Configuration.Provider.ProviderBase
  derivedClasses:
  - System.Web.ClientServices.Providers.ClientFormsAuthenticationMembershipProvider
  - System.Web.ClientServices.Providers.ClientWindowsAuthenticationMembershipProvider
  - System.Web.Security.ActiveDirectoryMembershipProvider
  - System.Web.Security.SqlMembershipProvider
  implements: []
  inheritedMembers:
  - System.Configuration.Provider.ProviderBase.Description
  - System.Configuration.Provider.ProviderBase.Initialize(System.String,System.Collections.Specialized.NameValueCollection)
  - System.Configuration.Provider.ProviderBase.Name
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  attributes: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Security/MembershipProvider.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.Security.MembershipProvider.#ctor
  commentId: M:System.Web.Security.MembershipProvider.#ctor
  id: '#ctor'
  parent: System.Web.Security.MembershipProvider
  langs:
  - csharp
  name: MembershipProvider()
  nameWithType: MembershipProvider.MembershipProvider()
  fullName: MembershipProvider.MembershipProvider()
  type: Constructor
  assemblies:
  - System.Web.ApplicationServices
  namespace: System.Web.Security
  summary: Initializes a new instance of the <xref href="System.Web.Security.MembershipProvider"></xref> class.
  remarks: You are not required to implement a constructor for a class that inherits the <xref:System.Web.Security.MembershipProvider> abstract class. Initialization values for a <xref:System.Web.Security.MembershipProvider> implementation are passed to the <xref:System.Configuration.Provider.ProviderBase.Initialize%2A> method implementation.
  syntax:
    content: protected MembershipProvider ();
    parameters: []
  overload: System.Web.Security.MembershipProvider.#ctor*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Security/MembershipProvider.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.Security.MembershipProvider.ApplicationName
  commentId: P:System.Web.Security.MembershipProvider.ApplicationName
  id: ApplicationName
  parent: System.Web.Security.MembershipProvider
  langs:
  - csharp
  name: ApplicationName
  nameWithType: MembershipProvider.ApplicationName
  fullName: MembershipProvider.ApplicationName
  type: Property
  assemblies:
  - System.Web.ApplicationServices
  namespace: System.Web.Security
  summary: The name of the application using the custom membership provider.
  remarks: "The <xref:System.Web.Security.MembershipProvider.ApplicationName%2A> property value is stored in the data source with related user information to associate a user with a particular application. This property is read/write and defaults to the <xref:System.Web.HttpRequest.ApplicationPath%2A> property value if not specified explicitly.  \n  \n Because membership providers store user information uniquely for each application, multiple ASP.NET applications can use the same data source without running into a conflict if duplicate user names are created. Alternatively, multiple ASP.NET applications can use the same user data source by specifying the same <xref:System.Web.Security.MembershipProvider.ApplicationName%2A>.  \n  \n In your membership provider implementation, you will need to ensure that your data schema includes the <xref:System.Web.Security.MembershipProvider.ApplicationName%2A> and that data source queries and updates also include the <xref:System.Web.Security.MembershipProvider.ApplicationName%2A>."
  example:
  - For an example of a <xref:System.Web.Security.MembershipProvider> implementation, see [Implementing a Profile Provider](http://msdn.microsoft.com/library/58de6e99-31a7-41b9-93ed-51b9b4a67e98).
  syntax:
    content: public abstract string ApplicationName { get; set; }
    return:
      type: System.String
      description: The name of the application using the custom membership provider.
  overload: System.Web.Security.MembershipProvider.ApplicationName*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Security/MembershipProvider.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.Security.MembershipProvider.ChangePassword(System.String,System.String,System.String)
  commentId: M:System.Web.Security.MembershipProvider.ChangePassword(System.String,System.String,System.String)
  id: ChangePassword(System.String,System.String,System.String)
  parent: System.Web.Security.MembershipProvider
  langs:
  - csharp
  name: ChangePassword(String, String, String)
  nameWithType: MembershipProvider.ChangePassword(String, String, String)
  fullName: MembershipProvider.ChangePassword(String, String, String)
  type: Method
  assemblies:
  - System.Web.ApplicationServices
  namespace: System.Web.Security
  summary: Processes a request to update the password for a membership user.
  remarks: Takes, as input, a user name, a current password, and a new password, and updates the password in the data source if the supplied user name and current password are valid.
  example:
  - For an example of a <xref:System.Web.Security.MembershipProvider> implementation, see [Implementing a Profile Provider](http://msdn.microsoft.com/library/58de6e99-31a7-41b9-93ed-51b9b4a67e98).
  syntax:
    content: public abstract bool ChangePassword (string username, string oldPassword, string newPassword);
    parameters:
    - id: username
      type: System.String
      description: The user to update the password for.
    - id: oldPassword
      type: System.String
      description: The current password for the specified user.
    - id: newPassword
      type: System.String
      description: The new password for the specified user.
    return:
      type: System.Boolean
      description: '`true` if the password was updated successfully; otherwise, `false`.'
  overload: System.Web.Security.MembershipProvider.ChangePassword*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Security/MembershipProvider.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.Security.MembershipProvider.ChangePasswordQuestionAndAnswer(System.String,System.String,System.String,System.String)
  commentId: M:System.Web.Security.MembershipProvider.ChangePasswordQuestionAndAnswer(System.String,System.String,System.String,System.String)
  id: ChangePasswordQuestionAndAnswer(System.String,System.String,System.String,System.String)
  parent: System.Web.Security.MembershipProvider
  langs:
  - csharp
  name: ChangePasswordQuestionAndAnswer(String, String, String, String)
  nameWithType: MembershipProvider.ChangePasswordQuestionAndAnswer(String, String, String, String)
  fullName: MembershipProvider.ChangePasswordQuestionAndAnswer(String, String, String, String)
  type: Method
  assemblies:
  - System.Web.ApplicationServices
  namespace: System.Web.Security
  summary: Processes a request to update the password question and answer for a membership user.
  remarks: "Takes, as input, a user name, a password, a password question and a password answer, and updates the password question and answer in the data source if the supplied user name and password are valid.  \n  \n If the supplied user name and password are not valid, `false` is returned."
  example:
  - For an example of a <xref:System.Web.Security.MembershipProvider> implementation, see [Implementing a Profile Provider](http://msdn.microsoft.com/library/58de6e99-31a7-41b9-93ed-51b9b4a67e98).
  syntax:
    content: public abstract bool ChangePasswordQuestionAndAnswer (string username, string password, string newPasswordQuestion, string newPasswordAnswer);
    parameters:
    - id: username
      type: System.String
      description: The user to change the password question and answer for.
    - id: password
      type: System.String
      description: The password for the specified user.
    - id: newPasswordQuestion
      type: System.String
      description: The new password question for the specified user.
    - id: newPasswordAnswer
      type: System.String
      description: The new password answer for the specified user.
    return:
      type: System.Boolean
      description: '`true` if the password question and answer are updated successfully; otherwise, `false`.'
  overload: System.Web.Security.MembershipProvider.ChangePasswordQuestionAndAnswer*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Security/MembershipProvider.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.Security.MembershipProvider.CreateUser(System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Object,System.Web.Security.MembershipCreateStatus@)
  commentId: M:System.Web.Security.MembershipProvider.CreateUser(System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Object,System.Web.Security.MembershipCreateStatus@)
  id: CreateUser(System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Object,System.Web.Security.MembershipCreateStatus@)
  parent: System.Web.Security.MembershipProvider
  langs:
  - csharp
  name: CreateUser(String, String, String, String, String, Boolean, Object, MembershipCreateStatus)
  nameWithType: MembershipProvider.CreateUser(String, String, String, String, String, Boolean, Object, MembershipCreateStatus)
  fullName: MembershipProvider.CreateUser(String, String, String, String, String, Boolean, Object, MembershipCreateStatus)
  type: Method
  assemblies:
  - System.Web.ApplicationServices
  namespace: System.Web.Security
  summary: Adds a new membership user to the data source.
  remarks: "Takes, as input, the name of a new user, a password, and an e-mail address and inserts a new user for the application into the data source. The <xref:System.Web.Security.MembershipProvider.CreateUser%2A> method returns a <xref:System.Web.Security.MembershipUser> object populated with the information for the newly created user. The <xref:System.Web.Security.MembershipProvider.CreateUser%2A> method also defines an `out` parameter (in Visual Basic, you can use `ByRef`) that returns a <xref:System.Web.Security.MembershipCreateStatus> value that indicates that the user was successfully created, or a reason that user creation failed.  \n  \n The <xref:System.Web.Security.MembershipProvider.CreateUser%2A> method raises the <xref:System.Web.Security.MembershipProvider.ValidatingPassword> event, if a <xref:System.Web.Security.MembershipValidatePasswordEventHandler> event handler has been specified, and continues or cancels the create-user action based on the results of the event. You can use the <xref:System.Web.Security.MembershipProvider.OnValidatingPassword%2A> virtual method to execute the specified <xref:System.Web.Security.MembershipValidatePasswordEventHandler> event handler."
  example:
  - For an example of a <xref:System.Web.Security.MembershipProvider> implementation, see [Implementing a Profile Provider](http://msdn.microsoft.com/library/58de6e99-31a7-41b9-93ed-51b9b4a67e98).
  syntax:
    content: public abstract System.Web.Security.MembershipUser CreateUser (string username, string password, string email, string passwordQuestion, string passwordAnswer, bool isApproved, object providerUserKey, out System.Web.Security.MembershipCreateStatus status);
    parameters:
    - id: username
      type: System.String
      description: The user name for the new user.
    - id: password
      type: System.String
      description: The password for the new user.
    - id: email
      type: System.String
      description: The e-mail address for the new user.
    - id: passwordQuestion
      type: System.String
      description: The password question for the new user.
    - id: passwordAnswer
      type: System.String
      description: The password answer for the new user
    - id: isApproved
      type: System.Boolean
      description: Whether or not the new user is approved to be validated.
    - id: providerUserKey
      type: System.Object
      description: The unique identifier from the membership data source for the user.
    - id: status
      type: System.Web.Security.MembershipCreateStatus
      description: A <xref href="System.Web.Security.MembershipCreateStatus"></xref> enumeration value indicating whether the user was created successfully.
    return:
      type: System.Web.Security.MembershipUser
      description: A <xref href="System.Web.Security.MembershipUser"></xref> object populated with the information for the newly created user.
  overload: System.Web.Security.MembershipProvider.CreateUser*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Security/MembershipProvider.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.Security.MembershipProvider.DecryptPassword(System.Byte[])
  commentId: M:System.Web.Security.MembershipProvider.DecryptPassword(System.Byte[])
  id: DecryptPassword(System.Byte[])
  parent: System.Web.Security.MembershipProvider
  langs:
  - csharp
  name: DecryptPassword(Byte[])
  nameWithType: MembershipProvider.DecryptPassword(Byte[])
  fullName: MembershipProvider.DecryptPassword(Byte[])
  type: Method
  assemblies:
  - System.Web.ApplicationServices
  namespace: System.Web.Security
  summary: Decrypts an encrypted password.
  remarks: The <xref:System.Web.Security.MembershipProvider.DecryptPassword%2A> method is a virtual method that is provided for membership provider implementations to use when supporting encrypted password formats.
  example:
  - For an example of a <xref:System.Web.Security.MembershipProvider> implementation, see [Implementing a Profile Provider](http://msdn.microsoft.com/library/58de6e99-31a7-41b9-93ed-51b9b4a67e98).
  syntax:
    content: protected virtual byte[] DecryptPassword (byte[] encodedPassword);
    parameters:
    - id: encodedPassword
      type: System.Byte[]
      description: A byte array that contains the encrypted password to decrypt.
    return:
      type: System.Byte[]
      description: A byte array that contains the decrypted password.
  overload: System.Web.Security.MembershipProvider.DecryptPassword*
  exceptions:
  - type: System.Configuration.Provider.ProviderException
    commentId: T:System.Configuration.Provider.ProviderException
    description: The <xref href="System.Web.Configuration.MachineKeySection.ValidationKey"></xref> property or <xref href="System.Web.Configuration.MachineKeySection.DecryptionKey"></xref> property is set to `AutoGenerate`.
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: This method is not available. This can occur if the application targets the [!INCLUDE[net_client_v40_long](~/includes/net-client-v40-long-md.md)]. To prevent this exception, override the method, or change the application to target the full version of the .NET Framework.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Security/MembershipProvider.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.Security.MembershipProvider.DeleteUser(System.String,System.Boolean)
  commentId: M:System.Web.Security.MembershipProvider.DeleteUser(System.String,System.Boolean)
  id: DeleteUser(System.String,System.Boolean)
  parent: System.Web.Security.MembershipProvider
  langs:
  - csharp
  name: DeleteUser(String, Boolean)
  nameWithType: MembershipProvider.DeleteUser(String, Boolean)
  fullName: MembershipProvider.DeleteUser(String, Boolean)
  type: Method
  assemblies:
  - System.Web.ApplicationServices
  namespace: System.Web.Security
  summary: Removes a user from the membership data source.
  remarks: Takes, as input, the name of a user and deletes that user's information from the data source. If `deleteAllRelatedData` is `true`, then all user data stored in the database for the <xref:System.Web.Security.Roles>, <xref:System.Web.HttpContext.Profile%2A>, and <xref:System.Web.UI.WebControls.WebParts.WebPart> personalization is also deleted.
  example:
  - For an example of a <xref:System.Web.Security.MembershipProvider> implementation, see [Implementing a Profile Provider](http://msdn.microsoft.com/library/58de6e99-31a7-41b9-93ed-51b9b4a67e98).
  syntax:
    content: public abstract bool DeleteUser (string username, bool deleteAllRelatedData);
    parameters:
    - id: username
      type: System.String
      description: The name of the user to delete.
    - id: deleteAllRelatedData
      type: System.Boolean
      description: '`true` to delete data related to the user from the database; `false` to leave data related to the user in the database.'
    return:
      type: System.Boolean
      description: '`true` if the user was successfully deleted; otherwise, `false`.'
  overload: System.Web.Security.MembershipProvider.DeleteUser*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Security/MembershipProvider.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.Security.MembershipProvider.EnablePasswordReset
  commentId: P:System.Web.Security.MembershipProvider.EnablePasswordReset
  id: EnablePasswordReset
  parent: System.Web.Security.MembershipProvider
  langs:
  - csharp
  name: EnablePasswordReset
  nameWithType: MembershipProvider.EnablePasswordReset
  fullName: MembershipProvider.EnablePasswordReset
  type: Property
  assemblies:
  - System.Web.ApplicationServices
  namespace: System.Web.Security
  summary: Indicates whether the membership provider is configured to allow users to reset their passwords.
  remarks: <xref:System.Web.Security.MembershipProvider.EnablePasswordReset%2A> contains a Boolean value specified in the configuration file (Web.config) using the `enablePasswordReset` attribute. The value indicates whether users can use the <xref:System.Web.Security.MembershipProvider.ResetPassword%2A> method to overwrite their current password with a new, randomly generated password. This property is read-only.
  example:
  - For an example of a <xref:System.Web.Security.MembershipProvider> implementation, see [Implementing a Profile Provider](http://msdn.microsoft.com/library/58de6e99-31a7-41b9-93ed-51b9b4a67e98).
  syntax:
    content: public abstract bool EnablePasswordReset { get; }
    return:
      type: System.Boolean
      description: '`true` if the membership provider supports password reset; otherwise, `false`. The default is `true`.'
  overload: System.Web.Security.MembershipProvider.EnablePasswordReset*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Security/MembershipProvider.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.Security.MembershipProvider.EnablePasswordRetrieval
  commentId: P:System.Web.Security.MembershipProvider.EnablePasswordRetrieval
  id: EnablePasswordRetrieval
  parent: System.Web.Security.MembershipProvider
  langs:
  - csharp
  name: EnablePasswordRetrieval
  nameWithType: MembershipProvider.EnablePasswordRetrieval
  fullName: MembershipProvider.EnablePasswordRetrieval
  type: Property
  assemblies:
  - System.Web.ApplicationServices
  namespace: System.Web.Security
  summary: Indicates whether the membership provider is configured to allow users to retrieve their passwords.
  remarks: "The <xref:System.Web.Security.MembershipProvider.EnablePasswordRetrieval%2A> property contains a Boolean value specified in the configuration file (Web.config) using the `enablePasswordRetrieval` attribute. The value indicates whether users can use the <xref:System.Web.Security.MembershipProvider.GetPassword%2A> method to retrieve their current password from the data source. This property is read-only.  \n  \n If your custom membership provider supports hashed passwords, your <xref:System.Web.Security.MembershipProvider.GetPassword%2A> method implementation should throw an exception if <xref:System.Web.Security.MembershipProvider.EnablePasswordRetrieval%2A> is set to `true` and the password format is set to `Hashed`. Hashed passwords cannot be retrieved."
  example:
  - For an example of a <xref:System.Web.Security.MembershipProvider> implementation, see [Implementing a Profile Provider](http://msdn.microsoft.com/library/58de6e99-31a7-41b9-93ed-51b9b4a67e98).
  syntax:
    content: public abstract bool EnablePasswordRetrieval { get; }
    return:
      type: System.Boolean
      description: '`true` if the membership provider is configured to support password retrieval; otherwise, `false`. The default is `false`.'
  overload: System.Web.Security.MembershipProvider.EnablePasswordRetrieval*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Security/MembershipProvider.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.Security.MembershipProvider.EncryptPassword(System.Byte[])
  commentId: M:System.Web.Security.MembershipProvider.EncryptPassword(System.Byte[])
  id: EncryptPassword(System.Byte[])
  parent: System.Web.Security.MembershipProvider
  langs:
  - csharp
  name: EncryptPassword(Byte[])
  nameWithType: MembershipProvider.EncryptPassword(Byte[])
  fullName: MembershipProvider.EncryptPassword(Byte[])
  type: Method
  assemblies:
  - System.Web.ApplicationServices
  namespace: System.Web.Security
  summary: Encrypts a password.
  remarks: The <xref:System.Web.Security.MembershipProvider.EncryptPassword%2A> method is a virtual method that is provided for membership provider implementations to use when supporting encrypted password formats.
  example:
  - For an example of a <xref:System.Web.Security.MembershipProvider> implementation, see [Implementing a Profile Provider](http://msdn.microsoft.com/library/58de6e99-31a7-41b9-93ed-51b9b4a67e98).
  syntax:
    content: protected virtual byte[] EncryptPassword (byte[] password);
    parameters:
    - id: password
      type: System.Byte[]
      description: A byte array that contains the password to encrypt.
    return:
      type: System.Byte[]
      description: A byte array that contains the encrypted password.
  overload: System.Web.Security.MembershipProvider.EncryptPassword*
  exceptions:
  - type: System.Configuration.Provider.ProviderException
    commentId: T:System.Configuration.Provider.ProviderException
    description: The <xref href="System.Web.Configuration.MachineKeySection.ValidationKey"></xref> property or <xref href="System.Web.Configuration.MachineKeySection.DecryptionKey"></xref> property is set to `AutoGenerate`.
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: This method is not available. This can occur if the application targets the [!INCLUDE[net_client_v40_long](~/includes/net-client-v40-long-md.md)]. To prevent this exception, override the method, or change the application to target the full version of the .NET Framework.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Security/MembershipProvider.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.Security.MembershipProvider.EncryptPassword(System.Byte[],System.Web.Configuration.MembershipPasswordCompatibilityMode)
  commentId: M:System.Web.Security.MembershipProvider.EncryptPassword(System.Byte[],System.Web.Configuration.MembershipPasswordCompatibilityMode)
  id: EncryptPassword(System.Byte[],System.Web.Configuration.MembershipPasswordCompatibilityMode)
  parent: System.Web.Security.MembershipProvider
  langs:
  - csharp
  name: EncryptPassword(Byte[], MembershipPasswordCompatibilityMode)
  nameWithType: MembershipProvider.EncryptPassword(Byte[], MembershipPasswordCompatibilityMode)
  fullName: MembershipProvider.EncryptPassword(Byte[], MembershipPasswordCompatibilityMode)
  type: Method
  assemblies:
  - System.Web.ApplicationServices
  namespace: System.Web.Security
  summary: Encrypts the specified password using the specified password-compatibility mode.
  syntax:
    content: protected virtual byte[] EncryptPassword (byte[] password, System.Web.Configuration.MembershipPasswordCompatibilityMode legacyPasswordCompatibilityMode);
    parameters:
    - id: password
      type: System.Byte[]
      description: A byte array that contains the password to encrypt.
    - id: legacyPasswordCompatibilityMode
      type: System.Web.Configuration.MembershipPasswordCompatibilityMode
      description: The membership password-compatibility mode.
    return:
      type: System.Byte[]
      description: A byte array that contains the encrypted password.
  overload: System.Web.Security.MembershipProvider.EncryptPassword*
  exceptions:
  - type: System.Configuration.Provider.ProviderException
    commentId: T:System.Configuration.Provider.ProviderException
    description: The <xref href="System.Web.Configuration.MachineKeySection.ValidationKey"></xref> property or <xref href="System.Web.Configuration.MachineKeySection.DecryptionKey"></xref> property is set to `AutoGenerate`.
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: This method is not available. This can occur if the application targets the [!INCLUDE[net_client_v40_long](~/includes/net-client-v40-long-md.md)]. To prevent this exception, override the method, or change the application to target the full version of the .NET Framework.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Security/MembershipProvider.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.Security.MembershipProvider.FindUsersByEmail(System.String,System.Int32,System.Int32,System.Int32@)
  commentId: M:System.Web.Security.MembershipProvider.FindUsersByEmail(System.String,System.Int32,System.Int32,System.Int32@)
  id: FindUsersByEmail(System.String,System.Int32,System.Int32,System.Int32@)
  parent: System.Web.Security.MembershipProvider
  langs:
  - csharp
  name: FindUsersByEmail(String, Int32, Int32, Int32)
  nameWithType: MembershipProvider.FindUsersByEmail(String, Int32, Int32, Int32)
  fullName: MembershipProvider.FindUsersByEmail(String, Int32, Int32, Int32)
  type: Method
  assemblies:
  - System.Web.ApplicationServices
  namespace: System.Web.Security
  summary: Gets a collection of membership users where the e-mail address contains the specified e-mail address to match.
  remarks: "<xref:System.Web.Security.MembershipProvider.FindUsersByEmail%2A> returns a list of membership users where the user's e-mail address matches the supplied `emailToMatch` for the configured <xref:System.Web.Security.MembershipProvider.ApplicationName%2A> property. If your data source supports additional search capabilities, such as wildcard characters, you can provide more extensive search capabilities for e-mail addresses.  \n  \n The results returned by <xref:System.Web.Security.MembershipProvider.FindUsersByEmail%2A> are constrained by the `pageIndex` and `pageSize` parameters. The `pageSize` parameter identifies the number of <xref:System.Web.Security.MembershipUser> objects to return in the <xref:System.Web.Security.MembershipUserCollection> collection. The `pageIndex` parameter identifies which page of results to return where 0 identifies the first page. The `totalRecords` parameter is an `out` parameter that is set to the total number of membership users that matched the `emailToMatch` value. For example, if 13 users were found where `emailToMatch` matched part of or the entire e-mail address, and the `pageIndex` value was 1 with a `pageSize` of 5, then the <xref:System.Web.Security.MembershipUserCollection> would contain the sixth through the tenth users returned. `totalRecords` would be set to 13."
  example:
  - For an example of a <xref:System.Web.Security.MembershipProvider> implementation, see [Implementing a Profile Provider](http://msdn.microsoft.com/library/58de6e99-31a7-41b9-93ed-51b9b4a67e98).
  syntax:
    content: public abstract System.Web.Security.MembershipUserCollection FindUsersByEmail (string emailToMatch, int pageIndex, int pageSize, out int totalRecords);
    parameters:
    - id: emailToMatch
      type: System.String
      description: The e-mail address to search for.
    - id: pageIndex
      type: System.Int32
      description: The index of the page of results to return. <code>pageIndex</code> is zero-based.
    - id: pageSize
      type: System.Int32
      description: The size of the page of results to return.
    - id: totalRecords
      type: System.Int32
      description: The total number of matched users.
    return:
      type: System.Web.Security.MembershipUserCollection
      description: A <xref href="System.Web.Security.MembershipUserCollection"></xref> collection that contains a page of <code>pageSize</code><xref href="System.Web.Security.MembershipUser"></xref> objects beginning at the page specified by <code>pageIndex</code>.
  overload: System.Web.Security.MembershipProvider.FindUsersByEmail*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Security/MembershipProvider.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.Security.MembershipProvider.FindUsersByName(System.String,System.Int32,System.Int32,System.Int32@)
  commentId: M:System.Web.Security.MembershipProvider.FindUsersByName(System.String,System.Int32,System.Int32,System.Int32@)
  id: FindUsersByName(System.String,System.Int32,System.Int32,System.Int32@)
  parent: System.Web.Security.MembershipProvider
  langs:
  - csharp
  name: FindUsersByName(String, Int32, Int32, Int32)
  nameWithType: MembershipProvider.FindUsersByName(String, Int32, Int32, Int32)
  fullName: MembershipProvider.FindUsersByName(String, Int32, Int32, Int32)
  type: Method
  assemblies:
  - System.Web.ApplicationServices
  namespace: System.Web.Security
  summary: Gets a collection of membership users where the user name contains the specified user name to match.
  remarks: "<xref:System.Web.Security.MembershipProvider.FindUsersByName%2A> returns a list of membership users where the user name matches the supplied `usernameToMatch` for the configured <xref:System.Web.Security.MembershipProvider.ApplicationName%2A> property. If your data source supports additional search capabilities, such as wildcard characters, you can provide more extensive search capabilities for user names.  \n  \n The results returned by <xref:System.Web.Security.MembershipProvider.FindUsersByName%2A> are constrained by the `pageIndex` and `pageSize` parameters. The `pageSize` parameter identifies the number of <xref:System.Web.Security.MembershipUser> objects to return in the <xref:System.Web.Security.MembershipUserCollection> collection. The `pageIndex` parameter identifies which page of results to return, where 0 identifies the first page. The `totalRecords` parameter is an `out` parameter that is set to the total number of membership users that matched the `usernameToMatch` value. For example, if 13 users were found where `usernameToMatch` matched part of or the entire user name, and the `pageIndex` value was 1 with a `pageSize` of 5, then the <xref:System.Web.Security.MembershipUserCollection> would contain the sixth through the tenth users returned. `totalRecords` would be set to 13."
  example:
  - For an example of a <xref:System.Web.Security.MembershipProvider> implementation, see [Implementing a Profile Provider](http://msdn.microsoft.com/library/58de6e99-31a7-41b9-93ed-51b9b4a67e98).
  syntax:
    content: public abstract System.Web.Security.MembershipUserCollection FindUsersByName (string usernameToMatch, int pageIndex, int pageSize, out int totalRecords);
    parameters:
    - id: usernameToMatch
      type: System.String
      description: The user name to search for.
    - id: pageIndex
      type: System.Int32
      description: The index of the page of results to return. <code>pageIndex</code> is zero-based.
    - id: pageSize
      type: System.Int32
      description: The size of the page of results to return.
    - id: totalRecords
      type: System.Int32
      description: The total number of matched users.
    return:
      type: System.Web.Security.MembershipUserCollection
      description: A <xref href="System.Web.Security.MembershipUserCollection"></xref> collection that contains a page of <code>pageSize</code><xref href="System.Web.Security.MembershipUser"></xref> objects beginning at the page specified by <code>pageIndex</code>.
  overload: System.Web.Security.MembershipProvider.FindUsersByName*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Security/MembershipProvider.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.Security.MembershipProvider.GetAllUsers(System.Int32,System.Int32,System.Int32@)
  commentId: M:System.Web.Security.MembershipProvider.GetAllUsers(System.Int32,System.Int32,System.Int32@)
  id: GetAllUsers(System.Int32,System.Int32,System.Int32@)
  parent: System.Web.Security.MembershipProvider
  langs:
  - csharp
  name: GetAllUsers(Int32, Int32, Int32)
  nameWithType: MembershipProvider.GetAllUsers(Int32, Int32, Int32)
  fullName: MembershipProvider.GetAllUsers(Int32, Int32, Int32)
  type: Method
  assemblies:
  - System.Web.ApplicationServices
  namespace: System.Web.Security
  summary: Gets a collection of all the users in the data source in pages of data.
  remarks: "<xref:System.Web.Security.MembershipProvider.GetAllUsers%2A> returns a list of all of the users from the data source for the configured <xref:System.Web.Security.MembershipProvider.ApplicationName%2A> property. Users are returned in alphabetical order by user name.  \n  \n The results returned by <xref:System.Web.Security.MembershipProvider.GetAllUsers%2A> are constrained by the `pageIndex` and `pageSize` parameters. The `pageSize` parameter identifies the number of <xref:System.Web.Security.MembershipUser> objects to return in the <xref:System.Web.Security.MembershipUserCollection> collection. The `pageIndex` parameter identifies which page of results to return, where 0 identifies the first page. The `totalRecords` parameter is an `out` parameter that is set to the total number of membership users in the database. For example, if there are 13 users in the database, and the `pageIndex` value was 1 with a `pageSize` of 5, then the <xref:System.Web.Security.MembershipUserCollection> would contain the sixth through the tenth users returned. `totalRecords` would be set to 13."
  example:
  - For an example of a <xref:System.Web.Security.MembershipProvider> implementation, see [Implementing a Profile Provider](http://msdn.microsoft.com/library/58de6e99-31a7-41b9-93ed-51b9b4a67e98).
  syntax:
    content: public abstract System.Web.Security.MembershipUserCollection GetAllUsers (int pageIndex, int pageSize, out int totalRecords);
    parameters:
    - id: pageIndex
      type: System.Int32
      description: The index of the page of results to return. <code>pageIndex</code> is zero-based.
    - id: pageSize
      type: System.Int32
      description: The size of the page of results to return.
    - id: totalRecords
      type: System.Int32
      description: The total number of matched users.
    return:
      type: System.Web.Security.MembershipUserCollection
      description: A <xref href="System.Web.Security.MembershipUserCollection"></xref> collection that contains a page of <code>pageSize</code><xref href="System.Web.Security.MembershipUser"></xref> objects beginning at the page specified by <code>pageIndex</code>.
  overload: System.Web.Security.MembershipProvider.GetAllUsers*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Security/MembershipProvider.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.Security.MembershipProvider.GetNumberOfUsersOnline
  commentId: M:System.Web.Security.MembershipProvider.GetNumberOfUsersOnline
  id: GetNumberOfUsersOnline
  parent: System.Web.Security.MembershipProvider
  langs:
  - csharp
  name: GetNumberOfUsersOnline()
  nameWithType: MembershipProvider.GetNumberOfUsersOnline()
  fullName: MembershipProvider.GetNumberOfUsersOnline()
  type: Method
  assemblies:
  - System.Web.ApplicationServices
  namespace: System.Web.Security
  summary: Gets the number of users currently accessing the application.
  remarks: Returns an integer value that is the count of all the users in the data source where the <xref:System.Web.Security.MembershipUser.LastActivityDate%2A> is greater than the current date and time minus the <xref:System.Web.Security.Membership.UserIsOnlineTimeWindow%2A>. The <xref:System.Web.Security.Membership.UserIsOnlineTimeWindow%2A> is a positive integer value specifying the number of minutes to use when determining whether a user is online.
  example:
  - For an example of a <xref:System.Web.Security.MembershipProvider> implementation, see [Implementing a Profile Provider](http://msdn.microsoft.com/library/58de6e99-31a7-41b9-93ed-51b9b4a67e98).
  syntax:
    content: public abstract int GetNumberOfUsersOnline ();
    parameters: []
    return:
      type: System.Int32
      description: The number of users currently accessing the application.
  overload: System.Web.Security.MembershipProvider.GetNumberOfUsersOnline*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Security/MembershipProvider.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.Security.MembershipProvider.GetPassword(System.String,System.String)
  commentId: M:System.Web.Security.MembershipProvider.GetPassword(System.String,System.String)
  id: GetPassword(System.String,System.String)
  parent: System.Web.Security.MembershipProvider
  langs:
  - csharp
  name: GetPassword(String, String)
  nameWithType: MembershipProvider.GetPassword(String, String)
  fullName: MembershipProvider.GetPassword(String, String)
  type: Method
  assemblies:
  - System.Web.ApplicationServices
  namespace: System.Web.Security
  summary: Gets the password for the specified user name from the data source.
  remarks: "Takes, as input, a user name and a password answer and retrieves the password for that user from the data source and returns the password as a string.  \n  \n The <xref:System.Web.Security.MembershipProvider.GetPassword%2A> method ensures that the <xref:System.Web.Security.MembershipProvider.EnablePasswordRetrieval%2A> flag is set to `true` before performing any action. If <xref:System.Web.Security.MembershipProvider.EnablePasswordRetrieval%2A> is `false`, a <xref:System.NotSupportedException> exception is thrown.  \n  \n <xref:System.Web.Security.MembershipProvider.GetPassword%2A> also checks the value of the <xref:System.Web.Security.MembershipProvider.RequiresQuestionAndAnswer%2A> property. If <xref:System.Web.Security.MembershipProvider.RequiresQuestionAndAnswer%2A> is `true`, <xref:System.Web.Security.MembershipProvider.GetPassword%2A> checks the value of the supplied answer parameter against the stored password answer in the data source. If they do not match, a <xref:System.Web.Security.MembershipPasswordException> exception is thrown.  \n  \n If your custom membership provider supports hashed passwords, the <xref:System.Web.Security.MembershipProvider.GetPassword%2A> method should throw an exception if the <xref:System.Web.Security.MembershipProvider.EnablePasswordRetrieval%2A> property is set to `true` and the password format is set to `Hashed`. Hashed passwords cannot be retrieved."
  example:
  - For an example of a <xref:System.Web.Security.MembershipProvider> implementation, see [Implementing a Profile Provider](http://msdn.microsoft.com/library/58de6e99-31a7-41b9-93ed-51b9b4a67e98).
  syntax:
    content: public abstract string GetPassword (string username, string answer);
    parameters:
    - id: username
      type: System.String
      description: The user to retrieve the password for.
    - id: answer
      type: System.String
      description: The password answer for the user.
    return:
      type: System.String
      description: The password for the specified user name.
  overload: System.Web.Security.MembershipProvider.GetPassword*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Security/MembershipProvider.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.Security.MembershipProvider.GetUser(System.String,System.Boolean)
  commentId: M:System.Web.Security.MembershipProvider.GetUser(System.String,System.Boolean)
  id: GetUser(System.String,System.Boolean)
  parent: System.Web.Security.MembershipProvider
  langs:
  - csharp
  name: GetUser(String, Boolean)
  nameWithType: MembershipProvider.GetUser(String, Boolean)
  fullName: MembershipProvider.GetUser(String, Boolean)
  type: Method
  assemblies:
  - System.Web.ApplicationServices
  namespace: System.Web.Security
  summary: Gets information from the data source for a user. Provides an option to update the last-activity date/time stamp for the user.
  remarks: Takes, as input, a user name and a Boolean value indicating whether to update the <xref:System.Web.Security.MembershipUser.LastActivityDate%2A> property value for the user to show that the user is currently online. <xref:System.Web.Security.MembershipProvider.GetUser%2A> returns a <xref:System.Web.Security.MembershipUser> object populated with current values from the data source for the specified user. If the user name is not found in the data source, <xref:System.Web.Security.MembershipProvider.GetUser%2A> returns `null`.
  example:
  - For an example of a <xref:System.Web.Security.MembershipProvider> implementation, see [Implementing a Profile Provider](http://msdn.microsoft.com/library/58de6e99-31a7-41b9-93ed-51b9b4a67e98).
  syntax:
    content: public abstract System.Web.Security.MembershipUser GetUser (string username, bool userIsOnline);
    parameters:
    - id: username
      type: System.String
      description: The name of the user to get information for.
    - id: userIsOnline
      type: System.Boolean
      description: '`true` to update the last-activity date/time stamp for the user; `false` to return user information without updating the last-activity date/time stamp for the user.'
    return:
      type: System.Web.Security.MembershipUser
      description: A <xref href="System.Web.Security.MembershipUser"></xref> object populated with the specified user's information from the data source.
  overload: System.Web.Security.MembershipProvider.GetUser*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Security/MembershipProvider.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.Security.MembershipProvider.GetUser(System.Object,System.Boolean)
  commentId: M:System.Web.Security.MembershipProvider.GetUser(System.Object,System.Boolean)
  id: GetUser(System.Object,System.Boolean)
  parent: System.Web.Security.MembershipProvider
  langs:
  - csharp
  name: GetUser(Object, Boolean)
  nameWithType: MembershipProvider.GetUser(Object, Boolean)
  fullName: MembershipProvider.GetUser(Object, Boolean)
  type: Method
  assemblies:
  - System.Web.ApplicationServices
  namespace: System.Web.Security
  summary: Gets user information from the data source based on the unique identifier for the membership user. Provides an option to update the last-activity date/time stamp for the user.
  remarks: Takes, as input, a unique identifier for a user record and a Boolean value indicating whether to update the <xref:System.Web.Security.MembershipUser.LastActivityDate%2A> value for the user to show that the user is currently online. The <xref:System.Web.Security.MembershipProvider.GetUser%2A> method returns a <xref:System.Web.Security.MembershipUser> object populated with current values from the data source for the specified user. If the user name is not found in the data source, <xref:System.Web.Security.MembershipProvider.GetUser%2A> returns `null`.
  example:
  - For an example of a <xref:System.Web.Security.MembershipProvider> implementation, see [Implementing a Profile Provider](http://msdn.microsoft.com/library/58de6e99-31a7-41b9-93ed-51b9b4a67e98).
  syntax:
    content: public abstract System.Web.Security.MembershipUser GetUser (object providerUserKey, bool userIsOnline);
    parameters:
    - id: providerUserKey
      type: System.Object
      description: The unique identifier for the membership user to get information for.
    - id: userIsOnline
      type: System.Boolean
      description: '`true` to update the last-activity date/time stamp for the user; `false` to return user information without updating the last-activity date/time stamp for the user.'
    return:
      type: System.Web.Security.MembershipUser
      description: A <xref href="System.Web.Security.MembershipUser"></xref> object populated with the specified user's information from the data source.
  overload: System.Web.Security.MembershipProvider.GetUser*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Security/MembershipProvider.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.Security.MembershipProvider.GetUserNameByEmail(System.String)
  commentId: M:System.Web.Security.MembershipProvider.GetUserNameByEmail(System.String)
  id: GetUserNameByEmail(System.String)
  parent: System.Web.Security.MembershipProvider
  langs:
  - csharp
  name: GetUserNameByEmail(String)
  nameWithType: MembershipProvider.GetUserNameByEmail(String)
  fullName: MembershipProvider.GetUserNameByEmail(String)
  type: Method
  assemblies:
  - System.Web.ApplicationServices
  namespace: System.Web.Security
  summary: Gets the user name associated with the specified e-mail address.
  remarks: "Takes, as input, an e-mail address and returns the first user name from the data source where the e-mail address matches the supplied `email` parameter value.  \n  \n If no user name is found with a matching e-mail address, `null` is returned.  \n  \n If multiple user names are found that match a particular e-mail address, only the first user name found should be returned. You can implement a custom mechanism for ensuring a unique e-mail address for each user name such as the <xref:System.Web.Security.SqlMembershipProvider.RequiresUniqueEmail%2A> property supported by the <xref:System.Web.Security.SqlMembershipProvider> provider."
  example:
  - For an example of a <xref:System.Web.Security.MembershipProvider> implementation, see [Implementing a Profile Provider](http://msdn.microsoft.com/library/58de6e99-31a7-41b9-93ed-51b9b4a67e98).
  syntax:
    content: public abstract string GetUserNameByEmail (string email);
    parameters:
    - id: email
      type: System.String
      description: The e-mail address to search for.
    return:
      type: System.String
      description: The user name associated with the specified e-mail address. If no match is found, return `null`.
  overload: System.Web.Security.MembershipProvider.GetUserNameByEmail*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Security/MembershipProvider.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.Security.MembershipProvider.MaxInvalidPasswordAttempts
  commentId: P:System.Web.Security.MembershipProvider.MaxInvalidPasswordAttempts
  id: MaxInvalidPasswordAttempts
  parent: System.Web.Security.MembershipProvider
  langs:
  - csharp
  name: MaxInvalidPasswordAttempts
  nameWithType: MembershipProvider.MaxInvalidPasswordAttempts
  fullName: MembershipProvider.MaxInvalidPasswordAttempts
  type: Property
  assemblies:
  - System.Web.ApplicationServices
  namespace: System.Web.Security
  summary: Gets the number of invalid password or password-answer attempts allowed before the membership user is locked out.
  remarks: "The <xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A> property works in conjunction with the <xref:System.Web.Security.Membership.PasswordAttemptWindow%2A> property to guard against an unwanted source guessing the password or password answer of a membership user through repeated attempts. If the number of invalid passwords or password questions supplied for a membership user is greater than or equal to the <xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A> property value within the number of minutes identified by the <xref:System.Web.Security.Membership.PasswordAttemptWindow%2A>, then the membership user is locked out by setting the <xref:System.Web.Security.MembershipUser.IsLockedOut%2A> property to `true` until the user is unlocked by a call to the <xref:System.Web.Security.MembershipUser.UnlockUser%2A> method. If a valid password or password answer is supplied before the <xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A> value is reached, the counter that tracks the number of invalid attempts is reset to zero.  \n  \n Invalid password and password-answer attempts accumulate independently of one another. For example, if the <xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A> property is set to 5, and three invalid password attempts are made followed by two invalid password-answer attempts, two more invalid password attempts (or three more invalid password-answer attempts) must be made within the <xref:System.Web.Security.Membership.PasswordAttemptWindow%2A> for the membership user to be locked out.  \n  \n If the <xref:System.Web.Security.Membership.RequiresQuestionAndAnswer%2A> property is set to `false`, invalid password-answer attempts are not tracked.  \n  \n Invalid password and password-answer attempts are tracked in the <xref:System.Web.Security.MembershipProvider.ValidateUser%2A>, <xref:System.Web.Security.MembershipProvider.ChangePassword%2A>, <xref:System.Web.Security.MembershipProvider.ChangePasswordQuestionAndAnswer%2A>, <xref:System.Web.Security.MembershipProvider.GetPassword%2A>, and <xref:System.Web.Security.MembershipProvider.ResetPassword%2A> methods."
  example:
  - For an example of a <xref:System.Web.Security.MembershipProvider> implementation, see [Implementing a Profile Provider](http://msdn.microsoft.com/library/58de6e99-31a7-41b9-93ed-51b9b4a67e98).
  syntax:
    content: public abstract int MaxInvalidPasswordAttempts { get; }
    return:
      type: System.Int32
      description: The number of invalid password or password-answer attempts allowed before the membership user is locked out.
  overload: System.Web.Security.MembershipProvider.MaxInvalidPasswordAttempts*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Security/MembershipProvider.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.Security.MembershipProvider.MinRequiredNonAlphanumericCharacters
  commentId: P:System.Web.Security.MembershipProvider.MinRequiredNonAlphanumericCharacters
  id: MinRequiredNonAlphanumericCharacters
  parent: System.Web.Security.MembershipProvider
  langs:
  - csharp
  name: MinRequiredNonAlphanumericCharacters
  nameWithType: MembershipProvider.MinRequiredNonAlphanumericCharacters
  fullName: MembershipProvider.MinRequiredNonAlphanumericCharacters
  type: Property
  assemblies:
  - System.Web.ApplicationServices
  namespace: System.Web.Security
  summary: Gets the minimum number of special characters that must be present in a valid password.
  remarks: "The <xref:System.Web.Security.MembershipProvider.MinRequiredNonAlphanumericCharacters%2A> property returns the minimum number of special, non-alphabetic characters that must be entered to create a valid password for the <xref:System.Web.Security.MembershipProvider> object.  \n  \n The <xref:System.Web.Security.MembershipProvider.MinRequiredNonAlphanumericCharacters%2A> property value is set in the application configuration using the `minRequiredNonalphanumericCharacters` attribute of the [membership Element (ASP.NET Settings Schema)](http://msdn.microsoft.com/en-us/b9c1ee8f-33ca-4361-8666-b42a0fe86049) configuration element.  \n  \n A non-alphanumeric character is a character for which the <xref:System.Char.IsLetterOrDigit%2A> method returns `false`."
  example:
  - "The following example shows the [membership Element (ASP.NET Settings Schema)](http://msdn.microsoft.com/en-us/b9c1ee8f-33ca-4361-8666-b42a0fe86049) configuration element in the `system.web` section of the application's Web.config file. It specifies that the application use an instance of the <xref:System.Web.Security.SqlMembershipProvider> class to provide membership services, and sets the `minRequiredNonalphanumericCharacters` attribute to 1 character.  \n  \n```  \n<membership>  \n  <providers>  \n    <clear/>  \n    <add name=\"AspNetSqlMembershipProvider\"   \n      type=\"System.Web.Security.SqlMembershipProvider\"   \n      connectionStringName=\"ApplicationServices\"   \n      enablePasswordRetrieval=\"false\"   \n      enablePasswordReset=\"true\"   \n      requiresQuestionAndAnswer=\"false\"   \n      requiresUniqueEmail=\"false\"   \n      maxInvalidPasswordAttempts=\"5\"   \n      minRequiredPasswordLength=\"6\"   \n      minRequiredNonalphanumericCharacters=\"1\"   \n      passwordAttemptWindow=\"10\"   \n      applicationName=\"/\"/>  \n  </providers>  \n</membership>  \n```"
  syntax:
    content: public abstract int MinRequiredNonAlphanumericCharacters { get; }
    return:
      type: System.Int32
      description: The minimum number of special characters that must be present in a valid password.
  overload: System.Web.Security.MembershipProvider.MinRequiredNonAlphanumericCharacters*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Security/MembershipProvider.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.Security.MembershipProvider.MinRequiredPasswordLength
  commentId: P:System.Web.Security.MembershipProvider.MinRequiredPasswordLength
  id: MinRequiredPasswordLength
  parent: System.Web.Security.MembershipProvider
  langs:
  - csharp
  name: MinRequiredPasswordLength
  nameWithType: MembershipProvider.MinRequiredPasswordLength
  fullName: MembershipProvider.MinRequiredPasswordLength
  type: Property
  assemblies:
  - System.Web.ApplicationServices
  namespace: System.Web.Security
  summary: Gets the minimum length required for a password.
  remarks: "The <xref:System.Web.Security.MembershipProvider.MinRequiredPasswordLength%2A> property gets the minimum number of characters that must be entered to create a valid password for the <xref:System.Web.Security.MembershipProvider> object.  \n  \n The <xref:System.Web.Security.MembershipProvider.MinRequiredPasswordLength%2A> property value is set in the application configuration using the `minRequiredPasswordLength` attribute of the [membership Element (ASP.NET Settings Schema)](http://msdn.microsoft.com/en-us/b9c1ee8f-33ca-4361-8666-b42a0fe86049) configuration element."
  example:
  - "The following example shows the [membership Element (ASP.NET Settings Schema)](http://msdn.microsoft.com/en-us/b9c1ee8f-33ca-4361-8666-b42a0fe86049) configuration element in the `system.web` section of the application's Web.config file. It specifies that the application use an instance of the <xref:System.Web.Security.SqlMembershipProvider> class to provide membership services, and sets the `minRequiredPasswordLength` attribute to seven characters.  \n  \n```  \n<membership defaultProvider=\"SqlProvider\"  \n  userIsOnlineTimeWindow = \"20>  \n  <providers>  \n    <add  \n      name=\"SqlProvider\"  \n      type=\"System.Web.Security.SqlMembershipProvider\"  \n      connectionStringName=\"SqlServices\"  \n      requiresQuestionAndAnswer=\"true\"  \n      minRequiredPasswordLength=\"7\"  \n      />  \n  </providers>  \n</membership>  \n```"
  syntax:
    content: public abstract int MinRequiredPasswordLength { get; }
    return:
      type: System.Int32
      description: The minimum length required for a password.
  overload: System.Web.Security.MembershipProvider.MinRequiredPasswordLength*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Security/MembershipProvider.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.Security.MembershipProvider.OnValidatingPassword(System.Web.Security.ValidatePasswordEventArgs)
  commentId: M:System.Web.Security.MembershipProvider.OnValidatingPassword(System.Web.Security.ValidatePasswordEventArgs)
  id: OnValidatingPassword(System.Web.Security.ValidatePasswordEventArgs)
  parent: System.Web.Security.MembershipProvider
  langs:
  - csharp
  name: OnValidatingPassword(ValidatePasswordEventArgs)
  nameWithType: MembershipProvider.OnValidatingPassword(ValidatePasswordEventArgs)
  fullName: MembershipProvider.OnValidatingPassword(ValidatePasswordEventArgs)
  type: Method
  assemblies:
  - System.Web.ApplicationServices
  namespace: System.Web.Security
  summary: Raises the <xref href="System.Web.Security.MembershipProvider.ValidatingPassword"></xref> event if an event handler has been defined.
  remarks: The <xref:System.Web.Security.MembershipProvider.OnValidatingPassword%2A> virtual method is used during the <xref:System.Web.Security.MembershipProvider.CreateUser%2A>, <xref:System.Web.Security.MembershipProvider.ChangePassword%2A>, and <xref:System.Web.Security.MembershipProvider.ResetPassword%2A> methods to raise the <xref:System.Web.Security.MembershipProvider.ValidatingPassword> event if a <xref:System.Web.Security.MembershipValidatePasswordEventHandler> has been specified. The `e` parameter is used to pass a <xref:System.Web.Security.ValidatePasswordEventArgs> object to the <xref:System.Web.Security.MembershipValidatePasswordEventHandler> event handler. When the <xref:System.Web.Security.MembershipProvider.ValidatingPassword> event has completed, the properties of the <xref:System.Web.Security.ValidatePasswordEventArgs> object supplied as the `e` parameter can be examined to determine whether the current action should be canceled and if a particular <xref:System.Exception>, stored in the <xref:System.Web.Security.ValidatePasswordEventArgs.FailureInformation%2A> property, should be thrown.
  example:
  - For an example of a <xref:System.Web.Security.MembershipProvider> implementation, see [Implementing a Profile Provider](http://msdn.microsoft.com/library/58de6e99-31a7-41b9-93ed-51b9b4a67e98).
  syntax:
    content: protected virtual void OnValidatingPassword (System.Web.Security.ValidatePasswordEventArgs e);
    parameters:
    - id: e
      type: System.Web.Security.ValidatePasswordEventArgs
      description: The <xref href="System.Web.Security.ValidatePasswordEventArgs"></xref> to pass to the <xref href="System.Web.Security.MembershipProvider.ValidatingPassword"></xref> event handler.
  overload: System.Web.Security.MembershipProvider.OnValidatingPassword*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Security/MembershipProvider.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.Security.MembershipProvider.PasswordAttemptWindow
  commentId: P:System.Web.Security.MembershipProvider.PasswordAttemptWindow
  id: PasswordAttemptWindow
  parent: System.Web.Security.MembershipProvider
  langs:
  - csharp
  name: PasswordAttemptWindow
  nameWithType: MembershipProvider.PasswordAttemptWindow
  fullName: MembershipProvider.PasswordAttemptWindow
  type: Property
  assemblies:
  - System.Web.ApplicationServices
  namespace: System.Web.Security
  summary: Gets the number of minutes in which a maximum number of invalid password or password-answer attempts are allowed before the membership user is locked out.
  remarks: "The <xref:System.Web.Security.Membership.PasswordAttemptWindow%2A> property works in conjunction with the <xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A> property to guard against an unwanted source guessing the password or password answer of a membership user through repeated attempts. If the number of invalid passwords or password questions supplied for a membership user exceeds the <xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A> within the number of minutes identified by the <xref:System.Web.Security.Membership.PasswordAttemptWindow%2A>, then the membership user is locked out by setting the <xref:System.Web.Security.MembershipUser.IsLockedOut%2A> property to `true` until the user is unlocked by a call to the <xref:System.Web.Security.MembershipUser.UnlockUser%2A> method. If a valid password or password answer is supplied before the <xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A> is reached, the counter that tracks the number of invalid attempts is reset to zero.  \n  \n Invalid password and password-answer attempts accumulate independently of one another. For example, if the <xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A> property is set to 5, and three invalid password attempts are made followed by two invalid password-answer attempts, two more invalid password attempts (or three more invalid password-answer attempts) must be made within the <xref:System.Web.Security.Membership.PasswordAttemptWindow%2A> value for the membership user to be locked out.  \n  \n If the <xref:System.Web.Security.Membership.RequiresQuestionAndAnswer%2A> property is set to `false`, invalid password-answer attempts are not tracked.  \n  \n Invalid password and password-answer attempts are tracked in the <xref:System.Web.Security.MembershipProvider.ValidateUser%2A>, <xref:System.Web.Security.MembershipProvider.ChangePassword%2A>, <xref:System.Web.Security.MembershipProvider.ChangePasswordQuestionAndAnswer%2A>, <xref:System.Web.Security.MembershipProvider.GetPassword%2A>, and <xref:System.Web.Security.MembershipProvider.ResetPassword%2A> methods."
  example:
  - For an example of a <xref:System.Web.Security.MembershipProvider> implementation, see [Implementing a Profile Provider](http://msdn.microsoft.com/library/58de6e99-31a7-41b9-93ed-51b9b4a67e98).
  syntax:
    content: public abstract int PasswordAttemptWindow { get; }
    return:
      type: System.Int32
      description: The number of minutes in which a maximum number of invalid password or password-answer attempts are allowed before the membership user is locked out.
  overload: System.Web.Security.MembershipProvider.PasswordAttemptWindow*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Security/MembershipProvider.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.Security.MembershipProvider.PasswordFormat
  commentId: P:System.Web.Security.MembershipProvider.PasswordFormat
  id: PasswordFormat
  parent: System.Web.Security.MembershipProvider
  langs:
  - csharp
  name: PasswordFormat
  nameWithType: MembershipProvider.PasswordFormat
  fullName: MembershipProvider.PasswordFormat
  type: Property
  assemblies:
  - System.Web.ApplicationServices
  namespace: System.Web.Security
  summary: Gets a value indicating the format for storing passwords in the membership data store.
  remarks: "The <xref:System.Web.Security.MembershipProvider.PasswordFormat%2A> property indicates the format that passwords are stored in. Use `Hashed` only, `Clear` and `Encrypted` are not secure. `Hashed` passwords are hashed using a one-way hash algorithm and a randomly generated salt value when stored in the database. When a password is validated, it is hashed with the salt value in the database for verification. Hashed passwords cannot be retrieved. `Encrypted` passwords are not considered safe, as a breach that reveals your database contents can also expose the encryption key. This means your encrypted passwords could be decrypted and exposed.  \n  \n You can use the <xref:System.Web.Security.MembershipProvider.EncryptPassword%2A> and <xref:System.Web.Security.MembershipProvider.DecryptPassword%2A> virtual methods of the <xref:System.Web.Security.MembershipProvider> class to encrypt and decrypt password values, or you can supply your own encryption code. If you use the <xref:System.Web.Security.MembershipProvider.EncryptPassword%2A> and <xref:System.Web.Security.MembershipProvider.DecryptPassword%2A> virtual methods of the <xref:System.Web.Security.MembershipProvider> class, `Encrypted` passwords are encrypted using the key information supplied in the [machineKey Element (ASP.NET Settings Schema)](http://msdn.microsoft.com/en-us/4b5699a9-bc21-4c4a-85f1-8b3b8ebd2d46) element in your configuration."
  example:
  - For an example of a <xref:System.Web.Security.MembershipProvider> implementation, see [Implementing a Profile Provider](http://msdn.microsoft.com/library/58de6e99-31a7-41b9-93ed-51b9b4a67e98).
  syntax:
    content: public abstract System.Web.Security.MembershipPasswordFormat PasswordFormat { get; }
    return:
      type: System.Web.Security.MembershipPasswordFormat
      description: One of the <xref href="System.Web.Security.MembershipPasswordFormat"></xref> values indicating the format for storing passwords in the data store.
  overload: System.Web.Security.MembershipProvider.PasswordFormat*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Security/MembershipProvider.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.Security.MembershipProvider.PasswordStrengthRegularExpression
  commentId: P:System.Web.Security.MembershipProvider.PasswordStrengthRegularExpression
  id: PasswordStrengthRegularExpression
  parent: System.Web.Security.MembershipProvider
  langs:
  - csharp
  name: PasswordStrengthRegularExpression
  nameWithType: MembershipProvider.PasswordStrengthRegularExpression
  fullName: MembershipProvider.PasswordStrengthRegularExpression
  type: Property
  assemblies:
  - System.Web.ApplicationServices
  namespace: System.Web.Security
  summary: Gets the regular expression used to evaluate a password.
  remarks: "The <xref:System.Web.Security.MembershipProvider.PasswordStrengthRegularExpression%2A> property gets the regular expression used to evaluate password complexity for the <xref:System.Web.Security.MembershipProvider> object.  \n  \n The <xref:System.Web.Security.MembershipProvider.PasswordStrengthRegularExpression%2A> property is set in the application configuration using the `passwordStrengthRegularExpression` attribute of the [membership Element (ASP.NET Settings Schema)](http://msdn.microsoft.com/en-us/b9c1ee8f-33ca-4361-8666-b42a0fe86049) configuration element."
  example:
  - "The following example shows the [membership Element (ASP.NET Settings Schema)](http://msdn.microsoft.com/en-us/b9c1ee8f-33ca-4361-8666-b42a0fe86049) configuration element in the `system.web` section of the application's Web.config file. It specifies that the application use an instance of the <xref:System.Web.Security.SqlMembershipProvider> class to provide membership services, and sets the `passwordStrengthRegularExpression` attribute to a regular expression that validates that the password meets the following criteria:  \n  \n-   Is greater than seven characters.  \n  \n-   Contains at least one digit.  \n  \n-   Contains at least one special (non-alphanumeric) character.  \n  \n If the password does not meet these criteria, the password is not accepted by the membership provider.  \n  \n```  \n<membership defaultProvider=\"SqlProvider\"  \n  userIsOnlineTimeWindow = \"20>  \n  <providers>  \n    <add  \n      name=\"SqlProvider\"  \n      type=\"System.Web.Security.SqlMembershipProvider\"  \n      connectionStringName=\"SqlServices\"  \n      requiresQuestionAndAnswer=\"true\"  \n      passwordStrengthRegularExpression=\"@\\\"(?=.{6,})(?=(.*\\d){1,})(?=(.*\\W){1,})\"  \n      />  \n  </providers>  \n</membership>  \n```"
  syntax:
    content: public abstract string PasswordStrengthRegularExpression { get; }
    return:
      type: System.String
      description: A regular expression used to evaluate a password.
  overload: System.Web.Security.MembershipProvider.PasswordStrengthRegularExpression*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Security/MembershipProvider.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.Security.MembershipProvider.RequiresQuestionAndAnswer
  commentId: P:System.Web.Security.MembershipProvider.RequiresQuestionAndAnswer
  id: RequiresQuestionAndAnswer
  parent: System.Web.Security.MembershipProvider
  langs:
  - csharp
  name: RequiresQuestionAndAnswer
  nameWithType: MembershipProvider.RequiresQuestionAndAnswer
  fullName: MembershipProvider.RequiresQuestionAndAnswer
  type: Property
  assemblies:
  - System.Web.ApplicationServices
  namespace: System.Web.Security
  summary: Gets a value indicating whether the membership provider is configured to require the user to answer a password question for password reset and retrieval.
  remarks: "A Boolean value specified in the configuration file (Web.config). The <xref:System.Web.Security.MembershipProvider.RequiresQuestionAndAnswer%2A> property indicates whether users must supply a password answer in order to retrieve their password using the <xref:System.Web.Security.MembershipProvider.GetPassword%2A> method, or reset their password using the <xref:System.Web.Security.MembershipProvider.ResetPassword%2A> method.  \n  \n This property is read-only."
  example:
  - For an example of a <xref:System.Web.Security.MembershipProvider> implementation, see [Implementing a Profile Provider](http://msdn.microsoft.com/library/58de6e99-31a7-41b9-93ed-51b9b4a67e98).
  syntax:
    content: public abstract bool RequiresQuestionAndAnswer { get; }
    return:
      type: System.Boolean
      description: '`true` if a password answer is required for password reset and retrieval; otherwise, `false`. The default is `true`.'
  overload: System.Web.Security.MembershipProvider.RequiresQuestionAndAnswer*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Security/MembershipProvider.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.Security.MembershipProvider.RequiresUniqueEmail
  commentId: P:System.Web.Security.MembershipProvider.RequiresUniqueEmail
  id: RequiresUniqueEmail
  parent: System.Web.Security.MembershipProvider
  langs:
  - csharp
  name: RequiresUniqueEmail
  nameWithType: MembershipProvider.RequiresUniqueEmail
  fullName: MembershipProvider.RequiresUniqueEmail
  type: Property
  assemblies:
  - System.Web.ApplicationServices
  namespace: System.Web.Security
  summary: Gets a value indicating whether the membership provider is configured to require a unique e-mail address for each user name.
  remarks: The <xref:System.Web.Security.MembershipProvider.RequiresUniqueEmail%2A> property indicates whether users must supply a unique e-mail address value when creating a user. If a user already exists in the data source for the current <xref:System.Web.Security.MembershipProvider.ApplicationName%2A>, then the <xref:System.Web.Security.MembershipProvider.CreateUser%2A> method returns `null` and a status value of <xref:System.Web.Security.MembershipCreateStatus.DuplicateEmail>.
  example:
  - For an example of a <xref:System.Web.Security.MembershipProvider> implementation, see [Implementing a Profile Provider](http://msdn.microsoft.com/library/58de6e99-31a7-41b9-93ed-51b9b4a67e98).
  syntax:
    content: public abstract bool RequiresUniqueEmail { get; }
    return:
      type: System.Boolean
      description: '`true` if the membership provider requires a unique e-mail address; otherwise, `false`. The default is `true`.'
  overload: System.Web.Security.MembershipProvider.RequiresUniqueEmail*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Security/MembershipProvider.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.Security.MembershipProvider.ResetPassword(System.String,System.String)
  commentId: M:System.Web.Security.MembershipProvider.ResetPassword(System.String,System.String)
  id: ResetPassword(System.String,System.String)
  parent: System.Web.Security.MembershipProvider
  langs:
  - csharp
  name: ResetPassword(String, String)
  nameWithType: MembershipProvider.ResetPassword(String, String)
  fullName: MembershipProvider.ResetPassword(String, String)
  type: Method
  assemblies:
  - System.Web.ApplicationServices
  namespace: System.Web.Security
  summary: Resets a user's password to a new, automatically generated password.
  remarks: "Takes, as input, a user name and a password answer and generates a new, random password for the specified user.  \n  \n> [!NOTE]\n>  The random password created by the <xref:System.Web.Security.MembershipProvider.ResetPassword%2A> method is not guaranteed to pass the regular expression in the <xref:System.Web.Security.MembershipProvider.PasswordStrengthRegularExpression%2A> property. However, the random password will meet the criteria established by the <xref:System.Web.Security.MembershipProvider.MinRequiredPasswordLength%2A> and <xref:System.Web.Security.MembershipProvider.MinRequiredNonAlphanumericCharacters%2A> properties  \n  \n The <xref:System.Web.Security.MembershipProvider.ResetPassword%2A> method updates the user information in the data source with the new password value and returns the new password as a string. A convenient mechanism for generating a random password is the <xref:System.Web.Security.Membership.GeneratePassword%2A> method.  \n  \n <xref:System.Web.Security.MembershipProvider.ResetPassword%2A> ensures that the <xref:System.Web.Security.MembershipProvider.EnablePasswordReset%2A> flag is set to `true` before performing any action. If <xref:System.Web.Security.MembershipProvider.EnablePasswordReset%2A> is `false`, a <xref:System.NotSupportedException> exception is thrown.  \n  \n <xref:System.Web.Security.MembershipProvider.ResetPassword%2A> also checks the value of the <xref:System.Web.Security.MembershipProvider.RequiresQuestionAndAnswer%2A> property. If <xref:System.Web.Security.MembershipProvider.RequiresQuestionAndAnswer%2A> is `true`, <xref:System.Web.Security.MembershipProvider.ResetPassword%2A> checks the value of the supplied answer parameter against the stored password answer in the data source. If they do not match, a <xref:System.Web.Security.MembershipPasswordException> exception is thrown."
  example:
  - For an example of a <xref:System.Web.Security.MembershipProvider> implementation, see [Implementing a Profile Provider](http://msdn.microsoft.com/library/58de6e99-31a7-41b9-93ed-51b9b4a67e98).
  syntax:
    content: public abstract string ResetPassword (string username, string answer);
    parameters:
    - id: username
      type: System.String
      description: The user to reset the password for.
    - id: answer
      type: System.String
      description: The password answer for the specified user.
    return:
      type: System.String
      description: The new password for the specified user.
  overload: System.Web.Security.MembershipProvider.ResetPassword*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Security/MembershipProvider.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.Security.MembershipProvider.UnlockUser(System.String)
  commentId: M:System.Web.Security.MembershipProvider.UnlockUser(System.String)
  id: UnlockUser(System.String)
  parent: System.Web.Security.MembershipProvider
  langs:
  - csharp
  name: UnlockUser(String)
  nameWithType: MembershipProvider.UnlockUser(String)
  fullName: MembershipProvider.UnlockUser(String)
  type: Method
  assemblies:
  - System.Web.ApplicationServices
  namespace: System.Web.Security
  summary: Clears a lock so that the membership user can be validated.
  remarks: Takes, as input, a user name, and updates the field in the data source that stores the <xref:System.Web.Security.MembershipUser.IsLockedOut%2A> property to `false`. The <xref:System.Web.Security.MembershipProvider.UnlockUser%2A> method returns `true` if the record for the membership user is updated successfully; otherwise, `false`.
  example:
  - For an example of a <xref:System.Web.Security.MembershipProvider> implementation, see [Implementing a Profile Provider](http://msdn.microsoft.com/library/58de6e99-31a7-41b9-93ed-51b9b4a67e98).
  syntax:
    content: public abstract bool UnlockUser (string userName);
    parameters:
    - id: userName
      type: System.String
      description: The membership user whose lock status you want to clear.
    return:
      type: System.Boolean
      description: '`true` if the membership user was successfully unlocked; otherwise, `false`.'
  overload: System.Web.Security.MembershipProvider.UnlockUser*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Security/MembershipProvider.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.Security.MembershipProvider.UpdateUser(System.Web.Security.MembershipUser)
  commentId: M:System.Web.Security.MembershipProvider.UpdateUser(System.Web.Security.MembershipUser)
  id: UpdateUser(System.Web.Security.MembershipUser)
  parent: System.Web.Security.MembershipProvider
  langs:
  - csharp
  name: UpdateUser(MembershipUser)
  nameWithType: MembershipProvider.UpdateUser(MembershipUser)
  fullName: MembershipProvider.UpdateUser(MembershipUser)
  type: Method
  assemblies:
  - System.Web.ApplicationServices
  namespace: System.Web.Security
  summary: Updates information about a user in the data source.
  remarks: Takes, as input, a <xref:System.Web.Security.MembershipUser> object populated with user information and updates the data source with the supplied values.
  example:
  - For an example of a <xref:System.Web.Security.MembershipProvider> implementation, see [Implementing a Profile Provider](http://msdn.microsoft.com/library/58de6e99-31a7-41b9-93ed-51b9b4a67e98).
  syntax:
    content: public abstract void UpdateUser (System.Web.Security.MembershipUser user);
    parameters:
    - id: user
      type: System.Web.Security.MembershipUser
      description: A <xref href="System.Web.Security.MembershipUser"></xref> object that represents the user to update and the updated information for the user.
  overload: System.Web.Security.MembershipProvider.UpdateUser*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Security/MembershipProvider.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.Security.MembershipProvider.ValidateUser(System.String,System.String)
  commentId: M:System.Web.Security.MembershipProvider.ValidateUser(System.String,System.String)
  id: ValidateUser(System.String,System.String)
  parent: System.Web.Security.MembershipProvider
  langs:
  - csharp
  name: ValidateUser(String, String)
  nameWithType: MembershipProvider.ValidateUser(String, String)
  fullName: MembershipProvider.ValidateUser(String, String)
  type: Method
  assemblies:
  - System.Web.ApplicationServices
  namespace: System.Web.Security
  summary: Verifies that the specified user name and password exist in the data source.
  remarks: "Takes, as input, a user name and a password and verifies that the values match those in the data source. <xref:System.Web.Security.MembershipProvider.ValidateUser%2A> returns `true` for a successful user name and password match; otherwise, `false`.  \n  \n For successful validations, <xref:System.Web.Security.MembershipProvider.ValidateUser%2A> updates the <xref:System.Web.Security.MembershipUser.LastLoginDate%2A> for the specified user."
  example:
  - For an example of a <xref:System.Web.Security.MembershipProvider> implementation, see [Implementing a Profile Provider](http://msdn.microsoft.com/library/58de6e99-31a7-41b9-93ed-51b9b4a67e98).
  syntax:
    content: public abstract bool ValidateUser (string username, string password);
    parameters:
    - id: username
      type: System.String
      description: The name of the user to validate.
    - id: password
      type: System.String
      description: The password for the specified user.
    return:
      type: System.Boolean
      description: '`true` if the specified username and password are valid; otherwise, `false`.'
  overload: System.Web.Security.MembershipProvider.ValidateUser*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Security/MembershipProvider.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.Security.MembershipProvider.ValidatingPassword
  commentId: E:System.Web.Security.MembershipProvider.ValidatingPassword
  id: ValidatingPassword
  parent: System.Web.Security.MembershipProvider
  langs:
  - csharp
  name: ValidatingPassword
  nameWithType: MembershipProvider.ValidatingPassword
  fullName: MembershipProvider.ValidatingPassword
  type: Event
  assemblies:
  - System.Web.ApplicationServices
  namespace: System.Web.Security
  summary: Occurs when a user is created, a password is changed, or a password is reset.
  remarks: "The <xref:System.Web.Security.MembershipProvider.ValidatingPassword> event is raised during the <xref:System.Web.Security.MembershipProvider.CreateUser%2A>, <xref:System.Web.Security.MembershipProvider.ChangePassword%2A>, and <xref:System.Web.Security.MembershipProvider.ResetPassword%2A> methods.  \n  \n The <xref:System.Web.Security.MembershipProvider.ValidatingPassword> event occurs before the action requested and enables the user to continue or cancel the requested action. If the action is canceled, the user can specify an exception to be thrown.  \n  \n Users use a <xref:System.Web.Security.MembershipValidatePasswordEventHandler> event handler to specify a handler for the <xref:System.Web.Security.MembershipProvider.ValidatingPassword> event. Provider implementers can use the <xref:System.Web.Security.MembershipProvider.OnValidatingPassword%2A> virtual method to raise the <xref:System.Web.Security.MembershipProvider.ValidatingPassword> event."
  example:
  - For an example of a <xref:System.Web.Security.MembershipProvider> implementation, see [Implementing a Profile Provider](http://msdn.microsoft.com/library/58de6e99-31a7-41b9-93ed-51b9b4a67e98).
  syntax:
    content: public event System.Web.Security.MembershipValidatePasswordEventHandler ValidatingPassword;
    return:
      type: System.Web.Security.MembershipValidatePasswordEventHandler
      description: ''
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Security/MembershipProvider.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
references:
- uid: System.Configuration.Provider.ProviderBase
  parent: System.Configuration.Provider
  isExternal: false
  name: ProviderBase
  nameWithType: ProviderBase
  fullName: System.Configuration.Provider.ProviderBase
- uid: System.Configuration.Provider.ProviderException
  parent: System.Configuration.Provider
  isExternal: false
  name: ProviderException
  nameWithType: ProviderException
  fullName: System.Configuration.Provider.ProviderException
- uid: System.PlatformNotSupportedException
  parent: System
  isExternal: false
  name: PlatformNotSupportedException
  nameWithType: PlatformNotSupportedException
  fullName: System.PlatformNotSupportedException
- uid: System.Web.Security.MembershipProvider.#ctor
  parent: System.Web.Security.MembershipProvider
  isExternal: false
  name: MembershipProvider()
  nameWithType: MembershipProvider.MembershipProvider()
  fullName: MembershipProvider.MembershipProvider()
- uid: System.Web.Security.MembershipProvider.ApplicationName
  parent: System.Web.Security.MembershipProvider
  isExternal: false
  name: ApplicationName
  nameWithType: MembershipProvider.ApplicationName
  fullName: MembershipProvider.ApplicationName
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.Security.MembershipProvider.ChangePassword(System.String,System.String,System.String)
  parent: System.Web.Security.MembershipProvider
  isExternal: false
  name: ChangePassword(String, String, String)
  nameWithType: MembershipProvider.ChangePassword(String, String, String)
  fullName: MembershipProvider.ChangePassword(String, String, String)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.Security.MembershipProvider.ChangePasswordQuestionAndAnswer(System.String,System.String,System.String,System.String)
  parent: System.Web.Security.MembershipProvider
  isExternal: false
  name: ChangePasswordQuestionAndAnswer(String, String, String, String)
  nameWithType: MembershipProvider.ChangePasswordQuestionAndAnswer(String, String, String, String)
  fullName: MembershipProvider.ChangePasswordQuestionAndAnswer(String, String, String, String)
- uid: System.Web.Security.MembershipProvider.CreateUser(System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Object,System.Web.Security.MembershipCreateStatus@)
  parent: System.Web.Security.MembershipProvider
  isExternal: false
  name: CreateUser(String, String, String, String, String, Boolean, Object, MembershipCreateStatus)
  nameWithType: MembershipProvider.CreateUser(String, String, String, String, String, Boolean, Object, MembershipCreateStatus)
  fullName: MembershipProvider.CreateUser(String, String, String, String, String, Boolean, Object, MembershipCreateStatus)
- uid: System.Web.Security.MembershipUser
  parent: System.Web.Security
  isExternal: false
  name: MembershipUser
  nameWithType: MembershipUser
  fullName: System.Web.Security.MembershipUser
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Web.Security.MembershipCreateStatus
  parent: System.Web.Security
  isExternal: false
  name: MembershipCreateStatus
  nameWithType: MembershipCreateStatus
  fullName: System.Web.Security.MembershipCreateStatus
- uid: System.Web.Security.MembershipProvider.DecryptPassword(System.Byte[])
  parent: System.Web.Security.MembershipProvider
  isExternal: false
  name: DecryptPassword(Byte[])
  nameWithType: MembershipProvider.DecryptPassword(Byte[])
  fullName: MembershipProvider.DecryptPassword(Byte[])
- uid: System.Byte
  name: Byte
  nameWithType: Byte
  fullName: System.Byte
- uid: System.Byte[]
  parent: System
  isExternal: false
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Web.Security.MembershipProvider.DeleteUser(System.String,System.Boolean)
  parent: System.Web.Security.MembershipProvider
  isExternal: false
  name: DeleteUser(String, Boolean)
  nameWithType: MembershipProvider.DeleteUser(String, Boolean)
  fullName: MembershipProvider.DeleteUser(String, Boolean)
- uid: System.Web.Security.MembershipProvider.EnablePasswordReset
  parent: System.Web.Security.MembershipProvider
  isExternal: false
  name: EnablePasswordReset
  nameWithType: MembershipProvider.EnablePasswordReset
  fullName: MembershipProvider.EnablePasswordReset
- uid: System.Web.Security.MembershipProvider.EnablePasswordRetrieval
  parent: System.Web.Security.MembershipProvider
  isExternal: false
  name: EnablePasswordRetrieval
  nameWithType: MembershipProvider.EnablePasswordRetrieval
  fullName: MembershipProvider.EnablePasswordRetrieval
- uid: System.Web.Security.MembershipProvider.EncryptPassword(System.Byte[])
  parent: System.Web.Security.MembershipProvider
  isExternal: false
  name: EncryptPassword(Byte[])
  nameWithType: MembershipProvider.EncryptPassword(Byte[])
  fullName: MembershipProvider.EncryptPassword(Byte[])
- uid: System.Web.Security.MembershipProvider.EncryptPassword(System.Byte[],System.Web.Configuration.MembershipPasswordCompatibilityMode)
  parent: System.Web.Security.MembershipProvider
  isExternal: false
  name: EncryptPassword(Byte[], MembershipPasswordCompatibilityMode)
  nameWithType: MembershipProvider.EncryptPassword(Byte[], MembershipPasswordCompatibilityMode)
  fullName: MembershipProvider.EncryptPassword(Byte[], MembershipPasswordCompatibilityMode)
- uid: System.Web.Configuration.MembershipPasswordCompatibilityMode
  parent: System.Web.Configuration
  isExternal: false
  name: MembershipPasswordCompatibilityMode
  nameWithType: MembershipPasswordCompatibilityMode
  fullName: System.Web.Configuration.MembershipPasswordCompatibilityMode
- uid: System.Web.Security.MembershipProvider.FindUsersByEmail(System.String,System.Int32,System.Int32,System.Int32@)
  parent: System.Web.Security.MembershipProvider
  isExternal: false
  name: FindUsersByEmail(String, Int32, Int32, Int32)
  nameWithType: MembershipProvider.FindUsersByEmail(String, Int32, Int32, Int32)
  fullName: MembershipProvider.FindUsersByEmail(String, Int32, Int32, Int32)
- uid: System.Web.Security.MembershipUserCollection
  parent: System.Web.Security
  isExternal: false
  name: MembershipUserCollection
  nameWithType: MembershipUserCollection
  fullName: System.Web.Security.MembershipUserCollection
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.Security.MembershipProvider.FindUsersByName(System.String,System.Int32,System.Int32,System.Int32@)
  parent: System.Web.Security.MembershipProvider
  isExternal: false
  name: FindUsersByName(String, Int32, Int32, Int32)
  nameWithType: MembershipProvider.FindUsersByName(String, Int32, Int32, Int32)
  fullName: MembershipProvider.FindUsersByName(String, Int32, Int32, Int32)
- uid: System.Web.Security.MembershipProvider.GetAllUsers(System.Int32,System.Int32,System.Int32@)
  parent: System.Web.Security.MembershipProvider
  isExternal: false
  name: GetAllUsers(Int32, Int32, Int32)
  nameWithType: MembershipProvider.GetAllUsers(Int32, Int32, Int32)
  fullName: MembershipProvider.GetAllUsers(Int32, Int32, Int32)
- uid: System.Web.Security.MembershipProvider.GetNumberOfUsersOnline
  parent: System.Web.Security.MembershipProvider
  isExternal: false
  name: GetNumberOfUsersOnline()
  nameWithType: MembershipProvider.GetNumberOfUsersOnline()
  fullName: MembershipProvider.GetNumberOfUsersOnline()
- uid: System.Web.Security.MembershipProvider.GetPassword(System.String,System.String)
  parent: System.Web.Security.MembershipProvider
  isExternal: false
  name: GetPassword(String, String)
  nameWithType: MembershipProvider.GetPassword(String, String)
  fullName: MembershipProvider.GetPassword(String, String)
- uid: System.Web.Security.MembershipProvider.GetUser(System.String,System.Boolean)
  parent: System.Web.Security.MembershipProvider
  isExternal: false
  name: GetUser(String, Boolean)
  nameWithType: MembershipProvider.GetUser(String, Boolean)
  fullName: MembershipProvider.GetUser(String, Boolean)
- uid: System.Web.Security.MembershipProvider.GetUser(System.Object,System.Boolean)
  parent: System.Web.Security.MembershipProvider
  isExternal: false
  name: GetUser(Object, Boolean)
  nameWithType: MembershipProvider.GetUser(Object, Boolean)
  fullName: MembershipProvider.GetUser(Object, Boolean)
- uid: System.Web.Security.MembershipProvider.GetUserNameByEmail(System.String)
  parent: System.Web.Security.MembershipProvider
  isExternal: false
  name: GetUserNameByEmail(String)
  nameWithType: MembershipProvider.GetUserNameByEmail(String)
  fullName: MembershipProvider.GetUserNameByEmail(String)
- uid: System.Web.Security.MembershipProvider.MaxInvalidPasswordAttempts
  parent: System.Web.Security.MembershipProvider
  isExternal: false
  name: MaxInvalidPasswordAttempts
  nameWithType: MembershipProvider.MaxInvalidPasswordAttempts
  fullName: MembershipProvider.MaxInvalidPasswordAttempts
- uid: System.Web.Security.MembershipProvider.MinRequiredNonAlphanumericCharacters
  parent: System.Web.Security.MembershipProvider
  isExternal: false
  name: MinRequiredNonAlphanumericCharacters
  nameWithType: MembershipProvider.MinRequiredNonAlphanumericCharacters
  fullName: MembershipProvider.MinRequiredNonAlphanumericCharacters
- uid: System.Web.Security.MembershipProvider.MinRequiredPasswordLength
  parent: System.Web.Security.MembershipProvider
  isExternal: false
  name: MinRequiredPasswordLength
  nameWithType: MembershipProvider.MinRequiredPasswordLength
  fullName: MembershipProvider.MinRequiredPasswordLength
- uid: System.Web.Security.MembershipProvider.OnValidatingPassword(System.Web.Security.ValidatePasswordEventArgs)
  parent: System.Web.Security.MembershipProvider
  isExternal: false
  name: OnValidatingPassword(ValidatePasswordEventArgs)
  nameWithType: MembershipProvider.OnValidatingPassword(ValidatePasswordEventArgs)
  fullName: MembershipProvider.OnValidatingPassword(ValidatePasswordEventArgs)
- uid: System.Web.Security.ValidatePasswordEventArgs
  parent: System.Web.Security
  isExternal: false
  name: ValidatePasswordEventArgs
  nameWithType: ValidatePasswordEventArgs
  fullName: System.Web.Security.ValidatePasswordEventArgs
- uid: System.Web.Security.MembershipProvider.PasswordAttemptWindow
  parent: System.Web.Security.MembershipProvider
  isExternal: false
  name: PasswordAttemptWindow
  nameWithType: MembershipProvider.PasswordAttemptWindow
  fullName: MembershipProvider.PasswordAttemptWindow
- uid: System.Web.Security.MembershipProvider.PasswordFormat
  parent: System.Web.Security.MembershipProvider
  isExternal: false
  name: PasswordFormat
  nameWithType: MembershipProvider.PasswordFormat
  fullName: MembershipProvider.PasswordFormat
- uid: System.Web.Security.MembershipPasswordFormat
  parent: System.Web.Security
  isExternal: false
  name: MembershipPasswordFormat
  nameWithType: MembershipPasswordFormat
  fullName: System.Web.Security.MembershipPasswordFormat
- uid: System.Web.Security.MembershipProvider.PasswordStrengthRegularExpression
  parent: System.Web.Security.MembershipProvider
  isExternal: false
  name: PasswordStrengthRegularExpression
  nameWithType: MembershipProvider.PasswordStrengthRegularExpression
  fullName: MembershipProvider.PasswordStrengthRegularExpression
- uid: System.Web.Security.MembershipProvider.RequiresQuestionAndAnswer
  parent: System.Web.Security.MembershipProvider
  isExternal: false
  name: RequiresQuestionAndAnswer
  nameWithType: MembershipProvider.RequiresQuestionAndAnswer
  fullName: MembershipProvider.RequiresQuestionAndAnswer
- uid: System.Web.Security.MembershipProvider.RequiresUniqueEmail
  parent: System.Web.Security.MembershipProvider
  isExternal: false
  name: RequiresUniqueEmail
  nameWithType: MembershipProvider.RequiresUniqueEmail
  fullName: MembershipProvider.RequiresUniqueEmail
- uid: System.Web.Security.MembershipProvider.ResetPassword(System.String,System.String)
  parent: System.Web.Security.MembershipProvider
  isExternal: false
  name: ResetPassword(String, String)
  nameWithType: MembershipProvider.ResetPassword(String, String)
  fullName: MembershipProvider.ResetPassword(String, String)
- uid: System.Web.Security.MembershipProvider.UnlockUser(System.String)
  parent: System.Web.Security.MembershipProvider
  isExternal: false
  name: UnlockUser(String)
  nameWithType: MembershipProvider.UnlockUser(String)
  fullName: MembershipProvider.UnlockUser(String)
- uid: System.Web.Security.MembershipProvider.UpdateUser(System.Web.Security.MembershipUser)
  parent: System.Web.Security.MembershipProvider
  isExternal: false
  name: UpdateUser(MembershipUser)
  nameWithType: MembershipProvider.UpdateUser(MembershipUser)
  fullName: MembershipProvider.UpdateUser(MembershipUser)
- uid: System.Web.Security.MembershipProvider.ValidateUser(System.String,System.String)
  parent: System.Web.Security.MembershipProvider
  isExternal: false
  name: ValidateUser(String, String)
  nameWithType: MembershipProvider.ValidateUser(String, String)
  fullName: MembershipProvider.ValidateUser(String, String)
- uid: System.Web.Security.MembershipProvider.ValidatingPassword
  parent: System.Web.Security.MembershipProvider
  isExternal: false
  name: ValidatingPassword
  nameWithType: MembershipProvider.ValidatingPassword
  fullName: MembershipProvider.ValidatingPassword
- uid: System.Web.Security.MembershipValidatePasswordEventHandler
  parent: System.Web.Security
  isExternal: false
  name: MembershipValidatePasswordEventHandler
  nameWithType: MembershipValidatePasswordEventHandler
  fullName: System.Web.Security.MembershipValidatePasswordEventHandler
- uid: System.Web.Security.MembershipProvider.EncryptPassword*
  parent: System.Web.Security.MembershipProvider
  isExternal: false
  name: EncryptPassword
  nameWithType: MembershipProvider.EncryptPassword
  fullName: MembershipProvider.EncryptPassword
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Security/MembershipProvider.xml
- uid: System.Web.Security.MembershipProvider.#ctor*
  parent: System.Web.Security.MembershipProvider
  isExternal: false
  name: MembershipProvider
  nameWithType: MembershipProvider.MembershipProvider
  fullName: MembershipProvider.MembershipProvider
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Security/MembershipProvider.xml
- uid: System.Web.Security.MembershipProvider.ApplicationName*
  parent: System.Web.Security.MembershipProvider
  isExternal: false
  name: ApplicationName
  nameWithType: MembershipProvider.ApplicationName
  fullName: MembershipProvider.ApplicationName
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Security/MembershipProvider.xml
- uid: System.Web.Security.MembershipProvider.ChangePassword*
  parent: System.Web.Security.MembershipProvider
  isExternal: false
  name: ChangePassword
  nameWithType: MembershipProvider.ChangePassword
  fullName: MembershipProvider.ChangePassword
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Security/MembershipProvider.xml
- uid: System.Web.Security.MembershipProvider.ChangePasswordQuestionAndAnswer*
  parent: System.Web.Security.MembershipProvider
  isExternal: false
  name: ChangePasswordQuestionAndAnswer
  nameWithType: MembershipProvider.ChangePasswordQuestionAndAnswer
  fullName: MembershipProvider.ChangePasswordQuestionAndAnswer
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Security/MembershipProvider.xml
- uid: System.Web.Security.MembershipProvider.CreateUser*
  parent: System.Web.Security.MembershipProvider
  isExternal: false
  name: CreateUser
  nameWithType: MembershipProvider.CreateUser
  fullName: MembershipProvider.CreateUser
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Security/MembershipProvider.xml
- uid: System.Web.Security.MembershipProvider.DecryptPassword*
  parent: System.Web.Security.MembershipProvider
  isExternal: false
  name: DecryptPassword
  nameWithType: MembershipProvider.DecryptPassword
  fullName: MembershipProvider.DecryptPassword
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Security/MembershipProvider.xml
- uid: System.Web.Security.MembershipProvider.DeleteUser*
  parent: System.Web.Security.MembershipProvider
  isExternal: false
  name: DeleteUser
  nameWithType: MembershipProvider.DeleteUser
  fullName: MembershipProvider.DeleteUser
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Security/MembershipProvider.xml
- uid: System.Web.Security.MembershipProvider.EnablePasswordReset*
  parent: System.Web.Security.MembershipProvider
  isExternal: false
  name: EnablePasswordReset
  nameWithType: MembershipProvider.EnablePasswordReset
  fullName: MembershipProvider.EnablePasswordReset
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Security/MembershipProvider.xml
- uid: System.Web.Security.MembershipProvider.EnablePasswordRetrieval*
  parent: System.Web.Security.MembershipProvider
  isExternal: false
  name: EnablePasswordRetrieval
  nameWithType: MembershipProvider.EnablePasswordRetrieval
  fullName: MembershipProvider.EnablePasswordRetrieval
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Security/MembershipProvider.xml
- uid: System.Web.Security.MembershipProvider.FindUsersByEmail*
  parent: System.Web.Security.MembershipProvider
  isExternal: false
  name: FindUsersByEmail
  nameWithType: MembershipProvider.FindUsersByEmail
  fullName: MembershipProvider.FindUsersByEmail
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Security/MembershipProvider.xml
- uid: System.Web.Security.MembershipProvider.FindUsersByName*
  parent: System.Web.Security.MembershipProvider
  isExternal: false
  name: FindUsersByName
  nameWithType: MembershipProvider.FindUsersByName
  fullName: MembershipProvider.FindUsersByName
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Security/MembershipProvider.xml
- uid: System.Web.Security.MembershipProvider.GetAllUsers*
  parent: System.Web.Security.MembershipProvider
  isExternal: false
  name: GetAllUsers
  nameWithType: MembershipProvider.GetAllUsers
  fullName: MembershipProvider.GetAllUsers
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Security/MembershipProvider.xml
- uid: System.Web.Security.MembershipProvider.GetNumberOfUsersOnline*
  parent: System.Web.Security.MembershipProvider
  isExternal: false
  name: GetNumberOfUsersOnline
  nameWithType: MembershipProvider.GetNumberOfUsersOnline
  fullName: MembershipProvider.GetNumberOfUsersOnline
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Security/MembershipProvider.xml
- uid: System.Web.Security.MembershipProvider.GetPassword*
  parent: System.Web.Security.MembershipProvider
  isExternal: false
  name: GetPassword
  nameWithType: MembershipProvider.GetPassword
  fullName: MembershipProvider.GetPassword
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Security/MembershipProvider.xml
- uid: System.Web.Security.MembershipProvider.GetUser*
  parent: System.Web.Security.MembershipProvider
  isExternal: false
  name: GetUser
  nameWithType: MembershipProvider.GetUser
  fullName: MembershipProvider.GetUser
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Security/MembershipProvider.xml
- uid: System.Web.Security.MembershipProvider.GetUserNameByEmail*
  parent: System.Web.Security.MembershipProvider
  isExternal: false
  name: GetUserNameByEmail
  nameWithType: MembershipProvider.GetUserNameByEmail
  fullName: MembershipProvider.GetUserNameByEmail
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Security/MembershipProvider.xml
- uid: System.Web.Security.MembershipProvider.MaxInvalidPasswordAttempts*
  parent: System.Web.Security.MembershipProvider
  isExternal: false
  name: MaxInvalidPasswordAttempts
  nameWithType: MembershipProvider.MaxInvalidPasswordAttempts
  fullName: MembershipProvider.MaxInvalidPasswordAttempts
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Security/MembershipProvider.xml
- uid: System.Web.Security.MembershipProvider.MinRequiredNonAlphanumericCharacters*
  parent: System.Web.Security.MembershipProvider
  isExternal: false
  name: MinRequiredNonAlphanumericCharacters
  nameWithType: MembershipProvider.MinRequiredNonAlphanumericCharacters
  fullName: MembershipProvider.MinRequiredNonAlphanumericCharacters
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Security/MembershipProvider.xml
- uid: System.Web.Security.MembershipProvider.MinRequiredPasswordLength*
  parent: System.Web.Security.MembershipProvider
  isExternal: false
  name: MinRequiredPasswordLength
  nameWithType: MembershipProvider.MinRequiredPasswordLength
  fullName: MembershipProvider.MinRequiredPasswordLength
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Security/MembershipProvider.xml
- uid: System.Web.Security.MembershipProvider.OnValidatingPassword*
  parent: System.Web.Security.MembershipProvider
  isExternal: false
  name: OnValidatingPassword
  nameWithType: MembershipProvider.OnValidatingPassword
  fullName: MembershipProvider.OnValidatingPassword
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Security/MembershipProvider.xml
- uid: System.Web.Security.MembershipProvider.PasswordAttemptWindow*
  parent: System.Web.Security.MembershipProvider
  isExternal: false
  name: PasswordAttemptWindow
  nameWithType: MembershipProvider.PasswordAttemptWindow
  fullName: MembershipProvider.PasswordAttemptWindow
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Security/MembershipProvider.xml
- uid: System.Web.Security.MembershipProvider.PasswordFormat*
  parent: System.Web.Security.MembershipProvider
  isExternal: false
  name: PasswordFormat
  nameWithType: MembershipProvider.PasswordFormat
  fullName: MembershipProvider.PasswordFormat
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Security/MembershipProvider.xml
- uid: System.Web.Security.MembershipProvider.PasswordStrengthRegularExpression*
  parent: System.Web.Security.MembershipProvider
  isExternal: false
  name: PasswordStrengthRegularExpression
  nameWithType: MembershipProvider.PasswordStrengthRegularExpression
  fullName: MembershipProvider.PasswordStrengthRegularExpression
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Security/MembershipProvider.xml
- uid: System.Web.Security.MembershipProvider.RequiresQuestionAndAnswer*
  parent: System.Web.Security.MembershipProvider
  isExternal: false
  name: RequiresQuestionAndAnswer
  nameWithType: MembershipProvider.RequiresQuestionAndAnswer
  fullName: MembershipProvider.RequiresQuestionAndAnswer
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Security/MembershipProvider.xml
- uid: System.Web.Security.MembershipProvider.RequiresUniqueEmail*
  parent: System.Web.Security.MembershipProvider
  isExternal: false
  name: RequiresUniqueEmail
  nameWithType: MembershipProvider.RequiresUniqueEmail
  fullName: MembershipProvider.RequiresUniqueEmail
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Security/MembershipProvider.xml
- uid: System.Web.Security.MembershipProvider.ResetPassword*
  parent: System.Web.Security.MembershipProvider
  isExternal: false
  name: ResetPassword
  nameWithType: MembershipProvider.ResetPassword
  fullName: MembershipProvider.ResetPassword
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Security/MembershipProvider.xml
- uid: System.Web.Security.MembershipProvider.UnlockUser*
  parent: System.Web.Security.MembershipProvider
  isExternal: false
  name: UnlockUser
  nameWithType: MembershipProvider.UnlockUser
  fullName: MembershipProvider.UnlockUser
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Security/MembershipProvider.xml
- uid: System.Web.Security.MembershipProvider.UpdateUser*
  parent: System.Web.Security.MembershipProvider
  isExternal: false
  name: UpdateUser
  nameWithType: MembershipProvider.UpdateUser
  fullName: MembershipProvider.UpdateUser
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Security/MembershipProvider.xml
- uid: System.Web.Security.MembershipProvider.ValidateUser*
  parent: System.Web.Security.MembershipProvider
  isExternal: false
  name: ValidateUser
  nameWithType: MembershipProvider.ValidateUser
  fullName: MembershipProvider.ValidateUser
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.Security/MembershipProvider.xml
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: Object.Equals(Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: Object.Equals(Object, Object)
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: false
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: Object.GetHashCode()
- uid: System.Object.GetType
  parent: System.Object
  isExternal: false
  name: GetType()
  nameWithType: Object.GetType()
  fullName: Object.GetType()
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: false
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: Object.MemberwiseClone()
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: Object.ReferenceEquals(Object, Object)
- uid: System.Object.ToString
  parent: System.Object
  isExternal: false
  name: ToString()
  nameWithType: Object.ToString()
  fullName: Object.ToString()
- uid: System.Configuration.Provider.ProviderBase.Description
  parent: System.Configuration.Provider.ProviderBase
  isExternal: false
  name: Description
  nameWithType: ProviderBase.Description
  fullName: ProviderBase.Description
- uid: System.Configuration.Provider.ProviderBase.Initialize(System.String,System.Collections.Specialized.NameValueCollection)
  parent: System.Configuration.Provider.ProviderBase
  isExternal: false
  name: Initialize(String, NameValueCollection)
  nameWithType: ProviderBase.Initialize(String, NameValueCollection)
  fullName: ProviderBase.Initialize(String, NameValueCollection)
- uid: System.Configuration.Provider.ProviderBase.Name
  parent: System.Configuration.Provider.ProviderBase
  isExternal: false
  name: Name
  nameWithType: ProviderBase.Name
  fullName: ProviderBase.Name
