{"nodes":[{"content":"Provides a set of services for registering and unregistering managed assemblies for use from COM.","nodes":[{"pos":[0,97],"content":"Provides a set of services for registering and unregistering managed assemblies for use from COM.","nodes":[{"content":"Provides a set of services for registering and unregistering managed assemblies for use from COM.","pos":[0,97]}]}],"pos":[1298,1396],"yaml":true},{"content":"Registration is needed when the objects within an assembly are being used by COM clients.","nodes":[{"pos":[0,89],"content":"Registration is needed when the objects within an assembly are being used by COM clients.","nodes":[{"content":"Registration is needed when the objects within an assembly are being used by COM clients.","pos":[0,89]}]}],"pos":[1407,1497],"yaml":true,"extradata":"MT"},{"content":"Returns the GUID of the COM category that contains the managed classes.","nodes":[{"pos":[0,71],"content":"Returns the GUID of the COM category that contains the managed classes.","nodes":[{"content":"Returns the GUID of the COM category that contains the managed classes.","pos":[0,71]}]}],"pos":[3146,3218],"yaml":true},{"content":"The GUID of the COM category that contains the managed classes.","nodes":[{"pos":[0,63],"content":"The GUID of the COM category that contains the managed classes.","nodes":[{"content":"The GUID of the COM category that contains the managed classes.","pos":[0,63]}]}],"pos":[3354,3418],"yaml":true},{"content":"Retrieves the COM ProgID for a specified type.","nodes":[{"pos":[0,46],"content":"Retrieves the COM ProgID for a specified type.","nodes":[{"content":"Retrieves the COM ProgID for a specified type.","pos":[0,46]}]}],"pos":[4754,4801],"yaml":true},{"content":"The type whose ProgID is being requested.","nodes":[{"pos":[0,41],"content":"The type whose ProgID is being requested.","nodes":[{"content":"The type whose ProgID is being requested.","pos":[0,41]}]}],"pos":[4993,5035],"yaml":true},{"content":"The ProgID for the specified type.","nodes":[{"pos":[0,34],"content":"The ProgID for the specified type.","nodes":[{"content":"The ProgID for the specified type.","pos":[0,34]}]}],"pos":[5092,5127],"yaml":true},{"content":"Retrieves a list of classes in an assembly that would be registered by a call to <xref href=\"System.Runtime.InteropServices.IRegistrationServices.RegisterAssembly(System.Reflection.Assembly,System.Runtime.InteropServices.AssemblyRegistrationFlags)\"></xref>.","nodes":[{"pos":[0,257],"content":"Retrieves a list of classes in an assembly that would be registered by a call to <ph id=\"ph1\">&lt;xref href=\"System.Runtime.InteropServices.IRegistrationServices.RegisterAssembly(System.Reflection.Assembly,System.Runtime.InteropServices.AssemblyRegistrationFlags)\"&gt;&lt;/xref&gt;</ph>.","source":"Retrieves a list of classes in an assembly that would be registered by a call to <xref href=\"System.Runtime.InteropServices.IRegistrationServices.RegisterAssembly(System.Reflection.Assembly,System.Runtime.InteropServices.AssemblyRegistrationFlags)\"></xref>."}],"pos":[6658,6916],"yaml":true},{"content":"The assembly to search for classes.","nodes":[{"pos":[0,35],"content":"The assembly to search for classes.","nodes":[{"content":"The assembly to search for classes.","pos":[0,35]}]}],"pos":[7166,7202],"yaml":true},{"content":"A <xref href=\"System.Type\"></xref> array containing a list of classes in <code>assembly</code>.","nodes":[{"pos":[0,95],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph> array containing a list of classes in <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">assembly</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"A <xref href=\"System.Type\"></xref> array containing a list of classes in <code>assembly</code>."}],"pos":[7259,7355],"yaml":true},{"content":"Registers the classes in a managed assembly to enable creation from COM.","nodes":[{"pos":[0,72],"content":"Registers the classes in a managed assembly to enable creation from COM.","nodes":[{"content":"Registers the classes in a managed assembly to enable creation from COM.","pos":[0,72]}]}],"pos":[9073,9146],"yaml":true},{"content":"`RegisterAssembly` adds the appropriate registry entries for the types in the specified assembly. This method also calls any registration functions found in the assembly.  \n  \n Use <xref:System.Reflection.Assembly.Load%2A?displayProperty=fullName> to get an assembly.","nodes":[{"pos":[0,170],"content":"`RegisterAssembly` adds the appropriate registry entries for the types in the specified assembly. This method also calls any registration functions found in the assembly.","nodes":[{"content":"<ph id=\"ph1\">`RegisterAssembly`</ph> adds the appropriate registry entries for the types in the specified assembly.","pos":[0,97],"source":"`RegisterAssembly` adds the appropriate registry entries for the types in the specified assembly."},{"content":"This method also calls any registration functions found in the assembly.","pos":[98,170]}]},{"pos":[177,267],"content":"Use <xref:System.Reflection.Assembly.Load%2A?displayProperty=fullName> to get an assembly.","nodes":[{"content":"Use <ph id=\"ph1\">&lt;xref:System.Reflection.Assembly.Load%2A?displayProperty=fullName&gt;</ph> to get an assembly.","pos":[0,90],"source":"Use <xref:System.Reflection.Assembly.Load%2A?displayProperty=fullName> to get an assembly."}]}],"pos":[9157,9429],"yaml":true,"extradata":"MT"},{"content":"The assembly to be registered.","nodes":[{"pos":[0,30],"content":"The assembly to be registered.","nodes":[{"content":"The assembly to be registered.","pos":[0,30]}]}],"pos":[9728,9759],"yaml":true},{"content":"An <xref href=\"System.Runtime.InteropServices.AssemblyRegistrationFlags\"></xref> value indicating any special settings needed when registering <code>assembly</code>.","nodes":[{"pos":[0,165],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Runtime.InteropServices.AssemblyRegistrationFlags\"&gt;&lt;/xref&gt;</ph> value indicating any special settings needed when registering <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">assembly</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"An <xref href=\"System.Runtime.InteropServices.AssemblyRegistrationFlags\"></xref> value indicating any special settings needed when registering <code>assembly</code>."}],"pos":[9863,10029],"yaml":true},{"content":"`true` if <code>assembly</code> contains types that were successfully registered; otherwise `false` if the assembly contains no eligible types.","nodes":[{"pos":[0,143],"content":"<ph id=\"ph1\">`true`</ph> if <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">assembly</ph><ept id=\"p1\">&lt;/code&gt;</ept> contains types that were successfully registered; otherwise <ph id=\"ph3\">`false`</ph> if the assembly contains no eligible types.","source":"`true` if <code>assembly</code> contains types that were successfully registered; otherwise `false` if the assembly contains no eligible types."}],"pos":[10087,10233],"yaml":true},{"content":"<code>assembly</code> is `null`.","nodes":[{"pos":[0,32],"content":"<ph id=\"ph1\">&lt;code&gt;assembly&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>assembly</code> is `null`."}],"pos":[10432,10465],"yaml":true},{"content":"The full name of <code>assembly</code> is `null`.  \n  \n -or-  \n  \n A method marked with <xref href=\"System.Runtime.InteropServices.ComRegisterFunctionAttribute\"></xref> is not `static`.  \n  \n -or-  \n  \n There is more than one method marked with <xref href=\"System.Runtime.InteropServices.ComRegisterFunctionAttribute\"></xref> at a given level of the hierarchy.  \n  \n -or-  \n  \n The signature of the method marked with <xref href=\"System.Runtime.InteropServices.ComRegisterFunctionAttribute\"></xref> is not valid.","nodes":[{"pos":[0,49],"content":"The full name of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">assembly</ph><ept id=\"p1\">&lt;/code&gt;</ept> is <ph id=\"ph2\">`null`</ph>.","source":"The full name of <code>assembly</code> is `null`."},{"pos":[56,60],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[67,185],"content":"A method marked with <ph id=\"ph1\">&lt;xref href=\"System.Runtime.InteropServices.ComRegisterFunctionAttribute\"&gt;&lt;/xref&gt;</ph> is not <ph id=\"ph2\">`static`</ph>.","source":"A method marked with <xref href=\"System.Runtime.InteropServices.ComRegisterFunctionAttribute\"></xref> is not `static`."},{"pos":[192,196],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[203,360],"content":"There is more than one method marked with <ph id=\"ph1\">&lt;xref href=\"System.Runtime.InteropServices.ComRegisterFunctionAttribute\"&gt;&lt;/xref&gt;</ph> at a given level of the hierarchy.","source":"There is more than one method marked with <xref href=\"System.Runtime.InteropServices.ComRegisterFunctionAttribute\"></xref> at a given level of the hierarchy."},{"pos":[367,371],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[378,512],"content":"The signature of the method marked with <ph id=\"ph1\">&lt;xref href=\"System.Runtime.InteropServices.ComRegisterFunctionAttribute\"&gt;&lt;/xref&gt;</ph> is not valid.","source":"The signature of the method marked with <xref href=\"System.Runtime.InteropServices.ComRegisterFunctionAttribute\"></xref> is not valid."}],"pos":[10575,11108],"yaml":true},{"content":"Registers the specified type with COM using the specified GUID.","nodes":[{"pos":[0,63],"content":"Registers the specified type with COM using the specified GUID.","nodes":[{"content":"Registers the specified type with COM using the specified GUID.","pos":[0,63]}]}],"pos":[12515,12579],"yaml":true},{"content":"This method is equivalent to calling `CoRegisterClassObject` in COM.","nodes":[{"pos":[0,68],"content":"This method is equivalent to calling <ph id=\"ph1\">`CoRegisterClassObject`</ph> in COM.","source":"This method is equivalent to calling `CoRegisterClassObject` in COM."}],"pos":[12590,12659],"yaml":true,"extradata":"MT"},{"content":"The type to be registered for use from COM.","nodes":[{"pos":[0,43],"content":"The type to be registered for use from COM.","nodes":[{"content":"The type to be registered for use from COM.","pos":[0,43]}]}],"pos":[12870,12914],"yaml":true},{"content":"GUID used to register the specified type.","nodes":[{"pos":[0,41],"content":"GUID used to register the specified type.","nodes":[{"content":"GUID used to register the specified type.","pos":[0,41]}]}],"pos":[12969,13011],"yaml":true},{"content":"Determines whether the specified type is a COM type.","nodes":[{"pos":[0,52],"content":"Determines whether the specified type is a COM type.","nodes":[{"content":"Determines whether the specified type is a COM type.","pos":[0,52]}]}],"pos":[14446,14499],"yaml":true},{"content":"The type to determine if it is a COM type.","nodes":[{"pos":[0,42],"content":"The type to determine if it is a COM type.","nodes":[{"content":"The type to determine if it is a COM type.","pos":[0,42]}]}],"pos":[14643,14686],"yaml":true},{"content":"`true` if the specified type is a COM type; otherwise `false`.","nodes":[{"pos":[0,62],"content":"<ph id=\"ph1\">`true`</ph> if the specified type is a COM type; otherwise <ph id=\"ph2\">`false`</ph>.","source":"`true` if the specified type is a COM type; otherwise `false`."}],"pos":[14744,14809],"yaml":true},{"content":"Determines whether the specified type requires registration.","nodes":[{"pos":[0,60],"content":"Determines whether the specified type requires registration.","nodes":[{"content":"Determines whether the specified type requires registration.","pos":[0,60]}]}],"pos":[16192,16253],"yaml":true},{"content":"The type to check for COM registration requirements.","nodes":[{"pos":[0,52],"content":"The type to check for COM registration requirements.","nodes":[{"content":"The type to check for COM registration requirements.","pos":[0,52]}]}],"pos":[16451,16504],"yaml":true},{"content":"`true` if the type must be registered for use from COM; otherwise `false`.","nodes":[{"pos":[0,74],"content":"<ph id=\"ph1\">`true`</ph> if the type must be registered for use from COM; otherwise <ph id=\"ph2\">`false`</ph>.","source":"`true` if the type must be registered for use from COM; otherwise `false`."}],"pos":[16562,16639],"yaml":true},{"content":"Unregisters the classes in a managed assembly.","nodes":[{"pos":[0,46],"content":"Unregisters the classes in a managed assembly.","nodes":[{"content":"Unregisters the classes in a managed assembly.","pos":[0,46]}]}],"pos":[18112,18159],"yaml":true},{"content":"`UnregisterAssembly` removes the registry entries for the types in the specified assembly previously added by <xref:System.Runtime.InteropServices.IRegistrationServices.RegisterAssembly%2A>. This method also calls any unregistration functions found in the assembly.","nodes":[{"pos":[0,265],"content":"`UnregisterAssembly` removes the registry entries for the types in the specified assembly previously added by <xref:System.Runtime.InteropServices.IRegistrationServices.RegisterAssembly%2A>. This method also calls any unregistration functions found in the assembly.","nodes":[{"content":"<ph id=\"ph1\">`UnregisterAssembly`</ph> removes the registry entries for the types in the specified assembly previously added by <ph id=\"ph2\">&lt;xref:System.Runtime.InteropServices.IRegistrationServices.RegisterAssembly%2A&gt;</ph>.","pos":[0,190],"source":"`UnregisterAssembly` removes the registry entries for the types in the specified assembly previously added by <xref:System.Runtime.InteropServices.IRegistrationServices.RegisterAssembly%2A>."},{"content":"This method also calls any unregistration functions found in the assembly.","pos":[191,265]}]}],"pos":[18170,18438],"yaml":true,"extradata":"MT"},{"content":"The assembly to be unregistered.","nodes":[{"pos":[0,32],"content":"The assembly to be unregistered.","nodes":[{"content":"The assembly to be unregistered.","pos":[0,32]}]}],"pos":[18675,18708],"yaml":true},{"content":"`true` if <code>assembly</code> contains types that were successfully unregistered; otherwise `false` if the assembly contains no eligible types.","nodes":[{"pos":[0,145],"content":"<ph id=\"ph1\">`true`</ph> if <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">assembly</ph><ept id=\"p1\">&lt;/code&gt;</ept> contains types that were successfully unregistered; otherwise <ph id=\"ph3\">`false`</ph> if the assembly contains no eligible types.","source":"`true` if <code>assembly</code> contains types that were successfully unregistered; otherwise `false` if the assembly contains no eligible types."}],"pos":[18766,18914],"yaml":true},{"content":"<code>assembly</code> is `null`.","nodes":[{"pos":[0,32],"content":"<ph id=\"ph1\">&lt;code&gt;assembly&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>assembly</code> is `null`."}],"pos":[19115,19148],"yaml":true},{"content":"The full name of <code>assembly</code> is `null`.  \n  \n -or-  \n  \n A method marked with <xref href=\"System.Runtime.InteropServices.ComUnregisterFunctionAttribute\"></xref> is not `static`.  \n  \n -or-  \n  \n There is more than one method marked with <xref href=\"System.Runtime.InteropServices.ComUnregisterFunctionAttribute\"></xref> at a given level of the hierarchy.  \n  \n -or-  \n  \n The signature of the method marked with <xref href=\"System.Runtime.InteropServices.ComUnregisterFunctionAttribute\"></xref> is not valid.","nodes":[{"pos":[0,49],"content":"The full name of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">assembly</ph><ept id=\"p1\">&lt;/code&gt;</ept> is <ph id=\"ph2\">`null`</ph>.","source":"The full name of <code>assembly</code> is `null`."},{"pos":[56,60],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[67,187],"content":"A method marked with <ph id=\"ph1\">&lt;xref href=\"System.Runtime.InteropServices.ComUnregisterFunctionAttribute\"&gt;&lt;/xref&gt;</ph> is not <ph id=\"ph2\">`static`</ph>.","source":"A method marked with <xref href=\"System.Runtime.InteropServices.ComUnregisterFunctionAttribute\"></xref> is not `static`."},{"pos":[194,198],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[205,364],"content":"There is more than one method marked with <ph id=\"ph1\">&lt;xref href=\"System.Runtime.InteropServices.ComUnregisterFunctionAttribute\"&gt;&lt;/xref&gt;</ph> at a given level of the hierarchy.","source":"There is more than one method marked with <xref href=\"System.Runtime.InteropServices.ComUnregisterFunctionAttribute\"></xref> at a given level of the hierarchy."},{"pos":[371,375],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[382,518],"content":"The signature of the method marked with <ph id=\"ph1\">&lt;xref href=\"System.Runtime.InteropServices.ComUnregisterFunctionAttribute\"&gt;&lt;/xref&gt;</ph> is not valid.","source":"The signature of the method marked with <xref href=\"System.Runtime.InteropServices.ComUnregisterFunctionAttribute\"></xref> is not valid."}],"pos":[19258,19797],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Runtime.InteropServices.IRegistrationServices\n  commentId: T:System.Runtime.InteropServices.IRegistrationServices\n  id: IRegistrationServices\n  children:\n  - System.Runtime.InteropServices.IRegistrationServices.GetManagedCategoryGuid\n  - System.Runtime.InteropServices.IRegistrationServices.GetProgIdForType(System.Type)\n  - System.Runtime.InteropServices.IRegistrationServices.GetRegistrableTypesInAssembly(System.Reflection.Assembly)\n  - System.Runtime.InteropServices.IRegistrationServices.RegisterAssembly(System.Reflection.Assembly,System.Runtime.InteropServices.AssemblyRegistrationFlags)\n  - System.Runtime.InteropServices.IRegistrationServices.RegisterTypeForComClients(System.Type,System.Guid@)\n  - System.Runtime.InteropServices.IRegistrationServices.TypeRepresentsComType(System.Type)\n  - System.Runtime.InteropServices.IRegistrationServices.TypeRequiresRegistration(System.Type)\n  - System.Runtime.InteropServices.IRegistrationServices.UnregisterAssembly(System.Reflection.Assembly)\n  langs:\n  - csharp\n  name: IRegistrationServices\n  nameWithType: IRegistrationServices\n  fullName: System.Runtime.InteropServices.IRegistrationServices\n  type: Interface\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Provides a set of services for registering and unregistering managed assemblies for use from COM.\n  remarks: Registration is needed when the objects within an assembly are being used by COM clients.\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      [System.Runtime.InteropServices.Guid(\"CCBD682C-73A5-4568-B8B0-C7007E11ABA2\")]\n\n      public interface IRegistrationServices\n  derivedClasses:\n  - System.Runtime.InteropServices.RegistrationServices\n  implements: []\n  attributes:\n  - type: System.Runtime.InteropServices.ComVisibleAttribute\n  - type: System.Runtime.InteropServices.GuidAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/IRegistrationServices.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Runtime.InteropServices.IRegistrationServices.GetManagedCategoryGuid\n  commentId: M:System.Runtime.InteropServices.IRegistrationServices.GetManagedCategoryGuid\n  id: GetManagedCategoryGuid\n  parent: System.Runtime.InteropServices.IRegistrationServices\n  langs:\n  - csharp\n  name: GetManagedCategoryGuid()\n  nameWithType: IRegistrationServices.GetManagedCategoryGuid()\n  fullName: IRegistrationServices.GetManagedCategoryGuid()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Returns the GUID of the COM category that contains the managed classes.\n  syntax:\n    content: public Guid GetManagedCategoryGuid ();\n    parameters: []\n    return:\n      type: System.Guid\n      description: The GUID of the COM category that contains the managed classes.\n  overload: System.Runtime.InteropServices.IRegistrationServices.GetManagedCategoryGuid*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/IRegistrationServices.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Runtime.InteropServices.IRegistrationServices.GetProgIdForType(System.Type)\n  commentId: M:System.Runtime.InteropServices.IRegistrationServices.GetProgIdForType(System.Type)\n  id: GetProgIdForType(System.Type)\n  parent: System.Runtime.InteropServices.IRegistrationServices\n  langs:\n  - csharp\n  name: GetProgIdForType(Type)\n  nameWithType: IRegistrationServices.GetProgIdForType(Type)\n  fullName: IRegistrationServices.GetProgIdForType(Type)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Retrieves the COM ProgID for a specified type.\n  syntax:\n    content: >-\n      [System.Security.SecurityCritical]\n\n      public string GetProgIdForType (Type type);\n    parameters:\n    - id: type\n      type: System.Type\n      description: The type whose ProgID is being requested.\n    return:\n      type: System.String\n      description: The ProgID for the specified type.\n  overload: System.Runtime.InteropServices.IRegistrationServices.GetProgIdForType*\n  exceptions: []\n  attributes:\n  - type: System.Security.SecurityCriticalAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/IRegistrationServices.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Runtime.InteropServices.IRegistrationServices.GetRegistrableTypesInAssembly(System.Reflection.Assembly)\n  commentId: M:System.Runtime.InteropServices.IRegistrationServices.GetRegistrableTypesInAssembly(System.Reflection.Assembly)\n  id: GetRegistrableTypesInAssembly(System.Reflection.Assembly)\n  parent: System.Runtime.InteropServices.IRegistrationServices\n  langs:\n  - csharp\n  name: GetRegistrableTypesInAssembly(Assembly)\n  nameWithType: IRegistrationServices.GetRegistrableTypesInAssembly(Assembly)\n  fullName: IRegistrationServices.GetRegistrableTypesInAssembly(Assembly)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Retrieves a list of classes in an assembly that would be registered by a call to <xref href=\"System.Runtime.InteropServices.IRegistrationServices.RegisterAssembly(System.Reflection.Assembly,System.Runtime.InteropServices.AssemblyRegistrationFlags)\"></xref>.\n  syntax:\n    content: >-\n      [System.Security.SecurityCritical]\n\n      public Type[] GetRegistrableTypesInAssembly (System.Reflection.Assembly assembly);\n    parameters:\n    - id: assembly\n      type: System.Reflection.Assembly\n      description: The assembly to search for classes.\n    return:\n      type: System.Type[]\n      description: A <xref href=\"System.Type\"></xref> array containing a list of classes in <code>assembly</code>.\n  overload: System.Runtime.InteropServices.IRegistrationServices.GetRegistrableTypesInAssembly*\n  exceptions: []\n  attributes:\n  - type: System.Security.SecurityCriticalAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/IRegistrationServices.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Runtime.InteropServices.IRegistrationServices.RegisterAssembly(System.Reflection.Assembly,System.Runtime.InteropServices.AssemblyRegistrationFlags)\n  commentId: M:System.Runtime.InteropServices.IRegistrationServices.RegisterAssembly(System.Reflection.Assembly,System.Runtime.InteropServices.AssemblyRegistrationFlags)\n  id: RegisterAssembly(System.Reflection.Assembly,System.Runtime.InteropServices.AssemblyRegistrationFlags)\n  parent: System.Runtime.InteropServices.IRegistrationServices\n  langs:\n  - csharp\n  name: RegisterAssembly(Assembly, AssemblyRegistrationFlags)\n  nameWithType: IRegistrationServices.RegisterAssembly(Assembly, AssemblyRegistrationFlags)\n  fullName: IRegistrationServices.RegisterAssembly(Assembly, AssemblyRegistrationFlags)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Registers the classes in a managed assembly to enable creation from COM.\n  remarks: \"`RegisterAssembly` adds the appropriate registry entries for the types in the specified assembly. This method also calls any registration functions found in the assembly.  \\n  \\n Use <xref:System.Reflection.Assembly.Load%2A?displayProperty=fullName> to get an assembly.\"\n  syntax:\n    content: >-\n      [System.Security.SecurityCritical]\n\n      public bool RegisterAssembly (System.Reflection.Assembly assembly, System.Runtime.InteropServices.AssemblyRegistrationFlags flags);\n    parameters:\n    - id: assembly\n      type: System.Reflection.Assembly\n      description: The assembly to be registered.\n    - id: flags\n      type: System.Runtime.InteropServices.AssemblyRegistrationFlags\n      description: An <xref href=\"System.Runtime.InteropServices.AssemblyRegistrationFlags\"></xref> value indicating any special settings needed when registering <code>assembly</code>.\n    return:\n      type: System.Boolean\n      description: '`true` if <code>assembly</code> contains types that were successfully registered; otherwise `false` if the assembly contains no eligible types.'\n  overload: System.Runtime.InteropServices.IRegistrationServices.RegisterAssembly*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>assembly</code> is `null`.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"The full name of <code>assembly</code> is `null`.  \\n  \\n -or-  \\n  \\n A method marked with <xref href=\\\"System.Runtime.InteropServices.ComRegisterFunctionAttribute\\\"></xref> is not `static`.  \\n  \\n -or-  \\n  \\n There is more than one method marked with <xref href=\\\"System.Runtime.InteropServices.ComRegisterFunctionAttribute\\\"></xref> at a given level of the hierarchy.  \\n  \\n -or-  \\n  \\n The signature of the method marked with <xref href=\\\"System.Runtime.InteropServices.ComRegisterFunctionAttribute\\\"></xref> is not valid.\"\n  attributes:\n  - type: System.Security.SecurityCriticalAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/IRegistrationServices.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Runtime.InteropServices.IRegistrationServices.RegisterTypeForComClients(System.Type,System.Guid@)\n  commentId: M:System.Runtime.InteropServices.IRegistrationServices.RegisterTypeForComClients(System.Type,System.Guid@)\n  id: RegisterTypeForComClients(System.Type,System.Guid@)\n  parent: System.Runtime.InteropServices.IRegistrationServices\n  langs:\n  - csharp\n  name: RegisterTypeForComClients(Type, Guid)\n  nameWithType: IRegistrationServices.RegisterTypeForComClients(Type, Guid)\n  fullName: IRegistrationServices.RegisterTypeForComClients(Type, Guid)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Registers the specified type with COM using the specified GUID.\n  remarks: This method is equivalent to calling `CoRegisterClassObject` in COM.\n  syntax:\n    content: >-\n      [System.Security.SecurityCritical]\n\n      public void RegisterTypeForComClients (Type type, ref Guid g);\n    parameters:\n    - id: type\n      type: System.Type\n      description: The type to be registered for use from COM.\n    - id: g\n      type: System.Guid\n      description: GUID used to register the specified type.\n  overload: System.Runtime.InteropServices.IRegistrationServices.RegisterTypeForComClients*\n  exceptions: []\n  attributes:\n  - type: System.Security.SecurityCriticalAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/IRegistrationServices.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Runtime.InteropServices.IRegistrationServices.TypeRepresentsComType(System.Type)\n  commentId: M:System.Runtime.InteropServices.IRegistrationServices.TypeRepresentsComType(System.Type)\n  id: TypeRepresentsComType(System.Type)\n  parent: System.Runtime.InteropServices.IRegistrationServices\n  langs:\n  - csharp\n  name: TypeRepresentsComType(Type)\n  nameWithType: IRegistrationServices.TypeRepresentsComType(Type)\n  fullName: IRegistrationServices.TypeRepresentsComType(Type)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Determines whether the specified type is a COM type.\n  syntax:\n    content: public bool TypeRepresentsComType (Type type);\n    parameters:\n    - id: type\n      type: System.Type\n      description: The type to determine if it is a COM type.\n    return:\n      type: System.Boolean\n      description: '`true` if the specified type is a COM type; otherwise `false`.'\n  overload: System.Runtime.InteropServices.IRegistrationServices.TypeRepresentsComType*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/IRegistrationServices.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Runtime.InteropServices.IRegistrationServices.TypeRequiresRegistration(System.Type)\n  commentId: M:System.Runtime.InteropServices.IRegistrationServices.TypeRequiresRegistration(System.Type)\n  id: TypeRequiresRegistration(System.Type)\n  parent: System.Runtime.InteropServices.IRegistrationServices\n  langs:\n  - csharp\n  name: TypeRequiresRegistration(Type)\n  nameWithType: IRegistrationServices.TypeRequiresRegistration(Type)\n  fullName: IRegistrationServices.TypeRequiresRegistration(Type)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Determines whether the specified type requires registration.\n  syntax:\n    content: >-\n      [System.Security.SecurityCritical]\n\n      public bool TypeRequiresRegistration (Type type);\n    parameters:\n    - id: type\n      type: System.Type\n      description: The type to check for COM registration requirements.\n    return:\n      type: System.Boolean\n      description: '`true` if the type must be registered for use from COM; otherwise `false`.'\n  overload: System.Runtime.InteropServices.IRegistrationServices.TypeRequiresRegistration*\n  exceptions: []\n  attributes:\n  - type: System.Security.SecurityCriticalAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/IRegistrationServices.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Runtime.InteropServices.IRegistrationServices.UnregisterAssembly(System.Reflection.Assembly)\n  commentId: M:System.Runtime.InteropServices.IRegistrationServices.UnregisterAssembly(System.Reflection.Assembly)\n  id: UnregisterAssembly(System.Reflection.Assembly)\n  parent: System.Runtime.InteropServices.IRegistrationServices\n  langs:\n  - csharp\n  name: UnregisterAssembly(Assembly)\n  nameWithType: IRegistrationServices.UnregisterAssembly(Assembly)\n  fullName: IRegistrationServices.UnregisterAssembly(Assembly)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.InteropServices\n  summary: Unregisters the classes in a managed assembly.\n  remarks: '`UnregisterAssembly` removes the registry entries for the types in the specified assembly previously added by <xref:System.Runtime.InteropServices.IRegistrationServices.RegisterAssembly%2A>. This method also calls any unregistration functions found in the assembly.'\n  syntax:\n    content: >-\n      [System.Security.SecurityCritical]\n\n      public bool UnregisterAssembly (System.Reflection.Assembly assembly);\n    parameters:\n    - id: assembly\n      type: System.Reflection.Assembly\n      description: The assembly to be unregistered.\n    return:\n      type: System.Boolean\n      description: '`true` if <code>assembly</code> contains types that were successfully unregistered; otherwise `false` if the assembly contains no eligible types.'\n  overload: System.Runtime.InteropServices.IRegistrationServices.UnregisterAssembly*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>assembly</code> is `null`.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: \"The full name of <code>assembly</code> is `null`.  \\n  \\n -or-  \\n  \\n A method marked with <xref href=\\\"System.Runtime.InteropServices.ComUnregisterFunctionAttribute\\\"></xref> is not `static`.  \\n  \\n -or-  \\n  \\n There is more than one method marked with <xref href=\\\"System.Runtime.InteropServices.ComUnregisterFunctionAttribute\\\"></xref> at a given level of the hierarchy.  \\n  \\n -or-  \\n  \\n The signature of the method marked with <xref href=\\\"System.Runtime.InteropServices.ComUnregisterFunctionAttribute\\\"></xref> is not valid.\"\n  attributes:\n  - type: System.Security.SecurityCriticalAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/IRegistrationServices.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\nreferences:\n- uid: System.ArgumentNullException\n  parent: System\n  isExternal: false\n  name: ArgumentNullException\n  nameWithType: ArgumentNullException\n  fullName: System.ArgumentNullException\n- uid: System.InvalidOperationException\n  parent: System\n  isExternal: false\n  name: InvalidOperationException\n  nameWithType: InvalidOperationException\n  fullName: System.InvalidOperationException\n- uid: System.Runtime.InteropServices.IRegistrationServices.GetManagedCategoryGuid\n  parent: System.Runtime.InteropServices.IRegistrationServices\n  isExternal: false\n  name: GetManagedCategoryGuid()\n  nameWithType: IRegistrationServices.GetManagedCategoryGuid()\n  fullName: IRegistrationServices.GetManagedCategoryGuid()\n- uid: System.Guid\n  parent: System\n  isExternal: false\n  name: Guid\n  nameWithType: Guid\n  fullName: System.Guid\n- uid: System.Runtime.InteropServices.IRegistrationServices.GetProgIdForType(System.Type)\n  parent: System.Runtime.InteropServices.IRegistrationServices\n  isExternal: false\n  name: GetProgIdForType(Type)\n  nameWithType: IRegistrationServices.GetProgIdForType(Type)\n  fullName: IRegistrationServices.GetProgIdForType(Type)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.Runtime.InteropServices.IRegistrationServices.GetRegistrableTypesInAssembly(System.Reflection.Assembly)\n  parent: System.Runtime.InteropServices.IRegistrationServices\n  isExternal: false\n  name: GetRegistrableTypesInAssembly(Assembly)\n  nameWithType: IRegistrationServices.GetRegistrableTypesInAssembly(Assembly)\n  fullName: IRegistrationServices.GetRegistrableTypesInAssembly(Assembly)\n- uid: System.Type[]\n  parent: System\n  isExternal: false\n  name: Type[]\n  nameWithType: Type[]\n  fullName: System.Type[]\n  spec.csharp:\n  - uid: System.Type\n    name: Type\n    nameWithType: Type\n    fullName: System.Type\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Reflection.Assembly\n  parent: System.Reflection\n  isExternal: false\n  name: Assembly\n  nameWithType: Assembly\n  fullName: System.Reflection.Assembly\n- uid: System.Runtime.InteropServices.IRegistrationServices.RegisterAssembly(System.Reflection.Assembly,System.Runtime.InteropServices.AssemblyRegistrationFlags)\n  parent: System.Runtime.InteropServices.IRegistrationServices\n  isExternal: false\n  name: RegisterAssembly(Assembly, AssemblyRegistrationFlags)\n  nameWithType: IRegistrationServices.RegisterAssembly(Assembly, AssemblyRegistrationFlags)\n  fullName: IRegistrationServices.RegisterAssembly(Assembly, AssemblyRegistrationFlags)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Runtime.InteropServices.AssemblyRegistrationFlags\n  parent: System.Runtime.InteropServices\n  isExternal: false\n  name: AssemblyRegistrationFlags\n  nameWithType: AssemblyRegistrationFlags\n  fullName: System.Runtime.InteropServices.AssemblyRegistrationFlags\n- uid: System.Runtime.InteropServices.IRegistrationServices.RegisterTypeForComClients(System.Type,System.Guid@)\n  parent: System.Runtime.InteropServices.IRegistrationServices\n  isExternal: false\n  name: RegisterTypeForComClients(Type, Guid)\n  nameWithType: IRegistrationServices.RegisterTypeForComClients(Type, Guid)\n  fullName: IRegistrationServices.RegisterTypeForComClients(Type, Guid)\n- uid: System.Runtime.InteropServices.IRegistrationServices.TypeRepresentsComType(System.Type)\n  parent: System.Runtime.InteropServices.IRegistrationServices\n  isExternal: false\n  name: TypeRepresentsComType(Type)\n  nameWithType: IRegistrationServices.TypeRepresentsComType(Type)\n  fullName: IRegistrationServices.TypeRepresentsComType(Type)\n- uid: System.Runtime.InteropServices.IRegistrationServices.TypeRequiresRegistration(System.Type)\n  parent: System.Runtime.InteropServices.IRegistrationServices\n  isExternal: false\n  name: TypeRequiresRegistration(Type)\n  nameWithType: IRegistrationServices.TypeRequiresRegistration(Type)\n  fullName: IRegistrationServices.TypeRequiresRegistration(Type)\n- uid: System.Runtime.InteropServices.IRegistrationServices.UnregisterAssembly(System.Reflection.Assembly)\n  parent: System.Runtime.InteropServices.IRegistrationServices\n  isExternal: false\n  name: UnregisterAssembly(Assembly)\n  nameWithType: IRegistrationServices.UnregisterAssembly(Assembly)\n  fullName: IRegistrationServices.UnregisterAssembly(Assembly)\n- uid: System.Runtime.InteropServices.IRegistrationServices.GetManagedCategoryGuid*\n  parent: System.Runtime.InteropServices.IRegistrationServices\n  isExternal: false\n  name: GetManagedCategoryGuid\n  nameWithType: IRegistrationServices.GetManagedCategoryGuid\n  fullName: IRegistrationServices.GetManagedCategoryGuid\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/IRegistrationServices.xml\n- uid: System.Runtime.InteropServices.IRegistrationServices.GetProgIdForType*\n  parent: System.Runtime.InteropServices.IRegistrationServices\n  isExternal: false\n  name: GetProgIdForType\n  nameWithType: IRegistrationServices.GetProgIdForType\n  fullName: IRegistrationServices.GetProgIdForType\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/IRegistrationServices.xml\n- uid: System.Runtime.InteropServices.IRegistrationServices.GetRegistrableTypesInAssembly*\n  parent: System.Runtime.InteropServices.IRegistrationServices\n  isExternal: false\n  name: GetRegistrableTypesInAssembly\n  nameWithType: IRegistrationServices.GetRegistrableTypesInAssembly\n  fullName: IRegistrationServices.GetRegistrableTypesInAssembly\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/IRegistrationServices.xml\n- uid: System.Runtime.InteropServices.IRegistrationServices.RegisterAssembly*\n  parent: System.Runtime.InteropServices.IRegistrationServices\n  isExternal: false\n  name: RegisterAssembly\n  nameWithType: IRegistrationServices.RegisterAssembly\n  fullName: IRegistrationServices.RegisterAssembly\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/IRegistrationServices.xml\n- uid: System.Runtime.InteropServices.IRegistrationServices.RegisterTypeForComClients*\n  parent: System.Runtime.InteropServices.IRegistrationServices\n  isExternal: false\n  name: RegisterTypeForComClients\n  nameWithType: IRegistrationServices.RegisterTypeForComClients\n  fullName: IRegistrationServices.RegisterTypeForComClients\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/IRegistrationServices.xml\n- uid: System.Runtime.InteropServices.IRegistrationServices.TypeRepresentsComType*\n  parent: System.Runtime.InteropServices.IRegistrationServices\n  isExternal: false\n  name: TypeRepresentsComType\n  nameWithType: IRegistrationServices.TypeRepresentsComType\n  fullName: IRegistrationServices.TypeRepresentsComType\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/IRegistrationServices.xml\n- uid: System.Runtime.InteropServices.IRegistrationServices.TypeRequiresRegistration*\n  parent: System.Runtime.InteropServices.IRegistrationServices\n  isExternal: false\n  name: TypeRequiresRegistration\n  nameWithType: IRegistrationServices.TypeRequiresRegistration\n  fullName: IRegistrationServices.TypeRequiresRegistration\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/IRegistrationServices.xml\n- uid: System.Runtime.InteropServices.IRegistrationServices.UnregisterAssembly*\n  parent: System.Runtime.InteropServices.IRegistrationServices\n  isExternal: false\n  name: UnregisterAssembly\n  nameWithType: IRegistrationServices.UnregisterAssembly\n  fullName: IRegistrationServices.UnregisterAssembly\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.InteropServices/IRegistrationServices.xml\n"}