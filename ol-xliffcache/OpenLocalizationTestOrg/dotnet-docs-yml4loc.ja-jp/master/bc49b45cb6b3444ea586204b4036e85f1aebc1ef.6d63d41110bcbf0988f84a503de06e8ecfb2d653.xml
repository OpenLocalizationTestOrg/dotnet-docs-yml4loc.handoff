{"nodes":[{"content":"Defines the required members of a session-state provider for a data store.","nodes":[{"pos":[0,74],"content":"Defines the required members of a session-state provider for a data store.","nodes":[{"content":"Defines the required members of a session-state provider for a data store.","pos":[0,74]}]}],"pos":[2193,2268],"yaml":true},{"content":"ASP.NET session state reads and writes session data from and to a data store using a session-state store provider. A session-state store provider is a class that inherits the <xref:System.Web.SessionState.SessionStateStoreProviderBase> abstract class and overrides its members with implementations specific to the data store. The session-state store provider is called by the <xref:System.Web.SessionState.SessionStateModule> class during the processing of an ASP.NET page to communicate with the data store for the storage and retrieval of session variables and related session information such as the time-out value.  \n  \n Session data within each ASP.NET application is stored separately for each <xref:System.Web.SessionState.HttpSessionState.SessionID%2A> property. ASP.NET applications do not share session data.  \n  \n You can specify a custom <xref:System.Web.SessionState.SessionStateStoreProviderBase> implementation for an ASP.NET application by setting the `mode` attribute of the `sessionState` configuration element to <xref:System.Web.SessionState.SessionStateMode.Custom> and the `customProvider` attribute to the name of the custom provider, as shown in the example for this topic.  \n  \n## Locking Session Store Data  \n Because ASP.NET applications are multithreaded to support responding to concurrent requests, it is possible that concurrent requests might attempt to access the same session information. Consider a scenario where multiple frames in a frameset all access the same application. The separate requests for each frame in the frameset can be executed on the Web server concurrently on different threads. If the ASP.NET pages for each frame source access session-state variables, then you could have multiple threads accessing the session store concurrently.  \n  \n To avoid data collisions at the session store and unexpected session-state behavior, the <xref:System.Web.SessionState.SessionStateModule> and <xref:System.Web.SessionState.SessionStateStoreProviderBase> classes include lock functionality that exclusively locks the session store item for a particular session for the duration of the execution of an ASP.NET page. Note that even if the <xref:System.Web.Configuration.PagesSection.EnableSessionState%2A> attribute is marked as `ReadOnly`, other ASP.NET pages in the same application might be able to write to the session store, so a request for read-only session data from the store might still end up waiting for locked data to be freed.  \n  \n A lock is set on session-store data at the beginning of the request, in the call to the <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A> method. When the request completes, the lock is released during the call to the <xref:System.Web.SessionState.SessionStateStoreProviderBase.SetAndReleaseItemExclusive%2A> method.  \n  \n If the <xref:System.Web.SessionState.SessionStateModule> object encounters locked session data during the call to either the <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A> or the <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItem%2A> method, it will re-request the session data at half-second intervals until either the lock is released or the amount of time that the session data has been locked exceeds the value of the <xref:System.Web.Configuration.HttpRuntimeSection.ExecutionTimeout%2A> property. If the execution time out is exceeded, the <xref:System.Web.SessionState.SessionStateModule> object will call the <xref:System.Web.SessionState.SessionStateStoreProviderBase.ReleaseItemExclusive%2A> method to free the session-store data and request the session-store data at that time.  \n  \n Because locked session-store data might have been freed by a call to the <xref:System.Web.SessionState.SessionStateStoreProviderBase.ReleaseItemExclusive%2A> method on a separate thread before the call to the <xref:System.Web.SessionState.SessionStateStoreProviderBase.SetAndReleaseItemExclusive%2A> method for the current response, an attempt could be made to set and release session-state store data that has already been released and modified by another session. To avoid this situation, the <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItem%2A> and <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A> methods return a lock identifier. This lock identifier must be included with each request to modify locked session-store data. Session-store data is modified only if the lock identifier in the data store matches the lock identifier supplied by the <xref:System.Web.SessionState.SessionStateModule>.  \n  \n## Deleting Expired Session Store Data  \n When the <xref:System.Web.SessionState.HttpSessionState.Abandon%2A> method is called for a particular session, the data for that session is deleted from the data store using the <xref:System.Web.SessionState.SessionStateStoreProviderBase.RemoveItem%2A> method; otherwise, the data will remain in the session data store to server future requests for the session. It is up to the <xref:System.Web.SessionState.SessionStateStoreProviderBase> implementation to delete expired session data.","nodes":[{"pos":[0,618],"content":"ASP.NET session state reads and writes session data from and to a data store using a session-state store provider. A session-state store provider is a class that inherits the <xref:System.Web.SessionState.SessionStateStoreProviderBase> abstract class and overrides its members with implementations specific to the data store. The session-state store provider is called by the <xref:System.Web.SessionState.SessionStateModule> class during the processing of an ASP.NET page to communicate with the data store for the storage and retrieval of session variables and related session information such as the time-out value.","nodes":[{"content":"ASP.NET session state reads and writes session data from and to a data store using a session-state store provider. A session-state store provider is a class that inherits the <xref:System.Web.SessionState.SessionStateStoreProviderBase> abstract class and overrides its members with implementations specific to the data store. The session-state store provider is called by the <xref:System.Web.SessionState.SessionStateModule> class during the processing of an ASP.NET page to communicate with the data store for the storage and retrieval of session variables and related session information such as the time-out value.","pos":[0,618],"nodes":[{"content":"ASP.NET session state reads and writes session data from and to a data store using a session-state store provider.","pos":[0,114]},{"content":"A session-state store provider is a class that inherits the <ph id=\"ph1\">&lt;xref:System.Web.SessionState.SessionStateStoreProviderBase&gt;</ph> abstract class and overrides its members with implementations specific to the data store.","pos":[115,325],"source":" A session-state store provider is a class that inherits the <xref:System.Web.SessionState.SessionStateStoreProviderBase> abstract class and overrides its members with implementations specific to the data store."},{"content":"The session-state store provider is called by the <ph id=\"ph1\">&lt;xref:System.Web.SessionState.SessionStateModule&gt;</ph> class during the processing of an ASP.NET page to communicate with the data store for the storage and retrieval of session variables and related session information such as the time-out value.","pos":[326,618],"source":" The session-state store provider is called by the <xref:System.Web.SessionState.SessionStateModule> class during the processing of an ASP.NET page to communicate with the data store for the storage and retrieval of session variables and related session information such as the time-out value."}]}]},{"pos":[625,818],"content":"Session data within each ASP.NET application is stored separately for each <xref:System.Web.SessionState.HttpSessionState.SessionID%2A> property. ASP.NET applications do not share session data.","nodes":[{"content":"Session data within each ASP.NET application is stored separately for each <xref:System.Web.SessionState.HttpSessionState.SessionID%2A> property. ASP.NET applications do not share session data.","pos":[0,193],"nodes":[{"content":"Session data within each ASP.NET application is stored separately for each <ph id=\"ph1\">&lt;xref:System.Web.SessionState.HttpSessionState.SessionID%2A&gt;</ph> property.","pos":[0,145],"source":"Session data within each ASP.NET application is stored separately for each <xref:System.Web.SessionState.HttpSessionState.SessionID%2A> property."},{"content":"ASP.NET applications do not share session data.","pos":[146,193]}]}]},{"pos":[825,1197],"content":"You can specify a custom <ph id=\"ph1\">&lt;xref:System.Web.SessionState.SessionStateStoreProviderBase&gt;</ph> implementation for an ASP.NET application by setting the <ph id=\"ph2\">`mode`</ph> attribute of the <ph id=\"ph3\">`sessionState`</ph> configuration element to <ph id=\"ph4\">&lt;xref:System.Web.SessionState.SessionStateMode.Custom&gt;</ph> and the <ph id=\"ph5\">`customProvider`</ph> attribute to the name of the custom provider, as shown in the example for this topic.","source":"You can specify a custom <xref:System.Web.SessionState.SessionStateStoreProviderBase> implementation for an ASP.NET application by setting the `mode` attribute of the `sessionState` configuration element to <xref:System.Web.SessionState.SessionStateMode.Custom> and the `customProvider` attribute to the name of the custom provider, as shown in the example for this topic."},{"pos":[1206,1232],"content":"Locking Session Store Data","linkify":"Locking Session Store Data","nodes":[{"content":"Locking Session Store Data","pos":[0,26]}]},{"pos":[1236,1787],"content":"Because ASP.NET applications are multithreaded to support responding to concurrent requests, it is possible that concurrent requests might attempt to access the same session information. Consider a scenario where multiple frames in a frameset all access the same application. The separate requests for each frame in the frameset can be executed on the Web server concurrently on different threads. If the ASP.NET pages for each frame source access session-state variables, then you could have multiple threads accessing the session store concurrently.","nodes":[{"content":"Because ASP.NET applications are multithreaded to support responding to concurrent requests, it is possible that concurrent requests might attempt to access the same session information. Consider a scenario where multiple frames in a frameset all access the same application. The separate requests for each frame in the frameset can be executed on the Web server concurrently on different threads. If the ASP.NET pages for each frame source access session-state variables, then you could have multiple threads accessing the session store concurrently.","pos":[0,551],"nodes":[{"content":"Because ASP.NET applications are multithreaded to support responding to concurrent requests, it is possible that concurrent requests might attempt to access the same session information.","pos":[0,186]},{"content":"Consider a scenario where multiple frames in a frameset all access the same application.","pos":[187,275]},{"content":"The separate requests for each frame in the frameset can be executed on the Web server concurrently on different threads.","pos":[276,397]},{"content":"If the ASP.NET pages for each frame source access session-state variables, then you could have multiple threads accessing the session store concurrently.","pos":[398,551]}]}]},{"pos":[1794,2481],"content":"To avoid data collisions at the session store and unexpected session-state behavior, the <xref:System.Web.SessionState.SessionStateModule> and <xref:System.Web.SessionState.SessionStateStoreProviderBase> classes include lock functionality that exclusively locks the session store item for a particular session for the duration of the execution of an ASP.NET page. Note that even if the <xref:System.Web.Configuration.PagesSection.EnableSessionState%2A> attribute is marked as `ReadOnly`, other ASP.NET pages in the same application might be able to write to the session store, so a request for read-only session data from the store might still end up waiting for locked data to be freed.","nodes":[{"content":"To avoid data collisions at the session store and unexpected session-state behavior, the <ph id=\"ph1\">&lt;xref:System.Web.SessionState.SessionStateModule&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Web.SessionState.SessionStateStoreProviderBase&gt;</ph> classes include lock functionality that exclusively locks the session store item for a particular session for the duration of the execution of an ASP.NET page.","pos":[0,363],"source":"To avoid data collisions at the session store and unexpected session-state behavior, the <xref:System.Web.SessionState.SessionStateModule> and <xref:System.Web.SessionState.SessionStateStoreProviderBase> classes include lock functionality that exclusively locks the session store item for a particular session for the duration of the execution of an ASP.NET page."},{"content":"Note that even if the <ph id=\"ph1\">&lt;xref:System.Web.Configuration.PagesSection.EnableSessionState%2A&gt;</ph> attribute is marked as <ph id=\"ph2\">`ReadOnly`</ph>, other ASP.NET pages in the same application might be able to write to the session store, so a request for read-only session data from the store might still end up waiting for locked data to be freed.","pos":[364,687],"source":" Note that even if the <xref:System.Web.Configuration.PagesSection.EnableSessionState%2A> attribute is marked as `ReadOnly`, other ASP.NET pages in the same application might be able to write to the session store, so a request for read-only session data from the store might still end up waiting for locked data to be freed."}]},{"pos":[2488,2835],"content":"A lock is set on session-store data at the beginning of the request, in the call to the <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A> method. When the request completes, the lock is released during the call to the <xref:System.Web.SessionState.SessionStateStoreProviderBase.SetAndReleaseItemExclusive%2A> method.","nodes":[{"content":"A lock is set on session-store data at the beginning of the request, in the call to the <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A> method. When the request completes, the lock is released during the call to the <xref:System.Web.SessionState.SessionStateStoreProviderBase.SetAndReleaseItemExclusive%2A> method.","pos":[0,347],"nodes":[{"content":"A lock is set on session-store data at the beginning of the request, in the call to the <ph id=\"ph1\">&lt;xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A&gt;</ph> method.","pos":[0,176],"source":"A lock is set on session-store data at the beginning of the request, in the call to the <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A> method."},{"content":"When the request completes, the lock is released during the call to the <ph id=\"ph1\">&lt;xref:System.Web.SessionState.SessionStateStoreProviderBase.SetAndReleaseItemExclusive%2A&gt;</ph> method.","pos":[177,347],"source":" When the request completes, the lock is released during the call to the <xref:System.Web.SessionState.SessionStateStoreProviderBase.SetAndReleaseItemExclusive%2A> method."}]}]},{"pos":[2842,3681],"content":"If the <xref:System.Web.SessionState.SessionStateModule> object encounters locked session data during the call to either the <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A> or the <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItem%2A> method, it will re-request the session data at half-second intervals until either the lock is released or the amount of time that the session data has been locked exceeds the value of the <xref:System.Web.Configuration.HttpRuntimeSection.ExecutionTimeout%2A> property. If the execution time out is exceeded, the <xref:System.Web.SessionState.SessionStateModule> object will call the <xref:System.Web.SessionState.SessionStateStoreProviderBase.ReleaseItemExclusive%2A> method to free the session-store data and request the session-store data at that time.","nodes":[{"content":"If the <xref:System.Web.SessionState.SessionStateModule> object encounters locked session data during the call to either the <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A> or the <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItem%2A> method, it will re-request the session data at half-second intervals until either the lock is released or the amount of time that the session data has been locked exceeds the value of the <xref:System.Web.Configuration.HttpRuntimeSection.ExecutionTimeout%2A> property. If the execution time out is exceeded, the <xref:System.Web.SessionState.SessionStateModule> object will call the <xref:System.Web.SessionState.SessionStateStoreProviderBase.ReleaseItemExclusive%2A> method to free the session-store data and request the session-store data at that time.","pos":[0,839],"nodes":[{"content":"If the <ph id=\"ph1\">&lt;xref:System.Web.SessionState.SessionStateModule&gt;</ph> object encounters locked session data during the call to either the <ph id=\"ph2\">&lt;xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A&gt;</ph> or the <ph id=\"ph3\">&lt;xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItem%2A&gt;</ph> method, it will re-request the session data at half-second intervals until either the lock is released or the amount of time that the session data has been locked exceeds the value of the <ph id=\"ph4\">&lt;xref:System.Web.Configuration.HttpRuntimeSection.ExecutionTimeout%2A&gt;</ph> property.","pos":[0,553],"source":"If the <xref:System.Web.SessionState.SessionStateModule> object encounters locked session data during the call to either the <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A> or the <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItem%2A> method, it will re-request the session data at half-second intervals until either the lock is released or the amount of time that the session data has been locked exceeds the value of the <xref:System.Web.Configuration.HttpRuntimeSection.ExecutionTimeout%2A> property."},{"content":"If the execution time out is exceeded, the <ph id=\"ph1\">&lt;xref:System.Web.SessionState.SessionStateModule&gt;</ph> object will call the <ph id=\"ph2\">&lt;xref:System.Web.SessionState.SessionStateStoreProviderBase.ReleaseItemExclusive%2A&gt;</ph> method to free the session-store data and request the session-store data at that time.","pos":[554,839],"source":" If the execution time out is exceeded, the <xref:System.Web.SessionState.SessionStateModule> object will call the <xref:System.Web.SessionState.SessionStateStoreProviderBase.ReleaseItemExclusive%2A> method to free the session-store data and request the session-store data at that time."}]}]},{"pos":[3688,4638],"content":"Because locked session-store data might have been freed by a call to the <xref:System.Web.SessionState.SessionStateStoreProviderBase.ReleaseItemExclusive%2A> method on a separate thread before the call to the <xref:System.Web.SessionState.SessionStateStoreProviderBase.SetAndReleaseItemExclusive%2A> method for the current response, an attempt could be made to set and release session-state store data that has already been released and modified by another session. To avoid this situation, the <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItem%2A> and <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A> methods return a lock identifier. This lock identifier must be included with each request to modify locked session-store data. Session-store data is modified only if the lock identifier in the data store matches the lock identifier supplied by the <xref:System.Web.SessionState.SessionStateModule>.","nodes":[{"content":"Because locked session-store data might have been freed by a call to the <xref:System.Web.SessionState.SessionStateStoreProviderBase.ReleaseItemExclusive%2A> method on a separate thread before the call to the <xref:System.Web.SessionState.SessionStateStoreProviderBase.SetAndReleaseItemExclusive%2A> method for the current response, an attempt could be made to set and release session-state store data that has already been released and modified by another session. To avoid this situation, the <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItem%2A> and <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A> methods return a lock identifier. This lock identifier must be included with each request to modify locked session-store data. Session-store data is modified only if the lock identifier in the data store matches the lock identifier supplied by the <xref:System.Web.SessionState.SessionStateModule>.","pos":[0,950],"nodes":[{"content":"Because locked session-store data might have been freed by a call to the <ph id=\"ph1\">&lt;xref:System.Web.SessionState.SessionStateStoreProviderBase.ReleaseItemExclusive%2A&gt;</ph> method on a separate thread before the call to the <ph id=\"ph2\">&lt;xref:System.Web.SessionState.SessionStateStoreProviderBase.SetAndReleaseItemExclusive%2A&gt;</ph> method for the current response, an attempt could be made to set and release session-state store data that has already been released and modified by another session.","pos":[0,465],"source":"Because locked session-store data might have been freed by a call to the <xref:System.Web.SessionState.SessionStateStoreProviderBase.ReleaseItemExclusive%2A> method on a separate thread before the call to the <xref:System.Web.SessionState.SessionStateStoreProviderBase.SetAndReleaseItemExclusive%2A> method for the current response, an attempt could be made to set and release session-state store data that has already been released and modified by another session."},{"content":"To avoid this situation, the <ph id=\"ph1\">&lt;xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItem%2A&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A&gt;</ph> methods return a lock identifier.","pos":[466,685],"source":" To avoid this situation, the <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItem%2A> and <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A> methods return a lock identifier."},{"content":"This lock identifier must be included with each request to modify locked session-store data.","pos":[686,778]},{"content":"Session-store data is modified only if the lock identifier in the data store matches the lock identifier supplied by the <ph id=\"ph1\">&lt;xref:System.Web.SessionState.SessionStateModule&gt;</ph>.","pos":[779,950],"source":" Session-store data is modified only if the lock identifier in the data store matches the lock identifier supplied by the <xref:System.Web.SessionState.SessionStateModule>."}]}]},{"pos":[4647,4682],"content":"Deleting Expired Session Store Data","linkify":"Deleting Expired Session Store Data","nodes":[{"content":"Deleting Expired Session Store Data","pos":[0,35]}]},{"pos":[4686,5171],"content":"When the <xref:System.Web.SessionState.HttpSessionState.Abandon%2A> method is called for a particular session, the data for that session is deleted from the data store using the <xref:System.Web.SessionState.SessionStateStoreProviderBase.RemoveItem%2A> method; otherwise, the data will remain in the session data store to server future requests for the session. It is up to the <xref:System.Web.SessionState.SessionStateStoreProviderBase> implementation to delete expired session data.","nodes":[{"content":"When the <xref:System.Web.SessionState.HttpSessionState.Abandon%2A> method is called for a particular session, the data for that session is deleted from the data store using the <xref:System.Web.SessionState.SessionStateStoreProviderBase.RemoveItem%2A> method; otherwise, the data will remain in the session data store to server future requests for the session. It is up to the <xref:System.Web.SessionState.SessionStateStoreProviderBase> implementation to delete expired session data.","pos":[0,485],"nodes":[{"content":"When the <ph id=\"ph1\">&lt;xref:System.Web.SessionState.HttpSessionState.Abandon%2A&gt;</ph> method is called for a particular session, the data for that session is deleted from the data store using the <ph id=\"ph2\">&lt;xref:System.Web.SessionState.SessionStateStoreProviderBase.RemoveItem%2A&gt;</ph> method; otherwise, the data will remain in the session data store to server future requests for the session.","pos":[0,361],"source":"When the <xref:System.Web.SessionState.HttpSessionState.Abandon%2A> method is called for a particular session, the data for that session is deleted from the data store using the <xref:System.Web.SessionState.SessionStateStoreProviderBase.RemoveItem%2A> method; otherwise, the data will remain in the session data store to server future requests for the session."},{"content":"It is up to the <ph id=\"ph1\">&lt;xref:System.Web.SessionState.SessionStateStoreProviderBase&gt;</ph> implementation to delete expired session data.","pos":[362,485],"source":" It is up to the <xref:System.Web.SessionState.SessionStateStoreProviderBase> implementation to delete expired session data."}]}]}],"pos":[2279,7471],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.Web.SessionState.SessionStateStoreProviderBase\"></xref> class.","nodes":[{"pos":[0,115],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Web.SessionState.SessionStateStoreProviderBase\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.Web.SessionState.SessionStateStoreProviderBase\"></xref> class."}],"pos":[10213,10329],"yaml":true},{"content":"You are not required to implement a constructor for a class that inherits the <xref:System.Web.SessionState.SessionStateStoreProviderBase> abstract class. Initialization values for a <xref:System.Web.SessionState.SessionStateStoreProviderBase> implementation are passed to the <xref:System.Configuration.Provider.ProviderBase.Initialize%2A> method implementation.","nodes":[{"pos":[0,363],"content":"You are not required to implement a constructor for a class that inherits the <xref:System.Web.SessionState.SessionStateStoreProviderBase> abstract class. Initialization values for a <xref:System.Web.SessionState.SessionStateStoreProviderBase> implementation are passed to the <xref:System.Configuration.Provider.ProviderBase.Initialize%2A> method implementation.","nodes":[{"content":"You are not required to implement a constructor for a class that inherits the <xref:System.Web.SessionState.SessionStateStoreProviderBase> abstract class. Initialization values for a <xref:System.Web.SessionState.SessionStateStoreProviderBase> implementation are passed to the <xref:System.Configuration.Provider.ProviderBase.Initialize%2A> method implementation.","pos":[0,363],"nodes":[{"content":"You are not required to implement a constructor for a class that inherits the <ph id=\"ph1\">&lt;xref:System.Web.SessionState.SessionStateStoreProviderBase&gt;</ph> abstract class.","pos":[0,154],"source":"You are not required to implement a constructor for a class that inherits the <xref:System.Web.SessionState.SessionStateStoreProviderBase> abstract class."},{"content":"Initialization values for a <ph id=\"ph1\">&lt;xref:System.Web.SessionState.SessionStateStoreProviderBase&gt;</ph> implementation are passed to the <ph id=\"ph2\">&lt;xref:System.Configuration.Provider.ProviderBase.Initialize%2A&gt;</ph> method implementation.","pos":[155,363],"source":" Initialization values for a <xref:System.Web.SessionState.SessionStateStoreProviderBase> implementation are passed to the <xref:System.Configuration.Provider.ProviderBase.Initialize%2A> method implementation."}]}]}],"pos":[10340,10704],"yaml":true,"extradata":"MT"},{"content":"Creates a new <xref href=\"System.Web.SessionState.SessionStateStoreData\"></xref> object to be used for the current request.","nodes":[{"pos":[0,123],"content":"Creates a new <ph id=\"ph1\">&lt;xref href=\"System.Web.SessionState.SessionStateStoreData\"&gt;&lt;/xref&gt;</ph> object to be used for the current request.","source":"Creates a new <xref href=\"System.Web.SessionState.SessionStateStoreData\"></xref> object to be used for the current request."}],"pos":[12310,12434],"yaml":true},{"content":"The <xref:System.Web.SessionState.SessionStateModule> object calls the <xref:System.Web.SessionState.SessionStateStoreProviderBase.CreateNewStoreData%2A> method at the beginning of a request for an ASP.NET page, during the <xref:System.Web.HttpApplication.AcquireRequestState> event. The <xref:System.Web.SessionState.SessionStateStoreProviderBase.CreateNewStoreData%2A> method is called if:  \n  \n-   the incoming request has no session ID, or  \n  \n-   the incoming request has a session ID, but the session is not found in the data store.  \n  \n The <xref:System.Web.SessionState.SessionStateStoreProviderBase.CreateNewStoreData%2A> method creates a new <xref:System.Web.SessionState.SessionStateStoreData> object with an empty <xref:System.Web.SessionState.ISessionStateItemCollection> object, an <xref:System.Web.HttpStaticObjectsCollection> collection, and the specified `timeout` value. The <xref:System.Web.HttpStaticObjectsCollection> collection for the ASP.NET application can be retrieved using the <xref:System.Web.SessionState.SessionStateUtility.GetSessionStaticObjects%2A> method.","nodes":[{"pos":[0,391],"content":"The <xref:System.Web.SessionState.SessionStateModule> object calls the <xref:System.Web.SessionState.SessionStateStoreProviderBase.CreateNewStoreData%2A> method at the beginning of a request for an ASP.NET page, during the <xref:System.Web.HttpApplication.AcquireRequestState> event. The <xref:System.Web.SessionState.SessionStateStoreProviderBase.CreateNewStoreData%2A> method is called if:","nodes":[{"content":"The <xref:System.Web.SessionState.SessionStateModule> object calls the <xref:System.Web.SessionState.SessionStateStoreProviderBase.CreateNewStoreData%2A> method at the beginning of a request for an ASP.NET page, during the <xref:System.Web.HttpApplication.AcquireRequestState> event. The <xref:System.Web.SessionState.SessionStateStoreProviderBase.CreateNewStoreData%2A> method is called if:","pos":[0,391],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.SessionState.SessionStateModule&gt;</ph> object calls the <ph id=\"ph2\">&lt;xref:System.Web.SessionState.SessionStateStoreProviderBase.CreateNewStoreData%2A&gt;</ph> method at the beginning of a request for an ASP.NET page, during the <ph id=\"ph3\">&lt;xref:System.Web.HttpApplication.AcquireRequestState&gt;</ph> event.","pos":[0,283],"source":"The <xref:System.Web.SessionState.SessionStateModule> object calls the <xref:System.Web.SessionState.SessionStateStoreProviderBase.CreateNewStoreData%2A> method at the beginning of a request for an ASP.NET page, during the <xref:System.Web.HttpApplication.AcquireRequestState> event."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.SessionState.SessionStateStoreProviderBase.CreateNewStoreData%2A&gt;</ph> method is called if:","pos":[284,391],"source":" The <xref:System.Web.SessionState.SessionStateStoreProviderBase.CreateNewStoreData%2A> method is called if:"}]}]},{"pos":[401,443],"content":"the incoming request has no session ID, or","nodes":[{"content":"the incoming request has no session ID, or","pos":[0,42]}]},{"pos":[453,539],"content":"the incoming request has a session ID, but the session is not found in the data store.","nodes":[{"content":"the incoming request has a session ID, but the session is not found in the data store.","pos":[0,86]}]},{"pos":[546,1092],"content":"The <xref:System.Web.SessionState.SessionStateStoreProviderBase.CreateNewStoreData%2A> method creates a new <xref:System.Web.SessionState.SessionStateStoreData> object with an empty <xref:System.Web.SessionState.ISessionStateItemCollection> object, an <xref:System.Web.HttpStaticObjectsCollection> collection, and the specified `timeout` value. The <xref:System.Web.HttpStaticObjectsCollection> collection for the ASP.NET application can be retrieved using the <xref:System.Web.SessionState.SessionStateUtility.GetSessionStaticObjects%2A> method.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.SessionState.SessionStateStoreProviderBase.CreateNewStoreData%2A&gt;</ph> method creates a new <ph id=\"ph2\">&lt;xref:System.Web.SessionState.SessionStateStoreData&gt;</ph> object with an empty <ph id=\"ph3\">&lt;xref:System.Web.SessionState.ISessionStateItemCollection&gt;</ph> object, an <ph id=\"ph4\">&lt;xref:System.Web.HttpStaticObjectsCollection&gt;</ph> collection, and the specified <ph id=\"ph5\">`timeout`</ph> value.","pos":[0,344],"source":"The <xref:System.Web.SessionState.SessionStateStoreProviderBase.CreateNewStoreData%2A> method creates a new <xref:System.Web.SessionState.SessionStateStoreData> object with an empty <xref:System.Web.SessionState.ISessionStateItemCollection> object, an <xref:System.Web.HttpStaticObjectsCollection> collection, and the specified `timeout` value."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.HttpStaticObjectsCollection&gt;</ph> collection for the ASP.NET application can be retrieved using the <ph id=\"ph2\">&lt;xref:System.Web.SessionState.SessionStateUtility.GetSessionStaticObjects%2A&gt;</ph> method.","pos":[345,546],"source":" The <xref:System.Web.HttpStaticObjectsCollection> collection for the ASP.NET application can be retrieved using the <xref:System.Web.SessionState.SessionStateUtility.GetSessionStaticObjects%2A> method."}]}],"pos":[12445,13546],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.Web.HttpContext\"></xref> for the current request.","nodes":[{"pos":[0,72],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Web.HttpContext\"&gt;&lt;/xref&gt;</ph> for the current request.","source":"The <xref href=\"System.Web.HttpContext\"></xref> for the current request."}],"pos":[13988,14061],"yaml":true},{"content":"The session-state <xref href=\"System.Web.SessionState.HttpSessionState.Timeout\"></xref> value for the new <xref href=\"System.Web.SessionState.SessionStateStoreData\"></xref>.","nodes":[{"pos":[0,173],"content":"The session-state <ph id=\"ph1\">&lt;xref href=\"System.Web.SessionState.HttpSessionState.Timeout\"&gt;&lt;/xref&gt;</ph> value for the new <ph id=\"ph2\">&lt;xref href=\"System.Web.SessionState.SessionStateStoreData\"&gt;&lt;/xref&gt;</ph>.","source":"The session-state <xref href=\"System.Web.SessionState.HttpSessionState.Timeout\"></xref> value for the new <xref href=\"System.Web.SessionState.SessionStateStoreData\"></xref>."}],"pos":[14123,14297],"yaml":true},{"content":"A new <xref href=\"System.Web.SessionState.SessionStateStoreData\"></xref> for the current request.","nodes":[{"pos":[0,97],"content":"A new <ph id=\"ph1\">&lt;xref href=\"System.Web.SessionState.SessionStateStoreData\"&gt;&lt;/xref&gt;</ph> for the current request.","source":"A new <xref href=\"System.Web.SessionState.SessionStateStoreData\"></xref> for the current request."}],"pos":[14386,14484],"yaml":true},{"content":"Adds a new session-state item to the data store.","nodes":[{"pos":[0,48],"content":"Adds a new session-state item to the data store.","nodes":[{"content":"Adds a new session-state item to the data store.","pos":[0,48]}]}],"pos":[15910,15959],"yaml":true},{"content":"The <xref:System.Web.SessionState.SessionStateStoreProviderBase.CreateUninitializedItem%2A> method is used with sessions when the `cookieless` and `regenerateExpiredSessionId` attributes are both `true`. Having the `regenerateExpiredSessionId attribute` set to `true` causes the <xref:System.Web.SessionState.SessionStateModule> object to generate a new <xref:System.Web.SessionState.HttpSessionState.SessionID%2A> value when an expired <xref:System.Web.SessionState.HttpSessionState.SessionID%2A> value is encountered.  \n  \n The process of generating a new <xref:System.Web.SessionState.HttpSessionState.SessionID%2A> value requires redirecting the browser to a URL that contains the newly generated <xref:System.Web.SessionState.HttpSessionState.SessionID%2A> value. The <xref:System.Web.SessionState.SessionStateStoreProviderBase.CreateUninitializedItem%2A> method is called during the initial request that contains an expired <xref:System.Web.SessionState.HttpSessionState.SessionID%2A> value. After the <xref:System.Web.SessionState.SessionStateModule> object acquires a new <xref:System.Web.SessionState.HttpSessionState.SessionID%2A> value to replace the expired value, it calls the <xref:System.Web.SessionState.SessionStateStoreProviderBase.CreateUninitializedItem%2A> method to add an uninitialized entry to the session-state data store. The browser is then redirected to the URL containing the newly generated <xref:System.Web.SessionState.HttpSessionState.SessionID%2A> value. The existence of the uninitialized entry in the session data store ensures that the redirected request that includes the newly generated <xref:System.Web.SessionState.HttpSessionState.SessionID%2A> value is not mistaken for a request for an expired session and is, instead, treated as a new session.  \n  \n The uninitialized entry in the session data store is associated with the newly generated <xref:System.Web.SessionState.HttpSessionState.SessionID%2A> value and contains only default values, including an expiration date and time and a value that corresponds to the `actionFlags` parameter of the <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItem%2A> and <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A> methods. The uninitialized entry in the session-state store should include an `actionFlags` value equal to the <xref:System.Web.SessionState.SessionStateActions.InitializeItem> enumeration value. This value is passed to the <xref:System.Web.SessionState.SessionStateModule> object by the <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItem%2A> and <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A> methods, and informs the <xref:System.Web.SessionState.SessionStateModule> object that the current session is a new but uninitialized session. The <xref:System.Web.SessionState.SessionStateModule> object will then initialize the new session and raise the `Session_OnStart` event.  \n  \n For more information about cookieless sessions, see the <xref:System.Web.SessionState.HttpSessionState.IsCookieless%2A> property.","nodes":[{"pos":[0,519],"content":"The <xref:System.Web.SessionState.SessionStateStoreProviderBase.CreateUninitializedItem%2A> method is used with sessions when the `cookieless` and `regenerateExpiredSessionId` attributes are both `true`. Having the `regenerateExpiredSessionId attribute` set to `true` causes the <xref:System.Web.SessionState.SessionStateModule> object to generate a new <xref:System.Web.SessionState.HttpSessionState.SessionID%2A> value when an expired <xref:System.Web.SessionState.HttpSessionState.SessionID%2A> value is encountered.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.SessionState.SessionStateStoreProviderBase.CreateUninitializedItem%2A&gt;</ph> method is used with sessions when the <ph id=\"ph2\">`cookieless`</ph> and <ph id=\"ph3\">`regenerateExpiredSessionId`</ph> attributes are both <ph id=\"ph4\">`true`</ph>.","pos":[0,203],"source":"The <xref:System.Web.SessionState.SessionStateStoreProviderBase.CreateUninitializedItem%2A> method is used with sessions when the `cookieless` and `regenerateExpiredSessionId` attributes are both `true`."},{"content":"Having the <ph id=\"ph1\">`regenerateExpiredSessionId attribute`</ph> set to <ph id=\"ph2\">`true`</ph> causes the <ph id=\"ph3\">&lt;xref:System.Web.SessionState.SessionStateModule&gt;</ph> object to generate a new <ph id=\"ph4\">&lt;xref:System.Web.SessionState.HttpSessionState.SessionID%2A&gt;</ph> value when an expired <ph id=\"ph5\">&lt;xref:System.Web.SessionState.HttpSessionState.SessionID%2A&gt;</ph> value is encountered.","pos":[204,519],"source":" Having the `regenerateExpiredSessionId attribute` set to `true` causes the <xref:System.Web.SessionState.SessionStateModule> object to generate a new <xref:System.Web.SessionState.HttpSessionState.SessionID%2A> value when an expired <xref:System.Web.SessionState.HttpSessionState.SessionID%2A> value is encountered."}]},{"pos":[526,1788],"content":"The process of generating a new <xref:System.Web.SessionState.HttpSessionState.SessionID%2A> value requires redirecting the browser to a URL that contains the newly generated <xref:System.Web.SessionState.HttpSessionState.SessionID%2A> value. The <xref:System.Web.SessionState.SessionStateStoreProviderBase.CreateUninitializedItem%2A> method is called during the initial request that contains an expired <xref:System.Web.SessionState.HttpSessionState.SessionID%2A> value. After the <xref:System.Web.SessionState.SessionStateModule> object acquires a new <xref:System.Web.SessionState.HttpSessionState.SessionID%2A> value to replace the expired value, it calls the <xref:System.Web.SessionState.SessionStateStoreProviderBase.CreateUninitializedItem%2A> method to add an uninitialized entry to the session-state data store. The browser is then redirected to the URL containing the newly generated <xref:System.Web.SessionState.HttpSessionState.SessionID%2A> value. The existence of the uninitialized entry in the session data store ensures that the redirected request that includes the newly generated <xref:System.Web.SessionState.HttpSessionState.SessionID%2A> value is not mistaken for a request for an expired session and is, instead, treated as a new session.","nodes":[{"content":"The process of generating a new <xref:System.Web.SessionState.HttpSessionState.SessionID%2A> value requires redirecting the browser to a URL that contains the newly generated <xref:System.Web.SessionState.HttpSessionState.SessionID%2A> value. The <xref:System.Web.SessionState.SessionStateStoreProviderBase.CreateUninitializedItem%2A> method is called during the initial request that contains an expired <xref:System.Web.SessionState.HttpSessionState.SessionID%2A> value. After the <xref:System.Web.SessionState.SessionStateModule> object acquires a new <xref:System.Web.SessionState.HttpSessionState.SessionID%2A> value to replace the expired value, it calls the <xref:System.Web.SessionState.SessionStateStoreProviderBase.CreateUninitializedItem%2A> method to add an uninitialized entry to the session-state data store. The browser is then redirected to the URL containing the newly generated <xref:System.Web.SessionState.HttpSessionState.SessionID%2A> value. The existence of the uninitialized entry in the session data store ensures that the redirected request that includes the newly generated <xref:System.Web.SessionState.HttpSessionState.SessionID%2A> value is not mistaken for a request for an expired session and is, instead, treated as a new session.","pos":[0,1262],"nodes":[{"content":"The process of generating a new <ph id=\"ph1\">&lt;xref:System.Web.SessionState.HttpSessionState.SessionID%2A&gt;</ph> value requires redirecting the browser to a URL that contains the newly generated <ph id=\"ph2\">&lt;xref:System.Web.SessionState.HttpSessionState.SessionID%2A&gt;</ph> value.","pos":[0,242],"source":"The process of generating a new <xref:System.Web.SessionState.HttpSessionState.SessionID%2A> value requires redirecting the browser to a URL that contains the newly generated <xref:System.Web.SessionState.HttpSessionState.SessionID%2A> value."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.SessionState.SessionStateStoreProviderBase.CreateUninitializedItem%2A&gt;</ph> method is called during the initial request that contains an expired <ph id=\"ph2\">&lt;xref:System.Web.SessionState.HttpSessionState.SessionID%2A&gt;</ph> value.","pos":[243,471],"source":" The <xref:System.Web.SessionState.SessionStateStoreProviderBase.CreateUninitializedItem%2A> method is called during the initial request that contains an expired <xref:System.Web.SessionState.HttpSessionState.SessionID%2A> value."},{"content":"After the <ph id=\"ph1\">&lt;xref:System.Web.SessionState.SessionStateModule&gt;</ph> object acquires a new <ph id=\"ph2\">&lt;xref:System.Web.SessionState.HttpSessionState.SessionID%2A&gt;</ph> value to replace the expired value, it calls the <ph id=\"ph3\">&lt;xref:System.Web.SessionState.SessionStateStoreProviderBase.CreateUninitializedItem%2A&gt;</ph> method to add an uninitialized entry to the session-state data store.","pos":[472,821],"source":" After the <xref:System.Web.SessionState.SessionStateModule> object acquires a new <xref:System.Web.SessionState.HttpSessionState.SessionID%2A> value to replace the expired value, it calls the <xref:System.Web.SessionState.SessionStateStoreProviderBase.CreateUninitializedItem%2A> method to add an uninitialized entry to the session-state data store."},{"content":"The browser is then redirected to the URL containing the newly generated <ph id=\"ph1\">&lt;xref:System.Web.SessionState.HttpSessionState.SessionID%2A&gt;</ph> value.","pos":[822,962],"source":" The browser is then redirected to the URL containing the newly generated <xref:System.Web.SessionState.HttpSessionState.SessionID%2A> value."},{"content":"The existence of the uninitialized entry in the session data store ensures that the redirected request that includes the newly generated <ph id=\"ph1\">&lt;xref:System.Web.SessionState.HttpSessionState.SessionID%2A&gt;</ph> value is not mistaken for a request for an expired session and is, instead, treated as a new session.","pos":[963,1262],"source":" The existence of the uninitialized entry in the session data store ensures that the redirected request that includes the newly generated <xref:System.Web.SessionState.HttpSessionState.SessionID%2A> value is not mistaken for a request for an expired session and is, instead, treated as a new session."}]}]},{"pos":[1795,2971],"content":"The uninitialized entry in the session data store is associated with the newly generated <xref:System.Web.SessionState.HttpSessionState.SessionID%2A> value and contains only default values, including an expiration date and time and a value that corresponds to the `actionFlags` parameter of the <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItem%2A> and <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A> methods. The uninitialized entry in the session-state store should include an `actionFlags` value equal to the <xref:System.Web.SessionState.SessionStateActions.InitializeItem> enumeration value. This value is passed to the <xref:System.Web.SessionState.SessionStateModule> object by the <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItem%2A> and <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A> methods, and informs the <xref:System.Web.SessionState.SessionStateModule> object that the current session is a new but uninitialized session. The <xref:System.Web.SessionState.SessionStateModule> object will then initialize the new session and raise the `Session_OnStart` event.","nodes":[{"content":"The uninitialized entry in the session data store is associated with the newly generated <ph id=\"ph1\">&lt;xref:System.Web.SessionState.HttpSessionState.SessionID%2A&gt;</ph> value and contains only default values, including an expiration date and time and a value that corresponds to the <ph id=\"ph2\">`actionFlags`</ph> parameter of the <ph id=\"ph3\">&lt;xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItem%2A&gt;</ph> and <ph id=\"ph4\">&lt;xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A&gt;</ph> methods.","pos":[0,460],"source":"The uninitialized entry in the session data store is associated with the newly generated <xref:System.Web.SessionState.HttpSessionState.SessionID%2A> value and contains only default values, including an expiration date and time and a value that corresponds to the `actionFlags` parameter of the <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItem%2A> and <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A> methods."},{"content":"The uninitialized entry in the session-state store should include an <ph id=\"ph1\">`actionFlags`</ph> value equal to the <ph id=\"ph2\">&lt;xref:System.Web.SessionState.SessionStateActions.InitializeItem&gt;</ph> enumeration value.","pos":[461,647],"source":" The uninitialized entry in the session-state store should include an `actionFlags` value equal to the <xref:System.Web.SessionState.SessionStateActions.InitializeItem> enumeration value."},{"content":"This value is passed to the <ph id=\"ph1\">&lt;xref:System.Web.SessionState.SessionStateModule&gt;</ph> object by the <ph id=\"ph2\">&lt;xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItem%2A&gt;</ph> and <ph id=\"ph3\">&lt;xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A&gt;</ph> methods, and informs the <ph id=\"ph4\">&lt;xref:System.Web.SessionState.SessionStateModule&gt;</ph> object that the current session is a new but uninitialized session.","pos":[648,1039],"source":" This value is passed to the <xref:System.Web.SessionState.SessionStateModule> object by the <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItem%2A> and <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A> methods, and informs the <xref:System.Web.SessionState.SessionStateModule> object that the current session is a new but uninitialized session."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.SessionState.SessionStateModule&gt;</ph> object will then initialize the new session and raise the <ph id=\"ph2\">`Session_OnStart`</ph> event.","pos":[1040,1176],"source":" The <xref:System.Web.SessionState.SessionStateModule> object will then initialize the new session and raise the `Session_OnStart` event."}]},{"pos":[2978,3107],"content":"For more information about cookieless sessions, see the <xref:System.Web.SessionState.HttpSessionState.IsCookieless%2A> property.","nodes":[{"content":"For more information about cookieless sessions, see the <ph id=\"ph1\">&lt;xref:System.Web.SessionState.HttpSessionState.IsCookieless%2A&gt;</ph> property.","pos":[0,129],"source":"For more information about cookieless sessions, see the <xref:System.Web.SessionState.HttpSessionState.IsCookieless%2A> property."}]}],"pos":[15970,19086],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.Web.HttpContext\"></xref> for the current request.","nodes":[{"pos":[0,72],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Web.HttpContext\"&gt;&lt;/xref&gt;</ph> for the current request.","source":"The <xref href=\"System.Web.HttpContext\"></xref> for the current request."}],"pos":[19503,19576],"yaml":true},{"content":"The <xref href=\"System.Web.SessionState.HttpSessionState.SessionID\"></xref> for the current request.","nodes":[{"pos":[0,100],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Web.SessionState.HttpSessionState.SessionID\"&gt;&lt;/xref&gt;</ph> for the current request.","source":"The <xref href=\"System.Web.SessionState.HttpSessionState.SessionID\"></xref> for the current request."}],"pos":[19634,19735],"yaml":true},{"content":"The session <xref href=\"System.Web.SessionState.HttpSessionState.Timeout\"></xref> for the current request.","nodes":[{"pos":[0,106],"content":"The session <ph id=\"ph1\">&lt;xref href=\"System.Web.SessionState.HttpSessionState.Timeout\"&gt;&lt;/xref&gt;</ph> for the current request.","source":"The session <xref href=\"System.Web.SessionState.HttpSessionState.Timeout\"></xref> for the current request."}],"pos":[19797,19904],"yaml":true},{"content":"Releases all resources used by the <xref href=\"System.Web.SessionState.SessionStateStoreProviderBase\"></xref> implementation.","nodes":[{"pos":[0,125],"content":"Releases all resources used by the <ph id=\"ph1\">&lt;xref href=\"System.Web.SessionState.SessionStateStoreProviderBase\"&gt;&lt;/xref&gt;</ph> implementation.","source":"Releases all resources used by the <xref href=\"System.Web.SessionState.SessionStateStoreProviderBase\"></xref> implementation."}],"pos":[21008,21134],"yaml":true},{"content":"The <xref:System.Web.SessionState.SessionStateStoreProviderBase.Dispose%2A?displayProperty=fullName> method is called when the <xref:System.Web.SessionState.SessionStateModule.Dispose%2A?displayProperty=fullName> method executes at the closing of the application domain. Classes that inherit the <xref:System.Web.SessionState.SessionStateStoreProviderBase> class can use this method to free any resources no longer in use.","nodes":[{"pos":[0,422],"content":"The <xref:System.Web.SessionState.SessionStateStoreProviderBase.Dispose%2A?displayProperty=fullName> method is called when the <xref:System.Web.SessionState.SessionStateModule.Dispose%2A?displayProperty=fullName> method executes at the closing of the application domain. Classes that inherit the <xref:System.Web.SessionState.SessionStateStoreProviderBase> class can use this method to free any resources no longer in use.","nodes":[{"content":"The <xref:System.Web.SessionState.SessionStateStoreProviderBase.Dispose%2A?displayProperty=fullName> method is called when the <xref:System.Web.SessionState.SessionStateModule.Dispose%2A?displayProperty=fullName> method executes at the closing of the application domain. Classes that inherit the <xref:System.Web.SessionState.SessionStateStoreProviderBase> class can use this method to free any resources no longer in use.","pos":[0,422],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.SessionState.SessionStateStoreProviderBase.Dispose%2A?displayProperty=fullName&gt;</ph> method is called when the <ph id=\"ph2\">&lt;xref:System.Web.SessionState.SessionStateModule.Dispose%2A?displayProperty=fullName&gt;</ph> method executes at the closing of the application domain.","pos":[0,270],"source":"The <xref:System.Web.SessionState.SessionStateStoreProviderBase.Dispose%2A?displayProperty=fullName> method is called when the <xref:System.Web.SessionState.SessionStateModule.Dispose%2A?displayProperty=fullName> method executes at the closing of the application domain."},{"content":"Classes that inherit the <ph id=\"ph1\">&lt;xref:System.Web.SessionState.SessionStateStoreProviderBase&gt;</ph> class can use this method to free any resources no longer in use.","pos":[271,422],"source":" Classes that inherit the <xref:System.Web.SessionState.SessionStateStoreProviderBase> class can use this method to free any resources no longer in use."}]}]}],"pos":[21145,21568],"yaml":true,"extradata":"MT"},{"content":"Called by the <xref href=\"System.Web.SessionState.SessionStateModule\"></xref> object at the end of a request.","nodes":[{"pos":[0,109],"content":"Called by the <ph id=\"ph1\">&lt;xref href=\"System.Web.SessionState.SessionStateModule\"&gt;&lt;/xref&gt;</ph> object at the end of a request.","source":"Called by the <xref href=\"System.Web.SessionState.SessionStateModule\"></xref> object at the end of a request."}],"pos":[23057,23167],"yaml":true},{"content":"The <xref:System.Web.SessionState.SessionStateModule> object calls the <xref:System.Web.SessionState.SessionStateStoreProviderBase.EndRequest%2A> method at the end of a request for an ASP.NET page, during the <xref:System.Web.HttpApplication.EndRequest> event. You can use the <xref:System.Web.SessionState.SessionStateStoreProviderBase.EndRequest%2A> method to perform any per-request cleanup required by your session-state store provider.","nodes":[{"pos":[0,440],"content":"The <xref:System.Web.SessionState.SessionStateModule> object calls the <xref:System.Web.SessionState.SessionStateStoreProviderBase.EndRequest%2A> method at the end of a request for an ASP.NET page, during the <xref:System.Web.HttpApplication.EndRequest> event. You can use the <xref:System.Web.SessionState.SessionStateStoreProviderBase.EndRequest%2A> method to perform any per-request cleanup required by your session-state store provider.","nodes":[{"content":"The <xref:System.Web.SessionState.SessionStateModule> object calls the <xref:System.Web.SessionState.SessionStateStoreProviderBase.EndRequest%2A> method at the end of a request for an ASP.NET page, during the <xref:System.Web.HttpApplication.EndRequest> event. You can use the <xref:System.Web.SessionState.SessionStateStoreProviderBase.EndRequest%2A> method to perform any per-request cleanup required by your session-state store provider.","pos":[0,440],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.SessionState.SessionStateModule&gt;</ph> object calls the <ph id=\"ph2\">&lt;xref:System.Web.SessionState.SessionStateStoreProviderBase.EndRequest%2A&gt;</ph> method at the end of a request for an ASP.NET page, during the <ph id=\"ph3\">&lt;xref:System.Web.HttpApplication.EndRequest&gt;</ph> event.","pos":[0,260],"source":"The <xref:System.Web.SessionState.SessionStateModule> object calls the <xref:System.Web.SessionState.SessionStateStoreProviderBase.EndRequest%2A> method at the end of a request for an ASP.NET page, during the <xref:System.Web.HttpApplication.EndRequest> event."},{"content":"You can use the <ph id=\"ph1\">&lt;xref:System.Web.SessionState.SessionStateStoreProviderBase.EndRequest%2A&gt;</ph> method to perform any per-request cleanup required by your session-state store provider.","pos":[261,440],"source":" You can use the <xref:System.Web.SessionState.SessionStateStoreProviderBase.EndRequest%2A> method to perform any per-request cleanup required by your session-state store provider."}]}]}],"pos":[23178,23619],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.Web.HttpContext\"></xref> for the current request.","nodes":[{"pos":[0,72],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Web.HttpContext\"&gt;&lt;/xref&gt;</ph> for the current request.","source":"The <xref href=\"System.Web.HttpContext\"></xref> for the current request."}],"pos":[23999,24072],"yaml":true},{"content":"Returns read-only session-state data from the session data store.","nodes":[{"pos":[0,65],"content":"Returns read-only session-state data from the session data store.","nodes":[{"content":"Returns read-only session-state data from the session data store.","pos":[0,65]}]}],"pos":[25757,25823],"yaml":true},{"content":"The <xref:System.Web.SessionState.SessionStateModule> object calls the <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItem%2A> method at the beginning of a request, during the <xref:System.Web.HttpApplication.AcquireRequestState> event, when the <xref:System.Web.Configuration.PagesSection.EnableSessionState%2A> attribute is set to `ReadOnly`. If the <xref:System.Web.Configuration.PagesSection.EnableSessionState%2A> attribute is set to `true`, the <xref:System.Web.SessionState.SessionStateModule> object instead calls the <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A> method.  \n  \n The <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItem%2A> method returns a <xref:System.Web.SessionState.SessionStateStoreData> object populated with session information from the data store and updates the expiration date of the session data. If no session-item data is found at the data store, the <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItem%2A> method sets the `locked` `out` parameter to `false` and returns `null`. This causes the <xref:System.Web.SessionState.SessionStateModule> object to call the <xref:System.Web.SessionState.SessionStateStoreProviderBase.CreateNewStoreData%2A> method to create a new session item in the data store.  \n  \n If session-item data is found at the data store but the data is locked, the <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItem%2A> method sets the `locked` `out` parameter to `true`, sets the `lockAge` `out` parameter to the current date and time minus the date and time when the item was locked (which is retrieved from the data store), sets the `lockId` `out` parameter to the lock identifier retrieved from the data store, and returns `null`. This causes the <xref:System.Web.SessionState.SessionStateModule> object to call the <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItem%2A> method again after a half-second interval to attempt to retrieve the session-item information.  \n  \n If the value that the `lockAge` `out` parameter is set to exceed the <xref:System.Web.Configuration.HttpRuntimeSection.ExecutionTimeout%2A> value, then the <xref:System.Web.SessionState.SessionStateModule> object calls the <xref:System.Web.SessionState.SessionStateStoreProviderBase.ReleaseItemExclusive%2A> method to clear the lock on the session-item data, and then calls the <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItem%2A> method again.  \n  \n The `actionFlags` parameter is used when both the `cookieless` and `regenerateExpiredSessionId` attributes are set to `true`. An `actionFlags` value set to <xref:System.Web.SessionState.SessionStateActions.InitializeItem> indicates that the entry in the session data store is a new session that requires initialization. Uninitialized entries in the session data store are created by a call to the <xref:System.Web.SessionState.SessionStateStoreProviderBase.CreateUninitializedItem%2A> method. If the item from the session data store is not an uninitialized item, the `actionFlags` parameter will be set to zero.  \n  \n Custom session-state store implementers that support cookieless sessions should set the `actionFlags` `out` parameter to the value returned from the session data store for the current item. If the `actionFlags` parameter value for the requested session-store item equals the <xref:System.Web.SessionState.SessionStateActions.InitializeItem> enumeration value, then the <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItem%2A> method should set the value in the data store to zero after setting the `actionFlags` `out` parameter.","nodes":[{"pos":[0,630],"content":"The <xref:System.Web.SessionState.SessionStateModule> object calls the <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItem%2A> method at the beginning of a request, during the <xref:System.Web.HttpApplication.AcquireRequestState> event, when the <xref:System.Web.Configuration.PagesSection.EnableSessionState%2A> attribute is set to `ReadOnly`. If the <xref:System.Web.Configuration.PagesSection.EnableSessionState%2A> attribute is set to `true`, the <xref:System.Web.SessionState.SessionStateModule> object instead calls the <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A> method.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.SessionState.SessionStateModule&gt;</ph> object calls the <ph id=\"ph2\">&lt;xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItem%2A&gt;</ph> method at the beginning of a request, during the <ph id=\"ph3\">&lt;xref:System.Web.HttpApplication.AcquireRequestState&gt;</ph> event, when the <ph id=\"ph4\">&lt;xref:System.Web.Configuration.PagesSection.EnableSessionState%2A&gt;</ph> attribute is set to <ph id=\"ph5\">`ReadOnly`</ph>.","pos":[0,360],"source":"The <xref:System.Web.SessionState.SessionStateModule> object calls the <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItem%2A> method at the beginning of a request, during the <xref:System.Web.HttpApplication.AcquireRequestState> event, when the <xref:System.Web.Configuration.PagesSection.EnableSessionState%2A> attribute is set to `ReadOnly`."},{"content":"If the <ph id=\"ph1\">&lt;xref:System.Web.Configuration.PagesSection.EnableSessionState%2A&gt;</ph> attribute is set to <ph id=\"ph2\">`true`</ph>, the <ph id=\"ph3\">&lt;xref:System.Web.SessionState.SessionStateModule&gt;</ph> object instead calls the <ph id=\"ph4\">&lt;xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A&gt;</ph> method.","pos":[361,630],"source":" If the <xref:System.Web.Configuration.PagesSection.EnableSessionState%2A> attribute is set to `true`, the <xref:System.Web.SessionState.SessionStateModule> object instead calls the <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A> method."}]},{"pos":[637,1320],"content":"The <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItem%2A> method returns a <xref:System.Web.SessionState.SessionStateStoreData> object populated with session information from the data store and updates the expiration date of the session data. If no session-item data is found at the data store, the <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItem%2A> method sets the `locked` `out` parameter to `false` and returns `null`. This causes the <xref:System.Web.SessionState.SessionStateModule> object to call the <xref:System.Web.SessionState.SessionStateStoreProviderBase.CreateNewStoreData%2A> method to create a new session item in the data store.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItem%2A&gt;</ph> method returns a <ph id=\"ph2\">&lt;xref:System.Web.SessionState.SessionStateStoreData&gt;</ph> object populated with session information from the data store and updates the expiration date of the session data.","pos":[0,260],"source":"The <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItem%2A> method returns a <xref:System.Web.SessionState.SessionStateStoreData> object populated with session information from the data store and updates the expiration date of the session data."},{"content":"If no session-item data is found at the data store, the <ph id=\"ph1\">&lt;xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItem%2A&gt;</ph> method sets the <ph id=\"ph2\">`locked`</ph> <ph id=\"ph3\">`out`</ph> parameter to <ph id=\"ph4\">`false`</ph> and returns <ph id=\"ph5\">`null`</ph>.","pos":[261,460],"source":" If no session-item data is found at the data store, the <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItem%2A> method sets the `locked` `out` parameter to `false` and returns `null`."},{"content":"This causes the <ph id=\"ph1\">&lt;xref:System.Web.SessionState.SessionStateModule&gt;</ph> object to call the <ph id=\"ph2\">&lt;xref:System.Web.SessionState.SessionStateStoreProviderBase.CreateNewStoreData%2A&gt;</ph> method to create a new session item in the data store.","pos":[461,683],"source":" This causes the <xref:System.Web.SessionState.SessionStateModule> object to call the <xref:System.Web.SessionState.SessionStateStoreProviderBase.CreateNewStoreData%2A> method to create a new session item in the data store."}]},{"pos":[1327,2041],"content":"If session-item data is found at the data store but the data is locked, the <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItem%2A> method sets the `locked` `out` parameter to `true`, sets the `lockAge` `out` parameter to the current date and time minus the date and time when the item was locked (which is retrieved from the data store), sets the `lockId` `out` parameter to the lock identifier retrieved from the data store, and returns `null`. This causes the <xref:System.Web.SessionState.SessionStateModule> object to call the <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItem%2A> method again after a half-second interval to attempt to retrieve the session-item information.","nodes":[{"content":"If session-item data is found at the data store but the data is locked, the <ph id=\"ph1\">&lt;xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItem%2A&gt;</ph> method sets the <ph id=\"ph2\">`locked`</ph> <ph id=\"ph3\">`out`</ph> parameter to <ph id=\"ph4\">`true`</ph>, sets the <ph id=\"ph5\">`lockAge`</ph> <ph id=\"ph6\">`out`</ph> parameter to the current date and time minus the date and time when the item was locked (which is retrieved from the data store), sets the <ph id=\"ph7\">`lockId`</ph> <ph id=\"ph8\">`out`</ph> parameter to the lock identifier retrieved from the data store, and returns <ph id=\"ph9\">`null`</ph>.","pos":[0,462],"source":"If session-item data is found at the data store but the data is locked, the <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItem%2A> method sets the `locked` `out` parameter to `true`, sets the `lockAge` `out` parameter to the current date and time minus the date and time when the item was locked (which is retrieved from the data store), sets the `lockId` `out` parameter to the lock identifier retrieved from the data store, and returns `null`."},{"content":"This causes the <ph id=\"ph1\">&lt;xref:System.Web.SessionState.SessionStateModule&gt;</ph> object to call the <ph id=\"ph2\">&lt;xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItem%2A&gt;</ph> method again after a half-second interval to attempt to retrieve the session-item information.","pos":[463,714],"source":" This causes the <xref:System.Web.SessionState.SessionStateModule> object to call the <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItem%2A> method again after a half-second interval to attempt to retrieve the session-item information."}]},{"pos":[2048,2511],"content":"If the value that the <ph id=\"ph1\">`lockAge`</ph> <ph id=\"ph2\">`out`</ph> parameter is set to exceed the <ph id=\"ph3\">&lt;xref:System.Web.Configuration.HttpRuntimeSection.ExecutionTimeout%2A&gt;</ph> value, then the <ph id=\"ph4\">&lt;xref:System.Web.SessionState.SessionStateModule&gt;</ph> object calls the <ph id=\"ph5\">&lt;xref:System.Web.SessionState.SessionStateStoreProviderBase.ReleaseItemExclusive%2A&gt;</ph> method to clear the lock on the session-item data, and then calls the <ph id=\"ph6\">&lt;xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItem%2A&gt;</ph> method again.","source":"If the value that the `lockAge` `out` parameter is set to exceed the <xref:System.Web.Configuration.HttpRuntimeSection.ExecutionTimeout%2A> value, then the <xref:System.Web.SessionState.SessionStateModule> object calls the <xref:System.Web.SessionState.SessionStateStoreProviderBase.ReleaseItemExclusive%2A> method to clear the lock on the session-item data, and then calls the <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItem%2A> method again."},{"pos":[2518,3129],"content":"The `actionFlags` parameter is used when both the `cookieless` and `regenerateExpiredSessionId` attributes are set to `true`. An `actionFlags` value set to <xref:System.Web.SessionState.SessionStateActions.InitializeItem> indicates that the entry in the session data store is a new session that requires initialization. Uninitialized entries in the session data store are created by a call to the <xref:System.Web.SessionState.SessionStateStoreProviderBase.CreateUninitializedItem%2A> method. If the item from the session data store is not an uninitialized item, the `actionFlags` parameter will be set to zero.","nodes":[{"content":"The <ph id=\"ph1\">`actionFlags`</ph> parameter is used when both the <ph id=\"ph2\">`cookieless`</ph> and <ph id=\"ph3\">`regenerateExpiredSessionId`</ph> attributes are set to <ph id=\"ph4\">`true`</ph>.","pos":[0,125],"source":"The `actionFlags` parameter is used when both the `cookieless` and `regenerateExpiredSessionId` attributes are set to `true`."},{"content":"An <ph id=\"ph1\">`actionFlags`</ph> value set to <ph id=\"ph2\">&lt;xref:System.Web.SessionState.SessionStateActions.InitializeItem&gt;</ph> indicates that the entry in the session data store is a new session that requires initialization.","pos":[126,319],"source":" An `actionFlags` value set to <xref:System.Web.SessionState.SessionStateActions.InitializeItem> indicates that the entry in the session data store is a new session that requires initialization."},{"content":"Uninitialized entries in the session data store are created by a call to the <ph id=\"ph1\">&lt;xref:System.Web.SessionState.SessionStateStoreProviderBase.CreateUninitializedItem%2A&gt;</ph> method.","pos":[320,492],"source":" Uninitialized entries in the session data store are created by a call to the <xref:System.Web.SessionState.SessionStateStoreProviderBase.CreateUninitializedItem%2A> method."},{"content":"If the item from the session data store is not an uninitialized item, the <ph id=\"ph1\">`actionFlags`</ph> parameter will be set to zero.","pos":[493,611],"source":" If the item from the session data store is not an uninitialized item, the `actionFlags` parameter will be set to zero."}]},{"pos":[3136,3679],"content":"Custom session-state store implementers that support cookieless sessions should set the `actionFlags` `out` parameter to the value returned from the session data store for the current item. If the `actionFlags` parameter value for the requested session-store item equals the <xref:System.Web.SessionState.SessionStateActions.InitializeItem> enumeration value, then the <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItem%2A> method should set the value in the data store to zero after setting the `actionFlags` `out` parameter.","nodes":[{"content":"Custom session-state store implementers that support cookieless sessions should set the <ph id=\"ph1\">`actionFlags`</ph> <ph id=\"ph2\">`out`</ph> parameter to the value returned from the session data store for the current item.","pos":[0,189],"source":"Custom session-state store implementers that support cookieless sessions should set the `actionFlags` `out` parameter to the value returned from the session data store for the current item."},{"content":"If the <ph id=\"ph1\">`actionFlags`</ph> parameter value for the requested session-store item equals the <ph id=\"ph2\">&lt;xref:System.Web.SessionState.SessionStateActions.InitializeItem&gt;</ph> enumeration value, then the <ph id=\"ph3\">&lt;xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItem%2A&gt;</ph> method should set the value in the data store to zero after setting the <ph id=\"ph4\">`actionFlags`</ph> <ph id=\"ph5\">`out`</ph> parameter.","pos":[190,543],"source":" If the `actionFlags` parameter value for the requested session-store item equals the <xref:System.Web.SessionState.SessionStateActions.InitializeItem> enumeration value, then the <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItem%2A> method should set the value in the data store to zero after setting the `actionFlags` `out` parameter."}]}],"pos":[25834,29526],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.Web.HttpContext\"></xref> for the current request.","nodes":[{"pos":[0,72],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Web.HttpContext\"&gt;&lt;/xref&gt;</ph> for the current request.","source":"The <xref href=\"System.Web.HttpContext\"></xref> for the current request."}],"pos":[30070,30143],"yaml":true},{"content":"The <xref href=\"System.Web.SessionState.HttpSessionState.SessionID\"></xref> for the current request.","nodes":[{"pos":[0,100],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Web.SessionState.HttpSessionState.SessionID\"&gt;&lt;/xref&gt;</ph> for the current request.","source":"The <xref href=\"System.Web.SessionState.HttpSessionState.SessionID\"></xref> for the current request."}],"pos":[30201,30302],"yaml":true},{"content":"When this method returns, contains a Boolean value that is set to `true` if the requested session item is locked at the session data store; otherwise, `false`.","nodes":[{"pos":[0,159],"content":"When this method returns, contains a Boolean value that is set to <ph id=\"ph1\">`true`</ph> if the requested session item is locked at the session data store; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"When this method returns, contains a Boolean value that is set to `true` if the requested session item is locked at the session data store; otherwise, `false`."}],"pos":[30365,30525],"yaml":true},{"content":"When this method returns, contains a <xref href=\"System.TimeSpan\"></xref> object that is set to the amount of time that an item in the session data store has been locked.","nodes":[{"pos":[0,170],"content":"When this method returns, contains a <ph id=\"ph1\">&lt;xref href=\"System.TimeSpan\"&gt;&lt;/xref&gt;</ph> object that is set to the amount of time that an item in the session data store has been locked.","source":"When this method returns, contains a <xref href=\"System.TimeSpan\"></xref> object that is set to the amount of time that an item in the session data store has been locked."}],"pos":[30590,30761],"yaml":true},{"content":"When this method returns, contains an object that is set to the lock identifier for the current request. For details on the lock identifier, see \"Locking Session-Store Data\" in the <xref href=\"System.Web.SessionState.SessionStateStoreProviderBase\"></xref> class summary.","nodes":[{"pos":[0,270],"content":"When this method returns, contains an object that is set to the lock identifier for the current request. For details on the lock identifier, see \"Locking Session-Store Data\" in the <xref href=\"System.Web.SessionState.SessionStateStoreProviderBase\"></xref> class summary.","nodes":[{"content":"When this method returns, contains an object that is set to the lock identifier for the current request.","pos":[0,104]},{"content":"For details on the lock identifier, see \"Locking Session-Store Data\" in the <ph id=\"ph1\">&lt;xref href=\"System.Web.SessionState.SessionStateStoreProviderBase\"&gt;&lt;/xref&gt;</ph> class summary.","pos":[105,270],"source":" For details on the lock identifier, see \"Locking Session-Store Data\" in the <xref href=\"System.Web.SessionState.SessionStateStoreProviderBase\"></xref> class summary."}]}],"pos":[30823,31094],"yaml":true},{"content":"When this method returns, contains one of the <xref href=\"System.Web.SessionState.SessionStateActions\"></xref> values, indicating whether the current session is an uninitialized, cookieless session.","nodes":[{"pos":[0,198],"content":"When this method returns, contains one of the <ph id=\"ph1\">&lt;xref href=\"System.Web.SessionState.SessionStateActions\"&gt;&lt;/xref&gt;</ph> values, indicating whether the current session is an uninitialized, cookieless session.","source":"When this method returns, contains one of the <xref href=\"System.Web.SessionState.SessionStateActions\"></xref> values, indicating whether the current session is an uninitialized, cookieless session."}],"pos":[31187,31386],"yaml":true},{"content":"A <xref href=\"System.Web.SessionState.SessionStateStoreData\"></xref> populated with session values and information from the session data store.","nodes":[{"pos":[0,143],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Web.SessionState.SessionStateStoreData\"&gt;&lt;/xref&gt;</ph> populated with session values and information from the session data store.","source":"A <xref href=\"System.Web.SessionState.SessionStateStoreData\"></xref> populated with session values and information from the session data store."}],"pos":[31475,31619],"yaml":true},{"content":"Returns read-only session-state data from the session data store.","nodes":[{"pos":[0,65],"content":"Returns read-only session-state data from the session data store.","nodes":[{"content":"Returns read-only session-state data from the session data store.","pos":[0,65]}]}],"pos":[33355,33421],"yaml":true},{"content":"The <xref:System.Web.SessionState.SessionStateModule> object calls the <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A> method at the beginning of a request, during the <xref:System.Web.HttpApplication.AcquireRequestState> event, when the <xref:System.Web.Configuration.PagesSection.EnableSessionState%2A> attribute is set to `true`, which is the default. If the <xref:System.Web.Configuration.PagesSection.EnableSessionState%2A> attribute is set to `ReadOnly`, the <xref:System.Web.SessionState.SessionStateModule> object instead calls the <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItem%2A> method.  \n  \n The <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A> method returns a <xref:System.Web.SessionState.SessionStateStoreData> object populated with session information from the data store, updates the expiration date of the stored data, and locks the session-item data at the data store for the duration of the request. If no session-item data is found at the data store, the <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A> method sets the `locked` `out` parameter to `false` and returns `null`. This causes the <xref:System.Web.SessionState.SessionStateModule> object to call the <xref:System.Web.SessionState.SessionStateStoreProviderBase.CreateNewStoreData%2A> method to create a new session item in the data store. If session-item data is found at the data store but the data is locked, the <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A> method sets the `locked` `out` parameter to `true`, sets the `lockAge` `out` parameter to the current date and time minus the date and time when the item was locked (which is retrieved from the data store), sets the `lockId` `out` parameter to the lock identifier retrieved from the data store, and returns `null`. This causes the <xref:System.Web.SessionState.SessionStateModule> object to call the <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A> method again after a half-second interval to attempt to retrieve the session-item information and obtain a lock on the data. If the value that the `lockAge` `out` parameter is set to exceeds the <xref:System.Web.Configuration.HttpRuntimeSection.ExecutionTimeout%2A> value, then the <xref:System.Web.SessionState.SessionStateModule> calls the <xref:System.Web.SessionState.SessionStateStoreProviderBase.ReleaseItemExclusive%2A> method to clear the lock on the session-item data, and then calls the <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A> method again.  \n  \n The `actionFlags` parameter is used when the `cookieless` and `regenerateExpiredSessionId` attributes are both set to `true`. An `actionFlags` value set to <xref:System.Web.SessionState.SessionStateActions.InitializeItem> indicates that the entry in the session data store is a new session that requires initialization. Uninitialized entries in the session data store are created by a call to the <xref:System.Web.SessionState.SessionStateStoreProviderBase.CreateUninitializedItem%2A> method. If the item from the session data store is not an uninitialized item, the `actionFlags` parameter will be set to zero.  \n  \n Custom session-state store implementers that support cookieless sessions should set the `actionFlags` `out` parameter to the value returned from the session data store for the current item. If the `actionFlags` parameter value for the requested session-store item equals the <xref:System.Web.SessionState.SessionStateActions.InitializeItem> enumeration value, then the <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A> method should set the value in the data store to zero after setting the `actionFlags` `out` parameter.","nodes":[{"pos":[0,652],"content":"The <xref:System.Web.SessionState.SessionStateModule> object calls the <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A> method at the beginning of a request, during the <xref:System.Web.HttpApplication.AcquireRequestState> event, when the <xref:System.Web.Configuration.PagesSection.EnableSessionState%2A> attribute is set to `true`, which is the default. If the <xref:System.Web.Configuration.PagesSection.EnableSessionState%2A> attribute is set to `ReadOnly`, the <xref:System.Web.SessionState.SessionStateModule> object instead calls the <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItem%2A> method.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.SessionState.SessionStateModule&gt;</ph> object calls the <ph id=\"ph2\">&lt;xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A&gt;</ph> method at the beginning of a request, during the <ph id=\"ph3\">&lt;xref:System.Web.HttpApplication.AcquireRequestState&gt;</ph> event, when the <ph id=\"ph4\">&lt;xref:System.Web.Configuration.PagesSection.EnableSessionState%2A&gt;</ph> attribute is set to <ph id=\"ph5\">`true`</ph>, which is the default.","pos":[0,387],"source":"The <xref:System.Web.SessionState.SessionStateModule> object calls the <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A> method at the beginning of a request, during the <xref:System.Web.HttpApplication.AcquireRequestState> event, when the <xref:System.Web.Configuration.PagesSection.EnableSessionState%2A> attribute is set to `true`, which is the default."},{"content":"If the <ph id=\"ph1\">&lt;xref:System.Web.Configuration.PagesSection.EnableSessionState%2A&gt;</ph> attribute is set to <ph id=\"ph2\">`ReadOnly`</ph>, the <ph id=\"ph3\">&lt;xref:System.Web.SessionState.SessionStateModule&gt;</ph> object instead calls the <ph id=\"ph4\">&lt;xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItem%2A&gt;</ph> method.","pos":[388,652],"source":" If the <xref:System.Web.Configuration.PagesSection.EnableSessionState%2A> attribute is set to `ReadOnly`, the <xref:System.Web.SessionState.SessionStateModule> object instead calls the <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItem%2A> method."}]},{"pos":[659,2669],"content":"The <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A> method returns a <xref:System.Web.SessionState.SessionStateStoreData> object populated with session information from the data store, updates the expiration date of the stored data, and locks the session-item data at the data store for the duration of the request. If no session-item data is found at the data store, the <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A> method sets the `locked` `out` parameter to `false` and returns `null`. This causes the <xref:System.Web.SessionState.SessionStateModule> object to call the <xref:System.Web.SessionState.SessionStateStoreProviderBase.CreateNewStoreData%2A> method to create a new session item in the data store. If session-item data is found at the data store but the data is locked, the <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A> method sets the `locked` `out` parameter to `true`, sets the `lockAge` `out` parameter to the current date and time minus the date and time when the item was locked (which is retrieved from the data store), sets the `lockId` `out` parameter to the lock identifier retrieved from the data store, and returns `null`. This causes the <xref:System.Web.SessionState.SessionStateModule> object to call the <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A> method again after a half-second interval to attempt to retrieve the session-item information and obtain a lock on the data. If the value that the `lockAge` `out` parameter is set to exceeds the <xref:System.Web.Configuration.HttpRuntimeSection.ExecutionTimeout%2A> value, then the <xref:System.Web.SessionState.SessionStateModule> calls the <xref:System.Web.SessionState.SessionStateStoreProviderBase.ReleaseItemExclusive%2A> method to clear the lock on the session-item data, and then calls the <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A> method again.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A&gt;</ph> method returns a <ph id=\"ph2\">&lt;xref:System.Web.SessionState.SessionStateStoreData&gt;</ph> object populated with session information from the data store, updates the expiration date of the stored data, and locks the session-item data at the data store for the duration of the request.","pos":[0,348],"source":"The <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A> method returns a <xref:System.Web.SessionState.SessionStateStoreData> object populated with session information from the data store, updates the expiration date of the stored data, and locks the session-item data at the data store for the duration of the request."},{"content":"If no session-item data is found at the data store, the <ph id=\"ph1\">&lt;xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A&gt;</ph> method sets the <ph id=\"ph2\">`locked`</ph> <ph id=\"ph3\">`out`</ph> parameter to <ph id=\"ph4\">`false`</ph> and returns <ph id=\"ph5\">`null`</ph>.","pos":[349,557],"source":" If no session-item data is found at the data store, the <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A> method sets the `locked` `out` parameter to `false` and returns `null`."},{"content":"This causes the <ph id=\"ph1\">&lt;xref:System.Web.SessionState.SessionStateModule&gt;</ph> object to call the <ph id=\"ph2\">&lt;xref:System.Web.SessionState.SessionStateStoreProviderBase.CreateNewStoreData%2A&gt;</ph> method to create a new session item in the data store.","pos":[558,780],"source":" This causes the <xref:System.Web.SessionState.SessionStateModule> object to call the <xref:System.Web.SessionState.SessionStateStoreProviderBase.CreateNewStoreData%2A> method to create a new session item in the data store."},{"content":"If session-item data is found at the data store but the data is locked, the <ph id=\"ph1\">&lt;xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A&gt;</ph> method sets the <ph id=\"ph2\">`locked`</ph> <ph id=\"ph3\">`out`</ph> parameter to <ph id=\"ph4\">`true`</ph>, sets the <ph id=\"ph5\">`lockAge`</ph> <ph id=\"ph6\">`out`</ph> parameter to the current date and time minus the date and time when the item was locked (which is retrieved from the data store), sets the <ph id=\"ph7\">`lockId`</ph> <ph id=\"ph8\">`out`</ph> parameter to the lock identifier retrieved from the data store, and returns <ph id=\"ph9\">`null`</ph>.","pos":[781,1252],"source":" If session-item data is found at the data store but the data is locked, the <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A> method sets the `locked` `out` parameter to `true`, sets the `lockAge` `out` parameter to the current date and time minus the date and time when the item was locked (which is retrieved from the data store), sets the `lockId` `out` parameter to the lock identifier retrieved from the data store, and returns `null`."},{"content":"This causes the <ph id=\"ph1\">&lt;xref:System.Web.SessionState.SessionStateModule&gt;</ph> object to call the <ph id=\"ph2\">&lt;xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A&gt;</ph> method again after a half-second interval to attempt to retrieve the session-item information and obtain a lock on the data.","pos":[1253,1543],"source":" This causes the <xref:System.Web.SessionState.SessionStateModule> object to call the <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A> method again after a half-second interval to attempt to retrieve the session-item information and obtain a lock on the data."},{"content":"If the value that the <ph id=\"ph1\">`lockAge`</ph> <ph id=\"ph2\">`out`</ph> parameter is set to exceeds the <ph id=\"ph3\">&lt;xref:System.Web.Configuration.HttpRuntimeSection.ExecutionTimeout%2A&gt;</ph> value, then the <ph id=\"ph4\">&lt;xref:System.Web.SessionState.SessionStateModule&gt;</ph> calls the <ph id=\"ph5\">&lt;xref:System.Web.SessionState.SessionStateStoreProviderBase.ReleaseItemExclusive%2A&gt;</ph> method to clear the lock on the session-item data, and then calls the <ph id=\"ph6\">&lt;xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A&gt;</ph> method again.","pos":[1544,2010],"source":" If the value that the `lockAge` `out` parameter is set to exceeds the <xref:System.Web.Configuration.HttpRuntimeSection.ExecutionTimeout%2A> value, then the <xref:System.Web.SessionState.SessionStateModule> calls the <xref:System.Web.SessionState.SessionStateStoreProviderBase.ReleaseItemExclusive%2A> method to clear the lock on the session-item data, and then calls the <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A> method again."}]},{"pos":[2676,3287],"content":"The `actionFlags` parameter is used when the `cookieless` and `regenerateExpiredSessionId` attributes are both set to `true`. An `actionFlags` value set to <xref:System.Web.SessionState.SessionStateActions.InitializeItem> indicates that the entry in the session data store is a new session that requires initialization. Uninitialized entries in the session data store are created by a call to the <xref:System.Web.SessionState.SessionStateStoreProviderBase.CreateUninitializedItem%2A> method. If the item from the session data store is not an uninitialized item, the `actionFlags` parameter will be set to zero.","nodes":[{"content":"The <ph id=\"ph1\">`actionFlags`</ph> parameter is used when the <ph id=\"ph2\">`cookieless`</ph> and <ph id=\"ph3\">`regenerateExpiredSessionId`</ph> attributes are both set to <ph id=\"ph4\">`true`</ph>.","pos":[0,125],"source":"The `actionFlags` parameter is used when the `cookieless` and `regenerateExpiredSessionId` attributes are both set to `true`."},{"content":"An <ph id=\"ph1\">`actionFlags`</ph> value set to <ph id=\"ph2\">&lt;xref:System.Web.SessionState.SessionStateActions.InitializeItem&gt;</ph> indicates that the entry in the session data store is a new session that requires initialization.","pos":[126,319],"source":" An `actionFlags` value set to <xref:System.Web.SessionState.SessionStateActions.InitializeItem> indicates that the entry in the session data store is a new session that requires initialization."},{"content":"Uninitialized entries in the session data store are created by a call to the <ph id=\"ph1\">&lt;xref:System.Web.SessionState.SessionStateStoreProviderBase.CreateUninitializedItem%2A&gt;</ph> method.","pos":[320,492],"source":" Uninitialized entries in the session data store are created by a call to the <xref:System.Web.SessionState.SessionStateStoreProviderBase.CreateUninitializedItem%2A> method."},{"content":"If the item from the session data store is not an uninitialized item, the <ph id=\"ph1\">`actionFlags`</ph> parameter will be set to zero.","pos":[493,611],"source":" If the item from the session data store is not an uninitialized item, the `actionFlags` parameter will be set to zero."}]},{"pos":[3294,3846],"content":"Custom session-state store implementers that support cookieless sessions should set the `actionFlags` `out` parameter to the value returned from the session data store for the current item. If the `actionFlags` parameter value for the requested session-store item equals the <xref:System.Web.SessionState.SessionStateActions.InitializeItem> enumeration value, then the <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A> method should set the value in the data store to zero after setting the `actionFlags` `out` parameter.","nodes":[{"content":"Custom session-state store implementers that support cookieless sessions should set the <ph id=\"ph1\">`actionFlags`</ph> <ph id=\"ph2\">`out`</ph> parameter to the value returned from the session data store for the current item.","pos":[0,189],"source":"Custom session-state store implementers that support cookieless sessions should set the `actionFlags` `out` parameter to the value returned from the session data store for the current item."},{"content":"If the <ph id=\"ph1\">`actionFlags`</ph> parameter value for the requested session-store item equals the <ph id=\"ph2\">&lt;xref:System.Web.SessionState.SessionStateActions.InitializeItem&gt;</ph> enumeration value, then the <ph id=\"ph3\">&lt;xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A&gt;</ph> method should set the value in the data store to zero after setting the <ph id=\"ph4\">`actionFlags`</ph> <ph id=\"ph5\">`out`</ph> parameter.","pos":[190,552],"source":" If the `actionFlags` parameter value for the requested session-store item equals the <xref:System.Web.SessionState.SessionStateActions.InitializeItem> enumeration value, then the <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A> method should set the value in the data store to zero after setting the `actionFlags` `out` parameter."}]}],"pos":[33432,37287],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.Web.HttpContext\"></xref> for the current request.","nodes":[{"pos":[0,72],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Web.HttpContext\"&gt;&lt;/xref&gt;</ph> for the current request.","source":"The <xref href=\"System.Web.HttpContext\"></xref> for the current request."}],"pos":[37840,37913],"yaml":true},{"content":"The <xref href=\"System.Web.SessionState.HttpSessionState.SessionID\"></xref> for the current request.","nodes":[{"pos":[0,100],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Web.SessionState.HttpSessionState.SessionID\"&gt;&lt;/xref&gt;</ph> for the current request.","source":"The <xref href=\"System.Web.SessionState.HttpSessionState.SessionID\"></xref> for the current request."}],"pos":[37971,38072],"yaml":true},{"content":"When this method returns, contains a Boolean value that is set to `true` if a lock is successfully obtained; otherwise, `false`.","nodes":[{"pos":[0,128],"content":"When this method returns, contains a Boolean value that is set to <ph id=\"ph1\">`true`</ph> if a lock is successfully obtained; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"When this method returns, contains a Boolean value that is set to `true` if a lock is successfully obtained; otherwise, `false`."}],"pos":[38135,38264],"yaml":true},{"content":"When this method returns, contains a <xref href=\"System.TimeSpan\"></xref> object that is set to the amount of time that an item in the session data store has been locked.","nodes":[{"pos":[0,170],"content":"When this method returns, contains a <ph id=\"ph1\">&lt;xref href=\"System.TimeSpan\"&gt;&lt;/xref&gt;</ph> object that is set to the amount of time that an item in the session data store has been locked.","source":"When this method returns, contains a <xref href=\"System.TimeSpan\"></xref> object that is set to the amount of time that an item in the session data store has been locked."}],"pos":[38329,38500],"yaml":true},{"content":"When this method returns, contains an object that is set to the lock identifier for the current request. For details on the lock identifier, see \"Locking Session-Store Data\" in the <xref href=\"System.Web.SessionState.SessionStateStoreProviderBase\"></xref> class summary.","nodes":[{"pos":[0,270],"content":"When this method returns, contains an object that is set to the lock identifier for the current request. For details on the lock identifier, see \"Locking Session-Store Data\" in the <xref href=\"System.Web.SessionState.SessionStateStoreProviderBase\"></xref> class summary.","nodes":[{"content":"When this method returns, contains an object that is set to the lock identifier for the current request.","pos":[0,104]},{"content":"For details on the lock identifier, see \"Locking Session-Store Data\" in the <ph id=\"ph1\">&lt;xref href=\"System.Web.SessionState.SessionStateStoreProviderBase\"&gt;&lt;/xref&gt;</ph> class summary.","pos":[105,270],"source":" For details on the lock identifier, see \"Locking Session-Store Data\" in the <xref href=\"System.Web.SessionState.SessionStateStoreProviderBase\"></xref> class summary."}]}],"pos":[38562,38833],"yaml":true},{"content":"When this method returns, contains one of the <xref href=\"System.Web.SessionState.SessionStateActions\"></xref> values, indicating whether the current session is an uninitialized, cookieless session.","nodes":[{"pos":[0,198],"content":"When this method returns, contains one of the <ph id=\"ph1\">&lt;xref href=\"System.Web.SessionState.SessionStateActions\"&gt;&lt;/xref&gt;</ph> values, indicating whether the current session is an uninitialized, cookieless session.","source":"When this method returns, contains one of the <xref href=\"System.Web.SessionState.SessionStateActions\"></xref> values, indicating whether the current session is an uninitialized, cookieless session."}],"pos":[38926,39125],"yaml":true},{"content":"A <xref href=\"System.Web.SessionState.SessionStateStoreData\"></xref> populated with session values and information from the session data store.","nodes":[{"pos":[0,143],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.Web.SessionState.SessionStateStoreData\"&gt;&lt;/xref&gt;</ph> populated with session values and information from the session data store.","source":"A <xref href=\"System.Web.SessionState.SessionStateStoreData\"></xref> populated with session values and information from the session data store."}],"pos":[39214,39358],"yaml":true},{"content":"Called by the <xref href=\"System.Web.SessionState.SessionStateModule\"></xref> object for per-request initialization.","nodes":[{"pos":[0,116],"content":"Called by the <ph id=\"ph1\">&lt;xref href=\"System.Web.SessionState.SessionStateModule\"&gt;&lt;/xref&gt;</ph> object for per-request initialization.","source":"Called by the <xref href=\"System.Web.SessionState.SessionStateModule\"></xref> object for per-request initialization."}],"pos":[40620,40737],"yaml":true},{"content":"The <xref:System.Web.SessionState.SessionStateModule> object calls the <xref:System.Web.SessionState.SessionStateStoreProviderBase.InitializeRequest%2A> method before calling any other <xref:System.Web.SessionState.SessionStateStoreProviderBase> method. You can use the <xref:System.Web.SessionState.SessionStateStoreProviderBase.InitializeRequest%2A> method to perform any per-request initialization required by your session-state store provider.","nodes":[{"pos":[0,447],"content":"The <xref:System.Web.SessionState.SessionStateModule> object calls the <xref:System.Web.SessionState.SessionStateStoreProviderBase.InitializeRequest%2A> method before calling any other <xref:System.Web.SessionState.SessionStateStoreProviderBase> method. You can use the <xref:System.Web.SessionState.SessionStateStoreProviderBase.InitializeRequest%2A> method to perform any per-request initialization required by your session-state store provider.","nodes":[{"content":"The <xref:System.Web.SessionState.SessionStateModule> object calls the <xref:System.Web.SessionState.SessionStateStoreProviderBase.InitializeRequest%2A> method before calling any other <xref:System.Web.SessionState.SessionStateStoreProviderBase> method. You can use the <xref:System.Web.SessionState.SessionStateStoreProviderBase.InitializeRequest%2A> method to perform any per-request initialization required by your session-state store provider.","pos":[0,447],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.SessionState.SessionStateModule&gt;</ph> object calls the <ph id=\"ph2\">&lt;xref:System.Web.SessionState.SessionStateStoreProviderBase.InitializeRequest%2A&gt;</ph> method before calling any other <ph id=\"ph3\">&lt;xref:System.Web.SessionState.SessionStateStoreProviderBase&gt;</ph> method.","pos":[0,253],"source":"The <xref:System.Web.SessionState.SessionStateModule> object calls the <xref:System.Web.SessionState.SessionStateStoreProviderBase.InitializeRequest%2A> method before calling any other <xref:System.Web.SessionState.SessionStateStoreProviderBase> method."},{"content":"You can use the <ph id=\"ph1\">&lt;xref:System.Web.SessionState.SessionStateStoreProviderBase.InitializeRequest%2A&gt;</ph> method to perform any per-request initialization required by your session-state store provider.","pos":[254,447],"source":" You can use the <xref:System.Web.SessionState.SessionStateStoreProviderBase.InitializeRequest%2A> method to perform any per-request initialization required by your session-state store provider."}]}]}],"pos":[40748,41196],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.Web.HttpContext\"></xref> for the current request.","nodes":[{"pos":[0,72],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Web.HttpContext\"&gt;&lt;/xref&gt;</ph> for the current request.","source":"The <xref href=\"System.Web.HttpContext\"></xref> for the current request."}],"pos":[41583,41656],"yaml":true},{"content":"Releases a lock on an item in the session data store.","nodes":[{"pos":[0,53],"content":"Releases a lock on an item in the session data store.","nodes":[{"content":"Releases a lock on an item in the session data store.","pos":[0,53]}]}],"pos":[43069,43123],"yaml":true},{"content":"The <xref:System.Web.SessionState.SessionStateModule> object calls the <xref:System.Web.SessionState.SessionStateStoreProviderBase.ReleaseItemExclusive%2A> method to update the expiration date and release a lock on an item in the session data store. It is called at the end of a request, during the <xref:System.Web.HttpApplication.ReleaseRequestState> event, if session values are unchanged. If session values have been modified, the <xref:System.Web.SessionState.SessionStateModule> object instead calls the <xref:System.Web.SessionState.SessionStateStoreProviderBase.SetAndReleaseItemExclusive%2A> method.  \n  \n The <xref:System.Web.SessionState.SessionStateModule> object also calls the <xref:System.Web.SessionState.SessionStateStoreProviderBase.ReleaseItemExclusive%2A> method when a lock on an item in the session data store has exceeded the <xref:System.Web.Configuration.HttpRuntimeSection.ExecutionTimeout%2A> value. For more information about locking and details about the lock identifier, see \"Locking Session-Store Data\" in the <xref:System.Web.SessionState.SessionStateStoreProviderBase> class overview.  \n  \n The <xref:System.Web.SessionState.SessionStateStoreProviderBase.ReleaseItemExclusive%2A> method only removes the lock from an item in the session data store for the current application that matches the supplied session `id` and `lockId` values. If the `lockId` does not match the one in the data store, the <xref:System.Web.SessionState.SessionStateStoreProviderBase.ReleaseItemExclusive%2A> method does nothing.","nodes":[{"pos":[0,608],"content":"The <xref:System.Web.SessionState.SessionStateModule> object calls the <xref:System.Web.SessionState.SessionStateStoreProviderBase.ReleaseItemExclusive%2A> method to update the expiration date and release a lock on an item in the session data store. It is called at the end of a request, during the <xref:System.Web.HttpApplication.ReleaseRequestState> event, if session values are unchanged. If session values have been modified, the <xref:System.Web.SessionState.SessionStateModule> object instead calls the <xref:System.Web.SessionState.SessionStateStoreProviderBase.SetAndReleaseItemExclusive%2A> method.","nodes":[{"content":"The <xref:System.Web.SessionState.SessionStateModule> object calls the <xref:System.Web.SessionState.SessionStateStoreProviderBase.ReleaseItemExclusive%2A> method to update the expiration date and release a lock on an item in the session data store. It is called at the end of a request, during the <xref:System.Web.HttpApplication.ReleaseRequestState> event, if session values are unchanged. If session values have been modified, the <xref:System.Web.SessionState.SessionStateModule> object instead calls the <xref:System.Web.SessionState.SessionStateStoreProviderBase.SetAndReleaseItemExclusive%2A> method.","pos":[0,608],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.SessionState.SessionStateModule&gt;</ph> object calls the <ph id=\"ph2\">&lt;xref:System.Web.SessionState.SessionStateStoreProviderBase.ReleaseItemExclusive%2A&gt;</ph> method to update the expiration date and release a lock on an item in the session data store.","pos":[0,249],"source":"The <xref:System.Web.SessionState.SessionStateModule> object calls the <xref:System.Web.SessionState.SessionStateStoreProviderBase.ReleaseItemExclusive%2A> method to update the expiration date and release a lock on an item in the session data store."},{"content":"It is called at the end of a request, during the <ph id=\"ph1\">&lt;xref:System.Web.HttpApplication.ReleaseRequestState&gt;</ph> event, if session values are unchanged.","pos":[250,392],"source":" It is called at the end of a request, during the <xref:System.Web.HttpApplication.ReleaseRequestState> event, if session values are unchanged."},{"content":"If session values have been modified, the <ph id=\"ph1\">&lt;xref:System.Web.SessionState.SessionStateModule&gt;</ph> object instead calls the <ph id=\"ph2\">&lt;xref:System.Web.SessionState.SessionStateStoreProviderBase.SetAndReleaseItemExclusive%2A&gt;</ph> method.","pos":[393,608],"source":" If session values have been modified, the <xref:System.Web.SessionState.SessionStateModule> object instead calls the <xref:System.Web.SessionState.SessionStateStoreProviderBase.SetAndReleaseItemExclusive%2A> method."}]}]},{"pos":[615,1117],"content":"The <xref:System.Web.SessionState.SessionStateModule> object also calls the <xref:System.Web.SessionState.SessionStateStoreProviderBase.ReleaseItemExclusive%2A> method when a lock on an item in the session data store has exceeded the <xref:System.Web.Configuration.HttpRuntimeSection.ExecutionTimeout%2A> value. For more information about locking and details about the lock identifier, see \"Locking Session-Store Data\" in the <xref:System.Web.SessionState.SessionStateStoreProviderBase> class overview.","nodes":[{"content":"The <xref:System.Web.SessionState.SessionStateModule> object also calls the <xref:System.Web.SessionState.SessionStateStoreProviderBase.ReleaseItemExclusive%2A> method when a lock on an item in the session data store has exceeded the <xref:System.Web.Configuration.HttpRuntimeSection.ExecutionTimeout%2A> value. For more information about locking and details about the lock identifier, see \"Locking Session-Store Data\" in the <xref:System.Web.SessionState.SessionStateStoreProviderBase> class overview.","pos":[0,502],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.SessionState.SessionStateModule&gt;</ph> object also calls the <ph id=\"ph2\">&lt;xref:System.Web.SessionState.SessionStateStoreProviderBase.ReleaseItemExclusive%2A&gt;</ph> method when a lock on an item in the session data store has exceeded the <ph id=\"ph3\">&lt;xref:System.Web.Configuration.HttpRuntimeSection.ExecutionTimeout%2A&gt;</ph> value.","pos":[0,311],"source":"The <xref:System.Web.SessionState.SessionStateModule> object also calls the <xref:System.Web.SessionState.SessionStateStoreProviderBase.ReleaseItemExclusive%2A> method when a lock on an item in the session data store has exceeded the <xref:System.Web.Configuration.HttpRuntimeSection.ExecutionTimeout%2A> value."},{"content":"For more information about locking and details about the lock identifier, see \"Locking Session-Store Data\" in the <ph id=\"ph1\">&lt;xref:System.Web.SessionState.SessionStateStoreProviderBase&gt;</ph> class overview.","pos":[312,502],"source":" For more information about locking and details about the lock identifier, see \"Locking Session-Store Data\" in the <xref:System.Web.SessionState.SessionStateStoreProviderBase> class overview."}]}]},{"pos":[1124,1536],"content":"The <xref:System.Web.SessionState.SessionStateStoreProviderBase.ReleaseItemExclusive%2A> method only removes the lock from an item in the session data store for the current application that matches the supplied session `id` and `lockId` values. If the `lockId` does not match the one in the data store, the <xref:System.Web.SessionState.SessionStateStoreProviderBase.ReleaseItemExclusive%2A> method does nothing.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.SessionState.SessionStateStoreProviderBase.ReleaseItemExclusive%2A&gt;</ph> method only removes the lock from an item in the session data store for the current application that matches the supplied session <ph id=\"ph2\">`id`</ph> and <ph id=\"ph3\">`lockId`</ph> values.","pos":[0,244],"source":"The <xref:System.Web.SessionState.SessionStateStoreProviderBase.ReleaseItemExclusive%2A> method only removes the lock from an item in the session data store for the current application that matches the supplied session `id` and `lockId` values."},{"content":"If the <ph id=\"ph1\">`lockId`</ph> does not match the one in the data store, the <ph id=\"ph2\">&lt;xref:System.Web.SessionState.SessionStateStoreProviderBase.ReleaseItemExclusive%2A&gt;</ph> method does nothing.","pos":[245,412],"source":" If the `lockId` does not match the one in the data store, the <xref:System.Web.SessionState.SessionStateStoreProviderBase.ReleaseItemExclusive%2A> method does nothing."}]}],"pos":[43134,44679],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.Web.HttpContext\"></xref> for the current request.","nodes":[{"pos":[0,72],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Web.HttpContext\"&gt;&lt;/xref&gt;</ph> for the current request.","source":"The <xref href=\"System.Web.HttpContext\"></xref> for the current request."}],"pos":[45095,45168],"yaml":true},{"content":"The session identifier for the current request.","nodes":[{"pos":[0,47],"content":"The session identifier for the current request.","nodes":[{"content":"The session identifier for the current request.","pos":[0,47]}]}],"pos":[45226,45274],"yaml":true},{"content":"The lock identifier for the current request.","nodes":[{"pos":[0,44],"content":"The lock identifier for the current request.","nodes":[{"content":"The lock identifier for the current request.","pos":[0,44]}]}],"pos":[45336,45381],"yaml":true},{"content":"Deletes item data from the session data store.","nodes":[{"pos":[0,46],"content":"Deletes item data from the session data store.","nodes":[{"content":"Deletes item data from the session data store.","pos":[0,46]}]}],"pos":[46944,46991],"yaml":true},{"content":"The <xref:System.Web.SessionState.SessionStateModule> object calls the <xref:System.Web.SessionState.SessionStateStoreProviderBase.RemoveItem%2A> method at the end of a request, during the <xref:System.Web.HttpApplication.ReleaseRequestState> event, to delete the data for a session item from the session data store if the <xref:System.Web.SessionState.HttpSessionState.Abandon%2A> method has been called. Only session data for the current application that matches the supplied session `id` and `lockId` values is deleted. For more information about locking and details about the lock identifier, see \"Locking Session-Store Data\" in the <xref:System.Web.SessionState.SessionStateStoreProviderBase> class overview.","nodes":[{"pos":[0,713],"content":"The <xref:System.Web.SessionState.SessionStateModule> object calls the <xref:System.Web.SessionState.SessionStateStoreProviderBase.RemoveItem%2A> method at the end of a request, during the <xref:System.Web.HttpApplication.ReleaseRequestState> event, to delete the data for a session item from the session data store if the <xref:System.Web.SessionState.HttpSessionState.Abandon%2A> method has been called. Only session data for the current application that matches the supplied session `id` and `lockId` values is deleted. For more information about locking and details about the lock identifier, see \"Locking Session-Store Data\" in the <xref:System.Web.SessionState.SessionStateStoreProviderBase> class overview.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.SessionState.SessionStateModule&gt;</ph> object calls the <ph id=\"ph2\">&lt;xref:System.Web.SessionState.SessionStateStoreProviderBase.RemoveItem%2A&gt;</ph> method at the end of a request, during the <ph id=\"ph3\">&lt;xref:System.Web.HttpApplication.ReleaseRequestState&gt;</ph> event, to delete the data for a session item from the session data store if the <ph id=\"ph4\">&lt;xref:System.Web.SessionState.HttpSessionState.Abandon%2A&gt;</ph> method has been called.","pos":[0,405],"source":"The <xref:System.Web.SessionState.SessionStateModule> object calls the <xref:System.Web.SessionState.SessionStateStoreProviderBase.RemoveItem%2A> method at the end of a request, during the <xref:System.Web.HttpApplication.ReleaseRequestState> event, to delete the data for a session item from the session data store if the <xref:System.Web.SessionState.HttpSessionState.Abandon%2A> method has been called."},{"content":"Only session data for the current application that matches the supplied session <ph id=\"ph1\">`id`</ph> and <ph id=\"ph2\">`lockId`</ph> values is deleted.","pos":[406,522],"source":" Only session data for the current application that matches the supplied session `id` and `lockId` values is deleted."},{"content":"For more information about locking and details about the lock identifier, see \"Locking Session-Store Data\" in the <ph id=\"ph1\">&lt;xref:System.Web.SessionState.SessionStateStoreProviderBase&gt;</ph> class overview.","pos":[523,713],"source":" For more information about locking and details about the lock identifier, see \"Locking Session-Store Data\" in the <xref:System.Web.SessionState.SessionStateStoreProviderBase> class overview."}]}],"pos":[47002,47716],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.Web.HttpContext\"></xref> for the current request.","nodes":[{"pos":[0,72],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Web.HttpContext\"&gt;&lt;/xref&gt;</ph> for the current request.","source":"The <xref href=\"System.Web.HttpContext\"></xref> for the current request."}],"pos":[48174,48247],"yaml":true},{"content":"The session identifier for the current request.","nodes":[{"pos":[0,47],"content":"The session identifier for the current request.","nodes":[{"content":"The session identifier for the current request.","pos":[0,47]}]}],"pos":[48305,48353],"yaml":true},{"content":"The lock identifier for the current request.","nodes":[{"pos":[0,44],"content":"The lock identifier for the current request.","nodes":[{"content":"The lock identifier for the current request.","pos":[0,44]}]}],"pos":[48415,48460],"yaml":true},{"content":"The <xref href=\"System.Web.SessionState.SessionStateStoreData\"></xref> that represents the item to delete from the data store.","nodes":[{"pos":[0,126],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Web.SessionState.SessionStateStoreData\"&gt;&lt;/xref&gt;</ph> that represents the item to delete from the data store.","source":"The <xref href=\"System.Web.SessionState.SessionStateStoreData\"></xref> that represents the item to delete from the data store."}],"pos":[48552,48679],"yaml":true},{"content":"Updates the expiration date and time of an item in the session data store.","nodes":[{"pos":[0,74],"content":"Updates the expiration date and time of an item in the session data store.","nodes":[{"content":"Updates the expiration date and time of an item in the session data store.","pos":[0,74]}]}],"pos":[49995,50070],"yaml":true},{"content":"The <xref:System.Web.SessionState.SessionStateModule> object calls the <xref:System.Web.SessionState.SessionStateStoreProviderBase.ResetItemTimeout%2A> method to update the expiration date and time for a session to the current date and time plus the session <xref:System.Web.SessionState.HttpSessionState.Timeout%2A> value when either:  \n  \n-   the <xref:System.Web.Configuration.PagesSection.EnableSessionState%2A> attribute is `true`, or  \n  \n-   the request did not raise the <xref:System.Web.HttpApplication.AcquireRequestState> and <xref:System.Web.HttpApplication.ReleaseRequestState> events due to an error.  \n  \n If an ASP.NET page is requested and the <xref:System.Web.Configuration.PagesSection.EnableSessionState%2A> attribute is set to `false`, the <xref:System.Web.SessionState.SessionStateStoreProviderBase.ResetItemTimeout%2A> method is still called to update the expiration date and time of the data in the session data store.","nodes":[{"pos":[0,335],"content":"The <xref:System.Web.SessionState.SessionStateModule> object calls the <xref:System.Web.SessionState.SessionStateStoreProviderBase.ResetItemTimeout%2A> method to update the expiration date and time for a session to the current date and time plus the session <xref:System.Web.SessionState.HttpSessionState.Timeout%2A> value when either:","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.SessionState.SessionStateModule&gt;</ph> object calls the <ph id=\"ph2\">&lt;xref:System.Web.SessionState.SessionStateStoreProviderBase.ResetItemTimeout%2A&gt;</ph> method to update the expiration date and time for a session to the current date and time plus the session <ph id=\"ph3\">&lt;xref:System.Web.SessionState.HttpSessionState.Timeout%2A&gt;</ph> value when either:","pos":[0,335],"source":"The <xref:System.Web.SessionState.SessionStateModule> object calls the <xref:System.Web.SessionState.SessionStateStoreProviderBase.ResetItemTimeout%2A> method to update the expiration date and time for a session to the current date and time plus the session <xref:System.Web.SessionState.HttpSessionState.Timeout%2A> value when either:"}]},{"pos":[345,439],"content":"the <ph id=\"ph1\">&lt;xref:System.Web.Configuration.PagesSection.EnableSessionState%2A&gt;</ph> attribute is <ph id=\"ph2\">`true`</ph>, or","source":"the <xref:System.Web.Configuration.PagesSection.EnableSessionState%2A> attribute is `true`, or"},{"pos":[449,614],"content":"the request did not raise the <xref:System.Web.HttpApplication.AcquireRequestState> and <xref:System.Web.HttpApplication.ReleaseRequestState> events due to an error.","nodes":[{"content":"the request did not raise the <ph id=\"ph1\">&lt;xref:System.Web.HttpApplication.AcquireRequestState&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Web.HttpApplication.ReleaseRequestState&gt;</ph> events due to an error.","pos":[0,165],"source":"the request did not raise the <xref:System.Web.HttpApplication.AcquireRequestState> and <xref:System.Web.HttpApplication.ReleaseRequestState> events due to an error."}]},{"pos":[621,942],"content":"If an ASP.NET page is requested and the <ph id=\"ph1\">&lt;xref:System.Web.Configuration.PagesSection.EnableSessionState%2A&gt;</ph> attribute is set to <ph id=\"ph2\">`false`</ph>, the <ph id=\"ph3\">&lt;xref:System.Web.SessionState.SessionStateStoreProviderBase.ResetItemTimeout%2A&gt;</ph> method is still called to update the expiration date and time of the data in the session data store.","source":"If an ASP.NET page is requested and the <xref:System.Web.Configuration.PagesSection.EnableSessionState%2A> attribute is set to `false`, the <xref:System.Web.SessionState.SessionStateStoreProviderBase.ResetItemTimeout%2A> method is still called to update the expiration date and time of the data in the session data store."}],"pos":[50081,51032],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.Web.HttpContext\"></xref> for the current request.","nodes":[{"pos":[0,72],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Web.HttpContext\"&gt;&lt;/xref&gt;</ph> for the current request.","source":"The <xref href=\"System.Web.HttpContext\"></xref> for the current request."}],"pos":[51429,51502],"yaml":true},{"content":"The session identifier for the current request.","nodes":[{"pos":[0,47],"content":"The session identifier for the current request.","nodes":[{"content":"The session identifier for the current request.","pos":[0,47]}]}],"pos":[51560,51608],"yaml":true},{"content":"Updates the session-item information in the session-state data store with values from the current request, and clears the lock on the data.","nodes":[{"pos":[0,139],"content":"Updates the session-item information in the session-state data store with values from the current request, and clears the lock on the data.","nodes":[{"content":"Updates the session-item information in the session-state data store with values from the current request, and clears the lock on the data.","pos":[0,139]}]}],"pos":[53335,53475],"yaml":true},{"content":"The <xref:System.Web.SessionState.SessionStateModule> object calls the <xref:System.Web.SessionState.SessionStateStoreProviderBase.SetAndReleaseItemExclusive%2A> method at the end of a request, during the <xref:System.Web.HttpApplication.ReleaseRequestState> event, to insert current session-item information into the data store or update existing session-item information in the data store with current values, to update the expiration time on the item, and to release the lock on the data. Only session data for the current application that matches the supplied session `id` and `lockId` values is updated. For more information about locking, see \"Locking Session Store Data\" in the <xref:System.Web.SessionState.SessionStateStoreProviderBase> class overview.  \n  \n If the session values for the current request have not been modified, the <xref:System.Web.SessionState.SessionStateStoreProviderBase.SetAndReleaseItemExclusive%2A> method is not called. Instead, the <xref:System.Web.SessionState.SessionStateStoreProviderBase.ReleaseItemExclusive%2A> method is called.  \n  \n If the <xref:System.Web.SessionState.HttpSessionState.Abandon%2A> method has been called, the <xref:System.Web.SessionState.SessionStateStoreProviderBase.SetAndReleaseItemExclusive%2A> method is not called. Instead, the <xref:System.Web.SessionState.SessionStateModule> object calls the <xref:System.Web.SessionState.SessionStateStoreProviderBase.RemoveItem%2A> method to delete session-item data from the data source.","nodes":[{"pos":[0,761],"content":"The <xref:System.Web.SessionState.SessionStateModule> object calls the <xref:System.Web.SessionState.SessionStateStoreProviderBase.SetAndReleaseItemExclusive%2A> method at the end of a request, during the <xref:System.Web.HttpApplication.ReleaseRequestState> event, to insert current session-item information into the data store or update existing session-item information in the data store with current values, to update the expiration time on the item, and to release the lock on the data. Only session data for the current application that matches the supplied session `id` and `lockId` values is updated. For more information about locking, see \"Locking Session Store Data\" in the <xref:System.Web.SessionState.SessionStateStoreProviderBase> class overview.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Web.SessionState.SessionStateModule&gt;</ph> object calls the <ph id=\"ph2\">&lt;xref:System.Web.SessionState.SessionStateStoreProviderBase.SetAndReleaseItemExclusive%2A&gt;</ph> method at the end of a request, during the <ph id=\"ph3\">&lt;xref:System.Web.HttpApplication.ReleaseRequestState&gt;</ph> event, to insert current session-item information into the data store or update existing session-item information in the data store with current values, to update the expiration time on the item, and to release the lock on the data.","pos":[0,491],"source":"The <xref:System.Web.SessionState.SessionStateModule> object calls the <xref:System.Web.SessionState.SessionStateStoreProviderBase.SetAndReleaseItemExclusive%2A> method at the end of a request, during the <xref:System.Web.HttpApplication.ReleaseRequestState> event, to insert current session-item information into the data store or update existing session-item information in the data store with current values, to update the expiration time on the item, and to release the lock on the data."},{"content":"Only session data for the current application that matches the supplied session <ph id=\"ph1\">`id`</ph> and <ph id=\"ph2\">`lockId`</ph> values is updated.","pos":[492,608],"source":" Only session data for the current application that matches the supplied session `id` and `lockId` values is updated."},{"content":"For more information about locking, see \"Locking Session Store Data\" in the <ph id=\"ph1\">&lt;xref:System.Web.SessionState.SessionStateStoreProviderBase&gt;</ph> class overview.","pos":[609,761],"source":" For more information about locking, see \"Locking Session Store Data\" in the <xref:System.Web.SessionState.SessionStateStoreProviderBase> class overview."}]},{"pos":[768,1070],"content":"If the session values for the current request have not been modified, the <xref:System.Web.SessionState.SessionStateStoreProviderBase.SetAndReleaseItemExclusive%2A> method is not called. Instead, the <xref:System.Web.SessionState.SessionStateStoreProviderBase.ReleaseItemExclusive%2A> method is called.","nodes":[{"content":"If the session values for the current request have not been modified, the <xref:System.Web.SessionState.SessionStateStoreProviderBase.SetAndReleaseItemExclusive%2A> method is not called. Instead, the <xref:System.Web.SessionState.SessionStateStoreProviderBase.ReleaseItemExclusive%2A> method is called.","pos":[0,302],"nodes":[{"content":"If the session values for the current request have not been modified, the <ph id=\"ph1\">&lt;xref:System.Web.SessionState.SessionStateStoreProviderBase.SetAndReleaseItemExclusive%2A&gt;</ph> method is not called.","pos":[0,186],"source":"If the session values for the current request have not been modified, the <xref:System.Web.SessionState.SessionStateStoreProviderBase.SetAndReleaseItemExclusive%2A> method is not called."},{"content":"Instead, the <ph id=\"ph1\">&lt;xref:System.Web.SessionState.SessionStateStoreProviderBase.ReleaseItemExclusive%2A&gt;</ph> method is called.","pos":[187,302],"source":" Instead, the <xref:System.Web.SessionState.SessionStateStoreProviderBase.ReleaseItemExclusive%2A> method is called."}]}]},{"pos":[1077,1495],"content":"If the <xref:System.Web.SessionState.HttpSessionState.Abandon%2A> method has been called, the <xref:System.Web.SessionState.SessionStateStoreProviderBase.SetAndReleaseItemExclusive%2A> method is not called. Instead, the <xref:System.Web.SessionState.SessionStateModule> object calls the <xref:System.Web.SessionState.SessionStateStoreProviderBase.RemoveItem%2A> method to delete session-item data from the data source.","nodes":[{"content":"If the <xref:System.Web.SessionState.HttpSessionState.Abandon%2A> method has been called, the <xref:System.Web.SessionState.SessionStateStoreProviderBase.SetAndReleaseItemExclusive%2A> method is not called. Instead, the <xref:System.Web.SessionState.SessionStateModule> object calls the <xref:System.Web.SessionState.SessionStateStoreProviderBase.RemoveItem%2A> method to delete session-item data from the data source.","pos":[0,418],"nodes":[{"content":"If the <ph id=\"ph1\">&lt;xref:System.Web.SessionState.HttpSessionState.Abandon%2A&gt;</ph> method has been called, the <ph id=\"ph2\">&lt;xref:System.Web.SessionState.SessionStateStoreProviderBase.SetAndReleaseItemExclusive%2A&gt;</ph> method is not called.","pos":[0,206],"source":"If the <xref:System.Web.SessionState.HttpSessionState.Abandon%2A> method has been called, the <xref:System.Web.SessionState.SessionStateStoreProviderBase.SetAndReleaseItemExclusive%2A> method is not called."},{"content":"Instead, the <ph id=\"ph1\">&lt;xref:System.Web.SessionState.SessionStateModule&gt;</ph> object calls the <ph id=\"ph2\">&lt;xref:System.Web.SessionState.SessionStateStoreProviderBase.RemoveItem%2A&gt;</ph> method to delete session-item data from the data source.","pos":[207,418],"source":" Instead, the <xref:System.Web.SessionState.SessionStateModule> object calls the <xref:System.Web.SessionState.SessionStateStoreProviderBase.RemoveItem%2A> method to delete session-item data from the data source."}]}]}],"pos":[53486,54990],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.Web.HttpContext\"></xref> for the current request.","nodes":[{"pos":[0,72],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Web.HttpContext\"&gt;&lt;/xref&gt;</ph> for the current request.","source":"The <xref href=\"System.Web.HttpContext\"></xref> for the current request."}],"pos":[55478,55551],"yaml":true},{"content":"The session identifier for the current request.","nodes":[{"pos":[0,47],"content":"The session identifier for the current request.","nodes":[{"content":"The session identifier for the current request.","pos":[0,47]}]}],"pos":[55609,55657],"yaml":true},{"content":"The <xref href=\"System.Web.SessionState.SessionStateStoreData\"></xref> object that contains the current session values to be stored.","nodes":[{"pos":[0,132],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Web.SessionState.SessionStateStoreData\"&gt;&lt;/xref&gt;</ph> object that contains the current session values to be stored.","source":"The <xref href=\"System.Web.SessionState.SessionStateStoreData\"></xref> object that contains the current session values to be stored."}],"pos":[55749,55882],"yaml":true},{"content":"The lock identifier for the current request.","nodes":[{"pos":[0,44],"content":"The lock identifier for the current request.","nodes":[{"content":"The lock identifier for the current request.","pos":[0,44]}]}],"pos":[55944,55989],"yaml":true},{"content":"`true` to identify the session item as a new item; `false` to identify the session item as an existing item.","nodes":[{"pos":[0,108],"content":"<ph id=\"ph1\">`true`</ph> to identify the session item as a new item; <ph id=\"ph2\">`false`</ph> to identify the session item as an existing item.","source":"`true` to identify the session item as a new item; `false` to identify the session item as an existing item."}],"pos":[56053,56164],"yaml":true},{"content":"Sets a reference to the <xref href=\"System.Web.SessionState.SessionStateItemExpireCallback\"></xref> delegate for the `Session_OnEnd` event defined in the Global.asax file.","nodes":[{"pos":[0,171],"content":"Sets a reference to the <ph id=\"ph1\">&lt;xref href=\"System.Web.SessionState.SessionStateItemExpireCallback\"&gt;&lt;/xref&gt;</ph> delegate for the <ph id=\"ph2\">`Session_OnEnd`</ph> event defined in the Global.asax file.","source":"Sets a reference to the <xref href=\"System.Web.SessionState.SessionStateItemExpireCallback\"></xref> delegate for the `Session_OnEnd` event defined in the Global.asax file."}],"pos":[57613,57785],"yaml":true},{"content":"The <xref:System.Web.SessionState.SessionStateModule> object calls the <xref:System.Web.SessionState.SessionStateStoreProviderBase.SetItemExpireCallback%2A> method when the module is initialized to determine whether calls to the `Session_OnEnd` event are supported by the <xref:System.Web.SessionState.SessionStateStoreProviderBase> implementation and to associate the <xref:System.Web.SessionState.SessionStateItemExpireCallback> delegate with the `Session_OnEnd` event.  \n  \n Custom session-state store provider implementers should use the <xref:System.Web.SessionState.SessionStateStoreProviderBase.SetItemExpireCallback%2A> method to inform the <xref:System.Web.SessionState.SessionStateModule> object whether calls to the `Session_OnEnd` event are supported and to set a local reference to the <xref:System.Web.SessionState.SessionStateItemExpireCallback> delegate supplied by the `expireCallback` parameter. The custom implementation must decide when the local <xref:System.Web.SessionState.SessionStateItemExpireCallback> delegate will be called. For example, the delegate could be called during the call to the <xref:System.Web.SessionState.SessionStateStoreProviderBase.RemoveItem%2A> method, which is called when a session is abandoned.","nodes":[{"pos":[0,471],"content":"The <ph id=\"ph1\">&lt;xref:System.Web.SessionState.SessionStateModule&gt;</ph> object calls the <ph id=\"ph2\">&lt;xref:System.Web.SessionState.SessionStateStoreProviderBase.SetItemExpireCallback%2A&gt;</ph> method when the module is initialized to determine whether calls to the <ph id=\"ph3\">`Session_OnEnd`</ph> event are supported by the <ph id=\"ph4\">&lt;xref:System.Web.SessionState.SessionStateStoreProviderBase&gt;</ph> implementation and to associate the <ph id=\"ph5\">&lt;xref:System.Web.SessionState.SessionStateItemExpireCallback&gt;</ph> delegate with the <ph id=\"ph6\">`Session_OnEnd`</ph> event.","source":"The <xref:System.Web.SessionState.SessionStateModule> object calls the <xref:System.Web.SessionState.SessionStateStoreProviderBase.SetItemExpireCallback%2A> method when the module is initialized to determine whether calls to the `Session_OnEnd` event are supported by the <xref:System.Web.SessionState.SessionStateStoreProviderBase> implementation and to associate the <xref:System.Web.SessionState.SessionStateItemExpireCallback> delegate with the `Session_OnEnd` event."},{"pos":[478,1246],"content":"Custom session-state store provider implementers should use the <xref:System.Web.SessionState.SessionStateStoreProviderBase.SetItemExpireCallback%2A> method to inform the <xref:System.Web.SessionState.SessionStateModule> object whether calls to the `Session_OnEnd` event are supported and to set a local reference to the <xref:System.Web.SessionState.SessionStateItemExpireCallback> delegate supplied by the `expireCallback` parameter. The custom implementation must decide when the local <xref:System.Web.SessionState.SessionStateItemExpireCallback> delegate will be called. For example, the delegate could be called during the call to the <xref:System.Web.SessionState.SessionStateStoreProviderBase.RemoveItem%2A> method, which is called when a session is abandoned.","nodes":[{"content":"Custom session-state store provider implementers should use the <ph id=\"ph1\">&lt;xref:System.Web.SessionState.SessionStateStoreProviderBase.SetItemExpireCallback%2A&gt;</ph> method to inform the <ph id=\"ph2\">&lt;xref:System.Web.SessionState.SessionStateModule&gt;</ph> object whether calls to the <ph id=\"ph3\">`Session_OnEnd`</ph> event are supported and to set a local reference to the <ph id=\"ph4\">&lt;xref:System.Web.SessionState.SessionStateItemExpireCallback&gt;</ph> delegate supplied by the <ph id=\"ph5\">`expireCallback`</ph> parameter.","pos":[0,435],"source":"Custom session-state store provider implementers should use the <xref:System.Web.SessionState.SessionStateStoreProviderBase.SetItemExpireCallback%2A> method to inform the <xref:System.Web.SessionState.SessionStateModule> object whether calls to the `Session_OnEnd` event are supported and to set a local reference to the <xref:System.Web.SessionState.SessionStateItemExpireCallback> delegate supplied by the `expireCallback` parameter."},{"content":"The custom implementation must decide when the local <ph id=\"ph1\">&lt;xref:System.Web.SessionState.SessionStateItemExpireCallback&gt;</ph> delegate will be called.","pos":[436,575],"source":" The custom implementation must decide when the local <xref:System.Web.SessionState.SessionStateItemExpireCallback> delegate will be called."},{"content":"For example, the delegate could be called during the call to the <ph id=\"ph1\">&lt;xref:System.Web.SessionState.SessionStateStoreProviderBase.RemoveItem%2A&gt;</ph> method, which is called when a session is abandoned.","pos":[576,768],"source":" For example, the delegate could be called during the call to the <xref:System.Web.SessionState.SessionStateStoreProviderBase.RemoveItem%2A> method, which is called when a session is abandoned."}]}],"pos":[57796,59047],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.Web.SessionState.SessionStateItemExpireCallback\"></xref> delegate for the `Session_OnEnd` event defined in the Global.asax file.","nodes":[{"pos":[0,151],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Web.SessionState.SessionStateItemExpireCallback\"&gt;&lt;/xref&gt;</ph> delegate for the <ph id=\"ph2\">`Session_OnEnd`</ph> event defined in the Global.asax file.","source":"The <xref href=\"System.Web.SessionState.SessionStateItemExpireCallback\"></xref> delegate for the `Session_OnEnd` event defined in the Global.asax file."}],"pos":[59516,59668],"yaml":true},{"content":"`true` if the session-state store provider supports calling the `Session_OnEnd` event; otherwise, `false`.","nodes":[{"pos":[0,106],"content":"<ph id=\"ph1\">`true`</ph> if the session-state store provider supports calling the <ph id=\"ph2\">`Session_OnEnd`</ph> event; otherwise, <ph id=\"ph3\">`false`</ph>.","source":"`true` if the session-state store provider supports calling the `Session_OnEnd` event; otherwise, `false`."}],"pos":[59726,59835],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Web.SessionState.SessionStateStoreProviderBase\n  commentId: T:System.Web.SessionState.SessionStateStoreProviderBase\n  id: SessionStateStoreProviderBase\n  children:\n  - System.Web.SessionState.SessionStateStoreProviderBase.#ctor\n  - System.Web.SessionState.SessionStateStoreProviderBase.CreateNewStoreData(System.Web.HttpContext,System.Int32)\n  - System.Web.SessionState.SessionStateStoreProviderBase.CreateUninitializedItem(System.Web.HttpContext,System.String,System.Int32)\n  - System.Web.SessionState.SessionStateStoreProviderBase.Dispose\n  - System.Web.SessionState.SessionStateStoreProviderBase.EndRequest(System.Web.HttpContext)\n  - System.Web.SessionState.SessionStateStoreProviderBase.GetItem(System.Web.HttpContext,System.String,System.Boolean@,System.TimeSpan@,System.Object@,System.Web.SessionState.SessionStateActions@)\n  - System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive(System.Web.HttpContext,System.String,System.Boolean@,System.TimeSpan@,System.Object@,System.Web.SessionState.SessionStateActions@)\n  - System.Web.SessionState.SessionStateStoreProviderBase.InitializeRequest(System.Web.HttpContext)\n  - System.Web.SessionState.SessionStateStoreProviderBase.ReleaseItemExclusive(System.Web.HttpContext,System.String,System.Object)\n  - System.Web.SessionState.SessionStateStoreProviderBase.RemoveItem(System.Web.HttpContext,System.String,System.Object,System.Web.SessionState.SessionStateStoreData)\n  - System.Web.SessionState.SessionStateStoreProviderBase.ResetItemTimeout(System.Web.HttpContext,System.String)\n  - System.Web.SessionState.SessionStateStoreProviderBase.SetAndReleaseItemExclusive(System.Web.HttpContext,System.String,System.Web.SessionState.SessionStateStoreData,System.Object,System.Boolean)\n  - System.Web.SessionState.SessionStateStoreProviderBase.SetItemExpireCallback(System.Web.SessionState.SessionStateItemExpireCallback)\n  langs:\n  - csharp\n  name: SessionStateStoreProviderBase\n  nameWithType: SessionStateStoreProviderBase\n  fullName: System.Web.SessionState.SessionStateStoreProviderBase\n  type: Class\n  assemblies:\n  - System.Web\n  namespace: System.Web.SessionState\n  summary: Defines the required members of a session-state provider for a data store.\n  remarks: \"ASP.NET session state reads and writes session data from and to a data store using a session-state store provider. A session-state store provider is a class that inherits the <xref:System.Web.SessionState.SessionStateStoreProviderBase> abstract class and overrides its members with implementations specific to the data store. The session-state store provider is called by the <xref:System.Web.SessionState.SessionStateModule> class during the processing of an ASP.NET page to communicate with the data store for the storage and retrieval of session variables and related session information such as the time-out value.  \\n  \\n Session data within each ASP.NET application is stored separately for each <xref:System.Web.SessionState.HttpSessionState.SessionID%2A> property. ASP.NET applications do not share session data.  \\n  \\n You can specify a custom <xref:System.Web.SessionState.SessionStateStoreProviderBase> implementation for an ASP.NET application by setting the `mode` attribute of the `sessionState` configuration element to <xref:System.Web.SessionState.SessionStateMode.Custom> and the `customProvider` attribute to the name of the custom provider, as shown in the example for this topic.  \\n  \\n## Locking Session Store Data  \\n Because ASP.NET applications are multithreaded to support responding to concurrent requests, it is possible that concurrent requests might attempt to access the same session information. Consider a scenario where multiple frames in a frameset all access the same application. The separate requests for each frame in the frameset can be executed on the Web server concurrently on different threads. If the ASP.NET pages for each frame source access session-state variables, then you could have multiple threads accessing the session store concurrently.  \\n  \\n To avoid data collisions at the session store and unexpected session-state behavior, the <xref:System.Web.SessionState.SessionStateModule> and <xref:System.Web.SessionState.SessionStateStoreProviderBase> classes include lock functionality that exclusively locks the session store item for a particular session for the duration of the execution of an ASP.NET page. Note that even if the <xref:System.Web.Configuration.PagesSection.EnableSessionState%2A> attribute is marked as `ReadOnly`, other ASP.NET pages in the same application might be able to write to the session store, so a request for read-only session data from the store might still end up waiting for locked data to be freed.  \\n  \\n A lock is set on session-store data at the beginning of the request, in the call to the <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A> method. When the request completes, the lock is released during the call to the <xref:System.Web.SessionState.SessionStateStoreProviderBase.SetAndReleaseItemExclusive%2A> method.  \\n  \\n If the <xref:System.Web.SessionState.SessionStateModule> object encounters locked session data during the call to either the <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A> or the <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItem%2A> method, it will re-request the session data at half-second intervals until either the lock is released or the amount of time that the session data has been locked exceeds the value of the <xref:System.Web.Configuration.HttpRuntimeSection.ExecutionTimeout%2A> property. If the execution time out is exceeded, the <xref:System.Web.SessionState.SessionStateModule> object will call the <xref:System.Web.SessionState.SessionStateStoreProviderBase.ReleaseItemExclusive%2A> method to free the session-store data and request the session-store data at that time.  \\n  \\n Because locked session-store data might have been freed by a call to the <xref:System.Web.SessionState.SessionStateStoreProviderBase.ReleaseItemExclusive%2A> method on a separate thread before the call to the <xref:System.Web.SessionState.SessionStateStoreProviderBase.SetAndReleaseItemExclusive%2A> method for the current response, an attempt could be made to set and release session-state store data that has already been released and modified by another session. To avoid this situation, the <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItem%2A> and <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A> methods return a lock identifier. This lock identifier must be included with each request to modify locked session-store data. Session-store data is modified only if the lock identifier in the data store matches the lock identifier supplied by the <xref:System.Web.SessionState.SessionStateModule>.  \\n  \\n## Deleting Expired Session Store Data  \\n When the <xref:System.Web.SessionState.HttpSessionState.Abandon%2A> method is called for a particular session, the data for that session is deleted from the data store using the <xref:System.Web.SessionState.SessionStateStoreProviderBase.RemoveItem%2A> method; otherwise, the data will remain in the session data store to server future requests for the session. It is up to the <xref:System.Web.SessionState.SessionStateStoreProviderBase> implementation to delete expired session data.\"\n  example:\n  - \"For an example of a session-state store provider implementation, see [Implementing a Session-State Store Provider](http://msdn.microsoft.com/library/baadfec5-c881-468a-9681-7d8796b05a66).  \\n  \\n The following code example shows the Web.config file for an ASP.NET application that is configured to use a custom session-state store provider.  \\n  \\n```  \\n<configuration>  \\n  <connectionStrings>  \\n    <add name=\\\"OdbcSessionServices\\\" connectionString=\\\"DSN=SessionState;\\\" />  \\n  </connectionStrings>  \\n  \\n  <system.web>  \\n    <sessionState   \\n      mode=\\\"Custom\\\"  \\n      customProvider=\\\"OdbcSessionProvider\\\">  \\n      <providers>  \\n        <add name=\\\"OdbcSessionProvider\\\"  \\n             type=\\\"Samples.AspNet.Session.OdbcSessionStateStore\\\"  \\n             connectionStringName=\\\"OdbcSessionServices\\\" />  \\n      </providers>  \\n    </sessionState>  \\n  </system.web>  \\n</configuration>  \\n```\"\n  syntax:\n    content: 'public abstract class SessionStateStoreProviderBase : System.Configuration.Provider.ProviderBase'\n  inheritance:\n  - System.Object\n  - System.Configuration.Provider.ProviderBase\n  implements: []\n  inheritedMembers:\n  - System.Configuration.Provider.ProviderBase.Description\n  - System.Configuration.Provider.ProviderBase.Initialize(System.String,System.Collections.Specialized.NameValueCollection)\n  - System.Configuration.Provider.ProviderBase.Name\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.SessionState/SessionStateStoreProviderBase.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.SessionState.SessionStateStoreProviderBase.#ctor\n  commentId: M:System.Web.SessionState.SessionStateStoreProviderBase.#ctor\n  id: '#ctor'\n  parent: System.Web.SessionState.SessionStateStoreProviderBase\n  langs:\n  - csharp\n  name: SessionStateStoreProviderBase()\n  nameWithType: SessionStateStoreProviderBase.SessionStateStoreProviderBase()\n  fullName: SessionStateStoreProviderBase.SessionStateStoreProviderBase()\n  type: Constructor\n  assemblies:\n  - System.Web\n  namespace: System.Web.SessionState\n  summary: Initializes a new instance of the <xref href=\"System.Web.SessionState.SessionStateStoreProviderBase\"></xref> class.\n  remarks: You are not required to implement a constructor for a class that inherits the <xref:System.Web.SessionState.SessionStateStoreProviderBase> abstract class. Initialization values for a <xref:System.Web.SessionState.SessionStateStoreProviderBase> implementation are passed to the <xref:System.Configuration.Provider.ProviderBase.Initialize%2A> method implementation.\n  example:\n  - For an example of a session-state store provider implementation, see [Implementing a Session-State Store Provider](http://msdn.microsoft.com/library/baadfec5-c881-468a-9681-7d8796b05a66).\n  syntax:\n    content: protected SessionStateStoreProviderBase ();\n    parameters: []\n  overload: System.Web.SessionState.SessionStateStoreProviderBase.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.SessionState/SessionStateStoreProviderBase.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.SessionState.SessionStateStoreProviderBase.CreateNewStoreData(System.Web.HttpContext,System.Int32)\n  commentId: M:System.Web.SessionState.SessionStateStoreProviderBase.CreateNewStoreData(System.Web.HttpContext,System.Int32)\n  id: CreateNewStoreData(System.Web.HttpContext,System.Int32)\n  parent: System.Web.SessionState.SessionStateStoreProviderBase\n  langs:\n  - csharp\n  name: CreateNewStoreData(HttpContext, Int32)\n  nameWithType: SessionStateStoreProviderBase.CreateNewStoreData(HttpContext, Int32)\n  fullName: SessionStateStoreProviderBase.CreateNewStoreData(HttpContext, Int32)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.SessionState\n  summary: Creates a new <xref href=\"System.Web.SessionState.SessionStateStoreData\"></xref> object to be used for the current request.\n  remarks: \"The <xref:System.Web.SessionState.SessionStateModule> object calls the <xref:System.Web.SessionState.SessionStateStoreProviderBase.CreateNewStoreData%2A> method at the beginning of a request for an ASP.NET page, during the <xref:System.Web.HttpApplication.AcquireRequestState> event. The <xref:System.Web.SessionState.SessionStateStoreProviderBase.CreateNewStoreData%2A> method is called if:  \\n  \\n-   the incoming request has no session ID, or  \\n  \\n-   the incoming request has a session ID, but the session is not found in the data store.  \\n  \\n The <xref:System.Web.SessionState.SessionStateStoreProviderBase.CreateNewStoreData%2A> method creates a new <xref:System.Web.SessionState.SessionStateStoreData> object with an empty <xref:System.Web.SessionState.ISessionStateItemCollection> object, an <xref:System.Web.HttpStaticObjectsCollection> collection, and the specified `timeout` value. The <xref:System.Web.HttpStaticObjectsCollection> collection for the ASP.NET application can be retrieved using the <xref:System.Web.SessionState.SessionStateUtility.GetSessionStaticObjects%2A> method.\"\n  example:\n  - For an example of a session-state store provider implementation, see [Implementing a Session-State Store Provider](http://msdn.microsoft.com/library/baadfec5-c881-468a-9681-7d8796b05a66).\n  syntax:\n    content: public abstract System.Web.SessionState.SessionStateStoreData CreateNewStoreData (System.Web.HttpContext context, int timeout);\n    parameters:\n    - id: context\n      type: System.Web.HttpContext\n      description: The <xref href=\"System.Web.HttpContext\"></xref> for the current request.\n    - id: timeout\n      type: System.Int32\n      description: The session-state <xref href=\"System.Web.SessionState.HttpSessionState.Timeout\"></xref> value for the new <xref href=\"System.Web.SessionState.SessionStateStoreData\"></xref>.\n    return:\n      type: System.Web.SessionState.SessionStateStoreData\n      description: A new <xref href=\"System.Web.SessionState.SessionStateStoreData\"></xref> for the current request.\n  overload: System.Web.SessionState.SessionStateStoreProviderBase.CreateNewStoreData*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.SessionState/SessionStateStoreProviderBase.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.SessionState.SessionStateStoreProviderBase.CreateUninitializedItem(System.Web.HttpContext,System.String,System.Int32)\n  commentId: M:System.Web.SessionState.SessionStateStoreProviderBase.CreateUninitializedItem(System.Web.HttpContext,System.String,System.Int32)\n  id: CreateUninitializedItem(System.Web.HttpContext,System.String,System.Int32)\n  parent: System.Web.SessionState.SessionStateStoreProviderBase\n  langs:\n  - csharp\n  name: CreateUninitializedItem(HttpContext, String, Int32)\n  nameWithType: SessionStateStoreProviderBase.CreateUninitializedItem(HttpContext, String, Int32)\n  fullName: SessionStateStoreProviderBase.CreateUninitializedItem(HttpContext, String, Int32)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.SessionState\n  summary: Adds a new session-state item to the data store.\n  remarks: \"The <xref:System.Web.SessionState.SessionStateStoreProviderBase.CreateUninitializedItem%2A> method is used with sessions when the `cookieless` and `regenerateExpiredSessionId` attributes are both `true`. Having the `regenerateExpiredSessionId attribute` set to `true` causes the <xref:System.Web.SessionState.SessionStateModule> object to generate a new <xref:System.Web.SessionState.HttpSessionState.SessionID%2A> value when an expired <xref:System.Web.SessionState.HttpSessionState.SessionID%2A> value is encountered.  \\n  \\n The process of generating a new <xref:System.Web.SessionState.HttpSessionState.SessionID%2A> value requires redirecting the browser to a URL that contains the newly generated <xref:System.Web.SessionState.HttpSessionState.SessionID%2A> value. The <xref:System.Web.SessionState.SessionStateStoreProviderBase.CreateUninitializedItem%2A> method is called during the initial request that contains an expired <xref:System.Web.SessionState.HttpSessionState.SessionID%2A> value. After the <xref:System.Web.SessionState.SessionStateModule> object acquires a new <xref:System.Web.SessionState.HttpSessionState.SessionID%2A> value to replace the expired value, it calls the <xref:System.Web.SessionState.SessionStateStoreProviderBase.CreateUninitializedItem%2A> method to add an uninitialized entry to the session-state data store. The browser is then redirected to the URL containing the newly generated <xref:System.Web.SessionState.HttpSessionState.SessionID%2A> value. The existence of the uninitialized entry in the session data store ensures that the redirected request that includes the newly generated <xref:System.Web.SessionState.HttpSessionState.SessionID%2A> value is not mistaken for a request for an expired session and is, instead, treated as a new session.  \\n  \\n The uninitialized entry in the session data store is associated with the newly generated <xref:System.Web.SessionState.HttpSessionState.SessionID%2A> value and contains only default values, including an expiration date and time and a value that corresponds to the `actionFlags` parameter of the <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItem%2A> and <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A> methods. The uninitialized entry in the session-state store should include an `actionFlags` value equal to the <xref:System.Web.SessionState.SessionStateActions.InitializeItem> enumeration value. This value is passed to the <xref:System.Web.SessionState.SessionStateModule> object by the <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItem%2A> and <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A> methods, and informs the <xref:System.Web.SessionState.SessionStateModule> object that the current session is a new but uninitialized session. The <xref:System.Web.SessionState.SessionStateModule> object will then initialize the new session and raise the `Session_OnStart` event.  \\n  \\n For more information about cookieless sessions, see the <xref:System.Web.SessionState.HttpSessionState.IsCookieless%2A> property.\"\n  example:\n  - For an example of a session-state store provider implementation, see [Implementing a Session-State Store Provider](http://msdn.microsoft.com/library/baadfec5-c881-468a-9681-7d8796b05a66).\n  syntax:\n    content: public abstract void CreateUninitializedItem (System.Web.HttpContext context, string id, int timeout);\n    parameters:\n    - id: context\n      type: System.Web.HttpContext\n      description: The <xref href=\"System.Web.HttpContext\"></xref> for the current request.\n    - id: id\n      type: System.String\n      description: The <xref href=\"System.Web.SessionState.HttpSessionState.SessionID\"></xref> for the current request.\n    - id: timeout\n      type: System.Int32\n      description: The session <xref href=\"System.Web.SessionState.HttpSessionState.Timeout\"></xref> for the current request.\n  overload: System.Web.SessionState.SessionStateStoreProviderBase.CreateUninitializedItem*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.SessionState/SessionStateStoreProviderBase.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.SessionState.SessionStateStoreProviderBase.Dispose\n  commentId: M:System.Web.SessionState.SessionStateStoreProviderBase.Dispose\n  id: Dispose\n  parent: System.Web.SessionState.SessionStateStoreProviderBase\n  langs:\n  - csharp\n  name: Dispose()\n  nameWithType: SessionStateStoreProviderBase.Dispose()\n  fullName: SessionStateStoreProviderBase.Dispose()\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.SessionState\n  summary: Releases all resources used by the <xref href=\"System.Web.SessionState.SessionStateStoreProviderBase\"></xref> implementation.\n  remarks: The <xref:System.Web.SessionState.SessionStateStoreProviderBase.Dispose%2A?displayProperty=fullName> method is called when the <xref:System.Web.SessionState.SessionStateModule.Dispose%2A?displayProperty=fullName> method executes at the closing of the application domain. Classes that inherit the <xref:System.Web.SessionState.SessionStateStoreProviderBase> class can use this method to free any resources no longer in use.\n  example:\n  - For an example of a session-state store provider implementation, see [Implementing a Session-State Store Provider](http://msdn.microsoft.com/library/baadfec5-c881-468a-9681-7d8796b05a66).\n  syntax:\n    content: public abstract void Dispose ();\n    parameters: []\n  overload: System.Web.SessionState.SessionStateStoreProviderBase.Dispose*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.SessionState/SessionStateStoreProviderBase.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.SessionState.SessionStateStoreProviderBase.EndRequest(System.Web.HttpContext)\n  commentId: M:System.Web.SessionState.SessionStateStoreProviderBase.EndRequest(System.Web.HttpContext)\n  id: EndRequest(System.Web.HttpContext)\n  parent: System.Web.SessionState.SessionStateStoreProviderBase\n  langs:\n  - csharp\n  name: EndRequest(HttpContext)\n  nameWithType: SessionStateStoreProviderBase.EndRequest(HttpContext)\n  fullName: SessionStateStoreProviderBase.EndRequest(HttpContext)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.SessionState\n  summary: Called by the <xref href=\"System.Web.SessionState.SessionStateModule\"></xref> object at the end of a request.\n  remarks: The <xref:System.Web.SessionState.SessionStateModule> object calls the <xref:System.Web.SessionState.SessionStateStoreProviderBase.EndRequest%2A> method at the end of a request for an ASP.NET page, during the <xref:System.Web.HttpApplication.EndRequest> event. You can use the <xref:System.Web.SessionState.SessionStateStoreProviderBase.EndRequest%2A> method to perform any per-request cleanup required by your session-state store provider.\n  example:\n  - For an example of a session-state store provider implementation, see [Implementing a Session-State Store Provider](http://msdn.microsoft.com/library/baadfec5-c881-468a-9681-7d8796b05a66).\n  syntax:\n    content: public abstract void EndRequest (System.Web.HttpContext context);\n    parameters:\n    - id: context\n      type: System.Web.HttpContext\n      description: The <xref href=\"System.Web.HttpContext\"></xref> for the current request.\n  overload: System.Web.SessionState.SessionStateStoreProviderBase.EndRequest*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.SessionState/SessionStateStoreProviderBase.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.SessionState.SessionStateStoreProviderBase.GetItem(System.Web.HttpContext,System.String,System.Boolean@,System.TimeSpan@,System.Object@,System.Web.SessionState.SessionStateActions@)\n  commentId: M:System.Web.SessionState.SessionStateStoreProviderBase.GetItem(System.Web.HttpContext,System.String,System.Boolean@,System.TimeSpan@,System.Object@,System.Web.SessionState.SessionStateActions@)\n  id: GetItem(System.Web.HttpContext,System.String,System.Boolean@,System.TimeSpan@,System.Object@,System.Web.SessionState.SessionStateActions@)\n  parent: System.Web.SessionState.SessionStateStoreProviderBase\n  langs:\n  - csharp\n  name: GetItem(HttpContext, String, Boolean, TimeSpan, Object, SessionStateActions)\n  nameWithType: SessionStateStoreProviderBase.GetItem(HttpContext, String, Boolean, TimeSpan, Object, SessionStateActions)\n  fullName: SessionStateStoreProviderBase.GetItem(HttpContext, String, Boolean, TimeSpan, Object, SessionStateActions)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.SessionState\n  summary: Returns read-only session-state data from the session data store.\n  remarks: \"The <xref:System.Web.SessionState.SessionStateModule> object calls the <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItem%2A> method at the beginning of a request, during the <xref:System.Web.HttpApplication.AcquireRequestState> event, when the <xref:System.Web.Configuration.PagesSection.EnableSessionState%2A> attribute is set to `ReadOnly`. If the <xref:System.Web.Configuration.PagesSection.EnableSessionState%2A> attribute is set to `true`, the <xref:System.Web.SessionState.SessionStateModule> object instead calls the <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A> method.  \\n  \\n The <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItem%2A> method returns a <xref:System.Web.SessionState.SessionStateStoreData> object populated with session information from the data store and updates the expiration date of the session data. If no session-item data is found at the data store, the <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItem%2A> method sets the `locked` `out` parameter to `false` and returns `null`. This causes the <xref:System.Web.SessionState.SessionStateModule> object to call the <xref:System.Web.SessionState.SessionStateStoreProviderBase.CreateNewStoreData%2A> method to create a new session item in the data store.  \\n  \\n If session-item data is found at the data store but the data is locked, the <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItem%2A> method sets the `locked` `out` parameter to `true`, sets the `lockAge` `out` parameter to the current date and time minus the date and time when the item was locked (which is retrieved from the data store), sets the `lockId` `out` parameter to the lock identifier retrieved from the data store, and returns `null`. This causes the <xref:System.Web.SessionState.SessionStateModule> object to call the <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItem%2A> method again after a half-second interval to attempt to retrieve the session-item information.  \\n  \\n If the value that the `lockAge` `out` parameter is set to exceed the <xref:System.Web.Configuration.HttpRuntimeSection.ExecutionTimeout%2A> value, then the <xref:System.Web.SessionState.SessionStateModule> object calls the <xref:System.Web.SessionState.SessionStateStoreProviderBase.ReleaseItemExclusive%2A> method to clear the lock on the session-item data, and then calls the <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItem%2A> method again.  \\n  \\n The `actionFlags` parameter is used when both the `cookieless` and `regenerateExpiredSessionId` attributes are set to `true`. An `actionFlags` value set to <xref:System.Web.SessionState.SessionStateActions.InitializeItem> indicates that the entry in the session data store is a new session that requires initialization. Uninitialized entries in the session data store are created by a call to the <xref:System.Web.SessionState.SessionStateStoreProviderBase.CreateUninitializedItem%2A> method. If the item from the session data store is not an uninitialized item, the `actionFlags` parameter will be set to zero.  \\n  \\n Custom session-state store implementers that support cookieless sessions should set the `actionFlags` `out` parameter to the value returned from the session data store for the current item. If the `actionFlags` parameter value for the requested session-store item equals the <xref:System.Web.SessionState.SessionStateActions.InitializeItem> enumeration value, then the <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItem%2A> method should set the value in the data store to zero after setting the `actionFlags` `out` parameter.\"\n  example:\n  - For an example of a session-state store provider implementation, see [Implementing a Session-State Store Provider](http://msdn.microsoft.com/library/baadfec5-c881-468a-9681-7d8796b05a66).\n  syntax:\n    content: public abstract System.Web.SessionState.SessionStateStoreData GetItem (System.Web.HttpContext context, string id, out bool locked, out TimeSpan lockAge, out object lockId, out System.Web.SessionState.SessionStateActions actions);\n    parameters:\n    - id: context\n      type: System.Web.HttpContext\n      description: The <xref href=\"System.Web.HttpContext\"></xref> for the current request.\n    - id: id\n      type: System.String\n      description: The <xref href=\"System.Web.SessionState.HttpSessionState.SessionID\"></xref> for the current request.\n    - id: locked\n      type: System.Boolean\n      description: When this method returns, contains a Boolean value that is set to `true` if the requested session item is locked at the session data store; otherwise, `false`.\n    - id: lockAge\n      type: System.TimeSpan\n      description: When this method returns, contains a <xref href=\"System.TimeSpan\"></xref> object that is set to the amount of time that an item in the session data store has been locked.\n    - id: lockId\n      type: System.Object\n      description: When this method returns, contains an object that is set to the lock identifier for the current request. For details on the lock identifier, see \"Locking Session-Store Data\" in the <xref href=\"System.Web.SessionState.SessionStateStoreProviderBase\"></xref> class summary.\n    - id: actions\n      type: System.Web.SessionState.SessionStateActions\n      description: When this method returns, contains one of the <xref href=\"System.Web.SessionState.SessionStateActions\"></xref> values, indicating whether the current session is an uninitialized, cookieless session.\n    return:\n      type: System.Web.SessionState.SessionStateStoreData\n      description: A <xref href=\"System.Web.SessionState.SessionStateStoreData\"></xref> populated with session values and information from the session data store.\n  overload: System.Web.SessionState.SessionStateStoreProviderBase.GetItem*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.SessionState/SessionStateStoreProviderBase.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive(System.Web.HttpContext,System.String,System.Boolean@,System.TimeSpan@,System.Object@,System.Web.SessionState.SessionStateActions@)\n  commentId: M:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive(System.Web.HttpContext,System.String,System.Boolean@,System.TimeSpan@,System.Object@,System.Web.SessionState.SessionStateActions@)\n  id: GetItemExclusive(System.Web.HttpContext,System.String,System.Boolean@,System.TimeSpan@,System.Object@,System.Web.SessionState.SessionStateActions@)\n  parent: System.Web.SessionState.SessionStateStoreProviderBase\n  langs:\n  - csharp\n  name: GetItemExclusive(HttpContext, String, Boolean, TimeSpan, Object, SessionStateActions)\n  nameWithType: SessionStateStoreProviderBase.GetItemExclusive(HttpContext, String, Boolean, TimeSpan, Object, SessionStateActions)\n  fullName: SessionStateStoreProviderBase.GetItemExclusive(HttpContext, String, Boolean, TimeSpan, Object, SessionStateActions)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.SessionState\n  summary: Returns read-only session-state data from the session data store.\n  remarks: \"The <xref:System.Web.SessionState.SessionStateModule> object calls the <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A> method at the beginning of a request, during the <xref:System.Web.HttpApplication.AcquireRequestState> event, when the <xref:System.Web.Configuration.PagesSection.EnableSessionState%2A> attribute is set to `true`, which is the default. If the <xref:System.Web.Configuration.PagesSection.EnableSessionState%2A> attribute is set to `ReadOnly`, the <xref:System.Web.SessionState.SessionStateModule> object instead calls the <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItem%2A> method.  \\n  \\n The <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A> method returns a <xref:System.Web.SessionState.SessionStateStoreData> object populated with session information from the data store, updates the expiration date of the stored data, and locks the session-item data at the data store for the duration of the request. If no session-item data is found at the data store, the <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A> method sets the `locked` `out` parameter to `false` and returns `null`. This causes the <xref:System.Web.SessionState.SessionStateModule> object to call the <xref:System.Web.SessionState.SessionStateStoreProviderBase.CreateNewStoreData%2A> method to create a new session item in the data store. If session-item data is found at the data store but the data is locked, the <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A> method sets the `locked` `out` parameter to `true`, sets the `lockAge` `out` parameter to the current date and time minus the date and time when the item was locked (which is retrieved from the data store), sets the `lockId` `out` parameter to the lock identifier retrieved from the data store, and returns `null`. This causes the <xref:System.Web.SessionState.SessionStateModule> object to call the <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A> method again after a half-second interval to attempt to retrieve the session-item information and obtain a lock on the data. If the value that the `lockAge` `out` parameter is set to exceeds the <xref:System.Web.Configuration.HttpRuntimeSection.ExecutionTimeout%2A> value, then the <xref:System.Web.SessionState.SessionStateModule> calls the <xref:System.Web.SessionState.SessionStateStoreProviderBase.ReleaseItemExclusive%2A> method to clear the lock on the session-item data, and then calls the <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A> method again.  \\n  \\n The `actionFlags` parameter is used when the `cookieless` and `regenerateExpiredSessionId` attributes are both set to `true`. An `actionFlags` value set to <xref:System.Web.SessionState.SessionStateActions.InitializeItem> indicates that the entry in the session data store is a new session that requires initialization. Uninitialized entries in the session data store are created by a call to the <xref:System.Web.SessionState.SessionStateStoreProviderBase.CreateUninitializedItem%2A> method. If the item from the session data store is not an uninitialized item, the `actionFlags` parameter will be set to zero.  \\n  \\n Custom session-state store implementers that support cookieless sessions should set the `actionFlags` `out` parameter to the value returned from the session data store for the current item. If the `actionFlags` parameter value for the requested session-store item equals the <xref:System.Web.SessionState.SessionStateActions.InitializeItem> enumeration value, then the <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A> method should set the value in the data store to zero after setting the `actionFlags` `out` parameter.\"\n  example:\n  - For an example of a session-state store provider implementation, see [Implementing a Session-State Store Provider](http://msdn.microsoft.com/library/baadfec5-c881-468a-9681-7d8796b05a66).\n  syntax:\n    content: public abstract System.Web.SessionState.SessionStateStoreData GetItemExclusive (System.Web.HttpContext context, string id, out bool locked, out TimeSpan lockAge, out object lockId, out System.Web.SessionState.SessionStateActions actions);\n    parameters:\n    - id: context\n      type: System.Web.HttpContext\n      description: The <xref href=\"System.Web.HttpContext\"></xref> for the current request.\n    - id: id\n      type: System.String\n      description: The <xref href=\"System.Web.SessionState.HttpSessionState.SessionID\"></xref> for the current request.\n    - id: locked\n      type: System.Boolean\n      description: When this method returns, contains a Boolean value that is set to `true` if a lock is successfully obtained; otherwise, `false`.\n    - id: lockAge\n      type: System.TimeSpan\n      description: When this method returns, contains a <xref href=\"System.TimeSpan\"></xref> object that is set to the amount of time that an item in the session data store has been locked.\n    - id: lockId\n      type: System.Object\n      description: When this method returns, contains an object that is set to the lock identifier for the current request. For details on the lock identifier, see \"Locking Session-Store Data\" in the <xref href=\"System.Web.SessionState.SessionStateStoreProviderBase\"></xref> class summary.\n    - id: actions\n      type: System.Web.SessionState.SessionStateActions\n      description: When this method returns, contains one of the <xref href=\"System.Web.SessionState.SessionStateActions\"></xref> values, indicating whether the current session is an uninitialized, cookieless session.\n    return:\n      type: System.Web.SessionState.SessionStateStoreData\n      description: A <xref href=\"System.Web.SessionState.SessionStateStoreData\"></xref> populated with session values and information from the session data store.\n  overload: System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.SessionState/SessionStateStoreProviderBase.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.SessionState.SessionStateStoreProviderBase.InitializeRequest(System.Web.HttpContext)\n  commentId: M:System.Web.SessionState.SessionStateStoreProviderBase.InitializeRequest(System.Web.HttpContext)\n  id: InitializeRequest(System.Web.HttpContext)\n  parent: System.Web.SessionState.SessionStateStoreProviderBase\n  langs:\n  - csharp\n  name: InitializeRequest(HttpContext)\n  nameWithType: SessionStateStoreProviderBase.InitializeRequest(HttpContext)\n  fullName: SessionStateStoreProviderBase.InitializeRequest(HttpContext)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.SessionState\n  summary: Called by the <xref href=\"System.Web.SessionState.SessionStateModule\"></xref> object for per-request initialization.\n  remarks: The <xref:System.Web.SessionState.SessionStateModule> object calls the <xref:System.Web.SessionState.SessionStateStoreProviderBase.InitializeRequest%2A> method before calling any other <xref:System.Web.SessionState.SessionStateStoreProviderBase> method. You can use the <xref:System.Web.SessionState.SessionStateStoreProviderBase.InitializeRequest%2A> method to perform any per-request initialization required by your session-state store provider.\n  example:\n  - For an example of a session-state store provider implementation, see [Implementing a Session-State Store Provider](http://msdn.microsoft.com/library/baadfec5-c881-468a-9681-7d8796b05a66).\n  syntax:\n    content: public abstract void InitializeRequest (System.Web.HttpContext context);\n    parameters:\n    - id: context\n      type: System.Web.HttpContext\n      description: The <xref href=\"System.Web.HttpContext\"></xref> for the current request.\n  overload: System.Web.SessionState.SessionStateStoreProviderBase.InitializeRequest*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.SessionState/SessionStateStoreProviderBase.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.SessionState.SessionStateStoreProviderBase.ReleaseItemExclusive(System.Web.HttpContext,System.String,System.Object)\n  commentId: M:System.Web.SessionState.SessionStateStoreProviderBase.ReleaseItemExclusive(System.Web.HttpContext,System.String,System.Object)\n  id: ReleaseItemExclusive(System.Web.HttpContext,System.String,System.Object)\n  parent: System.Web.SessionState.SessionStateStoreProviderBase\n  langs:\n  - csharp\n  name: ReleaseItemExclusive(HttpContext, String, Object)\n  nameWithType: SessionStateStoreProviderBase.ReleaseItemExclusive(HttpContext, String, Object)\n  fullName: SessionStateStoreProviderBase.ReleaseItemExclusive(HttpContext, String, Object)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.SessionState\n  summary: Releases a lock on an item in the session data store.\n  remarks: \"The <xref:System.Web.SessionState.SessionStateModule> object calls the <xref:System.Web.SessionState.SessionStateStoreProviderBase.ReleaseItemExclusive%2A> method to update the expiration date and release a lock on an item in the session data store. It is called at the end of a request, during the <xref:System.Web.HttpApplication.ReleaseRequestState> event, if session values are unchanged. If session values have been modified, the <xref:System.Web.SessionState.SessionStateModule> object instead calls the <xref:System.Web.SessionState.SessionStateStoreProviderBase.SetAndReleaseItemExclusive%2A> method.  \\n  \\n The <xref:System.Web.SessionState.SessionStateModule> object also calls the <xref:System.Web.SessionState.SessionStateStoreProviderBase.ReleaseItemExclusive%2A> method when a lock on an item in the session data store has exceeded the <xref:System.Web.Configuration.HttpRuntimeSection.ExecutionTimeout%2A> value. For more information about locking and details about the lock identifier, see \\\"Locking Session-Store Data\\\" in the <xref:System.Web.SessionState.SessionStateStoreProviderBase> class overview.  \\n  \\n The <xref:System.Web.SessionState.SessionStateStoreProviderBase.ReleaseItemExclusive%2A> method only removes the lock from an item in the session data store for the current application that matches the supplied session `id` and `lockId` values. If the `lockId` does not match the one in the data store, the <xref:System.Web.SessionState.SessionStateStoreProviderBase.ReleaseItemExclusive%2A> method does nothing.\"\n  example:\n  - For an example of a session-state store provider implementation, see [Implementing a Session-State Store Provider](http://msdn.microsoft.com/library/baadfec5-c881-468a-9681-7d8796b05a66).\n  syntax:\n    content: public abstract void ReleaseItemExclusive (System.Web.HttpContext context, string id, object lockId);\n    parameters:\n    - id: context\n      type: System.Web.HttpContext\n      description: The <xref href=\"System.Web.HttpContext\"></xref> for the current request.\n    - id: id\n      type: System.String\n      description: The session identifier for the current request.\n    - id: lockId\n      type: System.Object\n      description: The lock identifier for the current request.\n  overload: System.Web.SessionState.SessionStateStoreProviderBase.ReleaseItemExclusive*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.SessionState/SessionStateStoreProviderBase.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.SessionState.SessionStateStoreProviderBase.RemoveItem(System.Web.HttpContext,System.String,System.Object,System.Web.SessionState.SessionStateStoreData)\n  commentId: M:System.Web.SessionState.SessionStateStoreProviderBase.RemoveItem(System.Web.HttpContext,System.String,System.Object,System.Web.SessionState.SessionStateStoreData)\n  id: RemoveItem(System.Web.HttpContext,System.String,System.Object,System.Web.SessionState.SessionStateStoreData)\n  parent: System.Web.SessionState.SessionStateStoreProviderBase\n  langs:\n  - csharp\n  name: RemoveItem(HttpContext, String, Object, SessionStateStoreData)\n  nameWithType: SessionStateStoreProviderBase.RemoveItem(HttpContext, String, Object, SessionStateStoreData)\n  fullName: SessionStateStoreProviderBase.RemoveItem(HttpContext, String, Object, SessionStateStoreData)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.SessionState\n  summary: Deletes item data from the session data store.\n  remarks: The <xref:System.Web.SessionState.SessionStateModule> object calls the <xref:System.Web.SessionState.SessionStateStoreProviderBase.RemoveItem%2A> method at the end of a request, during the <xref:System.Web.HttpApplication.ReleaseRequestState> event, to delete the data for a session item from the session data store if the <xref:System.Web.SessionState.HttpSessionState.Abandon%2A> method has been called. Only session data for the current application that matches the supplied session `id` and `lockId` values is deleted. For more information about locking and details about the lock identifier, see \"Locking Session-Store Data\" in the <xref:System.Web.SessionState.SessionStateStoreProviderBase> class overview.\n  example:\n  - For an example of a session-state store provider implementation, see [Implementing a Session-State Store Provider](http://msdn.microsoft.com/library/baadfec5-c881-468a-9681-7d8796b05a66).\n  syntax:\n    content: public abstract void RemoveItem (System.Web.HttpContext context, string id, object lockId, System.Web.SessionState.SessionStateStoreData item);\n    parameters:\n    - id: context\n      type: System.Web.HttpContext\n      description: The <xref href=\"System.Web.HttpContext\"></xref> for the current request.\n    - id: id\n      type: System.String\n      description: The session identifier for the current request.\n    - id: lockId\n      type: System.Object\n      description: The lock identifier for the current request.\n    - id: item\n      type: System.Web.SessionState.SessionStateStoreData\n      description: The <xref href=\"System.Web.SessionState.SessionStateStoreData\"></xref> that represents the item to delete from the data store.\n  overload: System.Web.SessionState.SessionStateStoreProviderBase.RemoveItem*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.SessionState/SessionStateStoreProviderBase.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.SessionState.SessionStateStoreProviderBase.ResetItemTimeout(System.Web.HttpContext,System.String)\n  commentId: M:System.Web.SessionState.SessionStateStoreProviderBase.ResetItemTimeout(System.Web.HttpContext,System.String)\n  id: ResetItemTimeout(System.Web.HttpContext,System.String)\n  parent: System.Web.SessionState.SessionStateStoreProviderBase\n  langs:\n  - csharp\n  name: ResetItemTimeout(HttpContext, String)\n  nameWithType: SessionStateStoreProviderBase.ResetItemTimeout(HttpContext, String)\n  fullName: SessionStateStoreProviderBase.ResetItemTimeout(HttpContext, String)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.SessionState\n  summary: Updates the expiration date and time of an item in the session data store.\n  remarks: \"The <xref:System.Web.SessionState.SessionStateModule> object calls the <xref:System.Web.SessionState.SessionStateStoreProviderBase.ResetItemTimeout%2A> method to update the expiration date and time for a session to the current date and time plus the session <xref:System.Web.SessionState.HttpSessionState.Timeout%2A> value when either:  \\n  \\n-   the <xref:System.Web.Configuration.PagesSection.EnableSessionState%2A> attribute is `true`, or  \\n  \\n-   the request did not raise the <xref:System.Web.HttpApplication.AcquireRequestState> and <xref:System.Web.HttpApplication.ReleaseRequestState> events due to an error.  \\n  \\n If an ASP.NET page is requested and the <xref:System.Web.Configuration.PagesSection.EnableSessionState%2A> attribute is set to `false`, the <xref:System.Web.SessionState.SessionStateStoreProviderBase.ResetItemTimeout%2A> method is still called to update the expiration date and time of the data in the session data store.\"\n  example:\n  - For an example of a session-state store provider implementation, see [Implementing a Session-State Store Provider](http://msdn.microsoft.com/library/baadfec5-c881-468a-9681-7d8796b05a66).\n  syntax:\n    content: public abstract void ResetItemTimeout (System.Web.HttpContext context, string id);\n    parameters:\n    - id: context\n      type: System.Web.HttpContext\n      description: The <xref href=\"System.Web.HttpContext\"></xref> for the current request.\n    - id: id\n      type: System.String\n      description: The session identifier for the current request.\n  overload: System.Web.SessionState.SessionStateStoreProviderBase.ResetItemTimeout*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.SessionState/SessionStateStoreProviderBase.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.SessionState.SessionStateStoreProviderBase.SetAndReleaseItemExclusive(System.Web.HttpContext,System.String,System.Web.SessionState.SessionStateStoreData,System.Object,System.Boolean)\n  commentId: M:System.Web.SessionState.SessionStateStoreProviderBase.SetAndReleaseItemExclusive(System.Web.HttpContext,System.String,System.Web.SessionState.SessionStateStoreData,System.Object,System.Boolean)\n  id: SetAndReleaseItemExclusive(System.Web.HttpContext,System.String,System.Web.SessionState.SessionStateStoreData,System.Object,System.Boolean)\n  parent: System.Web.SessionState.SessionStateStoreProviderBase\n  langs:\n  - csharp\n  name: SetAndReleaseItemExclusive(HttpContext, String, SessionStateStoreData, Object, Boolean)\n  nameWithType: SessionStateStoreProviderBase.SetAndReleaseItemExclusive(HttpContext, String, SessionStateStoreData, Object, Boolean)\n  fullName: SessionStateStoreProviderBase.SetAndReleaseItemExclusive(HttpContext, String, SessionStateStoreData, Object, Boolean)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.SessionState\n  summary: Updates the session-item information in the session-state data store with values from the current request, and clears the lock on the data.\n  remarks: \"The <xref:System.Web.SessionState.SessionStateModule> object calls the <xref:System.Web.SessionState.SessionStateStoreProviderBase.SetAndReleaseItemExclusive%2A> method at the end of a request, during the <xref:System.Web.HttpApplication.ReleaseRequestState> event, to insert current session-item information into the data store or update existing session-item information in the data store with current values, to update the expiration time on the item, and to release the lock on the data. Only session data for the current application that matches the supplied session `id` and `lockId` values is updated. For more information about locking, see \\\"Locking Session Store Data\\\" in the <xref:System.Web.SessionState.SessionStateStoreProviderBase> class overview.  \\n  \\n If the session values for the current request have not been modified, the <xref:System.Web.SessionState.SessionStateStoreProviderBase.SetAndReleaseItemExclusive%2A> method is not called. Instead, the <xref:System.Web.SessionState.SessionStateStoreProviderBase.ReleaseItemExclusive%2A> method is called.  \\n  \\n If the <xref:System.Web.SessionState.HttpSessionState.Abandon%2A> method has been called, the <xref:System.Web.SessionState.SessionStateStoreProviderBase.SetAndReleaseItemExclusive%2A> method is not called. Instead, the <xref:System.Web.SessionState.SessionStateModule> object calls the <xref:System.Web.SessionState.SessionStateStoreProviderBase.RemoveItem%2A> method to delete session-item data from the data source.\"\n  example:\n  - For an example of a session-state store provider implementation, see [Implementing a Session-State Store Provider](http://msdn.microsoft.com/library/baadfec5-c881-468a-9681-7d8796b05a66).\n  syntax:\n    content: public abstract void SetAndReleaseItemExclusive (System.Web.HttpContext context, string id, System.Web.SessionState.SessionStateStoreData item, object lockId, bool newItem);\n    parameters:\n    - id: context\n      type: System.Web.HttpContext\n      description: The <xref href=\"System.Web.HttpContext\"></xref> for the current request.\n    - id: id\n      type: System.String\n      description: The session identifier for the current request.\n    - id: item\n      type: System.Web.SessionState.SessionStateStoreData\n      description: The <xref href=\"System.Web.SessionState.SessionStateStoreData\"></xref> object that contains the current session values to be stored.\n    - id: lockId\n      type: System.Object\n      description: The lock identifier for the current request.\n    - id: newItem\n      type: System.Boolean\n      description: '`true` to identify the session item as a new item; `false` to identify the session item as an existing item.'\n  overload: System.Web.SessionState.SessionStateStoreProviderBase.SetAndReleaseItemExclusive*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.SessionState/SessionStateStoreProviderBase.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\n- uid: System.Web.SessionState.SessionStateStoreProviderBase.SetItemExpireCallback(System.Web.SessionState.SessionStateItemExpireCallback)\n  commentId: M:System.Web.SessionState.SessionStateStoreProviderBase.SetItemExpireCallback(System.Web.SessionState.SessionStateItemExpireCallback)\n  id: SetItemExpireCallback(System.Web.SessionState.SessionStateItemExpireCallback)\n  parent: System.Web.SessionState.SessionStateStoreProviderBase\n  langs:\n  - csharp\n  name: SetItemExpireCallback(SessionStateItemExpireCallback)\n  nameWithType: SessionStateStoreProviderBase.SetItemExpireCallback(SessionStateItemExpireCallback)\n  fullName: SessionStateStoreProviderBase.SetItemExpireCallback(SessionStateItemExpireCallback)\n  type: Method\n  assemblies:\n  - System.Web\n  namespace: System.Web.SessionState\n  summary: Sets a reference to the <xref href=\"System.Web.SessionState.SessionStateItemExpireCallback\"></xref> delegate for the `Session_OnEnd` event defined in the Global.asax file.\n  remarks: \"The <xref:System.Web.SessionState.SessionStateModule> object calls the <xref:System.Web.SessionState.SessionStateStoreProviderBase.SetItemExpireCallback%2A> method when the module is initialized to determine whether calls to the `Session_OnEnd` event are supported by the <xref:System.Web.SessionState.SessionStateStoreProviderBase> implementation and to associate the <xref:System.Web.SessionState.SessionStateItemExpireCallback> delegate with the `Session_OnEnd` event.  \\n  \\n Custom session-state store provider implementers should use the <xref:System.Web.SessionState.SessionStateStoreProviderBase.SetItemExpireCallback%2A> method to inform the <xref:System.Web.SessionState.SessionStateModule> object whether calls to the `Session_OnEnd` event are supported and to set a local reference to the <xref:System.Web.SessionState.SessionStateItemExpireCallback> delegate supplied by the `expireCallback` parameter. The custom implementation must decide when the local <xref:System.Web.SessionState.SessionStateItemExpireCallback> delegate will be called. For example, the delegate could be called during the call to the <xref:System.Web.SessionState.SessionStateStoreProviderBase.RemoveItem%2A> method, which is called when a session is abandoned.\"\n  example:\n  - For an example of a session-state store provider implementation, see [Implementing a Session-State Store Provider](http://msdn.microsoft.com/library/baadfec5-c881-468a-9681-7d8796b05a66).\n  syntax:\n    content: public abstract bool SetItemExpireCallback (System.Web.SessionState.SessionStateItemExpireCallback expireCallback);\n    parameters:\n    - id: expireCallback\n      type: System.Web.SessionState.SessionStateItemExpireCallback\n      description: The <xref href=\"System.Web.SessionState.SessionStateItemExpireCallback\"></xref> delegate for the `Session_OnEnd` event defined in the Global.asax file.\n    return:\n      type: System.Boolean\n      description: '`true` if the session-state store provider supports calling the `Session_OnEnd` event; otherwise, `false`.'\n  overload: System.Web.SessionState.SessionStateStoreProviderBase.SetItemExpireCallback*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.SessionState/SessionStateStoreProviderBase.xml\n  ms.technology:\n  - dotnet-webforms\n  ms.author: riande\n  manager: wpickett\nreferences:\n- uid: System.Configuration.Provider.ProviderBase\n  parent: System.Configuration.Provider\n  isExternal: false\n  name: ProviderBase\n  nameWithType: ProviderBase\n  fullName: System.Configuration.Provider.ProviderBase\n- uid: System.Web.SessionState.SessionStateStoreProviderBase.#ctor\n  parent: System.Web.SessionState.SessionStateStoreProviderBase\n  isExternal: false\n  name: SessionStateStoreProviderBase()\n  nameWithType: SessionStateStoreProviderBase.SessionStateStoreProviderBase()\n  fullName: SessionStateStoreProviderBase.SessionStateStoreProviderBase()\n- uid: System.Web.SessionState.SessionStateStoreProviderBase.CreateNewStoreData(System.Web.HttpContext,System.Int32)\n  parent: System.Web.SessionState.SessionStateStoreProviderBase\n  isExternal: false\n  name: CreateNewStoreData(HttpContext, Int32)\n  nameWithType: SessionStateStoreProviderBase.CreateNewStoreData(HttpContext, Int32)\n  fullName: SessionStateStoreProviderBase.CreateNewStoreData(HttpContext, Int32)\n- uid: System.Web.SessionState.SessionStateStoreData\n  parent: System.Web.SessionState\n  isExternal: false\n  name: SessionStateStoreData\n  nameWithType: SessionStateStoreData\n  fullName: System.Web.SessionState.SessionStateStoreData\n- uid: System.Web.HttpContext\n  parent: System.Web\n  isExternal: false\n  name: HttpContext\n  nameWithType: HttpContext\n  fullName: System.Web.HttpContext\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Web.SessionState.SessionStateStoreProviderBase.CreateUninitializedItem(System.Web.HttpContext,System.String,System.Int32)\n  parent: System.Web.SessionState.SessionStateStoreProviderBase\n  isExternal: false\n  name: CreateUninitializedItem(HttpContext, String, Int32)\n  nameWithType: SessionStateStoreProviderBase.CreateUninitializedItem(HttpContext, String, Int32)\n  fullName: SessionStateStoreProviderBase.CreateUninitializedItem(HttpContext, String, Int32)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Web.SessionState.SessionStateStoreProviderBase.Dispose\n  parent: System.Web.SessionState.SessionStateStoreProviderBase\n  isExternal: false\n  name: Dispose()\n  nameWithType: SessionStateStoreProviderBase.Dispose()\n  fullName: SessionStateStoreProviderBase.Dispose()\n- uid: System.Web.SessionState.SessionStateStoreProviderBase.EndRequest(System.Web.HttpContext)\n  parent: System.Web.SessionState.SessionStateStoreProviderBase\n  isExternal: false\n  name: EndRequest(HttpContext)\n  nameWithType: SessionStateStoreProviderBase.EndRequest(HttpContext)\n  fullName: SessionStateStoreProviderBase.EndRequest(HttpContext)\n- uid: System.Web.SessionState.SessionStateStoreProviderBase.GetItem(System.Web.HttpContext,System.String,System.Boolean@,System.TimeSpan@,System.Object@,System.Web.SessionState.SessionStateActions@)\n  parent: System.Web.SessionState.SessionStateStoreProviderBase\n  isExternal: false\n  name: GetItem(HttpContext, String, Boolean, TimeSpan, Object, SessionStateActions)\n  nameWithType: SessionStateStoreProviderBase.GetItem(HttpContext, String, Boolean, TimeSpan, Object, SessionStateActions)\n  fullName: SessionStateStoreProviderBase.GetItem(HttpContext, String, Boolean, TimeSpan, Object, SessionStateActions)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.TimeSpan\n  parent: System\n  isExternal: false\n  name: TimeSpan\n  nameWithType: TimeSpan\n  fullName: System.TimeSpan\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Web.SessionState.SessionStateActions\n  parent: System.Web.SessionState\n  isExternal: false\n  name: SessionStateActions\n  nameWithType: SessionStateActions\n  fullName: System.Web.SessionState.SessionStateActions\n- uid: System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive(System.Web.HttpContext,System.String,System.Boolean@,System.TimeSpan@,System.Object@,System.Web.SessionState.SessionStateActions@)\n  parent: System.Web.SessionState.SessionStateStoreProviderBase\n  isExternal: false\n  name: GetItemExclusive(HttpContext, String, Boolean, TimeSpan, Object, SessionStateActions)\n  nameWithType: SessionStateStoreProviderBase.GetItemExclusive(HttpContext, String, Boolean, TimeSpan, Object, SessionStateActions)\n  fullName: SessionStateStoreProviderBase.GetItemExclusive(HttpContext, String, Boolean, TimeSpan, Object, SessionStateActions)\n- uid: System.Web.SessionState.SessionStateStoreProviderBase.InitializeRequest(System.Web.HttpContext)\n  parent: System.Web.SessionState.SessionStateStoreProviderBase\n  isExternal: false\n  name: InitializeRequest(HttpContext)\n  nameWithType: SessionStateStoreProviderBase.InitializeRequest(HttpContext)\n  fullName: SessionStateStoreProviderBase.InitializeRequest(HttpContext)\n- uid: System.Web.SessionState.SessionStateStoreProviderBase.ReleaseItemExclusive(System.Web.HttpContext,System.String,System.Object)\n  parent: System.Web.SessionState.SessionStateStoreProviderBase\n  isExternal: false\n  name: ReleaseItemExclusive(HttpContext, String, Object)\n  nameWithType: SessionStateStoreProviderBase.ReleaseItemExclusive(HttpContext, String, Object)\n  fullName: SessionStateStoreProviderBase.ReleaseItemExclusive(HttpContext, String, Object)\n- uid: System.Web.SessionState.SessionStateStoreProviderBase.RemoveItem(System.Web.HttpContext,System.String,System.Object,System.Web.SessionState.SessionStateStoreData)\n  parent: System.Web.SessionState.SessionStateStoreProviderBase\n  isExternal: false\n  name: RemoveItem(HttpContext, String, Object, SessionStateStoreData)\n  nameWithType: SessionStateStoreProviderBase.RemoveItem(HttpContext, String, Object, SessionStateStoreData)\n  fullName: SessionStateStoreProviderBase.RemoveItem(HttpContext, String, Object, SessionStateStoreData)\n- uid: System.Web.SessionState.SessionStateStoreProviderBase.ResetItemTimeout(System.Web.HttpContext,System.String)\n  parent: System.Web.SessionState.SessionStateStoreProviderBase\n  isExternal: false\n  name: ResetItemTimeout(HttpContext, String)\n  nameWithType: SessionStateStoreProviderBase.ResetItemTimeout(HttpContext, String)\n  fullName: SessionStateStoreProviderBase.ResetItemTimeout(HttpContext, String)\n- uid: System.Web.SessionState.SessionStateStoreProviderBase.SetAndReleaseItemExclusive(System.Web.HttpContext,System.String,System.Web.SessionState.SessionStateStoreData,System.Object,System.Boolean)\n  parent: System.Web.SessionState.SessionStateStoreProviderBase\n  isExternal: false\n  name: SetAndReleaseItemExclusive(HttpContext, String, SessionStateStoreData, Object, Boolean)\n  nameWithType: SessionStateStoreProviderBase.SetAndReleaseItemExclusive(HttpContext, String, SessionStateStoreData, Object, Boolean)\n  fullName: SessionStateStoreProviderBase.SetAndReleaseItemExclusive(HttpContext, String, SessionStateStoreData, Object, Boolean)\n- uid: System.Web.SessionState.SessionStateStoreProviderBase.SetItemExpireCallback(System.Web.SessionState.SessionStateItemExpireCallback)\n  parent: System.Web.SessionState.SessionStateStoreProviderBase\n  isExternal: false\n  name: SetItemExpireCallback(SessionStateItemExpireCallback)\n  nameWithType: SessionStateStoreProviderBase.SetItemExpireCallback(SessionStateItemExpireCallback)\n  fullName: SessionStateStoreProviderBase.SetItemExpireCallback(SessionStateItemExpireCallback)\n- uid: System.Web.SessionState.SessionStateItemExpireCallback\n  parent: System.Web.SessionState\n  isExternal: false\n  name: SessionStateItemExpireCallback\n  nameWithType: SessionStateItemExpireCallback\n  fullName: System.Web.SessionState.SessionStateItemExpireCallback\n- uid: System.Web.SessionState.SessionStateStoreProviderBase.#ctor*\n  parent: System.Web.SessionState.SessionStateStoreProviderBase\n  isExternal: false\n  name: SessionStateStoreProviderBase\n  nameWithType: SessionStateStoreProviderBase.SessionStateStoreProviderBase\n  fullName: SessionStateStoreProviderBase.SessionStateStoreProviderBase\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.SessionState/SessionStateStoreProviderBase.xml\n- uid: System.Web.SessionState.SessionStateStoreProviderBase.CreateNewStoreData*\n  parent: System.Web.SessionState.SessionStateStoreProviderBase\n  isExternal: false\n  name: CreateNewStoreData\n  nameWithType: SessionStateStoreProviderBase.CreateNewStoreData\n  fullName: SessionStateStoreProviderBase.CreateNewStoreData\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.SessionState/SessionStateStoreProviderBase.xml\n- uid: System.Web.SessionState.SessionStateStoreProviderBase.CreateUninitializedItem*\n  parent: System.Web.SessionState.SessionStateStoreProviderBase\n  isExternal: false\n  name: CreateUninitializedItem\n  nameWithType: SessionStateStoreProviderBase.CreateUninitializedItem\n  fullName: SessionStateStoreProviderBase.CreateUninitializedItem\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.SessionState/SessionStateStoreProviderBase.xml\n- uid: System.Web.SessionState.SessionStateStoreProviderBase.Dispose*\n  parent: System.Web.SessionState.SessionStateStoreProviderBase\n  isExternal: false\n  name: Dispose\n  nameWithType: SessionStateStoreProviderBase.Dispose\n  fullName: SessionStateStoreProviderBase.Dispose\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.SessionState/SessionStateStoreProviderBase.xml\n- uid: System.Web.SessionState.SessionStateStoreProviderBase.EndRequest*\n  parent: System.Web.SessionState.SessionStateStoreProviderBase\n  isExternal: false\n  name: EndRequest\n  nameWithType: SessionStateStoreProviderBase.EndRequest\n  fullName: SessionStateStoreProviderBase.EndRequest\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.SessionState/SessionStateStoreProviderBase.xml\n- uid: System.Web.SessionState.SessionStateStoreProviderBase.GetItem*\n  parent: System.Web.SessionState.SessionStateStoreProviderBase\n  isExternal: false\n  name: GetItem\n  nameWithType: SessionStateStoreProviderBase.GetItem\n  fullName: SessionStateStoreProviderBase.GetItem\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.SessionState/SessionStateStoreProviderBase.xml\n- uid: System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive*\n  parent: System.Web.SessionState.SessionStateStoreProviderBase\n  isExternal: false\n  name: GetItemExclusive\n  nameWithType: SessionStateStoreProviderBase.GetItemExclusive\n  fullName: SessionStateStoreProviderBase.GetItemExclusive\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.SessionState/SessionStateStoreProviderBase.xml\n- uid: System.Web.SessionState.SessionStateStoreProviderBase.InitializeRequest*\n  parent: System.Web.SessionState.SessionStateStoreProviderBase\n  isExternal: false\n  name: InitializeRequest\n  nameWithType: SessionStateStoreProviderBase.InitializeRequest\n  fullName: SessionStateStoreProviderBase.InitializeRequest\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.SessionState/SessionStateStoreProviderBase.xml\n- uid: System.Web.SessionState.SessionStateStoreProviderBase.ReleaseItemExclusive*\n  parent: System.Web.SessionState.SessionStateStoreProviderBase\n  isExternal: false\n  name: ReleaseItemExclusive\n  nameWithType: SessionStateStoreProviderBase.ReleaseItemExclusive\n  fullName: SessionStateStoreProviderBase.ReleaseItemExclusive\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.SessionState/SessionStateStoreProviderBase.xml\n- uid: System.Web.SessionState.SessionStateStoreProviderBase.RemoveItem*\n  parent: System.Web.SessionState.SessionStateStoreProviderBase\n  isExternal: false\n  name: RemoveItem\n  nameWithType: SessionStateStoreProviderBase.RemoveItem\n  fullName: SessionStateStoreProviderBase.RemoveItem\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.SessionState/SessionStateStoreProviderBase.xml\n- uid: System.Web.SessionState.SessionStateStoreProviderBase.ResetItemTimeout*\n  parent: System.Web.SessionState.SessionStateStoreProviderBase\n  isExternal: false\n  name: ResetItemTimeout\n  nameWithType: SessionStateStoreProviderBase.ResetItemTimeout\n  fullName: SessionStateStoreProviderBase.ResetItemTimeout\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.SessionState/SessionStateStoreProviderBase.xml\n- uid: System.Web.SessionState.SessionStateStoreProviderBase.SetAndReleaseItemExclusive*\n  parent: System.Web.SessionState.SessionStateStoreProviderBase\n  isExternal: false\n  name: SetAndReleaseItemExclusive\n  nameWithType: SessionStateStoreProviderBase.SetAndReleaseItemExclusive\n  fullName: SessionStateStoreProviderBase.SetAndReleaseItemExclusive\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.SessionState/SessionStateStoreProviderBase.xml\n- uid: System.Web.SessionState.SessionStateStoreProviderBase.SetItemExpireCallback*\n  parent: System.Web.SessionState.SessionStateStoreProviderBase\n  isExternal: false\n  name: SetItemExpireCallback\n  nameWithType: SessionStateStoreProviderBase.SetItemExpireCallback\n  fullName: SessionStateStoreProviderBase.SetItemExpireCallback\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.SessionState/SessionStateStoreProviderBase.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.Configuration.Provider.ProviderBase.Description\n  parent: System.Configuration.Provider.ProviderBase\n  isExternal: false\n  name: Description\n  nameWithType: ProviderBase.Description\n  fullName: ProviderBase.Description\n- uid: System.Configuration.Provider.ProviderBase.Initialize(System.String,System.Collections.Specialized.NameValueCollection)\n  parent: System.Configuration.Provider.ProviderBase\n  isExternal: false\n  name: Initialize(String, NameValueCollection)\n  nameWithType: ProviderBase.Initialize(String, NameValueCollection)\n  fullName: ProviderBase.Initialize(String, NameValueCollection)\n- uid: System.Configuration.Provider.ProviderBase.Name\n  parent: System.Configuration.Provider.ProviderBase\n  isExternal: false\n  name: Name\n  nameWithType: ProviderBase.Name\n  fullName: ProviderBase.Name\n"}