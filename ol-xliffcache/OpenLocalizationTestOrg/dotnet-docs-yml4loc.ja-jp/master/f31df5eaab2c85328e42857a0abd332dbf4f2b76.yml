### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.FaultContractAttribute
  commentId: T:System.ServiceModel.FaultContractAttribute
  id: FaultContractAttribute
  children:
  - System.ServiceModel.FaultContractAttribute.#ctor(System.Type)
  - System.ServiceModel.FaultContractAttribute.Action
  - System.ServiceModel.FaultContractAttribute.DetailType
  - System.ServiceModel.FaultContractAttribute.HasProtectionLevel
  - System.ServiceModel.FaultContractAttribute.Name
  - System.ServiceModel.FaultContractAttribute.Namespace
  - System.ServiceModel.FaultContractAttribute.ProtectionLevel
  langs:
  - csharp
  name: FaultContractAttribute
  nameWithType: FaultContractAttribute
  fullName: System.ServiceModel.FaultContractAttribute
  type: Class
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: Specifies one or more SOAP faults that are returned when a service operation encounters processing errors.
  remarks: "Mark an operation with the <xref:System.ServiceModel.FaultContractAttribute> attribute to declare one or more specific exception conditions that are added to the Web Service Description Language (WSDL) description of the service operation as explicit SOAP fault messages returned by the operation.  \n  \n In all managed applications, processing errors are represented by <xref:System.Exception> objects. In SOAP-based applications such as [!INCLUDE[indigo1](~/includes/indigo1-md.md)] applications, service methods communicate processing error information using SOAP fault messages. Because [!INCLUDE[indigo2](~/includes/indigo2-md.md)] applications execute under both types of error systems, any managed exception information that must be sent to the client must be converted from exceptions into SOAP faults. You can use the default service exception behaviors, or you can explicitly control whether -- and how -- exceptions are mapped to fault messages. For an overview of exceptions and SOAP faults in [!INCLUDE[indigo2](~/includes/indigo2-md.md)] applications, see [Specifying and Handling Faults in Contracts and Services](~/docs/framework/wcf/specifying-and-handling-faults-in-contracts-and-services.md).  \n  \n It is recommended that service operations use the <xref:System.ServiceModel.FaultContractAttribute> to formally specify all SOAP faults that a client can expect to receive in the normal course of an operation. It is also recommended that only that information a client must know is returned in a SOAP fault to minimize information disclosure.  \n  \n-   The <xref:System.ServiceModel.FaultContractAttribute.Action%2A> property controls the action of the fault message.  \n  \n-   The <xref:System.ServiceModel.FaultContractAttribute.DetailType%2A> property gets the type of the detail object serialized in the fault message.  \n  \n-   The <xref:System.ServiceModel.FaultContractAttribute.Name%2A> and <xref:System.ServiceModel.FaultContractAttribute.Namespace%2A> properties control the name and namespace, respectively, of the fault message.  \n  \n-   The <xref:System.ServiceModel.FaultContractAttribute.HasProtectionLevel%2A> indicates whether the fault message has a protection level specified, and if so, the <xref:System.ServiceModel.FaultContractAttribute.ProtectionLevel%2A> property controls that level of protection.  \n  \n> [!CAUTION]\n>  If a fault message carries information that is sensitive or can lead to security problems, it is strongly recommended that the <xref:System.ServiceModel.FaultContractAttribute.ProtectionLevel%2A> property be set.  \n  \n-   If you set the <xref:System.ServiceModel.FaultContractAttribute.ProtectionLevel%2A> explicitly to either <xref:System.Net.Security.ProtectionLevel?displayProperty=fullName> or <xref:System.Net.Security.ProtectionLevel?displayProperty=fullName>, then you must use a binding with security enabled using the <xref:System.ServiceModel.SecurityMode?displayProperty=fullName> property on the binding or an exception is thrown.  \n  \n-   If you select a binding that enables security and you do not set the <xref:System.ServiceModel.FaultContractAttribute.ProtectionLevel%2A> property anywhere on the contract, all application data will be encrypted and signed.  \n  \n-   If you select a binding that does not have security enabled (for example, the <xref:System.ServiceModel.BasicHttpBinding?displayProperty=fullName> has security disabled by default), and the <xref:System.ServiceModel.FaultContractAttribute.ProtectionLevel%2A> is not explicitly set, then none of the application data will be protected.  \n  \n For many scenarios setting <xref:System.ServiceModel.FaultContractAttribute.ProtectionLevel%2A> to <xref:System.Net.Security.ProtectionLevel.EncryptAndSign> for fault messages is sufficient. For more details, see [Understanding Protection Level](~/docs/framework/wcf/understanding-protection-level.md).  \n  \n To return a specified fault from an operation marked with <xref:System.ServiceModel.FaultContractAttribute>, throw a <xref:System.ServiceModel.FaultException%601> (where the type parameter is the serializable error information) when the managed exception occurs during the operation. [!INCLUDE[indigo2](~/includes/indigo2-md.md)] client applications surface the SOAP fault as the same type as was thrown in the client implementation -- that is, as a <xref:System.ServiceModel.FaultException%601> (where the typeparameter is the serializable error information). The <xref:System.ServiceModel.FaultContractAttribute> can be used only to specify SOAP faults for two-way service operations and for asynchronous operation pairs; one-way operations do not support SOAP faults and therefore do not support <xref:System.ServiceModel.FaultContractAttribute>.  \n  \n> [!NOTE]\n>  You can use any serializable type to convey error information. The only restriction in this version of [!INCLUDE[indigo2](~/includes/indigo2-md.md)] is that types specified in a <xref:System.ServiceModel.FaultContractAttribute> must be serializable by the <xref:System.Runtime.Serialization.DataContractSerializer?displayProperty=fullName>. For the serialization support the <xref:System.Runtime.Serialization.DataContractSerializer> provides, see [Data Contract Serializer](~/docs/framework/wcf/feature-details/data-contract-serializer.md).  \n  \n For example, to specify that clients can expect a SOAP fault that contains an <xref:System.Int32>, place that type parameter in the <xref:System.ServiceModel.FaultContractAttribute> on your service method.  \n  \n> [!NOTE]\n>  The following code examples do not set the <xref:System.ServiceModel.FaultContractAttribute.ProtectionLevel%2A>, <xref:System.ServiceModel.FaultContractAttribute.Name%2A>, or <xref:System.ServiceModel.FaultContractAttribute.Namespace%2A> properties.  \n  \n [!code-csharp[C_FCA#1](~/samples/snippets/csharp/VS_Snippets_CFX/c_fca/cs/fcademo.cs#1)]\n [!code-vb[C_FCA#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/c_fca/vb/fcademo.vb#1)]  \n  \n Then, in your service method, throw a new <xref:System.ServiceModel.FaultException%601> where the type parameter is the type that contains the error information (in the above case, a <xref:System.Int32>). For example:  \n  \n [!code-csharp[C_FCA#2](~/samples/snippets/csharp/VS_Snippets_CFX/c_fca/cs/fcademo.cs#2)]\n [!code-vb[C_FCA#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/c_fca/vb/fcademo.vb#2)]  \n  \n The preceding example is very basic; almost any information can be passed using an <xref:System.Int32?displayProperty=fullName> code, so this detail type is not the most useful. Typically, [!INCLUDE[indigo2](~/includes/indigo2-md.md)] applications specify SOAP faults with detail types specific to the error information requirements of the client. For a more complete example, see the Example section.  \n  \n> [!NOTE]\n>  If you specify a <xref:System.ServiceModel.FaultException%601> where the type parameter is a <xref:System.String?displayProperty=fullName>, the string value is assigned to the Detail property in the client application; clients cannot retrieve that string by calling the <xref:System.ServiceModel.FaultException%601.ToString%2A?displayProperty=fullName> method. To have the string value returned when the client application calls <xref:System.Exception.ToString%2A?displayProperty=fullName>, throw a <xref:System.ServiceModel.FaultException?displayProperty=fullName> exception inside the operation and pass the string to the constructor.  \n  \n To explicitly control the behavior of the application when an exception or <xref:System.ServiceModel.FaultException%601> is thrown, implement the <xref:System.ServiceModel.Dispatcher.IErrorHandler?displayProperty=fullName> interface on an <xref:System.ServiceModel.Description.IServiceBehavior?displayProperty=fullName>, <xref:System.ServiceModel.Description.IContractBehavior?displayProperty=fullName> or <xref:System.ServiceModel.Description.IEndpointBehavior?displayProperty=fullName> and assign it to the <xref:System.ServiceModel.Dispatcher.ChannelDispatcher.ErrorHandlers%2A?displayProperty=fullName> property. <xref:System.ServiceModel.Dispatcher.IErrorHandler>enables you to explicitly control the SOAP fault that is generated and whether to send it back to the client.  \n  \n To facilitate debugging, set the <xref:System.ServiceModel.ServiceBehaviorAttribute.IncludeExceptionDetailInFaults%2A?displayProperty=fullName> to `true` in code or you can use the <xref:System.ServiceModel.Description.ServiceDebugBehavior.IncludeExceptionDetailInFaults%2A?displayProperty=fullName> in an application configuration file. When enabled, the service automatically returns exception information to the caller. These faults appear to the client as <xref:System.ServiceModel.FaultException> exceptions.  \n  \n> [!IMPORTANT]\n>  Because managed exceptions can expose internal application information, setting <xref:System.ServiceModel.ServiceBehaviorAttribute.IncludeExceptionDetailInFaults%2A?displayProperty=fullName> or <xref:System.ServiceModel.Description.ServiceDebugBehavior.IncludeExceptionDetailInFaults%2A?displayProperty=fullName> to `true` can permit [!INCLUDE[indigo2](~/includes/indigo2-md.md)] clients to obtain information about internal service operation exceptions, including personally identifiable or other sensitive information.  \n>   \n>  Therefore, setting <xref:System.ServiceModel.ServiceBehaviorAttribute.IncludeExceptionDetailInFaults%2A?displayProperty=fullName> or <xref:System.ServiceModel.Description.ServiceDebugBehavior.IncludeExceptionDetailInFaults%2A?displayProperty=fullName> to `true` is only recommended as a way of temporarily debugging a service application. In addition, the WSDL for a method that returns unhandled managed exceptions in this way does not contain the contract for the <xref:System.ServiceModel.FaultException%601> of type <xref:System.String>. Clients must expect the possibility of an unknown SOAP fault (returned to [!INCLUDE[indigo2](~/includes/indigo2-md.md)] clients as <xref:System.ServiceModel.FaultException?displayProperty=fullName> objects) to obtain the debugging information properly."
  example:
  - "The following code example shows the use of <xref:System.ServiceModel.FaultContractAttribute> to specify that the `SampleMethod` operation can return a SOAP fault with the detail type of `GreetingFault`.  \n  \n [!code-csharp[FaultContractAttribute#1](~/samples/snippets/csharp/VS_Snippets_CFX/faultcontractattribute/cs/services.cs#1)]\n [!code-vb[FaultContractAttribute#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/faultcontractattribute/vb/services.vb#1)]  \n  \n The following code example shows that [!INCLUDE[indigo2](~/includes/indigo2-md.md)] clients of `ISampleService` experience this SOAP fault as a <xref:System.ServiceModel.FaultException%601> of type `GreetingFault`.  \n  \n [!code-csharp[FaultContractAttribute#3](~/samples/snippets/csharp/VS_Snippets_CFX/faultcontractattribute/cs/client.cs#3)]\n [!code-vb[FaultContractAttribute#3](~/samples/snippets/visualbasic/VS_Snippets_CFX/faultcontractattribute/vb/client.vb#3)]"
  syntax:
    content: >-
      [System.AttributeUsage(System.AttributeTargets.Method, AllowMultiple=true, Inherited=false)]

      public sealed class FaultContractAttribute : Attribute
  inheritance:
  - System.Object
  - System.Attribute
  implements: []
  inheritedMembers:
  - System.Attribute.Equals(System.Object)
  - System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type)
  - System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type,System.Boolean)
  - System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)
  - System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)
  - System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type)
  - System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type,System.Boolean)
  - System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type)
  - System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type,System.Boolean)
  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly)
  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Boolean)
  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type)
  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type,System.Boolean)
  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo)
  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)
  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)
  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)
  - System.Attribute.GetCustomAttributes(System.Reflection.Module)
  - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Boolean)
  - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type)
  - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type,System.Boolean)
  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo)
  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Boolean)
  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type)
  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type,System.Boolean)
  - System.Attribute.GetHashCode
  - System.Attribute.IsDefaultAttribute
  - System.Attribute.IsDefined(System.Reflection.Assembly,System.Type)
  - System.Attribute.IsDefined(System.Reflection.Assembly,System.Type,System.Boolean)
  - System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type)
  - System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)
  - System.Attribute.IsDefined(System.Reflection.Module,System.Type)
  - System.Attribute.IsDefined(System.Reflection.Module,System.Type,System.Boolean)
  - System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type)
  - System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type,System.Boolean)
  - System.Attribute.Match(System.Object)
  - System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)
  - System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)
  - System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)
  - System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
  - System.Attribute.TypeId
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  attributes:
  - type: System.AttributeUsageAttribute
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/FaultContractAttribute.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.ServiceModel.FaultContractAttribute.#ctor(System.Type)
  commentId: M:System.ServiceModel.FaultContractAttribute.#ctor(System.Type)
  id: '#ctor(System.Type)'
  parent: System.ServiceModel.FaultContractAttribute
  langs:
  - csharp
  name: FaultContractAttribute(Type)
  nameWithType: FaultContractAttribute.FaultContractAttribute(Type)
  fullName: FaultContractAttribute.FaultContractAttribute(Type)
  type: Constructor
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: Initializes a new instance of the <xref href="System.ServiceModel.FaultContractAttribute"></xref> class.
  remarks: The constructor is typically executed by applying the attribute to a service method and specifying a type as the argument in the attribute.
  example:
  - "The following code example shows the use of <xref:System.ServiceModel.FaultContractAttribute> to specify that the `SampleMethod` operation can return a SOAP fault with the detail type of `GreetingFault`.  \n  \n [!code-csharp[FaultContractAttribute#1](~/samples/snippets/csharp/VS_Snippets_CFX/faultcontractattribute/cs/services.cs#1)]\n [!code-vb[FaultContractAttribute#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/faultcontractattribute/vb/services.vb#1)]"
  syntax:
    content: public FaultContractAttribute (Type detailType);
    parameters:
    - id: detailType
      type: System.Type
      description: The serializable type that contains error information for the caller.
  overload: System.ServiceModel.FaultContractAttribute.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: The <code>detailType</code> argument is `null`.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/FaultContractAttribute.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.ServiceModel.FaultContractAttribute.Action
  commentId: P:System.ServiceModel.FaultContractAttribute.Action
  id: Action
  parent: System.ServiceModel.FaultContractAttribute
  langs:
  - csharp
  name: Action
  nameWithType: FaultContractAttribute.Action
  fullName: FaultContractAttribute.Action
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: Gets or sets the action of the SOAP fault message that is specified as part of the operation contract.
  remarks: Use to control the action of the SOAP fault message.
  syntax:
    content: public string Action { get; set; }
    return:
      type: System.String
      description: The value of the action for the SOAP fault message.
  overload: System.ServiceModel.FaultContractAttribute.Action*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/FaultContractAttribute.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.ServiceModel.FaultContractAttribute.DetailType
  commentId: P:System.ServiceModel.FaultContractAttribute.DetailType
  id: DetailType
  parent: System.ServiceModel.FaultContractAttribute
  langs:
  - csharp
  name: DetailType
  nameWithType: FaultContractAttribute.DetailType
  fullName: FaultContractAttribute.DetailType
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: Gets the type of a serializable object that contains error information.
  remarks: ''
  example:
  - "The following code example shows the use of <xref:System.ServiceModel.FaultContractAttribute> to specify that the `SampleMethod` operation can return a SOAP fault with the detail type of `GreetingFault`.  \n  \n [!code-csharp[FaultContractAttribute#1](~/samples/snippets/csharp/VS_Snippets_CFX/faultcontractattribute/cs/services.cs#1)]\n [!code-vb[FaultContractAttribute#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/faultcontractattribute/vb/services.vb#1)]"
  syntax:
    content: public Type DetailType { get; }
    return:
      type: System.Type
      description: The type that represents the serializable error class.
  overload: System.ServiceModel.FaultContractAttribute.DetailType*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/FaultContractAttribute.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.ServiceModel.FaultContractAttribute.HasProtectionLevel
  commentId: P:System.ServiceModel.FaultContractAttribute.HasProtectionLevel
  id: HasProtectionLevel
  parent: System.ServiceModel.FaultContractAttribute
  langs:
  - csharp
  name: HasProtectionLevel
  nameWithType: FaultContractAttribute.HasProtectionLevel
  fullName: FaultContractAttribute.HasProtectionLevel
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: Gets a value that indicates whether the SOAP fault message has a protection level assigned.
  remarks: Use the <xref:System.ServiceModel.FaultContractAttribute.HasProtectionLevel%2A> property to specify whether the SOAP fault message must be encrypted, signed, or both. See the <xref:System.ServiceModel.FaultContractAttribute.ProtectionLevel%2A> property for details.
  syntax:
    content: public bool HasProtectionLevel { get; }
    return:
      type: System.Boolean
      description: '`true` if the fault message has a protection level; otherwise, `false`. The default is `false`.'
  overload: System.ServiceModel.FaultContractAttribute.HasProtectionLevel*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/FaultContractAttribute.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.ServiceModel.FaultContractAttribute.Name
  commentId: P:System.ServiceModel.FaultContractAttribute.Name
  id: Name
  parent: System.ServiceModel.FaultContractAttribute
  langs:
  - csharp
  name: Name
  nameWithType: FaultContractAttribute.Name
  fullName: FaultContractAttribute.Name
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: Gets or sets the name of the fault message in Web Services Description Language (WSDL).
  syntax:
    content: public string Name { get; set; }
    return:
      type: System.String
      description: The fault message name. The default is the name of the type used as the fault detail.
  overload: System.ServiceModel.FaultContractAttribute.Name*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/FaultContractAttribute.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.ServiceModel.FaultContractAttribute.Namespace
  commentId: P:System.ServiceModel.FaultContractAttribute.Namespace
  id: Namespace
  parent: System.ServiceModel.FaultContractAttribute
  langs:
  - csharp
  name: Namespace
  nameWithType: FaultContractAttribute.Namespace
  fullName: FaultContractAttribute.Namespace
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: Gets or sets the namespace of the SOAP fault.
  syntax:
    content: public string Namespace { get; set; }
    return:
      type: System.String
      description: The namespace of the SOAP fault.
  overload: System.ServiceModel.FaultContractAttribute.Namespace*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/FaultContractAttribute.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
- uid: System.ServiceModel.FaultContractAttribute.ProtectionLevel
  commentId: P:System.ServiceModel.FaultContractAttribute.ProtectionLevel
  id: ProtectionLevel
  parent: System.ServiceModel.FaultContractAttribute
  langs:
  - csharp
  name: ProtectionLevel
  nameWithType: FaultContractAttribute.ProtectionLevel
  fullName: FaultContractAttribute.ProtectionLevel
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel
  summary: Specifies the level of protection the SOAP fault requires from the binding.
  remarks: "Use the <xref:System.ServiceModel.Description.FaultDescription.ProtectionLevel%2A?displayProperty=fullName> property to specify the degree to which the binding must encrypt, sign, or both when sending the SOAP fault. It is strongly recommended that an operation's fault explicitly decide the security protection level requirements on the contract. The default protection level is <xref:System.Net.Security.ProtectionLevel?displayProperty=fullName>, meaning that the SOAP fault message you are defining does not require encryption or a digital signature (although your binding may provide this support if it is configured to do so). If a fault message carries information that is sensitive or can lead to security problems, it is strongly recommended that the <xref:System.ServiceModel.FaultContractAttribute.ProtectionLevel%2A> property be set to <xref:System.Net.Security.ProtectionLevel?displayProperty=fullName>. For more about security issues, see [Understanding Protection Level](~/docs/framework/wcf/understanding-protection-level.md).  \n  \n The protection behavior at runtime is the combination of the protection-level properties that have a hierarchical structure. Setting the outermost value establishes the default setting for all narrower scopes unless a different value for a narrower scope is explicitly set. In this case, the outer value remains the default for all narrower scopes with the exception of that specifically set.  \n  \n For example, if <xref:System.ServiceModel.ServiceContractAttribute.ProtectionLevel%2A?displayProperty=fullName> is set to <xref:System.Net.Security.ProtectionLevel?displayProperty=fullName> and no other narrower scopes have protection level settings, all messages in an operation contract are encrypted and signed, including fault messages. If, however, one of those operations has the <xref:System.ServiceModel.OperationContractAttribute> set to <xref:System.Net.Security.ProtectionLevel?displayProperty=fullName>, then the messages for that operation are signed but all other messages in the contract are encrypted and signed, including fault messages.  \n  \n The scopes at which these values are set are:  \n  \n <xref:System.ServiceModel.ServiceContractAttribute.ProtectionLevel%2A?displayProperty=fullName>  \n  \n <xref:System.ServiceModel.OperationContractAttribute.ProtectionLevel%2A?displayProperty=fullName>  \n  \n <xref:System.ServiceModel.FaultContractAttribute.ProtectionLevel%2A?displayProperty=fullName>  \n  \n <xref:System.ServiceModel.MessageContractAttribute.ProtectionLevel%2A?displayProperty=fullName>  \n  \n The <xref:System.ServiceModel.MessageContractMemberAttribute.ProtectionLevel%2A?displayProperty=fullName> property on <xref:System.ServiceModel.MessageHeaderAttribute?displayProperty=fullName>.  \n  \n The <xref:System.ServiceModel.MessageContractMemberAttribute.ProtectionLevel%2A?displayProperty=fullName> property on <xref:System.ServiceModel.MessageBodyMemberAttribute?displayProperty=fullName>.  \n  \n When there is no protection level explicitly specified on the contract and the underlying binding supports security (whether at the transport or message level), the effective protection level for the whole contract is <xref:System.Net.Security.ProtectionLevel?displayProperty=fullName>. If the binding does not support security (such as <xref:System.ServiceModel.BasicHttpBinding>), the effective <xref:System.Net.Security.ProtectionLevel?displayProperty=fullName> is <xref:System.Net.Security.ProtectionLevel?displayProperty=fullName> for the whole contract. The result is that depending upon the endpoint binding, clients can require different message or transport level security protection even when the contract specifies <xref:System.Net.Security.ProtectionLevel?displayProperty=fullName>."
  syntax:
    content: public System.Net.Security.ProtectionLevel ProtectionLevel { get; set; }
    return:
      type: System.Net.Security.ProtectionLevel
      description: One of the <xref href="System.Net.Security.ProtectionLevel"></xref> values. The default is <xref href="System.Net.Security.ProtectionLevel.None"></xref>.
  overload: System.ServiceModel.FaultContractAttribute.ProtectionLevel*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/FaultContractAttribute.xml
  ms.technology:
  - dotnet-standard
  author: Erikre
  ms.author: erikre
  manager: erikre
references:
- uid: System.Attribute
  parent: System
  isExternal: false
  name: Attribute
  nameWithType: Attribute
  fullName: System.Attribute
- uid: System.ArgumentNullException
  parent: System
  isExternal: false
  name: ArgumentNullException
  nameWithType: ArgumentNullException
  fullName: System.ArgumentNullException
- uid: System.ServiceModel.FaultContractAttribute.#ctor(System.Type)
  parent: System.ServiceModel.FaultContractAttribute
  isExternal: false
  name: FaultContractAttribute(Type)
  nameWithType: FaultContractAttribute.FaultContractAttribute(Type)
  fullName: FaultContractAttribute.FaultContractAttribute(Type)
- uid: System.Type
  parent: System
  isExternal: false
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.ServiceModel.FaultContractAttribute.Action
  parent: System.ServiceModel.FaultContractAttribute
  isExternal: false
  name: Action
  nameWithType: FaultContractAttribute.Action
  fullName: FaultContractAttribute.Action
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.ServiceModel.FaultContractAttribute.DetailType
  parent: System.ServiceModel.FaultContractAttribute
  isExternal: false
  name: DetailType
  nameWithType: FaultContractAttribute.DetailType
  fullName: FaultContractAttribute.DetailType
- uid: System.ServiceModel.FaultContractAttribute.HasProtectionLevel
  parent: System.ServiceModel.FaultContractAttribute
  isExternal: false
  name: HasProtectionLevel
  nameWithType: FaultContractAttribute.HasProtectionLevel
  fullName: FaultContractAttribute.HasProtectionLevel
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ServiceModel.FaultContractAttribute.Name
  parent: System.ServiceModel.FaultContractAttribute
  isExternal: false
  name: Name
  nameWithType: FaultContractAttribute.Name
  fullName: FaultContractAttribute.Name
- uid: System.ServiceModel.FaultContractAttribute.Namespace
  parent: System.ServiceModel.FaultContractAttribute
  isExternal: false
  name: Namespace
  nameWithType: FaultContractAttribute.Namespace
  fullName: FaultContractAttribute.Namespace
- uid: System.ServiceModel.FaultContractAttribute.ProtectionLevel
  parent: System.ServiceModel.FaultContractAttribute
  isExternal: false
  name: ProtectionLevel
  nameWithType: FaultContractAttribute.ProtectionLevel
  fullName: FaultContractAttribute.ProtectionLevel
- uid: System.Net.Security.ProtectionLevel
  parent: System.Net.Security
  isExternal: false
  name: ProtectionLevel
  nameWithType: ProtectionLevel
  fullName: System.Net.Security.ProtectionLevel
- uid: System.ServiceModel.FaultContractAttribute.#ctor*
  parent: System.ServiceModel.FaultContractAttribute
  isExternal: false
  name: FaultContractAttribute
  nameWithType: FaultContractAttribute.FaultContractAttribute
  fullName: FaultContractAttribute.FaultContractAttribute
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/FaultContractAttribute.xml
- uid: System.ServiceModel.FaultContractAttribute.Action*
  parent: System.ServiceModel.FaultContractAttribute
  isExternal: false
  name: Action
  nameWithType: FaultContractAttribute.Action
  fullName: FaultContractAttribute.Action
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/FaultContractAttribute.xml
- uid: System.ServiceModel.FaultContractAttribute.DetailType*
  parent: System.ServiceModel.FaultContractAttribute
  isExternal: false
  name: DetailType
  nameWithType: FaultContractAttribute.DetailType
  fullName: FaultContractAttribute.DetailType
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/FaultContractAttribute.xml
- uid: System.ServiceModel.FaultContractAttribute.HasProtectionLevel*
  parent: System.ServiceModel.FaultContractAttribute
  isExternal: false
  name: HasProtectionLevel
  nameWithType: FaultContractAttribute.HasProtectionLevel
  fullName: FaultContractAttribute.HasProtectionLevel
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/FaultContractAttribute.xml
- uid: System.ServiceModel.FaultContractAttribute.Name*
  parent: System.ServiceModel.FaultContractAttribute
  isExternal: false
  name: Name
  nameWithType: FaultContractAttribute.Name
  fullName: FaultContractAttribute.Name
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/FaultContractAttribute.xml
- uid: System.ServiceModel.FaultContractAttribute.Namespace*
  parent: System.ServiceModel.FaultContractAttribute
  isExternal: false
  name: Namespace
  nameWithType: FaultContractAttribute.Namespace
  fullName: FaultContractAttribute.Namespace
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/FaultContractAttribute.xml
- uid: System.ServiceModel.FaultContractAttribute.ProtectionLevel*
  parent: System.ServiceModel.FaultContractAttribute
  isExternal: false
  name: ProtectionLevel
  nameWithType: FaultContractAttribute.ProtectionLevel
  fullName: FaultContractAttribute.ProtectionLevel
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/FaultContractAttribute.xml
- uid: System.Attribute.Equals(System.Object)
  parent: System.Attribute
  isExternal: false
  name: Equals(Object)
  nameWithType: Attribute.Equals(Object)
  fullName: Attribute.Equals(Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: Object.Equals(Object, Object)
- uid: System.Attribute.GetHashCode
  parent: System.Attribute
  isExternal: false
  name: GetHashCode()
  nameWithType: Attribute.GetHashCode()
  fullName: Attribute.GetHashCode()
- uid: System.Object.GetType
  parent: System.Object
  isExternal: false
  name: GetType()
  nameWithType: Object.GetType()
  fullName: Object.GetType()
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: false
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: Object.MemberwiseClone()
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: Object.ReferenceEquals(Object, Object)
- uid: System.Object.ToString
  parent: System.Object
  isExternal: false
  name: ToString()
  nameWithType: Object.ToString()
  fullName: Object.ToString()
- uid: System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type,System.Boolean)
  parent: System.Attribute
  isExternal: false
  name: GetCustomAttribute(ParameterInfo, Type, Boolean)
  nameWithType: Attribute.GetCustomAttribute(ParameterInfo, Type, Boolean)
  fullName: Attribute.GetCustomAttribute(ParameterInfo, Type, Boolean)
- uid: System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)
  parent: System.Attribute
  isExternal: false
  name: GetCustomAttribute(MemberInfo, Type, Boolean)
  nameWithType: Attribute.GetCustomAttribute(MemberInfo, Type, Boolean)
  fullName: Attribute.GetCustomAttribute(MemberInfo, Type, Boolean)
- uid: System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type,System.Boolean)
  parent: System.Attribute
  isExternal: false
  name: GetCustomAttribute(Assembly, Type, Boolean)
  nameWithType: Attribute.GetCustomAttribute(Assembly, Type, Boolean)
  fullName: Attribute.GetCustomAttribute(Assembly, Type, Boolean)
- uid: System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type,System.Boolean)
  parent: System.Attribute
  isExternal: false
  name: GetCustomAttribute(Module, Type, Boolean)
  nameWithType: Attribute.GetCustomAttribute(Module, Type, Boolean)
  fullName: Attribute.GetCustomAttribute(Module, Type, Boolean)
- uid: System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type)
  parent: System.Attribute
  isExternal: false
  name: GetCustomAttribute(Module, Type)
  nameWithType: Attribute.GetCustomAttribute(Module, Type)
  fullName: Attribute.GetCustomAttribute(Module, Type)
- uid: System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)
  parent: System.Attribute
  isExternal: false
  name: GetCustomAttribute(MemberInfo, Type)
  nameWithType: Attribute.GetCustomAttribute(MemberInfo, Type)
  fullName: Attribute.GetCustomAttribute(MemberInfo, Type)
- uid: System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type)
  parent: System.Attribute
  isExternal: false
  name: GetCustomAttribute(Assembly, Type)
  nameWithType: Attribute.GetCustomAttribute(Assembly, Type)
  fullName: Attribute.GetCustomAttribute(Assembly, Type)
- uid: System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type)
  parent: System.Attribute
  isExternal: false
  name: GetCustomAttribute(ParameterInfo, Type)
  nameWithType: Attribute.GetCustomAttribute(ParameterInfo, Type)
  fullName: Attribute.GetCustomAttribute(ParameterInfo, Type)
- uid: System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type)
  parent: System.Attribute
  isExternal: false
  name: GetCustomAttributes(Module, Type)
  nameWithType: Attribute.GetCustomAttributes(Module, Type)
  fullName: Attribute.GetCustomAttributes(Module, Type)
- uid: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type,System.Boolean)
  parent: System.Attribute
  isExternal: false
  name: GetCustomAttributes(ParameterInfo, Type, Boolean)
  nameWithType: Attribute.GetCustomAttributes(ParameterInfo, Type, Boolean)
  fullName: Attribute.GetCustomAttributes(ParameterInfo, Type, Boolean)
- uid: System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type,System.Boolean)
  parent: System.Attribute
  isExternal: false
  name: GetCustomAttributes(Module, Type, Boolean)
  nameWithType: Attribute.GetCustomAttributes(Module, Type, Boolean)
  fullName: Attribute.GetCustomAttributes(Module, Type, Boolean)
- uid: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)
  parent: System.Attribute
  isExternal: false
  name: GetCustomAttributes(MemberInfo, Type, Boolean)
  nameWithType: Attribute.GetCustomAttributes(MemberInfo, Type, Boolean)
  fullName: Attribute.GetCustomAttributes(MemberInfo, Type, Boolean)
- uid: System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type,System.Boolean)
  parent: System.Attribute
  isExternal: false
  name: GetCustomAttributes(Assembly, Type, Boolean)
  nameWithType: Attribute.GetCustomAttributes(Assembly, Type, Boolean)
  fullName: Attribute.GetCustomAttributes(Assembly, Type, Boolean)
- uid: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type)
  parent: System.Attribute
  isExternal: false
  name: GetCustomAttributes(ParameterInfo, Type)
  nameWithType: Attribute.GetCustomAttributes(ParameterInfo, Type)
  fullName: Attribute.GetCustomAttributes(ParameterInfo, Type)
- uid: System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Boolean)
  parent: System.Attribute
  isExternal: false
  name: GetCustomAttributes(Module, Boolean)
  nameWithType: Attribute.GetCustomAttributes(Module, Boolean)
  fullName: Attribute.GetCustomAttributes(Module, Boolean)
- uid: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Boolean)
  parent: System.Attribute
  isExternal: false
  name: GetCustomAttributes(ParameterInfo, Boolean)
  nameWithType: Attribute.GetCustomAttributes(ParameterInfo, Boolean)
  fullName: Attribute.GetCustomAttributes(ParameterInfo, Boolean)
- uid: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)
  parent: System.Attribute
  isExternal: false
  name: GetCustomAttributes(MemberInfo, Boolean)
  nameWithType: Attribute.GetCustomAttributes(MemberInfo, Boolean)
  fullName: Attribute.GetCustomAttributes(MemberInfo, Boolean)
- uid: System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type)
  parent: System.Attribute
  isExternal: false
  name: GetCustomAttributes(Assembly, Type)
  nameWithType: Attribute.GetCustomAttributes(Assembly, Type)
  fullName: Attribute.GetCustomAttributes(Assembly, Type)
- uid: System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Boolean)
  parent: System.Attribute
  isExternal: false
  name: GetCustomAttributes(Assembly, Boolean)
  nameWithType: Attribute.GetCustomAttributes(Assembly, Boolean)
  fullName: Attribute.GetCustomAttributes(Assembly, Boolean)
- uid: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo)
  parent: System.Attribute
  isExternal: false
  name: GetCustomAttributes(ParameterInfo)
  nameWithType: Attribute.GetCustomAttributes(ParameterInfo)
  fullName: Attribute.GetCustomAttributes(ParameterInfo)
- uid: System.Attribute.GetCustomAttributes(System.Reflection.Module)
  parent: System.Attribute
  isExternal: false
  name: GetCustomAttributes(Module)
  nameWithType: Attribute.GetCustomAttributes(Module)
  fullName: Attribute.GetCustomAttributes(Module)
- uid: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo)
  parent: System.Attribute
  isExternal: false
  name: GetCustomAttributes(MemberInfo)
  nameWithType: Attribute.GetCustomAttributes(MemberInfo)
  fullName: Attribute.GetCustomAttributes(MemberInfo)
- uid: System.Attribute.GetCustomAttributes(System.Reflection.Assembly)
  parent: System.Attribute
  isExternal: false
  name: GetCustomAttributes(Assembly)
  nameWithType: Attribute.GetCustomAttributes(Assembly)
  fullName: Attribute.GetCustomAttributes(Assembly)
- uid: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)
  parent: System.Attribute
  isExternal: false
  name: GetCustomAttributes(MemberInfo, Type)
  nameWithType: Attribute.GetCustomAttributes(MemberInfo, Type)
  fullName: Attribute.GetCustomAttributes(MemberInfo, Type)
- uid: System.Attribute.IsDefaultAttribute
  parent: System.Attribute
  isExternal: false
  name: IsDefaultAttribute()
  nameWithType: Attribute.IsDefaultAttribute()
  fullName: Attribute.IsDefaultAttribute()
- uid: System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type,System.Boolean)
  parent: System.Attribute
  isExternal: false
  name: IsDefined(ParameterInfo, Type, Boolean)
  nameWithType: Attribute.IsDefined(ParameterInfo, Type, Boolean)
  fullName: Attribute.IsDefined(ParameterInfo, Type, Boolean)
- uid: System.Attribute.IsDefined(System.Reflection.Module,System.Type,System.Boolean)
  parent: System.Attribute
  isExternal: false
  name: IsDefined(Module, Type, Boolean)
  nameWithType: Attribute.IsDefined(Module, Type, Boolean)
  fullName: Attribute.IsDefined(Module, Type, Boolean)
- uid: System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)
  parent: System.Attribute
  isExternal: false
  name: IsDefined(MemberInfo, Type, Boolean)
  nameWithType: Attribute.IsDefined(MemberInfo, Type, Boolean)
  fullName: Attribute.IsDefined(MemberInfo, Type, Boolean)
- uid: System.Attribute.IsDefined(System.Reflection.Assembly,System.Type,System.Boolean)
  parent: System.Attribute
  isExternal: false
  name: IsDefined(Assembly, Type, Boolean)
  nameWithType: Attribute.IsDefined(Assembly, Type, Boolean)
  fullName: Attribute.IsDefined(Assembly, Type, Boolean)
- uid: System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type)
  parent: System.Attribute
  isExternal: false
  name: IsDefined(MemberInfo, Type)
  nameWithType: Attribute.IsDefined(MemberInfo, Type)
  fullName: Attribute.IsDefined(MemberInfo, Type)
- uid: System.Attribute.IsDefined(System.Reflection.Module,System.Type)
  parent: System.Attribute
  isExternal: false
  name: IsDefined(Module, Type)
  nameWithType: Attribute.IsDefined(Module, Type)
  fullName: Attribute.IsDefined(Module, Type)
- uid: System.Attribute.IsDefined(System.Reflection.Assembly,System.Type)
  parent: System.Attribute
  isExternal: false
  name: IsDefined(Assembly, Type)
  nameWithType: Attribute.IsDefined(Assembly, Type)
  fullName: Attribute.IsDefined(Assembly, Type)
- uid: System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type)
  parent: System.Attribute
  isExternal: false
  name: IsDefined(ParameterInfo, Type)
  nameWithType: Attribute.IsDefined(ParameterInfo, Type)
  fullName: Attribute.IsDefined(ParameterInfo, Type)
- uid: System.Attribute.Match(System.Object)
  parent: System.Attribute
  isExternal: false
  name: Match(Object)
  nameWithType: Attribute.Match(Object)
  fullName: Attribute.Match(Object)
- uid: System.Attribute.TypeId
  parent: System.Attribute
  isExternal: false
  name: TypeId
  nameWithType: Attribute.TypeId
  fullName: Attribute.TypeId
- uid: System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)
  parent: System.Attribute
  isExternal: false
  name: _Attribute.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)
  nameWithType: Attribute._Attribute.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)
  fullName: Attribute._Attribute.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)
- uid: System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)
  parent: System.Attribute
  isExternal: false
  name: _Attribute.GetTypeInfo(UInt32, UInt32, IntPtr)
  nameWithType: Attribute._Attribute.GetTypeInfo(UInt32, UInt32, IntPtr)
  fullName: Attribute._Attribute.GetTypeInfo(UInt32, UInt32, IntPtr)
- uid: System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)
  parent: System.Attribute
  isExternal: false
  name: _Attribute.GetTypeInfoCount(UInt32)
  nameWithType: Attribute._Attribute.GetTypeInfoCount(UInt32)
  fullName: Attribute._Attribute.GetTypeInfoCount(UInt32)
- uid: System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
  parent: System.Attribute
  isExternal: false
  name: _Attribute.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)
  nameWithType: Attribute._Attribute.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)
  fullName: Attribute._Attribute.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)
