{"nodes":[{"content":"Provides a common base implementation for channel listeners on the service.","nodes":[{"pos":[0,75],"content":"Provides a common base implementation for channel listeners on the service.","nodes":[{"content":"Provides a common base implementation for channel listeners on the service.","pos":[0,75]}]}],"pos":[1640,1716],"yaml":true},{"content":"The channel listeners on the service wait for and then accept the channels created by factories on the client. Once the channel connection is established between client and service, messages can be exchanged and distributed applications can communicate. The processing functionality provided by the listener is layered into a stacked set of channel listeners to provide modularity when selecting the [!INCLUDE[indigo1](~/includes/indigo1-md.md)] features to deploy. Each channel listener in the service stack corresponds to a channel factory in the client stack. The channel created by the factory is really a stack of channels that are accepted and processed by the stack of listeners on the service.","nodes":[{"pos":[0,701],"content":"The channel listeners on the service wait for and then accept the channels created by factories on the client. Once the channel connection is established between client and service, messages can be exchanged and distributed applications can communicate. The processing functionality provided by the listener is layered into a stacked set of channel listeners to provide modularity when selecting the [!INCLUDE[indigo1](~/includes/indigo1-md.md)] features to deploy. Each channel listener in the service stack corresponds to a channel factory in the client stack. The channel created by the factory is really a stack of channels that are accepted and processed by the stack of listeners on the service.","nodes":[{"content":"The channel listeners on the service wait for and then accept the channels created by factories on the client.","pos":[0,110]},{"content":"Once the channel connection is established between client and service, messages can be exchanged and distributed applications can communicate.","pos":[111,253]},{"content":"The processing functionality provided by the listener is layered into a stacked set of channel listeners to provide modularity when selecting the <ph id=\"ph1\">[!INCLUDE[indigo1](~/includes/indigo1-md.md)]</ph> features to deploy.","pos":[254,465],"source":" The processing functionality provided by the listener is layered into a stacked set of channel listeners to provide modularity when selecting the [!INCLUDE[indigo1](~/includes/indigo1-md.md)] features to deploy."},{"content":"Each channel listener in the service stack corresponds to a channel factory in the client stack.","pos":[466,562]},{"content":"The channel created by the factory is really a stack of channels that are accepted and processed by the stack of listeners on the service.","pos":[563,701]}]}],"pos":[1727,2429],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.ServiceModel.Channels.ChannelListenerBase\"></xref> class.","nodes":[{"pos":[0,110],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Channels.ChannelListenerBase\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.ServiceModel.Channels.ChannelListenerBase\"></xref> class."}],"pos":[7353,7464],"yaml":true},{"content":"The default constructor initializes timeout properties with the service model timeout values when exchanging messages. The default value is 1 minute for open, send, and close operations and 10 minutes for the receive operation. Use <xref:System.ServiceModel.Channels.ChannelListenerBase.%23ctor%28System.ServiceModel.IDefaultCommunicationTimeouts%29> if you want to specify other values for these operation timeouts.","nodes":[{"pos":[0,416],"content":"The default constructor initializes timeout properties with the service model timeout values when exchanging messages. The default value is 1 minute for open, send, and close operations and 10 minutes for the receive operation. Use <xref:System.ServiceModel.Channels.ChannelListenerBase.%23ctor%28System.ServiceModel.IDefaultCommunicationTimeouts%29> if you want to specify other values for these operation timeouts.","nodes":[{"content":"The default constructor initializes timeout properties with the service model timeout values when exchanging messages. The default value is 1 minute for open, send, and close operations and 10 minutes for the receive operation. Use <xref:System.ServiceModel.Channels.ChannelListenerBase.%23ctor%28System.ServiceModel.IDefaultCommunicationTimeouts%29> if you want to specify other values for these operation timeouts.","pos":[0,416],"nodes":[{"content":"The default constructor initializes timeout properties with the service model timeout values when exchanging messages.","pos":[0,118]},{"content":"The default value is 1 minute for open, send, and close operations and 10 minutes for the receive operation.","pos":[119,227]},{"content":"Use <ph id=\"ph1\">&lt;xref:System.ServiceModel.Channels.ChannelListenerBase.%23ctor%28System.ServiceModel.IDefaultCommunicationTimeouts%29&gt;</ph> if you want to specify other values for these operation timeouts.","pos":[228,416],"source":" Use <xref:System.ServiceModel.Channels.ChannelListenerBase.%23ctor%28System.ServiceModel.IDefaultCommunicationTimeouts%29> if you want to specify other values for these operation timeouts."}]}]}],"pos":[7475,7892],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.ServiceModel.Channels.ChannelListenerBase\"></xref> class with specified default communication timeouts.","nodes":[{"pos":[0,156],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Channels.ChannelListenerBase\"&gt;&lt;/xref&gt;</ph> class with specified default communication timeouts.","source":"Initializes a new instance of the <xref href=\"System.ServiceModel.Channels.ChannelListenerBase\"></xref> class with specified default communication timeouts."}],"pos":[9315,9472],"yaml":true},{"content":"Use <xref:System.ServiceModel.Channels.ChannelListenerBase.%23ctor%28System.ServiceModel.IDefaultCommunicationTimeouts%29> instead of the default constructor if you want to specify custom values for the open, send, receive, and close operation timeouts instead of using the service model default values.","nodes":[{"pos":[0,303],"content":"Use <xref:System.ServiceModel.Channels.ChannelListenerBase.%23ctor%28System.ServiceModel.IDefaultCommunicationTimeouts%29> instead of the default constructor if you want to specify custom values for the open, send, receive, and close operation timeouts instead of using the service model default values.","nodes":[{"content":"Use <ph id=\"ph1\">&lt;xref:System.ServiceModel.Channels.ChannelListenerBase.%23ctor%28System.ServiceModel.IDefaultCommunicationTimeouts%29&gt;</ph> instead of the default constructor if you want to specify custom values for the open, send, receive, and close operation timeouts instead of using the service model default values.","pos":[0,303],"source":"Use <xref:System.ServiceModel.Channels.ChannelListenerBase.%23ctor%28System.ServiceModel.IDefaultCommunicationTimeouts%29> instead of the default constructor if you want to specify custom values for the open, send, receive, and close operation timeouts instead of using the service model default values."}]}],"pos":[9483,9787],"yaml":true,"extradata":"MT"},{"content":"The <xref href=\"System.ServiceModel.IDefaultCommunicationTimeouts\"></xref> that specify the default timeouts for open, send, receive, and close operations when exchanging messages.","nodes":[{"pos":[0,180],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.IDefaultCommunicationTimeouts\"&gt;&lt;/xref&gt;</ph> that specify the default timeouts for open, send, receive, and close operations when exchanging messages.","source":"The <xref href=\"System.ServiceModel.IDefaultCommunicationTimeouts\"></xref> that specify the default timeouts for open, send, receive, and close operations when exchanging messages."}],"pos":[10018,10199],"yaml":true},{"content":"When implemented in a derived class, begins an asynchronous operation to wait for a channel to arrive.","nodes":[{"pos":[0,102],"content":"When implemented in a derived class, begins an asynchronous operation to wait for a channel to arrive.","nodes":[{"content":"When implemented in a derived class, begins an asynchronous operation to wait for a channel to arrive.","pos":[0,102]}]}],"pos":[11590,11693],"yaml":true},{"content":"The <xref href=\"System.TimeSpan\"></xref> that specifies how long the wait for a channel operation has to complete before timing out.","nodes":[{"pos":[0,132],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.TimeSpan\"&gt;&lt;/xref&gt;</ph> that specifies how long the wait for a channel operation has to complete before timing out.","source":"The <xref href=\"System.TimeSpan\"></xref> that specifies how long the wait for a channel operation has to complete before timing out."}],"pos":[11895,12028],"yaml":true},{"content":"The <xref href=\"System.AsyncCallback\"></xref> delegate that receives the notification of the asynchronous completion of the wait for a channel operation.","nodes":[{"pos":[0,153],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.AsyncCallback\"&gt;&lt;/xref&gt;</ph> delegate that receives the notification of the asynchronous completion of the wait for a channel operation.","source":"The <xref href=\"System.AsyncCallback\"></xref> delegate that receives the notification of the asynchronous completion of the wait for a channel operation."}],"pos":[12099,12253],"yaml":true},{"content":"An object, specified by the application, that contains state information associated with the asynchronous wait for a channel operation.","nodes":[{"pos":[0,135],"content":"An object, specified by the application, that contains state information associated with the asynchronous wait for a channel operation.","nodes":[{"content":"An object, specified by the application, that contains state information associated with the asynchronous wait for a channel operation.","pos":[0,135]}]}],"pos":[12314,12450],"yaml":true},{"content":"The <xref href=\"System.IAsyncResult\"></xref> that references the asynchronous wait for a channel operation.","nodes":[{"pos":[0,107],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.IAsyncResult\"&gt;&lt;/xref&gt;</ph> that references the asynchronous wait for a channel operation.","source":"The <xref href=\"System.IAsyncResult\"></xref> that references the asynchronous wait for a channel operation."}],"pos":[12513,12621],"yaml":true},{"content":"The channel listener has not been opened and so cannot be used.","nodes":[{"pos":[0,63],"content":"The channel listener has not been opened and so cannot be used.","nodes":[{"content":"The channel listener has not been opened and so cannot be used.","pos":[0,63]}]}],"pos":[12827,12891],"yaml":true},{"content":"Gets the default interval of time provided for a close operation to complete.","nodes":[{"pos":[0,77],"content":"Gets the default interval of time provided for a close operation to complete.","nodes":[{"content":"Gets the default interval of time provided for a close operation to complete.","pos":[0,77]}]}],"pos":[13944,14022],"yaml":true},{"content":"This value is set when creating a new <xref:System.ServiceModel.Channels.ChannelListenerBase> object. The default <xref:System.ServiceModel.Channels.ChannelListenerBase.%23ctor> constructor sets the <xref:System.ServiceModel.Channels.ChannelListenerBase.DefaultCloseTimeout%2A> property to a value of 1 minute. Use <xref:System.ServiceModel.Channels.ChannelListenerBase.%23ctor%28System.ServiceModel.IDefaultCommunicationTimeouts%29> if you want to specify another value for this timeout.","nodes":[{"pos":[0,488],"content":"This value is set when creating a new <xref:System.ServiceModel.Channels.ChannelListenerBase> object. The default <xref:System.ServiceModel.Channels.ChannelListenerBase.%23ctor> constructor sets the <xref:System.ServiceModel.Channels.ChannelListenerBase.DefaultCloseTimeout%2A> property to a value of 1 minute. Use <xref:System.ServiceModel.Channels.ChannelListenerBase.%23ctor%28System.ServiceModel.IDefaultCommunicationTimeouts%29> if you want to specify another value for this timeout.","nodes":[{"content":"This value is set when creating a new <xref:System.ServiceModel.Channels.ChannelListenerBase> object. The default <xref:System.ServiceModel.Channels.ChannelListenerBase.%23ctor> constructor sets the <xref:System.ServiceModel.Channels.ChannelListenerBase.DefaultCloseTimeout%2A> property to a value of 1 minute. Use <xref:System.ServiceModel.Channels.ChannelListenerBase.%23ctor%28System.ServiceModel.IDefaultCommunicationTimeouts%29> if you want to specify another value for this timeout.","pos":[0,488],"nodes":[{"content":"This value is set when creating a new <ph id=\"ph1\">&lt;xref:System.ServiceModel.Channels.ChannelListenerBase&gt;</ph> object.","pos":[0,101],"source":"This value is set when creating a new <xref:System.ServiceModel.Channels.ChannelListenerBase> object."},{"content":"The default <ph id=\"ph1\">&lt;xref:System.ServiceModel.Channels.ChannelListenerBase.%23ctor&gt;</ph> constructor sets the <ph id=\"ph2\">&lt;xref:System.ServiceModel.Channels.ChannelListenerBase.DefaultCloseTimeout%2A&gt;</ph> property to a value of 1 minute.","pos":[102,310],"source":" The default <xref:System.ServiceModel.Channels.ChannelListenerBase.%23ctor> constructor sets the <xref:System.ServiceModel.Channels.ChannelListenerBase.DefaultCloseTimeout%2A> property to a value of 1 minute."},{"content":"Use <ph id=\"ph1\">&lt;xref:System.ServiceModel.Channels.ChannelListenerBase.%23ctor%28System.ServiceModel.IDefaultCommunicationTimeouts%29&gt;</ph> if you want to specify another value for this timeout.","pos":[311,488],"source":" Use <xref:System.ServiceModel.Channels.ChannelListenerBase.%23ctor%28System.ServiceModel.IDefaultCommunicationTimeouts%29> if you want to specify another value for this timeout."}]}]}],"pos":[14033,14522],"yaml":true,"extradata":"MT"},{"content":"The default <xref href=\"System.TimeSpan\"></xref> that specifies how long the close operation has to complete before timing out.","nodes":[{"pos":[0,127],"content":"The default <ph id=\"ph1\">&lt;xref href=\"System.TimeSpan\"&gt;&lt;/xref&gt;</ph> that specifies how long the close operation has to complete before timing out.","source":"The default <xref href=\"System.TimeSpan\"></xref> that specifies how long the close operation has to complete before timing out."}],"pos":[14661,14789],"yaml":true},{"content":"Gets the default interval of time provided for an open operation to complete.","nodes":[{"pos":[0,77],"content":"Gets the default interval of time provided for an open operation to complete.","nodes":[{"content":"Gets the default interval of time provided for an open operation to complete.","pos":[0,77]}]}],"pos":[15935,16013],"yaml":true},{"content":"This value is set when creating a new <xref:System.ServiceModel.Channels.ChannelListenerBase> object. The default <xref:System.ServiceModel.Channels.ChannelListenerBase.%23ctor> constructor sets the <xref:System.ServiceModel.Channels.ChannelListenerBase.DefaultOpenTimeout%2A> property to a value of 1 minute. Use <xref:System.ServiceModel.Channels.ChannelListenerBase.%23ctor%28System.ServiceModel.IDefaultCommunicationTimeouts%29> if you want to specify another value for this timeout.","nodes":[{"pos":[0,487],"content":"This value is set when creating a new <xref:System.ServiceModel.Channels.ChannelListenerBase> object. The default <xref:System.ServiceModel.Channels.ChannelListenerBase.%23ctor> constructor sets the <xref:System.ServiceModel.Channels.ChannelListenerBase.DefaultOpenTimeout%2A> property to a value of 1 minute. Use <xref:System.ServiceModel.Channels.ChannelListenerBase.%23ctor%28System.ServiceModel.IDefaultCommunicationTimeouts%29> if you want to specify another value for this timeout.","nodes":[{"content":"This value is set when creating a new <xref:System.ServiceModel.Channels.ChannelListenerBase> object. The default <xref:System.ServiceModel.Channels.ChannelListenerBase.%23ctor> constructor sets the <xref:System.ServiceModel.Channels.ChannelListenerBase.DefaultOpenTimeout%2A> property to a value of 1 minute. Use <xref:System.ServiceModel.Channels.ChannelListenerBase.%23ctor%28System.ServiceModel.IDefaultCommunicationTimeouts%29> if you want to specify another value for this timeout.","pos":[0,487],"nodes":[{"content":"This value is set when creating a new <ph id=\"ph1\">&lt;xref:System.ServiceModel.Channels.ChannelListenerBase&gt;</ph> object.","pos":[0,101],"source":"This value is set when creating a new <xref:System.ServiceModel.Channels.ChannelListenerBase> object."},{"content":"The default <ph id=\"ph1\">&lt;xref:System.ServiceModel.Channels.ChannelListenerBase.%23ctor&gt;</ph> constructor sets the <ph id=\"ph2\">&lt;xref:System.ServiceModel.Channels.ChannelListenerBase.DefaultOpenTimeout%2A&gt;</ph> property to a value of 1 minute.","pos":[102,309],"source":" The default <xref:System.ServiceModel.Channels.ChannelListenerBase.%23ctor> constructor sets the <xref:System.ServiceModel.Channels.ChannelListenerBase.DefaultOpenTimeout%2A> property to a value of 1 minute."},{"content":"Use <ph id=\"ph1\">&lt;xref:System.ServiceModel.Channels.ChannelListenerBase.%23ctor%28System.ServiceModel.IDefaultCommunicationTimeouts%29&gt;</ph> if you want to specify another value for this timeout.","pos":[310,487],"source":" Use <xref:System.ServiceModel.Channels.ChannelListenerBase.%23ctor%28System.ServiceModel.IDefaultCommunicationTimeouts%29> if you want to specify another value for this timeout."}]}]}],"pos":[16024,16512],"yaml":true,"extradata":"MT"},{"content":"The default <xref href=\"System.TimeSpan\"></xref> that specifies how long the open operation has to complete before timing out.","nodes":[{"pos":[0,126],"content":"The default <ph id=\"ph1\">&lt;xref href=\"System.TimeSpan\"&gt;&lt;/xref&gt;</ph> that specifies how long the open operation has to complete before timing out.","source":"The default <xref href=\"System.TimeSpan\"></xref> that specifies how long the open operation has to complete before timing out."}],"pos":[16650,16777],"yaml":true},{"content":"Gets the default interval of time provided for a receive operation to complete.","nodes":[{"pos":[0,79],"content":"Gets the default interval of time provided for a receive operation to complete.","nodes":[{"content":"Gets the default interval of time provided for a receive operation to complete.","pos":[0,79]}]}],"pos":[17940,18020],"yaml":true},{"content":"This value is set when creating a new <xref:System.ServiceModel.Channels.ChannelListenerBase> object. The default <xref:System.ServiceModel.Channels.ChannelListenerBase.%23ctor> constructor sets the <xref:System.ServiceModel.Channels.ChannelListenerBase.DefaultReceiveTimeout%2A> property to a value of 10 minutes. Use <xref:System.ServiceModel.Channels.ChannelListenerBase.%23ctor%28System.ServiceModel.IDefaultCommunicationTimeouts%29> if you want to specify another value for this timeout.","nodes":[{"pos":[0,492],"content":"This value is set when creating a new <xref:System.ServiceModel.Channels.ChannelListenerBase> object. The default <xref:System.ServiceModel.Channels.ChannelListenerBase.%23ctor> constructor sets the <xref:System.ServiceModel.Channels.ChannelListenerBase.DefaultReceiveTimeout%2A> property to a value of 10 minutes. Use <xref:System.ServiceModel.Channels.ChannelListenerBase.%23ctor%28System.ServiceModel.IDefaultCommunicationTimeouts%29> if you want to specify another value for this timeout.","nodes":[{"content":"This value is set when creating a new <xref:System.ServiceModel.Channels.ChannelListenerBase> object. The default <xref:System.ServiceModel.Channels.ChannelListenerBase.%23ctor> constructor sets the <xref:System.ServiceModel.Channels.ChannelListenerBase.DefaultReceiveTimeout%2A> property to a value of 10 minutes. Use <xref:System.ServiceModel.Channels.ChannelListenerBase.%23ctor%28System.ServiceModel.IDefaultCommunicationTimeouts%29> if you want to specify another value for this timeout.","pos":[0,492],"nodes":[{"content":"This value is set when creating a new <ph id=\"ph1\">&lt;xref:System.ServiceModel.Channels.ChannelListenerBase&gt;</ph> object.","pos":[0,101],"source":"This value is set when creating a new <xref:System.ServiceModel.Channels.ChannelListenerBase> object."},{"content":"The default <ph id=\"ph1\">&lt;xref:System.ServiceModel.Channels.ChannelListenerBase.%23ctor&gt;</ph> constructor sets the <ph id=\"ph2\">&lt;xref:System.ServiceModel.Channels.ChannelListenerBase.DefaultReceiveTimeout%2A&gt;</ph> property to a value of 10 minutes.","pos":[102,314],"source":" The default <xref:System.ServiceModel.Channels.ChannelListenerBase.%23ctor> constructor sets the <xref:System.ServiceModel.Channels.ChannelListenerBase.DefaultReceiveTimeout%2A> property to a value of 10 minutes."},{"content":"Use <ph id=\"ph1\">&lt;xref:System.ServiceModel.Channels.ChannelListenerBase.%23ctor%28System.ServiceModel.IDefaultCommunicationTimeouts%29&gt;</ph> if you want to specify another value for this timeout.","pos":[315,492],"source":" Use <xref:System.ServiceModel.Channels.ChannelListenerBase.%23ctor%28System.ServiceModel.IDefaultCommunicationTimeouts%29> if you want to specify another value for this timeout."}]}]}],"pos":[18031,18524],"yaml":true,"extradata":"MT"},{"content":"The default <xref href=\"System.TimeSpan\"></xref> that specifies how long the receive operation has to complete before timing out.","nodes":[{"pos":[0,129],"content":"The default <ph id=\"ph1\">&lt;xref href=\"System.TimeSpan\"&gt;&lt;/xref&gt;</ph> that specifies how long the receive operation has to complete before timing out.","source":"The default <xref href=\"System.TimeSpan\"></xref> that specifies how long the receive operation has to complete before timing out."}],"pos":[18665,18795],"yaml":true},{"content":"Gets the default interval of time provided for a send operation to complete.","nodes":[{"pos":[0,76],"content":"Gets the default interval of time provided for a send operation to complete.","nodes":[{"content":"Gets the default interval of time provided for a send operation to complete.","pos":[0,76]}]}],"pos":[19943,20020],"yaml":true},{"content":"This value is set when creating a new <xref:System.ServiceModel.Channels.ChannelListenerBase> object. The default <xref:System.ServiceModel.Channels.ChannelListenerBase.%23ctor> constructor sets the <xref:System.ServiceModel.Channels.ChannelListenerBase.DefaultSendTimeout%2A> property to a value of 1 minute. Use <xref:System.ServiceModel.Channels.ChannelListenerBase.%23ctor%28System.ServiceModel.IDefaultCommunicationTimeouts%29> if you want to specify another value for this timeout.","nodes":[{"pos":[0,487],"content":"This value is set when creating a new <xref:System.ServiceModel.Channels.ChannelListenerBase> object. The default <xref:System.ServiceModel.Channels.ChannelListenerBase.%23ctor> constructor sets the <xref:System.ServiceModel.Channels.ChannelListenerBase.DefaultSendTimeout%2A> property to a value of 1 minute. Use <xref:System.ServiceModel.Channels.ChannelListenerBase.%23ctor%28System.ServiceModel.IDefaultCommunicationTimeouts%29> if you want to specify another value for this timeout.","nodes":[{"content":"This value is set when creating a new <xref:System.ServiceModel.Channels.ChannelListenerBase> object. The default <xref:System.ServiceModel.Channels.ChannelListenerBase.%23ctor> constructor sets the <xref:System.ServiceModel.Channels.ChannelListenerBase.DefaultSendTimeout%2A> property to a value of 1 minute. Use <xref:System.ServiceModel.Channels.ChannelListenerBase.%23ctor%28System.ServiceModel.IDefaultCommunicationTimeouts%29> if you want to specify another value for this timeout.","pos":[0,487],"nodes":[{"content":"This value is set when creating a new <ph id=\"ph1\">&lt;xref:System.ServiceModel.Channels.ChannelListenerBase&gt;</ph> object.","pos":[0,101],"source":"This value is set when creating a new <xref:System.ServiceModel.Channels.ChannelListenerBase> object."},{"content":"The default <ph id=\"ph1\">&lt;xref:System.ServiceModel.Channels.ChannelListenerBase.%23ctor&gt;</ph> constructor sets the <ph id=\"ph2\">&lt;xref:System.ServiceModel.Channels.ChannelListenerBase.DefaultSendTimeout%2A&gt;</ph> property to a value of 1 minute.","pos":[102,309],"source":" The default <xref:System.ServiceModel.Channels.ChannelListenerBase.%23ctor> constructor sets the <xref:System.ServiceModel.Channels.ChannelListenerBase.DefaultSendTimeout%2A> property to a value of 1 minute."},{"content":"Use <ph id=\"ph1\">&lt;xref:System.ServiceModel.Channels.ChannelListenerBase.%23ctor%28System.ServiceModel.IDefaultCommunicationTimeouts%29&gt;</ph> if you want to specify another value for this timeout.","pos":[310,487],"source":" Use <xref:System.ServiceModel.Channels.ChannelListenerBase.%23ctor%28System.ServiceModel.IDefaultCommunicationTimeouts%29> if you want to specify another value for this timeout."}]}]}],"pos":[20031,20519],"yaml":true,"extradata":"MT"},{"content":"The default <xref href=\"System.TimeSpan\"></xref> that specifies how long the send operation has to complete before timing out.","nodes":[{"pos":[0,126],"content":"The default <ph id=\"ph1\">&lt;xref href=\"System.TimeSpan\"&gt;&lt;/xref&gt;</ph> that specifies how long the send operation has to complete before timing out.","source":"The default <xref href=\"System.TimeSpan\"></xref> that specifies how long the send operation has to complete before timing out."}],"pos":[20657,20784],"yaml":true},{"content":"When implemented in a derived class, completes an asynchronous operation to wait for channels to arrive.","nodes":[{"pos":[0,104],"content":"When implemented in a derived class, completes an asynchronous operation to wait for channels to arrive.","nodes":[{"content":"When implemented in a derived class, completes an asynchronous operation to wait for channels to arrive.","pos":[0,104]}]}],"pos":[22026,22131],"yaml":true},{"content":"The <xref href=\"System.IAsyncResult\"></xref> returned by a call to the <xref href=\"System.ServiceModel.Channels.ChannelListenerBase.EndWaitForChannel(System.IAsyncResult)\"></xref> method.","nodes":[{"pos":[0,187],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.IAsyncResult\"&gt;&lt;/xref&gt;</ph> returned by a call to the <ph id=\"ph2\">&lt;xref href=\"System.ServiceModel.Channels.ChannelListenerBase.EndWaitForChannel(System.IAsyncResult)\"&gt;&lt;/xref&gt;</ph> method.","source":"The <xref href=\"System.IAsyncResult\"></xref> returned by a call to the <xref href=\"System.ServiceModel.Channels.ChannelListenerBase.EndWaitForChannel(System.IAsyncResult)\"></xref> method."}],"pos":[22291,22479],"yaml":true},{"content":"`true` if a message arrived; otherwise `false`.","nodes":[{"pos":[0,47],"content":"<ph id=\"ph1\">`true`</ph> if a message arrived; otherwise <ph id=\"ph2\">`false`</ph>.","source":"`true` if a message arrived; otherwise `false`."}],"pos":[22537,22587],"yaml":true},{"content":"Returns a typed object requested, if present, from the appropriate layer in the channel stack.","nodes":[{"pos":[0,94],"content":"Returns a typed object requested, if present, from the appropriate layer in the channel stack.","nodes":[{"content":"Returns a typed object requested, if present, from the appropriate layer in the channel stack.","pos":[0,94]}]}],"pos":[23711,23806],"yaml":true},{"content":"Use this to request a typed object such as an interface for setting properties or getting status from the appropriate layer in the channel listener stack. If a layer supports returning the requested object, it returns it. If not, it simply delegates the call down to the next layer in the stack. If it gets to the bottom of the stack and no layer supported the requested object, then the method returns `null`.","nodes":[{"pos":[0,410],"content":"Use this to request a typed object such as an interface for setting properties or getting status from the appropriate layer in the channel listener stack. If a layer supports returning the requested object, it returns it. If not, it simply delegates the call down to the next layer in the stack. If it gets to the bottom of the stack and no layer supported the requested object, then the method returns `null`.","nodes":[{"content":"Use this to request a typed object such as an interface for setting properties or getting status from the appropriate layer in the channel listener stack.","pos":[0,154]},{"content":"If a layer supports returning the requested object, it returns it.","pos":[155,221]},{"content":"If not, it simply delegates the call down to the next layer in the stack.","pos":[222,295]},{"content":"If it gets to the bottom of the stack and no layer supported the requested object, then the method returns <ph id=\"ph1\">`null`</ph>.","pos":[296,410],"source":" If it gets to the bottom of the stack and no layer supported the requested object, then the method returns `null`."}]}],"pos":[23817,24228],"yaml":true,"extradata":"MT"},{"content":"The typed object for which the method is querying.","nodes":[{"pos":[0,50],"content":"The typed object for which the method is querying.","nodes":[{"content":"The typed object for which the method is querying.","pos":[0,50]}]}],"pos":[24375,24426],"yaml":true},{"content":"The typed object T requested if it is present or `null` if it is not.","nodes":[{"pos":[0,69],"content":"The typed object T requested if it is present or <ph id=\"ph1\">`null`</ph> if it is not.","source":"The typed object T requested if it is present or `null` if it is not."}],"pos":[24471,24541],"yaml":true},{"content":"When implemented in a derived class, provides a point of extensibility when starting to wait for a channel to arrive.","nodes":[{"pos":[0,117],"content":"When implemented in a derived class, provides a point of extensibility when starting to wait for a channel to arrive.","nodes":[{"content":"When implemented in a derived class, provides a point of extensibility when starting to wait for a channel to arrive.","pos":[0,117]}]}],"pos":[25953,26071],"yaml":true},{"content":"The <xref href=\"System.TimeSpan\"></xref> that specifies how long the on begin wait operation has to complete before timing out.","nodes":[{"pos":[0,127],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.TimeSpan\"&gt;&lt;/xref&gt;</ph> that specifies how long the on begin wait operation has to complete before timing out.","source":"The <xref href=\"System.TimeSpan\"></xref> that specifies how long the on begin wait operation has to complete before timing out."}],"pos":[26287,26415],"yaml":true},{"content":"The <xref href=\"System.AsyncCallback\"></xref> delegate that receives the notification of the asynchronous operation on begin wait completion.","nodes":[{"pos":[0,141],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.AsyncCallback\"&gt;&lt;/xref&gt;</ph> delegate that receives the notification of the asynchronous operation on begin wait completion.","source":"The <xref href=\"System.AsyncCallback\"></xref> delegate that receives the notification of the asynchronous operation on begin wait completion."}],"pos":[26486,26628],"yaml":true},{"content":"An object, specified by the application, that contains state information associated with the asynchronous on begin wait operation.","nodes":[{"pos":[0,130],"content":"An object, specified by the application, that contains state information associated with the asynchronous on begin wait operation.","nodes":[{"content":"An object, specified by the application, that contains state information associated with the asynchronous on begin wait operation.","pos":[0,130]}]}],"pos":[26689,26820],"yaml":true},{"content":"The <xref href=\"System.IAsyncResult\"></xref> that references the asynchronous on begin wait operation.","nodes":[{"pos":[0,102],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.IAsyncResult\"&gt;&lt;/xref&gt;</ph> that references the asynchronous on begin wait operation.","source":"The <xref href=\"System.IAsyncResult\"></xref> that references the asynchronous on begin wait operation."}],"pos":[26883,26986],"yaml":true},{"content":"When implemented in a derived class, provides a point of extensibility when ending the waiting for a channel to arrive.","nodes":[{"pos":[0,119],"content":"When implemented in a derived class, provides a point of extensibility when ending the waiting for a channel to arrive.","nodes":[{"content":"When implemented in a derived class, provides a point of extensibility when ending the waiting for a channel to arrive.","pos":[0,119]}]}],"pos":[28243,28363],"yaml":true},{"content":"The <xref href=\"System.IAsyncResult\"></xref> returned by a call to the <xref href=\"System.ServiceModel.Channels.ChannelListenerBase.OnBeginWaitForChannel(System.TimeSpan,System.AsyncCallback,System.Object)\"></xref> method.","nodes":[{"pos":[0,222],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.IAsyncResult\"&gt;&lt;/xref&gt;</ph> returned by a call to the <ph id=\"ph2\">&lt;xref href=\"System.ServiceModel.Channels.ChannelListenerBase.OnBeginWaitForChannel(System.TimeSpan,System.AsyncCallback,System.Object)\"&gt;&lt;/xref&gt;</ph> method.","source":"The <xref href=\"System.IAsyncResult\"></xref> returned by a call to the <xref href=\"System.ServiceModel.Channels.ChannelListenerBase.OnBeginWaitForChannel(System.TimeSpan,System.AsyncCallback,System.Object)\"></xref> method."}],"pos":[28537,28760],"yaml":true},{"content":"`true` if the method completed before the interval of time specified by the <code>timeout</code> expired; otherwise `false`.","nodes":[{"pos":[0,124],"content":"<ph id=\"ph1\">`true`</ph> if the method completed before the interval of time specified by the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">timeout</ph><ept id=\"p1\">&lt;/code&gt;</ept> expired; otherwise <ph id=\"ph3\">`false`</ph>.","source":"`true` if the method completed before the interval of time specified by the <code>timeout</code> expired; otherwise `false`."}],"pos":[28818,28945],"yaml":true},{"content":"When overridden in a derived class, provides a point of extensibility when waiting for a channel to arrive.","nodes":[{"pos":[0,107],"content":"When overridden in a derived class, provides a point of extensibility when waiting for a channel to arrive.","nodes":[{"content":"When overridden in a derived class, provides a point of extensibility when waiting for a channel to arrive.","pos":[0,107]}]}],"pos":[30158,30266],"yaml":true},{"content":"The <xref href=\"System.TimeSpan\"></xref> that specifies how long the on wait for a channel operation has to complete before timing out.","nodes":[{"pos":[0,135],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.TimeSpan\"&gt;&lt;/xref&gt;</ph> that specifies how long the on wait for a channel operation has to complete before timing out.","source":"The <xref href=\"System.TimeSpan\"></xref> that specifies how long the on wait for a channel operation has to complete before timing out."}],"pos":[30431,30567],"yaml":true},{"content":"`true` if the method completed before the interval of time specified by the <code>timeout</code> expired; otherwise `false`.","nodes":[{"pos":[0,124],"content":"<ph id=\"ph1\">`true`</ph> if the method completed before the interval of time specified by the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">timeout</ph><ept id=\"p1\">&lt;/code&gt;</ept> expired; otherwise <ph id=\"ph3\">`false`</ph>.","source":"`true` if the method completed before the interval of time specified by the <code>timeout</code> expired; otherwise `false`."}],"pos":[30625,30752],"yaml":true},{"content":"When implemented in derived class, gets the URI on which the channel listener listens for an incoming channel.","nodes":[{"pos":[0,110],"content":"When implemented in derived class, gets the URI on which the channel listener listens for an incoming channel.","nodes":[{"content":"When implemented in derived class, gets the URI on which the channel listener listens for an incoming channel.","pos":[0,110]}]}],"pos":[31805,31916],"yaml":true},{"content":"The <xref href=\"System.Uri\"></xref> on which the channel listener listens for incoming channels.","nodes":[{"pos":[0,96],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Uri\"&gt;&lt;/xref&gt;</ph> on which the channel listener listens for incoming channels.","source":"The <xref href=\"System.Uri\"></xref> on which the channel listener listens for incoming channels."}],"pos":[32026,32123],"yaml":true},{"content":"When implemented in a derived class, waits for a channel to arrive.","nodes":[{"pos":[0,67],"content":"When implemented in a derived class, waits for a channel to arrive.","nodes":[{"content":"When implemented in a derived class, waits for a channel to arrive.","pos":[0,67]}]}],"pos":[33308,33376],"yaml":true},{"content":"The <xref href=\"System.TimeSpan\"></xref> that specifies how long the wait for a channel operation has to complete before timing out.","nodes":[{"pos":[0,132],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.TimeSpan\"&gt;&lt;/xref&gt;</ph> that specifies how long the wait for a channel operation has to complete before timing out.","source":"The <xref href=\"System.TimeSpan\"></xref> that specifies how long the wait for a channel operation has to complete before timing out."}],"pos":[33527,33660],"yaml":true},{"content":"`true` if a channel arrived before the interval of time specified by the <code>timeout</code> expired; otherwise `false`.","nodes":[{"pos":[0,121],"content":"<ph id=\"ph1\">`true`</ph> if a channel arrived before the interval of time specified by the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">timeout</ph><ept id=\"p1\">&lt;/code&gt;</ept> expired; otherwise <ph id=\"ph3\">`false`</ph>.","source":"`true` if a channel arrived before the interval of time specified by the <code>timeout</code> expired; otherwise `false`."}],"pos":[33718,33842],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.ServiceModel.Channels.ChannelListenerBase\n  commentId: T:System.ServiceModel.Channels.ChannelListenerBase\n  id: ChannelListenerBase\n  children:\n  - System.ServiceModel.Channels.ChannelListenerBase.#ctor\n  - System.ServiceModel.Channels.ChannelListenerBase.#ctor(System.ServiceModel.IDefaultCommunicationTimeouts)\n  - System.ServiceModel.Channels.ChannelListenerBase.BeginWaitForChannel(System.TimeSpan,System.AsyncCallback,System.Object)\n  - System.ServiceModel.Channels.ChannelListenerBase.DefaultCloseTimeout\n  - System.ServiceModel.Channels.ChannelListenerBase.DefaultOpenTimeout\n  - System.ServiceModel.Channels.ChannelListenerBase.DefaultReceiveTimeout\n  - System.ServiceModel.Channels.ChannelListenerBase.DefaultSendTimeout\n  - System.ServiceModel.Channels.ChannelListenerBase.EndWaitForChannel(System.IAsyncResult)\n  - System.ServiceModel.Channels.ChannelListenerBase.GetProperty``1\n  - System.ServiceModel.Channels.ChannelListenerBase.OnBeginWaitForChannel(System.TimeSpan,System.AsyncCallback,System.Object)\n  - System.ServiceModel.Channels.ChannelListenerBase.OnEndWaitForChannel(System.IAsyncResult)\n  - System.ServiceModel.Channels.ChannelListenerBase.OnWaitForChannel(System.TimeSpan)\n  - System.ServiceModel.Channels.ChannelListenerBase.Uri\n  - System.ServiceModel.Channels.ChannelListenerBase.WaitForChannel(System.TimeSpan)\n  langs:\n  - csharp\n  name: ChannelListenerBase\n  nameWithType: ChannelListenerBase\n  fullName: System.ServiceModel.Channels.ChannelListenerBase\n  type: Class\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Channels\n  summary: Provides a common base implementation for channel listeners on the service.\n  remarks: The channel listeners on the service wait for and then accept the channels created by factories on the client. Once the channel connection is established between client and service, messages can be exchanged and distributed applications can communicate. The processing functionality provided by the listener is layered into a stacked set of channel listeners to provide modularity when selecting the [!INCLUDE[indigo1](~/includes/indigo1-md.md)] features to deploy. Each channel listener in the service stack corresponds to a channel factory in the client stack. The channel created by the factory is really a stack of channels that are accepted and processed by the stack of listeners on the service.\n  syntax:\n    content: 'public abstract class ChannelListenerBase : System.ServiceModel.Channels.ChannelManagerBase, System.ServiceModel.Channels.IChannelListener'\n  inheritance:\n  - System.Object\n  - System.ServiceModel.Channels.CommunicationObject\n  - System.ServiceModel.Channels.ChannelManagerBase\n  derivedClasses:\n  - System.ServiceModel.Channels.ChannelListenerBase`1\n  implements:\n  - System.ServiceModel.Channels.IChannelListener\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  - System.ServiceModel.Channels.ChannelManagerBase.System#ServiceModel#IDefaultCommunicationTimeouts#CloseTimeout\n  - System.ServiceModel.Channels.ChannelManagerBase.System#ServiceModel#IDefaultCommunicationTimeouts#OpenTimeout\n  - System.ServiceModel.Channels.ChannelManagerBase.System#ServiceModel#IDefaultCommunicationTimeouts#ReceiveTimeout\n  - System.ServiceModel.Channels.ChannelManagerBase.System#ServiceModel#IDefaultCommunicationTimeouts#SendTimeout\n  - System.ServiceModel.Channels.CommunicationObject.Abort\n  - System.ServiceModel.Channels.CommunicationObject.BeginClose(System.AsyncCallback,System.Object)\n  - System.ServiceModel.Channels.CommunicationObject.BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)\n  - System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.AsyncCallback,System.Object)\n  - System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)\n  - System.ServiceModel.Channels.CommunicationObject.Close\n  - System.ServiceModel.Channels.CommunicationObject.Close(System.TimeSpan)\n  - System.ServiceModel.Channels.CommunicationObject.Closed\n  - System.ServiceModel.Channels.CommunicationObject.Closing\n  - System.ServiceModel.Channels.CommunicationObject.EndClose(System.IAsyncResult)\n  - System.ServiceModel.Channels.CommunicationObject.EndOpen(System.IAsyncResult)\n  - System.ServiceModel.Channels.CommunicationObject.Fault\n  - System.ServiceModel.Channels.CommunicationObject.Faulted\n  - System.ServiceModel.Channels.CommunicationObject.GetCommunicationObjectType\n  - System.ServiceModel.Channels.CommunicationObject.IsDisposed\n  - System.ServiceModel.Channels.CommunicationObject.OnAbort\n  - System.ServiceModel.Channels.CommunicationObject.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)\n  - System.ServiceModel.Channels.CommunicationObject.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)\n  - System.ServiceModel.Channels.CommunicationObject.OnClose(System.TimeSpan)\n  - System.ServiceModel.Channels.CommunicationObject.OnClosed\n  - System.ServiceModel.Channels.CommunicationObject.OnClosing\n  - System.ServiceModel.Channels.CommunicationObject.OnEndClose(System.IAsyncResult)\n  - System.ServiceModel.Channels.CommunicationObject.OnEndOpen(System.IAsyncResult)\n  - System.ServiceModel.Channels.CommunicationObject.OnFaulted\n  - System.ServiceModel.Channels.CommunicationObject.OnOpen(System.TimeSpan)\n  - System.ServiceModel.Channels.CommunicationObject.OnOpened\n  - System.ServiceModel.Channels.CommunicationObject.OnOpening\n  - System.ServiceModel.Channels.CommunicationObject.Open\n  - System.ServiceModel.Channels.CommunicationObject.Open(System.TimeSpan)\n  - System.ServiceModel.Channels.CommunicationObject.Opened\n  - System.ServiceModel.Channels.CommunicationObject.Opening\n  - System.ServiceModel.Channels.CommunicationObject.State\n  - System.ServiceModel.Channels.CommunicationObject.ThisLock\n  - System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposed\n  - System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposedOrImmutable\n  - System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposedOrNotOpen\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/ChannelListenerBase.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Channels.ChannelListenerBase.#ctor\n  commentId: M:System.ServiceModel.Channels.ChannelListenerBase.#ctor\n  id: '#ctor'\n  parent: System.ServiceModel.Channels.ChannelListenerBase\n  langs:\n  - csharp\n  name: ChannelListenerBase()\n  nameWithType: ChannelListenerBase.ChannelListenerBase()\n  fullName: ChannelListenerBase.ChannelListenerBase()\n  type: Constructor\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Channels\n  summary: Initializes a new instance of the <xref href=\"System.ServiceModel.Channels.ChannelListenerBase\"></xref> class.\n  remarks: The default constructor initializes timeout properties with the service model timeout values when exchanging messages. The default value is 1 minute for open, send, and close operations and 10 minutes for the receive operation. Use <xref:System.ServiceModel.Channels.ChannelListenerBase.%23ctor%28System.ServiceModel.IDefaultCommunicationTimeouts%29> if you want to specify other values for these operation timeouts.\n  syntax:\n    content: protected ChannelListenerBase ();\n    parameters: []\n  overload: System.ServiceModel.Channels.ChannelListenerBase.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/ChannelListenerBase.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Channels.ChannelListenerBase.#ctor(System.ServiceModel.IDefaultCommunicationTimeouts)\n  commentId: M:System.ServiceModel.Channels.ChannelListenerBase.#ctor(System.ServiceModel.IDefaultCommunicationTimeouts)\n  id: '#ctor(System.ServiceModel.IDefaultCommunicationTimeouts)'\n  parent: System.ServiceModel.Channels.ChannelListenerBase\n  langs:\n  - csharp\n  name: ChannelListenerBase(IDefaultCommunicationTimeouts)\n  nameWithType: ChannelListenerBase.ChannelListenerBase(IDefaultCommunicationTimeouts)\n  fullName: ChannelListenerBase.ChannelListenerBase(IDefaultCommunicationTimeouts)\n  type: Constructor\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Channels\n  summary: Initializes a new instance of the <xref href=\"System.ServiceModel.Channels.ChannelListenerBase\"></xref> class with specified default communication timeouts.\n  remarks: Use <xref:System.ServiceModel.Channels.ChannelListenerBase.%23ctor%28System.ServiceModel.IDefaultCommunicationTimeouts%29> instead of the default constructor if you want to specify custom values for the open, send, receive, and close operation timeouts instead of using the service model default values.\n  syntax:\n    content: protected ChannelListenerBase (System.ServiceModel.IDefaultCommunicationTimeouts timeouts);\n    parameters:\n    - id: timeouts\n      type: System.ServiceModel.IDefaultCommunicationTimeouts\n      description: The <xref href=\"System.ServiceModel.IDefaultCommunicationTimeouts\"></xref> that specify the default timeouts for open, send, receive, and close operations when exchanging messages.\n  overload: System.ServiceModel.Channels.ChannelListenerBase.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/ChannelListenerBase.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Channels.ChannelListenerBase.BeginWaitForChannel(System.TimeSpan,System.AsyncCallback,System.Object)\n  commentId: M:System.ServiceModel.Channels.ChannelListenerBase.BeginWaitForChannel(System.TimeSpan,System.AsyncCallback,System.Object)\n  id: BeginWaitForChannel(System.TimeSpan,System.AsyncCallback,System.Object)\n  parent: System.ServiceModel.Channels.ChannelListenerBase\n  langs:\n  - csharp\n  name: BeginWaitForChannel(TimeSpan, AsyncCallback, Object)\n  nameWithType: ChannelListenerBase.BeginWaitForChannel(TimeSpan, AsyncCallback, Object)\n  fullName: ChannelListenerBase.BeginWaitForChannel(TimeSpan, AsyncCallback, Object)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Channels\n  summary: When implemented in a derived class, begins an asynchronous operation to wait for a channel to arrive.\n  syntax:\n    content: public IAsyncResult BeginWaitForChannel (TimeSpan timeout, AsyncCallback callback, object state);\n    parameters:\n    - id: timeout\n      type: System.TimeSpan\n      description: The <xref href=\"System.TimeSpan\"></xref> that specifies how long the wait for a channel operation has to complete before timing out.\n    - id: callback\n      type: System.AsyncCallback\n      description: The <xref href=\"System.AsyncCallback\"></xref> delegate that receives the notification of the asynchronous completion of the wait for a channel operation.\n    - id: state\n      type: System.Object\n      description: An object, specified by the application, that contains state information associated with the asynchronous wait for a channel operation.\n    return:\n      type: System.IAsyncResult\n      description: The <xref href=\"System.IAsyncResult\"></xref> that references the asynchronous wait for a channel operation.\n  overload: System.ServiceModel.Channels.ChannelListenerBase.BeginWaitForChannel*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The channel listener has not been opened and so cannot be used.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/ChannelListenerBase.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Channels.ChannelListenerBase.DefaultCloseTimeout\n  commentId: P:System.ServiceModel.Channels.ChannelListenerBase.DefaultCloseTimeout\n  id: DefaultCloseTimeout\n  parent: System.ServiceModel.Channels.ChannelListenerBase\n  langs:\n  - csharp\n  name: DefaultCloseTimeout\n  nameWithType: ChannelListenerBase.DefaultCloseTimeout\n  fullName: ChannelListenerBase.DefaultCloseTimeout\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Channels\n  summary: Gets the default interval of time provided for a close operation to complete.\n  remarks: This value is set when creating a new <xref:System.ServiceModel.Channels.ChannelListenerBase> object. The default <xref:System.ServiceModel.Channels.ChannelListenerBase.%23ctor> constructor sets the <xref:System.ServiceModel.Channels.ChannelListenerBase.DefaultCloseTimeout%2A> property to a value of 1 minute. Use <xref:System.ServiceModel.Channels.ChannelListenerBase.%23ctor%28System.ServiceModel.IDefaultCommunicationTimeouts%29> if you want to specify another value for this timeout.\n  syntax:\n    content: protected override TimeSpan DefaultCloseTimeout { get; }\n    return:\n      type: System.TimeSpan\n      description: The default <xref href=\"System.TimeSpan\"></xref> that specifies how long the close operation has to complete before timing out.\n  overload: System.ServiceModel.Channels.ChannelListenerBase.DefaultCloseTimeout*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/ChannelListenerBase.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Channels.ChannelListenerBase.DefaultOpenTimeout\n  commentId: P:System.ServiceModel.Channels.ChannelListenerBase.DefaultOpenTimeout\n  id: DefaultOpenTimeout\n  parent: System.ServiceModel.Channels.ChannelListenerBase\n  langs:\n  - csharp\n  name: DefaultOpenTimeout\n  nameWithType: ChannelListenerBase.DefaultOpenTimeout\n  fullName: ChannelListenerBase.DefaultOpenTimeout\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Channels\n  summary: Gets the default interval of time provided for an open operation to complete.\n  remarks: This value is set when creating a new <xref:System.ServiceModel.Channels.ChannelListenerBase> object. The default <xref:System.ServiceModel.Channels.ChannelListenerBase.%23ctor> constructor sets the <xref:System.ServiceModel.Channels.ChannelListenerBase.DefaultOpenTimeout%2A> property to a value of 1 minute. Use <xref:System.ServiceModel.Channels.ChannelListenerBase.%23ctor%28System.ServiceModel.IDefaultCommunicationTimeouts%29> if you want to specify another value for this timeout.\n  syntax:\n    content: protected override TimeSpan DefaultOpenTimeout { get; }\n    return:\n      type: System.TimeSpan\n      description: The default <xref href=\"System.TimeSpan\"></xref> that specifies how long the open operation has to complete before timing out.\n  overload: System.ServiceModel.Channels.ChannelListenerBase.DefaultOpenTimeout*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/ChannelListenerBase.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Channels.ChannelListenerBase.DefaultReceiveTimeout\n  commentId: P:System.ServiceModel.Channels.ChannelListenerBase.DefaultReceiveTimeout\n  id: DefaultReceiveTimeout\n  parent: System.ServiceModel.Channels.ChannelListenerBase\n  langs:\n  - csharp\n  name: DefaultReceiveTimeout\n  nameWithType: ChannelListenerBase.DefaultReceiveTimeout\n  fullName: ChannelListenerBase.DefaultReceiveTimeout\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Channels\n  summary: Gets the default interval of time provided for a receive operation to complete.\n  remarks: This value is set when creating a new <xref:System.ServiceModel.Channels.ChannelListenerBase> object. The default <xref:System.ServiceModel.Channels.ChannelListenerBase.%23ctor> constructor sets the <xref:System.ServiceModel.Channels.ChannelListenerBase.DefaultReceiveTimeout%2A> property to a value of 10 minutes. Use <xref:System.ServiceModel.Channels.ChannelListenerBase.%23ctor%28System.ServiceModel.IDefaultCommunicationTimeouts%29> if you want to specify another value for this timeout.\n  syntax:\n    content: protected override TimeSpan DefaultReceiveTimeout { get; }\n    return:\n      type: System.TimeSpan\n      description: The default <xref href=\"System.TimeSpan\"></xref> that specifies how long the receive operation has to complete before timing out.\n  overload: System.ServiceModel.Channels.ChannelListenerBase.DefaultReceiveTimeout*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/ChannelListenerBase.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Channels.ChannelListenerBase.DefaultSendTimeout\n  commentId: P:System.ServiceModel.Channels.ChannelListenerBase.DefaultSendTimeout\n  id: DefaultSendTimeout\n  parent: System.ServiceModel.Channels.ChannelListenerBase\n  langs:\n  - csharp\n  name: DefaultSendTimeout\n  nameWithType: ChannelListenerBase.DefaultSendTimeout\n  fullName: ChannelListenerBase.DefaultSendTimeout\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Channels\n  summary: Gets the default interval of time provided for a send operation to complete.\n  remarks: This value is set when creating a new <xref:System.ServiceModel.Channels.ChannelListenerBase> object. The default <xref:System.ServiceModel.Channels.ChannelListenerBase.%23ctor> constructor sets the <xref:System.ServiceModel.Channels.ChannelListenerBase.DefaultSendTimeout%2A> property to a value of 1 minute. Use <xref:System.ServiceModel.Channels.ChannelListenerBase.%23ctor%28System.ServiceModel.IDefaultCommunicationTimeouts%29> if you want to specify another value for this timeout.\n  syntax:\n    content: protected override TimeSpan DefaultSendTimeout { get; }\n    return:\n      type: System.TimeSpan\n      description: The default <xref href=\"System.TimeSpan\"></xref> that specifies how long the send operation has to complete before timing out.\n  overload: System.ServiceModel.Channels.ChannelListenerBase.DefaultSendTimeout*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/ChannelListenerBase.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Channels.ChannelListenerBase.EndWaitForChannel(System.IAsyncResult)\n  commentId: M:System.ServiceModel.Channels.ChannelListenerBase.EndWaitForChannel(System.IAsyncResult)\n  id: EndWaitForChannel(System.IAsyncResult)\n  parent: System.ServiceModel.Channels.ChannelListenerBase\n  langs:\n  - csharp\n  name: EndWaitForChannel(IAsyncResult)\n  nameWithType: ChannelListenerBase.EndWaitForChannel(IAsyncResult)\n  fullName: ChannelListenerBase.EndWaitForChannel(IAsyncResult)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Channels\n  summary: When implemented in a derived class, completes an asynchronous operation to wait for channels to arrive.\n  syntax:\n    content: public bool EndWaitForChannel (IAsyncResult result);\n    parameters:\n    - id: result\n      type: System.IAsyncResult\n      description: The <xref href=\"System.IAsyncResult\"></xref> returned by a call to the <xref href=\"System.ServiceModel.Channels.ChannelListenerBase.EndWaitForChannel(System.IAsyncResult)\"></xref> method.\n    return:\n      type: System.Boolean\n      description: '`true` if a message arrived; otherwise `false`.'\n  overload: System.ServiceModel.Channels.ChannelListenerBase.EndWaitForChannel*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/ChannelListenerBase.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Channels.ChannelListenerBase.GetProperty``1\n  commentId: M:System.ServiceModel.Channels.ChannelListenerBase.GetProperty``1\n  id: GetProperty``1\n  parent: System.ServiceModel.Channels.ChannelListenerBase\n  langs:\n  - csharp\n  name: GetProperty<T>()\n  nameWithType: ChannelListenerBase.GetProperty<T>()\n  fullName: ChannelListenerBase.GetProperty<T>()\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Channels\n  summary: Returns a typed object requested, if present, from the appropriate layer in the channel stack.\n  remarks: Use this to request a typed object such as an interface for setting properties or getting status from the appropriate layer in the channel listener stack. If a layer supports returning the requested object, it returns it. If not, it simply delegates the call down to the next layer in the stack. If it gets to the bottom of the stack and no layer supported the requested object, then the method returns `null`.\n  syntax:\n    content: 'public virtual T GetProperty<T> () where T : class;'\n    parameters: []\n    typeParameters:\n    - id: T\n      description: The typed object for which the method is querying.\n    return:\n      type: T\n      description: The typed object T requested if it is present or `null` if it is not.\n  overload: System.ServiceModel.Channels.ChannelListenerBase.GetProperty``1*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/ChannelListenerBase.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Channels.ChannelListenerBase.OnBeginWaitForChannel(System.TimeSpan,System.AsyncCallback,System.Object)\n  commentId: M:System.ServiceModel.Channels.ChannelListenerBase.OnBeginWaitForChannel(System.TimeSpan,System.AsyncCallback,System.Object)\n  id: OnBeginWaitForChannel(System.TimeSpan,System.AsyncCallback,System.Object)\n  parent: System.ServiceModel.Channels.ChannelListenerBase\n  langs:\n  - csharp\n  name: OnBeginWaitForChannel(TimeSpan, AsyncCallback, Object)\n  nameWithType: ChannelListenerBase.OnBeginWaitForChannel(TimeSpan, AsyncCallback, Object)\n  fullName: ChannelListenerBase.OnBeginWaitForChannel(TimeSpan, AsyncCallback, Object)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Channels\n  summary: When implemented in a derived class, provides a point of extensibility when starting to wait for a channel to arrive.\n  syntax:\n    content: protected abstract IAsyncResult OnBeginWaitForChannel (TimeSpan timeout, AsyncCallback callback, object state);\n    parameters:\n    - id: timeout\n      type: System.TimeSpan\n      description: The <xref href=\"System.TimeSpan\"></xref> that specifies how long the on begin wait operation has to complete before timing out.\n    - id: callback\n      type: System.AsyncCallback\n      description: The <xref href=\"System.AsyncCallback\"></xref> delegate that receives the notification of the asynchronous operation on begin wait completion.\n    - id: state\n      type: System.Object\n      description: An object, specified by the application, that contains state information associated with the asynchronous on begin wait operation.\n    return:\n      type: System.IAsyncResult\n      description: The <xref href=\"System.IAsyncResult\"></xref> that references the asynchronous on begin wait operation.\n  overload: System.ServiceModel.Channels.ChannelListenerBase.OnBeginWaitForChannel*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/ChannelListenerBase.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Channels.ChannelListenerBase.OnEndWaitForChannel(System.IAsyncResult)\n  commentId: M:System.ServiceModel.Channels.ChannelListenerBase.OnEndWaitForChannel(System.IAsyncResult)\n  id: OnEndWaitForChannel(System.IAsyncResult)\n  parent: System.ServiceModel.Channels.ChannelListenerBase\n  langs:\n  - csharp\n  name: OnEndWaitForChannel(IAsyncResult)\n  nameWithType: ChannelListenerBase.OnEndWaitForChannel(IAsyncResult)\n  fullName: ChannelListenerBase.OnEndWaitForChannel(IAsyncResult)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Channels\n  summary: When implemented in a derived class, provides a point of extensibility when ending the waiting for a channel to arrive.\n  syntax:\n    content: protected abstract bool OnEndWaitForChannel (IAsyncResult result);\n    parameters:\n    - id: result\n      type: System.IAsyncResult\n      description: The <xref href=\"System.IAsyncResult\"></xref> returned by a call to the <xref href=\"System.ServiceModel.Channels.ChannelListenerBase.OnBeginWaitForChannel(System.TimeSpan,System.AsyncCallback,System.Object)\"></xref> method.\n    return:\n      type: System.Boolean\n      description: '`true` if the method completed before the interval of time specified by the <code>timeout</code> expired; otherwise `false`.'\n  overload: System.ServiceModel.Channels.ChannelListenerBase.OnEndWaitForChannel*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/ChannelListenerBase.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Channels.ChannelListenerBase.OnWaitForChannel(System.TimeSpan)\n  commentId: M:System.ServiceModel.Channels.ChannelListenerBase.OnWaitForChannel(System.TimeSpan)\n  id: OnWaitForChannel(System.TimeSpan)\n  parent: System.ServiceModel.Channels.ChannelListenerBase\n  langs:\n  - csharp\n  name: OnWaitForChannel(TimeSpan)\n  nameWithType: ChannelListenerBase.OnWaitForChannel(TimeSpan)\n  fullName: ChannelListenerBase.OnWaitForChannel(TimeSpan)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Channels\n  summary: When overridden in a derived class, provides a point of extensibility when waiting for a channel to arrive.\n  syntax:\n    content: protected abstract bool OnWaitForChannel (TimeSpan timeout);\n    parameters:\n    - id: timeout\n      type: System.TimeSpan\n      description: The <xref href=\"System.TimeSpan\"></xref> that specifies how long the on wait for a channel operation has to complete before timing out.\n    return:\n      type: System.Boolean\n      description: '`true` if the method completed before the interval of time specified by the <code>timeout</code> expired; otherwise `false`.'\n  overload: System.ServiceModel.Channels.ChannelListenerBase.OnWaitForChannel*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/ChannelListenerBase.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Channels.ChannelListenerBase.Uri\n  commentId: P:System.ServiceModel.Channels.ChannelListenerBase.Uri\n  id: Uri\n  parent: System.ServiceModel.Channels.ChannelListenerBase\n  langs:\n  - csharp\n  name: Uri\n  nameWithType: ChannelListenerBase.Uri\n  fullName: ChannelListenerBase.Uri\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Channels\n  summary: When implemented in derived class, gets the URI on which the channel listener listens for an incoming channel.\n  syntax:\n    content: public abstract Uri Uri { get; }\n    return:\n      type: System.Uri\n      description: The <xref href=\"System.Uri\"></xref> on which the channel listener listens for incoming channels.\n  overload: System.ServiceModel.Channels.ChannelListenerBase.Uri*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/ChannelListenerBase.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Channels.ChannelListenerBase.WaitForChannel(System.TimeSpan)\n  commentId: M:System.ServiceModel.Channels.ChannelListenerBase.WaitForChannel(System.TimeSpan)\n  id: WaitForChannel(System.TimeSpan)\n  parent: System.ServiceModel.Channels.ChannelListenerBase\n  langs:\n  - csharp\n  name: WaitForChannel(TimeSpan)\n  nameWithType: ChannelListenerBase.WaitForChannel(TimeSpan)\n  fullName: ChannelListenerBase.WaitForChannel(TimeSpan)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Channels\n  summary: When implemented in a derived class, waits for a channel to arrive.\n  syntax:\n    content: public bool WaitForChannel (TimeSpan timeout);\n    parameters:\n    - id: timeout\n      type: System.TimeSpan\n      description: The <xref href=\"System.TimeSpan\"></xref> that specifies how long the wait for a channel operation has to complete before timing out.\n    return:\n      type: System.Boolean\n      description: '`true` if a channel arrived before the interval of time specified by the <code>timeout</code> expired; otherwise `false`.'\n  overload: System.ServiceModel.Channels.ChannelListenerBase.WaitForChannel*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/ChannelListenerBase.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\nreferences:\n- uid: System.ServiceModel.Channels.ChannelManagerBase\n  parent: System.ServiceModel.Channels\n  isExternal: false\n  name: ChannelManagerBase\n  nameWithType: ChannelManagerBase\n  fullName: System.ServiceModel.Channels.ChannelManagerBase\n- uid: System.InvalidOperationException\n  parent: System\n  isExternal: false\n  name: InvalidOperationException\n  nameWithType: InvalidOperationException\n  fullName: System.InvalidOperationException\n- uid: System.ServiceModel.Channels.ChannelListenerBase.#ctor\n  parent: System.ServiceModel.Channels.ChannelListenerBase\n  isExternal: false\n  name: ChannelListenerBase()\n  nameWithType: ChannelListenerBase.ChannelListenerBase()\n  fullName: ChannelListenerBase.ChannelListenerBase()\n- uid: System.ServiceModel.Channels.ChannelListenerBase.#ctor(System.ServiceModel.IDefaultCommunicationTimeouts)\n  parent: System.ServiceModel.Channels.ChannelListenerBase\n  isExternal: false\n  name: ChannelListenerBase(IDefaultCommunicationTimeouts)\n  nameWithType: ChannelListenerBase.ChannelListenerBase(IDefaultCommunicationTimeouts)\n  fullName: ChannelListenerBase.ChannelListenerBase(IDefaultCommunicationTimeouts)\n- uid: System.ServiceModel.IDefaultCommunicationTimeouts\n  parent: System.ServiceModel\n  isExternal: false\n  name: IDefaultCommunicationTimeouts\n  nameWithType: IDefaultCommunicationTimeouts\n  fullName: System.ServiceModel.IDefaultCommunicationTimeouts\n- uid: System.ServiceModel.Channels.ChannelListenerBase.BeginWaitForChannel(System.TimeSpan,System.AsyncCallback,System.Object)\n  parent: System.ServiceModel.Channels.ChannelListenerBase\n  isExternal: false\n  name: BeginWaitForChannel(TimeSpan, AsyncCallback, Object)\n  nameWithType: ChannelListenerBase.BeginWaitForChannel(TimeSpan, AsyncCallback, Object)\n  fullName: ChannelListenerBase.BeginWaitForChannel(TimeSpan, AsyncCallback, Object)\n- uid: System.IAsyncResult\n  parent: System\n  isExternal: false\n  name: IAsyncResult\n  nameWithType: IAsyncResult\n  fullName: System.IAsyncResult\n- uid: System.TimeSpan\n  parent: System\n  isExternal: false\n  name: TimeSpan\n  nameWithType: TimeSpan\n  fullName: System.TimeSpan\n- uid: System.AsyncCallback\n  parent: System\n  isExternal: false\n  name: AsyncCallback\n  nameWithType: AsyncCallback\n  fullName: System.AsyncCallback\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.ServiceModel.Channels.ChannelListenerBase.DefaultCloseTimeout\n  parent: System.ServiceModel.Channels.ChannelListenerBase\n  isExternal: false\n  name: DefaultCloseTimeout\n  nameWithType: ChannelListenerBase.DefaultCloseTimeout\n  fullName: ChannelListenerBase.DefaultCloseTimeout\n- uid: System.ServiceModel.Channels.ChannelListenerBase.DefaultOpenTimeout\n  parent: System.ServiceModel.Channels.ChannelListenerBase\n  isExternal: false\n  name: DefaultOpenTimeout\n  nameWithType: ChannelListenerBase.DefaultOpenTimeout\n  fullName: ChannelListenerBase.DefaultOpenTimeout\n- uid: System.ServiceModel.Channels.ChannelListenerBase.DefaultReceiveTimeout\n  parent: System.ServiceModel.Channels.ChannelListenerBase\n  isExternal: false\n  name: DefaultReceiveTimeout\n  nameWithType: ChannelListenerBase.DefaultReceiveTimeout\n  fullName: ChannelListenerBase.DefaultReceiveTimeout\n- uid: System.ServiceModel.Channels.ChannelListenerBase.DefaultSendTimeout\n  parent: System.ServiceModel.Channels.ChannelListenerBase\n  isExternal: false\n  name: DefaultSendTimeout\n  nameWithType: ChannelListenerBase.DefaultSendTimeout\n  fullName: ChannelListenerBase.DefaultSendTimeout\n- uid: System.ServiceModel.Channels.ChannelListenerBase.EndWaitForChannel(System.IAsyncResult)\n  parent: System.ServiceModel.Channels.ChannelListenerBase\n  isExternal: false\n  name: EndWaitForChannel(IAsyncResult)\n  nameWithType: ChannelListenerBase.EndWaitForChannel(IAsyncResult)\n  fullName: ChannelListenerBase.EndWaitForChannel(IAsyncResult)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.ServiceModel.Channels.ChannelListenerBase.GetProperty``1\n  parent: System.ServiceModel.Channels.ChannelListenerBase\n  isExternal: false\n  name: GetProperty<T>()\n  nameWithType: ChannelListenerBase.GetProperty<T>()\n  fullName: ChannelListenerBase.GetProperty<T>()\n- uid: T\n  isExternal: true\n  name: T\n  nameWithType: T\n  fullName: T\n- uid: System.ServiceModel.Channels.ChannelListenerBase.OnBeginWaitForChannel(System.TimeSpan,System.AsyncCallback,System.Object)\n  parent: System.ServiceModel.Channels.ChannelListenerBase\n  isExternal: false\n  name: OnBeginWaitForChannel(TimeSpan, AsyncCallback, Object)\n  nameWithType: ChannelListenerBase.OnBeginWaitForChannel(TimeSpan, AsyncCallback, Object)\n  fullName: ChannelListenerBase.OnBeginWaitForChannel(TimeSpan, AsyncCallback, Object)\n- uid: System.ServiceModel.Channels.ChannelListenerBase.OnEndWaitForChannel(System.IAsyncResult)\n  parent: System.ServiceModel.Channels.ChannelListenerBase\n  isExternal: false\n  name: OnEndWaitForChannel(IAsyncResult)\n  nameWithType: ChannelListenerBase.OnEndWaitForChannel(IAsyncResult)\n  fullName: ChannelListenerBase.OnEndWaitForChannel(IAsyncResult)\n- uid: System.ServiceModel.Channels.ChannelListenerBase.OnWaitForChannel(System.TimeSpan)\n  parent: System.ServiceModel.Channels.ChannelListenerBase\n  isExternal: false\n  name: OnWaitForChannel(TimeSpan)\n  nameWithType: ChannelListenerBase.OnWaitForChannel(TimeSpan)\n  fullName: ChannelListenerBase.OnWaitForChannel(TimeSpan)\n- uid: System.ServiceModel.Channels.ChannelListenerBase.Uri\n  parent: System.ServiceModel.Channels.ChannelListenerBase\n  isExternal: false\n  name: Uri\n  nameWithType: ChannelListenerBase.Uri\n  fullName: ChannelListenerBase.Uri\n- uid: System.Uri\n  parent: System\n  isExternal: false\n  name: Uri\n  nameWithType: Uri\n  fullName: System.Uri\n- uid: System.ServiceModel.Channels.ChannelListenerBase.WaitForChannel(System.TimeSpan)\n  parent: System.ServiceModel.Channels.ChannelListenerBase\n  isExternal: false\n  name: WaitForChannel(TimeSpan)\n  nameWithType: ChannelListenerBase.WaitForChannel(TimeSpan)\n  fullName: ChannelListenerBase.WaitForChannel(TimeSpan)\n- uid: System.ServiceModel.Channels.ChannelListenerBase.#ctor*\n  parent: System.ServiceModel.Channels.ChannelListenerBase\n  isExternal: false\n  name: ChannelListenerBase\n  nameWithType: ChannelListenerBase.ChannelListenerBase\n  fullName: ChannelListenerBase.ChannelListenerBase\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/ChannelListenerBase.xml\n- uid: System.ServiceModel.Channels.ChannelListenerBase.BeginWaitForChannel*\n  parent: System.ServiceModel.Channels.ChannelListenerBase\n  isExternal: false\n  name: BeginWaitForChannel\n  nameWithType: ChannelListenerBase.BeginWaitForChannel\n  fullName: ChannelListenerBase.BeginWaitForChannel\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/ChannelListenerBase.xml\n- uid: System.ServiceModel.Channels.ChannelListenerBase.DefaultCloseTimeout*\n  parent: System.ServiceModel.Channels.ChannelListenerBase\n  isExternal: false\n  name: DefaultCloseTimeout\n  nameWithType: ChannelListenerBase.DefaultCloseTimeout\n  fullName: ChannelListenerBase.DefaultCloseTimeout\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/ChannelListenerBase.xml\n- uid: System.ServiceModel.Channels.ChannelListenerBase.DefaultOpenTimeout*\n  parent: System.ServiceModel.Channels.ChannelListenerBase\n  isExternal: false\n  name: DefaultOpenTimeout\n  nameWithType: ChannelListenerBase.DefaultOpenTimeout\n  fullName: ChannelListenerBase.DefaultOpenTimeout\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/ChannelListenerBase.xml\n- uid: System.ServiceModel.Channels.ChannelListenerBase.DefaultReceiveTimeout*\n  parent: System.ServiceModel.Channels.ChannelListenerBase\n  isExternal: false\n  name: DefaultReceiveTimeout\n  nameWithType: ChannelListenerBase.DefaultReceiveTimeout\n  fullName: ChannelListenerBase.DefaultReceiveTimeout\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/ChannelListenerBase.xml\n- uid: System.ServiceModel.Channels.ChannelListenerBase.DefaultSendTimeout*\n  parent: System.ServiceModel.Channels.ChannelListenerBase\n  isExternal: false\n  name: DefaultSendTimeout\n  nameWithType: ChannelListenerBase.DefaultSendTimeout\n  fullName: ChannelListenerBase.DefaultSendTimeout\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/ChannelListenerBase.xml\n- uid: System.ServiceModel.Channels.ChannelListenerBase.EndWaitForChannel*\n  parent: System.ServiceModel.Channels.ChannelListenerBase\n  isExternal: false\n  name: EndWaitForChannel\n  nameWithType: ChannelListenerBase.EndWaitForChannel\n  fullName: ChannelListenerBase.EndWaitForChannel\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/ChannelListenerBase.xml\n- uid: System.ServiceModel.Channels.ChannelListenerBase.GetProperty``1*\n  parent: System.ServiceModel.Channels.ChannelListenerBase\n  isExternal: false\n  name: GetProperty<T>\n  nameWithType: ChannelListenerBase.GetProperty<T>\n  fullName: ChannelListenerBase.GetProperty<T>\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/ChannelListenerBase.xml\n- uid: System.ServiceModel.Channels.ChannelListenerBase.OnBeginWaitForChannel*\n  parent: System.ServiceModel.Channels.ChannelListenerBase\n  isExternal: false\n  name: OnBeginWaitForChannel\n  nameWithType: ChannelListenerBase.OnBeginWaitForChannel\n  fullName: ChannelListenerBase.OnBeginWaitForChannel\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/ChannelListenerBase.xml\n- uid: System.ServiceModel.Channels.ChannelListenerBase.OnEndWaitForChannel*\n  parent: System.ServiceModel.Channels.ChannelListenerBase\n  isExternal: false\n  name: OnEndWaitForChannel\n  nameWithType: ChannelListenerBase.OnEndWaitForChannel\n  fullName: ChannelListenerBase.OnEndWaitForChannel\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/ChannelListenerBase.xml\n- uid: System.ServiceModel.Channels.ChannelListenerBase.OnWaitForChannel*\n  parent: System.ServiceModel.Channels.ChannelListenerBase\n  isExternal: false\n  name: OnWaitForChannel\n  nameWithType: ChannelListenerBase.OnWaitForChannel\n  fullName: ChannelListenerBase.OnWaitForChannel\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/ChannelListenerBase.xml\n- uid: System.ServiceModel.Channels.ChannelListenerBase.Uri*\n  parent: System.ServiceModel.Channels.ChannelListenerBase\n  isExternal: false\n  name: Uri\n  nameWithType: ChannelListenerBase.Uri\n  fullName: ChannelListenerBase.Uri\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/ChannelListenerBase.xml\n- uid: System.ServiceModel.Channels.ChannelListenerBase.WaitForChannel*\n  parent: System.ServiceModel.Channels.ChannelListenerBase\n  isExternal: false\n  name: WaitForChannel\n  nameWithType: ChannelListenerBase.WaitForChannel\n  fullName: ChannelListenerBase.WaitForChannel\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Channels/ChannelListenerBase.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.ServiceModel.Channels.CommunicationObject.Abort\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: Abort()\n  nameWithType: CommunicationObject.Abort()\n  fullName: CommunicationObject.Abort()\n- uid: System.ServiceModel.Channels.CommunicationObject.BeginClose(System.AsyncCallback,System.Object)\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: BeginClose(AsyncCallback, Object)\n  nameWithType: CommunicationObject.BeginClose(AsyncCallback, Object)\n  fullName: CommunicationObject.BeginClose(AsyncCallback, Object)\n- uid: System.ServiceModel.Channels.CommunicationObject.BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: BeginClose(TimeSpan, AsyncCallback, Object)\n  nameWithType: CommunicationObject.BeginClose(TimeSpan, AsyncCallback, Object)\n  fullName: CommunicationObject.BeginClose(TimeSpan, AsyncCallback, Object)\n- uid: System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.AsyncCallback,System.Object)\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: BeginOpen(AsyncCallback, Object)\n  nameWithType: CommunicationObject.BeginOpen(AsyncCallback, Object)\n  fullName: CommunicationObject.BeginOpen(AsyncCallback, Object)\n- uid: System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: BeginOpen(TimeSpan, AsyncCallback, Object)\n  nameWithType: CommunicationObject.BeginOpen(TimeSpan, AsyncCallback, Object)\n  fullName: CommunicationObject.BeginOpen(TimeSpan, AsyncCallback, Object)\n- uid: System.ServiceModel.Channels.CommunicationObject.Close\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: Close()\n  nameWithType: CommunicationObject.Close()\n  fullName: CommunicationObject.Close()\n- uid: System.ServiceModel.Channels.CommunicationObject.Close(System.TimeSpan)\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: Close(TimeSpan)\n  nameWithType: CommunicationObject.Close(TimeSpan)\n  fullName: CommunicationObject.Close(TimeSpan)\n- uid: System.ServiceModel.Channels.CommunicationObject.Closed\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: Closed\n  nameWithType: CommunicationObject.Closed\n  fullName: CommunicationObject.Closed\n- uid: System.ServiceModel.Channels.CommunicationObject.Closing\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: Closing\n  nameWithType: CommunicationObject.Closing\n  fullName: CommunicationObject.Closing\n- uid: System.ServiceModel.Channels.CommunicationObject.EndClose(System.IAsyncResult)\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: EndClose(IAsyncResult)\n  nameWithType: CommunicationObject.EndClose(IAsyncResult)\n  fullName: CommunicationObject.EndClose(IAsyncResult)\n- uid: System.ServiceModel.Channels.CommunicationObject.EndOpen(System.IAsyncResult)\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: EndOpen(IAsyncResult)\n  nameWithType: CommunicationObject.EndOpen(IAsyncResult)\n  fullName: CommunicationObject.EndOpen(IAsyncResult)\n- uid: System.ServiceModel.Channels.CommunicationObject.Fault\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: Fault()\n  nameWithType: CommunicationObject.Fault()\n  fullName: CommunicationObject.Fault()\n- uid: System.ServiceModel.Channels.CommunicationObject.Faulted\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: Faulted\n  nameWithType: CommunicationObject.Faulted\n  fullName: CommunicationObject.Faulted\n- uid: System.ServiceModel.Channels.CommunicationObject.GetCommunicationObjectType\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: GetCommunicationObjectType()\n  nameWithType: CommunicationObject.GetCommunicationObjectType()\n  fullName: CommunicationObject.GetCommunicationObjectType()\n- uid: System.ServiceModel.Channels.CommunicationObject.IsDisposed\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: IsDisposed\n  nameWithType: CommunicationObject.IsDisposed\n  fullName: CommunicationObject.IsDisposed\n- uid: System.ServiceModel.Channels.CommunicationObject.OnAbort\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: OnAbort()\n  nameWithType: CommunicationObject.OnAbort()\n  fullName: CommunicationObject.OnAbort()\n- uid: System.ServiceModel.Channels.CommunicationObject.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: OnBeginClose(TimeSpan, AsyncCallback, Object)\n  nameWithType: CommunicationObject.OnBeginClose(TimeSpan, AsyncCallback, Object)\n  fullName: CommunicationObject.OnBeginClose(TimeSpan, AsyncCallback, Object)\n- uid: System.ServiceModel.Channels.CommunicationObject.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: OnBeginOpen(TimeSpan, AsyncCallback, Object)\n  nameWithType: CommunicationObject.OnBeginOpen(TimeSpan, AsyncCallback, Object)\n  fullName: CommunicationObject.OnBeginOpen(TimeSpan, AsyncCallback, Object)\n- uid: System.ServiceModel.Channels.CommunicationObject.OnClose(System.TimeSpan)\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: OnClose(TimeSpan)\n  nameWithType: CommunicationObject.OnClose(TimeSpan)\n  fullName: CommunicationObject.OnClose(TimeSpan)\n- uid: System.ServiceModel.Channels.CommunicationObject.OnClosed\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: OnClosed()\n  nameWithType: CommunicationObject.OnClosed()\n  fullName: CommunicationObject.OnClosed()\n- uid: System.ServiceModel.Channels.CommunicationObject.OnClosing\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: OnClosing()\n  nameWithType: CommunicationObject.OnClosing()\n  fullName: CommunicationObject.OnClosing()\n- uid: System.ServiceModel.Channels.CommunicationObject.OnEndClose(System.IAsyncResult)\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: OnEndClose(IAsyncResult)\n  nameWithType: CommunicationObject.OnEndClose(IAsyncResult)\n  fullName: CommunicationObject.OnEndClose(IAsyncResult)\n- uid: System.ServiceModel.Channels.CommunicationObject.OnEndOpen(System.IAsyncResult)\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: OnEndOpen(IAsyncResult)\n  nameWithType: CommunicationObject.OnEndOpen(IAsyncResult)\n  fullName: CommunicationObject.OnEndOpen(IAsyncResult)\n- uid: System.ServiceModel.Channels.CommunicationObject.OnFaulted\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: OnFaulted()\n  nameWithType: CommunicationObject.OnFaulted()\n  fullName: CommunicationObject.OnFaulted()\n- uid: System.ServiceModel.Channels.CommunicationObject.OnOpen(System.TimeSpan)\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: OnOpen(TimeSpan)\n  nameWithType: CommunicationObject.OnOpen(TimeSpan)\n  fullName: CommunicationObject.OnOpen(TimeSpan)\n- uid: System.ServiceModel.Channels.CommunicationObject.OnOpened\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: OnOpened()\n  nameWithType: CommunicationObject.OnOpened()\n  fullName: CommunicationObject.OnOpened()\n- uid: System.ServiceModel.Channels.CommunicationObject.OnOpening\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: OnOpening()\n  nameWithType: CommunicationObject.OnOpening()\n  fullName: CommunicationObject.OnOpening()\n- uid: System.ServiceModel.Channels.CommunicationObject.Open\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: Open()\n  nameWithType: CommunicationObject.Open()\n  fullName: CommunicationObject.Open()\n- uid: System.ServiceModel.Channels.CommunicationObject.Open(System.TimeSpan)\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: Open(TimeSpan)\n  nameWithType: CommunicationObject.Open(TimeSpan)\n  fullName: CommunicationObject.Open(TimeSpan)\n- uid: System.ServiceModel.Channels.CommunicationObject.Opened\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: Opened\n  nameWithType: CommunicationObject.Opened\n  fullName: CommunicationObject.Opened\n- uid: System.ServiceModel.Channels.CommunicationObject.Opening\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: Opening\n  nameWithType: CommunicationObject.Opening\n  fullName: CommunicationObject.Opening\n- uid: System.ServiceModel.Channels.CommunicationObject.State\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: State\n  nameWithType: CommunicationObject.State\n  fullName: CommunicationObject.State\n- uid: System.ServiceModel.Channels.CommunicationObject.ThisLock\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: ThisLock\n  nameWithType: CommunicationObject.ThisLock\n  fullName: CommunicationObject.ThisLock\n- uid: System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposed\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: ThrowIfDisposed()\n  nameWithType: CommunicationObject.ThrowIfDisposed()\n  fullName: CommunicationObject.ThrowIfDisposed()\n- uid: System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposedOrImmutable\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: ThrowIfDisposedOrImmutable()\n  nameWithType: CommunicationObject.ThrowIfDisposedOrImmutable()\n  fullName: CommunicationObject.ThrowIfDisposedOrImmutable()\n- uid: System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposedOrNotOpen\n  parent: System.ServiceModel.Channels.CommunicationObject\n  isExternal: false\n  name: ThrowIfDisposedOrNotOpen()\n  nameWithType: CommunicationObject.ThrowIfDisposedOrNotOpen()\n  fullName: CommunicationObject.ThrowIfDisposedOrNotOpen()\n- uid: System.ServiceModel.Channels.ChannelManagerBase.System#ServiceModel#IDefaultCommunicationTimeouts#CloseTimeout\n  parent: System.ServiceModel.Channels.ChannelManagerBase\n  isExternal: false\n  name: IDefaultCommunicationTimeouts.CloseTimeout\n  nameWithType: ChannelManagerBase.IDefaultCommunicationTimeouts.CloseTimeout\n  fullName: ChannelManagerBase.IDefaultCommunicationTimeouts.CloseTimeout\n- uid: System.ServiceModel.Channels.ChannelManagerBase.System#ServiceModel#IDefaultCommunicationTimeouts#OpenTimeout\n  parent: System.ServiceModel.Channels.ChannelManagerBase\n  isExternal: false\n  name: IDefaultCommunicationTimeouts.OpenTimeout\n  nameWithType: ChannelManagerBase.IDefaultCommunicationTimeouts.OpenTimeout\n  fullName: ChannelManagerBase.IDefaultCommunicationTimeouts.OpenTimeout\n- uid: System.ServiceModel.Channels.ChannelManagerBase.System#ServiceModel#IDefaultCommunicationTimeouts#ReceiveTimeout\n  parent: System.ServiceModel.Channels.ChannelManagerBase\n  isExternal: false\n  name: IDefaultCommunicationTimeouts.ReceiveTimeout\n  nameWithType: ChannelManagerBase.IDefaultCommunicationTimeouts.ReceiveTimeout\n  fullName: ChannelManagerBase.IDefaultCommunicationTimeouts.ReceiveTimeout\n- uid: System.ServiceModel.Channels.ChannelManagerBase.System#ServiceModel#IDefaultCommunicationTimeouts#SendTimeout\n  parent: System.ServiceModel.Channels.ChannelManagerBase\n  isExternal: false\n  name: IDefaultCommunicationTimeouts.SendTimeout\n  nameWithType: ChannelManagerBase.IDefaultCommunicationTimeouts.SendTimeout\n  fullName: ChannelManagerBase.IDefaultCommunicationTimeouts.SendTimeout\n- uid: System.ServiceModel.Channels.IChannelListener\n  parent: System.ServiceModel.Channels\n  isExternal: false\n  name: IChannelListener\n  nameWithType: IChannelListener\n  fullName: System.ServiceModel.Channels.IChannelListener\n"}