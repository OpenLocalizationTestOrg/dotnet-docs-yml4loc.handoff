### YamlMime:ManagedReference
items:
- uid: System.IdentityModel.Tokens.X509AsymmetricSecurityKey
  commentId: T:System.IdentityModel.Tokens.X509AsymmetricSecurityKey
  id: X509AsymmetricSecurityKey
  children:
  - System.IdentityModel.Tokens.X509AsymmetricSecurityKey.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2)
  - System.IdentityModel.Tokens.X509AsymmetricSecurityKey.DecryptKey(System.String,System.Byte[])
  - System.IdentityModel.Tokens.X509AsymmetricSecurityKey.EncryptKey(System.String,System.Byte[])
  - System.IdentityModel.Tokens.X509AsymmetricSecurityKey.GetAsymmetricAlgorithm(System.String,System.Boolean)
  - System.IdentityModel.Tokens.X509AsymmetricSecurityKey.GetHashAlgorithmForSignature(System.String)
  - System.IdentityModel.Tokens.X509AsymmetricSecurityKey.GetSignatureDeformatter(System.String)
  - System.IdentityModel.Tokens.X509AsymmetricSecurityKey.GetSignatureFormatter(System.String)
  - System.IdentityModel.Tokens.X509AsymmetricSecurityKey.HasPrivateKey
  - System.IdentityModel.Tokens.X509AsymmetricSecurityKey.IsAsymmetricAlgorithm(System.String)
  - System.IdentityModel.Tokens.X509AsymmetricSecurityKey.IsSupportedAlgorithm(System.String)
  - System.IdentityModel.Tokens.X509AsymmetricSecurityKey.IsSymmetricAlgorithm(System.String)
  - System.IdentityModel.Tokens.X509AsymmetricSecurityKey.KeySize
  langs:
  - csharp
  name: X509AsymmetricSecurityKey
  nameWithType: X509AsymmetricSecurityKey
  fullName: System.IdentityModel.Tokens.X509AsymmetricSecurityKey
  type: Class
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: Represents an asymmetric key for X.509 certificates.
  syntax:
    content: 'public class X509AsymmetricSecurityKey : System.IdentityModel.Tokens.AsymmetricSecurityKey'
  inheritance:
  - System.Object
  - System.IdentityModel.Tokens.SecurityKey
  - System.IdentityModel.Tokens.AsymmetricSecurityKey
  implements: []
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/X509AsymmetricSecurityKey.xml
  ms.technology:
  - dotnet-standard
  ms.author: v-jibran
  manager: markgal
- uid: System.IdentityModel.Tokens.X509AsymmetricSecurityKey.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2)
  commentId: M:System.IdentityModel.Tokens.X509AsymmetricSecurityKey.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2)
  id: '#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2)'
  parent: System.IdentityModel.Tokens.X509AsymmetricSecurityKey
  langs:
  - csharp
  name: X509AsymmetricSecurityKey(X509Certificate2)
  nameWithType: X509AsymmetricSecurityKey.X509AsymmetricSecurityKey(X509Certificate2)
  fullName: X509AsymmetricSecurityKey.X509AsymmetricSecurityKey(X509Certificate2)
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: Initializes a new instance of the <xref href="System.IdentityModel.Tokens.X509AsymmetricSecurityKey"></xref> class using the specified X.509 certificate.
  syntax:
    content: public X509AsymmetricSecurityKey (System.Security.Cryptography.X509Certificates.X509Certificate2 certificate);
    parameters:
    - id: certificate
      type: System.Security.Cryptography.X509Certificates.X509Certificate2
      description: The <xref href="System.Security.Cryptography.X509Certificates.X509Certificate2"></xref> that represents the X.509 certificate.
  overload: System.IdentityModel.Tokens.X509AsymmetricSecurityKey.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: <code>certificate</code> is `null`.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/X509AsymmetricSecurityKey.xml
  ms.technology:
  - dotnet-standard
  ms.author: v-jibran
  manager: markgal
- uid: System.IdentityModel.Tokens.X509AsymmetricSecurityKey.DecryptKey(System.String,System.Byte[])
  commentId: M:System.IdentityModel.Tokens.X509AsymmetricSecurityKey.DecryptKey(System.String,System.Byte[])
  id: DecryptKey(System.String,System.Byte[])
  parent: System.IdentityModel.Tokens.X509AsymmetricSecurityKey
  langs:
  - csharp
  name: DecryptKey(String, Byte[])
  nameWithType: X509AsymmetricSecurityKey.DecryptKey(String, Byte[])
  fullName: X509AsymmetricSecurityKey.DecryptKey(String, Byte[])
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: Decrypts the specified encrypted key using the specified cryptographic algorithm.
  remarks: Use the <xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSA15Url> or <xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSAOAEPUrl> fields to specify the algorithm.
  syntax:
    content: public override byte[] DecryptKey (string algorithm, byte[] keyData);
    parameters:
    - id: algorithm
      type: System.String
      description: The cryptographic algorithm to decrypt the key.
    - id: keyData
      type: System.Byte[]
      description: An array of <xref href="System.Byte"></xref> that contains the encrypted key.
    return:
      type: System.Byte[]
      description: An array of <xref href="System.Byte"></xref> that contains the decrypted key.
  overload: System.IdentityModel.Tokens.X509AsymmetricSecurityKey.DecryptKey*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "The X.509 certificate specified in the constructor does not have a private key.  \n  \n -or-  \n  \n The X.509 certificate has a private key, but it was not generated using the <xref href=\"System.Security.Cryptography.RSA\"></xref> algorithm.  \n  \n -or-  \n  \n The X.509 certificate has a private key, it was generated using the <xref href=\"System.Security.Cryptography.RSA\"></xref> algorithm, but the <xref href=\"System.Security.Cryptography.AsymmetricAlgorithm.KeyExchangeAlgorithm\"></xref> property is `null`.  \n  \n -or-  \n  \n The <code>algorithm</code> parameter is not supported. The supported algorithms are <xref href=\"System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSA15Url\"></xref> and <xref href=\"System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSAOAEPUrl\"></xref>."
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/X509AsymmetricSecurityKey.xml
  ms.technology:
  - dotnet-standard
  ms.author: v-jibran
  manager: markgal
- uid: System.IdentityModel.Tokens.X509AsymmetricSecurityKey.EncryptKey(System.String,System.Byte[])
  commentId: M:System.IdentityModel.Tokens.X509AsymmetricSecurityKey.EncryptKey(System.String,System.Byte[])
  id: EncryptKey(System.String,System.Byte[])
  parent: System.IdentityModel.Tokens.X509AsymmetricSecurityKey
  langs:
  - csharp
  name: EncryptKey(String, Byte[])
  nameWithType: X509AsymmetricSecurityKey.EncryptKey(String, Byte[])
  fullName: X509AsymmetricSecurityKey.EncryptKey(String, Byte[])
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: Encrypts the specified encrypted key using the specified cryptographic algorithm.
  remarks: Use the <xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSA15Url> or <xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSAOAEPUrl> fields to specify the algorithm.
  syntax:
    content: public override byte[] EncryptKey (string algorithm, byte[] keyData);
    parameters:
    - id: algorithm
      type: System.String
      description: The cryptographic algorithm to encrypt the key.
    - id: keyData
      type: System.Byte[]
      description: An array of <xref href="System.Byte"></xref> that contains the key to encrypt.
    return:
      type: System.Byte[]
      description: An array of <xref href="System.Byte"></xref> that contains the encrypted key.
  overload: System.IdentityModel.Tokens.X509AsymmetricSecurityKey.EncryptKey*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "The X.509 certificate specified in the constructor has a public key that was not generated using the <xref href=\"System.Security.Cryptography.RSA\"></xref> algorithm.  \n  \n -or-  \n  \n The <code>algorithm</code> parameter is not supported. The supported algorithms are <xref href=\"System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSA15Url\"></xref> and <xref href=\"System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSAOAEPUrl\"></xref>."
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/X509AsymmetricSecurityKey.xml
  ms.technology:
  - dotnet-standard
  ms.author: v-jibran
  manager: markgal
- uid: System.IdentityModel.Tokens.X509AsymmetricSecurityKey.GetAsymmetricAlgorithm(System.String,System.Boolean)
  commentId: M:System.IdentityModel.Tokens.X509AsymmetricSecurityKey.GetAsymmetricAlgorithm(System.String,System.Boolean)
  id: GetAsymmetricAlgorithm(System.String,System.Boolean)
  parent: System.IdentityModel.Tokens.X509AsymmetricSecurityKey
  langs:
  - csharp
  name: GetAsymmetricAlgorithm(String, Boolean)
  nameWithType: X509AsymmetricSecurityKey.GetAsymmetricAlgorithm(String, Boolean)
  fullName: X509AsymmetricSecurityKey.GetAsymmetricAlgorithm(String, Boolean)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: Gets the specified asymmetric cryptographic algorithm.
  remarks: Use the <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigDSAUrl>, <xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSA15Url>, <xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSAOAEPUrl>, <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA1Url> or <xref:System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha256Signature> fields to specify the `algorithm` parameter.
  syntax:
    content: public override System.Security.Cryptography.AsymmetricAlgorithm GetAsymmetricAlgorithm (string algorithm, bool privateKey);
    parameters:
    - id: algorithm
      type: System.String
      description: The asymmetric algorithm to create.
    - id: privateKey
      type: System.Boolean
      description: '`true` when a private key is required to create the algorithm; otherwise, `false`.'
    return:
      type: System.Security.Cryptography.AsymmetricAlgorithm
      description: An <xref href="System.Security.Cryptography.AsymmetricAlgorithm"></xref> that represents the specified asymmetric cryptographic algorithm.
  overload: System.IdentityModel.Tokens.X509AsymmetricSecurityKey.GetAsymmetricAlgorithm*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>privateKey</code> is `true` and the X.509 certificate specified in the constructor does not have a private key.  \n  \n -or-  \n  \n <code>algorithm</code> is <xref href=\"System.Security.Cryptography.Xml.SignedXml.XmlDsigDSAUrl\"></xref> and the public or private key for the X.509 certificate specified in the constructor is not of type <xref href=\"System.Security.Cryptography.DSA\"></xref>.  \n  \n -or-  \n  \n <code>algorithm</code> is <xref href=\"System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSA15Url\"></xref>, <xref href=\"System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSAOAEPUrl\"></xref>, <xref href=\"System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA1Url\"></xref> or <xref href=\"System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha256Signature\"></xref> and the public or private key for the X.509 certificate specified in the constructor is not of type <xref href=\"System.Security.Cryptography.RSA\"></xref>.  \n  \n -or-  \n  \n <code>algorithm</code> is not supported. The supported algorithms are <xref href=\"System.Security.Cryptography.Xml.SignedXml.XmlDsigDSAUrl\"></xref>, <xref href=\"System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSA15Url\"></xref>, <xref href=\"System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSAOAEPUrl\"></xref>, <xref href=\"System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA1Url\"></xref>, and <xref href=\"System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha256Signature\"></xref>."
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/X509AsymmetricSecurityKey.xml
  ms.technology:
  - dotnet-standard
  ms.author: v-jibran
  manager: markgal
- uid: System.IdentityModel.Tokens.X509AsymmetricSecurityKey.GetHashAlgorithmForSignature(System.String)
  commentId: M:System.IdentityModel.Tokens.X509AsymmetricSecurityKey.GetHashAlgorithmForSignature(System.String)
  id: GetHashAlgorithmForSignature(System.String)
  parent: System.IdentityModel.Tokens.X509AsymmetricSecurityKey
  langs:
  - csharp
  name: GetHashAlgorithmForSignature(String)
  nameWithType: X509AsymmetricSecurityKey.GetHashAlgorithmForSignature(String)
  fullName: X509AsymmetricSecurityKey.GetHashAlgorithmForSignature(String)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: Gets a cryptographic algorithm that generates a hash for a digital signature.
  remarks: Use the <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigDSAUrl>, <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA1Url> or <xref:System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha256Signature> fields to specify the `algorithm` parameter.
  syntax:
    content: public override System.Security.Cryptography.HashAlgorithm GetHashAlgorithmForSignature (string algorithm);
    parameters:
    - id: algorithm
      type: System.String
      description: The hash algorithm.
    return:
      type: System.Security.Cryptography.HashAlgorithm
      description: A <xref href="System.Security.Cryptography.HashAlgorithm"></xref> that generates hashes for digital signatures.
  overload: System.IdentityModel.Tokens.X509AsymmetricSecurityKey.GetHashAlgorithmForSignature*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: <code>algorithm</code> is not supported. The supported algorithms are <xref href="System.Security.Cryptography.Xml.SignedXml.XmlDsigDSAUrl"></xref>, <xref href="System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA1Url"></xref>, and <xref href="System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha256Signature"></xref>.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/X509AsymmetricSecurityKey.xml
  ms.technology:
  - dotnet-standard
  ms.author: v-jibran
  manager: markgal
- uid: System.IdentityModel.Tokens.X509AsymmetricSecurityKey.GetSignatureDeformatter(System.String)
  commentId: M:System.IdentityModel.Tokens.X509AsymmetricSecurityKey.GetSignatureDeformatter(System.String)
  id: GetSignatureDeformatter(System.String)
  parent: System.IdentityModel.Tokens.X509AsymmetricSecurityKey
  langs:
  - csharp
  name: GetSignatureDeformatter(String)
  nameWithType: X509AsymmetricSecurityKey.GetSignatureDeformatter(String)
  fullName: X509AsymmetricSecurityKey.GetSignatureDeformatter(String)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: Gets the de-formatter algorithm for the digital signature.
  remarks: Use the <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigDSAUrl>, <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA1Url> or <xref:System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha256Signature> fields to specify the `algorithm` parameter.
  syntax:
    content: public override System.Security.Cryptography.AsymmetricSignatureDeformatter GetSignatureDeformatter (string algorithm);
    parameters:
    - id: algorithm
      type: System.String
      description: The de-formatter algorithm for the digital signature to get an instance of.
    return:
      type: System.Security.Cryptography.AsymmetricSignatureDeformatter
      description: An <xref href="System.Security.Cryptography.AsymmetricSignatureDeformatter"></xref> that represents the de-formatter algorithm for the digital signature.
  overload: System.IdentityModel.Tokens.X509AsymmetricSecurityKey.GetSignatureDeformatter*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>algorithm</code> is <xref href=\"System.Security.Cryptography.Xml.SignedXml.XmlDsigDSAUrl\"></xref> and the public key for the X.509 certificate specified in the constructor is not of type <xref href=\"System.Security.Cryptography.DSA\"></xref>.  \n  \n -or-  \n  \n <code>algorithm</code> is <xref href=\"System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA1Url\"></xref> or <xref href=\"System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha256Signature\"></xref> and the public key for the X.509 certificate specified in the constructor is not of type <xref href=\"System.Security.Cryptography.RSA\"></xref>.  \n  \n -or-  \n  \n <code>algorithm</code> is not supported. The supported algorithms are <xref href=\"System.Security.Cryptography.Xml.SignedXml.XmlDsigDSAUrl\"></xref>,  \n  \n <xref href=\"System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA1Url\"></xref>, and <xref href=\"System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha256Signature\"></xref>."
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/X509AsymmetricSecurityKey.xml
  ms.technology:
  - dotnet-standard
  ms.author: v-jibran
  manager: markgal
- uid: System.IdentityModel.Tokens.X509AsymmetricSecurityKey.GetSignatureFormatter(System.String)
  commentId: M:System.IdentityModel.Tokens.X509AsymmetricSecurityKey.GetSignatureFormatter(System.String)
  id: GetSignatureFormatter(System.String)
  parent: System.IdentityModel.Tokens.X509AsymmetricSecurityKey
  langs:
  - csharp
  name: GetSignatureFormatter(String)
  nameWithType: X509AsymmetricSecurityKey.GetSignatureFormatter(String)
  fullName: X509AsymmetricSecurityKey.GetSignatureFormatter(String)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: Gets the formatter algorithm for the digital signature.
  remarks: Use the <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigDSAUrl>, <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA1Url> or <xref:System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha256Signature> fields to specify the `algorithm` parameter.
  syntax:
    content: public override System.Security.Cryptography.AsymmetricSignatureFormatter GetSignatureFormatter (string algorithm);
    parameters:
    - id: algorithm
      type: System.String
      description: The formatter algorithm for the digital signature to get an instance of.
    return:
      type: System.Security.Cryptography.AsymmetricSignatureFormatter
      description: An <xref href="System.Security.Cryptography.AsymmetricSignatureDeformatter"></xref> that represents the formatter algorithm for the digital signature.
  overload: System.IdentityModel.Tokens.X509AsymmetricSecurityKey.GetSignatureFormatter*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "The X.509 certificate specified in the constructor does not have a private key.  \n  \n -or-  \n  \n <code>algorithm</code> is <xref href=\"System.Security.Cryptography.Xml.SignedXml.XmlDsigDSAUrl\"></xref> and the private key for the X.509 certificate specified in the constructor is not of type <xref href=\"System.Security.Cryptography.DSA\"></xref>.  \n  \n -or-  \n  \n <code>algorithm</code> is <xref href=\"System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA1Url\"></xref> or <xref href=\"System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha256Signature\"></xref> and the private key for the X.509 certificate specified in the constructor is not of type <xref href=\"System.Security.Cryptography.RSA\"></xref>.  \n  \n -or-  \n  \n <code>algorithm</code> is not supported. The supported algorithms are <xref href=\"System.Security.Cryptography.Xml.SignedXml.XmlDsigDSAUrl\"></xref>,  \n  \n <xref href=\"System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA1Url\"></xref>, and <xref href=\"System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha256Signature\"></xref>."
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/X509AsymmetricSecurityKey.xml
  ms.technology:
  - dotnet-standard
  ms.author: v-jibran
  manager: markgal
- uid: System.IdentityModel.Tokens.X509AsymmetricSecurityKey.HasPrivateKey
  commentId: M:System.IdentityModel.Tokens.X509AsymmetricSecurityKey.HasPrivateKey
  id: HasPrivateKey
  parent: System.IdentityModel.Tokens.X509AsymmetricSecurityKey
  langs:
  - csharp
  name: HasPrivateKey()
  nameWithType: X509AsymmetricSecurityKey.HasPrivateKey()
  fullName: X509AsymmetricSecurityKey.HasPrivateKey()
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: Gets a value that indicates whether the private key is a available.
  syntax:
    content: public override bool HasPrivateKey ();
    parameters: []
    return:
      type: System.Boolean
      description: '`true` when the private key is available; otherwise, `false`.'
  overload: System.IdentityModel.Tokens.X509AsymmetricSecurityKey.HasPrivateKey*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/X509AsymmetricSecurityKey.xml
  ms.technology:
  - dotnet-standard
  ms.author: v-jibran
  manager: markgal
- uid: System.IdentityModel.Tokens.X509AsymmetricSecurityKey.IsAsymmetricAlgorithm(System.String)
  commentId: M:System.IdentityModel.Tokens.X509AsymmetricSecurityKey.IsAsymmetricAlgorithm(System.String)
  id: IsAsymmetricAlgorithm(System.String)
  parent: System.IdentityModel.Tokens.X509AsymmetricSecurityKey
  langs:
  - csharp
  name: IsAsymmetricAlgorithm(String)
  nameWithType: X509AsymmetricSecurityKey.IsAsymmetricAlgorithm(String)
  fullName: X509AsymmetricSecurityKey.IsAsymmetricAlgorithm(String)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: Gets a value that indicates whether the specified algorithm uses asymmetric keys.
  syntax:
    content: public override bool IsAsymmetricAlgorithm (string algorithm);
    parameters:
    - id: algorithm
      type: System.String
      description: The cryptographic algorithm.
    return:
      type: System.Boolean
      description: '`true` when the specified algorithm is <xref href="System.IdentityModel.Tokens.SecurityAlgorithms.DsaSha1Signature"></xref>, <xref href="System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha1Signature"></xref>, <xref href="System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha256Signature"></xref>, <xref href="System.IdentityModel.Tokens.SecurityAlgorithms.RsaOaepKeyWrap"></xref>, or <xref href="System.IdentityModel.Tokens.SecurityAlgorithms.RsaV15KeyWrap"></xref>; otherwise, `false`.'
  overload: System.IdentityModel.Tokens.X509AsymmetricSecurityKey.IsAsymmetricAlgorithm*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/X509AsymmetricSecurityKey.xml
  ms.technology:
  - dotnet-standard
  ms.author: v-jibran
  manager: markgal
- uid: System.IdentityModel.Tokens.X509AsymmetricSecurityKey.IsSupportedAlgorithm(System.String)
  commentId: M:System.IdentityModel.Tokens.X509AsymmetricSecurityKey.IsSupportedAlgorithm(System.String)
  id: IsSupportedAlgorithm(System.String)
  parent: System.IdentityModel.Tokens.X509AsymmetricSecurityKey
  langs:
  - csharp
  name: IsSupportedAlgorithm(String)
  nameWithType: X509AsymmetricSecurityKey.IsSupportedAlgorithm(String)
  fullName: X509AsymmetricSecurityKey.IsSupportedAlgorithm(String)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: Gets a value that indicates whether the specified algorithm is supported by this class.
  remarks: "The <xref:System.IdentityModel.Tokens.X509AsymmetricSecurityKey.IsSupportedAlgorithm%2A> method returns `true` when one of the following is true:  \n  \n-   The `algorithm` parameter is <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigDSAUrl> and the public key for the X.509 certificate specified in the constructor is of type <xref:System.Security.Cryptography.DSA>.  \n  \n-   The `algorithm` parameter is <xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSA15Url>, <xref:System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSAOAEPUrl>, <xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA1Url> or <xref:System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha256Signature> and the public key for the X.509 certificate specified in the constructor is of type <xref:System.Security.Cryptography.RSA>."
  syntax:
    content: public override bool IsSupportedAlgorithm (string algorithm);
    parameters:
    - id: algorithm
      type: System.String
      description: The cryptographic algorithm.
    return:
      type: System.Boolean
      description: '`true` when the specified algorithm is <xref href="System.Security.Cryptography.Xml.SignedXml.XmlDsigDSAUrl"></xref>, <xref href="System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSA15Url"></xref>, <xref href="System.Security.Cryptography.Xml.EncryptedXml.XmlEncRSAOAEPUrl"></xref>, <xref href="System.Security.Cryptography.Xml.SignedXml.XmlDsigRSASHA1Url"></xref>, or <xref href="System.IdentityModel.Tokens.SecurityAlgorithms.RsaSha256Signature"></xref> and the public key is of the right type; otherwise, `false`.'
  overload: System.IdentityModel.Tokens.X509AsymmetricSecurityKey.IsSupportedAlgorithm*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/X509AsymmetricSecurityKey.xml
  ms.technology:
  - dotnet-standard
  ms.author: v-jibran
  manager: markgal
- uid: System.IdentityModel.Tokens.X509AsymmetricSecurityKey.IsSymmetricAlgorithm(System.String)
  commentId: M:System.IdentityModel.Tokens.X509AsymmetricSecurityKey.IsSymmetricAlgorithm(System.String)
  id: IsSymmetricAlgorithm(System.String)
  parent: System.IdentityModel.Tokens.X509AsymmetricSecurityKey
  langs:
  - csharp
  name: IsSymmetricAlgorithm(String)
  nameWithType: X509AsymmetricSecurityKey.IsSymmetricAlgorithm(String)
  fullName: X509AsymmetricSecurityKey.IsSymmetricAlgorithm(String)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: Gets a value that indicates whether the specified algorithm uses symmetric keys.
  syntax:
    content: public override bool IsSymmetricAlgorithm (string algorithm);
    parameters:
    - id: algorithm
      type: System.String
      description: The cryptographic algorithm.
    return:
      type: System.Boolean
      description: '`true` when the specified algorithm is <xref href="System.IdentityModel.Tokens.SecurityAlgorithms.HmacSha1Signature"></xref>, <xref href="System.IdentityModel.Tokens.SecurityAlgorithms.Aes128Encryption"></xref>, <xref href="System.IdentityModel.Tokens.SecurityAlgorithms.Aes192Encryption"></xref>, <xref href="System.IdentityModel.Tokens.SecurityAlgorithms.Aes256Encryption"></xref>, <xref href="System.IdentityModel.Tokens.SecurityAlgorithms.TripleDesEncryption"></xref>, <xref href="System.IdentityModel.Tokens.SecurityAlgorithms.Aes128KeyWrap"></xref>, <xref href="System.IdentityModel.Tokens.SecurityAlgorithms.Aes192KeyWrap"></xref>, <xref href="System.IdentityModel.Tokens.SecurityAlgorithms.Aes256KeyWrap"></xref>, <xref href="System.IdentityModel.Tokens.SecurityAlgorithms.TripleDesKeyWrap"></xref>, or <xref href="System.IdentityModel.Tokens.SecurityAlgorithms.Psha1KeyDerivation"></xref>; otherwise, `false`.'
  overload: System.IdentityModel.Tokens.X509AsymmetricSecurityKey.IsSymmetricAlgorithm*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/X509AsymmetricSecurityKey.xml
  ms.technology:
  - dotnet-standard
  ms.author: v-jibran
  manager: markgal
- uid: System.IdentityModel.Tokens.X509AsymmetricSecurityKey.KeySize
  commentId: P:System.IdentityModel.Tokens.X509AsymmetricSecurityKey.KeySize
  id: KeySize
  parent: System.IdentityModel.Tokens.X509AsymmetricSecurityKey
  langs:
  - csharp
  name: KeySize
  nameWithType: X509AsymmetricSecurityKey.KeySize
  fullName: X509AsymmetricSecurityKey.KeySize
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: Gets the size, in bits, of the public key associated with the X.509 certificate.
  syntax:
    content: public override int KeySize { get; }
    return:
      type: System.Int32
      description: The size, in bits, of the public key associated with the X.509 certificate.
  overload: System.IdentityModel.Tokens.X509AsymmetricSecurityKey.KeySize*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/X509AsymmetricSecurityKey.xml
  ms.technology:
  - dotnet-standard
  ms.author: v-jibran
  manager: markgal
references:
- uid: System.IdentityModel.Tokens.AsymmetricSecurityKey
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: AsymmetricSecurityKey
  nameWithType: AsymmetricSecurityKey
  fullName: System.IdentityModel.Tokens.AsymmetricSecurityKey
- uid: System.ArgumentNullException
  parent: System
  isExternal: false
  name: ArgumentNullException
  nameWithType: ArgumentNullException
  fullName: System.ArgumentNullException
- uid: System.NotSupportedException
  parent: System
  isExternal: false
  name: NotSupportedException
  nameWithType: NotSupportedException
  fullName: System.NotSupportedException
- uid: System.IdentityModel.Tokens.X509AsymmetricSecurityKey.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2)
  parent: System.IdentityModel.Tokens.X509AsymmetricSecurityKey
  isExternal: false
  name: X509AsymmetricSecurityKey(X509Certificate2)
  nameWithType: X509AsymmetricSecurityKey.X509AsymmetricSecurityKey(X509Certificate2)
  fullName: X509AsymmetricSecurityKey.X509AsymmetricSecurityKey(X509Certificate2)
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2
  parent: System.Security.Cryptography.X509Certificates
  isExternal: false
  name: X509Certificate2
  nameWithType: X509Certificate2
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2
- uid: System.IdentityModel.Tokens.X509AsymmetricSecurityKey.DecryptKey(System.String,System.Byte[])
  parent: System.IdentityModel.Tokens.X509AsymmetricSecurityKey
  isExternal: false
  name: DecryptKey(String, Byte[])
  nameWithType: X509AsymmetricSecurityKey.DecryptKey(String, Byte[])
  fullName: X509AsymmetricSecurityKey.DecryptKey(String, Byte[])
- uid: System.Byte
  name: Byte
  nameWithType: Byte
  fullName: System.Byte
- uid: System.Byte[]
  parent: System
  isExternal: false
  name: Byte[]
  nameWithType: Byte[]
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: System.Byte
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.IdentityModel.Tokens.X509AsymmetricSecurityKey.EncryptKey(System.String,System.Byte[])
  parent: System.IdentityModel.Tokens.X509AsymmetricSecurityKey
  isExternal: false
  name: EncryptKey(String, Byte[])
  nameWithType: X509AsymmetricSecurityKey.EncryptKey(String, Byte[])
  fullName: X509AsymmetricSecurityKey.EncryptKey(String, Byte[])
- uid: System.IdentityModel.Tokens.X509AsymmetricSecurityKey.GetAsymmetricAlgorithm(System.String,System.Boolean)
  parent: System.IdentityModel.Tokens.X509AsymmetricSecurityKey
  isExternal: false
  name: GetAsymmetricAlgorithm(String, Boolean)
  nameWithType: X509AsymmetricSecurityKey.GetAsymmetricAlgorithm(String, Boolean)
  fullName: X509AsymmetricSecurityKey.GetAsymmetricAlgorithm(String, Boolean)
- uid: System.Security.Cryptography.AsymmetricAlgorithm
  parent: System.Security.Cryptography
  isExternal: false
  name: AsymmetricAlgorithm
  nameWithType: AsymmetricAlgorithm
  fullName: System.Security.Cryptography.AsymmetricAlgorithm
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.IdentityModel.Tokens.X509AsymmetricSecurityKey.GetHashAlgorithmForSignature(System.String)
  parent: System.IdentityModel.Tokens.X509AsymmetricSecurityKey
  isExternal: false
  name: GetHashAlgorithmForSignature(String)
  nameWithType: X509AsymmetricSecurityKey.GetHashAlgorithmForSignature(String)
  fullName: X509AsymmetricSecurityKey.GetHashAlgorithmForSignature(String)
- uid: System.Security.Cryptography.HashAlgorithm
  parent: System.Security.Cryptography
  isExternal: false
  name: HashAlgorithm
  nameWithType: HashAlgorithm
  fullName: System.Security.Cryptography.HashAlgorithm
- uid: System.IdentityModel.Tokens.X509AsymmetricSecurityKey.GetSignatureDeformatter(System.String)
  parent: System.IdentityModel.Tokens.X509AsymmetricSecurityKey
  isExternal: false
  name: GetSignatureDeformatter(String)
  nameWithType: X509AsymmetricSecurityKey.GetSignatureDeformatter(String)
  fullName: X509AsymmetricSecurityKey.GetSignatureDeformatter(String)
- uid: System.Security.Cryptography.AsymmetricSignatureDeformatter
  parent: System.Security.Cryptography
  isExternal: false
  name: AsymmetricSignatureDeformatter
  nameWithType: AsymmetricSignatureDeformatter
  fullName: System.Security.Cryptography.AsymmetricSignatureDeformatter
- uid: System.IdentityModel.Tokens.X509AsymmetricSecurityKey.GetSignatureFormatter(System.String)
  parent: System.IdentityModel.Tokens.X509AsymmetricSecurityKey
  isExternal: false
  name: GetSignatureFormatter(String)
  nameWithType: X509AsymmetricSecurityKey.GetSignatureFormatter(String)
  fullName: X509AsymmetricSecurityKey.GetSignatureFormatter(String)
- uid: System.Security.Cryptography.AsymmetricSignatureFormatter
  parent: System.Security.Cryptography
  isExternal: false
  name: AsymmetricSignatureFormatter
  nameWithType: AsymmetricSignatureFormatter
  fullName: System.Security.Cryptography.AsymmetricSignatureFormatter
- uid: System.IdentityModel.Tokens.X509AsymmetricSecurityKey.HasPrivateKey
  parent: System.IdentityModel.Tokens.X509AsymmetricSecurityKey
  isExternal: false
  name: HasPrivateKey()
  nameWithType: X509AsymmetricSecurityKey.HasPrivateKey()
  fullName: X509AsymmetricSecurityKey.HasPrivateKey()
- uid: System.IdentityModel.Tokens.X509AsymmetricSecurityKey.IsAsymmetricAlgorithm(System.String)
  parent: System.IdentityModel.Tokens.X509AsymmetricSecurityKey
  isExternal: false
  name: IsAsymmetricAlgorithm(String)
  nameWithType: X509AsymmetricSecurityKey.IsAsymmetricAlgorithm(String)
  fullName: X509AsymmetricSecurityKey.IsAsymmetricAlgorithm(String)
- uid: System.IdentityModel.Tokens.X509AsymmetricSecurityKey.IsSupportedAlgorithm(System.String)
  parent: System.IdentityModel.Tokens.X509AsymmetricSecurityKey
  isExternal: false
  name: IsSupportedAlgorithm(String)
  nameWithType: X509AsymmetricSecurityKey.IsSupportedAlgorithm(String)
  fullName: X509AsymmetricSecurityKey.IsSupportedAlgorithm(String)
- uid: System.IdentityModel.Tokens.X509AsymmetricSecurityKey.IsSymmetricAlgorithm(System.String)
  parent: System.IdentityModel.Tokens.X509AsymmetricSecurityKey
  isExternal: false
  name: IsSymmetricAlgorithm(String)
  nameWithType: X509AsymmetricSecurityKey.IsSymmetricAlgorithm(String)
  fullName: X509AsymmetricSecurityKey.IsSymmetricAlgorithm(String)
- uid: System.IdentityModel.Tokens.X509AsymmetricSecurityKey.KeySize
  parent: System.IdentityModel.Tokens.X509AsymmetricSecurityKey
  isExternal: false
  name: KeySize
  nameWithType: X509AsymmetricSecurityKey.KeySize
  fullName: X509AsymmetricSecurityKey.KeySize
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.IdentityModel.Tokens.X509AsymmetricSecurityKey.#ctor*
  parent: System.IdentityModel.Tokens.X509AsymmetricSecurityKey
  isExternal: false
  name: X509AsymmetricSecurityKey
  nameWithType: X509AsymmetricSecurityKey.X509AsymmetricSecurityKey
  fullName: X509AsymmetricSecurityKey.X509AsymmetricSecurityKey
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/X509AsymmetricSecurityKey.xml
- uid: System.IdentityModel.Tokens.X509AsymmetricSecurityKey.DecryptKey*
  parent: System.IdentityModel.Tokens.X509AsymmetricSecurityKey
  isExternal: false
  name: DecryptKey
  nameWithType: X509AsymmetricSecurityKey.DecryptKey
  fullName: X509AsymmetricSecurityKey.DecryptKey
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/X509AsymmetricSecurityKey.xml
- uid: System.IdentityModel.Tokens.X509AsymmetricSecurityKey.EncryptKey*
  parent: System.IdentityModel.Tokens.X509AsymmetricSecurityKey
  isExternal: false
  name: EncryptKey
  nameWithType: X509AsymmetricSecurityKey.EncryptKey
  fullName: X509AsymmetricSecurityKey.EncryptKey
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/X509AsymmetricSecurityKey.xml
- uid: System.IdentityModel.Tokens.X509AsymmetricSecurityKey.GetAsymmetricAlgorithm*
  parent: System.IdentityModel.Tokens.X509AsymmetricSecurityKey
  isExternal: false
  name: GetAsymmetricAlgorithm
  nameWithType: X509AsymmetricSecurityKey.GetAsymmetricAlgorithm
  fullName: X509AsymmetricSecurityKey.GetAsymmetricAlgorithm
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/X509AsymmetricSecurityKey.xml
- uid: System.IdentityModel.Tokens.X509AsymmetricSecurityKey.GetHashAlgorithmForSignature*
  parent: System.IdentityModel.Tokens.X509AsymmetricSecurityKey
  isExternal: false
  name: GetHashAlgorithmForSignature
  nameWithType: X509AsymmetricSecurityKey.GetHashAlgorithmForSignature
  fullName: X509AsymmetricSecurityKey.GetHashAlgorithmForSignature
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/X509AsymmetricSecurityKey.xml
- uid: System.IdentityModel.Tokens.X509AsymmetricSecurityKey.GetSignatureDeformatter*
  parent: System.IdentityModel.Tokens.X509AsymmetricSecurityKey
  isExternal: false
  name: GetSignatureDeformatter
  nameWithType: X509AsymmetricSecurityKey.GetSignatureDeformatter
  fullName: X509AsymmetricSecurityKey.GetSignatureDeformatter
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/X509AsymmetricSecurityKey.xml
- uid: System.IdentityModel.Tokens.X509AsymmetricSecurityKey.GetSignatureFormatter*
  parent: System.IdentityModel.Tokens.X509AsymmetricSecurityKey
  isExternal: false
  name: GetSignatureFormatter
  nameWithType: X509AsymmetricSecurityKey.GetSignatureFormatter
  fullName: X509AsymmetricSecurityKey.GetSignatureFormatter
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/X509AsymmetricSecurityKey.xml
- uid: System.IdentityModel.Tokens.X509AsymmetricSecurityKey.HasPrivateKey*
  parent: System.IdentityModel.Tokens.X509AsymmetricSecurityKey
  isExternal: false
  name: HasPrivateKey
  nameWithType: X509AsymmetricSecurityKey.HasPrivateKey
  fullName: X509AsymmetricSecurityKey.HasPrivateKey
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/X509AsymmetricSecurityKey.xml
- uid: System.IdentityModel.Tokens.X509AsymmetricSecurityKey.IsAsymmetricAlgorithm*
  parent: System.IdentityModel.Tokens.X509AsymmetricSecurityKey
  isExternal: false
  name: IsAsymmetricAlgorithm
  nameWithType: X509AsymmetricSecurityKey.IsAsymmetricAlgorithm
  fullName: X509AsymmetricSecurityKey.IsAsymmetricAlgorithm
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/X509AsymmetricSecurityKey.xml
- uid: System.IdentityModel.Tokens.X509AsymmetricSecurityKey.IsSupportedAlgorithm*
  parent: System.IdentityModel.Tokens.X509AsymmetricSecurityKey
  isExternal: false
  name: IsSupportedAlgorithm
  nameWithType: X509AsymmetricSecurityKey.IsSupportedAlgorithm
  fullName: X509AsymmetricSecurityKey.IsSupportedAlgorithm
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/X509AsymmetricSecurityKey.xml
- uid: System.IdentityModel.Tokens.X509AsymmetricSecurityKey.IsSymmetricAlgorithm*
  parent: System.IdentityModel.Tokens.X509AsymmetricSecurityKey
  isExternal: false
  name: IsSymmetricAlgorithm
  nameWithType: X509AsymmetricSecurityKey.IsSymmetricAlgorithm
  fullName: X509AsymmetricSecurityKey.IsSymmetricAlgorithm
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/X509AsymmetricSecurityKey.xml
- uid: System.IdentityModel.Tokens.X509AsymmetricSecurityKey.KeySize*
  parent: System.IdentityModel.Tokens.X509AsymmetricSecurityKey
  isExternal: false
  name: KeySize
  nameWithType: X509AsymmetricSecurityKey.KeySize
  fullName: X509AsymmetricSecurityKey.KeySize
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel.Tokens/X509AsymmetricSecurityKey.xml
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: Object.Equals(Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: Object.Equals(Object, Object)
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: false
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: Object.GetHashCode()
- uid: System.Object.GetType
  parent: System.Object
  isExternal: false
  name: GetType()
  nameWithType: Object.GetType()
  fullName: Object.GetType()
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: false
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: Object.MemberwiseClone()
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: Object.ReferenceEquals(Object, Object)
- uid: System.Object.ToString
  parent: System.Object
  isExternal: false
  name: ToString()
  nameWithType: Object.ToString()
  fullName: Object.ToString()
