<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">159ac9a4ac539596533eb41f6ecd29b8a27d86d8</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">4d88253e54a70f92f693828f89dd9db6de6df30c</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1572cf040984d9b1968fd4900f643e76d44ebb44</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Represents the enumerator for <ph id="ph1">&lt;xref href="System.Security.Permissions.KeyContainerPermissionAccessEntry"&gt;&lt;/xref&gt;</ph> objects in a <ph id="ph2">&lt;xref href="System.Security.Permissions.KeyContainerPermissionAccessEntryCollection"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>Enumerators allow only reading the data in the collection.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>Enumerators cannot be used to modify the underlying collection.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>Initially, the enumerator is positioned before the first element in the collection.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Reset%2A&gt;</ph> method also brings the enumerator back to this position.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>At this position, calling the <ph id="ph1">&lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A&gt;</ph> property throws an exception.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>Therefore, you must call the <ph id="ph1">&lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A&gt;</ph> method to advance the enumerator to the first element of the collection before reading the value of the <ph id="ph2">&lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A&gt;</ph> returns the same object until either <ph id="ph2">&lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A&gt;</ph> or <ph id="ph3">&lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Reset%2A&gt;</ph> is called.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A&gt;</ph> sets <ph id="ph2">&lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A&gt;</ph> to the next element.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>After the end of the collection is passed, the enumerator is positioned after the last element in the collection, and calling <ph id="ph1">&lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A&gt;</ph> returns <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the last call to <ph id="ph1">&lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A&gt;</ph> returned <ph id="ph2">`false`</ph>, calling <ph id="ph3">&lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A&gt;</ph> throws an exception.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>To reset <ph id="ph1">&lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A&gt;</ph> to the first element of the collection, call <ph id="ph2">&lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Reset%2A&gt;</ph> followed by a call to <ph id="ph3">&lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>An enumerator remains valid as long as the collection remains unchanged.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and the next call to <ph id="ph1">&lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Reset%2A&gt;</ph> throws an <ph id="ph3">&lt;xref:System.InvalidOperationException&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the collection is modified between calling <ph id="ph1">&lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A&gt;</ph> returns the element to which it is currently set, even if the enumerator is already invalidated.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread-safe procedure.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Gets the current entry in the collection.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source>When the enumerator is created, it does not point to an object, so the <ph id="ph1">&lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A&gt;</ph> property is not valid and will throw an exception if it is accessed.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source>You must first call the <ph id="ph1">&lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A&gt;</ph> method to position the cursor at the first object in the collection.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source>Getting the <ph id="ph1">&lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A&gt;</ph> property multiple times with no intervening calls to <ph id="ph2">&lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A&gt;</ph> will return the same <ph id="ph3">&lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntry&gt;</ph> object each time.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>The current <ph id="ph1">&lt;xref href="System.Security.Permissions.KeyContainerPermissionAccessEntry"&gt;&lt;/xref&gt;</ph> object in the collection.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current"&gt;&lt;/xref&gt;</ph> property is accessed before first calling the <ph id="ph2">&lt;xref href="System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext"&gt;&lt;/xref&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The cursor is located before the first object in the collection.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>-or-</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current"&gt;&lt;/xref&gt;</ph> property is accessed after a call to the <ph id="ph2">&lt;xref href="System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext"&gt;&lt;/xref&gt;</ph> method returns <ph id="ph3">`false`</ph>, which indicates that the cursor is located after the last object in the collection.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Moves to the next element in the collection.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A&gt;</ph> method returns <ph id="ph2">`false`</ph> immediately if there are no objects in the collection.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">&lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A&gt;</ph> returns <ph id="ph2">`true`</ph> until it has reached the end of the collection.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT">
          <source>It then returns <ph id="ph1">`false`</ph> for each successive call.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT">
          <source>However, once <ph id="ph1">&lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A&gt;</ph> has returned <ph id="ph2">`false`</ph>, accessing the <ph id="ph3">&lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A&gt;</ph> property throws an exception.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT">
          <source>Upon creation, an enumerator is positioned before the first <ph id="ph1">&lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntry&gt;</ph> object in the collection, and the first call to <ph id="ph2">&lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A&gt;</ph> positions the enumerator to the first object in the collection.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the enumerator was successfully advanced to the next element; <ph id="ph2">`false`</ph> if the enumerator has passed the end of the collection.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Resets the enumerator to the beginning of the collection.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT">
          <source>An enumerator moves in a forward-only direction.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT">
          <source>Use this method to return to the beginning of the collection.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Reset%2A&gt;</ph> method positions the cursor at the first object in the collection.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT">
          <source>After calling <ph id="ph1">&lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Reset%2A&gt;</ph>, you do not need to call <ph id="ph2">&lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.MoveNext%2A&gt;</ph> to move the cursor forward to the first object.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Gets the current object in the collection.</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT">
          <source>Do not call this method; use the <ph id="ph1">&lt;xref:System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator.Current%2A&gt;</ph> property instead.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>The current object in the collection.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>