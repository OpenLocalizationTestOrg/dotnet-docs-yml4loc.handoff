<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c08d3f01b4f67aac121f3a5b6a03876a258fd950</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">System.Text.EncodingProvider.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">913f9f43b98aeb1a3488467d862443ff18a6dc8a</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fcf021b1580889e620c57dfb50a916b51079c6af</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Provides the base class for an encoding provider, which supplies encodings that are unavailable on a particular platform.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>An encoding provider supplies encodings that are not otherwise available on a particular target platform.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>The .NET Framework on the Windows desktop supports a large number of character encodings and code pages.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can get a complete list of encodings available in the .NET Framework on the Windows desktop by calling the <ph id="ph1">&lt;xref:System.Text.Encoding.GetEncodings%2A?displayProperty=fullName&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">[!INCLUDE[net_core](~/includes/net-core-md.md)]</ph>, on the other hand, by default supports only the following encodings:</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>ASCII (code page 20127), which is returned by the <ph id="ph1">&lt;xref:System.Text.Encoding.ASCII%2A?displayProperty=fullName&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>ISO-8859-1 (code page 28591).</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>UTF-7 (code page 65000), which is returned by the <ph id="ph1">&lt;xref:System.Text.Encoding.UTF7%2A?displayProperty=fullName&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>UTF-8 (code page 65001), which is returned by the <ph id="ph1">&lt;xref:System.Text.Encoding.UTF8%2A?displayProperty=fullName&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>UTF-16 and UTF-16LE (code page 1200), which is returned by the <ph id="ph1">&lt;xref:System.Text.Encoding.Unicode%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>UTF-16BE (code page 1201), which is instantiated by calling the <ph id="ph1">&lt;xref:System.Text.UnicodeEncoding.%23ctor%28System.Boolean%2CSystem.Boolean%29?displayProperty=fullName&gt;</ph> or <ph id="ph2">&lt;xref:System.Text.UnicodeEncoding.%23ctor%28System.Boolean%2CSystem.Boolean%29?displayProperty=fullName&gt;</ph> constructor with a <ph id="ph3">`bigEndian`</ph> value of <ph id="ph4">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT">
          <source>UTF-32 and UTF-32LE (code page 12000), which is returned by the <ph id="ph1">&lt;xref:System.Text.Encoding.UTF32%2A?displayProperty=fullName&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>UTF-32BE (code page 12001), which is instantiated by calling an <ph id="ph1">&lt;xref:System.Text.UTF32Encoding&gt;</ph> constructor that has a <ph id="ph2">`bigEndian`</ph> parameter and providing a value of <ph id="ph3">`true`</ph> in the method call.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>In <ph id="ph1">[!INCLUDE[net_v46](~/includes/net-v46-md.md)]</ph>, <ph id="ph2">&lt;xref:System.Text.EncodingProvider&gt;</ph> is the base class that makes otherwise unavailable encodings available to the .NET Framework.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>This involves the following steps:</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>Define a subclass of <ph id="ph1">&lt;xref:System.Text.EncodingProvider&gt;</ph> that overrides the two abstract <ph id="ph2">&lt;xref:System.Text.EncodingProvider.GetEncoding%2A&gt;</ph> overloads, <ph id="ph3">&lt;xref:System.Text.EncodingProvider.GetEncoding%28System.Int32%29&gt;</ph> and <ph id="ph4">&lt;xref:System.Text.EncodingProvider.GetEncoding%28System.String%29&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT">
          <source>These overloads return the otherwise unsupported encoding by code page identifier and by name.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT">
          <source>Optionally, you can override the virtual <ph id="ph1">&lt;xref:System.Text.EncodingProvider.GetEncoding%28System.Int32%2CSystem.Text.EncoderFallback%2CSystem.Text.DecoderFallback%29&gt;</ph> and <ph id="ph2">&lt;xref:System.Text.EncodingProvider.GetEncoding%28System.String%2CSystem.Text.EncoderFallback%2CSystem.Text.DecoderFallback%29&gt;</ph> methods.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT">
          <source>In most cases, this is not necessary, since the base class provides a default implementation.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT">
          <source>Pass the <ph id="ph1">&lt;xref:System.Text.EncodingProvider&gt;</ph> instance to the <ph id="ph2">&lt;xref:System.Text.Encoding.RegisterProvider%2A?displayProperty=fullName&gt;</ph> method to make the encodings supplied by the <ph id="ph3">&lt;xref:System.Text.EncodingProvider&gt;</ph> object available to the common language runtime.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT">
          <source>Call an <ph id="ph1">&lt;xref:System.Text.Encoding.GetEncoding%2A?displayProperty=fullName&gt;</ph> overload to retrieve the encoding.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Text.Encoding.GetEncoding%2A?displayProperty=fullName&gt;</ph> method will call the corresponding <ph id="ph2">&lt;xref:System.Text.EncodingProvider.GetEncoding%2A?displayProperty=fullName&gt;</ph> to determine whether it can supply the requested encoding.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT">
          <source>The .NET Framework Class Library provides one static property, <ph id="ph1">&lt;xref:System.Text.CodePagesEncodingProvider.Instance%2A?displayProperty=fullName&gt;</ph>, that returns an <ph id="ph2">&lt;xref:System.Text.EncodingProvider&gt;</ph> object that makes the full set of encodings available on the desktop .NET Framework Class Library available to <ph id="ph3">[!INCLUDE[net_core](~/includes/net-core-md.md)]</ph> applications.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT">
          <source>In addition, you can derive from the <ph id="ph1">&lt;xref:System.Text.EncodingProvider&gt;</ph> class to make your own encodings available.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Initializes a new instance of the <ph id="ph1">&lt;xref href="System.Text.EncodingProvider"&gt;&lt;/xref&gt;</ph> class.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>Returns the encoding associated with the specified code page identifier.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>The code page identifier of the requested encoding.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>The encoding that is associated with the specified code page, or <ph id="ph1">`null`</ph> if this <ph id="ph2">&lt;xref href="System.Text.EncodingProvider"&gt;&lt;/xref&gt;</ph> cannot return a valid encoding that corresponds to <bpt id="p1">&lt;code&gt;</bpt><ph id="ph3">codepage</ph><ept id="p1">&lt;/code&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Returns the encoding with the specified name.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>The name of the requested encoding.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>The encoding that is associated with the specified name, or <ph id="ph1">`null`</ph> if this <ph id="ph2">&lt;xref href="System.Text.EncodingProvider"&gt;&lt;/xref&gt;</ph> cannot return a valid encoding that corresponds to <bpt id="p1">&lt;code&gt;</bpt><ph id="ph3">name</ph><ept id="p1">&lt;/code&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Returns the encoding associated with the specified code page identifier.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Parameters specify an error handler for characters that cannot be encoded and byte sequences that cannot be decoded.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`encoderFallback`</ph> and <ph id="ph2">`decoderFallback`</ph> parameters are objects that define the fallback strategy used in the event that an encoder cannot convert a character to a sequence of bytes or a decoder cannot convert a sequence of bytes to a character.</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT">
          <source>The .NET Framework provides the following fallback mechanisms:</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT">
          <source>Exception fallback.</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">`encoderFallback`</ph> argument is an instance of <ph id="ph2">&lt;xref:System.Text.EncoderExceptionFallback&gt;</ph>, or the <ph id="ph3">`decoderExceptionFallback`</ph> argument is an instance of <ph id="ph4">&lt;xref:System.Text.DecoderExceptionFallback&gt;</ph>, the encoding method throws an exception if characters cannot be encoded, and the decoding method throws an exception if a byte sequence cannot be decoded.</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT">
          <source>Replacement fallback.</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">`encoderFallback`</ph> argument is an instance of <ph id="ph2">&lt;xref:System.Text.EncoderReplacementFallback&gt;</ph>, or the <ph id="ph3">`decoderExceptionFallback`</ph> argument is an instance of <ph id="ph4">&lt;xref:System.Text.DecoderReplacementFallback&gt;</ph>, the encoding and decoding methods substitute a replacement string for characters that cannot be encoded and byte sequences cannot be decoded.</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you instantiated the replacement fallback object by calling the default constructor, the replacement character is a "?".</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you call the <ph id="ph1">&lt;xref:System.Text.EncoderReplacementFallback.%23ctor%28System.String%29?displayProperty=fullName&gt;</ph> or <ph id="ph2">&lt;xref:System.Text.DecoderReplacementFallback.%23ctor%28System.String%29?displayProperty=fullName&gt;</ph> constructor, you can specify the replacement string.</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT">
          <source>Best-fit fallback.</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can derive from the <ph id="ph1">&lt;xref:System.Text.EncoderFallback&gt;</ph> or <ph id="ph2">&lt;xref:System.Text.DecoderFallback&gt;</ph> class to implement a best-fit replacement mechanism.</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>The code page identifier of the requested encoding.</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>An object that provides an error-handling procedure when a character cannot be encoded with this encoding.</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>An object that provides an error-handling procedure when a byte sequence cannot be decoded with this encoding.</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>The encoding that is associated with the specified code page, or <ph id="ph1">`null`</ph> if this <ph id="ph2">&lt;xref href="System.Text.EncodingProvider"&gt;&lt;/xref&gt;</ph> cannot return a valid encoding that corresponds to <bpt id="p1">&lt;code&gt;</bpt><ph id="ph3">codepage</ph><ept id="p1">&lt;/code&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>Returns the encoding associated with the specified name.</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Parameters specify an error handler for characters that cannot be encoded and byte sequences that cannot be decoded.</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`encoderFallback`</ph> and <ph id="ph2">`decoderFallback`</ph> parameters are objects that define the fallback strategy used in the event that an encoder cannot convert a character to a sequence of bytes or a decoder cannot convert a sequence of bytes to a character.</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT">
          <source>The .NET Framework provides the following fallback mechanisms:</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT">
          <source>Exception fallback.</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">`encoderFallback`</ph> argument is an instance of <ph id="ph2">&lt;xref:System.Text.EncoderExceptionFallback&gt;</ph>, or the <ph id="ph3">`decoderExceptionFallback`</ph> argument is an instance of <ph id="ph4">&lt;xref:System.Text.DecoderExceptionFallback&gt;</ph>, the encoding method throws an exception if characters cannot be encoded, and the decoding method throws an exception if a byte sequence cannot be decoded.</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT">
          <source>Replacement fallback.</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">`encoderFallback`</ph> argument is an instance of <ph id="ph2">&lt;xref:System.Text.EncoderReplacementFallback&gt;</ph>, or the <ph id="ph3">`decoderExceptionFallback`</ph> argument is an instance of <ph id="ph4">&lt;xref:System.Text.DecoderReplacementFallback&gt;</ph>, the encoding and decoding methods substitute a replacement string for characters that cannot be encoded and byte sequences cannot be decoded.</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you instantiated the replacement fallback object by calling the default constructor, the replacement character is a "?".</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you call the <ph id="ph1">&lt;xref:System.Text.EncoderReplacementFallback.%23ctor%28System.String%29?displayProperty=fullName&gt;</ph> or <ph id="ph2">&lt;xref:System.Text.DecoderReplacementFallback.%23ctor%28System.String%29?displayProperty=fullName&gt;</ph> constructor, you can specify the replacement string.</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT">
          <source>Best-fit fallback.</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can derive from the <ph id="ph1">&lt;xref:System.Text.EncoderFallback&gt;</ph> or <ph id="ph2">&lt;xref:System.Text.DecoderFallback&gt;</ph> class to implement a best-fit replacement mechanism.</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>The name of the preferred encoding.</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>An object that provides an error-handling procedure when a character cannot be encoded with this encoding.</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>An object that provides an error-handling procedure when a byte sequence cannot be decoded with the current encoding.</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>The encoding that is associated with the specified name, or <ph id="ph1">`null`</ph> if this <ph id="ph2">&lt;xref href="System.Text.EncodingProvider"&gt;&lt;/xref&gt;</ph> cannot return a valid encoding that corresponds to <bpt id="p1">&lt;code&gt;</bpt><ph id="ph3">name</ph><ept id="p1">&lt;/code&gt;</ept>.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>