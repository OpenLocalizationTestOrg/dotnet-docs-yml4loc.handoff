{"nodes":[{"content":"Contains the data required by the store to map a principal property to a directory attribute. This attribute is required for principal extensions and can only be set on a property. It must be specified on every property that represents a directory attribute in the extended class.","nodes":[{"pos":[0,280],"content":"Contains the data required by the store to map a principal property to a directory attribute. This attribute is required for principal extensions and can only be set on a property. It must be specified on every property that represents a directory attribute in the extended class.","nodes":[{"content":"Contains the data required by the store to map a principal property to a directory attribute. This attribute is required for principal extensions and can only be set on a property. It must be specified on every property that represents a directory attribute in the extended class.","pos":[0,280],"nodes":[{"content":"Contains the data required by the store to map a principal property to a directory attribute.","pos":[0,93]},{"content":"This attribute is required for principal extensions and can only be set on a property.","pos":[94,180]},{"content":"It must be specified on every property that represents a directory attribute in the extended class.","pos":[181,280]}]}]}],"pos":[836,1117],"yaml":true},{"content":"If multiple directory attributes are used in the extension methods, multiple attributes should be added to the propert (one per attribute).","nodes":[{"pos":[0,139],"content":"If multiple directory attributes are used in the extension methods, multiple attributes should be added to the propert (one per attribute).","nodes":[{"content":"If multiple directory attributes are used in the extension methods, multiple attributes should be added to the propert (one per attribute).","pos":[0,139]}]}],"pos":[1128,1268],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.DirectoryServices.AccountManagement.DirectoryPropertyAttribute\"></xref> class with the schema attribute name.","nodes":[{"pos":[0,162],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.DirectoryServices.AccountManagement.DirectoryPropertyAttribute\"&gt;&lt;/xref&gt;</ph> class with the schema attribute name.","source":"Initializes a new instance of the <xref href=\"System.DirectoryServices.AccountManagement.DirectoryPropertyAttribute\"></xref> class with the schema attribute name."}],"pos":[6457,6620],"yaml":true},{"content":"The name of the attribute that is set in the directory. The <xref href=\"System.DirectoryServices.AccountManagement.DirectoryPropertyAttribute.SchemaAttributeName\"></xref> property is initialized to this value. This property represents the ldapDisplayName for application directory and domain directories.","nodes":[{"pos":[0,304],"content":"The name of the attribute that is set in the directory. The <xref href=\"System.DirectoryServices.AccountManagement.DirectoryPropertyAttribute.SchemaAttributeName\"></xref> property is initialized to this value. This property represents the ldapDisplayName for application directory and domain directories.","nodes":[{"content":"The name of the attribute that is set in the directory.","pos":[0,55]},{"content":"The <ph id=\"ph1\">&lt;xref href=\"System.DirectoryServices.AccountManagement.DirectoryPropertyAttribute.SchemaAttributeName\"&gt;&lt;/xref&gt;</ph> property is initialized to this value.","pos":[56,209],"source":" The <xref href=\"System.DirectoryServices.AccountManagement.DirectoryPropertyAttribute.SchemaAttributeName\"></xref> property is initialized to this value."},{"content":"This property represents the ldapDisplayName for application directory and domain directories.","pos":[210,304]}]}],"pos":[6798,7103],"yaml":true},{"content":"This property is not implemented and always returns null.","nodes":[{"pos":[0,57],"content":"This property is not implemented and always returns null.","nodes":[{"content":"This property is not implemented and always returns null.","pos":[0,57]}]}],"pos":[8331,8389],"yaml":true},{"content":"A <xref href=\"System.DirectoryServices.AccountManagement.ContextType\"></xref> enumeration value that specifies the type of store to which this attribute applies, or null if no context is set.","nodes":[{"pos":[0,191],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.DirectoryServices.AccountManagement.ContextType\"&gt;&lt;/xref&gt;</ph> enumeration value that specifies the type of store to which this attribute applies, or null if no context is set.","source":"A <xref href=\"System.DirectoryServices.AccountManagement.ContextType\"></xref> enumeration value that specifies the type of store to which this attribute applies, or null if no context is set."}],"pos":[8621,8813],"yaml":true},{"content":"Returns the string that represents the attribute name in the directory.","nodes":[{"pos":[0,71],"content":"Returns the string that represents the attribute name in the directory.","nodes":[{"content":"Returns the string that represents the attribute name in the directory.","pos":[0,71]}]}],"pos":[10115,10187],"yaml":true},{"content":"The string that represents the attribute name in the directory.","nodes":[{"pos":[0,63],"content":"The string that represents the attribute name in the directory.","nodes":[{"content":"The string that represents the attribute name in the directory.","pos":[0,63]}]}],"pos":[10310,10374],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.DirectoryServices.AccountManagement.DirectoryPropertyAttribute\n  commentId: T:System.DirectoryServices.AccountManagement.DirectoryPropertyAttribute\n  id: DirectoryPropertyAttribute\n  children:\n  - System.DirectoryServices.AccountManagement.DirectoryPropertyAttribute.#ctor(System.String)\n  - System.DirectoryServices.AccountManagement.DirectoryPropertyAttribute.Context\n  - System.DirectoryServices.AccountManagement.DirectoryPropertyAttribute.SchemaAttributeName\n  langs:\n  - csharp\n  name: DirectoryPropertyAttribute\n  nameWithType: DirectoryPropertyAttribute\n  fullName: System.DirectoryServices.AccountManagement.DirectoryPropertyAttribute\n  type: Class\n  assemblies:\n  - System.DirectoryServices.AccountManagement\n  namespace: System.DirectoryServices.AccountManagement\n  summary: Contains the data required by the store to map a principal property to a directory attribute. This attribute is required for principal extensions and can only be set on a property. It must be specified on every property that represents a directory attribute in the extended class.\n  remarks: If multiple directory attributes are used in the extension methods, multiple attributes should be added to the propert (one per attribute).\n  syntax:\n    content: >-\n      [System.AttributeUsage(System.AttributeTargets.Property, AllowMultiple=true)]\n\n      public sealed class DirectoryPropertyAttribute : Attribute\n  inheritance:\n  - System.Object\n  - System.Attribute\n  implements: []\n  inheritedMembers:\n  - System.Attribute.Equals(System.Object)\n  - System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type)\n  - System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)\n  - System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type)\n  - System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type)\n  - System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo)\n  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)\n  - System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Module)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type)\n  - System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo)\n  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Boolean)\n  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type)\n  - System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  - System.Attribute.GetHashCode\n  - System.Attribute.IsDefaultAttribute\n  - System.Attribute.IsDefined(System.Reflection.Assembly,System.Type)\n  - System.Attribute.IsDefined(System.Reflection.Assembly,System.Type,System.Boolean)\n  - System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type)\n  - System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  - System.Attribute.IsDefined(System.Reflection.Module,System.Type)\n  - System.Attribute.IsDefined(System.Reflection.Module,System.Type,System.Boolean)\n  - System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type)\n  - System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  - System.Attribute.Match(System.Object)\n  - System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)\n  - System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)\n  - System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)\n  - System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)\n  - System.Attribute.TypeId\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  attributes:\n  - type: System.AttributeUsageAttribute\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices.AccountManagement/DirectoryPropertyAttribute.xml\n  author: BrucePerlerMS\n  ms.author: bruceper\n  manager: mbaldwin\n- uid: System.DirectoryServices.AccountManagement.DirectoryPropertyAttribute.#ctor(System.String)\n  commentId: M:System.DirectoryServices.AccountManagement.DirectoryPropertyAttribute.#ctor(System.String)\n  id: '#ctor(System.String)'\n  parent: System.DirectoryServices.AccountManagement.DirectoryPropertyAttribute\n  langs:\n  - csharp\n  name: DirectoryPropertyAttribute(String)\n  nameWithType: DirectoryPropertyAttribute.DirectoryPropertyAttribute(String)\n  fullName: DirectoryPropertyAttribute.DirectoryPropertyAttribute(String)\n  type: Constructor\n  assemblies:\n  - System.DirectoryServices.AccountManagement\n  namespace: System.DirectoryServices.AccountManagement\n  summary: Initializes a new instance of the <xref href=\"System.DirectoryServices.AccountManagement.DirectoryPropertyAttribute\"></xref> class with the schema attribute name.\n  syntax:\n    content: public DirectoryPropertyAttribute (string schemaAttributeName);\n    parameters:\n    - id: schemaAttributeName\n      type: System.String\n      description: The name of the attribute that is set in the directory. The <xref href=\"System.DirectoryServices.AccountManagement.DirectoryPropertyAttribute.SchemaAttributeName\"></xref> property is initialized to this value. This property represents the ldapDisplayName for application directory and domain directories.\n  overload: System.DirectoryServices.AccountManagement.DirectoryPropertyAttribute.#ctor*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices.AccountManagement/DirectoryPropertyAttribute.xml\n  author: BrucePerlerMS\n  ms.author: bruceper\n  manager: mbaldwin\n- uid: System.DirectoryServices.AccountManagement.DirectoryPropertyAttribute.Context\n  commentId: P:System.DirectoryServices.AccountManagement.DirectoryPropertyAttribute.Context\n  id: Context\n  parent: System.DirectoryServices.AccountManagement.DirectoryPropertyAttribute\n  langs:\n  - csharp\n  name: Context\n  nameWithType: DirectoryPropertyAttribute.Context\n  fullName: DirectoryPropertyAttribute.Context\n  type: Property\n  assemblies:\n  - System.DirectoryServices.AccountManagement\n  namespace: System.DirectoryServices.AccountManagement\n  summary: This property is not implemented and always returns null.\n  syntax:\n    content: public Nullable<System.DirectoryServices.AccountManagement.ContextType> Context { get; set; }\n    return:\n      type: System.Nullable{System.DirectoryServices.AccountManagement.ContextType}\n      description: A <xref href=\"System.DirectoryServices.AccountManagement.ContextType\"></xref> enumeration value that specifies the type of store to which this attribute applies, or null if no context is set.\n  overload: System.DirectoryServices.AccountManagement.DirectoryPropertyAttribute.Context*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices.AccountManagement/DirectoryPropertyAttribute.xml\n  author: BrucePerlerMS\n  ms.author: bruceper\n  manager: mbaldwin\n- uid: System.DirectoryServices.AccountManagement.DirectoryPropertyAttribute.SchemaAttributeName\n  commentId: P:System.DirectoryServices.AccountManagement.DirectoryPropertyAttribute.SchemaAttributeName\n  id: SchemaAttributeName\n  parent: System.DirectoryServices.AccountManagement.DirectoryPropertyAttribute\n  langs:\n  - csharp\n  name: SchemaAttributeName\n  nameWithType: DirectoryPropertyAttribute.SchemaAttributeName\n  fullName: DirectoryPropertyAttribute.SchemaAttributeName\n  type: Property\n  assemblies:\n  - System.DirectoryServices.AccountManagement\n  namespace: System.DirectoryServices.AccountManagement\n  summary: Returns the string that represents the attribute name in the directory.\n  syntax:\n    content: public string SchemaAttributeName { get; }\n    return:\n      type: System.String\n      description: The string that represents the attribute name in the directory.\n  overload: System.DirectoryServices.AccountManagement.DirectoryPropertyAttribute.SchemaAttributeName*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices.AccountManagement/DirectoryPropertyAttribute.xml\n  author: BrucePerlerMS\n  ms.author: bruceper\n  manager: mbaldwin\nreferences:\n- uid: System.Attribute\n  parent: System\n  isExternal: false\n  name: Attribute\n  nameWithType: Attribute\n  fullName: System.Attribute\n- uid: System.DirectoryServices.AccountManagement.DirectoryPropertyAttribute.#ctor(System.String)\n  parent: System.DirectoryServices.AccountManagement.DirectoryPropertyAttribute\n  isExternal: false\n  name: DirectoryPropertyAttribute(String)\n  nameWithType: DirectoryPropertyAttribute.DirectoryPropertyAttribute(String)\n  fullName: DirectoryPropertyAttribute.DirectoryPropertyAttribute(String)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.DirectoryServices.AccountManagement.DirectoryPropertyAttribute.Context\n  parent: System.DirectoryServices.AccountManagement.DirectoryPropertyAttribute\n  isExternal: false\n  name: Context\n  nameWithType: DirectoryPropertyAttribute.Context\n  fullName: DirectoryPropertyAttribute.Context\n- uid: System.Nullable`1\n  name: Nullable<T>\n  nameWithType: Nullable<T>\n  fullName: System.Nullable<T>\n- uid: System.DirectoryServices.AccountManagement.ContextType\n  name: ContextType\n  nameWithType: ContextType\n  fullName: System.DirectoryServices.AccountManagement.ContextType\n- uid: System.Nullable{System.DirectoryServices.AccountManagement.ContextType}\n  parent: System\n  isExternal: false\n  name: Nullable<ContextType>\n  nameWithType: Nullable<ContextType>\n  fullName: System.Nullable<System.DirectoryServices.AccountManagement.ContextType>\n  spec.csharp:\n  - uid: System.Nullable`1\n    name: Nullable\n    nameWithType: Nullable\n    fullName: System.Nullable\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.DirectoryServices.AccountManagement.ContextType\n    name: ContextType\n    nameWithType: ContextType\n    fullName: System.DirectoryServices.AccountManagement.ContextType\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.DirectoryServices.AccountManagement.DirectoryPropertyAttribute.SchemaAttributeName\n  parent: System.DirectoryServices.AccountManagement.DirectoryPropertyAttribute\n  isExternal: false\n  name: SchemaAttributeName\n  nameWithType: DirectoryPropertyAttribute.SchemaAttributeName\n  fullName: DirectoryPropertyAttribute.SchemaAttributeName\n- uid: System.DirectoryServices.AccountManagement.DirectoryPropertyAttribute.#ctor*\n  parent: System.DirectoryServices.AccountManagement.DirectoryPropertyAttribute\n  isExternal: false\n  name: DirectoryPropertyAttribute\n  nameWithType: DirectoryPropertyAttribute.DirectoryPropertyAttribute\n  fullName: DirectoryPropertyAttribute.DirectoryPropertyAttribute\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices.AccountManagement/DirectoryPropertyAttribute.xml\n- uid: System.DirectoryServices.AccountManagement.DirectoryPropertyAttribute.Context*\n  parent: System.DirectoryServices.AccountManagement.DirectoryPropertyAttribute\n  isExternal: false\n  name: Context\n  nameWithType: DirectoryPropertyAttribute.Context\n  fullName: DirectoryPropertyAttribute.Context\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices.AccountManagement/DirectoryPropertyAttribute.xml\n- uid: System.DirectoryServices.AccountManagement.DirectoryPropertyAttribute.SchemaAttributeName*\n  parent: System.DirectoryServices.AccountManagement.DirectoryPropertyAttribute\n  isExternal: false\n  name: SchemaAttributeName\n  nameWithType: DirectoryPropertyAttribute.SchemaAttributeName\n  fullName: DirectoryPropertyAttribute.SchemaAttributeName\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.DirectoryServices.AccountManagement/DirectoryPropertyAttribute.xml\n- uid: System.Attribute.Equals(System.Object)\n  parent: System.Attribute\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Attribute.Equals(Object)\n  fullName: Attribute.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Attribute.GetHashCode\n  parent: System.Attribute\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Attribute.GetHashCode()\n  fullName: Attribute.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(ParameterInfo, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttribute(ParameterInfo, Type, Boolean)\n  fullName: Attribute.GetCustomAttribute(ParameterInfo, Type, Boolean)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(MemberInfo, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttribute(MemberInfo, Type, Boolean)\n  fullName: Attribute.GetCustomAttribute(MemberInfo, Type, Boolean)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(Assembly, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttribute(Assembly, Type, Boolean)\n  fullName: Attribute.GetCustomAttribute(Assembly, Type, Boolean)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(Module, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttribute(Module, Type, Boolean)\n  fullName: Attribute.GetCustomAttribute(Module, Type, Boolean)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.Module,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(Module, Type)\n  nameWithType: Attribute.GetCustomAttribute(Module, Type)\n  fullName: Attribute.GetCustomAttribute(Module, Type)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(MemberInfo, Type)\n  nameWithType: Attribute.GetCustomAttribute(MemberInfo, Type)\n  fullName: Attribute.GetCustomAttribute(MemberInfo, Type)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.Assembly,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(Assembly, Type)\n  nameWithType: Attribute.GetCustomAttribute(Assembly, Type)\n  fullName: Attribute.GetCustomAttribute(Assembly, Type)\n- uid: System.Attribute.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttribute(ParameterInfo, Type)\n  nameWithType: Attribute.GetCustomAttribute(ParameterInfo, Type)\n  fullName: Attribute.GetCustomAttribute(ParameterInfo, Type)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Module, Type)\n  nameWithType: Attribute.GetCustomAttributes(Module, Type)\n  fullName: Attribute.GetCustomAttributes(Module, Type)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(ParameterInfo, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(ParameterInfo, Type, Boolean)\n  fullName: Attribute.GetCustomAttributes(ParameterInfo, Type, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Module, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(Module, Type, Boolean)\n  fullName: Attribute.GetCustomAttributes(Module, Type, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(MemberInfo, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(MemberInfo, Type, Boolean)\n  fullName: Attribute.GetCustomAttributes(MemberInfo, Type, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Assembly, Type, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(Assembly, Type, Boolean)\n  fullName: Attribute.GetCustomAttributes(Assembly, Type, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(ParameterInfo, Type)\n  nameWithType: Attribute.GetCustomAttributes(ParameterInfo, Type)\n  fullName: Attribute.GetCustomAttributes(ParameterInfo, Type)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Module,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Module, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(Module, Boolean)\n  fullName: Attribute.GetCustomAttributes(Module, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(ParameterInfo, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(ParameterInfo, Boolean)\n  fullName: Attribute.GetCustomAttributes(ParameterInfo, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(MemberInfo, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(MemberInfo, Boolean)\n  fullName: Attribute.GetCustomAttributes(MemberInfo, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Assembly, Type)\n  nameWithType: Attribute.GetCustomAttributes(Assembly, Type)\n  fullName: Attribute.GetCustomAttributes(Assembly, Type)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Assembly,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Assembly, Boolean)\n  nameWithType: Attribute.GetCustomAttributes(Assembly, Boolean)\n  fullName: Attribute.GetCustomAttributes(Assembly, Boolean)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.ParameterInfo)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(ParameterInfo)\n  nameWithType: Attribute.GetCustomAttributes(ParameterInfo)\n  fullName: Attribute.GetCustomAttributes(ParameterInfo)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Module)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Module)\n  nameWithType: Attribute.GetCustomAttributes(Module)\n  fullName: Attribute.GetCustomAttributes(Module)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(MemberInfo)\n  nameWithType: Attribute.GetCustomAttributes(MemberInfo)\n  fullName: Attribute.GetCustomAttributes(MemberInfo)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.Assembly)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(Assembly)\n  nameWithType: Attribute.GetCustomAttributes(Assembly)\n  fullName: Attribute.GetCustomAttributes(Assembly)\n- uid: System.Attribute.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: GetCustomAttributes(MemberInfo, Type)\n  nameWithType: Attribute.GetCustomAttributes(MemberInfo, Type)\n  fullName: Attribute.GetCustomAttributes(MemberInfo, Type)\n- uid: System.Attribute.IsDefaultAttribute\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefaultAttribute()\n  nameWithType: Attribute.IsDefaultAttribute()\n  fullName: Attribute.IsDefaultAttribute()\n- uid: System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(ParameterInfo, Type, Boolean)\n  nameWithType: Attribute.IsDefined(ParameterInfo, Type, Boolean)\n  fullName: Attribute.IsDefined(ParameterInfo, Type, Boolean)\n- uid: System.Attribute.IsDefined(System.Reflection.Module,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(Module, Type, Boolean)\n  nameWithType: Attribute.IsDefined(Module, Type, Boolean)\n  fullName: Attribute.IsDefined(Module, Type, Boolean)\n- uid: System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(MemberInfo, Type, Boolean)\n  nameWithType: Attribute.IsDefined(MemberInfo, Type, Boolean)\n  fullName: Attribute.IsDefined(MemberInfo, Type, Boolean)\n- uid: System.Attribute.IsDefined(System.Reflection.Assembly,System.Type,System.Boolean)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(Assembly, Type, Boolean)\n  nameWithType: Attribute.IsDefined(Assembly, Type, Boolean)\n  fullName: Attribute.IsDefined(Assembly, Type, Boolean)\n- uid: System.Attribute.IsDefined(System.Reflection.MemberInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(MemberInfo, Type)\n  nameWithType: Attribute.IsDefined(MemberInfo, Type)\n  fullName: Attribute.IsDefined(MemberInfo, Type)\n- uid: System.Attribute.IsDefined(System.Reflection.Module,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(Module, Type)\n  nameWithType: Attribute.IsDefined(Module, Type)\n  fullName: Attribute.IsDefined(Module, Type)\n- uid: System.Attribute.IsDefined(System.Reflection.Assembly,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(Assembly, Type)\n  nameWithType: Attribute.IsDefined(Assembly, Type)\n  fullName: Attribute.IsDefined(Assembly, Type)\n- uid: System.Attribute.IsDefined(System.Reflection.ParameterInfo,System.Type)\n  parent: System.Attribute\n  isExternal: false\n  name: IsDefined(ParameterInfo, Type)\n  nameWithType: Attribute.IsDefined(ParameterInfo, Type)\n  fullName: Attribute.IsDefined(ParameterInfo, Type)\n- uid: System.Attribute.Match(System.Object)\n  parent: System.Attribute\n  isExternal: false\n  name: Match(Object)\n  nameWithType: Attribute.Match(Object)\n  fullName: Attribute.Match(Object)\n- uid: System.Attribute.TypeId\n  parent: System.Attribute\n  isExternal: false\n  name: TypeId\n  nameWithType: Attribute.TypeId\n  fullName: Attribute.TypeId\n- uid: System.Attribute.System#Runtime#InteropServices#_Attribute#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)\n  parent: System.Attribute\n  isExternal: false\n  name: _Attribute.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)\n  nameWithType: Attribute._Attribute.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)\n  fullName: Attribute._Attribute.GetIDsOfNames(Guid, IntPtr, UInt32, UInt32, IntPtr)\n- uid: System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)\n  parent: System.Attribute\n  isExternal: false\n  name: _Attribute.GetTypeInfo(UInt32, UInt32, IntPtr)\n  nameWithType: Attribute._Attribute.GetTypeInfo(UInt32, UInt32, IntPtr)\n  fullName: Attribute._Attribute.GetTypeInfo(UInt32, UInt32, IntPtr)\n- uid: System.Attribute.System#Runtime#InteropServices#_Attribute#GetTypeInfoCount(System.UInt32@)\n  parent: System.Attribute\n  isExternal: false\n  name: _Attribute.GetTypeInfoCount(UInt32)\n  nameWithType: Attribute._Attribute.GetTypeInfoCount(UInt32)\n  fullName: Attribute._Attribute.GetTypeInfoCount(UInt32)\n- uid: System.Attribute.System#Runtime#InteropServices#_Attribute#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)\n  parent: System.Attribute\n  isExternal: false\n  name: _Attribute.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)\n  nameWithType: Attribute._Attribute.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)\n  fullName: Attribute._Attribute.Invoke(UInt32, Guid, UInt32, Int16, IntPtr, IntPtr, IntPtr, IntPtr)\n"}