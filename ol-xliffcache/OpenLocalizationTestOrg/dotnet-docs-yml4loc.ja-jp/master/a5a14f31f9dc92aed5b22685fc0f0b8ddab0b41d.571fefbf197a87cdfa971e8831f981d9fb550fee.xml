{"nodes":[{"content":"Provides the definition of a constraint-based execution context for a set of child activities.","nodes":[{"pos":[0,94],"content":"Provides the definition of a constraint-based execution context for a set of child activities.","nodes":[{"content":"Provides the definition of a constraint-based execution context for a set of child activities.","pos":[0,94]}]}],"pos":[2343,2438],"yaml":true},{"content":"> [!NOTE]\n>  [!INCLUDE[DeprecatedContent](~/includes/deprecatedcontent-md.md)]  \n  \n The <xref:System.Workflow.Activities.ConditionedActivityGroup> activity is a <xref:System.Workflow.ComponentModel.CompositeActivity>, meaning the <xref:System.Workflow.Activities.ConditionedActivityGroup> activity can contain other activities.  \n  \n The <xref:System.Workflow.Activities.ConditionedActivityGroup> activity runs and re-executes child activities based on the evaluation of their `when` conditions. All rules are evaluated whenever required based on their data and state change dependencies.  \n  \n When the completion rule of the <xref:System.Workflow.Activities.ConditionedActivityGroup> evaluates to `true`, it immediately cancels any currently executing child activities and finishes.","nodes":[{"pos":[2,78],"content":"[!NOTE]\n [!INCLUDE[DeprecatedContent](~/includes/deprecatedcontent-md.md)]","leadings":["","> "],"nodes":[]},{"pos":[85,328],"content":"The <xref:System.Workflow.Activities.ConditionedActivityGroup> activity is a <xref:System.Workflow.ComponentModel.CompositeActivity>, meaning the <xref:System.Workflow.Activities.ConditionedActivityGroup> activity can contain other activities.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Workflow.Activities.ConditionedActivityGroup&gt;</ph> activity is a <ph id=\"ph2\">&lt;xref:System.Workflow.ComponentModel.CompositeActivity&gt;</ph>, meaning the <ph id=\"ph3\">&lt;xref:System.Workflow.Activities.ConditionedActivityGroup&gt;</ph> activity can contain other activities.","pos":[0,243],"source":"The <xref:System.Workflow.Activities.ConditionedActivityGroup> activity is a <xref:System.Workflow.ComponentModel.CompositeActivity>, meaning the <xref:System.Workflow.Activities.ConditionedActivityGroup> activity can contain other activities."}]},{"pos":[335,589],"content":"The <xref:System.Workflow.Activities.ConditionedActivityGroup> activity runs and re-executes child activities based on the evaluation of their `when` conditions. All rules are evaluated whenever required based on their data and state change dependencies.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Workflow.Activities.ConditionedActivityGroup&gt;</ph> activity runs and re-executes child activities based on the evaluation of their <ph id=\"ph2\">`when`</ph> conditions.","pos":[0,161],"source":"The <xref:System.Workflow.Activities.ConditionedActivityGroup> activity runs and re-executes child activities based on the evaluation of their `when` conditions."},{"content":"All rules are evaluated whenever required based on their data and state change dependencies.","pos":[162,254]}]},{"pos":[596,785],"content":"When the completion rule of the <ph id=\"ph1\">&lt;xref:System.Workflow.Activities.ConditionedActivityGroup&gt;</ph> evaluates to <ph id=\"ph2\">`true`</ph>, it immediately cancels any currently executing child activities and finishes.","source":"When the completion rule of the <xref:System.Workflow.Activities.ConditionedActivityGroup> evaluates to `true`, it immediately cancels any currently executing child activities and finishes."}],"pos":[2449,3244],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.Workflow.Activities.ConditionedActivityGroup\"></xref> class.","nodes":[{"pos":[0,113],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Workflow.Activities.ConditionedActivityGroup\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.Workflow.Activities.ConditionedActivityGroup\"></xref> class."}],"pos":[12587,12701],"yaml":true},{"content":"No children are executing and the <xref href=\"System.Workflow.Activities.ConditionedActivityGroup.UntilCondition\"></xref> evaluates to `false`.","nodes":[{"pos":[0,143],"content":"No children are executing and the <ph id=\"ph1\">&lt;xref href=\"System.Workflow.Activities.ConditionedActivityGroup.UntilCondition\"&gt;&lt;/xref&gt;</ph> evaluates to <ph id=\"ph2\">`false`</ph>.","source":"No children are executing and the <xref href=\"System.Workflow.Activities.ConditionedActivityGroup.UntilCondition\"></xref> evaluates to `false`."}],"pos":[13802,13946],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Workflow.Activities.ConditionedActivityGroup\"></xref> class using the name of the activity.","nodes":[{"pos":[0,144],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Workflow.Activities.ConditionedActivityGroup\"&gt;&lt;/xref&gt;</ph> class using the name of the activity.","source":"Initializes a new instance of the <xref href=\"System.Workflow.Activities.ConditionedActivityGroup\"></xref> class using the name of the activity."}],"pos":[15036,15181],"yaml":true},{"content":"The user-defined name of the activity.","nodes":[{"pos":[0,38],"content":"The user-defined name of the activity.","nodes":[{"content":"The user-defined name of the activity.","pos":[0,38]}]}],"pos":[15327,15366],"yaml":true},{"content":"Gets the number of times that the specified child activity has been executed.","nodes":[{"pos":[0,77],"content":"Gets the number of times that the specified child activity has been executed.","nodes":[{"content":"Gets the number of times that the specified child activity has been executed.","pos":[0,77]}]}],"pos":[20014,20092],"yaml":true},{"content":"The child activity.","nodes":[{"pos":[0,19],"content":"The child activity.","nodes":[{"content":"The child activity.","pos":[0,19]}]}],"pos":[20308,20328],"yaml":true},{"content":"The number of times that the specified child activity has been executed.","nodes":[{"pos":[0,72],"content":"The number of times that the specified child activity has been executed.","nodes":[{"content":"The number of times that the specified child activity has been executed.","pos":[0,72]}]}],"pos":[20384,20457],"yaml":true},{"content":"<code>child</code> parameter is a `null` reference (`Nothing` in Visual Basic).","nodes":[{"pos":[0,79],"content":"<ph id=\"ph1\">&lt;code&gt;child&lt;/code&gt;</ph> parameter is a <ph id=\"ph2\">`null`</ph> reference (<ph id=\"ph3\">`Nothing`</ph> in Visual Basic).","source":"<code>child</code> parameter is a `null` reference (`Nothing` in Visual Basic)."}],"pos":[20668,20748],"yaml":true},{"content":"The conditioned activity group state is `null`.","nodes":[{"pos":[0,47],"content":"The conditioned activity group state is <ph id=\"ph1\">`null`</ph>.","source":"The conditioned activity group state is `null`."}],"pos":[20858,20906],"yaml":true},{"content":"The number of times that the child activity has been run cannot be determined.","nodes":[{"pos":[0,78],"content":"The number of times that the child activity has been run cannot be determined.","nodes":[{"content":"The number of times that the child activity has been run cannot be determined.","pos":[0,78]}]}],"pos":[21000,21079],"yaml":true},{"content":"Gets the currently executing instance of the child activity.","nodes":[{"pos":[0,60],"content":"Gets the currently executing instance of the child activity.","nodes":[{"content":"Gets the currently executing instance of the child activity.","pos":[0,60]}]}],"pos":[22183,22244],"yaml":true},{"content":"The name of the child <xref href=\"System.Workflow.Activities.EventDrivenActivity\"></xref>.","nodes":[{"pos":[0,90],"content":"The name of the child <ph id=\"ph1\">&lt;xref href=\"System.Workflow.Activities.EventDrivenActivity\"&gt;&lt;/xref&gt;</ph>.","source":"The name of the child <xref href=\"System.Workflow.Activities.EventDrivenActivity\"></xref>."}],"pos":[22450,22541],"yaml":true},{"content":"The currently executing instance of the <xref href=\"System.Workflow.Activities.EventDrivenActivity\"></xref>.","nodes":[{"pos":[0,108],"content":"The currently executing instance of the <ph id=\"ph1\">&lt;xref href=\"System.Workflow.Activities.EventDrivenActivity\"&gt;&lt;/xref&gt;</ph>.","source":"The currently executing instance of the <xref href=\"System.Workflow.Activities.EventDrivenActivity\"></xref>."}],"pos":[22624,22733],"yaml":true},{"content":"<code>childactivity</code> is a `null` reference (`Nothing` in Visual Basic).","nodes":[{"pos":[0,77],"content":"<ph id=\"ph1\">&lt;code&gt;childactivity&lt;/code&gt;</ph> is a <ph id=\"ph2\">`null`</ph> reference (<ph id=\"ph3\">`Nothing`</ph> in Visual Basic).","source":"<code>childactivity</code> is a `null` reference (`Nothing` in Visual Basic)."}],"pos":[22933,23011],"yaml":true},{"content":"The executable activities do not contain the <code>childactivity</code>.","nodes":[{"pos":[0,72],"content":"The executable activities do not contain the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">childactivity</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"The executable activities do not contain the <code>childactivity</code>."}],"pos":[23105,23178],"yaml":true},{"content":"Gets the condition associated with the <xref href=\"System.Workflow.Activities.ConditionedActivityGroup.WhenConditionProperty\"></xref> for the specified dependency object.","nodes":[{"pos":[0,170],"content":"Gets the condition associated with the <ph id=\"ph1\">&lt;xref href=\"System.Workflow.Activities.ConditionedActivityGroup.WhenConditionProperty\"&gt;&lt;/xref&gt;</ph> for the specified dependency object.","source":"Gets the condition associated with the <xref href=\"System.Workflow.Activities.ConditionedActivityGroup.WhenConditionProperty\"></xref> for the specified dependency object."}],"pos":[24270,24441],"yaml":true},{"content":"The underlying data storage object for the activity.","nodes":[{"pos":[0,52],"content":"The underlying data storage object for the activity.","nodes":[{"content":"The underlying data storage object for the activity.","pos":[0,52]}]}],"pos":[24617,24670],"yaml":true},{"content":"The `when` condition.","nodes":[{"pos":[0,21],"content":"The <ph id=\"ph1\">`when`</ph> condition.","source":"The `when` condition."}],"pos":[24727,24749],"yaml":true},{"content":"<code>dependencyObject</code> is a null reference (`Nothing` in Visual Basic).","nodes":[{"pos":[0,78],"content":"<ph id=\"ph1\">&lt;code&gt;dependencyObject&lt;/code&gt;</ph> is a null reference (<ph id=\"ph2\">`Nothing`</ph> in Visual Basic).","source":"<code>dependencyObject</code> is a null reference (`Nothing` in Visual Basic)."}],"pos":[24947,25026],"yaml":true},{"content":"The executable activities do not contain the <code>dependencyObject</code>.","nodes":[{"pos":[0,75],"content":"The executable activities do not contain the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">dependencyObject</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"The executable activities do not contain the <code>dependencyObject</code>."}],"pos":[25120,25196],"yaml":true},{"content":"Sets the condition associated with the <xref href=\"System.Workflow.Activities.ConditionedActivityGroup.WhenConditionProperty\"></xref> for the specified dependency object.","nodes":[{"pos":[0,170],"content":"Sets the condition associated with the <ph id=\"ph1\">&lt;xref href=\"System.Workflow.Activities.ConditionedActivityGroup.WhenConditionProperty\"&gt;&lt;/xref&gt;</ph> for the specified dependency object.","source":"Sets the condition associated with the <xref href=\"System.Workflow.Activities.ConditionedActivityGroup.WhenConditionProperty\"></xref> for the specified dependency object."}],"pos":[33157,33328],"yaml":true},{"content":"The underlying data storage object for the activity.","nodes":[{"pos":[0,52],"content":"The underlying data storage object for the activity.","nodes":[{"content":"The underlying data storage object for the activity.","pos":[0,52]}]}],"pos":[33516,33569],"yaml":true},{"content":"The value of the when condition.","nodes":[{"pos":[0,32],"content":"The value of the when condition.","nodes":[{"content":"The value of the when condition.","pos":[0,32]}]}],"pos":[33630,33663],"yaml":true},{"content":"<code>dependencyObject</code> is a `null` reference (`Nothing` in Visual Basic).","nodes":[{"pos":[0,80],"content":"<ph id=\"ph1\">&lt;code&gt;dependencyObject&lt;/code&gt;</ph> is a <ph id=\"ph2\">`null`</ph> reference (<ph id=\"ph3\">`Nothing`</ph> in Visual Basic).","source":"<code>dependencyObject</code> is a `null` reference (`Nothing` in Visual Basic)."}],"pos":[33861,33942],"yaml":true},{"content":"The executable activities do not contain the <code>dependencyObject</code>.","nodes":[{"pos":[0,75],"content":"The executable activities do not contain the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">dependencyObject</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"The executable activities do not contain the <code>dependencyObject</code>."}],"pos":[34036,34112],"yaml":true},{"content":"Gets or sets a value that indicates when the <xref href=\"System.Workflow.Activities.ConditionedActivityGroup\"></xref> should complete.","nodes":[{"pos":[0,134],"content":"Gets or sets a value that indicates when the <ph id=\"ph1\">&lt;xref href=\"System.Workflow.Activities.ConditionedActivityGroup\"&gt;&lt;/xref&gt;</ph> should complete.","source":"Gets or sets a value that indicates when the <xref href=\"System.Workflow.Activities.ConditionedActivityGroup\"></xref> should complete."}],"pos":[35125,35260],"yaml":true},{"content":"A condition that determines whether the <xref href=\"System.Workflow.Activities.ConditionedActivityGroup\"></xref> should complete.","nodes":[{"pos":[0,129],"content":"A condition that determines whether the <ph id=\"ph1\">&lt;xref href=\"System.Workflow.Activities.ConditionedActivityGroup\"&gt;&lt;/xref&gt;</ph> should complete.","source":"A condition that determines whether the <xref href=\"System.Workflow.Activities.ConditionedActivityGroup\"></xref> should complete."}],"pos":[36227,36357],"yaml":true},{"content":"Represents the <xref href=\"System.Workflow.ComponentModel.DependencyProperty\"></xref> that targets the <xref href=\"System.Workflow.Activities.ConditionedActivityGroup.UntilCondition\"></xref> property.","nodes":[{"pos":[0,200],"content":"Represents the <ph id=\"ph1\">&lt;xref href=\"System.Workflow.ComponentModel.DependencyProperty\"&gt;&lt;/xref&gt;</ph> that targets the <ph id=\"ph2\">&lt;xref href=\"System.Workflow.Activities.ConditionedActivityGroup.UntilCondition\"&gt;&lt;/xref&gt;</ph> property.","source":"Represents the <xref href=\"System.Workflow.ComponentModel.DependencyProperty\"></xref> that targets the <xref href=\"System.Workflow.Activities.ConditionedActivityGroup.UntilCondition\"></xref> property."}],"pos":[37529,37730],"yaml":true},{"content":"[!INCLUDE[DependencyPropertyRemark](~/includes/dependencypropertyremark-md.md)]","nodes":[],"pos":[37741,37823],"yaml":true,"extradata":"MT"},{"content":"Represents the <xref href=\"System.Workflow.ComponentModel.DependencyProperty\"></xref> that targets the <xref href=\"System.Workflow.Activities.ConditionedActivityGroup.WhenConditionProperty\"></xref> property.","nodes":[{"pos":[0,207],"content":"Represents the <ph id=\"ph1\">&lt;xref href=\"System.Workflow.ComponentModel.DependencyProperty\"&gt;&lt;/xref&gt;</ph> that targets the <ph id=\"ph2\">&lt;xref href=\"System.Workflow.Activities.ConditionedActivityGroup.WhenConditionProperty\"&gt;&lt;/xref&gt;</ph> property.","source":"Represents the <xref href=\"System.Workflow.ComponentModel.DependencyProperty\"></xref> that targets the <xref href=\"System.Workflow.Activities.ConditionedActivityGroup.WhenConditionProperty\"></xref> property."}],"pos":[39108,39316],"yaml":true},{"content":"[!INCLUDE[DependencyPropertyRemark](~/includes/dependencypropertyremark-md.md)]","nodes":[],"pos":[39327,39409],"yaml":true,"extradata":"MT"},{"content":"Defines the processing procedure when the subscribed-to event occurs.","nodes":[{"pos":[0,69],"content":"Defines the processing procedure when the subscribed-to event occurs.","nodes":[{"content":"Defines the processing procedure when the subscribed-to event occurs.","pos":[0,69]}]}],"pos":[41599,41669],"yaml":true},{"content":"The object that raised the event.","nodes":[{"pos":[0,33],"content":"The object that raised the event.","nodes":[{"content":"The object that raised the event.","pos":[0,33]}]}],"pos":[41938,41972],"yaml":true},{"content":"The previously-typed event arguments.","nodes":[{"pos":[0,37],"content":"The previously-typed event arguments.","nodes":[{"content":"The previously-typed event arguments.","pos":[0,37]}]}],"pos":[42086,42124],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Workflow.Activities.ConditionedActivityGroup\n  commentId: T:System.Workflow.Activities.ConditionedActivityGroup\n  id: ConditionedActivityGroup\n  children:\n  - System.Workflow.Activities.ConditionedActivityGroup.#ctor\n  - System.Workflow.Activities.ConditionedActivityGroup.#ctor(System.String)\n  - System.Workflow.Activities.ConditionedActivityGroup.Cancel(System.Workflow.ComponentModel.ActivityExecutionContext)\n  - System.Workflow.Activities.ConditionedActivityGroup.Execute(System.Workflow.ComponentModel.ActivityExecutionContext)\n  - System.Workflow.Activities.ConditionedActivityGroup.GetChildActivityExecutedCount(System.Workflow.ComponentModel.Activity)\n  - System.Workflow.Activities.ConditionedActivityGroup.GetDynamicActivity(System.String)\n  - System.Workflow.Activities.ConditionedActivityGroup.GetWhenCondition(System.Object)\n  - System.Workflow.Activities.ConditionedActivityGroup.OnActivityChangeAdd(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.Activity)\n  - System.Workflow.Activities.ConditionedActivityGroup.OnActivityChangeRemove(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.Activity)\n  - System.Workflow.Activities.ConditionedActivityGroup.OnClosed(System.IServiceProvider)\n  - System.Workflow.Activities.ConditionedActivityGroup.OnWorkflowChangesCompleted(System.Workflow.ComponentModel.ActivityExecutionContext)\n  - System.Workflow.Activities.ConditionedActivityGroup.SetWhenCondition(System.Object,System.Object)\n  - System.Workflow.Activities.ConditionedActivityGroup.UntilCondition\n  - System.Workflow.Activities.ConditionedActivityGroup.UntilConditionProperty\n  - System.Workflow.Activities.ConditionedActivityGroup.WhenConditionProperty\n  - System.Workflow.Activities.ConditionedActivityGroup.System#Workflow#ComponentModel#IActivityEventListener{System#Workflow#ComponentModel#ActivityExecutionStatusChangedEventArgs}#OnEvent(System.Object,System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs)\n  langs:\n  - csharp\n  name: ConditionedActivityGroup\n  nameWithType: ConditionedActivityGroup\n  fullName: System.Workflow.Activities.ConditionedActivityGroup\n  type: Class\n  assemblies:\n  - System.Workflow.Activities\n  namespace: System.Workflow.Activities\n  summary: Provides the definition of a constraint-based execution context for a set of child activities.\n  remarks: \"> [!NOTE]\\n>  [!INCLUDE[DeprecatedContent](~/includes/deprecatedcontent-md.md)]  \\n  \\n The <xref:System.Workflow.Activities.ConditionedActivityGroup> activity is a <xref:System.Workflow.ComponentModel.CompositeActivity>, meaning the <xref:System.Workflow.Activities.ConditionedActivityGroup> activity can contain other activities.  \\n  \\n The <xref:System.Workflow.Activities.ConditionedActivityGroup> activity runs and re-executes child activities based on the evaluation of their `when` conditions. All rules are evaluated whenever required based on their data and state change dependencies.  \\n  \\n When the completion rule of the <xref:System.Workflow.Activities.ConditionedActivityGroup> evaluates to `true`, it immediately cancels any currently executing child activities and finishes.\"\n  syntax:\n    content: >-\n      [System.Drawing.ToolboxBitmap(typeof(System.Workflow.Activities.ConditionedActivityGroup), \"Resources.cag.png\")]\n\n      [System.Obsolete(\"The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*\")]\n\n      [System.Workflow.ComponentModel.Compiler.ActivityValidator(typeof(System.Workflow.Activities.ConditionedActivityGroupValidator))]\n\n      [System.Workflow.Runtime.DebugEngine.WorkflowDebuggerStepping(System.Workflow.Runtime.DebugEngine.WorkflowDebuggerSteppingOption.Concurrent)]\n\n      public sealed class ConditionedActivityGroup : System.Workflow.ComponentModel.CompositeActivity, System.Workflow.ComponentModel.IActivityEventListener<System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs>\n  inheritance:\n  - System.Object\n  - System.Workflow.ComponentModel.DependencyObject\n  - System.Workflow.ComponentModel.Activity\n  - System.Workflow.ComponentModel.CompositeActivity\n  implements:\n  - System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs}\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Workflow.ComponentModel.Activity.ActivityContextGuidProperty\n  - System.Workflow.ComponentModel.Activity.Canceling\n  - System.Workflow.ComponentModel.Activity.CancelingEvent\n  - System.Workflow.ComponentModel.Activity.Clone\n  - System.Workflow.ComponentModel.Activity.Closed\n  - System.Workflow.ComponentModel.Activity.ClosedEvent\n  - System.Workflow.ComponentModel.Activity.Compensating\n  - System.Workflow.ComponentModel.Activity.CompensatingEvent\n  - System.Workflow.ComponentModel.Activity.Description\n  - System.Workflow.ComponentModel.Activity.Enabled\n  - System.Workflow.ComponentModel.Activity.Executing\n  - System.Workflow.ComponentModel.Activity.ExecutingEvent\n  - System.Workflow.ComponentModel.Activity.ExecutionResult\n  - System.Workflow.ComponentModel.Activity.ExecutionStatus\n  - System.Workflow.ComponentModel.Activity.Faulting\n  - System.Workflow.ComponentModel.Activity.FaultingEvent\n  - System.Workflow.ComponentModel.Activity.GetActivityByName(System.String)\n  - System.Workflow.ComponentModel.Activity.GetActivityByName(System.String,System.Boolean)\n  - System.Workflow.ComponentModel.Activity.Invoke``1(System.EventHandler{``0},``0)\n  - System.Workflow.ComponentModel.Activity.Invoke``1(System.Workflow.ComponentModel.IActivityEventListener{``0},``0)\n  - System.Workflow.ComponentModel.Activity.IsDynamicActivity\n  - System.Workflow.ComponentModel.Activity.Load(System.IO.Stream,System.Workflow.ComponentModel.Activity)\n  - System.Workflow.ComponentModel.Activity.Load(System.IO.Stream,System.Workflow.ComponentModel.Activity,System.Runtime.Serialization.IFormatter)\n  - System.Workflow.ComponentModel.Activity.Name\n  - System.Workflow.ComponentModel.Activity.Parent\n  - System.Workflow.ComponentModel.Activity.QualifiedName\n  - System.Workflow.ComponentModel.Activity.RaiseEvent(System.Workflow.ComponentModel.DependencyProperty,System.Object,System.EventArgs)\n  - System.Workflow.ComponentModel.Activity.RaiseGenericEvent``1(System.Workflow.ComponentModel.DependencyProperty,System.Object,``0)\n  - System.Workflow.ComponentModel.Activity.RegisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})\n  - System.Workflow.ComponentModel.Activity.Save(System.IO.Stream)\n  - System.Workflow.ComponentModel.Activity.Save(System.IO.Stream,System.Runtime.Serialization.IFormatter)\n  - System.Workflow.ComponentModel.Activity.StatusChanged\n  - System.Workflow.ComponentModel.Activity.StatusChangedEvent\n  - System.Workflow.ComponentModel.Activity.ToString\n  - System.Workflow.ComponentModel.Activity.TrackData(System.Object)\n  - System.Workflow.ComponentModel.Activity.TrackData(System.String,System.Object)\n  - System.Workflow.ComponentModel.Activity.UnregisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})\n  - System.Workflow.ComponentModel.Activity.WorkflowInstanceId\n  - System.Workflow.ComponentModel.CompositeActivity.Activities\n  - System.Workflow.ComponentModel.CompositeActivity.ApplyWorkflowChanges(System.Workflow.ComponentModel.WorkflowChanges)\n  - System.Workflow.ComponentModel.CompositeActivity.CanModifyActivities\n  - System.Workflow.ComponentModel.CompositeActivity.Dispose(System.Boolean)\n  - System.Workflow.ComponentModel.CompositeActivity.EnabledActivities\n  - System.Workflow.ComponentModel.CompositeActivity.GetDynamicActivities(System.Workflow.ComponentModel.Activity)\n  - System.Workflow.ComponentModel.CompositeActivity.HandleFault(System.Workflow.ComponentModel.ActivityExecutionContext,System.Exception)\n  - System.Workflow.ComponentModel.CompositeActivity.Initialize(System.IServiceProvider)\n  - System.Workflow.ComponentModel.CompositeActivity.OnActivityExecutionContextLoad(System.IServiceProvider)\n  - System.Workflow.ComponentModel.CompositeActivity.OnActivityExecutionContextUnload(System.IServiceProvider)\n  - System.Workflow.ComponentModel.CompositeActivity.OnListChanged(System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs)\n  - System.Workflow.ComponentModel.CompositeActivity.OnListChanging(System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs)\n  - System.Workflow.ComponentModel.CompositeActivity.Uninitialize(System.IServiceProvider)\n  - System.Workflow.ComponentModel.DependencyObject.AddHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)\n  - System.Workflow.ComponentModel.DependencyObject.DesignMode\n  - System.Workflow.ComponentModel.DependencyObject.Dispose\n  - System.Workflow.ComponentModel.DependencyObject.GetBinding(System.Workflow.ComponentModel.DependencyProperty)\n  - System.Workflow.ComponentModel.DependencyObject.GetBoundValue(System.Workflow.ComponentModel.ActivityBind,System.Type)\n  - System.Workflow.ComponentModel.DependencyObject.GetInvocationList``1(System.Workflow.ComponentModel.DependencyProperty)\n  - System.Workflow.ComponentModel.DependencyObject.GetValue(System.Workflow.ComponentModel.DependencyProperty)\n  - System.Workflow.ComponentModel.DependencyObject.GetValueBase(System.Workflow.ComponentModel.DependencyProperty)\n  - System.Workflow.ComponentModel.DependencyObject.InitializeProperties\n  - System.Workflow.ComponentModel.DependencyObject.IsBindingSet(System.Workflow.ComponentModel.DependencyProperty)\n  - System.Workflow.ComponentModel.DependencyObject.MetaEquals(System.Workflow.ComponentModel.DependencyObject)\n  - System.Workflow.ComponentModel.DependencyObject.ParentDependencyObject\n  - System.Workflow.ComponentModel.DependencyObject.RemoveHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)\n  - System.Workflow.ComponentModel.DependencyObject.RemoveProperty(System.Workflow.ComponentModel.DependencyProperty)\n  - System.Workflow.ComponentModel.DependencyObject.SetBinding(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.ActivityBind)\n  - System.Workflow.ComponentModel.DependencyObject.SetBoundValue(System.Workflow.ComponentModel.ActivityBind,System.Object)\n  - System.Workflow.ComponentModel.DependencyObject.SetReadOnlyPropertyValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)\n  - System.Workflow.ComponentModel.DependencyObject.SetValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)\n  - System.Workflow.ComponentModel.DependencyObject.SetValueBase(System.Workflow.ComponentModel.DependencyProperty,System.Object)\n  - System.Workflow.ComponentModel.DependencyObject.Site\n  - System.Workflow.ComponentModel.DependencyObject.UserData\n  attributes:\n  - type: System.Drawing.ToolboxBitmapAttribute\n  - type: System.ObsoleteAttribute\n  - type: System.Workflow.ComponentModel.Compiler.ActivityValidatorAttribute\n  - type: System.Workflow.Runtime.DebugEngine.WorkflowDebuggerSteppingAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.Activities/ConditionedActivityGroup.xml\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Workflow.Activities.ConditionedActivityGroup.#ctor\n  commentId: M:System.Workflow.Activities.ConditionedActivityGroup.#ctor\n  id: '#ctor'\n  parent: System.Workflow.Activities.ConditionedActivityGroup\n  langs:\n  - csharp\n  name: ConditionedActivityGroup()\n  nameWithType: ConditionedActivityGroup.ConditionedActivityGroup()\n  fullName: ConditionedActivityGroup.ConditionedActivityGroup()\n  type: Constructor\n  assemblies:\n  - System.Workflow.Activities\n  namespace: System.Workflow.Activities\n  summary: Initializes a new instance of the <xref href=\"System.Workflow.Activities.ConditionedActivityGroup\"></xref> class.\n  remarks: ''\n  example:\n  - \"The following code example shows how to use the constructor to create an instance of <xref:System.Workflow.Activities.ConditionedActivityGroup>. The code also creates two <xref:System.Workflow.Activities.CodeCondition> class instances and two <xref:System.Workflow.Activities.CodeActivity> class instances. This code example is part of the ConditionedActivityGroup SDK Sample from the SimpleCAGWorkflow.Designer.cs file. [!INCLUDE[crdefault](~/includes/crdefault-md.md)][Using ConditionedActivityGroup](http://msdn.microsoft.com/en-us/5a0b7e9e-def5-46b2-acbb-0005e1aff984).  \\n  \\n [!code-csharp[wf_samples#157](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets11.cs#157)]\\n [!code-vb[wf_samples#157](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets11.vb#157)]\"\n  syntax:\n    content: public ConditionedActivityGroup ();\n    parameters: []\n  overload: System.Workflow.Activities.ConditionedActivityGroup.#ctor*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: No children are executing and the <xref href=\"System.Workflow.Activities.ConditionedActivityGroup.UntilCondition\"></xref> evaluates to `false`.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.Activities/ConditionedActivityGroup.xml\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Workflow.Activities.ConditionedActivityGroup.#ctor(System.String)\n  commentId: M:System.Workflow.Activities.ConditionedActivityGroup.#ctor(System.String)\n  id: '#ctor(System.String)'\n  parent: System.Workflow.Activities.ConditionedActivityGroup\n  langs:\n  - csharp\n  name: ConditionedActivityGroup(String)\n  nameWithType: ConditionedActivityGroup.ConditionedActivityGroup(String)\n  fullName: ConditionedActivityGroup.ConditionedActivityGroup(String)\n  type: Constructor\n  assemblies:\n  - System.Workflow.Activities\n  namespace: System.Workflow.Activities\n  summary: Initializes a new instance of the <xref href=\"System.Workflow.Activities.ConditionedActivityGroup\"></xref> class using the name of the activity.\n  syntax:\n    content: public ConditionedActivityGroup (string name);\n    parameters:\n    - id: name\n      type: System.String\n      description: The user-defined name of the activity.\n  overload: System.Workflow.Activities.ConditionedActivityGroup.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.Activities/ConditionedActivityGroup.xml\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Workflow.Activities.ConditionedActivityGroup.Cancel(System.Workflow.ComponentModel.ActivityExecutionContext)\n  commentId: M:System.Workflow.Activities.ConditionedActivityGroup.Cancel(System.Workflow.ComponentModel.ActivityExecutionContext)\n  id: Cancel(System.Workflow.ComponentModel.ActivityExecutionContext)\n  parent: System.Workflow.Activities.ConditionedActivityGroup\n  langs:\n  - csharp\n  name: Cancel(ActivityExecutionContext)\n  nameWithType: ConditionedActivityGroup.Cancel(ActivityExecutionContext)\n  fullName: ConditionedActivityGroup.Cancel(ActivityExecutionContext)\n  type: Method\n  assemblies:\n  - System.Workflow.Activities\n  namespace: System.Workflow.Activities\n  syntax:\n    content: protected override System.Workflow.ComponentModel.ActivityExecutionStatus Cancel (System.Workflow.ComponentModel.ActivityExecutionContext executionContext);\n    parameters:\n    - id: executionContext\n      type: System.Workflow.ComponentModel.ActivityExecutionContext\n      description: ''\n    return:\n      type: System.Workflow.ComponentModel.ActivityExecutionStatus\n      description: ''\n  overload: System.Workflow.Activities.ConditionedActivityGroup.Cancel*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.Activities/ConditionedActivityGroup.xml\n- uid: System.Workflow.Activities.ConditionedActivityGroup.Execute(System.Workflow.ComponentModel.ActivityExecutionContext)\n  commentId: M:System.Workflow.Activities.ConditionedActivityGroup.Execute(System.Workflow.ComponentModel.ActivityExecutionContext)\n  id: Execute(System.Workflow.ComponentModel.ActivityExecutionContext)\n  parent: System.Workflow.Activities.ConditionedActivityGroup\n  langs:\n  - csharp\n  name: Execute(ActivityExecutionContext)\n  nameWithType: ConditionedActivityGroup.Execute(ActivityExecutionContext)\n  fullName: ConditionedActivityGroup.Execute(ActivityExecutionContext)\n  type: Method\n  assemblies:\n  - System.Workflow.Activities\n  namespace: System.Workflow.Activities\n  syntax:\n    content: protected override System.Workflow.ComponentModel.ActivityExecutionStatus Execute (System.Workflow.ComponentModel.ActivityExecutionContext executionContext);\n    parameters:\n    - id: executionContext\n      type: System.Workflow.ComponentModel.ActivityExecutionContext\n      description: ''\n    return:\n      type: System.Workflow.ComponentModel.ActivityExecutionStatus\n      description: ''\n  overload: System.Workflow.Activities.ConditionedActivityGroup.Execute*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.Activities/ConditionedActivityGroup.xml\n- uid: System.Workflow.Activities.ConditionedActivityGroup.GetChildActivityExecutedCount(System.Workflow.ComponentModel.Activity)\n  commentId: M:System.Workflow.Activities.ConditionedActivityGroup.GetChildActivityExecutedCount(System.Workflow.ComponentModel.Activity)\n  id: GetChildActivityExecutedCount(System.Workflow.ComponentModel.Activity)\n  parent: System.Workflow.Activities.ConditionedActivityGroup\n  langs:\n  - csharp\n  name: GetChildActivityExecutedCount(Activity)\n  nameWithType: ConditionedActivityGroup.GetChildActivityExecutedCount(Activity)\n  fullName: ConditionedActivityGroup.GetChildActivityExecutedCount(Activity)\n  type: Method\n  assemblies:\n  - System.Workflow.Activities\n  namespace: System.Workflow.Activities\n  summary: Gets the number of times that the specified child activity has been executed.\n  syntax:\n    content: public int GetChildActivityExecutedCount (System.Workflow.ComponentModel.Activity child);\n    parameters:\n    - id: child\n      type: System.Workflow.ComponentModel.Activity\n      description: The child activity.\n    return:\n      type: System.Int32\n      description: The number of times that the specified child activity has been executed.\n  overload: System.Workflow.Activities.ConditionedActivityGroup.GetChildActivityExecutedCount*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>child</code> parameter is a `null` reference (`Nothing` in Visual Basic).\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The conditioned activity group state is `null`.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The number of times that the child activity has been run cannot be determined.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.Activities/ConditionedActivityGroup.xml\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Workflow.Activities.ConditionedActivityGroup.GetDynamicActivity(System.String)\n  commentId: M:System.Workflow.Activities.ConditionedActivityGroup.GetDynamicActivity(System.String)\n  id: GetDynamicActivity(System.String)\n  parent: System.Workflow.Activities.ConditionedActivityGroup\n  langs:\n  - csharp\n  name: GetDynamicActivity(String)\n  nameWithType: ConditionedActivityGroup.GetDynamicActivity(String)\n  fullName: ConditionedActivityGroup.GetDynamicActivity(String)\n  type: Method\n  assemblies:\n  - System.Workflow.Activities\n  namespace: System.Workflow.Activities\n  summary: Gets the currently executing instance of the child activity.\n  syntax:\n    content: public System.Workflow.ComponentModel.Activity GetDynamicActivity (string childActivityName);\n    parameters:\n    - id: childActivityName\n      type: System.String\n      description: The name of the child <xref href=\"System.Workflow.Activities.EventDrivenActivity\"></xref>.\n    return:\n      type: System.Workflow.ComponentModel.Activity\n      description: The currently executing instance of the <xref href=\"System.Workflow.Activities.EventDrivenActivity\"></xref>.\n  overload: System.Workflow.Activities.ConditionedActivityGroup.GetDynamicActivity*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>childactivity</code> is a `null` reference (`Nothing` in Visual Basic).\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The executable activities do not contain the <code>childactivity</code>.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.Activities/ConditionedActivityGroup.xml\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Workflow.Activities.ConditionedActivityGroup.GetWhenCondition(System.Object)\n  commentId: M:System.Workflow.Activities.ConditionedActivityGroup.GetWhenCondition(System.Object)\n  id: GetWhenCondition(System.Object)\n  parent: System.Workflow.Activities.ConditionedActivityGroup\n  langs:\n  - csharp\n  name: GetWhenCondition(Object)\n  nameWithType: ConditionedActivityGroup.GetWhenCondition(Object)\n  fullName: ConditionedActivityGroup.GetWhenCondition(Object)\n  type: Method\n  assemblies:\n  - System.Workflow.Activities\n  namespace: System.Workflow.Activities\n  summary: Gets the condition associated with the <xref href=\"System.Workflow.Activities.ConditionedActivityGroup.WhenConditionProperty\"></xref> for the specified dependency object.\n  syntax:\n    content: public static object GetWhenCondition (object dependencyObject);\n    parameters:\n    - id: dependencyObject\n      type: System.Object\n      description: The underlying data storage object for the activity.\n    return:\n      type: System.Object\n      description: The `when` condition.\n  overload: System.Workflow.Activities.ConditionedActivityGroup.GetWhenCondition*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>dependencyObject</code> is a null reference (`Nothing` in Visual Basic).\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The executable activities do not contain the <code>dependencyObject</code>.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.Activities/ConditionedActivityGroup.xml\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Workflow.Activities.ConditionedActivityGroup.OnActivityChangeAdd(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.Activity)\n  commentId: M:System.Workflow.Activities.ConditionedActivityGroup.OnActivityChangeAdd(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.Activity)\n  id: OnActivityChangeAdd(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.Activity)\n  parent: System.Workflow.Activities.ConditionedActivityGroup\n  langs:\n  - csharp\n  name: OnActivityChangeAdd(ActivityExecutionContext, Activity)\n  nameWithType: ConditionedActivityGroup.OnActivityChangeAdd(ActivityExecutionContext, Activity)\n  fullName: ConditionedActivityGroup.OnActivityChangeAdd(ActivityExecutionContext, Activity)\n  type: Method\n  assemblies:\n  - System.Workflow.Activities\n  namespace: System.Workflow.Activities\n  syntax:\n    content: protected override void OnActivityChangeAdd (System.Workflow.ComponentModel.ActivityExecutionContext executionContext, System.Workflow.ComponentModel.Activity addedActivity);\n    parameters:\n    - id: executionContext\n      type: System.Workflow.ComponentModel.ActivityExecutionContext\n      description: ''\n    - id: addedActivity\n      type: System.Workflow.ComponentModel.Activity\n      description: ''\n  overload: System.Workflow.Activities.ConditionedActivityGroup.OnActivityChangeAdd*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.Activities/ConditionedActivityGroup.xml\n- uid: System.Workflow.Activities.ConditionedActivityGroup.OnActivityChangeRemove(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.Activity)\n  commentId: M:System.Workflow.Activities.ConditionedActivityGroup.OnActivityChangeRemove(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.Activity)\n  id: OnActivityChangeRemove(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.Activity)\n  parent: System.Workflow.Activities.ConditionedActivityGroup\n  langs:\n  - csharp\n  name: OnActivityChangeRemove(ActivityExecutionContext, Activity)\n  nameWithType: ConditionedActivityGroup.OnActivityChangeRemove(ActivityExecutionContext, Activity)\n  fullName: ConditionedActivityGroup.OnActivityChangeRemove(ActivityExecutionContext, Activity)\n  type: Method\n  assemblies:\n  - System.Workflow.Activities\n  namespace: System.Workflow.Activities\n  syntax:\n    content: protected override void OnActivityChangeRemove (System.Workflow.ComponentModel.ActivityExecutionContext executionContext, System.Workflow.ComponentModel.Activity removedActivity);\n    parameters:\n    - id: executionContext\n      type: System.Workflow.ComponentModel.ActivityExecutionContext\n      description: ''\n    - id: removedActivity\n      type: System.Workflow.ComponentModel.Activity\n      description: ''\n  overload: System.Workflow.Activities.ConditionedActivityGroup.OnActivityChangeRemove*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.Activities/ConditionedActivityGroup.xml\n- uid: System.Workflow.Activities.ConditionedActivityGroup.OnClosed(System.IServiceProvider)\n  commentId: M:System.Workflow.Activities.ConditionedActivityGroup.OnClosed(System.IServiceProvider)\n  id: OnClosed(System.IServiceProvider)\n  parent: System.Workflow.Activities.ConditionedActivityGroup\n  langs:\n  - csharp\n  name: OnClosed(IServiceProvider)\n  nameWithType: ConditionedActivityGroup.OnClosed(IServiceProvider)\n  fullName: ConditionedActivityGroup.OnClosed(IServiceProvider)\n  type: Method\n  assemblies:\n  - System.Workflow.Activities\n  namespace: System.Workflow.Activities\n  syntax:\n    content: protected override void OnClosed (IServiceProvider provider);\n    parameters:\n    - id: provider\n      type: System.IServiceProvider\n      description: ''\n  overload: System.Workflow.Activities.ConditionedActivityGroup.OnClosed*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.Activities/ConditionedActivityGroup.xml\n- uid: System.Workflow.Activities.ConditionedActivityGroup.OnWorkflowChangesCompleted(System.Workflow.ComponentModel.ActivityExecutionContext)\n  commentId: M:System.Workflow.Activities.ConditionedActivityGroup.OnWorkflowChangesCompleted(System.Workflow.ComponentModel.ActivityExecutionContext)\n  id: OnWorkflowChangesCompleted(System.Workflow.ComponentModel.ActivityExecutionContext)\n  parent: System.Workflow.Activities.ConditionedActivityGroup\n  langs:\n  - csharp\n  name: OnWorkflowChangesCompleted(ActivityExecutionContext)\n  nameWithType: ConditionedActivityGroup.OnWorkflowChangesCompleted(ActivityExecutionContext)\n  fullName: ConditionedActivityGroup.OnWorkflowChangesCompleted(ActivityExecutionContext)\n  type: Method\n  assemblies:\n  - System.Workflow.Activities\n  namespace: System.Workflow.Activities\n  syntax:\n    content: protected override void OnWorkflowChangesCompleted (System.Workflow.ComponentModel.ActivityExecutionContext executionContext);\n    parameters:\n    - id: executionContext\n      type: System.Workflow.ComponentModel.ActivityExecutionContext\n      description: ''\n  overload: System.Workflow.Activities.ConditionedActivityGroup.OnWorkflowChangesCompleted*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.Activities/ConditionedActivityGroup.xml\n- uid: System.Workflow.Activities.ConditionedActivityGroup.SetWhenCondition(System.Object,System.Object)\n  commentId: M:System.Workflow.Activities.ConditionedActivityGroup.SetWhenCondition(System.Object,System.Object)\n  id: SetWhenCondition(System.Object,System.Object)\n  parent: System.Workflow.Activities.ConditionedActivityGroup\n  langs:\n  - csharp\n  name: SetWhenCondition(Object, Object)\n  nameWithType: ConditionedActivityGroup.SetWhenCondition(Object, Object)\n  fullName: ConditionedActivityGroup.SetWhenCondition(Object, Object)\n  type: Method\n  assemblies:\n  - System.Workflow.Activities\n  namespace: System.Workflow.Activities\n  summary: Sets the condition associated with the <xref href=\"System.Workflow.Activities.ConditionedActivityGroup.WhenConditionProperty\"></xref> for the specified dependency object.\n  syntax:\n    content: public static void SetWhenCondition (object dependencyObject, object value);\n    parameters:\n    - id: dependencyObject\n      type: System.Object\n      description: The underlying data storage object for the activity.\n    - id: value\n      type: System.Object\n      description: The value of the when condition.\n  overload: System.Workflow.Activities.ConditionedActivityGroup.SetWhenCondition*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>dependencyObject</code> is a `null` reference (`Nothing` in Visual Basic).\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The executable activities do not contain the <code>dependencyObject</code>.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.Activities/ConditionedActivityGroup.xml\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Workflow.Activities.ConditionedActivityGroup.UntilCondition\n  commentId: P:System.Workflow.Activities.ConditionedActivityGroup.UntilCondition\n  id: UntilCondition\n  parent: System.Workflow.Activities.ConditionedActivityGroup\n  langs:\n  - csharp\n  name: UntilCondition\n  nameWithType: ConditionedActivityGroup.UntilCondition\n  fullName: ConditionedActivityGroup.UntilCondition\n  type: Property\n  assemblies:\n  - System.Workflow.Activities\n  namespace: System.Workflow.Activities\n  summary: Gets or sets a value that indicates when the <xref href=\"System.Workflow.Activities.ConditionedActivityGroup\"></xref> should complete.\n  remarks: ''\n  example:\n  - \"The following code example shows how to set the <xref:System.Workflow.Activities.ConditionedActivityGroup.UntilCondition%2A> to `null`, which means the `BookingCAG`<xref:System.Workflow.Activities.ConditionedActivityGroup> class never completes. This code example is part of the ConditionedActivityGroup SDK Sample from the SimpleCAGWorkflow.Designer.cs file. [!INCLUDE[crdefault](~/includes/crdefault-md.md)][Using ConditionedActivityGroup](http://msdn.microsoft.com/en-us/5a0b7e9e-def5-46b2-acbb-0005e1aff984).  \\n  \\n [!code-csharp[wf_samples#159](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets11.cs#159)]\\n [!code-vb[wf_samples#159](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets11.vb#159)]\"\n  syntax:\n    content: public System.Workflow.ComponentModel.ActivityCondition UntilCondition { get; set; }\n    return:\n      type: System.Workflow.ComponentModel.ActivityCondition\n      description: A condition that determines whether the <xref href=\"System.Workflow.Activities.ConditionedActivityGroup\"></xref> should complete.\n  overload: System.Workflow.Activities.ConditionedActivityGroup.UntilCondition*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.Activities/ConditionedActivityGroup.xml\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Workflow.Activities.ConditionedActivityGroup.UntilConditionProperty\n  commentId: F:System.Workflow.Activities.ConditionedActivityGroup.UntilConditionProperty\n  id: UntilConditionProperty\n  parent: System.Workflow.Activities.ConditionedActivityGroup\n  langs:\n  - csharp\n  name: UntilConditionProperty\n  nameWithType: ConditionedActivityGroup.UntilConditionProperty\n  fullName: ConditionedActivityGroup.UntilConditionProperty\n  type: Field\n  assemblies:\n  - System.Workflow.Activities\n  namespace: System.Workflow.Activities\n  summary: Represents the <xref href=\"System.Workflow.ComponentModel.DependencyProperty\"></xref> that targets the <xref href=\"System.Workflow.Activities.ConditionedActivityGroup.UntilCondition\"></xref> property.\n  remarks: '[!INCLUDE[DependencyPropertyRemark](~/includes/dependencypropertyremark-md.md)]'\n  syntax:\n    content: public static readonly System.Workflow.ComponentModel.DependencyProperty UntilConditionProperty;\n    return:\n      type: System.Workflow.ComponentModel.DependencyProperty\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.Activities/ConditionedActivityGroup.xml\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Workflow.Activities.ConditionedActivityGroup.WhenConditionProperty\n  commentId: F:System.Workflow.Activities.ConditionedActivityGroup.WhenConditionProperty\n  id: WhenConditionProperty\n  parent: System.Workflow.Activities.ConditionedActivityGroup\n  langs:\n  - csharp\n  name: WhenConditionProperty\n  nameWithType: ConditionedActivityGroup.WhenConditionProperty\n  fullName: ConditionedActivityGroup.WhenConditionProperty\n  type: Field\n  assemblies:\n  - System.Workflow.Activities\n  namespace: System.Workflow.Activities\n  summary: Represents the <xref href=\"System.Workflow.ComponentModel.DependencyProperty\"></xref> that targets the <xref href=\"System.Workflow.Activities.ConditionedActivityGroup.WhenConditionProperty\"></xref> property.\n  remarks: '[!INCLUDE[DependencyPropertyRemark](~/includes/dependencypropertyremark-md.md)]'\n  syntax:\n    content: public static readonly System.Workflow.ComponentModel.DependencyProperty WhenConditionProperty;\n    return:\n      type: System.Workflow.ComponentModel.DependencyProperty\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.Activities/ConditionedActivityGroup.xml\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.Workflow.Activities.ConditionedActivityGroup.System#Workflow#ComponentModel#IActivityEventListener{System#Workflow#ComponentModel#ActivityExecutionStatusChangedEventArgs}#OnEvent(System.Object,System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs)\n  commentId: M:System.Workflow.Activities.ConditionedActivityGroup.System#Workflow#ComponentModel#IActivityEventListener<System#Workflow#ComponentModel#ActivityExecutionStatusChangedEventArgs>#OnEvent(System.Object,System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs)\n  id: System#Workflow#ComponentModel#IActivityEventListener{System#Workflow#ComponentModel#ActivityExecutionStatusChangedEventArgs}#OnEvent(System.Object,System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs)\n  isEii: true\n  parent: System.Workflow.Activities.ConditionedActivityGroup\n  langs:\n  - csharp\n  name: IActivityEventListener<ActivityExecutionStatusChangedEventArgs>.OnEvent(Object, ActivityExecutionStatusChangedEventArgs)\n  nameWithType: ConditionedActivityGroup.IActivityEventListener<ActivityExecutionStatusChangedEventArgs>.OnEvent(Object, ActivityExecutionStatusChangedEventArgs)\n  fullName: ConditionedActivityGroup.IActivityEventListener<ActivityExecutionStatusChangedEventArgs>.OnEvent(Object, ActivityExecutionStatusChangedEventArgs)\n  type: Method\n  assemblies:\n  - System.Workflow.Activities\n  namespace: System.Workflow.Activities\n  summary: Defines the processing procedure when the subscribed-to event occurs.\n  syntax:\n    content: void IActivityEventListener<ActivityExecutionStatusChangedEventArgs>.OnEvent (object sender, System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs e);\n    parameters:\n    - id: sender\n      type: System.Object\n      description: The object that raised the event.\n    - id: e\n      type: System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs\n      description: The previously-typed event arguments.\n  overload: System.Workflow.Activities.ConditionedActivityGroup.System#Workflow#ComponentModel#IActivityEventListener{System#Workflow#ComponentModel#ActivityExecutionStatusChangedEventArgs}#OnEvent*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.Activities/ConditionedActivityGroup.xml\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\nreferences:\n- uid: System.Workflow.ComponentModel.CompositeActivity\n  parent: System.Workflow.ComponentModel\n  isExternal: false\n  name: CompositeActivity\n  nameWithType: CompositeActivity\n  fullName: System.Workflow.ComponentModel.CompositeActivity\n- uid: System.InvalidOperationException\n  parent: System\n  isExternal: false\n  name: InvalidOperationException\n  nameWithType: InvalidOperationException\n  fullName: System.InvalidOperationException\n- uid: System.ArgumentNullException\n  parent: System\n  isExternal: false\n  name: ArgumentNullException\n  nameWithType: ArgumentNullException\n  fullName: System.ArgumentNullException\n- uid: System.ArgumentException\n  parent: System\n  isExternal: false\n  name: ArgumentException\n  nameWithType: ArgumentException\n  fullName: System.ArgumentException\n- uid: System.Workflow.Activities.ConditionedActivityGroup.#ctor\n  parent: System.Workflow.Activities.ConditionedActivityGroup\n  isExternal: false\n  name: ConditionedActivityGroup()\n  nameWithType: ConditionedActivityGroup.ConditionedActivityGroup()\n  fullName: ConditionedActivityGroup.ConditionedActivityGroup()\n- uid: System.Workflow.Activities.ConditionedActivityGroup.#ctor(System.String)\n  parent: System.Workflow.Activities.ConditionedActivityGroup\n  isExternal: false\n  name: ConditionedActivityGroup(String)\n  nameWithType: ConditionedActivityGroup.ConditionedActivityGroup(String)\n  fullName: ConditionedActivityGroup.ConditionedActivityGroup(String)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Workflow.Activities.ConditionedActivityGroup.Cancel(System.Workflow.ComponentModel.ActivityExecutionContext)\n  parent: System.Workflow.Activities.ConditionedActivityGroup\n  isExternal: false\n  name: Cancel(ActivityExecutionContext)\n  nameWithType: ConditionedActivityGroup.Cancel(ActivityExecutionContext)\n  fullName: ConditionedActivityGroup.Cancel(ActivityExecutionContext)\n- uid: System.Workflow.ComponentModel.ActivityExecutionStatus\n  parent: System.Workflow.ComponentModel\n  isExternal: false\n  name: ActivityExecutionStatus\n  nameWithType: ActivityExecutionStatus\n  fullName: System.Workflow.ComponentModel.ActivityExecutionStatus\n- uid: System.Workflow.ComponentModel.ActivityExecutionContext\n  parent: System.Workflow.ComponentModel\n  isExternal: false\n  name: ActivityExecutionContext\n  nameWithType: ActivityExecutionContext\n  fullName: System.Workflow.ComponentModel.ActivityExecutionContext\n- uid: System.Workflow.Activities.ConditionedActivityGroup.Execute(System.Workflow.ComponentModel.ActivityExecutionContext)\n  parent: System.Workflow.Activities.ConditionedActivityGroup\n  isExternal: false\n  name: Execute(ActivityExecutionContext)\n  nameWithType: ConditionedActivityGroup.Execute(ActivityExecutionContext)\n  fullName: ConditionedActivityGroup.Execute(ActivityExecutionContext)\n- uid: System.Workflow.Activities.ConditionedActivityGroup.GetChildActivityExecutedCount(System.Workflow.ComponentModel.Activity)\n  parent: System.Workflow.Activities.ConditionedActivityGroup\n  isExternal: false\n  name: GetChildActivityExecutedCount(Activity)\n  nameWithType: ConditionedActivityGroup.GetChildActivityExecutedCount(Activity)\n  fullName: ConditionedActivityGroup.GetChildActivityExecutedCount(Activity)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Workflow.ComponentModel.Activity\n  parent: System.Workflow.ComponentModel\n  isExternal: false\n  name: Activity\n  nameWithType: Activity\n  fullName: System.Workflow.ComponentModel.Activity\n- uid: System.Workflow.Activities.ConditionedActivityGroup.GetDynamicActivity(System.String)\n  parent: System.Workflow.Activities.ConditionedActivityGroup\n  isExternal: false\n  name: GetDynamicActivity(String)\n  nameWithType: ConditionedActivityGroup.GetDynamicActivity(String)\n  fullName: ConditionedActivityGroup.GetDynamicActivity(String)\n- uid: System.Workflow.Activities.ConditionedActivityGroup.GetWhenCondition(System.Object)\n  parent: System.Workflow.Activities.ConditionedActivityGroup\n  isExternal: false\n  name: GetWhenCondition(Object)\n  nameWithType: ConditionedActivityGroup.GetWhenCondition(Object)\n  fullName: ConditionedActivityGroup.GetWhenCondition(Object)\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Workflow.Activities.ConditionedActivityGroup.OnActivityChangeAdd(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.Activity)\n  parent: System.Workflow.Activities.ConditionedActivityGroup\n  isExternal: false\n  name: OnActivityChangeAdd(ActivityExecutionContext, Activity)\n  nameWithType: ConditionedActivityGroup.OnActivityChangeAdd(ActivityExecutionContext, Activity)\n  fullName: ConditionedActivityGroup.OnActivityChangeAdd(ActivityExecutionContext, Activity)\n- uid: System.Workflow.Activities.ConditionedActivityGroup.OnActivityChangeRemove(System.Workflow.ComponentModel.ActivityExecutionContext,System.Workflow.ComponentModel.Activity)\n  parent: System.Workflow.Activities.ConditionedActivityGroup\n  isExternal: false\n  name: OnActivityChangeRemove(ActivityExecutionContext, Activity)\n  nameWithType: ConditionedActivityGroup.OnActivityChangeRemove(ActivityExecutionContext, Activity)\n  fullName: ConditionedActivityGroup.OnActivityChangeRemove(ActivityExecutionContext, Activity)\n- uid: System.Workflow.Activities.ConditionedActivityGroup.OnClosed(System.IServiceProvider)\n  parent: System.Workflow.Activities.ConditionedActivityGroup\n  isExternal: false\n  name: OnClosed(IServiceProvider)\n  nameWithType: ConditionedActivityGroup.OnClosed(IServiceProvider)\n  fullName: ConditionedActivityGroup.OnClosed(IServiceProvider)\n- uid: System.IServiceProvider\n  parent: System\n  isExternal: false\n  name: IServiceProvider\n  nameWithType: IServiceProvider\n  fullName: System.IServiceProvider\n- uid: System.Workflow.Activities.ConditionedActivityGroup.OnWorkflowChangesCompleted(System.Workflow.ComponentModel.ActivityExecutionContext)\n  parent: System.Workflow.Activities.ConditionedActivityGroup\n  isExternal: false\n  name: OnWorkflowChangesCompleted(ActivityExecutionContext)\n  nameWithType: ConditionedActivityGroup.OnWorkflowChangesCompleted(ActivityExecutionContext)\n  fullName: ConditionedActivityGroup.OnWorkflowChangesCompleted(ActivityExecutionContext)\n- uid: System.Workflow.Activities.ConditionedActivityGroup.SetWhenCondition(System.Object,System.Object)\n  parent: System.Workflow.Activities.ConditionedActivityGroup\n  isExternal: false\n  name: SetWhenCondition(Object, Object)\n  nameWithType: ConditionedActivityGroup.SetWhenCondition(Object, Object)\n  fullName: ConditionedActivityGroup.SetWhenCondition(Object, Object)\n- uid: System.Workflow.Activities.ConditionedActivityGroup.UntilCondition\n  parent: System.Workflow.Activities.ConditionedActivityGroup\n  isExternal: false\n  name: UntilCondition\n  nameWithType: ConditionedActivityGroup.UntilCondition\n  fullName: ConditionedActivityGroup.UntilCondition\n- uid: System.Workflow.ComponentModel.ActivityCondition\n  parent: System.Workflow.ComponentModel\n  isExternal: false\n  name: ActivityCondition\n  nameWithType: ActivityCondition\n  fullName: System.Workflow.ComponentModel.ActivityCondition\n- uid: System.Workflow.Activities.ConditionedActivityGroup.UntilConditionProperty\n  parent: System.Workflow.Activities.ConditionedActivityGroup\n  isExternal: false\n  name: UntilConditionProperty\n  nameWithType: ConditionedActivityGroup.UntilConditionProperty\n  fullName: ConditionedActivityGroup.UntilConditionProperty\n- uid: System.Workflow.ComponentModel.DependencyProperty\n  parent: System.Workflow.ComponentModel\n  isExternal: false\n  name: DependencyProperty\n  nameWithType: DependencyProperty\n  fullName: System.Workflow.ComponentModel.DependencyProperty\n- uid: System.Workflow.Activities.ConditionedActivityGroup.WhenConditionProperty\n  parent: System.Workflow.Activities.ConditionedActivityGroup\n  isExternal: false\n  name: WhenConditionProperty\n  nameWithType: ConditionedActivityGroup.WhenConditionProperty\n  fullName: ConditionedActivityGroup.WhenConditionProperty\n- uid: System.Workflow.Activities.ConditionedActivityGroup.System#Workflow#ComponentModel#IActivityEventListener{System#Workflow#ComponentModel#ActivityExecutionStatusChangedEventArgs}#OnEvent(System.Object,System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs)\n  parent: System.Workflow.Activities.ConditionedActivityGroup\n  isExternal: false\n  name: IActivityEventListener<ActivityExecutionStatusChangedEventArgs>.OnEvent(Object, ActivityExecutionStatusChangedEventArgs)\n  nameWithType: ConditionedActivityGroup.IActivityEventListener<ActivityExecutionStatusChangedEventArgs>.OnEvent(Object, ActivityExecutionStatusChangedEventArgs)\n  fullName: ConditionedActivityGroup.IActivityEventListener<ActivityExecutionStatusChangedEventArgs>.OnEvent(Object, ActivityExecutionStatusChangedEventArgs)\n- uid: System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs\n  parent: System.Workflow.ComponentModel\n  isExternal: false\n  name: ActivityExecutionStatusChangedEventArgs\n  nameWithType: ActivityExecutionStatusChangedEventArgs\n  fullName: System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs\n- uid: System.Workflow.Activities.ConditionedActivityGroup.#ctor*\n  parent: System.Workflow.Activities.ConditionedActivityGroup\n  isExternal: false\n  name: ConditionedActivityGroup\n  nameWithType: ConditionedActivityGroup.ConditionedActivityGroup\n  fullName: ConditionedActivityGroup.ConditionedActivityGroup\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.Activities/ConditionedActivityGroup.xml\n- uid: System.Workflow.Activities.ConditionedActivityGroup.Cancel*\n  parent: System.Workflow.Activities.ConditionedActivityGroup\n  isExternal: false\n  name: Cancel\n  nameWithType: ConditionedActivityGroup.Cancel\n  fullName: ConditionedActivityGroup.Cancel\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.Activities/ConditionedActivityGroup.xml\n- uid: System.Workflow.Activities.ConditionedActivityGroup.Execute*\n  parent: System.Workflow.Activities.ConditionedActivityGroup\n  isExternal: false\n  name: Execute\n  nameWithType: ConditionedActivityGroup.Execute\n  fullName: ConditionedActivityGroup.Execute\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.Activities/ConditionedActivityGroup.xml\n- uid: System.Workflow.Activities.ConditionedActivityGroup.GetChildActivityExecutedCount*\n  parent: System.Workflow.Activities.ConditionedActivityGroup\n  isExternal: false\n  name: GetChildActivityExecutedCount\n  nameWithType: ConditionedActivityGroup.GetChildActivityExecutedCount\n  fullName: ConditionedActivityGroup.GetChildActivityExecutedCount\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.Activities/ConditionedActivityGroup.xml\n- uid: System.Workflow.Activities.ConditionedActivityGroup.GetDynamicActivity*\n  parent: System.Workflow.Activities.ConditionedActivityGroup\n  isExternal: false\n  name: GetDynamicActivity\n  nameWithType: ConditionedActivityGroup.GetDynamicActivity\n  fullName: ConditionedActivityGroup.GetDynamicActivity\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.Activities/ConditionedActivityGroup.xml\n- uid: System.Workflow.Activities.ConditionedActivityGroup.GetWhenCondition*\n  parent: System.Workflow.Activities.ConditionedActivityGroup\n  isExternal: false\n  name: GetWhenCondition\n  nameWithType: ConditionedActivityGroup.GetWhenCondition\n  fullName: ConditionedActivityGroup.GetWhenCondition\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.Activities/ConditionedActivityGroup.xml\n- uid: System.Workflow.Activities.ConditionedActivityGroup.OnActivityChangeAdd*\n  parent: System.Workflow.Activities.ConditionedActivityGroup\n  isExternal: false\n  name: OnActivityChangeAdd\n  nameWithType: ConditionedActivityGroup.OnActivityChangeAdd\n  fullName: ConditionedActivityGroup.OnActivityChangeAdd\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.Activities/ConditionedActivityGroup.xml\n- uid: System.Workflow.Activities.ConditionedActivityGroup.OnActivityChangeRemove*\n  parent: System.Workflow.Activities.ConditionedActivityGroup\n  isExternal: false\n  name: OnActivityChangeRemove\n  nameWithType: ConditionedActivityGroup.OnActivityChangeRemove\n  fullName: ConditionedActivityGroup.OnActivityChangeRemove\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.Activities/ConditionedActivityGroup.xml\n- uid: System.Workflow.Activities.ConditionedActivityGroup.OnClosed*\n  parent: System.Workflow.Activities.ConditionedActivityGroup\n  isExternal: false\n  name: OnClosed\n  nameWithType: ConditionedActivityGroup.OnClosed\n  fullName: ConditionedActivityGroup.OnClosed\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.Activities/ConditionedActivityGroup.xml\n- uid: System.Workflow.Activities.ConditionedActivityGroup.OnWorkflowChangesCompleted*\n  parent: System.Workflow.Activities.ConditionedActivityGroup\n  isExternal: false\n  name: OnWorkflowChangesCompleted\n  nameWithType: ConditionedActivityGroup.OnWorkflowChangesCompleted\n  fullName: ConditionedActivityGroup.OnWorkflowChangesCompleted\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.Activities/ConditionedActivityGroup.xml\n- uid: System.Workflow.Activities.ConditionedActivityGroup.SetWhenCondition*\n  parent: System.Workflow.Activities.ConditionedActivityGroup\n  isExternal: false\n  name: SetWhenCondition\n  nameWithType: ConditionedActivityGroup.SetWhenCondition\n  fullName: ConditionedActivityGroup.SetWhenCondition\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.Activities/ConditionedActivityGroup.xml\n- uid: System.Workflow.Activities.ConditionedActivityGroup.UntilCondition*\n  parent: System.Workflow.Activities.ConditionedActivityGroup\n  isExternal: false\n  name: UntilCondition\n  nameWithType: ConditionedActivityGroup.UntilCondition\n  fullName: ConditionedActivityGroup.UntilCondition\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.Activities/ConditionedActivityGroup.xml\n- uid: System.Workflow.Activities.ConditionedActivityGroup.System#Workflow#ComponentModel#IActivityEventListener{System#Workflow#ComponentModel#ActivityExecutionStatusChangedEventArgs}#OnEvent*\n  parent: System.Workflow.Activities.ConditionedActivityGroup\n  isExternal: false\n  name: System.Workflow.ComponentModel.IActivityEventListener<System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs>.OnEvent\n  nameWithType: ConditionedActivityGroup.System.Workflow.ComponentModel.IActivityEventListener<System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs>.OnEvent\n  fullName: ConditionedActivityGroup.System.Workflow.ComponentModel.IActivityEventListener<System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs>.OnEvent\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Workflow.Activities/ConditionedActivityGroup.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Workflow.ComponentModel.Activity.ToString\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: ToString()\n  nameWithType: Activity.ToString()\n  fullName: Activity.ToString()\n- uid: System.Workflow.ComponentModel.DependencyObject.AddHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)\n  parent: System.Workflow.ComponentModel.DependencyObject\n  isExternal: false\n  name: AddHandler(DependencyProperty, Object)\n  nameWithType: DependencyObject.AddHandler(DependencyProperty, Object)\n  fullName: DependencyObject.AddHandler(DependencyProperty, Object)\n- uid: System.Workflow.ComponentModel.DependencyObject.DesignMode\n  parent: System.Workflow.ComponentModel.DependencyObject\n  isExternal: false\n  name: DesignMode\n  nameWithType: DependencyObject.DesignMode\n  fullName: DependencyObject.DesignMode\n- uid: System.Workflow.ComponentModel.DependencyObject.Dispose\n  parent: System.Workflow.ComponentModel.DependencyObject\n  isExternal: false\n  name: Dispose()\n  nameWithType: DependencyObject.Dispose()\n  fullName: DependencyObject.Dispose()\n- uid: System.Workflow.ComponentModel.CompositeActivity.Dispose(System.Boolean)\n  parent: System.Workflow.ComponentModel.CompositeActivity\n  isExternal: false\n  name: Dispose(Boolean)\n  nameWithType: CompositeActivity.Dispose(Boolean)\n  fullName: CompositeActivity.Dispose(Boolean)\n- uid: System.Workflow.ComponentModel.DependencyObject.GetBinding(System.Workflow.ComponentModel.DependencyProperty)\n  parent: System.Workflow.ComponentModel.DependencyObject\n  isExternal: false\n  name: GetBinding(DependencyProperty)\n  nameWithType: DependencyObject.GetBinding(DependencyProperty)\n  fullName: DependencyObject.GetBinding(DependencyProperty)\n- uid: System.Workflow.ComponentModel.DependencyObject.GetBoundValue(System.Workflow.ComponentModel.ActivityBind,System.Type)\n  parent: System.Workflow.ComponentModel.DependencyObject\n  isExternal: false\n  name: GetBoundValue(ActivityBind, Type)\n  nameWithType: DependencyObject.GetBoundValue(ActivityBind, Type)\n  fullName: DependencyObject.GetBoundValue(ActivityBind, Type)\n- uid: System.Workflow.ComponentModel.DependencyObject.GetInvocationList``1(System.Workflow.ComponentModel.DependencyProperty)\n  parent: System.Workflow.ComponentModel.DependencyObject\n  isExternal: false\n  name: GetInvocationList<T>(DependencyProperty)\n  nameWithType: DependencyObject.GetInvocationList<T>(DependencyProperty)\n  fullName: DependencyObject.GetInvocationList<T>(DependencyProperty)\n- uid: System.Workflow.ComponentModel.DependencyObject.GetValue(System.Workflow.ComponentModel.DependencyProperty)\n  parent: System.Workflow.ComponentModel.DependencyObject\n  isExternal: false\n  name: GetValue(DependencyProperty)\n  nameWithType: DependencyObject.GetValue(DependencyProperty)\n  fullName: DependencyObject.GetValue(DependencyProperty)\n- uid: System.Workflow.ComponentModel.DependencyObject.GetValueBase(System.Workflow.ComponentModel.DependencyProperty)\n  parent: System.Workflow.ComponentModel.DependencyObject\n  isExternal: false\n  name: GetValueBase(DependencyProperty)\n  nameWithType: DependencyObject.GetValueBase(DependencyProperty)\n  fullName: DependencyObject.GetValueBase(DependencyProperty)\n- uid: System.Workflow.ComponentModel.DependencyObject.InitializeProperties\n  parent: System.Workflow.ComponentModel.DependencyObject\n  isExternal: false\n  name: InitializeProperties()\n  nameWithType: DependencyObject.InitializeProperties()\n  fullName: DependencyObject.InitializeProperties()\n- uid: System.Workflow.ComponentModel.DependencyObject.IsBindingSet(System.Workflow.ComponentModel.DependencyProperty)\n  parent: System.Workflow.ComponentModel.DependencyObject\n  isExternal: false\n  name: IsBindingSet(DependencyProperty)\n  nameWithType: DependencyObject.IsBindingSet(DependencyProperty)\n  fullName: DependencyObject.IsBindingSet(DependencyProperty)\n- uid: System.Workflow.ComponentModel.DependencyObject.MetaEquals(System.Workflow.ComponentModel.DependencyObject)\n  parent: System.Workflow.ComponentModel.DependencyObject\n  isExternal: false\n  name: MetaEquals(DependencyObject)\n  nameWithType: DependencyObject.MetaEquals(DependencyObject)\n  fullName: DependencyObject.MetaEquals(DependencyObject)\n- uid: System.Workflow.ComponentModel.DependencyObject.ParentDependencyObject\n  parent: System.Workflow.ComponentModel.DependencyObject\n  isExternal: false\n  name: ParentDependencyObject\n  nameWithType: DependencyObject.ParentDependencyObject\n  fullName: DependencyObject.ParentDependencyObject\n- uid: System.Workflow.ComponentModel.DependencyObject.RemoveHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)\n  parent: System.Workflow.ComponentModel.DependencyObject\n  isExternal: false\n  name: RemoveHandler(DependencyProperty, Object)\n  nameWithType: DependencyObject.RemoveHandler(DependencyProperty, Object)\n  fullName: DependencyObject.RemoveHandler(DependencyProperty, Object)\n- uid: System.Workflow.ComponentModel.DependencyObject.RemoveProperty(System.Workflow.ComponentModel.DependencyProperty)\n  parent: System.Workflow.ComponentModel.DependencyObject\n  isExternal: false\n  name: RemoveProperty(DependencyProperty)\n  nameWithType: DependencyObject.RemoveProperty(DependencyProperty)\n  fullName: DependencyObject.RemoveProperty(DependencyProperty)\n- uid: System.Workflow.ComponentModel.DependencyObject.SetBinding(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.ActivityBind)\n  parent: System.Workflow.ComponentModel.DependencyObject\n  isExternal: false\n  name: SetBinding(DependencyProperty, ActivityBind)\n  nameWithType: DependencyObject.SetBinding(DependencyProperty, ActivityBind)\n  fullName: DependencyObject.SetBinding(DependencyProperty, ActivityBind)\n- uid: System.Workflow.ComponentModel.DependencyObject.SetBoundValue(System.Workflow.ComponentModel.ActivityBind,System.Object)\n  parent: System.Workflow.ComponentModel.DependencyObject\n  isExternal: false\n  name: SetBoundValue(ActivityBind, Object)\n  nameWithType: DependencyObject.SetBoundValue(ActivityBind, Object)\n  fullName: DependencyObject.SetBoundValue(ActivityBind, Object)\n- uid: System.Workflow.ComponentModel.DependencyObject.SetReadOnlyPropertyValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)\n  parent: System.Workflow.ComponentModel.DependencyObject\n  isExternal: false\n  name: SetReadOnlyPropertyValue(DependencyProperty, Object)\n  nameWithType: DependencyObject.SetReadOnlyPropertyValue(DependencyProperty, Object)\n  fullName: DependencyObject.SetReadOnlyPropertyValue(DependencyProperty, Object)\n- uid: System.Workflow.ComponentModel.DependencyObject.SetValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)\n  parent: System.Workflow.ComponentModel.DependencyObject\n  isExternal: false\n  name: SetValue(DependencyProperty, Object)\n  nameWithType: DependencyObject.SetValue(DependencyProperty, Object)\n  fullName: DependencyObject.SetValue(DependencyProperty, Object)\n- uid: System.Workflow.ComponentModel.DependencyObject.SetValueBase(System.Workflow.ComponentModel.DependencyProperty,System.Object)\n  parent: System.Workflow.ComponentModel.DependencyObject\n  isExternal: false\n  name: SetValueBase(DependencyProperty, Object)\n  nameWithType: DependencyObject.SetValueBase(DependencyProperty, Object)\n  fullName: DependencyObject.SetValueBase(DependencyProperty, Object)\n- uid: System.Workflow.ComponentModel.DependencyObject.Site\n  parent: System.Workflow.ComponentModel.DependencyObject\n  isExternal: false\n  name: Site\n  nameWithType: DependencyObject.Site\n  fullName: DependencyObject.Site\n- uid: System.Workflow.ComponentModel.DependencyObject.UserData\n  parent: System.Workflow.ComponentModel.DependencyObject\n  isExternal: false\n  name: UserData\n  nameWithType: DependencyObject.UserData\n  fullName: DependencyObject.UserData\n- uid: System.Workflow.ComponentModel.Activity.ActivityContextGuidProperty\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: ActivityContextGuidProperty\n  nameWithType: Activity.ActivityContextGuidProperty\n  fullName: Activity.ActivityContextGuidProperty\n- uid: System.Workflow.ComponentModel.Activity.Canceling\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: Canceling\n  nameWithType: Activity.Canceling\n  fullName: Activity.Canceling\n- uid: System.Workflow.ComponentModel.Activity.CancelingEvent\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: CancelingEvent\n  nameWithType: Activity.CancelingEvent\n  fullName: Activity.CancelingEvent\n- uid: System.Workflow.ComponentModel.Activity.Clone\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: Clone()\n  nameWithType: Activity.Clone()\n  fullName: Activity.Clone()\n- uid: System.Workflow.ComponentModel.Activity.Closed\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: Closed\n  nameWithType: Activity.Closed\n  fullName: Activity.Closed\n- uid: System.Workflow.ComponentModel.Activity.ClosedEvent\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: ClosedEvent\n  nameWithType: Activity.ClosedEvent\n  fullName: Activity.ClosedEvent\n- uid: System.Workflow.ComponentModel.Activity.Compensating\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: Compensating\n  nameWithType: Activity.Compensating\n  fullName: Activity.Compensating\n- uid: System.Workflow.ComponentModel.Activity.CompensatingEvent\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: CompensatingEvent\n  nameWithType: Activity.CompensatingEvent\n  fullName: Activity.CompensatingEvent\n- uid: System.Workflow.ComponentModel.Activity.Description\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: Description\n  nameWithType: Activity.Description\n  fullName: Activity.Description\n- uid: System.Workflow.ComponentModel.Activity.Enabled\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: Enabled\n  nameWithType: Activity.Enabled\n  fullName: Activity.Enabled\n- uid: System.Workflow.ComponentModel.Activity.Executing\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: Executing\n  nameWithType: Activity.Executing\n  fullName: Activity.Executing\n- uid: System.Workflow.ComponentModel.Activity.ExecutingEvent\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: ExecutingEvent\n  nameWithType: Activity.ExecutingEvent\n  fullName: Activity.ExecutingEvent\n- uid: System.Workflow.ComponentModel.Activity.ExecutionResult\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: ExecutionResult\n  nameWithType: Activity.ExecutionResult\n  fullName: Activity.ExecutionResult\n- uid: System.Workflow.ComponentModel.Activity.ExecutionStatus\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: ExecutionStatus\n  nameWithType: Activity.ExecutionStatus\n  fullName: Activity.ExecutionStatus\n- uid: System.Workflow.ComponentModel.Activity.Faulting\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: Faulting\n  nameWithType: Activity.Faulting\n  fullName: Activity.Faulting\n- uid: System.Workflow.ComponentModel.Activity.FaultingEvent\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: FaultingEvent\n  nameWithType: Activity.FaultingEvent\n  fullName: Activity.FaultingEvent\n- uid: System.Workflow.ComponentModel.Activity.GetActivityByName(System.String)\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: GetActivityByName(String)\n  nameWithType: Activity.GetActivityByName(String)\n  fullName: Activity.GetActivityByName(String)\n- uid: System.Workflow.ComponentModel.Activity.GetActivityByName(System.String,System.Boolean)\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: GetActivityByName(String, Boolean)\n  nameWithType: Activity.GetActivityByName(String, Boolean)\n  fullName: Activity.GetActivityByName(String, Boolean)\n- uid: System.Workflow.ComponentModel.CompositeActivity.HandleFault(System.Workflow.ComponentModel.ActivityExecutionContext,System.Exception)\n  parent: System.Workflow.ComponentModel.CompositeActivity\n  isExternal: false\n  name: HandleFault(ActivityExecutionContext, Exception)\n  nameWithType: CompositeActivity.HandleFault(ActivityExecutionContext, Exception)\n  fullName: CompositeActivity.HandleFault(ActivityExecutionContext, Exception)\n- uid: System.Workflow.ComponentModel.CompositeActivity.Initialize(System.IServiceProvider)\n  parent: System.Workflow.ComponentModel.CompositeActivity\n  isExternal: false\n  name: Initialize(IServiceProvider)\n  nameWithType: CompositeActivity.Initialize(IServiceProvider)\n  fullName: CompositeActivity.Initialize(IServiceProvider)\n- uid: System.Workflow.ComponentModel.Activity.Invoke``1(System.EventHandler{``0},``0)\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: Invoke<T>(EventHandler<T>, T)\n  nameWithType: Activity.Invoke<T>(EventHandler<T>, T)\n  fullName: Activity.Invoke<T>(EventHandler<T>, T)\n- uid: System.Workflow.ComponentModel.Activity.Invoke``1(System.Workflow.ComponentModel.IActivityEventListener{``0},``0)\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: Invoke<T>(IActivityEventListener<T>, T)\n  nameWithType: Activity.Invoke<T>(IActivityEventListener<T>, T)\n  fullName: Activity.Invoke<T>(IActivityEventListener<T>, T)\n- uid: System.Workflow.ComponentModel.Activity.IsDynamicActivity\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: IsDynamicActivity\n  nameWithType: Activity.IsDynamicActivity\n  fullName: Activity.IsDynamicActivity\n- uid: System.Workflow.ComponentModel.Activity.Load(System.IO.Stream,System.Workflow.ComponentModel.Activity)\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: Load(Stream, Activity)\n  nameWithType: Activity.Load(Stream, Activity)\n  fullName: Activity.Load(Stream, Activity)\n- uid: System.Workflow.ComponentModel.Activity.Load(System.IO.Stream,System.Workflow.ComponentModel.Activity,System.Runtime.Serialization.IFormatter)\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: Load(Stream, Activity, IFormatter)\n  nameWithType: Activity.Load(Stream, Activity, IFormatter)\n  fullName: Activity.Load(Stream, Activity, IFormatter)\n- uid: System.Workflow.ComponentModel.Activity.Name\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: Name\n  nameWithType: Activity.Name\n  fullName: Activity.Name\n- uid: System.Workflow.ComponentModel.CompositeActivity.OnActivityExecutionContextLoad(System.IServiceProvider)\n  parent: System.Workflow.ComponentModel.CompositeActivity\n  isExternal: false\n  name: OnActivityExecutionContextLoad(IServiceProvider)\n  nameWithType: CompositeActivity.OnActivityExecutionContextLoad(IServiceProvider)\n  fullName: CompositeActivity.OnActivityExecutionContextLoad(IServiceProvider)\n- uid: System.Workflow.ComponentModel.CompositeActivity.OnActivityExecutionContextUnload(System.IServiceProvider)\n  parent: System.Workflow.ComponentModel.CompositeActivity\n  isExternal: false\n  name: OnActivityExecutionContextUnload(IServiceProvider)\n  nameWithType: CompositeActivity.OnActivityExecutionContextUnload(IServiceProvider)\n  fullName: CompositeActivity.OnActivityExecutionContextUnload(IServiceProvider)\n- uid: System.Workflow.ComponentModel.Activity.Parent\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: Parent\n  nameWithType: Activity.Parent\n  fullName: Activity.Parent\n- uid: System.Workflow.ComponentModel.Activity.QualifiedName\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: QualifiedName\n  nameWithType: Activity.QualifiedName\n  fullName: Activity.QualifiedName\n- uid: System.Workflow.ComponentModel.Activity.RaiseEvent(System.Workflow.ComponentModel.DependencyProperty,System.Object,System.EventArgs)\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: RaiseEvent(DependencyProperty, Object, EventArgs)\n  nameWithType: Activity.RaiseEvent(DependencyProperty, Object, EventArgs)\n  fullName: Activity.RaiseEvent(DependencyProperty, Object, EventArgs)\n- uid: System.Workflow.ComponentModel.Activity.RaiseGenericEvent``1(System.Workflow.ComponentModel.DependencyProperty,System.Object,``0)\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: RaiseGenericEvent<T>(DependencyProperty, Object, T)\n  nameWithType: Activity.RaiseGenericEvent<T>(DependencyProperty, Object, T)\n  fullName: Activity.RaiseGenericEvent<T>(DependencyProperty, Object, T)\n- uid: System.Workflow.ComponentModel.Activity.RegisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: RegisterForStatusChange(DependencyProperty, IActivityEventListener<ActivityExecutionStatusChangedEventArgs>)\n  nameWithType: Activity.RegisterForStatusChange(DependencyProperty, IActivityEventListener<ActivityExecutionStatusChangedEventArgs>)\n  fullName: Activity.RegisterForStatusChange(DependencyProperty, IActivityEventListener<ActivityExecutionStatusChangedEventArgs>)\n- uid: System.Workflow.ComponentModel.Activity.Save(System.IO.Stream)\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: Save(Stream)\n  nameWithType: Activity.Save(Stream)\n  fullName: Activity.Save(Stream)\n- uid: System.Workflow.ComponentModel.Activity.Save(System.IO.Stream,System.Runtime.Serialization.IFormatter)\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: Save(Stream, IFormatter)\n  nameWithType: Activity.Save(Stream, IFormatter)\n  fullName: Activity.Save(Stream, IFormatter)\n- uid: System.Workflow.ComponentModel.Activity.StatusChanged\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: StatusChanged\n  nameWithType: Activity.StatusChanged\n  fullName: Activity.StatusChanged\n- uid: System.Workflow.ComponentModel.Activity.StatusChangedEvent\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: StatusChangedEvent\n  nameWithType: Activity.StatusChangedEvent\n  fullName: Activity.StatusChangedEvent\n- uid: System.Workflow.ComponentModel.Activity.TrackData(System.Object)\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: TrackData(Object)\n  nameWithType: Activity.TrackData(Object)\n  fullName: Activity.TrackData(Object)\n- uid: System.Workflow.ComponentModel.Activity.TrackData(System.String,System.Object)\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: TrackData(String, Object)\n  nameWithType: Activity.TrackData(String, Object)\n  fullName: Activity.TrackData(String, Object)\n- uid: System.Workflow.ComponentModel.CompositeActivity.Uninitialize(System.IServiceProvider)\n  parent: System.Workflow.ComponentModel.CompositeActivity\n  isExternal: false\n  name: Uninitialize(IServiceProvider)\n  nameWithType: CompositeActivity.Uninitialize(IServiceProvider)\n  fullName: CompositeActivity.Uninitialize(IServiceProvider)\n- uid: System.Workflow.ComponentModel.Activity.UnregisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: UnregisterForStatusChange(DependencyProperty, IActivityEventListener<ActivityExecutionStatusChangedEventArgs>)\n  nameWithType: Activity.UnregisterForStatusChange(DependencyProperty, IActivityEventListener<ActivityExecutionStatusChangedEventArgs>)\n  fullName: Activity.UnregisterForStatusChange(DependencyProperty, IActivityEventListener<ActivityExecutionStatusChangedEventArgs>)\n- uid: System.Workflow.ComponentModel.Activity.WorkflowInstanceId\n  parent: System.Workflow.ComponentModel.Activity\n  isExternal: false\n  name: WorkflowInstanceId\n  nameWithType: Activity.WorkflowInstanceId\n  fullName: Activity.WorkflowInstanceId\n- uid: System.Workflow.ComponentModel.CompositeActivity.Activities\n  parent: System.Workflow.ComponentModel.CompositeActivity\n  isExternal: false\n  name: Activities\n  nameWithType: CompositeActivity.Activities\n  fullName: CompositeActivity.Activities\n- uid: System.Workflow.ComponentModel.CompositeActivity.ApplyWorkflowChanges(System.Workflow.ComponentModel.WorkflowChanges)\n  parent: System.Workflow.ComponentModel.CompositeActivity\n  isExternal: false\n  name: ApplyWorkflowChanges(WorkflowChanges)\n  nameWithType: CompositeActivity.ApplyWorkflowChanges(WorkflowChanges)\n  fullName: CompositeActivity.ApplyWorkflowChanges(WorkflowChanges)\n- uid: System.Workflow.ComponentModel.CompositeActivity.CanModifyActivities\n  parent: System.Workflow.ComponentModel.CompositeActivity\n  isExternal: false\n  name: CanModifyActivities\n  nameWithType: CompositeActivity.CanModifyActivities\n  fullName: CompositeActivity.CanModifyActivities\n- uid: System.Workflow.ComponentModel.CompositeActivity.EnabledActivities\n  parent: System.Workflow.ComponentModel.CompositeActivity\n  isExternal: false\n  name: EnabledActivities\n  nameWithType: CompositeActivity.EnabledActivities\n  fullName: CompositeActivity.EnabledActivities\n- uid: System.Workflow.ComponentModel.CompositeActivity.GetDynamicActivities(System.Workflow.ComponentModel.Activity)\n  parent: System.Workflow.ComponentModel.CompositeActivity\n  isExternal: false\n  name: GetDynamicActivities(Activity)\n  nameWithType: CompositeActivity.GetDynamicActivities(Activity)\n  fullName: CompositeActivity.GetDynamicActivities(Activity)\n- uid: System.Workflow.ComponentModel.CompositeActivity.OnListChanged(System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs)\n  parent: System.Workflow.ComponentModel.CompositeActivity\n  isExternal: false\n  name: OnListChanged(ActivityCollectionChangeEventArgs)\n  nameWithType: CompositeActivity.OnListChanged(ActivityCollectionChangeEventArgs)\n  fullName: CompositeActivity.OnListChanged(ActivityCollectionChangeEventArgs)\n- uid: System.Workflow.ComponentModel.CompositeActivity.OnListChanging(System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs)\n  parent: System.Workflow.ComponentModel.CompositeActivity\n  isExternal: false\n  name: OnListChanging(ActivityCollectionChangeEventArgs)\n  nameWithType: CompositeActivity.OnListChanging(ActivityCollectionChangeEventArgs)\n  fullName: CompositeActivity.OnListChanging(ActivityCollectionChangeEventArgs)\n- uid: System.Workflow.ComponentModel.IActivityEventListener`1\n  name: IActivityEventListener<T>\n  nameWithType: IActivityEventListener<T>\n  fullName: System.Workflow.ComponentModel.IActivityEventListener<T>\n- uid: System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs}\n  parent: System.Workflow.ComponentModel\n  isExternal: false\n  name: IActivityEventListener<ActivityExecutionStatusChangedEventArgs>\n  nameWithType: IActivityEventListener<ActivityExecutionStatusChangedEventArgs>\n  fullName: System.Workflow.ComponentModel.IActivityEventListener<System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs>\n  spec.csharp:\n  - uid: System.Workflow.ComponentModel.IActivityEventListener`1\n    name: IActivityEventListener\n    nameWithType: IActivityEventListener\n    fullName: System.Workflow.ComponentModel.IActivityEventListener\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs\n    name: ActivityExecutionStatusChangedEventArgs\n    nameWithType: ActivityExecutionStatusChangedEventArgs\n    fullName: System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n"}