<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="ja-jp">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-fdd610b" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ff67bc9e1f9385b43c4505cec59eb6a313ffa4b1</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">System.Xml.XmlNode.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">net47</xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">39274e862bb353a1acb3d4edbad5a6b2b6f6edb2</xliffext:olskeletonhash>
      <xliffext:olxliffhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c47221da4a0e39c762d17ac653b79e6901e54abf</xliffext:olxliffhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Represents a single node in the XML document.</source>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT">
          <source>This class implements the W3C Document Object Model (DOM) Level 1 Core and the Core DOM Level 2.</source>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT">
          <source>The DOM is an in-memory (cache) tree representation of an XML document.</source>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`XmlNode`</ph> is the base class in the .NET implementation of the DOM.</source>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT">
          <source>It supports XPath selections and provides editing capabilities.</source>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Xml.XmlDocument&gt;</ph> class extends <ph id="ph2">`XmlNode`</ph> and represents an XML document.</source>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can use <ph id="ph1">`XmlDocument`</ph> to load and save XML data.</source>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT">
          <source>It also includes methods for node creation.</source>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT">
          <source>See <bpt id="p1">[</bpt>XML Document Object Model (DOM)<ept id="p1">](~/docs/standard/data/xml/xml-document-object-model-dom.md)</ept> for more information.</source>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT">
          <source>Exceptions raised as a result of using the <ph id="ph1">&lt;xref:System.Xml.XmlNode&gt;</ph> class, such as the <ph id="ph2">&lt;xref:System.Xml.XmlException&gt;</ph> class may contain sensitive information that should not be exposed in untrusted scenarios.</source>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT">
          <source>Exceptions should be properly handled so that this sensitive information is not exposed in untrusted scenarios.</source>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>Adds the specified node to the end of the list of child nodes, of this node.</source>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">`newChild`</ph> is already in the tree, it is removed from its original position and added to its target position.</source>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about inserting nodes, see <bpt id="p1">[</bpt>Inserting Nodes into an XML Document<ept id="p1">](~/docs/standard/data/xml/inserting-nodes-into-an-xml-document.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the node being inserted was created from another document, you can use <ph id="ph1">&lt;xref:System.Xml.XmlDocument.ImportNode%2A?displayProperty=fullName&gt;</ph> to import the node to the current document.</source>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT">
          <source>The imported node can then be inserted into the current document.</source>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The node to add.</source>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>All the contents of the node to be added are moved into the specified location.</source>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>The node added.</source>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>This node is of a type that does not allow child nodes of the type of the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">newChild</ph><ept id="p1">&lt;/code&gt;</ept> node.</source>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">newChild</ph><ept id="p1">&lt;/code&gt;</ept> is an ancestor of this node.</source>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">newChild</ph><ept id="p1">&lt;/code&gt;</ept> was created from a different document than the one that created this node.</source>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>This node is read-only.</source>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>Gets an <ph id="ph1">&lt;xref href="System.Xml.XmlAttributeCollection"&gt;&lt;/xref&gt;</ph> containing the attributes of this node.</source>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">`XmlAttributeCollection`</ph> containing the attributes of the node.</source>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>If the node is of type XmlNodeType.Element, the attributes of the node are returned.</source>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Otherwise, this property returns <ph id="ph1">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>Gets the base URI of the current node.</source>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT">
          <source>A networked XML document is comprised of chunks of data aggregated using various W3C standard inclusion mechanisms and therefore contains nodes that come from different places.</source>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`BaseURI`</ph> tells you where these nodes came from.</source>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT">
          <source>The value of this property varies depending on the node type.</source>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, Document nodes return the location of the <ph id="ph1">&lt;xref:System.Xml.XmlDocument&gt;</ph> object.</source>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT">
          <source>Nodes which are child nodes of external EntityReference nodes return the location of the entity itself.</source>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, consider the following XML document:</source>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT">
          <source>where the external entity <ph id="ph1">`a/b.xml`</ph> contains the XML text: <ph id="ph2">`&lt;test&gt;123&lt;/test&gt;`</ph>.</source>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the document is loaded from http://server/mydata.xml, <ph id="ph1">`BaseURI`</ph> returns the following:</source>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT">
          <source>NodeType</source>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT">
          <source>Name</source>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT">
          <source>BaseURI</source>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT">
          <source>Attribute</source>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT">
          <source>num</source>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT">
          <source>http://server/mydata.xml</source>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT">
          <source>Document</source>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT">
          <source>#document</source>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT">
          <source>http://server/mydata.xml</source>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT">
          <source>DocumentType</source>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT">
          <source>item</source>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT">
          <source>http://server/mydata.xml</source>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT">
          <source>Entity</source>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT">
          <source>xyz</source>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT">
          <source>http://server/mydata.xml</source>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT">
          <source>Element</source>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT">
          <source>item</source>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT">
          <source>http://server/mydata.xml</source>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT">
          <source>EntityReference</source>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT">
          <source>xyz</source>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT">
          <source>http://server/mydata.xml</source>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT">
          <source>Element</source>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT">
          <source>test</source>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT">
          <source>http://server/a/b.xml</source>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT">
          <source>Text</source>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT">
          <source>#text</source>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT">
          <source>http://server/a/b.xml</source>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`BaseURI`</ph> looks for entity reference boundaries, so if entities are expanded this information is not preserved and this property returns the location of the <ph id="ph2">`XmlDocument`</ph> object in all cases.</source>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT">
          <source>As a second example, given the following XML document:</source>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT">
          <source>where the DTD file contains the following:</source>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the XML document is loaded from http://localhost/mydata.xml, <ph id="ph1">`BaseURI`</ph> returns the following for each of the nodes:</source>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT">
          <source>NodeType</source>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT">
          <source>Name</source>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT">
          <source>BaseURI</source>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT">
          <source>Document</source>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT">
          <source>#document</source>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT">
          <source>http://localhost/mydata.xml</source>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT">
          <source>DocumentType</source>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT">
          <source>Mydata</source>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT">
          <source>http://localhost/mydata.xml</source>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Xml.XmlDocumentType.SystemId%2A?displayProperty=fullName&gt;</ph> or <ph id="ph2">&lt;xref:System.Xml.XmlDocumentType.PublicId%2A?displayProperty=fullName&gt;</ph> properties can be used to identify where the DTD file was loaded from.</source>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT">
          <source>Element</source>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT">
          <source>baa</source>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT">
          <source>http://localhost/mydata.xml</source>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT">
          <source>Entity</source>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT">
          <source>xyz</source>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT">
          <source>http://localhost/doctype.dtd</source>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT">
          <source>EntityReference</source>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT">
          <source>xyz</source>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT">
          <source>http://localhost/mydata.xml</source>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT">
          <source>Attribute</source>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT">
          <source>woof</source>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT">
          <source>http://localhost/mydata.xml</source>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT">
          <source>The base URI of a default attribute is the same as the base URI of the element to which they belong.</source>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property is a Microsoft extension to the Document Object Model (DOM).</source>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>The location from which the node was loaded or String.Empty if the node has no base URI.</source>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>Gets all the child nodes of the node.</source>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT">
          <source>For information about child nodes, see the <bpt id="p1">[</bpt>W3C DOM (Core) Level 1 specification<ept id="p1">](http://www.w3.org/TR/REC-DOM-Level-1/level-one-core.html)</ept></source>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>An object that contains all the child nodes of the node.</source>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>If there are no child nodes, this property returns an empty <ph id="ph1">&lt;xref href="System.Xml.XmlNodeList"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>Creates a duplicate of this node.</source>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT">
          <source>Cloning an <ph id="ph1">&lt;xref:System.Xml.XmlElement&gt;</ph> copies all attributes and their values, including those generated by the XML processor to represent defaulted attributes.</source>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method recursively clones the node and the subtree underneath it.</source>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1">`Clone`</ph> is equivalent to calling <ph id="ph2">`CloneNode(true)`</ph>.</source>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following table describes the specific behavior for each <ph id="ph1">&lt;xref:System.Xml.XmlNodeType&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT">
          <source>XmlNodeType</source>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT">
          <source>Clone</source>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT">
          <source>Attribute</source>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT">
          <source>Clones the attribute node, including child nodes.</source>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT">
          <source>CData</source>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT">
          <source>Clones the CData node, including its data content.</source>
        </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT">
          <source>Comment</source>
        </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT">
          <source>Clones the comment node, including its text content.</source>
        </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT">
          <source>Document</source>
        </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT">
          <source>Clones the document node, including any child nodes.</source>
        </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT">
          <source>DocumentFragment</source>
        </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT">
          <source>Clones the document fragment node, including any child nodes.</source>
        </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT">
          <source>DocumentType</source>
        </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT">
          <source>Clones the document type node.</source>
        </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT">
          <source>Element</source>
        </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT">
          <source>Clones the element node, its attributes, and any child nodes.</source>
        </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT">
          <source>Entity</source>
        </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT">
          <source>Entity nodes cannot be cloned.</source>
        </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT">
          <source>EntityReference</source>
        </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT">
          <source>Clones the entity reference node.</source>
        </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT">
          <source>The replacement text is not included.</source>
        </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT">
          <source>Notation</source>
        </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT">
          <source>Notation nodes cannot be cloned.</source>
        </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT">
          <source>ProcessingInstruction</source>
        </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT">
          <source>Clones the processing instruction node, including its target and data.</source>
        </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT">
          <source>SignificantWhitespace</source>
        </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT">
          <source>Clones the significant white space node, including its data value.</source>
        </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT">
          <source>Text</source>
        </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT">
          <source>Clones the text node, including its data value.</source>
        </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT">
          <source>Whitespace</source>
        </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT">
          <source>Clones the white space node, including its data value.</source>
        </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT">
          <source>XmlDeclaration</source>
        </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT">
          <source>Clones the XmlDeclaration node, including its data value.</source>
        </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT">
          <source>All other node types.</source>
        </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT">
          <source>These node types cannot be cloned.</source>
        </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is a Microsoft extension to the Document Object Model (DOM).</source>
        </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve">
          <source>The cloned node.</source>
        </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve">
          <source>Creates a duplicate of the node, when overridden in a derived class.</source>
        </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method serves as a copy constructor for nodes.</source>
        </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT">
          <source>The duplicate node has no parent (<ph id="ph1">&lt;xref:System.Xml.XmlNode.ParentNode%2A&gt;</ph> returns <ph id="ph2">`null`</ph>).</source>
        </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following table describes the specific behavior for each <ph id="ph1">&lt;xref:System.Xml.XmlNodeType&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT">
          <source>XmlNodeType</source>
        </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT">
          <source>CloneNode(true)</source>
        </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT">
          <source>CloneNode(false)</source>
        </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT">
          <source>Attribute</source>
        </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT">
          <source>Clones the attribute node, including child nodes.</source>
        </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT">
          <source>Clones the attribute node, including child nodes.</source>
        </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT">
          <source>CData</source>
        </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT">
          <source>Clones the CData node, including its data content.</source>
        </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT">
          <source>Clones the CData node, including its data content.</source>
        </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT">
          <source>Comment</source>
        </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT">
          <source>Clones the comment node, including its text content.</source>
        </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT">
          <source>Clones the comment node, including its text content.</source>
        </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT">
          <source>Document</source>
        </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT">
          <source>Clones the document node, including any child nodes.</source>
        </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT">
          <source>Clones the document node.</source>
        </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT">
          <source>DocumentFragment</source>
        </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT">
          <source>Clones the document fragment node, including any child nodes.</source>
        </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT">
          <source>Clones the document fragment node.</source>
        </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT">
          <source>DocumentType</source>
        </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT">
          <source>Clones the document type node.</source>
        </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT">
          <source>Clones the document type node.</source>
        </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT">
          <source>Element</source>
        </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT">
          <source>Clones the element node, its attributes, and any child nodes.</source>
        </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT">
          <source>Clones the element node and its attributes, including any default attributes.</source>
        </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT">
          <source>Entity</source>
        </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT">
          <source>Entity nodes cannot be cloned.</source>
        </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT">
          <source>Entity nodes cannot be cloned.</source>
        </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT">
          <source>EntityReference</source>
        </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT">
          <source>Clones the entity reference node.</source>
        </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT">
          <source>The replacement text is not included.</source>
        </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT">
          <source>Clones the entity reference node.</source>
        </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT">
          <source>The replacement text is not included.</source>
        </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT">
          <source>Notation</source>
        </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT">
          <source>Notation nodes cannot be cloned.</source>
        </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT">
          <source>Notation nodes cannot be cloned.</source>
        </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT">
          <source>ProcessingInstruction</source>
        </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT">
          <source>Clones the processing instruction node, including its target and data.</source>
        </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT">
          <source>Clones the processing instruction node, including its target and data.</source>
        </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT">
          <source>SignificantWhitespace</source>
        </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT">
          <source>Clones the significant white space node, including its data value.</source>
        </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" extradata="MT">
          <source>Clones the significant white space node, including its data value.</source>
        </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" extradata="MT">
          <source>Text</source>
        </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT">
          <source>Clones the text node, including its data value.</source>
        </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" extradata="MT">
          <source>Clones the text node, including its data value.</source>
        </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" extradata="MT">
          <source>Whitespace</source>
        </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" extradata="MT">
          <source>Clones the white space node, including its data value.</source>
        </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT">
          <source>Clones the white space node, including its data value.</source>
        </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT">
          <source>XmlDeclaration</source>
        </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT">
          <source>Clones the XmlDeclaration node, including its data value.</source>
        </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" extradata="MT">
          <source>Clones the XmlDeclaration node, including its data value.</source>
        </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" extradata="MT">
          <source>All other node types.</source>
        </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" extradata="MT">
          <source>These node types cannot be cloned.</source>
        </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" extradata="MT">
          <source>These node types cannot be cloned.</source>
        </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> to recursively clone the subtree under the specified node; <ph id="ph2">`false`</ph> to clone only the node itself.</source>
        </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve">
          <source>The cloned node.</source>
        </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve">
          <source>Calling this method on a node type that cannot be cloned.</source>
        </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve">
          <source>Creates an <ph id="ph1">&lt;xref href="System.Xml.XPath.XPathNavigator"&gt;&lt;/xref&gt;</ph> for navigating this object.</source>
        </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`XPathNavigator`</ph> provides read-only, random access to data.</source>
        </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" extradata="MT">
          <source>Because it is optimized for XSLT transformations, it provides performance benefits when used as an input mechanism to the <ph id="ph1">&lt;xref:System.Xml.Xsl.XslTransform.Transform%2A?displayProperty=fullName&gt;</ph> method.</source>
        </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is a Microsoft extension to the Document Object Model (DOM).</source>
        </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">`XPathNavigator`</ph> object used to navigate the node.</source>
        </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`XPathNavigator`</ph> is positioned on the node from which the method was called.</source>
        </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve">
          <source>It is not positioned on the root of the document.</source>
        </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve">
          <source>Gets the first child of the node.</source>
        </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" extradata="MT">
          <source>For information about child nodes, see the <bpt id="p1">[</bpt>W3C DOM (Core) Level 1 specification<ept id="p1">](http://www.w3.org/TR/REC-DOM-Level-1/level-one-core.html)</ept></source>
        </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve">
          <source>The first child of the node.</source>
        </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve">
          <source>If there is no such node, <ph id="ph1">`null`</ph> is returned.</source>
        </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve">
          <source>Get an enumerator that iterates through the child nodes in the current node.</source>
        </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" extradata="MT">
          <source>Provides support for the "for each" style iteration over the nodes in the <ph id="ph1">`XmlNode`</ph>.</source>
        </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is a Microsoft extension to the Document Object Model (DOM).</source>
        </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.Collections.IEnumerator"&gt;&lt;/xref&gt;</ph> object that can be used to iterate through the child nodes in the current node.</source>
        </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve">
          <source>Looks up the closest <bpt id="p1">**</bpt>xmlns<ept id="p1">**</ept> declaration for the given prefix that is in scope for the current node and returns the namespace URI in the declaration.</source>
        </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is a Microsoft extension to the Document Object Model (DOM).</source>
        </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve">
          <source>The prefix whose namespace URI you want to find.</source>
        </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve">
          <source>The namespace URI of the specified prefix.</source>
        </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve">
          <source>Looks up the closest <bpt id="p1">**</bpt>xmlns<ept id="p1">**</ept> declaration for the given namespace URI that is in scope for the current node and returns the prefix defined in that declaration.</source>
        </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is a Microsoft extension to the Document Object Model (DOM).</source>
        </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve">
          <source>The namespace URI whose prefix you want to find.</source>
        </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve">
          <source>The prefix for the specified namespace URI.</source>
        </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve">
          <source>Gets a value indicating whether this node has any child nodes.</source>
        </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" extradata="MT">
          <source>For information about child nodes, see the <bpt id="p1">[</bpt>W3C DOM (Core) Level 1 specification<ept id="p1">](http://www.w3.org/TR/REC-DOM-Level-1/level-one-core.html)</ept></source>
        </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the node has child nodes; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve">
          <source>Gets or sets the concatenated values of the node and all its child nodes.</source>
        </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" extradata="MT">
          <source>Setting this property replaces all the child nodes with the parsed contents of the given string.</source>
        </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" extradata="MT">
          <source>For leaf nodes, <ph id="ph1">`InnerText`</ph> returns the same content as the <ph id="ph2">&lt;xref:System.Xml.XmlNode.Value%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property is a Microsoft extension to the Document Object Model (DOM).</source>
        </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve">
          <source>The concatenated values of the node and all its child nodes.</source>
        </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve">
          <source>Gets or sets the markup representing only the child nodes of this node.</source>
        </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" extradata="MT">
          <source>Attempting to set this property from a node that cannot have child nodes, for example a Text node, throws an exception.</source>
        </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" extradata="MT">
          <source>Otherwise, setting <ph id="ph1">`InnerXml`</ph> replaces the child nodes, of the node, with the parsed contents of the given string.</source>
        </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" extradata="MT">
          <source>The parsing is done in the current namespace context.</source>
        </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property is a Microsoft extension to the Document Object Model (DOM).</source>
        </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" extradata="MT">
          <source><ph id="ph1"> `InnerXml`</ph> is not an efficient way to modify the DOM.</source>
        </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" extradata="MT">
          <source>There may be performance issues when replacing complex nodes.</source>
        </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" extradata="MT">
          <source>It is more efficient to construct nodes and use methods such as <ph id="ph1">`InsertBefore`</ph>, <ph id="ph2">`InsertAfter`</ph>, <ph id="ph3">`AppendChild`</ph>, and <ph id="ph4">`RemoveChild`</ph> to modify the Xml document.</source>
        </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve">
          <source>The markup of the child nodes of this node.</source>
        </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`InnerXml`</ph> does not return default attributes.</source>
        </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve">
          <source>Setting this property on a node that cannot have child nodes.</source>
        </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve">
          <source>The XML specified when setting this property is not well-formed.</source>
        </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve">
          <source>Inserts the specified node immediately after the specified reference node.</source>
        </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`refChild`</ph> is <ph id="ph2">`null`</ph>, insert <ph id="ph3">`newChild`</ph> at the beginning of the list of child nodes.</source>
        </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" extradata="MT">
          <source>All the contents of the <ph id="ph1">`newChild`</ph> are inserted, in the same order, after <ph id="ph2">`refChild`</ph>.</source>
        </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">`newChild`</ph> is already in the tree, it is removed from its original position and added to its target position.</source>
        </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about inserting nodes, see <bpt id="p1">[</bpt>Inserting Nodes into an XML Document<ept id="p1">](~/docs/standard/data/xml/inserting-nodes-into-an-xml-document.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the node being inserted was created from another document, you can use <ph id="ph1">&lt;xref:System.Xml.XmlDocument.ImportNode%2A?displayProperty=fullName&gt;</ph> to import the node to the current document.</source>
        </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" extradata="MT">
          <source>The imported node can then be inserted into the current document.</source>
        </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is a Microsoft extension to the Document Object Model (DOM).</source>
        </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`XmlNode`</ph> to insert.</source>
        </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`XmlNode`</ph> that is the reference node.</source>
        </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">newNode</ph><ept id="p1">&lt;/code&gt;</ept> is placed after the <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">refNode</ph><ept id="p2">&lt;/code&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve">
          <source>The node being inserted.</source>
        </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve">
          <source>This node is of a type that does not allow child nodes of the type of the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">newChild</ph><ept id="p1">&lt;/code&gt;</ept> node.</source>
        </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">newChild</ph><ept id="p1">&lt;/code&gt;</ept> is an ancestor of this node.</source>
        </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">newChild</ph><ept id="p1">&lt;/code&gt;</ept> was created from a different document than the one that created this node.</source>
        </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">refChild</ph><ept id="p1">&lt;/code&gt;</ept> is not a child of this node.</source>
        </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve">
          <source>This node is read-only.</source>
        </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve">
          <source>Inserts the specified node immediately before the specified reference node.</source>
        </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" extradata="MT">
          <source>If <ph id="ph1">`refChild`</ph> is <ph id="ph2">`null`</ph>, insert <ph id="ph3">`newChild`</ph> at the end of the list of child nodes.</source>
        </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" extradata="MT">
          <source>All the contents of the <ph id="ph1">`newChild`</ph> are inserted, in the same order, before <ph id="ph2">`refChild`</ph>.</source>
        </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">`newChild`</ph> is already in the tree, it is removed from its original position and added to its target position.</source>
        </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about inserting nodes, see <bpt id="p1">[</bpt>Inserting Nodes into an XML Document<ept id="p1">](~/docs/standard/data/xml/inserting-nodes-into-an-xml-document.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the node being inserted was created from another document, you can use <ph id="ph1">&lt;xref:System.Xml.XmlDocument.ImportNode%2A?displayProperty=fullName&gt;</ph> to import the node to the current document.</source>
        </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" extradata="MT">
          <source>The imported node can then be inserted into the current document.</source>
        </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`XmlNode`</ph> to insert.</source>
        </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`XmlNode`</ph> that is the reference node.</source>
        </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">newChild</ph><ept id="p1">&lt;/code&gt;</ept> is placed before this node.</source>
        </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve">
          <source>The node being inserted.</source>
        </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve">
          <source>The current node is of a type that does not allow child nodes of the type of the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">newChild</ph><ept id="p1">&lt;/code&gt;</ept> node.</source>
        </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">newChild</ph><ept id="p1">&lt;/code&gt;</ept> is an ancestor of this node.</source>
        </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">newChild</ph><ept id="p1">&lt;/code&gt;</ept> was created from a different document than the one that created this node.</source>
        </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">refChild</ph><ept id="p1">&lt;/code&gt;</ept> is not a child of this node.</source>
        </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve">
          <source>This node is read-only.</source>
        </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve">
          <source>Gets a value indicating whether the node is read-only.</source>
        </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" extradata="MT">
          <source>A read-only node is one whose properties, attributes, or child nodes cannot be changed.</source>
        </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" extradata="MT">
          <source>You can remove a read-only node from the tree and insert it somewhere else.</source>
        </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, Entity nodes are always read-only.</source>
        </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property is a Microsoft extension to the Document Object Model (DOM).</source>
        </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the node is read-only; otherwise <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve">
          <source>Gets the first child element with the specified <ph id="ph1">&lt;xref href="System.Xml.XmlNode.Name"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property is a Microsoft extension to the Document Object Model (DOM).</source>
        </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve">
          <source>The qualified name of the element to retrieve.</source>
        </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve">
          <source>The first <ph id="ph1">&lt;xref href="System.Xml.XmlElement"&gt;&lt;/xref&gt;</ph> that matches the specified name.</source>
        </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve">
          <source>It returns a null reference (<ph id="ph1">`Nothing`</ph> in Visual Basic) if there is no match.</source>
        </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve">
          <source>Gets the first child element with the specified <ph id="ph1">&lt;xref href="System.Xml.XmlNode.LocalName"&gt;&lt;/xref&gt;</ph> and <ph id="ph2">&lt;xref href="System.Xml.XmlNode.NamespaceURI"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property is a Microsoft extension to the Document Object Model (DOM).</source>
        </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve">
          <source>The local name of the element.</source>
        </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve">
          <source>The namespace URI of the element.</source>
        </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve">
          <source>The first <ph id="ph1">&lt;xref href="System.Xml.XmlElement"&gt;&lt;/xref&gt;</ph> with the matching <bpt id="p1">&lt;code&gt;</bpt><ph id="ph2">localname</ph><ept id="p1">&lt;/code&gt;</ept> and <bpt id="p2">&lt;code&gt;</bpt><ph id="ph3">ns</ph><ept id="p2">&lt;/code&gt;</ept>.</source>
        </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve">
          <source>.</source>
        </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve">
          <source>It returns a null reference (<ph id="ph1">`Nothing`</ph> in Visual Basic) if there is no match.</source>
        </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve">
          <source>Gets the last child of the node.</source>
        </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve">
          <source>The last child of the node.</source>
        </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve">
          <source>If there is no such node, <ph id="ph1">`null`</ph> is returned.</source>
        </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve">
          <source>Gets the local name of the node, when overridden in a derived class.</source>
        </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the node does not have a prefix, LocalName is the same as <ph id="ph1">&lt;xref:System.Xml.XmlNode.Name%2A&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve">
          <source>The name of the node with the prefix removed.</source>
        </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve">
          <source>For example, <ph id="ph1">`LocalName`</ph> is book for the element &lt;bk:book&gt;.</source>
        </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve">
          <source>The name returned is dependent on the <ph id="ph1">&lt;xref href="System.Xml.XmlNode.NodeType"&gt;&lt;/xref&gt;</ph> of the node:</source>
        </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve">
          <source>Type</source>
        </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve">
          <source>Name</source>
        </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve">
          <source>Attribute</source>
        </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve">
          <source>The local name of the attribute.</source>
        </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve">
          <source>CDATA</source>
        </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve">
          <source><ph id="ph1"> #</ph>cdata-section</source>
        </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve">
          <source>Comment</source>
        </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve">
          <source><ph id="ph1"> #</ph>comment</source>
        </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve">
          <source>Document</source>
        </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve">
          <source><ph id="ph1"> #</ph>document</source>
        </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve">
          <source>DocumentFragment</source>
        </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve">
          <source><ph id="ph1"> #</ph>document-fragment</source>
        </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve">
          <source>DocumentType</source>
        </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve">
          <source>The document type name.</source>
        </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve">
          <source>Element</source>
        </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve">
          <source>The local name of the element.</source>
        </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve">
          <source>Entity</source>
        </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve">
          <source>The name of the entity.</source>
        </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve">
          <source>EntityReference</source>
        </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve">
          <source>The name of the entity referenced.</source>
        </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve">
          <source>Notation</source>
        </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve">
          <source>The notation name.</source>
        </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve">
          <source>ProcessingInstruction</source>
        </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve">
          <source>The target of the processing instruction.</source>
        </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve">
          <source>Text</source>
        </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve">
          <source><ph id="ph1"> #</ph>text</source>
        </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve">
          <source>Whitespace</source>
        </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve">
          <source><ph id="ph1"> #</ph>whitespace</source>
        </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve">
          <source>SignificantWhitespace</source>
        </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve">
          <source><ph id="ph1"> #</ph>significant-whitespace</source>
        </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve">
          <source>XmlDeclaration</source>
        </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve">
          <source><ph id="ph1"> #</ph>xml-declaration</source>
        </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve">
          <source>Gets the qualified name of the node, when overridden in a derived class.</source>
        </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve">
          <source>The qualified name of the node.</source>
        </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve">
          <source>The name returned is dependent on the <ph id="ph1">&lt;xref href="System.Xml.XmlNode.NodeType"&gt;&lt;/xref&gt;</ph> of the node:</source>
        </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve">
          <source>Type</source>
        </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve">
          <source>Name</source>
        </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve">
          <source>Attribute</source>
        </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve">
          <source>The qualified name of the attribute.</source>
        </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve">
          <source>CDATA</source>
        </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve">
          <source><ph id="ph1"> #</ph>cdata-section</source>
        </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve">
          <source>Comment</source>
        </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve">
          <source><ph id="ph1"> #</ph>comment</source>
        </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve">
          <source>Document</source>
        </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve">
          <source><ph id="ph1"> #</ph>document</source>
        </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve">
          <source>DocumentFragment</source>
        </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve">
          <source><ph id="ph1"> #</ph>document-fragment</source>
        </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve">
          <source>DocumentType</source>
        </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve">
          <source>The document type name.</source>
        </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve">
          <source>Element</source>
        </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve">
          <source>The qualified name of the element.</source>
        </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve">
          <source>Entity</source>
        </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve">
          <source>The name of the entity.</source>
        </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve">
          <source>EntityReference</source>
        </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve">
          <source>The name of the entity referenced.</source>
        </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve">
          <source>Notation</source>
        </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve">
          <source>The notation name.</source>
        </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve">
          <source>ProcessingInstruction</source>
        </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve">
          <source>The target of the processing instruction.</source>
        </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve">
          <source>Text</source>
        </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve">
          <source><ph id="ph1"> #</ph>text</source>
        </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve">
          <source>Whitespace</source>
        </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve">
          <source><ph id="ph1"> #</ph>whitespace</source>
        </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve">
          <source>SignificantWhitespace</source>
        </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve">
          <source><ph id="ph1"> #</ph>significant-whitespace</source>
        </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve">
          <source>XmlDeclaration</source>
        </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve">
          <source><ph id="ph1"> #</ph>xml-declaration</source>
        </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve">
          <source>Gets the namespace URI of this node.</source>
        </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve" extradata="MT">
          <source>This is the namespace URI specified at creation time.</source>
        </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, <ph id="ph1">`NamespaceURI`</ph> is urn:samples for the element <ph id="ph2">\&lt;</ph>bk:book xmlns:bk= "urn:samples"&gt;</source>
        </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve" extradata="MT">
          <source>An attribute does not inherit its namespace from the element it is attached to.</source>
        </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve" extradata="MT">
          <source>If an attribute is not explicitly given a namespace, it simply has no namespace.</source>
        </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve">
          <source>The namespace URI of this node.</source>
        </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve">
          <source>If there is no namespace URI, this property returns String.Empty.</source>
        </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve">
          <source>Gets the node immediately following this node.</source>
        </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve">
          <source>The next <ph id="ph1">`XmlNode`</ph>.</source>
        </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve">
          <source>If there is no next node, <ph id="ph1">`null`</ph> is returned.</source>
        </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve">
          <source>Gets the type of the current node, when overridden in a derived class.</source>
        </trans-unit>
        <trans-unit id="479" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property never returns the <ph id="ph1">`XmlNodeType`</ph> EndElement, EndEntity or None.</source>
        </trans-unit>
        <trans-unit id="480" translate="yes" xml:space="preserve">
          <source>One of the <ph id="ph1">&lt;xref href="System.Xml.XmlNodeType"&gt;&lt;/xref&gt;</ph> values.</source>
        </trans-unit>
        <trans-unit id="481" translate="yes" xml:space="preserve">
          <source>Puts all XmlText nodes in the full depth of the sub-tree underneath this XmlNode into a "normal" form where only markup (that is, tags, comments, processing instructions, CDATA sections, and entity references) separates XmlText nodes, that is, there are no adjacent XmlText nodes.</source>
        </trans-unit>
        <trans-unit id="482" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method can be used to ensure that the DOM view of a document is the same as if it were saved and re-loaded, and is useful when operations (such as XPointer lookups) that depend on a particular document tree structure are to be used.</source>
        </trans-unit>
        <trans-unit id="483" translate="yes" xml:space="preserve">
          <source>Gets the markup containing this node and all its child nodes.</source>
        </trans-unit>
        <trans-unit id="484" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property is a Microsoft extension to the Document Object Model (DOM).</source>
        </trans-unit>
        <trans-unit id="485" translate="yes" xml:space="preserve">
          <source>The markup containing this node and all its child nodes.</source>
        </trans-unit>
        <trans-unit id="486" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`OuterXml`</ph> does not return default attributes.</source>
        </trans-unit>
        <trans-unit id="487" translate="yes" xml:space="preserve">
          <source>Gets the <ph id="ph1">&lt;xref href="System.Xml.XmlDocument"&gt;&lt;/xref&gt;</ph> to which this node belongs.</source>
        </trans-unit>
        <trans-unit id="488" translate="yes" xml:space="preserve" extradata="MT">
          <source>When adding nodes to the current node, use the <ph id="ph1">&lt;xref:System.Xml.XmlDocument&gt;</ph> returned by the <ph id="ph2">&lt;xref:System.Xml.XmlNode.OwnerDocument%2A&gt;</ph> property to create the node.</source>
        </trans-unit>
        <trans-unit id="489" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">&lt;xref href="System.Xml.XmlDocument"&gt;&lt;/xref&gt;</ph> to which this node belongs.</source>
        </trans-unit>
        <trans-unit id="490" translate="yes" xml:space="preserve">
          <source>If the node is an <ph id="ph1">&lt;xref href="System.Xml.XmlDocument"&gt;&lt;/xref&gt;</ph> (NodeType equals XmlNodeType.Document), this property returns <ph id="ph2">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="491" translate="yes" xml:space="preserve">
          <source>Gets the parent of this node (for nodes that can have parents).</source>
        </trans-unit>
        <trans-unit id="492" translate="yes" xml:space="preserve" extradata="MT">
          <source>For information about parent and child nodes, see the <bpt id="p1">[</bpt>W3C DOM (Core) Level 1 specification<ept id="p1">](http://www.w3.org/TR/REC-DOM-Level-1/level-one-core.html)</ept></source>
        </trans-unit>
        <trans-unit id="493" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`XmlNode`</ph> that is the parent of the current node.</source>
        </trans-unit>
        <trans-unit id="494" translate="yes" xml:space="preserve">
          <source>If a node has just been created and not yet added to the tree, or if it has been removed from the tree, the parent is <ph id="ph1">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="495" translate="yes" xml:space="preserve">
          <source>For all other nodes, the value returned depends on the <ph id="ph1">&lt;xref href="System.Xml.XmlNode.NodeType"&gt;&lt;/xref&gt;</ph> of the node.</source>
        </trans-unit>
        <trans-unit id="496" translate="yes" xml:space="preserve">
          <source>The following table describes the possible return values for the <ph id="ph1">`ParentNode`</ph> property.</source>
        </trans-unit>
        <trans-unit id="497" translate="yes" xml:space="preserve">
          <source>NodeType</source>
        </trans-unit>
        <trans-unit id="498" translate="yes" xml:space="preserve">
          <source>Return Value of ParentNode</source>
        </trans-unit>
        <trans-unit id="499" translate="yes" xml:space="preserve">
          <source>Attribute, Document, DocumentFragment, Entity, Notation</source>
        </trans-unit>
        <trans-unit id="500" translate="yes" xml:space="preserve">
          <source>Returns <ph id="ph1">`null`</ph>; these nodes do not have parents.</source>
        </trans-unit>
        <trans-unit id="501" translate="yes" xml:space="preserve">
          <source>CDATA</source>
        </trans-unit>
        <trans-unit id="502" translate="yes" xml:space="preserve">
          <source>Returns the element or entity reference containing the CDATA section.</source>
        </trans-unit>
        <trans-unit id="503" translate="yes" xml:space="preserve">
          <source>Comment</source>
        </trans-unit>
        <trans-unit id="504" translate="yes" xml:space="preserve">
          <source>Returns the element, entity reference, document type, or document containing the comment.</source>
        </trans-unit>
        <trans-unit id="505" translate="yes" xml:space="preserve">
          <source>DocumentType</source>
        </trans-unit>
        <trans-unit id="506" translate="yes" xml:space="preserve">
          <source>Returns the document node.</source>
        </trans-unit>
        <trans-unit id="507" translate="yes" xml:space="preserve">
          <source>Element</source>
        </trans-unit>
        <trans-unit id="508" translate="yes" xml:space="preserve">
          <source>Returns the parent node of the element.</source>
        </trans-unit>
        <trans-unit id="509" translate="yes" xml:space="preserve">
          <source>If the element is the root node in the tree, the parent is the document node.</source>
        </trans-unit>
        <trans-unit id="510" translate="yes" xml:space="preserve">
          <source>EntityReference</source>
        </trans-unit>
        <trans-unit id="511" translate="yes" xml:space="preserve">
          <source>Returns the element, attribute, or entity reference containing the entity reference.</source>
        </trans-unit>
        <trans-unit id="512" translate="yes" xml:space="preserve">
          <source>ProcessingInstruction</source>
        </trans-unit>
        <trans-unit id="513" translate="yes" xml:space="preserve">
          <source>Returns the document, element, document type, or entity reference containing the processing instruction.</source>
        </trans-unit>
        <trans-unit id="514" translate="yes" xml:space="preserve">
          <source>Text</source>
        </trans-unit>
        <trans-unit id="515" translate="yes" xml:space="preserve">
          <source>Returns the parent element, attribute, or entity reference containing the text node.</source>
        </trans-unit>
        <trans-unit id="516" translate="yes" xml:space="preserve">
          <source>Gets or sets the namespace prefix of this node.</source>
        </trans-unit>
        <trans-unit id="517" translate="yes" xml:space="preserve" extradata="MT">
          <source>Setting this property, when permitted, changes the <ph id="ph1">&lt;xref:System.Xml.XmlNode.Name%2A&gt;</ph> property, which holds the qualified name, on Element and Attribute nodes.</source>
        </trans-unit>
        <trans-unit id="518" translate="yes" xml:space="preserve" extradata="MT">
          <source>Setting this property on node types that cannot have a prefix (such as Text, Comment, EntityReference, CDATA, ProcessingInstruction, Document, and DocumentFragment) has no effect.</source>
        </trans-unit>
        <trans-unit id="519" translate="yes" xml:space="preserve" extradata="MT">
          <source>Changing the prefix of an attribute that is known to have a default value, does not make a new attribute with the default value and the original prefix appear, since the namespace URI and local name do not change.</source>
        </trans-unit>
        <trans-unit id="520" translate="yes" xml:space="preserve">
          <source>The namespace prefix of this node.</source>
        </trans-unit>
        <trans-unit id="521" translate="yes" xml:space="preserve">
          <source>For example, <ph id="ph1">`Prefix`</ph> is bk for the element &lt;bk:book&gt;.</source>
        </trans-unit>
        <trans-unit id="522" translate="yes" xml:space="preserve">
          <source>If there is no prefix, this property returns String.Empty.</source>
        </trans-unit>
        <trans-unit id="523" translate="yes" xml:space="preserve">
          <source>This node is read-only.</source>
        </trans-unit>
        <trans-unit id="524" translate="yes" xml:space="preserve">
          <source>The specified prefix contains an invalid character.</source>
        </trans-unit>
        <trans-unit id="525" translate="yes" xml:space="preserve">
          <source>The specified prefix is malformed.</source>
        </trans-unit>
        <trans-unit id="526" translate="yes" xml:space="preserve">
          <source>The specified prefix is "xml" and the namespaceURI of this node is different from "http://www.w3.org/XML/1998/namespace".</source>
        </trans-unit>
        <trans-unit id="527" translate="yes" xml:space="preserve">
          <source>This node is an attribute and the specified prefix is "xmlns" and the namespaceURI of this node is different from "http://www.w3.org/2000/xmlns/ ".</source>
        </trans-unit>
        <trans-unit id="528" translate="yes" xml:space="preserve">
          <source>This node is an attribute and the qualifiedName of this node is "xmlns".</source>
        </trans-unit>
        <trans-unit id="529" translate="yes" xml:space="preserve">
          <source>Adds the specified node to the beginning of the list of child nodes for this node.</source>
        </trans-unit>
        <trans-unit id="530" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">`newChild`</ph> is already in the tree, it is removed from its original position and added to its target position.</source>
        </trans-unit>
        <trans-unit id="531" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information about inserting nodes, see <bpt id="p1">[</bpt>Inserting Nodes into an XML Document<ept id="p1">](~/docs/standard/data/xml/inserting-nodes-into-an-xml-document.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="532" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the node being inserted was created from another document, you can use <ph id="ph1">&lt;xref:System.Xml.XmlDocument.ImportNode%2A?displayProperty=fullName&gt;</ph> to import the node to the current document.</source>
        </trans-unit>
        <trans-unit id="533" translate="yes" xml:space="preserve" extradata="MT">
          <source>The imported node can then be inserted into the current document.</source>
        </trans-unit>
        <trans-unit id="534" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is a Microsoft extension to the Document Object Model (DOM).</source>
        </trans-unit>
        <trans-unit id="535" translate="yes" xml:space="preserve">
          <source>The node to add.</source>
        </trans-unit>
        <trans-unit id="536" translate="yes" xml:space="preserve">
          <source>All the contents of the node to be added are moved into the specified location.</source>
        </trans-unit>
        <trans-unit id="537" translate="yes" xml:space="preserve">
          <source>The node added.</source>
        </trans-unit>
        <trans-unit id="538" translate="yes" xml:space="preserve">
          <source>This node is of a type that does not allow child nodes of the type of the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">newChild</ph><ept id="p1">&lt;/code&gt;</ept> node.</source>
        </trans-unit>
        <trans-unit id="539" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">newChild</ph><ept id="p1">&lt;/code&gt;</ept> is an ancestor of this node.</source>
        </trans-unit>
        <trans-unit id="540" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">newChild</ph><ept id="p1">&lt;/code&gt;</ept> was created from a different document than the one that created this node.</source>
        </trans-unit>
        <trans-unit id="541" translate="yes" xml:space="preserve">
          <source>This node is read-only.</source>
        </trans-unit>
        <trans-unit id="542" translate="yes" xml:space="preserve">
          <source>Gets the node immediately preceding this node.</source>
        </trans-unit>
        <trans-unit id="543" translate="yes" xml:space="preserve">
          <source>The preceding <ph id="ph1">`XmlNode`</ph>.</source>
        </trans-unit>
        <trans-unit id="544" translate="yes" xml:space="preserve">
          <source>If there is no preceding node, <ph id="ph1">`null`</ph> is returned.</source>
        </trans-unit>
        <trans-unit id="545" translate="yes" xml:space="preserve">
          <source>Gets the text node that immediately precedes this node.</source>
        </trans-unit>
        <trans-unit id="546" translate="yes" xml:space="preserve" extradata="MT">
          <source>This property has faster performance than the <ph id="ph1">&lt;xref:System.Xml.XmlNode.PreviousSibling%2A&gt;</ph> property but you can use it only to get a node of type <ph id="ph2">&lt;xref:System.Xml.XmlNodeType.Text&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="547" translate="yes" xml:space="preserve" extradata="MT">
          <source>To get any other type of node that that precedes this node, use the <ph id="ph1">&lt;xref:System.Xml.XmlNode.PreviousSibling%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="548" translate="yes" xml:space="preserve">
          <source>Returns <ph id="ph1">&lt;xref href="System.Xml.XmlNode"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="549" translate="yes" xml:space="preserve">
          <source>Removes all the child nodes and/or attributes of the current node.</source>
        </trans-unit>
        <trans-unit id="550" translate="yes" xml:space="preserve" extradata="MT">
          <source>If a removed attribute is known to have a default value, an attribute immediately appears containing the default value and, if applicable, the corresponding namespace URI, local name, and prefix.</source>
        </trans-unit>
        <trans-unit id="551" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is a Microsoft extension to the Document Object Model (DOM).</source>
        </trans-unit>
        <trans-unit id="552" translate="yes" xml:space="preserve">
          <source>Removes specified child node.</source>
        </trans-unit>
        <trans-unit id="553" translate="yes" xml:space="preserve">
          <source>The node being removed.</source>
        </trans-unit>
        <trans-unit id="554" translate="yes" xml:space="preserve">
          <source>The node removed.</source>
        </trans-unit>
        <trans-unit id="555" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">oldChild</ph><ept id="p1">&lt;/code&gt;</ept> is not a child of this node.</source>
        </trans-unit>
        <trans-unit id="556" translate="yes" xml:space="preserve">
          <source>Or this node is read-only.</source>
        </trans-unit>
        <trans-unit id="557" translate="yes" xml:space="preserve">
          <source>Replaces the child node <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">oldChild</ph><ept id="p1">&lt;/code&gt;</ept> with <bpt id="p2">&lt;code&gt;</bpt><ph id="ph2">newChild</ph><ept id="p2">&lt;/code&gt;</ept> node.</source>
        </trans-unit>
        <trans-unit id="558" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">`newChild`</ph> is already in the tree, it is first removed.</source>
        </trans-unit>
        <trans-unit id="559" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the <ph id="ph1">`newChild`</ph> was created from another document, you can use <ph id="ph2">&lt;xref:System.Xml.XmlDocument.ImportNode%2A?displayProperty=fullName&gt;</ph> to import the node to the current document.</source>
        </trans-unit>
        <trans-unit id="560" translate="yes" xml:space="preserve" extradata="MT">
          <source>The imported node can then be passed to the <ph id="ph1">`ReplaceChild`</ph> method.</source>
        </trans-unit>
        <trans-unit id="561" translate="yes" xml:space="preserve">
          <source>The new node to put in the child list.</source>
        </trans-unit>
        <trans-unit id="562" translate="yes" xml:space="preserve">
          <source>The node being replaced in the list.</source>
        </trans-unit>
        <trans-unit id="563" translate="yes" xml:space="preserve">
          <source>The node replaced.</source>
        </trans-unit>
        <trans-unit id="564" translate="yes" xml:space="preserve">
          <source>This node is of a type that does not allow child nodes of the type of the <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">newChild</ph><ept id="p1">&lt;/code&gt;</ept> node.</source>
        </trans-unit>
        <trans-unit id="565" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">newChild</ph><ept id="p1">&lt;/code&gt;</ept> is an ancestor of this node.</source>
        </trans-unit>
        <trans-unit id="566" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">newChild</ph><ept id="p1">&lt;/code&gt;</ept> was created from a different document than the one that created this node.</source>
        </trans-unit>
        <trans-unit id="567" translate="yes" xml:space="preserve">
          <source>This node is read-only.</source>
        </trans-unit>
        <trans-unit id="568" translate="yes" xml:space="preserve">
          <source>The <bpt id="p1">&lt;code&gt;</bpt><ph id="ph1">oldChild</ph><ept id="p1">&lt;/code&gt;</ept> is not a child of this node.</source>
        </trans-unit>
        <trans-unit id="569" translate="yes" xml:space="preserve">
          <source>Gets the post schema validation infoset that has been assigned to this node as a result of schema validation.</source>
        </trans-unit>
        <trans-unit id="570" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Xml.XmlNode.SchemaInfo%2A&gt;</ph> property is set when this node is validatied.</source>
        </trans-unit>
        <trans-unit id="571" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.Xml.Schema.IXmlSchemaInfo"&gt;&lt;/xref&gt;</ph> object containing the post schema validation infoset of this node.</source>
        </trans-unit>
        <trans-unit id="572" translate="yes" xml:space="preserve">
          <source>Selects a list of nodes matching the XPath expression.</source>
        </trans-unit>
        <trans-unit id="573" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the XPath expression requires namespace resolution, you must use the <ph id="ph1">`SelectNodes`</ph> overload which takes an <ph id="ph2">&lt;xref:System.Xml.XmlNamespaceManager&gt;</ph> as its argument.</source>
        </trans-unit>
        <trans-unit id="574" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`XmlNamespaceManager`</ph> is used to resolve namespaces.</source>
        </trans-unit>
        <trans-unit id="575" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the XPath expression does not include a prefix, it is assumed that the namespace URI is the empty namespace.</source>
        </trans-unit>
        <trans-unit id="576" translate="yes" xml:space="preserve" extradata="MT">
          <source>If your XML includes a default namespace, you must still use the <ph id="ph1">`XmlNamespaceManager`</ph> and add a prefix and namespace URI to it; otherwise, you will not get any nodes selected.</source>
        </trans-unit>
        <trans-unit id="577" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Select Nodes Using XPath Navigation<ept id="p1">](~/docs/standard/data/xml/select-nodes-using-xpath-navigation.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="578" translate="yes" xml:space="preserve" extradata="MT">
          <source>A common issue when formulating XPath expressions is how to include a single quote (') or double quote (") in the expression.</source>
        </trans-unit>
        <trans-unit id="579" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you have to search for a value that includes a single quote, you must enclose the string in double quotes.</source>
        </trans-unit>
        <trans-unit id="580" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you need to search for a value that includes a double quote, you must enclose the string in single quotes.</source>
        </trans-unit>
        <trans-unit id="581" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, suppose you have the following XML:</source>
        </trans-unit>
        <trans-unit id="582" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following Visual Basic code selects an element that contains single quotes:</source>
        </trans-unit>
        <trans-unit id="583" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is a Microsoft extension to the Document Object Model (DOM).</source>
        </trans-unit>
        <trans-unit id="584" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Xml.XmlNodeList&gt;</ph> object returned by this method will be valid while the underlying document remains unchanged.</source>
        </trans-unit>
        <trans-unit id="585" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the underlying document changes, unexpected results may be returned (no exception will be thrown).</source>
        </trans-unit>
        <trans-unit id="586" translate="yes" xml:space="preserve">
          <source>The XPath expression.</source>
        </trans-unit>
        <trans-unit id="587" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.Xml.XmlNodeList"&gt;&lt;/xref&gt;</ph> containing a collection of nodes matching the XPath query.</source>
        </trans-unit>
        <trans-unit id="588" translate="yes" xml:space="preserve">
          <source>The XPath expression contains a prefix.</source>
        </trans-unit>
        <trans-unit id="589" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>XPath Examples<ept id="p1">](http://msdn.microsoft.com/en-us/1431789e-c545-4765-8c09-3057e07d3041)</ept>.</source>
        </trans-unit>
        <trans-unit id="590" translate="yes" xml:space="preserve">
          <source>Selects a list of nodes matching the XPath expression.</source>
        </trans-unit>
        <trans-unit id="591" translate="yes" xml:space="preserve">
          <source>Any prefixes found in the XPath expression are resolved using the supplied <ph id="ph1">&lt;xref href="System.Xml.XmlNamespaceManager"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="592" translate="yes" xml:space="preserve" extradata="MT">
          <source>XPath expressions can include namespaces.</source>
        </trans-unit>
        <trans-unit id="593" translate="yes" xml:space="preserve" extradata="MT">
          <source>Namespace resolution is supported using the <ph id="ph1">`XmlNamespaceManager`</ph>.</source>
        </trans-unit>
        <trans-unit id="594" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the XPath expression includes a prefix, the prefix and namespace URI pair must be added to the <ph id="ph1">`XmlNamespaceManager`</ph>.</source>
        </trans-unit>
        <trans-unit id="595" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the XPath expression does not include a prefix, it is assumed that the namespace URI is the empty namespace.</source>
        </trans-unit>
        <trans-unit id="596" translate="yes" xml:space="preserve" extradata="MT">
          <source>If your XML includes a default namespace, you must still add a prefix and namespace URI to the <ph id="ph1">`XmlNamespaceManager`</ph>; otherwise, you will not get any nodes selected.</source>
        </trans-unit>
        <trans-unit id="597" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Select Nodes Using XPath Navigation<ept id="p1">](~/docs/standard/data/xml/select-nodes-using-xpath-navigation.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="598" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, if you had the following XML:</source>
        </trans-unit>
        <trans-unit id="599" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following C# code selects all book nodes:</source>
        </trans-unit>
        <trans-unit id="600" translate="yes" xml:space="preserve" extradata="MT">
          <source>A common issue when formulating XPath expressions is how to include a single quote (') or double quote (") in the expression.</source>
        </trans-unit>
        <trans-unit id="601" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you have to search for a value that includes a single quote, you must enclose the string in double quotes.</source>
        </trans-unit>
        <trans-unit id="602" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you need to search for a value that includes a double quote, you must enclose the string in single quotes.</source>
        </trans-unit>
        <trans-unit id="603" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, suppose you have the following XML:</source>
        </trans-unit>
        <trans-unit id="604" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following Visual Basic code selects an element that contains single quotes:</source>
        </trans-unit>
        <trans-unit id="605" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is a Microsoft extension to the Document Object Model (DOM).</source>
        </trans-unit>
        <trans-unit id="606" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">&lt;xref:System.Xml.XmlNodeList&gt;</ph> object returned by this method will be valid while the underlying document remains unchanged.</source>
        </trans-unit>
        <trans-unit id="607" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the underlying document changes, unexpected results may be returned (no exception will be thrown).</source>
        </trans-unit>
        <trans-unit id="608" translate="yes" xml:space="preserve">
          <source>The XPath expression.</source>
        </trans-unit>
        <trans-unit id="609" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>XPath Examples<ept id="p1">](http://msdn.microsoft.com/en-us/1431789e-c545-4765-8c09-3057e07d3041)</ept>.</source>
        </trans-unit>
        <trans-unit id="610" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.Xml.XmlNamespaceManager"&gt;&lt;/xref&gt;</ph> to use for resolving namespaces for prefixes in the XPath expression.</source>
        </trans-unit>
        <trans-unit id="611" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.Xml.XmlNodeList"&gt;&lt;/xref&gt;</ph> containing a collection of nodes matching the XPath query.</source>
        </trans-unit>
        <trans-unit id="612" translate="yes" xml:space="preserve">
          <source>The XPath expression contains a prefix which is not defined in the <ph id="ph1">`XmlNamespaceManager`</ph>.</source>
        </trans-unit>
        <trans-unit id="613" translate="yes" xml:space="preserve">
          <source>Selects the first <ph id="ph1">`XmlNode`</ph> that matches the XPath expression.</source>
        </trans-unit>
        <trans-unit id="614" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the XPath expression requires namespace resolution, you must use the <ph id="ph1">`SelectSingleNode`</ph> overload which takes an <ph id="ph2">&lt;xref:System.Xml.XmlNamespaceManager&gt;</ph> as its argument.</source>
        </trans-unit>
        <trans-unit id="615" translate="yes" xml:space="preserve" extradata="MT">
          <source>The <ph id="ph1">`XmlNamespaceManager`</ph> is used to resolve namespaces.</source>
        </trans-unit>
        <trans-unit id="616" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the XPath expression does not include a prefix, it is assumed that the namespace URI is the empty namespace.</source>
        </trans-unit>
        <trans-unit id="617" translate="yes" xml:space="preserve" extradata="MT">
          <source>If your XML includes a default namespace, you must still use the <ph id="ph1">`XmlNamespaceManager`</ph> and add a prefix and namespace URI to it; otherwise, you will not get a selected node.</source>
        </trans-unit>
        <trans-unit id="618" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Select Nodes Using XPath Navigation<ept id="p1">](~/docs/standard/data/xml/select-nodes-using-xpath-navigation.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="619" translate="yes" xml:space="preserve" extradata="MT">
          <source>A common issue when formulating XPath expressions is how to include a single quote (') or double quote (") in the expression.</source>
        </trans-unit>
        <trans-unit id="620" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you have to search for a value that includes a single quote, you must enclose the string in double quotes.</source>
        </trans-unit>
        <trans-unit id="621" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you need to search for a value that includes a double quote, you must enclose the string in single quotes.</source>
        </trans-unit>
        <trans-unit id="622" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, suppose you have the following XML:</source>
        </trans-unit>
        <trans-unit id="623" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following Visual Basic code selects an element that contains single quotes:</source>
        </trans-unit>
        <trans-unit id="624" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is a Microsoft extension to the Document Object Model (DOM).</source>
        </trans-unit>
        <trans-unit id="625" translate="yes" xml:space="preserve">
          <source>The XPath expression.</source>
        </trans-unit>
        <trans-unit id="626" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>XPath Examples<ept id="p1">](http://msdn.microsoft.com/en-us/1431789e-c545-4765-8c09-3057e07d3041)</ept>.</source>
        </trans-unit>
        <trans-unit id="627" translate="yes" xml:space="preserve">
          <source>The first <ph id="ph1">`XmlNode`</ph> that matches the XPath query or <ph id="ph2">`null`</ph> if no matching node is found.</source>
        </trans-unit>
        <trans-unit id="628" translate="yes" xml:space="preserve">
          <source>The XPath expression contains a prefix.</source>
        </trans-unit>
        <trans-unit id="629" translate="yes" xml:space="preserve">
          <source>Selects the first <ph id="ph1">`XmlNode`</ph> that matches the XPath expression.</source>
        </trans-unit>
        <trans-unit id="630" translate="yes" xml:space="preserve">
          <source>Any prefixes found in the XPath expression are resolved using the supplied <ph id="ph1">&lt;xref href="System.Xml.XmlNamespaceManager"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="631" translate="yes" xml:space="preserve" extradata="MT">
          <source>XPath expressions can include namespaces.</source>
        </trans-unit>
        <trans-unit id="632" translate="yes" xml:space="preserve" extradata="MT">
          <source>Namespace resolution is supported using the <ph id="ph1">`XmlNamespaceManager`</ph>.</source>
        </trans-unit>
        <trans-unit id="633" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the XPath expression includes a prefix, the prefix and namespace URI pair must be added to the <ph id="ph1">`XmlNamespaceManager`</ph>.</source>
        </trans-unit>
        <trans-unit id="634" translate="yes" xml:space="preserve" extradata="MT">
          <source>If the XPath expression does not include a prefix, it is assumed that the namespace URI is the empty namespace.</source>
        </trans-unit>
        <trans-unit id="635" translate="yes" xml:space="preserve" extradata="MT">
          <source>If your XML includes a default namespace, you must still add a prefix and namespace URI to the <ph id="ph1">`XmlNamespaceManager`</ph>; otherwise, you will not get a node selected.</source>
        </trans-unit>
        <trans-unit id="636" translate="yes" xml:space="preserve" extradata="MT">
          <source>For more information, see <bpt id="p1">[</bpt>Select Nodes Using XPath Navigation<ept id="p1">](~/docs/standard/data/xml/select-nodes-using-xpath-navigation.md)</ept>.</source>
        </trans-unit>
        <trans-unit id="637" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, if you had the following XML:</source>
        </trans-unit>
        <trans-unit id="638" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following C# code selects the first book node:</source>
        </trans-unit>
        <trans-unit id="639" translate="yes" xml:space="preserve" extradata="MT">
          <source>A common issue when formulating XPath expressions is how to include a single quote (') or double quote (") in the expression.</source>
        </trans-unit>
        <trans-unit id="640" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you have to search for a value that includes a single quote, you must enclose the string in double quotes.</source>
        </trans-unit>
        <trans-unit id="641" translate="yes" xml:space="preserve" extradata="MT">
          <source>If you need to search for a value that includes a double quote, you must enclose the string in single quotes.</source>
        </trans-unit>
        <trans-unit id="642" translate="yes" xml:space="preserve" extradata="MT">
          <source>For example, suppose you have the following XML:</source>
        </trans-unit>
        <trans-unit id="643" translate="yes" xml:space="preserve" extradata="MT">
          <source>The following Visual Basic code selects an element that contains single quotes:</source>
        </trans-unit>
        <trans-unit id="644" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is a Microsoft extension to the Document Object Model (DOM).</source>
        </trans-unit>
        <trans-unit id="645" translate="yes" xml:space="preserve">
          <source>The XPath expression.</source>
        </trans-unit>
        <trans-unit id="646" translate="yes" xml:space="preserve">
          <source>See <bpt id="p1">[</bpt>XPath Examples<ept id="p1">](http://msdn.microsoft.com/en-us/1431789e-c545-4765-8c09-3057e07d3041)</ept>.</source>
        </trans-unit>
        <trans-unit id="647" translate="yes" xml:space="preserve">
          <source>An <ph id="ph1">&lt;xref href="System.Xml.XmlNamespaceManager"&gt;&lt;/xref&gt;</ph> to use for resolving namespaces for prefixes in the XPath expression.</source>
        </trans-unit>
        <trans-unit id="648" translate="yes" xml:space="preserve">
          <source>The first <ph id="ph1">`XmlNode`</ph> that matches the XPath query or <ph id="ph2">`null`</ph> if no matching node is found.</source>
        </trans-unit>
        <trans-unit id="649" translate="yes" xml:space="preserve">
          <source>The XPath expression contains a prefix which is not defined in the <ph id="ph1">`XmlNamespaceManager`</ph>.</source>
        </trans-unit>
        <trans-unit id="650" translate="yes" xml:space="preserve">
          <source>Tests if the DOM implementation implements a specific feature.</source>
        </trans-unit>
        <trans-unit id="651" translate="yes" xml:space="preserve">
          <source>The package name of the feature to test.</source>
        </trans-unit>
        <trans-unit id="652" translate="yes" xml:space="preserve">
          <source>This name is not case-sensitive.</source>
        </trans-unit>
        <trans-unit id="653" translate="yes" xml:space="preserve">
          <source>The version number of the package name to test.</source>
        </trans-unit>
        <trans-unit id="654" translate="yes" xml:space="preserve">
          <source>If the version is not specified (null), supporting any version of the feature causes the method to return true.</source>
        </trans-unit>
        <trans-unit id="655" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`true`</ph> if the feature is implemented in the specified version; otherwise, <ph id="ph2">`false`</ph>.</source>
        </trans-unit>
        <trans-unit id="656" translate="yes" xml:space="preserve">
          <source>The following table describes the combinations that return <ph id="ph1">`true`</ph>.</source>
        </trans-unit>
        <trans-unit id="657" translate="yes" xml:space="preserve">
          <source>Feature</source>
        </trans-unit>
        <trans-unit id="658" translate="yes" xml:space="preserve">
          <source>Version</source>
        </trans-unit>
        <trans-unit id="659" translate="yes" xml:space="preserve">
          <source>XML</source>
        </trans-unit>
        <trans-unit id="660" translate="yes" xml:space="preserve">
          <source>1.0</source>
        </trans-unit>
        <trans-unit id="661" translate="yes" xml:space="preserve">
          <source>XML</source>
        </trans-unit>
        <trans-unit id="662" translate="yes" xml:space="preserve">
          <source>2.0</source>
        </trans-unit>
        <trans-unit id="663" translate="yes" xml:space="preserve">
          <source>Gets or sets the value of the node.</source>
        </trans-unit>
        <trans-unit id="664" translate="yes" xml:space="preserve">
          <source>The value returned depends on the <ph id="ph1">&lt;xref href="System.Xml.XmlNode.NodeType"&gt;&lt;/xref&gt;</ph> of the node:</source>
        </trans-unit>
        <trans-unit id="665" translate="yes" xml:space="preserve">
          <source>Type</source>
        </trans-unit>
        <trans-unit id="666" translate="yes" xml:space="preserve">
          <source>Value</source>
        </trans-unit>
        <trans-unit id="667" translate="yes" xml:space="preserve">
          <source>Attribute</source>
        </trans-unit>
        <trans-unit id="668" translate="yes" xml:space="preserve">
          <source>The value of the attribute.</source>
        </trans-unit>
        <trans-unit id="669" translate="yes" xml:space="preserve">
          <source>CDATASection</source>
        </trans-unit>
        <trans-unit id="670" translate="yes" xml:space="preserve">
          <source>The content of the CDATA Section.</source>
        </trans-unit>
        <trans-unit id="671" translate="yes" xml:space="preserve">
          <source>Comment</source>
        </trans-unit>
        <trans-unit id="672" translate="yes" xml:space="preserve">
          <source>The content of the comment.</source>
        </trans-unit>
        <trans-unit id="673" translate="yes" xml:space="preserve">
          <source>Document</source>
        </trans-unit>
        <trans-unit id="674" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="675" translate="yes" xml:space="preserve">
          <source>DocumentFragment</source>
        </trans-unit>
        <trans-unit id="676" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="677" translate="yes" xml:space="preserve">
          <source>DocumentType</source>
        </trans-unit>
        <trans-unit id="678" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="679" translate="yes" xml:space="preserve">
          <source>Element</source>
        </trans-unit>
        <trans-unit id="680" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="681" translate="yes" xml:space="preserve">
          <source>You can use the <ph id="ph1">&lt;xref href="System.Xml.XmlElement.InnerText"&gt;&lt;/xref&gt;</ph> or <ph id="ph2">&lt;xref href="System.Xml.XmlElement.InnerXml"&gt;&lt;/xref&gt;</ph> properties to access the value of the element node.</source>
        </trans-unit>
        <trans-unit id="682" translate="yes" xml:space="preserve">
          <source>Entity</source>
        </trans-unit>
        <trans-unit id="683" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="684" translate="yes" xml:space="preserve">
          <source>EntityReference</source>
        </trans-unit>
        <trans-unit id="685" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="686" translate="yes" xml:space="preserve">
          <source>Notation</source>
        </trans-unit>
        <trans-unit id="687" translate="yes" xml:space="preserve">
          <source><ph id="ph1">`null`</ph>.</source>
        </trans-unit>
        <trans-unit id="688" translate="yes" xml:space="preserve">
          <source>ProcessingInstruction</source>
        </trans-unit>
        <trans-unit id="689" translate="yes" xml:space="preserve">
          <source>The entire content excluding the target.</source>
        </trans-unit>
        <trans-unit id="690" translate="yes" xml:space="preserve">
          <source>Text</source>
        </trans-unit>
        <trans-unit id="691" translate="yes" xml:space="preserve">
          <source>The content of the text node.</source>
        </trans-unit>
        <trans-unit id="692" translate="yes" xml:space="preserve">
          <source>SignificantWhitespace</source>
        </trans-unit>
        <trans-unit id="693" translate="yes" xml:space="preserve">
          <source>The white space characters.</source>
        </trans-unit>
        <trans-unit id="694" translate="yes" xml:space="preserve">
          <source>White space can consist of one or more space characters, carriage returns, line feeds, or tabs.</source>
        </trans-unit>
        <trans-unit id="695" translate="yes" xml:space="preserve">
          <source>Whitespace</source>
        </trans-unit>
        <trans-unit id="696" translate="yes" xml:space="preserve">
          <source>The white space characters.</source>
        </trans-unit>
        <trans-unit id="697" translate="yes" xml:space="preserve">
          <source>White space can consist of one or more space characters, carriage returns, line feeds, or tabs.</source>
        </trans-unit>
        <trans-unit id="698" translate="yes" xml:space="preserve">
          <source>XmlDeclaration</source>
        </trans-unit>
        <trans-unit id="699" translate="yes" xml:space="preserve">
          <source>The content of the declaration (that is, everything between <ph id="ph1">&lt;?xml and ?&gt;</ph>).</source>
        </trans-unit>
        <trans-unit id="700" translate="yes" xml:space="preserve">
          <source>Setting the value of a node that is read-only.</source>
        </trans-unit>
        <trans-unit id="701" translate="yes" xml:space="preserve">
          <source>Setting the value of a node that is not supposed to have a value (for example, an Element node).</source>
        </trans-unit>
        <trans-unit id="702" translate="yes" xml:space="preserve">
          <source>Saves all the child nodes of the node to the specified <ph id="ph1">&lt;xref href="System.Xml.XmlWriter"&gt;&lt;/xref&gt;</ph>, when overridden in a derived class.</source>
        </trans-unit>
        <trans-unit id="703" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is a Microsoft extension to the Document Object Model (DOM).</source>
        </trans-unit>
        <trans-unit id="704" translate="yes" xml:space="preserve" extradata="MT">
          <source>It is functionally equivalent to the <ph id="ph1">&lt;xref:System.Xml.XmlNode.InnerXml%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="705" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`XmlWriter`</ph> to which you want to save.</source>
        </trans-unit>
        <trans-unit id="706" translate="yes" xml:space="preserve">
          <source>Saves the current node to the specified <ph id="ph1">&lt;xref href="System.Xml.XmlWriter"&gt;&lt;/xref&gt;</ph>, when overridden in a derived class.</source>
        </trans-unit>
        <trans-unit id="707" translate="yes" xml:space="preserve" extradata="MT">
          <source>This method is a Microsoft extension to the Document Object Model (DOM).</source>
        </trans-unit>
        <trans-unit id="708" translate="yes" xml:space="preserve" extradata="MT">
          <source>It is functionally equivalent to the <ph id="ph1">&lt;xref:System.Xml.XmlNode.OuterXml%2A&gt;</ph> property.</source>
        </trans-unit>
        <trans-unit id="709" translate="yes" xml:space="preserve">
          <source>The <ph id="ph1">`XmlWriter`</ph> to which you want to save.</source>
        </trans-unit>
        <trans-unit id="710" translate="yes" xml:space="preserve">
          <source>For a description of this member, see <ph id="ph1">&lt;xref href="System.Xml.XmlNode.GetEnumerator"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="711" translate="yes" xml:space="preserve" extradata="MT">
          <source>This member is an explicit interface member implementation.</source>
        </trans-unit>
        <trans-unit id="712" translate="yes" xml:space="preserve" extradata="MT">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Xml.XmlNode&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Collections.IEnumerable&gt;</ph> interface.</source>
        </trans-unit>
        <trans-unit id="713" translate="yes" xml:space="preserve">
          <source>Returns an enumerator for the collection.</source>
        </trans-unit>
        <trans-unit id="714" translate="yes" xml:space="preserve">
          <source>For a description of this member, see <ph id="ph1">&lt;xref href="System.Xml.XmlNode.Clone"&gt;&lt;/xref&gt;</ph>.</source>
        </trans-unit>
        <trans-unit id="715" translate="yes" xml:space="preserve" extradata="MT">
          <source>This member is an explicit interface member implementation.</source>
        </trans-unit>
        <trans-unit id="716" translate="yes" xml:space="preserve" extradata="MT">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Xml.XmlNode&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.ICloneable&gt;</ph> interface.</source>
        </trans-unit>
        <trans-unit id="717" translate="yes" xml:space="preserve">
          <source>A copy of the node from which it is called.</source>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>