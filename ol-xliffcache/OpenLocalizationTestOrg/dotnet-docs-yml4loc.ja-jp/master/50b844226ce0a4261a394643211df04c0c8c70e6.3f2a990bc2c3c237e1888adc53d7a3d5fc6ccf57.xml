{"nodes":[{"content":"Animates the value of a <xref href=\"System.Windows.Media.Matrix\"></xref> property by using a <xref href=\"System.Windows.Media.PathGeometry\"></xref> to generate the animated values. This animation can be used to move a visual object along a path.","nodes":[{"pos":[0,245],"content":"Animates the value of a <xref href=\"System.Windows.Media.Matrix\"></xref> property by using a <xref href=\"System.Windows.Media.PathGeometry\"></xref> to generate the animated values. This animation can be used to move a visual object along a path.","nodes":[{"content":"Animates the value of a <ph id=\"ph1\">&lt;xref href=\"System.Windows.Media.Matrix\"&gt;&lt;/xref&gt;</ph> property by using a <ph id=\"ph2\">&lt;xref href=\"System.Windows.Media.PathGeometry\"&gt;&lt;/xref&gt;</ph> to generate the animated values.","pos":[0,180],"source":"Animates the value of a <xref href=\"System.Windows.Media.Matrix\"></xref> property by using a <xref href=\"System.Windows.Media.PathGeometry\"></xref> to generate the animated values."},{"content":"This animation can be used to move a visual object along a path.","pos":[181,245]}]}],"pos":[1670,1916],"yaml":true},{"content":"<xref:System.Windows.Media.Animation.MatrixAnimationUsingPath> enables you to animate the angle and position of an object with a single animation and <xref:System.Windows.Media.MatrixTransform>.  \n  \n A <xref:System.Windows.Media.Animation.PointAnimationUsingPath> animates its target by using linear interpolation over the specified <xref:System.Windows.Media.Animation.Timeline.Duration%2A>.","nodes":[{"pos":[0,194],"content":"<xref:System.Windows.Media.Animation.MatrixAnimationUsingPath> enables you to animate the angle and position of an object with a single animation and <xref:System.Windows.Media.MatrixTransform>.","nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.Windows.Media.Animation.MatrixAnimationUsingPath&gt;</ph> enables you to animate the angle and position of an object with a single animation and <ph id=\"ph2\">&lt;xref:System.Windows.Media.MatrixTransform&gt;</ph>.","pos":[0,194],"source":"<xref:System.Windows.Media.Animation.MatrixAnimationUsingPath> enables you to animate the angle and position of an object with a single animation and <xref:System.Windows.Media.MatrixTransform>."}]},{"pos":[201,393],"content":"A <xref:System.Windows.Media.Animation.PointAnimationUsingPath> animates its target by using linear interpolation over the specified <xref:System.Windows.Media.Animation.Timeline.Duration%2A>.","nodes":[{"content":"A <ph id=\"ph1\">&lt;xref:System.Windows.Media.Animation.PointAnimationUsingPath&gt;</ph> animates its target by using linear interpolation over the specified <ph id=\"ph2\">&lt;xref:System.Windows.Media.Animation.Timeline.Duration%2A&gt;</ph>.","pos":[0,192],"source":"A <xref:System.Windows.Media.Animation.PointAnimationUsingPath> animates its target by using linear interpolation over the specified <xref:System.Windows.Media.Animation.Timeline.Duration%2A>."}]}],"pos":[1927,2325],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.Windows.Media.Animation.MatrixAnimationUsingPath\"></xref> class.","nodes":[{"pos":[0,117],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Media.Animation.MatrixAnimationUsingPath\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.Windows.Media.Animation.MatrixAnimationUsingPath\"></xref> class."}],"pos":[10474,10592],"yaml":true},{"content":"There is no default <xref:System.Windows.Media.PathGeometry>, so the user must specify one.","nodes":[{"pos":[0,91],"content":"There is no default <xref:System.Windows.Media.PathGeometry>, so the user must specify one.","nodes":[{"content":"There is no default <ph id=\"ph1\">&lt;xref:System.Windows.Media.PathGeometry&gt;</ph>, so the user must specify one.","pos":[0,91],"source":"There is no default <xref:System.Windows.Media.PathGeometry>, so the user must specify one."}]}],"pos":[10603,10695],"yaml":true,"extradata":"MT"},{"content":"Creates a modifiable clone of this <xref href=\"System.Windows.Media.Animation.MatrixAnimationUsingPath\"></xref>, making deep copies of this object's values. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.","nodes":[{"pos":[0,328],"content":"Creates a modifiable clone of this <xref href=\"System.Windows.Media.Animation.MatrixAnimationUsingPath\"></xref>, making deep copies of this object's values. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.","nodes":[{"content":"Creates a modifiable clone of this <ph id=\"ph1\">&lt;xref href=\"System.Windows.Media.Animation.MatrixAnimationUsingPath\"&gt;&lt;/xref&gt;</ph>, making deep copies of this object's values.","pos":[0,156],"source":"Creates a modifiable clone of this <xref href=\"System.Windows.Media.Animation.MatrixAnimationUsingPath\"></xref>, making deep copies of this object's values."},{"content":"When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.","pos":[157,328]}]}],"pos":[11874,12203],"yaml":true},{"content":"This method is used to produce modifiable copies of frozen <xref:System.Windows.Freezable> objects (or any <xref:System.Windows.Freezable> object). For convenience, this method shadows the inherited version with a strongly typed implementation.  \n  \n For more information, see <xref:System.Windows.Freezable.Clone%2A?displayProperty=fullName>.","nodes":[{"pos":[0,244],"content":"This method is used to produce modifiable copies of frozen <xref:System.Windows.Freezable> objects (or any <xref:System.Windows.Freezable> object). For convenience, this method shadows the inherited version with a strongly typed implementation.","nodes":[{"content":"This method is used to produce modifiable copies of frozen <xref:System.Windows.Freezable> objects (or any <xref:System.Windows.Freezable> object). For convenience, this method shadows the inherited version with a strongly typed implementation.","pos":[0,244],"nodes":[{"content":"This method is used to produce modifiable copies of frozen <ph id=\"ph1\">&lt;xref:System.Windows.Freezable&gt;</ph> objects (or any <ph id=\"ph2\">&lt;xref:System.Windows.Freezable&gt;</ph> object).","pos":[0,147],"source":"This method is used to produce modifiable copies of frozen <xref:System.Windows.Freezable> objects (or any <xref:System.Windows.Freezable> object)."},{"content":"For convenience, this method shadows the inherited version with a strongly typed implementation.","pos":[148,244]}]}]},{"pos":[251,343],"content":"For more information, see <xref:System.Windows.Freezable.Clone%2A?displayProperty=fullName>.","nodes":[{"content":"For more information, see <ph id=\"ph1\">&lt;xref:System.Windows.Freezable.Clone%2A?displayProperty=fullName&gt;</ph>.","pos":[0,92],"source":"For more information, see <xref:System.Windows.Freezable.Clone%2A?displayProperty=fullName>."}]}],"pos":[12214,12562],"yaml":true,"extradata":"MT"},{"content":"A modifiable clone of the current object. The cloned object's <xref href=\"System.Windows.Freezable.IsFrozen\"></xref> property will be `false` even if the source's <xref href=\"System.Windows.Freezable.IsFrozen\"></xref> property was `true.`","nodes":[{"pos":[0,238],"content":"A modifiable clone of the current object. The cloned object's <xref href=\"System.Windows.Freezable.IsFrozen\"></xref> property will be `false` even if the source's <xref href=\"System.Windows.Freezable.IsFrozen\"></xref> property was `true.`","nodes":[{"content":"A modifiable clone of the current object.","pos":[0,41]},{"content":"The cloned object's <ph id=\"ph1\">&lt;xref href=\"System.Windows.Freezable.IsFrozen\"&gt;&lt;/xref&gt;</ph> property will be <ph id=\"ph2\">`false`</ph> even if the source's <ph id=\"ph3\">&lt;xref href=\"System.Windows.Freezable.IsFrozen\"&gt;&lt;/xref&gt;</ph> property was <ph id=\"ph4\">`true.`</ph>","pos":[42,238],"source":" The cloned object's <xref href=\"System.Windows.Freezable.IsFrozen\"></xref> property will be `false` even if the source's <xref href=\"System.Windows.Freezable.IsFrozen\"></xref> property was `true.`"}]}],"pos":[12776,13015],"yaml":true},{"content":"Creates a new instance of the <xref href=\"System.Windows.Media.Animation.MatrixAnimationUsingPath\"></xref>.","nodes":[{"pos":[0,107],"content":"Creates a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Media.Animation.MatrixAnimationUsingPath\"&gt;&lt;/xref&gt;</ph>.","source":"Creates a new instance of the <xref href=\"System.Windows.Media.Animation.MatrixAnimationUsingPath\"></xref>."}],"pos":[14172,14280],"yaml":true},{"content":"The new instance.","nodes":[{"pos":[0,17],"content":"The new instance.","nodes":[{"content":"The new instance.","pos":[0,17]}]}],"pos":[14457,14475],"yaml":true},{"content":"Gets or sets a value indicating whether the object rotates along the tangent of the path.","nodes":[{"pos":[0,89],"content":"Gets or sets a value indicating whether the object rotates along the tangent of the path.","nodes":[{"content":"Gets or sets a value indicating whether the object rotates along the tangent of the path.","pos":[0,89]}]}],"pos":[15681,15771],"yaml":true},{"content":"Use property when you want the animated object to appear to \"slide\" along the animation path.  \n  \n<a name=\"dependencyPropertyInfo_DoesRotateWithTangent\"></a>   \n## Dependency Property Information  \n  \n|||  \n|-|-|  \n|Identifier field|<xref:System.Windows.Media.Animation.MatrixAnimationUsingPath.DoesRotateWithTangentProperty>|  \n|Metadata properties set to `true`|None|","nodes":[{"pos":[0,93],"content":"Use property when you want the animated object to appear to \"slide\" along the animation path.","nodes":[{"content":"Use property when you want the animated object to appear to \"slide\" along the animation path.","pos":[0,93]}]},{"pos":[165,196],"content":"Dependency Property Information","linkify":"Dependency Property Information","nodes":[{"content":"Dependency Property Information","pos":[0,31]}]},{"pos":[217,233],"content":"Identifier field","nodes":[{"content":"Identifier field","pos":[0,16]}]},{"pos":[234,326],"content":"<xref:System.Windows.Media.Animation.MatrixAnimationUsingPath.DoesRotateWithTangentProperty>","nodes":[]},{"pos":[331,364],"content":"Metadata properties set to <ph id=\"ph1\">`true`</ph>","source":"Metadata properties set to `true`"},{"pos":[365,369],"content":"None","nodes":[{"content":"None","pos":[0,4]}]}],"pos":[15782,16167],"yaml":true,"extradata":"MT"},{"content":"`true` if the object will rotate along the tangent of the path; otherwise, `false`. The default is `false`.","nodes":[{"pos":[0,107],"content":"`true` if the object will rotate along the tangent of the path; otherwise, `false`. The default is `false`.","nodes":[{"content":"<ph id=\"ph1\">`true`</ph> if the object will rotate along the tangent of the path; otherwise, <ph id=\"ph2\">`false`</ph>.","pos":[0,83],"source":"`true` if the object will rotate along the tangent of the path; otherwise, `false`."},{"content":"The default is <ph id=\"ph1\">`false`</ph>.","pos":[84,107],"source":" The default is `false`."}]}],"pos":[16296,16406],"yaml":true},{"content":"Identifies the <xref href=\"System.Windows.Media.Animation.MatrixAnimationUsingPath.DoesRotateWithTangent\"></xref> dependency property.","nodes":[{"pos":[0,134],"content":"Identifies the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Media.Animation.MatrixAnimationUsingPath.DoesRotateWithTangent\"&gt;&lt;/xref&gt;</ph> dependency property.","source":"Identifies the <xref href=\"System.Windows.Media.Animation.MatrixAnimationUsingPath.DoesRotateWithTangent\"></xref> dependency property."}],"pos":[17660,17795],"yaml":true},{"content":"Calculates a value that represents the current value of the property being animated, as determined by the <xref href=\"System.Windows.Media.Animation.MatrixAnimationUsingPath\"></xref>.","nodes":[{"pos":[0,183],"content":"Calculates a value that represents the current value of the property being animated, as determined by the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Media.Animation.MatrixAnimationUsingPath\"&gt;&lt;/xref&gt;</ph>.","source":"Calculates a value that represents the current value of the property being animated, as determined by the <xref href=\"System.Windows.Media.Animation.MatrixAnimationUsingPath\"></xref>."}],"pos":[19495,19679],"yaml":true},{"content":"If the `defaultOriginValue` is the first in the composition chain, this value will be the snapshot value (if one is available) or the base property value; otherwise this value will be the value returned by the previous animation in the chain with an <xref:System.Windows.Media.Animation.AnimationClock> that is not <xref:System.Windows.Media.Animation.Clock.Stopped%2A>.  \n  \n The `defaultDestinationValue` is the base value if the animation is in the first composition layer of animations on a property; otherwise the value is the output value from the previous composition layer of animations for the property.","nodes":[{"pos":[0,370],"content":"If the <ph id=\"ph1\">`defaultOriginValue`</ph> is the first in the composition chain, this value will be the snapshot value (if one is available) or the base property value; otherwise this value will be the value returned by the previous animation in the chain with an <ph id=\"ph2\">&lt;xref:System.Windows.Media.Animation.AnimationClock&gt;</ph> that is not <ph id=\"ph3\">&lt;xref:System.Windows.Media.Animation.Clock.Stopped%2A&gt;</ph>.","source":"If the `defaultOriginValue` is the first in the composition chain, this value will be the snapshot value (if one is available) or the base property value; otherwise this value will be the value returned by the previous animation in the chain with an <xref:System.Windows.Media.Animation.AnimationClock> that is not <xref:System.Windows.Media.Animation.Clock.Stopped%2A>."},{"pos":[377,612],"content":"The <ph id=\"ph1\">`defaultDestinationValue`</ph> is the base value if the animation is in the first composition layer of animations on a property; otherwise the value is the output value from the previous composition layer of animations for the property.","source":"The `defaultDestinationValue` is the base value if the animation is in the first composition layer of animations on a property; otherwise the value is the output value from the previous composition layer of animations for the property."}],"pos":[19690,20307],"yaml":true,"extradata":"MT"},{"content":"The suggested origin value, used if the animation does not have its own explicitly set start value.","nodes":[{"pos":[0,99],"content":"The suggested origin value, used if the animation does not have its own explicitly set start value.","nodes":[{"content":"The suggested origin value, used if the animation does not have its own explicitly set start value.","pos":[0,99]}]}],"pos":[20666,20766],"yaml":true},{"content":"The suggested destination value, used if the animation does not have its own explicitly set end value.","nodes":[{"pos":[0,102],"content":"The suggested destination value, used if the animation does not have its own explicitly set end value.","nodes":[{"content":"The suggested destination value, used if the animation does not have its own explicitly set end value.","pos":[0,102]}]}],"pos":[20859,20962],"yaml":true},{"content":"An <xref href=\"System.Windows.Media.Animation.AnimationClock\"></xref> that generates the <xref href=\"System.Windows.Media.Animation.Clock.CurrentTime\"></xref> or <xref href=\"System.Windows.Media.Animation.Clock.CurrentProgress\"></xref> used by the animation.","nodes":[{"pos":[0,258],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Windows.Media.Animation.AnimationClock\"&gt;&lt;/xref&gt;</ph> that generates the <ph id=\"ph2\">&lt;xref href=\"System.Windows.Media.Animation.Clock.CurrentTime\"&gt;&lt;/xref&gt;</ph> or <ph id=\"ph3\">&lt;xref href=\"System.Windows.Media.Animation.Clock.CurrentProgress\"&gt;&lt;/xref&gt;</ph> used by the animation.","source":"An <xref href=\"System.Windows.Media.Animation.AnimationClock\"></xref> that generates the <xref href=\"System.Windows.Media.Animation.Clock.CurrentTime\"></xref> or <xref href=\"System.Windows.Media.Animation.Clock.CurrentProgress\"></xref> used by the animation."}],"pos":[21064,21323],"yaml":true},{"content":"The calculated value of the property, as determined by the current animation.","nodes":[{"pos":[0,77],"content":"The calculated value of the property, as determined by the current animation.","nodes":[{"content":"The calculated value of the property, as determined by the current animation.","pos":[0,77]}]}],"pos":[21394,21472],"yaml":true},{"content":"Gets or sets a value that indicates whether the target property's current value should be added to this animation's starting value.","nodes":[{"pos":[0,131],"content":"Gets or sets a value that indicates whether the target property's current value should be added to this animation's starting value.","nodes":[{"content":"Gets or sets a value that indicates whether the target property's current value should be added to this animation's starting value.","pos":[0,131]}]}],"pos":[22591,22723],"yaml":true},{"content":"<a name=\"dependencyPropertyInfo_IsAdditive\"></a>   \n## Dependency Property Information  \n  \n|||  \n|-|-|  \n|Identifier field|<xref:System.Windows.Media.Animation.AnimationTimeline.IsAdditiveProperty>|  \n|Metadata properties set to `true`|None|  \n  \n> [!NOTE]\n>  This dependency property is unusual because the identifier field for it comes from <xref:System.Windows.Media.Animation.AnimationTimeline> and is shared by various derived classes.","nodes":[{"pos":[55,86],"content":"Dependency Property Information","linkify":"Dependency Property Information","nodes":[{"content":"Dependency Property Information","pos":[0,31]}]},{"pos":[107,123],"content":"Identifier field","nodes":[{"content":"Identifier field","pos":[0,16]}]},{"pos":[124,198],"content":"<xref:System.Windows.Media.Animation.AnimationTimeline.IsAdditiveProperty>","nodes":[]},{"pos":[203,236],"content":"Metadata properties set to <ph id=\"ph1\">`true`</ph>","source":"Metadata properties set to `true`"},{"pos":[237,241],"content":"None","nodes":[{"content":"None","pos":[0,4]}]},{"pos":[250,441],"content":"[!NOTE]\n This dependency property is unusual because the identifier field for it comes from <xref:System.Windows.Media.Animation.AnimationTimeline> and is shared by various derived classes.","leadings":["","> "],"nodes":[{"content":"This dependency property is unusual because the identifier field for it comes from <ph id=\"ph1\">&lt;xref:System.Windows.Media.Animation.AnimationTimeline&gt;</ph> and is shared by various derived classes.","pos":[9,189],"source":" This dependency property is unusual because the identifier field for it comes from <xref:System.Windows.Media.Animation.AnimationTimeline> and is shared by various derived classes."}]}],"pos":[22734,23189],"yaml":true,"extradata":"MT"},{"content":"`true` if the target property's current value should be added to this animation's starting value; otherwise, `false`. The default is `false`.","nodes":[{"pos":[0,141],"content":"`true` if the target property's current value should be added to this animation's starting value; otherwise, `false`. The default is `false`.","nodes":[{"content":"<ph id=\"ph1\">`true`</ph> if the target property's current value should be added to this animation's starting value; otherwise, <ph id=\"ph2\">`false`</ph>.","pos":[0,117],"source":"`true` if the target property's current value should be added to this animation's starting value; otherwise, `false`."},{"content":"The default is <ph id=\"ph1\">`false`</ph>.","pos":[118,141],"source":" The default is `false`."}]}],"pos":[24322,24466],"yaml":true},{"content":"Gets or sets a value that specifies whether the rotation angle of the animated matrix should accumulate over repetitions.","nodes":[{"pos":[0,121],"content":"Gets or sets a value that specifies whether the rotation angle of the animated matrix should accumulate over repetitions.","nodes":[{"content":"Gets or sets a value that specifies whether the rotation angle of the animated matrix should accumulate over repetitions.","pos":[0,121]}]}],"pos":[25640,25762],"yaml":true},{"content":"If this property is set to `true`, the rotation angle of the animated matrix will accumulate as the animation repeats.  If your path is a small arc, a cumulative angle will cause your object to continuously rotate with each repeat instead of restarting the rotation.  When combined with an <xref:System.Windows.Media.Animation.MatrixAnimationUsingPath.IsOffsetCumulative%2A> of `true`, your object might appear to tumble while it bounces (depending on the path you specify). For related information, see <xref:System.Windows.Media.Animation.MatrixAnimationUsingPath.IsOffsetCumulative%2A>.  \n  \n Setting this property has no effect if <xref:System.Windows.Media.Animation.MatrixAnimationUsingPath.DoesRotateWithTangent%2A> is `false`.  \n  \n This property determines whether the animation matrix's angle accumulates when the animation repeats because of its <xref:System.Windows.Media.Animation.Timeline.RepeatBehavior%2A> setting; it does not cause the offset to accumulate when the animation is restarted. For information on how to make an animation build off a previous animation's values, see <xref:System.Windows.Media.Animation.MatrixAnimationUsingPath.IsAdditive%2A>.  \n  \n<a name=\"dependencyPropertyInfo_IsAngleCumulative\"></a>   \n## Dependency Property Information  \n  \n|||  \n|-|-|  \n|Identifier field|<xref:System.Windows.Media.Animation.MatrixAnimationUsingPath.IsAngleCumulativeProperty>|  \n|Metadata properties set to `true`|None|","nodes":[{"pos":[0,589],"content":"If this property is set to `true`, the rotation angle of the animated matrix will accumulate as the animation repeats.  If your path is a small arc, a cumulative angle will cause your object to continuously rotate with each repeat instead of restarting the rotation.  When combined with an <xref:System.Windows.Media.Animation.MatrixAnimationUsingPath.IsOffsetCumulative%2A> of `true`, your object might appear to tumble while it bounces (depending on the path you specify). For related information, see <xref:System.Windows.Media.Animation.MatrixAnimationUsingPath.IsOffsetCumulative%2A>.","nodes":[{"content":"If this property is set to <ph id=\"ph1\">`true`</ph>, the rotation angle of the animated matrix will accumulate as the animation repeats.","pos":[0,118],"source":"If this property is set to `true`, the rotation angle of the animated matrix will accumulate as the animation repeats."},{"content":"If your path is a small arc, a cumulative angle will cause your object to continuously rotate with each repeat instead of restarting the rotation.","pos":[120,266]},{"content":"When combined with an <ph id=\"ph1\">&lt;xref:System.Windows.Media.Animation.MatrixAnimationUsingPath.IsOffsetCumulative%2A&gt;</ph> of <ph id=\"ph2\">`true`</ph>, your object might appear to tumble while it bounces (depending on the path you specify).","pos":[268,474],"source":"  When combined with an <xref:System.Windows.Media.Animation.MatrixAnimationUsingPath.IsOffsetCumulative%2A> of `true`, your object might appear to tumble while it bounces (depending on the path you specify)."},{"content":"For related information, see <ph id=\"ph1\">&lt;xref:System.Windows.Media.Animation.MatrixAnimationUsingPath.IsOffsetCumulative%2A&gt;</ph>.","pos":[475,589],"source":" For related information, see <xref:System.Windows.Media.Animation.MatrixAnimationUsingPath.IsOffsetCumulative%2A>."}]},{"pos":[596,734],"content":"Setting this property has no effect if <ph id=\"ph1\">&lt;xref:System.Windows.Media.Animation.MatrixAnimationUsingPath.DoesRotateWithTangent%2A&gt;</ph> is <ph id=\"ph2\">`false`</ph>.","source":"Setting this property has no effect if <xref:System.Windows.Media.Animation.MatrixAnimationUsingPath.DoesRotateWithTangent%2A> is `false`."},{"pos":[741,1173],"content":"This property determines whether the animation matrix's angle accumulates when the animation repeats because of its <xref:System.Windows.Media.Animation.Timeline.RepeatBehavior%2A> setting; it does not cause the offset to accumulate when the animation is restarted. For information on how to make an animation build off a previous animation's values, see <xref:System.Windows.Media.Animation.MatrixAnimationUsingPath.IsAdditive%2A>.","nodes":[{"content":"This property determines whether the animation matrix's angle accumulates when the animation repeats because of its <xref:System.Windows.Media.Animation.Timeline.RepeatBehavior%2A> setting; it does not cause the offset to accumulate when the animation is restarted. For information on how to make an animation build off a previous animation's values, see <xref:System.Windows.Media.Animation.MatrixAnimationUsingPath.IsAdditive%2A>.","pos":[0,432],"nodes":[{"content":"This property determines whether the animation matrix's angle accumulates when the animation repeats because of its <ph id=\"ph1\">&lt;xref:System.Windows.Media.Animation.Timeline.RepeatBehavior%2A&gt;</ph> setting; it does not cause the offset to accumulate when the animation is restarted.","pos":[0,265],"source":"This property determines whether the animation matrix's angle accumulates when the animation repeats because of its <xref:System.Windows.Media.Animation.Timeline.RepeatBehavior%2A> setting; it does not cause the offset to accumulate when the animation is restarted."},{"content":"For information on how to make an animation build off a previous animation's values, see <ph id=\"ph1\">&lt;xref:System.Windows.Media.Animation.MatrixAnimationUsingPath.IsAdditive%2A&gt;</ph>.","pos":[266,432],"source":" For information on how to make an animation build off a previous animation's values, see <xref:System.Windows.Media.Animation.MatrixAnimationUsingPath.IsAdditive%2A>."}]}]},{"pos":[1241,1272],"content":"Dependency Property Information","linkify":"Dependency Property Information","nodes":[{"content":"Dependency Property Information","pos":[0,31]}]},{"pos":[1293,1309],"content":"Identifier field","nodes":[{"content":"Identifier field","pos":[0,16]}]},{"pos":[1310,1398],"content":"<xref:System.Windows.Media.Animation.MatrixAnimationUsingPath.IsAngleCumulativeProperty>","nodes":[]},{"pos":[1403,1436],"content":"Metadata properties set to <ph id=\"ph1\">`true`</ph>","source":"Metadata properties set to `true`"},{"pos":[1437,1441],"content":"None","nodes":[{"content":"None","pos":[0,4]}]}],"pos":[25773,27232],"yaml":true,"extradata":"MT"},{"content":"`true` if the animation's rotation angle should accumulate over repetitions; otherwise, `false`. The default is `false`.","nodes":[{"pos":[0,120],"content":"`true` if the animation's rotation angle should accumulate over repetitions; otherwise, `false`. The default is `false`.","nodes":[{"content":"<ph id=\"ph1\">`true`</ph> if the animation's rotation angle should accumulate over repetitions; otherwise, <ph id=\"ph2\">`false`</ph>.","pos":[0,96],"source":"`true` if the animation's rotation angle should accumulate over repetitions; otherwise, `false`."},{"content":"The default is <ph id=\"ph1\">`false`</ph>.","pos":[97,120],"source":" The default is `false`."}]}],"pos":[28536,28659],"yaml":true},{"content":"Identifies the <xref href=\"System.Windows.Media.Animation.MatrixAnimationUsingPath.IsAngleCumulative\"></xref> dependency property.","nodes":[{"pos":[0,130],"content":"Identifies the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Media.Animation.MatrixAnimationUsingPath.IsAngleCumulative\"&gt;&lt;/xref&gt;</ph> dependency property.","source":"Identifies the <xref href=\"System.Windows.Media.Animation.MatrixAnimationUsingPath.IsAngleCumulative\"></xref> dependency property."}],"pos":[29885,30016],"yaml":true},{"content":"Gets or sets a value indicating whether the offset produced by the animated matrix will accumulate over repetitions.","nodes":[{"pos":[0,116],"content":"Gets or sets a value indicating whether the offset produced by the animated matrix will accumulate over repetitions.","nodes":[{"content":"Gets or sets a value indicating whether the offset produced by the animated matrix will accumulate over repetitions.","pos":[0,116]}]}],"pos":[31303,31420],"yaml":true},{"content":"If this property is set to `true`, the offset of the animated matrix will accumulate as the animation repeats. For example, if the path is a small arc and the animation is set to repeat, a cumulative offset will cause the object to appear to bounce across the screen.  \n  \n This property determines whether the animation matrix's offset accumulates when the animation repeats because of its <xref:System.Windows.Media.Animation.Timeline.RepeatBehavior%2A> setting; it does not cause the offset to accumulate when the animation is restarted. For information on how to make an animation build off a previous animation's values, see <xref:System.Windows.Media.Animation.MatrixAnimationUsingPath.IsAdditive%2A>.  \n  \n<a name=\"dependencyPropertyInfo_IsOffsetCumulative\"></a>   \n## Dependency Property Information  \n  \n|||  \n|-|-|  \n|Identifier field|<xref:System.Windows.Media.Animation.MatrixAnimationUsingPath.IsOffsetCumulativeProperty>|  \n|Metadata properties set to `true`|None|","nodes":[{"pos":[0,267],"content":"If this property is set to `true`, the offset of the animated matrix will accumulate as the animation repeats. For example, if the path is a small arc and the animation is set to repeat, a cumulative offset will cause the object to appear to bounce across the screen.","nodes":[{"content":"If this property is set to <ph id=\"ph1\">`true`</ph>, the offset of the animated matrix will accumulate as the animation repeats.","pos":[0,110],"source":"If this property is set to `true`, the offset of the animated matrix will accumulate as the animation repeats."},{"content":"For example, if the path is a small arc and the animation is set to repeat, a cumulative offset will cause the object to appear to bounce across the screen.","pos":[111,267]}]},{"pos":[274,707],"content":"This property determines whether the animation matrix's offset accumulates when the animation repeats because of its <xref:System.Windows.Media.Animation.Timeline.RepeatBehavior%2A> setting; it does not cause the offset to accumulate when the animation is restarted. For information on how to make an animation build off a previous animation's values, see <xref:System.Windows.Media.Animation.MatrixAnimationUsingPath.IsAdditive%2A>.","nodes":[{"content":"This property determines whether the animation matrix's offset accumulates when the animation repeats because of its <xref:System.Windows.Media.Animation.Timeline.RepeatBehavior%2A> setting; it does not cause the offset to accumulate when the animation is restarted. For information on how to make an animation build off a previous animation's values, see <xref:System.Windows.Media.Animation.MatrixAnimationUsingPath.IsAdditive%2A>.","pos":[0,433],"nodes":[{"content":"This property determines whether the animation matrix's offset accumulates when the animation repeats because of its <ph id=\"ph1\">&lt;xref:System.Windows.Media.Animation.Timeline.RepeatBehavior%2A&gt;</ph> setting; it does not cause the offset to accumulate when the animation is restarted.","pos":[0,266],"source":"This property determines whether the animation matrix's offset accumulates when the animation repeats because of its <xref:System.Windows.Media.Animation.Timeline.RepeatBehavior%2A> setting; it does not cause the offset to accumulate when the animation is restarted."},{"content":"For information on how to make an animation build off a previous animation's values, see <ph id=\"ph1\">&lt;xref:System.Windows.Media.Animation.MatrixAnimationUsingPath.IsAdditive%2A&gt;</ph>.","pos":[267,433],"source":" For information on how to make an animation build off a previous animation's values, see <xref:System.Windows.Media.Animation.MatrixAnimationUsingPath.IsAdditive%2A>."}]}]},{"pos":[776,807],"content":"Dependency Property Information","linkify":"Dependency Property Information","nodes":[{"content":"Dependency Property Information","pos":[0,31]}]},{"pos":[828,844],"content":"Identifier field","nodes":[{"content":"Identifier field","pos":[0,16]}]},{"pos":[845,934],"content":"<xref:System.Windows.Media.Animation.MatrixAnimationUsingPath.IsOffsetCumulativeProperty>","nodes":[]},{"pos":[939,972],"content":"Metadata properties set to <ph id=\"ph1\">`true`</ph>","source":"Metadata properties set to `true`"},{"pos":[973,977],"content":"None","nodes":[{"content":"None","pos":[0,4]}]}],"pos":[31431,32424],"yaml":true,"extradata":"MT"},{"content":"`true` if the object will accumulate over repeats of the animation; otherwise, `false`. The default is `false`.","nodes":[{"pos":[0,111],"content":"`true` if the object will accumulate over repeats of the animation; otherwise, `false`. The default is `false`.","nodes":[{"content":"<ph id=\"ph1\">`true`</ph> if the object will accumulate over repeats of the animation; otherwise, <ph id=\"ph2\">`false`</ph>.","pos":[0,87],"source":"`true` if the object will accumulate over repeats of the animation; otherwise, `false`."},{"content":"The default is <ph id=\"ph1\">`false`</ph>.","pos":[88,111],"source":" The default is `false`."}]}],"pos":[32550,32664],"yaml":true},{"content":"Identifies the <xref href=\"System.Windows.Media.Animation.MatrixAnimationUsingPath.IsOffsetCumulative\"></xref> dependency property.","nodes":[{"pos":[0,131],"content":"Identifies the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Media.Animation.MatrixAnimationUsingPath.IsOffsetCumulative\"&gt;&lt;/xref&gt;</ph> dependency property.","source":"Identifies the <xref href=\"System.Windows.Media.Animation.MatrixAnimationUsingPath.IsOffsetCumulative\"></xref> dependency property."}],"pos":[33875,34007],"yaml":true},{"content":"Called when this <xref href=\"System.Windows.Media.Animation.MatrixAnimationUsingPath\"></xref> is modified.","nodes":[{"pos":[0,106],"content":"Called when this <ph id=\"ph1\">&lt;xref href=\"System.Windows.Media.Animation.MatrixAnimationUsingPath\"&gt;&lt;/xref&gt;</ph> is modified.","source":"Called when this <xref href=\"System.Windows.Media.Animation.MatrixAnimationUsingPath\"></xref> is modified."}],"pos":[35245,35352],"yaml":true},{"content":"Gets or sets the geometry used to generate this animation's output values.","nodes":[{"pos":[0,74],"content":"Gets or sets the geometry used to generate this animation's output values.","nodes":[{"content":"Gets or sets the geometry used to generate this animation's output values.","pos":[0,74]}]}],"pos":[36575,36650],"yaml":true},{"content":"A <xref:System.Windows.Media.PathGeometry> can describe complex shapes that contain curves and arcs, enabling you specify complex shapes for your animation input. For more information, see [Geometry Overview](~/docs/framework/wpf/graphics-multimedia/geometry-overview.md).  \n  \n<a name=\"dependencyPropertyInfo_PathGeometry\"></a>   \n## Dependency Property Information  \n  \n|||  \n|-|-|  \n|Identifier field|<xref:System.Windows.Media.Animation.MatrixAnimationUsingPath.PathGeometryProperty>|  \n|Metadata properties set to `true`|None|","nodes":[{"pos":[0,272],"content":"A <xref:System.Windows.Media.PathGeometry> can describe complex shapes that contain curves and arcs, enabling you specify complex shapes for your animation input. For more information, see [Geometry Overview](~/docs/framework/wpf/graphics-multimedia/geometry-overview.md).","nodes":[{"content":"A <ph id=\"ph1\">&lt;xref:System.Windows.Media.PathGeometry&gt;</ph> can describe complex shapes that contain curves and arcs, enabling you specify complex shapes for your animation input.","pos":[0,162],"source":"A <xref:System.Windows.Media.PathGeometry> can describe complex shapes that contain curves and arcs, enabling you specify complex shapes for your animation input."},{"content":"For more information, see <bpt id=\"p1\">[</bpt>Geometry Overview<ept id=\"p1\">](~/docs/framework/wpf/graphics-multimedia/geometry-overview.md)</ept>.","pos":[163,272],"source":" For more information, see [Geometry Overview](~/docs/framework/wpf/graphics-multimedia/geometry-overview.md)."}]},{"pos":[335,366],"content":"Dependency Property Information","linkify":"Dependency Property Information","nodes":[{"content":"Dependency Property Information","pos":[0,31]}]},{"pos":[387,403],"content":"Identifier field","nodes":[{"content":"Identifier field","pos":[0,16]}]},{"pos":[404,487],"content":"<xref:System.Windows.Media.Animation.MatrixAnimationUsingPath.PathGeometryProperty>","nodes":[]},{"pos":[492,525],"content":"Metadata properties set to <ph id=\"ph1\">`true`</ph>","source":"Metadata properties set to `true`"},{"pos":[526,530],"content":"None","nodes":[{"content":"None","pos":[0,4]}]}],"pos":[36661,37205],"yaml":true,"extradata":"MT"},{"content":"The geometry used to generate this animation's output values. The default is `null`.","nodes":[{"pos":[0,84],"content":"The geometry used to generate this animation's output values. The default is `null`.","nodes":[{"content":"The geometry used to generate this animation's output values.","pos":[0,61]},{"content":"The default is <ph id=\"ph1\">`null`</ph>.","pos":[62,84],"source":" The default is `null`."}]}],"pos":[37373,37458],"yaml":true},{"content":"Identifies the <xref href=\"System.Windows.Media.Animation.MatrixAnimationUsingPath.PathGeometry\"></xref> dependency property.","nodes":[{"pos":[0,125],"content":"Identifies the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Media.Animation.MatrixAnimationUsingPath.PathGeometry\"&gt;&lt;/xref&gt;</ph> dependency property.","source":"Identifies the <xref href=\"System.Windows.Media.Animation.MatrixAnimationUsingPath.PathGeometry\"></xref> dependency property."}],"pos":[38649,38775],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Windows.Media.Animation.MatrixAnimationUsingPath\n  commentId: T:System.Windows.Media.Animation.MatrixAnimationUsingPath\n  id: MatrixAnimationUsingPath\n  children:\n  - System.Windows.Media.Animation.MatrixAnimationUsingPath.#ctor\n  - System.Windows.Media.Animation.MatrixAnimationUsingPath.Clone\n  - System.Windows.Media.Animation.MatrixAnimationUsingPath.CreateInstanceCore\n  - System.Windows.Media.Animation.MatrixAnimationUsingPath.DoesRotateWithTangent\n  - System.Windows.Media.Animation.MatrixAnimationUsingPath.DoesRotateWithTangentProperty\n  - System.Windows.Media.Animation.MatrixAnimationUsingPath.GetCurrentValueCore(System.Windows.Media.Matrix,System.Windows.Media.Matrix,System.Windows.Media.Animation.AnimationClock)\n  - System.Windows.Media.Animation.MatrixAnimationUsingPath.IsAdditive\n  - System.Windows.Media.Animation.MatrixAnimationUsingPath.IsAngleCumulative\n  - System.Windows.Media.Animation.MatrixAnimationUsingPath.IsAngleCumulativeProperty\n  - System.Windows.Media.Animation.MatrixAnimationUsingPath.IsOffsetCumulative\n  - System.Windows.Media.Animation.MatrixAnimationUsingPath.IsOffsetCumulativeProperty\n  - System.Windows.Media.Animation.MatrixAnimationUsingPath.OnChanged\n  - System.Windows.Media.Animation.MatrixAnimationUsingPath.PathGeometry\n  - System.Windows.Media.Animation.MatrixAnimationUsingPath.PathGeometryProperty\n  langs:\n  - csharp\n  name: MatrixAnimationUsingPath\n  nameWithType: MatrixAnimationUsingPath\n  fullName: System.Windows.Media.Animation.MatrixAnimationUsingPath\n  type: Class\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Animation\n  summary: Animates the value of a <xref href=\"System.Windows.Media.Matrix\"></xref> property by using a <xref href=\"System.Windows.Media.PathGeometry\"></xref> to generate the animated values. This animation can be used to move a visual object along a path.\n  remarks: \"<xref:System.Windows.Media.Animation.MatrixAnimationUsingPath> enables you to animate the angle and position of an object with a single animation and <xref:System.Windows.Media.MatrixTransform>.  \\n  \\n A <xref:System.Windows.Media.Animation.PointAnimationUsingPath> animates its target by using linear interpolation over the specified <xref:System.Windows.Media.Animation.Timeline.Duration%2A>.\"\n  syntax:\n    content: 'public class MatrixAnimationUsingPath : System.Windows.Media.Animation.MatrixAnimationBase'\n  inheritance:\n  - System.Object\n  - System.Windows.Threading.DispatcherObject\n  - System.Windows.DependencyObject\n  - System.Windows.Freezable\n  - System.Windows.Media.Animation.Animatable\n  - System.Windows.Media.Animation.Timeline\n  - System.Windows.Media.Animation.AnimationTimeline\n  - System.Windows.Media.Animation.MatrixAnimationBase\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)\n  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyPropertyKey)\n  - System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)\n  - System.Windows.DependencyObject.DependencyObjectType\n  - System.Windows.DependencyObject.Equals(System.Object)\n  - System.Windows.DependencyObject.GetHashCode\n  - System.Windows.DependencyObject.GetLocalValueEnumerator\n  - System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)\n  - System.Windows.DependencyObject.InvalidateProperty(System.Windows.DependencyProperty)\n  - System.Windows.DependencyObject.IsSealed\n  - System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)\n  - System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)\n  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)\n  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyPropertyKey,System.Object)\n  - System.Windows.DependencyObject.ShouldSerializeProperty(System.Windows.DependencyProperty)\n  - System.Windows.Freezable.CanFreeze\n  - System.Windows.Freezable.Changed\n  - System.Windows.Freezable.CloneCore(System.Windows.Freezable)\n  - System.Windows.Freezable.CloneCurrentValueCore(System.Windows.Freezable)\n  - System.Windows.Freezable.CreateInstance\n  - System.Windows.Freezable.Freeze\n  - System.Windows.Freezable.Freeze(System.Windows.Freezable,System.Boolean)\n  - System.Windows.Freezable.GetAsFrozen\n  - System.Windows.Freezable.GetCurrentValueAsFrozen\n  - System.Windows.Freezable.IsFrozen\n  - System.Windows.Freezable.OnFreezablePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyObject)\n  - System.Windows.Freezable.OnFreezablePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyObject,System.Windows.DependencyProperty)\n  - System.Windows.Freezable.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)\n  - System.Windows.Freezable.ReadPreamble\n  - System.Windows.Freezable.WritePostscript\n  - System.Windows.Freezable.WritePreamble\n  - System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock)\n  - System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)\n  - System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline)\n  - System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)\n  - System.Windows.Media.Animation.Animatable.GetAnimationBaseValue(System.Windows.DependencyProperty)\n  - System.Windows.Media.Animation.Animatable.HasAnimatedProperties\n  - System.Windows.Media.Animation.Animatable.ShouldSerializeStoredWeakReference(System.Windows.DependencyObject)\n  - System.Windows.Media.Animation.AnimationTimeline.AllocateClock\n  - System.Windows.Media.Animation.AnimationTimeline.CreateClock\n  - System.Windows.Media.Animation.AnimationTimeline.GetNaturalDurationCore(System.Windows.Media.Animation.Clock)\n  - System.Windows.Media.Animation.AnimationTimeline.IsAdditiveProperty\n  - System.Windows.Media.Animation.AnimationTimeline.IsCumulativeProperty\n  - System.Windows.Media.Animation.AnimationTimeline.IsDestinationDefault\n  - System.Windows.Media.Animation.MatrixAnimationBase.GetCurrentValue(System.Object,System.Object,System.Windows.Media.Animation.AnimationClock)\n  - System.Windows.Media.Animation.MatrixAnimationBase.GetCurrentValue(System.Windows.Media.Matrix,System.Windows.Media.Matrix,System.Windows.Media.Animation.AnimationClock)\n  - System.Windows.Media.Animation.MatrixAnimationBase.TargetPropertyType\n  - System.Windows.Media.Animation.Timeline.AccelerationRatio\n  - System.Windows.Media.Animation.Timeline.AccelerationRatioProperty\n  - System.Windows.Media.Animation.Timeline.AutoReverse\n  - System.Windows.Media.Animation.Timeline.AutoReverseProperty\n  - System.Windows.Media.Animation.Timeline.BeginTime\n  - System.Windows.Media.Animation.Timeline.BeginTimeProperty\n  - System.Windows.Media.Animation.Timeline.CloneCurrentValue\n  - System.Windows.Media.Animation.Timeline.Completed\n  - System.Windows.Media.Animation.Timeline.CreateClock(System.Boolean)\n  - System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated\n  - System.Windows.Media.Animation.Timeline.CurrentStateInvalidated\n  - System.Windows.Media.Animation.Timeline.CurrentTimeInvalidated\n  - System.Windows.Media.Animation.Timeline.DecelerationRatio\n  - System.Windows.Media.Animation.Timeline.DecelerationRatioProperty\n  - System.Windows.Media.Animation.Timeline.DesiredFrameRateProperty\n  - System.Windows.Media.Animation.Timeline.Duration\n  - System.Windows.Media.Animation.Timeline.DurationProperty\n  - System.Windows.Media.Animation.Timeline.FillBehavior\n  - System.Windows.Media.Animation.Timeline.FillBehaviorProperty\n  - System.Windows.Media.Animation.Timeline.FreezeCore(System.Boolean)\n  - System.Windows.Media.Animation.Timeline.GetAsFrozenCore(System.Windows.Freezable)\n  - System.Windows.Media.Animation.Timeline.GetCurrentValueAsFrozenCore(System.Windows.Freezable)\n  - System.Windows.Media.Animation.Timeline.GetDesiredFrameRate(System.Windows.Media.Animation.Timeline)\n  - System.Windows.Media.Animation.Timeline.GetNaturalDuration(System.Windows.Media.Animation.Clock)\n  - System.Windows.Media.Animation.Timeline.Name\n  - System.Windows.Media.Animation.Timeline.NameProperty\n  - System.Windows.Media.Animation.Timeline.RemoveRequested\n  - System.Windows.Media.Animation.Timeline.RepeatBehavior\n  - System.Windows.Media.Animation.Timeline.RepeatBehaviorProperty\n  - System.Windows.Media.Animation.Timeline.SetDesiredFrameRate(System.Windows.Media.Animation.Timeline,System.Nullable{System.Int32})\n  - System.Windows.Media.Animation.Timeline.SpeedRatio\n  - System.Windows.Media.Animation.Timeline.SpeedRatioProperty\n  - System.Windows.Threading.DispatcherObject.CheckAccess\n  - System.Windows.Threading.DispatcherObject.Dispatcher\n  - System.Windows.Threading.DispatcherObject.VerifyAccess\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media.Animation/MatrixAnimationUsingPath.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Media.Animation.MatrixAnimationUsingPath.#ctor\n  commentId: M:System.Windows.Media.Animation.MatrixAnimationUsingPath.#ctor\n  id: '#ctor'\n  parent: System.Windows.Media.Animation.MatrixAnimationUsingPath\n  langs:\n  - csharp\n  name: MatrixAnimationUsingPath()\n  nameWithType: MatrixAnimationUsingPath.MatrixAnimationUsingPath()\n  fullName: MatrixAnimationUsingPath.MatrixAnimationUsingPath()\n  type: Constructor\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Animation\n  summary: Initializes a new instance of the <xref href=\"System.Windows.Media.Animation.MatrixAnimationUsingPath\"></xref> class.\n  remarks: There is no default <xref:System.Windows.Media.PathGeometry>, so the user must specify one.\n  syntax:\n    content: public MatrixAnimationUsingPath ();\n    parameters: []\n  overload: System.Windows.Media.Animation.MatrixAnimationUsingPath.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media.Animation/MatrixAnimationUsingPath.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Media.Animation.MatrixAnimationUsingPath.Clone\n  commentId: M:System.Windows.Media.Animation.MatrixAnimationUsingPath.Clone\n  id: Clone\n  parent: System.Windows.Media.Animation.MatrixAnimationUsingPath\n  langs:\n  - csharp\n  name: Clone()\n  nameWithType: MatrixAnimationUsingPath.Clone()\n  fullName: MatrixAnimationUsingPath.Clone()\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Animation\n  summary: Creates a modifiable clone of this <xref href=\"System.Windows.Media.Animation.MatrixAnimationUsingPath\"></xref>, making deep copies of this object's values. When copying dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.\n  remarks: \"This method is used to produce modifiable copies of frozen <xref:System.Windows.Freezable> objects (or any <xref:System.Windows.Freezable> object). For convenience, this method shadows the inherited version with a strongly typed implementation.  \\n  \\n For more information, see <xref:System.Windows.Freezable.Clone%2A?displayProperty=fullName>.\"\n  syntax:\n    content: public System.Windows.Media.Animation.MatrixAnimationUsingPath Clone ();\n    parameters: []\n    return:\n      type: System.Windows.Media.Animation.MatrixAnimationUsingPath\n      description: A modifiable clone of the current object. The cloned object's <xref href=\"System.Windows.Freezable.IsFrozen\"></xref> property will be `false` even if the source's <xref href=\"System.Windows.Freezable.IsFrozen\"></xref> property was `true.`\n  overload: System.Windows.Media.Animation.MatrixAnimationUsingPath.Clone*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media.Animation/MatrixAnimationUsingPath.xml\n  ms.technology:\n  - dotnet-wpf\n  ms.author: kempb\n  manager: ghogen\n- uid: System.Windows.Media.Animation.MatrixAnimationUsingPath.CreateInstanceCore\n  commentId: M:System.Windows.Media.Animation.MatrixAnimationUsingPath.CreateInstanceCore\n  id: CreateInstanceCore\n  parent: System.Windows.Media.Animation.MatrixAnimationUsingPath\n  langs:\n  - csharp\n  name: CreateInstanceCore()\n  nameWithType: MatrixAnimationUsingPath.CreateInstanceCore()\n  fullName: MatrixAnimationUsingPath.CreateInstanceCore()\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Animation\n  summary: Creates a new instance of the <xref href=\"System.Windows.Media.Animation.MatrixAnimationUsingPath\"></xref>.\n  syntax:\n    content: protected override System.Windows.Freezable CreateInstanceCore ();\n    parameters: []\n    return:\n      type: System.Windows.Freezable\n      description: The new instance.\n  overload: System.Windows.Media.Animation.MatrixAnimationUsingPath.CreateInstanceCore*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media.Animation/MatrixAnimationUsingPath.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Media.Animation.MatrixAnimationUsingPath.DoesRotateWithTangent\n  commentId: P:System.Windows.Media.Animation.MatrixAnimationUsingPath.DoesRotateWithTangent\n  id: DoesRotateWithTangent\n  parent: System.Windows.Media.Animation.MatrixAnimationUsingPath\n  langs:\n  - csharp\n  name: DoesRotateWithTangent\n  nameWithType: MatrixAnimationUsingPath.DoesRotateWithTangent\n  fullName: MatrixAnimationUsingPath.DoesRotateWithTangent\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Animation\n  summary: Gets or sets a value indicating whether the object rotates along the tangent of the path.\n  remarks: \"Use property when you want the animated object to appear to \\\"slide\\\" along the animation path.  \\n  \\n<a name=\\\"dependencyPropertyInfo_DoesRotateWithTangent\\\"></a>   \\n## Dependency Property Information  \\n  \\n|||  \\n|-|-|  \\n|Identifier field|<xref:System.Windows.Media.Animation.MatrixAnimationUsingPath.DoesRotateWithTangentProperty>|  \\n|Metadata properties set to `true`|None|\"\n  syntax:\n    content: public bool DoesRotateWithTangent { get; set; }\n    return:\n      type: System.Boolean\n      description: '`true` if the object will rotate along the tangent of the path; otherwise, `false`. The default is `false`.'\n  overload: System.Windows.Media.Animation.MatrixAnimationUsingPath.DoesRotateWithTangent*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media.Animation/MatrixAnimationUsingPath.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Media.Animation.MatrixAnimationUsingPath.DoesRotateWithTangentProperty\n  commentId: F:System.Windows.Media.Animation.MatrixAnimationUsingPath.DoesRotateWithTangentProperty\n  id: DoesRotateWithTangentProperty\n  parent: System.Windows.Media.Animation.MatrixAnimationUsingPath\n  langs:\n  - csharp\n  name: DoesRotateWithTangentProperty\n  nameWithType: MatrixAnimationUsingPath.DoesRotateWithTangentProperty\n  fullName: MatrixAnimationUsingPath.DoesRotateWithTangentProperty\n  type: Field\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Animation\n  summary: Identifies the <xref href=\"System.Windows.Media.Animation.MatrixAnimationUsingPath.DoesRotateWithTangent\"></xref> dependency property.\n  syntax:\n    content: public static readonly System.Windows.DependencyProperty DoesRotateWithTangentProperty;\n    return:\n      type: System.Windows.DependencyProperty\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media.Animation/MatrixAnimationUsingPath.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Media.Animation.MatrixAnimationUsingPath.GetCurrentValueCore(System.Windows.Media.Matrix,System.Windows.Media.Matrix,System.Windows.Media.Animation.AnimationClock)\n  commentId: M:System.Windows.Media.Animation.MatrixAnimationUsingPath.GetCurrentValueCore(System.Windows.Media.Matrix,System.Windows.Media.Matrix,System.Windows.Media.Animation.AnimationClock)\n  id: GetCurrentValueCore(System.Windows.Media.Matrix,System.Windows.Media.Matrix,System.Windows.Media.Animation.AnimationClock)\n  parent: System.Windows.Media.Animation.MatrixAnimationUsingPath\n  langs:\n  - csharp\n  name: GetCurrentValueCore(Matrix, Matrix, AnimationClock)\n  nameWithType: MatrixAnimationUsingPath.GetCurrentValueCore(Matrix, Matrix, AnimationClock)\n  fullName: MatrixAnimationUsingPath.GetCurrentValueCore(Matrix, Matrix, AnimationClock)\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Animation\n  summary: Calculates a value that represents the current value of the property being animated, as determined by the <xref href=\"System.Windows.Media.Animation.MatrixAnimationUsingPath\"></xref>.\n  remarks: \"If the `defaultOriginValue` is the first in the composition chain, this value will be the snapshot value (if one is available) or the base property value; otherwise this value will be the value returned by the previous animation in the chain with an <xref:System.Windows.Media.Animation.AnimationClock> that is not <xref:System.Windows.Media.Animation.Clock.Stopped%2A>.  \\n  \\n The `defaultDestinationValue` is the base value if the animation is in the first composition layer of animations on a property; otherwise the value is the output value from the previous composition layer of animations for the property.\"\n  syntax:\n    content: protected override System.Windows.Media.Matrix GetCurrentValueCore (System.Windows.Media.Matrix defaultOriginValue, System.Windows.Media.Matrix defaultDestinationValue, System.Windows.Media.Animation.AnimationClock animationClock);\n    parameters:\n    - id: defaultOriginValue\n      type: System.Windows.Media.Matrix\n      description: The suggested origin value, used if the animation does not have its own explicitly set start value.\n    - id: defaultDestinationValue\n      type: System.Windows.Media.Matrix\n      description: The suggested destination value, used if the animation does not have its own explicitly set end value.\n    - id: animationClock\n      type: System.Windows.Media.Animation.AnimationClock\n      description: An <xref href=\"System.Windows.Media.Animation.AnimationClock\"></xref> that generates the <xref href=\"System.Windows.Media.Animation.Clock.CurrentTime\"></xref> or <xref href=\"System.Windows.Media.Animation.Clock.CurrentProgress\"></xref> used by the animation.\n    return:\n      type: System.Windows.Media.Matrix\n      description: The calculated value of the property, as determined by the current animation.\n  overload: System.Windows.Media.Animation.MatrixAnimationUsingPath.GetCurrentValueCore*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media.Animation/MatrixAnimationUsingPath.xml\n  ms.technology:\n  - dotnet-wpf\n  ms.author: kempb\n  manager: ghogen\n- uid: System.Windows.Media.Animation.MatrixAnimationUsingPath.IsAdditive\n  commentId: P:System.Windows.Media.Animation.MatrixAnimationUsingPath.IsAdditive\n  id: IsAdditive\n  parent: System.Windows.Media.Animation.MatrixAnimationUsingPath\n  langs:\n  - csharp\n  name: IsAdditive\n  nameWithType: MatrixAnimationUsingPath.IsAdditive\n  fullName: MatrixAnimationUsingPath.IsAdditive\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Animation\n  summary: Gets or sets a value that indicates whether the target property's current value should be added to this animation's starting value.\n  remarks: \"<a name=\\\"dependencyPropertyInfo_IsAdditive\\\"></a>   \\n## Dependency Property Information  \\n  \\n|||  \\n|-|-|  \\n|Identifier field|<xref:System.Windows.Media.Animation.AnimationTimeline.IsAdditiveProperty>|  \\n|Metadata properties set to `true`|None|  \\n  \\n> [!NOTE]\\n>  This dependency property is unusual because the identifier field for it comes from <xref:System.Windows.Media.Animation.AnimationTimeline> and is shared by various derived classes.\"\n  example:\n  - \"The following example uses two similar <xref:System.Windows.Media.Animation.MatrixAnimationUsingPath> animations to animate the same rectangle. The first animation's <xref:System.Windows.Media.Animation.MatrixAnimationUsingPath.IsAdditive%2A> property is set to `false`, so it always animates the rectangle from (0,0), the animation's starting value. The second animation has the same target values (their <xref:System.Windows.Media.Animation.MatrixAnimationUsingPath.PathGeometry%2A> settings are identical), but its <xref:System.Windows.Media.Animation.MatrixAnimationUsingPath.IsAdditive%2A> property is set to `true`; as a result, it animates the rectangle from whatever position it is at when the animation is applied.  \\n  \\n [!code-xml[PathAnimationGallery_snippet#MatrixAnimationUsingPathIsAdditiveExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/PathAnimationGallery_snippet/CS/matrixanimationusingpathisadditiveexample.xaml#matrixanimationusingpathisadditiveexamplewholepage)]\"\n  syntax:\n    content: public bool IsAdditive { get; set; }\n    return:\n      type: System.Boolean\n      description: \"`true` if the target property's current value should be added to this animation's starting value; otherwise, `false`. The default is `false`.\"\n  overload: System.Windows.Media.Animation.MatrixAnimationUsingPath.IsAdditive*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media.Animation/MatrixAnimationUsingPath.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Media.Animation.MatrixAnimationUsingPath.IsAngleCumulative\n  commentId: P:System.Windows.Media.Animation.MatrixAnimationUsingPath.IsAngleCumulative\n  id: IsAngleCumulative\n  parent: System.Windows.Media.Animation.MatrixAnimationUsingPath\n  langs:\n  - csharp\n  name: IsAngleCumulative\n  nameWithType: MatrixAnimationUsingPath.IsAngleCumulative\n  fullName: MatrixAnimationUsingPath.IsAngleCumulative\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Animation\n  summary: Gets or sets a value that specifies whether the rotation angle of the animated matrix should accumulate over repetitions.\n  remarks: \"If this property is set to `true`, the rotation angle of the animated matrix will accumulate as the animation repeats.  If your path is a small arc, a cumulative angle will cause your object to continuously rotate with each repeat instead of restarting the rotation.  When combined with an <xref:System.Windows.Media.Animation.MatrixAnimationUsingPath.IsOffsetCumulative%2A> of `true`, your object might appear to tumble while it bounces (depending on the path you specify). For related information, see <xref:System.Windows.Media.Animation.MatrixAnimationUsingPath.IsOffsetCumulative%2A>.  \\n  \\n Setting this property has no effect if <xref:System.Windows.Media.Animation.MatrixAnimationUsingPath.DoesRotateWithTangent%2A> is `false`.  \\n  \\n This property determines whether the animation matrix's angle accumulates when the animation repeats because of its <xref:System.Windows.Media.Animation.Timeline.RepeatBehavior%2A> setting; it does not cause the offset to accumulate when the animation is restarted. For information on how to make an animation build off a previous animation's values, see <xref:System.Windows.Media.Animation.MatrixAnimationUsingPath.IsAdditive%2A>.  \\n  \\n<a name=\\\"dependencyPropertyInfo_IsAngleCumulative\\\"></a>   \\n## Dependency Property Information  \\n  \\n|||  \\n|-|-|  \\n|Identifier field|<xref:System.Windows.Media.Animation.MatrixAnimationUsingPath.IsAngleCumulativeProperty>|  \\n|Metadata properties set to `true`|None|\"\n  example:\n  - \"The following example uses two similar <xref:System.Windows.Media.Animation.MatrixAnimationUsingPath> animations to animate the same rectangle. Both animations have the same <xref:System.Windows.Media.Animation.MatrixAnimationUsingPath.PathGeometry%2A> setting, which causes the rectangle to rotate as it moves along the screen to the right, and both animations are set to repeat four times. The first animation's <xref:System.Windows.Media.Animation.MatrixAnimationUsingPath.IsAngleCumulative%2A> property is set to `false`, so the rectangle jumps back to its original angle when the animation repeats. The second animation's <xref:System.Windows.Media.Animation.MatrixAnimationUsingPath.IsAngleCumulative%2A> property is set to `true`; as a result, the rectangle angle appears to increase when the animation repeats, rather than jumping back to its original value.  \\n  \\n [!code-xml[PathAnimationGallery_snippet#MatrixAnimationUsingPathIsAngleCumulativeExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/PathAnimationGallery_snippet/CS/matrixanimationusingpathisanglecumulativeexample.xaml#matrixanimationusingpathisanglecumulativeexamplewholepage)]\"\n  syntax:\n    content: public bool IsAngleCumulative { get; set; }\n    return:\n      type: System.Boolean\n      description: \"`true` if the animation's rotation angle should accumulate over repetitions; otherwise, `false`. The default is `false`.\"\n  overload: System.Windows.Media.Animation.MatrixAnimationUsingPath.IsAngleCumulative*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media.Animation/MatrixAnimationUsingPath.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Media.Animation.MatrixAnimationUsingPath.IsAngleCumulativeProperty\n  commentId: F:System.Windows.Media.Animation.MatrixAnimationUsingPath.IsAngleCumulativeProperty\n  id: IsAngleCumulativeProperty\n  parent: System.Windows.Media.Animation.MatrixAnimationUsingPath\n  langs:\n  - csharp\n  name: IsAngleCumulativeProperty\n  nameWithType: MatrixAnimationUsingPath.IsAngleCumulativeProperty\n  fullName: MatrixAnimationUsingPath.IsAngleCumulativeProperty\n  type: Field\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Animation\n  summary: Identifies the <xref href=\"System.Windows.Media.Animation.MatrixAnimationUsingPath.IsAngleCumulative\"></xref> dependency property.\n  syntax:\n    content: public static readonly System.Windows.DependencyProperty IsAngleCumulativeProperty;\n    return:\n      type: System.Windows.DependencyProperty\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media.Animation/MatrixAnimationUsingPath.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Media.Animation.MatrixAnimationUsingPath.IsOffsetCumulative\n  commentId: P:System.Windows.Media.Animation.MatrixAnimationUsingPath.IsOffsetCumulative\n  id: IsOffsetCumulative\n  parent: System.Windows.Media.Animation.MatrixAnimationUsingPath\n  langs:\n  - csharp\n  name: IsOffsetCumulative\n  nameWithType: MatrixAnimationUsingPath.IsOffsetCumulative\n  fullName: MatrixAnimationUsingPath.IsOffsetCumulative\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Animation\n  summary: Gets or sets a value indicating whether the offset produced by the animated matrix will accumulate over repetitions.\n  remarks: \"If this property is set to `true`, the offset of the animated matrix will accumulate as the animation repeats. For example, if the path is a small arc and the animation is set to repeat, a cumulative offset will cause the object to appear to bounce across the screen.  \\n  \\n This property determines whether the animation matrix's offset accumulates when the animation repeats because of its <xref:System.Windows.Media.Animation.Timeline.RepeatBehavior%2A> setting; it does not cause the offset to accumulate when the animation is restarted. For information on how to make an animation build off a previous animation's values, see <xref:System.Windows.Media.Animation.MatrixAnimationUsingPath.IsAdditive%2A>.  \\n  \\n<a name=\\\"dependencyPropertyInfo_IsOffsetCumulative\\\"></a>   \\n## Dependency Property Information  \\n  \\n|||  \\n|-|-|  \\n|Identifier field|<xref:System.Windows.Media.Animation.MatrixAnimationUsingPath.IsOffsetCumulativeProperty>|  \\n|Metadata properties set to `true`|None|\"\n  syntax:\n    content: public bool IsOffsetCumulative { get; set; }\n    return:\n      type: System.Boolean\n      description: '`true` if the object will accumulate over repeats of the animation; otherwise, `false`. The default is `false`.'\n  overload: System.Windows.Media.Animation.MatrixAnimationUsingPath.IsOffsetCumulative*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media.Animation/MatrixAnimationUsingPath.xml\n  ms.technology:\n  - dotnet-wpf\n  ms.author: kempb\n  manager: ghogen\n- uid: System.Windows.Media.Animation.MatrixAnimationUsingPath.IsOffsetCumulativeProperty\n  commentId: F:System.Windows.Media.Animation.MatrixAnimationUsingPath.IsOffsetCumulativeProperty\n  id: IsOffsetCumulativeProperty\n  parent: System.Windows.Media.Animation.MatrixAnimationUsingPath\n  langs:\n  - csharp\n  name: IsOffsetCumulativeProperty\n  nameWithType: MatrixAnimationUsingPath.IsOffsetCumulativeProperty\n  fullName: MatrixAnimationUsingPath.IsOffsetCumulativeProperty\n  type: Field\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Animation\n  summary: Identifies the <xref href=\"System.Windows.Media.Animation.MatrixAnimationUsingPath.IsOffsetCumulative\"></xref> dependency property.\n  syntax:\n    content: public static readonly System.Windows.DependencyProperty IsOffsetCumulativeProperty;\n    return:\n      type: System.Windows.DependencyProperty\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media.Animation/MatrixAnimationUsingPath.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Media.Animation.MatrixAnimationUsingPath.OnChanged\n  commentId: M:System.Windows.Media.Animation.MatrixAnimationUsingPath.OnChanged\n  id: OnChanged\n  parent: System.Windows.Media.Animation.MatrixAnimationUsingPath\n  langs:\n  - csharp\n  name: OnChanged()\n  nameWithType: MatrixAnimationUsingPath.OnChanged()\n  fullName: MatrixAnimationUsingPath.OnChanged()\n  type: Method\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Animation\n  summary: Called when this <xref href=\"System.Windows.Media.Animation.MatrixAnimationUsingPath\"></xref> is modified.\n  syntax:\n    content: protected override void OnChanged ();\n    parameters: []\n  overload: System.Windows.Media.Animation.MatrixAnimationUsingPath.OnChanged*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media.Animation/MatrixAnimationUsingPath.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Media.Animation.MatrixAnimationUsingPath.PathGeometry\n  commentId: P:System.Windows.Media.Animation.MatrixAnimationUsingPath.PathGeometry\n  id: PathGeometry\n  parent: System.Windows.Media.Animation.MatrixAnimationUsingPath\n  langs:\n  - csharp\n  name: PathGeometry\n  nameWithType: MatrixAnimationUsingPath.PathGeometry\n  fullName: MatrixAnimationUsingPath.PathGeometry\n  type: Property\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Animation\n  summary: Gets or sets the geometry used to generate this animation's output values.\n  remarks: \"A <xref:System.Windows.Media.PathGeometry> can describe complex shapes that contain curves and arcs, enabling you specify complex shapes for your animation input. For more information, see [Geometry Overview](~/docs/framework/wpf/graphics-multimedia/geometry-overview.md).  \\n  \\n<a name=\\\"dependencyPropertyInfo_PathGeometry\\\"></a>   \\n## Dependency Property Information  \\n  \\n|||  \\n|-|-|  \\n|Identifier field|<xref:System.Windows.Media.Animation.MatrixAnimationUsingPath.PathGeometryProperty>|  \\n|Metadata properties set to `true`|None|\"\n  syntax:\n    content: public System.Windows.Media.PathGeometry PathGeometry { get; set; }\n    return:\n      type: System.Windows.Media.PathGeometry\n      description: The geometry used to generate this animation's output values. The default is `null`.\n  overload: System.Windows.Media.Animation.MatrixAnimationUsingPath.PathGeometry*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media.Animation/MatrixAnimationUsingPath.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Media.Animation.MatrixAnimationUsingPath.PathGeometryProperty\n  commentId: F:System.Windows.Media.Animation.MatrixAnimationUsingPath.PathGeometryProperty\n  id: PathGeometryProperty\n  parent: System.Windows.Media.Animation.MatrixAnimationUsingPath\n  langs:\n  - csharp\n  name: PathGeometryProperty\n  nameWithType: MatrixAnimationUsingPath.PathGeometryProperty\n  fullName: MatrixAnimationUsingPath.PathGeometryProperty\n  type: Field\n  assemblies:\n  - PresentationCore\n  namespace: System.Windows.Media.Animation\n  summary: Identifies the <xref href=\"System.Windows.Media.Animation.MatrixAnimationUsingPath.PathGeometry\"></xref> dependency property.\n  syntax:\n    content: public static readonly System.Windows.DependencyProperty PathGeometryProperty;\n    return:\n      type: System.Windows.DependencyProperty\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media.Animation/MatrixAnimationUsingPath.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\nreferences:\n- uid: System.Windows.Media.Animation.MatrixAnimationBase\n  parent: System.Windows.Media.Animation\n  isExternal: false\n  name: MatrixAnimationBase\n  nameWithType: MatrixAnimationBase\n  fullName: System.Windows.Media.Animation.MatrixAnimationBase\n- uid: System.Windows.Media.Animation.MatrixAnimationUsingPath.#ctor\n  parent: System.Windows.Media.Animation.MatrixAnimationUsingPath\n  isExternal: false\n  name: MatrixAnimationUsingPath()\n  nameWithType: MatrixAnimationUsingPath.MatrixAnimationUsingPath()\n  fullName: MatrixAnimationUsingPath.MatrixAnimationUsingPath()\n- uid: System.Windows.Media.Animation.MatrixAnimationUsingPath.Clone\n  parent: System.Windows.Media.Animation.MatrixAnimationUsingPath\n  isExternal: false\n  name: Clone()\n  nameWithType: MatrixAnimationUsingPath.Clone()\n  fullName: MatrixAnimationUsingPath.Clone()\n- uid: System.Windows.Media.Animation.MatrixAnimationUsingPath\n  parent: System.Windows.Media.Animation\n  isExternal: false\n  name: MatrixAnimationUsingPath\n  nameWithType: MatrixAnimationUsingPath\n  fullName: System.Windows.Media.Animation.MatrixAnimationUsingPath\n- uid: System.Windows.Media.Animation.MatrixAnimationUsingPath.CreateInstanceCore\n  parent: System.Windows.Media.Animation.MatrixAnimationUsingPath\n  isExternal: false\n  name: CreateInstanceCore()\n  nameWithType: MatrixAnimationUsingPath.CreateInstanceCore()\n  fullName: MatrixAnimationUsingPath.CreateInstanceCore()\n- uid: System.Windows.Freezable\n  parent: System.Windows\n  isExternal: false\n  name: Freezable\n  nameWithType: Freezable\n  fullName: System.Windows.Freezable\n- uid: System.Windows.Media.Animation.MatrixAnimationUsingPath.DoesRotateWithTangent\n  parent: System.Windows.Media.Animation.MatrixAnimationUsingPath\n  isExternal: false\n  name: DoesRotateWithTangent\n  nameWithType: MatrixAnimationUsingPath.DoesRotateWithTangent\n  fullName: MatrixAnimationUsingPath.DoesRotateWithTangent\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Windows.Media.Animation.MatrixAnimationUsingPath.DoesRotateWithTangentProperty\n  parent: System.Windows.Media.Animation.MatrixAnimationUsingPath\n  isExternal: false\n  name: DoesRotateWithTangentProperty\n  nameWithType: MatrixAnimationUsingPath.DoesRotateWithTangentProperty\n  fullName: MatrixAnimationUsingPath.DoesRotateWithTangentProperty\n- uid: System.Windows.DependencyProperty\n  parent: System.Windows\n  isExternal: false\n  name: DependencyProperty\n  nameWithType: DependencyProperty\n  fullName: System.Windows.DependencyProperty\n- uid: System.Windows.Media.Animation.MatrixAnimationUsingPath.GetCurrentValueCore(System.Windows.Media.Matrix,System.Windows.Media.Matrix,System.Windows.Media.Animation.AnimationClock)\n  parent: System.Windows.Media.Animation.MatrixAnimationUsingPath\n  isExternal: false\n  name: GetCurrentValueCore(Matrix, Matrix, AnimationClock)\n  nameWithType: MatrixAnimationUsingPath.GetCurrentValueCore(Matrix, Matrix, AnimationClock)\n  fullName: MatrixAnimationUsingPath.GetCurrentValueCore(Matrix, Matrix, AnimationClock)\n- uid: System.Windows.Media.Matrix\n  parent: System.Windows.Media\n  isExternal: false\n  name: Matrix\n  nameWithType: Matrix\n  fullName: System.Windows.Media.Matrix\n- uid: System.Windows.Media.Animation.AnimationClock\n  parent: System.Windows.Media.Animation\n  isExternal: false\n  name: AnimationClock\n  nameWithType: AnimationClock\n  fullName: System.Windows.Media.Animation.AnimationClock\n- uid: System.Windows.Media.Animation.MatrixAnimationUsingPath.IsAdditive\n  parent: System.Windows.Media.Animation.MatrixAnimationUsingPath\n  isExternal: false\n  name: IsAdditive\n  nameWithType: MatrixAnimationUsingPath.IsAdditive\n  fullName: MatrixAnimationUsingPath.IsAdditive\n- uid: System.Windows.Media.Animation.MatrixAnimationUsingPath.IsAngleCumulative\n  parent: System.Windows.Media.Animation.MatrixAnimationUsingPath\n  isExternal: false\n  name: IsAngleCumulative\n  nameWithType: MatrixAnimationUsingPath.IsAngleCumulative\n  fullName: MatrixAnimationUsingPath.IsAngleCumulative\n- uid: System.Windows.Media.Animation.MatrixAnimationUsingPath.IsAngleCumulativeProperty\n  parent: System.Windows.Media.Animation.MatrixAnimationUsingPath\n  isExternal: false\n  name: IsAngleCumulativeProperty\n  nameWithType: MatrixAnimationUsingPath.IsAngleCumulativeProperty\n  fullName: MatrixAnimationUsingPath.IsAngleCumulativeProperty\n- uid: System.Windows.Media.Animation.MatrixAnimationUsingPath.IsOffsetCumulative\n  parent: System.Windows.Media.Animation.MatrixAnimationUsingPath\n  isExternal: false\n  name: IsOffsetCumulative\n  nameWithType: MatrixAnimationUsingPath.IsOffsetCumulative\n  fullName: MatrixAnimationUsingPath.IsOffsetCumulative\n- uid: System.Windows.Media.Animation.MatrixAnimationUsingPath.IsOffsetCumulativeProperty\n  parent: System.Windows.Media.Animation.MatrixAnimationUsingPath\n  isExternal: false\n  name: IsOffsetCumulativeProperty\n  nameWithType: MatrixAnimationUsingPath.IsOffsetCumulativeProperty\n  fullName: MatrixAnimationUsingPath.IsOffsetCumulativeProperty\n- uid: System.Windows.Media.Animation.MatrixAnimationUsingPath.OnChanged\n  parent: System.Windows.Media.Animation.MatrixAnimationUsingPath\n  isExternal: false\n  name: OnChanged()\n  nameWithType: MatrixAnimationUsingPath.OnChanged()\n  fullName: MatrixAnimationUsingPath.OnChanged()\n- uid: System.Windows.Media.Animation.MatrixAnimationUsingPath.PathGeometry\n  parent: System.Windows.Media.Animation.MatrixAnimationUsingPath\n  isExternal: false\n  name: PathGeometry\n  nameWithType: MatrixAnimationUsingPath.PathGeometry\n  fullName: MatrixAnimationUsingPath.PathGeometry\n- uid: System.Windows.Media.PathGeometry\n  parent: System.Windows.Media\n  isExternal: false\n  name: PathGeometry\n  nameWithType: PathGeometry\n  fullName: System.Windows.Media.PathGeometry\n- uid: System.Windows.Media.Animation.MatrixAnimationUsingPath.PathGeometryProperty\n  parent: System.Windows.Media.Animation.MatrixAnimationUsingPath\n  isExternal: false\n  name: PathGeometryProperty\n  nameWithType: MatrixAnimationUsingPath.PathGeometryProperty\n  fullName: MatrixAnimationUsingPath.PathGeometryProperty\n- uid: System.Windows.Media.Animation.MatrixAnimationUsingPath.#ctor*\n  parent: System.Windows.Media.Animation.MatrixAnimationUsingPath\n  isExternal: false\n  name: MatrixAnimationUsingPath\n  nameWithType: MatrixAnimationUsingPath.MatrixAnimationUsingPath\n  fullName: MatrixAnimationUsingPath.MatrixAnimationUsingPath\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media.Animation/MatrixAnimationUsingPath.xml\n- uid: System.Windows.Media.Animation.MatrixAnimationUsingPath.Clone*\n  parent: System.Windows.Media.Animation.MatrixAnimationUsingPath\n  isExternal: false\n  name: Clone\n  nameWithType: MatrixAnimationUsingPath.Clone\n  fullName: MatrixAnimationUsingPath.Clone\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media.Animation/MatrixAnimationUsingPath.xml\n- uid: System.Windows.Media.Animation.MatrixAnimationUsingPath.CreateInstanceCore*\n  parent: System.Windows.Media.Animation.MatrixAnimationUsingPath\n  isExternal: false\n  name: CreateInstanceCore\n  nameWithType: MatrixAnimationUsingPath.CreateInstanceCore\n  fullName: MatrixAnimationUsingPath.CreateInstanceCore\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media.Animation/MatrixAnimationUsingPath.xml\n- uid: System.Windows.Media.Animation.MatrixAnimationUsingPath.DoesRotateWithTangent*\n  parent: System.Windows.Media.Animation.MatrixAnimationUsingPath\n  isExternal: false\n  name: DoesRotateWithTangent\n  nameWithType: MatrixAnimationUsingPath.DoesRotateWithTangent\n  fullName: MatrixAnimationUsingPath.DoesRotateWithTangent\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media.Animation/MatrixAnimationUsingPath.xml\n- uid: System.Windows.Media.Animation.MatrixAnimationUsingPath.GetCurrentValueCore*\n  parent: System.Windows.Media.Animation.MatrixAnimationUsingPath\n  isExternal: false\n  name: GetCurrentValueCore\n  nameWithType: MatrixAnimationUsingPath.GetCurrentValueCore\n  fullName: MatrixAnimationUsingPath.GetCurrentValueCore\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media.Animation/MatrixAnimationUsingPath.xml\n- uid: System.Windows.Media.Animation.MatrixAnimationUsingPath.IsAdditive*\n  parent: System.Windows.Media.Animation.MatrixAnimationUsingPath\n  isExternal: false\n  name: IsAdditive\n  nameWithType: MatrixAnimationUsingPath.IsAdditive\n  fullName: MatrixAnimationUsingPath.IsAdditive\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media.Animation/MatrixAnimationUsingPath.xml\n- uid: System.Windows.Media.Animation.MatrixAnimationUsingPath.IsAngleCumulative*\n  parent: System.Windows.Media.Animation.MatrixAnimationUsingPath\n  isExternal: false\n  name: IsAngleCumulative\n  nameWithType: MatrixAnimationUsingPath.IsAngleCumulative\n  fullName: MatrixAnimationUsingPath.IsAngleCumulative\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media.Animation/MatrixAnimationUsingPath.xml\n- uid: System.Windows.Media.Animation.MatrixAnimationUsingPath.IsOffsetCumulative*\n  parent: System.Windows.Media.Animation.MatrixAnimationUsingPath\n  isExternal: false\n  name: IsOffsetCumulative\n  nameWithType: MatrixAnimationUsingPath.IsOffsetCumulative\n  fullName: MatrixAnimationUsingPath.IsOffsetCumulative\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media.Animation/MatrixAnimationUsingPath.xml\n- uid: System.Windows.Media.Animation.MatrixAnimationUsingPath.OnChanged*\n  parent: System.Windows.Media.Animation.MatrixAnimationUsingPath\n  isExternal: false\n  name: OnChanged\n  nameWithType: MatrixAnimationUsingPath.OnChanged\n  fullName: MatrixAnimationUsingPath.OnChanged\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media.Animation/MatrixAnimationUsingPath.xml\n- uid: System.Windows.Media.Animation.MatrixAnimationUsingPath.PathGeometry*\n  parent: System.Windows.Media.Animation.MatrixAnimationUsingPath\n  isExternal: false\n  name: PathGeometry\n  nameWithType: MatrixAnimationUsingPath.PathGeometry\n  fullName: MatrixAnimationUsingPath.PathGeometry\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Media.Animation/MatrixAnimationUsingPath.xml\n- uid: System.Windows.DependencyObject.Equals(System.Object)\n  parent: System.Windows.DependencyObject\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: DependencyObject.Equals(Object)\n  fullName: DependencyObject.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Windows.DependencyObject.GetHashCode\n  parent: System.Windows.DependencyObject\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: DependencyObject.GetHashCode()\n  fullName: DependencyObject.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.Windows.Threading.DispatcherObject.CheckAccess\n  parent: System.Windows.Threading.DispatcherObject\n  isExternal: false\n  name: CheckAccess()\n  nameWithType: DispatcherObject.CheckAccess()\n  fullName: DispatcherObject.CheckAccess()\n- uid: System.Windows.Threading.DispatcherObject.Dispatcher\n  parent: System.Windows.Threading.DispatcherObject\n  isExternal: false\n  name: Dispatcher\n  nameWithType: DispatcherObject.Dispatcher\n  fullName: DispatcherObject.Dispatcher\n- uid: System.Windows.Threading.DispatcherObject.VerifyAccess\n  parent: System.Windows.Threading.DispatcherObject\n  isExternal: false\n  name: VerifyAccess()\n  nameWithType: DispatcherObject.VerifyAccess()\n  fullName: DispatcherObject.VerifyAccess()\n- uid: System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)\n  parent: System.Windows.DependencyObject\n  isExternal: false\n  name: ClearValue(DependencyProperty)\n  nameWithType: DependencyObject.ClearValue(DependencyProperty)\n  fullName: DependencyObject.ClearValue(DependencyProperty)\n- uid: System.Windows.DependencyObject.ClearValue(System.Windows.DependencyPropertyKey)\n  parent: System.Windows.DependencyObject\n  isExternal: false\n  name: ClearValue(DependencyPropertyKey)\n  nameWithType: DependencyObject.ClearValue(DependencyPropertyKey)\n  fullName: DependencyObject.ClearValue(DependencyPropertyKey)\n- uid: System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)\n  parent: System.Windows.DependencyObject\n  isExternal: false\n  name: CoerceValue(DependencyProperty)\n  nameWithType: DependencyObject.CoerceValue(DependencyProperty)\n  fullName: DependencyObject.CoerceValue(DependencyProperty)\n- uid: System.Windows.DependencyObject.DependencyObjectType\n  parent: System.Windows.DependencyObject\n  isExternal: false\n  name: DependencyObjectType\n  nameWithType: DependencyObject.DependencyObjectType\n  fullName: DependencyObject.DependencyObjectType\n- uid: System.Windows.DependencyObject.GetLocalValueEnumerator\n  parent: System.Windows.DependencyObject\n  isExternal: false\n  name: GetLocalValueEnumerator()\n  nameWithType: DependencyObject.GetLocalValueEnumerator()\n  fullName: DependencyObject.GetLocalValueEnumerator()\n- uid: System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)\n  parent: System.Windows.DependencyObject\n  isExternal: false\n  name: GetValue(DependencyProperty)\n  nameWithType: DependencyObject.GetValue(DependencyProperty)\n  fullName: DependencyObject.GetValue(DependencyProperty)\n- uid: System.Windows.DependencyObject.InvalidateProperty(System.Windows.DependencyProperty)\n  parent: System.Windows.DependencyObject\n  isExternal: false\n  name: InvalidateProperty(DependencyProperty)\n  nameWithType: DependencyObject.InvalidateProperty(DependencyProperty)\n  fullName: DependencyObject.InvalidateProperty(DependencyProperty)\n- uid: System.Windows.DependencyObject.IsSealed\n  parent: System.Windows.DependencyObject\n  isExternal: false\n  name: IsSealed\n  nameWithType: DependencyObject.IsSealed\n  fullName: DependencyObject.IsSealed\n- uid: System.Windows.Freezable.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: OnPropertyChanged(DependencyPropertyChangedEventArgs)\n  nameWithType: Freezable.OnPropertyChanged(DependencyPropertyChangedEventArgs)\n  fullName: Freezable.OnPropertyChanged(DependencyPropertyChangedEventArgs)\n- uid: System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)\n  parent: System.Windows.DependencyObject\n  isExternal: false\n  name: ReadLocalValue(DependencyProperty)\n  nameWithType: DependencyObject.ReadLocalValue(DependencyProperty)\n  fullName: DependencyObject.ReadLocalValue(DependencyProperty)\n- uid: System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)\n  parent: System.Windows.DependencyObject\n  isExternal: false\n  name: SetCurrentValue(DependencyProperty, Object)\n  nameWithType: DependencyObject.SetCurrentValue(DependencyProperty, Object)\n  fullName: DependencyObject.SetCurrentValue(DependencyProperty, Object)\n- uid: System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)\n  parent: System.Windows.DependencyObject\n  isExternal: false\n  name: SetValue(DependencyProperty, Object)\n  nameWithType: DependencyObject.SetValue(DependencyProperty, Object)\n  fullName: DependencyObject.SetValue(DependencyProperty, Object)\n- uid: System.Windows.DependencyObject.SetValue(System.Windows.DependencyPropertyKey,System.Object)\n  parent: System.Windows.DependencyObject\n  isExternal: false\n  name: SetValue(DependencyPropertyKey, Object)\n  nameWithType: DependencyObject.SetValue(DependencyPropertyKey, Object)\n  fullName: DependencyObject.SetValue(DependencyPropertyKey, Object)\n- uid: System.Windows.DependencyObject.ShouldSerializeProperty(System.Windows.DependencyProperty)\n  parent: System.Windows.DependencyObject\n  isExternal: false\n  name: ShouldSerializeProperty(DependencyProperty)\n  nameWithType: DependencyObject.ShouldSerializeProperty(DependencyProperty)\n  fullName: DependencyObject.ShouldSerializeProperty(DependencyProperty)\n- uid: System.Windows.Freezable.CanFreeze\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: CanFreeze\n  nameWithType: Freezable.CanFreeze\n  fullName: Freezable.CanFreeze\n- uid: System.Windows.Freezable.Changed\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: Changed\n  nameWithType: Freezable.Changed\n  fullName: Freezable.Changed\n- uid: System.Windows.Freezable.CloneCore(System.Windows.Freezable)\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: CloneCore(Freezable)\n  nameWithType: Freezable.CloneCore(Freezable)\n  fullName: Freezable.CloneCore(Freezable)\n- uid: System.Windows.Media.Animation.Timeline.CloneCurrentValue\n  parent: System.Windows.Media.Animation.Timeline\n  isExternal: false\n  name: CloneCurrentValue()\n  nameWithType: Timeline.CloneCurrentValue()\n  fullName: Timeline.CloneCurrentValue()\n- uid: System.Windows.Freezable.CloneCurrentValueCore(System.Windows.Freezable)\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: CloneCurrentValueCore(Freezable)\n  nameWithType: Freezable.CloneCurrentValueCore(Freezable)\n  fullName: Freezable.CloneCurrentValueCore(Freezable)\n- uid: System.Windows.Freezable.CreateInstance\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: CreateInstance()\n  nameWithType: Freezable.CreateInstance()\n  fullName: Freezable.CreateInstance()\n- uid: System.Windows.Freezable.Freeze\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: Freeze()\n  nameWithType: Freezable.Freeze()\n  fullName: Freezable.Freeze()\n- uid: System.Windows.Freezable.Freeze(System.Windows.Freezable,System.Boolean)\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: Freeze(Freezable, Boolean)\n  nameWithType: Freezable.Freeze(Freezable, Boolean)\n  fullName: Freezable.Freeze(Freezable, Boolean)\n- uid: System.Windows.Media.Animation.Timeline.FreezeCore(System.Boolean)\n  parent: System.Windows.Media.Animation.Timeline\n  isExternal: false\n  name: FreezeCore(Boolean)\n  nameWithType: Timeline.FreezeCore(Boolean)\n  fullName: Timeline.FreezeCore(Boolean)\n- uid: System.Windows.Freezable.GetAsFrozen\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: GetAsFrozen()\n  nameWithType: Freezable.GetAsFrozen()\n  fullName: Freezable.GetAsFrozen()\n- uid: System.Windows.Media.Animation.Timeline.GetAsFrozenCore(System.Windows.Freezable)\n  parent: System.Windows.Media.Animation.Timeline\n  isExternal: false\n  name: GetAsFrozenCore(Freezable)\n  nameWithType: Timeline.GetAsFrozenCore(Freezable)\n  fullName: Timeline.GetAsFrozenCore(Freezable)\n- uid: System.Windows.Freezable.GetCurrentValueAsFrozen\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: GetCurrentValueAsFrozen()\n  nameWithType: Freezable.GetCurrentValueAsFrozen()\n  fullName: Freezable.GetCurrentValueAsFrozen()\n- uid: System.Windows.Media.Animation.Timeline.GetCurrentValueAsFrozenCore(System.Windows.Freezable)\n  parent: System.Windows.Media.Animation.Timeline\n  isExternal: false\n  name: GetCurrentValueAsFrozenCore(Freezable)\n  nameWithType: Timeline.GetCurrentValueAsFrozenCore(Freezable)\n  fullName: Timeline.GetCurrentValueAsFrozenCore(Freezable)\n- uid: System.Windows.Freezable.IsFrozen\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: IsFrozen\n  nameWithType: Freezable.IsFrozen\n  fullName: Freezable.IsFrozen\n- uid: System.Windows.Freezable.OnFreezablePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyObject)\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: OnFreezablePropertyChanged(DependencyObject, DependencyObject)\n  nameWithType: Freezable.OnFreezablePropertyChanged(DependencyObject, DependencyObject)\n  fullName: Freezable.OnFreezablePropertyChanged(DependencyObject, DependencyObject)\n- uid: System.Windows.Freezable.OnFreezablePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyObject,System.Windows.DependencyProperty)\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: OnFreezablePropertyChanged(DependencyObject, DependencyObject, DependencyProperty)\n  nameWithType: Freezable.OnFreezablePropertyChanged(DependencyObject, DependencyObject, DependencyProperty)\n  fullName: Freezable.OnFreezablePropertyChanged(DependencyObject, DependencyObject, DependencyProperty)\n- uid: System.Windows.Freezable.ReadPreamble\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: ReadPreamble()\n  nameWithType: Freezable.ReadPreamble()\n  fullName: Freezable.ReadPreamble()\n- uid: System.Windows.Freezable.WritePostscript\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: WritePostscript()\n  nameWithType: Freezable.WritePostscript()\n  fullName: Freezable.WritePostscript()\n- uid: System.Windows.Freezable.WritePreamble\n  parent: System.Windows.Freezable\n  isExternal: false\n  name: WritePreamble()\n  nameWithType: Freezable.WritePreamble()\n  fullName: Freezable.WritePreamble()\n- uid: System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock)\n  parent: System.Windows.Media.Animation.Animatable\n  isExternal: false\n  name: ApplyAnimationClock(DependencyProperty, AnimationClock)\n  nameWithType: Animatable.ApplyAnimationClock(DependencyProperty, AnimationClock)\n  fullName: Animatable.ApplyAnimationClock(DependencyProperty, AnimationClock)\n- uid: System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)\n  parent: System.Windows.Media.Animation.Animatable\n  isExternal: false\n  name: ApplyAnimationClock(DependencyProperty, AnimationClock, HandoffBehavior)\n  nameWithType: Animatable.ApplyAnimationClock(DependencyProperty, AnimationClock, HandoffBehavior)\n  fullName: Animatable.ApplyAnimationClock(DependencyProperty, AnimationClock, HandoffBehavior)\n- uid: System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline)\n  parent: System.Windows.Media.Animation.Animatable\n  isExternal: false\n  name: BeginAnimation(DependencyProperty, AnimationTimeline)\n  nameWithType: Animatable.BeginAnimation(DependencyProperty, AnimationTimeline)\n  fullName: Animatable.BeginAnimation(DependencyProperty, AnimationTimeline)\n- uid: System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)\n  parent: System.Windows.Media.Animation.Animatable\n  isExternal: false\n  name: BeginAnimation(DependencyProperty, AnimationTimeline, HandoffBehavior)\n  nameWithType: Animatable.BeginAnimation(DependencyProperty, AnimationTimeline, HandoffBehavior)\n  fullName: Animatable.BeginAnimation(DependencyProperty, AnimationTimeline, HandoffBehavior)\n- uid: System.Windows.Media.Animation.Animatable.GetAnimationBaseValue(System.Windows.DependencyProperty)\n  parent: System.Windows.Media.Animation.Animatable\n  isExternal: false\n  name: GetAnimationBaseValue(DependencyProperty)\n  nameWithType: Animatable.GetAnimationBaseValue(DependencyProperty)\n  fullName: Animatable.GetAnimationBaseValue(DependencyProperty)\n- uid: System.Windows.Media.Animation.Animatable.HasAnimatedProperties\n  parent: System.Windows.Media.Animation.Animatable\n  isExternal: false\n  name: HasAnimatedProperties\n  nameWithType: Animatable.HasAnimatedProperties\n  fullName: Animatable.HasAnimatedProperties\n- uid: System.Windows.Media.Animation.Animatable.ShouldSerializeStoredWeakReference(System.Windows.DependencyObject)\n  parent: System.Windows.Media.Animation.Animatable\n  isExternal: false\n  name: ShouldSerializeStoredWeakReference(DependencyObject)\n  nameWithType: Animatable.ShouldSerializeStoredWeakReference(DependencyObject)\n  fullName: Animatable.ShouldSerializeStoredWeakReference(DependencyObject)\n- uid: System.Windows.Media.Animation.Timeline.AccelerationRatio\n  parent: System.Windows.Media.Animation.Timeline\n  isExternal: false\n  name: AccelerationRatio\n  nameWithType: Timeline.AccelerationRatio\n  fullName: Timeline.AccelerationRatio\n- uid: System.Windows.Media.Animation.Timeline.AccelerationRatioProperty\n  parent: System.Windows.Media.Animation.Timeline\n  isExternal: false\n  name: AccelerationRatioProperty\n  nameWithType: Timeline.AccelerationRatioProperty\n  fullName: Timeline.AccelerationRatioProperty\n- uid: System.Windows.Media.Animation.AnimationTimeline.AllocateClock\n  parent: System.Windows.Media.Animation.AnimationTimeline\n  isExternal: false\n  name: AllocateClock()\n  nameWithType: AnimationTimeline.AllocateClock()\n  fullName: AnimationTimeline.AllocateClock()\n- uid: System.Windows.Media.Animation.Timeline.AutoReverse\n  parent: System.Windows.Media.Animation.Timeline\n  isExternal: false\n  name: AutoReverse\n  nameWithType: Timeline.AutoReverse\n  fullName: Timeline.AutoReverse\n- uid: System.Windows.Media.Animation.Timeline.AutoReverseProperty\n  parent: System.Windows.Media.Animation.Timeline\n  isExternal: false\n  name: AutoReverseProperty\n  nameWithType: Timeline.AutoReverseProperty\n  fullName: Timeline.AutoReverseProperty\n- uid: System.Windows.Media.Animation.Timeline.BeginTime\n  parent: System.Windows.Media.Animation.Timeline\n  isExternal: false\n  name: BeginTime\n  nameWithType: Timeline.BeginTime\n  fullName: Timeline.BeginTime\n- uid: System.Windows.Media.Animation.Timeline.BeginTimeProperty\n  parent: System.Windows.Media.Animation.Timeline\n  isExternal: false\n  name: BeginTimeProperty\n  nameWithType: Timeline.BeginTimeProperty\n  fullName: Timeline.BeginTimeProperty\n- uid: System.Windows.Media.Animation.Timeline.Completed\n  parent: System.Windows.Media.Animation.Timeline\n  isExternal: false\n  name: Completed\n  nameWithType: Timeline.Completed\n  fullName: Timeline.Completed\n- uid: System.Windows.Media.Animation.AnimationTimeline.CreateClock\n  parent: System.Windows.Media.Animation.AnimationTimeline\n  isExternal: false\n  name: CreateClock()\n  nameWithType: AnimationTimeline.CreateClock()\n  fullName: AnimationTimeline.CreateClock()\n- uid: System.Windows.Media.Animation.Timeline.CreateClock(System.Boolean)\n  parent: System.Windows.Media.Animation.Timeline\n  isExternal: false\n  name: CreateClock(Boolean)\n  nameWithType: Timeline.CreateClock(Boolean)\n  fullName: Timeline.CreateClock(Boolean)\n- uid: System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated\n  parent: System.Windows.Media.Animation.Timeline\n  isExternal: false\n  name: CurrentGlobalSpeedInvalidated\n  nameWithType: Timeline.CurrentGlobalSpeedInvalidated\n  fullName: Timeline.CurrentGlobalSpeedInvalidated\n- uid: System.Windows.Media.Animation.Timeline.CurrentStateInvalidated\n  parent: System.Windows.Media.Animation.Timeline\n  isExternal: false\n  name: CurrentStateInvalidated\n  nameWithType: Timeline.CurrentStateInvalidated\n  fullName: Timeline.CurrentStateInvalidated\n- uid: System.Windows.Media.Animation.Timeline.CurrentTimeInvalidated\n  parent: System.Windows.Media.Animation.Timeline\n  isExternal: false\n  name: CurrentTimeInvalidated\n  nameWithType: Timeline.CurrentTimeInvalidated\n  fullName: Timeline.CurrentTimeInvalidated\n- uid: System.Windows.Media.Animation.Timeline.DecelerationRatio\n  parent: System.Windows.Media.Animation.Timeline\n  isExternal: false\n  name: DecelerationRatio\n  nameWithType: Timeline.DecelerationRatio\n  fullName: Timeline.DecelerationRatio\n- uid: System.Windows.Media.Animation.Timeline.DecelerationRatioProperty\n  parent: System.Windows.Media.Animation.Timeline\n  isExternal: false\n  name: DecelerationRatioProperty\n  nameWithType: Timeline.DecelerationRatioProperty\n  fullName: Timeline.DecelerationRatioProperty\n- uid: System.Windows.Media.Animation.Timeline.DesiredFrameRateProperty\n  parent: System.Windows.Media.Animation.Timeline\n  isExternal: false\n  name: DesiredFrameRateProperty\n  nameWithType: Timeline.DesiredFrameRateProperty\n  fullName: Timeline.DesiredFrameRateProperty\n- uid: System.Windows.Media.Animation.Timeline.Duration\n  parent: System.Windows.Media.Animation.Timeline\n  isExternal: false\n  name: Duration\n  nameWithType: Timeline.Duration\n  fullName: Timeline.Duration\n- uid: System.Windows.Media.Animation.Timeline.DurationProperty\n  parent: System.Windows.Media.Animation.Timeline\n  isExternal: false\n  name: DurationProperty\n  nameWithType: Timeline.DurationProperty\n  fullName: Timeline.DurationProperty\n- uid: System.Windows.Media.Animation.Timeline.FillBehavior\n  parent: System.Windows.Media.Animation.Timeline\n  isExternal: false\n  name: FillBehavior\n  nameWithType: Timeline.FillBehavior\n  fullName: Timeline.FillBehavior\n- uid: System.Windows.Media.Animation.Timeline.FillBehaviorProperty\n  parent: System.Windows.Media.Animation.Timeline\n  isExternal: false\n  name: FillBehaviorProperty\n  nameWithType: Timeline.FillBehaviorProperty\n  fullName: Timeline.FillBehaviorProperty\n- uid: System.Windows.Media.Animation.Timeline.GetDesiredFrameRate(System.Windows.Media.Animation.Timeline)\n  parent: System.Windows.Media.Animation.Timeline\n  isExternal: false\n  name: GetDesiredFrameRate(Timeline)\n  nameWithType: Timeline.GetDesiredFrameRate(Timeline)\n  fullName: Timeline.GetDesiredFrameRate(Timeline)\n- uid: System.Windows.Media.Animation.Timeline.GetNaturalDuration(System.Windows.Media.Animation.Clock)\n  parent: System.Windows.Media.Animation.Timeline\n  isExternal: false\n  name: GetNaturalDuration(Clock)\n  nameWithType: Timeline.GetNaturalDuration(Clock)\n  fullName: Timeline.GetNaturalDuration(Clock)\n- uid: System.Windows.Media.Animation.AnimationTimeline.GetNaturalDurationCore(System.Windows.Media.Animation.Clock)\n  parent: System.Windows.Media.Animation.AnimationTimeline\n  isExternal: false\n  name: GetNaturalDurationCore(Clock)\n  nameWithType: AnimationTimeline.GetNaturalDurationCore(Clock)\n  fullName: AnimationTimeline.GetNaturalDurationCore(Clock)\n- uid: System.Windows.Media.Animation.Timeline.Name\n  parent: System.Windows.Media.Animation.Timeline\n  isExternal: false\n  name: Name\n  nameWithType: Timeline.Name\n  fullName: Timeline.Name\n- uid: System.Windows.Media.Animation.Timeline.NameProperty\n  parent: System.Windows.Media.Animation.Timeline\n  isExternal: false\n  name: NameProperty\n  nameWithType: Timeline.NameProperty\n  fullName: Timeline.NameProperty\n- uid: System.Windows.Media.Animation.Timeline.RemoveRequested\n  parent: System.Windows.Media.Animation.Timeline\n  isExternal: false\n  name: RemoveRequested\n  nameWithType: Timeline.RemoveRequested\n  fullName: Timeline.RemoveRequested\n- uid: System.Windows.Media.Animation.Timeline.RepeatBehavior\n  parent: System.Windows.Media.Animation.Timeline\n  isExternal: false\n  name: RepeatBehavior\n  nameWithType: Timeline.RepeatBehavior\n  fullName: Timeline.RepeatBehavior\n- uid: System.Windows.Media.Animation.Timeline.RepeatBehaviorProperty\n  parent: System.Windows.Media.Animation.Timeline\n  isExternal: false\n  name: RepeatBehaviorProperty\n  nameWithType: Timeline.RepeatBehaviorProperty\n  fullName: Timeline.RepeatBehaviorProperty\n- uid: System.Windows.Media.Animation.Timeline.SetDesiredFrameRate(System.Windows.Media.Animation.Timeline,System.Nullable{System.Int32})\n  parent: System.Windows.Media.Animation.Timeline\n  isExternal: false\n  name: SetDesiredFrameRate(Timeline, Nullable<Int32>)\n  nameWithType: Timeline.SetDesiredFrameRate(Timeline, Nullable<Int32>)\n  fullName: Timeline.SetDesiredFrameRate(Timeline, Nullable<Int32>)\n- uid: System.Windows.Media.Animation.Timeline.SpeedRatio\n  parent: System.Windows.Media.Animation.Timeline\n  isExternal: false\n  name: SpeedRatio\n  nameWithType: Timeline.SpeedRatio\n  fullName: Timeline.SpeedRatio\n- uid: System.Windows.Media.Animation.Timeline.SpeedRatioProperty\n  parent: System.Windows.Media.Animation.Timeline\n  isExternal: false\n  name: SpeedRatioProperty\n  nameWithType: Timeline.SpeedRatioProperty\n  fullName: Timeline.SpeedRatioProperty\n- uid: System.Windows.Media.Animation.MatrixAnimationBase.GetCurrentValue(System.Object,System.Object,System.Windows.Media.Animation.AnimationClock)\n  parent: System.Windows.Media.Animation.MatrixAnimationBase\n  isExternal: false\n  name: GetCurrentValue(Object, Object, AnimationClock)\n  nameWithType: MatrixAnimationBase.GetCurrentValue(Object, Object, AnimationClock)\n  fullName: MatrixAnimationBase.GetCurrentValue(Object, Object, AnimationClock)\n- uid: System.Windows.Media.Animation.AnimationTimeline.IsAdditiveProperty\n  parent: System.Windows.Media.Animation.AnimationTimeline\n  isExternal: false\n  name: IsAdditiveProperty\n  nameWithType: AnimationTimeline.IsAdditiveProperty\n  fullName: AnimationTimeline.IsAdditiveProperty\n- uid: System.Windows.Media.Animation.AnimationTimeline.IsCumulativeProperty\n  parent: System.Windows.Media.Animation.AnimationTimeline\n  isExternal: false\n  name: IsCumulativeProperty\n  nameWithType: AnimationTimeline.IsCumulativeProperty\n  fullName: AnimationTimeline.IsCumulativeProperty\n- uid: System.Windows.Media.Animation.AnimationTimeline.IsDestinationDefault\n  parent: System.Windows.Media.Animation.AnimationTimeline\n  isExternal: false\n  name: IsDestinationDefault\n  nameWithType: AnimationTimeline.IsDestinationDefault\n  fullName: AnimationTimeline.IsDestinationDefault\n- uid: System.Windows.Media.Animation.MatrixAnimationBase.TargetPropertyType\n  parent: System.Windows.Media.Animation.MatrixAnimationBase\n  isExternal: false\n  name: TargetPropertyType\n  nameWithType: MatrixAnimationBase.TargetPropertyType\n  fullName: MatrixAnimationBase.TargetPropertyType\n- uid: System.Windows.Media.Animation.MatrixAnimationBase.GetCurrentValue(System.Windows.Media.Matrix,System.Windows.Media.Matrix,System.Windows.Media.Animation.AnimationClock)\n  parent: System.Windows.Media.Animation.MatrixAnimationBase\n  isExternal: false\n  name: GetCurrentValue(Matrix, Matrix, AnimationClock)\n  nameWithType: MatrixAnimationBase.GetCurrentValue(Matrix, Matrix, AnimationClock)\n  fullName: MatrixAnimationBase.GetCurrentValue(Matrix, Matrix, AnimationClock)\n"}