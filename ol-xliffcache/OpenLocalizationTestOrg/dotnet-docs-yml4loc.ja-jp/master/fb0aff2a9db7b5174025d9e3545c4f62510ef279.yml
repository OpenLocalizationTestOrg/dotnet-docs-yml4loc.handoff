### YamlMime:ManagedReference
items:
- uid: System.Windows.Input.MouseDevice
  commentId: T:System.Windows.Input.MouseDevice
  id: MouseDevice
  children:
  - System.Windows.Input.MouseDevice.ActiveSource
  - System.Windows.Input.MouseDevice.Capture(System.Windows.IInputElement)
  - System.Windows.Input.MouseDevice.Capture(System.Windows.IInputElement,System.Windows.Input.CaptureMode)
  - System.Windows.Input.MouseDevice.Captured
  - System.Windows.Input.MouseDevice.DirectlyOver
  - System.Windows.Input.MouseDevice.GetButtonState(System.Windows.Input.MouseButton)
  - System.Windows.Input.MouseDevice.GetClientPosition
  - System.Windows.Input.MouseDevice.GetClientPosition(System.Windows.PresentationSource)
  - System.Windows.Input.MouseDevice.GetPosition(System.Windows.IInputElement)
  - System.Windows.Input.MouseDevice.GetScreenPosition
  - System.Windows.Input.MouseDevice.LeftButton
  - System.Windows.Input.MouseDevice.MiddleButton
  - System.Windows.Input.MouseDevice.OverrideCursor
  - System.Windows.Input.MouseDevice.RightButton
  - System.Windows.Input.MouseDevice.SetCursor(System.Windows.Input.Cursor)
  - System.Windows.Input.MouseDevice.Synchronize
  - System.Windows.Input.MouseDevice.Target
  - System.Windows.Input.MouseDevice.UpdateCursor
  - System.Windows.Input.MouseDevice.XButton1
  - System.Windows.Input.MouseDevice.XButton2
  langs:
  - csharp
  name: MouseDevice
  nameWithType: MouseDevice
  fullName: System.Windows.Input.MouseDevice
  type: Class
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: Represents a mouse device.
  remarks: "The <xref:System.Windows.Input.MouseDevice> supports the [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] infrastructure and is not intended to be used directly from your code.  \n  \n For mouse related input, use the <xref:System.Windows.Input.Mouse> class.  The <xref:System.Windows.Input.Mouse> class represents the mouse to an application and provides methods, properties, and events that reflect the state of the mouse."
  syntax:
    content: 'public abstract class MouseDevice : System.Windows.Input.InputDevice'
  inheritance:
  - System.Object
  - System.Windows.Threading.DispatcherObject
  - System.Windows.Input.InputDevice
  implements: []
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  - System.Windows.Threading.DispatcherObject.CheckAccess
  - System.Windows.Threading.DispatcherObject.Dispatcher
  - System.Windows.Threading.DispatcherObject.VerifyAccess
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/MouseDevice.xml
  ms.technology:
  - dotnet-wpf
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.Windows.Input.MouseDevice.ActiveSource
  commentId: P:System.Windows.Input.MouseDevice.ActiveSource
  id: ActiveSource
  parent: System.Windows.Input.MouseDevice
  langs:
  - csharp
  name: ActiveSource
  nameWithType: MouseDevice.ActiveSource
  fullName: MouseDevice.ActiveSource
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: Gets the <xref href="System.Windows.PresentationSource"></xref> that is reporting input for this device.
  syntax:
    content: >-
      [get: System.Security.SecurityCritical]

      public override System.Windows.PresentationSource ActiveSource { get; }
    return:
      type: System.Windows.PresentationSource
      description: The source of input for this device.
  overload: System.Windows.Input.MouseDevice.ActiveSource*
  exceptions: []
  attributes:
  - type: 'get: System.Security.SecurityCritical'
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/MouseDevice.xml
  ms.technology:
  - dotnet-wpf
  ms.author: kempb
  manager: ghogen
- uid: System.Windows.Input.MouseDevice.Capture(System.Windows.IInputElement)
  commentId: M:System.Windows.Input.MouseDevice.Capture(System.Windows.IInputElement)
  id: Capture(System.Windows.IInputElement)
  parent: System.Windows.Input.MouseDevice
  langs:
  - csharp
  name: Capture(IInputElement)
  nameWithType: MouseDevice.Capture(IInputElement)
  fullName: MouseDevice.Capture(IInputElement)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: Captures mouse events to the specified element.
  remarks: "When an element captures the mouse, it receives mouse input whether the cursor is within its borders  \n  \n If a <xref:System.Windows.Input.CaptureMode> is not specified, the default <xref:System.Windows.Input.CaptureMode> is <xref:System.Windows.Input.CaptureMode.Element>.  \n  \n To release mouse capture, call <xref:System.Windows.Input.MouseDevice.Capture%2A> passing `null` as the element to capture.  \n  \n If the mouse is captured when a <xref:System.Windows.Input.Mouse.MouseDown> or <xref:System.Windows.Input.Mouse.MouseUp> event is raised and the input is not going to the element underneath the mouse, <xref:System.Windows.Input.Mouse.PreviewMouseDownOutsideCapturedElement> and <xref:System.Windows.Input.Mouse.PreviewMouseUpOutsideCapturedElement> are raised first.  This enables the captured element a chance to release capture before the <xref:System.Windows.Input.Mouse.MouseDown> and <xref:System.Windows.Input.Mouse.MouseUp> events are routed."
  syntax:
    content: public bool Capture (System.Windows.IInputElement element);
    parameters:
    - id: element
      type: System.Windows.IInputElement
      description: The element to capture the mouse.
    return:
      type: System.Boolean
      description: '`true` if the element was able to capture the mouse; otherwise, `false`.'
  overload: System.Windows.Input.MouseDevice.Capture*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: <code>element</code> is not a <xref href="System.Windows.UIElement"></xref> or <xref href="System.Windows.ContentElement"></xref>.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/MouseDevice.xml
  ms.technology:
  - dotnet-wpf
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.Windows.Input.MouseDevice.Capture(System.Windows.IInputElement,System.Windows.Input.CaptureMode)
  commentId: M:System.Windows.Input.MouseDevice.Capture(System.Windows.IInputElement,System.Windows.Input.CaptureMode)
  id: Capture(System.Windows.IInputElement,System.Windows.Input.CaptureMode)
  parent: System.Windows.Input.MouseDevice
  langs:
  - csharp
  name: Capture(IInputElement, CaptureMode)
  nameWithType: MouseDevice.Capture(IInputElement, CaptureMode)
  fullName: MouseDevice.Capture(IInputElement, CaptureMode)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: Captures mouse input to the specified element using the specified <xref href="System.Windows.Input.CaptureMode"></xref>.
  remarks: "When an element captures the mouse, it receives mouse input whether or not the cursor is within its borders.  \n  \n To release mouse capture, call <xref:System.Windows.Input.MouseDevice.Capture%2A> passing `null` as the element to capture.  \n  \n If the mouse is captured when a <xref:System.Windows.Input.Mouse.MouseDown> or <xref:System.Windows.Input.Mouse.MouseUp> event is raised and the input is not going to the element underneath the mouse, <xref:System.Windows.Input.Mouse.PreviewMouseDownOutsideCapturedElement> and <xref:System.Windows.Input.Mouse.PreviewMouseUpOutsideCapturedElement> are raised first.  This enables the captured element a chance to release capture before the <xref:System.Windows.Input.Mouse.MouseDown> and <xref:System.Windows.Input.Mouse.MouseUp> events are routed."
  syntax:
    content: >-
      [System.Security.SecurityCritical]

      public bool Capture (System.Windows.IInputElement element, System.Windows.Input.CaptureMode captureMode);
    parameters:
    - id: element
      type: System.Windows.IInputElement
      description: The element to capture the mouse..
    - id: captureMode
      type: System.Windows.Input.CaptureMode
      description: The capture policy to use.
    return:
      type: System.Boolean
      description: '`true` if the element was able to capture the mouse; otherwise, `false`.'
  overload: System.Windows.Input.MouseDevice.Capture*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: <code>element</code> is not a <xref href="System.Windows.UIElement"></xref> or <xref href="System.Windows.ContentElement"></xref>.
  - type: System.ComponentModel.InvalidEnumArgumentException
    commentId: T:System.ComponentModel.InvalidEnumArgumentException
    description: <code>captureMode</code> is not a valid <xref href="System.Windows.Input.CaptureMode"></xref>.
  attributes:
  - type: System.Security.SecurityCriticalAttribute
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/MouseDevice.xml
  ms.technology:
  - dotnet-wpf
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.Windows.Input.MouseDevice.Captured
  commentId: P:System.Windows.Input.MouseDevice.Captured
  id: Captured
  parent: System.Windows.Input.MouseDevice
  langs:
  - csharp
  name: Captured
  nameWithType: MouseDevice.Captured
  fullName: MouseDevice.Captured
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: Gets the <xref href="System.Windows.IInputElement"></xref> that is captured by the mouse.
  remarks: When an element captures the mouse, it receives mouse input whether or not the cursor is within its borders.
  syntax:
    content: public System.Windows.IInputElement Captured { get; }
    return:
      type: System.Windows.IInputElement
      description: The element which is captured by the mouse.
  overload: System.Windows.Input.MouseDevice.Captured*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/MouseDevice.xml
  ms.technology:
  - dotnet-wpf
  ms.author: kempb
  manager: ghogen
- uid: System.Windows.Input.MouseDevice.DirectlyOver
  commentId: P:System.Windows.Input.MouseDevice.DirectlyOver
  id: DirectlyOver
  parent: System.Windows.Input.MouseDevice
  langs:
  - csharp
  name: DirectlyOver
  nameWithType: MouseDevice.DirectlyOver
  fullName: MouseDevice.DirectlyOver
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: Gets the element that the mouse pointer is directly over.
  remarks: "The mouse is considered directly over an element if the mouse has been captured to that element.  \n  \n Controls can be composed of multiple elements. <xref:System.Windows.Input.MouseDevice.DirectlyOver%2A> reports the specific element in the composite control the mouse pointer is over and not the control itself.  For example, depending on which part of a <xref:System.Windows.Controls.Button> the pointer is over, the <xref:System.Windows.Input.MouseDevice.DirectlyOver%2A> property could report the <xref:System.Windows.Controls.TextBox> of the <xref:System.Windows.Controls.ContentControl.Content%2A> property or the <xref:Microsoft.Windows.Themes.ButtonChrome>.  \n  \n Use the <xref:System.Windows.IInputElement.IsMouseOver%2A> property on <xref:System.Windows.UIElement> and <xref:System.Windows.ContentElement> to determine whether the mouse is over an element, which includes its visual child elements or control compositing elements."
  syntax:
    content: public System.Windows.IInputElement DirectlyOver { get; }
    return:
      type: System.Windows.IInputElement
      description: The element the mouse pointer is over.
  overload: System.Windows.Input.MouseDevice.DirectlyOver*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/MouseDevice.xml
  ms.technology:
  - dotnet-wpf
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.Windows.Input.MouseDevice.GetButtonState(System.Windows.Input.MouseButton)
  commentId: M:System.Windows.Input.MouseDevice.GetButtonState(System.Windows.Input.MouseButton)
  id: GetButtonState(System.Windows.Input.MouseButton)
  parent: System.Windows.Input.MouseDevice
  langs:
  - csharp
  name: GetButtonState(MouseButton)
  nameWithType: MouseDevice.GetButtonState(MouseButton)
  fullName: MouseDevice.GetButtonState(MouseButton)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: Gets the state of the specified mouse button.
  syntax:
    content: protected System.Windows.Input.MouseButtonState GetButtonState (System.Windows.Input.MouseButton mouseButton);
    parameters:
    - id: mouseButton
      type: System.Windows.Input.MouseButton
      description: The button which is being queried.
    return:
      type: System.Windows.Input.MouseButtonState
      description: The state of the button.
  overload: System.Windows.Input.MouseDevice.GetButtonState*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/MouseDevice.xml
  ms.technology:
  - dotnet-wpf
  ms.author: kempb
  manager: ghogen
- uid: System.Windows.Input.MouseDevice.GetClientPosition
  commentId: M:System.Windows.Input.MouseDevice.GetClientPosition
  id: GetClientPosition
  parent: System.Windows.Input.MouseDevice
  langs:
  - csharp
  name: GetClientPosition()
  nameWithType: MouseDevice.GetClientPosition()
  fullName: MouseDevice.GetClientPosition()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: Calculates the position of the mouse pointer, in client coordinates.
  syntax:
    content: >-
      [System.Security.SecurityCritical]

      [System.Security.SecurityTreatAsSafe]

      protected System.Windows.Point GetClientPosition ();
    parameters: []
    return:
      type: System.Windows.Point
      description: The position of the mouse pointer, in client coordinates.
  overload: System.Windows.Input.MouseDevice.GetClientPosition*
  exceptions: []
  attributes:
  - type: System.Security.SecurityCriticalAttribute
  - type: System.Security.SecurityTreatAsSafeAttribute
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/MouseDevice.xml
  ms.technology:
  - dotnet-wpf
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.Windows.Input.MouseDevice.GetClientPosition(System.Windows.PresentationSource)
  commentId: M:System.Windows.Input.MouseDevice.GetClientPosition(System.Windows.PresentationSource)
  id: GetClientPosition(System.Windows.PresentationSource)
  parent: System.Windows.Input.MouseDevice
  langs:
  - csharp
  name: GetClientPosition(PresentationSource)
  nameWithType: MouseDevice.GetClientPosition(PresentationSource)
  fullName: MouseDevice.GetClientPosition(PresentationSource)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: Calculates the position of the mouse pointer, in client coordinates, in the specified <xref href="System.Windows.PresentationSource"></xref>.
  syntax:
    content: protected System.Windows.Point GetClientPosition (System.Windows.PresentationSource presentationSource);
    parameters:
    - id: presentationSource
      type: System.Windows.PresentationSource
      description: The source in which to obtain the mouse position.
    return:
      type: System.Windows.Point
      description: The position of the mouse pointer, in client coordinates, in the specified <xref href="System.Windows.PresentationSource"></xref>.
  overload: System.Windows.Input.MouseDevice.GetClientPosition*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/MouseDevice.xml
  ms.technology:
  - dotnet-wpf
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.Windows.Input.MouseDevice.GetPosition(System.Windows.IInputElement)
  commentId: M:System.Windows.Input.MouseDevice.GetPosition(System.Windows.IInputElement)
  id: GetPosition(System.Windows.IInputElement)
  parent: System.Windows.Input.MouseDevice
  langs:
  - csharp
  name: GetPosition(IInputElement)
  nameWithType: MouseDevice.GetPosition(IInputElement)
  fullName: MouseDevice.GetPosition(IInputElement)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: Gets the position of the mouse relative to a specified element.
  remarks: The position of the mouse pointer is calculated relative to the specified <xref:System.Windows.IInputElement> with the upper-left corner of element being the point of origin, 0,0.
  syntax:
    content: >-
      [System.Security.SecurityCritical]

      public System.Windows.Point GetPosition (System.Windows.IInputElement relativeTo);
    parameters:
    - id: relativeTo
      type: System.Windows.IInputElement
      description: The frame of reference in which to calculate the position of the mouse.
    return:
      type: System.Windows.Point
      description: The position of the mouse relative to the parameter <code>relativeTo</code>.
  overload: System.Windows.Input.MouseDevice.GetPosition*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: <code>relativeTo</code> is `null` or is not a <xref href="System.Windows.UIElement"></xref> or <xref href="System.Windows.ContentElement"></xref>.
  attributes:
  - type: System.Security.SecurityCriticalAttribute
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/MouseDevice.xml
  ms.technology:
  - dotnet-wpf
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.Windows.Input.MouseDevice.GetScreenPosition
  commentId: M:System.Windows.Input.MouseDevice.GetScreenPosition
  id: GetScreenPosition
  parent: System.Windows.Input.MouseDevice
  langs:
  - csharp
  name: GetScreenPosition()
  nameWithType: MouseDevice.GetScreenPosition()
  fullName: MouseDevice.GetScreenPosition()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: Calculates the screen position of the mouse pointer.
  syntax:
    content: protected System.Windows.Point GetScreenPosition ();
    parameters: []
    return:
      type: System.Windows.Point
      description: The position of the mouse pointer.
  overload: System.Windows.Input.MouseDevice.GetScreenPosition*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/MouseDevice.xml
  ms.technology:
  - dotnet-wpf
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.Windows.Input.MouseDevice.LeftButton
  commentId: P:System.Windows.Input.MouseDevice.LeftButton
  id: LeftButton
  parent: System.Windows.Input.MouseDevice
  langs:
  - csharp
  name: LeftButton
  nameWithType: MouseDevice.LeftButton
  fullName: MouseDevice.LeftButton
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: Gets the state of the left mouse button of this mouse device.
  syntax:
    content: public System.Windows.Input.MouseButtonState LeftButton { get; }
    return:
      type: System.Windows.Input.MouseButtonState
      description: The state of the button.
  overload: System.Windows.Input.MouseDevice.LeftButton*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/MouseDevice.xml
  ms.technology:
  - dotnet-wpf
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.Windows.Input.MouseDevice.MiddleButton
  commentId: P:System.Windows.Input.MouseDevice.MiddleButton
  id: MiddleButton
  parent: System.Windows.Input.MouseDevice
  langs:
  - csharp
  name: MiddleButton
  nameWithType: MouseDevice.MiddleButton
  fullName: MouseDevice.MiddleButton
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: The state of the middle button of this mouse device.
  syntax:
    content: public System.Windows.Input.MouseButtonState MiddleButton { get; }
    return:
      type: System.Windows.Input.MouseButtonState
      description: The state of the button.
  overload: System.Windows.Input.MouseDevice.MiddleButton*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/MouseDevice.xml
  ms.technology:
  - dotnet-wpf
  ms.author: kempb
  manager: ghogen
- uid: System.Windows.Input.MouseDevice.OverrideCursor
  commentId: P:System.Windows.Input.MouseDevice.OverrideCursor
  id: OverrideCursor
  parent: System.Windows.Input.MouseDevice
  langs:
  - csharp
  name: OverrideCursor
  nameWithType: MouseDevice.OverrideCursor
  fullName: MouseDevice.OverrideCursor
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: Gets or sets the cursor for the entire application.
  remarks: "The <xref:System.Windows.Input.Cursor> that <xref:System.Windows.Input.MouseDevice.OverrideCursor%2A> is set to will be applied to the whole application.  \n  \n To clear the override <xref:System.Windows.Input.Cursor>, set <xref:System.Windows.Input.MouseDevice.OverrideCursor%2A> to `null`.  \n  \n Setting <xref:System.Windows.Input.MouseDevice.OverrideCursor%2A> to <xref:System.Windows.Input.Cursors.None%2A> will force the mouse cursor not to be displayed, but mouse events are still processed."
  syntax:
    content: public System.Windows.Input.Cursor OverrideCursor { get; set; }
    return:
      type: System.Windows.Input.Cursor
      description: The override cursor or `null` if <xref href="System.Windows.Input.MouseDevice.OverrideCursor"></xref> is not set.
  overload: System.Windows.Input.MouseDevice.OverrideCursor*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/MouseDevice.xml
  ms.technology:
  - dotnet-wpf
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.Windows.Input.MouseDevice.RightButton
  commentId: P:System.Windows.Input.MouseDevice.RightButton
  id: RightButton
  parent: System.Windows.Input.MouseDevice
  langs:
  - csharp
  name: RightButton
  nameWithType: MouseDevice.RightButton
  fullName: MouseDevice.RightButton
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: Gets the state of the right button of this mouse device.
  syntax:
    content: public System.Windows.Input.MouseButtonState RightButton { get; }
    return:
      type: System.Windows.Input.MouseButtonState
      description: The state of the button.
  overload: System.Windows.Input.MouseDevice.RightButton*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/MouseDevice.xml
  ms.technology:
  - dotnet-wpf
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.Windows.Input.MouseDevice.SetCursor(System.Windows.Input.Cursor)
  commentId: M:System.Windows.Input.MouseDevice.SetCursor(System.Windows.Input.Cursor)
  id: SetCursor(System.Windows.Input.Cursor)
  parent: System.Windows.Input.MouseDevice
  langs:
  - csharp
  name: SetCursor(Cursor)
  nameWithType: MouseDevice.SetCursor(Cursor)
  fullName: MouseDevice.SetCursor(Cursor)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: Sets the mouse pointer to the specified <xref href="System.Windows.Input.Cursor"></xref>
  remarks: Note that this cursor does not apply any particular <xref:System.Windows.UIElement>, but rather it applies to the whole application.
  syntax:
    content: >-
      [System.Security.SecurityCritical]

      public bool SetCursor (System.Windows.Input.Cursor cursor);
    parameters:
    - id: cursor
      type: System.Windows.Input.Cursor
      description: The cursor to set the mouse pointer to.
    return:
      type: System.Boolean
      description: '`true` if the mouse cursor is set; otherwise, `false`.'
  overload: System.Windows.Input.MouseDevice.SetCursor*
  exceptions: []
  attributes:
  - type: System.Security.SecurityCriticalAttribute
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/MouseDevice.xml
  ms.technology:
  - dotnet-wpf
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.Windows.Input.MouseDevice.Synchronize
  commentId: M:System.Windows.Input.MouseDevice.Synchronize
  id: Synchronize
  parent: System.Windows.Input.MouseDevice
  langs:
  - csharp
  name: Synchronize()
  nameWithType: MouseDevice.Synchronize()
  fullName: MouseDevice.Synchronize()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: Forces the mouse to resynchronize.
  remarks: The <xref:System.Windows.Input.MouseDevice> monitors layout changes and calls <xref:System.Windows.Input.MouseDevice.Synchronize%2A>.  There are cases in which the mouse input system must be forced to update for it to respond to changes.  For example, you must resynchronize the mouse on a timer.
  syntax:
    content: >-
      [System.Security.SecurityCritical]

      public void Synchronize ();
    parameters: []
  overload: System.Windows.Input.MouseDevice.Synchronize*
  exceptions: []
  attributes:
  - type: System.Security.SecurityCriticalAttribute
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/MouseDevice.xml
  ms.technology:
  - dotnet-wpf
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.Windows.Input.MouseDevice.Target
  commentId: P:System.Windows.Input.MouseDevice.Target
  id: Target
  parent: System.Windows.Input.MouseDevice
  langs:
  - csharp
  name: Target
  nameWithType: MouseDevice.Target
  fullName: MouseDevice.Target
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: Gets the <xref href="System.Windows.IInputElement"></xref> that the input from this mouse device is sent to.
  remarks: The target for a <xref:System.Windows.Input.MouseDevice> is the object the mouse is over or the object with mouse capture.
  syntax:
    content: public override System.Windows.IInputElement Target { get; }
    return:
      type: System.Windows.IInputElement
      description: The element that receives the input.
  overload: System.Windows.Input.MouseDevice.Target*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/MouseDevice.xml
  ms.technology:
  - dotnet-wpf
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.Windows.Input.MouseDevice.UpdateCursor
  commentId: M:System.Windows.Input.MouseDevice.UpdateCursor
  id: UpdateCursor
  parent: System.Windows.Input.MouseDevice
  langs:
  - csharp
  name: UpdateCursor()
  nameWithType: MouseDevice.UpdateCursor()
  fullName: MouseDevice.UpdateCursor()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: Forces the mouse cursor to update.
  syntax:
    content: public void UpdateCursor ();
    parameters: []
  overload: System.Windows.Input.MouseDevice.UpdateCursor*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/MouseDevice.xml
  ms.technology:
  - dotnet-wpf
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.Windows.Input.MouseDevice.XButton1
  commentId: P:System.Windows.Input.MouseDevice.XButton1
  id: XButton1
  parent: System.Windows.Input.MouseDevice
  langs:
  - csharp
  name: XButton1
  nameWithType: MouseDevice.XButton1
  fullName: MouseDevice.XButton1
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: Gets the state of the first extended button on this mouse device.
  syntax:
    content: public System.Windows.Input.MouseButtonState XButton1 { get; }
    return:
      type: System.Windows.Input.MouseButtonState
      description: The state of the button.
  overload: System.Windows.Input.MouseDevice.XButton1*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/MouseDevice.xml
  ms.technology:
  - dotnet-wpf
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.Windows.Input.MouseDevice.XButton2
  commentId: P:System.Windows.Input.MouseDevice.XButton2
  id: XButton2
  parent: System.Windows.Input.MouseDevice
  langs:
  - csharp
  name: XButton2
  nameWithType: MouseDevice.XButton2
  fullName: MouseDevice.XButton2
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Input
  summary: Gets the state of the second extended button of this mouse device.
  syntax:
    content: public System.Windows.Input.MouseButtonState XButton2 { get; }
    return:
      type: System.Windows.Input.MouseButtonState
      description: The state of the button.
  overload: System.Windows.Input.MouseDevice.XButton2*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/MouseDevice.xml
  ms.technology:
  - dotnet-wpf
  author: stevehoag
  ms.author: shoag
  manager: wpickett
references:
- uid: System.Windows.Input.InputDevice
  parent: System.Windows.Input
  isExternal: false
  name: InputDevice
  nameWithType: InputDevice
  fullName: System.Windows.Input.InputDevice
- uid: System.InvalidOperationException
  parent: System
  isExternal: false
  name: InvalidOperationException
  nameWithType: InvalidOperationException
  fullName: System.InvalidOperationException
- uid: System.ComponentModel.InvalidEnumArgumentException
  parent: System.ComponentModel
  isExternal: false
  name: InvalidEnumArgumentException
  nameWithType: InvalidEnumArgumentException
  fullName: System.ComponentModel.InvalidEnumArgumentException
- uid: System.Windows.Input.MouseDevice.ActiveSource
  parent: System.Windows.Input.MouseDevice
  isExternal: false
  name: ActiveSource
  nameWithType: MouseDevice.ActiveSource
  fullName: MouseDevice.ActiveSource
- uid: System.Windows.PresentationSource
  parent: System.Windows
  isExternal: false
  name: PresentationSource
  nameWithType: PresentationSource
  fullName: System.Windows.PresentationSource
- uid: System.Windows.Input.MouseDevice.Capture(System.Windows.IInputElement)
  parent: System.Windows.Input.MouseDevice
  isExternal: false
  name: Capture(IInputElement)
  nameWithType: MouseDevice.Capture(IInputElement)
  fullName: MouseDevice.Capture(IInputElement)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.IInputElement
  parent: System.Windows
  isExternal: false
  name: IInputElement
  nameWithType: IInputElement
  fullName: System.Windows.IInputElement
- uid: System.Windows.Input.MouseDevice.Capture(System.Windows.IInputElement,System.Windows.Input.CaptureMode)
  parent: System.Windows.Input.MouseDevice
  isExternal: false
  name: Capture(IInputElement, CaptureMode)
  nameWithType: MouseDevice.Capture(IInputElement, CaptureMode)
  fullName: MouseDevice.Capture(IInputElement, CaptureMode)
- uid: System.Windows.Input.CaptureMode
  parent: System.Windows.Input
  isExternal: false
  name: CaptureMode
  nameWithType: CaptureMode
  fullName: System.Windows.Input.CaptureMode
- uid: System.Windows.Input.MouseDevice.Captured
  parent: System.Windows.Input.MouseDevice
  isExternal: false
  name: Captured
  nameWithType: MouseDevice.Captured
  fullName: MouseDevice.Captured
- uid: System.Windows.Input.MouseDevice.DirectlyOver
  parent: System.Windows.Input.MouseDevice
  isExternal: false
  name: DirectlyOver
  nameWithType: MouseDevice.DirectlyOver
  fullName: MouseDevice.DirectlyOver
- uid: System.Windows.Input.MouseDevice.GetButtonState(System.Windows.Input.MouseButton)
  parent: System.Windows.Input.MouseDevice
  isExternal: false
  name: GetButtonState(MouseButton)
  nameWithType: MouseDevice.GetButtonState(MouseButton)
  fullName: MouseDevice.GetButtonState(MouseButton)
- uid: System.Windows.Input.MouseButtonState
  parent: System.Windows.Input
  isExternal: false
  name: MouseButtonState
  nameWithType: MouseButtonState
  fullName: System.Windows.Input.MouseButtonState
- uid: System.Windows.Input.MouseButton
  parent: System.Windows.Input
  isExternal: false
  name: MouseButton
  nameWithType: MouseButton
  fullName: System.Windows.Input.MouseButton
- uid: System.Windows.Input.MouseDevice.GetClientPosition
  parent: System.Windows.Input.MouseDevice
  isExternal: false
  name: GetClientPosition()
  nameWithType: MouseDevice.GetClientPosition()
  fullName: MouseDevice.GetClientPosition()
- uid: System.Windows.Point
  parent: System.Windows
  isExternal: false
  name: Point
  nameWithType: Point
  fullName: System.Windows.Point
- uid: System.Windows.Input.MouseDevice.GetClientPosition(System.Windows.PresentationSource)
  parent: System.Windows.Input.MouseDevice
  isExternal: false
  name: GetClientPosition(PresentationSource)
  nameWithType: MouseDevice.GetClientPosition(PresentationSource)
  fullName: MouseDevice.GetClientPosition(PresentationSource)
- uid: System.Windows.Input.MouseDevice.GetPosition(System.Windows.IInputElement)
  parent: System.Windows.Input.MouseDevice
  isExternal: false
  name: GetPosition(IInputElement)
  nameWithType: MouseDevice.GetPosition(IInputElement)
  fullName: MouseDevice.GetPosition(IInputElement)
- uid: System.Windows.Input.MouseDevice.GetScreenPosition
  parent: System.Windows.Input.MouseDevice
  isExternal: false
  name: GetScreenPosition()
  nameWithType: MouseDevice.GetScreenPosition()
  fullName: MouseDevice.GetScreenPosition()
- uid: System.Windows.Input.MouseDevice.LeftButton
  parent: System.Windows.Input.MouseDevice
  isExternal: false
  name: LeftButton
  nameWithType: MouseDevice.LeftButton
  fullName: MouseDevice.LeftButton
- uid: System.Windows.Input.MouseDevice.MiddleButton
  parent: System.Windows.Input.MouseDevice
  isExternal: false
  name: MiddleButton
  nameWithType: MouseDevice.MiddleButton
  fullName: MouseDevice.MiddleButton
- uid: System.Windows.Input.MouseDevice.OverrideCursor
  parent: System.Windows.Input.MouseDevice
  isExternal: false
  name: OverrideCursor
  nameWithType: MouseDevice.OverrideCursor
  fullName: MouseDevice.OverrideCursor
- uid: System.Windows.Input.Cursor
  parent: System.Windows.Input
  isExternal: false
  name: Cursor
  nameWithType: Cursor
  fullName: System.Windows.Input.Cursor
- uid: System.Windows.Input.MouseDevice.RightButton
  parent: System.Windows.Input.MouseDevice
  isExternal: false
  name: RightButton
  nameWithType: MouseDevice.RightButton
  fullName: MouseDevice.RightButton
- uid: System.Windows.Input.MouseDevice.SetCursor(System.Windows.Input.Cursor)
  parent: System.Windows.Input.MouseDevice
  isExternal: false
  name: SetCursor(Cursor)
  nameWithType: MouseDevice.SetCursor(Cursor)
  fullName: MouseDevice.SetCursor(Cursor)
- uid: System.Windows.Input.MouseDevice.Synchronize
  parent: System.Windows.Input.MouseDevice
  isExternal: false
  name: Synchronize()
  nameWithType: MouseDevice.Synchronize()
  fullName: MouseDevice.Synchronize()
- uid: System.Windows.Input.MouseDevice.Target
  parent: System.Windows.Input.MouseDevice
  isExternal: false
  name: Target
  nameWithType: MouseDevice.Target
  fullName: MouseDevice.Target
- uid: System.Windows.Input.MouseDevice.UpdateCursor
  parent: System.Windows.Input.MouseDevice
  isExternal: false
  name: UpdateCursor()
  nameWithType: MouseDevice.UpdateCursor()
  fullName: MouseDevice.UpdateCursor()
- uid: System.Windows.Input.MouseDevice.XButton1
  parent: System.Windows.Input.MouseDevice
  isExternal: false
  name: XButton1
  nameWithType: MouseDevice.XButton1
  fullName: MouseDevice.XButton1
- uid: System.Windows.Input.MouseDevice.XButton2
  parent: System.Windows.Input.MouseDevice
  isExternal: false
  name: XButton2
  nameWithType: MouseDevice.XButton2
  fullName: MouseDevice.XButton2
- uid: System.Windows.Input.MouseDevice.Capture*
  parent: System.Windows.Input.MouseDevice
  isExternal: false
  name: Capture
  nameWithType: MouseDevice.Capture
  fullName: MouseDevice.Capture
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/MouseDevice.xml
- uid: System.Windows.Input.MouseDevice.ActiveSource*
  parent: System.Windows.Input.MouseDevice
  isExternal: false
  name: ActiveSource
  nameWithType: MouseDevice.ActiveSource
  fullName: MouseDevice.ActiveSource
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/MouseDevice.xml
- uid: System.Windows.Input.MouseDevice.Captured*
  parent: System.Windows.Input.MouseDevice
  isExternal: false
  name: Captured
  nameWithType: MouseDevice.Captured
  fullName: MouseDevice.Captured
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/MouseDevice.xml
- uid: System.Windows.Input.MouseDevice.DirectlyOver*
  parent: System.Windows.Input.MouseDevice
  isExternal: false
  name: DirectlyOver
  nameWithType: MouseDevice.DirectlyOver
  fullName: MouseDevice.DirectlyOver
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/MouseDevice.xml
- uid: System.Windows.Input.MouseDevice.GetButtonState*
  parent: System.Windows.Input.MouseDevice
  isExternal: false
  name: GetButtonState
  nameWithType: MouseDevice.GetButtonState
  fullName: MouseDevice.GetButtonState
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/MouseDevice.xml
- uid: System.Windows.Input.MouseDevice.GetClientPosition*
  parent: System.Windows.Input.MouseDevice
  isExternal: false
  name: GetClientPosition
  nameWithType: MouseDevice.GetClientPosition
  fullName: MouseDevice.GetClientPosition
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/MouseDevice.xml
- uid: System.Windows.Input.MouseDevice.GetPosition*
  parent: System.Windows.Input.MouseDevice
  isExternal: false
  name: GetPosition
  nameWithType: MouseDevice.GetPosition
  fullName: MouseDevice.GetPosition
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/MouseDevice.xml
- uid: System.Windows.Input.MouseDevice.GetScreenPosition*
  parent: System.Windows.Input.MouseDevice
  isExternal: false
  name: GetScreenPosition
  nameWithType: MouseDevice.GetScreenPosition
  fullName: MouseDevice.GetScreenPosition
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/MouseDevice.xml
- uid: System.Windows.Input.MouseDevice.LeftButton*
  parent: System.Windows.Input.MouseDevice
  isExternal: false
  name: LeftButton
  nameWithType: MouseDevice.LeftButton
  fullName: MouseDevice.LeftButton
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/MouseDevice.xml
- uid: System.Windows.Input.MouseDevice.MiddleButton*
  parent: System.Windows.Input.MouseDevice
  isExternal: false
  name: MiddleButton
  nameWithType: MouseDevice.MiddleButton
  fullName: MouseDevice.MiddleButton
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/MouseDevice.xml
- uid: System.Windows.Input.MouseDevice.OverrideCursor*
  parent: System.Windows.Input.MouseDevice
  isExternal: false
  name: OverrideCursor
  nameWithType: MouseDevice.OverrideCursor
  fullName: MouseDevice.OverrideCursor
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/MouseDevice.xml
- uid: System.Windows.Input.MouseDevice.RightButton*
  parent: System.Windows.Input.MouseDevice
  isExternal: false
  name: RightButton
  nameWithType: MouseDevice.RightButton
  fullName: MouseDevice.RightButton
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/MouseDevice.xml
- uid: System.Windows.Input.MouseDevice.SetCursor*
  parent: System.Windows.Input.MouseDevice
  isExternal: false
  name: SetCursor
  nameWithType: MouseDevice.SetCursor
  fullName: MouseDevice.SetCursor
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/MouseDevice.xml
- uid: System.Windows.Input.MouseDevice.Synchronize*
  parent: System.Windows.Input.MouseDevice
  isExternal: false
  name: Synchronize
  nameWithType: MouseDevice.Synchronize
  fullName: MouseDevice.Synchronize
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/MouseDevice.xml
- uid: System.Windows.Input.MouseDevice.Target*
  parent: System.Windows.Input.MouseDevice
  isExternal: false
  name: Target
  nameWithType: MouseDevice.Target
  fullName: MouseDevice.Target
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/MouseDevice.xml
- uid: System.Windows.Input.MouseDevice.UpdateCursor*
  parent: System.Windows.Input.MouseDevice
  isExternal: false
  name: UpdateCursor
  nameWithType: MouseDevice.UpdateCursor
  fullName: MouseDevice.UpdateCursor
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/MouseDevice.xml
- uid: System.Windows.Input.MouseDevice.XButton1*
  parent: System.Windows.Input.MouseDevice
  isExternal: false
  name: XButton1
  nameWithType: MouseDevice.XButton1
  fullName: MouseDevice.XButton1
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/MouseDevice.xml
- uid: System.Windows.Input.MouseDevice.XButton2*
  parent: System.Windows.Input.MouseDevice
  isExternal: false
  name: XButton2
  nameWithType: MouseDevice.XButton2
  fullName: MouseDevice.XButton2
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Input/MouseDevice.xml
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: Object.Equals(Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: Object.Equals(Object, Object)
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: false
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: Object.GetHashCode()
- uid: System.Object.GetType
  parent: System.Object
  isExternal: false
  name: GetType()
  nameWithType: Object.GetType()
  fullName: Object.GetType()
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: false
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: Object.MemberwiseClone()
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: Object.ReferenceEquals(Object, Object)
- uid: System.Object.ToString
  parent: System.Object
  isExternal: false
  name: ToString()
  nameWithType: Object.ToString()
  fullName: Object.ToString()
- uid: System.Windows.Threading.DispatcherObject.CheckAccess
  parent: System.Windows.Threading.DispatcherObject
  isExternal: false
  name: CheckAccess()
  nameWithType: DispatcherObject.CheckAccess()
  fullName: DispatcherObject.CheckAccess()
- uid: System.Windows.Threading.DispatcherObject.Dispatcher
  parent: System.Windows.Threading.DispatcherObject
  isExternal: false
  name: Dispatcher
  nameWithType: DispatcherObject.Dispatcher
  fullName: DispatcherObject.Dispatcher
- uid: System.Windows.Threading.DispatcherObject.VerifyAccess
  parent: System.Windows.Threading.DispatcherObject
  isExternal: false
  name: VerifyAccess()
  nameWithType: DispatcherObject.VerifyAccess()
  fullName: DispatcherObject.VerifyAccess()
