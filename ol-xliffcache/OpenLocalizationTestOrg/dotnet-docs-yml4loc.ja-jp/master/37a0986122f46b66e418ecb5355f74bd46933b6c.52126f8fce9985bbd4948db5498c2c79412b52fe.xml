{"nodes":[{"content":"A concrete implementation of <xref href=\"System.IdentityModel.AsyncResult\"></xref> that will wrap the result <xref href=\"System.Type\"></xref> and return it when the <xref href=\"System.IdentityModel.TypedAsyncResult`1.End(System.IAsyncResult)\"></xref> method is called.","nodes":[{"pos":[0,268],"content":"A concrete implementation of <ph id=\"ph1\">&lt;xref href=\"System.IdentityModel.AsyncResult\"&gt;&lt;/xref&gt;</ph> that will wrap the result <ph id=\"ph2\">&lt;xref href=\"System.Type\"&gt;&lt;/xref&gt;</ph> and return it when the <ph id=\"ph3\">&lt;xref href=\"System.IdentityModel.TypedAsyncResult`1.End(System.IAsyncResult)\"&gt;&lt;/xref&gt;</ph> method is called.","source":"A concrete implementation of <xref href=\"System.IdentityModel.AsyncResult\"></xref> that will wrap the result <xref href=\"System.Type\"></xref> and return it when the <xref href=\"System.IdentityModel.TypedAsyncResult`1.End(System.IAsyncResult)\"></xref> method is called."}],"pos":[842,1111],"yaml":true},{"content":"The type of the result.","nodes":[{"pos":[0,23],"content":"The type of the result.","nodes":[{"content":"The type of the result.","pos":[0,23]}]}],"pos":[1255,1279],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.IdentityModel.TypedAsyncResult`1\"></xref> class that has a state object.","nodes":[{"pos":[0,125],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.IdentityModel.TypedAsyncResult`1\"&gt;&lt;/xref&gt;</ph> class that has a state object.","source":"Initializes a new instance of the <xref href=\"System.IdentityModel.TypedAsyncResult`1\"></xref> class that has a state object."}],"pos":[3145,3271],"yaml":true},{"content":"Use this constructor if your <xref:System.IdentityModel.TypedAsyncResult%601> instance does not need a callback delegate.","nodes":[{"pos":[0,121],"content":"Use this constructor if your <xref:System.IdentityModel.TypedAsyncResult%601> instance does not need a callback delegate.","nodes":[{"content":"Use this constructor if your <ph id=\"ph1\">&lt;xref:System.IdentityModel.TypedAsyncResult%601&gt;</ph> instance does not need a callback delegate.","pos":[0,121],"source":"Use this constructor if your <xref:System.IdentityModel.TypedAsyncResult%601> instance does not need a callback delegate."}]}],"pos":[3282,3404],"yaml":true,"extradata":"MT"},{"content":"A user-defined object that qualifies or contains information about an asynchronous operation.","nodes":[{"pos":[0,93],"content":"A user-defined object that qualifies or contains information about an asynchronous operation.","nodes":[{"content":"A user-defined object that qualifies or contains information about an asynchronous operation.","pos":[0,93]}]}],"pos":[3544,3638],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.IdentityModel.TypedAsyncResult`1\"></xref> class that has a callback delegate and a state object.","nodes":[{"pos":[0,149],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.IdentityModel.TypedAsyncResult`1\"&gt;&lt;/xref&gt;</ph> class that has a callback delegate and a state object.","source":"Initializes a new instance of the <xref href=\"System.IdentityModel.TypedAsyncResult`1\"></xref> class that has a callback delegate and a state object."}],"pos":[4850,5000],"yaml":true},{"content":"The method to be called when the asynchronous operation completes.","nodes":[{"pos":[0,66],"content":"The method to be called when the asynchronous operation completes.","nodes":[{"content":"The method to be called when the asynchronous operation completes.","pos":[0,66]}]}],"pos":[5174,5241],"yaml":true},{"content":"A user-defined object that qualifies or contains information about an asynchronous operation.","nodes":[{"pos":[0,93],"content":"A user-defined object that qualifies or contains information about an asynchronous operation.","nodes":[{"content":"A user-defined object that qualifies or contains information about an asynchronous operation.","pos":[0,93]}]}],"pos":[5302,5396],"yaml":true},{"content":"Call this version of complete when your asynchronous operation is complete and no exception was encountered. It updates the state of the operation and notifies the callback.","nodes":[{"pos":[0,173],"content":"Call this version of complete when your asynchronous operation is complete and no exception was encountered. It updates the state of the operation and notifies the callback.","nodes":[{"content":"Call this version of complete when your asynchronous operation is complete and no exception was encountered. It updates the state of the operation and notifies the callback.","pos":[0,173],"nodes":[{"content":"Call this version of complete when your asynchronous operation is complete and no exception was encountered.","pos":[0,108]},{"content":"It updates the state of the operation and notifies the callback.","pos":[109,173]}]}]}],"pos":[6493,6667],"yaml":true},{"content":"The result to be wrapped.","nodes":[{"pos":[0,25],"content":"The result to be wrapped.","nodes":[{"content":"The result to be wrapped.","pos":[0,25]}]}],"pos":[6818,6844],"yaml":true},{"content":"`true` if the asynchronous operation completed synchronously; otherwise `false`.","nodes":[{"pos":[0,80],"content":"<ph id=\"ph1\">`true`</ph> if the asynchronous operation completed synchronously; otherwise <ph id=\"ph2\">`false`</ph>.","source":"`true` if the asynchronous operation completed synchronously; otherwise `false`."}],"pos":[6923,7006],"yaml":true},{"content":"Call this version of complete if you raise an exception during processing. In addition to notifying the callback, it captures the exception and stores it to be thrown during the call to the <xref href=\"System.IdentityModel.TypedAsyncResult`1.End(System.IAsyncResult)\"></xref> method.","nodes":[{"pos":[0,283],"content":"Call this version of complete if you raise an exception during processing. In addition to notifying the callback, it captures the exception and stores it to be thrown during the call to the <xref href=\"System.IdentityModel.TypedAsyncResult`1.End(System.IAsyncResult)\"></xref> method.","nodes":[{"content":"Call this version of complete if you raise an exception during processing.","pos":[0,74]},{"content":"In addition to notifying the callback, it captures the exception and stores it to be thrown during the call to the <ph id=\"ph1\">&lt;xref href=\"System.IdentityModel.TypedAsyncResult`1.End(System.IAsyncResult)\"&gt;&lt;/xref&gt;</ph> method.","pos":[75,283],"source":" In addition to notifying the callback, it captures the exception and stores it to be thrown during the call to the <xref href=\"System.IdentityModel.TypedAsyncResult`1.End(System.IAsyncResult)\"></xref> method."}]}],"pos":[8190,8474],"yaml":true},{"content":"The result to be wrapped.","nodes":[{"pos":[0,25],"content":"The result to be wrapped.","nodes":[{"content":"The result to be wrapped.","pos":[0,25]}]}],"pos":[8646,8672],"yaml":true},{"content":"`true` if the asynchronous operation completed synchronously; otherwise `false`.","nodes":[{"pos":[0,80],"content":"<ph id=\"ph1\">`true`</ph> if the asynchronous operation completed synchronously; otherwise <ph id=\"ph2\">`false`</ph>.","source":"`true` if the asynchronous operation completed synchronously; otherwise `false`."}],"pos":[8751,8834],"yaml":true},{"content":"The exception that occurred during the processing of the asynchronous operation.","nodes":[{"pos":[0,80],"content":"The exception that occurred during the processing of the asynchronous operation.","nodes":[{"content":"The exception that occurred during the processing of the asynchronous operation.","pos":[0,80]}]}],"pos":[8902,8983],"yaml":true},{"content":"End should be called when the End function for the asynchronous operation is complete. It ensures the asynchronous operation is complete, and does some common validation.","nodes":[{"pos":[0,170],"content":"End should be called when the End function for the asynchronous operation is complete. It ensures the asynchronous operation is complete, and does some common validation.","nodes":[{"content":"End should be called when the End function for the asynchronous operation is complete. It ensures the asynchronous operation is complete, and does some common validation.","pos":[0,170],"nodes":[{"content":"End should be called when the End function for the asynchronous operation is complete.","pos":[0,86]},{"content":"It ensures the asynchronous operation is complete, and does some common validation.","pos":[87,170]}]}]}],"pos":[10065,10236],"yaml":true},{"content":"The <xref href=\"System.IAsyncResult\"></xref> representing the status of an asynchronous operation.","nodes":[{"pos":[0,98],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.IAsyncResult\"&gt;&lt;/xref&gt;</ph> representing the status of an asynchronous operation.","source":"The <xref href=\"System.IAsyncResult\"></xref> representing the status of an asynchronous operation."}],"pos":[10386,10485],"yaml":true},{"content":"The typed result of the asynchronous operation.","nodes":[{"pos":[0,47],"content":"The typed result of the asynchronous operation.","nodes":[{"content":"The typed result of the asynchronous operation.","pos":[0,47]}]}],"pos":[10530,10578],"yaml":true},{"content":"Gets the typed result of the completed asynchronous operation.","nodes":[{"pos":[0,62],"content":"Gets the typed result of the completed asynchronous operation.","nodes":[{"content":"Gets the typed result of the completed asynchronous operation.","pos":[0,62]}]}],"pos":[11570,11633],"yaml":true},{"content":"The typed result of the completed asynchronous operation.","nodes":[{"pos":[0,57],"content":"The typed result of the completed asynchronous operation.","nodes":[{"content":"The typed result of the completed asynchronous operation.","pos":[0,57]}]}],"pos":[11726,11784],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.IdentityModel.TypedAsyncResult`1\n  commentId: T:System.IdentityModel.TypedAsyncResult`1\n  id: TypedAsyncResult`1\n  children:\n  - System.IdentityModel.TypedAsyncResult`1.#ctor(System.Object)\n  - System.IdentityModel.TypedAsyncResult`1.#ctor(System.AsyncCallback,System.Object)\n  - System.IdentityModel.TypedAsyncResult`1.Complete(`0,System.Boolean)\n  - System.IdentityModel.TypedAsyncResult`1.Complete(`0,System.Boolean,System.Exception)\n  - System.IdentityModel.TypedAsyncResult`1.End(System.IAsyncResult)\n  - System.IdentityModel.TypedAsyncResult`1.Result\n  langs:\n  - csharp\n  name: TypedAsyncResult<T>\n  nameWithType: TypedAsyncResult<T>\n  fullName: System.IdentityModel.TypedAsyncResult<T>\n  type: Class\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel\n  summary: A concrete implementation of <xref href=\"System.IdentityModel.AsyncResult\"></xref> that will wrap the result <xref href=\"System.Type\"></xref> and return it when the <xref href=\"System.IdentityModel.TypedAsyncResult`1.End(System.IAsyncResult)\"></xref> method is called.\n  syntax:\n    content: 'public class TypedAsyncResult<T> : System.IdentityModel.AsyncResult'\n    typeParameters:\n    - id: T\n      description: The type of the result.\n  inheritance:\n  - System.Object\n  - System.IdentityModel.AsyncResult\n  implements: []\n  inheritedMembers:\n  - System.IdentityModel.AsyncResult.AsyncState\n  - System.IdentityModel.AsyncResult.AsyncWaitHandle\n  - System.IdentityModel.AsyncResult.Complete(System.Boolean)\n  - System.IdentityModel.AsyncResult.Complete(System.Boolean,System.Exception)\n  - System.IdentityModel.AsyncResult.CompletedSynchronously\n  - System.IdentityModel.AsyncResult.Dispose\n  - System.IdentityModel.AsyncResult.Dispose(System.Boolean)\n  - System.IdentityModel.AsyncResult.IsCompleted\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel/TypedAsyncResult`1.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: v-jibran\n  manager: markgal\n- uid: System.IdentityModel.TypedAsyncResult`1.#ctor(System.Object)\n  commentId: M:System.IdentityModel.TypedAsyncResult`1.#ctor(System.Object)\n  id: '#ctor(System.Object)'\n  parent: System.IdentityModel.TypedAsyncResult`1\n  langs:\n  - csharp\n  name: TypedAsyncResult<T>(Object)\n  nameWithType: TypedAsyncResult<T>.TypedAsyncResult<T>(Object)\n  fullName: TypedAsyncResult<T>.TypedAsyncResult<T>(Object)\n  type: Constructor\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel\n  summary: Initializes a new instance of the <xref href=\"System.IdentityModel.TypedAsyncResult`1\"></xref> class that has a state object.\n  remarks: Use this constructor if your <xref:System.IdentityModel.TypedAsyncResult%601> instance does not need a callback delegate.\n  syntax:\n    content: public TypedAsyncResult (object state);\n    parameters:\n    - id: state\n      type: System.Object\n      description: A user-defined object that qualifies or contains information about an asynchronous operation.\n  overload: System.IdentityModel.TypedAsyncResult`1.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel/TypedAsyncResult`1.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: v-jibran\n  manager: markgal\n- uid: System.IdentityModel.TypedAsyncResult`1.#ctor(System.AsyncCallback,System.Object)\n  commentId: M:System.IdentityModel.TypedAsyncResult`1.#ctor(System.AsyncCallback,System.Object)\n  id: '#ctor(System.AsyncCallback,System.Object)'\n  parent: System.IdentityModel.TypedAsyncResult`1\n  langs:\n  - csharp\n  name: TypedAsyncResult<T>(AsyncCallback, Object)\n  nameWithType: TypedAsyncResult<T>.TypedAsyncResult<T>(AsyncCallback, Object)\n  fullName: TypedAsyncResult<T>.TypedAsyncResult<T>(AsyncCallback, Object)\n  type: Constructor\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel\n  summary: Initializes a new instance of the <xref href=\"System.IdentityModel.TypedAsyncResult`1\"></xref> class that has a callback delegate and a state object.\n  syntax:\n    content: public TypedAsyncResult (AsyncCallback callback, object state);\n    parameters:\n    - id: callback\n      type: System.AsyncCallback\n      description: The method to be called when the asynchronous operation completes.\n    - id: state\n      type: System.Object\n      description: A user-defined object that qualifies or contains information about an asynchronous operation.\n  overload: System.IdentityModel.TypedAsyncResult`1.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel/TypedAsyncResult`1.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: v-jibran\n  manager: markgal\n- uid: System.IdentityModel.TypedAsyncResult`1.Complete(`0,System.Boolean)\n  commentId: M:System.IdentityModel.TypedAsyncResult`1.Complete(`0,System.Boolean)\n  id: Complete(`0,System.Boolean)\n  parent: System.IdentityModel.TypedAsyncResult`1\n  langs:\n  - csharp\n  name: Complete(T, Boolean)\n  nameWithType: TypedAsyncResult<T>.Complete(T, Boolean)\n  fullName: TypedAsyncResult<T>.Complete(T, Boolean)\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel\n  summary: Call this version of complete when your asynchronous operation is complete and no exception was encountered. It updates the state of the operation and notifies the callback.\n  syntax:\n    content: public void Complete (T result, bool completedSynchronously);\n    parameters:\n    - id: result\n      type: T\n      description: The result to be wrapped.\n    - id: completedSynchronously\n      type: System.Boolean\n      description: '`true` if the asynchronous operation completed synchronously; otherwise `false`.'\n  overload: System.IdentityModel.TypedAsyncResult`1.Complete*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel/TypedAsyncResult`1.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: v-jibran\n  manager: markgal\n- uid: System.IdentityModel.TypedAsyncResult`1.Complete(`0,System.Boolean,System.Exception)\n  commentId: M:System.IdentityModel.TypedAsyncResult`1.Complete(`0,System.Boolean,System.Exception)\n  id: Complete(`0,System.Boolean,System.Exception)\n  parent: System.IdentityModel.TypedAsyncResult`1\n  langs:\n  - csharp\n  name: Complete(T, Boolean, Exception)\n  nameWithType: TypedAsyncResult<T>.Complete(T, Boolean, Exception)\n  fullName: TypedAsyncResult<T>.Complete(T, Boolean, Exception)\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel\n  summary: Call this version of complete if you raise an exception during processing. In addition to notifying the callback, it captures the exception and stores it to be thrown during the call to the <xref href=\"System.IdentityModel.TypedAsyncResult`1.End(System.IAsyncResult)\"></xref> method.\n  syntax:\n    content: public void Complete (T result, bool completedSynchronously, Exception exception);\n    parameters:\n    - id: result\n      type: T\n      description: The result to be wrapped.\n    - id: completedSynchronously\n      type: System.Boolean\n      description: '`true` if the asynchronous operation completed synchronously; otherwise `false`.'\n    - id: exception\n      type: System.Exception\n      description: The exception that occurred during the processing of the asynchronous operation.\n  overload: System.IdentityModel.TypedAsyncResult`1.Complete*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel/TypedAsyncResult`1.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: v-jibran\n  manager: markgal\n- uid: System.IdentityModel.TypedAsyncResult`1.End(System.IAsyncResult)\n  commentId: M:System.IdentityModel.TypedAsyncResult`1.End(System.IAsyncResult)\n  id: End(System.IAsyncResult)\n  parent: System.IdentityModel.TypedAsyncResult`1\n  langs:\n  - csharp\n  name: End(IAsyncResult)\n  nameWithType: TypedAsyncResult<T>.End(IAsyncResult)\n  fullName: TypedAsyncResult<T>.End(IAsyncResult)\n  type: Method\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel\n  summary: End should be called when the End function for the asynchronous operation is complete. It ensures the asynchronous operation is complete, and does some common validation.\n  syntax:\n    content: public static T End (IAsyncResult result);\n    parameters:\n    - id: result\n      type: System.IAsyncResult\n      description: The <xref href=\"System.IAsyncResult\"></xref> representing the status of an asynchronous operation.\n    return:\n      type: T\n      description: The typed result of the asynchronous operation.\n  overload: System.IdentityModel.TypedAsyncResult`1.End*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel/TypedAsyncResult`1.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: v-jibran\n  manager: markgal\n- uid: System.IdentityModel.TypedAsyncResult`1.Result\n  commentId: P:System.IdentityModel.TypedAsyncResult`1.Result\n  id: Result\n  parent: System.IdentityModel.TypedAsyncResult`1\n  langs:\n  - csharp\n  name: Result\n  nameWithType: TypedAsyncResult<T>.Result\n  fullName: TypedAsyncResult<T>.Result\n  type: Property\n  assemblies:\n  - System.IdentityModel\n  namespace: System.IdentityModel\n  summary: Gets the typed result of the completed asynchronous operation.\n  syntax:\n    content: public T Result { get; }\n    return:\n      type: T\n      description: The typed result of the completed asynchronous operation.\n  overload: System.IdentityModel.TypedAsyncResult`1.Result*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel/TypedAsyncResult`1.xml\n  ms.technology:\n  - dotnet-standard\n  ms.author: v-jibran\n  manager: markgal\nreferences:\n- uid: System.IdentityModel.AsyncResult\n  parent: System.IdentityModel\n  isExternal: false\n  name: AsyncResult\n  nameWithType: AsyncResult\n  fullName: System.IdentityModel.AsyncResult\n- uid: System.IdentityModel.TypedAsyncResult`1.#ctor(System.Object)\n  parent: System.IdentityModel.TypedAsyncResult`1\n  isExternal: false\n  name: TypedAsyncResult<T>(Object)\n  nameWithType: TypedAsyncResult<T>.TypedAsyncResult<T>(Object)\n  fullName: TypedAsyncResult<T>.TypedAsyncResult<T>(Object)\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.IdentityModel.TypedAsyncResult`1.#ctor(System.AsyncCallback,System.Object)\n  parent: System.IdentityModel.TypedAsyncResult`1\n  isExternal: false\n  name: TypedAsyncResult<T>(AsyncCallback, Object)\n  nameWithType: TypedAsyncResult<T>.TypedAsyncResult<T>(AsyncCallback, Object)\n  fullName: TypedAsyncResult<T>.TypedAsyncResult<T>(AsyncCallback, Object)\n- uid: System.AsyncCallback\n  parent: System\n  isExternal: false\n  name: AsyncCallback\n  nameWithType: AsyncCallback\n  fullName: System.AsyncCallback\n- uid: System.IdentityModel.TypedAsyncResult`1.Complete(`0,System.Boolean)\n  parent: System.IdentityModel.TypedAsyncResult`1\n  isExternal: false\n  name: Complete(T, Boolean)\n  nameWithType: TypedAsyncResult<T>.Complete(T, Boolean)\n  fullName: TypedAsyncResult<T>.Complete(T, Boolean)\n- uid: T\n  isExternal: true\n  name: T\n  nameWithType: T\n  fullName: T\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.IdentityModel.TypedAsyncResult`1.Complete(`0,System.Boolean,System.Exception)\n  parent: System.IdentityModel.TypedAsyncResult`1\n  isExternal: false\n  name: Complete(T, Boolean, Exception)\n  nameWithType: TypedAsyncResult<T>.Complete(T, Boolean, Exception)\n  fullName: TypedAsyncResult<T>.Complete(T, Boolean, Exception)\n- uid: System.Exception\n  parent: System\n  isExternal: false\n  name: Exception\n  nameWithType: Exception\n  fullName: System.Exception\n- uid: System.IdentityModel.TypedAsyncResult`1.End(System.IAsyncResult)\n  parent: System.IdentityModel.TypedAsyncResult`1\n  isExternal: false\n  name: End(IAsyncResult)\n  nameWithType: TypedAsyncResult<T>.End(IAsyncResult)\n  fullName: TypedAsyncResult<T>.End(IAsyncResult)\n- uid: System.IAsyncResult\n  parent: System\n  isExternal: false\n  name: IAsyncResult\n  nameWithType: IAsyncResult\n  fullName: System.IAsyncResult\n- uid: System.IdentityModel.TypedAsyncResult`1.Result\n  parent: System.IdentityModel.TypedAsyncResult`1\n  isExternal: false\n  name: Result\n  nameWithType: TypedAsyncResult<T>.Result\n  fullName: TypedAsyncResult<T>.Result\n- uid: System.IdentityModel.TypedAsyncResult`1.#ctor*\n  parent: System.IdentityModel.TypedAsyncResult`1\n  isExternal: false\n  name: TypedAsyncResult<T>\n  nameWithType: TypedAsyncResult<T>.TypedAsyncResult<T>\n  fullName: TypedAsyncResult<T>.TypedAsyncResult<T>\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel/TypedAsyncResult`1.xml\n- uid: System.IdentityModel.TypedAsyncResult`1.Complete*\n  parent: System.IdentityModel.TypedAsyncResult`1\n  isExternal: false\n  name: Complete\n  nameWithType: TypedAsyncResult<T>.Complete\n  fullName: TypedAsyncResult<T>.Complete\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel/TypedAsyncResult`1.xml\n- uid: System.IdentityModel.TypedAsyncResult`1.End*\n  parent: System.IdentityModel.TypedAsyncResult`1\n  isExternal: false\n  name: End\n  nameWithType: TypedAsyncResult<T>.End\n  fullName: TypedAsyncResult<T>.End\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel/TypedAsyncResult`1.xml\n- uid: System.IdentityModel.TypedAsyncResult`1.Result*\n  parent: System.IdentityModel.TypedAsyncResult`1\n  isExternal: false\n  name: Result\n  nameWithType: TypedAsyncResult<T>.Result\n  fullName: TypedAsyncResult<T>.Result\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.IdentityModel/TypedAsyncResult`1.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.IdentityModel.AsyncResult.AsyncState\n  parent: System.IdentityModel.AsyncResult\n  isExternal: false\n  name: AsyncState\n  nameWithType: AsyncResult.AsyncState\n  fullName: AsyncResult.AsyncState\n- uid: System.IdentityModel.AsyncResult.AsyncWaitHandle\n  parent: System.IdentityModel.AsyncResult\n  isExternal: false\n  name: AsyncWaitHandle\n  nameWithType: AsyncResult.AsyncWaitHandle\n  fullName: AsyncResult.AsyncWaitHandle\n- uid: System.IdentityModel.AsyncResult.Complete(System.Boolean)\n  parent: System.IdentityModel.AsyncResult\n  isExternal: false\n  name: Complete(Boolean)\n  nameWithType: AsyncResult.Complete(Boolean)\n  fullName: AsyncResult.Complete(Boolean)\n- uid: System.IdentityModel.AsyncResult.Complete(System.Boolean,System.Exception)\n  parent: System.IdentityModel.AsyncResult\n  isExternal: false\n  name: Complete(Boolean, Exception)\n  nameWithType: AsyncResult.Complete(Boolean, Exception)\n  fullName: AsyncResult.Complete(Boolean, Exception)\n- uid: System.IdentityModel.AsyncResult.CompletedSynchronously\n  parent: System.IdentityModel.AsyncResult\n  isExternal: false\n  name: CompletedSynchronously\n  nameWithType: AsyncResult.CompletedSynchronously\n  fullName: AsyncResult.CompletedSynchronously\n- uid: System.IdentityModel.AsyncResult.Dispose\n  parent: System.IdentityModel.AsyncResult\n  isExternal: false\n  name: Dispose()\n  nameWithType: AsyncResult.Dispose()\n  fullName: AsyncResult.Dispose()\n- uid: System.IdentityModel.AsyncResult.Dispose(System.Boolean)\n  parent: System.IdentityModel.AsyncResult\n  isExternal: false\n  name: Dispose(Boolean)\n  nameWithType: AsyncResult.Dispose(Boolean)\n  fullName: AsyncResult.Dispose(Boolean)\n- uid: System.IdentityModel.AsyncResult.IsCompleted\n  parent: System.IdentityModel.AsyncResult\n  isExternal: false\n  name: IsCompleted\n  nameWithType: AsyncResult.IsCompleted\n  fullName: AsyncResult.IsCompleted\n"}