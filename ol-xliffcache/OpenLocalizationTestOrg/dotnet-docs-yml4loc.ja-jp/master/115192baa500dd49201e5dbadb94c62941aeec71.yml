### YamlMime:ManagedReference
items:
- uid: System.AddIn.Contract.IListContract`1
  commentId: T:System.AddIn.Contract.IListContract`1
  id: IListContract`1
  children:
  - System.AddIn.Contract.IListContract`1.Add(`0)
  - System.AddIn.Contract.IListContract`1.Clear
  - System.AddIn.Contract.IListContract`1.Contains(`0)
  - System.AddIn.Contract.IListContract`1.GetCount
  - System.AddIn.Contract.IListContract`1.GetEnumeratorContract
  - System.AddIn.Contract.IListContract`1.GetIsReadOnly
  - System.AddIn.Contract.IListContract`1.GetItem(System.Int32)
  - System.AddIn.Contract.IListContract`1.IndexOf(`0)
  - System.AddIn.Contract.IListContract`1.Insert(System.Int32,`0)
  - System.AddIn.Contract.IListContract`1.Remove(`0)
  - System.AddIn.Contract.IListContract`1.RemoveAt(System.Int32)
  - System.AddIn.Contract.IListContract`1.SetItem(System.Int32,`0)
  langs:
  - csharp
  name: IListContract<T>
  nameWithType: IListContract<T>
  fullName: System.AddIn.Contract.IListContract<T>
  type: Interface
  assemblies:
  - System.AddIn.Contract
  namespace: System.AddIn.Contract
  summary: Represents a generic list of types that are defined by a contract and are used to pass collections of that contract type between a host and an add-in.
  remarks: "The <xref:System.AddIn.Pipeline.CollectionAdapters> class uses an <xref:System.AddIn.Contract.IListContract%601> interface to pass collections, in both directions, between the host and the add-in. It is recommended that you use the <xref:System.AddIn.Pipeline.CollectionAdapters> class instead of using this class directly in your code. For an example, see [Walkthrough: Passing Collections Between Hosts and Add-Ins](http://msdn.microsoft.com/en-us/b532c604-548e-4fab-b11c-377257dd0ee5).  \n  \n This class can be used to pass objects by reference between application domains because the objects are not serialized."
  syntax:
    content: 'public interface IListContract<T> : System.AddIn.Contract.IContract'
    typeParameters:
    - id: T
      description: The contract type of the objects in the list.
  implements:
  - System.AddIn.Contract.IContract
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.AddIn.Contract/IListContract`1.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.AddIn.Contract.IListContract`1.Add(`0)
  commentId: M:System.AddIn.Contract.IListContract`1.Add(`0)
  id: Add(`0)
  parent: System.AddIn.Contract.IListContract`1
  langs:
  - csharp
  name: Add(T)
  nameWithType: IListContract<T>.Add(T)
  fullName: IListContract<T>.Add(T)
  type: Method
  assemblies:
  - System.AddIn.Contract
  namespace: System.AddIn.Contract
  summary: Adds an object to an <xref href="System.AddIn.Contract.IListContract`1"></xref> collection.
  remarks: The `item` parameter must be of a type that is defined by the contract.
  syntax:
    content: public void Add (T item);
    parameters:
    - id: item
      type: T
      description: The object to add.
  overload: System.AddIn.Contract.IListContract`1.Add*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.AddIn.Contract/IListContract`1.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.AddIn.Contract.IListContract`1.Clear
  commentId: M:System.AddIn.Contract.IListContract`1.Clear
  id: Clear
  parent: System.AddIn.Contract.IListContract`1
  langs:
  - csharp
  name: Clear()
  nameWithType: IListContract<T>.Clear()
  fullName: IListContract<T>.Clear()
  type: Method
  assemblies:
  - System.AddIn.Contract
  namespace: System.AddIn.Contract
  summary: Removes all objects from an <xref href="System.AddIn.Contract.IListContract`1"></xref> collection.
  syntax:
    content: public void Clear ();
    parameters: []
  overload: System.AddIn.Contract.IListContract`1.Clear*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.AddIn.Contract/IListContract`1.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.AddIn.Contract.IListContract`1.Contains(`0)
  commentId: M:System.AddIn.Contract.IListContract`1.Contains(`0)
  id: Contains(`0)
  parent: System.AddIn.Contract.IListContract`1
  langs:
  - csharp
  name: Contains(T)
  nameWithType: IListContract<T>.Contains(T)
  fullName: IListContract<T>.Contains(T)
  type: Method
  assemblies:
  - System.AddIn.Contract
  namespace: System.AddIn.Contract
  summary: Determines whether a specific item is in an <xref href="System.AddIn.Contract.IListContract`1"></xref> collection.
  syntax:
    content: public bool Contains (T item);
    parameters:
    - id: item
      type: T
      description: The object to look for in the collection.
    return:
      type: System.Boolean
      description: '`true` if <code>item</code> is in the collection; otherwise, `false`.'
  overload: System.AddIn.Contract.IListContract`1.Contains*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.AddIn.Contract/IListContract`1.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.AddIn.Contract.IListContract`1.GetCount
  commentId: M:System.AddIn.Contract.IListContract`1.GetCount
  id: GetCount
  parent: System.AddIn.Contract.IListContract`1
  langs:
  - csharp
  name: GetCount()
  nameWithType: IListContract<T>.GetCount()
  fullName: IListContract<T>.GetCount()
  type: Method
  assemblies:
  - System.AddIn.Contract
  namespace: System.AddIn.Contract
  summary: Gets the number of items in an <xref href="System.AddIn.Contract.IListContract`1"></xref> collection.
  syntax:
    content: public int GetCount ();
    parameters: []
    return:
      type: System.Int32
      description: The number of items in the collection.
  overload: System.AddIn.Contract.IListContract`1.GetCount*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.AddIn.Contract/IListContract`1.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.AddIn.Contract.IListContract`1.GetEnumeratorContract
  commentId: M:System.AddIn.Contract.IListContract`1.GetEnumeratorContract
  id: GetEnumeratorContract
  parent: System.AddIn.Contract.IListContract`1
  langs:
  - csharp
  name: GetEnumeratorContract()
  nameWithType: IListContract<T>.GetEnumeratorContract()
  fullName: IListContract<T>.GetEnumeratorContract()
  type: Method
  assemblies:
  - System.AddIn.Contract
  namespace: System.AddIn.Contract
  summary: Returns an enumerator that iterates through an <xref href="System.AddIn.Contract.IListContract`1"></xref> collection.
  syntax:
    content: public System.AddIn.Contract.IEnumeratorContract<T> GetEnumeratorContract ();
    parameters: []
    return:
      type: System.AddIn.Contract.IEnumeratorContract`1
      description: An <xref href="System.AddIn.Contract.IEnumeratorContract`1"></xref> enumerator to iterate through the collection.
  overload: System.AddIn.Contract.IListContract`1.GetEnumeratorContract*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.AddIn.Contract/IListContract`1.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.AddIn.Contract.IListContract`1.GetIsReadOnly
  commentId: M:System.AddIn.Contract.IListContract`1.GetIsReadOnly
  id: GetIsReadOnly
  parent: System.AddIn.Contract.IListContract`1
  langs:
  - csharp
  name: GetIsReadOnly()
  nameWithType: IListContract<T>.GetIsReadOnly()
  fullName: IListContract<T>.GetIsReadOnly()
  type: Method
  assemblies:
  - System.AddIn.Contract
  namespace: System.AddIn.Contract
  summary: Determines whether an <xref href="System.AddIn.Contract.IListContract`1"></xref> collection is read-only.
  syntax:
    content: public bool GetIsReadOnly ();
    parameters: []
    return:
      type: System.Boolean
      description: '`true` if the collection is read-only; otherwise, `false`.'
  overload: System.AddIn.Contract.IListContract`1.GetIsReadOnly*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.AddIn.Contract/IListContract`1.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.AddIn.Contract.IListContract`1.GetItem(System.Int32)
  commentId: M:System.AddIn.Contract.IListContract`1.GetItem(System.Int32)
  id: GetItem(System.Int32)
  parent: System.AddIn.Contract.IListContract`1
  langs:
  - csharp
  name: GetItem(Int32)
  nameWithType: IListContract<T>.GetItem(Int32)
  fullName: IListContract<T>.GetItem(Int32)
  type: Method
  assemblies:
  - System.AddIn.Contract
  namespace: System.AddIn.Contract
  summary: Returns the item at the specified index of an <xref href="System.AddIn.Contract.IListContract`1"></xref> collection.
  remarks: The <xref:System.AddIn.Contract.IListContract%601.GetItem%2A> method does not remove the item at the specified index. To remove an item from the <xref:System.AddIn.Contract.IListContract%601> collection, use the <xref:System.AddIn.Contract.IListContract%601.RemoveAt%2A> method.
  syntax:
    content: public T GetItem (int index);
    parameters:
    - id: index
      type: System.Int32
      description: The zero-based index of the item to get.
    return:
      type: T
      description: The item at the specified index.
  overload: System.AddIn.Contract.IListContract`1.GetItem*
  exceptions:
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: "<code>index</code> is less than zero.  \n  \n -or-  \n  \n <code>index</code> is equal to or greater than the return value of <xref href=\"System.AddIn.Contract.IListContract`1.GetCount\"></xref>."
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.AddIn.Contract/IListContract`1.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.AddIn.Contract.IListContract`1.IndexOf(`0)
  commentId: M:System.AddIn.Contract.IListContract`1.IndexOf(`0)
  id: IndexOf(`0)
  parent: System.AddIn.Contract.IListContract`1
  langs:
  - csharp
  name: IndexOf(T)
  nameWithType: IListContract<T>.IndexOf(T)
  fullName: IListContract<T>.IndexOf(T)
  type: Method
  assemblies:
  - System.AddIn.Contract
  namespace: System.AddIn.Contract
  summary: Returns the index of a specific item in an <xref href="System.AddIn.Contract.Collections.IListContract`1"></xref> collection.
  remarks: "If there are several objects of the same type in the collection, this method identifies the index of the item that is the first occurrence of the specified type in the collection.  \n  \n The <xref:System.AddIn.Contract.IListContract%601.GetItem%2A> method does not remove the item at the specified index. To remove an item from the <xref:System.AddIn.Contract.IListContract%601> collection, use the <xref:System.AddIn.Contract.IListContract%601.RemoveAt%2A> method."
  syntax:
    content: public int IndexOf (T item);
    parameters:
    - id: item
      type: T
      description: An item in the collection.
    return:
      type: System.Int32
      description: The index of the specified item.
  overload: System.AddIn.Contract.IListContract`1.IndexOf*
  exceptions:
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: "<code>index</code> is less than zero.  \n  \n -or-  \n  \n <code>index</code> is equal to or greater than the return value of the <xref href=\"System.AddIn.Contract.IListContract`1.GetCount\"></xref> method."
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.AddIn.Contract/IListContract`1.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.AddIn.Contract.IListContract`1.Insert(System.Int32,`0)
  commentId: M:System.AddIn.Contract.IListContract`1.Insert(System.Int32,`0)
  id: Insert(System.Int32,`0)
  parent: System.AddIn.Contract.IListContract`1
  langs:
  - csharp
  name: Insert(Int32, T)
  nameWithType: IListContract<T>.Insert(Int32, T)
  fullName: IListContract<T>.Insert(Int32, T)
  type: Method
  assemblies:
  - System.AddIn.Contract
  namespace: System.AddIn.Contract
  summary: Inserts an item at the specified index in an <xref href="System.AddIn.Contract.IListContract`1"></xref> collection.
  remarks: "After you call the <xref:System.AddIn.Contract.IListContract%601.Insert%2A> method, the items that follow the insertion point move to accommodate the new item. The indexes of the items that are moved are also updated. To replace an item at a specified index, use the <xref:System.AddIn.Contract.IListContract%601.SetItem%2A> method.  \n  \n To determine whether an <xref:System.AddIn.Contract.IListContract%601> collection is read-only, call the <xref:System.AddIn.Contract.IListContract%601.GetIsReadOnly%2A> method."
  syntax:
    content: public void Insert (int index, T item);
    parameters:
    - id: index
      type: System.Int32
      description: The zero-based index at which to insert <code>item</code>.
    - id: item
      type: T
      description: The <xref href="System.AddIn.Contract.IContract"></xref> object to insert in the <xref href="System.AddIn.Contract.IListContract`1"></xref> collection.
  overload: System.AddIn.Contract.IListContract`1.Insert*
  exceptions:
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: "<code>index</code> is less than zero.  \n  \n -or-  \n  \n <code>index</code> is equal to or greater than the return value of <xref href=\"System.AddIn.Contract.IListContract`1.GetCount\"></xref>."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: The <xref href="System.AddIn.Contract.IListContract`1"></xref> collection is read-only.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.AddIn.Contract/IListContract`1.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.AddIn.Contract.IListContract`1.Remove(`0)
  commentId: M:System.AddIn.Contract.IListContract`1.Remove(`0)
  id: Remove(`0)
  parent: System.AddIn.Contract.IListContract`1
  langs:
  - csharp
  name: Remove(T)
  nameWithType: IListContract<T>.Remove(T)
  fullName: IListContract<T>.Remove(T)
  type: Method
  assemblies:
  - System.AddIn.Contract
  namespace: System.AddIn.Contract
  summary: Removes an item from an <xref href="System.AddIn.Contract.IListContract`1"></xref> collection of a specified type.
  remarks: You must repeat this method for each object of a particular type in the collection.
  syntax:
    content: public bool Remove (T item);
    parameters:
    - id: item
      type: T
      description: The item to remove from the collection.
    return:
      type: System.Boolean
      description: '`true` if an item is removed; otherwise, `false`.'
  overload: System.AddIn.Contract.IListContract`1.Remove*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.AddIn.Contract/IListContract`1.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.AddIn.Contract.IListContract`1.RemoveAt(System.Int32)
  commentId: M:System.AddIn.Contract.IListContract`1.RemoveAt(System.Int32)
  id: RemoveAt(System.Int32)
  parent: System.AddIn.Contract.IListContract`1
  langs:
  - csharp
  name: RemoveAt(Int32)
  nameWithType: IListContract<T>.RemoveAt(Int32)
  fullName: IListContract<T>.RemoveAt(Int32)
  type: Method
  assemblies:
  - System.AddIn.Contract
  namespace: System.AddIn.Contract
  summary: Removes the item at the specified index in an <xref href="System.AddIn.Contract.IListContract`1"></xref> collection.
  remarks: "After you call <xref:System.AddIn.Contract.IListContract%601.RemoveAt%2A>, the items that follow the removed item move to occupy the vacated spot. The indexes of the items that are moved are also updated.  \n  \n To determine whether an <xref:System.AddIn.Contract.IListContract%601> collection is read-only, call the <xref:System.AddIn.Contract.IListContract%601.GetIsReadOnly%2A> method."
  syntax:
    content: public void RemoveAt (int index);
    parameters:
    - id: index
      type: System.Int32
      description: The index of the item to remove.
  overload: System.AddIn.Contract.IListContract`1.RemoveAt*
  exceptions:
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: "<code>index</code> is less than zero.  \n  \n -or-  \n  \n <code>index</code> is equal to or greater than the return value of the <xref href=\"System.AddIn.Contract.IListContract`1.GetCount\"></xref> method."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: The <xref href="System.AddIn.Contract.IListContract`1"></xref> collection is read-only.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.AddIn.Contract/IListContract`1.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
- uid: System.AddIn.Contract.IListContract`1.SetItem(System.Int32,`0)
  commentId: M:System.AddIn.Contract.IListContract`1.SetItem(System.Int32,`0)
  id: SetItem(System.Int32,`0)
  parent: System.AddIn.Contract.IListContract`1
  langs:
  - csharp
  name: SetItem(Int32, T)
  nameWithType: IListContract<T>.SetItem(Int32, T)
  fullName: IListContract<T>.SetItem(Int32, T)
  type: Method
  assemblies:
  - System.AddIn.Contract
  namespace: System.AddIn.Contract
  summary: Sets the item at the specified index in an <xref href="System.AddIn.Contract.IListContract`1"></xref> collection.
  remarks: "The <xref:System.AddIn.Contract.IListContract%601.SetItem%2A> method sets the item at the specified index. To add an item to the <xref:System.AddIn.Contract.IListContract%601> collection, use the <xref:System.AddIn.Contract.IListContract%601.Insert%2A> method.  \n  \n To determine whether an <xref:System.AddIn.Contract.IListContract%601> collection is read-only, call the <xref:System.AddIn.Contract.IListContract%601.GetIsReadOnly%2A> method."
  syntax:
    content: public void SetItem (int index, T item);
    parameters:
    - id: index
      type: System.Int32
      description: The zero-based index at which to set the item.
    - id: item
      type: T
      description: The item to set at the specified index.
  overload: System.AddIn.Contract.IListContract`1.SetItem*
  exceptions:
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: "<code>index</code> is less than zero.  \n  \n -or-  \n  \n <code>index</code> is equal to or greater than the return value of the <xref href=\"System.AddIn.Contract.IListContract`1.GetCount\"></xref> method."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: The <xref href="System.AddIn.Contract.IListContract`1"></xref> collection is read-only.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.AddIn.Contract/IListContract`1.xml
  ms.technology:
  - dotnet-standard
  author: rpetrusha
  ms.author: ronpet
  manager: wpickett
references:
- uid: System.IndexOutOfRangeException
  parent: System
  isExternal: false
  name: IndexOutOfRangeException
  nameWithType: IndexOutOfRangeException
  fullName: System.IndexOutOfRangeException
- uid: System.NotSupportedException
  parent: System
  isExternal: false
  name: NotSupportedException
  nameWithType: NotSupportedException
  fullName: System.NotSupportedException
- uid: System.AddIn.Contract.IListContract`1.Add(`0)
  parent: System.AddIn.Contract.IListContract`1
  isExternal: false
  name: Add(T)
  nameWithType: IListContract<T>.Add(T)
  fullName: IListContract<T>.Add(T)
- uid: T
  isExternal: true
  name: T
  nameWithType: T
  fullName: T
- uid: System.AddIn.Contract.IListContract`1.Clear
  parent: System.AddIn.Contract.IListContract`1
  isExternal: false
  name: Clear()
  nameWithType: IListContract<T>.Clear()
  fullName: IListContract<T>.Clear()
- uid: System.AddIn.Contract.IListContract`1.Contains(`0)
  parent: System.AddIn.Contract.IListContract`1
  isExternal: false
  name: Contains(T)
  nameWithType: IListContract<T>.Contains(T)
  fullName: IListContract<T>.Contains(T)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.AddIn.Contract.IListContract`1.GetCount
  parent: System.AddIn.Contract.IListContract`1
  isExternal: false
  name: GetCount()
  nameWithType: IListContract<T>.GetCount()
  fullName: IListContract<T>.GetCount()
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.AddIn.Contract.IListContract`1.GetEnumeratorContract
  parent: System.AddIn.Contract.IListContract`1
  isExternal: false
  name: GetEnumeratorContract()
  nameWithType: IListContract<T>.GetEnumeratorContract()
  fullName: IListContract<T>.GetEnumeratorContract()
- uid: System.AddIn.Contract.IEnumeratorContract`1
  parent: System.AddIn.Contract
  isExternal: false
  name: IEnumeratorContract<T>
  nameWithType: IEnumeratorContract<T>
  fullName: System.AddIn.Contract.IEnumeratorContract<T>
- uid: System.AddIn.Contract.IListContract`1.GetIsReadOnly
  parent: System.AddIn.Contract.IListContract`1
  isExternal: false
  name: GetIsReadOnly()
  nameWithType: IListContract<T>.GetIsReadOnly()
  fullName: IListContract<T>.GetIsReadOnly()
- uid: System.AddIn.Contract.IListContract`1.GetItem(System.Int32)
  parent: System.AddIn.Contract.IListContract`1
  isExternal: false
  name: GetItem(Int32)
  nameWithType: IListContract<T>.GetItem(Int32)
  fullName: IListContract<T>.GetItem(Int32)
- uid: System.AddIn.Contract.IListContract`1.IndexOf(`0)
  parent: System.AddIn.Contract.IListContract`1
  isExternal: false
  name: IndexOf(T)
  nameWithType: IListContract<T>.IndexOf(T)
  fullName: IListContract<T>.IndexOf(T)
- uid: System.AddIn.Contract.IListContract`1.Insert(System.Int32,`0)
  parent: System.AddIn.Contract.IListContract`1
  isExternal: false
  name: Insert(Int32, T)
  nameWithType: IListContract<T>.Insert(Int32, T)
  fullName: IListContract<T>.Insert(Int32, T)
- uid: System.AddIn.Contract.IListContract`1.Remove(`0)
  parent: System.AddIn.Contract.IListContract`1
  isExternal: false
  name: Remove(T)
  nameWithType: IListContract<T>.Remove(T)
  fullName: IListContract<T>.Remove(T)
- uid: System.AddIn.Contract.IListContract`1.RemoveAt(System.Int32)
  parent: System.AddIn.Contract.IListContract`1
  isExternal: false
  name: RemoveAt(Int32)
  nameWithType: IListContract<T>.RemoveAt(Int32)
  fullName: IListContract<T>.RemoveAt(Int32)
- uid: System.AddIn.Contract.IListContract`1.SetItem(System.Int32,`0)
  parent: System.AddIn.Contract.IListContract`1
  isExternal: false
  name: SetItem(Int32, T)
  nameWithType: IListContract<T>.SetItem(Int32, T)
  fullName: IListContract<T>.SetItem(Int32, T)
- uid: System.AddIn.Contract.IListContract`1.Add*
  parent: System.AddIn.Contract.IListContract`1
  isExternal: false
  name: Add
  nameWithType: IListContract<T>.Add
  fullName: IListContract<T>.Add
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.AddIn.Contract/IListContract`1.xml
- uid: System.AddIn.Contract.IListContract`1.Clear*
  parent: System.AddIn.Contract.IListContract`1
  isExternal: false
  name: Clear
  nameWithType: IListContract<T>.Clear
  fullName: IListContract<T>.Clear
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.AddIn.Contract/IListContract`1.xml
- uid: System.AddIn.Contract.IListContract`1.Contains*
  parent: System.AddIn.Contract.IListContract`1
  isExternal: false
  name: Contains
  nameWithType: IListContract<T>.Contains
  fullName: IListContract<T>.Contains
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.AddIn.Contract/IListContract`1.xml
- uid: System.AddIn.Contract.IListContract`1.GetCount*
  parent: System.AddIn.Contract.IListContract`1
  isExternal: false
  name: GetCount
  nameWithType: IListContract<T>.GetCount
  fullName: IListContract<T>.GetCount
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.AddIn.Contract/IListContract`1.xml
- uid: System.AddIn.Contract.IListContract`1.GetEnumeratorContract*
  parent: System.AddIn.Contract.IListContract`1
  isExternal: false
  name: GetEnumeratorContract
  nameWithType: IListContract<T>.GetEnumeratorContract
  fullName: IListContract<T>.GetEnumeratorContract
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.AddIn.Contract/IListContract`1.xml
- uid: System.AddIn.Contract.IListContract`1.GetIsReadOnly*
  parent: System.AddIn.Contract.IListContract`1
  isExternal: false
  name: GetIsReadOnly
  nameWithType: IListContract<T>.GetIsReadOnly
  fullName: IListContract<T>.GetIsReadOnly
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.AddIn.Contract/IListContract`1.xml
- uid: System.AddIn.Contract.IListContract`1.GetItem*
  parent: System.AddIn.Contract.IListContract`1
  isExternal: false
  name: GetItem
  nameWithType: IListContract<T>.GetItem
  fullName: IListContract<T>.GetItem
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.AddIn.Contract/IListContract`1.xml
- uid: System.AddIn.Contract.IListContract`1.IndexOf*
  parent: System.AddIn.Contract.IListContract`1
  isExternal: false
  name: IndexOf
  nameWithType: IListContract<T>.IndexOf
  fullName: IListContract<T>.IndexOf
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.AddIn.Contract/IListContract`1.xml
- uid: System.AddIn.Contract.IListContract`1.Insert*
  parent: System.AddIn.Contract.IListContract`1
  isExternal: false
  name: Insert
  nameWithType: IListContract<T>.Insert
  fullName: IListContract<T>.Insert
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.AddIn.Contract/IListContract`1.xml
- uid: System.AddIn.Contract.IListContract`1.Remove*
  parent: System.AddIn.Contract.IListContract`1
  isExternal: false
  name: Remove
  nameWithType: IListContract<T>.Remove
  fullName: IListContract<T>.Remove
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.AddIn.Contract/IListContract`1.xml
- uid: System.AddIn.Contract.IListContract`1.RemoveAt*
  parent: System.AddIn.Contract.IListContract`1
  isExternal: false
  name: RemoveAt
  nameWithType: IListContract<T>.RemoveAt
  fullName: IListContract<T>.RemoveAt
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.AddIn.Contract/IListContract`1.xml
- uid: System.AddIn.Contract.IListContract`1.SetItem*
  parent: System.AddIn.Contract.IListContract`1
  isExternal: false
  name: SetItem
  nameWithType: IListContract<T>.SetItem
  fullName: IListContract<T>.SetItem
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.AddIn.Contract/IListContract`1.xml
- uid: System.AddIn.Contract.IContract
  parent: System.AddIn.Contract
  isExternal: false
  name: IContract
  nameWithType: IContract
  fullName: System.AddIn.Contract.IContract
