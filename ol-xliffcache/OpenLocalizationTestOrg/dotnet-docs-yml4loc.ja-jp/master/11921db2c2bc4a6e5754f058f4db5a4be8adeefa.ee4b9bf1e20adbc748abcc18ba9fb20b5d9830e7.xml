{"nodes":[{"content":"Options to use with a  <xref href=\"System.Net.WebSockets.ClientWebSocket\"></xref> object.","nodes":[{"pos":[0,89],"content":"Options to use with a  <ph id=\"ph1\">&lt;xref href=\"System.Net.WebSockets.ClientWebSocket\"&gt;&lt;/xref&gt;</ph> object.","source":"Options to use with a  <xref href=\"System.Net.WebSockets.ClientWebSocket\"></xref> object."}],"pos":[1283,1373],"yaml":true},{"content":"Adds a sub-protocol to be negotiated during the WebSocket connection handshake.","nodes":[{"pos":[0,79],"content":"Adds a sub-protocol to be negotiated during the WebSocket connection handshake.","nodes":[{"content":"Adds a sub-protocol to be negotiated during the WebSocket connection handshake.","pos":[0,79]}]}],"pos":[3966,4046],"yaml":true},{"content":"The WebSocket sub-protocol to add.","nodes":[{"pos":[0,34],"content":"The WebSocket sub-protocol to add.","nodes":[{"content":"The WebSocket sub-protocol to add.","pos":[0,34]}]}],"pos":[4201,4236],"yaml":true},{"content":"Gets or sets a collection of client side certificates.","nodes":[{"pos":[0,54],"content":"Gets or sets a collection of client side certificates.","nodes":[{"content":"Gets or sets a collection of client side certificates.","pos":[0,54]}]}],"pos":[5597,5652],"yaml":true},{"content":"Returns <xref href=\"System.Security.Cryptography.X509Certificates.X509CertificateCollection\"></xref>.  \n  \n A collection of client side certificates.","nodes":[{"pos":[0,101],"content":"Returns <ph id=\"ph1\">&lt;xref href=\"System.Security.Cryptography.X509Certificates.X509CertificateCollection\"&gt;&lt;/xref&gt;</ph>.","source":"Returns <xref href=\"System.Security.Cryptography.X509Certificates.X509CertificateCollection\"></xref>."},{"pos":[108,149],"content":"A collection of client side certificates.","nodes":[{"content":"A collection of client side certificates.","pos":[0,41]}]}],"pos":[5902,6058],"yaml":true},{"content":"Gets or sets the cookies associated with the request.","nodes":[{"pos":[0,53],"content":"Gets or sets the cookies associated with the request.","nodes":[{"content":"Gets or sets the cookies associated with the request.","pos":[0,53]}]}],"pos":[7357,7411],"yaml":true},{"content":"Returns <xref href=\"System.Net.CookieContainer\"></xref>.  \n  \n The cookies associated with the request.","nodes":[{"pos":[0,56],"content":"Returns <ph id=\"ph1\">&lt;xref href=\"System.Net.CookieContainer\"&gt;&lt;/xref&gt;</ph>.","source":"Returns <xref href=\"System.Net.CookieContainer\"></xref>."},{"pos":[63,103],"content":"The cookies associated with the request.","nodes":[{"content":"The cookies associated with the request.","pos":[0,40]}]}],"pos":[7560,7670],"yaml":true},{"content":"Gets or sets the credential information for the client.","nodes":[{"pos":[0,55],"content":"Gets or sets the credential information for the client.","nodes":[{"content":"Gets or sets the credential information for the client.","pos":[0,55]}]}],"pos":[8982,9038],"yaml":true},{"content":"Returns <xref href=\"System.Net.ICredentials\"></xref>.  \n  \n The credential information for the client.","nodes":[{"pos":[0,53],"content":"Returns <ph id=\"ph1\">&lt;xref href=\"System.Net.ICredentials\"&gt;&lt;/xref&gt;</ph>.","source":"Returns <xref href=\"System.Net.ICredentials\"></xref>."},{"pos":[60,102],"content":"The credential information for the client.","nodes":[{"content":"The credential information for the client.","pos":[0,42]}]}],"pos":[9185,9294],"yaml":true},{"content":"Gets or sets the WebSocket protocol keep-alive interval in milliseconds.","nodes":[{"pos":[0,72],"content":"Gets or sets the WebSocket protocol keep-alive interval in milliseconds.","nodes":[{"content":"Gets or sets the WebSocket protocol keep-alive interval in milliseconds.","pos":[0,72]}]}],"pos":[10646,10719],"yaml":true},{"content":"Returns <xref href=\"System.TimeSpan\"></xref>.  \n  \n The WebSocket protocol keep-alive interval in milliseconds.","nodes":[{"pos":[0,45],"content":"Returns <ph id=\"ph1\">&lt;xref href=\"System.TimeSpan\"&gt;&lt;/xref&gt;</ph>.","source":"Returns <xref href=\"System.TimeSpan\"></xref>."},{"pos":[52,111],"content":"The WebSocket protocol keep-alive interval in milliseconds.","nodes":[{"content":"The WebSocket protocol keep-alive interval in milliseconds.","pos":[0,59]}]}],"pos":[10849,10967],"yaml":true},{"content":"Gets or sets the proxy for WebSocket requests.","nodes":[{"pos":[0,46],"content":"Gets or sets the proxy for WebSocket requests.","nodes":[{"content":"Gets or sets the proxy for WebSocket requests.","pos":[0,46]}]}],"pos":[12253,12300],"yaml":true},{"content":"Returns <xref href=\"System.Net.IWebProxy\"></xref>.  \n  \n The proxy for WebSocket requests.","nodes":[{"pos":[0,50],"content":"Returns <ph id=\"ph1\">&lt;xref href=\"System.Net.IWebProxy\"&gt;&lt;/xref&gt;</ph>.","source":"Returns <xref href=\"System.Net.IWebProxy\"></xref>."},{"pos":[57,90],"content":"The proxy for WebSocket requests.","nodes":[{"content":"The proxy for WebSocket requests.","pos":[0,33]}]}],"pos":[12435,12532],"yaml":true},{"content":"Sets the client buffer parameters.","nodes":[{"pos":[0,34],"content":"Sets the client buffer parameters.","nodes":[{"content":"Sets the client buffer parameters.","pos":[0,34]}]}],"pos":[13951,13986],"yaml":true},{"content":"The size, in bytes, of the client receive buffer.","nodes":[{"pos":[0,49],"content":"The size, in bytes, of the client receive buffer.","nodes":[{"content":"The size, in bytes, of the client receive buffer.","pos":[0,49]}]}],"pos":[14164,14214],"yaml":true},{"content":"The size, in bytes, of the client send buffer.","nodes":[{"pos":[0,46],"content":"The size, in bytes, of the client send buffer.","nodes":[{"content":"The size, in bytes, of the client send buffer.","pos":[0,46]}]}],"pos":[14283,14330],"yaml":true},{"content":"Sets client buffer parameters.","nodes":[{"pos":[0,30],"content":"Sets client buffer parameters.","nodes":[{"content":"Sets client buffer parameters.","pos":[0,30]}]}],"pos":[15848,15879],"yaml":true},{"content":"The size, in bytes, of the client receive buffer.","nodes":[{"pos":[0,49],"content":"The size, in bytes, of the client receive buffer.","nodes":[{"content":"The size, in bytes, of the client receive buffer.","pos":[0,49]}]}],"pos":[16084,16134],"yaml":true},{"content":"The size, in bytes, of the client send buffer.","nodes":[{"pos":[0,46],"content":"The size, in bytes, of the client send buffer.","nodes":[{"content":"The size, in bytes, of the client send buffer.","pos":[0,46]}]}],"pos":[16203,16250],"yaml":true},{"content":"The receive buffer to use.","nodes":[{"pos":[0,26],"content":"The receive buffer to use.","nodes":[{"content":"The receive buffer to use.","pos":[0,26]}]}],"pos":[16331,16358],"yaml":true},{"content":"Creates a HTTP request header and its value.","nodes":[{"pos":[0,44],"content":"Creates a HTTP request header and its value.","nodes":[{"content":"Creates a HTTP request header and its value.","pos":[0,44]}]}],"pos":[17771,17816],"yaml":true},{"content":"The name of the HTTP header.","nodes":[{"pos":[0,28],"content":"The name of the HTTP header.","nodes":[{"content":"The name of the HTTP header.","pos":[0,28]}]}],"pos":[17991,18020],"yaml":true},{"content":"The value of the HTTP header.","nodes":[{"pos":[0,29],"content":"The value of the HTTP header.","nodes":[{"content":"The value of the HTTP header.","pos":[0,29]}]}],"pos":[18087,18117],"yaml":true},{"content":"Gets or sets a <xref href=\"System.Boolean\"></xref> value that indicates if default credentials should be used during WebSocket handshake.","nodes":[{"pos":[0,137],"content":"Gets or sets a <ph id=\"ph1\">&lt;xref href=\"System.Boolean\"&gt;&lt;/xref&gt;</ph> value that indicates if default credentials should be used during WebSocket handshake.","source":"Gets or sets a <xref href=\"System.Boolean\"></xref> value that indicates if default credentials should be used during WebSocket handshake."}],"pos":[19498,19636],"yaml":true},{"content":"Returns <xref href=\"System.Boolean\"></xref>.  \n  \n `true` if default credentials should be used during WebSocket handshake; otherwise `false`. The default is `true`.","nodes":[{"pos":[0,44],"content":"Returns <ph id=\"ph1\">&lt;xref href=\"System.Boolean\"&gt;&lt;/xref&gt;</ph>.","source":"Returns <xref href=\"System.Boolean\"></xref>."},{"pos":[51,165],"content":"`true` if default credentials should be used during WebSocket handshake; otherwise `false`. The default is `true`.","nodes":[{"content":"<ph id=\"ph1\">`true`</ph> if default credentials should be used during WebSocket handshake; otherwise <ph id=\"ph2\">`false`</ph>.","pos":[0,91],"source":"`true` if default credentials should be used during WebSocket handshake; otherwise `false`."},{"content":"The default is <ph id=\"ph1\">`true`</ph>.","pos":[92,114],"source":" The default is `true`."}]}],"pos":[19765,19937],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Net.WebSockets.ClientWebSocketOptions\n  commentId: T:System.Net.WebSockets.ClientWebSocketOptions\n  id: ClientWebSocketOptions\n  children:\n  - System.Net.WebSockets.ClientWebSocketOptions.#ctor\n  - System.Net.WebSockets.ClientWebSocketOptions.AddSubProtocol(System.String)\n  - System.Net.WebSockets.ClientWebSocketOptions.ClientCertificates\n  - System.Net.WebSockets.ClientWebSocketOptions.Cookies\n  - System.Net.WebSockets.ClientWebSocketOptions.Credentials\n  - System.Net.WebSockets.ClientWebSocketOptions.KeepAliveInterval\n  - System.Net.WebSockets.ClientWebSocketOptions.Proxy\n  - System.Net.WebSockets.ClientWebSocketOptions.SetBuffer(System.Int32,System.Int32)\n  - System.Net.WebSockets.ClientWebSocketOptions.SetBuffer(System.Int32,System.Int32,System.ArraySegment{System.Byte})\n  - System.Net.WebSockets.ClientWebSocketOptions.SetRequestHeader(System.String,System.String)\n  - System.Net.WebSockets.ClientWebSocketOptions.UseDefaultCredentials\n  langs:\n  - csharp\n  name: ClientWebSocketOptions\n  nameWithType: ClientWebSocketOptions\n  fullName: System.Net.WebSockets.ClientWebSocketOptions\n  type: Class\n  assemblies:\n  - System.Net.WebSockets.Client\n  - System\n  - netstandard\n  namespace: System.Net.WebSockets\n  summary: Options to use with a  <xref href=\"System.Net.WebSockets.ClientWebSocket\"></xref> object.\n  syntax:\n    content: public sealed class ClientWebSocketOptions\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.WebSockets/ClientWebSocketOptions.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.WebSockets.ClientWebSocketOptions.#ctor\n  commentId: M:System.Net.WebSockets.ClientWebSocketOptions.#ctor\n  id: '#ctor'\n  parent: System.Net.WebSockets.ClientWebSocketOptions\n  langs:\n  - csharp\n  name: ClientWebSocketOptions()\n  nameWithType: ClientWebSocketOptions.ClientWebSocketOptions()\n  fullName: ClientWebSocketOptions.ClientWebSocketOptions()\n  type: Constructor\n  assemblies:\n  - System\n  namespace: System.Net.WebSockets\n  syntax:\n    content: public ClientWebSocketOptions ();\n    parameters: []\n  overload: System.Net.WebSockets.ClientWebSocketOptions.#ctor*\n  exceptions: []\n  version:\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.WebSockets/ClientWebSocketOptions.xml\n- uid: System.Net.WebSockets.ClientWebSocketOptions.AddSubProtocol(System.String)\n  commentId: M:System.Net.WebSockets.ClientWebSocketOptions.AddSubProtocol(System.String)\n  id: AddSubProtocol(System.String)\n  parent: System.Net.WebSockets.ClientWebSocketOptions\n  langs:\n  - csharp\n  name: AddSubProtocol(String)\n  nameWithType: ClientWebSocketOptions.AddSubProtocol(String)\n  fullName: ClientWebSocketOptions.AddSubProtocol(String)\n  type: Method\n  assemblies:\n  - System.Net.WebSockets.Client\n  - System\n  - netstandard\n  namespace: System.Net.WebSockets\n  summary: Adds a sub-protocol to be negotiated during the WebSocket connection handshake.\n  syntax:\n    content: public void AddSubProtocol (string subProtocol);\n    parameters:\n    - id: subProtocol\n      type: System.String\n      description: The WebSocket sub-protocol to add.\n  overload: System.Net.WebSockets.ClientWebSocketOptions.AddSubProtocol*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.WebSockets/ClientWebSocketOptions.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.WebSockets.ClientWebSocketOptions.ClientCertificates\n  commentId: P:System.Net.WebSockets.ClientWebSocketOptions.ClientCertificates\n  id: ClientCertificates\n  parent: System.Net.WebSockets.ClientWebSocketOptions\n  langs:\n  - csharp\n  name: ClientCertificates\n  nameWithType: ClientWebSocketOptions.ClientCertificates\n  fullName: ClientWebSocketOptions.ClientCertificates\n  type: Property\n  assemblies:\n  - System.Net.WebSockets.Client\n  - System\n  - netstandard\n  namespace: System.Net.WebSockets\n  summary: Gets or sets a collection of client side certificates.\n  syntax:\n    content: public System.Security.Cryptography.X509Certificates.X509CertificateCollection ClientCertificates { get; set; }\n    return:\n      type: System.Security.Cryptography.X509Certificates.X509CertificateCollection\n      description: \"Returns <xref href=\\\"System.Security.Cryptography.X509Certificates.X509CertificateCollection\\\"></xref>.  \\n  \\n A collection of client side certificates.\"\n  overload: System.Net.WebSockets.ClientWebSocketOptions.ClientCertificates*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.WebSockets/ClientWebSocketOptions.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.WebSockets.ClientWebSocketOptions.Cookies\n  commentId: P:System.Net.WebSockets.ClientWebSocketOptions.Cookies\n  id: Cookies\n  parent: System.Net.WebSockets.ClientWebSocketOptions\n  langs:\n  - csharp\n  name: Cookies\n  nameWithType: ClientWebSocketOptions.Cookies\n  fullName: ClientWebSocketOptions.Cookies\n  type: Property\n  assemblies:\n  - System.Net.WebSockets.Client\n  - System\n  - netstandard\n  namespace: System.Net.WebSockets\n  summary: Gets or sets the cookies associated with the request.\n  syntax:\n    content: public System.Net.CookieContainer Cookies { get; set; }\n    return:\n      type: System.Net.CookieContainer\n      description: \"Returns <xref href=\\\"System.Net.CookieContainer\\\"></xref>.  \\n  \\n The cookies associated with the request.\"\n  overload: System.Net.WebSockets.ClientWebSocketOptions.Cookies*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.WebSockets/ClientWebSocketOptions.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.WebSockets.ClientWebSocketOptions.Credentials\n  commentId: P:System.Net.WebSockets.ClientWebSocketOptions.Credentials\n  id: Credentials\n  parent: System.Net.WebSockets.ClientWebSocketOptions\n  langs:\n  - csharp\n  name: Credentials\n  nameWithType: ClientWebSocketOptions.Credentials\n  fullName: ClientWebSocketOptions.Credentials\n  type: Property\n  assemblies:\n  - System.Net.WebSockets.Client\n  - System\n  - netstandard\n  namespace: System.Net.WebSockets\n  summary: Gets or sets the credential information for the client.\n  syntax:\n    content: public System.Net.ICredentials Credentials { get; set; }\n    return:\n      type: System.Net.ICredentials\n      description: \"Returns <xref href=\\\"System.Net.ICredentials\\\"></xref>.  \\n  \\n The credential information for the client.\"\n  overload: System.Net.WebSockets.ClientWebSocketOptions.Credentials*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.WebSockets/ClientWebSocketOptions.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.WebSockets.ClientWebSocketOptions.KeepAliveInterval\n  commentId: P:System.Net.WebSockets.ClientWebSocketOptions.KeepAliveInterval\n  id: KeepAliveInterval\n  parent: System.Net.WebSockets.ClientWebSocketOptions\n  langs:\n  - csharp\n  name: KeepAliveInterval\n  nameWithType: ClientWebSocketOptions.KeepAliveInterval\n  fullName: ClientWebSocketOptions.KeepAliveInterval\n  type: Property\n  assemblies:\n  - System.Net.WebSockets.Client\n  - System\n  - netstandard\n  namespace: System.Net.WebSockets\n  summary: Gets or sets the WebSocket protocol keep-alive interval in milliseconds.\n  syntax:\n    content: public TimeSpan KeepAliveInterval { get; set; }\n    return:\n      type: System.TimeSpan\n      description: \"Returns <xref href=\\\"System.TimeSpan\\\"></xref>.  \\n  \\n The WebSocket protocol keep-alive interval in milliseconds.\"\n  overload: System.Net.WebSockets.ClientWebSocketOptions.KeepAliveInterval*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.WebSockets/ClientWebSocketOptions.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.WebSockets.ClientWebSocketOptions.Proxy\n  commentId: P:System.Net.WebSockets.ClientWebSocketOptions.Proxy\n  id: Proxy\n  parent: System.Net.WebSockets.ClientWebSocketOptions\n  langs:\n  - csharp\n  name: Proxy\n  nameWithType: ClientWebSocketOptions.Proxy\n  fullName: ClientWebSocketOptions.Proxy\n  type: Property\n  assemblies:\n  - System.Net.WebSockets.Client\n  - System\n  - netstandard\n  namespace: System.Net.WebSockets\n  summary: Gets or sets the proxy for WebSocket requests.\n  syntax:\n    content: public System.Net.IWebProxy Proxy { get; set; }\n    return:\n      type: System.Net.IWebProxy\n      description: \"Returns <xref href=\\\"System.Net.IWebProxy\\\"></xref>.  \\n  \\n The proxy for WebSocket requests.\"\n  overload: System.Net.WebSockets.ClientWebSocketOptions.Proxy*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.WebSockets/ClientWebSocketOptions.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.WebSockets.ClientWebSocketOptions.SetBuffer(System.Int32,System.Int32)\n  commentId: M:System.Net.WebSockets.ClientWebSocketOptions.SetBuffer(System.Int32,System.Int32)\n  id: SetBuffer(System.Int32,System.Int32)\n  parent: System.Net.WebSockets.ClientWebSocketOptions\n  langs:\n  - csharp\n  name: SetBuffer(Int32, Int32)\n  nameWithType: ClientWebSocketOptions.SetBuffer(Int32, Int32)\n  fullName: ClientWebSocketOptions.SetBuffer(Int32, Int32)\n  type: Method\n  assemblies:\n  - System\n  - netstandard\n  - System.Net.WebSockets.Client\n  namespace: System.Net.WebSockets\n  summary: Sets the client buffer parameters.\n  syntax:\n    content: public void SetBuffer (int receiveBufferSize, int sendBufferSize);\n    parameters:\n    - id: receiveBufferSize\n      type: System.Int32\n      description: The size, in bytes, of the client receive buffer.\n    - id: sendBufferSize\n      type: System.Int32\n      description: The size, in bytes, of the client send buffer.\n  overload: System.Net.WebSockets.ClientWebSocketOptions.SetBuffer*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.WebSockets/ClientWebSocketOptions.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.WebSockets.ClientWebSocketOptions.SetBuffer(System.Int32,System.Int32,System.ArraySegment{System.Byte})\n  commentId: M:System.Net.WebSockets.ClientWebSocketOptions.SetBuffer(System.Int32,System.Int32,System.ArraySegment{System.Byte})\n  id: SetBuffer(System.Int32,System.Int32,System.ArraySegment{System.Byte})\n  parent: System.Net.WebSockets.ClientWebSocketOptions\n  langs:\n  - csharp\n  name: SetBuffer(Int32, Int32, ArraySegment<Byte>)\n  nameWithType: ClientWebSocketOptions.SetBuffer(Int32, Int32, ArraySegment<Byte>)\n  fullName: ClientWebSocketOptions.SetBuffer(Int32, Int32, ArraySegment<Byte>)\n  type: Method\n  assemblies:\n  - System\n  - netstandard\n  - System.Net.WebSockets.Client\n  namespace: System.Net.WebSockets\n  summary: Sets client buffer parameters.\n  syntax:\n    content: public void SetBuffer (int receiveBufferSize, int sendBufferSize, ArraySegment<byte> buffer);\n    parameters:\n    - id: receiveBufferSize\n      type: System.Int32\n      description: The size, in bytes, of the client receive buffer.\n    - id: sendBufferSize\n      type: System.Int32\n      description: The size, in bytes, of the client send buffer.\n    - id: buffer\n      type: System.ArraySegment{System.Byte}\n      description: The receive buffer to use.\n  overload: System.Net.WebSockets.ClientWebSocketOptions.SetBuffer*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.WebSockets/ClientWebSocketOptions.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.WebSockets.ClientWebSocketOptions.SetRequestHeader(System.String,System.String)\n  commentId: M:System.Net.WebSockets.ClientWebSocketOptions.SetRequestHeader(System.String,System.String)\n  id: SetRequestHeader(System.String,System.String)\n  parent: System.Net.WebSockets.ClientWebSocketOptions\n  langs:\n  - csharp\n  name: SetRequestHeader(String, String)\n  nameWithType: ClientWebSocketOptions.SetRequestHeader(String, String)\n  fullName: ClientWebSocketOptions.SetRequestHeader(String, String)\n  type: Method\n  assemblies:\n  - System.Net.WebSockets.Client\n  - System\n  - netstandard\n  namespace: System.Net.WebSockets\n  summary: Creates a HTTP request header and its value.\n  syntax:\n    content: public void SetRequestHeader (string headerName, string headerValue);\n    parameters:\n    - id: headerName\n      type: System.String\n      description: The name of the HTTP header.\n    - id: headerValue\n      type: System.String\n      description: The value of the HTTP header.\n  overload: System.Net.WebSockets.ClientWebSocketOptions.SetRequestHeader*\n  exceptions: []\n  version:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.WebSockets/ClientWebSocketOptions.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.WebSockets.ClientWebSocketOptions.UseDefaultCredentials\n  commentId: P:System.Net.WebSockets.ClientWebSocketOptions.UseDefaultCredentials\n  id: UseDefaultCredentials\n  parent: System.Net.WebSockets.ClientWebSocketOptions\n  langs:\n  - csharp\n  name: UseDefaultCredentials\n  nameWithType: ClientWebSocketOptions.UseDefaultCredentials\n  fullName: ClientWebSocketOptions.UseDefaultCredentials\n  type: Property\n  assemblies:\n  - System\n  - netstandard\n  - System.Net.WebSockets.Client\n  namespace: System.Net.WebSockets\n  summary: Gets or sets a <xref href=\"System.Boolean\"></xref> value that indicates if default credentials should be used during WebSocket handshake.\n  syntax:\n    content: public bool UseDefaultCredentials { get; set; }\n    return:\n      type: System.Boolean\n      description: \"Returns <xref href=\\\"System.Boolean\\\"></xref>.  \\n  \\n `true` if default credentials should be used during WebSocket handshake; otherwise `false`. The default is `true`.\"\n  overload: System.Net.WebSockets.ClientWebSocketOptions.UseDefaultCredentials*\n  exceptions: []\n  version:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.WebSockets/ClientWebSocketOptions.xml\n  ms.author: bobdel\n  manager: markl\nreferences:\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.Net.WebSockets.ClientWebSocketOptions.#ctor\n  parent: System.Net.WebSockets.ClientWebSocketOptions\n  isExternal: false\n  name: ClientWebSocketOptions()\n  nameWithType: ClientWebSocketOptions.ClientWebSocketOptions()\n  fullName: ClientWebSocketOptions.ClientWebSocketOptions()\n- uid: System.Net.WebSockets.ClientWebSocketOptions.AddSubProtocol(System.String)\n  parent: System.Net.WebSockets.ClientWebSocketOptions\n  isExternal: false\n  name: AddSubProtocol(String)\n  nameWithType: ClientWebSocketOptions.AddSubProtocol(String)\n  fullName: ClientWebSocketOptions.AddSubProtocol(String)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Net.WebSockets.ClientWebSocketOptions.ClientCertificates\n  parent: System.Net.WebSockets.ClientWebSocketOptions\n  isExternal: false\n  name: ClientCertificates\n  nameWithType: ClientWebSocketOptions.ClientCertificates\n  fullName: ClientWebSocketOptions.ClientCertificates\n- uid: System.Security.Cryptography.X509Certificates.X509CertificateCollection\n  parent: System.Security.Cryptography.X509Certificates\n  isExternal: false\n  name: X509CertificateCollection\n  nameWithType: X509CertificateCollection\n  fullName: System.Security.Cryptography.X509Certificates.X509CertificateCollection\n- uid: System.Net.WebSockets.ClientWebSocketOptions.Cookies\n  parent: System.Net.WebSockets.ClientWebSocketOptions\n  isExternal: false\n  name: Cookies\n  nameWithType: ClientWebSocketOptions.Cookies\n  fullName: ClientWebSocketOptions.Cookies\n- uid: System.Net.CookieContainer\n  parent: System.Net\n  isExternal: false\n  name: CookieContainer\n  nameWithType: CookieContainer\n  fullName: System.Net.CookieContainer\n- uid: System.Net.WebSockets.ClientWebSocketOptions.Credentials\n  parent: System.Net.WebSockets.ClientWebSocketOptions\n  isExternal: false\n  name: Credentials\n  nameWithType: ClientWebSocketOptions.Credentials\n  fullName: ClientWebSocketOptions.Credentials\n- uid: System.Net.ICredentials\n  parent: System.Net\n  isExternal: false\n  name: ICredentials\n  nameWithType: ICredentials\n  fullName: System.Net.ICredentials\n- uid: System.Net.WebSockets.ClientWebSocketOptions.KeepAliveInterval\n  parent: System.Net.WebSockets.ClientWebSocketOptions\n  isExternal: false\n  name: KeepAliveInterval\n  nameWithType: ClientWebSocketOptions.KeepAliveInterval\n  fullName: ClientWebSocketOptions.KeepAliveInterval\n- uid: System.TimeSpan\n  parent: System\n  isExternal: false\n  name: TimeSpan\n  nameWithType: TimeSpan\n  fullName: System.TimeSpan\n- uid: System.Net.WebSockets.ClientWebSocketOptions.Proxy\n  parent: System.Net.WebSockets.ClientWebSocketOptions\n  isExternal: false\n  name: Proxy\n  nameWithType: ClientWebSocketOptions.Proxy\n  fullName: ClientWebSocketOptions.Proxy\n- uid: System.Net.IWebProxy\n  parent: System.Net\n  isExternal: false\n  name: IWebProxy\n  nameWithType: IWebProxy\n  fullName: System.Net.IWebProxy\n- uid: System.Net.WebSockets.ClientWebSocketOptions.SetBuffer(System.Int32,System.Int32)\n  parent: System.Net.WebSockets.ClientWebSocketOptions\n  isExternal: false\n  name: SetBuffer(Int32, Int32)\n  nameWithType: ClientWebSocketOptions.SetBuffer(Int32, Int32)\n  fullName: ClientWebSocketOptions.SetBuffer(Int32, Int32)\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Net.WebSockets.ClientWebSocketOptions.SetBuffer(System.Int32,System.Int32,System.ArraySegment{System.Byte})\n  parent: System.Net.WebSockets.ClientWebSocketOptions\n  isExternal: false\n  name: SetBuffer(Int32, Int32, ArraySegment<Byte>)\n  nameWithType: ClientWebSocketOptions.SetBuffer(Int32, Int32, ArraySegment<Byte>)\n  fullName: ClientWebSocketOptions.SetBuffer(Int32, Int32, ArraySegment<Byte>)\n- uid: System.ArraySegment`1\n  name: ArraySegment<T>\n  nameWithType: ArraySegment<T>\n  fullName: System.ArraySegment<T>\n- uid: System.Byte\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte\n- uid: System.ArraySegment{System.Byte}\n  parent: System\n  isExternal: false\n  name: ArraySegment<Byte>\n  nameWithType: ArraySegment<Byte>\n  fullName: System.ArraySegment<System.Byte>\n  spec.csharp:\n  - uid: System.ArraySegment`1\n    name: ArraySegment\n    nameWithType: ArraySegment\n    fullName: System.ArraySegment\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Byte\n    name: Byte\n    nameWithType: Byte\n    fullName: System.Byte\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Net.WebSockets.ClientWebSocketOptions.SetRequestHeader(System.String,System.String)\n  parent: System.Net.WebSockets.ClientWebSocketOptions\n  isExternal: false\n  name: SetRequestHeader(String, String)\n  nameWithType: ClientWebSocketOptions.SetRequestHeader(String, String)\n  fullName: ClientWebSocketOptions.SetRequestHeader(String, String)\n- uid: System.Net.WebSockets.ClientWebSocketOptions.UseDefaultCredentials\n  parent: System.Net.WebSockets.ClientWebSocketOptions\n  isExternal: false\n  name: UseDefaultCredentials\n  nameWithType: ClientWebSocketOptions.UseDefaultCredentials\n  fullName: ClientWebSocketOptions.UseDefaultCredentials\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Net.WebSockets.ClientWebSocketOptions.#ctor*\n  parent: System.Net.WebSockets.ClientWebSocketOptions\n  isExternal: false\n  name: ClientWebSocketOptions\n  nameWithType: ClientWebSocketOptions.ClientWebSocketOptions\n  fullName: ClientWebSocketOptions.ClientWebSocketOptions\n  monikers:\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.WebSockets/ClientWebSocketOptions.xml\n- uid: System.Net.WebSockets.ClientWebSocketOptions.AddSubProtocol*\n  parent: System.Net.WebSockets.ClientWebSocketOptions\n  isExternal: false\n  name: AddSubProtocol\n  nameWithType: ClientWebSocketOptions.AddSubProtocol\n  fullName: ClientWebSocketOptions.AddSubProtocol\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.WebSockets/ClientWebSocketOptions.xml\n- uid: System.Net.WebSockets.ClientWebSocketOptions.ClientCertificates*\n  parent: System.Net.WebSockets.ClientWebSocketOptions\n  isExternal: false\n  name: ClientCertificates\n  nameWithType: ClientWebSocketOptions.ClientCertificates\n  fullName: ClientWebSocketOptions.ClientCertificates\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.WebSockets/ClientWebSocketOptions.xml\n- uid: System.Net.WebSockets.ClientWebSocketOptions.Cookies*\n  parent: System.Net.WebSockets.ClientWebSocketOptions\n  isExternal: false\n  name: Cookies\n  nameWithType: ClientWebSocketOptions.Cookies\n  fullName: ClientWebSocketOptions.Cookies\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.WebSockets/ClientWebSocketOptions.xml\n- uid: System.Net.WebSockets.ClientWebSocketOptions.Credentials*\n  parent: System.Net.WebSockets.ClientWebSocketOptions\n  isExternal: false\n  name: Credentials\n  nameWithType: ClientWebSocketOptions.Credentials\n  fullName: ClientWebSocketOptions.Credentials\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.WebSockets/ClientWebSocketOptions.xml\n- uid: System.Net.WebSockets.ClientWebSocketOptions.KeepAliveInterval*\n  parent: System.Net.WebSockets.ClientWebSocketOptions\n  isExternal: false\n  name: KeepAliveInterval\n  nameWithType: ClientWebSocketOptions.KeepAliveInterval\n  fullName: ClientWebSocketOptions.KeepAliveInterval\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.WebSockets/ClientWebSocketOptions.xml\n- uid: System.Net.WebSockets.ClientWebSocketOptions.Proxy*\n  parent: System.Net.WebSockets.ClientWebSocketOptions\n  isExternal: false\n  name: Proxy\n  nameWithType: ClientWebSocketOptions.Proxy\n  fullName: ClientWebSocketOptions.Proxy\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.WebSockets/ClientWebSocketOptions.xml\n- uid: System.Net.WebSockets.ClientWebSocketOptions.SetBuffer*\n  parent: System.Net.WebSockets.ClientWebSocketOptions\n  isExternal: false\n  name: SetBuffer\n  nameWithType: ClientWebSocketOptions.SetBuffer\n  fullName: ClientWebSocketOptions.SetBuffer\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.WebSockets/ClientWebSocketOptions.xml\n- uid: System.Net.WebSockets.ClientWebSocketOptions.SetRequestHeader*\n  parent: System.Net.WebSockets.ClientWebSocketOptions\n  isExternal: false\n  name: SetRequestHeader\n  nameWithType: ClientWebSocketOptions.SetRequestHeader\n  fullName: ClientWebSocketOptions.SetRequestHeader\n  monikers:\n  - netcore-1.0\n  - netcore-1.1\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.WebSockets/ClientWebSocketOptions.xml\n- uid: System.Net.WebSockets.ClientWebSocketOptions.UseDefaultCredentials*\n  parent: System.Net.WebSockets.ClientWebSocketOptions\n  isExternal: false\n  name: UseDefaultCredentials\n  nameWithType: ClientWebSocketOptions.UseDefaultCredentials\n  fullName: ClientWebSocketOptions.UseDefaultCredentials\n  monikers:\n  - netcore-2.0\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - netstandard-2.0\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.WebSockets/ClientWebSocketOptions.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n"}