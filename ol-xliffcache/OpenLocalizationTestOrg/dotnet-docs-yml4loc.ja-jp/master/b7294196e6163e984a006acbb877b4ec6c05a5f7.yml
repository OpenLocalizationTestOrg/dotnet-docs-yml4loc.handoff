### YamlMime:ManagedReference
items:
- uid: System.Windows.VisualTransition
  commentId: T:System.Windows.VisualTransition
  id: VisualTransition
  children:
  - System.Windows.VisualTransition.#ctor
  - System.Windows.VisualTransition.From
  - System.Windows.VisualTransition.GeneratedDuration
  - System.Windows.VisualTransition.GeneratedEasingFunction
  - System.Windows.VisualTransition.Storyboard
  - System.Windows.VisualTransition.To
  langs:
  - csharp
  name: VisualTransition
  nameWithType: VisualTransition
  fullName: System.Windows.VisualTransition
  type: Class
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: Represents the visual behavior that occurs when a control transitions from one state to another.
  remarks: "You can specify the visual behavior of a control when it transitions between states by adding <xref:System.Windows.VisualTransition> objects. When you create a <xref:System.Windows.VisualTransition>, you specify one or more of the following:  \n  \n-   The time it takes for a transition between states to occur by setting the <xref:System.Windows.VisualTransition.GeneratedDuration%2A> property.  \n  \n-   Additional changes in the control's appearance that occur at the time of the transition by setting the <xref:System.Windows.VisualTransition.Storyboard%2A> property.  \n  \n-   When the <xref:System.Windows.VisualTransition> is applied by setting the <xref:System.Windows.VisualTransition.To%2A> and <xref:System.Windows.VisualTransition.From%2A> properties."
  example:
  - "The following example creates a <xref:System.Windows.VisualTransition> that specifies that when the user moves the mouse away from the control, the control's border changes to blue, then to yellow, and then to black in 1.5 seconds. For the entire example, see [Customizing the Appearance of an Existing Control by Creating a ControlTemplate](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md).  \n  \n [!code-xml[VSMButtonTemplate#8](~/samples/snippets/csharp/VS_Snippets_Wpf/vsmbuttontemplate/csharp/skinnedbutton.xaml#8)]"
  syntax:
    content: >-
      [System.Windows.Markup.ContentProperty("Storyboard")]

      public class VisualTransition : System.Windows.DependencyObject
  inheritance:
  - System.Object
  - System.Windows.Threading.DispatcherObject
  - System.Windows.DependencyObject
  implements: []
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyPropertyKey)
  - System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.DependencyObjectType
  - System.Windows.DependencyObject.Equals(System.Object)
  - System.Windows.DependencyObject.GetHashCode
  - System.Windows.DependencyObject.GetLocalValueEnumerator
  - System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.InvalidateProperty(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.IsSealed
  - System.Windows.DependencyObject.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)
  - System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)
  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)
  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyPropertyKey,System.Object)
  - System.Windows.DependencyObject.ShouldSerializeProperty(System.Windows.DependencyProperty)
  - System.Windows.Threading.DispatcherObject.CheckAccess
  - System.Windows.Threading.DispatcherObject.Dispatcher
  - System.Windows.Threading.DispatcherObject.VerifyAccess
  attributes:
  - type: System.Windows.Markup.ContentPropertyAttribute
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/VisualTransition.xml
  ms.technology:
  - dotnet-wpf
  ms.author: kempb
  manager: ghogen
- uid: System.Windows.VisualTransition.#ctor
  commentId: M:System.Windows.VisualTransition.#ctor
  id: '#ctor'
  parent: System.Windows.VisualTransition
  langs:
  - csharp
  name: VisualTransition()
  nameWithType: VisualTransition.VisualTransition()
  fullName: VisualTransition.VisualTransition()
  type: Constructor
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: Initializes a new instance of the <xref href="System.Windows.VisualTransition"></xref> class.
  syntax:
    content: public VisualTransition ();
    parameters: []
  overload: System.Windows.VisualTransition.#ctor*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/VisualTransition.xml
  ms.technology:
  - dotnet-wpf
  ms.author: kempb
  manager: ghogen
- uid: System.Windows.VisualTransition.From
  commentId: P:System.Windows.VisualTransition.From
  id: From
  parent: System.Windows.VisualTransition
  langs:
  - csharp
  name: From
  nameWithType: VisualTransition.From
  fullName: VisualTransition.From
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: Gets or sets the name of the <xref href="System.Windows.VisualState"></xref> to transition from.
  remarks: "The <xref:System.Windows.VisualTransition.From%2A> property is optional. A <xref:System.Windows.VisualTransition> can be restricted to apply to only certain states or it can be applied any time the control transitions between states. You restrict when a <xref:System.Windows.VisualTransition> is applied by setting the <xref:System.Windows.VisualTransition.To%2A> and <xref:System.Windows.VisualTransition.From%2A> properties. The following table describes the levels of restriction from most restrictive to least restrictive.  \n  \n|Type of restriction|Value of From|Value of To|  \n|-------------------------|-------------------|-----------------|  \n|From a specified state to another specified state|The name of a <xref:System.Windows.VisualState>|The name of a <xref:System.Windows.VisualState>|  \n|From any state to a specified state|Not set|The name of a <xref:System.Windows.VisualState>|  \n|From a specified state to any state|The name of a <xref:System.Windows.VisualState>|Not set|  \n|From any state to any other state|Not set|Not set|  \n  \n You can have multiple <xref:System.Windows.VisualTransition> objects in a <xref:System.Windows.VisualStateGroup> that refer to the same state, but they will be used in the order that the previous table specifies.  \n  \n You can change this behavior by creating a new class that inherits from <xref:System.Windows.VisualStateManager> and overriding the <xref:System.Windows.VisualStateManager.GoToStateCore%2A> method."
  example:
  - "The following example creates two <xref:System.Windows.VisualTransition> objects. When the control transitions from the `Pressed` state to the `MouseOver` state, the <xref:System.Windows.VisualTransition> that has both <xref:System.Windows.VisualTransition.From%2A> and <xref:System.Windows.VisualTransition.To%2A> set is used. When the control transitions from a state that is not `Pressed` to the `MouseOver` state, the other state is used.  \n  \n [!code-xml[VSMButtonTemplate#7](~/samples/snippets/csharp/VS_Snippets_Wpf/vsmbuttontemplate/csharp/skinnedbutton.xaml#7)]"
  syntax:
    content: public string From { get; set; }
    return:
      type: System.String
      description: The name of the <xref href="System.Windows.VisualState"></xref> to transition from.
  overload: System.Windows.VisualTransition.From*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/VisualTransition.xml
  ms.technology:
  - dotnet-wpf
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.Windows.VisualTransition.GeneratedDuration
  commentId: P:System.Windows.VisualTransition.GeneratedDuration
  id: GeneratedDuration
  parent: System.Windows.VisualTransition
  langs:
  - csharp
  name: GeneratedDuration
  nameWithType: VisualTransition.GeneratedDuration
  fullName: VisualTransition.GeneratedDuration
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: Gets or sets the time that it takes to move from one state to another.
  remarks: You can specify how long a transition takes by setting the <xref:System.Windows.VisualTransition.GeneratedDuration%2A> property. When you set the <xref:System.Windows.VisualTransition.GeneratedDuration%2A> property, you are specifying the time that it takes for the transition to occur.
  example:
  - "The following example specifies that the control takes one half second to go into the `MouseOver` state. For the entire example, see [Customizing the Appearance of an Existing Control by Creating a ControlTemplate](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md).  \n  \n [!code-xml[VSMButtonTemplate#MouseOverTransition](~/samples/snippets/csharp/VS_Snippets_Wpf/vsmbuttontemplate/csharp/skinnedbutton.xaml#mouseovertransition)]"
  syntax:
    content: >-
      [System.ComponentModel.TypeConverter(typeof(System.Windows.DurationConverter))]

      public System.Windows.Duration GeneratedDuration { get; set; }
    return:
      type: System.Windows.Duration
      description: The time that it takes to move from one state to another.
  overload: System.Windows.VisualTransition.GeneratedDuration*
  exceptions: []
  attributes:
  - type: System.ComponentModel.TypeConverterAttribute
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/VisualTransition.xml
  ms.technology:
  - dotnet-wpf
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.Windows.VisualTransition.GeneratedEasingFunction
  commentId: P:System.Windows.VisualTransition.GeneratedEasingFunction
  id: GeneratedEasingFunction
  parent: System.Windows.VisualTransition
  langs:
  - csharp
  name: GeneratedEasingFunction
  nameWithType: VisualTransition.GeneratedEasingFunction
  fullName: VisualTransition.GeneratedEasingFunction
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: Gets or sets a custom mathematical formula that is used to transition between states.
  remarks: You can set the <xref:System.Windows.VisualTransition.GeneratedEasingFunction%2A> property to specify the way a transition occurs. For example, you can specify an easing function to accelerate or decelerate the transition. For more information, see [Easing Functions](~/docs/framework/wpf/graphics-multimedia/easing-functions.md).
  example:
  - "The following example creates a <xref:System.Windows.VisualTransition> that causes a <xref:System.Windows.Shapes.Rectangle> to move vertically when the user presses the mouse button over the <xref:System.Windows.Controls.Canvas>. The example sets the <xref:System.Windows.VisualTransition.GeneratedEasingFunction%2A> property to a <xref:System.Windows.Media.Animation.BounceEase> object to cause the <xref:System.Windows.Shapes.Rectangle> to appear to bounce when it reaches its destination. The <xref:System.Windows.VisualTransition> that is used when the user releases the button has another <xref:System.Windows.Media.Animation.BounceEase> object to cause the <xref:System.Windows.Shapes.Rectangle> to bounce before it returns to its original position.  \n  \n [!code-xml[VSMCustomControl#VSMEasingFunction](~/samples/snippets/csharp/VS_Snippets_Wpf/vsmcustomcontrol/csharp/window1.xaml#vsmeasingfunction)]  \n  \n The following example shows the event handler for the <xref:System.Windows.UIElement3D.MouseDown> and <xref:System.Windows.UIElement.MouseUp> events. The example calls the <xref:System.Windows.VisualStateManager.GoToElementState%2A> method to change the <xref:System.Windows.VisualState> of the canvas.  \n  \n [!code-csharp[VSMCustomControl#VSMEasingFunctionLogic](~/samples/snippets/csharp/VS_Snippets_Wpf/vsmcustomcontrol/csharp/window1.xaml.cs#vsmeasingfunctionlogic)]\n [!code-vb[VSMCustomControl#VSMEasingFunctionLogic](~/samples/snippets/visualbasic/VS_Snippets_Wpf/vsmcustomcontrol/visualbasic/window1.xaml.vb#vsmeasingfunctionlogic)]"
  syntax:
    content: public System.Windows.Media.Animation.IEasingFunction GeneratedEasingFunction { get; set; }
    return:
      type: System.Windows.Media.Animation.IEasingFunction
      description: A custom mathematical formula that is used to transition between states.
  overload: System.Windows.VisualTransition.GeneratedEasingFunction*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/VisualTransition.xml
  ms.technology:
  - dotnet-wpf
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.Windows.VisualTransition.Storyboard
  commentId: P:System.Windows.VisualTransition.Storyboard
  id: Storyboard
  parent: System.Windows.VisualTransition
  langs:
  - csharp
  name: Storyboard
  nameWithType: VisualTransition.Storyboard
  fullName: VisualTransition.Storyboard
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: Gets or sets the <xref href="System.Windows.Media.Animation.Storyboard"></xref> that occurs when the transition occurs.
  remarks: When a <xref:System.Windows.VisualTransition> contains a <xref:System.Windows.Media.Animation.Storyboard>, the <xref:System.Windows.Media.Animation.Storyboard> runs any time the <xref:System.Windows.VisualTransition> is applied. For example, if you want the border of a <xref:System.Windows.Controls.Button> to change colors when the user moves the mouse away from it, you can create a <xref:System.Windows.VisualTransition> that has a <xref:System.Windows.Media.Animation.Storyboard> that changes the button's background.
  example:
  - "The following example creates a <xref:System.Windows.VisualTransition> that specifies that when the user moves the mouse away from the control, the control's border changes to blue, then to yellow, and then to black in 1.5 seconds. For the entire example, see [Customizing the Appearance of an Existing Control by Creating a ControlTemplate](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md).  \n  \n [!code-xml[VSMButtonTemplate#8](~/samples/snippets/csharp/VS_Snippets_Wpf/vsmbuttontemplate/csharp/skinnedbutton.xaml#8)]"
  syntax:
    content: public System.Windows.Media.Animation.Storyboard Storyboard { get; set; }
    return:
      type: System.Windows.Media.Animation.Storyboard
      description: The <xref href="System.Windows.Media.Animation.Storyboard"></xref> that occurs when the transition occurs.
  overload: System.Windows.VisualTransition.Storyboard*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/VisualTransition.xml
  ms.technology:
  - dotnet-wpf
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.Windows.VisualTransition.To
  commentId: P:System.Windows.VisualTransition.To
  id: To
  parent: System.Windows.VisualTransition
  langs:
  - csharp
  name: To
  nameWithType: VisualTransition.To
  fullName: VisualTransition.To
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: Gets or sets the name of the <xref href="System.Windows.VisualState"></xref> to transition to.
  remarks: "The <xref:System.Windows.VisualTransition.To%2A> property is optional. A <xref:System.Windows.VisualTransition> can be restricted to apply to only certain states or it can be applied any time the control transitions between states. You restrict when a <xref:System.Windows.VisualTransition> is applied by setting the <xref:System.Windows.VisualTransition.To%2A> and <xref:System.Windows.VisualTransition.From%2A> properties. The following table describes the levels of restriction from most restrictive to least restrictive.  \n  \n|Type of restriction|Value of From|Value of To|  \n|-------------------------|-------------------|-----------------|  \n|From a specified state to another specified state|The name of a <xref:System.Windows.VisualState>|The name of a <xref:System.Windows.VisualState>|  \n|From any state to a specified state|Not set|The name of a <xref:System.Windows.VisualState>|  \n|From a specified state to any state|The name of a <xref:System.Windows.VisualState>|Not set|  \n|From any state to any other state|Not set|Not set|  \n  \n You can have multiple <xref:System.Windows.VisualTransition> objects in a <xref:System.Windows.VisualStateGroup> that refer to the same state, but they will be used in the order that the previous table specifies.  \n  \n You can change this behavior by creating a new class that inherits from <xref:System.Windows.VisualStateManager> and overriding the <xref:System.Windows.VisualStateManager.GoToStateCore%2A> method."
  example:
  - "The following example creates two <xref:System.Windows.VisualTransition> objects. When the control transitions from the `Pressed` state to the `MouseOver` state, the <xref:System.Windows.VisualTransition> that has both <xref:System.Windows.VisualTransition.From%2A> and <xref:System.Windows.VisualTransition.To%2A> set is used. When the control transitions from a state that is not `Pressed` to the `MouseOver` state, the other state is used.  \n  \n [!code-xml[VSMButtonTemplate#7](~/samples/snippets/csharp/VS_Snippets_Wpf/vsmbuttontemplate/csharp/skinnedbutton.xaml#7)]"
  syntax:
    content: public string To { get; set; }
    return:
      type: System.String
      description: The name of the <xref href="System.Windows.VisualState"></xref> to transition to.
  overload: System.Windows.VisualTransition.To*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/VisualTransition.xml
  ms.technology:
  - dotnet-wpf
  author: stevehoag
  ms.author: shoag
  manager: wpickett
references:
- uid: System.Windows.DependencyObject
  parent: System.Windows
  isExternal: false
  name: DependencyObject
  nameWithType: DependencyObject
  fullName: System.Windows.DependencyObject
- uid: System.Windows.VisualTransition.#ctor
  parent: System.Windows.VisualTransition
  isExternal: false
  name: VisualTransition()
  nameWithType: VisualTransition.VisualTransition()
  fullName: VisualTransition.VisualTransition()
- uid: System.Windows.VisualTransition.From
  parent: System.Windows.VisualTransition
  isExternal: false
  name: From
  nameWithType: VisualTransition.From
  fullName: VisualTransition.From
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Windows.VisualTransition.GeneratedDuration
  parent: System.Windows.VisualTransition
  isExternal: false
  name: GeneratedDuration
  nameWithType: VisualTransition.GeneratedDuration
  fullName: VisualTransition.GeneratedDuration
- uid: System.Windows.Duration
  parent: System.Windows
  isExternal: false
  name: Duration
  nameWithType: Duration
  fullName: System.Windows.Duration
- uid: System.Windows.VisualTransition.GeneratedEasingFunction
  parent: System.Windows.VisualTransition
  isExternal: false
  name: GeneratedEasingFunction
  nameWithType: VisualTransition.GeneratedEasingFunction
  fullName: VisualTransition.GeneratedEasingFunction
- uid: System.Windows.Media.Animation.IEasingFunction
  parent: System.Windows.Media.Animation
  isExternal: false
  name: IEasingFunction
  nameWithType: IEasingFunction
  fullName: System.Windows.Media.Animation.IEasingFunction
- uid: System.Windows.VisualTransition.Storyboard
  parent: System.Windows.VisualTransition
  isExternal: false
  name: Storyboard
  nameWithType: VisualTransition.Storyboard
  fullName: VisualTransition.Storyboard
- uid: System.Windows.Media.Animation.Storyboard
  parent: System.Windows.Media.Animation
  isExternal: false
  name: Storyboard
  nameWithType: Storyboard
  fullName: System.Windows.Media.Animation.Storyboard
- uid: System.Windows.VisualTransition.To
  parent: System.Windows.VisualTransition
  isExternal: false
  name: To
  nameWithType: VisualTransition.To
  fullName: VisualTransition.To
- uid: System.Windows.VisualTransition.#ctor*
  parent: System.Windows.VisualTransition
  isExternal: false
  name: VisualTransition
  nameWithType: VisualTransition.VisualTransition
  fullName: VisualTransition.VisualTransition
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/VisualTransition.xml
- uid: System.Windows.VisualTransition.From*
  parent: System.Windows.VisualTransition
  isExternal: false
  name: From
  nameWithType: VisualTransition.From
  fullName: VisualTransition.From
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/VisualTransition.xml
- uid: System.Windows.VisualTransition.GeneratedDuration*
  parent: System.Windows.VisualTransition
  isExternal: false
  name: GeneratedDuration
  nameWithType: VisualTransition.GeneratedDuration
  fullName: VisualTransition.GeneratedDuration
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/VisualTransition.xml
- uid: System.Windows.VisualTransition.GeneratedEasingFunction*
  parent: System.Windows.VisualTransition
  isExternal: false
  name: GeneratedEasingFunction
  nameWithType: VisualTransition.GeneratedEasingFunction
  fullName: VisualTransition.GeneratedEasingFunction
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/VisualTransition.xml
- uid: System.Windows.VisualTransition.Storyboard*
  parent: System.Windows.VisualTransition
  isExternal: false
  name: Storyboard
  nameWithType: VisualTransition.Storyboard
  fullName: VisualTransition.Storyboard
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/VisualTransition.xml
- uid: System.Windows.VisualTransition.To*
  parent: System.Windows.VisualTransition
  isExternal: false
  name: To
  nameWithType: VisualTransition.To
  fullName: VisualTransition.To
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/VisualTransition.xml
- uid: System.Windows.DependencyObject.Equals(System.Object)
  parent: System.Windows.DependencyObject
  isExternal: false
  name: Equals(Object)
  nameWithType: DependencyObject.Equals(Object)
  fullName: DependencyObject.Equals(Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: Object.Equals(Object, Object)
- uid: System.Windows.DependencyObject.GetHashCode
  parent: System.Windows.DependencyObject
  isExternal: false
  name: GetHashCode()
  nameWithType: DependencyObject.GetHashCode()
  fullName: DependencyObject.GetHashCode()
- uid: System.Object.GetType
  parent: System.Object
  isExternal: false
  name: GetType()
  nameWithType: Object.GetType()
  fullName: Object.GetType()
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: false
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: Object.MemberwiseClone()
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: Object.ReferenceEquals(Object, Object)
- uid: System.Object.ToString
  parent: System.Object
  isExternal: false
  name: ToString()
  nameWithType: Object.ToString()
  fullName: Object.ToString()
- uid: System.Windows.Threading.DispatcherObject.CheckAccess
  parent: System.Windows.Threading.DispatcherObject
  isExternal: false
  name: CheckAccess()
  nameWithType: DispatcherObject.CheckAccess()
  fullName: DispatcherObject.CheckAccess()
- uid: System.Windows.Threading.DispatcherObject.Dispatcher
  parent: System.Windows.Threading.DispatcherObject
  isExternal: false
  name: Dispatcher
  nameWithType: DispatcherObject.Dispatcher
  fullName: DispatcherObject.Dispatcher
- uid: System.Windows.Threading.DispatcherObject.VerifyAccess
  parent: System.Windows.Threading.DispatcherObject
  isExternal: false
  name: VerifyAccess()
  nameWithType: DispatcherObject.VerifyAccess()
  fullName: DispatcherObject.VerifyAccess()
- uid: System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)
  parent: System.Windows.DependencyObject
  isExternal: false
  name: ClearValue(DependencyProperty)
  nameWithType: DependencyObject.ClearValue(DependencyProperty)
  fullName: DependencyObject.ClearValue(DependencyProperty)
- uid: System.Windows.DependencyObject.ClearValue(System.Windows.DependencyPropertyKey)
  parent: System.Windows.DependencyObject
  isExternal: false
  name: ClearValue(DependencyPropertyKey)
  nameWithType: DependencyObject.ClearValue(DependencyPropertyKey)
  fullName: DependencyObject.ClearValue(DependencyPropertyKey)
- uid: System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)
  parent: System.Windows.DependencyObject
  isExternal: false
  name: CoerceValue(DependencyProperty)
  nameWithType: DependencyObject.CoerceValue(DependencyProperty)
  fullName: DependencyObject.CoerceValue(DependencyProperty)
- uid: System.Windows.DependencyObject.DependencyObjectType
  parent: System.Windows.DependencyObject
  isExternal: false
  name: DependencyObjectType
  nameWithType: DependencyObject.DependencyObjectType
  fullName: DependencyObject.DependencyObjectType
- uid: System.Windows.DependencyObject.GetLocalValueEnumerator
  parent: System.Windows.DependencyObject
  isExternal: false
  name: GetLocalValueEnumerator()
  nameWithType: DependencyObject.GetLocalValueEnumerator()
  fullName: DependencyObject.GetLocalValueEnumerator()
- uid: System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)
  parent: System.Windows.DependencyObject
  isExternal: false
  name: GetValue(DependencyProperty)
  nameWithType: DependencyObject.GetValue(DependencyProperty)
  fullName: DependencyObject.GetValue(DependencyProperty)
- uid: System.Windows.DependencyObject.InvalidateProperty(System.Windows.DependencyProperty)
  parent: System.Windows.DependencyObject
  isExternal: false
  name: InvalidateProperty(DependencyProperty)
  nameWithType: DependencyObject.InvalidateProperty(DependencyProperty)
  fullName: DependencyObject.InvalidateProperty(DependencyProperty)
- uid: System.Windows.DependencyObject.IsSealed
  parent: System.Windows.DependencyObject
  isExternal: false
  name: IsSealed
  nameWithType: DependencyObject.IsSealed
  fullName: DependencyObject.IsSealed
- uid: System.Windows.DependencyObject.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)
  parent: System.Windows.DependencyObject
  isExternal: false
  name: OnPropertyChanged(DependencyPropertyChangedEventArgs)
  nameWithType: DependencyObject.OnPropertyChanged(DependencyPropertyChangedEventArgs)
  fullName: DependencyObject.OnPropertyChanged(DependencyPropertyChangedEventArgs)
- uid: System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)
  parent: System.Windows.DependencyObject
  isExternal: false
  name: ReadLocalValue(DependencyProperty)
  nameWithType: DependencyObject.ReadLocalValue(DependencyProperty)
  fullName: DependencyObject.ReadLocalValue(DependencyProperty)
- uid: System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)
  parent: System.Windows.DependencyObject
  isExternal: false
  name: SetCurrentValue(DependencyProperty, Object)
  nameWithType: DependencyObject.SetCurrentValue(DependencyProperty, Object)
  fullName: DependencyObject.SetCurrentValue(DependencyProperty, Object)
- uid: System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)
  parent: System.Windows.DependencyObject
  isExternal: false
  name: SetValue(DependencyProperty, Object)
  nameWithType: DependencyObject.SetValue(DependencyProperty, Object)
  fullName: DependencyObject.SetValue(DependencyProperty, Object)
- uid: System.Windows.DependencyObject.SetValue(System.Windows.DependencyPropertyKey,System.Object)
  parent: System.Windows.DependencyObject
  isExternal: false
  name: SetValue(DependencyPropertyKey, Object)
  nameWithType: DependencyObject.SetValue(DependencyPropertyKey, Object)
  fullName: DependencyObject.SetValue(DependencyPropertyKey, Object)
- uid: System.Windows.DependencyObject.ShouldSerializeProperty(System.Windows.DependencyProperty)
  parent: System.Windows.DependencyObject
  isExternal: false
  name: ShouldSerializeProperty(DependencyProperty)
  nameWithType: DependencyObject.ShouldSerializeProperty(DependencyProperty)
  fullName: DependencyObject.ShouldSerializeProperty(DependencyProperty)
