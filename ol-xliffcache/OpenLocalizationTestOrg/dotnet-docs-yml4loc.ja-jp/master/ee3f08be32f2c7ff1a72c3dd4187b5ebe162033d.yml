### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.CommandEventArgs
  commentId: T:System.Web.UI.WebControls.CommandEventArgs
  id: CommandEventArgs
  children:
  - System.Web.UI.WebControls.CommandEventArgs.#ctor(System.Web.UI.WebControls.CommandEventArgs)
  - System.Web.UI.WebControls.CommandEventArgs.#ctor(System.String,System.Object)
  - System.Web.UI.WebControls.CommandEventArgs.CommandArgument
  - System.Web.UI.WebControls.CommandEventArgs.CommandName
  langs:
  - csharp
  name: CommandEventArgs
  nameWithType: CommandEventArgs
  fullName: System.Web.UI.WebControls.CommandEventArgs
  type: Class
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: Provides data for the `Command` event.
  remarks: "The `Command` event is raised when a <xref:System.Web.UI.WebControls.Button> or <xref:System.Web.UI.WebControls.ImageButton> control is clicked.  \n  \n The <xref:System.Web.UI.WebControls.CommandEventArgs> object contains data about the `Command` event that can be accessed in the event handler. Using the properties available in the <xref:System.Web.UI.WebControls.CommandEventArgs> class, you can determine the name of the command to perform, such as `Sort`, in addition to an optional argument that supplements the command, such as `Ascending`.  \n  \n For a list of initial property values for an instance of <xref:System.Web.UI.WebControls.CommandEventArgs>, see the <xref:System.Web.UI.WebControls.CommandEventArgs.%23ctor%2A> constructor.  \n  \n For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."
  example:
  - "The following example demonstrates how to access the properties in <xref:System.Web.UI.WebControls.CommandEventArgs> to determine the command to perform. This example specifies the event handler declaratively, using the <xref:System.Web.UI.WebControls.Button.OnClick%2A> property of the <xref:System.Web.UI.WebControls.Button> control.  \n  \n <!-- TODO: review snippet reference [!code-csharp[ButtonCommandNameArgument#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ButtonCommandNameArgument/CS/buttoncommandnamecs.aspx#1)]  -->\n <!-- TODO: review snippet reference [!code-vb[ButtonCommandNameArgument#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ButtonCommandNameArgument/VB/buttoncommandnamevb.aspx#1)]  -->  \n  \n The following code example demonstrates how to specify the event handler and programmatically add it to the event in the `Page_Load` method.  \n  \n <!-- TODO: review snippet reference [!code-csharp[ButtonCommand#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ButtonCommand/CS/buttoncommandcs.aspx#1)]  -->\n <!-- TODO: review snippet reference [!code-vb[ButtonCommand#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ButtonCommand/VB/buttoncommandvb.aspx#1)]  -->"
  syntax:
    content: 'public class CommandEventArgs : EventArgs'
  inheritance:
  - System.Object
  - System.EventArgs
  derivedClasses:
  - System.Web.UI.MobileControls.ListCommandEventArgs
  - System.Web.UI.MobileControls.ObjectListCommandEventArgs
  - System.Web.UI.WebControls.DataGridCommandEventArgs
  - System.Web.UI.WebControls.DataListCommandEventArgs
  - System.Web.UI.WebControls.DataPagerCommandEventArgs
  - System.Web.UI.WebControls.DataPagerFieldCommandEventArgs
  - System.Web.UI.WebControls.DetailsViewCommandEventArgs
  - System.Web.UI.WebControls.FormViewCommandEventArgs
  - System.Web.UI.WebControls.GridViewCommandEventArgs
  - System.Web.UI.WebControls.ListViewCommandEventArgs
  - System.Web.UI.WebControls.MenuEventArgs
  - System.Web.UI.WebControls.RepeaterCommandEventArgs
  implements: []
  inheritedMembers:
  - System.EventArgs.Empty
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/CommandEventArgs.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.UI.WebControls.CommandEventArgs.#ctor(System.Web.UI.WebControls.CommandEventArgs)
  commentId: M:System.Web.UI.WebControls.CommandEventArgs.#ctor(System.Web.UI.WebControls.CommandEventArgs)
  id: '#ctor(System.Web.UI.WebControls.CommandEventArgs)'
  parent: System.Web.UI.WebControls.CommandEventArgs
  langs:
  - csharp
  name: CommandEventArgs(CommandEventArgs)
  nameWithType: CommandEventArgs.CommandEventArgs(CommandEventArgs)
  fullName: CommandEventArgs.CommandEventArgs(CommandEventArgs)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: Initializes a new instance of the <xref href="System.Web.UI.WebControls.CommandEventArgs"></xref> class with another <xref href="System.Web.UI.WebControls.CommandEventArgs"></xref> object.
  remarks: "Use this constructor to create and initialize a new instance of the <xref:System.Web.UI.WebControls.CommandEventArgs> class using the specified <xref:System.Web.UI.WebControls.CommandEventArgs> object.  \n  \n When an instance of <xref:System.Web.UI.WebControls.CommandEventArgs> is created by a call to this constructor, the following properties are initialized to the specified values.  \n  \n|Property|Initial Value|  \n|--------------|-------------------|  \n|CommandName|The `e.CommandName` parameter.|  \n|CommandArgument|The `e.CommandArgument` parameter.|"
  example:
  - "The following example demonstrates how to create and initialize a new instance of the <xref:System.Web.UI.WebControls.CommandEventArgs> class using the specified <xref:System.Web.UI.WebControls.CommandEventArgs> object.  \n  \n [!code-csharp[Classic CommandEventArgs.CommandEventArgs Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic CommandEventArgs.CommandEventArgs Example/CS/source.cs#1)]\n [!code-vb[Classic CommandEventArgs.CommandEventArgs Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic CommandEventArgs.CommandEventArgs Example/VB/source.vb#1)]"
  syntax:
    content: public CommandEventArgs (System.Web.UI.WebControls.CommandEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.CommandEventArgs
      description: A <xref href="System.Web.UI.WebControls.CommandEventArgs"></xref> that contains the event data.
  overload: System.Web.UI.WebControls.CommandEventArgs.#ctor*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/CommandEventArgs.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.UI.WebControls.CommandEventArgs.#ctor(System.String,System.Object)
  commentId: M:System.Web.UI.WebControls.CommandEventArgs.#ctor(System.String,System.Object)
  id: '#ctor(System.String,System.Object)'
  parent: System.Web.UI.WebControls.CommandEventArgs
  langs:
  - csharp
  name: CommandEventArgs(String, Object)
  nameWithType: CommandEventArgs.CommandEventArgs(String, Object)
  fullName: CommandEventArgs.CommandEventArgs(String, Object)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: Initializes a new instance of the <xref href="System.Web.UI.WebControls.CommandEventArgs"></xref> class with the specified command name and argument.
  remarks: "Use this constructor to create and initialize a new instance of the <xref:System.Web.UI.WebControls.CommandEventArgs> class using the specified command name and argument.  \n  \n When an instance of <xref:System.Web.UI.WebControls.CommandEventArgs> is created by a call to this constructor, the following properties are initialized to the specified values.  \n  \n|Property|Initial Value|  \n|--------------|-------------------|  \n|CommandName|The value of the `commandName` parameter.|  \n|CommandArgument|The value of the `argument` parameter.|"
  example:
  - "The following example demonstrates how to create and initialize a new instance of the <xref:System.Web.UI.WebControls.CommandEventArgs> class using the specified command name and argument.  \n  \n [!code-csharp[Classic CommandEventArgs.CommandEventArgs1 Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic CommandEventArgs.CommandEventArgs1 Example/CS/source.cs#1)]\n [!code-vb[Classic CommandEventArgs.CommandEventArgs1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic CommandEventArgs.CommandEventArgs1 Example/VB/source.vb#1)]"
  syntax:
    content: public CommandEventArgs (string commandName, object argument);
    parameters:
    - id: commandName
      type: System.String
      description: The name of the command.
    - id: argument
      type: System.Object
      description: A <xref href="System.Object"></xref> that contains the arguments for the command.
  overload: System.Web.UI.WebControls.CommandEventArgs.#ctor*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/CommandEventArgs.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.UI.WebControls.CommandEventArgs.CommandArgument
  commentId: P:System.Web.UI.WebControls.CommandEventArgs.CommandArgument
  id: CommandArgument
  parent: System.Web.UI.WebControls.CommandEventArgs
  langs:
  - csharp
  name: CommandArgument
  nameWithType: CommandEventArgs.CommandArgument
  fullName: CommandEventArgs.CommandArgument
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: Gets the argument for the command.
  remarks: The <xref:System.Web.UI.WebControls.CommandEventArgs.CommandArgument%2A> can contain any string set by the programmer. The <xref:System.Web.UI.WebControls.CommandEventArgs.CommandArgument%2A> property complements the <xref:System.Web.UI.WebControls.CommandEventArgs.CommandName%2A> property by allowing you to provide any additional information for the command. For example, you can set the <xref:System.Web.UI.WebControls.CommandEventArgs.CommandName%2A> property to `Sort` and set the <xref:System.Web.UI.WebControls.CommandEventArgs.CommandArgument%2A> property to `Ascending` to specify a command to sort in ascending order.
  example:
  - "The following example demonstrates how to use the <xref:System.Web.UI.WebControls.CommandEventArgs.CommandArgument%2A> property to determine supplemental information for the command to perform.  \n  \n <!-- TODO: review snippet reference [!code-csharp[ButtonCommandNameArgument#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ButtonCommandNameArgument/CS/buttoncommandnamecs.aspx#1)]  -->\n <!-- TODO: review snippet reference [!code-vb[ButtonCommandNameArgument#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ButtonCommandNameArgument/VB/buttoncommandnamevb.aspx#1)]  -->"
  syntax:
    content: public object CommandArgument { get; }
    return:
      type: System.Object
      description: A <xref href="System.Object"></xref> that contains the argument for the command.
  overload: System.Web.UI.WebControls.CommandEventArgs.CommandArgument*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/CommandEventArgs.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
- uid: System.Web.UI.WebControls.CommandEventArgs.CommandName
  commentId: P:System.Web.UI.WebControls.CommandEventArgs.CommandName
  id: CommandName
  parent: System.Web.UI.WebControls.CommandEventArgs
  langs:
  - csharp
  name: CommandName
  nameWithType: CommandEventArgs.CommandName
  fullName: CommandEventArgs.CommandName
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: Gets the name of the command.
  remarks: Use the <xref:System.Web.UI.WebControls.CommandEventArgs.CommandName%2A> property to determine the command to perform. The <xref:System.Web.UI.WebControls.CommandEventArgs.CommandName%2A> property can contain any string set by the programmer. The programmer can then identify the command name in code and perform the appropriate tasks.
  example:
  - "The following example demonstrates how to use the <xref:System.Web.UI.WebControls.CommandEventArgs.CommandName%2A> property to programmatically determine the command to perform.  \n  \n <!-- TODO: review snippet reference [!code-csharp[ButtonCommandNameArgument#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ButtonCommandNameArgument/CS/buttoncommandnamecs.aspx#1)]  -->\n <!-- TODO: review snippet reference [!code-vb[ButtonCommandNameArgument#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ButtonCommandNameArgument/VB/buttoncommandnamevb.aspx#1)]  -->"
  syntax:
    content: public string CommandName { get; }
    return:
      type: System.String
      description: The name of the command to perform.
  overload: System.Web.UI.WebControls.CommandEventArgs.CommandName*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/CommandEventArgs.xml
  ms.technology:
  - dotnet-webforms
  author: tdykstra
  ms.author: tdykstra
  manager: wpickett
references:
- uid: System.EventArgs
  parent: System
  isExternal: false
  name: EventArgs
  nameWithType: EventArgs
  fullName: System.EventArgs
- uid: System.Web.UI.WebControls.CommandEventArgs.#ctor(System.Web.UI.WebControls.CommandEventArgs)
  parent: System.Web.UI.WebControls.CommandEventArgs
  isExternal: false
  name: CommandEventArgs(CommandEventArgs)
  nameWithType: CommandEventArgs.CommandEventArgs(CommandEventArgs)
  fullName: CommandEventArgs.CommandEventArgs(CommandEventArgs)
- uid: System.Web.UI.WebControls.CommandEventArgs
  parent: System.Web.UI.WebControls
  isExternal: false
  name: CommandEventArgs
  nameWithType: CommandEventArgs
  fullName: System.Web.UI.WebControls.CommandEventArgs
- uid: System.Web.UI.WebControls.CommandEventArgs.#ctor(System.String,System.Object)
  parent: System.Web.UI.WebControls.CommandEventArgs
  isExternal: false
  name: CommandEventArgs(String, Object)
  nameWithType: CommandEventArgs.CommandEventArgs(String, Object)
  fullName: CommandEventArgs.CommandEventArgs(String, Object)
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Web.UI.WebControls.CommandEventArgs.CommandArgument
  parent: System.Web.UI.WebControls.CommandEventArgs
  isExternal: false
  name: CommandArgument
  nameWithType: CommandEventArgs.CommandArgument
  fullName: CommandEventArgs.CommandArgument
- uid: System.Web.UI.WebControls.CommandEventArgs.CommandName
  parent: System.Web.UI.WebControls.CommandEventArgs
  isExternal: false
  name: CommandName
  nameWithType: CommandEventArgs.CommandName
  fullName: CommandEventArgs.CommandName
- uid: System.Web.UI.WebControls.CommandEventArgs.#ctor*
  parent: System.Web.UI.WebControls.CommandEventArgs
  isExternal: false
  name: CommandEventArgs
  nameWithType: CommandEventArgs.CommandEventArgs
  fullName: CommandEventArgs.CommandEventArgs
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/CommandEventArgs.xml
- uid: System.Web.UI.WebControls.CommandEventArgs.CommandArgument*
  parent: System.Web.UI.WebControls.CommandEventArgs
  isExternal: false
  name: CommandArgument
  nameWithType: CommandEventArgs.CommandArgument
  fullName: CommandEventArgs.CommandArgument
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/CommandEventArgs.xml
- uid: System.Web.UI.WebControls.CommandEventArgs.CommandName*
  parent: System.Web.UI.WebControls.CommandEventArgs
  isExternal: false
  name: CommandName
  nameWithType: CommandEventArgs.CommandName
  fullName: CommandEventArgs.CommandName
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Web.UI.WebControls/CommandEventArgs.xml
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: Object.Equals(Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: Object.Equals(Object, Object)
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: false
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: Object.GetHashCode()
- uid: System.Object.GetType
  parent: System.Object
  isExternal: false
  name: GetType()
  nameWithType: Object.GetType()
  fullName: Object.GetType()
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: false
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: Object.MemberwiseClone()
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: Object.ReferenceEquals(Object, Object)
- uid: System.Object.ToString
  parent: System.Object
  isExternal: false
  name: ToString()
  nameWithType: Object.ToString()
  fullName: Object.ToString()
- uid: System.EventArgs.Empty
  parent: System.EventArgs
  isExternal: false
  name: Empty
  nameWithType: EventArgs.Empty
  fullName: EventArgs.Empty
