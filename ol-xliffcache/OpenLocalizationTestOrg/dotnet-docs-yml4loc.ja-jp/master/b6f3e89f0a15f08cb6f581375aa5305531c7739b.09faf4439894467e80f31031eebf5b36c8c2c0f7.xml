{"nodes":[{"content":"Provides the base class for the activation of manifest-based assemblies.","nodes":[{"pos":[0,72],"content":"Provides the base class for the activation of manifest-based assemblies.","nodes":[{"content":"Provides the base class for the activation of manifest-based assemblies.","pos":[0,72]}]}],"pos":[755,828],"yaml":true},{"content":"There is a single designated instance of the <xref:System.Runtime.Hosting.ApplicationActivator> class in each <xref:System.AppDomain> to which all activation calls are routed. The <xref:System.AppDomainManager> for the current <xref:System.AppDomain> can provide its own custom <xref:System.Runtime.Hosting.ApplicationActivator> for this purpose. If a custom <xref:System.Runtime.Hosting.ApplicationActivator> is not provided, an instance of the default <xref:System.Runtime.Hosting.ApplicationActivator> is created.  \n  \n The following steps describe the behavior of the default <xref:System.Runtime.Hosting.ApplicationActivator.CreateInstance%2A> method implementation:  \n  \n1.  Checks if the <xref:System.ActivationContext> of the add-in to be activated matches the <xref:System.ActivationContext> of the current domain; if not, proceeds to step 2. Otherwise, executes the assembly and returns the result wrapped in an object handle.  \n  \n2.  Activates the add-in in a new <xref:System.AppDomain>. The following steps are taken to initialize a new <xref:System.AppDomain> using the <xref:System.Runtime.Hosting.ActivationArguments> for the add-in.  \n  \n    1.  Creates a new <xref:System.AppDomainSetup> object using an <xref:System.Runtime.Hosting.ActivationArguments> object containing the activation context for the add-in.  \n  \n    2.  Calls the <xref:System.Runtime.Hosting.ApplicationActivator.CreateInstanceHelper%2A> method to create a new domain using the <xref:System.AppDomainSetup> object.  \n  \n    3.  The <xref:System.Runtime.Hosting.ApplicationActivator.CreateInstanceHelper%2A> method calls the <xref:System.Security.HostSecurityManager.DetermineApplicationTrust%2A?displayProperty=fullName> method to acquire an <xref:System.Security.Policy.ApplicationTrust> object for the add-in. If the <xref:System.Security.Policy.ApplicationTrust.IsApplicationTrustedToRun%2A> property returns `true`, the add-in is executed. If not, <xref:System.Runtime.Hosting.ApplicationActivator.CreateInstanceHelper%2A> throws a <xref:System.Security.Policy.PolicyException> indicating that execution permission could not be acquired.  \n  \n    4.  If the add-in is trusted to run, then a new <xref:System.AppDomain> is created and configured for the <xref:System.ActivationContext> of the add-in, and the add-in is loaded and executed.  \n  \n    5.  The result of the activation of the add-in is returned, wrapped in an object handle.  \n  \n A custom activator can tailor the activation of an add-in to a particular set of circumstances. For example, a custom activator could find an existing <xref:System.AppDomain> to activate this add-in instead of creating a new domain every time.  \n  \n The following steps describe the behavior of a custom <xref:System.Runtime.Hosting.ApplicationActivator> that activates an add-in in an existing <xref:System.AppDomain>:  \n  \n1.  The custom activator finds a domain that has the same <xref:System.ActivationContext> as the add-in that is being activated.  \n  \n2.  If the <xref:System.ActivationContext> has never been seen before in the process, the custom activator creates a new <xref:System.AppDomain> for this <xref:System.ActivationContext> by calling the <xref:System.AppDomain.CreateDomain%2A> method directly, or delegating this activity to the <xref:System.Runtime.Hosting.ApplicationActivator.CreateInstanceHelper%2A> in the base class.  \n  \n3.  If there is an existing domain with the same <xref:System.ActivationContext>, then the activator can delegate the <xref:System.Runtime.Hosting.ApplicationActivator.CreateInstance%2A> method call to the <xref:System.Runtime.Hosting.ApplicationActivator> in the target domain. Note that this would be a cross-domain call to an <xref:System.Runtime.Hosting.ApplicationActivator> that resides in the target <xref:System.AppDomain>.","nodes":[{"pos":[0,516],"content":"There is a single designated instance of the <xref:System.Runtime.Hosting.ApplicationActivator> class in each <xref:System.AppDomain> to which all activation calls are routed. The <xref:System.AppDomainManager> for the current <xref:System.AppDomain> can provide its own custom <xref:System.Runtime.Hosting.ApplicationActivator> for this purpose. If a custom <xref:System.Runtime.Hosting.ApplicationActivator> is not provided, an instance of the default <xref:System.Runtime.Hosting.ApplicationActivator> is created.","nodes":[{"content":"There is a single designated instance of the <xref:System.Runtime.Hosting.ApplicationActivator> class in each <xref:System.AppDomain> to which all activation calls are routed. The <xref:System.AppDomainManager> for the current <xref:System.AppDomain> can provide its own custom <xref:System.Runtime.Hosting.ApplicationActivator> for this purpose. If a custom <xref:System.Runtime.Hosting.ApplicationActivator> is not provided, an instance of the default <xref:System.Runtime.Hosting.ApplicationActivator> is created.","pos":[0,516],"nodes":[{"content":"There is a single designated instance of the <ph id=\"ph1\">&lt;xref:System.Runtime.Hosting.ApplicationActivator&gt;</ph> class in each <ph id=\"ph2\">&lt;xref:System.AppDomain&gt;</ph> to which all activation calls are routed.","pos":[0,175],"source":"There is a single designated instance of the <xref:System.Runtime.Hosting.ApplicationActivator> class in each <xref:System.AppDomain> to which all activation calls are routed."},{"content":"The <ph id=\"ph1\">&lt;xref:System.AppDomainManager&gt;</ph> for the current <ph id=\"ph2\">&lt;xref:System.AppDomain&gt;</ph> can provide its own custom <ph id=\"ph3\">&lt;xref:System.Runtime.Hosting.ApplicationActivator&gt;</ph> for this purpose.","pos":[176,346],"source":" The <xref:System.AppDomainManager> for the current <xref:System.AppDomain> can provide its own custom <xref:System.Runtime.Hosting.ApplicationActivator> for this purpose."},{"content":"If a custom <ph id=\"ph1\">&lt;xref:System.Runtime.Hosting.ApplicationActivator&gt;</ph> is not provided, an instance of the default <ph id=\"ph2\">&lt;xref:System.Runtime.Hosting.ApplicationActivator&gt;</ph> is created.","pos":[347,516],"source":" If a custom <xref:System.Runtime.Hosting.ApplicationActivator> is not provided, an instance of the default <xref:System.Runtime.Hosting.ApplicationActivator> is created."}]}]},{"pos":[523,671],"content":"The following steps describe the behavior of the default <xref:System.Runtime.Hosting.ApplicationActivator.CreateInstance%2A> method implementation:","nodes":[{"content":"The following steps describe the behavior of the default <ph id=\"ph1\">&lt;xref:System.Runtime.Hosting.ApplicationActivator.CreateInstance%2A&gt;</ph> method implementation:","pos":[0,148],"source":"The following steps describe the behavior of the default <xref:System.Runtime.Hosting.ApplicationActivator.CreateInstance%2A> method implementation:"}]},{"pos":[681,936],"content":"Checks if the <xref:System.ActivationContext> of the add-in to be activated matches the <xref:System.ActivationContext> of the current domain; if not, proceeds to step 2. Otherwise, executes the assembly and returns the result wrapped in an object handle.","nodes":[{"content":"Checks if the <xref:System.ActivationContext> of the add-in to be activated matches the <xref:System.ActivationContext> of the current domain; if not, proceeds to step 2. Otherwise, executes the assembly and returns the result wrapped in an object handle.","pos":[0,255],"nodes":[{"content":"Checks if the <ph id=\"ph1\">&lt;xref:System.ActivationContext&gt;</ph> of the add-in to be activated matches the <ph id=\"ph2\">&lt;xref:System.ActivationContext&gt;</ph> of the current domain; if not, proceeds to step 2.","pos":[0,170],"source":"Checks if the <xref:System.ActivationContext> of the add-in to be activated matches the <xref:System.ActivationContext> of the current domain; if not, proceeds to step 2."},{"content":"Otherwise, executes the assembly and returns the result wrapped in an object handle.","pos":[171,255]}]}]},{"pos":[946,1150],"content":"Activates the add-in in a new <xref:System.AppDomain>. The following steps are taken to initialize a new <xref:System.AppDomain> using the <xref:System.Runtime.Hosting.ActivationArguments> for the add-in.","nodes":[{"content":"Activates the add-in in a new <xref:System.AppDomain>. The following steps are taken to initialize a new <xref:System.AppDomain> using the <xref:System.Runtime.Hosting.ActivationArguments> for the add-in.","pos":[0,204],"nodes":[{"content":"Activates the add-in in a new <ph id=\"ph1\">&lt;xref:System.AppDomain&gt;</ph>.","pos":[0,54],"source":"Activates the add-in in a new <xref:System.AppDomain>."},{"content":"The following steps are taken to initialize a new <ph id=\"ph1\">&lt;xref:System.AppDomain&gt;</ph> using the <ph id=\"ph2\">&lt;xref:System.Runtime.Hosting.ActivationArguments&gt;</ph> for the add-in.","pos":[55,204],"source":" The following steps are taken to initialize a new <xref:System.AppDomain> using the <xref:System.Runtime.Hosting.ActivationArguments> for the add-in."}]}]},{"pos":[1164,1329],"content":"Creates a new <xref:System.AppDomainSetup> object using an <xref:System.Runtime.Hosting.ActivationArguments> object containing the activation context for the add-in.","nodes":[{"content":"Creates a new <ph id=\"ph1\">&lt;xref:System.AppDomainSetup&gt;</ph> object using an <ph id=\"ph2\">&lt;xref:System.Runtime.Hosting.ActivationArguments&gt;</ph> object containing the activation context for the add-in.","pos":[0,165],"source":"Creates a new <xref:System.AppDomainSetup> object using an <xref:System.Runtime.Hosting.ActivationArguments> object containing the activation context for the add-in."}]},{"pos":[1343,1504],"content":"Calls the <xref:System.Runtime.Hosting.ApplicationActivator.CreateInstanceHelper%2A> method to create a new domain using the <xref:System.AppDomainSetup> object.","nodes":[{"content":"Calls the <ph id=\"ph1\">&lt;xref:System.Runtime.Hosting.ApplicationActivator.CreateInstanceHelper%2A&gt;</ph> method to create a new domain using the <ph id=\"ph2\">&lt;xref:System.AppDomainSetup&gt;</ph> object.","pos":[0,161],"source":"Calls the <xref:System.Runtime.Hosting.ApplicationActivator.CreateInstanceHelper%2A> method to create a new domain using the <xref:System.AppDomainSetup> object."}]},{"pos":[1518,2131],"content":"The <xref:System.Runtime.Hosting.ApplicationActivator.CreateInstanceHelper%2A> method calls the <xref:System.Security.HostSecurityManager.DetermineApplicationTrust%2A?displayProperty=fullName> method to acquire an <xref:System.Security.Policy.ApplicationTrust> object for the add-in. If the <xref:System.Security.Policy.ApplicationTrust.IsApplicationTrustedToRun%2A> property returns `true`, the add-in is executed. If not, <xref:System.Runtime.Hosting.ApplicationActivator.CreateInstanceHelper%2A> throws a <xref:System.Security.Policy.PolicyException> indicating that execution permission could not be acquired.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Runtime.Hosting.ApplicationActivator.CreateInstanceHelper%2A&gt;</ph> method calls the <ph id=\"ph2\">&lt;xref:System.Security.HostSecurityManager.DetermineApplicationTrust%2A?displayProperty=fullName&gt;</ph> method to acquire an <ph id=\"ph3\">&lt;xref:System.Security.Policy.ApplicationTrust&gt;</ph> object for the add-in.","pos":[0,283],"source":"The <xref:System.Runtime.Hosting.ApplicationActivator.CreateInstanceHelper%2A> method calls the <xref:System.Security.HostSecurityManager.DetermineApplicationTrust%2A?displayProperty=fullName> method to acquire an <xref:System.Security.Policy.ApplicationTrust> object for the add-in."},{"content":"If the <ph id=\"ph1\">&lt;xref:System.Security.Policy.ApplicationTrust.IsApplicationTrustedToRun%2A&gt;</ph> property returns <ph id=\"ph2\">`true`</ph>, the add-in is executed.","pos":[284,415],"source":" If the <xref:System.Security.Policy.ApplicationTrust.IsApplicationTrustedToRun%2A> property returns `true`, the add-in is executed."},{"content":"If not, <ph id=\"ph1\">&lt;xref:System.Runtime.Hosting.ApplicationActivator.CreateInstanceHelper%2A&gt;</ph> throws a <ph id=\"ph2\">&lt;xref:System.Security.Policy.PolicyException&gt;</ph> indicating that execution permission could not be acquired.","pos":[416,613],"source":" If not, <xref:System.Runtime.Hosting.ApplicationActivator.CreateInstanceHelper%2A> throws a <xref:System.Security.Policy.PolicyException> indicating that execution permission could not be acquired."}]},{"pos":[2145,2332],"content":"If the add-in is trusted to run, then a new <xref:System.AppDomain> is created and configured for the <xref:System.ActivationContext> of the add-in, and the add-in is loaded and executed.","nodes":[{"content":"If the add-in is trusted to run, then a new <ph id=\"ph1\">&lt;xref:System.AppDomain&gt;</ph> is created and configured for the <ph id=\"ph2\">&lt;xref:System.ActivationContext&gt;</ph> of the add-in, and the add-in is loaded and executed.","pos":[0,187],"source":"If the add-in is trusted to run, then a new <xref:System.AppDomain> is created and configured for the <xref:System.ActivationContext> of the add-in, and the add-in is loaded and executed."}]},{"pos":[2346,2430],"content":"The result of the activation of the add-in is returned, wrapped in an object handle.","nodes":[{"content":"The result of the activation of the add-in is returned, wrapped in an object handle.","pos":[0,84]}]},{"pos":[2437,2680],"content":"A custom activator can tailor the activation of an add-in to a particular set of circumstances. For example, a custom activator could find an existing <xref:System.AppDomain> to activate this add-in instead of creating a new domain every time.","nodes":[{"content":"A custom activator can tailor the activation of an add-in to a particular set of circumstances. For example, a custom activator could find an existing <xref:System.AppDomain> to activate this add-in instead of creating a new domain every time.","pos":[0,243],"nodes":[{"content":"A custom activator can tailor the activation of an add-in to a particular set of circumstances.","pos":[0,95]},{"content":"For example, a custom activator could find an existing <ph id=\"ph1\">&lt;xref:System.AppDomain&gt;</ph> to activate this add-in instead of creating a new domain every time.","pos":[96,243],"source":" For example, a custom activator could find an existing <xref:System.AppDomain> to activate this add-in instead of creating a new domain every time."}]}]},{"pos":[2687,2856],"content":"The following steps describe the behavior of a custom <xref:System.Runtime.Hosting.ApplicationActivator> that activates an add-in in an existing <xref:System.AppDomain>:","nodes":[{"content":"The following steps describe the behavior of a custom <ph id=\"ph1\">&lt;xref:System.Runtime.Hosting.ApplicationActivator&gt;</ph> that activates an add-in in an existing <ph id=\"ph2\">&lt;xref:System.AppDomain&gt;</ph>:","pos":[0,169],"source":"The following steps describe the behavior of a custom <xref:System.Runtime.Hosting.ApplicationActivator> that activates an add-in in an existing <xref:System.AppDomain>:"}]},{"pos":[2866,2990],"content":"The custom activator finds a domain that has the same <xref:System.ActivationContext> as the add-in that is being activated.","nodes":[{"content":"The custom activator finds a domain that has the same <ph id=\"ph1\">&lt;xref:System.ActivationContext&gt;</ph> as the add-in that is being activated.","pos":[0,124],"source":"The custom activator finds a domain that has the same <xref:System.ActivationContext> as the add-in that is being activated."}]},{"pos":[3000,3382],"content":"If the <xref:System.ActivationContext> has never been seen before in the process, the custom activator creates a new <xref:System.AppDomain> for this <xref:System.ActivationContext> by calling the <xref:System.AppDomain.CreateDomain%2A> method directly, or delegating this activity to the <xref:System.Runtime.Hosting.ApplicationActivator.CreateInstanceHelper%2A> in the base class.","nodes":[{"content":"If the <ph id=\"ph1\">&lt;xref:System.ActivationContext&gt;</ph> has never been seen before in the process, the custom activator creates a new <ph id=\"ph2\">&lt;xref:System.AppDomain&gt;</ph> for this <ph id=\"ph3\">&lt;xref:System.ActivationContext&gt;</ph> by calling the <ph id=\"ph4\">&lt;xref:System.AppDomain.CreateDomain%2A&gt;</ph> method directly, or delegating this activity to the <ph id=\"ph5\">&lt;xref:System.Runtime.Hosting.ApplicationActivator.CreateInstanceHelper%2A&gt;</ph> in the base class.","pos":[0,382],"source":"If the <xref:System.ActivationContext> has never been seen before in the process, the custom activator creates a new <xref:System.AppDomain> for this <xref:System.ActivationContext> by calling the <xref:System.AppDomain.CreateDomain%2A> method directly, or delegating this activity to the <xref:System.Runtime.Hosting.ApplicationActivator.CreateInstanceHelper%2A> in the base class."}]},{"pos":[3392,3819],"content":"If there is an existing domain with the same <xref:System.ActivationContext>, then the activator can delegate the <xref:System.Runtime.Hosting.ApplicationActivator.CreateInstance%2A> method call to the <xref:System.Runtime.Hosting.ApplicationActivator> in the target domain. Note that this would be a cross-domain call to an <xref:System.Runtime.Hosting.ApplicationActivator> that resides in the target <xref:System.AppDomain>.","nodes":[{"content":"If there is an existing domain with the same <xref:System.ActivationContext>, then the activator can delegate the <xref:System.Runtime.Hosting.ApplicationActivator.CreateInstance%2A> method call to the <xref:System.Runtime.Hosting.ApplicationActivator> in the target domain. Note that this would be a cross-domain call to an <xref:System.Runtime.Hosting.ApplicationActivator> that resides in the target <xref:System.AppDomain>.","pos":[0,427],"nodes":[{"content":"If there is an existing domain with the same <ph id=\"ph1\">&lt;xref:System.ActivationContext&gt;</ph>, then the activator can delegate the <ph id=\"ph2\">&lt;xref:System.Runtime.Hosting.ApplicationActivator.CreateInstance%2A&gt;</ph> method call to the <ph id=\"ph3\">&lt;xref:System.Runtime.Hosting.ApplicationActivator&gt;</ph> in the target domain.","pos":[0,274],"source":"If there is an existing domain with the same <xref:System.ActivationContext>, then the activator can delegate the <xref:System.Runtime.Hosting.ApplicationActivator.CreateInstance%2A> method call to the <xref:System.Runtime.Hosting.ApplicationActivator> in the target domain."},{"content":"Note that this would be a cross-domain call to an <ph id=\"ph1\">&lt;xref:System.Runtime.Hosting.ApplicationActivator&gt;</ph> that resides in the target <ph id=\"ph2\">&lt;xref:System.AppDomain&gt;</ph>.","pos":[275,427],"source":" Note that this would be a cross-domain call to an <xref:System.Runtime.Hosting.ApplicationActivator> that resides in the target <xref:System.AppDomain>."}]}]}],"pos":[839,4687],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.Runtime.Hosting.ApplicationActivator\"></xref> class.","nodes":[{"pos":[0,105],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Runtime.Hosting.ApplicationActivator\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.Runtime.Hosting.ApplicationActivator\"></xref> class."}],"pos":[6920,7026],"yaml":true},{"content":"Creates an instance of the application to be activated, using the specified activation context.","nodes":[{"pos":[0,95],"content":"Creates an instance of the application to be activated, using the specified activation context.","nodes":[{"content":"Creates an instance of the application to be activated, using the specified activation context.","pos":[0,95]}]}],"pos":[8430,8526],"yaml":true},{"content":"This method is intended for the manifest-based activation of applications.","nodes":[{"pos":[0,74],"content":"This method is intended for the manifest-based activation of applications.","nodes":[{"content":"This method is intended for the manifest-based activation of applications.","pos":[0,74]}]}],"pos":[8537,8612],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.ActivationContext\"></xref> that identifies the application to activate.","nodes":[{"pos":[0,93],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.ActivationContext\"&gt;&lt;/xref&gt;</ph> that identifies the application to activate.","source":"An <xref href=\"System.ActivationContext\"></xref> that identifies the application to activate."}],"pos":[8841,8935],"yaml":true},{"content":"An <xref href=\"System.Runtime.Remoting.ObjectHandle\"></xref> that is a wrapper for the return value of the application execution. The return value must be unwrapped to access the real object.","nodes":[{"pos":[0,191],"content":"An <xref href=\"System.Runtime.Remoting.ObjectHandle\"></xref> that is a wrapper for the return value of the application execution. The return value must be unwrapped to access the real object.","nodes":[{"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Runtime.Remoting.ObjectHandle\"&gt;&lt;/xref&gt;</ph> that is a wrapper for the return value of the application execution.","pos":[0,129],"source":"An <xref href=\"System.Runtime.Remoting.ObjectHandle\"></xref> that is a wrapper for the return value of the application execution."},{"content":"The return value must be unwrapped to access the real object.","pos":[130,191]}]}],"pos":[9015,9207],"yaml":true},{"content":"<code>activationContext</code> is `null`.","nodes":[{"pos":[0,41],"content":"<ph id=\"ph1\">&lt;code&gt;activationContext&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>activationContext</code> is `null`."}],"pos":[9395,9437],"yaml":true},{"content":"Creates an instance of the application to be activated, using the specified activation context  and custom activation data.","nodes":[{"pos":[0,123],"content":"Creates an instance of the application to be activated, using the specified activation context  and custom activation data.","nodes":[{"content":"Creates an instance of the application to be activated, using the specified activation context  and custom activation data.","pos":[0,123]}]}],"pos":[10765,10889],"yaml":true},{"content":"This method is intended for the manifest-based activation of applications. The activation data consists of information such as the query string portion of a URL.","nodes":[{"pos":[0,161],"content":"This method is intended for the manifest-based activation of applications. The activation data consists of information such as the query string portion of a URL.","nodes":[{"content":"This method is intended for the manifest-based activation of applications. The activation data consists of information such as the query string portion of a URL.","pos":[0,161],"nodes":[{"content":"This method is intended for the manifest-based activation of applications.","pos":[0,74]},{"content":"The activation data consists of information such as the query string portion of a URL.","pos":[75,161]}]}]}],"pos":[10900,11062],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.ActivationContext\"></xref> that identifies the application to activate.","nodes":[{"pos":[0,93],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.ActivationContext\"&gt;&lt;/xref&gt;</ph> that identifies the application to activate.","source":"An <xref href=\"System.ActivationContext\"></xref> that identifies the application to activate."}],"pos":[11322,11416],"yaml":true},{"content":"Custom activation data.","nodes":[{"pos":[0,23],"content":"Custom activation data.","nodes":[{"content":"Custom activation data.","pos":[0,23]}]}],"pos":[11494,11518],"yaml":true},{"content":"An <xref href=\"System.Runtime.Remoting.ObjectHandle\"></xref> that is a wrapper for the return value of the application execution. The return value must be unwrapped to access the real object.","nodes":[{"pos":[0,191],"content":"An <xref href=\"System.Runtime.Remoting.ObjectHandle\"></xref> that is a wrapper for the return value of the application execution. The return value must be unwrapped to access the real object.","nodes":[{"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Runtime.Remoting.ObjectHandle\"&gt;&lt;/xref&gt;</ph> that is a wrapper for the return value of the application execution.","pos":[0,129],"source":"An <xref href=\"System.Runtime.Remoting.ObjectHandle\"></xref> that is a wrapper for the return value of the application execution."},{"content":"The return value must be unwrapped to access the real object.","pos":[130,191]}]}],"pos":[11598,11790],"yaml":true},{"content":"<code>activationContext</code> is `null`.","nodes":[{"pos":[0,41],"content":"<ph id=\"ph1\">&lt;code&gt;activationContext&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>activationContext</code> is `null`."}],"pos":[11978,12020],"yaml":true},{"content":"Creates an instance of an application using the specified <xref href=\"System.AppDomainSetup\"></xref> object.","nodes":[{"pos":[0,108],"content":"Creates an instance of an application using the specified <ph id=\"ph1\">&lt;xref href=\"System.AppDomainSetup\"&gt;&lt;/xref&gt;</ph> object.","source":"Creates an instance of an application using the specified <xref href=\"System.AppDomainSetup\"></xref> object."}],"pos":[13288,13397],"yaml":true},{"content":"This method is intended for the manifest-based activation of applications.","nodes":[{"pos":[0,74],"content":"This method is intended for the manifest-based activation of applications.","nodes":[{"content":"This method is intended for the manifest-based activation of applications.","pos":[0,74]}]}],"pos":[13408,13483],"yaml":true,"extradata":"MT"},{"content":"An <xref href=\"System.AppDomainSetup\"></xref> object whose <xref href=\"System.AppDomainSetup.ActivationArguments\"></xref> property identifies the application to activate.","nodes":[{"pos":[0,170],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.AppDomainSetup\"&gt;&lt;/xref&gt;</ph> object whose <ph id=\"ph2\">&lt;xref href=\"System.AppDomainSetup.ActivationArguments\"&gt;&lt;/xref&gt;</ph> property identifies the application to activate.","source":"An <xref href=\"System.AppDomainSetup\"></xref> object whose <xref href=\"System.AppDomainSetup.ActivationArguments\"></xref> property identifies the application to activate."}],"pos":[13694,13865],"yaml":true},{"content":"An <xref href=\"System.Runtime.Remoting.ObjectHandle\"></xref> that is a wrapper for the return value of the application execution. The return value must be unwrapped to access the real object.","nodes":[{"pos":[0,191],"content":"An <xref href=\"System.Runtime.Remoting.ObjectHandle\"></xref> that is a wrapper for the return value of the application execution. The return value must be unwrapped to access the real object.","nodes":[{"content":"An <ph id=\"ph1\">&lt;xref href=\"System.Runtime.Remoting.ObjectHandle\"&gt;&lt;/xref&gt;</ph> that is a wrapper for the return value of the application execution.","pos":[0,129],"source":"An <xref href=\"System.Runtime.Remoting.ObjectHandle\"></xref> that is a wrapper for the return value of the application execution."},{"content":"The return value must be unwrapped to access the real object.","pos":[130,191]}]}],"pos":[13945,14137],"yaml":true},{"content":"The <xref href=\"System.AppDomainSetup.ActivationArguments\"></xref> property of <code>adSetup</code> is `null`.","nodes":[{"pos":[0,110],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.AppDomainSetup.ActivationArguments\"&gt;&lt;/xref&gt;</ph> property of <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph2\">adSetup</ph><ept id=\"p1\">&lt;/code&gt;</ept> is <ph id=\"ph3\">`null`</ph>.","source":"The <xref href=\"System.AppDomainSetup.ActivationArguments\"></xref> property of <code>adSetup</code> is `null`."}],"pos":[14323,14434],"yaml":true},{"content":"The application instance failed to execute because the policy settings on the current application domain do not provide permission for this application to run.","nodes":[{"pos":[0,159],"content":"The application instance failed to execute because the policy settings on the current application domain do not provide permission for this application to run.","nodes":[{"content":"The application instance failed to execute because the policy settings on the current application domain do not provide permission for this application to run.","pos":[0,159]}]}],"pos":[14556,14716],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Runtime.Hosting.ApplicationActivator\n  commentId: T:System.Runtime.Hosting.ApplicationActivator\n  id: ApplicationActivator\n  children:\n  - System.Runtime.Hosting.ApplicationActivator.#ctor\n  - System.Runtime.Hosting.ApplicationActivator.CreateInstance(System.ActivationContext)\n  - System.Runtime.Hosting.ApplicationActivator.CreateInstance(System.ActivationContext,System.String[])\n  - System.Runtime.Hosting.ApplicationActivator.CreateInstanceHelper(System.AppDomainSetup)\n  langs:\n  - csharp\n  name: ApplicationActivator\n  nameWithType: ApplicationActivator\n  fullName: System.Runtime.Hosting.ApplicationActivator\n  type: Class\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.Hosting\n  summary: Provides the base class for the activation of manifest-based assemblies.\n  remarks: \"There is a single designated instance of the <xref:System.Runtime.Hosting.ApplicationActivator> class in each <xref:System.AppDomain> to which all activation calls are routed. The <xref:System.AppDomainManager> for the current <xref:System.AppDomain> can provide its own custom <xref:System.Runtime.Hosting.ApplicationActivator> for this purpose. If a custom <xref:System.Runtime.Hosting.ApplicationActivator> is not provided, an instance of the default <xref:System.Runtime.Hosting.ApplicationActivator> is created.  \\n  \\n The following steps describe the behavior of the default <xref:System.Runtime.Hosting.ApplicationActivator.CreateInstance%2A> method implementation:  \\n  \\n1.  Checks if the <xref:System.ActivationContext> of the add-in to be activated matches the <xref:System.ActivationContext> of the current domain; if not, proceeds to step 2. Otherwise, executes the assembly and returns the result wrapped in an object handle.  \\n  \\n2.  Activates the add-in in a new <xref:System.AppDomain>. The following steps are taken to initialize a new <xref:System.AppDomain> using the <xref:System.Runtime.Hosting.ActivationArguments> for the add-in.  \\n  \\n    1.  Creates a new <xref:System.AppDomainSetup> object using an <xref:System.Runtime.Hosting.ActivationArguments> object containing the activation context for the add-in.  \\n  \\n    2.  Calls the <xref:System.Runtime.Hosting.ApplicationActivator.CreateInstanceHelper%2A> method to create a new domain using the <xref:System.AppDomainSetup> object.  \\n  \\n    3.  The <xref:System.Runtime.Hosting.ApplicationActivator.CreateInstanceHelper%2A> method calls the <xref:System.Security.HostSecurityManager.DetermineApplicationTrust%2A?displayProperty=fullName> method to acquire an <xref:System.Security.Policy.ApplicationTrust> object for the add-in. If the <xref:System.Security.Policy.ApplicationTrust.IsApplicationTrustedToRun%2A> property returns `true`, the add-in is executed. If not, <xref:System.Runtime.Hosting.ApplicationActivator.CreateInstanceHelper%2A> throws a <xref:System.Security.Policy.PolicyException> indicating that execution permission could not be acquired.  \\n  \\n    4.  If the add-in is trusted to run, then a new <xref:System.AppDomain> is created and configured for the <xref:System.ActivationContext> of the add-in, and the add-in is loaded and executed.  \\n  \\n    5.  The result of the activation of the add-in is returned, wrapped in an object handle.  \\n  \\n A custom activator can tailor the activation of an add-in to a particular set of circumstances. For example, a custom activator could find an existing <xref:System.AppDomain> to activate this add-in instead of creating a new domain every time.  \\n  \\n The following steps describe the behavior of a custom <xref:System.Runtime.Hosting.ApplicationActivator> that activates an add-in in an existing <xref:System.AppDomain>:  \\n  \\n1.  The custom activator finds a domain that has the same <xref:System.ActivationContext> as the add-in that is being activated.  \\n  \\n2.  If the <xref:System.ActivationContext> has never been seen before in the process, the custom activator creates a new <xref:System.AppDomain> for this <xref:System.ActivationContext> by calling the <xref:System.AppDomain.CreateDomain%2A> method directly, or delegating this activity to the <xref:System.Runtime.Hosting.ApplicationActivator.CreateInstanceHelper%2A> in the base class.  \\n  \\n3.  If there is an existing domain with the same <xref:System.ActivationContext>, then the activator can delegate the <xref:System.Runtime.Hosting.ApplicationActivator.CreateInstance%2A> method call to the <xref:System.Runtime.Hosting.ApplicationActivator> in the target domain. Note that this would be a cross-domain call to an <xref:System.Runtime.Hosting.ApplicationActivator> that resides in the target <xref:System.AppDomain>.\"\n  example:\n  - \"The following code example shows how to obtain an <xref:System.Runtime.Hosting.ApplicationActivator> object from the current <xref:System.AppDomain.DomainManager%2A> for a manifest-based application.  \\n  \\n [!code-csharp[System.Runtime.Hosting.ApplicationActivator#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Runtime.Hosting.ApplicationActivator/cs/program.cs#1)]\\n [!code-vb[System.Runtime.Hosting.ApplicationActivator#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Runtime.Hosting.ApplicationActivator/vb/program.vb#1)]\"\n  syntax:\n    content: >-\n      [System.Runtime.InteropServices.ComVisible(true)]\n\n      public class ApplicationActivator\n  inheritance:\n  - System.Object\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  attributes:\n  - type: System.Runtime.InteropServices.ComVisibleAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Hosting/ApplicationActivator.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Runtime.Hosting.ApplicationActivator.#ctor\n  commentId: M:System.Runtime.Hosting.ApplicationActivator.#ctor\n  id: '#ctor'\n  parent: System.Runtime.Hosting.ApplicationActivator\n  langs:\n  - csharp\n  name: ApplicationActivator()\n  nameWithType: ApplicationActivator.ApplicationActivator()\n  fullName: ApplicationActivator.ApplicationActivator()\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.Hosting\n  summary: Initializes a new instance of the <xref href=\"System.Runtime.Hosting.ApplicationActivator\"></xref> class.\n  syntax:\n    content: public ApplicationActivator ();\n    parameters: []\n  overload: System.Runtime.Hosting.ApplicationActivator.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Hosting/ApplicationActivator.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Runtime.Hosting.ApplicationActivator.CreateInstance(System.ActivationContext)\n  commentId: M:System.Runtime.Hosting.ApplicationActivator.CreateInstance(System.ActivationContext)\n  id: CreateInstance(System.ActivationContext)\n  parent: System.Runtime.Hosting.ApplicationActivator\n  langs:\n  - csharp\n  name: CreateInstance(ActivationContext)\n  nameWithType: ApplicationActivator.CreateInstance(ActivationContext)\n  fullName: ApplicationActivator.CreateInstance(ActivationContext)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.Hosting\n  summary: Creates an instance of the application to be activated, using the specified activation context.\n  remarks: This method is intended for the manifest-based activation of applications.\n  syntax:\n    content: public virtual System.Runtime.Remoting.ObjectHandle CreateInstance (ActivationContext activationContext);\n    parameters:\n    - id: activationContext\n      type: System.ActivationContext\n      description: An <xref href=\"System.ActivationContext\"></xref> that identifies the application to activate.\n    return:\n      type: System.Runtime.Remoting.ObjectHandle\n      description: An <xref href=\"System.Runtime.Remoting.ObjectHandle\"></xref> that is a wrapper for the return value of the application execution. The return value must be unwrapped to access the real object.\n  overload: System.Runtime.Hosting.ApplicationActivator.CreateInstance*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>activationContext</code> is `null`.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Hosting/ApplicationActivator.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Runtime.Hosting.ApplicationActivator.CreateInstance(System.ActivationContext,System.String[])\n  commentId: M:System.Runtime.Hosting.ApplicationActivator.CreateInstance(System.ActivationContext,System.String[])\n  id: CreateInstance(System.ActivationContext,System.String[])\n  parent: System.Runtime.Hosting.ApplicationActivator\n  langs:\n  - csharp\n  name: CreateInstance(ActivationContext, String[])\n  nameWithType: ApplicationActivator.CreateInstance(ActivationContext, String[])\n  fullName: ApplicationActivator.CreateInstance(ActivationContext, String[])\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.Hosting\n  summary: Creates an instance of the application to be activated, using the specified activation context  and custom activation data.\n  remarks: This method is intended for the manifest-based activation of applications. The activation data consists of information such as the query string portion of a URL.\n  syntax:\n    content: public virtual System.Runtime.Remoting.ObjectHandle CreateInstance (ActivationContext activationContext, string[] activationCustomData);\n    parameters:\n    - id: activationContext\n      type: System.ActivationContext\n      description: An <xref href=\"System.ActivationContext\"></xref> that identifies the application to activate.\n    - id: activationCustomData\n      type: System.String[]\n      description: Custom activation data.\n    return:\n      type: System.Runtime.Remoting.ObjectHandle\n      description: An <xref href=\"System.Runtime.Remoting.ObjectHandle\"></xref> that is a wrapper for the return value of the application execution. The return value must be unwrapped to access the real object.\n  overload: System.Runtime.Hosting.ApplicationActivator.CreateInstance*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>activationContext</code> is `null`.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Hosting/ApplicationActivator.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\n- uid: System.Runtime.Hosting.ApplicationActivator.CreateInstanceHelper(System.AppDomainSetup)\n  commentId: M:System.Runtime.Hosting.ApplicationActivator.CreateInstanceHelper(System.AppDomainSetup)\n  id: CreateInstanceHelper(System.AppDomainSetup)\n  parent: System.Runtime.Hosting.ApplicationActivator\n  langs:\n  - csharp\n  name: CreateInstanceHelper(AppDomainSetup)\n  nameWithType: ApplicationActivator.CreateInstanceHelper(AppDomainSetup)\n  fullName: ApplicationActivator.CreateInstanceHelper(AppDomainSetup)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Runtime.Hosting\n  summary: Creates an instance of an application using the specified <xref href=\"System.AppDomainSetup\"></xref> object.\n  remarks: This method is intended for the manifest-based activation of applications.\n  syntax:\n    content: protected static System.Runtime.Remoting.ObjectHandle CreateInstanceHelper (AppDomainSetup adSetup);\n    parameters:\n    - id: adSetup\n      type: System.AppDomainSetup\n      description: An <xref href=\"System.AppDomainSetup\"></xref> object whose <xref href=\"System.AppDomainSetup.ActivationArguments\"></xref> property identifies the application to activate.\n    return:\n      type: System.Runtime.Remoting.ObjectHandle\n      description: An <xref href=\"System.Runtime.Remoting.ObjectHandle\"></xref> that is a wrapper for the return value of the application execution. The return value must be unwrapped to access the real object.\n  overload: System.Runtime.Hosting.ApplicationActivator.CreateInstanceHelper*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: The <xref href=\"System.AppDomainSetup.ActivationArguments\"></xref> property of <code>adSetup</code> is `null`.\n  - type: System.Security.Policy.PolicyException\n    commentId: T:System.Security.Policy.PolicyException\n    description: The application instance failed to execute because the policy settings on the current application domain do not provide permission for this application to run.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Hosting/ApplicationActivator.xml\n  ms.technology:\n  - dotnet-standard\n  author: rpetrusha\n  ms.author: ronpet\n  manager: wpickett\nreferences:\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.ArgumentNullException\n  parent: System\n  isExternal: false\n  name: ArgumentNullException\n  nameWithType: ArgumentNullException\n  fullName: System.ArgumentNullException\n- uid: System.ArgumentException\n  parent: System\n  isExternal: false\n  name: ArgumentException\n  nameWithType: ArgumentException\n  fullName: System.ArgumentException\n- uid: System.Security.Policy.PolicyException\n  parent: System.Security.Policy\n  isExternal: false\n  name: PolicyException\n  nameWithType: PolicyException\n  fullName: System.Security.Policy.PolicyException\n- uid: System.Runtime.Hosting.ApplicationActivator.#ctor\n  parent: System.Runtime.Hosting.ApplicationActivator\n  isExternal: false\n  name: ApplicationActivator()\n  nameWithType: ApplicationActivator.ApplicationActivator()\n  fullName: ApplicationActivator.ApplicationActivator()\n- uid: System.Runtime.Hosting.ApplicationActivator.CreateInstance(System.ActivationContext)\n  parent: System.Runtime.Hosting.ApplicationActivator\n  isExternal: false\n  name: CreateInstance(ActivationContext)\n  nameWithType: ApplicationActivator.CreateInstance(ActivationContext)\n  fullName: ApplicationActivator.CreateInstance(ActivationContext)\n- uid: System.Runtime.Remoting.ObjectHandle\n  parent: System.Runtime.Remoting\n  isExternal: false\n  name: ObjectHandle\n  nameWithType: ObjectHandle\n  fullName: System.Runtime.Remoting.ObjectHandle\n- uid: System.ActivationContext\n  parent: System\n  isExternal: false\n  name: ActivationContext\n  nameWithType: ActivationContext\n  fullName: System.ActivationContext\n- uid: System.Runtime.Hosting.ApplicationActivator.CreateInstance(System.ActivationContext,System.String[])\n  parent: System.Runtime.Hosting.ApplicationActivator\n  isExternal: false\n  name: CreateInstance(ActivationContext, String[])\n  nameWithType: ApplicationActivator.CreateInstance(ActivationContext, String[])\n  fullName: ApplicationActivator.CreateInstance(ActivationContext, String[])\n- uid: System.String\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.String[]\n  parent: System\n  isExternal: false\n  name: String[]\n  nameWithType: String[]\n  fullName: System.String[]\n  spec.csharp:\n  - uid: System.String\n    name: String\n    nameWithType: String\n    fullName: System.String\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Runtime.Hosting.ApplicationActivator.CreateInstanceHelper(System.AppDomainSetup)\n  parent: System.Runtime.Hosting.ApplicationActivator\n  isExternal: false\n  name: CreateInstanceHelper(AppDomainSetup)\n  nameWithType: ApplicationActivator.CreateInstanceHelper(AppDomainSetup)\n  fullName: ApplicationActivator.CreateInstanceHelper(AppDomainSetup)\n- uid: System.AppDomainSetup\n  parent: System\n  isExternal: false\n  name: AppDomainSetup\n  nameWithType: AppDomainSetup\n  fullName: System.AppDomainSetup\n- uid: System.Runtime.Hosting.ApplicationActivator.#ctor*\n  parent: System.Runtime.Hosting.ApplicationActivator\n  isExternal: false\n  name: ApplicationActivator\n  nameWithType: ApplicationActivator.ApplicationActivator\n  fullName: ApplicationActivator.ApplicationActivator\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Hosting/ApplicationActivator.xml\n- uid: System.Runtime.Hosting.ApplicationActivator.CreateInstance*\n  parent: System.Runtime.Hosting.ApplicationActivator\n  isExternal: false\n  name: CreateInstance\n  nameWithType: ApplicationActivator.CreateInstance\n  fullName: ApplicationActivator.CreateInstance\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Hosting/ApplicationActivator.xml\n- uid: System.Runtime.Hosting.ApplicationActivator.CreateInstanceHelper*\n  parent: System.Runtime.Hosting.ApplicationActivator\n  isExternal: false\n  name: CreateInstanceHelper\n  nameWithType: ApplicationActivator.CreateInstanceHelper\n  fullName: ApplicationActivator.CreateInstanceHelper\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Runtime.Hosting/ApplicationActivator.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n"}