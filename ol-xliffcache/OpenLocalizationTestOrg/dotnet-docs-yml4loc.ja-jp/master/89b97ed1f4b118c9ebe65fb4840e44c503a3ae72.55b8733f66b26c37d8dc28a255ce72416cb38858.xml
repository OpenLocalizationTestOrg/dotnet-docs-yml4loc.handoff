{"nodes":[{"content":"A client receiver for multicast traffic from a single source, also known as Source Specific Multicast (SSM).","nodes":[{"pos":[0,108],"content":"A client receiver for multicast traffic from a single source, also known as Source Specific Multicast (SSM).","nodes":[{"content":"A client receiver for multicast traffic from a single source, also known as Source Specific Multicast (SSM).","pos":[0,108]}]}],"pos":[1488,1597],"yaml":true},{"content":"The multicast group address and sender source address must be known.  \n  \n In addition to receiving multicast data from a specific sender, the <xref:System.Net.Sockets.UdpSingleSourceMulticastClient> client can also send unicast data back to the sender.  \n  \n To receive multicast from multiple sources, or when the sources aren't known in advance, use the <xref:System.Net.Sockets.UdpSingleSourceMulticastClient> class instead.","nodes":[{"pos":[0,68],"content":"The multicast group address and sender source address must be known.","nodes":[{"content":"The multicast group address and sender source address must be known.","pos":[0,68]}]},{"pos":[75,253],"content":"In addition to receiving multicast data from a specific sender, the <xref:System.Net.Sockets.UdpSingleSourceMulticastClient> client can also send unicast data back to the sender.","nodes":[{"content":"In addition to receiving multicast data from a specific sender, the <ph id=\"ph1\">&lt;xref:System.Net.Sockets.UdpSingleSourceMulticastClient&gt;</ph> client can also send unicast data back to the sender.","pos":[0,178],"source":"In addition to receiving multicast data from a specific sender, the <xref:System.Net.Sockets.UdpSingleSourceMulticastClient> client can also send unicast data back to the sender."}]},{"pos":[260,428],"content":"To receive multicast from multiple sources, or when the sources aren't known in advance, use the <xref:System.Net.Sockets.UdpSingleSourceMulticastClient> class instead.","nodes":[{"content":"To receive multicast from multiple sources, or when the sources aren't known in advance, use the <ph id=\"ph1\">&lt;xref:System.Net.Sockets.UdpSingleSourceMulticastClient&gt;</ph> class instead.","pos":[0,168],"source":"To receive multicast from multiple sources, or when the sources aren't known in advance, use the <xref:System.Net.Sockets.UdpSingleSourceMulticastClient> class instead."}]}],"pos":[1608,2043],"yaml":true,"extradata":"MT"},{"content":"Creates a new <xref href=\"System.Net.Sockets.UdpSingleSourceMulticastClient\"></xref> UDP client that can subscribe to a group address and receive datagrams from a single source.","nodes":[{"pos":[0,177],"content":"Creates a new <ph id=\"ph1\">&lt;xref href=\"System.Net.Sockets.UdpSingleSourceMulticastClient\"&gt;&lt;/xref&gt;</ph> UDP client that can subscribe to a group address and receive datagrams from a single source.","source":"Creates a new <xref href=\"System.Net.Sockets.UdpSingleSourceMulticastClient\"></xref> UDP client that can subscribe to a group address and receive datagrams from a single source."}],"pos":[3944,4122],"yaml":true},{"content":"The <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.%23ctor%2A> constructor associates a UDP multicast socket with a group address and port, but does not bind or otherwise use the socket.  \n  \n The `groupAddress` parameter may be either an IPv6 or IPv4 multicast address. However, the address family of the `sourceAddress` and `groupAddress` parameters must the same.  \n  \n The `localPort` parameter must not specify a port less than 1,024.","nodes":[{"pos":[0,195],"content":"The <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.%23ctor%2A> constructor associates a UDP multicast socket with a group address and port, but does not bind or otherwise use the socket.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Net.Sockets.UdpSingleSourceMulticastClient.%23ctor%2A&gt;</ph> constructor associates a UDP multicast socket with a group address and port, but does not bind or otherwise use the socket.","pos":[0,195],"source":"The <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.%23ctor%2A> constructor associates a UDP multicast socket with a group address and port, but does not bind or otherwise use the socket."}]},{"pos":[202,375],"content":"The `groupAddress` parameter may be either an IPv6 or IPv4 multicast address. However, the address family of the `sourceAddress` and `groupAddress` parameters must the same.","nodes":[{"content":"The <ph id=\"ph1\">`groupAddress`</ph> parameter may be either an IPv6 or IPv4 multicast address.","pos":[0,77],"source":"The `groupAddress` parameter may be either an IPv6 or IPv4 multicast address."},{"content":"However, the address family of the <ph id=\"ph1\">`sourceAddress`</ph> and <ph id=\"ph2\">`groupAddress`</ph> parameters must the same.","pos":[78,173],"source":" However, the address family of the `sourceAddress` and `groupAddress` parameters must the same."}]},{"pos":[382,448],"content":"The <ph id=\"ph1\">`localPort`</ph> parameter must not specify a port less than 1,024.","source":"The `localPort` parameter must not specify a port less than 1,024."}],"pos":[4133,4588],"yaml":true,"extradata":"MT"},{"content":"The sender source address for this receiver to subscribe to.","nodes":[{"pos":[0,60],"content":"The sender source address for this receiver to subscribe to.","nodes":[{"content":"The sender source address for this receiver to subscribe to.","pos":[0,60]}]}],"pos":[4980,5041],"yaml":true},{"content":"The multicast group address for this receiver to subscribe to.","nodes":[{"pos":[0,62],"content":"The multicast group address for this receiver to subscribe to.","nodes":[{"content":"The multicast group address for this receiver to subscribe to.","pos":[0,62]}]}],"pos":[5116,5179],"yaml":true},{"content":"The local port for this receiver to bind to.","nodes":[{"pos":[0,44],"content":"The local port for this receiver to bind to.","nodes":[{"content":"The local port for this receiver to bind to.","pos":[0,44]}]}],"pos":[5243,5288],"yaml":true},{"content":"<code>sourceAddress</code> and <code>groupAddress</code> must be the same address family.","nodes":[{"pos":[0,89],"content":"<ph id=\"ph1\">&lt;code&gt;sourceAddress&lt;/code&gt;</ph> and <ph id=\"ph2\">&lt;code&gt;groupAddress&lt;/code&gt;</ph> must be the same address family.","source":"<code>sourceAddress</code> and <code>groupAddress</code> must be the same address family."}],"pos":[5465,5555],"yaml":true},{"content":"<code>sourceAddress</code> is a null reference (Nothing in Visual Basic).  \n  \n -or-  \n  \n <code>groupAddress</code> is a null reference (Nothing in Visual Basic).","nodes":[{"pos":[0,73],"content":"<ph id=\"ph1\">&lt;code&gt;sourceAddress&lt;/code&gt;</ph> is a null reference (Nothing in Visual Basic).","source":"<code>sourceAddress</code> is a null reference (Nothing in Visual Basic)."},{"pos":[80,84],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[91,163],"content":"<ph id=\"ph1\">&lt;code&gt;groupAddress&lt;/code&gt;</ph> is a null reference (Nothing in Visual Basic).","source":"<code>groupAddress</code> is a null reference (Nothing in Visual Basic)."}],"pos":[5657,5827],"yaml":true},{"content":"<code>localPort</code> is less than 0  \n  \n -or-  \n  \n <code>localPort</code> is greater than 65,535.","nodes":[{"pos":[0,37],"content":"<ph id=\"ph1\">&lt;code&gt;localPort&lt;/code&gt;</ph> is less than 0","source":"<code>localPort</code> is less than 0"},{"pos":[44,48],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[55,101],"content":"<ph id=\"ph1\">&lt;code&gt;localPort&lt;/code&gt;</ph> is greater than 65,535.","source":"<code>localPort</code> is greater than 65,535."}],"pos":[5941,6049],"yaml":true},{"content":"<code>localPort</code> is less than 1024","nodes":[{"pos":[0,40],"content":"<ph id=\"ph1\">&lt;code&gt;localPort&lt;/code&gt;</ph> is less than 1024","source":"<code>localPort</code> is less than 1024"}],"pos":[6163,6204],"yaml":true},{"content":"Binds the socket and begins a join operation to the multicast group to allow datagrams to be received from a single source address.","nodes":[{"pos":[0,131],"content":"Binds the socket and begins a join operation to the multicast group to allow datagrams to be received from a single source address.","nodes":[{"content":"Binds the socket and begins a join operation to the multicast group to allow datagrams to be received from a single source address.","pos":[0,131]}]}],"pos":[7403,7535],"yaml":true},{"content":"The <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginJoinGroup%2A> method binds a UDP multicast socket to a local port and joins a multicast group to allow datagrams to be received from a single source address. The multicast group address, single source address, and local port to bind to are specified in the <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.%23ctor%2A> constructor.  \n  \n The method specified in the `callback` parameter is invoked when the operation to join the multicast group has completed.  \n  \n If required by the runtime, the  <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginJoinGroup%2A> method also performs a policy check to verify that the client is allowed to access the multicast group. If the client is not allowed access, a <xref:System.Net.Sockets.SocketException> is thrown with <xref:System.Net.Sockets.SocketError.AccessDenied>.","nodes":[{"pos":[0,402],"content":"The <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginJoinGroup%2A> method binds a UDP multicast socket to a local port and joins a multicast group to allow datagrams to be received from a single source address. The multicast group address, single source address, and local port to bind to are specified in the <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.%23ctor%2A> constructor.","nodes":[{"content":"The <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginJoinGroup%2A> method binds a UDP multicast socket to a local port and joins a multicast group to allow datagrams to be received from a single source address. The multicast group address, single source address, and local port to bind to are specified in the <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.%23ctor%2A> constructor.","pos":[0,402],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginJoinGroup%2A&gt;</ph> method binds a UDP multicast socket to a local port and joins a multicast group to allow datagrams to be received from a single source address.","pos":[0,222],"source":"The <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginJoinGroup%2A> method binds a UDP multicast socket to a local port and joins a multicast group to allow datagrams to be received from a single source address."},{"content":"The multicast group address, single source address, and local port to bind to are specified in the <ph id=\"ph1\">&lt;xref:System.Net.Sockets.UdpSingleSourceMulticastClient.%23ctor%2A&gt;</ph> constructor.","pos":[223,402],"source":" The multicast group address, single source address, and local port to bind to are specified in the <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.%23ctor%2A> constructor."}]}]},{"pos":[409,530],"content":"The method specified in the <ph id=\"ph1\">`callback`</ph> parameter is invoked when the operation to join the multicast group has completed.","source":"The method specified in the `callback` parameter is invoked when the operation to join the multicast group has completed."},{"pos":[537,896],"content":"If required by the runtime, the  <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginJoinGroup%2A> method also performs a policy check to verify that the client is allowed to access the multicast group. If the client is not allowed access, a <xref:System.Net.Sockets.SocketException> is thrown with <xref:System.Net.Sockets.SocketError.AccessDenied>.","nodes":[{"content":"If required by the runtime, the  <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginJoinGroup%2A> method also performs a policy check to verify that the client is allowed to access the multicast group. If the client is not allowed access, a <xref:System.Net.Sockets.SocketException> is thrown with <xref:System.Net.Sockets.SocketError.AccessDenied>.","pos":[0,359],"nodes":[{"content":"If required by the runtime, the  <ph id=\"ph1\">&lt;xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginJoinGroup%2A&gt;</ph> method also performs a policy check to verify that the client is allowed to access the multicast group.","pos":[0,211],"source":"If required by the runtime, the  <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginJoinGroup%2A> method also performs a policy check to verify that the client is allowed to access the multicast group."},{"content":"If the client is not allowed access, a <ph id=\"ph1\">&lt;xref:System.Net.Sockets.SocketException&gt;</ph> is thrown with <ph id=\"ph2\">&lt;xref:System.Net.Sockets.SocketError.AccessDenied&gt;</ph>.","pos":[212,359],"source":" If the client is not allowed access, a <xref:System.Net.Sockets.SocketException> is thrown with <xref:System.Net.Sockets.SocketError.AccessDenied>."}]}]}],"pos":[7546,8449],"yaml":true,"extradata":"MT"},{"content":"A callback method to invoke when the operation completes.","nodes":[{"pos":[0,57],"content":"A callback method to invoke when the operation completes.","nodes":[{"content":"A callback method to invoke when the operation completes.","pos":[0,57]}]}],"pos":[8785,8843],"yaml":true},{"content":"Optional state information to pass to the <code>callback</code> method for this operation.","nodes":[{"pos":[0,90],"content":"Optional state information to pass to the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">callback</ph><ept id=\"p1\">&lt;/code&gt;</ept> method for this operation.","source":"Optional state information to pass to the <code>callback</code> method for this operation."}],"pos":[8904,8995],"yaml":true},{"content":"Returns <xref href=\"System.IAsyncResult\"></xref>.  \n  \n An <xref href=\"System.IAsyncResult\"></xref> that references this operation.","nodes":[{"pos":[0,49],"content":"Returns <ph id=\"ph1\">&lt;xref href=\"System.IAsyncResult\"&gt;&lt;/xref&gt;</ph>.","source":"Returns <xref href=\"System.IAsyncResult\"></xref>."},{"pos":[56,131],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.IAsyncResult\"&gt;&lt;/xref&gt;</ph> that references this operation.","source":"An <xref href=\"System.IAsyncResult\"></xref> that references this operation."}],"pos":[9058,9198],"yaml":true},{"content":"The multicast group has already been joined or a join operation is currently in progress.","nodes":[{"pos":[0,89],"content":"The multicast group has already been joined or a join operation is currently in progress.","nodes":[{"content":"The multicast group has already been joined or a join operation is currently in progress.","pos":[0,89]}]}],"pos":[9400,9490],"yaml":true},{"content":"The <xref href=\"System.Net.Sockets.UdpSingleSourceMulticastClient\"></xref> has been disposed.","nodes":[{"pos":[0,93],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Net.Sockets.UdpSingleSourceMulticastClient\"&gt;&lt;/xref&gt;</ph> has been disposed.","source":"The <xref href=\"System.Net.Sockets.UdpSingleSourceMulticastClient\"></xref> has been disposed."}],"pos":[9596,9690],"yaml":true},{"content":"An error occurred when attempting to access the socket.","nodes":[{"pos":[0,55],"content":"An error occurred when attempting to access the socket.","nodes":[{"content":"An error occurred when attempting to access the socket.","pos":[0,55]}]}],"pos":[9804,9860],"yaml":true},{"content":"Begins the operation of receiving a packet from the joined multicast group and invokes the specified callback when a packet has arrived on the group from a specified sender.","nodes":[{"pos":[0,173],"content":"Begins the operation of receiving a packet from the joined multicast group and invokes the specified callback when a packet has arrived on the group from a specified sender.","nodes":[{"content":"Begins the operation of receiving a packet from the joined multicast group and invokes the specified callback when a packet has arrived on the group from a specified sender.","pos":[0,173]}]}],"pos":[11293,11467],"yaml":true},{"content":"The <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource%2A> method begins an operation of receiving a UDP packet from the joined multicast group from a single sender. The local port, multicast group, and sender source address are specified in the <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.%23ctor%2A> constructor. The multicast client must also have completed a join to the multicast group.  \n  \n The method specified in the `callback` parameter is invoked when a packet has received.  \n  \n It is possible to have a socket failure if a receive operation fails synchronously, although this is uncommon with UDP. If a socket failure occurs, a <xref:System.Net.Sockets.SocketException> is thrown. The error received is specified as a member of the <xref:System.Net.Sockets.SocketError> enumeration.","nodes":[{"pos":[0,431],"content":"The <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource%2A> method begins an operation of receiving a UDP packet from the joined multicast group from a single sender. The local port, multicast group, and sender source address are specified in the <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.%23ctor%2A> constructor. The multicast client must also have completed a join to the multicast group.","nodes":[{"content":"The <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource%2A> method begins an operation of receiving a UDP packet from the joined multicast group from a single sender. The local port, multicast group, and sender source address are specified in the <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.%23ctor%2A> constructor. The multicast client must also have completed a join to the multicast group.","pos":[0,431],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource%2A&gt;</ph> method begins an operation of receiving a UDP packet from the joined multicast group from a single sender.","pos":[0,193],"source":"The <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource%2A> method begins an operation of receiving a UDP packet from the joined multicast group from a single sender."},{"content":"The local port, multicast group, and sender source address are specified in the <ph id=\"ph1\">&lt;xref:System.Net.Sockets.UdpSingleSourceMulticastClient.%23ctor%2A&gt;</ph> constructor.","pos":[194,354],"source":" The local port, multicast group, and sender source address are specified in the <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.%23ctor%2A> constructor."},{"content":"The multicast client must also have completed a join to the multicast group.","pos":[355,431]}]}]},{"pos":[438,525],"content":"The method specified in the <ph id=\"ph1\">`callback`</ph> parameter is invoked when a packet has received.","source":"The method specified in the `callback` parameter is invoked when a packet has received."},{"pos":[532,836],"content":"It is possible to have a socket failure if a receive operation fails synchronously, although this is uncommon with UDP. If a socket failure occurs, a <xref:System.Net.Sockets.SocketException> is thrown. The error received is specified as a member of the <xref:System.Net.Sockets.SocketError> enumeration.","nodes":[{"content":"It is possible to have a socket failure if a receive operation fails synchronously, although this is uncommon with UDP. If a socket failure occurs, a <xref:System.Net.Sockets.SocketException> is thrown. The error received is specified as a member of the <xref:System.Net.Sockets.SocketError> enumeration.","pos":[0,304],"nodes":[{"content":"It is possible to have a socket failure if a receive operation fails synchronously, although this is uncommon with UDP.","pos":[0,119]},{"content":"If a socket failure occurs, a <ph id=\"ph1\">&lt;xref:System.Net.Sockets.SocketException&gt;</ph> is thrown.","pos":[120,202],"source":" If a socket failure occurs, a <xref:System.Net.Sockets.SocketException> is thrown."},{"content":"The error received is specified as a member of the <ph id=\"ph1\">&lt;xref:System.Net.Sockets.SocketError&gt;</ph> enumeration.","pos":[203,304],"source":" The error received is specified as a member of the <xref:System.Net.Sockets.SocketError> enumeration."}]}]}],"pos":[11478,12321],"yaml":true,"extradata":"MT"},{"content":"The buffer to store the received data.","nodes":[{"pos":[0,38],"content":"The buffer to store the received data.","nodes":[{"content":"The buffer to store the received data.","pos":[0,38]}]}],"pos":[12694,12733],"yaml":true},{"content":"The offset, in bytes, from the beginning of the <code>buffer</code> where the data should be stored.","nodes":[{"pos":[0,100],"content":"The offset, in bytes, from the beginning of the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">buffer</ph><ept id=\"p1\">&lt;/code&gt;</ept> where the data should be stored.","source":"The offset, in bytes, from the beginning of the <code>buffer</code> where the data should be stored."}],"pos":[12794,12895],"yaml":true},{"content":"The maximum number of bytes to receive and store in the <code>buffer</code>.","nodes":[{"pos":[0,76],"content":"The maximum number of bytes to receive and store in the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">buffer</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"The maximum number of bytes to receive and store in the <code>buffer</code>."}],"pos":[12955,13032],"yaml":true},{"content":"The callback method to invoke when the operation completes.","nodes":[{"pos":[0,59],"content":"The callback method to invoke when the operation completes.","nodes":[{"content":"The callback method to invoke when the operation completes.","pos":[0,59]}]}],"pos":[13103,13163],"yaml":true},{"content":"Optional state information to pass to the <code>callback</code> method for this operation.","nodes":[{"pos":[0,90],"content":"Optional state information to pass to the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">callback</ph><ept id=\"p1\">&lt;/code&gt;</ept> method for this operation.","source":"Optional state information to pass to the <code>callback</code> method for this operation."}],"pos":[13224,13315],"yaml":true},{"content":"Returns <xref href=\"System.IAsyncResult\"></xref>.  \n  \n An <xref href=\"System.IAsyncResult\"></xref> that references this operation.","nodes":[{"pos":[0,49],"content":"Returns <ph id=\"ph1\">&lt;xref href=\"System.IAsyncResult\"&gt;&lt;/xref&gt;</ph>.","source":"Returns <xref href=\"System.IAsyncResult\"></xref>."},{"pos":[56,131],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.IAsyncResult\"&gt;&lt;/xref&gt;</ph> that references this operation.","source":"An <xref href=\"System.IAsyncResult\"></xref> that references this operation."}],"pos":[13378,13518],"yaml":true},{"content":"<code>buffer</code> is a null reference (Nothing in Visual Basic).","nodes":[{"pos":[0,66],"content":"<ph id=\"ph1\">&lt;code&gt;buffer&lt;/code&gt;</ph> is a null reference (Nothing in Visual Basic).","source":"<code>buffer</code> is a null reference (Nothing in Visual Basic)."}],"pos":[13720,13787],"yaml":true},{"content":"<code>offset</code> is less than 0  \n  \n -or-  \n  \n <code>offset</code> is greater than the length of the <code>buffer</code>.  \n  \n -or-  \n  \n <code>count</code> is less than 0  \n  \n -or-  \n  \n <code>offset</code> plus the count is greater than the length of the <code>buffer</code>.","nodes":[{"pos":[0,34],"content":"<ph id=\"ph1\">&lt;code&gt;offset&lt;/code&gt;</ph> is less than 0","source":"<code>offset</code> is less than 0"},{"pos":[41,45],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[52,126],"content":"<ph id=\"ph1\">&lt;code&gt;offset&lt;/code&gt;</ph> is greater than the length of the <ph id=\"ph2\">&lt;code&gt;buffer&lt;/code&gt;</ph>.","source":"<code>offset</code> is greater than the length of the <code>buffer</code>."},{"pos":[133,137],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[144,177],"content":"<ph id=\"ph1\">&lt;code&gt;count&lt;/code&gt;</ph> is less than 0","source":"<code>count</code> is less than 0"},{"pos":[184,188],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[195,284],"content":"<ph id=\"ph1\">&lt;code&gt;offset&lt;/code&gt;</ph> plus the count is greater than the length of the <ph id=\"ph2\">&lt;code&gt;buffer&lt;/code&gt;</ph>.","source":"<code>offset</code> plus the count is greater than the length of the <code>buffer</code>."}],"pos":[13901,14200],"yaml":true},{"content":"The multicast group has not yet been joined.","nodes":[{"pos":[0,44],"content":"The multicast group has not yet been joined.","nodes":[{"content":"The multicast group has not yet been joined.","pos":[0,44]}]}],"pos":[14310,14355],"yaml":true},{"content":"The <xref href=\"System.Net.Sockets.UdpSingleSourceMulticastClient\"></xref> has been disposed.","nodes":[{"pos":[0,93],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Net.Sockets.UdpSingleSourceMulticastClient\"&gt;&lt;/xref&gt;</ph> has been disposed.","source":"The <xref href=\"System.Net.Sockets.UdpSingleSourceMulticastClient\"></xref> has been disposed."}],"pos":[14461,14555],"yaml":true},{"content":"An error occurred when attempting to access the socket for receiving.","nodes":[{"pos":[0,69],"content":"An error occurred when attempting to access the socket for receiving.","nodes":[{"content":"An error occurred when attempting to access the socket for receiving.","pos":[0,69]}]}],"pos":[14669,14739],"yaml":true},{"content":"Begins the operation of sending a unicast packet to the source previously specified.","nodes":[{"pos":[0,84],"content":"Begins the operation of sending a unicast packet to the source previously specified.","nodes":[{"content":"Begins the operation of sending a unicast packet to the source previously specified.","pos":[0,84]}]}],"pos":[16202,16287],"yaml":true},{"content":"The <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginSendToSource%2A> method begins an operation of sending a UDP packet to the source previously specified.  \n  \n Some protocols use this information to pass along flow control, quality of service statistics, or recovery messages.  \n  \n The method specified in the `callback` parameter is invoked when a packet has been sent.  \n  \n The client must have completed a join to the multicast group.  \n  \n If the destination port specified in the `remotePort` parameter is less than 1,024, a <xref:System.Net.Sockets.SocketException> is thrown with <xref:System.Net.Sockets.SocketError.AccessDenied>.  \n  \n It is possible to have a socket failure if a send operation fails synchronously, although this is uncommon with UDP. If a socket failure occurs, a <xref:System.Net.Sockets.SocketException> is thrown. The error received is specified as a member of the <xref:System.Net.Sockets.SocketError> enumeration.","nodes":[{"pos":[0,168],"content":"The <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginSendToSource%2A> method begins an operation of sending a UDP packet to the source previously specified.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginSendToSource%2A&gt;</ph> method begins an operation of sending a UDP packet to the source previously specified.","pos":[0,168],"source":"The <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginSendToSource%2A> method begins an operation of sending a UDP packet to the source previously specified."}]},{"pos":[175,291],"content":"Some protocols use this information to pass along flow control, quality of service statistics, or recovery messages.","nodes":[{"content":"Some protocols use this information to pass along flow control, quality of service statistics, or recovery messages.","pos":[0,116]}]},{"pos":[298,386],"content":"The method specified in the <ph id=\"ph1\">`callback`</ph> parameter is invoked when a packet has been sent.","source":"The method specified in the `callback` parameter is invoked when a packet has been sent."},{"pos":[393,454],"content":"The client must have completed a join to the multicast group.","nodes":[{"content":"The client must have completed a join to the multicast group.","pos":[0,61]}]},{"pos":[461,655],"content":"If the destination port specified in the <ph id=\"ph1\">`remotePort`</ph> parameter is less than 1,024, a <ph id=\"ph2\">&lt;xref:System.Net.Sockets.SocketException&gt;</ph> is thrown with <ph id=\"ph3\">&lt;xref:System.Net.Sockets.SocketError.AccessDenied&gt;</ph>.","source":"If the destination port specified in the `remotePort` parameter is less than 1,024, a <xref:System.Net.Sockets.SocketException> is thrown with <xref:System.Net.Sockets.SocketError.AccessDenied>."},{"pos":[662,963],"content":"It is possible to have a socket failure if a send operation fails synchronously, although this is uncommon with UDP. If a socket failure occurs, a <xref:System.Net.Sockets.SocketException> is thrown. The error received is specified as a member of the <xref:System.Net.Sockets.SocketError> enumeration.","nodes":[{"content":"It is possible to have a socket failure if a send operation fails synchronously, although this is uncommon with UDP. If a socket failure occurs, a <xref:System.Net.Sockets.SocketException> is thrown. The error received is specified as a member of the <xref:System.Net.Sockets.SocketError> enumeration.","pos":[0,301],"nodes":[{"content":"It is possible to have a socket failure if a send operation fails synchronously, although this is uncommon with UDP.","pos":[0,116]},{"content":"If a socket failure occurs, a <ph id=\"ph1\">&lt;xref:System.Net.Sockets.SocketException&gt;</ph> is thrown.","pos":[117,199],"source":" If a socket failure occurs, a <xref:System.Net.Sockets.SocketException> is thrown."},{"content":"The error received is specified as a member of the <ph id=\"ph1\">&lt;xref:System.Net.Sockets.SocketError&gt;</ph> enumeration.","pos":[200,301],"source":" The error received is specified as a member of the <xref:System.Net.Sockets.SocketError> enumeration."}]}]}],"pos":[16298,17274],"yaml":true,"extradata":"MT"},{"content":"The buffer that contains the data to send.","nodes":[{"pos":[0,42],"content":"The buffer that contains the data to send.","nodes":[{"content":"The buffer that contains the data to send.","pos":[0,42]}]}],"pos":[17658,17701],"yaml":true},{"content":"The offset, in bytes, from the beginning of the <code>buffer</code> to read the data to be sent.","nodes":[{"pos":[0,96],"content":"The offset, in bytes, from the beginning of the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">buffer</ph><ept id=\"p1\">&lt;/code&gt;</ept> to read the data to be sent.","source":"The offset, in bytes, from the beginning of the <code>buffer</code> to read the data to be sent."}],"pos":[17762,17859],"yaml":true},{"content":"The number of bytes to send from the <code>buffer</code>.","nodes":[{"pos":[0,57],"content":"The number of bytes to send from the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">buffer</ph><ept id=\"p1\">&lt;/code&gt;</ept>.","source":"The number of bytes to send from the <code>buffer</code>."}],"pos":[17919,17977],"yaml":true},{"content":"The remote port to which the packet is to be sent. The remote address is specified by the <xref href=\"System.Net.Sockets.UdpSingleSourceMulticastClient.#ctor(System.Net.IPAddress,System.Net.IPAddress,System.Int32)\"></xref> constructor.","nodes":[{"pos":[0,235],"content":"The remote port to which the packet is to be sent. The remote address is specified by the <xref href=\"System.Net.Sockets.UdpSingleSourceMulticastClient.#ctor(System.Net.IPAddress,System.Net.IPAddress,System.Int32)\"></xref> constructor.","nodes":[{"content":"The remote port to which the packet is to be sent.","pos":[0,50]},{"content":"The remote address is specified by the <ph id=\"ph1\">&lt;xref href=\"System.Net.Sockets.UdpSingleSourceMulticastClient.#ctor(System.Net.IPAddress,System.Net.IPAddress,System.Int32)\"&gt;&lt;/xref&gt;</ph> constructor.","pos":[51,235],"source":" The remote address is specified by the <xref href=\"System.Net.Sockets.UdpSingleSourceMulticastClient.#ctor(System.Net.IPAddress,System.Net.IPAddress,System.Int32)\"></xref> constructor."}]}],"pos":[18042,18278],"yaml":true},{"content":"The callback method to invoke when the operation completes.","nodes":[{"pos":[0,59],"content":"The callback method to invoke when the operation completes.","nodes":[{"content":"The callback method to invoke when the operation completes.","pos":[0,59]}]}],"pos":[18349,18409],"yaml":true},{"content":"Optional state information to pass to the <code>callback</code> method for this operation.","nodes":[{"pos":[0,90],"content":"Optional state information to pass to the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">callback</ph><ept id=\"p1\">&lt;/code&gt;</ept> method for this operation.","source":"Optional state information to pass to the <code>callback</code> method for this operation."}],"pos":[18470,18561],"yaml":true},{"content":"Returns <xref href=\"System.IAsyncResult\"></xref>.  \n  \n An <xref href=\"System.IAsyncResult\"></xref> that references this operation.","nodes":[{"pos":[0,49],"content":"Returns <ph id=\"ph1\">&lt;xref href=\"System.IAsyncResult\"&gt;&lt;/xref&gt;</ph>.","source":"Returns <xref href=\"System.IAsyncResult\"></xref>."},{"pos":[56,131],"content":"An <ph id=\"ph1\">&lt;xref href=\"System.IAsyncResult\"&gt;&lt;/xref&gt;</ph> that references this operation.","source":"An <xref href=\"System.IAsyncResult\"></xref> that references this operation."}],"pos":[18624,18764],"yaml":true},{"content":"<code>buffer</code> is a null reference (Nothing in Visual Basic).","nodes":[{"pos":[0,66],"content":"<ph id=\"ph1\">&lt;code&gt;buffer&lt;/code&gt;</ph> is a null reference (Nothing in Visual Basic).","source":"<code>buffer</code> is a null reference (Nothing in Visual Basic)."}],"pos":[18961,19028],"yaml":true},{"content":"<code>offset</code> is less than 0  \n  \n -or-  \n  \n <code>offset</code> is greater than the length of the <code>buffer</code>.  \n  \n -or-  \n  \n <code>count</code> is less than 0  \n  \n -or-  \n  \n <code>offset</code> plus the count is greater than the length of the <code>buffer</code>.  \n  \n -or-  \n  \n <code>remotePort</code> is less than 0 or greater than 65,535.","nodes":[{"pos":[0,34],"content":"<ph id=\"ph1\">&lt;code&gt;offset&lt;/code&gt;</ph> is less than 0","source":"<code>offset</code> is less than 0"},{"pos":[41,45],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[52,126],"content":"<ph id=\"ph1\">&lt;code&gt;offset&lt;/code&gt;</ph> is greater than the length of the <ph id=\"ph2\">&lt;code&gt;buffer&lt;/code&gt;</ph>.","source":"<code>offset</code> is greater than the length of the <code>buffer</code>."},{"pos":[133,137],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[144,177],"content":"<ph id=\"ph1\">&lt;code&gt;count&lt;/code&gt;</ph> is less than 0","source":"<code>count</code> is less than 0"},{"pos":[184,188],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[195,284],"content":"<ph id=\"ph1\">&lt;code&gt;offset&lt;/code&gt;</ph> plus the count is greater than the length of the <ph id=\"ph2\">&lt;code&gt;buffer&lt;/code&gt;</ph>.","source":"<code>offset</code> plus the count is greater than the length of the <code>buffer</code>."},{"pos":[291,295],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[302,364],"content":"<ph id=\"ph1\">&lt;code&gt;remotePort&lt;/code&gt;</ph> is less than 0 or greater than 65,535.","source":"<code>remotePort</code> is less than 0 or greater than 65,535."}],"pos":[19142,19525],"yaml":true},{"content":"The multicast group has not yet been joined.","nodes":[{"pos":[0,44],"content":"The multicast group has not yet been joined.","nodes":[{"content":"The multicast group has not yet been joined.","pos":[0,44]}]}],"pos":[19635,19680],"yaml":true},{"content":"The <xref href=\"System.Net.Sockets.UdpSingleSourceMulticastClient\"></xref> has been disposed.","nodes":[{"pos":[0,93],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Net.Sockets.UdpSingleSourceMulticastClient\"&gt;&lt;/xref&gt;</ph> has been disposed.","source":"The <xref href=\"System.Net.Sockets.UdpSingleSourceMulticastClient\"></xref> has been disposed."}],"pos":[19786,19880],"yaml":true},{"content":"An error occurred when attempting to access the socket.","nodes":[{"pos":[0,55],"content":"An error occurred when attempting to access the socket.","nodes":[{"content":"An error occurred when attempting to access the socket.","pos":[0,55]}]}],"pos":[19994,20050],"yaml":true},{"content":"Leaves the multicast group and releases all resources used by the current instance of the <xref href=\"System.Net.Sockets.UdpSingleSourceMulticastClient\"></xref> class and the underlying the <xref href=\"System.Net.Sockets.Socket\"></xref>.","nodes":[{"pos":[0,237],"content":"Leaves the multicast group and releases all resources used by the current instance of the <ph id=\"ph1\">&lt;xref href=\"System.Net.Sockets.UdpSingleSourceMulticastClient\"&gt;&lt;/xref&gt;</ph> class and the underlying the <ph id=\"ph2\">&lt;xref href=\"System.Net.Sockets.Socket\"&gt;&lt;/xref&gt;</ph>.","source":"Leaves the multicast group and releases all resources used by the current instance of the <xref href=\"System.Net.Sockets.UdpSingleSourceMulticastClient\"></xref> class and the underlying the <xref href=\"System.Net.Sockets.Socket\"></xref>."}],"pos":[21036,21274],"yaml":true},{"content":"Call <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.Dispose%2A> when you are finished using the <xref:System.Net.Sockets.UdpSingleSourceMulticastClient>. The <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.Dispose%2A> method leaves the <xref:System.Net.Sockets.UdpSingleSourceMulticastClient> in an unusable state. After calling <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.Dispose%2A>, you must release all references to the <xref:System.Net.Sockets.UdpSingleSourceMulticastClient> so the garbage collector can reclaim the memory that the <xref:System.Net.Sockets.UdpSingleSourceMulticastClient> was occupying.  \n  \n Always call <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.Dispose%2A> before you release your last reference to the <xref:System.Net.Sockets.UdpSingleSourceMulticastClient>. Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.Net.Sockets.UdpSingleSourceMulticastClient> object's <xref:System.Object.Finalize%2A> method.","nodes":[{"pos":[0,639],"content":"Call <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.Dispose%2A> when you are finished using the <xref:System.Net.Sockets.UdpSingleSourceMulticastClient>. The <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.Dispose%2A> method leaves the <xref:System.Net.Sockets.UdpSingleSourceMulticastClient> in an unusable state. After calling <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.Dispose%2A>, you must release all references to the <xref:System.Net.Sockets.UdpSingleSourceMulticastClient> so the garbage collector can reclaim the memory that the <xref:System.Net.Sockets.UdpSingleSourceMulticastClient> was occupying.","nodes":[{"content":"Call <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.Dispose%2A> when you are finished using the <xref:System.Net.Sockets.UdpSingleSourceMulticastClient>. The <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.Dispose%2A> method leaves the <xref:System.Net.Sockets.UdpSingleSourceMulticastClient> in an unusable state. After calling <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.Dispose%2A>, you must release all references to the <xref:System.Net.Sockets.UdpSingleSourceMulticastClient> so the garbage collector can reclaim the memory that the <xref:System.Net.Sockets.UdpSingleSourceMulticastClient> was occupying.","pos":[0,639],"nodes":[{"content":"Call <ph id=\"ph1\">&lt;xref:System.Net.Sockets.UdpSingleSourceMulticastClient.Dispose%2A&gt;</ph> when you are finished using the <ph id=\"ph2\">&lt;xref:System.Net.Sockets.UdpSingleSourceMulticastClient&gt;</ph>.","pos":[0,162],"source":"Call <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.Dispose%2A> when you are finished using the <xref:System.Net.Sockets.UdpSingleSourceMulticastClient>."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Net.Sockets.UdpSingleSourceMulticastClient.Dispose%2A&gt;</ph> method leaves the <ph id=\"ph2\">&lt;xref:System.Net.Sockets.UdpSingleSourceMulticastClient&gt;</ph> in an unusable state.","pos":[163,331],"source":" The <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.Dispose%2A> method leaves the <xref:System.Net.Sockets.UdpSingleSourceMulticastClient> in an unusable state."},{"content":"After calling <ph id=\"ph1\">&lt;xref:System.Net.Sockets.UdpSingleSourceMulticastClient.Dispose%2A&gt;</ph>, you must release all references to the <ph id=\"ph2\">&lt;xref:System.Net.Sockets.UdpSingleSourceMulticastClient&gt;</ph> so the garbage collector can reclaim the memory that the <ph id=\"ph3\">&lt;xref:System.Net.Sockets.UdpSingleSourceMulticastClient&gt;</ph> was occupying.","pos":[332,639],"source":" After calling <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.Dispose%2A>, you must release all references to the <xref:System.Net.Sockets.UdpSingleSourceMulticastClient> so the garbage collector can reclaim the memory that the <xref:System.Net.Sockets.UdpSingleSourceMulticastClient> was occupying."}]}]},{"pos":[646,1029],"content":"Always call <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.Dispose%2A> before you release your last reference to the <xref:System.Net.Sockets.UdpSingleSourceMulticastClient>. Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.Net.Sockets.UdpSingleSourceMulticastClient> object's <xref:System.Object.Finalize%2A> method.","nodes":[{"content":"Always call <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.Dispose%2A> before you release your last reference to the <xref:System.Net.Sockets.UdpSingleSourceMulticastClient>. Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.Net.Sockets.UdpSingleSourceMulticastClient> object's <xref:System.Object.Finalize%2A> method.","pos":[0,383],"nodes":[{"content":"Always call <ph id=\"ph1\">&lt;xref:System.Net.Sockets.UdpSingleSourceMulticastClient.Dispose%2A&gt;</ph> before you release your last reference to the <ph id=\"ph2\">&lt;xref:System.Net.Sockets.UdpSingleSourceMulticastClient&gt;</ph>.","pos":[0,183],"source":"Always call <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.Dispose%2A> before you release your last reference to the <xref:System.Net.Sockets.UdpSingleSourceMulticastClient>."},{"content":"Otherwise, the resources it is using will not be freed until the garbage collector calls the <ph id=\"ph1\">&lt;xref:System.Net.Sockets.UdpSingleSourceMulticastClient&gt;</ph> object's <ph id=\"ph2\">&lt;xref:System.Object.Finalize%2A&gt;</ph> method.","pos":[184,383],"source":" Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.Net.Sockets.UdpSingleSourceMulticastClient> object's <xref:System.Object.Finalize%2A> method."}]}]}],"pos":[21285,22319],"yaml":true,"extradata":"MT"},{"content":"Completes the asynchronous join group operation to a multicast group.","nodes":[{"pos":[0,69],"content":"Completes the asynchronous join group operation to a multicast group.","nodes":[{"content":"Completes the asynchronous join group operation to a multicast group.","pos":[0,69]}]}],"pos":[23739,23809],"yaml":true},{"content":"The <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.EndJoinGroup%2A> method completes an asynchronous bind to a socket and join operation to a multicast group.  \n  \n If required by the runtime, the  <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.EndJoinGroup%2A> method also performs a policy check to verify that the client is allowed to access the multicast group. If the client is not allowed access, a <xref:System.Net.Sockets.SocketException> is thrown with <xref:System.Net.Sockets.SocketError.AccessDenied>.  \n  \n If there is a socket failure while performing the join group operation, a <xref:System.Net.Sockets.SocketException> is thrown. The error received is specified as a member of the <xref:System.Net.Sockets.SocketError> enumeration.","nodes":[{"pos":[0,167],"content":"The <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.EndJoinGroup%2A> method completes an asynchronous bind to a socket and join operation to a multicast group.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Net.Sockets.UdpSingleSourceMulticastClient.EndJoinGroup%2A&gt;</ph> method completes an asynchronous bind to a socket and join operation to a multicast group.","pos":[0,167],"source":"The <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.EndJoinGroup%2A> method completes an asynchronous bind to a socket and join operation to a multicast group."}]},{"pos":[174,531],"content":"If required by the runtime, the  <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.EndJoinGroup%2A> method also performs a policy check to verify that the client is allowed to access the multicast group. If the client is not allowed access, a <xref:System.Net.Sockets.SocketException> is thrown with <xref:System.Net.Sockets.SocketError.AccessDenied>.","nodes":[{"content":"If required by the runtime, the  <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.EndJoinGroup%2A> method also performs a policy check to verify that the client is allowed to access the multicast group. If the client is not allowed access, a <xref:System.Net.Sockets.SocketException> is thrown with <xref:System.Net.Sockets.SocketError.AccessDenied>.","pos":[0,357],"nodes":[{"content":"If required by the runtime, the  <ph id=\"ph1\">&lt;xref:System.Net.Sockets.UdpSingleSourceMulticastClient.EndJoinGroup%2A&gt;</ph> method also performs a policy check to verify that the client is allowed to access the multicast group.","pos":[0,209],"source":"If required by the runtime, the  <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.EndJoinGroup%2A> method also performs a policy check to verify that the client is allowed to access the multicast group."},{"content":"If the client is not allowed access, a <ph id=\"ph1\">&lt;xref:System.Net.Sockets.SocketException&gt;</ph> is thrown with <ph id=\"ph2\">&lt;xref:System.Net.Sockets.SocketError.AccessDenied&gt;</ph>.","pos":[210,357],"source":" If the client is not allowed access, a <xref:System.Net.Sockets.SocketException> is thrown with <xref:System.Net.Sockets.SocketError.AccessDenied>."}]}]},{"pos":[538,766],"content":"If there is a socket failure while performing the join group operation, a <xref:System.Net.Sockets.SocketException> is thrown. The error received is specified as a member of the <xref:System.Net.Sockets.SocketError> enumeration.","nodes":[{"content":"If there is a socket failure while performing the join group operation, a <xref:System.Net.Sockets.SocketException> is thrown. The error received is specified as a member of the <xref:System.Net.Sockets.SocketError> enumeration.","pos":[0,228],"nodes":[{"content":"If there is a socket failure while performing the join group operation, a <ph id=\"ph1\">&lt;xref:System.Net.Sockets.SocketException&gt;</ph> is thrown.","pos":[0,126],"source":"If there is a socket failure while performing the join group operation, a <xref:System.Net.Sockets.SocketException> is thrown."},{"content":"The error received is specified as a member of the <ph id=\"ph1\">&lt;xref:System.Net.Sockets.SocketError&gt;</ph> enumeration.","pos":[127,228],"source":" The error received is specified as a member of the <xref:System.Net.Sockets.SocketError> enumeration."}]}]}],"pos":[23820,24593],"yaml":true,"extradata":"MT"},{"content":"The result of the asynchronous join operation.","nodes":[{"pos":[0,46],"content":"The result of the asynchronous join operation.","nodes":[{"content":"The result of the asynchronous join operation.","pos":[0,46]}]}],"pos":[24899,24946],"yaml":true},{"content":"<code>result</code> is a null reference (Nothing in Visual Basic).","nodes":[{"pos":[0,66],"content":"<ph id=\"ph1\">&lt;code&gt;result&lt;/code&gt;</ph> is a null reference (Nothing in Visual Basic).","source":"<code>result</code> is a null reference (Nothing in Visual Basic)."}],"pos":[25138,25205],"yaml":true},{"content":"The <xref href=\"System.Net.Sockets.UdpSingleSourceMulticastClient\"></xref> has been disposed.","nodes":[{"pos":[0,93],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Net.Sockets.UdpSingleSourceMulticastClient\"&gt;&lt;/xref&gt;</ph> has been disposed.","source":"The <xref href=\"System.Net.Sockets.UdpSingleSourceMulticastClient\"></xref> has been disposed."}],"pos":[25311,25405],"yaml":true},{"content":"An error occurred when attempting to access the socket.","nodes":[{"pos":[0,55],"content":"An error occurred when attempting to access the socket.","nodes":[{"content":"An error occurred when attempting to access the socket.","pos":[0,55]}]}],"pos":[25519,25575],"yaml":true},{"content":"Completes the asynchronous operation of receiving a packet from the joined multicast group and provides the information received.","nodes":[{"pos":[0,129],"content":"Completes the asynchronous operation of receiving a packet from the joined multicast group and provides the information received.","nodes":[{"content":"Completes the asynchronous operation of receiving a packet from the joined multicast group and provides the information received.","pos":[0,129]}]}],"pos":[26801,26931],"yaml":true},{"content":"The <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.EndReceiveFromSource%2A> method completes an asynchronous operation to receive a packet from a single source in a multicast group.  \n  \n If there is a socket failure while performing the receive operation, a <xref:System.Net.Sockets.SocketException> is thrown. The error received is specified as a member of the <xref:System.Net.Sockets.SocketError> enumeration.","nodes":[{"pos":[0,190],"content":"The <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.EndReceiveFromSource%2A> method completes an asynchronous operation to receive a packet from a single source in a multicast group.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Net.Sockets.UdpSingleSourceMulticastClient.EndReceiveFromSource%2A&gt;</ph> method completes an asynchronous operation to receive a packet from a single source in a multicast group.","pos":[0,190],"source":"The <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.EndReceiveFromSource%2A> method completes an asynchronous operation to receive a packet from a single source in a multicast group."}]},{"pos":[197,422],"content":"If there is a socket failure while performing the receive operation, a <xref:System.Net.Sockets.SocketException> is thrown. The error received is specified as a member of the <xref:System.Net.Sockets.SocketError> enumeration.","nodes":[{"content":"If there is a socket failure while performing the receive operation, a <xref:System.Net.Sockets.SocketException> is thrown. The error received is specified as a member of the <xref:System.Net.Sockets.SocketError> enumeration.","pos":[0,225],"nodes":[{"content":"If there is a socket failure while performing the receive operation, a <ph id=\"ph1\">&lt;xref:System.Net.Sockets.SocketException&gt;</ph> is thrown.","pos":[0,123],"source":"If there is a socket failure while performing the receive operation, a <xref:System.Net.Sockets.SocketException> is thrown."},{"content":"The error received is specified as a member of the <ph id=\"ph1\">&lt;xref:System.Net.Sockets.SocketError&gt;</ph> enumeration.","pos":[124,225],"source":" The error received is specified as a member of the <xref:System.Net.Sockets.SocketError> enumeration."}]}]}],"pos":[26942,27369],"yaml":true,"extradata":"MT"},{"content":"The result of the asynchronous receive operation.","nodes":[{"pos":[0,49],"content":"The result of the asynchronous receive operation.","nodes":[{"content":"The result of the asynchronous receive operation.","pos":[0,49]}]}],"pos":[27702,27752],"yaml":true},{"content":"The source endpoint where the packet was received from.","nodes":[{"pos":[0,55],"content":"The source endpoint where the packet was received from.","nodes":[{"content":"The source endpoint where the packet was received from.","pos":[0,55]}]}],"pos":[27817,27873],"yaml":true},{"content":"Returns <xref href=\"System.Int32\"></xref>.  \n  \n The length, in bytes, of the message stored in the <code>buffer</code> parameter passed to the <xref href=\"System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)\"></xref> method.","nodes":[{"pos":[0,42],"content":"Returns <ph id=\"ph1\">&lt;xref href=\"System.Int32\"&gt;&lt;/xref&gt;</ph>.","source":"Returns <xref href=\"System.Int32\"></xref>."},{"pos":[49,321],"content":"The length, in bytes, of the message stored in the <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">buffer</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter passed to the <ph id=\"ph2\">&lt;xref href=\"System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)\"&gt;&lt;/xref&gt;</ph> method.","source":"The length, in bytes, of the message stored in the <code>buffer</code> parameter passed to the <xref href=\"System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)\"></xref> method."}],"pos":[27929,28259],"yaml":true},{"content":"<code>result</code> is a null reference (Nothing in Visual Basic).","nodes":[{"pos":[0,66],"content":"<ph id=\"ph1\">&lt;code&gt;result&lt;/code&gt;</ph> is a null reference (Nothing in Visual Basic).","source":"<code>result</code> is a null reference (Nothing in Visual Basic)."}],"pos":[28459,28526],"yaml":true},{"content":"The multicast group has not yet been joined.","nodes":[{"pos":[0,44],"content":"The multicast group has not yet been joined.","nodes":[{"content":"The multicast group has not yet been joined.","pos":[0,44]}]}],"pos":[28636,28681],"yaml":true},{"content":"The <xref href=\"System.Net.Sockets.UdpSingleSourceMulticastClient\"></xref> has been disposed.","nodes":[{"pos":[0,93],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Net.Sockets.UdpSingleSourceMulticastClient\"&gt;&lt;/xref&gt;</ph> has been disposed.","source":"The <xref href=\"System.Net.Sockets.UdpSingleSourceMulticastClient\"></xref> has been disposed."}],"pos":[28787,28881],"yaml":true},{"content":"An error occurred when attempting to access the socket.","nodes":[{"pos":[0,55],"content":"An error occurred when attempting to access the socket.","nodes":[{"content":"An error occurred when attempting to access the socket.","pos":[0,55]}]}],"pos":[28995,29051],"yaml":true},{"content":"Completes the operation of sending a unicast packet to a single source.","nodes":[{"pos":[0,71],"content":"Completes the operation of sending a unicast packet to a single source.","nodes":[{"content":"Completes the operation of sending a unicast packet to a single source.","pos":[0,71]}]}],"pos":[30184,30256],"yaml":true},{"content":"The <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.EndSendToSource%2A> method completes an asynchronous operation to send a packet to single source previously specified.  \n  \n If there is a socket failure while performing the receive operation, a <xref:System.Net.Sockets.SocketException> is thrown. The error received is specified as a member of the <xref:System.Net.Sockets.SocketError> enumeration.","nodes":[{"pos":[0,178],"content":"The <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.EndSendToSource%2A> method completes an asynchronous operation to send a packet to single source previously specified.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Net.Sockets.UdpSingleSourceMulticastClient.EndSendToSource%2A&gt;</ph> method completes an asynchronous operation to send a packet to single source previously specified.","pos":[0,178],"source":"The <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.EndSendToSource%2A> method completes an asynchronous operation to send a packet to single source previously specified."}]},{"pos":[185,410],"content":"If there is a socket failure while performing the receive operation, a <xref:System.Net.Sockets.SocketException> is thrown. The error received is specified as a member of the <xref:System.Net.Sockets.SocketError> enumeration.","nodes":[{"content":"If there is a socket failure while performing the receive operation, a <xref:System.Net.Sockets.SocketException> is thrown. The error received is specified as a member of the <xref:System.Net.Sockets.SocketError> enumeration.","pos":[0,225],"nodes":[{"content":"If there is a socket failure while performing the receive operation, a <ph id=\"ph1\">&lt;xref:System.Net.Sockets.SocketException&gt;</ph> is thrown.","pos":[0,123],"source":"If there is a socket failure while performing the receive operation, a <xref:System.Net.Sockets.SocketException> is thrown."},{"content":"The error received is specified as a member of the <ph id=\"ph1\">&lt;xref:System.Net.Sockets.SocketError&gt;</ph> enumeration.","pos":[124,225],"source":" The error received is specified as a member of the <xref:System.Net.Sockets.SocketError> enumeration."}]}]}],"pos":[30267,30682],"yaml":true,"extradata":"MT"},{"content":"The result of the asynchronous send operation.","nodes":[{"pos":[0,46],"content":"The result of the asynchronous send operation.","nodes":[{"content":"The result of the asynchronous send operation.","pos":[0,46]}]}],"pos":[30991,31038],"yaml":true},{"content":"<code>result</code> is a null reference (Nothing in Visual Basic).","nodes":[{"pos":[0,66],"content":"<ph id=\"ph1\">&lt;code&gt;result&lt;/code&gt;</ph> is a null reference (Nothing in Visual Basic).","source":"<code>result</code> is a null reference (Nothing in Visual Basic)."}],"pos":[31233,31300],"yaml":true},{"content":"The multicast group has not yet been joined.","nodes":[{"pos":[0,44],"content":"The multicast group has not yet been joined.","nodes":[{"content":"The multicast group has not yet been joined.","pos":[0,44]}]}],"pos":[31410,31455],"yaml":true},{"content":"The <xref href=\"System.Net.Sockets.UdpSingleSourceMulticastClient\"></xref> has been disposed.","nodes":[{"pos":[0,93],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Net.Sockets.UdpSingleSourceMulticastClient\"&gt;&lt;/xref&gt;</ph> has been disposed.","source":"The <xref href=\"System.Net.Sockets.UdpSingleSourceMulticastClient\"></xref> has been disposed."}],"pos":[31561,31655],"yaml":true},{"content":"An error occurred when attempting to access the socket.","nodes":[{"pos":[0,55],"content":"An error occurred when attempting to access the socket.","nodes":[{"content":"An error occurred when attempting to access the socket.","pos":[0,55]}]}],"pos":[31769,31825],"yaml":true},{"content":"Gets or sets the size, in bytes, of the receive buffer of the <xref href=\"System.Net.Sockets.Socket\"></xref> used for multicast receive operations on this <xref href=\"System.Net.Sockets.UdpSingleSourceMulticastClient\"></xref> instance.","nodes":[{"pos":[0,235],"content":"Gets or sets the size, in bytes, of the receive buffer of the <ph id=\"ph1\">&lt;xref href=\"System.Net.Sockets.Socket\"&gt;&lt;/xref&gt;</ph> used for multicast receive operations on this <ph id=\"ph2\">&lt;xref href=\"System.Net.Sockets.UdpSingleSourceMulticastClient\"&gt;&lt;/xref&gt;</ph> instance.","source":"Gets or sets the size, in bytes, of the receive buffer of the <xref href=\"System.Net.Sockets.Socket\"></xref> used for multicast receive operations on this <xref href=\"System.Net.Sockets.UdpSingleSourceMulticastClient\"></xref> instance."}],"pos":[32867,33103],"yaml":true},{"content":"The `ReceiveBufferSize` property gets or sets the size, in bytes, of the receive buffer of the underlying <xref:System.Net.Sockets.Socket> used for multicast receive operations on this <xref:System.Net.Sockets.UdpSingleSourceMulticastClient> instance. Specifically, the `ReceiveBufferSize` property controls the size of the buffer used by the stack when a packet arrives, but the application has not yet called the <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource%2A> method. If this buffer gets filled up and packets keep coming before the application calls the <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource%2A> and <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.EndReceiveFromSource%2A> methods, old packets will get dropped. The application will never be able to receive the old packets, and will instead receive newer packets when it calls the <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource%2A> method.  \n  \n The default size of the receive buffer on Windows is 8,192.","nodes":[{"pos":[0,1010],"content":"The `ReceiveBufferSize` property gets or sets the size, in bytes, of the receive buffer of the underlying <xref:System.Net.Sockets.Socket> used for multicast receive operations on this <xref:System.Net.Sockets.UdpSingleSourceMulticastClient> instance. Specifically, the `ReceiveBufferSize` property controls the size of the buffer used by the stack when a packet arrives, but the application has not yet called the <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource%2A> method. If this buffer gets filled up and packets keep coming before the application calls the <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource%2A> and <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.EndReceiveFromSource%2A> methods, old packets will get dropped. The application will never be able to receive the old packets, and will instead receive newer packets when it calls the <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource%2A> method.","nodes":[{"content":"The <ph id=\"ph1\">`ReceiveBufferSize`</ph> property gets or sets the size, in bytes, of the receive buffer of the underlying <ph id=\"ph2\">&lt;xref:System.Net.Sockets.Socket&gt;</ph> used for multicast receive operations on this <ph id=\"ph3\">&lt;xref:System.Net.Sockets.UdpSingleSourceMulticastClient&gt;</ph> instance.","pos":[0,251],"source":"The `ReceiveBufferSize` property gets or sets the size, in bytes, of the receive buffer of the underlying <xref:System.Net.Sockets.Socket> used for multicast receive operations on this <xref:System.Net.Sockets.UdpSingleSourceMulticastClient> instance."},{"content":"Specifically, the <ph id=\"ph1\">`ReceiveBufferSize`</ph> property controls the size of the buffer used by the stack when a packet arrives, but the application has not yet called the <ph id=\"ph2\">&lt;xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource%2A&gt;</ph> method.","pos":[252,505],"source":" Specifically, the `ReceiveBufferSize` property controls the size of the buffer used by the stack when a packet arrives, but the application has not yet called the <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource%2A> method."},{"content":"If this buffer gets filled up and packets keep coming before the application calls the <ph id=\"ph1\">&lt;xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource%2A&gt;</ph> and <ph id=\"ph2\">&lt;xref:System.Net.Sockets.UdpSingleSourceMulticastClient.EndReceiveFromSource%2A&gt;</ph> methods, old packets will get dropped.","pos":[506,799],"source":" If this buffer gets filled up and packets keep coming before the application calls the <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource%2A> and <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.EndReceiveFromSource%2A> methods, old packets will get dropped."},{"content":"The application will never be able to receive the old packets, and will instead receive newer packets when it calls the <ph id=\"ph1\">&lt;xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource%2A&gt;</ph> method.","pos":[800,1010],"source":" The application will never be able to receive the old packets, and will instead receive newer packets when it calls the <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource%2A> method."}]},{"pos":[1017,1076],"content":"The default size of the receive buffer on Windows is 8,192.","nodes":[{"content":"The default size of the receive buffer on Windows is 8,192.","pos":[0,59]}]}],"pos":[33114,34195],"yaml":true,"extradata":"MT"},{"content":"Returns <xref href=\"System.Int32\"></xref>.  \n  \n The size, in bytes, of the receive buffer.","nodes":[{"pos":[0,42],"content":"Returns <ph id=\"ph1\">&lt;xref href=\"System.Int32\"&gt;&lt;/xref&gt;</ph>.","source":"Returns <xref href=\"System.Int32\"></xref>."},{"pos":[49,91],"content":"The size, in bytes, of the receive buffer.","nodes":[{"content":"The size, in bytes, of the receive buffer.","pos":[0,42]}]}],"pos":[34468,34566],"yaml":true},{"content":"The buffer size specified is less than 0.","nodes":[{"pos":[0,41],"content":"The buffer size specified is less than 0.","nodes":[{"content":"The buffer size specified is less than 0.","pos":[0,41]}]}],"pos":[34775,34817],"yaml":true},{"content":"The multicast group has not yet been joined.","nodes":[{"pos":[0,44],"content":"The multicast group has not yet been joined.","nodes":[{"content":"The multicast group has not yet been joined.","pos":[0,44]}]}],"pos":[34927,34972],"yaml":true},{"content":"The <xref href=\"System.Net.Sockets.UdpSingleSourceMulticastClient\"></xref> has been disposed.","nodes":[{"pos":[0,93],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Net.Sockets.UdpSingleSourceMulticastClient\"&gt;&lt;/xref&gt;</ph> has been disposed.","source":"The <xref href=\"System.Net.Sockets.UdpSingleSourceMulticastClient\"></xref> has been disposed."}],"pos":[35078,35172],"yaml":true},{"content":"Gets or sets the size, in bytes, of the send buffer of the <xref href=\"System.Net.Sockets.Socket\"></xref> used for multicast send operations on this <xref href=\"System.Net.Sockets.UdpSingleSourceMulticastClient\"></xref> instance.","nodes":[{"pos":[0,229],"content":"Gets or sets the size, in bytes, of the send buffer of the <ph id=\"ph1\">&lt;xref href=\"System.Net.Sockets.Socket\"&gt;&lt;/xref&gt;</ph> used for multicast send operations on this <ph id=\"ph2\">&lt;xref href=\"System.Net.Sockets.UdpSingleSourceMulticastClient\"&gt;&lt;/xref&gt;</ph> instance.","source":"Gets or sets the size, in bytes, of the send buffer of the <xref href=\"System.Net.Sockets.Socket\"></xref> used for multicast send operations on this <xref href=\"System.Net.Sockets.UdpSingleSourceMulticastClient\"></xref> instance."}],"pos":[36196,36426],"yaml":true},{"content":"The SendBufferSize property gets or sets the size, in bytes, of the send buffer of the underlying <xref:System.Net.Sockets.Socket> used for multicast send operations on this <xref:System.Net.Sockets.UdpSingleSourceMulticastClient> instance.  \n  \n On Mac OS X, the <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.SendBufferSize%2A> property controls how many bytes can be in the network stack's waiting-to-be-sent buffer before additional calls to the <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginSendToSource%2A> method start failing. Applications on Mac OS X may need to be concerned with this property if they are sending a large number of UDP packets in a short timeframe.  \n  \n On Windows, calls to the <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginSendToSource%2A> method will take longer to call the callback depending on the value of the <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.SendBufferSize%2A> property if the send buffer is full. The <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.SendBufferSize%2A> property only controls whether the user's buffer stays locked in physical memory until the send completes.  \n  \n The default size of the send buffer on Windows is 8,192.","nodes":[{"pos":[0,240],"content":"The SendBufferSize property gets or sets the size, in bytes, of the send buffer of the underlying <xref:System.Net.Sockets.Socket> used for multicast send operations on this <xref:System.Net.Sockets.UdpSingleSourceMulticastClient> instance.","nodes":[{"content":"The SendBufferSize property gets or sets the size, in bytes, of the send buffer of the underlying <ph id=\"ph1\">&lt;xref:System.Net.Sockets.Socket&gt;</ph> used for multicast send operations on this <ph id=\"ph2\">&lt;xref:System.Net.Sockets.UdpSingleSourceMulticastClient&gt;</ph> instance.","pos":[0,240],"source":"The SendBufferSize property gets or sets the size, in bytes, of the send buffer of the underlying <xref:System.Net.Sockets.Socket> used for multicast send operations on this <xref:System.Net.Sockets.UdpSingleSourceMulticastClient> instance."}]},{"pos":[247,699],"content":"On Mac OS X, the <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.SendBufferSize%2A> property controls how many bytes can be in the network stack's waiting-to-be-sent buffer before additional calls to the <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginSendToSource%2A> method start failing. Applications on Mac OS X may need to be concerned with this property if they are sending a large number of UDP packets in a short timeframe.","nodes":[{"content":"On Mac OS X, the <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.SendBufferSize%2A> property controls how many bytes can be in the network stack's waiting-to-be-sent buffer before additional calls to the <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginSendToSource%2A> method start failing. Applications on Mac OS X may need to be concerned with this property if they are sending a large number of UDP packets in a short timeframe.","pos":[0,452],"nodes":[{"content":"On Mac OS X, the <ph id=\"ph1\">&lt;xref:System.Net.Sockets.UdpSingleSourceMulticastClient.SendBufferSize%2A&gt;</ph> property controls how many bytes can be in the network stack's waiting-to-be-sent buffer before additional calls to the <ph id=\"ph2\">&lt;xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginSendToSource%2A&gt;</ph> method start failing.","pos":[0,311],"source":"On Mac OS X, the <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.SendBufferSize%2A> property controls how many bytes can be in the network stack's waiting-to-be-sent buffer before additional calls to the <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginSendToSource%2A> method start failing."},{"content":"Applications on Mac OS X may need to be concerned with this property if they are sending a large number of UDP packets in a short timeframe.","pos":[312,452]}]}]},{"pos":[706,1181],"content":"On Windows, calls to the <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginSendToSource%2A> method will take longer to call the callback depending on the value of the <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.SendBufferSize%2A> property if the send buffer is full. The <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.SendBufferSize%2A> property only controls whether the user's buffer stays locked in physical memory until the send completes.","nodes":[{"content":"On Windows, calls to the <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginSendToSource%2A> method will take longer to call the callback depending on the value of the <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.SendBufferSize%2A> property if the send buffer is full. The <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.SendBufferSize%2A> property only controls whether the user's buffer stays locked in physical memory until the send completes.","pos":[0,475],"nodes":[{"content":"On Windows, calls to the <ph id=\"ph1\">&lt;xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginSendToSource%2A&gt;</ph> method will take longer to call the callback depending on the value of the <ph id=\"ph2\">&lt;xref:System.Net.Sockets.UdpSingleSourceMulticastClient.SendBufferSize%2A&gt;</ph> property if the send buffer is full.","pos":[0,289],"source":"On Windows, calls to the <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginSendToSource%2A> method will take longer to call the callback depending on the value of the <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.SendBufferSize%2A> property if the send buffer is full."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Net.Sockets.UdpSingleSourceMulticastClient.SendBufferSize%2A&gt;</ph> property only controls whether the user's buffer stays locked in physical memory until the send completes.","pos":[290,475],"source":" The <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.SendBufferSize%2A> property only controls whether the user's buffer stays locked in physical memory until the send completes."}]}]},{"pos":[1188,1244],"content":"The default size of the send buffer on Windows is 8,192.","nodes":[{"content":"The default size of the send buffer on Windows is 8,192.","pos":[0,56]}]}],"pos":[36437,37690],"yaml":true,"extradata":"MT"},{"content":"Returns <xref href=\"System.Int32\"></xref>.  \n  \n The size, in bytes, of the send buffer.","nodes":[{"pos":[0,42],"content":"Returns <ph id=\"ph1\">&lt;xref href=\"System.Int32\"&gt;&lt;/xref&gt;</ph>.","source":"Returns <xref href=\"System.Int32\"></xref>."},{"pos":[49,88],"content":"The size, in bytes, of the send buffer.","nodes":[{"content":"The size, in bytes, of the send buffer.","pos":[0,39]}]}],"pos":[37960,38055],"yaml":true},{"content":"The buffer size specified is less than 0.","nodes":[{"pos":[0,41],"content":"The buffer size specified is less than 0.","nodes":[{"content":"The buffer size specified is less than 0.","pos":[0,41]}]}],"pos":[38261,38303],"yaml":true},{"content":"The multicast group has not yet been joined.","nodes":[{"pos":[0,44],"content":"The multicast group has not yet been joined.","nodes":[{"content":"The multicast group has not yet been joined.","pos":[0,44]}]}],"pos":[38413,38458],"yaml":true},{"content":"The <xref href=\"System.Net.Sockets.UdpSingleSourceMulticastClient\"></xref> has been disposed.","nodes":[{"pos":[0,93],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Net.Sockets.UdpSingleSourceMulticastClient\"&gt;&lt;/xref&gt;</ph> has been disposed.","source":"The <xref href=\"System.Net.Sockets.UdpSingleSourceMulticastClient\"></xref> has been disposed."}],"pos":[38564,38658],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Net.Sockets.UdpSingleSourceMulticastClient\n  commentId: T:System.Net.Sockets.UdpSingleSourceMulticastClient\n  id: UdpSingleSourceMulticastClient\n  children:\n  - System.Net.Sockets.UdpSingleSourceMulticastClient.#ctor(System.Net.IPAddress,System.Net.IPAddress,System.Int32)\n  - System.Net.Sockets.UdpSingleSourceMulticastClient.BeginJoinGroup(System.AsyncCallback,System.Object)\n  - System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)\n  - System.Net.Sockets.UdpSingleSourceMulticastClient.BeginSendToSource(System.Byte[],System.Int32,System.Int32,System.Int32,System.AsyncCallback,System.Object)\n  - System.Net.Sockets.UdpSingleSourceMulticastClient.Dispose\n  - System.Net.Sockets.UdpSingleSourceMulticastClient.EndJoinGroup(System.IAsyncResult)\n  - System.Net.Sockets.UdpSingleSourceMulticastClient.EndReceiveFromSource(System.IAsyncResult,System.Int32@)\n  - System.Net.Sockets.UdpSingleSourceMulticastClient.EndSendToSource(System.IAsyncResult)\n  - System.Net.Sockets.UdpSingleSourceMulticastClient.ReceiveBufferSize\n  - System.Net.Sockets.UdpSingleSourceMulticastClient.SendBufferSize\n  langs:\n  - csharp\n  name: UdpSingleSourceMulticastClient\n  nameWithType: UdpSingleSourceMulticastClient\n  fullName: System.Net.Sockets.UdpSingleSourceMulticastClient\n  type: Class\n  assemblies:\n  - System.Net\n  namespace: System.Net.Sockets\n  summary: A client receiver for multicast traffic from a single source, also known as Source Specific Multicast (SSM).\n  remarks: \"The multicast group address and sender source address must be known.  \\n  \\n In addition to receiving multicast data from a specific sender, the <xref:System.Net.Sockets.UdpSingleSourceMulticastClient> client can also send unicast data back to the sender.  \\n  \\n To receive multicast from multiple sources, or when the sources aren't known in advance, use the <xref:System.Net.Sockets.UdpSingleSourceMulticastClient> class instead.\"\n  syntax:\n    content: >-\n      [System.Obsolete(\"This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.\", true)]\n\n      public class UdpSingleSourceMulticastClient : IDisposable\n  inheritance:\n  - System.Object\n  implements:\n  - System.IDisposable\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  attributes:\n  - type: System.ObsoleteAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Sockets/UdpSingleSourceMulticastClient.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.Sockets.UdpSingleSourceMulticastClient.#ctor(System.Net.IPAddress,System.Net.IPAddress,System.Int32)\n  commentId: M:System.Net.Sockets.UdpSingleSourceMulticastClient.#ctor(System.Net.IPAddress,System.Net.IPAddress,System.Int32)\n  id: '#ctor(System.Net.IPAddress,System.Net.IPAddress,System.Int32)'\n  parent: System.Net.Sockets.UdpSingleSourceMulticastClient\n  langs:\n  - csharp\n  name: UdpSingleSourceMulticastClient(IPAddress, IPAddress, Int32)\n  nameWithType: UdpSingleSourceMulticastClient.UdpSingleSourceMulticastClient(IPAddress, IPAddress, Int32)\n  fullName: UdpSingleSourceMulticastClient.UdpSingleSourceMulticastClient(IPAddress, IPAddress, Int32)\n  type: Constructor\n  assemblies:\n  - System.Net\n  namespace: System.Net.Sockets\n  summary: Creates a new <xref href=\"System.Net.Sockets.UdpSingleSourceMulticastClient\"></xref> UDP client that can subscribe to a group address and receive datagrams from a single source.\n  remarks: \"The <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.%23ctor%2A> constructor associates a UDP multicast socket with a group address and port, but does not bind or otherwise use the socket.  \\n  \\n The `groupAddress` parameter may be either an IPv6 or IPv4 multicast address. However, the address family of the `sourceAddress` and `groupAddress` parameters must the same.  \\n  \\n The `localPort` parameter must not specify a port less than 1,024.\"\n  syntax:\n    content: >-\n      [System.Obsolete(\"This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.\", true)]\n\n      public UdpSingleSourceMulticastClient (System.Net.IPAddress sourceAddress, System.Net.IPAddress groupAddress, int localPort);\n    parameters:\n    - id: sourceAddress\n      type: System.Net.IPAddress\n      description: The sender source address for this receiver to subscribe to.\n    - id: groupAddress\n      type: System.Net.IPAddress\n      description: The multicast group address for this receiver to subscribe to.\n    - id: localPort\n      type: System.Int32\n      description: The local port for this receiver to bind to.\n  overload: System.Net.Sockets.UdpSingleSourceMulticastClient.#ctor*\n  exceptions:\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: <code>sourceAddress</code> and <code>groupAddress</code> must be the same address family.\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: \"<code>sourceAddress</code> is a null reference (Nothing in Visual Basic).  \\n  \\n -or-  \\n  \\n <code>groupAddress</code> is a null reference (Nothing in Visual Basic).\"\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"<code>localPort</code> is less than 0  \\n  \\n -or-  \\n  \\n <code>localPort</code> is greater than 65,535.\"\n  - type: System.Net.Sockets.SocketException\n    commentId: T:System.Net.Sockets.SocketException\n    description: <code>localPort</code> is less than 1024\n  attributes:\n  - type: System.ObsoleteAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Sockets/UdpSingleSourceMulticastClient.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.Sockets.UdpSingleSourceMulticastClient.BeginJoinGroup(System.AsyncCallback,System.Object)\n  commentId: M:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginJoinGroup(System.AsyncCallback,System.Object)\n  id: BeginJoinGroup(System.AsyncCallback,System.Object)\n  parent: System.Net.Sockets.UdpSingleSourceMulticastClient\n  langs:\n  - csharp\n  name: BeginJoinGroup(AsyncCallback, Object)\n  nameWithType: UdpSingleSourceMulticastClient.BeginJoinGroup(AsyncCallback, Object)\n  fullName: UdpSingleSourceMulticastClient.BeginJoinGroup(AsyncCallback, Object)\n  type: Method\n  assemblies:\n  - System.Net\n  namespace: System.Net.Sockets\n  summary: Binds the socket and begins a join operation to the multicast group to allow datagrams to be received from a single source address.\n  remarks: \"The <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginJoinGroup%2A> method binds a UDP multicast socket to a local port and joins a multicast group to allow datagrams to be received from a single source address. The multicast group address, single source address, and local port to bind to are specified in the <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.%23ctor%2A> constructor.  \\n  \\n The method specified in the `callback` parameter is invoked when the operation to join the multicast group has completed.  \\n  \\n If required by the runtime, the  <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginJoinGroup%2A> method also performs a policy check to verify that the client is allowed to access the multicast group. If the client is not allowed access, a <xref:System.Net.Sockets.SocketException> is thrown with <xref:System.Net.Sockets.SocketError.AccessDenied>.\"\n  syntax:\n    content: >-\n      [System.Obsolete(\"This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.\", true)]\n\n      public IAsyncResult BeginJoinGroup (AsyncCallback callback, object state);\n    parameters:\n    - id: callback\n      type: System.AsyncCallback\n      description: A callback method to invoke when the operation completes.\n    - id: state\n      type: System.Object\n      description: Optional state information to pass to the <code>callback</code> method for this operation.\n    return:\n      type: System.IAsyncResult\n      description: \"Returns <xref href=\\\"System.IAsyncResult\\\"></xref>.  \\n  \\n An <xref href=\\\"System.IAsyncResult\\\"></xref> that references this operation.\"\n  overload: System.Net.Sockets.UdpSingleSourceMulticastClient.BeginJoinGroup*\n  exceptions:\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The multicast group has already been joined or a join operation is currently in progress.\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The <xref href=\"System.Net.Sockets.UdpSingleSourceMulticastClient\"></xref> has been disposed.\n  - type: System.Net.Sockets.SocketException\n    commentId: T:System.Net.Sockets.SocketException\n    description: An error occurred when attempting to access the socket.\n  attributes:\n  - type: System.ObsoleteAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Sockets/UdpSingleSourceMulticastClient.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)\n  commentId: M:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)\n  id: BeginReceiveFromSource(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)\n  parent: System.Net.Sockets.UdpSingleSourceMulticastClient\n  langs:\n  - csharp\n  name: BeginReceiveFromSource(Byte[], Int32, Int32, AsyncCallback, Object)\n  nameWithType: UdpSingleSourceMulticastClient.BeginReceiveFromSource(Byte[], Int32, Int32, AsyncCallback, Object)\n  fullName: UdpSingleSourceMulticastClient.BeginReceiveFromSource(Byte[], Int32, Int32, AsyncCallback, Object)\n  type: Method\n  assemblies:\n  - System.Net\n  namespace: System.Net.Sockets\n  summary: Begins the operation of receiving a packet from the joined multicast group and invokes the specified callback when a packet has arrived on the group from a specified sender.\n  remarks: \"The <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource%2A> method begins an operation of receiving a UDP packet from the joined multicast group from a single sender. The local port, multicast group, and sender source address are specified in the <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.%23ctor%2A> constructor. The multicast client must also have completed a join to the multicast group.  \\n  \\n The method specified in the `callback` parameter is invoked when a packet has received.  \\n  \\n It is possible to have a socket failure if a receive operation fails synchronously, although this is uncommon with UDP. If a socket failure occurs, a <xref:System.Net.Sockets.SocketException> is thrown. The error received is specified as a member of the <xref:System.Net.Sockets.SocketError> enumeration.\"\n  syntax:\n    content: >-\n      [System.Obsolete(\"This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.\", true)]\n\n      public IAsyncResult BeginReceiveFromSource (byte[] buffer, int offset, int count, AsyncCallback callback, object state);\n    parameters:\n    - id: buffer\n      type: System.Byte[]\n      description: The buffer to store the received data.\n    - id: offset\n      type: System.Int32\n      description: The offset, in bytes, from the beginning of the <code>buffer</code> where the data should be stored.\n    - id: count\n      type: System.Int32\n      description: The maximum number of bytes to receive and store in the <code>buffer</code>.\n    - id: callback\n      type: System.AsyncCallback\n      description: The callback method to invoke when the operation completes.\n    - id: state\n      type: System.Object\n      description: Optional state information to pass to the <code>callback</code> method for this operation.\n    return:\n      type: System.IAsyncResult\n      description: \"Returns <xref href=\\\"System.IAsyncResult\\\"></xref>.  \\n  \\n An <xref href=\\\"System.IAsyncResult\\\"></xref> that references this operation.\"\n  overload: System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>buffer</code> is a null reference (Nothing in Visual Basic).\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"<code>offset</code> is less than 0  \\n  \\n -or-  \\n  \\n <code>offset</code> is greater than the length of the <code>buffer</code>.  \\n  \\n -or-  \\n  \\n <code>count</code> is less than 0  \\n  \\n -or-  \\n  \\n <code>offset</code> plus the count is greater than the length of the <code>buffer</code>.\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The multicast group has not yet been joined.\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The <xref href=\"System.Net.Sockets.UdpSingleSourceMulticastClient\"></xref> has been disposed.\n  - type: System.Net.Sockets.SocketException\n    commentId: T:System.Net.Sockets.SocketException\n    description: An error occurred when attempting to access the socket for receiving.\n  attributes:\n  - type: System.ObsoleteAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Sockets/UdpSingleSourceMulticastClient.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.Sockets.UdpSingleSourceMulticastClient.BeginSendToSource(System.Byte[],System.Int32,System.Int32,System.Int32,System.AsyncCallback,System.Object)\n  commentId: M:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginSendToSource(System.Byte[],System.Int32,System.Int32,System.Int32,System.AsyncCallback,System.Object)\n  id: BeginSendToSource(System.Byte[],System.Int32,System.Int32,System.Int32,System.AsyncCallback,System.Object)\n  parent: System.Net.Sockets.UdpSingleSourceMulticastClient\n  langs:\n  - csharp\n  name: BeginSendToSource(Byte[], Int32, Int32, Int32, AsyncCallback, Object)\n  nameWithType: UdpSingleSourceMulticastClient.BeginSendToSource(Byte[], Int32, Int32, Int32, AsyncCallback, Object)\n  fullName: UdpSingleSourceMulticastClient.BeginSendToSource(Byte[], Int32, Int32, Int32, AsyncCallback, Object)\n  type: Method\n  assemblies:\n  - System.Net\n  namespace: System.Net.Sockets\n  summary: Begins the operation of sending a unicast packet to the source previously specified.\n  remarks: \"The <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginSendToSource%2A> method begins an operation of sending a UDP packet to the source previously specified.  \\n  \\n Some protocols use this information to pass along flow control, quality of service statistics, or recovery messages.  \\n  \\n The method specified in the `callback` parameter is invoked when a packet has been sent.  \\n  \\n The client must have completed a join to the multicast group.  \\n  \\n If the destination port specified in the `remotePort` parameter is less than 1,024, a <xref:System.Net.Sockets.SocketException> is thrown with <xref:System.Net.Sockets.SocketError.AccessDenied>.  \\n  \\n It is possible to have a socket failure if a send operation fails synchronously, although this is uncommon with UDP. If a socket failure occurs, a <xref:System.Net.Sockets.SocketException> is thrown. The error received is specified as a member of the <xref:System.Net.Sockets.SocketError> enumeration.\"\n  syntax:\n    content: >-\n      [System.Obsolete(\"This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.\", true)]\n\n      public IAsyncResult BeginSendToSource (byte[] buffer, int offset, int count, int remotePort, AsyncCallback callback, object state);\n    parameters:\n    - id: buffer\n      type: System.Byte[]\n      description: The buffer that contains the data to send.\n    - id: offset\n      type: System.Int32\n      description: The offset, in bytes, from the beginning of the <code>buffer</code> to read the data to be sent.\n    - id: count\n      type: System.Int32\n      description: The number of bytes to send from the <code>buffer</code>.\n    - id: remotePort\n      type: System.Int32\n      description: The remote port to which the packet is to be sent. The remote address is specified by the <xref href=\"System.Net.Sockets.UdpSingleSourceMulticastClient.#ctor(System.Net.IPAddress,System.Net.IPAddress,System.Int32)\"></xref> constructor.\n    - id: callback\n      type: System.AsyncCallback\n      description: The callback method to invoke when the operation completes.\n    - id: state\n      type: System.Object\n      description: Optional state information to pass to the <code>callback</code> method for this operation.\n    return:\n      type: System.IAsyncResult\n      description: \"Returns <xref href=\\\"System.IAsyncResult\\\"></xref>.  \\n  \\n An <xref href=\\\"System.IAsyncResult\\\"></xref> that references this operation.\"\n  overload: System.Net.Sockets.UdpSingleSourceMulticastClient.BeginSendToSource*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>buffer</code> is a null reference (Nothing in Visual Basic).\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: \"<code>offset</code> is less than 0  \\n  \\n -or-  \\n  \\n <code>offset</code> is greater than the length of the <code>buffer</code>.  \\n  \\n -or-  \\n  \\n <code>count</code> is less than 0  \\n  \\n -or-  \\n  \\n <code>offset</code> plus the count is greater than the length of the <code>buffer</code>.  \\n  \\n -or-  \\n  \\n <code>remotePort</code> is less than 0 or greater than 65,535.\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The multicast group has not yet been joined.\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The <xref href=\"System.Net.Sockets.UdpSingleSourceMulticastClient\"></xref> has been disposed.\n  - type: System.Net.Sockets.SocketException\n    commentId: T:System.Net.Sockets.SocketException\n    description: An error occurred when attempting to access the socket.\n  attributes:\n  - type: System.ObsoleteAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Sockets/UdpSingleSourceMulticastClient.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.Sockets.UdpSingleSourceMulticastClient.Dispose\n  commentId: M:System.Net.Sockets.UdpSingleSourceMulticastClient.Dispose\n  id: Dispose\n  parent: System.Net.Sockets.UdpSingleSourceMulticastClient\n  langs:\n  - csharp\n  name: Dispose()\n  nameWithType: UdpSingleSourceMulticastClient.Dispose()\n  fullName: UdpSingleSourceMulticastClient.Dispose()\n  type: Method\n  assemblies:\n  - System.Net\n  namespace: System.Net.Sockets\n  summary: Leaves the multicast group and releases all resources used by the current instance of the <xref href=\"System.Net.Sockets.UdpSingleSourceMulticastClient\"></xref> class and the underlying the <xref href=\"System.Net.Sockets.Socket\"></xref>.\n  remarks: \"Call <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.Dispose%2A> when you are finished using the <xref:System.Net.Sockets.UdpSingleSourceMulticastClient>. The <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.Dispose%2A> method leaves the <xref:System.Net.Sockets.UdpSingleSourceMulticastClient> in an unusable state. After calling <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.Dispose%2A>, you must release all references to the <xref:System.Net.Sockets.UdpSingleSourceMulticastClient> so the garbage collector can reclaim the memory that the <xref:System.Net.Sockets.UdpSingleSourceMulticastClient> was occupying.  \\n  \\n Always call <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.Dispose%2A> before you release your last reference to the <xref:System.Net.Sockets.UdpSingleSourceMulticastClient>. Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.Net.Sockets.UdpSingleSourceMulticastClient> object's <xref:System.Object.Finalize%2A> method.\"\n  syntax:\n    content: >-\n      [System.Obsolete(\"This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.\", true)]\n\n      public void Dispose ();\n    parameters: []\n  overload: System.Net.Sockets.UdpSingleSourceMulticastClient.Dispose*\n  exceptions: []\n  attributes:\n  - type: System.ObsoleteAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Sockets/UdpSingleSourceMulticastClient.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.Sockets.UdpSingleSourceMulticastClient.EndJoinGroup(System.IAsyncResult)\n  commentId: M:System.Net.Sockets.UdpSingleSourceMulticastClient.EndJoinGroup(System.IAsyncResult)\n  id: EndJoinGroup(System.IAsyncResult)\n  parent: System.Net.Sockets.UdpSingleSourceMulticastClient\n  langs:\n  - csharp\n  name: EndJoinGroup(IAsyncResult)\n  nameWithType: UdpSingleSourceMulticastClient.EndJoinGroup(IAsyncResult)\n  fullName: UdpSingleSourceMulticastClient.EndJoinGroup(IAsyncResult)\n  type: Method\n  assemblies:\n  - System.Net\n  namespace: System.Net.Sockets\n  summary: Completes the asynchronous join group operation to a multicast group.\n  remarks: \"The <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.EndJoinGroup%2A> method completes an asynchronous bind to a socket and join operation to a multicast group.  \\n  \\n If required by the runtime, the  <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.EndJoinGroup%2A> method also performs a policy check to verify that the client is allowed to access the multicast group. If the client is not allowed access, a <xref:System.Net.Sockets.SocketException> is thrown with <xref:System.Net.Sockets.SocketError.AccessDenied>.  \\n  \\n If there is a socket failure while performing the join group operation, a <xref:System.Net.Sockets.SocketException> is thrown. The error received is specified as a member of the <xref:System.Net.Sockets.SocketError> enumeration.\"\n  syntax:\n    content: >-\n      [System.Obsolete(\"This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.\", true)]\n\n      public void EndJoinGroup (IAsyncResult result);\n    parameters:\n    - id: result\n      type: System.IAsyncResult\n      description: The result of the asynchronous join operation.\n  overload: System.Net.Sockets.UdpSingleSourceMulticastClient.EndJoinGroup*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>result</code> is a null reference (Nothing in Visual Basic).\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The <xref href=\"System.Net.Sockets.UdpSingleSourceMulticastClient\"></xref> has been disposed.\n  - type: System.Net.Sockets.SocketException\n    commentId: T:System.Net.Sockets.SocketException\n    description: An error occurred when attempting to access the socket.\n  attributes:\n  - type: System.ObsoleteAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Sockets/UdpSingleSourceMulticastClient.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.Sockets.UdpSingleSourceMulticastClient.EndReceiveFromSource(System.IAsyncResult,System.Int32@)\n  commentId: M:System.Net.Sockets.UdpSingleSourceMulticastClient.EndReceiveFromSource(System.IAsyncResult,System.Int32@)\n  id: EndReceiveFromSource(System.IAsyncResult,System.Int32@)\n  parent: System.Net.Sockets.UdpSingleSourceMulticastClient\n  langs:\n  - csharp\n  name: EndReceiveFromSource(IAsyncResult, Int32)\n  nameWithType: UdpSingleSourceMulticastClient.EndReceiveFromSource(IAsyncResult, Int32)\n  fullName: UdpSingleSourceMulticastClient.EndReceiveFromSource(IAsyncResult, Int32)\n  type: Method\n  assemblies:\n  - System.Net\n  namespace: System.Net.Sockets\n  summary: Completes the asynchronous operation of receiving a packet from the joined multicast group and provides the information received.\n  remarks: \"The <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.EndReceiveFromSource%2A> method completes an asynchronous operation to receive a packet from a single source in a multicast group.  \\n  \\n If there is a socket failure while performing the receive operation, a <xref:System.Net.Sockets.SocketException> is thrown. The error received is specified as a member of the <xref:System.Net.Sockets.SocketError> enumeration.\"\n  syntax:\n    content: >-\n      [System.Obsolete(\"This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.\", true)]\n\n      public int EndReceiveFromSource (IAsyncResult result, out int sourcePort);\n    parameters:\n    - id: result\n      type: System.IAsyncResult\n      description: The result of the asynchronous receive operation.\n    - id: sourcePort\n      type: System.Int32\n      description: The source endpoint where the packet was received from.\n    return:\n      type: System.Int32\n      description: \"Returns <xref href=\\\"System.Int32\\\"></xref>.  \\n  \\n The length, in bytes, of the message stored in the <code>buffer</code> parameter passed to the <xref href=\\\"System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)\\\"></xref> method.\"\n  overload: System.Net.Sockets.UdpSingleSourceMulticastClient.EndReceiveFromSource*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>result</code> is a null reference (Nothing in Visual Basic).\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The multicast group has not yet been joined.\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The <xref href=\"System.Net.Sockets.UdpSingleSourceMulticastClient\"></xref> has been disposed.\n  - type: System.Net.Sockets.SocketException\n    commentId: T:System.Net.Sockets.SocketException\n    description: An error occurred when attempting to access the socket.\n  attributes:\n  - type: System.ObsoleteAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Sockets/UdpSingleSourceMulticastClient.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.Sockets.UdpSingleSourceMulticastClient.EndSendToSource(System.IAsyncResult)\n  commentId: M:System.Net.Sockets.UdpSingleSourceMulticastClient.EndSendToSource(System.IAsyncResult)\n  id: EndSendToSource(System.IAsyncResult)\n  parent: System.Net.Sockets.UdpSingleSourceMulticastClient\n  langs:\n  - csharp\n  name: EndSendToSource(IAsyncResult)\n  nameWithType: UdpSingleSourceMulticastClient.EndSendToSource(IAsyncResult)\n  fullName: UdpSingleSourceMulticastClient.EndSendToSource(IAsyncResult)\n  type: Method\n  assemblies:\n  - System.Net\n  namespace: System.Net.Sockets\n  summary: Completes the operation of sending a unicast packet to a single source.\n  remarks: \"The <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.EndSendToSource%2A> method completes an asynchronous operation to send a packet to single source previously specified.  \\n  \\n If there is a socket failure while performing the receive operation, a <xref:System.Net.Sockets.SocketException> is thrown. The error received is specified as a member of the <xref:System.Net.Sockets.SocketError> enumeration.\"\n  syntax:\n    content: >-\n      [System.Obsolete(\"This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.\", true)]\n\n      public void EndSendToSource (IAsyncResult result);\n    parameters:\n    - id: result\n      type: System.IAsyncResult\n      description: The result of the asynchronous send operation.\n  overload: System.Net.Sockets.UdpSingleSourceMulticastClient.EndSendToSource*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>result</code> is a null reference (Nothing in Visual Basic).\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The multicast group has not yet been joined.\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The <xref href=\"System.Net.Sockets.UdpSingleSourceMulticastClient\"></xref> has been disposed.\n  - type: System.Net.Sockets.SocketException\n    commentId: T:System.Net.Sockets.SocketException\n    description: An error occurred when attempting to access the socket.\n  attributes:\n  - type: System.ObsoleteAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Sockets/UdpSingleSourceMulticastClient.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.Sockets.UdpSingleSourceMulticastClient.ReceiveBufferSize\n  commentId: P:System.Net.Sockets.UdpSingleSourceMulticastClient.ReceiveBufferSize\n  id: ReceiveBufferSize\n  parent: System.Net.Sockets.UdpSingleSourceMulticastClient\n  langs:\n  - csharp\n  name: ReceiveBufferSize\n  nameWithType: UdpSingleSourceMulticastClient.ReceiveBufferSize\n  fullName: UdpSingleSourceMulticastClient.ReceiveBufferSize\n  type: Property\n  assemblies:\n  - System.Net\n  namespace: System.Net.Sockets\n  summary: Gets or sets the size, in bytes, of the receive buffer of the <xref href=\"System.Net.Sockets.Socket\"></xref> used for multicast receive operations on this <xref href=\"System.Net.Sockets.UdpSingleSourceMulticastClient\"></xref> instance.\n  remarks: \"The `ReceiveBufferSize` property gets or sets the size, in bytes, of the receive buffer of the underlying <xref:System.Net.Sockets.Socket> used for multicast receive operations on this <xref:System.Net.Sockets.UdpSingleSourceMulticastClient> instance. Specifically, the `ReceiveBufferSize` property controls the size of the buffer used by the stack when a packet arrives, but the application has not yet called the <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource%2A> method. If this buffer gets filled up and packets keep coming before the application calls the <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource%2A> and <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.EndReceiveFromSource%2A> methods, old packets will get dropped. The application will never be able to receive the old packets, and will instead receive newer packets when it calls the <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource%2A> method.  \\n  \\n The default size of the receive buffer on Windows is 8,192.\"\n  syntax:\n    content: >-\n      [System.Obsolete(\"This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.\", true)]\n\n      public int ReceiveBufferSize { get; set; }\n    return:\n      type: System.Int32\n      description: \"Returns <xref href=\\\"System.Int32\\\"></xref>.  \\n  \\n The size, in bytes, of the receive buffer.\"\n  overload: System.Net.Sockets.UdpSingleSourceMulticastClient.ReceiveBufferSize*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: The buffer size specified is less than 0.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The multicast group has not yet been joined.\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The <xref href=\"System.Net.Sockets.UdpSingleSourceMulticastClient\"></xref> has been disposed.\n  attributes:\n  - type: System.ObsoleteAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Sockets/UdpSingleSourceMulticastClient.xml\n  ms.author: bobdel\n  manager: markl\n- uid: System.Net.Sockets.UdpSingleSourceMulticastClient.SendBufferSize\n  commentId: P:System.Net.Sockets.UdpSingleSourceMulticastClient.SendBufferSize\n  id: SendBufferSize\n  parent: System.Net.Sockets.UdpSingleSourceMulticastClient\n  langs:\n  - csharp\n  name: SendBufferSize\n  nameWithType: UdpSingleSourceMulticastClient.SendBufferSize\n  fullName: UdpSingleSourceMulticastClient.SendBufferSize\n  type: Property\n  assemblies:\n  - System.Net\n  namespace: System.Net.Sockets\n  summary: Gets or sets the size, in bytes, of the send buffer of the <xref href=\"System.Net.Sockets.Socket\"></xref> used for multicast send operations on this <xref href=\"System.Net.Sockets.UdpSingleSourceMulticastClient\"></xref> instance.\n  remarks: \"The SendBufferSize property gets or sets the size, in bytes, of the send buffer of the underlying <xref:System.Net.Sockets.Socket> used for multicast send operations on this <xref:System.Net.Sockets.UdpSingleSourceMulticastClient> instance.  \\n  \\n On Mac OS X, the <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.SendBufferSize%2A> property controls how many bytes can be in the network stack's waiting-to-be-sent buffer before additional calls to the <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginSendToSource%2A> method start failing. Applications on Mac OS X may need to be concerned with this property if they are sending a large number of UDP packets in a short timeframe.  \\n  \\n On Windows, calls to the <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginSendToSource%2A> method will take longer to call the callback depending on the value of the <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.SendBufferSize%2A> property if the send buffer is full. The <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.SendBufferSize%2A> property only controls whether the user's buffer stays locked in physical memory until the send completes.  \\n  \\n The default size of the send buffer on Windows is 8,192.\"\n  syntax:\n    content: >-\n      [System.Obsolete(\"This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.\", true)]\n\n      public int SendBufferSize { get; set; }\n    return:\n      type: System.Int32\n      description: \"Returns <xref href=\\\"System.Int32\\\"></xref>.  \\n  \\n The size, in bytes, of the send buffer.\"\n  overload: System.Net.Sockets.UdpSingleSourceMulticastClient.SendBufferSize*\n  exceptions:\n  - type: System.ArgumentOutOfRangeException\n    commentId: T:System.ArgumentOutOfRangeException\n    description: The buffer size specified is less than 0.\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The multicast group has not yet been joined.\n  - type: System.ObjectDisposedException\n    commentId: T:System.ObjectDisposedException\n    description: The <xref href=\"System.Net.Sockets.UdpSingleSourceMulticastClient\"></xref> has been disposed.\n  attributes:\n  - type: System.ObsoleteAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Sockets/UdpSingleSourceMulticastClient.xml\n  ms.author: bobdel\n  manager: markl\nreferences:\n- uid: System.Object\n  parent: System\n  isExternal: false\n  name: Object\n  nameWithType: Object\n  fullName: System.Object\n- uid: System.ArgumentException\n  parent: System\n  isExternal: false\n  name: ArgumentException\n  nameWithType: ArgumentException\n  fullName: System.ArgumentException\n- uid: System.ArgumentNullException\n  parent: System\n  isExternal: false\n  name: ArgumentNullException\n  nameWithType: ArgumentNullException\n  fullName: System.ArgumentNullException\n- uid: System.ArgumentOutOfRangeException\n  parent: System\n  isExternal: false\n  name: ArgumentOutOfRangeException\n  nameWithType: ArgumentOutOfRangeException\n  fullName: System.ArgumentOutOfRangeException\n- uid: System.Net.Sockets.SocketException\n  parent: System.Net.Sockets\n  isExternal: false\n  name: SocketException\n  nameWithType: SocketException\n  fullName: System.Net.Sockets.SocketException\n- uid: System.InvalidOperationException\n  parent: System\n  isExternal: false\n  name: InvalidOperationException\n  nameWithType: InvalidOperationException\n  fullName: System.InvalidOperationException\n- uid: System.ObjectDisposedException\n  parent: System\n  isExternal: false\n  name: ObjectDisposedException\n  nameWithType: ObjectDisposedException\n  fullName: System.ObjectDisposedException\n- uid: System.Net.Sockets.UdpSingleSourceMulticastClient.#ctor(System.Net.IPAddress,System.Net.IPAddress,System.Int32)\n  parent: System.Net.Sockets.UdpSingleSourceMulticastClient\n  isExternal: false\n  name: UdpSingleSourceMulticastClient(IPAddress, IPAddress, Int32)\n  nameWithType: UdpSingleSourceMulticastClient.UdpSingleSourceMulticastClient(IPAddress, IPAddress, Int32)\n  fullName: UdpSingleSourceMulticastClient.UdpSingleSourceMulticastClient(IPAddress, IPAddress, Int32)\n- uid: System.Net.IPAddress\n  parent: System.Net\n  isExternal: false\n  name: IPAddress\n  nameWithType: IPAddress\n  fullName: System.Net.IPAddress\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.Net.Sockets.UdpSingleSourceMulticastClient.BeginJoinGroup(System.AsyncCallback,System.Object)\n  parent: System.Net.Sockets.UdpSingleSourceMulticastClient\n  isExternal: false\n  name: BeginJoinGroup(AsyncCallback, Object)\n  nameWithType: UdpSingleSourceMulticastClient.BeginJoinGroup(AsyncCallback, Object)\n  fullName: UdpSingleSourceMulticastClient.BeginJoinGroup(AsyncCallback, Object)\n- uid: System.IAsyncResult\n  parent: System\n  isExternal: false\n  name: IAsyncResult\n  nameWithType: IAsyncResult\n  fullName: System.IAsyncResult\n- uid: System.AsyncCallback\n  parent: System\n  isExternal: false\n  name: AsyncCallback\n  nameWithType: AsyncCallback\n  fullName: System.AsyncCallback\n- uid: System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)\n  parent: System.Net.Sockets.UdpSingleSourceMulticastClient\n  isExternal: false\n  name: BeginReceiveFromSource(Byte[], Int32, Int32, AsyncCallback, Object)\n  nameWithType: UdpSingleSourceMulticastClient.BeginReceiveFromSource(Byte[], Int32, Int32, AsyncCallback, Object)\n  fullName: UdpSingleSourceMulticastClient.BeginReceiveFromSource(Byte[], Int32, Int32, AsyncCallback, Object)\n- uid: System.Byte\n  name: Byte\n  nameWithType: Byte\n  fullName: System.Byte\n- uid: System.Byte[]\n  parent: System\n  isExternal: false\n  name: Byte[]\n  nameWithType: Byte[]\n  fullName: System.Byte[]\n  spec.csharp:\n  - uid: System.Byte\n    name: Byte\n    nameWithType: Byte\n    fullName: System.Byte\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Net.Sockets.UdpSingleSourceMulticastClient.BeginSendToSource(System.Byte[],System.Int32,System.Int32,System.Int32,System.AsyncCallback,System.Object)\n  parent: System.Net.Sockets.UdpSingleSourceMulticastClient\n  isExternal: false\n  name: BeginSendToSource(Byte[], Int32, Int32, Int32, AsyncCallback, Object)\n  nameWithType: UdpSingleSourceMulticastClient.BeginSendToSource(Byte[], Int32, Int32, Int32, AsyncCallback, Object)\n  fullName: UdpSingleSourceMulticastClient.BeginSendToSource(Byte[], Int32, Int32, Int32, AsyncCallback, Object)\n- uid: System.Net.Sockets.UdpSingleSourceMulticastClient.Dispose\n  parent: System.Net.Sockets.UdpSingleSourceMulticastClient\n  isExternal: false\n  name: Dispose()\n  nameWithType: UdpSingleSourceMulticastClient.Dispose()\n  fullName: UdpSingleSourceMulticastClient.Dispose()\n- uid: System.Net.Sockets.UdpSingleSourceMulticastClient.EndJoinGroup(System.IAsyncResult)\n  parent: System.Net.Sockets.UdpSingleSourceMulticastClient\n  isExternal: false\n  name: EndJoinGroup(IAsyncResult)\n  nameWithType: UdpSingleSourceMulticastClient.EndJoinGroup(IAsyncResult)\n  fullName: UdpSingleSourceMulticastClient.EndJoinGroup(IAsyncResult)\n- uid: System.Net.Sockets.UdpSingleSourceMulticastClient.EndReceiveFromSource(System.IAsyncResult,System.Int32@)\n  parent: System.Net.Sockets.UdpSingleSourceMulticastClient\n  isExternal: false\n  name: EndReceiveFromSource(IAsyncResult, Int32)\n  nameWithType: UdpSingleSourceMulticastClient.EndReceiveFromSource(IAsyncResult, Int32)\n  fullName: UdpSingleSourceMulticastClient.EndReceiveFromSource(IAsyncResult, Int32)\n- uid: System.Net.Sockets.UdpSingleSourceMulticastClient.EndSendToSource(System.IAsyncResult)\n  parent: System.Net.Sockets.UdpSingleSourceMulticastClient\n  isExternal: false\n  name: EndSendToSource(IAsyncResult)\n  nameWithType: UdpSingleSourceMulticastClient.EndSendToSource(IAsyncResult)\n  fullName: UdpSingleSourceMulticastClient.EndSendToSource(IAsyncResult)\n- uid: System.Net.Sockets.UdpSingleSourceMulticastClient.ReceiveBufferSize\n  parent: System.Net.Sockets.UdpSingleSourceMulticastClient\n  isExternal: false\n  name: ReceiveBufferSize\n  nameWithType: UdpSingleSourceMulticastClient.ReceiveBufferSize\n  fullName: UdpSingleSourceMulticastClient.ReceiveBufferSize\n- uid: System.Net.Sockets.UdpSingleSourceMulticastClient.SendBufferSize\n  parent: System.Net.Sockets.UdpSingleSourceMulticastClient\n  isExternal: false\n  name: SendBufferSize\n  nameWithType: UdpSingleSourceMulticastClient.SendBufferSize\n  fullName: UdpSingleSourceMulticastClient.SendBufferSize\n- uid: System.Net.Sockets.UdpSingleSourceMulticastClient.#ctor*\n  parent: System.Net.Sockets.UdpSingleSourceMulticastClient\n  isExternal: false\n  name: UdpSingleSourceMulticastClient\n  nameWithType: UdpSingleSourceMulticastClient.UdpSingleSourceMulticastClient\n  fullName: UdpSingleSourceMulticastClient.UdpSingleSourceMulticastClient\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Sockets/UdpSingleSourceMulticastClient.xml\n- uid: System.Net.Sockets.UdpSingleSourceMulticastClient.BeginJoinGroup*\n  parent: System.Net.Sockets.UdpSingleSourceMulticastClient\n  isExternal: false\n  name: BeginJoinGroup\n  nameWithType: UdpSingleSourceMulticastClient.BeginJoinGroup\n  fullName: UdpSingleSourceMulticastClient.BeginJoinGroup\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Sockets/UdpSingleSourceMulticastClient.xml\n- uid: System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource*\n  parent: System.Net.Sockets.UdpSingleSourceMulticastClient\n  isExternal: false\n  name: BeginReceiveFromSource\n  nameWithType: UdpSingleSourceMulticastClient.BeginReceiveFromSource\n  fullName: UdpSingleSourceMulticastClient.BeginReceiveFromSource\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Sockets/UdpSingleSourceMulticastClient.xml\n- uid: System.Net.Sockets.UdpSingleSourceMulticastClient.BeginSendToSource*\n  parent: System.Net.Sockets.UdpSingleSourceMulticastClient\n  isExternal: false\n  name: BeginSendToSource\n  nameWithType: UdpSingleSourceMulticastClient.BeginSendToSource\n  fullName: UdpSingleSourceMulticastClient.BeginSendToSource\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Sockets/UdpSingleSourceMulticastClient.xml\n- uid: System.Net.Sockets.UdpSingleSourceMulticastClient.Dispose*\n  parent: System.Net.Sockets.UdpSingleSourceMulticastClient\n  isExternal: false\n  name: Dispose\n  nameWithType: UdpSingleSourceMulticastClient.Dispose\n  fullName: UdpSingleSourceMulticastClient.Dispose\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Sockets/UdpSingleSourceMulticastClient.xml\n- uid: System.Net.Sockets.UdpSingleSourceMulticastClient.EndJoinGroup*\n  parent: System.Net.Sockets.UdpSingleSourceMulticastClient\n  isExternal: false\n  name: EndJoinGroup\n  nameWithType: UdpSingleSourceMulticastClient.EndJoinGroup\n  fullName: UdpSingleSourceMulticastClient.EndJoinGroup\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Sockets/UdpSingleSourceMulticastClient.xml\n- uid: System.Net.Sockets.UdpSingleSourceMulticastClient.EndReceiveFromSource*\n  parent: System.Net.Sockets.UdpSingleSourceMulticastClient\n  isExternal: false\n  name: EndReceiveFromSource\n  nameWithType: UdpSingleSourceMulticastClient.EndReceiveFromSource\n  fullName: UdpSingleSourceMulticastClient.EndReceiveFromSource\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Sockets/UdpSingleSourceMulticastClient.xml\n- uid: System.Net.Sockets.UdpSingleSourceMulticastClient.EndSendToSource*\n  parent: System.Net.Sockets.UdpSingleSourceMulticastClient\n  isExternal: false\n  name: EndSendToSource\n  nameWithType: UdpSingleSourceMulticastClient.EndSendToSource\n  fullName: UdpSingleSourceMulticastClient.EndSendToSource\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Sockets/UdpSingleSourceMulticastClient.xml\n- uid: System.Net.Sockets.UdpSingleSourceMulticastClient.ReceiveBufferSize*\n  parent: System.Net.Sockets.UdpSingleSourceMulticastClient\n  isExternal: false\n  name: ReceiveBufferSize\n  nameWithType: UdpSingleSourceMulticastClient.ReceiveBufferSize\n  fullName: UdpSingleSourceMulticastClient.ReceiveBufferSize\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Sockets/UdpSingleSourceMulticastClient.xml\n- uid: System.Net.Sockets.UdpSingleSourceMulticastClient.SendBufferSize*\n  parent: System.Net.Sockets.UdpSingleSourceMulticastClient\n  isExternal: false\n  name: SendBufferSize\n  nameWithType: UdpSingleSourceMulticastClient.SendBufferSize\n  fullName: UdpSingleSourceMulticastClient.SendBufferSize\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Net.Sockets/UdpSingleSourceMulticastClient.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.IDisposable\n  parent: System\n  isExternal: false\n  name: IDisposable\n  nameWithType: IDisposable\n  fullName: System.IDisposable\n"}