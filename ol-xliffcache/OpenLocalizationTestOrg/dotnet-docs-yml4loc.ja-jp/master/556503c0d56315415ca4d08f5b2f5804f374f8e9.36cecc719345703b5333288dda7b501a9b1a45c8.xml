{"nodes":[{"content":"Contains mutually exclusive <xref href=\"System.Windows.VisualState\"></xref> objects and <xref href=\"System.Windows.VisualTransition\"></xref> objects that are used to move from one state to another.","nodes":[{"pos":[0,197],"content":"Contains mutually exclusive <ph id=\"ph1\">&lt;xref href=\"System.Windows.VisualState\"&gt;&lt;/xref&gt;</ph> objects and <ph id=\"ph2\">&lt;xref href=\"System.Windows.VisualTransition\"&gt;&lt;/xref&gt;</ph> objects that are used to move from one state to another.","source":"Contains mutually exclusive <xref href=\"System.Windows.VisualState\"></xref> objects and <xref href=\"System.Windows.VisualTransition\"></xref> objects that are used to move from one state to another."}],"pos":[708,906],"yaml":true},{"content":"Each <xref:System.Windows.VisualStateGroup> contains a collection of <xref:System.Windows.VisualState> objects. A <xref:System.Windows.VisualState> contains a collection of <xref:System.Windows.Media.Animation.Storyboard> objects that specify how the control's appearance changes when the control is in a certain state. For example, a <xref:System.Windows.Controls.Button> might have a slightly different appearance when it is pressed than when it is not pressed. Two states that the <xref:System.Windows.Controls.Button> defines correspond to when it is pressed (`\"Pressed\"`) and when it is not (`\"Normal\"`).  \n  \n You add <xref:System.Windows.VisualState> to a control by setting the `VisualStateManager.VisualStateGroups` attached property on the control. You put states that are mutually exclusive to each other in the same <xref:System.Windows.VisualStateGroup>. For example, the <xref:System.Windows.Controls.CheckBox> has two <xref:System.Windows.VisualStateGroup> objects. One contains the states, `Normal`, `MouseOver`, `Pressed`, and `Disabled`. The other contains the states, `Checked`, `UnChecked`, and `Indeterminate`. The <xref:System.Windows.Controls.CheckBox> can be in states `MouseOver` and `UnChecked` at the same time, but it cannot be in the `MouseOver` and `Pressed` states at the same time.  \n  \n Although you can add <xref:System.Windows.VisualState> objects to any element, they are a particularly useful way to enable others to redefine the visual behavior of a <xref:System.Windows.Controls.Control>. If you create a custom control that uses a <xref:System.Windows.Controls.ControlTemplate>, you can specify which states that control can be in by adding a <xref:System.Windows.TemplateVisualStateAttribute> on its class definition. Then anyone who creates a new <xref:System.Windows.Controls.ControlTemplate> for your control can add <xref:System.Windows.VisualState> objects to the template. The <xref:System.Windows.TemplateVisualStateAttribute> enables designer tools, such as Expression Blend, to expose the control's states. States with the same <xref:System.Windows.TemplateVisualStateAttribute.GroupName%2A?displayProperty=fullName> belong in the same <xref:System.Windows.VisualStateGroup>.  \n  \n For more information about how to use <xref:System.Windows.VisualStateGroup> objects in a <xref:System.Windows.Controls.ControlTemplate>, see [Customizing the Appearance of an Existing Control by Creating a ControlTemplate](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md). For more information about how to create controls that use the <xref:System.Windows.VisualStateManager>, see [Creating a Control That Has a Customizable Appearance](~/docs/framework/wpf/controls/creating-a-control-that-has-a-customizable-appearance.md).  \n  \n The <xref:System.Windows.VisualStateGroup.Transitions%2A> property contains <xref:System.Windows.VisualTransition> objects that are applied when the control transition between states that are defined in the <xref:System.Windows.VisualStateGroup>.","nodes":[{"pos":[0,609],"content":"Each <xref:System.Windows.VisualStateGroup> contains a collection of <xref:System.Windows.VisualState> objects. A <xref:System.Windows.VisualState> contains a collection of <xref:System.Windows.Media.Animation.Storyboard> objects that specify how the control's appearance changes when the control is in a certain state. For example, a <xref:System.Windows.Controls.Button> might have a slightly different appearance when it is pressed than when it is not pressed. Two states that the <xref:System.Windows.Controls.Button> defines correspond to when it is pressed (`\"Pressed\"`) and when it is not (`\"Normal\"`).","nodes":[{"content":"Each <ph id=\"ph1\">&lt;xref:System.Windows.VisualStateGroup&gt;</ph> contains a collection of <ph id=\"ph2\">&lt;xref:System.Windows.VisualState&gt;</ph> objects.","pos":[0,111],"source":"Each <xref:System.Windows.VisualStateGroup> contains a collection of <xref:System.Windows.VisualState> objects."},{"content":"A <ph id=\"ph1\">&lt;xref:System.Windows.VisualState&gt;</ph> contains a collection of <ph id=\"ph2\">&lt;xref:System.Windows.Media.Animation.Storyboard&gt;</ph> objects that specify how the control's appearance changes when the control is in a certain state.","pos":[112,319],"source":" A <xref:System.Windows.VisualState> contains a collection of <xref:System.Windows.Media.Animation.Storyboard> objects that specify how the control's appearance changes when the control is in a certain state."},{"content":"For example, a <ph id=\"ph1\">&lt;xref:System.Windows.Controls.Button&gt;</ph> might have a slightly different appearance when it is pressed than when it is not pressed.","pos":[320,463],"source":" For example, a <xref:System.Windows.Controls.Button> might have a slightly different appearance when it is pressed than when it is not pressed."},{"content":"Two states that the <ph id=\"ph1\">&lt;xref:System.Windows.Controls.Button&gt;</ph> defines correspond to when it is pressed (<ph id=\"ph2\">`\"Pressed\"`</ph>) and when it is not (<ph id=\"ph3\">`\"Normal\"`</ph>).","pos":[464,609],"source":" Two states that the <xref:System.Windows.Controls.Button> defines correspond to when it is pressed (`\"Pressed\"`) and when it is not (`\"Normal\"`)."}]},{"pos":[616,1313],"content":"You add <xref:System.Windows.VisualState> to a control by setting the `VisualStateManager.VisualStateGroups` attached property on the control. You put states that are mutually exclusive to each other in the same <xref:System.Windows.VisualStateGroup>. For example, the <xref:System.Windows.Controls.CheckBox> has two <xref:System.Windows.VisualStateGroup> objects. One contains the states, `Normal`, `MouseOver`, `Pressed`, and `Disabled`. The other contains the states, `Checked`, `UnChecked`, and `Indeterminate`. The <xref:System.Windows.Controls.CheckBox> can be in states `MouseOver` and `UnChecked` at the same time, but it cannot be in the `MouseOver` and `Pressed` states at the same time.","nodes":[{"content":"You add <ph id=\"ph1\">&lt;xref:System.Windows.VisualState&gt;</ph> to a control by setting the <ph id=\"ph2\">`VisualStateManager.VisualStateGroups`</ph> attached property on the control.","pos":[0,142],"source":"You add <xref:System.Windows.VisualState> to a control by setting the `VisualStateManager.VisualStateGroups` attached property on the control."},{"content":"You put states that are mutually exclusive to each other in the same <ph id=\"ph1\">&lt;xref:System.Windows.VisualStateGroup&gt;</ph>.","pos":[143,251],"source":" You put states that are mutually exclusive to each other in the same <xref:System.Windows.VisualStateGroup>."},{"content":"For example, the <ph id=\"ph1\">&lt;xref:System.Windows.Controls.CheckBox&gt;</ph> has two <ph id=\"ph2\">&lt;xref:System.Windows.VisualStateGroup&gt;</ph> objects.","pos":[252,364],"source":" For example, the <xref:System.Windows.Controls.CheckBox> has two <xref:System.Windows.VisualStateGroup> objects."},{"content":"One contains the states, <ph id=\"ph1\">`Normal`</ph>, <ph id=\"ph2\">`MouseOver`</ph>, <ph id=\"ph3\">`Pressed`</ph>, and <ph id=\"ph4\">`Disabled`</ph>.","pos":[365,439],"source":" One contains the states, `Normal`, `MouseOver`, `Pressed`, and `Disabled`."},{"content":"The other contains the states, <ph id=\"ph1\">`Checked`</ph>, <ph id=\"ph2\">`UnChecked`</ph>, and <ph id=\"ph3\">`Indeterminate`</ph>.","pos":[440,515],"source":" The other contains the states, `Checked`, `UnChecked`, and `Indeterminate`."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Controls.CheckBox&gt;</ph> can be in states <ph id=\"ph2\">`MouseOver`</ph> and <ph id=\"ph3\">`UnChecked`</ph> at the same time, but it cannot be in the <ph id=\"ph4\">`MouseOver`</ph> and <ph id=\"ph5\">`Pressed`</ph> states at the same time.","pos":[516,697],"source":" The <xref:System.Windows.Controls.CheckBox> can be in states `MouseOver` and `UnChecked` at the same time, but it cannot be in the `MouseOver` and `Pressed` states at the same time."}]},{"pos":[1320,2225],"content":"Although you can add <xref:System.Windows.VisualState> objects to any element, they are a particularly useful way to enable others to redefine the visual behavior of a <xref:System.Windows.Controls.Control>. If you create a custom control that uses a <xref:System.Windows.Controls.ControlTemplate>, you can specify which states that control can be in by adding a <xref:System.Windows.TemplateVisualStateAttribute> on its class definition. Then anyone who creates a new <xref:System.Windows.Controls.ControlTemplate> for your control can add <xref:System.Windows.VisualState> objects to the template. The <xref:System.Windows.TemplateVisualStateAttribute> enables designer tools, such as Expression Blend, to expose the control's states. States with the same <xref:System.Windows.TemplateVisualStateAttribute.GroupName%2A?displayProperty=fullName> belong in the same <xref:System.Windows.VisualStateGroup>.","nodes":[{"content":"Although you can add <xref:System.Windows.VisualState> objects to any element, they are a particularly useful way to enable others to redefine the visual behavior of a <xref:System.Windows.Controls.Control>. If you create a custom control that uses a <xref:System.Windows.Controls.ControlTemplate>, you can specify which states that control can be in by adding a <xref:System.Windows.TemplateVisualStateAttribute> on its class definition. Then anyone who creates a new <xref:System.Windows.Controls.ControlTemplate> for your control can add <xref:System.Windows.VisualState> objects to the template. The <xref:System.Windows.TemplateVisualStateAttribute> enables designer tools, such as Expression Blend, to expose the control's states. States with the same <xref:System.Windows.TemplateVisualStateAttribute.GroupName%2A?displayProperty=fullName> belong in the same <xref:System.Windows.VisualStateGroup>.","pos":[0,905],"nodes":[{"content":"Although you can add <ph id=\"ph1\">&lt;xref:System.Windows.VisualState&gt;</ph> objects to any element, they are a particularly useful way to enable others to redefine the visual behavior of a <ph id=\"ph2\">&lt;xref:System.Windows.Controls.Control&gt;</ph>.","pos":[0,207],"source":"Although you can add <xref:System.Windows.VisualState> objects to any element, they are a particularly useful way to enable others to redefine the visual behavior of a <xref:System.Windows.Controls.Control>."},{"content":"If you create a custom control that uses a <ph id=\"ph1\">&lt;xref:System.Windows.Controls.ControlTemplate&gt;</ph>, you can specify which states that control can be in by adding a <ph id=\"ph2\">&lt;xref:System.Windows.TemplateVisualStateAttribute&gt;</ph> on its class definition.","pos":[208,438],"source":" If you create a custom control that uses a <xref:System.Windows.Controls.ControlTemplate>, you can specify which states that control can be in by adding a <xref:System.Windows.TemplateVisualStateAttribute> on its class definition."},{"content":"Then anyone who creates a new <ph id=\"ph1\">&lt;xref:System.Windows.Controls.ControlTemplate&gt;</ph> for your control can add <ph id=\"ph2\">&lt;xref:System.Windows.VisualState&gt;</ph> objects to the template.","pos":[439,599],"source":" Then anyone who creates a new <xref:System.Windows.Controls.ControlTemplate> for your control can add <xref:System.Windows.VisualState> objects to the template."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.TemplateVisualStateAttribute&gt;</ph> enables designer tools, such as Expression Blend, to expose the control's states.","pos":[600,736],"source":" The <xref:System.Windows.TemplateVisualStateAttribute> enables designer tools, such as Expression Blend, to expose the control's states."},{"content":"States with the same <ph id=\"ph1\">&lt;xref:System.Windows.TemplateVisualStateAttribute.GroupName%2A?displayProperty=fullName&gt;</ph> belong in the same <ph id=\"ph2\">&lt;xref:System.Windows.VisualStateGroup&gt;</ph>.","pos":[737,905],"source":" States with the same <xref:System.Windows.TemplateVisualStateAttribute.GroupName%2A?displayProperty=fullName> belong in the same <xref:System.Windows.VisualStateGroup>."}]}]},{"pos":[2232,2794],"content":"For more information about how to use <xref:System.Windows.VisualStateGroup> objects in a <xref:System.Windows.Controls.ControlTemplate>, see [Customizing the Appearance of an Existing Control by Creating a ControlTemplate](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md). For more information about how to create controls that use the <xref:System.Windows.VisualStateManager>, see [Creating a Control That Has a Customizable Appearance](~/docs/framework/wpf/controls/creating-a-control-that-has-a-customizable-appearance.md).","nodes":[{"content":"For more information about how to use <ph id=\"ph1\">&lt;xref:System.Windows.VisualStateGroup&gt;</ph> objects in a <ph id=\"ph2\">&lt;xref:System.Windows.Controls.ControlTemplate&gt;</ph>, see <bpt id=\"p1\">[</bpt>Customizing the Appearance of an Existing Control by Creating a ControlTemplate<ept id=\"p1\">](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md)</ept>.","pos":[0,308],"source":"For more information about how to use <xref:System.Windows.VisualStateGroup> objects in a <xref:System.Windows.Controls.ControlTemplate>, see [Customizing the Appearance of an Existing Control by Creating a ControlTemplate](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md)."},{"content":"For more information about how to create controls that use the <ph id=\"ph1\">&lt;xref:System.Windows.VisualStateManager&gt;</ph>, see <bpt id=\"p1\">[</bpt>Creating a Control That Has a Customizable Appearance<ept id=\"p1\">](~/docs/framework/wpf/controls/creating-a-control-that-has-a-customizable-appearance.md)</ept>.","pos":[309,562],"source":" For more information about how to create controls that use the <xref:System.Windows.VisualStateManager>, see [Creating a Control That Has a Customizable Appearance](~/docs/framework/wpf/controls/creating-a-control-that-has-a-customizable-appearance.md)."}]},{"pos":[2801,3047],"content":"The <xref:System.Windows.VisualStateGroup.Transitions%2A> property contains <xref:System.Windows.VisualTransition> objects that are applied when the control transition between states that are defined in the <xref:System.Windows.VisualStateGroup>.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.VisualStateGroup.Transitions%2A&gt;</ph> property contains <ph id=\"ph2\">&lt;xref:System.Windows.VisualTransition&gt;</ph> objects that are applied when the control transition between states that are defined in the <ph id=\"ph3\">&lt;xref:System.Windows.VisualStateGroup&gt;</ph>.","pos":[0,246],"source":"The <xref:System.Windows.VisualStateGroup.Transitions%2A> property contains <xref:System.Windows.VisualTransition> objects that are applied when the control transition between states that are defined in the <xref:System.Windows.VisualStateGroup>."}]}],"pos":[917,3979],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.Windows.VisualStateGroup\"></xref> class.","nodes":[{"pos":[0,93],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Windows.VisualStateGroup\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.Windows.VisualStateGroup\"></xref> class."}],"pos":[7800,7894],"yaml":true},{"content":"Gets the <xref href=\"System.Windows.VisualState\"></xref> that is currently applied to the control.","nodes":[{"pos":[0,98],"content":"Gets the <ph id=\"ph1\">&lt;xref href=\"System.Windows.VisualState\"&gt;&lt;/xref&gt;</ph> that is currently applied to the control.","source":"Gets the <xref href=\"System.Windows.VisualState\"></xref> that is currently applied to the control."}],"pos":[8956,9055],"yaml":true},{"content":"The <xref href=\"System.Windows.VisualState\"></xref> that is currently applied to the control.","nodes":[{"pos":[0,93],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Windows.VisualState\"&gt;&lt;/xref&gt;</ph> that is currently applied to the control.","source":"The <xref href=\"System.Windows.VisualState\"></xref> that is currently applied to the control."}],"pos":[9204,9298],"yaml":true},{"content":"Occurs after a control transitions to a different state.","nodes":[{"pos":[0,56],"content":"Occurs after a control transitions to a different state.","nodes":[{"content":"Occurs after a control transitions to a different state.","pos":[0,56]}]}],"pos":[10336,10393],"yaml":true},{"content":"This event occurs after the control transitions to a new state and the <xref:System.Windows.VisualStateGroup.CurrentStateChanging> event occurs.","nodes":[{"pos":[0,144],"content":"This event occurs after the control transitions to a new state and the <xref:System.Windows.VisualStateGroup.CurrentStateChanging> event occurs.","nodes":[{"content":"This event occurs after the control transitions to a new state and the <ph id=\"ph1\">&lt;xref:System.Windows.VisualStateGroup.CurrentStateChanging&gt;</ph> event occurs.","pos":[0,144],"source":"This event occurs after the control transitions to a new state and the <xref:System.Windows.VisualStateGroup.CurrentStateChanging> event occurs."}]}],"pos":[10404,10549],"yaml":true,"extradata":"MT"},{"content":"Occurs when a control starts transitioning to a different state.","nodes":[{"pos":[0,64],"content":"Occurs when a control starts transitioning to a different state.","nodes":[{"content":"Occurs when a control starts transitioning to a different state.","pos":[0,64]}]}],"pos":[11759,11824],"yaml":true},{"content":"The event occurs when the control begins to transition states. If a <xref:System.Windows.VisualTransition> is applied to the state change, this event occurs when the transition begins. If a <xref:System.Windows.VisualTransition> is not applied, this event occurs after the control transitions to the new state, but before the <xref:System.Windows.VisualStateGroup.CurrentStateChanged> event.","nodes":[{"pos":[0,391],"content":"The event occurs when the control begins to transition states. If a <xref:System.Windows.VisualTransition> is applied to the state change, this event occurs when the transition begins. If a <xref:System.Windows.VisualTransition> is not applied, this event occurs after the control transitions to the new state, but before the <xref:System.Windows.VisualStateGroup.CurrentStateChanged> event.","nodes":[{"content":"The event occurs when the control begins to transition states. If a <xref:System.Windows.VisualTransition> is applied to the state change, this event occurs when the transition begins. If a <xref:System.Windows.VisualTransition> is not applied, this event occurs after the control transitions to the new state, but before the <xref:System.Windows.VisualStateGroup.CurrentStateChanged> event.","pos":[0,391],"nodes":[{"content":"The event occurs when the control begins to transition states.","pos":[0,62]},{"content":"If a <ph id=\"ph1\">&lt;xref:System.Windows.VisualTransition&gt;</ph> is applied to the state change, this event occurs when the transition begins.","pos":[63,184],"source":" If a <xref:System.Windows.VisualTransition> is applied to the state change, this event occurs when the transition begins."},{"content":"If a <ph id=\"ph1\">&lt;xref:System.Windows.VisualTransition&gt;</ph> is not applied, this event occurs after the control transitions to the new state, but before the <ph id=\"ph2\">&lt;xref:System.Windows.VisualStateGroup.CurrentStateChanged&gt;</ph> event.","pos":[185,391],"source":" If a <xref:System.Windows.VisualTransition> is not applied, this event occurs after the control transitions to the new state, but before the <xref:System.Windows.VisualStateGroup.CurrentStateChanged> event."}]}]}],"pos":[11835,12227],"yaml":true,"extradata":"MT"},{"content":"Gets or sets the name of the <xref href=\"System.Windows.VisualStateGroup\"></xref>.","nodes":[{"pos":[0,82],"content":"Gets or sets the name of the <ph id=\"ph1\">&lt;xref href=\"System.Windows.VisualStateGroup\"&gt;&lt;/xref&gt;</ph>.","source":"Gets or sets the name of the <xref href=\"System.Windows.VisualStateGroup\"></xref>."}],"pos":[13345,13428],"yaml":true},{"content":"Control authors specify which states the control can be in by adding a <xref:System.Windows.TemplateVisualStateAttribute> on its class definition. States with the same <xref:System.Windows.TemplateVisualStateAttribute.GroupName%2A?displayProperty=fullName> belong in the same <xref:System.Windows.VisualStateGroup>. Set the <xref:System.Windows.VisualStateGroup.Name%2A> of the <xref:System.Windows.VisualStateGroup> to the value of the <xref:System.Windows.TemplateVisualStateAttribute.GroupName%2A?displayProperty=fullName> property.","nodes":[{"pos":[0,535],"content":"Control authors specify which states the control can be in by adding a <xref:System.Windows.TemplateVisualStateAttribute> on its class definition. States with the same <xref:System.Windows.TemplateVisualStateAttribute.GroupName%2A?displayProperty=fullName> belong in the same <xref:System.Windows.VisualStateGroup>. Set the <xref:System.Windows.VisualStateGroup.Name%2A> of the <xref:System.Windows.VisualStateGroup> to the value of the <xref:System.Windows.TemplateVisualStateAttribute.GroupName%2A?displayProperty=fullName> property.","nodes":[{"content":"Control authors specify which states the control can be in by adding a <xref:System.Windows.TemplateVisualStateAttribute> on its class definition. States with the same <xref:System.Windows.TemplateVisualStateAttribute.GroupName%2A?displayProperty=fullName> belong in the same <xref:System.Windows.VisualStateGroup>. Set the <xref:System.Windows.VisualStateGroup.Name%2A> of the <xref:System.Windows.VisualStateGroup> to the value of the <xref:System.Windows.TemplateVisualStateAttribute.GroupName%2A?displayProperty=fullName> property.","pos":[0,535],"nodes":[{"content":"Control authors specify which states the control can be in by adding a <ph id=\"ph1\">&lt;xref:System.Windows.TemplateVisualStateAttribute&gt;</ph> on its class definition.","pos":[0,146],"source":"Control authors specify which states the control can be in by adding a <xref:System.Windows.TemplateVisualStateAttribute> on its class definition."},{"content":"States with the same <ph id=\"ph1\">&lt;xref:System.Windows.TemplateVisualStateAttribute.GroupName%2A?displayProperty=fullName&gt;</ph> belong in the same <ph id=\"ph2\">&lt;xref:System.Windows.VisualStateGroup&gt;</ph>.","pos":[147,315],"source":" States with the same <xref:System.Windows.TemplateVisualStateAttribute.GroupName%2A?displayProperty=fullName> belong in the same <xref:System.Windows.VisualStateGroup>."},{"content":"Set the <ph id=\"ph1\">&lt;xref:System.Windows.VisualStateGroup.Name%2A&gt;</ph> of the <ph id=\"ph2\">&lt;xref:System.Windows.VisualStateGroup&gt;</ph> to the value of the <ph id=\"ph3\">&lt;xref:System.Windows.TemplateVisualStateAttribute.GroupName%2A?displayProperty=fullName&gt;</ph> property.","pos":[316,535],"source":" Set the <xref:System.Windows.VisualStateGroup.Name%2A> of the <xref:System.Windows.VisualStateGroup> to the value of the <xref:System.Windows.TemplateVisualStateAttribute.GroupName%2A?displayProperty=fullName> property."}]}]}],"pos":[13439,13975],"yaml":true,"extradata":"MT"},{"content":"The name of the <xref href=\"System.Windows.VisualStateGroup\"></xref>.","nodes":[{"pos":[0,69],"content":"The name of the <ph id=\"ph1\">&lt;xref href=\"System.Windows.VisualStateGroup\"&gt;&lt;/xref&gt;</ph>.","source":"The name of the <xref href=\"System.Windows.VisualStateGroup\"></xref>."}],"pos":[14664,14734],"yaml":true},{"content":"Gets the collection of mutually exclusive <xref href=\"System.Windows.VisualState\"></xref> objects.","nodes":[{"pos":[0,98],"content":"Gets the collection of mutually exclusive <ph id=\"ph1\">&lt;xref href=\"System.Windows.VisualState\"&gt;&lt;/xref&gt;</ph> objects.","source":"Gets the collection of mutually exclusive <xref href=\"System.Windows.VisualState\"></xref> objects."}],"pos":[15667,15766],"yaml":true},{"content":"The collection of mutually exclusive <xref href=\"System.Windows.VisualState\"></xref> objects.","nodes":[{"pos":[0,93],"content":"The collection of mutually exclusive <ph id=\"ph1\">&lt;xref href=\"System.Windows.VisualState\"&gt;&lt;/xref&gt;</ph> objects.","source":"The collection of mutually exclusive <xref href=\"System.Windows.VisualState\"></xref> objects."}],"pos":[16674,16768],"yaml":true},{"content":"Gets the collection of <xref href=\"System.Windows.VisualTransition\"></xref> objects.","nodes":[{"pos":[0,84],"content":"Gets the collection of <ph id=\"ph1\">&lt;xref href=\"System.Windows.VisualTransition\"&gt;&lt;/xref&gt;</ph> objects.","source":"Gets the collection of <xref href=\"System.Windows.VisualTransition\"></xref> objects."}],"pos":[17755,17840],"yaml":true},{"content":"The <xref:System.Windows.VisualTransition> objects in <xref:System.Windows.VisualStateGroup.Transitions%2A> are applied when the control transition between states that are defined in the <xref:System.Windows.VisualStateGroup>.","nodes":[{"pos":[0,226],"content":"The <xref:System.Windows.VisualTransition> objects in <xref:System.Windows.VisualStateGroup.Transitions%2A> are applied when the control transition between states that are defined in the <xref:System.Windows.VisualStateGroup>.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.VisualTransition&gt;</ph> objects in <ph id=\"ph2\">&lt;xref:System.Windows.VisualStateGroup.Transitions%2A&gt;</ph> are applied when the control transition between states that are defined in the <ph id=\"ph3\">&lt;xref:System.Windows.VisualStateGroup&gt;</ph>.","pos":[0,226],"source":"The <xref:System.Windows.VisualTransition> objects in <xref:System.Windows.VisualStateGroup.Transitions%2A> are applied when the control transition between states that are defined in the <xref:System.Windows.VisualStateGroup>."}]}],"pos":[17851,18078],"yaml":true,"extradata":"MT"},{"content":"The collection of <xref href=\"System.Windows.VisualTransition\"></xref> objects.","nodes":[{"pos":[0,79],"content":"The collection of <ph id=\"ph1\">&lt;xref href=\"System.Windows.VisualTransition\"&gt;&lt;/xref&gt;</ph> objects.","source":"The collection of <xref href=\"System.Windows.VisualTransition\"></xref> objects."}],"pos":[18977,19057],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Windows.VisualStateGroup\n  commentId: T:System.Windows.VisualStateGroup\n  id: VisualStateGroup\n  children:\n  - System.Windows.VisualStateGroup.#ctor\n  - System.Windows.VisualStateGroup.CurrentState\n  - System.Windows.VisualStateGroup.CurrentStateChanged\n  - System.Windows.VisualStateGroup.CurrentStateChanging\n  - System.Windows.VisualStateGroup.Name\n  - System.Windows.VisualStateGroup.States\n  - System.Windows.VisualStateGroup.Transitions\n  langs:\n  - csharp\n  name: VisualStateGroup\n  nameWithType: VisualStateGroup\n  fullName: System.Windows.VisualStateGroup\n  type: Class\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows\n  summary: Contains mutually exclusive <xref href=\"System.Windows.VisualState\"></xref> objects and <xref href=\"System.Windows.VisualTransition\"></xref> objects that are used to move from one state to another.\n  remarks: \"Each <xref:System.Windows.VisualStateGroup> contains a collection of <xref:System.Windows.VisualState> objects. A <xref:System.Windows.VisualState> contains a collection of <xref:System.Windows.Media.Animation.Storyboard> objects that specify how the control's appearance changes when the control is in a certain state. For example, a <xref:System.Windows.Controls.Button> might have a slightly different appearance when it is pressed than when it is not pressed. Two states that the <xref:System.Windows.Controls.Button> defines correspond to when it is pressed (`\\\"Pressed\\\"`) and when it is not (`\\\"Normal\\\"`).  \\n  \\n You add <xref:System.Windows.VisualState> to a control by setting the `VisualStateManager.VisualStateGroups` attached property on the control. You put states that are mutually exclusive to each other in the same <xref:System.Windows.VisualStateGroup>. For example, the <xref:System.Windows.Controls.CheckBox> has two <xref:System.Windows.VisualStateGroup> objects. One contains the states, `Normal`, `MouseOver`, `Pressed`, and `Disabled`. The other contains the states, `Checked`, `UnChecked`, and `Indeterminate`. The <xref:System.Windows.Controls.CheckBox> can be in states `MouseOver` and `UnChecked` at the same time, but it cannot be in the `MouseOver` and `Pressed` states at the same time.  \\n  \\n Although you can add <xref:System.Windows.VisualState> objects to any element, they are a particularly useful way to enable others to redefine the visual behavior of a <xref:System.Windows.Controls.Control>. If you create a custom control that uses a <xref:System.Windows.Controls.ControlTemplate>, you can specify which states that control can be in by adding a <xref:System.Windows.TemplateVisualStateAttribute> on its class definition. Then anyone who creates a new <xref:System.Windows.Controls.ControlTemplate> for your control can add <xref:System.Windows.VisualState> objects to the template. The <xref:System.Windows.TemplateVisualStateAttribute> enables designer tools, such as Expression Blend, to expose the control's states. States with the same <xref:System.Windows.TemplateVisualStateAttribute.GroupName%2A?displayProperty=fullName> belong in the same <xref:System.Windows.VisualStateGroup>.  \\n  \\n For more information about how to use <xref:System.Windows.VisualStateGroup> objects in a <xref:System.Windows.Controls.ControlTemplate>, see [Customizing the Appearance of an Existing Control by Creating a ControlTemplate](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md). For more information about how to create controls that use the <xref:System.Windows.VisualStateManager>, see [Creating a Control That Has a Customizable Appearance](~/docs/framework/wpf/controls/creating-a-control-that-has-a-customizable-appearance.md).  \\n  \\n The <xref:System.Windows.VisualStateGroup.Transitions%2A> property contains <xref:System.Windows.VisualTransition> objects that are applied when the control transition between states that are defined in the <xref:System.Windows.VisualStateGroup>.\"\n  example:\n  - \"The following example creates a simple <xref:System.Windows.Controls.ControlTemplate> for a <xref:System.Windows.Controls.Button> that contains one <xref:System.Windows.Controls.Grid>. It also contains a <xref:System.Windows.VisualStateGroup> named `CommonStates`, which defines the `MouseOver` and `Normal` states. The <xref:System.Windows.VisualStateGroup> also has a <xref:System.Windows.VisualTransition> that specifies that it takes one half second for the <xref:System.Windows.Controls.Grid> to change from green to red when the user moves the mouse pointer over the <xref:System.Windows.Controls.Button>.  \\n  \\n [!code-xml[VSMButtonTemplate#11](~/samples/snippets/csharp/VS_Snippets_Wpf/vsmbuttontemplate/csharp/window1.xaml#11)]\"\n  syntax:\n    content: >-\n      [System.Windows.Markup.ContentProperty(\"States\")]\n\n      [System.Windows.Markup.RuntimeNameProperty(\"Name\")]\n\n      public class VisualStateGroup : System.Windows.DependencyObject\n  inheritance:\n  - System.Object\n  - System.Windows.Threading.DispatcherObject\n  - System.Windows.DependencyObject\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)\n  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyPropertyKey)\n  - System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)\n  - System.Windows.DependencyObject.DependencyObjectType\n  - System.Windows.DependencyObject.Equals(System.Object)\n  - System.Windows.DependencyObject.GetHashCode\n  - System.Windows.DependencyObject.GetLocalValueEnumerator\n  - System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)\n  - System.Windows.DependencyObject.InvalidateProperty(System.Windows.DependencyProperty)\n  - System.Windows.DependencyObject.IsSealed\n  - System.Windows.DependencyObject.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)\n  - System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)\n  - System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)\n  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)\n  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyPropertyKey,System.Object)\n  - System.Windows.DependencyObject.ShouldSerializeProperty(System.Windows.DependencyProperty)\n  - System.Windows.Threading.DispatcherObject.CheckAccess\n  - System.Windows.Threading.DispatcherObject.Dispatcher\n  - System.Windows.Threading.DispatcherObject.VerifyAccess\n  attributes:\n  - type: System.Windows.Markup.ContentPropertyAttribute\n  - type: System.Windows.Markup.RuntimeNamePropertyAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/VisualStateGroup.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.VisualStateGroup.#ctor\n  commentId: M:System.Windows.VisualStateGroup.#ctor\n  id: '#ctor'\n  parent: System.Windows.VisualStateGroup\n  langs:\n  - csharp\n  name: VisualStateGroup()\n  nameWithType: VisualStateGroup.VisualStateGroup()\n  fullName: VisualStateGroup.VisualStateGroup()\n  type: Constructor\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows\n  summary: Initializes a new instance of the <xref href=\"System.Windows.VisualStateGroup\"></xref> class.\n  syntax:\n    content: public VisualStateGroup ();\n    parameters: []\n  overload: System.Windows.VisualStateGroup.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/VisualStateGroup.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.VisualStateGroup.CurrentState\n  commentId: P:System.Windows.VisualStateGroup.CurrentState\n  id: CurrentState\n  parent: System.Windows.VisualStateGroup\n  langs:\n  - csharp\n  name: CurrentState\n  nameWithType: VisualStateGroup.CurrentState\n  fullName: VisualStateGroup.CurrentState\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows\n  summary: Gets the <xref href=\"System.Windows.VisualState\"></xref> that is currently applied to the control.\n  syntax:\n    content: public System.Windows.VisualState CurrentState { get; }\n    return:\n      type: System.Windows.VisualState\n      description: The <xref href=\"System.Windows.VisualState\"></xref> that is currently applied to the control.\n  overload: System.Windows.VisualStateGroup.CurrentState*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/VisualStateGroup.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.VisualStateGroup.CurrentStateChanged\n  commentId: E:System.Windows.VisualStateGroup.CurrentStateChanged\n  id: CurrentStateChanged\n  parent: System.Windows.VisualStateGroup\n  langs:\n  - csharp\n  name: CurrentStateChanged\n  nameWithType: VisualStateGroup.CurrentStateChanged\n  fullName: VisualStateGroup.CurrentStateChanged\n  type: Event\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows\n  summary: Occurs after a control transitions to a different state.\n  remarks: This event occurs after the control transitions to a new state and the <xref:System.Windows.VisualStateGroup.CurrentStateChanging> event occurs.\n  syntax:\n    content: public event EventHandler<System.Windows.VisualStateChangedEventArgs> CurrentStateChanged;\n    return:\n      type: System.EventHandler{System.Windows.VisualStateChangedEventArgs}\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/VisualStateGroup.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.VisualStateGroup.CurrentStateChanging\n  commentId: E:System.Windows.VisualStateGroup.CurrentStateChanging\n  id: CurrentStateChanging\n  parent: System.Windows.VisualStateGroup\n  langs:\n  - csharp\n  name: CurrentStateChanging\n  nameWithType: VisualStateGroup.CurrentStateChanging\n  fullName: VisualStateGroup.CurrentStateChanging\n  type: Event\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows\n  summary: Occurs when a control starts transitioning to a different state.\n  remarks: The event occurs when the control begins to transition states. If a <xref:System.Windows.VisualTransition> is applied to the state change, this event occurs when the transition begins. If a <xref:System.Windows.VisualTransition> is not applied, this event occurs after the control transitions to the new state, but before the <xref:System.Windows.VisualStateGroup.CurrentStateChanged> event.\n  syntax:\n    content: public event EventHandler<System.Windows.VisualStateChangedEventArgs> CurrentStateChanging;\n    return:\n      type: System.EventHandler{System.Windows.VisualStateChangedEventArgs}\n      description: ''\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/VisualStateGroup.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.VisualStateGroup.Name\n  commentId: P:System.Windows.VisualStateGroup.Name\n  id: Name\n  parent: System.Windows.VisualStateGroup\n  langs:\n  - csharp\n  name: Name\n  nameWithType: VisualStateGroup.Name\n  fullName: VisualStateGroup.Name\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows\n  summary: Gets or sets the name of the <xref href=\"System.Windows.VisualStateGroup\"></xref>.\n  remarks: Control authors specify which states the control can be in by adding a <xref:System.Windows.TemplateVisualStateAttribute> on its class definition. States with the same <xref:System.Windows.TemplateVisualStateAttribute.GroupName%2A?displayProperty=fullName> belong in the same <xref:System.Windows.VisualStateGroup>. Set the <xref:System.Windows.VisualStateGroup.Name%2A> of the <xref:System.Windows.VisualStateGroup> to the value of the <xref:System.Windows.TemplateVisualStateAttribute.GroupName%2A?displayProperty=fullName> property.\n  example:\n  - \"The following example creates two <xref:System.Windows.VisualStateGroup> objects that are named `CommonStates` and `FocusStates`. The control will be in exactly one state from each <xref:System.Windows.VisualStateGroup> at all times. For the entire example, see [Customizing the Appearance of an Existing Control by Creating a ControlTemplate](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md).  \\n  \\n [!code-xml[VSMButtonTemplate#5](~/samples/snippets/csharp/VS_Snippets_Wpf/vsmbuttontemplate/csharp/skinnedbutton.xaml#5)]\"\n  syntax:\n    content: public string Name { get; set; }\n    return:\n      type: System.String\n      description: The name of the <xref href=\"System.Windows.VisualStateGroup\"></xref>.\n  overload: System.Windows.VisualStateGroup.Name*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/VisualStateGroup.xml\n  ms.technology:\n  - dotnet-wpf\n  ms.author: kempb\n  manager: ghogen\n- uid: System.Windows.VisualStateGroup.States\n  commentId: P:System.Windows.VisualStateGroup.States\n  id: States\n  parent: System.Windows.VisualStateGroup\n  langs:\n  - csharp\n  name: States\n  nameWithType: VisualStateGroup.States\n  fullName: VisualStateGroup.States\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows\n  summary: Gets the collection of mutually exclusive <xref href=\"System.Windows.VisualState\"></xref> objects.\n  remarks: ''\n  example:\n  - \"The following example creates a simple <xref:System.Windows.Controls.ControlTemplate> for a <xref:System.Windows.Controls.Button> that contains one <xref:System.Windows.Controls.Grid>. It also contains a <xref:System.Windows.VisualStateGroup> named `CommonStates`, which defines the `MouseOver` and `Normal` states. The <xref:System.Windows.VisualStateGroup> also has a <xref:System.Windows.VisualTransition> that specifies that it takes one half second for the <xref:System.Windows.Controls.Grid> to change from green to red when the user moves the mouse pointer over the <xref:System.Windows.Controls.Button>.  \\n  \\n [!code-xml[VSMButtonTemplate#11](~/samples/snippets/csharp/VS_Snippets_Wpf/vsmbuttontemplate/csharp/window1.xaml#11)]\"\n  syntax:\n    content: public System.Collections.IList States { get; }\n    return:\n      type: System.Collections.IList\n      description: The collection of mutually exclusive <xref href=\"System.Windows.VisualState\"></xref> objects.\n  overload: System.Windows.VisualStateGroup.States*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/VisualStateGroup.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.VisualStateGroup.Transitions\n  commentId: P:System.Windows.VisualStateGroup.Transitions\n  id: Transitions\n  parent: System.Windows.VisualStateGroup\n  langs:\n  - csharp\n  name: Transitions\n  nameWithType: VisualStateGroup.Transitions\n  fullName: VisualStateGroup.Transitions\n  type: Property\n  assemblies:\n  - PresentationFramework\n  namespace: System.Windows\n  summary: Gets the collection of <xref href=\"System.Windows.VisualTransition\"></xref> objects.\n  remarks: The <xref:System.Windows.VisualTransition> objects in <xref:System.Windows.VisualStateGroup.Transitions%2A> are applied when the control transition between states that are defined in the <xref:System.Windows.VisualStateGroup>.\n  example:\n  - \"The following example creates a simple <xref:System.Windows.Controls.ControlTemplate> for a <xref:System.Windows.Controls.Button> that contains one <xref:System.Windows.Controls.Grid>. It also contains a <xref:System.Windows.VisualStateGroup> named `CommonStates`, which defines the `MouseOver` and `Normal` states. The <xref:System.Windows.VisualStateGroup> also has a <xref:System.Windows.VisualTransition> that specifies that it takes one half second for the <xref:System.Windows.Controls.Grid> to change from green to red when the user moves the mouse pointer over the <xref:System.Windows.Controls.Button>.  \\n  \\n [!code-xml[VSMButtonTemplate#11](~/samples/snippets/csharp/VS_Snippets_Wpf/vsmbuttontemplate/csharp/window1.xaml#11)]\"\n  syntax:\n    content: public System.Collections.IList Transitions { get; }\n    return:\n      type: System.Collections.IList\n      description: The collection of <xref href=\"System.Windows.VisualTransition\"></xref> objects.\n  overload: System.Windows.VisualStateGroup.Transitions*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/VisualStateGroup.xml\n  ms.technology:\n  - dotnet-wpf\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\nreferences:\n- uid: System.Windows.DependencyObject\n  parent: System.Windows\n  isExternal: false\n  name: DependencyObject\n  nameWithType: DependencyObject\n  fullName: System.Windows.DependencyObject\n- uid: System.Windows.VisualStateGroup.#ctor\n  parent: System.Windows.VisualStateGroup\n  isExternal: false\n  name: VisualStateGroup()\n  nameWithType: VisualStateGroup.VisualStateGroup()\n  fullName: VisualStateGroup.VisualStateGroup()\n- uid: System.Windows.VisualStateGroup.CurrentState\n  parent: System.Windows.VisualStateGroup\n  isExternal: false\n  name: CurrentState\n  nameWithType: VisualStateGroup.CurrentState\n  fullName: VisualStateGroup.CurrentState\n- uid: System.Windows.VisualState\n  parent: System.Windows\n  isExternal: false\n  name: VisualState\n  nameWithType: VisualState\n  fullName: System.Windows.VisualState\n- uid: System.Windows.VisualStateGroup.CurrentStateChanged\n  parent: System.Windows.VisualStateGroup\n  isExternal: false\n  name: CurrentStateChanged\n  nameWithType: VisualStateGroup.CurrentStateChanged\n  fullName: VisualStateGroup.CurrentStateChanged\n- uid: System.EventHandler`1\n  name: EventHandler<TEventArgs>\n  nameWithType: EventHandler<TEventArgs>\n  fullName: System.EventHandler<TEventArgs>\n- uid: System.Windows.VisualStateChangedEventArgs\n  name: VisualStateChangedEventArgs\n  nameWithType: VisualStateChangedEventArgs\n  fullName: System.Windows.VisualStateChangedEventArgs\n- uid: System.EventHandler{System.Windows.VisualStateChangedEventArgs}\n  parent: System\n  isExternal: false\n  name: EventHandler<VisualStateChangedEventArgs>\n  nameWithType: EventHandler<VisualStateChangedEventArgs>\n  fullName: System.EventHandler<System.Windows.VisualStateChangedEventArgs>\n  spec.csharp:\n  - uid: System.EventHandler`1\n    name: EventHandler\n    nameWithType: EventHandler\n    fullName: System.EventHandler\n  - name: <\n    nameWithType: <\n    fullName: <\n  - uid: System.Windows.VisualStateChangedEventArgs\n    name: VisualStateChangedEventArgs\n    nameWithType: VisualStateChangedEventArgs\n    fullName: System.Windows.VisualStateChangedEventArgs\n  - name: '>'\n    nameWithType: '>'\n    fullName: '>'\n- uid: System.Windows.VisualStateGroup.CurrentStateChanging\n  parent: System.Windows.VisualStateGroup\n  isExternal: false\n  name: CurrentStateChanging\n  nameWithType: VisualStateGroup.CurrentStateChanging\n  fullName: VisualStateGroup.CurrentStateChanging\n- uid: System.Windows.VisualStateGroup.Name\n  parent: System.Windows.VisualStateGroup\n  isExternal: false\n  name: Name\n  nameWithType: VisualStateGroup.Name\n  fullName: VisualStateGroup.Name\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Windows.VisualStateGroup.States\n  parent: System.Windows.VisualStateGroup\n  isExternal: false\n  name: States\n  nameWithType: VisualStateGroup.States\n  fullName: VisualStateGroup.States\n- uid: System.Collections.IList\n  parent: System.Collections\n  isExternal: false\n  name: IList\n  nameWithType: IList\n  fullName: System.Collections.IList\n- uid: System.Windows.VisualStateGroup.Transitions\n  parent: System.Windows.VisualStateGroup\n  isExternal: false\n  name: Transitions\n  nameWithType: VisualStateGroup.Transitions\n  fullName: VisualStateGroup.Transitions\n- uid: System.Windows.VisualStateGroup.#ctor*\n  parent: System.Windows.VisualStateGroup\n  isExternal: false\n  name: VisualStateGroup\n  nameWithType: VisualStateGroup.VisualStateGroup\n  fullName: VisualStateGroup.VisualStateGroup\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/VisualStateGroup.xml\n- uid: System.Windows.VisualStateGroup.CurrentState*\n  parent: System.Windows.VisualStateGroup\n  isExternal: false\n  name: CurrentState\n  nameWithType: VisualStateGroup.CurrentState\n  fullName: VisualStateGroup.CurrentState\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/VisualStateGroup.xml\n- uid: System.Windows.VisualStateGroup.Name*\n  parent: System.Windows.VisualStateGroup\n  isExternal: false\n  name: Name\n  nameWithType: VisualStateGroup.Name\n  fullName: VisualStateGroup.Name\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/VisualStateGroup.xml\n- uid: System.Windows.VisualStateGroup.States*\n  parent: System.Windows.VisualStateGroup\n  isExternal: false\n  name: States\n  nameWithType: VisualStateGroup.States\n  fullName: VisualStateGroup.States\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/VisualStateGroup.xml\n- uid: System.Windows.VisualStateGroup.Transitions*\n  parent: System.Windows.VisualStateGroup\n  isExternal: false\n  name: Transitions\n  nameWithType: VisualStateGroup.Transitions\n  fullName: VisualStateGroup.Transitions\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows/VisualStateGroup.xml\n- uid: System.Windows.DependencyObject.Equals(System.Object)\n  parent: System.Windows.DependencyObject\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: DependencyObject.Equals(Object)\n  fullName: DependencyObject.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Windows.DependencyObject.GetHashCode\n  parent: System.Windows.DependencyObject\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: DependencyObject.GetHashCode()\n  fullName: DependencyObject.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.Windows.Threading.DispatcherObject.CheckAccess\n  parent: System.Windows.Threading.DispatcherObject\n  isExternal: false\n  name: CheckAccess()\n  nameWithType: DispatcherObject.CheckAccess()\n  fullName: DispatcherObject.CheckAccess()\n- uid: System.Windows.Threading.DispatcherObject.Dispatcher\n  parent: System.Windows.Threading.DispatcherObject\n  isExternal: false\n  name: Dispatcher\n  nameWithType: DispatcherObject.Dispatcher\n  fullName: DispatcherObject.Dispatcher\n- uid: System.Windows.Threading.DispatcherObject.VerifyAccess\n  parent: System.Windows.Threading.DispatcherObject\n  isExternal: false\n  name: VerifyAccess()\n  nameWithType: DispatcherObject.VerifyAccess()\n  fullName: DispatcherObject.VerifyAccess()\n- uid: System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)\n  parent: System.Windows.DependencyObject\n  isExternal: false\n  name: ClearValue(DependencyProperty)\n  nameWithType: DependencyObject.ClearValue(DependencyProperty)\n  fullName: DependencyObject.ClearValue(DependencyProperty)\n- uid: System.Windows.DependencyObject.ClearValue(System.Windows.DependencyPropertyKey)\n  parent: System.Windows.DependencyObject\n  isExternal: false\n  name: ClearValue(DependencyPropertyKey)\n  nameWithType: DependencyObject.ClearValue(DependencyPropertyKey)\n  fullName: DependencyObject.ClearValue(DependencyPropertyKey)\n- uid: System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)\n  parent: System.Windows.DependencyObject\n  isExternal: false\n  name: CoerceValue(DependencyProperty)\n  nameWithType: DependencyObject.CoerceValue(DependencyProperty)\n  fullName: DependencyObject.CoerceValue(DependencyProperty)\n- uid: System.Windows.DependencyObject.DependencyObjectType\n  parent: System.Windows.DependencyObject\n  isExternal: false\n  name: DependencyObjectType\n  nameWithType: DependencyObject.DependencyObjectType\n  fullName: DependencyObject.DependencyObjectType\n- uid: System.Windows.DependencyObject.GetLocalValueEnumerator\n  parent: System.Windows.DependencyObject\n  isExternal: false\n  name: GetLocalValueEnumerator()\n  nameWithType: DependencyObject.GetLocalValueEnumerator()\n  fullName: DependencyObject.GetLocalValueEnumerator()\n- uid: System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)\n  parent: System.Windows.DependencyObject\n  isExternal: false\n  name: GetValue(DependencyProperty)\n  nameWithType: DependencyObject.GetValue(DependencyProperty)\n  fullName: DependencyObject.GetValue(DependencyProperty)\n- uid: System.Windows.DependencyObject.InvalidateProperty(System.Windows.DependencyProperty)\n  parent: System.Windows.DependencyObject\n  isExternal: false\n  name: InvalidateProperty(DependencyProperty)\n  nameWithType: DependencyObject.InvalidateProperty(DependencyProperty)\n  fullName: DependencyObject.InvalidateProperty(DependencyProperty)\n- uid: System.Windows.DependencyObject.IsSealed\n  parent: System.Windows.DependencyObject\n  isExternal: false\n  name: IsSealed\n  nameWithType: DependencyObject.IsSealed\n  fullName: DependencyObject.IsSealed\n- uid: System.Windows.DependencyObject.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)\n  parent: System.Windows.DependencyObject\n  isExternal: false\n  name: OnPropertyChanged(DependencyPropertyChangedEventArgs)\n  nameWithType: DependencyObject.OnPropertyChanged(DependencyPropertyChangedEventArgs)\n  fullName: DependencyObject.OnPropertyChanged(DependencyPropertyChangedEventArgs)\n- uid: System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)\n  parent: System.Windows.DependencyObject\n  isExternal: false\n  name: ReadLocalValue(DependencyProperty)\n  nameWithType: DependencyObject.ReadLocalValue(DependencyProperty)\n  fullName: DependencyObject.ReadLocalValue(DependencyProperty)\n- uid: System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)\n  parent: System.Windows.DependencyObject\n  isExternal: false\n  name: SetCurrentValue(DependencyProperty, Object)\n  nameWithType: DependencyObject.SetCurrentValue(DependencyProperty, Object)\n  fullName: DependencyObject.SetCurrentValue(DependencyProperty, Object)\n- uid: System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)\n  parent: System.Windows.DependencyObject\n  isExternal: false\n  name: SetValue(DependencyProperty, Object)\n  nameWithType: DependencyObject.SetValue(DependencyProperty, Object)\n  fullName: DependencyObject.SetValue(DependencyProperty, Object)\n- uid: System.Windows.DependencyObject.SetValue(System.Windows.DependencyPropertyKey,System.Object)\n  parent: System.Windows.DependencyObject\n  isExternal: false\n  name: SetValue(DependencyPropertyKey, Object)\n  nameWithType: DependencyObject.SetValue(DependencyPropertyKey, Object)\n  fullName: DependencyObject.SetValue(DependencyPropertyKey, Object)\n- uid: System.Windows.DependencyObject.ShouldSerializeProperty(System.Windows.DependencyProperty)\n  parent: System.Windows.DependencyObject\n  isExternal: false\n  name: ShouldSerializeProperty(DependencyProperty)\n  nameWithType: DependencyObject.ShouldSerializeProperty(DependencyProperty)\n  fullName: DependencyObject.ShouldSerializeProperty(DependencyProperty)\n"}