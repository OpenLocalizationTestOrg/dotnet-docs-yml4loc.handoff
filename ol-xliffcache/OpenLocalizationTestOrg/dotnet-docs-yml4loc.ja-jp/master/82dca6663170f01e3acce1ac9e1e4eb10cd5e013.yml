### YamlMime:ManagedReference
items:
- uid: System.Windows.Controls.ValidationResult
  commentId: T:System.Windows.Controls.ValidationResult
  id: ValidationResult
  children:
  - System.Windows.Controls.ValidationResult.#ctor(System.Boolean,System.Object)
  - System.Windows.Controls.ValidationResult.Equals(System.Object)
  - System.Windows.Controls.ValidationResult.ErrorContent
  - System.Windows.Controls.ValidationResult.GetHashCode
  - System.Windows.Controls.ValidationResult.IsValid
  - System.Windows.Controls.ValidationResult.op_Equality(System.Windows.Controls.ValidationResult,System.Windows.Controls.ValidationResult)
  - System.Windows.Controls.ValidationResult.op_Inequality(System.Windows.Controls.ValidationResult,System.Windows.Controls.ValidationResult)
  - System.Windows.Controls.ValidationResult.ValidResult
  langs:
  - csharp
  name: ValidationResult
  nameWithType: ValidationResult
  fullName: System.Windows.Controls.ValidationResult
  type: Class
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: Represents the result returned by the <xref href="System.Windows.Controls.ValidationRule"></xref>.<xref href="System.Windows.Controls.ValidationRule.Validate(System.Object,System.Globalization.CultureInfo)"></xref> method that indicates whether the checked value passed the <xref href="System.Windows.Controls.ValidationRule"></xref>.
  remarks: "The [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] data binding model enables you to associate <xref:System.Windows.Data.Binding.ValidationRules%2A> with your <xref:System.Windows.Data.Binding> or <xref:System.Windows.Data.MultiBinding> object. You can create custom rules by subclassing the <xref:System.Windows.Controls.ValidationRule> class and implementing the <xref:System.Windows.Controls.ValidationRule.Validate%2A> method. The <xref:System.Windows.Controls.ValidationRule.Validate%2A> method returns a <xref:System.Windows.Controls.ValidationResult> object to report whether the checked value is valid.  \n  \n For a detailed discussion of the validation process, see \"Data Validation\" in [Data Binding Overview](~/docs/framework/wpf/data/data-binding-overview.md)."
  example:
  - "The following example shows the implementation of a validation rule that marks the input value as invalid if it contains non-numeric characters or outside the lower and upper bounds. If the value is invalid, the <xref:System.Windows.Controls.ValidationResult.ErrorContent%2A> property and the <xref:System.Windows.Controls.ValidationResult.IsValid%2A> property of the returned <xref:System.Windows.Controls.ValidationResult> are set to the appropriate error message and `false` respectively.  \n  \n For the complete example, see [How to: Implement Binding Validation](~/docs/framework/wpf/data/how-to-implement-binding-validation.md).  \n  \n [!code-csharp[BindValidation#3](~/samples/snippets/csharp/VS_Snippets_Wpf/BindValidation/CSharp/AgeRangeRule.cs#3)]"
  syntax:
    content: public class ValidationResult
  inheritance:
  - System.Object
  implements: []
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Controls/ValidationResult.xml
  ms.technology:
  - dotnet-wpf
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.Windows.Controls.ValidationResult.#ctor(System.Boolean,System.Object)
  commentId: M:System.Windows.Controls.ValidationResult.#ctor(System.Boolean,System.Object)
  id: '#ctor(System.Boolean,System.Object)'
  parent: System.Windows.Controls.ValidationResult
  langs:
  - csharp
  name: ValidationResult(Boolean, Object)
  nameWithType: ValidationResult.ValidationResult(Boolean, Object)
  fullName: ValidationResult.ValidationResult(Boolean, Object)
  type: Constructor
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: Initializes a new instance of the <xref href="System.Windows.Controls.ValidationResult"></xref> class.
  remarks: "The [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] data binding model enables you to associate <xref:System.Windows.Data.Binding.ValidationRules%2A> with your <xref:System.Windows.Data.Binding> or <xref:System.Windows.Data.MultiBinding> object. You can create custom rules by subclassing the <xref:System.Windows.Controls.ValidationRule> class and implementing the <xref:System.Windows.Controls.ValidationRule.Validate%2A> method. The <xref:System.Windows.Controls.ValidationRule.Validate%2A> method returns a <xref:System.Windows.Controls.ValidationResult> object to report whether the checked value is valid.  \n  \n For a detailed discussion of the validation process, see \"Data Validation\" in [Data Binding Overview](~/docs/framework/wpf/data/data-binding-overview.md)."
  example:
  - "The following example shows the implementation of a validation rule that marks the input value as invalid if it contains non-numeric characters or outside the lower and upper bounds. If the value is invalid, the <xref:System.Windows.Controls.ValidationResult.ErrorContent%2A> property and the <xref:System.Windows.Controls.ValidationResult.IsValid%2A> property of the returned <xref:System.Windows.Controls.ValidationResult> are set to the appropriate error message and `false` respectively.  \n  \n For the complete example, see [How to: Implement Binding Validation](~/docs/framework/wpf/data/how-to-implement-binding-validation.md).  \n  \n [!code-csharp[BindValidation#3](~/samples/snippets/csharp/VS_Snippets_Wpf/BindValidation/CSharp/AgeRangeRule.cs#3)]"
  syntax:
    content: public ValidationResult (bool isValid, object errorContent);
    parameters:
    - id: isValid
      type: System.Boolean
      description: Whether or not the value checked against the <xref href="System.Windows.Controls.ValidationRule"></xref> is valid.
    - id: errorContent
      type: System.Object
      description: Information about the invalidity.
  overload: System.Windows.Controls.ValidationResult.#ctor*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Controls/ValidationResult.xml
  ms.technology:
  - dotnet-wpf
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.Windows.Controls.ValidationResult.Equals(System.Object)
  commentId: M:System.Windows.Controls.ValidationResult.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Windows.Controls.ValidationResult
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: ValidationResult.Equals(Object)
  fullName: ValidationResult.Equals(Object)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: Compares the specified instance and the current instance of <xref href="System.Windows.Controls.ValidationResult"></xref> for value equality.
  remarks: This method is called by the operator overrides.
  syntax:
    content: public override bool Equals (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: The <xref href="System.Windows.Controls.ValidationResult"></xref> instance to compare.
    return:
      type: System.Boolean
      description: '`true` if <code>obj</code> and this instance of <xref href="System.Windows.Controls.ValidationResult"></xref>.have the same values.'
  overload: System.Windows.Controls.ValidationResult.Equals*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Controls/ValidationResult.xml
  ms.technology:
  - dotnet-wpf
  ms.author: kempb
  manager: ghogen
- uid: System.Windows.Controls.ValidationResult.ErrorContent
  commentId: P:System.Windows.Controls.ValidationResult.ErrorContent
  id: ErrorContent
  parent: System.Windows.Controls.ValidationResult
  langs:
  - csharp
  name: ErrorContent
  nameWithType: ValidationResult.ErrorContent
  fullName: ValidationResult.ErrorContent
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: Gets an object that provides additional information about the invalidity.
  remarks: "The [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] data binding model enables you to associate <xref:System.Windows.Data.Binding.ValidationRules%2A> with your <xref:System.Windows.Data.Binding> or <xref:System.Windows.Data.MultiBinding> object. You can create custom rules by subclassing the <xref:System.Windows.Controls.ValidationRule> class and implementing the <xref:System.Windows.Controls.ValidationRule.Validate%2A> method. The <xref:System.Windows.Controls.ValidationRule.Validate%2A> method returns a <xref:System.Windows.Controls.ValidationResult> object to report whether the checked value is valid.  \n  \n For a detailed discussion of the validation process, see \"Data Validation\" in [Data Binding Overview](~/docs/framework/wpf/data/data-binding-overview.md)."
  example:
  - "The following example shows the implementation of a validation rule that marks the input value as invalid if it contains non-numeric characters or outside the lower and upper bounds. If the value is invalid, the <xref:System.Windows.Controls.ValidationResult.ErrorContent%2A> property and the <xref:System.Windows.Controls.ValidationResult.IsValid%2A> property of the returned <xref:System.Windows.Controls.ValidationResult> are set to the appropriate error message and `false` respectively.  \n  \n For the complete example, see [How to: Implement Binding Validation](~/docs/framework/wpf/data/how-to-implement-binding-validation.md).  \n  \n [!code-csharp[BindValidation#3](~/samples/snippets/csharp/VS_Snippets_Wpf/BindValidation/CSharp/AgeRangeRule.cs#3)]"
  syntax:
    content: public object ErrorContent { get; }
    return:
      type: System.Object
      description: An object that provides additional information about the invalidity.
  overload: System.Windows.Controls.ValidationResult.ErrorContent*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Controls/ValidationResult.xml
  ms.technology:
  - dotnet-wpf
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.Windows.Controls.ValidationResult.GetHashCode
  commentId: M:System.Windows.Controls.ValidationResult.GetHashCode
  id: GetHashCode
  parent: System.Windows.Controls.ValidationResult
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: ValidationResult.GetHashCode()
  fullName: ValidationResult.GetHashCode()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: Returns the hash code for this <xref href="System.Windows.Controls.ValidationResult"></xref>.
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: The hash code for this <xref href="System.Windows.Controls.ValidationResult"></xref>.
  overload: System.Windows.Controls.ValidationResult.GetHashCode*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Controls/ValidationResult.xml
  ms.technology:
  - dotnet-wpf
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.Windows.Controls.ValidationResult.IsValid
  commentId: P:System.Windows.Controls.ValidationResult.IsValid
  id: IsValid
  parent: System.Windows.Controls.ValidationResult
  langs:
  - csharp
  name: IsValid
  nameWithType: ValidationResult.IsValid
  fullName: ValidationResult.IsValid
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: Gets a value that indicates whether the value checked against the <xref href="System.Windows.Controls.ValidationRule"></xref> is valid.
  remarks: "The [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] data binding model enables you to associate <xref:System.Windows.Data.Binding.ValidationRules%2A> with your <xref:System.Windows.Data.Binding> or <xref:System.Windows.Data.MultiBinding> object. You can create custom rules by subclassing the <xref:System.Windows.Controls.ValidationRule> class and implementing the <xref:System.Windows.Controls.ValidationRule.Validate%2A> method. The <xref:System.Windows.Controls.ValidationRule.Validate%2A> method returns a <xref:System.Windows.Controls.ValidationResult> object to report whether the checked value is valid.  \n  \n For a detailed discussion of the validation process, see \"Data Validation\" in [Data Binding Overview](~/docs/framework/wpf/data/data-binding-overview.md)."
  example:
  - "The following example shows the implementation of a validation rule that marks the input value as invalid if it contains non-numeric characters or outside the lower and upper bounds. If the value is invalid, the <xref:System.Windows.Controls.ValidationResult.ErrorContent%2A> property and the <xref:System.Windows.Controls.ValidationResult.IsValid%2A> property of the returned <xref:System.Windows.Controls.ValidationResult> are set to the appropriate error message and `false` respectively.  \n  \n For the complete example, see [How to: Implement Binding Validation](~/docs/framework/wpf/data/how-to-implement-binding-validation.md).  \n  \n [!code-csharp[BindValidation#3](~/samples/snippets/csharp/VS_Snippets_Wpf/BindValidation/CSharp/AgeRangeRule.cs#3)]"
  syntax:
    content: public bool IsValid { get; }
    return:
      type: System.Boolean
      description: '`true` if the value is valid; otherwise, `false`. The default value is `false`.'
  overload: System.Windows.Controls.ValidationResult.IsValid*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Controls/ValidationResult.xml
  ms.technology:
  - dotnet-wpf
  ms.author: kempb
  manager: ghogen
- uid: System.Windows.Controls.ValidationResult.op_Equality(System.Windows.Controls.ValidationResult,System.Windows.Controls.ValidationResult)
  commentId: M:System.Windows.Controls.ValidationResult.op_Equality(System.Windows.Controls.ValidationResult,System.Windows.Controls.ValidationResult)
  id: op_Equality(System.Windows.Controls.ValidationResult,System.Windows.Controls.ValidationResult)
  parent: System.Windows.Controls.ValidationResult
  langs:
  - csharp
  name: op_Equality(ValidationResult, ValidationResult)
  nameWithType: ValidationResult.op_Equality(ValidationResult, ValidationResult)
  fullName: ValidationResult.op_Equality(ValidationResult, ValidationResult)
  type: Operator
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: Compares two <xref href="System.Windows.Controls.ValidationResult"></xref> objects for value equality.
  syntax:
    content: public static bool op_Equality (System.Windows.Controls.ValidationResult left, System.Windows.Controls.ValidationResult right);
    parameters:
    - id: left
      type: System.Windows.Controls.ValidationResult
      description: The first instance to compare.
    - id: right
      type: System.Windows.Controls.ValidationResult
      description: The second instance to compare.
    return:
      type: System.Boolean
      description: '`true` if the two objects are equal; otherwise, `false`.'
  overload: System.Windows.Controls.ValidationResult.op_Equality*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Controls/ValidationResult.xml
  ms.technology:
  - dotnet-wpf
  author: stevehoag
  ms.author: shoag
  manager: wpickett
- uid: System.Windows.Controls.ValidationResult.op_Inequality(System.Windows.Controls.ValidationResult,System.Windows.Controls.ValidationResult)
  commentId: M:System.Windows.Controls.ValidationResult.op_Inequality(System.Windows.Controls.ValidationResult,System.Windows.Controls.ValidationResult)
  id: op_Inequality(System.Windows.Controls.ValidationResult,System.Windows.Controls.ValidationResult)
  parent: System.Windows.Controls.ValidationResult
  langs:
  - csharp
  name: op_Inequality(ValidationResult, ValidationResult)
  nameWithType: ValidationResult.op_Inequality(ValidationResult, ValidationResult)
  fullName: ValidationResult.op_Inequality(ValidationResult, ValidationResult)
  type: Operator
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: Compares two <xref href="System.Windows.Controls.ValidationResult"></xref> objects for value inequality.
  syntax:
    content: public static bool op_Inequality (System.Windows.Controls.ValidationResult left, System.Windows.Controls.ValidationResult right);
    parameters:
    - id: left
      type: System.Windows.Controls.ValidationResult
      description: The first instance to compare.
    - id: right
      type: System.Windows.Controls.ValidationResult
      description: The second instance to compare.
    return:
      type: System.Boolean
      description: '`true` if the values are not equal; otherwise, `false`.'
  overload: System.Windows.Controls.ValidationResult.op_Inequality*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Controls/ValidationResult.xml
  ms.technology:
  - dotnet-wpf
  ms.author: kempb
  manager: ghogen
- uid: System.Windows.Controls.ValidationResult.ValidResult
  commentId: P:System.Windows.Controls.ValidationResult.ValidResult
  id: ValidResult
  parent: System.Windows.Controls.ValidationResult
  langs:
  - csharp
  name: ValidResult
  nameWithType: ValidationResult.ValidResult
  fullName: ValidationResult.ValidResult
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Controls
  summary: Gets a valid instance of <xref href="System.Windows.Controls.ValidationResult"></xref>.
  syntax:
    content: public static System.Windows.Controls.ValidationResult ValidResult { get; }
    return:
      type: System.Windows.Controls.ValidationResult
      description: A valid instance of <xref href="System.Windows.Controls.ValidationResult"></xref>.
  overload: System.Windows.Controls.ValidationResult.ValidResult*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Controls/ValidationResult.xml
  ms.technology:
  - dotnet-wpf
  author: stevehoag
  ms.author: shoag
  manager: wpickett
references:
- uid: System.Object
  parent: System
  isExternal: false
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Windows.Controls.ValidationResult.#ctor(System.Boolean,System.Object)
  parent: System.Windows.Controls.ValidationResult
  isExternal: false
  name: ValidationResult(Boolean, Object)
  nameWithType: ValidationResult.ValidationResult(Boolean, Object)
  fullName: ValidationResult.ValidationResult(Boolean, Object)
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Controls.ValidationResult.Equals(System.Object)
  parent: System.Windows.Controls.ValidationResult
  isExternal: false
  name: Equals(Object)
  nameWithType: ValidationResult.Equals(Object)
  fullName: ValidationResult.Equals(Object)
- uid: System.Windows.Controls.ValidationResult.ErrorContent
  parent: System.Windows.Controls.ValidationResult
  isExternal: false
  name: ErrorContent
  nameWithType: ValidationResult.ErrorContent
  fullName: ValidationResult.ErrorContent
- uid: System.Windows.Controls.ValidationResult.GetHashCode
  parent: System.Windows.Controls.ValidationResult
  isExternal: false
  name: GetHashCode()
  nameWithType: ValidationResult.GetHashCode()
  fullName: ValidationResult.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: false
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Windows.Controls.ValidationResult.IsValid
  parent: System.Windows.Controls.ValidationResult
  isExternal: false
  name: IsValid
  nameWithType: ValidationResult.IsValid
  fullName: ValidationResult.IsValid
- uid: System.Windows.Controls.ValidationResult.op_Equality(System.Windows.Controls.ValidationResult,System.Windows.Controls.ValidationResult)
  parent: System.Windows.Controls.ValidationResult
  isExternal: false
  name: op_Equality(ValidationResult, ValidationResult)
  nameWithType: ValidationResult.op_Equality(ValidationResult, ValidationResult)
  fullName: ValidationResult.op_Equality(ValidationResult, ValidationResult)
- uid: System.Windows.Controls.ValidationResult
  parent: System.Windows.Controls
  isExternal: false
  name: ValidationResult
  nameWithType: ValidationResult
  fullName: System.Windows.Controls.ValidationResult
- uid: System.Windows.Controls.ValidationResult.op_Inequality(System.Windows.Controls.ValidationResult,System.Windows.Controls.ValidationResult)
  parent: System.Windows.Controls.ValidationResult
  isExternal: false
  name: op_Inequality(ValidationResult, ValidationResult)
  nameWithType: ValidationResult.op_Inequality(ValidationResult, ValidationResult)
  fullName: ValidationResult.op_Inequality(ValidationResult, ValidationResult)
- uid: System.Windows.Controls.ValidationResult.ValidResult
  parent: System.Windows.Controls.ValidationResult
  isExternal: false
  name: ValidResult
  nameWithType: ValidationResult.ValidResult
  fullName: ValidationResult.ValidResult
- uid: System.Windows.Controls.ValidationResult.#ctor*
  parent: System.Windows.Controls.ValidationResult
  isExternal: false
  name: ValidationResult
  nameWithType: ValidationResult.ValidationResult
  fullName: ValidationResult.ValidationResult
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Controls/ValidationResult.xml
- uid: System.Windows.Controls.ValidationResult.Equals*
  parent: System.Windows.Controls.ValidationResult
  isExternal: false
  name: Equals
  nameWithType: ValidationResult.Equals
  fullName: ValidationResult.Equals
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Controls/ValidationResult.xml
- uid: System.Windows.Controls.ValidationResult.ErrorContent*
  parent: System.Windows.Controls.ValidationResult
  isExternal: false
  name: ErrorContent
  nameWithType: ValidationResult.ErrorContent
  fullName: ValidationResult.ErrorContent
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Controls/ValidationResult.xml
- uid: System.Windows.Controls.ValidationResult.GetHashCode*
  parent: System.Windows.Controls.ValidationResult
  isExternal: false
  name: GetHashCode
  nameWithType: ValidationResult.GetHashCode
  fullName: ValidationResult.GetHashCode
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Controls/ValidationResult.xml
- uid: System.Windows.Controls.ValidationResult.IsValid*
  parent: System.Windows.Controls.ValidationResult
  isExternal: false
  name: IsValid
  nameWithType: ValidationResult.IsValid
  fullName: ValidationResult.IsValid
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Controls/ValidationResult.xml
- uid: System.Windows.Controls.ValidationResult.op_Equality*
  parent: System.Windows.Controls.ValidationResult
  isExternal: false
  name: op_Equality
  nameWithType: ValidationResult.op_Equality
  fullName: ValidationResult.op_Equality
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Controls/ValidationResult.xml
- uid: System.Windows.Controls.ValidationResult.op_Inequality*
  parent: System.Windows.Controls.ValidationResult
  isExternal: false
  name: op_Inequality
  nameWithType: ValidationResult.op_Inequality
  fullName: ValidationResult.op_Inequality
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Controls/ValidationResult.xml
- uid: System.Windows.Controls.ValidationResult.ValidResult*
  parent: System.Windows.Controls.ValidationResult
  isExternal: false
  name: ValidResult
  nameWithType: ValidationResult.ValidResult
  fullName: ValidationResult.ValidResult
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Controls/ValidationResult.xml
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: Object.Equals(Object, Object)
- uid: System.Object.GetType
  parent: System.Object
  isExternal: false
  name: GetType()
  nameWithType: Object.GetType()
  fullName: Object.GetType()
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: false
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: Object.MemberwiseClone()
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: Object.ReferenceEquals(Object, Object)
- uid: System.Object.ToString
  parent: System.Object
  isExternal: false
  name: ToString()
  nameWithType: Object.ToString()
  fullName: Object.ToString()
