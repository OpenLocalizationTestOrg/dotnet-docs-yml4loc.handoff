{"nodes":[{"content":"Specifies settings for <xref href=\"System.ServiceModel.NetHttpBinding\"></xref>.","nodes":[{"pos":[0,79],"content":"Specifies settings for <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.NetHttpBinding\"&gt;&lt;/xref&gt;</ph>.","source":"Specifies settings for <xref href=\"System.ServiceModel.NetHttpBinding\"></xref>."}],"pos":[1248,1328],"yaml":true},{"content":"<xref:System.ServiceModel.NetHttpBinding>is a binding designed for consuming HTTP or WebSocket services and uses binary encoding by default. Note: WebSockets are only supported on Windows 8. <xref:System.ServiceModel.NetHttpBinding> will detect whether it is used with a request-reply contract or duplex contract and change its behavior to match - it will use HTTP for request-reply and WebSockets for duplex (only on Windows 8). This behavior can be overridden by setting the <xref:System.ServiceModel.Channels.WebSocketTransportUsage> property to one of the following values:  \n  \n1.  WhenDuplex- This is the default value and behaves as described above.  \n  \n2.  Never - This prevents WebSockets from being used. Attempting to use a duplex contract with this setting will result in an exception.  \n  \n3.  Always - This forces WebSockets to be used even for request-reply contracts.  \n  \n <xref:System.ServiceModel.NetHttpBinding>supports reliable sessions in both HTTP mode and WebSocket mode. In WebSocket mode sessions are provided by the transport.","nodes":[{"pos":[0,577],"content":"<xref:System.ServiceModel.NetHttpBinding>is a binding designed for consuming HTTP or WebSocket services and uses binary encoding by default. Note: WebSockets are only supported on Windows 8. <xref:System.ServiceModel.NetHttpBinding> will detect whether it is used with a request-reply contract or duplex contract and change its behavior to match - it will use HTTP for request-reply and WebSockets for duplex (only on Windows 8). This behavior can be overridden by setting the <xref:System.ServiceModel.Channels.WebSocketTransportUsage> property to one of the following values:","nodes":[{"content":"<xref:System.ServiceModel.NetHttpBinding>is a binding designed for consuming HTTP or WebSocket services and uses binary encoding by default. Note: WebSockets are only supported on Windows 8. <xref:System.ServiceModel.NetHttpBinding> will detect whether it is used with a request-reply contract or duplex contract and change its behavior to match - it will use HTTP for request-reply and WebSockets for duplex (only on Windows 8). This behavior can be overridden by setting the <xref:System.ServiceModel.Channels.WebSocketTransportUsage> property to one of the following values:","pos":[0,577],"nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.ServiceModel.NetHttpBinding&gt;</ph>is a binding designed for consuming HTTP or WebSocket services and uses binary encoding by default.","pos":[0,140],"source":"<xref:System.ServiceModel.NetHttpBinding>is a binding designed for consuming HTTP or WebSocket services and uses binary encoding by default."},{"content":"Note: WebSockets are only supported on Windows 8.","pos":[141,190]},{"content":"<ph id=\"ph1\">&lt;xref:System.ServiceModel.NetHttpBinding&gt;</ph> will detect whether it is used with a request-reply contract or duplex contract and change its behavior to match - it will use HTTP for request-reply and WebSockets for duplex (only on Windows 8).","pos":[191,429],"source":" <xref:System.ServiceModel.NetHttpBinding> will detect whether it is used with a request-reply contract or duplex contract and change its behavior to match - it will use HTTP for request-reply and WebSockets for duplex (only on Windows 8)."},{"content":"This behavior can be overridden by setting the <ph id=\"ph1\">&lt;xref:System.ServiceModel.Channels.WebSocketTransportUsage&gt;</ph> property to one of the following values:","pos":[430,577],"source":" This behavior can be overridden by setting the <xref:System.ServiceModel.Channels.WebSocketTransportUsage> property to one of the following values:"}]}]},{"pos":[587,656],"content":"WhenDuplex- This is the default value and behaves as described above.","nodes":[{"content":"WhenDuplex- This is the default value and behaves as described above.","pos":[0,69]}]},{"pos":[666,798],"content":"Never - This prevents WebSockets from being used. Attempting to use a duplex contract with this setting will result in an exception.","nodes":[{"content":"Never - This prevents WebSockets from being used. Attempting to use a duplex contract with this setting will result in an exception.","pos":[0,132],"nodes":[{"content":"Never - This prevents WebSockets from being used.","pos":[0,49]},{"content":"Attempting to use a duplex contract with this setting will result in an exception.","pos":[50,132]}]}]},{"pos":[808,884],"content":"Always - This forces WebSockets to be used even for request-reply contracts.","nodes":[{"content":"Always - This forces WebSockets to be used even for request-reply contracts.","pos":[0,76]}]},{"pos":[891,1054],"content":"<xref:System.ServiceModel.NetHttpBinding>supports reliable sessions in both HTTP mode and WebSocket mode. In WebSocket mode sessions are provided by the transport.","nodes":[{"content":"<xref:System.ServiceModel.NetHttpBinding>supports reliable sessions in both HTTP mode and WebSocket mode. In WebSocket mode sessions are provided by the transport.","pos":[0,163],"nodes":[{"content":"<ph id=\"ph1\">&lt;xref:System.ServiceModel.NetHttpBinding&gt;</ph>supports reliable sessions in both HTTP mode and WebSocket mode.","pos":[0,105],"source":"<xref:System.ServiceModel.NetHttpBinding>supports reliable sessions in both HTTP mode and WebSocket mode."},{"content":"In WebSocket mode sessions are provided by the transport.","pos":[106,163]}]}]}],"pos":[1339,2404],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.ServiceModel.NetHttpBinding\"></xref> class.","nodes":[{"pos":[0,96],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.NetHttpBinding\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.ServiceModel.NetHttpBinding\"></xref> class."}],"pos":[7044,7141],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.ServiceModel.NetHttpBinding\"></xref> class with the specified security mode.","nodes":[{"pos":[0,129],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.NetHttpBinding\"&gt;&lt;/xref&gt;</ph> class with the specified security mode.","source":"Initializes a new instance of the <xref href=\"System.ServiceModel.NetHttpBinding\"></xref> class with the specified security mode."}],"pos":[8528,8658],"yaml":true},{"content":"The mode of the security.","nodes":[{"pos":[0,25],"content":"The mode of the security.","nodes":[{"content":"The mode of the security.","pos":[0,25]}]}],"pos":[8873,8899],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.ServiceModel.NetHttpBinding\"></xref> class with the specified configuration name.","nodes":[{"pos":[0,134],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.NetHttpBinding\"&gt;&lt;/xref&gt;</ph> class with the specified configuration name.","source":"Initializes a new instance of the <xref href=\"System.ServiceModel.NetHttpBinding\"></xref> class with the specified configuration name."}],"pos":[10089,10224],"yaml":true},{"content":"The name of the configuration.","nodes":[{"pos":[0,30],"content":"The name of the configuration.","nodes":[{"content":"The name of the configuration.","pos":[0,30]}]}],"pos":[10386,10417],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.ServiceModel.NetHttpBinding\"></xref> class with the specified security mode.","nodes":[{"pos":[0,129],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.NetHttpBinding\"&gt;&lt;/xref&gt;</ph> class with the specified security mode.","source":"Initializes a new instance of the <xref href=\"System.ServiceModel.NetHttpBinding\"></xref> class with the specified security mode."}],"pos":[11808,11938],"yaml":true},{"content":"The mode of the security.","nodes":[{"pos":[0,25],"content":"The mode of the security.","nodes":[{"content":"The mode of the security.","pos":[0,25]}]}],"pos":[12182,12208],"yaml":true},{"content":"`true` to indicate that the reliable session was enabled; otherwise, `false`.","nodes":[{"pos":[0,77],"content":"<ph id=\"ph1\">`true`</ph> to indicate that the reliable session was enabled; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` to indicate that the reliable session was enabled; otherwise, `false`."}],"pos":[12287,12367],"yaml":true},{"content":"Builds the channel factory stack on the client that creates a specified type of channel and that satisfies the features specified by a collection of binding parameters.","nodes":[{"pos":[0,168],"content":"Builds the channel factory stack on the client that creates a specified type of channel and that satisfies the features specified by a collection of binding parameters.","nodes":[{"content":"Builds the channel factory stack on the client that creates a specified type of channel and that satisfies the features specified by a collection of binding parameters.","pos":[0,168]}]}],"pos":[13832,14001],"yaml":true},{"content":"The collection of parameters that specifies requirements for the channel factory built.","nodes":[{"pos":[0,87],"content":"The collection of parameters that specifies requirements for the channel factory built.","nodes":[{"content":"The collection of parameters that specifies requirements for the channel factory built.","pos":[0,87]}]}],"pos":[14319,14407],"yaml":true},{"content":"The type of channel the channel factory produces.","nodes":[{"pos":[0,49],"content":"The type of channel the channel factory produces.","nodes":[{"content":"The type of channel the channel factory produces.","pos":[0,49]}]}],"pos":[14465,14515],"yaml":true},{"content":"The channel factory that satisfies the features specified by the collection.","nodes":[{"pos":[0,76],"content":"The channel factory that satisfies the features specified by the collection.","nodes":[{"content":"The channel factory that satisfies the features specified by the collection.","pos":[0,76]}]}],"pos":[14605,14682],"yaml":true},{"content":"Creates a collection that contains the binding elements for the binding.","nodes":[{"pos":[0,72],"content":"Creates a collection that contains the binding elements for the binding.","nodes":[{"content":"Creates a collection that contains the binding elements for the binding.","pos":[0,72]}]}],"pos":[15764,15837],"yaml":true},{"content":"A collection of the binding elements that makes up the binding.","nodes":[{"pos":[0,63],"content":"A collection of the binding elements that makes up the binding.","nodes":[{"content":"A collection of the binding elements that makes up the binding.","pos":[0,63]}]}],"pos":[16072,16136],"yaml":true},{"content":"Gets or sets the type of the message encoding that is used to encode the message.","nodes":[{"pos":[0,81],"content":"Gets or sets the type of the message encoding that is used to encode the message.","nodes":[{"content":"Gets or sets the type of the message encoding that is used to encode the message.","pos":[0,81]}]}],"pos":[17301,17383],"yaml":true},{"content":"The type of the message encoding that is used to encode the message.","nodes":[{"pos":[0,68],"content":"The type of the message encoding that is used to encode the message.","nodes":[{"content":"The type of the message encoding that is used to encode the message.","pos":[0,68]}]}],"pos":[17572,17641],"yaml":true},{"content":"Gets or sets an object that indicates whether a reliable session is established between channel endpoints.","nodes":[{"pos":[0,106],"content":"Gets or sets an object that indicates whether a reliable session is established between channel endpoints.","nodes":[{"content":"Gets or sets an object that indicates whether a reliable session is established between channel endpoints.","pos":[0,106]}]}],"pos":[18800,18907],"yaml":true},{"content":"An object that indicates whether a reliable session is established between channel endpoints.","nodes":[{"pos":[0,93],"content":"An object that indicates whether a reliable session is established between channel endpoints.","nodes":[{"content":"An object that indicates whether a reliable session is established between channel endpoints.","pos":[0,93]}]}],"pos":[19098,19192],"yaml":true},{"content":"Gets or sets the security used with services configured with the binding.","nodes":[{"pos":[0,73],"content":"Gets or sets the security used with services configured with the binding.","nodes":[{"content":"Gets or sets the security used with services configured with the binding.","pos":[0,73]}]}],"pos":[21114,21188],"yaml":true},{"content":"The security used with services configured with the binding.","nodes":[{"pos":[0,60],"content":"The security used with services configured with the binding.","nodes":[{"content":"The security used with services configured with the binding.","pos":[0,60]}]}],"pos":[21360,21421],"yaml":true},{"content":"Indicates whether the reliable session has changed from its default value and should be serialized.","nodes":[{"pos":[0,99],"content":"Indicates whether the reliable session has changed from its default value and should be serialized.","nodes":[{"content":"Indicates whether the reliable session has changed from its default value and should be serialized.","pos":[0,99]}]}],"pos":[22667,22767],"yaml":true},{"content":"`true` if the reliable session should be serialized; otherwise, `false`.","nodes":[{"pos":[0,72],"content":"<ph id=\"ph1\">`true`</ph> if the reliable session should be serialized; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the reliable session should be serialized; otherwise, `false`."}],"pos":[22914,22989],"yaml":true},{"content":"Indicates whether the security has changed from its default value and should be serialized.","nodes":[{"pos":[0,91],"content":"Indicates whether the security has changed from its default value and should be serialized.","nodes":[{"content":"Indicates whether the security has changed from its default value and should be serialized.","pos":[0,91]}]}],"pos":[24215,24307],"yaml":true},{"content":"`true` if the security should be serialized; otherwise, `false`.","nodes":[{"pos":[0,64],"content":"<ph id=\"ph1\">`true`</ph> if the security should be serialized; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the security should be serialized; otherwise, `false`."}],"pos":[24447,24514],"yaml":true},{"content":"Gets the settings of the websocket.","nodes":[{"pos":[0,35],"content":"Gets the settings of the websocket.","nodes":[{"content":"Gets the settings of the websocket.","pos":[0,35]}]}],"pos":[25693,25729],"yaml":true},{"content":"The settings of the websocket.","nodes":[{"pos":[0,30],"content":"The settings of the websocket.","nodes":[{"content":"The settings of the websocket.","pos":[0,30]}]}],"pos":[25941,25972],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.ServiceModel.NetHttpBinding\n  commentId: T:System.ServiceModel.NetHttpBinding\n  id: NetHttpBinding\n  children:\n  - System.ServiceModel.NetHttpBinding.#ctor\n  - System.ServiceModel.NetHttpBinding.#ctor(System.ServiceModel.BasicHttpSecurityMode)\n  - System.ServiceModel.NetHttpBinding.#ctor(System.String)\n  - System.ServiceModel.NetHttpBinding.#ctor(System.ServiceModel.BasicHttpSecurityMode,System.Boolean)\n  - System.ServiceModel.NetHttpBinding.BuildChannelFactory``1(System.ServiceModel.Channels.BindingParameterCollection)\n  - System.ServiceModel.NetHttpBinding.CreateBindingElements\n  - System.ServiceModel.NetHttpBinding.MessageEncoding\n  - System.ServiceModel.NetHttpBinding.ReliableSession\n  - System.ServiceModel.NetHttpBinding.Scheme\n  - System.ServiceModel.NetHttpBinding.Security\n  - System.ServiceModel.NetHttpBinding.ShouldSerializeReliableSession\n  - System.ServiceModel.NetHttpBinding.ShouldSerializeSecurity\n  - System.ServiceModel.NetHttpBinding.WebSocketSettings\n  langs:\n  - csharp\n  name: NetHttpBinding\n  nameWithType: NetHttpBinding\n  fullName: System.ServiceModel.NetHttpBinding\n  type: Class\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  summary: Specifies settings for <xref href=\"System.ServiceModel.NetHttpBinding\"></xref>.\n  remarks: \"<xref:System.ServiceModel.NetHttpBinding>is a binding designed for consuming HTTP or WebSocket services and uses binary encoding by default. Note: WebSockets are only supported on Windows 8. <xref:System.ServiceModel.NetHttpBinding> will detect whether it is used with a request-reply contract or duplex contract and change its behavior to match - it will use HTTP for request-reply and WebSockets for duplex (only on Windows 8). This behavior can be overridden by setting the <xref:System.ServiceModel.Channels.WebSocketTransportUsage> property to one of the following values:  \\n  \\n1.  WhenDuplex- This is the default value and behaves as described above.  \\n  \\n2.  Never - This prevents WebSockets from being used. Attempting to use a duplex contract with this setting will result in an exception.  \\n  \\n3.  Always - This forces WebSockets to be used even for request-reply contracts.  \\n  \\n <xref:System.ServiceModel.NetHttpBinding>supports reliable sessions in both HTTP mode and WebSocket mode. In WebSocket mode sessions are provided by the transport.\"\n  syntax:\n    content: 'public class NetHttpBinding : System.ServiceModel.HttpBindingBase'\n  inheritance:\n  - System.Object\n  - System.ServiceModel.Channels.Binding\n  - System.ServiceModel.HttpBindingBase\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  - System.ServiceModel.Channels.Binding.BuildChannelFactory``1(System.Object[])\n  - System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Object[])\n  - System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.ServiceModel.Channels.BindingParameterCollection)\n  - System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.Object[])\n  - System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.ServiceModel.Channels.BindingParameterCollection)\n  - System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.String,System.Object[])\n  - System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.String,System.ServiceModel.Channels.BindingParameterCollection)\n  - System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.String,System.ServiceModel.Description.ListenUriMode,System.Object[])\n  - System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.String,System.ServiceModel.Description.ListenUriMode,System.ServiceModel.Channels.BindingParameterCollection)\n  - System.ServiceModel.Channels.Binding.CanBuildChannelFactory``1(System.Object[])\n  - System.ServiceModel.Channels.Binding.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingParameterCollection)\n  - System.ServiceModel.Channels.Binding.CanBuildChannelListener``1(System.Object[])\n  - System.ServiceModel.Channels.Binding.CanBuildChannelListener``1(System.ServiceModel.Channels.BindingParameterCollection)\n  - System.ServiceModel.Channels.Binding.CloseTimeout\n  - System.ServiceModel.Channels.Binding.GetProperty``1(System.ServiceModel.Channels.BindingParameterCollection)\n  - System.ServiceModel.Channels.Binding.MessageVersion\n  - System.ServiceModel.Channels.Binding.Name\n  - System.ServiceModel.Channels.Binding.Namespace\n  - System.ServiceModel.Channels.Binding.OpenTimeout\n  - System.ServiceModel.Channels.Binding.ReceiveTimeout\n  - System.ServiceModel.Channels.Binding.SendTimeout\n  - System.ServiceModel.Channels.Binding.ShouldSerializeName\n  - System.ServiceModel.Channels.Binding.ShouldSerializeNamespace\n  - System.ServiceModel.HttpBindingBase.AllowCookies\n  - System.ServiceModel.HttpBindingBase.BypassProxyOnLocal\n  - System.ServiceModel.HttpBindingBase.EnvelopeVersion\n  - System.ServiceModel.HttpBindingBase.HostNameComparisonMode\n  - System.ServiceModel.HttpBindingBase.MaxBufferPoolSize\n  - System.ServiceModel.HttpBindingBase.MaxBufferSize\n  - System.ServiceModel.HttpBindingBase.MaxReceivedMessageSize\n  - System.ServiceModel.HttpBindingBase.ProxyAddress\n  - System.ServiceModel.HttpBindingBase.ReaderQuotas\n  - System.ServiceModel.HttpBindingBase.ShouldSerializeReaderQuotas\n  - System.ServiceModel.HttpBindingBase.ShouldSerializeTextEncoding\n  - System.ServiceModel.HttpBindingBase.System#ServiceModel#Channels#IBindingRuntimePreferences#ReceiveSynchronously\n  - System.ServiceModel.HttpBindingBase.TextEncoding\n  - System.ServiceModel.HttpBindingBase.TransferMode\n  - System.ServiceModel.HttpBindingBase.UseDefaultWebProxy\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/NetHttpBinding.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.NetHttpBinding.#ctor\n  commentId: M:System.ServiceModel.NetHttpBinding.#ctor\n  id: '#ctor'\n  parent: System.ServiceModel.NetHttpBinding\n  langs:\n  - csharp\n  name: NetHttpBinding()\n  nameWithType: NetHttpBinding.NetHttpBinding()\n  fullName: NetHttpBinding.NetHttpBinding()\n  type: Constructor\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  summary: Initializes a new instance of the <xref href=\"System.ServiceModel.NetHttpBinding\"></xref> class.\n  syntax:\n    content: public NetHttpBinding ();\n    parameters: []\n  overload: System.ServiceModel.NetHttpBinding.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/NetHttpBinding.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.NetHttpBinding.#ctor(System.ServiceModel.BasicHttpSecurityMode)\n  commentId: M:System.ServiceModel.NetHttpBinding.#ctor(System.ServiceModel.BasicHttpSecurityMode)\n  id: '#ctor(System.ServiceModel.BasicHttpSecurityMode)'\n  parent: System.ServiceModel.NetHttpBinding\n  langs:\n  - csharp\n  name: NetHttpBinding(BasicHttpSecurityMode)\n  nameWithType: NetHttpBinding.NetHttpBinding(BasicHttpSecurityMode)\n  fullName: NetHttpBinding.NetHttpBinding(BasicHttpSecurityMode)\n  type: Constructor\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  summary: Initializes a new instance of the <xref href=\"System.ServiceModel.NetHttpBinding\"></xref> class with the specified security mode.\n  syntax:\n    content: public NetHttpBinding (System.ServiceModel.BasicHttpSecurityMode securityMode);\n    parameters:\n    - id: securityMode\n      type: System.ServiceModel.BasicHttpSecurityMode\n      description: The mode of the security.\n  overload: System.ServiceModel.NetHttpBinding.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/NetHttpBinding.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.NetHttpBinding.#ctor(System.String)\n  commentId: M:System.ServiceModel.NetHttpBinding.#ctor(System.String)\n  id: '#ctor(System.String)'\n  parent: System.ServiceModel.NetHttpBinding\n  langs:\n  - csharp\n  name: NetHttpBinding(String)\n  nameWithType: NetHttpBinding.NetHttpBinding(String)\n  fullName: NetHttpBinding.NetHttpBinding(String)\n  type: Constructor\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  summary: Initializes a new instance of the <xref href=\"System.ServiceModel.NetHttpBinding\"></xref> class with the specified configuration name.\n  syntax:\n    content: public NetHttpBinding (string configurationName);\n    parameters:\n    - id: configurationName\n      type: System.String\n      description: The name of the configuration.\n  overload: System.ServiceModel.NetHttpBinding.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/NetHttpBinding.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.NetHttpBinding.#ctor(System.ServiceModel.BasicHttpSecurityMode,System.Boolean)\n  commentId: M:System.ServiceModel.NetHttpBinding.#ctor(System.ServiceModel.BasicHttpSecurityMode,System.Boolean)\n  id: '#ctor(System.ServiceModel.BasicHttpSecurityMode,System.Boolean)'\n  parent: System.ServiceModel.NetHttpBinding\n  langs:\n  - csharp\n  name: NetHttpBinding(BasicHttpSecurityMode, Boolean)\n  nameWithType: NetHttpBinding.NetHttpBinding(BasicHttpSecurityMode, Boolean)\n  fullName: NetHttpBinding.NetHttpBinding(BasicHttpSecurityMode, Boolean)\n  type: Constructor\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  summary: Initializes a new instance of the <xref href=\"System.ServiceModel.NetHttpBinding\"></xref> class with the specified security mode.\n  syntax:\n    content: public NetHttpBinding (System.ServiceModel.BasicHttpSecurityMode securityMode, bool reliableSessionEnabled);\n    parameters:\n    - id: securityMode\n      type: System.ServiceModel.BasicHttpSecurityMode\n      description: The mode of the security.\n    - id: reliableSessionEnabled\n      type: System.Boolean\n      description: '`true` to indicate that the reliable session was enabled; otherwise, `false`.'\n  overload: System.ServiceModel.NetHttpBinding.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/NetHttpBinding.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.NetHttpBinding.BuildChannelFactory``1(System.ServiceModel.Channels.BindingParameterCollection)\n  commentId: M:System.ServiceModel.NetHttpBinding.BuildChannelFactory``1(System.ServiceModel.Channels.BindingParameterCollection)\n  id: BuildChannelFactory``1(System.ServiceModel.Channels.BindingParameterCollection)\n  parent: System.ServiceModel.NetHttpBinding\n  langs:\n  - csharp\n  name: BuildChannelFactory<TChannel>(BindingParameterCollection)\n  nameWithType: NetHttpBinding.BuildChannelFactory<TChannel>(BindingParameterCollection)\n  fullName: NetHttpBinding.BuildChannelFactory<TChannel>(BindingParameterCollection)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  summary: Builds the channel factory stack on the client that creates a specified type of channel and that satisfies the features specified by a collection of binding parameters.\n  syntax:\n    content: public override System.ServiceModel.Channels.IChannelFactory<TChannel> BuildChannelFactory<TChannel> (System.ServiceModel.Channels.BindingParameterCollection parameters);\n    parameters:\n    - id: parameters\n      type: System.ServiceModel.Channels.BindingParameterCollection\n      description: The collection of parameters that specifies requirements for the channel factory built.\n    typeParameters:\n    - id: TChannel\n      description: The type of channel the channel factory produces.\n    return:\n      type: System.ServiceModel.Channels.IChannelFactory`1\n      description: The channel factory that satisfies the features specified by the collection.\n  overload: System.ServiceModel.NetHttpBinding.BuildChannelFactory``1*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/NetHttpBinding.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.NetHttpBinding.CreateBindingElements\n  commentId: M:System.ServiceModel.NetHttpBinding.CreateBindingElements\n  id: CreateBindingElements\n  parent: System.ServiceModel.NetHttpBinding\n  langs:\n  - csharp\n  name: CreateBindingElements()\n  nameWithType: NetHttpBinding.CreateBindingElements()\n  fullName: NetHttpBinding.CreateBindingElements()\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  summary: Creates a collection that contains the binding elements for the binding.\n  syntax:\n    content: public override System.ServiceModel.Channels.BindingElementCollection CreateBindingElements ();\n    parameters: []\n    return:\n      type: System.ServiceModel.Channels.BindingElementCollection\n      description: A collection of the binding elements that makes up the binding.\n  overload: System.ServiceModel.NetHttpBinding.CreateBindingElements*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/NetHttpBinding.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.NetHttpBinding.MessageEncoding\n  commentId: P:System.ServiceModel.NetHttpBinding.MessageEncoding\n  id: MessageEncoding\n  parent: System.ServiceModel.NetHttpBinding\n  langs:\n  - csharp\n  name: MessageEncoding\n  nameWithType: NetHttpBinding.MessageEncoding\n  fullName: NetHttpBinding.MessageEncoding\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  summary: Gets or sets the type of the message encoding that is used to encode the message.\n  syntax:\n    content: public System.ServiceModel.NetHttpMessageEncoding MessageEncoding { get; set; }\n    return:\n      type: System.ServiceModel.NetHttpMessageEncoding\n      description: The type of the message encoding that is used to encode the message.\n  overload: System.ServiceModel.NetHttpBinding.MessageEncoding*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/NetHttpBinding.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.NetHttpBinding.ReliableSession\n  commentId: P:System.ServiceModel.NetHttpBinding.ReliableSession\n  id: ReliableSession\n  parent: System.ServiceModel.NetHttpBinding\n  langs:\n  - csharp\n  name: ReliableSession\n  nameWithType: NetHttpBinding.ReliableSession\n  fullName: NetHttpBinding.ReliableSession\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  summary: Gets or sets an object that indicates whether a reliable session is established between channel endpoints.\n  syntax:\n    content: public System.ServiceModel.OptionalReliableSession ReliableSession { get; set; }\n    return:\n      type: System.ServiceModel.OptionalReliableSession\n      description: An object that indicates whether a reliable session is established between channel endpoints.\n  overload: System.ServiceModel.NetHttpBinding.ReliableSession*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/NetHttpBinding.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.NetHttpBinding.Scheme\n  commentId: P:System.ServiceModel.NetHttpBinding.Scheme\n  id: Scheme\n  parent: System.ServiceModel.NetHttpBinding\n  langs:\n  - csharp\n  name: Scheme\n  nameWithType: NetHttpBinding.Scheme\n  fullName: NetHttpBinding.Scheme\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  syntax:\n    content: public override string Scheme { get; }\n    return:\n      type: System.String\n      description: ''\n  overload: System.ServiceModel.NetHttpBinding.Scheme*\n  exceptions: []\n  version:\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/NetHttpBinding.xml\n- uid: System.ServiceModel.NetHttpBinding.Security\n  commentId: P:System.ServiceModel.NetHttpBinding.Security\n  id: Security\n  parent: System.ServiceModel.NetHttpBinding\n  langs:\n  - csharp\n  name: Security\n  nameWithType: NetHttpBinding.Security\n  fullName: NetHttpBinding.Security\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  summary: Gets or sets the security used with services configured with the binding.\n  syntax:\n    content: public System.ServiceModel.BasicHttpSecurity Security { get; set; }\n    return:\n      type: System.ServiceModel.BasicHttpSecurity\n      description: The security used with services configured with the binding.\n  overload: System.ServiceModel.NetHttpBinding.Security*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/NetHttpBinding.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.NetHttpBinding.ShouldSerializeReliableSession\n  commentId: M:System.ServiceModel.NetHttpBinding.ShouldSerializeReliableSession\n  id: ShouldSerializeReliableSession\n  parent: System.ServiceModel.NetHttpBinding\n  langs:\n  - csharp\n  name: ShouldSerializeReliableSession()\n  nameWithType: NetHttpBinding.ShouldSerializeReliableSession()\n  fullName: NetHttpBinding.ShouldSerializeReliableSession()\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  summary: Indicates whether the reliable session has changed from its default value and should be serialized.\n  syntax:\n    content: public bool ShouldSerializeReliableSession ();\n    parameters: []\n    return:\n      type: System.Boolean\n      description: '`true` if the reliable session should be serialized; otherwise, `false`.'\n  overload: System.ServiceModel.NetHttpBinding.ShouldSerializeReliableSession*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/NetHttpBinding.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.NetHttpBinding.ShouldSerializeSecurity\n  commentId: M:System.ServiceModel.NetHttpBinding.ShouldSerializeSecurity\n  id: ShouldSerializeSecurity\n  parent: System.ServiceModel.NetHttpBinding\n  langs:\n  - csharp\n  name: ShouldSerializeSecurity()\n  nameWithType: NetHttpBinding.ShouldSerializeSecurity()\n  fullName: NetHttpBinding.ShouldSerializeSecurity()\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  summary: Indicates whether the security has changed from its default value and should be serialized.\n  syntax:\n    content: public bool ShouldSerializeSecurity ();\n    parameters: []\n    return:\n      type: System.Boolean\n      description: '`true` if the security should be serialized; otherwise, `false`.'\n  overload: System.ServiceModel.NetHttpBinding.ShouldSerializeSecurity*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/NetHttpBinding.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.NetHttpBinding.WebSocketSettings\n  commentId: P:System.ServiceModel.NetHttpBinding.WebSocketSettings\n  id: WebSocketSettings\n  parent: System.ServiceModel.NetHttpBinding\n  langs:\n  - csharp\n  name: WebSocketSettings\n  nameWithType: NetHttpBinding.WebSocketSettings\n  fullName: NetHttpBinding.WebSocketSettings\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel\n  summary: Gets the settings of the websocket.\n  syntax:\n    content: public System.ServiceModel.Channels.WebSocketTransportSettings WebSocketSettings { get; }\n    return:\n      type: System.ServiceModel.Channels.WebSocketTransportSettings\n      description: The settings of the websocket.\n  overload: System.ServiceModel.NetHttpBinding.WebSocketSettings*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/NetHttpBinding.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\nreferences:\n- uid: System.ServiceModel.HttpBindingBase\n  parent: System.ServiceModel\n  isExternal: false\n  name: HttpBindingBase\n  nameWithType: HttpBindingBase\n  fullName: System.ServiceModel.HttpBindingBase\n- uid: System.ServiceModel.NetHttpBinding.#ctor\n  parent: System.ServiceModel.NetHttpBinding\n  isExternal: false\n  name: NetHttpBinding()\n  nameWithType: NetHttpBinding.NetHttpBinding()\n  fullName: NetHttpBinding.NetHttpBinding()\n- uid: System.ServiceModel.NetHttpBinding.#ctor(System.ServiceModel.BasicHttpSecurityMode)\n  parent: System.ServiceModel.NetHttpBinding\n  isExternal: false\n  name: NetHttpBinding(BasicHttpSecurityMode)\n  nameWithType: NetHttpBinding.NetHttpBinding(BasicHttpSecurityMode)\n  fullName: NetHttpBinding.NetHttpBinding(BasicHttpSecurityMode)\n- uid: System.ServiceModel.BasicHttpSecurityMode\n  parent: System.ServiceModel\n  isExternal: false\n  name: BasicHttpSecurityMode\n  nameWithType: BasicHttpSecurityMode\n  fullName: System.ServiceModel.BasicHttpSecurityMode\n- uid: System.ServiceModel.NetHttpBinding.#ctor(System.String)\n  parent: System.ServiceModel.NetHttpBinding\n  isExternal: false\n  name: NetHttpBinding(String)\n  nameWithType: NetHttpBinding.NetHttpBinding(String)\n  fullName: NetHttpBinding.NetHttpBinding(String)\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.ServiceModel.NetHttpBinding.#ctor(System.ServiceModel.BasicHttpSecurityMode,System.Boolean)\n  parent: System.ServiceModel.NetHttpBinding\n  isExternal: false\n  name: NetHttpBinding(BasicHttpSecurityMode, Boolean)\n  nameWithType: NetHttpBinding.NetHttpBinding(BasicHttpSecurityMode, Boolean)\n  fullName: NetHttpBinding.NetHttpBinding(BasicHttpSecurityMode, Boolean)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.ServiceModel.NetHttpBinding.BuildChannelFactory``1(System.ServiceModel.Channels.BindingParameterCollection)\n  parent: System.ServiceModel.NetHttpBinding\n  isExternal: false\n  name: BuildChannelFactory<TChannel>(BindingParameterCollection)\n  nameWithType: NetHttpBinding.BuildChannelFactory<TChannel>(BindingParameterCollection)\n  fullName: NetHttpBinding.BuildChannelFactory<TChannel>(BindingParameterCollection)\n- uid: System.ServiceModel.Channels.IChannelFactory`1\n  parent: System.ServiceModel.Channels\n  isExternal: false\n  name: IChannelFactory<TChannel>\n  nameWithType: IChannelFactory<TChannel>\n  fullName: System.ServiceModel.Channels.IChannelFactory<TChannel>\n- uid: System.ServiceModel.Channels.BindingParameterCollection\n  parent: System.ServiceModel.Channels\n  isExternal: false\n  name: BindingParameterCollection\n  nameWithType: BindingParameterCollection\n  fullName: System.ServiceModel.Channels.BindingParameterCollection\n- uid: System.ServiceModel.NetHttpBinding.CreateBindingElements\n  parent: System.ServiceModel.NetHttpBinding\n  isExternal: false\n  name: CreateBindingElements()\n  nameWithType: NetHttpBinding.CreateBindingElements()\n  fullName: NetHttpBinding.CreateBindingElements()\n- uid: System.ServiceModel.Channels.BindingElementCollection\n  parent: System.ServiceModel.Channels\n  isExternal: false\n  name: BindingElementCollection\n  nameWithType: BindingElementCollection\n  fullName: System.ServiceModel.Channels.BindingElementCollection\n- uid: System.ServiceModel.NetHttpBinding.MessageEncoding\n  parent: System.ServiceModel.NetHttpBinding\n  isExternal: false\n  name: MessageEncoding\n  nameWithType: NetHttpBinding.MessageEncoding\n  fullName: NetHttpBinding.MessageEncoding\n- uid: System.ServiceModel.NetHttpMessageEncoding\n  parent: System.ServiceModel\n  isExternal: false\n  name: NetHttpMessageEncoding\n  nameWithType: NetHttpMessageEncoding\n  fullName: System.ServiceModel.NetHttpMessageEncoding\n- uid: System.ServiceModel.NetHttpBinding.ReliableSession\n  parent: System.ServiceModel.NetHttpBinding\n  isExternal: false\n  name: ReliableSession\n  nameWithType: NetHttpBinding.ReliableSession\n  fullName: NetHttpBinding.ReliableSession\n- uid: System.ServiceModel.OptionalReliableSession\n  parent: System.ServiceModel\n  isExternal: false\n  name: OptionalReliableSession\n  nameWithType: OptionalReliableSession\n  fullName: System.ServiceModel.OptionalReliableSession\n- uid: System.ServiceModel.NetHttpBinding.Scheme\n  parent: System.ServiceModel.NetHttpBinding\n  isExternal: false\n  name: Scheme\n  nameWithType: NetHttpBinding.Scheme\n  fullName: NetHttpBinding.Scheme\n- uid: System.ServiceModel.NetHttpBinding.Security\n  parent: System.ServiceModel.NetHttpBinding\n  isExternal: false\n  name: Security\n  nameWithType: NetHttpBinding.Security\n  fullName: NetHttpBinding.Security\n- uid: System.ServiceModel.BasicHttpSecurity\n  parent: System.ServiceModel\n  isExternal: false\n  name: BasicHttpSecurity\n  nameWithType: BasicHttpSecurity\n  fullName: System.ServiceModel.BasicHttpSecurity\n- uid: System.ServiceModel.NetHttpBinding.ShouldSerializeReliableSession\n  parent: System.ServiceModel.NetHttpBinding\n  isExternal: false\n  name: ShouldSerializeReliableSession()\n  nameWithType: NetHttpBinding.ShouldSerializeReliableSession()\n  fullName: NetHttpBinding.ShouldSerializeReliableSession()\n- uid: System.ServiceModel.NetHttpBinding.ShouldSerializeSecurity\n  parent: System.ServiceModel.NetHttpBinding\n  isExternal: false\n  name: ShouldSerializeSecurity()\n  nameWithType: NetHttpBinding.ShouldSerializeSecurity()\n  fullName: NetHttpBinding.ShouldSerializeSecurity()\n- uid: System.ServiceModel.NetHttpBinding.WebSocketSettings\n  parent: System.ServiceModel.NetHttpBinding\n  isExternal: false\n  name: WebSocketSettings\n  nameWithType: NetHttpBinding.WebSocketSettings\n  fullName: NetHttpBinding.WebSocketSettings\n- uid: System.ServiceModel.Channels.WebSocketTransportSettings\n  parent: System.ServiceModel.Channels\n  isExternal: false\n  name: WebSocketTransportSettings\n  nameWithType: WebSocketTransportSettings\n  fullName: System.ServiceModel.Channels.WebSocketTransportSettings\n- uid: System.ServiceModel.NetHttpBinding.#ctor*\n  parent: System.ServiceModel.NetHttpBinding\n  isExternal: false\n  name: NetHttpBinding\n  nameWithType: NetHttpBinding.NetHttpBinding\n  fullName: NetHttpBinding.NetHttpBinding\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/NetHttpBinding.xml\n- uid: System.ServiceModel.NetHttpBinding.BuildChannelFactory``1*\n  parent: System.ServiceModel.NetHttpBinding\n  isExternal: false\n  name: BuildChannelFactory<TChannel>\n  nameWithType: NetHttpBinding.BuildChannelFactory<TChannel>\n  fullName: NetHttpBinding.BuildChannelFactory<TChannel>\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/NetHttpBinding.xml\n- uid: System.ServiceModel.NetHttpBinding.CreateBindingElements*\n  parent: System.ServiceModel.NetHttpBinding\n  isExternal: false\n  name: CreateBindingElements\n  nameWithType: NetHttpBinding.CreateBindingElements\n  fullName: NetHttpBinding.CreateBindingElements\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/NetHttpBinding.xml\n- uid: System.ServiceModel.NetHttpBinding.MessageEncoding*\n  parent: System.ServiceModel.NetHttpBinding\n  isExternal: false\n  name: MessageEncoding\n  nameWithType: NetHttpBinding.MessageEncoding\n  fullName: NetHttpBinding.MessageEncoding\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/NetHttpBinding.xml\n- uid: System.ServiceModel.NetHttpBinding.ReliableSession*\n  parent: System.ServiceModel.NetHttpBinding\n  isExternal: false\n  name: ReliableSession\n  nameWithType: NetHttpBinding.ReliableSession\n  fullName: NetHttpBinding.ReliableSession\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/NetHttpBinding.xml\n- uid: System.ServiceModel.NetHttpBinding.Scheme*\n  parent: System.ServiceModel.NetHttpBinding\n  isExternal: false\n  name: Scheme\n  nameWithType: NetHttpBinding.Scheme\n  fullName: NetHttpBinding.Scheme\n  monikers:\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/NetHttpBinding.xml\n- uid: System.ServiceModel.NetHttpBinding.Security*\n  parent: System.ServiceModel.NetHttpBinding\n  isExternal: false\n  name: Security\n  nameWithType: NetHttpBinding.Security\n  fullName: NetHttpBinding.Security\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/NetHttpBinding.xml\n- uid: System.ServiceModel.NetHttpBinding.ShouldSerializeReliableSession*\n  parent: System.ServiceModel.NetHttpBinding\n  isExternal: false\n  name: ShouldSerializeReliableSession\n  nameWithType: NetHttpBinding.ShouldSerializeReliableSession\n  fullName: NetHttpBinding.ShouldSerializeReliableSession\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/NetHttpBinding.xml\n- uid: System.ServiceModel.NetHttpBinding.ShouldSerializeSecurity*\n  parent: System.ServiceModel.NetHttpBinding\n  isExternal: false\n  name: ShouldSerializeSecurity\n  nameWithType: NetHttpBinding.ShouldSerializeSecurity\n  fullName: NetHttpBinding.ShouldSerializeSecurity\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/NetHttpBinding.xml\n- uid: System.ServiceModel.NetHttpBinding.WebSocketSettings*\n  parent: System.ServiceModel.NetHttpBinding\n  isExternal: false\n  name: WebSocketSettings\n  nameWithType: NetHttpBinding.WebSocketSettings\n  fullName: NetHttpBinding.WebSocketSettings\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  - xamarinandroid-7.1\n  - xamarinios-10.8\n  - xamarinmac-3.0\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel/NetHttpBinding.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.ServiceModel.Channels.Binding.BuildChannelFactory``1(System.Object[])\n  parent: System.ServiceModel.Channels.Binding\n  isExternal: false\n  name: BuildChannelFactory<TChannel>(Object[])\n  nameWithType: Binding.BuildChannelFactory<TChannel>(Object[])\n  fullName: Binding.BuildChannelFactory<TChannel>(Object[])\n- uid: System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Object[])\n  parent: System.ServiceModel.Channels.Binding\n  isExternal: false\n  name: BuildChannelListener<TChannel>(Object[])\n  nameWithType: Binding.BuildChannelListener<TChannel>(Object[])\n  fullName: Binding.BuildChannelListener<TChannel>(Object[])\n- uid: System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.ServiceModel.Channels.BindingParameterCollection)\n  parent: System.ServiceModel.Channels.Binding\n  isExternal: false\n  name: BuildChannelListener<TChannel>(BindingParameterCollection)\n  nameWithType: Binding.BuildChannelListener<TChannel>(BindingParameterCollection)\n  fullName: Binding.BuildChannelListener<TChannel>(BindingParameterCollection)\n- uid: System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.Object[])\n  parent: System.ServiceModel.Channels.Binding\n  isExternal: false\n  name: BuildChannelListener<TChannel>(Uri, Object[])\n  nameWithType: Binding.BuildChannelListener<TChannel>(Uri, Object[])\n  fullName: Binding.BuildChannelListener<TChannel>(Uri, Object[])\n- uid: System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.ServiceModel.Channels.BindingParameterCollection)\n  parent: System.ServiceModel.Channels.Binding\n  isExternal: false\n  name: BuildChannelListener<TChannel>(Uri, BindingParameterCollection)\n  nameWithType: Binding.BuildChannelListener<TChannel>(Uri, BindingParameterCollection)\n  fullName: Binding.BuildChannelListener<TChannel>(Uri, BindingParameterCollection)\n- uid: System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.String,System.Object[])\n  parent: System.ServiceModel.Channels.Binding\n  isExternal: false\n  name: BuildChannelListener<TChannel>(Uri, String, Object[])\n  nameWithType: Binding.BuildChannelListener<TChannel>(Uri, String, Object[])\n  fullName: Binding.BuildChannelListener<TChannel>(Uri, String, Object[])\n- uid: System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.String,System.ServiceModel.Channels.BindingParameterCollection)\n  parent: System.ServiceModel.Channels.Binding\n  isExternal: false\n  name: BuildChannelListener<TChannel>(Uri, String, BindingParameterCollection)\n  nameWithType: Binding.BuildChannelListener<TChannel>(Uri, String, BindingParameterCollection)\n  fullName: Binding.BuildChannelListener<TChannel>(Uri, String, BindingParameterCollection)\n- uid: System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.String,System.ServiceModel.Description.ListenUriMode,System.Object[])\n  parent: System.ServiceModel.Channels.Binding\n  isExternal: false\n  name: BuildChannelListener<TChannel>(Uri, String, ListenUriMode, Object[])\n  nameWithType: Binding.BuildChannelListener<TChannel>(Uri, String, ListenUriMode, Object[])\n  fullName: Binding.BuildChannelListener<TChannel>(Uri, String, ListenUriMode, Object[])\n- uid: System.ServiceModel.Channels.Binding.BuildChannelListener``1(System.Uri,System.String,System.ServiceModel.Description.ListenUriMode,System.ServiceModel.Channels.BindingParameterCollection)\n  parent: System.ServiceModel.Channels.Binding\n  isExternal: false\n  name: BuildChannelListener<TChannel>(Uri, String, ListenUriMode, BindingParameterCollection)\n  nameWithType: Binding.BuildChannelListener<TChannel>(Uri, String, ListenUriMode, BindingParameterCollection)\n  fullName: Binding.BuildChannelListener<TChannel>(Uri, String, ListenUriMode, BindingParameterCollection)\n- uid: System.ServiceModel.Channels.Binding.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingParameterCollection)\n  parent: System.ServiceModel.Channels.Binding\n  isExternal: false\n  name: CanBuildChannelFactory<TChannel>(BindingParameterCollection)\n  nameWithType: Binding.CanBuildChannelFactory<TChannel>(BindingParameterCollection)\n  fullName: Binding.CanBuildChannelFactory<TChannel>(BindingParameterCollection)\n- uid: System.ServiceModel.Channels.Binding.CanBuildChannelFactory``1(System.Object[])\n  parent: System.ServiceModel.Channels.Binding\n  isExternal: false\n  name: CanBuildChannelFactory<TChannel>(Object[])\n  nameWithType: Binding.CanBuildChannelFactory<TChannel>(Object[])\n  fullName: Binding.CanBuildChannelFactory<TChannel>(Object[])\n- uid: System.ServiceModel.Channels.Binding.CanBuildChannelListener``1(System.Object[])\n  parent: System.ServiceModel.Channels.Binding\n  isExternal: false\n  name: CanBuildChannelListener<TChannel>(Object[])\n  nameWithType: Binding.CanBuildChannelListener<TChannel>(Object[])\n  fullName: Binding.CanBuildChannelListener<TChannel>(Object[])\n- uid: System.ServiceModel.Channels.Binding.CanBuildChannelListener``1(System.ServiceModel.Channels.BindingParameterCollection)\n  parent: System.ServiceModel.Channels.Binding\n  isExternal: false\n  name: CanBuildChannelListener<TChannel>(BindingParameterCollection)\n  nameWithType: Binding.CanBuildChannelListener<TChannel>(BindingParameterCollection)\n  fullName: Binding.CanBuildChannelListener<TChannel>(BindingParameterCollection)\n- uid: System.ServiceModel.Channels.Binding.CloseTimeout\n  parent: System.ServiceModel.Channels.Binding\n  isExternal: false\n  name: CloseTimeout\n  nameWithType: Binding.CloseTimeout\n  fullName: Binding.CloseTimeout\n- uid: System.ServiceModel.Channels.Binding.GetProperty``1(System.ServiceModel.Channels.BindingParameterCollection)\n  parent: System.ServiceModel.Channels.Binding\n  isExternal: false\n  name: GetProperty<T>(BindingParameterCollection)\n  nameWithType: Binding.GetProperty<T>(BindingParameterCollection)\n  fullName: Binding.GetProperty<T>(BindingParameterCollection)\n- uid: System.ServiceModel.Channels.Binding.MessageVersion\n  parent: System.ServiceModel.Channels.Binding\n  isExternal: false\n  name: MessageVersion\n  nameWithType: Binding.MessageVersion\n  fullName: Binding.MessageVersion\n- uid: System.ServiceModel.Channels.Binding.Name\n  parent: System.ServiceModel.Channels.Binding\n  isExternal: false\n  name: Name\n  nameWithType: Binding.Name\n  fullName: Binding.Name\n- uid: System.ServiceModel.Channels.Binding.Namespace\n  parent: System.ServiceModel.Channels.Binding\n  isExternal: false\n  name: Namespace\n  nameWithType: Binding.Namespace\n  fullName: Binding.Namespace\n- uid: System.ServiceModel.Channels.Binding.OpenTimeout\n  parent: System.ServiceModel.Channels.Binding\n  isExternal: false\n  name: OpenTimeout\n  nameWithType: Binding.OpenTimeout\n  fullName: Binding.OpenTimeout\n- uid: System.ServiceModel.Channels.Binding.ReceiveTimeout\n  parent: System.ServiceModel.Channels.Binding\n  isExternal: false\n  name: ReceiveTimeout\n  nameWithType: Binding.ReceiveTimeout\n  fullName: Binding.ReceiveTimeout\n- uid: System.ServiceModel.Channels.Binding.SendTimeout\n  parent: System.ServiceModel.Channels.Binding\n  isExternal: false\n  name: SendTimeout\n  nameWithType: Binding.SendTimeout\n  fullName: Binding.SendTimeout\n- uid: System.ServiceModel.Channels.Binding.ShouldSerializeName\n  parent: System.ServiceModel.Channels.Binding\n  isExternal: false\n  name: ShouldSerializeName()\n  nameWithType: Binding.ShouldSerializeName()\n  fullName: Binding.ShouldSerializeName()\n- uid: System.ServiceModel.Channels.Binding.ShouldSerializeNamespace\n  parent: System.ServiceModel.Channels.Binding\n  isExternal: false\n  name: ShouldSerializeNamespace()\n  nameWithType: Binding.ShouldSerializeNamespace()\n  fullName: Binding.ShouldSerializeNamespace()\n- uid: System.ServiceModel.HttpBindingBase.AllowCookies\n  parent: System.ServiceModel.HttpBindingBase\n  isExternal: false\n  name: AllowCookies\n  nameWithType: HttpBindingBase.AllowCookies\n  fullName: HttpBindingBase.AllowCookies\n- uid: System.ServiceModel.HttpBindingBase.BypassProxyOnLocal\n  parent: System.ServiceModel.HttpBindingBase\n  isExternal: false\n  name: BypassProxyOnLocal\n  nameWithType: HttpBindingBase.BypassProxyOnLocal\n  fullName: HttpBindingBase.BypassProxyOnLocal\n- uid: System.ServiceModel.HttpBindingBase.EnvelopeVersion\n  parent: System.ServiceModel.HttpBindingBase\n  isExternal: false\n  name: EnvelopeVersion\n  nameWithType: HttpBindingBase.EnvelopeVersion\n  fullName: HttpBindingBase.EnvelopeVersion\n- uid: System.ServiceModel.HttpBindingBase.HostNameComparisonMode\n  parent: System.ServiceModel.HttpBindingBase\n  isExternal: false\n  name: HostNameComparisonMode\n  nameWithType: HttpBindingBase.HostNameComparisonMode\n  fullName: HttpBindingBase.HostNameComparisonMode\n- uid: System.ServiceModel.HttpBindingBase.MaxBufferPoolSize\n  parent: System.ServiceModel.HttpBindingBase\n  isExternal: false\n  name: MaxBufferPoolSize\n  nameWithType: HttpBindingBase.MaxBufferPoolSize\n  fullName: HttpBindingBase.MaxBufferPoolSize\n- uid: System.ServiceModel.HttpBindingBase.MaxBufferSize\n  parent: System.ServiceModel.HttpBindingBase\n  isExternal: false\n  name: MaxBufferSize\n  nameWithType: HttpBindingBase.MaxBufferSize\n  fullName: HttpBindingBase.MaxBufferSize\n- uid: System.ServiceModel.HttpBindingBase.MaxReceivedMessageSize\n  parent: System.ServiceModel.HttpBindingBase\n  isExternal: false\n  name: MaxReceivedMessageSize\n  nameWithType: HttpBindingBase.MaxReceivedMessageSize\n  fullName: HttpBindingBase.MaxReceivedMessageSize\n- uid: System.ServiceModel.HttpBindingBase.ProxyAddress\n  parent: System.ServiceModel.HttpBindingBase\n  isExternal: false\n  name: ProxyAddress\n  nameWithType: HttpBindingBase.ProxyAddress\n  fullName: HttpBindingBase.ProxyAddress\n- uid: System.ServiceModel.HttpBindingBase.ReaderQuotas\n  parent: System.ServiceModel.HttpBindingBase\n  isExternal: false\n  name: ReaderQuotas\n  nameWithType: HttpBindingBase.ReaderQuotas\n  fullName: HttpBindingBase.ReaderQuotas\n- uid: System.ServiceModel.HttpBindingBase.ShouldSerializeReaderQuotas\n  parent: System.ServiceModel.HttpBindingBase\n  isExternal: false\n  name: ShouldSerializeReaderQuotas()\n  nameWithType: HttpBindingBase.ShouldSerializeReaderQuotas()\n  fullName: HttpBindingBase.ShouldSerializeReaderQuotas()\n- uid: System.ServiceModel.HttpBindingBase.ShouldSerializeTextEncoding\n  parent: System.ServiceModel.HttpBindingBase\n  isExternal: false\n  name: ShouldSerializeTextEncoding()\n  nameWithType: HttpBindingBase.ShouldSerializeTextEncoding()\n  fullName: HttpBindingBase.ShouldSerializeTextEncoding()\n- uid: System.ServiceModel.HttpBindingBase.TextEncoding\n  parent: System.ServiceModel.HttpBindingBase\n  isExternal: false\n  name: TextEncoding\n  nameWithType: HttpBindingBase.TextEncoding\n  fullName: HttpBindingBase.TextEncoding\n- uid: System.ServiceModel.HttpBindingBase.TransferMode\n  parent: System.ServiceModel.HttpBindingBase\n  isExternal: false\n  name: TransferMode\n  nameWithType: HttpBindingBase.TransferMode\n  fullName: HttpBindingBase.TransferMode\n- uid: System.ServiceModel.HttpBindingBase.UseDefaultWebProxy\n  parent: System.ServiceModel.HttpBindingBase\n  isExternal: false\n  name: UseDefaultWebProxy\n  nameWithType: HttpBindingBase.UseDefaultWebProxy\n  fullName: HttpBindingBase.UseDefaultWebProxy\n- uid: System.ServiceModel.HttpBindingBase.System#ServiceModel#Channels#IBindingRuntimePreferences#ReceiveSynchronously\n  parent: System.ServiceModel.HttpBindingBase\n  isExternal: false\n  name: IBindingRuntimePreferences.ReceiveSynchronously\n  nameWithType: HttpBindingBase.IBindingRuntimePreferences.ReceiveSynchronously\n  fullName: HttpBindingBase.IBindingRuntimePreferences.ReceiveSynchronously\n"}