### YamlMime:ManagedReference
items:
- uid: System.Xml.XmlDataDocument
  commentId: T:System.Xml.XmlDataDocument
  id: XmlDataDocument
  children:
  - System.Xml.XmlDataDocument.#ctor
  - System.Xml.XmlDataDocument.#ctor(System.Data.DataSet)
  - System.Xml.XmlDataDocument.CloneNode(System.Boolean)
  - System.Xml.XmlDataDocument.CreateElement(System.String,System.String,System.String)
  - System.Xml.XmlDataDocument.CreateEntityReference(System.String)
  - System.Xml.XmlDataDocument.CreateNavigator(System.Xml.XmlNode)
  - System.Xml.XmlDataDocument.DataSet
  - System.Xml.XmlDataDocument.GetElementById(System.String)
  - System.Xml.XmlDataDocument.GetElementFromRow(System.Data.DataRow)
  - System.Xml.XmlDataDocument.GetElementsByTagName(System.String)
  - System.Xml.XmlDataDocument.GetRowFromElement(System.Xml.XmlElement)
  - System.Xml.XmlDataDocument.Load(System.IO.Stream)
  - System.Xml.XmlDataDocument.Load(System.IO.TextReader)
  - System.Xml.XmlDataDocument.Load(System.String)
  - System.Xml.XmlDataDocument.Load(System.Xml.XmlReader)
  langs:
  - csharp
  name: XmlDataDocument
  nameWithType: XmlDataDocument
  fullName: System.Xml.XmlDataDocument
  type: Class
  assemblies:
  - System.Data
  namespace: System.Xml
  summary: Allows structured data to be stored, retrieved, and manipulated through a relational <xref href="System.Data.DataSet"></xref>.
  remarks: "This class extends <xref:System.Xml.XmlDocument>. It enables you to load either relational data or XML data and manipulate that data using the World Wide Web Consortium (W3C) Document Object Model (DOM). The DOM presents data as a hierarchy of node objects. Because `XmlDataDocument` implements the <xref:System.Xml.XPath.IXPathNavigable> interface, it can also be used as the source document for the <xref:System.Xml.Xsl.XslTransform> class.  \n  \n `XmlDataDocument` has a close affiliation with the `DataSet` class, which provides a relational view of the loaded XML data. Any changes made to the `XmlDataDocument` are reflected in the `DataSet` and vice versa.  \n  \n To load a `DataSet` with XML data, use <xref:System.Data.DataSet.ReadXmlSchema%2A> to build a relational mapping. The XML data can then be loaded using <xref:System.Xml.XmlDataDocument.Load%2A> or <xref:System.Xml.XmlDocument.LoadXml%2A>.  \n  \n To load relational data, specify the `DataSet` containing the relational data as the parameter in the <xref:System.Xml.XmlDataDocument.%23ctor%2A> constructor."
  syntax:
    content: >-
      [System.Obsolete("XmlDataDocument class will be removed in a future release.")]

      public class XmlDataDocument : System.Xml.XmlDocument
  inheritance:
  - System.Object
  - System.Xml.XmlNode
  - System.Xml.XmlDocument
  implements: []
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  - System.Xml.XmlDocument.BaseURI
  - System.Xml.XmlDocument.CreateAttribute(System.String)
  - System.Xml.XmlDocument.CreateAttribute(System.String,System.String)
  - System.Xml.XmlDocument.CreateAttribute(System.String,System.String,System.String)
  - System.Xml.XmlDocument.CreateCDataSection(System.String)
  - System.Xml.XmlDocument.CreateComment(System.String)
  - System.Xml.XmlDocument.CreateDefaultAttribute(System.String,System.String,System.String)
  - System.Xml.XmlDocument.CreateDocumentFragment
  - System.Xml.XmlDocument.CreateDocumentType(System.String,System.String,System.String,System.String)
  - System.Xml.XmlDocument.CreateElement(System.String)
  - System.Xml.XmlDocument.CreateElement(System.String,System.String)
  - System.Xml.XmlDocument.CreateNavigator
  - System.Xml.XmlDocument.CreateNode(System.String,System.String,System.String)
  - System.Xml.XmlDocument.CreateNode(System.Xml.XmlNodeType,System.String,System.String)
  - System.Xml.XmlDocument.CreateNode(System.Xml.XmlNodeType,System.String,System.String,System.String)
  - System.Xml.XmlDocument.CreateProcessingInstruction(System.String,System.String)
  - System.Xml.XmlDocument.CreateSignificantWhitespace(System.String)
  - System.Xml.XmlDocument.CreateTextNode(System.String)
  - System.Xml.XmlDocument.CreateWhitespace(System.String)
  - System.Xml.XmlDocument.CreateXmlDeclaration(System.String,System.String,System.String)
  - System.Xml.XmlDocument.DocumentElement
  - System.Xml.XmlDocument.DocumentType
  - System.Xml.XmlDocument.GetElementsByTagName(System.String,System.String)
  - System.Xml.XmlDocument.Implementation
  - System.Xml.XmlDocument.ImportNode(System.Xml.XmlNode,System.Boolean)
  - System.Xml.XmlDocument.InnerText
  - System.Xml.XmlDocument.InnerXml
  - System.Xml.XmlDocument.IsReadOnly
  - System.Xml.XmlDocument.LoadXml(System.String)
  - System.Xml.XmlDocument.LocalName
  - System.Xml.XmlDocument.Name
  - System.Xml.XmlDocument.NameTable
  - System.Xml.XmlDocument.NodeChanged
  - System.Xml.XmlDocument.NodeChanging
  - System.Xml.XmlDocument.NodeInserted
  - System.Xml.XmlDocument.NodeInserting
  - System.Xml.XmlDocument.NodeRemoved
  - System.Xml.XmlDocument.NodeRemoving
  - System.Xml.XmlDocument.NodeType
  - System.Xml.XmlDocument.OwnerDocument
  - System.Xml.XmlDocument.ParentNode
  - System.Xml.XmlDocument.PreserveWhitespace
  - System.Xml.XmlDocument.ReadNode(System.Xml.XmlReader)
  - System.Xml.XmlDocument.Save(System.IO.Stream)
  - System.Xml.XmlDocument.Save(System.IO.TextWriter)
  - System.Xml.XmlDocument.Save(System.String)
  - System.Xml.XmlDocument.Save(System.Xml.XmlWriter)
  - System.Xml.XmlDocument.SchemaInfo
  - System.Xml.XmlDocument.Schemas
  - System.Xml.XmlDocument.Validate(System.Xml.Schema.ValidationEventHandler)
  - System.Xml.XmlDocument.Validate(System.Xml.Schema.ValidationEventHandler,System.Xml.XmlNode)
  - System.Xml.XmlDocument.WriteContentTo(System.Xml.XmlWriter)
  - System.Xml.XmlDocument.WriteTo(System.Xml.XmlWriter)
  - System.Xml.XmlDocument.XmlResolver
  - System.Xml.XmlNode.AppendChild(System.Xml.XmlNode)
  - System.Xml.XmlNode.Attributes
  - System.Xml.XmlNode.ChildNodes
  - System.Xml.XmlNode.Clone
  - System.Xml.XmlNode.FirstChild
  - System.Xml.XmlNode.GetEnumerator
  - System.Xml.XmlNode.GetNamespaceOfPrefix(System.String)
  - System.Xml.XmlNode.GetPrefixOfNamespace(System.String)
  - System.Xml.XmlNode.HasChildNodes
  - System.Xml.XmlNode.InsertAfter(System.Xml.XmlNode,System.Xml.XmlNode)
  - System.Xml.XmlNode.InsertBefore(System.Xml.XmlNode,System.Xml.XmlNode)
  - System.Xml.XmlNode.Item(System.String)
  - System.Xml.XmlNode.Item(System.String,System.String)
  - System.Xml.XmlNode.LastChild
  - System.Xml.XmlNode.NamespaceURI
  - System.Xml.XmlNode.NextSibling
  - System.Xml.XmlNode.Normalize
  - System.Xml.XmlNode.OuterXml
  - System.Xml.XmlNode.Prefix
  - System.Xml.XmlNode.PrependChild(System.Xml.XmlNode)
  - System.Xml.XmlNode.PreviousSibling
  - System.Xml.XmlNode.PreviousText
  - System.Xml.XmlNode.RemoveAll
  - System.Xml.XmlNode.RemoveChild(System.Xml.XmlNode)
  - System.Xml.XmlNode.ReplaceChild(System.Xml.XmlNode,System.Xml.XmlNode)
  - System.Xml.XmlNode.SelectNodes(System.String)
  - System.Xml.XmlNode.SelectNodes(System.String,System.Xml.XmlNamespaceManager)
  - System.Xml.XmlNode.SelectSingleNode(System.String)
  - System.Xml.XmlNode.SelectSingleNode(System.String,System.Xml.XmlNamespaceManager)
  - System.Xml.XmlNode.Supports(System.String,System.String)
  - System.Xml.XmlNode.System#Collections#IEnumerable#GetEnumerator
  - System.Xml.XmlNode.System#ICloneable#Clone
  - System.Xml.XmlNode.Value
  extensionMethods:
  - System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)
  - System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)
  - System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)
  - System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)
  - System.Xml.XmlDocumentXPathExtensions.CreateNavigator(System.Xml.XmlDocument)
  - System.Xml.XmlDocumentXPathExtensions.CreateNavigator(System.Xml.XmlDocument,System.Xml.XmlNode)
  - System.Xml.XmlDocumentXPathExtensions.CreateNavigator(System.Xml.XmlNode)
  - System.Xml.XmlDocumentXPathExtensions.SelectNodes(System.Xml.XmlNode,System.String)
  - System.Xml.XmlDocumentXPathExtensions.SelectNodes(System.Xml.XmlNode,System.String,System.Xml.XmlNamespaceManager)
  - System.Xml.XmlDocumentXPathExtensions.SelectSingleNode(System.Xml.XmlNode,System.String)
  - System.Xml.XmlDocumentXPathExtensions.SelectSingleNode(System.Xml.XmlNode,System.String,System.Xml.XmlNamespaceManager)
  - System.Xml.XmlDocumentXPathExtensions.ToXPathNavigable(System.Xml.XmlNode)
  attributes:
  - type: System.ObsoleteAttribute
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlDataDocument.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Xml.XmlDataDocument.#ctor
  commentId: M:System.Xml.XmlDataDocument.#ctor
  id: '#ctor'
  parent: System.Xml.XmlDataDocument
  langs:
  - csharp
  name: XmlDataDocument()
  nameWithType: XmlDataDocument.XmlDataDocument()
  fullName: XmlDataDocument.XmlDataDocument()
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Xml
  summary: Initializes a new instance of the <xref href="System.Xml.XmlDataDocument"></xref> class.
  remarks: An empty <xref:System.Data.DataSet> is created and associated with the `XmlDataDocument`.
  syntax:
    content: public XmlDataDocument ();
    parameters: []
  overload: System.Xml.XmlDataDocument.#ctor*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlDataDocument.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Xml.XmlDataDocument.#ctor(System.Data.DataSet)
  commentId: M:System.Xml.XmlDataDocument.#ctor(System.Data.DataSet)
  id: '#ctor(System.Data.DataSet)'
  parent: System.Xml.XmlDataDocument
  langs:
  - csharp
  name: XmlDataDocument(DataSet)
  nameWithType: XmlDataDocument.XmlDataDocument(DataSet)
  fullName: XmlDataDocument.XmlDataDocument(DataSet)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Xml
  summary: Initializes a new instance of the <xref href="System.Xml.XmlDataDocument"></xref> class with the specified <xref href="System.Data.DataSet"></xref>.
  remarks: The `XmlDataDocument` is synchronized with the specified `DataSet`. Any data in the `DataSet` is immediately available through the `XmlDataDocument`. Any changes in the `DataSet` are propagated in the `XmlDataDocument`. Any changes made in the `XmlDataDocument`, provided they match the `DataSet` schema, are propagated in the `DataSet`.
  example:
  - "The following example loads a customer table into an `XmlDataDocument`.  \n  \n The example uses the SQL Server 2000 Northwind database.  \n  \n [!code-cpp[Classic WebData XmlDataDocument.XmlDataDocument1 Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlDataDocument.XmlDataDocument1 Example/CPP/source.cpp#1)]\n [!code-csharp[Classic WebData XmlDataDocument.XmlDataDocument1 Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlDataDocument.XmlDataDocument1 Example/CS/source.cs#1)]\n [!code-vb[Classic WebData XmlDataDocument.XmlDataDocument1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlDataDocument.XmlDataDocument1 Example/VB/source.vb#1)]"
  syntax:
    content: public XmlDataDocument (System.Data.DataSet dataset);
    parameters:
    - id: dataset
      type: System.Data.DataSet
      description: The `DataSet` to load into `XmlDataDocument`.
  overload: System.Xml.XmlDataDocument.#ctor*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlDataDocument.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Xml.XmlDataDocument.CloneNode(System.Boolean)
  commentId: M:System.Xml.XmlDataDocument.CloneNode(System.Boolean)
  id: CloneNode(System.Boolean)
  parent: System.Xml.XmlDataDocument
  langs:
  - csharp
  name: CloneNode(Boolean)
  nameWithType: XmlDataDocument.CloneNode(Boolean)
  fullName: XmlDataDocument.CloneNode(Boolean)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Xml
  summary: Creates a duplicate of the current node.
  remarks: "Cloning the `XmlDataDocument` also clones the <xref:System.Data.DataSet> schema.  \n  \n If `deep` is set to `false`, the cloned `DataSet` has no data; that is, no rows.  \n  \n If `deep` is set to `true`, the cloned `DataSet` is set with the schema and then populated with the data.  \n  \n See <xref:System.Xml.XmlNode.CloneNode%2A> in the `XmlNode` class to see a table describing how this method behaves with each of the different node types."
  example:
  - "The following example loads a `DataSet` into an `XmlDataDocument` and then creates a shallow clone of the `XmlDataDocument`.  \n  \n The example uses the SQL Server 2000 Northwind database.  \n  \n [!code-cpp[Classic WebData XmlDataDocument.CloneNode Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlDataDocument.CloneNode Example/CPP/source.cpp#1)]\n [!code-csharp[Classic WebData XmlDataDocument.CloneNode Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlDataDocument.CloneNode Example/CS/source.cs#1)]\n [!code-vb[Classic WebData XmlDataDocument.CloneNode Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlDataDocument.CloneNode Example/VB/source.vb#1)]"
  syntax:
    content: public override System.Xml.XmlNode CloneNode (bool deep);
    parameters:
    - id: deep
      type: System.Boolean
      description: '`true` to recursively clone the subtree under the specified node; `false` to clone only the node itself.'
    return:
      type: System.Xml.XmlNode
      description: The cloned node.
  overload: System.Xml.XmlDataDocument.CloneNode*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlDataDocument.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Xml.XmlDataDocument.CreateElement(System.String,System.String,System.String)
  commentId: M:System.Xml.XmlDataDocument.CreateElement(System.String,System.String,System.String)
  id: CreateElement(System.String,System.String,System.String)
  parent: System.Xml.XmlDataDocument
  langs:
  - csharp
  name: CreateElement(String, String, String)
  nameWithType: XmlDataDocument.CreateElement(String, String, String)
  fullName: XmlDataDocument.CreateElement(String, String, String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Xml
  summary: Creates an element with the specified <xref href="System.Xml.XmlNode.Prefix"></xref>, <xref href="System.Xml.XmlDocument.LocalName"></xref> , and <xref href="System.Xml.XmlNode.NamespaceURI"></xref>.
  remarks: "`Note to Inheritors` If you overload this function, it cannot be used for extensibility. Instead, you can return an element created by the base class, in this case, `XmlDataDocument`. See the following example.  \n  \n```  \nclass MyXmlDataDocument : XmlDataDocument {  \n public override XmlElement CreateElement(string prefix, string localName, string nsURI) {  \n   //Ensure we are returning the base class implementation of element.  \n   XmlElement e = base.CreateElement(prefix, localName, nsURI);  \n   //Add additional code here.  \n   return e;    //Return the element created by XmlDataDocument.  \n }      \n}  \n```"
  syntax:
    content: public override System.Xml.XmlElement CreateElement (string prefix, string localName, string namespaceURI);
    parameters:
    - id: prefix
      type: System.String
      description: The prefix of the new element. If String.Empty or `null`, there is no prefix.
    - id: localName
      type: System.String
      description: The local name of the new element.
    - id: namespaceURI
      type: System.String
      description: The namespace Uniform Resource Identifier (URI) of the new element. If String.Empty or `null`, there is no namespaceURI.
    return:
      type: System.Xml.XmlElement
      description: A new <xref href="System.Xml.XmlElement"></xref>.
  overload: System.Xml.XmlDataDocument.CreateElement*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlDataDocument.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Xml.XmlDataDocument.CreateEntityReference(System.String)
  commentId: M:System.Xml.XmlDataDocument.CreateEntityReference(System.String)
  id: CreateEntityReference(System.String)
  parent: System.Xml.XmlDataDocument
  langs:
  - csharp
  name: CreateEntityReference(String)
  nameWithType: XmlDataDocument.CreateEntityReference(String)
  fullName: XmlDataDocument.CreateEntityReference(String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Xml
  summary: Creates an <xref href="System.Xml.XmlEntityReference"></xref> with the specified name.
  remarks: <xref:System.Xml.XmlEntityReference> nodes cannot be created for <xref:System.Xml.XmlDataDocument> objects. Calling this method throws an exception.
  syntax:
    content: public override System.Xml.XmlEntityReference CreateEntityReference (string name);
    parameters:
    - id: name
      type: System.String
      description: The name of the entity reference.
    return:
      type: System.Xml.XmlEntityReference
      description: An <xref href="System.Xml.XmlEntityReference"></xref> with the specified name.
  overload: System.Xml.XmlDataDocument.CreateEntityReference*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: Calling this method.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlDataDocument.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Xml.XmlDataDocument.CreateNavigator(System.Xml.XmlNode)
  commentId: M:System.Xml.XmlDataDocument.CreateNavigator(System.Xml.XmlNode)
  id: CreateNavigator(System.Xml.XmlNode)
  parent: System.Xml.XmlDataDocument
  langs:
  - csharp
  name: CreateNavigator(XmlNode)
  nameWithType: XmlDataDocument.CreateNavigator(XmlNode)
  fullName: XmlDataDocument.CreateNavigator(XmlNode)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Xml
  summary: Creates a new <xref href="System.Xml.XPath.XPathNavigator"></xref> object for navigating this document. The `XPathNavigator` is positioned on the node specified in the <code>node</code> parameter.
  remarks: The `XPathNavigator` provides read-only, random access to data. Because it is optimized for XSLT transformations, it provides performance benefits when used as an input mechanism to the <xref:System.Xml.Xsl.XslTransform.Transform%2A> method.
  example:
  - To see an XSLT transformation using `XmlDataDocument` and an `XPathNavigator`, see the <xref:System.Xml.Xsl.XslTransform.Transform%2A?displayProperty=fullName> method.
  syntax:
    content: protected override System.Xml.XPath.XPathNavigator CreateNavigator (System.Xml.XmlNode node);
    parameters:
    - id: node
      type: System.Xml.XmlNode
      description: The <xref href="System.Xml.XmlNode"></xref> you want the navigator initially positioned on.
    return:
      type: System.Xml.XPath.XPathNavigator
      description: An `XPathNavigator` used to navigate the document.
  overload: System.Xml.XmlDataDocument.CreateNavigator*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlDataDocument.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Xml.XmlDataDocument.DataSet
  commentId: P:System.Xml.XmlDataDocument.DataSet
  id: DataSet
  parent: System.Xml.XmlDataDocument
  langs:
  - csharp
  name: DataSet
  nameWithType: XmlDataDocument.DataSet
  fullName: XmlDataDocument.DataSet
  type: Property
  assemblies:
  - System.Data
  namespace: System.Xml
  summary: Gets a <xref href="System.Data.DataSet"></xref> that provides a relational representation of the data in the `XmlDataDocument`.
  remarks: The `DataSet` enables you to access the data in the `XmlDataDocument` using a relational model. This means that you can handle the data as tables and views, rows and columns, relations, and so on. Changes made in the `DataSet` are immediately visible in the `XmlDataDocument`.
  example:
  - "The following example modifies the price of a book using the `DataSet` methods.  \n  \n [!code-cpp[Classic WebData XmlDataDocument.DataSet Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlDataDocument.DataSet Example/CPP/source.cpp#1)]\n [!code-csharp[Classic WebData XmlDataDocument.DataSet Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlDataDocument.DataSet Example/CS/source.cs#1)]\n [!code-vb[Classic WebData XmlDataDocument.DataSet Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlDataDocument.DataSet Example/VB/source.vb#1)]  \n  \n The example uses the following two files as input.  \n  \n `2books.xml`  \n  \n [!code-xml[Classic WebData XmlDataDocument.DataSet Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlDataDocument.DataSet Example/XML/source.xml#2)]  \n  \n `store.xsd`  \n  \n [!code-xml[Classic WebData XmlDataDocument.DataSet Example#3](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlDataDocument.DataSet Example/XML/source.xml#3)]"
  syntax:
    content: public System.Data.DataSet DataSet { get; }
    return:
      type: System.Data.DataSet
      description: A `DataSet` that can be used to access the data in the `XmlDataDocument` using a relational model.
  overload: System.Xml.XmlDataDocument.DataSet*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlDataDocument.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Xml.XmlDataDocument.GetElementById(System.String)
  commentId: M:System.Xml.XmlDataDocument.GetElementById(System.String)
  id: GetElementById(System.String)
  parent: System.Xml.XmlDataDocument
  langs:
  - csharp
  name: GetElementById(String)
  nameWithType: XmlDataDocument.GetElementById(String)
  fullName: XmlDataDocument.GetElementById(String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Xml
  summary: Gets the <xref href="System.Xml.XmlElement"></xref> with the specified ID. This method is not supported by the <xref href="System.Xml.XmlDataDocument"></xref> class. Calling this method throws an exception.
  remarks: This method is not supported by the <xref:System.Xml.XmlDataDocument> class.
  syntax:
    content: public override System.Xml.XmlElement GetElementById (string elemId);
    parameters:
    - id: elemId
      type: System.String
      description: The attribute ID to match.
    return:
      type: System.Xml.XmlElement
      description: An <xref href="System.Xml.XmlElement"></xref> with the specified ID.
  overload: System.Xml.XmlDataDocument.GetElementById*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: Calling this method.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlDataDocument.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Xml.XmlDataDocument.GetElementFromRow(System.Data.DataRow)
  commentId: M:System.Xml.XmlDataDocument.GetElementFromRow(System.Data.DataRow)
  id: GetElementFromRow(System.Data.DataRow)
  parent: System.Xml.XmlDataDocument
  langs:
  - csharp
  name: GetElementFromRow(DataRow)
  nameWithType: XmlDataDocument.GetElementFromRow(DataRow)
  fullName: XmlDataDocument.GetElementFromRow(DataRow)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Xml
  summary: Retrieves the <xref href="System.Xml.XmlElement"></xref> associated with the specified <xref href="System.Data.DataRow"></xref>.
  remarks: ''
  example:
  - "The following example loads a `DataSet` into an `XmlDataDocument` and then creates an `XmlElement` representing the first customer record.  \n  \n The example uses the SQL Server 2000 Northwind database.  \n  \n [!code-cpp[Classic WebData XmlDataDocument.GetElementFromRow Example#1](~/samples/snippets/cpp/VS_Snippets_Data/Classic WebData XmlDataDocument.GetElementFromRow Example/CPP/source.cpp#1)]\n [!code-csharp[Classic WebData XmlDataDocument.GetElementFromRow Example#1](~/samples/snippets/csharp/VS_Snippets_Data/Classic WebData XmlDataDocument.GetElementFromRow Example/CS/source.cs#1)]\n [!code-vb[Classic WebData XmlDataDocument.GetElementFromRow Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/Classic WebData XmlDataDocument.GetElementFromRow Example/VB/source.vb#1)]"
  syntax:
    content: public System.Xml.XmlElement GetElementFromRow (System.Data.DataRow r);
    parameters:
    - id: r
      type: System.Data.DataRow
      description: The `DataRow` whose associated `XmlElement` you want to retrieve.
    return:
      type: System.Xml.XmlElement
      description: The `XmlElement` containing a representation of the specified `DataRow`.
  overload: System.Xml.XmlDataDocument.GetElementFromRow*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlDataDocument.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Xml.XmlDataDocument.GetElementsByTagName(System.String)
  commentId: M:System.Xml.XmlDataDocument.GetElementsByTagName(System.String)
  id: GetElementsByTagName(System.String)
  parent: System.Xml.XmlDataDocument
  langs:
  - csharp
  name: GetElementsByTagName(String)
  nameWithType: XmlDataDocument.GetElementsByTagName(String)
  fullName: XmlDataDocument.GetElementsByTagName(String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Xml
  summary: Returns an <xref href="System.Xml.XmlNodeList"></xref> containing a list of all descendant elements that match the specified <xref href="System.Xml.XmlDocument.Name"></xref>.
  remarks: >-
    > [!NOTE]

    >  It is recommended that you use the <xref:System.Xml.XmlNode.SelectNodes%2A?displayProperty=fullName> or <xref:System.Xml.XmlNode.SelectSingleNode%2A?displayProperty=fullName> method instead of the <xref:System.Xml.XmlDataDocument.GetElementsByTagName%2A> method.
  syntax:
    content: public override System.Xml.XmlNodeList GetElementsByTagName (string name);
    parameters:
    - id: name
      type: System.String
      description: The qualified name to match. It is matched against the <xref href="System.Xml.XmlDocument.Name"></xref> property of the matching node. The special value "*" matches all tags.
    return:
      type: System.Xml.XmlNodeList
      description: An <xref href="System.Xml.XmlNodeList"></xref> containing a list of all matching nodes.
  overload: System.Xml.XmlDataDocument.GetElementsByTagName*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlDataDocument.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Xml.XmlDataDocument.GetRowFromElement(System.Xml.XmlElement)
  commentId: M:System.Xml.XmlDataDocument.GetRowFromElement(System.Xml.XmlElement)
  id: GetRowFromElement(System.Xml.XmlElement)
  parent: System.Xml.XmlDataDocument
  langs:
  - csharp
  name: GetRowFromElement(XmlElement)
  nameWithType: XmlDataDocument.GetRowFromElement(XmlElement)
  fullName: XmlDataDocument.GetRowFromElement(XmlElement)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Xml
  summary: Retrieves the <xref href="System.Data.DataRow"></xref> associated with the specified <xref href="System.Xml.XmlElement"></xref>.
  remarks: ''
  example:
  - "The following example modifies the price of the first book.  \n  \n [!code-cpp[XmlDataDocument.GetRowFromElement#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlDataDocument.GetRowFromElement/CPP/getrow.cpp#1)]\n [!code-csharp[XmlDataDocument.GetRowFromElement#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlDataDocument.GetRowFromElement/CS/getrow.cs#1)]\n [!code-vb[XmlDataDocument.GetRowFromElement#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlDataDocument.GetRowFromElement/VB/getrow.vb#1)]  \n  \n The example uses the following input files:  \n  \n `2books.xml`  \n  \n [!code-xml[Classic WebData XmlDataDocument.DataSet Example#2](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlDataDocument.DataSet Example/XML/source.xml#2)]  \n  \n `store.xsd`  \n  \n [!code-xml[Classic WebData XmlDataDocument.DataSet Example#3](~/samples/snippets/xml/VS_Snippets_Data/Classic WebData XmlDataDocument.DataSet Example/XML/source.xml#3)]"
  syntax:
    content: public System.Data.DataRow GetRowFromElement (System.Xml.XmlElement e);
    parameters:
    - id: e
      type: System.Xml.XmlElement
      description: The `XmlElement` whose associated `DataRow` you want to retrieve.
    return:
      type: System.Data.DataRow
      description: The `DataRow` containing a representation of the `XmlElement`; `null` if there is no `DataRow` associated with the `XmlElement`.
  overload: System.Xml.XmlDataDocument.GetRowFromElement*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlDataDocument.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Xml.XmlDataDocument.Load(System.IO.Stream)
  commentId: M:System.Xml.XmlDataDocument.Load(System.IO.Stream)
  id: Load(System.IO.Stream)
  parent: System.Xml.XmlDataDocument
  langs:
  - csharp
  name: Load(Stream)
  nameWithType: XmlDataDocument.Load(Stream)
  fullName: XmlDataDocument.Load(Stream)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Xml
  summary: Loads the `XmlDataDocument` from the specified stream.
  remarks: "`XmlDataDocument` does not support creating entity references. If the data includes entity references, the `Load` method resolves and expands any entity references.  \n  \n> [!NOTE]\n>  In order to view the XML data relationally, you must first specify a schema to use for data mapping. This can be done either by calling the <xref:System.Data.DataSet.ReadXmlSchema%2A> method or by creating the tables and columns within the `DataSet` manually. This step must be done before calling `Load`."
  syntax:
    content: public override void Load (System.IO.Stream inStream);
    parameters:
    - id: inStream
      type: System.IO.Stream
      description: The stream containing the XML document to load.
  overload: System.Xml.XmlDataDocument.Load*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlDataDocument.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Xml.XmlDataDocument.Load(System.IO.TextReader)
  commentId: M:System.Xml.XmlDataDocument.Load(System.IO.TextReader)
  id: Load(System.IO.TextReader)
  parent: System.Xml.XmlDataDocument
  langs:
  - csharp
  name: Load(TextReader)
  nameWithType: XmlDataDocument.Load(TextReader)
  fullName: XmlDataDocument.Load(TextReader)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Xml
  summary: Loads the `XmlDataDocument` from the specified <xref href="System.IO.TextReader"></xref>.
  remarks: "`XmlDataDocument` does not support creating entity references. If the data includes entity references, the `Load` method resolves and expands any entity references.  \n  \n> [!NOTE]\n>  In order to view the XML data relationally, you must first specify a schema to use for data mapping. This can be done either by calling the <xref:System.Data.DataSet.ReadXmlSchema%2A> method or by creating the tables and columns within the `DataSet` manually. This step must be done before calling `Load`."
  syntax:
    content: public override void Load (System.IO.TextReader txtReader);
    parameters:
    - id: txtReader
      type: System.IO.TextReader
      description: The `TextReader` used to feed the XML data into the document.
  overload: System.Xml.XmlDataDocument.Load*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlDataDocument.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Xml.XmlDataDocument.Load(System.String)
  commentId: M:System.Xml.XmlDataDocument.Load(System.String)
  id: Load(System.String)
  parent: System.Xml.XmlDataDocument
  langs:
  - csharp
  name: Load(String)
  nameWithType: XmlDataDocument.Load(String)
  fullName: XmlDataDocument.Load(String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Xml
  summary: Loads the `XmlDataDocument` using the specified URL.
  remarks: "`XmlDataDocument` does not support creating entity references. If the data includes entity references, the `Load` method resolves and expands any entity references.  \n  \n> [!NOTE]\n>  In order to view the XML data relationally, you must first specify a schema to use for data mapping. This can be done either by calling the <xref:System.Data.DataSet.ReadXmlSchema%2A> method or by creating the tables and columns within the `DataSet` manually. This step must be done before calling `Load`."
  syntax:
    content: public override void Load (string filename);
    parameters:
    - id: filename
      type: System.String
      description: The URL of the file containing the XML document to load.
  overload: System.Xml.XmlDataDocument.Load*
  exceptions: []
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlDataDocument.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
- uid: System.Xml.XmlDataDocument.Load(System.Xml.XmlReader)
  commentId: M:System.Xml.XmlDataDocument.Load(System.Xml.XmlReader)
  id: Load(System.Xml.XmlReader)
  parent: System.Xml.XmlDataDocument
  langs:
  - csharp
  name: Load(XmlReader)
  nameWithType: XmlDataDocument.Load(XmlReader)
  fullName: XmlDataDocument.Load(XmlReader)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Xml
  summary: Loads the `XmlDataDocument` from the specified <xref href="System.Xml.XmlReader"></xref>.
  remarks: "`XmlDataDocument` does not support creating entity references. If the data source contains entity references, you must create an <xref:System.Xml.XmlValidatingReader> with the <xref:System.Xml.XmlValidatingReader.EntityHandling%2A> property set to EntityHandling.ExpandEntities (this is the default behavior) and pass the `XmlValidatingReader` to the `Load` method. If you do not use an `XmlValidatingReader`, the `Load` method throws an exception.  \n  \n The `Load` method always preserves significant white space. The <xref:System.Xml.XmlDocument.PreserveWhitespace%2A> property determines whether or not white space is preserved. The default is `false`, white space is not preserved.  \n  \n If the reader is in the initial state (that is, ReadState=ReadState.Initial), `Load` consumes the entire contents of the reader and builds the DOM from what it finds.  \n  \n If the reader is already positioned on some node at depth \"n\", then this method loads that node and all subsequent siblings up to the end tag that closes depth \"n\". This has the following results.  \n  \n If the current node and its following siblings look similar to the following:  \n  \n```  \n<!--comment--><element1>one</element1><element2>two</element2>  \n```  \n  \n `Load` throws an exception, because a document cannot have two root-level elements. If the current node and its following siblings look similar to the following:  \n  \n```  \n<!--comment--><?process  \n    instruction?><!--comment--></endtag>  \n```  \n  \n `Load` will succeed; however, you will have an incomplete DOM tree, because there is no root-level element. You have to add a root-level element before you save the document; otherwise, the <xref:System.Xml.XmlDocument.Save%2A> method throws an exception.  \n  \n If the reader is positioned on a leaf node that is invalid for the root level of a document (for example, a white space or attribute node), the reader continues to read until it is positioned on a node that can be used for the root. The document begins loading at this point."
  example:
  - "The following example modifies the price of a book using the `DataSet` methods.  \n  \n [!code-cpp[XmlDataDocument.Load#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlDataDocument.Load/CPP/loadrdr.cpp#1)]\n [!code-csharp[XmlDataDocument.Load#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlDataDocument.Load/CS/loadrdr.cs#1)]\n [!code-vb[XmlDataDocument.Load#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlDataDocument.Load/VB/loadrdr.vb#1)]  \n  \n The example uses the following two input files.  \n  \n `2books.xml`  \n  \n [!code-xml[XmlDataDocument.Load#2](~/samples/snippets/xml/VS_Snippets_Data/XmlDataDocument.Load/XML/2books.xml#2)]  \n  \n `store.xsd`  \n  \n [!code-xml[XmlDataDocument.Load#3](~/samples/snippets/xml/VS_Snippets_Data/XmlDataDocument.Load/XML/test.xsd#3)]"
  syntax:
    content: public override void Load (System.Xml.XmlReader reader);
    parameters:
    - id: reader
      type: System.Xml.XmlReader
      description: The `XmlReader` containing the XML document to load.
  overload: System.Xml.XmlDataDocument.Load*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: The XML being loaded contains entity references, and the reader cannot resolve entities.
  version:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlDataDocument.xml
  ms.technology:
  - dotnet-standard
  author: mairaw
  ms.author: mairaw
  manager: wpickett
references:
- uid: System.Xml.XmlDocument
  parent: System.Xml
  isExternal: false
  name: XmlDocument
  nameWithType: XmlDocument
  fullName: System.Xml.XmlDocument
- uid: System.NotSupportedException
  parent: System
  isExternal: false
  name: NotSupportedException
  nameWithType: NotSupportedException
  fullName: System.NotSupportedException
- uid: System.Xml.XmlDataDocument.#ctor
  parent: System.Xml.XmlDataDocument
  isExternal: false
  name: XmlDataDocument()
  nameWithType: XmlDataDocument.XmlDataDocument()
  fullName: XmlDataDocument.XmlDataDocument()
- uid: System.Xml.XmlDataDocument.#ctor(System.Data.DataSet)
  parent: System.Xml.XmlDataDocument
  isExternal: false
  name: XmlDataDocument(DataSet)
  nameWithType: XmlDataDocument.XmlDataDocument(DataSet)
  fullName: XmlDataDocument.XmlDataDocument(DataSet)
- uid: System.Data.DataSet
  parent: System.Data
  isExternal: false
  name: DataSet
  nameWithType: DataSet
  fullName: System.Data.DataSet
- uid: System.Xml.XmlDataDocument.CloneNode(System.Boolean)
  parent: System.Xml.XmlDataDocument
  isExternal: false
  name: CloneNode(Boolean)
  nameWithType: XmlDataDocument.CloneNode(Boolean)
  fullName: XmlDataDocument.CloneNode(Boolean)
- uid: System.Xml.XmlNode
  parent: System.Xml
  isExternal: false
  name: XmlNode
  nameWithType: XmlNode
  fullName: System.Xml.XmlNode
- uid: System.Boolean
  parent: System
  isExternal: false
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Xml.XmlDataDocument.CreateElement(System.String,System.String,System.String)
  parent: System.Xml.XmlDataDocument
  isExternal: false
  name: CreateElement(String, String, String)
  nameWithType: XmlDataDocument.CreateElement(String, String, String)
  fullName: XmlDataDocument.CreateElement(String, String, String)
- uid: System.Xml.XmlElement
  parent: System.Xml
  isExternal: false
  name: XmlElement
  nameWithType: XmlElement
  fullName: System.Xml.XmlElement
- uid: System.String
  parent: System
  isExternal: false
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Xml.XmlDataDocument.CreateEntityReference(System.String)
  parent: System.Xml.XmlDataDocument
  isExternal: false
  name: CreateEntityReference(String)
  nameWithType: XmlDataDocument.CreateEntityReference(String)
  fullName: XmlDataDocument.CreateEntityReference(String)
- uid: System.Xml.XmlEntityReference
  parent: System.Xml
  isExternal: false
  name: XmlEntityReference
  nameWithType: XmlEntityReference
  fullName: System.Xml.XmlEntityReference
- uid: System.Xml.XmlDataDocument.CreateNavigator(System.Xml.XmlNode)
  parent: System.Xml.XmlDataDocument
  isExternal: false
  name: CreateNavigator(XmlNode)
  nameWithType: XmlDataDocument.CreateNavigator(XmlNode)
  fullName: XmlDataDocument.CreateNavigator(XmlNode)
- uid: System.Xml.XPath.XPathNavigator
  parent: System.Xml.XPath
  isExternal: false
  name: XPathNavigator
  nameWithType: XPathNavigator
  fullName: System.Xml.XPath.XPathNavigator
- uid: System.Xml.XmlDataDocument.DataSet
  parent: System.Xml.XmlDataDocument
  isExternal: false
  name: DataSet
  nameWithType: XmlDataDocument.DataSet
  fullName: XmlDataDocument.DataSet
- uid: System.Xml.XmlDataDocument.GetElementById(System.String)
  parent: System.Xml.XmlDataDocument
  isExternal: false
  name: GetElementById(String)
  nameWithType: XmlDataDocument.GetElementById(String)
  fullName: XmlDataDocument.GetElementById(String)
- uid: System.Xml.XmlDataDocument.GetElementFromRow(System.Data.DataRow)
  parent: System.Xml.XmlDataDocument
  isExternal: false
  name: GetElementFromRow(DataRow)
  nameWithType: XmlDataDocument.GetElementFromRow(DataRow)
  fullName: XmlDataDocument.GetElementFromRow(DataRow)
- uid: System.Data.DataRow
  parent: System.Data
  isExternal: false
  name: DataRow
  nameWithType: DataRow
  fullName: System.Data.DataRow
- uid: System.Xml.XmlDataDocument.GetElementsByTagName(System.String)
  parent: System.Xml.XmlDataDocument
  isExternal: false
  name: GetElementsByTagName(String)
  nameWithType: XmlDataDocument.GetElementsByTagName(String)
  fullName: XmlDataDocument.GetElementsByTagName(String)
- uid: System.Xml.XmlNodeList
  parent: System.Xml
  isExternal: false
  name: XmlNodeList
  nameWithType: XmlNodeList
  fullName: System.Xml.XmlNodeList
- uid: System.Xml.XmlDataDocument.GetRowFromElement(System.Xml.XmlElement)
  parent: System.Xml.XmlDataDocument
  isExternal: false
  name: GetRowFromElement(XmlElement)
  nameWithType: XmlDataDocument.GetRowFromElement(XmlElement)
  fullName: XmlDataDocument.GetRowFromElement(XmlElement)
- uid: System.Xml.XmlDataDocument.Load(System.IO.Stream)
  parent: System.Xml.XmlDataDocument
  isExternal: false
  name: Load(Stream)
  nameWithType: XmlDataDocument.Load(Stream)
  fullName: XmlDataDocument.Load(Stream)
- uid: System.IO.Stream
  parent: System.IO
  isExternal: false
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.Xml.XmlDataDocument.Load(System.IO.TextReader)
  parent: System.Xml.XmlDataDocument
  isExternal: false
  name: Load(TextReader)
  nameWithType: XmlDataDocument.Load(TextReader)
  fullName: XmlDataDocument.Load(TextReader)
- uid: System.IO.TextReader
  parent: System.IO
  isExternal: false
  name: TextReader
  nameWithType: TextReader
  fullName: System.IO.TextReader
- uid: System.Xml.XmlDataDocument.Load(System.String)
  parent: System.Xml.XmlDataDocument
  isExternal: false
  name: Load(String)
  nameWithType: XmlDataDocument.Load(String)
  fullName: XmlDataDocument.Load(String)
- uid: System.Xml.XmlDataDocument.Load(System.Xml.XmlReader)
  parent: System.Xml.XmlDataDocument
  isExternal: false
  name: Load(XmlReader)
  nameWithType: XmlDataDocument.Load(XmlReader)
  fullName: XmlDataDocument.Load(XmlReader)
- uid: System.Xml.XmlReader
  parent: System.Xml
  isExternal: false
  name: XmlReader
  nameWithType: XmlReader
  fullName: System.Xml.XmlReader
- uid: System.Xml.XmlDataDocument.Load*
  parent: System.Xml.XmlDataDocument
  isExternal: false
  name: Load
  nameWithType: XmlDataDocument.Load
  fullName: XmlDataDocument.Load
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlDataDocument.xml
- uid: System.Xml.XmlDataDocument.#ctor*
  parent: System.Xml.XmlDataDocument
  isExternal: false
  name: XmlDataDocument
  nameWithType: XmlDataDocument.XmlDataDocument
  fullName: XmlDataDocument.XmlDataDocument
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlDataDocument.xml
- uid: System.Xml.XmlDataDocument.CloneNode*
  parent: System.Xml.XmlDataDocument
  isExternal: false
  name: CloneNode
  nameWithType: XmlDataDocument.CloneNode
  fullName: XmlDataDocument.CloneNode
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlDataDocument.xml
- uid: System.Xml.XmlDataDocument.CreateElement*
  parent: System.Xml.XmlDataDocument
  isExternal: false
  name: CreateElement
  nameWithType: XmlDataDocument.CreateElement
  fullName: XmlDataDocument.CreateElement
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlDataDocument.xml
- uid: System.Xml.XmlDataDocument.CreateEntityReference*
  parent: System.Xml.XmlDataDocument
  isExternal: false
  name: CreateEntityReference
  nameWithType: XmlDataDocument.CreateEntityReference
  fullName: XmlDataDocument.CreateEntityReference
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlDataDocument.xml
- uid: System.Xml.XmlDataDocument.CreateNavigator*
  parent: System.Xml.XmlDataDocument
  isExternal: false
  name: CreateNavigator
  nameWithType: XmlDataDocument.CreateNavigator
  fullName: XmlDataDocument.CreateNavigator
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlDataDocument.xml
- uid: System.Xml.XmlDataDocument.DataSet*
  parent: System.Xml.XmlDataDocument
  isExternal: false
  name: DataSet
  nameWithType: XmlDataDocument.DataSet
  fullName: XmlDataDocument.DataSet
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlDataDocument.xml
- uid: System.Xml.XmlDataDocument.GetElementById*
  parent: System.Xml.XmlDataDocument
  isExternal: false
  name: GetElementById
  nameWithType: XmlDataDocument.GetElementById
  fullName: XmlDataDocument.GetElementById
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlDataDocument.xml
- uid: System.Xml.XmlDataDocument.GetElementFromRow*
  parent: System.Xml.XmlDataDocument
  isExternal: false
  name: GetElementFromRow
  nameWithType: XmlDataDocument.GetElementFromRow
  fullName: XmlDataDocument.GetElementFromRow
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlDataDocument.xml
- uid: System.Xml.XmlDataDocument.GetElementsByTagName*
  parent: System.Xml.XmlDataDocument
  isExternal: false
  name: GetElementsByTagName
  nameWithType: XmlDataDocument.GetElementsByTagName
  fullName: XmlDataDocument.GetElementsByTagName
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlDataDocument.xml
- uid: System.Xml.XmlDataDocument.GetRowFromElement*
  parent: System.Xml.XmlDataDocument
  isExternal: false
  name: GetRowFromElement
  nameWithType: XmlDataDocument.GetRowFromElement
  fullName: XmlDataDocument.GetRowFromElement
  monikers:
  - netframework-4.5.1
  - netframework-4.5.2
  - netframework-4.5
  - netframework-4.6.1
  - netframework-4.6.2
  - netframework-4.6
  - netframework-4.7
  - xamarinandroid-7.1
  - xamarinios-10.8
  - xamarinmac-3.0
  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Xml/XmlDataDocument.xml
- uid: System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: Object.Equals(Object)
- uid: System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: Object.Equals(Object, Object)
- uid: System.Object.GetHashCode
  parent: System.Object
  isExternal: false
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: Object.GetHashCode()
- uid: System.Object.GetType
  parent: System.Object
  isExternal: false
  name: GetType()
  nameWithType: Object.GetType()
  fullName: Object.GetType()
- uid: System.Object.MemberwiseClone
  parent: System.Object
  isExternal: false
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: Object.MemberwiseClone()
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: false
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: Object.ReferenceEquals(Object, Object)
- uid: System.Object.ToString
  parent: System.Object
  isExternal: false
  name: ToString()
  nameWithType: Object.ToString()
  fullName: Object.ToString()
- uid: System.Xml.XmlNode.AppendChild(System.Xml.XmlNode)
  parent: System.Xml.XmlNode
  isExternal: false
  name: AppendChild(XmlNode)
  nameWithType: XmlNode.AppendChild(XmlNode)
  fullName: XmlNode.AppendChild(XmlNode)
- uid: System.Xml.XmlNode.Attributes
  parent: System.Xml.XmlNode
  isExternal: false
  name: Attributes
  nameWithType: XmlNode.Attributes
  fullName: XmlNode.Attributes
- uid: System.Xml.XmlDocument.BaseURI
  parent: System.Xml.XmlDocument
  isExternal: false
  name: BaseURI
  nameWithType: XmlDocument.BaseURI
  fullName: XmlDocument.BaseURI
- uid: System.Xml.XmlNode.ChildNodes
  parent: System.Xml.XmlNode
  isExternal: false
  name: ChildNodes
  nameWithType: XmlNode.ChildNodes
  fullName: XmlNode.ChildNodes
- uid: System.Xml.XmlNode.Clone
  parent: System.Xml.XmlNode
  isExternal: false
  name: Clone()
  nameWithType: XmlNode.Clone()
  fullName: XmlNode.Clone()
- uid: System.Xml.XmlDocument.CreateNavigator
  parent: System.Xml.XmlDocument
  isExternal: false
  name: CreateNavigator()
  nameWithType: XmlDocument.CreateNavigator()
  fullName: XmlDocument.CreateNavigator()
- uid: System.Xml.XmlNode.FirstChild
  parent: System.Xml.XmlNode
  isExternal: false
  name: FirstChild
  nameWithType: XmlNode.FirstChild
  fullName: XmlNode.FirstChild
- uid: System.Xml.XmlNode.GetEnumerator
  parent: System.Xml.XmlNode
  isExternal: false
  name: GetEnumerator()
  nameWithType: XmlNode.GetEnumerator()
  fullName: XmlNode.GetEnumerator()
- uid: System.Xml.XmlNode.GetNamespaceOfPrefix(System.String)
  parent: System.Xml.XmlNode
  isExternal: false
  name: GetNamespaceOfPrefix(String)
  nameWithType: XmlNode.GetNamespaceOfPrefix(String)
  fullName: XmlNode.GetNamespaceOfPrefix(String)
- uid: System.Xml.XmlNode.GetPrefixOfNamespace(System.String)
  parent: System.Xml.XmlNode
  isExternal: false
  name: GetPrefixOfNamespace(String)
  nameWithType: XmlNode.GetPrefixOfNamespace(String)
  fullName: XmlNode.GetPrefixOfNamespace(String)
- uid: System.Xml.XmlNode.HasChildNodes
  parent: System.Xml.XmlNode
  isExternal: false
  name: HasChildNodes
  nameWithType: XmlNode.HasChildNodes
  fullName: XmlNode.HasChildNodes
- uid: System.Xml.XmlDocument.InnerText
  parent: System.Xml.XmlDocument
  isExternal: false
  name: InnerText
  nameWithType: XmlDocument.InnerText
  fullName: XmlDocument.InnerText
- uid: System.Xml.XmlDocument.InnerXml
  parent: System.Xml.XmlDocument
  isExternal: false
  name: InnerXml
  nameWithType: XmlDocument.InnerXml
  fullName: XmlDocument.InnerXml
- uid: System.Xml.XmlNode.InsertAfter(System.Xml.XmlNode,System.Xml.XmlNode)
  parent: System.Xml.XmlNode
  isExternal: false
  name: InsertAfter(XmlNode, XmlNode)
  nameWithType: XmlNode.InsertAfter(XmlNode, XmlNode)
  fullName: XmlNode.InsertAfter(XmlNode, XmlNode)
- uid: System.Xml.XmlNode.InsertBefore(System.Xml.XmlNode,System.Xml.XmlNode)
  parent: System.Xml.XmlNode
  isExternal: false
  name: InsertBefore(XmlNode, XmlNode)
  nameWithType: XmlNode.InsertBefore(XmlNode, XmlNode)
  fullName: XmlNode.InsertBefore(XmlNode, XmlNode)
- uid: System.Xml.XmlDocument.IsReadOnly
  parent: System.Xml.XmlDocument
  isExternal: false
  name: IsReadOnly
  nameWithType: XmlDocument.IsReadOnly
  fullName: XmlDocument.IsReadOnly
- uid: System.Xml.XmlNode.Item(System.String)
  parent: System.Xml.XmlNode
  isExternal: false
  name: Item(String)
  nameWithType: XmlNode.Item(String)
  fullName: XmlNode.Item(String)
- uid: System.Xml.XmlNode.Item(System.String,System.String)
  parent: System.Xml.XmlNode
  isExternal: false
  name: Item(String, String)
  nameWithType: XmlNode.Item(String, String)
  fullName: XmlNode.Item(String, String)
- uid: System.Xml.XmlNode.LastChild
  parent: System.Xml.XmlNode
  isExternal: false
  name: LastChild
  nameWithType: XmlNode.LastChild
  fullName: XmlNode.LastChild
- uid: System.Xml.XmlDocument.LocalName
  parent: System.Xml.XmlDocument
  isExternal: false
  name: LocalName
  nameWithType: XmlDocument.LocalName
  fullName: XmlDocument.LocalName
- uid: System.Xml.XmlDocument.Name
  parent: System.Xml.XmlDocument
  isExternal: false
  name: Name
  nameWithType: XmlDocument.Name
  fullName: XmlDocument.Name
- uid: System.Xml.XmlNode.NamespaceURI
  parent: System.Xml.XmlNode
  isExternal: false
  name: NamespaceURI
  nameWithType: XmlNode.NamespaceURI
  fullName: XmlNode.NamespaceURI
- uid: System.Xml.XmlNode.NextSibling
  parent: System.Xml.XmlNode
  isExternal: false
  name: NextSibling
  nameWithType: XmlNode.NextSibling
  fullName: XmlNode.NextSibling
- uid: System.Xml.XmlDocument.NodeType
  parent: System.Xml.XmlDocument
  isExternal: false
  name: NodeType
  nameWithType: XmlDocument.NodeType
  fullName: XmlDocument.NodeType
- uid: System.Xml.XmlNode.Normalize
  parent: System.Xml.XmlNode
  isExternal: false
  name: Normalize()
  nameWithType: XmlNode.Normalize()
  fullName: XmlNode.Normalize()
- uid: System.Xml.XmlNode.OuterXml
  parent: System.Xml.XmlNode
  isExternal: false
  name: OuterXml
  nameWithType: XmlNode.OuterXml
  fullName: XmlNode.OuterXml
- uid: System.Xml.XmlDocument.OwnerDocument
  parent: System.Xml.XmlDocument
  isExternal: false
  name: OwnerDocument
  nameWithType: XmlDocument.OwnerDocument
  fullName: XmlDocument.OwnerDocument
- uid: System.Xml.XmlDocument.ParentNode
  parent: System.Xml.XmlDocument
  isExternal: false
  name: ParentNode
  nameWithType: XmlDocument.ParentNode
  fullName: XmlDocument.ParentNode
- uid: System.Xml.XmlNode.Prefix
  parent: System.Xml.XmlNode
  isExternal: false
  name: Prefix
  nameWithType: XmlNode.Prefix
  fullName: XmlNode.Prefix
- uid: System.Xml.XmlNode.PrependChild(System.Xml.XmlNode)
  parent: System.Xml.XmlNode
  isExternal: false
  name: PrependChild(XmlNode)
  nameWithType: XmlNode.PrependChild(XmlNode)
  fullName: XmlNode.PrependChild(XmlNode)
- uid: System.Xml.XmlNode.PreviousSibling
  parent: System.Xml.XmlNode
  isExternal: false
  name: PreviousSibling
  nameWithType: XmlNode.PreviousSibling
  fullName: XmlNode.PreviousSibling
- uid: System.Xml.XmlNode.PreviousText
  parent: System.Xml.XmlNode
  isExternal: false
  name: PreviousText
  nameWithType: XmlNode.PreviousText
  fullName: XmlNode.PreviousText
- uid: System.Xml.XmlNode.RemoveAll
  parent: System.Xml.XmlNode
  isExternal: false
  name: RemoveAll()
  nameWithType: XmlNode.RemoveAll()
  fullName: XmlNode.RemoveAll()
- uid: System.Xml.XmlNode.RemoveChild(System.Xml.XmlNode)
  parent: System.Xml.XmlNode
  isExternal: false
  name: RemoveChild(XmlNode)
  nameWithType: XmlNode.RemoveChild(XmlNode)
  fullName: XmlNode.RemoveChild(XmlNode)
- uid: System.Xml.XmlNode.ReplaceChild(System.Xml.XmlNode,System.Xml.XmlNode)
  parent: System.Xml.XmlNode
  isExternal: false
  name: ReplaceChild(XmlNode, XmlNode)
  nameWithType: XmlNode.ReplaceChild(XmlNode, XmlNode)
  fullName: XmlNode.ReplaceChild(XmlNode, XmlNode)
- uid: System.Xml.XmlDocument.SchemaInfo
  parent: System.Xml.XmlDocument
  isExternal: false
  name: SchemaInfo
  nameWithType: XmlDocument.SchemaInfo
  fullName: XmlDocument.SchemaInfo
- uid: System.Xml.XmlNode.SelectNodes(System.String)
  parent: System.Xml.XmlNode
  isExternal: false
  name: SelectNodes(String)
  nameWithType: XmlNode.SelectNodes(String)
  fullName: XmlNode.SelectNodes(String)
- uid: System.Xml.XmlNode.SelectNodes(System.String,System.Xml.XmlNamespaceManager)
  parent: System.Xml.XmlNode
  isExternal: false
  name: SelectNodes(String, XmlNamespaceManager)
  nameWithType: XmlNode.SelectNodes(String, XmlNamespaceManager)
  fullName: XmlNode.SelectNodes(String, XmlNamespaceManager)
- uid: System.Xml.XmlNode.SelectSingleNode(System.String)
  parent: System.Xml.XmlNode
  isExternal: false
  name: SelectSingleNode(String)
  nameWithType: XmlNode.SelectSingleNode(String)
  fullName: XmlNode.SelectSingleNode(String)
- uid: System.Xml.XmlNode.SelectSingleNode(System.String,System.Xml.XmlNamespaceManager)
  parent: System.Xml.XmlNode
  isExternal: false
  name: SelectSingleNode(String, XmlNamespaceManager)
  nameWithType: XmlNode.SelectSingleNode(String, XmlNamespaceManager)
  fullName: XmlNode.SelectSingleNode(String, XmlNamespaceManager)
- uid: System.Xml.XmlNode.Supports(System.String,System.String)
  parent: System.Xml.XmlNode
  isExternal: false
  name: Supports(String, String)
  nameWithType: XmlNode.Supports(String, String)
  fullName: XmlNode.Supports(String, String)
- uid: System.Xml.XmlNode.Value
  parent: System.Xml.XmlNode
  isExternal: false
  name: Value
  nameWithType: XmlNode.Value
  fullName: XmlNode.Value
- uid: System.Xml.XmlDocument.WriteContentTo(System.Xml.XmlWriter)
  parent: System.Xml.XmlDocument
  isExternal: false
  name: WriteContentTo(XmlWriter)
  nameWithType: XmlDocument.WriteContentTo(XmlWriter)
  fullName: XmlDocument.WriteContentTo(XmlWriter)
- uid: System.Xml.XmlDocument.WriteTo(System.Xml.XmlWriter)
  parent: System.Xml.XmlDocument
  isExternal: false
  name: WriteTo(XmlWriter)
  nameWithType: XmlDocument.WriteTo(XmlWriter)
  fullName: XmlDocument.WriteTo(XmlWriter)
- uid: System.Xml.XmlNode.System#Collections#IEnumerable#GetEnumerator
  parent: System.Xml.XmlNode
  isExternal: false
  name: IEnumerable.GetEnumerator()
  nameWithType: XmlNode.IEnumerable.GetEnumerator()
  fullName: XmlNode.IEnumerable.GetEnumerator()
- uid: System.Xml.XmlNode.System#ICloneable#Clone
  parent: System.Xml.XmlNode
  isExternal: false
  name: ICloneable.Clone()
  nameWithType: XmlNode.ICloneable.Clone()
  fullName: XmlNode.ICloneable.Clone()
- uid: System.Xml.XmlDocument.CreateAttribute(System.String)
  parent: System.Xml.XmlDocument
  isExternal: false
  name: CreateAttribute(String)
  nameWithType: XmlDocument.CreateAttribute(String)
  fullName: XmlDocument.CreateAttribute(String)
- uid: System.Xml.XmlDocument.CreateAttribute(System.String,System.String)
  parent: System.Xml.XmlDocument
  isExternal: false
  name: CreateAttribute(String, String)
  nameWithType: XmlDocument.CreateAttribute(String, String)
  fullName: XmlDocument.CreateAttribute(String, String)
- uid: System.Xml.XmlDocument.CreateAttribute(System.String,System.String,System.String)
  parent: System.Xml.XmlDocument
  isExternal: false
  name: CreateAttribute(String, String, String)
  nameWithType: XmlDocument.CreateAttribute(String, String, String)
  fullName: XmlDocument.CreateAttribute(String, String, String)
- uid: System.Xml.XmlDocument.CreateCDataSection(System.String)
  parent: System.Xml.XmlDocument
  isExternal: false
  name: CreateCDataSection(String)
  nameWithType: XmlDocument.CreateCDataSection(String)
  fullName: XmlDocument.CreateCDataSection(String)
- uid: System.Xml.XmlDocument.CreateComment(System.String)
  parent: System.Xml.XmlDocument
  isExternal: false
  name: CreateComment(String)
  nameWithType: XmlDocument.CreateComment(String)
  fullName: XmlDocument.CreateComment(String)
- uid: System.Xml.XmlDocument.CreateDefaultAttribute(System.String,System.String,System.String)
  parent: System.Xml.XmlDocument
  isExternal: false
  name: CreateDefaultAttribute(String, String, String)
  nameWithType: XmlDocument.CreateDefaultAttribute(String, String, String)
  fullName: XmlDocument.CreateDefaultAttribute(String, String, String)
- uid: System.Xml.XmlDocument.CreateDocumentFragment
  parent: System.Xml.XmlDocument
  isExternal: false
  name: CreateDocumentFragment()
  nameWithType: XmlDocument.CreateDocumentFragment()
  fullName: XmlDocument.CreateDocumentFragment()
- uid: System.Xml.XmlDocument.CreateDocumentType(System.String,System.String,System.String,System.String)
  parent: System.Xml.XmlDocument
  isExternal: false
  name: CreateDocumentType(String, String, String, String)
  nameWithType: XmlDocument.CreateDocumentType(String, String, String, String)
  fullName: XmlDocument.CreateDocumentType(String, String, String, String)
- uid: System.Xml.XmlDocument.CreateElement(System.String)
  parent: System.Xml.XmlDocument
  isExternal: false
  name: CreateElement(String)
  nameWithType: XmlDocument.CreateElement(String)
  fullName: XmlDocument.CreateElement(String)
- uid: System.Xml.XmlDocument.CreateElement(System.String,System.String)
  parent: System.Xml.XmlDocument
  isExternal: false
  name: CreateElement(String, String)
  nameWithType: XmlDocument.CreateElement(String, String)
  fullName: XmlDocument.CreateElement(String, String)
- uid: System.Xml.XmlDocument.CreateNode(System.String,System.String,System.String)
  parent: System.Xml.XmlDocument
  isExternal: false
  name: CreateNode(String, String, String)
  nameWithType: XmlDocument.CreateNode(String, String, String)
  fullName: XmlDocument.CreateNode(String, String, String)
- uid: System.Xml.XmlDocument.CreateNode(System.Xml.XmlNodeType,System.String,System.String)
  parent: System.Xml.XmlDocument
  isExternal: false
  name: CreateNode(XmlNodeType, String, String)
  nameWithType: XmlDocument.CreateNode(XmlNodeType, String, String)
  fullName: XmlDocument.CreateNode(XmlNodeType, String, String)
- uid: System.Xml.XmlDocument.CreateNode(System.Xml.XmlNodeType,System.String,System.String,System.String)
  parent: System.Xml.XmlDocument
  isExternal: false
  name: CreateNode(XmlNodeType, String, String, String)
  nameWithType: XmlDocument.CreateNode(XmlNodeType, String, String, String)
  fullName: XmlDocument.CreateNode(XmlNodeType, String, String, String)
- uid: System.Xml.XmlDocument.CreateProcessingInstruction(System.String,System.String)
  parent: System.Xml.XmlDocument
  isExternal: false
  name: CreateProcessingInstruction(String, String)
  nameWithType: XmlDocument.CreateProcessingInstruction(String, String)
  fullName: XmlDocument.CreateProcessingInstruction(String, String)
- uid: System.Xml.XmlDocument.CreateSignificantWhitespace(System.String)
  parent: System.Xml.XmlDocument
  isExternal: false
  name: CreateSignificantWhitespace(String)
  nameWithType: XmlDocument.CreateSignificantWhitespace(String)
  fullName: XmlDocument.CreateSignificantWhitespace(String)
- uid: System.Xml.XmlDocument.CreateTextNode(System.String)
  parent: System.Xml.XmlDocument
  isExternal: false
  name: CreateTextNode(String)
  nameWithType: XmlDocument.CreateTextNode(String)
  fullName: XmlDocument.CreateTextNode(String)
- uid: System.Xml.XmlDocument.CreateWhitespace(System.String)
  parent: System.Xml.XmlDocument
  isExternal: false
  name: CreateWhitespace(String)
  nameWithType: XmlDocument.CreateWhitespace(String)
  fullName: XmlDocument.CreateWhitespace(String)
- uid: System.Xml.XmlDocument.CreateXmlDeclaration(System.String,System.String,System.String)
  parent: System.Xml.XmlDocument
  isExternal: false
  name: CreateXmlDeclaration(String, String, String)
  nameWithType: XmlDocument.CreateXmlDeclaration(String, String, String)
  fullName: XmlDocument.CreateXmlDeclaration(String, String, String)
- uid: System.Xml.XmlDocument.DocumentElement
  parent: System.Xml.XmlDocument
  isExternal: false
  name: DocumentElement
  nameWithType: XmlDocument.DocumentElement
  fullName: XmlDocument.DocumentElement
- uid: System.Xml.XmlDocument.DocumentType
  parent: System.Xml.XmlDocument
  isExternal: false
  name: DocumentType
  nameWithType: XmlDocument.DocumentType
  fullName: XmlDocument.DocumentType
- uid: System.Xml.XmlDocument.GetElementsByTagName(System.String,System.String)
  parent: System.Xml.XmlDocument
  isExternal: false
  name: GetElementsByTagName(String, String)
  nameWithType: XmlDocument.GetElementsByTagName(String, String)
  fullName: XmlDocument.GetElementsByTagName(String, String)
- uid: System.Xml.XmlDocument.Implementation
  parent: System.Xml.XmlDocument
  isExternal: false
  name: Implementation
  nameWithType: XmlDocument.Implementation
  fullName: XmlDocument.Implementation
- uid: System.Xml.XmlDocument.ImportNode(System.Xml.XmlNode,System.Boolean)
  parent: System.Xml.XmlDocument
  isExternal: false
  name: ImportNode(XmlNode, Boolean)
  nameWithType: XmlDocument.ImportNode(XmlNode, Boolean)
  fullName: XmlDocument.ImportNode(XmlNode, Boolean)
- uid: System.Xml.XmlDocument.LoadXml(System.String)
  parent: System.Xml.XmlDocument
  isExternal: false
  name: LoadXml(String)
  nameWithType: XmlDocument.LoadXml(String)
  fullName: XmlDocument.LoadXml(String)
- uid: System.Xml.XmlDocument.NameTable
  parent: System.Xml.XmlDocument
  isExternal: false
  name: NameTable
  nameWithType: XmlDocument.NameTable
  fullName: XmlDocument.NameTable
- uid: System.Xml.XmlDocument.NodeChanged
  parent: System.Xml.XmlDocument
  isExternal: false
  name: NodeChanged
  nameWithType: XmlDocument.NodeChanged
  fullName: XmlDocument.NodeChanged
- uid: System.Xml.XmlDocument.NodeChanging
  parent: System.Xml.XmlDocument
  isExternal: false
  name: NodeChanging
  nameWithType: XmlDocument.NodeChanging
  fullName: XmlDocument.NodeChanging
- uid: System.Xml.XmlDocument.NodeInserted
  parent: System.Xml.XmlDocument
  isExternal: false
  name: NodeInserted
  nameWithType: XmlDocument.NodeInserted
  fullName: XmlDocument.NodeInserted
- uid: System.Xml.XmlDocument.NodeInserting
  parent: System.Xml.XmlDocument
  isExternal: false
  name: NodeInserting
  nameWithType: XmlDocument.NodeInserting
  fullName: XmlDocument.NodeInserting
- uid: System.Xml.XmlDocument.NodeRemoved
  parent: System.Xml.XmlDocument
  isExternal: false
  name: NodeRemoved
  nameWithType: XmlDocument.NodeRemoved
  fullName: XmlDocument.NodeRemoved
- uid: System.Xml.XmlDocument.NodeRemoving
  parent: System.Xml.XmlDocument
  isExternal: false
  name: NodeRemoving
  nameWithType: XmlDocument.NodeRemoving
  fullName: XmlDocument.NodeRemoving
- uid: System.Xml.XmlDocument.PreserveWhitespace
  parent: System.Xml.XmlDocument
  isExternal: false
  name: PreserveWhitespace
  nameWithType: XmlDocument.PreserveWhitespace
  fullName: XmlDocument.PreserveWhitespace
- uid: System.Xml.XmlDocument.ReadNode(System.Xml.XmlReader)
  parent: System.Xml.XmlDocument
  isExternal: false
  name: ReadNode(XmlReader)
  nameWithType: XmlDocument.ReadNode(XmlReader)
  fullName: XmlDocument.ReadNode(XmlReader)
- uid: System.Xml.XmlDocument.Save(System.IO.Stream)
  parent: System.Xml.XmlDocument
  isExternal: false
  name: Save(Stream)
  nameWithType: XmlDocument.Save(Stream)
  fullName: XmlDocument.Save(Stream)
- uid: System.Xml.XmlDocument.Save(System.IO.TextWriter)
  parent: System.Xml.XmlDocument
  isExternal: false
  name: Save(TextWriter)
  nameWithType: XmlDocument.Save(TextWriter)
  fullName: XmlDocument.Save(TextWriter)
- uid: System.Xml.XmlDocument.Save(System.String)
  parent: System.Xml.XmlDocument
  isExternal: false
  name: Save(String)
  nameWithType: XmlDocument.Save(String)
  fullName: XmlDocument.Save(String)
- uid: System.Xml.XmlDocument.Save(System.Xml.XmlWriter)
  parent: System.Xml.XmlDocument
  isExternal: false
  name: Save(XmlWriter)
  nameWithType: XmlDocument.Save(XmlWriter)
  fullName: XmlDocument.Save(XmlWriter)
- uid: System.Xml.XmlDocument.Schemas
  parent: System.Xml.XmlDocument
  isExternal: false
  name: Schemas
  nameWithType: XmlDocument.Schemas
  fullName: XmlDocument.Schemas
- uid: System.Xml.XmlDocument.Validate(System.Xml.Schema.ValidationEventHandler)
  parent: System.Xml.XmlDocument
  isExternal: false
  name: Validate(ValidationEventHandler)
  nameWithType: XmlDocument.Validate(ValidationEventHandler)
  fullName: XmlDocument.Validate(ValidationEventHandler)
- uid: System.Xml.XmlDocument.Validate(System.Xml.Schema.ValidationEventHandler,System.Xml.XmlNode)
  parent: System.Xml.XmlDocument
  isExternal: false
  name: Validate(ValidationEventHandler, XmlNode)
  nameWithType: XmlDocument.Validate(ValidationEventHandler, XmlNode)
  fullName: XmlDocument.Validate(ValidationEventHandler, XmlNode)
- uid: System.Xml.XmlDocument.XmlResolver
  parent: System.Xml.XmlDocument
  isExternal: false
  name: XmlResolver
  nameWithType: XmlDocument.XmlResolver
  fullName: XmlDocument.XmlResolver
- uid: System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)
  parent: System.Linq.Enumerable
  isExternal: false
  name: Cast<TResult>(IEnumerable)
  nameWithType: Enumerable.Cast<TResult>(IEnumerable)
  fullName: Enumerable.Cast<TResult>(IEnumerable)
- uid: System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)
  parent: System.Linq.Enumerable
  isExternal: false
  name: OfType<TResult>(IEnumerable)
  nameWithType: Enumerable.OfType<TResult>(IEnumerable)
  fullName: Enumerable.OfType<TResult>(IEnumerable)
- uid: System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)
  parent: System.Linq.ParallelEnumerable
  isExternal: false
  name: AsParallel(IEnumerable)
  nameWithType: ParallelEnumerable.AsParallel(IEnumerable)
  fullName: ParallelEnumerable.AsParallel(IEnumerable)
- uid: System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)
  parent: System.Linq.Queryable
  isExternal: false
  name: AsQueryable(IEnumerable)
  nameWithType: Queryable.AsQueryable(IEnumerable)
  fullName: Queryable.AsQueryable(IEnumerable)
- uid: System.Xml.XmlDocumentXPathExtensions.CreateNavigator(System.Xml.XmlDocument)
  parent: System.Xml.XmlDocumentXPathExtensions
  isExternal: false
  name: CreateNavigator(XmlDocument)
  nameWithType: XmlDocumentXPathExtensions.CreateNavigator(XmlDocument)
  fullName: XmlDocumentXPathExtensions.CreateNavigator(XmlDocument)
- uid: System.Xml.XmlDocumentXPathExtensions.CreateNavigator(System.Xml.XmlDocument,System.Xml.XmlNode)
  parent: System.Xml.XmlDocumentXPathExtensions
  isExternal: false
  name: CreateNavigator(XmlDocument, XmlNode)
  nameWithType: XmlDocumentXPathExtensions.CreateNavigator(XmlDocument, XmlNode)
  fullName: XmlDocumentXPathExtensions.CreateNavigator(XmlDocument, XmlNode)
- uid: System.Xml.XmlDocumentXPathExtensions.CreateNavigator(System.Xml.XmlNode)
  parent: System.Xml.XmlDocumentXPathExtensions
  isExternal: false
  name: CreateNavigator(XmlNode)
  nameWithType: XmlDocumentXPathExtensions.CreateNavigator(XmlNode)
  fullName: XmlDocumentXPathExtensions.CreateNavigator(XmlNode)
- uid: System.Xml.XmlDocumentXPathExtensions.SelectNodes(System.Xml.XmlNode,System.String)
  parent: System.Xml.XmlDocumentXPathExtensions
  isExternal: false
  name: SelectNodes(XmlNode, String)
  nameWithType: XmlDocumentXPathExtensions.SelectNodes(XmlNode, String)
  fullName: XmlDocumentXPathExtensions.SelectNodes(XmlNode, String)
- uid: System.Xml.XmlDocumentXPathExtensions.SelectNodes(System.Xml.XmlNode,System.String,System.Xml.XmlNamespaceManager)
  parent: System.Xml.XmlDocumentXPathExtensions
  isExternal: false
  name: SelectNodes(XmlNode, String, XmlNamespaceManager)
  nameWithType: XmlDocumentXPathExtensions.SelectNodes(XmlNode, String, XmlNamespaceManager)
  fullName: XmlDocumentXPathExtensions.SelectNodes(XmlNode, String, XmlNamespaceManager)
- uid: System.Xml.XmlDocumentXPathExtensions.SelectSingleNode(System.Xml.XmlNode,System.String)
  parent: System.Xml.XmlDocumentXPathExtensions
  isExternal: false
  name: SelectSingleNode(XmlNode, String)
  nameWithType: XmlDocumentXPathExtensions.SelectSingleNode(XmlNode, String)
  fullName: XmlDocumentXPathExtensions.SelectSingleNode(XmlNode, String)
- uid: System.Xml.XmlDocumentXPathExtensions.SelectSingleNode(System.Xml.XmlNode,System.String,System.Xml.XmlNamespaceManager)
  parent: System.Xml.XmlDocumentXPathExtensions
  isExternal: false
  name: SelectSingleNode(XmlNode, String, XmlNamespaceManager)
  nameWithType: XmlDocumentXPathExtensions.SelectSingleNode(XmlNode, String, XmlNamespaceManager)
  fullName: XmlDocumentXPathExtensions.SelectSingleNode(XmlNode, String, XmlNamespaceManager)
- uid: System.Xml.XmlDocumentXPathExtensions.ToXPathNavigable(System.Xml.XmlNode)
  parent: System.Xml.XmlDocumentXPathExtensions
  isExternal: false
  name: ToXPathNavigable(XmlNode)
  nameWithType: XmlDocumentXPathExtensions.ToXPathNavigable(XmlNode)
  fullName: XmlDocumentXPathExtensions.ToXPathNavigable(XmlNode)
