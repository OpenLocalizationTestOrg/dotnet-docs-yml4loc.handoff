{"nodes":[{"content":"The <xref href=\"System.Security.Permissions.WebBrowserPermission\"></xref> object controls the ability to create the WebBrowser control.","nodes":[{"pos":[0,135],"content":"The <ph id=\"ph1\">&lt;xref href=\"System.Security.Permissions.WebBrowserPermission\"&gt;&lt;/xref&gt;</ph> object controls the ability to create the WebBrowser control.","source":"The <xref href=\"System.Security.Permissions.WebBrowserPermission\"></xref> object controls the ability to create the WebBrowser control."}],"pos":[1326,1462],"yaml":true},{"content":"In the Windows Presentation Foundation (WPF), the Web browser control enables frames to navigate HTML. This permission uses the values of the <xref:System.Security.Permissions.WebBrowserPermission> enumerations.  \n  \n## XAML Attribute Usage  \n This class is not typically used in XAML.","nodes":[{"pos":[0,211],"content":"In the Windows Presentation Foundation (WPF), the Web browser control enables frames to navigate HTML. This permission uses the values of the <xref:System.Security.Permissions.WebBrowserPermission> enumerations.","nodes":[{"content":"In the Windows Presentation Foundation (WPF), the Web browser control enables frames to navigate HTML. This permission uses the values of the <xref:System.Security.Permissions.WebBrowserPermission> enumerations.","pos":[0,211],"nodes":[{"content":"In the Windows Presentation Foundation (WPF), the Web browser control enables frames to navigate HTML.","pos":[0,102]},{"content":"This permission uses the values of the <ph id=\"ph1\">&lt;xref:System.Security.Permissions.WebBrowserPermission&gt;</ph> enumerations.","pos":[103,211],"source":" This permission uses the values of the <xref:System.Security.Permissions.WebBrowserPermission> enumerations."}]}]},{"pos":[220,240],"content":"XAML Attribute Usage","linkify":"XAML Attribute Usage","nodes":[{"content":"XAML Attribute Usage","pos":[0,20]}]},{"pos":[244,285],"content":"This class is not typically used in XAML.","nodes":[{"content":"This class is not typically used in XAML.","pos":[0,41]}]}],"pos":[1473,1764],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.Security.Permissions.WebBrowserPermission\"></xref> class.","nodes":[{"pos":[0,110],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Security.Permissions.WebBrowserPermission\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.Security.Permissions.WebBrowserPermission\"></xref> class."}],"pos":[4236,4347],"yaml":true},{"content":"By default, the value of the <xref:System.Security.Permissions.WebBrowserPermission.Level%2A> property is set to <xref:System.Security.Permissions.WebBrowserPermissionLevel.Safe>.","nodes":[{"pos":[0,179],"content":"By default, the value of the <xref:System.Security.Permissions.WebBrowserPermission.Level%2A> property is set to <xref:System.Security.Permissions.WebBrowserPermissionLevel.Safe>.","nodes":[{"content":"By default, the value of the <ph id=\"ph1\">&lt;xref:System.Security.Permissions.WebBrowserPermission.Level%2A&gt;</ph> property is set to <ph id=\"ph2\">&lt;xref:System.Security.Permissions.WebBrowserPermissionLevel.Safe&gt;</ph>.","pos":[0,179],"source":"By default, the value of the <xref:System.Security.Permissions.WebBrowserPermission.Level%2A> property is set to <xref:System.Security.Permissions.WebBrowserPermissionLevel.Safe>."}]}],"pos":[4358,4538],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.Security.Permissions.WebBrowserPermission\"></xref> class by specifying a permission state.","nodes":[{"pos":[0,143],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Security.Permissions.WebBrowserPermission\"&gt;&lt;/xref&gt;</ph> class by specifying a permission state.","source":"Initializes a new instance of the <xref href=\"System.Security.Permissions.WebBrowserPermission\"></xref> class by specifying a permission state."}],"pos":[5897,6041],"yaml":true},{"content":"If `state` is set to <xref:System.Security.Permissions.PermissionState.Unrestricted>, the value of the <xref:System.Security.Permissions.WebBrowserPermission.Level%2A> property is set to <xref:System.Security.Permissions.WebBrowserPermissionLevel.Unrestricted>. If `state` is set to <xref:System.Security.Permissions.PermissionState.None>, the value of the <xref:System.Security.Permissions.WebBrowserPermission.Level%2A> property is set to <xref:System.Security.Permissions.WebBrowserPermissionLevel.None>.","nodes":[{"pos":[0,507],"content":"If `state` is set to <xref:System.Security.Permissions.PermissionState.Unrestricted>, the value of the <xref:System.Security.Permissions.WebBrowserPermission.Level%2A> property is set to <xref:System.Security.Permissions.WebBrowserPermissionLevel.Unrestricted>. If `state` is set to <xref:System.Security.Permissions.PermissionState.None>, the value of the <xref:System.Security.Permissions.WebBrowserPermission.Level%2A> property is set to <xref:System.Security.Permissions.WebBrowserPermissionLevel.None>.","nodes":[{"content":"If <ph id=\"ph1\">`state`</ph> is set to <ph id=\"ph2\">&lt;xref:System.Security.Permissions.PermissionState.Unrestricted&gt;</ph>, the value of the <ph id=\"ph3\">&lt;xref:System.Security.Permissions.WebBrowserPermission.Level%2A&gt;</ph> property is set to <ph id=\"ph4\">&lt;xref:System.Security.Permissions.WebBrowserPermissionLevel.Unrestricted&gt;</ph>.","pos":[0,261],"source":"If `state` is set to <xref:System.Security.Permissions.PermissionState.Unrestricted>, the value of the <xref:System.Security.Permissions.WebBrowserPermission.Level%2A> property is set to <xref:System.Security.Permissions.WebBrowserPermissionLevel.Unrestricted>."},{"content":"If <ph id=\"ph1\">`state`</ph> is set to <ph id=\"ph2\">&lt;xref:System.Security.Permissions.PermissionState.None&gt;</ph>, the value of the <ph id=\"ph3\">&lt;xref:System.Security.Permissions.WebBrowserPermission.Level%2A&gt;</ph> property is set to <ph id=\"ph4\">&lt;xref:System.Security.Permissions.WebBrowserPermissionLevel.None&gt;</ph>.","pos":[262,507],"source":" If `state` is set to <xref:System.Security.Permissions.PermissionState.None>, the value of the <xref:System.Security.Permissions.WebBrowserPermission.Level%2A> property is set to <xref:System.Security.Permissions.WebBrowserPermissionLevel.None>."}]}],"pos":[6052,6560],"yaml":true,"extradata":"MT"},{"content":"An enumerated value of <xref href=\"System.Security.Permissions.PermissionState\"></xref>.","nodes":[{"pos":[0,88],"content":"An enumerated value of <ph id=\"ph1\">&lt;xref href=\"System.Security.Permissions.PermissionState\"&gt;&lt;/xref&gt;</ph>.","source":"An enumerated value of <xref href=\"System.Security.Permissions.PermissionState\"></xref>."}],"pos":[7346,7435],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.Security.Permissions.WebBrowserPermission\"></xref> class by specifying the Web browser permission level.","nodes":[{"pos":[0,157],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Security.Permissions.WebBrowserPermission\"&gt;&lt;/xref&gt;</ph> class by specifying the Web browser permission level.","source":"Initializes a new instance of the <xref href=\"System.Security.Permissions.WebBrowserPermission\"></xref> class by specifying the Web browser permission level."}],"pos":[8780,8938],"yaml":true},{"content":"An enumerated value of <xref href=\"System.Security.Permissions.WebBrowserPermissionLevel\"></xref>.","nodes":[{"pos":[0,98],"content":"An enumerated value of <ph id=\"ph1\">&lt;xref href=\"System.Security.Permissions.WebBrowserPermissionLevel\"&gt;&lt;/xref&gt;</ph>.","source":"An enumerated value of <xref href=\"System.Security.Permissions.WebBrowserPermissionLevel\"></xref>."}],"pos":[9808,9907],"yaml":true},{"content":"Creates and returns an identical copy of the current permission.","nodes":[{"pos":[0,64],"content":"Creates and returns an identical copy of the current permission.","nodes":[{"content":"Creates and returns an identical copy of the current permission.","pos":[0,64]}]}],"pos":[10954,11019],"yaml":true},{"content":"A copy of a permission represents the same access to resources as the original permission.  \n  \n## XAML Attribute Usage  \n Members of this class are either not typically used in XAML, or cannot be used in XAML.","nodes":[{"pos":[0,90],"content":"A copy of a permission represents the same access to resources as the original permission.","nodes":[{"content":"A copy of a permission represents the same access to resources as the original permission.","pos":[0,90]}]},{"pos":[99,119],"content":"XAML Attribute Usage","linkify":"XAML Attribute Usage","nodes":[{"content":"XAML Attribute Usage","pos":[0,20]}]},{"pos":[123,210],"content":"Members of this class are either not typically used in XAML, or cannot be used in XAML.","nodes":[{"content":"Members of this class are either not typically used in XAML, or cannot be used in XAML.","pos":[0,87]}]}],"pos":[11030,11246],"yaml":true,"extradata":"MT"},{"content":"A copy of the current permission.","nodes":[{"pos":[0,33],"content":"A copy of the current permission.","nodes":[{"content":"A copy of the current permission.","pos":[0,33]}]}],"pos":[11412,11446],"yaml":true},{"content":"Reconstructs a permission with a specified state from an XML encoding.","nodes":[{"pos":[0,70],"content":"Reconstructs a permission with a specified state from an XML encoding.","nodes":[{"content":"Reconstructs a permission with a specified state from an XML encoding.","pos":[0,70]}]}],"pos":[12654,12725],"yaml":true},{"content":"## XAML Attribute Usage  \n Members of this class are either not typically used in XAML, or cannot be used in XAML.","nodes":[{"pos":[3,23],"content":"XAML Attribute Usage","linkify":"XAML Attribute Usage","nodes":[{"content":"XAML Attribute Usage","pos":[0,20]}]},{"pos":[27,114],"content":"Members of this class are either not typically used in XAML, or cannot be used in XAML.","nodes":[{"content":"Members of this class are either not typically used in XAML, or cannot be used in XAML.","pos":[0,87]}]}],"pos":[12736,12854],"yaml":true,"extradata":"MT"},{"content":"The XML encoding to use to reconstruct the permission.","nodes":[{"pos":[0,54],"content":"The XML encoding to use to reconstruct the permission.","nodes":[{"content":"The XML encoding to use to reconstruct the permission.","pos":[0,54]}]}],"pos":[13062,13117],"yaml":true},{"content":"Creates and returns a permission that is the intersection of the current permission and the specified permission.","nodes":[{"pos":[0,113],"content":"Creates and returns a permission that is the intersection of the current permission and the specified permission.","nodes":[{"content":"Creates and returns a permission that is the intersection of the current permission and the specified permission.","pos":[0,113]}]}],"pos":[14316,14430],"yaml":true},{"content":"## XAML Attribute Usage  \n Members of this class are either not typically used in XAML, or cannot be used in XAML.","nodes":[{"pos":[3,23],"content":"XAML Attribute Usage","linkify":"XAML Attribute Usage","nodes":[{"content":"XAML Attribute Usage","pos":[0,20]}]},{"pos":[27,114],"content":"Members of this class are either not typically used in XAML, or cannot be used in XAML.","nodes":[{"content":"Members of this class are either not typically used in XAML, or cannot be used in XAML.","pos":[0,87]}]}],"pos":[14441,14559],"yaml":true,"extradata":"MT"},{"content":"A permission to intersect with the current permission. It must be of the same type as the current permission.","nodes":[{"pos":[0,109],"content":"A permission to intersect with the current permission. It must be of the same type as the current permission.","nodes":[{"content":"A permission to intersect with the current permission. It must be of the same type as the current permission.","pos":[0,109],"nodes":[{"content":"A permission to intersect with the current permission.","pos":[0,54]},{"content":"It must be of the same type as the current permission.","pos":[55,109]}]}]}],"pos":[14766,14876],"yaml":true},{"content":"The intersection of two permissions is a permission that describes the state that they both describe in common. Only a demand that passes both original permissions will be valid for the intersected permission.","nodes":[{"pos":[0,209],"content":"The intersection of two permissions is a permission that describes the state that they both describe in common. Only a demand that passes both original permissions will be valid for the intersected permission.","nodes":[{"content":"The intersection of two permissions is a permission that describes the state that they both describe in common. Only a demand that passes both original permissions will be valid for the intersected permission.","pos":[0,209],"nodes":[{"content":"The intersection of two permissions is a permission that describes the state that they both describe in common.","pos":[0,111]},{"content":"Only a demand that passes both original permissions will be valid for the intersected permission.","pos":[112,209]}]}]}],"pos":[14947,15157],"yaml":true},{"content":"Determines whether the current permission is a subset of the specified permission.","nodes":[{"pos":[0,82],"content":"Determines whether the current permission is a subset of the specified permission.","nodes":[{"content":"Determines whether the current permission is a subset of the specified permission.","pos":[0,82]}]}],"pos":[16364,16447],"yaml":true},{"content":"The current permission is a subset of the specified permission if the current permission specifies a set of operations that is wholly contained by the specified permission. For example, a permission that represents access to C:\\example.txt is a subset of a permission that represents access to C:\\\\.  \n  \n If this method returns `true`, the current permission represents no more access to the protected resource than does the specified permission.  \n  \n## XAML Attribute Usage  \n Members of this class are either not typically used in XAML, or cannot be used in XAML.","nodes":[{"pos":[0,299],"content":"The current permission is a subset of the specified permission if the current permission specifies a set of operations that is wholly contained by the specified permission. For example, a permission that represents access to C:\\example.txt is a subset of a permission that represents access to C:\\\\.","nodes":[{"content":"The current permission is a subset of the specified permission if the current permission specifies a set of operations that is wholly contained by the specified permission. For example, a permission that represents access to C:\\example.txt is a subset of a permission that represents access to C:\\\\.","pos":[0,299],"nodes":[{"content":"The current permission is a subset of the specified permission if the current permission specifies a set of operations that is wholly contained by the specified permission.","pos":[0,172]},{"content":"For example, a permission that represents access to C:\\example.txt is a subset of a permission that represents access to C:<ph id=\"ph1\">\\\\</ph>.","pos":[173,299],"source":" For example, a permission that represents access to C:\\example.txt is a subset of a permission that represents access to C:\\\\."}]}]},{"pos":[306,447],"content":"If this method returns <ph id=\"ph1\">`true`</ph>, the current permission represents no more access to the protected resource than does the specified permission.","source":"If this method returns `true`, the current permission represents no more access to the protected resource than does the specified permission."},{"pos":[456,476],"content":"XAML Attribute Usage","linkify":"XAML Attribute Usage","nodes":[{"content":"XAML Attribute Usage","pos":[0,20]}]},{"pos":[480,567],"content":"Members of this class are either not typically used in XAML, or cannot be used in XAML.","nodes":[{"content":"Members of this class are either not typically used in XAML, or cannot be used in XAML.","pos":[0,87]}]}],"pos":[16458,17036],"yaml":true,"extradata":"MT"},{"content":"A permission that is to be tested for the subset relationship. This permission must be of the same type as the current permission.","nodes":[{"pos":[0,130],"content":"A permission that is to be tested for the subset relationship. This permission must be of the same type as the current permission.","nodes":[{"content":"A permission that is to be tested for the subset relationship. This permission must be of the same type as the current permission.","pos":[0,130],"nodes":[{"content":"A permission that is to be tested for the subset relationship.","pos":[0,62]},{"content":"This permission must be of the same type as the current permission.","pos":[63,130]}]}]}],"pos":[17221,17352],"yaml":true},{"content":"`true` if the current permission is a subset of the specified permission; otherwise, `false`.","nodes":[{"pos":[0,93],"content":"<ph id=\"ph1\">`true`</ph> if the current permission is a subset of the specified permission; otherwise, <ph id=\"ph2\">`false`</ph>.","source":"`true` if the current permission is a subset of the specified permission; otherwise, `false`."}],"pos":[17410,17506],"yaml":true},{"content":"Returns a value indicating whether the current permission is unrestricted.","nodes":[{"pos":[0,74],"content":"Returns a value indicating whether the current permission is unrestricted.","nodes":[{"content":"Returns a value indicating whether the current permission is unrestricted.","pos":[0,74]}]}],"pos":[18618,18693],"yaml":true},{"content":"An unrestricted permission represents access to any and all resources protected by the permission.  \n  \n## XAML Attribute Usage  \n Members of this class are either not typically used in XAML, or cannot be used in XAML.","nodes":[{"pos":[0,98],"content":"An unrestricted permission represents access to any and all resources protected by the permission.","nodes":[{"content":"An unrestricted permission represents access to any and all resources protected by the permission.","pos":[0,98]}]},{"pos":[107,127],"content":"XAML Attribute Usage","linkify":"XAML Attribute Usage","nodes":[{"content":"XAML Attribute Usage","pos":[0,20]}]},{"pos":[131,218],"content":"Members of this class are either not typically used in XAML, or cannot be used in XAML.","nodes":[{"content":"Members of this class are either not typically used in XAML, or cannot be used in XAML.","pos":[0,87]}]}],"pos":[18704,18928],"yaml":true,"extradata":"MT"},{"content":"`true` if the <xref href=\"System.Security.Permissions.WebBrowserPermission.Level\"></xref> property is set to <xref href=\"System.Security.Permissions.WebBrowserPermissionLevel.Unrestricted\"></xref>; otherwise, `false`.","nodes":[{"pos":[0,217],"content":"<ph id=\"ph1\">`true`</ph> if the <ph id=\"ph2\">&lt;xref href=\"System.Security.Permissions.WebBrowserPermission.Level\"&gt;&lt;/xref&gt;</ph> property is set to <ph id=\"ph3\">&lt;xref href=\"System.Security.Permissions.WebBrowserPermissionLevel.Unrestricted\"&gt;&lt;/xref&gt;</ph>; otherwise, <ph id=\"ph4\">`false`</ph>.","source":"`true` if the <xref href=\"System.Security.Permissions.WebBrowserPermission.Level\"></xref> property is set to <xref href=\"System.Security.Permissions.WebBrowserPermissionLevel.Unrestricted\"></xref>; otherwise, `false`."}],"pos":[19594,19814],"yaml":true},{"content":"Gets or sets the current value of the Web browser permission level.","nodes":[{"pos":[0,67],"content":"Gets or sets the current value of the Web browser permission level.","nodes":[{"content":"Gets or sets the current value of the Web browser permission level.","pos":[0,67]}]}],"pos":[20872,20940],"yaml":true},{"content":"## XAML Attribute Usage  \n Members of this class are either not typically used in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)], or cannot be used in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)].","nodes":[{"pos":[3,23],"content":"XAML Attribute Usage","linkify":"XAML Attribute Usage","nodes":[{"content":"XAML Attribute Usage","pos":[0,20]}]},{"pos":[27,228],"content":"Members of this class are either not typically used in <ph id=\"ph1\">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph>, or cannot be used in <ph id=\"ph2\">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph>.","source":"Members of this class are either not typically used in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)], or cannot be used in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]."}],"pos":[20951,21183],"yaml":true,"extradata":"MT"},{"content":"The current value of the Web browser permission level.","nodes":[{"pos":[0,54],"content":"The current value of the Web browser permission level.","nodes":[{"content":"The current value of the Web browser permission level.","pos":[0,54]}]}],"pos":[21974,22029],"yaml":true},{"content":"Creates an XML encoding of the permission and its current state.","nodes":[{"pos":[0,64],"content":"Creates an XML encoding of the permission and its current state.","nodes":[{"content":"Creates an XML encoding of the permission and its current state.","pos":[0,64]}]}],"pos":[23082,23147],"yaml":true},{"content":"## XAML Attribute Usage  \n Members of this class are either not typically used in XAML, or cannot be used in XAML.","nodes":[{"pos":[3,23],"content":"XAML Attribute Usage","linkify":"XAML Attribute Usage","nodes":[{"content":"XAML Attribute Usage","pos":[0,20]}]},{"pos":[27,114],"content":"Members of this class are either not typically used in XAML, or cannot be used in XAML.","nodes":[{"content":"Members of this class are either not typically used in XAML, or cannot be used in XAML.","pos":[0,87]}]}],"pos":[23158,23276],"yaml":true,"extradata":"MT"},{"content":"An XML encoding of the permission, including any state information.","nodes":[{"pos":[0,67],"content":"An XML encoding of the permission, including any state information.","nodes":[{"content":"An XML encoding of the permission, including any state information.","pos":[0,67]}]}],"pos":[23451,23519],"yaml":true},{"content":"Creates a permission that is the union of the current permission and the specified permission.","nodes":[{"pos":[0,94],"content":"Creates a permission that is the union of the current permission and the specified permission.","nodes":[{"content":"Creates a permission that is the union of the current permission and the specified permission.","pos":[0,94]}]}],"pos":[24692,24787],"yaml":true},{"content":"## XAML Attribute Usage  \n Members of this class are either not typically used in XAML, or cannot be used in XAML.","nodes":[{"pos":[3,23],"content":"XAML Attribute Usage","linkify":"XAML Attribute Usage","nodes":[{"content":"XAML Attribute Usage","pos":[0,20]}]},{"pos":[27,114],"content":"Members of this class are either not typically used in XAML, or cannot be used in XAML.","nodes":[{"content":"Members of this class are either not typically used in XAML, or cannot be used in XAML.","pos":[0,87]}]}],"pos":[24798,24916],"yaml":true,"extradata":"MT"},{"content":"A permission to combine with the current permission. It must be of the same type as the current permission.","nodes":[{"pos":[0,107],"content":"A permission to combine with the current permission. It must be of the same type as the current permission.","nodes":[{"content":"A permission to combine with the current permission. It must be of the same type as the current permission.","pos":[0,107],"nodes":[{"content":"A permission to combine with the current permission.","pos":[0,52]},{"content":"It must be of the same type as the current permission.","pos":[53,107]}]}]}],"pos":[25119,25227],"yaml":true},{"content":"A new permission that represents the union of the current permission and the specified permission.","nodes":[{"pos":[0,98],"content":"A new permission that represents the union of the current permission and the specified permission.","nodes":[{"content":"A new permission that represents the union of the current permission and the specified permission.","pos":[0,98]}]}],"pos":[25298,25397],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Security.Permissions.WebBrowserPermission\n  commentId: T:System.Security.Permissions.WebBrowserPermission\n  id: WebBrowserPermission\n  children:\n  - System.Security.Permissions.WebBrowserPermission.#ctor\n  - System.Security.Permissions.WebBrowserPermission.#ctor(System.Security.Permissions.PermissionState)\n  - System.Security.Permissions.WebBrowserPermission.#ctor(System.Security.Permissions.WebBrowserPermissionLevel)\n  - System.Security.Permissions.WebBrowserPermission.Copy\n  - System.Security.Permissions.WebBrowserPermission.FromXml(System.Security.SecurityElement)\n  - System.Security.Permissions.WebBrowserPermission.Intersect(System.Security.IPermission)\n  - System.Security.Permissions.WebBrowserPermission.IsSubsetOf(System.Security.IPermission)\n  - System.Security.Permissions.WebBrowserPermission.IsUnrestricted\n  - System.Security.Permissions.WebBrowserPermission.Level\n  - System.Security.Permissions.WebBrowserPermission.ToXml\n  - System.Security.Permissions.WebBrowserPermission.Union(System.Security.IPermission)\n  langs:\n  - csharp\n  name: WebBrowserPermission\n  nameWithType: WebBrowserPermission\n  fullName: System.Security.Permissions.WebBrowserPermission\n  type: Class\n  assemblies:\n  - WindowsBase\n  namespace: System.Security.Permissions\n  summary: The <xref href=\"System.Security.Permissions.WebBrowserPermission\"></xref> object controls the ability to create the WebBrowser control.\n  remarks: \"In the Windows Presentation Foundation (WPF), the Web browser control enables frames to navigate HTML. This permission uses the values of the <xref:System.Security.Permissions.WebBrowserPermission> enumerations.  \\n  \\n## XAML Attribute Usage  \\n This class is not typically used in XAML.\"\n  syntax:\n    content: 'public sealed class WebBrowserPermission : System.Security.CodeAccessPermission, System.Security.Permissions.IUnrestrictedPermission'\n  inheritance:\n  - System.Object\n  - System.Security.CodeAccessPermission\n  implements:\n  - System.Security.Permissions.IUnrestrictedPermission\n  inheritedMembers:\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Security.CodeAccessPermission.Assert\n  - System.Security.CodeAccessPermission.Demand\n  - System.Security.CodeAccessPermission.Deny\n  - System.Security.CodeAccessPermission.Equals(System.Object)\n  - System.Security.CodeAccessPermission.GetHashCode\n  - System.Security.CodeAccessPermission.PermitOnly\n  - System.Security.CodeAccessPermission.RevertAll\n  - System.Security.CodeAccessPermission.RevertAssert\n  - System.Security.CodeAccessPermission.RevertDeny\n  - System.Security.CodeAccessPermission.RevertPermitOnly\n  - System.Security.CodeAccessPermission.System#Security#IPermission#Demand\n  - System.Security.CodeAccessPermission.System#Security#IStackWalk#Assert\n  - System.Security.CodeAccessPermission.System#Security#IStackWalk#Demand\n  - System.Security.CodeAccessPermission.System#Security#IStackWalk#Deny\n  - System.Security.CodeAccessPermission.System#Security#IStackWalk#PermitOnly\n  - System.Security.CodeAccessPermission.ToString\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/WebBrowserPermission.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Permissions.WebBrowserPermission.#ctor\n  commentId: M:System.Security.Permissions.WebBrowserPermission.#ctor\n  id: '#ctor'\n  parent: System.Security.Permissions.WebBrowserPermission\n  langs:\n  - csharp\n  name: WebBrowserPermission()\n  nameWithType: WebBrowserPermission.WebBrowserPermission()\n  fullName: WebBrowserPermission.WebBrowserPermission()\n  type: Constructor\n  assemblies:\n  - WindowsBase\n  namespace: System.Security.Permissions\n  summary: Initializes a new instance of the <xref href=\"System.Security.Permissions.WebBrowserPermission\"></xref> class.\n  remarks: By default, the value of the <xref:System.Security.Permissions.WebBrowserPermission.Level%2A> property is set to <xref:System.Security.Permissions.WebBrowserPermissionLevel.Safe>.\n  syntax:\n    content: public WebBrowserPermission ();\n    parameters: []\n  overload: System.Security.Permissions.WebBrowserPermission.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/WebBrowserPermission.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Permissions.WebBrowserPermission.#ctor(System.Security.Permissions.PermissionState)\n  commentId: M:System.Security.Permissions.WebBrowserPermission.#ctor(System.Security.Permissions.PermissionState)\n  id: '#ctor(System.Security.Permissions.PermissionState)'\n  parent: System.Security.Permissions.WebBrowserPermission\n  langs:\n  - csharp\n  name: WebBrowserPermission(PermissionState)\n  nameWithType: WebBrowserPermission.WebBrowserPermission(PermissionState)\n  fullName: WebBrowserPermission.WebBrowserPermission(PermissionState)\n  type: Constructor\n  assemblies:\n  - WindowsBase\n  namespace: System.Security.Permissions\n  summary: Initializes a new instance of the <xref href=\"System.Security.Permissions.WebBrowserPermission\"></xref> class by specifying a permission state.\n  remarks: If `state` is set to <xref:System.Security.Permissions.PermissionState.Unrestricted>, the value of the <xref:System.Security.Permissions.WebBrowserPermission.Level%2A> property is set to <xref:System.Security.Permissions.WebBrowserPermissionLevel.Unrestricted>. If `state` is set to <xref:System.Security.Permissions.PermissionState.None>, the value of the <xref:System.Security.Permissions.WebBrowserPermission.Level%2A> property is set to <xref:System.Security.Permissions.WebBrowserPermissionLevel.None>.\n  example:\n  - \"The following code example shows how to create a <xref:System.Security.Permissions.WebBrowserPermission> with a <xref:System.Security.Permissions.PermissionState> value.  \\n  \\n [!code-csharp[WebBrowserPermissionsSnippets#WebBrowserPermission1](~/samples/snippets/csharp/VS_Snippets_Wpf/WebBrowserPermissionsSnippets/CSharp/Window1.xaml.cs#webbrowserpermission1)]\\n [!code-vb[WebBrowserPermissionsSnippets#WebBrowserPermission1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/WebBrowserPermissionsSnippets/visualbasic/window1.xaml.vb#webbrowserpermission1)]\"\n  syntax:\n    content: public WebBrowserPermission (System.Security.Permissions.PermissionState state);\n    parameters:\n    - id: state\n      type: System.Security.Permissions.PermissionState\n      description: An enumerated value of <xref href=\"System.Security.Permissions.PermissionState\"></xref>.\n  overload: System.Security.Permissions.WebBrowserPermission.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/WebBrowserPermission.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Permissions.WebBrowserPermission.#ctor(System.Security.Permissions.WebBrowserPermissionLevel)\n  commentId: M:System.Security.Permissions.WebBrowserPermission.#ctor(System.Security.Permissions.WebBrowserPermissionLevel)\n  id: '#ctor(System.Security.Permissions.WebBrowserPermissionLevel)'\n  parent: System.Security.Permissions.WebBrowserPermission\n  langs:\n  - csharp\n  name: WebBrowserPermission(WebBrowserPermissionLevel)\n  nameWithType: WebBrowserPermission.WebBrowserPermission(WebBrowserPermissionLevel)\n  fullName: WebBrowserPermission.WebBrowserPermission(WebBrowserPermissionLevel)\n  type: Constructor\n  assemblies:\n  - WindowsBase\n  namespace: System.Security.Permissions\n  summary: Initializes a new instance of the <xref href=\"System.Security.Permissions.WebBrowserPermission\"></xref> class by specifying the Web browser permission level.\n  remarks: ''\n  example:\n  - \"The following code example shows how to create a <xref:System.Security.Permissions.WebBrowserPermission> with a <xref:System.Security.Permissions.WebBrowserPermissionLevel> value.  \\n  \\n [!code-csharp[WebBrowserPermissionsSnippets#WebBrowserPermission2](~/samples/snippets/csharp/VS_Snippets_Wpf/WebBrowserPermissionsSnippets/CSharp/Window1.xaml.cs#webbrowserpermission2)]\\n [!code-vb[WebBrowserPermissionsSnippets#WebBrowserPermission2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/WebBrowserPermissionsSnippets/visualbasic/window1.xaml.vb#webbrowserpermission2)]\"\n  syntax:\n    content: public WebBrowserPermission (System.Security.Permissions.WebBrowserPermissionLevel webBrowserPermissionLevel);\n    parameters:\n    - id: webBrowserPermissionLevel\n      type: System.Security.Permissions.WebBrowserPermissionLevel\n      description: An enumerated value of <xref href=\"System.Security.Permissions.WebBrowserPermissionLevel\"></xref>.\n  overload: System.Security.Permissions.WebBrowserPermission.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/WebBrowserPermission.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Permissions.WebBrowserPermission.Copy\n  commentId: M:System.Security.Permissions.WebBrowserPermission.Copy\n  id: Copy\n  parent: System.Security.Permissions.WebBrowserPermission\n  langs:\n  - csharp\n  name: Copy()\n  nameWithType: WebBrowserPermission.Copy()\n  fullName: WebBrowserPermission.Copy()\n  type: Method\n  assemblies:\n  - WindowsBase\n  namespace: System.Security.Permissions\n  summary: Creates and returns an identical copy of the current permission.\n  remarks: \"A copy of a permission represents the same access to resources as the original permission.  \\n  \\n## XAML Attribute Usage  \\n Members of this class are either not typically used in XAML, or cannot be used in XAML.\"\n  syntax:\n    content: public override System.Security.IPermission Copy ();\n    parameters: []\n    return:\n      type: System.Security.IPermission\n      description: A copy of the current permission.\n  overload: System.Security.Permissions.WebBrowserPermission.Copy*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/WebBrowserPermission.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Permissions.WebBrowserPermission.FromXml(System.Security.SecurityElement)\n  commentId: M:System.Security.Permissions.WebBrowserPermission.FromXml(System.Security.SecurityElement)\n  id: FromXml(System.Security.SecurityElement)\n  parent: System.Security.Permissions.WebBrowserPermission\n  langs:\n  - csharp\n  name: FromXml(SecurityElement)\n  nameWithType: WebBrowserPermission.FromXml(SecurityElement)\n  fullName: WebBrowserPermission.FromXml(SecurityElement)\n  type: Method\n  assemblies:\n  - WindowsBase\n  namespace: System.Security.Permissions\n  summary: Reconstructs a permission with a specified state from an XML encoding.\n  remarks: \"## XAML Attribute Usage  \\n Members of this class are either not typically used in XAML, or cannot be used in XAML.\"\n  syntax:\n    content: public override void FromXml (System.Security.SecurityElement securityElement);\n    parameters:\n    - id: securityElement\n      type: System.Security.SecurityElement\n      description: The XML encoding to use to reconstruct the permission.\n  overload: System.Security.Permissions.WebBrowserPermission.FromXml*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/WebBrowserPermission.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Permissions.WebBrowserPermission.Intersect(System.Security.IPermission)\n  commentId: M:System.Security.Permissions.WebBrowserPermission.Intersect(System.Security.IPermission)\n  id: Intersect(System.Security.IPermission)\n  parent: System.Security.Permissions.WebBrowserPermission\n  langs:\n  - csharp\n  name: Intersect(IPermission)\n  nameWithType: WebBrowserPermission.Intersect(IPermission)\n  fullName: WebBrowserPermission.Intersect(IPermission)\n  type: Method\n  assemblies:\n  - WindowsBase\n  namespace: System.Security.Permissions\n  summary: Creates and returns a permission that is the intersection of the current permission and the specified permission.\n  remarks: \"## XAML Attribute Usage  \\n Members of this class are either not typically used in XAML, or cannot be used in XAML.\"\n  syntax:\n    content: public override System.Security.IPermission Intersect (System.Security.IPermission target);\n    parameters:\n    - id: target\n      type: System.Security.IPermission\n      description: A permission to intersect with the current permission. It must be of the same type as the current permission.\n    return:\n      type: System.Security.IPermission\n      description: The intersection of two permissions is a permission that describes the state that they both describe in common. Only a demand that passes both original permissions will be valid for the intersected permission.\n  overload: System.Security.Permissions.WebBrowserPermission.Intersect*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/WebBrowserPermission.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Permissions.WebBrowserPermission.IsSubsetOf(System.Security.IPermission)\n  commentId: M:System.Security.Permissions.WebBrowserPermission.IsSubsetOf(System.Security.IPermission)\n  id: IsSubsetOf(System.Security.IPermission)\n  parent: System.Security.Permissions.WebBrowserPermission\n  langs:\n  - csharp\n  name: IsSubsetOf(IPermission)\n  nameWithType: WebBrowserPermission.IsSubsetOf(IPermission)\n  fullName: WebBrowserPermission.IsSubsetOf(IPermission)\n  type: Method\n  assemblies:\n  - WindowsBase\n  namespace: System.Security.Permissions\n  summary: Determines whether the current permission is a subset of the specified permission.\n  remarks: \"The current permission is a subset of the specified permission if the current permission specifies a set of operations that is wholly contained by the specified permission. For example, a permission that represents access to C:\\\\example.txt is a subset of a permission that represents access to C:\\\\\\\\.  \\n  \\n If this method returns `true`, the current permission represents no more access to the protected resource than does the specified permission.  \\n  \\n## XAML Attribute Usage  \\n Members of this class are either not typically used in XAML, or cannot be used in XAML.\"\n  syntax:\n    content: public override bool IsSubsetOf (System.Security.IPermission target);\n    parameters:\n    - id: target\n      type: System.Security.IPermission\n      description: A permission that is to be tested for the subset relationship. This permission must be of the same type as the current permission.\n    return:\n      type: System.Boolean\n      description: '`true` if the current permission is a subset of the specified permission; otherwise, `false`.'\n  overload: System.Security.Permissions.WebBrowserPermission.IsSubsetOf*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/WebBrowserPermission.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Permissions.WebBrowserPermission.IsUnrestricted\n  commentId: M:System.Security.Permissions.WebBrowserPermission.IsUnrestricted\n  id: IsUnrestricted\n  parent: System.Security.Permissions.WebBrowserPermission\n  langs:\n  - csharp\n  name: IsUnrestricted()\n  nameWithType: WebBrowserPermission.IsUnrestricted()\n  fullName: WebBrowserPermission.IsUnrestricted()\n  type: Method\n  assemblies:\n  - WindowsBase\n  namespace: System.Security.Permissions\n  summary: Returns a value indicating whether the current permission is unrestricted.\n  remarks: \"An unrestricted permission represents access to any and all resources protected by the permission.  \\n  \\n## XAML Attribute Usage  \\n Members of this class are either not typically used in XAML, or cannot be used in XAML.\"\n  example:\n  - \"The following code example shows how to use the <xref:System.Security.Permissions.WebBrowserPermission.IsUnrestricted%2A> method.  \\n  \\n [!code-csharp[WebBrowserPermissionsSnippets#WebBrowserPermission5](~/samples/snippets/csharp/VS_Snippets_Wpf/WebBrowserPermissionsSnippets/CSharp/Window1.xaml.cs#webbrowserpermission5)]\\n [!code-vb[WebBrowserPermissionsSnippets#WebBrowserPermission5](~/samples/snippets/visualbasic/VS_Snippets_Wpf/WebBrowserPermissionsSnippets/visualbasic/window1.xaml.vb#webbrowserpermission5)]\"\n  syntax:\n    content: public bool IsUnrestricted ();\n    parameters: []\n    return:\n      type: System.Boolean\n      description: '`true` if the <xref href=\"System.Security.Permissions.WebBrowserPermission.Level\"></xref> property is set to <xref href=\"System.Security.Permissions.WebBrowserPermissionLevel.Unrestricted\"></xref>; otherwise, `false`.'\n  overload: System.Security.Permissions.WebBrowserPermission.IsUnrestricted*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/WebBrowserPermission.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Permissions.WebBrowserPermission.Level\n  commentId: P:System.Security.Permissions.WebBrowserPermission.Level\n  id: Level\n  parent: System.Security.Permissions.WebBrowserPermission\n  langs:\n  - csharp\n  name: Level\n  nameWithType: WebBrowserPermission.Level\n  fullName: WebBrowserPermission.Level\n  type: Property\n  assemblies:\n  - WindowsBase\n  namespace: System.Security.Permissions\n  summary: Gets or sets the current value of the Web browser permission level.\n  remarks: \"## XAML Attribute Usage  \\n Members of this class are either not typically used in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)], or cannot be used in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)].\"\n  example:\n  - \"The following code example shows how to retrieve the <xref:System.Security.Permissions.WebBrowserPermissionLevel> value for the <xref:System.Security.Permissions.WebBrowserPermission>.  \\n  \\n [!code-csharp[WebBrowserPermissionsSnippets#WebBrowserPermission6](~/samples/snippets/csharp/VS_Snippets_Wpf/WebBrowserPermissionsSnippets/CSharp/Window1.xaml.cs#webbrowserpermission6)]\\n [!code-vb[WebBrowserPermissionsSnippets#WebBrowserPermission6](~/samples/snippets/visualbasic/VS_Snippets_Wpf/WebBrowserPermissionsSnippets/visualbasic/window1.xaml.vb#webbrowserpermission6)]\"\n  syntax:\n    content: public System.Security.Permissions.WebBrowserPermissionLevel Level { get; set; }\n    return:\n      type: System.Security.Permissions.WebBrowserPermissionLevel\n      description: The current value of the Web browser permission level.\n  overload: System.Security.Permissions.WebBrowserPermission.Level*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/WebBrowserPermission.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Permissions.WebBrowserPermission.ToXml\n  commentId: M:System.Security.Permissions.WebBrowserPermission.ToXml\n  id: ToXml\n  parent: System.Security.Permissions.WebBrowserPermission\n  langs:\n  - csharp\n  name: ToXml()\n  nameWithType: WebBrowserPermission.ToXml()\n  fullName: WebBrowserPermission.ToXml()\n  type: Method\n  assemblies:\n  - WindowsBase\n  namespace: System.Security.Permissions\n  summary: Creates an XML encoding of the permission and its current state.\n  remarks: \"## XAML Attribute Usage  \\n Members of this class are either not typically used in XAML, or cannot be used in XAML.\"\n  syntax:\n    content: public override System.Security.SecurityElement ToXml ();\n    parameters: []\n    return:\n      type: System.Security.SecurityElement\n      description: An XML encoding of the permission, including any state information.\n  overload: System.Security.Permissions.WebBrowserPermission.ToXml*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/WebBrowserPermission.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.Permissions.WebBrowserPermission.Union(System.Security.IPermission)\n  commentId: M:System.Security.Permissions.WebBrowserPermission.Union(System.Security.IPermission)\n  id: Union(System.Security.IPermission)\n  parent: System.Security.Permissions.WebBrowserPermission\n  langs:\n  - csharp\n  name: Union(IPermission)\n  nameWithType: WebBrowserPermission.Union(IPermission)\n  fullName: WebBrowserPermission.Union(IPermission)\n  type: Method\n  assemblies:\n  - WindowsBase\n  namespace: System.Security.Permissions\n  summary: Creates a permission that is the union of the current permission and the specified permission.\n  remarks: \"## XAML Attribute Usage  \\n Members of this class are either not typically used in XAML, or cannot be used in XAML.\"\n  syntax:\n    content: public override System.Security.IPermission Union (System.Security.IPermission target);\n    parameters:\n    - id: target\n      type: System.Security.IPermission\n      description: A permission to combine with the current permission. It must be of the same type as the current permission.\n    return:\n      type: System.Security.IPermission\n      description: A new permission that represents the union of the current permission and the specified permission.\n  overload: System.Security.Permissions.WebBrowserPermission.Union*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/WebBrowserPermission.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\nreferences:\n- uid: System.Security.CodeAccessPermission\n  parent: System.Security\n  isExternal: false\n  name: CodeAccessPermission\n  nameWithType: CodeAccessPermission\n  fullName: System.Security.CodeAccessPermission\n- uid: System.Security.Permissions.WebBrowserPermission.#ctor\n  parent: System.Security.Permissions.WebBrowserPermission\n  isExternal: false\n  name: WebBrowserPermission()\n  nameWithType: WebBrowserPermission.WebBrowserPermission()\n  fullName: WebBrowserPermission.WebBrowserPermission()\n- uid: System.Security.Permissions.WebBrowserPermission.#ctor(System.Security.Permissions.PermissionState)\n  parent: System.Security.Permissions.WebBrowserPermission\n  isExternal: false\n  name: WebBrowserPermission(PermissionState)\n  nameWithType: WebBrowserPermission.WebBrowserPermission(PermissionState)\n  fullName: WebBrowserPermission.WebBrowserPermission(PermissionState)\n- uid: System.Security.Permissions.PermissionState\n  parent: System.Security.Permissions\n  isExternal: false\n  name: PermissionState\n  nameWithType: PermissionState\n  fullName: System.Security.Permissions.PermissionState\n- uid: System.Security.Permissions.WebBrowserPermission.#ctor(System.Security.Permissions.WebBrowserPermissionLevel)\n  parent: System.Security.Permissions.WebBrowserPermission\n  isExternal: false\n  name: WebBrowserPermission(WebBrowserPermissionLevel)\n  nameWithType: WebBrowserPermission.WebBrowserPermission(WebBrowserPermissionLevel)\n  fullName: WebBrowserPermission.WebBrowserPermission(WebBrowserPermissionLevel)\n- uid: System.Security.Permissions.WebBrowserPermissionLevel\n  parent: System.Security.Permissions\n  isExternal: false\n  name: WebBrowserPermissionLevel\n  nameWithType: WebBrowserPermissionLevel\n  fullName: System.Security.Permissions.WebBrowserPermissionLevel\n- uid: System.Security.Permissions.WebBrowserPermission.Copy\n  parent: System.Security.Permissions.WebBrowserPermission\n  isExternal: false\n  name: Copy()\n  nameWithType: WebBrowserPermission.Copy()\n  fullName: WebBrowserPermission.Copy()\n- uid: System.Security.IPermission\n  parent: System.Security\n  isExternal: false\n  name: IPermission\n  nameWithType: IPermission\n  fullName: System.Security.IPermission\n- uid: System.Security.Permissions.WebBrowserPermission.FromXml(System.Security.SecurityElement)\n  parent: System.Security.Permissions.WebBrowserPermission\n  isExternal: false\n  name: FromXml(SecurityElement)\n  nameWithType: WebBrowserPermission.FromXml(SecurityElement)\n  fullName: WebBrowserPermission.FromXml(SecurityElement)\n- uid: System.Security.SecurityElement\n  parent: System.Security\n  isExternal: false\n  name: SecurityElement\n  nameWithType: SecurityElement\n  fullName: System.Security.SecurityElement\n- uid: System.Security.Permissions.WebBrowserPermission.Intersect(System.Security.IPermission)\n  parent: System.Security.Permissions.WebBrowserPermission\n  isExternal: false\n  name: Intersect(IPermission)\n  nameWithType: WebBrowserPermission.Intersect(IPermission)\n  fullName: WebBrowserPermission.Intersect(IPermission)\n- uid: System.Security.Permissions.WebBrowserPermission.IsSubsetOf(System.Security.IPermission)\n  parent: System.Security.Permissions.WebBrowserPermission\n  isExternal: false\n  name: IsSubsetOf(IPermission)\n  nameWithType: WebBrowserPermission.IsSubsetOf(IPermission)\n  fullName: WebBrowserPermission.IsSubsetOf(IPermission)\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Security.Permissions.WebBrowserPermission.IsUnrestricted\n  parent: System.Security.Permissions.WebBrowserPermission\n  isExternal: false\n  name: IsUnrestricted()\n  nameWithType: WebBrowserPermission.IsUnrestricted()\n  fullName: WebBrowserPermission.IsUnrestricted()\n- uid: System.Security.Permissions.WebBrowserPermission.Level\n  parent: System.Security.Permissions.WebBrowserPermission\n  isExternal: false\n  name: Level\n  nameWithType: WebBrowserPermission.Level\n  fullName: WebBrowserPermission.Level\n- uid: System.Security.Permissions.WebBrowserPermission.ToXml\n  parent: System.Security.Permissions.WebBrowserPermission\n  isExternal: false\n  name: ToXml()\n  nameWithType: WebBrowserPermission.ToXml()\n  fullName: WebBrowserPermission.ToXml()\n- uid: System.Security.Permissions.WebBrowserPermission.Union(System.Security.IPermission)\n  parent: System.Security.Permissions.WebBrowserPermission\n  isExternal: false\n  name: Union(IPermission)\n  nameWithType: WebBrowserPermission.Union(IPermission)\n  fullName: WebBrowserPermission.Union(IPermission)\n- uid: System.Security.Permissions.WebBrowserPermission.#ctor*\n  parent: System.Security.Permissions.WebBrowserPermission\n  isExternal: false\n  name: WebBrowserPermission\n  nameWithType: WebBrowserPermission.WebBrowserPermission\n  fullName: WebBrowserPermission.WebBrowserPermission\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/WebBrowserPermission.xml\n- uid: System.Security.Permissions.WebBrowserPermission.Copy*\n  parent: System.Security.Permissions.WebBrowserPermission\n  isExternal: false\n  name: Copy\n  nameWithType: WebBrowserPermission.Copy\n  fullName: WebBrowserPermission.Copy\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/WebBrowserPermission.xml\n- uid: System.Security.Permissions.WebBrowserPermission.FromXml*\n  parent: System.Security.Permissions.WebBrowserPermission\n  isExternal: false\n  name: FromXml\n  nameWithType: WebBrowserPermission.FromXml\n  fullName: WebBrowserPermission.FromXml\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/WebBrowserPermission.xml\n- uid: System.Security.Permissions.WebBrowserPermission.Intersect*\n  parent: System.Security.Permissions.WebBrowserPermission\n  isExternal: false\n  name: Intersect\n  nameWithType: WebBrowserPermission.Intersect\n  fullName: WebBrowserPermission.Intersect\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/WebBrowserPermission.xml\n- uid: System.Security.Permissions.WebBrowserPermission.IsSubsetOf*\n  parent: System.Security.Permissions.WebBrowserPermission\n  isExternal: false\n  name: IsSubsetOf\n  nameWithType: WebBrowserPermission.IsSubsetOf\n  fullName: WebBrowserPermission.IsSubsetOf\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/WebBrowserPermission.xml\n- uid: System.Security.Permissions.WebBrowserPermission.IsUnrestricted*\n  parent: System.Security.Permissions.WebBrowserPermission\n  isExternal: false\n  name: IsUnrestricted\n  nameWithType: WebBrowserPermission.IsUnrestricted\n  fullName: WebBrowserPermission.IsUnrestricted\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/WebBrowserPermission.xml\n- uid: System.Security.Permissions.WebBrowserPermission.Level*\n  parent: System.Security.Permissions.WebBrowserPermission\n  isExternal: false\n  name: Level\n  nameWithType: WebBrowserPermission.Level\n  fullName: WebBrowserPermission.Level\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/WebBrowserPermission.xml\n- uid: System.Security.Permissions.WebBrowserPermission.ToXml*\n  parent: System.Security.Permissions.WebBrowserPermission\n  isExternal: false\n  name: ToXml\n  nameWithType: WebBrowserPermission.ToXml\n  fullName: WebBrowserPermission.ToXml\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/WebBrowserPermission.xml\n- uid: System.Security.Permissions.WebBrowserPermission.Union*\n  parent: System.Security.Permissions.WebBrowserPermission\n  isExternal: false\n  name: Union\n  nameWithType: WebBrowserPermission.Union\n  fullName: WebBrowserPermission.Union\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security.Permissions/WebBrowserPermission.xml\n- uid: System.Security.CodeAccessPermission.Equals(System.Object)\n  parent: System.Security.CodeAccessPermission\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: CodeAccessPermission.Equals(Object)\n  fullName: CodeAccessPermission.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Security.CodeAccessPermission.GetHashCode\n  parent: System.Security.CodeAccessPermission\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: CodeAccessPermission.GetHashCode()\n  fullName: CodeAccessPermission.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Security.CodeAccessPermission.ToString\n  parent: System.Security.CodeAccessPermission\n  isExternal: false\n  name: ToString()\n  nameWithType: CodeAccessPermission.ToString()\n  fullName: CodeAccessPermission.ToString()\n- uid: System.Security.CodeAccessPermission.Assert\n  parent: System.Security.CodeAccessPermission\n  isExternal: false\n  name: Assert()\n  nameWithType: CodeAccessPermission.Assert()\n  fullName: CodeAccessPermission.Assert()\n- uid: System.Security.CodeAccessPermission.Demand\n  parent: System.Security.CodeAccessPermission\n  isExternal: false\n  name: Demand()\n  nameWithType: CodeAccessPermission.Demand()\n  fullName: CodeAccessPermission.Demand()\n- uid: System.Security.CodeAccessPermission.Deny\n  parent: System.Security.CodeAccessPermission\n  isExternal: false\n  name: Deny()\n  nameWithType: CodeAccessPermission.Deny()\n  fullName: CodeAccessPermission.Deny()\n- uid: System.Security.CodeAccessPermission.PermitOnly\n  parent: System.Security.CodeAccessPermission\n  isExternal: false\n  name: PermitOnly()\n  nameWithType: CodeAccessPermission.PermitOnly()\n  fullName: CodeAccessPermission.PermitOnly()\n- uid: System.Security.CodeAccessPermission.RevertAll\n  parent: System.Security.CodeAccessPermission\n  isExternal: false\n  name: RevertAll()\n  nameWithType: CodeAccessPermission.RevertAll()\n  fullName: CodeAccessPermission.RevertAll()\n- uid: System.Security.CodeAccessPermission.RevertAssert\n  parent: System.Security.CodeAccessPermission\n  isExternal: false\n  name: RevertAssert()\n  nameWithType: CodeAccessPermission.RevertAssert()\n  fullName: CodeAccessPermission.RevertAssert()\n- uid: System.Security.CodeAccessPermission.RevertDeny\n  parent: System.Security.CodeAccessPermission\n  isExternal: false\n  name: RevertDeny()\n  nameWithType: CodeAccessPermission.RevertDeny()\n  fullName: CodeAccessPermission.RevertDeny()\n- uid: System.Security.CodeAccessPermission.RevertPermitOnly\n  parent: System.Security.CodeAccessPermission\n  isExternal: false\n  name: RevertPermitOnly()\n  nameWithType: CodeAccessPermission.RevertPermitOnly()\n  fullName: CodeAccessPermission.RevertPermitOnly()\n- uid: System.Security.CodeAccessPermission.System#Security#IPermission#Demand\n  parent: System.Security.CodeAccessPermission\n  isExternal: false\n  name: IPermission.Demand()\n  nameWithType: CodeAccessPermission.IPermission.Demand()\n  fullName: CodeAccessPermission.IPermission.Demand()\n- uid: System.Security.CodeAccessPermission.System#Security#IStackWalk#Assert\n  parent: System.Security.CodeAccessPermission\n  isExternal: false\n  name: IStackWalk.Assert()\n  nameWithType: CodeAccessPermission.IStackWalk.Assert()\n  fullName: CodeAccessPermission.IStackWalk.Assert()\n- uid: System.Security.CodeAccessPermission.System#Security#IStackWalk#Demand\n  parent: System.Security.CodeAccessPermission\n  isExternal: false\n  name: IStackWalk.Demand()\n  nameWithType: CodeAccessPermission.IStackWalk.Demand()\n  fullName: CodeAccessPermission.IStackWalk.Demand()\n- uid: System.Security.CodeAccessPermission.System#Security#IStackWalk#Deny\n  parent: System.Security.CodeAccessPermission\n  isExternal: false\n  name: IStackWalk.Deny()\n  nameWithType: CodeAccessPermission.IStackWalk.Deny()\n  fullName: CodeAccessPermission.IStackWalk.Deny()\n- uid: System.Security.CodeAccessPermission.System#Security#IStackWalk#PermitOnly\n  parent: System.Security.CodeAccessPermission\n  isExternal: false\n  name: IStackWalk.PermitOnly()\n  nameWithType: CodeAccessPermission.IStackWalk.PermitOnly()\n  fullName: CodeAccessPermission.IStackWalk.PermitOnly()\n- uid: System.Security.Permissions.IUnrestrictedPermission\n  parent: System.Security.Permissions\n  isExternal: false\n  name: IUnrestrictedPermission\n  nameWithType: IUnrestrictedPermission\n  fullName: System.Security.Permissions.IUnrestrictedPermission\n"}