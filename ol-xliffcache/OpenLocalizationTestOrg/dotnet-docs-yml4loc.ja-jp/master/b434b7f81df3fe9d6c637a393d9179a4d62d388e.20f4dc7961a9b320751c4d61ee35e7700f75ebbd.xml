{"nodes":[{"content":"Represents a read-only collection that can contain many different types of permissions.","nodes":[{"pos":[0,87],"content":"Represents a read-only collection that can contain many different types of permissions.","nodes":[{"content":"Represents a read-only collection that can contain many different types of permissions.","pos":[0,87]}]}],"pos":[1092,1180],"yaml":true},{"content":"Read-only permission sets are created from explicit XML and cannot be modified after creation. This restriction ensures that the permission set will be restored to the same XML encoding that it was originally created from. Attempting to add or remove a permission from the <xref:System.Security.ReadOnlyPermissionSet> results in an <xref:System.InvalidOperationException>.  \n  \n Note that any permission you obtain from the <xref:System.Security.ReadOnlyPermissionSet> is only a copy of the permission. If the copy is mutable and is changed, the permission that is in the <xref:System.Security.ReadOnlyPermissionSet> is not changed.","nodes":[{"pos":[0,372],"content":"Read-only permission sets are created from explicit XML and cannot be modified after creation. This restriction ensures that the permission set will be restored to the same XML encoding that it was originally created from. Attempting to add or remove a permission from the <xref:System.Security.ReadOnlyPermissionSet> results in an <xref:System.InvalidOperationException>.","nodes":[{"content":"Read-only permission sets are created from explicit XML and cannot be modified after creation. This restriction ensures that the permission set will be restored to the same XML encoding that it was originally created from. Attempting to add or remove a permission from the <xref:System.Security.ReadOnlyPermissionSet> results in an <xref:System.InvalidOperationException>.","pos":[0,372],"nodes":[{"content":"Read-only permission sets are created from explicit XML and cannot be modified after creation.","pos":[0,94]},{"content":"This restriction ensures that the permission set will be restored to the same XML encoding that it was originally created from.","pos":[95,222]},{"content":"Attempting to add or remove a permission from the <ph id=\"ph1\">&lt;xref:System.Security.ReadOnlyPermissionSet&gt;</ph> results in an <ph id=\"ph2\">&lt;xref:System.InvalidOperationException&gt;</ph>.","pos":[223,372],"source":" Attempting to add or remove a permission from the <xref:System.Security.ReadOnlyPermissionSet> results in an <xref:System.InvalidOperationException>."}]}]},{"pos":[379,632],"content":"Note that any permission you obtain from the <xref:System.Security.ReadOnlyPermissionSet> is only a copy of the permission. If the copy is mutable and is changed, the permission that is in the <xref:System.Security.ReadOnlyPermissionSet> is not changed.","nodes":[{"content":"Note that any permission you obtain from the <xref:System.Security.ReadOnlyPermissionSet> is only a copy of the permission. If the copy is mutable and is changed, the permission that is in the <xref:System.Security.ReadOnlyPermissionSet> is not changed.","pos":[0,253],"nodes":[{"content":"Note that any permission you obtain from the <ph id=\"ph1\">&lt;xref:System.Security.ReadOnlyPermissionSet&gt;</ph> is only a copy of the permission.","pos":[0,123],"source":"Note that any permission you obtain from the <xref:System.Security.ReadOnlyPermissionSet> is only a copy of the permission."},{"content":"If the copy is mutable and is changed, the permission that is in the <ph id=\"ph1\">&lt;xref:System.Security.ReadOnlyPermissionSet&gt;</ph> is not changed.","pos":[124,253],"source":" If the copy is mutable and is changed, the permission that is in the <xref:System.Security.ReadOnlyPermissionSet> is not changed."}]}]}],"pos":[1191,1828],"yaml":true,"extradata":"MT"},{"content":"Initializes a new instance of the <xref href=\"System.Security.ReadOnlyPermissionSet\"></xref> class.","nodes":[{"pos":[0,99],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.Security.ReadOnlyPermissionSet\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.Security.ReadOnlyPermissionSet\"></xref> class."}],"pos":[5106,5206],"yaml":true},{"content":"The XML element from which to take the value of the new <xref href=\"System.Security.ReadOnlyPermissionSet\"></xref>.","nodes":[{"pos":[0,115],"content":"The XML element from which to take the value of the new <ph id=\"ph1\">&lt;xref href=\"System.Security.ReadOnlyPermissionSet\"&gt;&lt;/xref&gt;</ph>.","source":"The XML element from which to take the value of the new <xref href=\"System.Security.ReadOnlyPermissionSet\"></xref>."}],"pos":[5416,5532],"yaml":true},{"content":"<code>permissionSetXml</code> is `null`.","nodes":[{"pos":[0,40],"content":"<ph id=\"ph1\">&lt;code&gt;permissionSetXml&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>permissionSetXml</code> is `null`."}],"pos":[5705,5746],"yaml":true},{"content":"Creates a copy of the <xref href=\"System.Security.ReadOnlyPermissionSet\"></xref>.","nodes":[{"pos":[0,81],"content":"Creates a copy of the <ph id=\"ph1\">&lt;xref href=\"System.Security.ReadOnlyPermissionSet\"&gt;&lt;/xref&gt;</ph>.","source":"Creates a copy of the <xref href=\"System.Security.ReadOnlyPermissionSet\"></xref>."}],"pos":[8026,8108],"yaml":true},{"content":"A copy of the read-only permission set.","nodes":[{"pos":[0,39],"content":"A copy of the read-only permission set.","nodes":[{"content":"A copy of the read-only permission set.","pos":[0,39]}]}],"pos":[8278,8318],"yaml":true},{"content":"Reconstructs a security object with a specified state from an XML encoding.","nodes":[{"pos":[0,75],"content":"Reconstructs a security object with a specified state from an XML encoding.","nodes":[{"content":"Reconstructs a security object with a specified state from an XML encoding.","pos":[0,75]}]}],"pos":[9458,9534],"yaml":true},{"content":"This override of <xref:System.Security.PermissionSet.FromXml%2A?displayProperty=fullName> is intended to be called by the base class <xref:System.Security.PermissionSet> when it is deserializing the permission set. An exception is thrown if you attempt to call <xref:System.Security.ReadOnlyPermissionSet.FromXml%2A> directly. You cannot modify a read-only permission set with a <xref:System.Security.ReadOnlyPermissionSet.FromXml%2A> call.","nodes":[{"pos":[0,440],"content":"This override of <xref:System.Security.PermissionSet.FromXml%2A?displayProperty=fullName> is intended to be called by the base class <xref:System.Security.PermissionSet> when it is deserializing the permission set. An exception is thrown if you attempt to call <xref:System.Security.ReadOnlyPermissionSet.FromXml%2A> directly. You cannot modify a read-only permission set with a <xref:System.Security.ReadOnlyPermissionSet.FromXml%2A> call.","nodes":[{"content":"This override of <xref:System.Security.PermissionSet.FromXml%2A?displayProperty=fullName> is intended to be called by the base class <xref:System.Security.PermissionSet> when it is deserializing the permission set. An exception is thrown if you attempt to call <xref:System.Security.ReadOnlyPermissionSet.FromXml%2A> directly. You cannot modify a read-only permission set with a <xref:System.Security.ReadOnlyPermissionSet.FromXml%2A> call.","pos":[0,440],"nodes":[{"content":"This override of <ph id=\"ph1\">&lt;xref:System.Security.PermissionSet.FromXml%2A?displayProperty=fullName&gt;</ph> is intended to be called by the base class <ph id=\"ph2\">&lt;xref:System.Security.PermissionSet&gt;</ph> when it is deserializing the permission set.","pos":[0,214],"source":"This override of <xref:System.Security.PermissionSet.FromXml%2A?displayProperty=fullName> is intended to be called by the base class <xref:System.Security.PermissionSet> when it is deserializing the permission set."},{"content":"An exception is thrown if you attempt to call <ph id=\"ph1\">&lt;xref:System.Security.ReadOnlyPermissionSet.FromXml%2A&gt;</ph> directly.","pos":[215,326],"source":" An exception is thrown if you attempt to call <xref:System.Security.ReadOnlyPermissionSet.FromXml%2A> directly."},{"content":"You cannot modify a read-only permission set with a <ph id=\"ph1\">&lt;xref:System.Security.ReadOnlyPermissionSet.FromXml%2A&gt;</ph> call.","pos":[327,440],"source":" You cannot modify a read-only permission set with a <xref:System.Security.ReadOnlyPermissionSet.FromXml%2A> call."}]}]}],"pos":[9545,9986],"yaml":true,"extradata":"MT"},{"content":"The XML encoding to use to reconstruct the security object.","nodes":[{"pos":[0,59],"content":"The XML encoding to use to reconstruct the security object.","nodes":[{"content":"The XML encoding to use to reconstruct the security object.","pos":[0,59]}]}],"pos":[10168,10228],"yaml":true},{"content":"The <code>et</code> parameter is `null`.","nodes":[{"pos":[0,40],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">et</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is <ph id=\"ph2\">`null`</ph>.","source":"The <code>et</code> parameter is `null`."}],"pos":[10403,10444],"yaml":true},{"content":"The <code>et</code> parameter is not a valid permission element.  \n  \n -or-  \n  \n The <code>et</code> parameter's version number is not supported.","nodes":[{"pos":[0,64],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">et</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter is not a valid permission element.","source":"The <code>et</code> parameter is not a valid permission element."},{"pos":[71,75],"content":"-or-","nodes":[{"content":"-or-","pos":[0,4]}]},{"pos":[82,146],"content":"The <bpt id=\"p1\">&lt;code&gt;</bpt><ph id=\"ph1\">et</ph><ept id=\"p1\">&lt;/code&gt;</ept> parameter's version number is not supported.","source":"The <code>et</code> parameter's version number is not supported."}],"pos":[10538,10691],"yaml":true},{"content":"The object is not being deserialized; that is, <xref href=\"System.Security.PermissionSet\"></xref> did not call back into <xref href=\"System.Security.ReadOnlyPermissionSet.FromXml(System.Security.SecurityElement)\"></xref> during deserialization.","nodes":[{"pos":[0,244],"content":"The object is not being deserialized; that is, <ph id=\"ph1\">&lt;xref href=\"System.Security.PermissionSet\"&gt;&lt;/xref&gt;</ph> did not call back into <ph id=\"ph2\">&lt;xref href=\"System.Security.ReadOnlyPermissionSet.FromXml(System.Security.SecurityElement)\"&gt;&lt;/xref&gt;</ph> during deserialization.","source":"The object is not being deserialized; that is, <xref href=\"System.Security.PermissionSet\"></xref> did not call back into <xref href=\"System.Security.ReadOnlyPermissionSet.FromXml(System.Security.SecurityElement)\"></xref> during deserialization."}],"pos":[10801,11046],"yaml":true},{"content":"Gets a value that indicates whether the collection is read-only.","nodes":[{"pos":[0,64],"content":"Gets a value that indicates whether the collection is read-only.","nodes":[{"content":"Gets a value that indicates whether the collection is read-only.","pos":[0,64]}]}],"pos":[14415,14480],"yaml":true},{"content":"A <xref:System.Security.ReadOnlyPermissionSet> is always read-only, so this value must always be `true`.","nodes":[{"pos":[0,104],"content":"A <ph id=\"ph1\">&lt;xref:System.Security.ReadOnlyPermissionSet&gt;</ph> is always read-only, so this value must always be <ph id=\"ph2\">`true`</ph>.","source":"A <xref:System.Security.ReadOnlyPermissionSet> is always read-only, so this value must always be `true`."}],"pos":[14491,14596],"yaml":true,"extradata":"MT"},{"content":"Always `true`.","nodes":[{"pos":[0,14],"content":"Always <ph id=\"ph1\">`true`</ph>.","source":"Always `true`."}],"pos":[14718,14733],"yaml":true},{"content":"Creates an XML encoding of the security object and its current state.","nodes":[{"pos":[0,69],"content":"Creates an XML encoding of the security object and its current state.","nodes":[{"content":"Creates an XML encoding of the security object and its current state.","pos":[0,69]}]}],"pos":[18399,18469],"yaml":true},{"content":"An XML encoding of the security object, including any state information.","nodes":[{"pos":[0,72],"content":"An XML encoding of the security object, including any state information.","nodes":[{"content":"An XML encoding of the security object, including any state information.","pos":[0,72]}]}],"pos":[18644,18717],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Security.ReadOnlyPermissionSet\n  commentId: T:System.Security.ReadOnlyPermissionSet\n  id: ReadOnlyPermissionSet\n  children:\n  - System.Security.ReadOnlyPermissionSet.#ctor(System.Security.SecurityElement)\n  - System.Security.ReadOnlyPermissionSet.AddPermissionImpl(System.Security.IPermission)\n  - System.Security.ReadOnlyPermissionSet.Copy\n  - System.Security.ReadOnlyPermissionSet.FromXml(System.Security.SecurityElement)\n  - System.Security.ReadOnlyPermissionSet.GetEnumeratorImpl\n  - System.Security.ReadOnlyPermissionSet.GetPermissionImpl(System.Type)\n  - System.Security.ReadOnlyPermissionSet.IsReadOnly\n  - System.Security.ReadOnlyPermissionSet.RemovePermissionImpl(System.Type)\n  - System.Security.ReadOnlyPermissionSet.SetPermissionImpl(System.Security.IPermission)\n  - System.Security.ReadOnlyPermissionSet.ToXml\n  langs:\n  - csharp\n  name: ReadOnlyPermissionSet\n  nameWithType: ReadOnlyPermissionSet\n  fullName: System.Security.ReadOnlyPermissionSet\n  type: Class\n  assemblies:\n  - mscorlib\n  namespace: System.Security\n  summary: Represents a read-only collection that can contain many different types of permissions.\n  remarks: \"Read-only permission sets are created from explicit XML and cannot be modified after creation. This restriction ensures that the permission set will be restored to the same XML encoding that it was originally created from. Attempting to add or remove a permission from the <xref:System.Security.ReadOnlyPermissionSet> results in an <xref:System.InvalidOperationException>.  \\n  \\n Note that any permission you obtain from the <xref:System.Security.ReadOnlyPermissionSet> is only a copy of the permission. If the copy is mutable and is changed, the permission that is in the <xref:System.Security.ReadOnlyPermissionSet> is not changed.\"\n  syntax:\n    content: 'public sealed class ReadOnlyPermissionSet : System.Security.PermissionSet'\n  inheritance:\n  - System.Object\n  - System.Security.PermissionSet\n  implements: []\n  inheritedMembers:\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Security.PermissionSet.AddPermission(System.Security.IPermission)\n  - System.Security.PermissionSet.Assert\n  - System.Security.PermissionSet.ContainsNonCodeAccessPermissions\n  - System.Security.PermissionSet.ConvertPermissionSet(System.String,System.Byte[],System.String)\n  - System.Security.PermissionSet.CopyTo(System.Array,System.Int32)\n  - System.Security.PermissionSet.Count\n  - System.Security.PermissionSet.Demand\n  - System.Security.PermissionSet.Deny\n  - System.Security.PermissionSet.Equals(System.Object)\n  - System.Security.PermissionSet.GetEnumerator\n  - System.Security.PermissionSet.GetHashCode\n  - System.Security.PermissionSet.GetPermission(System.Type)\n  - System.Security.PermissionSet.Intersect(System.Security.PermissionSet)\n  - System.Security.PermissionSet.IsEmpty\n  - System.Security.PermissionSet.IsSubsetOf(System.Security.PermissionSet)\n  - System.Security.PermissionSet.IsSynchronized\n  - System.Security.PermissionSet.IsUnrestricted\n  - System.Security.PermissionSet.PermitOnly\n  - System.Security.PermissionSet.RemovePermission(System.Type)\n  - System.Security.PermissionSet.RevertAssert\n  - System.Security.PermissionSet.SetPermission(System.Security.IPermission)\n  - System.Security.PermissionSet.SyncRoot\n  - System.Security.PermissionSet.System#Runtime#Serialization#IDeserializationCallback#OnDeserialization(System.Object)\n  - System.Security.PermissionSet.ToString\n  - System.Security.PermissionSet.Union(System.Security.PermissionSet)\n  extensionMethods:\n  - System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)\n  - System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)\n  - System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)\n  - System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security/ReadOnlyPermissionSet.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.ReadOnlyPermissionSet.#ctor(System.Security.SecurityElement)\n  commentId: M:System.Security.ReadOnlyPermissionSet.#ctor(System.Security.SecurityElement)\n  id: '#ctor(System.Security.SecurityElement)'\n  parent: System.Security.ReadOnlyPermissionSet\n  langs:\n  - csharp\n  name: ReadOnlyPermissionSet(SecurityElement)\n  nameWithType: ReadOnlyPermissionSet.ReadOnlyPermissionSet(SecurityElement)\n  fullName: ReadOnlyPermissionSet.ReadOnlyPermissionSet(SecurityElement)\n  type: Constructor\n  assemblies:\n  - mscorlib\n  namespace: System.Security\n  summary: Initializes a new instance of the <xref href=\"System.Security.ReadOnlyPermissionSet\"></xref> class.\n  syntax:\n    content: public ReadOnlyPermissionSet (System.Security.SecurityElement permissionSetXml);\n    parameters:\n    - id: permissionSetXml\n      type: System.Security.SecurityElement\n      description: The XML element from which to take the value of the new <xref href=\"System.Security.ReadOnlyPermissionSet\"></xref>.\n  overload: System.Security.ReadOnlyPermissionSet.#ctor*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>permissionSetXml</code> is `null`.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security/ReadOnlyPermissionSet.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.ReadOnlyPermissionSet.AddPermissionImpl(System.Security.IPermission)\n  commentId: M:System.Security.ReadOnlyPermissionSet.AddPermissionImpl(System.Security.IPermission)\n  id: AddPermissionImpl(System.Security.IPermission)\n  parent: System.Security.ReadOnlyPermissionSet\n  langs:\n  - csharp\n  name: AddPermissionImpl(IPermission)\n  nameWithType: ReadOnlyPermissionSet.AddPermissionImpl(IPermission)\n  fullName: ReadOnlyPermissionSet.AddPermissionImpl(IPermission)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security\n  syntax:\n    content: protected override System.Security.IPermission AddPermissionImpl (System.Security.IPermission perm);\n    parameters:\n    - id: perm\n      type: System.Security.IPermission\n      description: ''\n    return:\n      type: System.Security.IPermission\n      description: ''\n  overload: System.Security.ReadOnlyPermissionSet.AddPermissionImpl*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security/ReadOnlyPermissionSet.xml\n- uid: System.Security.ReadOnlyPermissionSet.Copy\n  commentId: M:System.Security.ReadOnlyPermissionSet.Copy\n  id: Copy\n  parent: System.Security.ReadOnlyPermissionSet\n  langs:\n  - csharp\n  name: Copy()\n  nameWithType: ReadOnlyPermissionSet.Copy()\n  fullName: ReadOnlyPermissionSet.Copy()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security\n  summary: Creates a copy of the <xref href=\"System.Security.ReadOnlyPermissionSet\"></xref>.\n  syntax:\n    content: public override System.Security.PermissionSet Copy ();\n    parameters: []\n    return:\n      type: System.Security.PermissionSet\n      description: A copy of the read-only permission set.\n  overload: System.Security.ReadOnlyPermissionSet.Copy*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security/ReadOnlyPermissionSet.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.ReadOnlyPermissionSet.FromXml(System.Security.SecurityElement)\n  commentId: M:System.Security.ReadOnlyPermissionSet.FromXml(System.Security.SecurityElement)\n  id: FromXml(System.Security.SecurityElement)\n  parent: System.Security.ReadOnlyPermissionSet\n  langs:\n  - csharp\n  name: FromXml(SecurityElement)\n  nameWithType: ReadOnlyPermissionSet.FromXml(SecurityElement)\n  fullName: ReadOnlyPermissionSet.FromXml(SecurityElement)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security\n  summary: Reconstructs a security object with a specified state from an XML encoding.\n  remarks: This override of <xref:System.Security.PermissionSet.FromXml%2A?displayProperty=fullName> is intended to be called by the base class <xref:System.Security.PermissionSet> when it is deserializing the permission set. An exception is thrown if you attempt to call <xref:System.Security.ReadOnlyPermissionSet.FromXml%2A> directly. You cannot modify a read-only permission set with a <xref:System.Security.ReadOnlyPermissionSet.FromXml%2A> call.\n  syntax:\n    content: public override void FromXml (System.Security.SecurityElement et);\n    parameters:\n    - id: et\n      type: System.Security.SecurityElement\n      description: The XML encoding to use to reconstruct the security object.\n  overload: System.Security.ReadOnlyPermissionSet.FromXml*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The <code>et</code> parameter is `null`.\n  - type: System.ArgumentException\n    commentId: T:System.ArgumentException\n    description: \"The <code>et</code> parameter is not a valid permission element.  \\n  \\n -or-  \\n  \\n The <code>et</code> parameter's version number is not supported.\"\n  - type: System.InvalidOperationException\n    commentId: T:System.InvalidOperationException\n    description: The object is not being deserialized; that is, <xref href=\"System.Security.PermissionSet\"></xref> did not call back into <xref href=\"System.Security.ReadOnlyPermissionSet.FromXml(System.Security.SecurityElement)\"></xref> during deserialization.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security/ReadOnlyPermissionSet.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.ReadOnlyPermissionSet.GetEnumeratorImpl\n  commentId: M:System.Security.ReadOnlyPermissionSet.GetEnumeratorImpl\n  id: GetEnumeratorImpl\n  parent: System.Security.ReadOnlyPermissionSet\n  langs:\n  - csharp\n  name: GetEnumeratorImpl()\n  nameWithType: ReadOnlyPermissionSet.GetEnumeratorImpl()\n  fullName: ReadOnlyPermissionSet.GetEnumeratorImpl()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security\n  syntax:\n    content: protected override System.Collections.IEnumerator GetEnumeratorImpl ();\n    parameters: []\n    return:\n      type: System.Collections.IEnumerator\n      description: ''\n  overload: System.Security.ReadOnlyPermissionSet.GetEnumeratorImpl*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security/ReadOnlyPermissionSet.xml\n- uid: System.Security.ReadOnlyPermissionSet.GetPermissionImpl(System.Type)\n  commentId: M:System.Security.ReadOnlyPermissionSet.GetPermissionImpl(System.Type)\n  id: GetPermissionImpl(System.Type)\n  parent: System.Security.ReadOnlyPermissionSet\n  langs:\n  - csharp\n  name: GetPermissionImpl(Type)\n  nameWithType: ReadOnlyPermissionSet.GetPermissionImpl(Type)\n  fullName: ReadOnlyPermissionSet.GetPermissionImpl(Type)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security\n  syntax:\n    content: protected override System.Security.IPermission GetPermissionImpl (Type permClass);\n    parameters:\n    - id: permClass\n      type: System.Type\n      description: ''\n    return:\n      type: System.Security.IPermission\n      description: ''\n  overload: System.Security.ReadOnlyPermissionSet.GetPermissionImpl*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security/ReadOnlyPermissionSet.xml\n- uid: System.Security.ReadOnlyPermissionSet.IsReadOnly\n  commentId: P:System.Security.ReadOnlyPermissionSet.IsReadOnly\n  id: IsReadOnly\n  parent: System.Security.ReadOnlyPermissionSet\n  langs:\n  - csharp\n  name: IsReadOnly\n  nameWithType: ReadOnlyPermissionSet.IsReadOnly\n  fullName: ReadOnlyPermissionSet.IsReadOnly\n  type: Property\n  assemblies:\n  - mscorlib\n  namespace: System.Security\n  summary: Gets a value that indicates whether the collection is read-only.\n  remarks: A <xref:System.Security.ReadOnlyPermissionSet> is always read-only, so this value must always be `true`.\n  syntax:\n    content: public override bool IsReadOnly { get; }\n    return:\n      type: System.Boolean\n      description: Always `true`.\n  overload: System.Security.ReadOnlyPermissionSet.IsReadOnly*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security/ReadOnlyPermissionSet.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\n- uid: System.Security.ReadOnlyPermissionSet.RemovePermissionImpl(System.Type)\n  commentId: M:System.Security.ReadOnlyPermissionSet.RemovePermissionImpl(System.Type)\n  id: RemovePermissionImpl(System.Type)\n  parent: System.Security.ReadOnlyPermissionSet\n  langs:\n  - csharp\n  name: RemovePermissionImpl(Type)\n  nameWithType: ReadOnlyPermissionSet.RemovePermissionImpl(Type)\n  fullName: ReadOnlyPermissionSet.RemovePermissionImpl(Type)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security\n  syntax:\n    content: protected override System.Security.IPermission RemovePermissionImpl (Type permClass);\n    parameters:\n    - id: permClass\n      type: System.Type\n      description: ''\n    return:\n      type: System.Security.IPermission\n      description: ''\n  overload: System.Security.ReadOnlyPermissionSet.RemovePermissionImpl*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security/ReadOnlyPermissionSet.xml\n- uid: System.Security.ReadOnlyPermissionSet.SetPermissionImpl(System.Security.IPermission)\n  commentId: M:System.Security.ReadOnlyPermissionSet.SetPermissionImpl(System.Security.IPermission)\n  id: SetPermissionImpl(System.Security.IPermission)\n  parent: System.Security.ReadOnlyPermissionSet\n  langs:\n  - csharp\n  name: SetPermissionImpl(IPermission)\n  nameWithType: ReadOnlyPermissionSet.SetPermissionImpl(IPermission)\n  fullName: ReadOnlyPermissionSet.SetPermissionImpl(IPermission)\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security\n  syntax:\n    content: protected override System.Security.IPermission SetPermissionImpl (System.Security.IPermission perm);\n    parameters:\n    - id: perm\n      type: System.Security.IPermission\n      description: ''\n    return:\n      type: System.Security.IPermission\n      description: ''\n  overload: System.Security.ReadOnlyPermissionSet.SetPermissionImpl*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security/ReadOnlyPermissionSet.xml\n- uid: System.Security.ReadOnlyPermissionSet.ToXml\n  commentId: M:System.Security.ReadOnlyPermissionSet.ToXml\n  id: ToXml\n  parent: System.Security.ReadOnlyPermissionSet\n  langs:\n  - csharp\n  name: ToXml()\n  nameWithType: ReadOnlyPermissionSet.ToXml()\n  fullName: ReadOnlyPermissionSet.ToXml()\n  type: Method\n  assemblies:\n  - mscorlib\n  namespace: System.Security\n  summary: Creates an XML encoding of the security object and its current state.\n  syntax:\n    content: public override System.Security.SecurityElement ToXml ();\n    parameters: []\n    return:\n      type: System.Security.SecurityElement\n      description: An XML encoding of the security object, including any state information.\n  overload: System.Security.ReadOnlyPermissionSet.ToXml*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security/ReadOnlyPermissionSet.xml\n  ms.technology:\n  - dotnet-standard\n  author: mairaw\n  ms.author: mairaw\n  manager: wpickett\nreferences:\n- uid: System.Security.PermissionSet\n  parent: System.Security\n  isExternal: false\n  name: PermissionSet\n  nameWithType: PermissionSet\n  fullName: System.Security.PermissionSet\n- uid: System.ArgumentNullException\n  parent: System\n  isExternal: false\n  name: ArgumentNullException\n  nameWithType: ArgumentNullException\n  fullName: System.ArgumentNullException\n- uid: System.ArgumentException\n  parent: System\n  isExternal: false\n  name: ArgumentException\n  nameWithType: ArgumentException\n  fullName: System.ArgumentException\n- uid: System.InvalidOperationException\n  parent: System\n  isExternal: false\n  name: InvalidOperationException\n  nameWithType: InvalidOperationException\n  fullName: System.InvalidOperationException\n- uid: System.Security.ReadOnlyPermissionSet.#ctor(System.Security.SecurityElement)\n  parent: System.Security.ReadOnlyPermissionSet\n  isExternal: false\n  name: ReadOnlyPermissionSet(SecurityElement)\n  nameWithType: ReadOnlyPermissionSet.ReadOnlyPermissionSet(SecurityElement)\n  fullName: ReadOnlyPermissionSet.ReadOnlyPermissionSet(SecurityElement)\n- uid: System.Security.SecurityElement\n  parent: System.Security\n  isExternal: false\n  name: SecurityElement\n  nameWithType: SecurityElement\n  fullName: System.Security.SecurityElement\n- uid: System.Security.ReadOnlyPermissionSet.AddPermissionImpl(System.Security.IPermission)\n  parent: System.Security.ReadOnlyPermissionSet\n  isExternal: false\n  name: AddPermissionImpl(IPermission)\n  nameWithType: ReadOnlyPermissionSet.AddPermissionImpl(IPermission)\n  fullName: ReadOnlyPermissionSet.AddPermissionImpl(IPermission)\n- uid: System.Security.IPermission\n  parent: System.Security\n  isExternal: false\n  name: IPermission\n  nameWithType: IPermission\n  fullName: System.Security.IPermission\n- uid: System.Security.ReadOnlyPermissionSet.Copy\n  parent: System.Security.ReadOnlyPermissionSet\n  isExternal: false\n  name: Copy()\n  nameWithType: ReadOnlyPermissionSet.Copy()\n  fullName: ReadOnlyPermissionSet.Copy()\n- uid: System.Security.ReadOnlyPermissionSet.FromXml(System.Security.SecurityElement)\n  parent: System.Security.ReadOnlyPermissionSet\n  isExternal: false\n  name: FromXml(SecurityElement)\n  nameWithType: ReadOnlyPermissionSet.FromXml(SecurityElement)\n  fullName: ReadOnlyPermissionSet.FromXml(SecurityElement)\n- uid: System.Security.ReadOnlyPermissionSet.GetEnumeratorImpl\n  parent: System.Security.ReadOnlyPermissionSet\n  isExternal: false\n  name: GetEnumeratorImpl()\n  nameWithType: ReadOnlyPermissionSet.GetEnumeratorImpl()\n  fullName: ReadOnlyPermissionSet.GetEnumeratorImpl()\n- uid: System.Collections.IEnumerator\n  parent: System.Collections\n  isExternal: false\n  name: IEnumerator\n  nameWithType: IEnumerator\n  fullName: System.Collections.IEnumerator\n- uid: System.Security.ReadOnlyPermissionSet.GetPermissionImpl(System.Type)\n  parent: System.Security.ReadOnlyPermissionSet\n  isExternal: false\n  name: GetPermissionImpl(Type)\n  nameWithType: ReadOnlyPermissionSet.GetPermissionImpl(Type)\n  fullName: ReadOnlyPermissionSet.GetPermissionImpl(Type)\n- uid: System.Type\n  parent: System\n  isExternal: false\n  name: Type\n  nameWithType: Type\n  fullName: System.Type\n- uid: System.Security.ReadOnlyPermissionSet.IsReadOnly\n  parent: System.Security.ReadOnlyPermissionSet\n  isExternal: false\n  name: IsReadOnly\n  nameWithType: ReadOnlyPermissionSet.IsReadOnly\n  fullName: ReadOnlyPermissionSet.IsReadOnly\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Security.ReadOnlyPermissionSet.RemovePermissionImpl(System.Type)\n  parent: System.Security.ReadOnlyPermissionSet\n  isExternal: false\n  name: RemovePermissionImpl(Type)\n  nameWithType: ReadOnlyPermissionSet.RemovePermissionImpl(Type)\n  fullName: ReadOnlyPermissionSet.RemovePermissionImpl(Type)\n- uid: System.Security.ReadOnlyPermissionSet.SetPermissionImpl(System.Security.IPermission)\n  parent: System.Security.ReadOnlyPermissionSet\n  isExternal: false\n  name: SetPermissionImpl(IPermission)\n  nameWithType: ReadOnlyPermissionSet.SetPermissionImpl(IPermission)\n  fullName: ReadOnlyPermissionSet.SetPermissionImpl(IPermission)\n- uid: System.Security.ReadOnlyPermissionSet.ToXml\n  parent: System.Security.ReadOnlyPermissionSet\n  isExternal: false\n  name: ToXml()\n  nameWithType: ReadOnlyPermissionSet.ToXml()\n  fullName: ReadOnlyPermissionSet.ToXml()\n- uid: System.Security.ReadOnlyPermissionSet.#ctor*\n  parent: System.Security.ReadOnlyPermissionSet\n  isExternal: false\n  name: ReadOnlyPermissionSet\n  nameWithType: ReadOnlyPermissionSet.ReadOnlyPermissionSet\n  fullName: ReadOnlyPermissionSet.ReadOnlyPermissionSet\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security/ReadOnlyPermissionSet.xml\n- uid: System.Security.ReadOnlyPermissionSet.AddPermissionImpl*\n  parent: System.Security.ReadOnlyPermissionSet\n  isExternal: false\n  name: AddPermissionImpl\n  nameWithType: ReadOnlyPermissionSet.AddPermissionImpl\n  fullName: ReadOnlyPermissionSet.AddPermissionImpl\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security/ReadOnlyPermissionSet.xml\n- uid: System.Security.ReadOnlyPermissionSet.Copy*\n  parent: System.Security.ReadOnlyPermissionSet\n  isExternal: false\n  name: Copy\n  nameWithType: ReadOnlyPermissionSet.Copy\n  fullName: ReadOnlyPermissionSet.Copy\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security/ReadOnlyPermissionSet.xml\n- uid: System.Security.ReadOnlyPermissionSet.FromXml*\n  parent: System.Security.ReadOnlyPermissionSet\n  isExternal: false\n  name: FromXml\n  nameWithType: ReadOnlyPermissionSet.FromXml\n  fullName: ReadOnlyPermissionSet.FromXml\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security/ReadOnlyPermissionSet.xml\n- uid: System.Security.ReadOnlyPermissionSet.GetEnumeratorImpl*\n  parent: System.Security.ReadOnlyPermissionSet\n  isExternal: false\n  name: GetEnumeratorImpl\n  nameWithType: ReadOnlyPermissionSet.GetEnumeratorImpl\n  fullName: ReadOnlyPermissionSet.GetEnumeratorImpl\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security/ReadOnlyPermissionSet.xml\n- uid: System.Security.ReadOnlyPermissionSet.GetPermissionImpl*\n  parent: System.Security.ReadOnlyPermissionSet\n  isExternal: false\n  name: GetPermissionImpl\n  nameWithType: ReadOnlyPermissionSet.GetPermissionImpl\n  fullName: ReadOnlyPermissionSet.GetPermissionImpl\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security/ReadOnlyPermissionSet.xml\n- uid: System.Security.ReadOnlyPermissionSet.IsReadOnly*\n  parent: System.Security.ReadOnlyPermissionSet\n  isExternal: false\n  name: IsReadOnly\n  nameWithType: ReadOnlyPermissionSet.IsReadOnly\n  fullName: ReadOnlyPermissionSet.IsReadOnly\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security/ReadOnlyPermissionSet.xml\n- uid: System.Security.ReadOnlyPermissionSet.RemovePermissionImpl*\n  parent: System.Security.ReadOnlyPermissionSet\n  isExternal: false\n  name: RemovePermissionImpl\n  nameWithType: ReadOnlyPermissionSet.RemovePermissionImpl\n  fullName: ReadOnlyPermissionSet.RemovePermissionImpl\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security/ReadOnlyPermissionSet.xml\n- uid: System.Security.ReadOnlyPermissionSet.SetPermissionImpl*\n  parent: System.Security.ReadOnlyPermissionSet\n  isExternal: false\n  name: SetPermissionImpl\n  nameWithType: ReadOnlyPermissionSet.SetPermissionImpl\n  fullName: ReadOnlyPermissionSet.SetPermissionImpl\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security/ReadOnlyPermissionSet.xml\n- uid: System.Security.ReadOnlyPermissionSet.ToXml*\n  parent: System.Security.ReadOnlyPermissionSet\n  isExternal: false\n  name: ToXml\n  nameWithType: ReadOnlyPermissionSet.ToXml\n  fullName: ReadOnlyPermissionSet.ToXml\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Security/ReadOnlyPermissionSet.xml\n- uid: System.Security.PermissionSet.Equals(System.Object)\n  parent: System.Security.PermissionSet\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: PermissionSet.Equals(Object)\n  fullName: PermissionSet.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Security.PermissionSet.GetHashCode\n  parent: System.Security.PermissionSet\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: PermissionSet.GetHashCode()\n  fullName: PermissionSet.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Security.PermissionSet.ToString\n  parent: System.Security.PermissionSet\n  isExternal: false\n  name: ToString()\n  nameWithType: PermissionSet.ToString()\n  fullName: PermissionSet.ToString()\n- uid: System.Security.PermissionSet.AddPermission(System.Security.IPermission)\n  parent: System.Security.PermissionSet\n  isExternal: false\n  name: AddPermission(IPermission)\n  nameWithType: PermissionSet.AddPermission(IPermission)\n  fullName: PermissionSet.AddPermission(IPermission)\n- uid: System.Security.PermissionSet.Assert\n  parent: System.Security.PermissionSet\n  isExternal: false\n  name: Assert()\n  nameWithType: PermissionSet.Assert()\n  fullName: PermissionSet.Assert()\n- uid: System.Security.PermissionSet.ContainsNonCodeAccessPermissions\n  parent: System.Security.PermissionSet\n  isExternal: false\n  name: ContainsNonCodeAccessPermissions()\n  nameWithType: PermissionSet.ContainsNonCodeAccessPermissions()\n  fullName: PermissionSet.ContainsNonCodeAccessPermissions()\n- uid: System.Security.PermissionSet.ConvertPermissionSet(System.String,System.Byte[],System.String)\n  parent: System.Security.PermissionSet\n  isExternal: false\n  name: ConvertPermissionSet(String, Byte[], String)\n  nameWithType: PermissionSet.ConvertPermissionSet(String, Byte[], String)\n  fullName: PermissionSet.ConvertPermissionSet(String, Byte[], String)\n- uid: System.Security.PermissionSet.CopyTo(System.Array,System.Int32)\n  parent: System.Security.PermissionSet\n  isExternal: false\n  name: CopyTo(Array, Int32)\n  nameWithType: PermissionSet.CopyTo(Array, Int32)\n  fullName: PermissionSet.CopyTo(Array, Int32)\n- uid: System.Security.PermissionSet.Count\n  parent: System.Security.PermissionSet\n  isExternal: false\n  name: Count\n  nameWithType: PermissionSet.Count\n  fullName: PermissionSet.Count\n- uid: System.Security.PermissionSet.Demand\n  parent: System.Security.PermissionSet\n  isExternal: false\n  name: Demand()\n  nameWithType: PermissionSet.Demand()\n  fullName: PermissionSet.Demand()\n- uid: System.Security.PermissionSet.Deny\n  parent: System.Security.PermissionSet\n  isExternal: false\n  name: Deny()\n  nameWithType: PermissionSet.Deny()\n  fullName: PermissionSet.Deny()\n- uid: System.Security.PermissionSet.GetEnumerator\n  parent: System.Security.PermissionSet\n  isExternal: false\n  name: GetEnumerator()\n  nameWithType: PermissionSet.GetEnumerator()\n  fullName: PermissionSet.GetEnumerator()\n- uid: System.Security.PermissionSet.GetPermission(System.Type)\n  parent: System.Security.PermissionSet\n  isExternal: false\n  name: GetPermission(Type)\n  nameWithType: PermissionSet.GetPermission(Type)\n  fullName: PermissionSet.GetPermission(Type)\n- uid: System.Security.PermissionSet.Intersect(System.Security.PermissionSet)\n  parent: System.Security.PermissionSet\n  isExternal: false\n  name: Intersect(PermissionSet)\n  nameWithType: PermissionSet.Intersect(PermissionSet)\n  fullName: PermissionSet.Intersect(PermissionSet)\n- uid: System.Security.PermissionSet.IsEmpty\n  parent: System.Security.PermissionSet\n  isExternal: false\n  name: IsEmpty()\n  nameWithType: PermissionSet.IsEmpty()\n  fullName: PermissionSet.IsEmpty()\n- uid: System.Security.PermissionSet.IsSubsetOf(System.Security.PermissionSet)\n  parent: System.Security.PermissionSet\n  isExternal: false\n  name: IsSubsetOf(PermissionSet)\n  nameWithType: PermissionSet.IsSubsetOf(PermissionSet)\n  fullName: PermissionSet.IsSubsetOf(PermissionSet)\n- uid: System.Security.PermissionSet.IsSynchronized\n  parent: System.Security.PermissionSet\n  isExternal: false\n  name: IsSynchronized\n  nameWithType: PermissionSet.IsSynchronized\n  fullName: PermissionSet.IsSynchronized\n- uid: System.Security.PermissionSet.IsUnrestricted\n  parent: System.Security.PermissionSet\n  isExternal: false\n  name: IsUnrestricted()\n  nameWithType: PermissionSet.IsUnrestricted()\n  fullName: PermissionSet.IsUnrestricted()\n- uid: System.Security.PermissionSet.PermitOnly\n  parent: System.Security.PermissionSet\n  isExternal: false\n  name: PermitOnly()\n  nameWithType: PermissionSet.PermitOnly()\n  fullName: PermissionSet.PermitOnly()\n- uid: System.Security.PermissionSet.RemovePermission(System.Type)\n  parent: System.Security.PermissionSet\n  isExternal: false\n  name: RemovePermission(Type)\n  nameWithType: PermissionSet.RemovePermission(Type)\n  fullName: PermissionSet.RemovePermission(Type)\n- uid: System.Security.PermissionSet.RevertAssert\n  parent: System.Security.PermissionSet\n  isExternal: false\n  name: RevertAssert()\n  nameWithType: PermissionSet.RevertAssert()\n  fullName: PermissionSet.RevertAssert()\n- uid: System.Security.PermissionSet.SetPermission(System.Security.IPermission)\n  parent: System.Security.PermissionSet\n  isExternal: false\n  name: SetPermission(IPermission)\n  nameWithType: PermissionSet.SetPermission(IPermission)\n  fullName: PermissionSet.SetPermission(IPermission)\n- uid: System.Security.PermissionSet.SyncRoot\n  parent: System.Security.PermissionSet\n  isExternal: false\n  name: SyncRoot\n  nameWithType: PermissionSet.SyncRoot\n  fullName: PermissionSet.SyncRoot\n- uid: System.Security.PermissionSet.Union(System.Security.PermissionSet)\n  parent: System.Security.PermissionSet\n  isExternal: false\n  name: Union(PermissionSet)\n  nameWithType: PermissionSet.Union(PermissionSet)\n  fullName: PermissionSet.Union(PermissionSet)\n- uid: System.Security.PermissionSet.System#Runtime#Serialization#IDeserializationCallback#OnDeserialization(System.Object)\n  parent: System.Security.PermissionSet\n  isExternal: false\n  name: IDeserializationCallback.OnDeserialization(Object)\n  nameWithType: PermissionSet.IDeserializationCallback.OnDeserialization(Object)\n  fullName: PermissionSet.IDeserializationCallback.OnDeserialization(Object)\n- uid: System.Linq.Enumerable.Cast``1(System.Collections.IEnumerable)\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: Cast<TResult>(IEnumerable)\n  nameWithType: Enumerable.Cast<TResult>(IEnumerable)\n  fullName: Enumerable.Cast<TResult>(IEnumerable)\n- uid: System.Linq.Enumerable.OfType``1(System.Collections.IEnumerable)\n  parent: System.Linq.Enumerable\n  isExternal: false\n  name: OfType<TResult>(IEnumerable)\n  nameWithType: Enumerable.OfType<TResult>(IEnumerable)\n  fullName: Enumerable.OfType<TResult>(IEnumerable)\n- uid: System.Linq.ParallelEnumerable.AsParallel(System.Collections.IEnumerable)\n  parent: System.Linq.ParallelEnumerable\n  isExternal: false\n  name: AsParallel(IEnumerable)\n  nameWithType: ParallelEnumerable.AsParallel(IEnumerable)\n  fullName: ParallelEnumerable.AsParallel(IEnumerable)\n- uid: System.Linq.Queryable.AsQueryable(System.Collections.IEnumerable)\n  parent: System.Linq.Queryable\n  isExternal: false\n  name: AsQueryable(IEnumerable)\n  nameWithType: Queryable.AsQueryable(IEnumerable)\n  fullName: Queryable.AsQueryable(IEnumerable)\n"}