{"nodes":[{"content":"Displays a standard dialog box that prompts the user to open a file. This class cannot be inherited.","nodes":[{"pos":[0,100],"content":"Displays a standard dialog box that prompts the user to open a file. This class cannot be inherited.","nodes":[{"content":"Displays a standard dialog box that prompts the user to open a file. This class cannot be inherited.","pos":[0,100],"nodes":[{"content":"Displays a standard dialog box that prompts the user to open a file.","pos":[0,68]},{"content":"This class cannot be inherited.","pos":[69,100]}]}]}],"pos":[848,949],"yaml":true},{"content":"This class allows you to check whether a file exists and to open it. The <xref:System.Windows.Forms.OpenFileDialog.ShowReadOnly%2A> property determines whether a read-only check box appears in the dialog box. The <xref:System.Windows.Forms.OpenFileDialog.ReadOnlyChecked%2A> property indicates whether the read-only check box is checked.  \n  \n Most of the core functionality for this class is found in the <xref:System.Windows.Forms.FileDialog> class.  \n  \n If you want to give the user the ability to select a folder instead of a file, use <xref:System.Windows.Forms.FolderBrowserDialog> instead.","nodes":[{"pos":[0,337],"content":"This class allows you to check whether a file exists and to open it. The <xref:System.Windows.Forms.OpenFileDialog.ShowReadOnly%2A> property determines whether a read-only check box appears in the dialog box. The <xref:System.Windows.Forms.OpenFileDialog.ReadOnlyChecked%2A> property indicates whether the read-only check box is checked.","nodes":[{"content":"This class allows you to check whether a file exists and to open it. The <xref:System.Windows.Forms.OpenFileDialog.ShowReadOnly%2A> property determines whether a read-only check box appears in the dialog box. The <xref:System.Windows.Forms.OpenFileDialog.ReadOnlyChecked%2A> property indicates whether the read-only check box is checked.","pos":[0,337],"nodes":[{"content":"This class allows you to check whether a file exists and to open it.","pos":[0,68]},{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.OpenFileDialog.ShowReadOnly%2A&gt;</ph> property determines whether a read-only check box appears in the dialog box.","pos":[69,208],"source":" The <xref:System.Windows.Forms.OpenFileDialog.ShowReadOnly%2A> property determines whether a read-only check box appears in the dialog box."},{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.OpenFileDialog.ReadOnlyChecked%2A&gt;</ph> property indicates whether the read-only check box is checked.","pos":[209,337],"source":" The <xref:System.Windows.Forms.OpenFileDialog.ReadOnlyChecked%2A> property indicates whether the read-only check box is checked."}]}]},{"pos":[344,451],"content":"Most of the core functionality for this class is found in the <xref:System.Windows.Forms.FileDialog> class.","nodes":[{"content":"Most of the core functionality for this class is found in the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.FileDialog&gt;</ph> class.","pos":[0,107],"source":"Most of the core functionality for this class is found in the <xref:System.Windows.Forms.FileDialog> class."}]},{"pos":[458,597],"content":"If you want to give the user the ability to select a folder instead of a file, use <xref:System.Windows.Forms.FolderBrowserDialog> instead.","nodes":[{"content":"If you want to give the user the ability to select a folder instead of a file, use <ph id=\"ph1\">&lt;xref:System.Windows.Forms.FolderBrowserDialog&gt;</ph> instead.","pos":[0,139],"source":"If you want to give the user the ability to select a folder instead of a file, use <xref:System.Windows.Forms.FolderBrowserDialog> instead."}]}],"pos":[960,1564],"yaml":true,"extradata":"MT"},{"content":"Initializes an instance of the <xref href=\"System.Windows.Forms.OpenFileDialog\"></xref> class.","nodes":[{"pos":[0,94],"content":"Initializes an instance of the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.OpenFileDialog\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes an instance of the <xref href=\"System.Windows.Forms.OpenFileDialog\"></xref> class."}],"pos":[6275,6370],"yaml":true},{"content":"This is the default, compiler-supplied constructor for the <xref:System.Windows.Forms.OpenFileDialog> class.","nodes":[{"pos":[0,108],"content":"This is the default, compiler-supplied constructor for the <xref:System.Windows.Forms.OpenFileDialog> class.","nodes":[{"content":"This is the default, compiler-supplied constructor for the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.OpenFileDialog&gt;</ph> class.","pos":[0,108],"source":"This is the default, compiler-supplied constructor for the <xref:System.Windows.Forms.OpenFileDialog> class."}]}],"pos":[6381,6490],"yaml":true,"extradata":"MT"},{"content":"Gets or sets a value indicating whether the dialog box displays a warning if the user specifies a file name that does not exist.","nodes":[{"pos":[0,128],"content":"Gets or sets a value indicating whether the dialog box displays a warning if the user specifies a file name that does not exist.","nodes":[{"content":"Gets or sets a value indicating whether the dialog box displays a warning if the user specifies a file name that does not exist.","pos":[0,128]}]}],"pos":[7594,7723],"yaml":true},{"content":"`true` if the dialog box displays a warning when the user specifies a file name that does not exist; otherwise, `false`. The default value is `true`.","nodes":[{"pos":[0,149],"content":"`true` if the dialog box displays a warning when the user specifies a file name that does not exist; otherwise, `false`. The default value is `true`.","nodes":[{"content":"<ph id=\"ph1\">`true`</ph> if the dialog box displays a warning when the user specifies a file name that does not exist; otherwise, <ph id=\"ph2\">`false`</ph>.","pos":[0,120],"source":"`true` if the dialog box displays a warning when the user specifies a file name that does not exist; otherwise, `false`."},{"content":"The default value is <ph id=\"ph1\">`true`</ph>.","pos":[121,149],"source":" The default value is `true`."}]}],"pos":[7855,8007],"yaml":true},{"content":"Gets or sets a value indicating whether the dialog box allows multiple files to be selected.","nodes":[{"pos":[0,92],"content":"Gets or sets a value indicating whether the dialog box allows multiple files to be selected.","nodes":[{"content":"Gets or sets a value indicating whether the dialog box allows multiple files to be selected.","pos":[0,92]}]}],"pos":[9046,9139],"yaml":true},{"content":"Use the <xref:System.Windows.Forms.FileDialog.FileNames%2A> property to access the full list of selected file names.","nodes":[{"pos":[0,116],"content":"Use the <xref:System.Windows.Forms.FileDialog.FileNames%2A> property to access the full list of selected file names.","nodes":[{"content":"Use the <ph id=\"ph1\">&lt;xref:System.Windows.Forms.FileDialog.FileNames%2A&gt;</ph> property to access the full list of selected file names.","pos":[0,116],"source":"Use the <xref:System.Windows.Forms.FileDialog.FileNames%2A> property to access the full list of selected file names."}]}],"pos":[9150,9267],"yaml":true,"extradata":"MT"},{"content":"`true` if the dialog box allows multiple files to be selected together or concurrently; otherwise, `false`. The default value is `false`.","nodes":[{"pos":[0,137],"content":"`true` if the dialog box allows multiple files to be selected together or concurrently; otherwise, `false`. The default value is `false`.","nodes":[{"content":"<ph id=\"ph1\">`true`</ph> if the dialog box allows multiple files to be selected together or concurrently; otherwise, <ph id=\"ph2\">`false`</ph>.","pos":[0,107],"source":"`true` if the dialog box allows multiple files to be selected together or concurrently; otherwise, `false`."},{"content":"The default value is <ph id=\"ph1\">`false`</ph>.","pos":[108,137],"source":" The default value is `false`."}]}],"pos":[10527,10667],"yaml":true},{"content":"Opens the file selected by the user, with read-only permission. The file is specified by the <xref href=\"System.Windows.Forms.FileDialog.FileName\"></xref> property.","nodes":[{"pos":[0,164],"content":"Opens the file selected by the user, with read-only permission. The file is specified by the <xref href=\"System.Windows.Forms.FileDialog.FileName\"></xref> property.","nodes":[{"content":"Opens the file selected by the user, with read-only permission.","pos":[0,63]},{"content":"The file is specified by the <ph id=\"ph1\">&lt;xref href=\"System.Windows.Forms.FileDialog.FileName\"&gt;&lt;/xref&gt;</ph> property.","pos":[64,164],"source":" The file is specified by the <xref href=\"System.Windows.Forms.FileDialog.FileName\"></xref> property."}]}],"pos":[11688,11853],"yaml":true},{"content":"The <xref:System.Windows.Forms.OpenFileDialog.OpenFile%2A> method is used to provide a facility to quickly open a file from the dialog box. The file is opened in read-only mode for security purposes. To open a file in read/write mode, you must use another method, such as <xref:System.IO.FileStream>.","nodes":[{"pos":[0,300],"content":"The <xref:System.Windows.Forms.OpenFileDialog.OpenFile%2A> method is used to provide a facility to quickly open a file from the dialog box. The file is opened in read-only mode for security purposes. To open a file in read/write mode, you must use another method, such as <xref:System.IO.FileStream>.","nodes":[{"content":"The <xref:System.Windows.Forms.OpenFileDialog.OpenFile%2A> method is used to provide a facility to quickly open a file from the dialog box. The file is opened in read-only mode for security purposes. To open a file in read/write mode, you must use another method, such as <xref:System.IO.FileStream>.","pos":[0,300],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.OpenFileDialog.OpenFile%2A&gt;</ph> method is used to provide a facility to quickly open a file from the dialog box.","pos":[0,139],"source":"The <xref:System.Windows.Forms.OpenFileDialog.OpenFile%2A> method is used to provide a facility to quickly open a file from the dialog box."},{"content":"The file is opened in read-only mode for security purposes.","pos":[140,199]},{"content":"To open a file in read/write mode, you must use another method, such as <ph id=\"ph1\">&lt;xref:System.IO.FileStream&gt;</ph>.","pos":[200,300],"source":" To open a file in read/write mode, you must use another method, such as <xref:System.IO.FileStream>."}]}]}],"pos":[11864,12165],"yaml":true,"extradata":"MT"},{"content":"A <xref href=\"System.IO.Stream\"></xref> that specifies the read-only file selected by the user.","nodes":[{"pos":[0,95],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.IO.Stream\"&gt;&lt;/xref&gt;</ph> that specifies the read-only file selected by the user.","source":"A <xref href=\"System.IO.Stream\"></xref> that specifies the read-only file selected by the user."}],"pos":[12877,12973],"yaml":true},{"content":"The file name is `null`.","nodes":[{"pos":[0,24],"content":"The file name is <ph id=\"ph1\">`null`</ph>.","source":"The file name is `null`."}],"pos":[13147,13172],"yaml":true},{"content":"Gets or sets a value indicating whether the read-only check box is selected.","nodes":[{"pos":[0,76],"content":"Gets or sets a value indicating whether the read-only check box is selected.","nodes":[{"content":"Gets or sets a value indicating whether the read-only check box is selected.","pos":[0,76]}]}],"pos":[14136,14213],"yaml":true},{"content":"The <xref:System.Windows.Forms.OpenFileDialog.ReadOnlyChecked%2A> state does not affect the read/write mode that <xref:System.Windows.Forms.OpenFileDialog.OpenFile%2A?displayProperty=fullName> uses to open a file selected in the dialog box. <xref:System.Windows.Forms.OpenFileDialog.OpenFile%2A> will always open the file in read-only mode.  \n  \n The <xref:System.Windows.Forms.OpenFileDialog.ShowReadOnly%2A> property must be set before in order for the read-only check box to appear in the dialog box.","nodes":[{"pos":[0,340],"content":"The <xref:System.Windows.Forms.OpenFileDialog.ReadOnlyChecked%2A> state does not affect the read/write mode that <xref:System.Windows.Forms.OpenFileDialog.OpenFile%2A?displayProperty=fullName> uses to open a file selected in the dialog box. <xref:System.Windows.Forms.OpenFileDialog.OpenFile%2A> will always open the file in read-only mode.","nodes":[{"content":"The <xref:System.Windows.Forms.OpenFileDialog.ReadOnlyChecked%2A> state does not affect the read/write mode that <xref:System.Windows.Forms.OpenFileDialog.OpenFile%2A?displayProperty=fullName> uses to open a file selected in the dialog box. <xref:System.Windows.Forms.OpenFileDialog.OpenFile%2A> will always open the file in read-only mode.","pos":[0,340],"nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.OpenFileDialog.ReadOnlyChecked%2A&gt;</ph> state does not affect the read/write mode that <ph id=\"ph2\">&lt;xref:System.Windows.Forms.OpenFileDialog.OpenFile%2A?displayProperty=fullName&gt;</ph> uses to open a file selected in the dialog box.","pos":[0,240],"source":"The <xref:System.Windows.Forms.OpenFileDialog.ReadOnlyChecked%2A> state does not affect the read/write mode that <xref:System.Windows.Forms.OpenFileDialog.OpenFile%2A?displayProperty=fullName> uses to open a file selected in the dialog box."},{"content":"<ph id=\"ph1\">&lt;xref:System.Windows.Forms.OpenFileDialog.OpenFile%2A&gt;</ph> will always open the file in read-only mode.","pos":[241,340],"source":" <xref:System.Windows.Forms.OpenFileDialog.OpenFile%2A> will always open the file in read-only mode."}]}]},{"pos":[347,503],"content":"The <xref:System.Windows.Forms.OpenFileDialog.ShowReadOnly%2A> property must be set before in order for the read-only check box to appear in the dialog box.","nodes":[{"content":"The <ph id=\"ph1\">&lt;xref:System.Windows.Forms.OpenFileDialog.ShowReadOnly%2A&gt;</ph> property must be set before in order for the read-only check box to appear in the dialog box.","pos":[0,156],"source":"The <xref:System.Windows.Forms.OpenFileDialog.ShowReadOnly%2A> property must be set before in order for the read-only check box to appear in the dialog box."}]}],"pos":[14224,14732],"yaml":true,"extradata":"MT"},{"content":"`true` if the read-only check box is selected; otherwise, `false`. The default value is `false`.","nodes":[{"pos":[0,96],"content":"`true` if the read-only check box is selected; otherwise, `false`. The default value is `false`.","nodes":[{"content":"<ph id=\"ph1\">`true`</ph> if the read-only check box is selected; otherwise, <ph id=\"ph2\">`false`</ph>.","pos":[0,66],"source":"`true` if the read-only check box is selected; otherwise, `false`."},{"content":"The default value is <ph id=\"ph1\">`false`</ph>.","pos":[67,96],"source":" The default value is `false`."}]}],"pos":[15885,15984],"yaml":true},{"content":"Resets all properties to their default values.","nodes":[{"pos":[0,46],"content":"Resets all properties to their default values.","nodes":[{"content":"Resets all properties to their default values.","pos":[0,46]}]}],"pos":[16991,17038],"yaml":true},{"content":"Gets the file name and extension for the file selected in the dialog box. The file name does not include the path.","nodes":[{"pos":[0,114],"content":"Gets the file name and extension for the file selected in the dialog box. The file name does not include the path.","nodes":[{"content":"Gets the file name and extension for the file selected in the dialog box. The file name does not include the path.","pos":[0,114],"nodes":[{"content":"Gets the file name and extension for the file selected in the dialog box.","pos":[0,73]},{"content":"The file name does not include the path.","pos":[74,114]}]}]}],"pos":[18129,18244],"yaml":true},{"content":"A safe file name (just the file name and extension without a path) can be used to improve security for applications because it does not expose path information. This property should be accessible to code running with limited trust.","nodes":[{"pos":[0,231],"content":"A safe file name (just the file name and extension without a path) can be used to improve security for applications because it does not expose path information. This property should be accessible to code running with limited trust.","nodes":[{"content":"A safe file name (just the file name and extension without a path) can be used to improve security for applications because it does not expose path information. This property should be accessible to code running with limited trust.","pos":[0,231],"nodes":[{"content":"A safe file name (just the file name and extension without a path) can be used to improve security for applications because it does not expose path information.","pos":[0,160]},{"content":"This property should be accessible to code running with limited trust.","pos":[161,231]}]}]}],"pos":[18255,18487],"yaml":true,"extradata":"MT"},{"content":"The file name and extension for the file selected in the dialog box. The file name does not include the path. The default value is an empty string.","nodes":[{"pos":[0,147],"content":"The file name and extension for the file selected in the dialog box. The file name does not include the path. The default value is an empty string.","nodes":[{"content":"The file name and extension for the file selected in the dialog box. The file name does not include the path. The default value is an empty string.","pos":[0,147],"nodes":[{"content":"The file name and extension for the file selected in the dialog box.","pos":[0,68]},{"content":"The file name does not include the path.","pos":[69,109]},{"content":"The default value is an empty string.","pos":[110,147]}]}]}],"pos":[18660,18808],"yaml":true},{"content":"Gets an array of file names and extensions for all the selected files in the dialog box. The file names do not include the path.","nodes":[{"pos":[0,128],"content":"Gets an array of file names and extensions for all the selected files in the dialog box. The file names do not include the path.","nodes":[{"content":"Gets an array of file names and extensions for all the selected files in the dialog box. The file names do not include the path.","pos":[0,128],"nodes":[{"content":"Gets an array of file names and extensions for all the selected files in the dialog box.","pos":[0,88]},{"content":"The file names do not include the path.","pos":[89,128]}]}]}],"pos":[19904,20033],"yaml":true},{"content":"A safe file name (just the file name and extension without a path) can be used to improve security for applications because it does not expose path information. This property should be accessible to code running with limited trust.","nodes":[{"pos":[0,231],"content":"A safe file name (just the file name and extension without a path) can be used to improve security for applications because it does not expose path information. This property should be accessible to code running with limited trust.","nodes":[{"content":"A safe file name (just the file name and extension without a path) can be used to improve security for applications because it does not expose path information. This property should be accessible to code running with limited trust.","pos":[0,231],"nodes":[{"content":"A safe file name (just the file name and extension without a path) can be used to improve security for applications because it does not expose path information.","pos":[0,160]},{"content":"This property should be accessible to code running with limited trust.","pos":[161,231]}]}]}],"pos":[20044,20276],"yaml":true,"extradata":"MT"},{"content":"An array of file names and extensions for all the selected files in the dialog box. The file names do not include the path. If no files are selected, an empty array is returned.","nodes":[{"pos":[0,177],"content":"An array of file names and extensions for all the selected files in the dialog box. The file names do not include the path. If no files are selected, an empty array is returned.","nodes":[{"content":"An array of file names and extensions for all the selected files in the dialog box. The file names do not include the path. If no files are selected, an empty array is returned.","pos":[0,177],"nodes":[{"content":"An array of file names and extensions for all the selected files in the dialog box.","pos":[0,83]},{"content":"The file names do not include the path.","pos":[84,123]},{"content":"If no files are selected, an empty array is returned.","pos":[124,177]}]}]}],"pos":[20454,20632],"yaml":true},{"content":"Gets or sets a value indicating whether the dialog box contains a read-only check box.","nodes":[{"pos":[0,86],"content":"Gets or sets a value indicating whether the dialog box contains a read-only check box.","nodes":[{"content":"Gets or sets a value indicating whether the dialog box contains a read-only check box.","pos":[0,86]}]}],"pos":[21701,21788],"yaml":true},{"content":"`true` if the dialog box contains a read-only check box; otherwise, `false`. The default value is `false`.","nodes":[{"pos":[0,106],"content":"`true` if the dialog box contains a read-only check box; otherwise, `false`. The default value is `false`.","nodes":[{"content":"<ph id=\"ph1\">`true`</ph> if the dialog box contains a read-only check box; otherwise, <ph id=\"ph2\">`false`</ph>.","pos":[0,76],"source":"`true` if the dialog box contains a read-only check box; otherwise, `false`."},{"content":"The default value is <ph id=\"ph1\">`false`</ph>.","pos":[77,106],"source":" The default value is `false`."}]}],"pos":[22849,22958],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.Windows.Forms.OpenFileDialog\n  commentId: T:System.Windows.Forms.OpenFileDialog\n  id: OpenFileDialog\n  children:\n  - System.Windows.Forms.OpenFileDialog.#ctor\n  - System.Windows.Forms.OpenFileDialog.CheckFileExists\n  - System.Windows.Forms.OpenFileDialog.Multiselect\n  - System.Windows.Forms.OpenFileDialog.OpenFile\n  - System.Windows.Forms.OpenFileDialog.ReadOnlyChecked\n  - System.Windows.Forms.OpenFileDialog.Reset\n  - System.Windows.Forms.OpenFileDialog.SafeFileName\n  - System.Windows.Forms.OpenFileDialog.SafeFileNames\n  - System.Windows.Forms.OpenFileDialog.ShowReadOnly\n  langs:\n  - csharp\n  name: OpenFileDialog\n  nameWithType: OpenFileDialog\n  fullName: System.Windows.Forms.OpenFileDialog\n  type: Class\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Displays a standard dialog box that prompts the user to open a file. This class cannot be inherited.\n  remarks: \"This class allows you to check whether a file exists and to open it. The <xref:System.Windows.Forms.OpenFileDialog.ShowReadOnly%2A> property determines whether a read-only check box appears in the dialog box. The <xref:System.Windows.Forms.OpenFileDialog.ReadOnlyChecked%2A> property indicates whether the read-only check box is checked.  \\n  \\n Most of the core functionality for this class is found in the <xref:System.Windows.Forms.FileDialog> class.  \\n  \\n If you want to give the user the ability to select a folder instead of a file, use <xref:System.Windows.Forms.FolderBrowserDialog> instead.\"\n  example:\n  - \"The following code example creates an <xref:System.Windows.Forms.OpenFileDialog>, sets several properties to define the file extension filter and dialog behavior, and displays the dialog box using the <xref:System.Windows.Forms.CommonDialog.ShowDialog%2A?displayProperty=fullName> method. The example requires a form with a <xref:System.Windows.Forms.Button> placed on it and a reference to the <xref:System.IO> namespace added to it.  \\n  \\n [!code-cpp[Classic OpenFileDialog Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic OpenFileDialog Example/CPP/source.cpp#1)]\\n [!code-csharp[Classic OpenFileDialog Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic OpenFileDialog Example/CS/source.cs#1)]\\n [!code-vb[Classic OpenFileDialog Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic OpenFileDialog Example/VB/source.vb#1)]\"\n  syntax:\n    content: 'public sealed class OpenFileDialog : System.Windows.Forms.FileDialog'\n  inheritance:\n  - System.Object\n  - System.MarshalByRefObject\n  - System.ComponentModel.Component\n  - System.Windows.Forms.CommonDialog\n  - System.Windows.Forms.FileDialog\n  implements: []\n  inheritedMembers:\n  - System.ComponentModel.Component.CanRaiseEvents\n  - System.ComponentModel.Component.Container\n  - System.ComponentModel.Component.DesignMode\n  - System.ComponentModel.Component.Dispose\n  - System.ComponentModel.Component.Dispose(System.Boolean)\n  - System.ComponentModel.Component.Disposed\n  - System.ComponentModel.Component.Events\n  - System.ComponentModel.Component.GetService(System.Type)\n  - System.ComponentModel.Component.Site\n  - System.MarshalByRefObject.CreateObjRef(System.Type)\n  - System.MarshalByRefObject.GetLifetimeService\n  - System.MarshalByRefObject.InitializeLifetimeService\n  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)\n  - System.Object.Equals(System.Object)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetHashCode\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Windows.Forms.CommonDialog.HelpRequest\n  - System.Windows.Forms.CommonDialog.OnHelpRequest(System.EventArgs)\n  - System.Windows.Forms.CommonDialog.OwnerWndProc(System.IntPtr,System.Int32,System.IntPtr,System.IntPtr)\n  - System.Windows.Forms.CommonDialog.ShowDialog\n  - System.Windows.Forms.CommonDialog.ShowDialog(System.Windows.Forms.IWin32Window)\n  - System.Windows.Forms.CommonDialog.Tag\n  - System.Windows.Forms.FileDialog.AddExtension\n  - System.Windows.Forms.FileDialog.AutoUpgradeEnabled\n  - System.Windows.Forms.FileDialog.CheckPathExists\n  - System.Windows.Forms.FileDialog.CustomPlaces\n  - System.Windows.Forms.FileDialog.DefaultExt\n  - System.Windows.Forms.FileDialog.DereferenceLinks\n  - System.Windows.Forms.FileDialog.EventFileOk\n  - System.Windows.Forms.FileDialog.FileName\n  - System.Windows.Forms.FileDialog.FileNames\n  - System.Windows.Forms.FileDialog.FileOk\n  - System.Windows.Forms.FileDialog.Filter\n  - System.Windows.Forms.FileDialog.FilterIndex\n  - System.Windows.Forms.FileDialog.HookProc(System.IntPtr,System.Int32,System.IntPtr,System.IntPtr)\n  - System.Windows.Forms.FileDialog.InitialDirectory\n  - System.Windows.Forms.FileDialog.Instance\n  - System.Windows.Forms.FileDialog.OnFileOk(System.ComponentModel.CancelEventArgs)\n  - System.Windows.Forms.FileDialog.Options\n  - System.Windows.Forms.FileDialog.RestoreDirectory\n  - System.Windows.Forms.FileDialog.RunDialog(System.IntPtr)\n  - System.Windows.Forms.FileDialog.ShowHelp\n  - System.Windows.Forms.FileDialog.SupportMultiDottedExtensions\n  - System.Windows.Forms.FileDialog.Title\n  - System.Windows.Forms.FileDialog.ToString\n  - System.Windows.Forms.FileDialog.ValidateNames\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/OpenFileDialog.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.OpenFileDialog.#ctor\n  commentId: M:System.Windows.Forms.OpenFileDialog.#ctor\n  id: '#ctor'\n  parent: System.Windows.Forms.OpenFileDialog\n  langs:\n  - csharp\n  name: OpenFileDialog()\n  nameWithType: OpenFileDialog.OpenFileDialog()\n  fullName: OpenFileDialog.OpenFileDialog()\n  type: Constructor\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Initializes an instance of the <xref href=\"System.Windows.Forms.OpenFileDialog\"></xref> class.\n  remarks: This is the default, compiler-supplied constructor for the <xref:System.Windows.Forms.OpenFileDialog> class.\n  syntax:\n    content: public OpenFileDialog ();\n    parameters: []\n  overload: System.Windows.Forms.OpenFileDialog.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/OpenFileDialog.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.OpenFileDialog.CheckFileExists\n  commentId: P:System.Windows.Forms.OpenFileDialog.CheckFileExists\n  id: CheckFileExists\n  parent: System.Windows.Forms.OpenFileDialog\n  langs:\n  - csharp\n  name: CheckFileExists\n  nameWithType: OpenFileDialog.CheckFileExists\n  fullName: OpenFileDialog.CheckFileExists\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets or sets a value indicating whether the dialog box displays a warning if the user specifies a file name that does not exist.\n  syntax:\n    content: public override bool CheckFileExists { get; set; }\n    return:\n      type: System.Boolean\n      description: '`true` if the dialog box displays a warning when the user specifies a file name that does not exist; otherwise, `false`. The default value is `true`.'\n  overload: System.Windows.Forms.OpenFileDialog.CheckFileExists*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/OpenFileDialog.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.OpenFileDialog.Multiselect\n  commentId: P:System.Windows.Forms.OpenFileDialog.Multiselect\n  id: Multiselect\n  parent: System.Windows.Forms.OpenFileDialog\n  langs:\n  - csharp\n  name: Multiselect\n  nameWithType: OpenFileDialog.Multiselect\n  fullName: OpenFileDialog.Multiselect\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets or sets a value indicating whether the dialog box allows multiple files to be selected.\n  remarks: Use the <xref:System.Windows.Forms.FileDialog.FileNames%2A> property to access the full list of selected file names.\n  example:\n  - \"The following code example allows the user to select a number of images and display them in <xref:System.Windows.Forms.PictureBox> controls on a Form. It demonstrates initializing an <xref:System.Windows.Forms.OpenFileDialog>, setting the <xref:System.Windows.Forms.FileDialog.Title%2A> and <xref:System.Windows.Forms.FileDialog.Filter%2A> properties, and allowing the user to select multiple files by setting the <xref:System.Windows.Forms.OpenFileDialog.Multiselect%2A> property to true. This code example assumes that your form already has an <xref:System.Windows.Forms.OpenFileDialog> control named `openFileDialog1`, a <xref:System.Windows.Forms.Button> named `SelectFileButton`, and a <xref:System.Windows.Forms.FlowLayoutPanel> named `flowLayoutPanel1`.  \\n  \\n [!code-csharp[System.Windows.Forms.OpenFileDialog.MultiSelect#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.OpenFileDialog.MultiSelect/CS/Form1.cs#1)]\\n [!code-vb[System.Windows.Forms.OpenFileDialog.MultiSelect#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.OpenFileDialog.MultiSelect/VB/Form1.vb#1)]\"\n  syntax:\n    content: public bool Multiselect { get; set; }\n    return:\n      type: System.Boolean\n      description: '`true` if the dialog box allows multiple files to be selected together or concurrently; otherwise, `false`. The default value is `false`.'\n  overload: System.Windows.Forms.OpenFileDialog.Multiselect*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/OpenFileDialog.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.OpenFileDialog.OpenFile\n  commentId: M:System.Windows.Forms.OpenFileDialog.OpenFile\n  id: OpenFile\n  parent: System.Windows.Forms.OpenFileDialog\n  langs:\n  - csharp\n  name: OpenFile()\n  nameWithType: OpenFileDialog.OpenFile()\n  fullName: OpenFileDialog.OpenFile()\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Opens the file selected by the user, with read-only permission. The file is specified by the <xref href=\"System.Windows.Forms.FileDialog.FileName\"></xref> property.\n  remarks: The <xref:System.Windows.Forms.OpenFileDialog.OpenFile%2A> method is used to provide a facility to quickly open a file from the dialog box. The file is opened in read-only mode for security purposes. To open a file in read/write mode, you must use another method, such as <xref:System.IO.FileStream>.\n  example:\n  - \"The following code example demonstrates how to use the <xref:System.Windows.Forms.OpenFileDialog.OpenFile%2A> method.  \\n  \\n [!code-cpp[Classic OpenFileDialog Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic OpenFileDialog Example/CPP/source.cpp#1)]\\n [!code-csharp[Classic OpenFileDialog Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic OpenFileDialog Example/CS/source.cs#1)]\\n [!code-vb[Classic OpenFileDialog Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic OpenFileDialog Example/VB/source.vb#1)]\"\n  syntax:\n    content: public System.IO.Stream OpenFile ();\n    parameters: []\n    return:\n      type: System.IO.Stream\n      description: A <xref href=\"System.IO.Stream\"></xref> that specifies the read-only file selected by the user.\n  overload: System.Windows.Forms.OpenFileDialog.OpenFile*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: The file name is `null`.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/OpenFileDialog.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.OpenFileDialog.ReadOnlyChecked\n  commentId: P:System.Windows.Forms.OpenFileDialog.ReadOnlyChecked\n  id: ReadOnlyChecked\n  parent: System.Windows.Forms.OpenFileDialog\n  langs:\n  - csharp\n  name: ReadOnlyChecked\n  nameWithType: OpenFileDialog.ReadOnlyChecked\n  fullName: OpenFileDialog.ReadOnlyChecked\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets or sets a value indicating whether the read-only check box is selected.\n  remarks: \"The <xref:System.Windows.Forms.OpenFileDialog.ReadOnlyChecked%2A> state does not affect the read/write mode that <xref:System.Windows.Forms.OpenFileDialog.OpenFile%2A?displayProperty=fullName> uses to open a file selected in the dialog box. <xref:System.Windows.Forms.OpenFileDialog.OpenFile%2A> will always open the file in read-only mode.  \\n  \\n The <xref:System.Windows.Forms.OpenFileDialog.ShowReadOnly%2A> property must be set before in order for the read-only check box to appear in the dialog box.\"\n  example:\n  - \"The following code example demonstrates the use of the <xref:System.Windows.Forms.OpenFileDialog.ReadOnlyChecked%2A> property. This example displays the <xref:System.Windows.Forms.OpenFileDialog> box with the <xref:System.Windows.Forms.OpenFileDialog.ShowReadOnly%2A> property set to `true`. If the user clicks the option to open the file in read-only mode, the <xref:System.Windows.Forms.OpenFileDialog.ReadOnlyChecked%2A> property evaluates to `true`, and the <xref:System.Windows.Forms.OpenFileDialog.OpenFile%2A> method is used to open the file. Otherwise, the <xref:System.IO.FileStream> class is used to open the file in read/write mode.  \\n  \\n [!code-cpp[DlgOpenFileReadOnly#1](~/samples/snippets/cpp/VS_Snippets_Winforms/DlgOpenFileReadOnly/CPP/form1.cpp#1)]\\n [!code-csharp[DlgOpenFileReadOnly#1](~/samples/snippets/csharp/VS_Snippets_Winforms/DlgOpenFileReadOnly/CS/form1.cs#1)]\\n [!code-vb[DlgOpenFileReadOnly#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/DlgOpenFileReadOnly/VB/form1.vb#1)]\"\n  syntax:\n    content: public bool ReadOnlyChecked { get; set; }\n    return:\n      type: System.Boolean\n      description: '`true` if the read-only check box is selected; otherwise, `false`. The default value is `false`.'\n  overload: System.Windows.Forms.OpenFileDialog.ReadOnlyChecked*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/OpenFileDialog.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.OpenFileDialog.Reset\n  commentId: M:System.Windows.Forms.OpenFileDialog.Reset\n  id: Reset\n  parent: System.Windows.Forms.OpenFileDialog\n  langs:\n  - csharp\n  name: Reset()\n  nameWithType: OpenFileDialog.Reset()\n  fullName: OpenFileDialog.Reset()\n  type: Method\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Resets all properties to their default values.\n  syntax:\n    content: public override void Reset ();\n    parameters: []\n  overload: System.Windows.Forms.OpenFileDialog.Reset*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/OpenFileDialog.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.OpenFileDialog.SafeFileName\n  commentId: P:System.Windows.Forms.OpenFileDialog.SafeFileName\n  id: SafeFileName\n  parent: System.Windows.Forms.OpenFileDialog\n  langs:\n  - csharp\n  name: SafeFileName\n  nameWithType: OpenFileDialog.SafeFileName\n  fullName: OpenFileDialog.SafeFileName\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets the file name and extension for the file selected in the dialog box. The file name does not include the path.\n  remarks: A safe file name (just the file name and extension without a path) can be used to improve security for applications because it does not expose path information. This property should be accessible to code running with limited trust.\n  syntax:\n    content: >-\n      [System.ComponentModel.Browsable(false)]\n\n      public string SafeFileName { get; }\n    return:\n      type: System.String\n      description: The file name and extension for the file selected in the dialog box. The file name does not include the path. The default value is an empty string.\n  overload: System.Windows.Forms.OpenFileDialog.SafeFileName*\n  exceptions: []\n  attributes:\n  - type: System.ComponentModel.BrowsableAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/OpenFileDialog.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\n- uid: System.Windows.Forms.OpenFileDialog.SafeFileNames\n  commentId: P:System.Windows.Forms.OpenFileDialog.SafeFileNames\n  id: SafeFileNames\n  parent: System.Windows.Forms.OpenFileDialog\n  langs:\n  - csharp\n  name: SafeFileNames\n  nameWithType: OpenFileDialog.SafeFileNames\n  fullName: OpenFileDialog.SafeFileNames\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets an array of file names and extensions for all the selected files in the dialog box. The file names do not include the path.\n  remarks: A safe file name (just the file name and extension without a path) can be used to improve security for applications because it does not expose path information. This property should be accessible to code running with limited trust.\n  syntax:\n    content: >-\n      [System.ComponentModel.Browsable(false)]\n\n      public string[] SafeFileNames { get; }\n    return:\n      type: System.String[]\n      description: An array of file names and extensions for all the selected files in the dialog box. The file names do not include the path. If no files are selected, an empty array is returned.\n  overload: System.Windows.Forms.OpenFileDialog.SafeFileNames*\n  exceptions: []\n  attributes:\n  - type: System.ComponentModel.BrowsableAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/OpenFileDialog.xml\n  ms.technology:\n  - dotnet-winforms\n  ms.author: kempb\n  manager: ghogen\n- uid: System.Windows.Forms.OpenFileDialog.ShowReadOnly\n  commentId: P:System.Windows.Forms.OpenFileDialog.ShowReadOnly\n  id: ShowReadOnly\n  parent: System.Windows.Forms.OpenFileDialog\n  langs:\n  - csharp\n  name: ShowReadOnly\n  nameWithType: OpenFileDialog.ShowReadOnly\n  fullName: OpenFileDialog.ShowReadOnly\n  type: Property\n  assemblies:\n  - System.Windows.Forms\n  namespace: System.Windows.Forms\n  summary: Gets or sets a value indicating whether the dialog box contains a read-only check box.\n  remarks: ''\n  example:\n  - \"The following code example demonstrates the use of the <xref:System.Windows.Forms.OpenFileDialog.ShowReadOnly%2A> property. This example displays the <xref:System.Windows.Forms.OpenFileDialog> box with the <xref:System.Windows.Forms.OpenFileDialog.ShowReadOnly%2A> property set to `true`. If the user clicks the option to open the file in read-only mode, the <xref:System.Windows.Forms.OpenFileDialog.OpenFile%2A> method is used to open the file. Otherwise, the <xref:System.IO.FileStream> class is used to open the file in read/write mode.  \\n  \\n [!code-cpp[DlgOpenFileReadOnly#1](~/samples/snippets/cpp/VS_Snippets_Winforms/DlgOpenFileReadOnly/CPP/form1.cpp#1)]\\n [!code-csharp[DlgOpenFileReadOnly#1](~/samples/snippets/csharp/VS_Snippets_Winforms/DlgOpenFileReadOnly/CS/form1.cs#1)]\\n [!code-vb[DlgOpenFileReadOnly#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/DlgOpenFileReadOnly/VB/form1.vb#1)]\"\n  syntax:\n    content: public bool ShowReadOnly { get; set; }\n    return:\n      type: System.Boolean\n      description: '`true` if the dialog box contains a read-only check box; otherwise, `false`. The default value is `false`.'\n  overload: System.Windows.Forms.OpenFileDialog.ShowReadOnly*\n  exceptions: []\n  attributes: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/OpenFileDialog.xml\n  ms.technology:\n  - dotnet-winforms\n  author: stevehoag\n  ms.author: shoag\n  manager: wpickett\nreferences:\n- uid: System.Windows.Forms.FileDialog\n  parent: System.Windows.Forms\n  isExternal: false\n  name: FileDialog\n  nameWithType: FileDialog\n  fullName: System.Windows.Forms.FileDialog\n- uid: System.ArgumentNullException\n  parent: System\n  isExternal: false\n  name: ArgumentNullException\n  nameWithType: ArgumentNullException\n  fullName: System.ArgumentNullException\n- uid: System.Windows.Forms.OpenFileDialog.#ctor\n  parent: System.Windows.Forms.OpenFileDialog\n  isExternal: false\n  name: OpenFileDialog()\n  nameWithType: OpenFileDialog.OpenFileDialog()\n  fullName: OpenFileDialog.OpenFileDialog()\n- uid: System.Windows.Forms.OpenFileDialog.CheckFileExists\n  parent: System.Windows.Forms.OpenFileDialog\n  isExternal: false\n  name: CheckFileExists\n  nameWithType: OpenFileDialog.CheckFileExists\n  fullName: OpenFileDialog.CheckFileExists\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.Windows.Forms.OpenFileDialog.Multiselect\n  parent: System.Windows.Forms.OpenFileDialog\n  isExternal: false\n  name: Multiselect\n  nameWithType: OpenFileDialog.Multiselect\n  fullName: OpenFileDialog.Multiselect\n- uid: System.Windows.Forms.OpenFileDialog.OpenFile\n  parent: System.Windows.Forms.OpenFileDialog\n  isExternal: false\n  name: OpenFile()\n  nameWithType: OpenFileDialog.OpenFile()\n  fullName: OpenFileDialog.OpenFile()\n- uid: System.IO.Stream\n  parent: System.IO\n  isExternal: false\n  name: Stream\n  nameWithType: Stream\n  fullName: System.IO.Stream\n- uid: System.Windows.Forms.OpenFileDialog.ReadOnlyChecked\n  parent: System.Windows.Forms.OpenFileDialog\n  isExternal: false\n  name: ReadOnlyChecked\n  nameWithType: OpenFileDialog.ReadOnlyChecked\n  fullName: OpenFileDialog.ReadOnlyChecked\n- uid: System.Windows.Forms.OpenFileDialog.Reset\n  parent: System.Windows.Forms.OpenFileDialog\n  isExternal: false\n  name: Reset()\n  nameWithType: OpenFileDialog.Reset()\n  fullName: OpenFileDialog.Reset()\n- uid: System.Windows.Forms.OpenFileDialog.SafeFileName\n  parent: System.Windows.Forms.OpenFileDialog\n  isExternal: false\n  name: SafeFileName\n  nameWithType: OpenFileDialog.SafeFileName\n  fullName: OpenFileDialog.SafeFileName\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.Windows.Forms.OpenFileDialog.SafeFileNames\n  parent: System.Windows.Forms.OpenFileDialog\n  isExternal: false\n  name: SafeFileNames\n  nameWithType: OpenFileDialog.SafeFileNames\n  fullName: OpenFileDialog.SafeFileNames\n- uid: System.String[]\n  parent: System\n  isExternal: false\n  name: String[]\n  nameWithType: String[]\n  fullName: System.String[]\n  spec.csharp:\n  - uid: System.String\n    name: String\n    nameWithType: String\n    fullName: System.String\n  - name: '[]'\n    nameWithType: '[]'\n    fullName: '[]'\n- uid: System.Windows.Forms.OpenFileDialog.ShowReadOnly\n  parent: System.Windows.Forms.OpenFileDialog\n  isExternal: false\n  name: ShowReadOnly\n  nameWithType: OpenFileDialog.ShowReadOnly\n  fullName: OpenFileDialog.ShowReadOnly\n- uid: System.Windows.Forms.OpenFileDialog.#ctor*\n  parent: System.Windows.Forms.OpenFileDialog\n  isExternal: false\n  name: OpenFileDialog\n  nameWithType: OpenFileDialog.OpenFileDialog\n  fullName: OpenFileDialog.OpenFileDialog\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/OpenFileDialog.xml\n- uid: System.Windows.Forms.OpenFileDialog.CheckFileExists*\n  parent: System.Windows.Forms.OpenFileDialog\n  isExternal: false\n  name: CheckFileExists\n  nameWithType: OpenFileDialog.CheckFileExists\n  fullName: OpenFileDialog.CheckFileExists\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/OpenFileDialog.xml\n- uid: System.Windows.Forms.OpenFileDialog.Multiselect*\n  parent: System.Windows.Forms.OpenFileDialog\n  isExternal: false\n  name: Multiselect\n  nameWithType: OpenFileDialog.Multiselect\n  fullName: OpenFileDialog.Multiselect\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/OpenFileDialog.xml\n- uid: System.Windows.Forms.OpenFileDialog.OpenFile*\n  parent: System.Windows.Forms.OpenFileDialog\n  isExternal: false\n  name: OpenFile\n  nameWithType: OpenFileDialog.OpenFile\n  fullName: OpenFileDialog.OpenFile\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/OpenFileDialog.xml\n- uid: System.Windows.Forms.OpenFileDialog.ReadOnlyChecked*\n  parent: System.Windows.Forms.OpenFileDialog\n  isExternal: false\n  name: ReadOnlyChecked\n  nameWithType: OpenFileDialog.ReadOnlyChecked\n  fullName: OpenFileDialog.ReadOnlyChecked\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/OpenFileDialog.xml\n- uid: System.Windows.Forms.OpenFileDialog.Reset*\n  parent: System.Windows.Forms.OpenFileDialog\n  isExternal: false\n  name: Reset\n  nameWithType: OpenFileDialog.Reset\n  fullName: OpenFileDialog.Reset\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/OpenFileDialog.xml\n- uid: System.Windows.Forms.OpenFileDialog.SafeFileName*\n  parent: System.Windows.Forms.OpenFileDialog\n  isExternal: false\n  name: SafeFileName\n  nameWithType: OpenFileDialog.SafeFileName\n  fullName: OpenFileDialog.SafeFileName\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/OpenFileDialog.xml\n- uid: System.Windows.Forms.OpenFileDialog.SafeFileNames*\n  parent: System.Windows.Forms.OpenFileDialog\n  isExternal: false\n  name: SafeFileNames\n  nameWithType: OpenFileDialog.SafeFileNames\n  fullName: OpenFileDialog.SafeFileNames\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/OpenFileDialog.xml\n- uid: System.Windows.Forms.OpenFileDialog.ShowReadOnly*\n  parent: System.Windows.Forms.OpenFileDialog\n  isExternal: false\n  name: ShowReadOnly\n  nameWithType: OpenFileDialog.ShowReadOnly\n  fullName: OpenFileDialog.ShowReadOnly\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.Windows.Forms/OpenFileDialog.xml\n- uid: System.Object.Equals(System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: Object.Equals(Object)\n  fullName: Object.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Object.GetHashCode\n  parent: System.Object\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: Object.GetHashCode()\n  fullName: Object.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Windows.Forms.FileDialog.ToString\n  parent: System.Windows.Forms.FileDialog\n  isExternal: false\n  name: ToString()\n  nameWithType: FileDialog.ToString()\n  fullName: FileDialog.ToString()\n- uid: System.MarshalByRefObject.CreateObjRef(System.Type)\n  parent: System.MarshalByRefObject\n  isExternal: false\n  name: CreateObjRef(Type)\n  nameWithType: MarshalByRefObject.CreateObjRef(Type)\n  fullName: MarshalByRefObject.CreateObjRef(Type)\n- uid: System.MarshalByRefObject.GetLifetimeService\n  parent: System.MarshalByRefObject\n  isExternal: false\n  name: GetLifetimeService()\n  nameWithType: MarshalByRefObject.GetLifetimeService()\n  fullName: MarshalByRefObject.GetLifetimeService()\n- uid: System.MarshalByRefObject.InitializeLifetimeService\n  parent: System.MarshalByRefObject\n  isExternal: false\n  name: InitializeLifetimeService()\n  nameWithType: MarshalByRefObject.InitializeLifetimeService()\n  fullName: MarshalByRefObject.InitializeLifetimeService()\n- uid: System.MarshalByRefObject.MemberwiseClone(System.Boolean)\n  parent: System.MarshalByRefObject\n  isExternal: false\n  name: MemberwiseClone(Boolean)\n  nameWithType: MarshalByRefObject.MemberwiseClone(Boolean)\n  fullName: MarshalByRefObject.MemberwiseClone(Boolean)\n- uid: System.ComponentModel.Component.CanRaiseEvents\n  parent: System.ComponentModel.Component\n  isExternal: false\n  name: CanRaiseEvents\n  nameWithType: Component.CanRaiseEvents\n  fullName: Component.CanRaiseEvents\n- uid: System.ComponentModel.Component.Container\n  parent: System.ComponentModel.Component\n  isExternal: false\n  name: Container\n  nameWithType: Component.Container\n  fullName: Component.Container\n- uid: System.ComponentModel.Component.DesignMode\n  parent: System.ComponentModel.Component\n  isExternal: false\n  name: DesignMode\n  nameWithType: Component.DesignMode\n  fullName: Component.DesignMode\n- uid: System.ComponentModel.Component.Dispose\n  parent: System.ComponentModel.Component\n  isExternal: false\n  name: Dispose()\n  nameWithType: Component.Dispose()\n  fullName: Component.Dispose()\n- uid: System.ComponentModel.Component.Dispose(System.Boolean)\n  parent: System.ComponentModel.Component\n  isExternal: false\n  name: Dispose(Boolean)\n  nameWithType: Component.Dispose(Boolean)\n  fullName: Component.Dispose(Boolean)\n- uid: System.ComponentModel.Component.Disposed\n  parent: System.ComponentModel.Component\n  isExternal: false\n  name: Disposed\n  nameWithType: Component.Disposed\n  fullName: Component.Disposed\n- uid: System.ComponentModel.Component.Events\n  parent: System.ComponentModel.Component\n  isExternal: false\n  name: Events\n  nameWithType: Component.Events\n  fullName: Component.Events\n- uid: System.ComponentModel.Component.GetService(System.Type)\n  parent: System.ComponentModel.Component\n  isExternal: false\n  name: GetService(Type)\n  nameWithType: Component.GetService(Type)\n  fullName: Component.GetService(Type)\n- uid: System.ComponentModel.Component.Site\n  parent: System.ComponentModel.Component\n  isExternal: false\n  name: Site\n  nameWithType: Component.Site\n  fullName: Component.Site\n- uid: System.Windows.Forms.CommonDialog.HelpRequest\n  parent: System.Windows.Forms.CommonDialog\n  isExternal: false\n  name: HelpRequest\n  nameWithType: CommonDialog.HelpRequest\n  fullName: CommonDialog.HelpRequest\n- uid: System.Windows.Forms.FileDialog.HookProc(System.IntPtr,System.Int32,System.IntPtr,System.IntPtr)\n  parent: System.Windows.Forms.FileDialog\n  isExternal: false\n  name: HookProc(IntPtr, Int32, IntPtr, IntPtr)\n  nameWithType: FileDialog.HookProc(IntPtr, Int32, IntPtr, IntPtr)\n  fullName: FileDialog.HookProc(IntPtr, Int32, IntPtr, IntPtr)\n- uid: System.Windows.Forms.CommonDialog.OnHelpRequest(System.EventArgs)\n  parent: System.Windows.Forms.CommonDialog\n  isExternal: false\n  name: OnHelpRequest(EventArgs)\n  nameWithType: CommonDialog.OnHelpRequest(EventArgs)\n  fullName: CommonDialog.OnHelpRequest(EventArgs)\n- uid: System.Windows.Forms.CommonDialog.OwnerWndProc(System.IntPtr,System.Int32,System.IntPtr,System.IntPtr)\n  parent: System.Windows.Forms.CommonDialog\n  isExternal: false\n  name: OwnerWndProc(IntPtr, Int32, IntPtr, IntPtr)\n  nameWithType: CommonDialog.OwnerWndProc(IntPtr, Int32, IntPtr, IntPtr)\n  fullName: CommonDialog.OwnerWndProc(IntPtr, Int32, IntPtr, IntPtr)\n- uid: System.Windows.Forms.FileDialog.RunDialog(System.IntPtr)\n  parent: System.Windows.Forms.FileDialog\n  isExternal: false\n  name: RunDialog(IntPtr)\n  nameWithType: FileDialog.RunDialog(IntPtr)\n  fullName: FileDialog.RunDialog(IntPtr)\n- uid: System.Windows.Forms.CommonDialog.ShowDialog\n  parent: System.Windows.Forms.CommonDialog\n  isExternal: false\n  name: ShowDialog()\n  nameWithType: CommonDialog.ShowDialog()\n  fullName: CommonDialog.ShowDialog()\n- uid: System.Windows.Forms.CommonDialog.ShowDialog(System.Windows.Forms.IWin32Window)\n  parent: System.Windows.Forms.CommonDialog\n  isExternal: false\n  name: ShowDialog(IWin32Window)\n  nameWithType: CommonDialog.ShowDialog(IWin32Window)\n  fullName: CommonDialog.ShowDialog(IWin32Window)\n- uid: System.Windows.Forms.CommonDialog.Tag\n  parent: System.Windows.Forms.CommonDialog\n  isExternal: false\n  name: Tag\n  nameWithType: CommonDialog.Tag\n  fullName: CommonDialog.Tag\n- uid: System.Windows.Forms.FileDialog.AddExtension\n  parent: System.Windows.Forms.FileDialog\n  isExternal: false\n  name: AddExtension\n  nameWithType: FileDialog.AddExtension\n  fullName: FileDialog.AddExtension\n- uid: System.Windows.Forms.FileDialog.AutoUpgradeEnabled\n  parent: System.Windows.Forms.FileDialog\n  isExternal: false\n  name: AutoUpgradeEnabled\n  nameWithType: FileDialog.AutoUpgradeEnabled\n  fullName: FileDialog.AutoUpgradeEnabled\n- uid: System.Windows.Forms.FileDialog.CheckPathExists\n  parent: System.Windows.Forms.FileDialog\n  isExternal: false\n  name: CheckPathExists\n  nameWithType: FileDialog.CheckPathExists\n  fullName: FileDialog.CheckPathExists\n- uid: System.Windows.Forms.FileDialog.CustomPlaces\n  parent: System.Windows.Forms.FileDialog\n  isExternal: false\n  name: CustomPlaces\n  nameWithType: FileDialog.CustomPlaces\n  fullName: FileDialog.CustomPlaces\n- uid: System.Windows.Forms.FileDialog.DefaultExt\n  parent: System.Windows.Forms.FileDialog\n  isExternal: false\n  name: DefaultExt\n  nameWithType: FileDialog.DefaultExt\n  fullName: FileDialog.DefaultExt\n- uid: System.Windows.Forms.FileDialog.DereferenceLinks\n  parent: System.Windows.Forms.FileDialog\n  isExternal: false\n  name: DereferenceLinks\n  nameWithType: FileDialog.DereferenceLinks\n  fullName: FileDialog.DereferenceLinks\n- uid: System.Windows.Forms.FileDialog.EventFileOk\n  parent: System.Windows.Forms.FileDialog\n  isExternal: false\n  name: EventFileOk\n  nameWithType: FileDialog.EventFileOk\n  fullName: FileDialog.EventFileOk\n- uid: System.Windows.Forms.FileDialog.FileName\n  parent: System.Windows.Forms.FileDialog\n  isExternal: false\n  name: FileName\n  nameWithType: FileDialog.FileName\n  fullName: FileDialog.FileName\n- uid: System.Windows.Forms.FileDialog.FileNames\n  parent: System.Windows.Forms.FileDialog\n  isExternal: false\n  name: FileNames\n  nameWithType: FileDialog.FileNames\n  fullName: FileDialog.FileNames\n- uid: System.Windows.Forms.FileDialog.FileOk\n  parent: System.Windows.Forms.FileDialog\n  isExternal: false\n  name: FileOk\n  nameWithType: FileDialog.FileOk\n  fullName: FileDialog.FileOk\n- uid: System.Windows.Forms.FileDialog.Filter\n  parent: System.Windows.Forms.FileDialog\n  isExternal: false\n  name: Filter\n  nameWithType: FileDialog.Filter\n  fullName: FileDialog.Filter\n- uid: System.Windows.Forms.FileDialog.FilterIndex\n  parent: System.Windows.Forms.FileDialog\n  isExternal: false\n  name: FilterIndex\n  nameWithType: FileDialog.FilterIndex\n  fullName: FileDialog.FilterIndex\n- uid: System.Windows.Forms.FileDialog.InitialDirectory\n  parent: System.Windows.Forms.FileDialog\n  isExternal: false\n  name: InitialDirectory\n  nameWithType: FileDialog.InitialDirectory\n  fullName: FileDialog.InitialDirectory\n- uid: System.Windows.Forms.FileDialog.Instance\n  parent: System.Windows.Forms.FileDialog\n  isExternal: false\n  name: Instance\n  nameWithType: FileDialog.Instance\n  fullName: FileDialog.Instance\n- uid: System.Windows.Forms.FileDialog.OnFileOk(System.ComponentModel.CancelEventArgs)\n  parent: System.Windows.Forms.FileDialog\n  isExternal: false\n  name: OnFileOk(CancelEventArgs)\n  nameWithType: FileDialog.OnFileOk(CancelEventArgs)\n  fullName: FileDialog.OnFileOk(CancelEventArgs)\n- uid: System.Windows.Forms.FileDialog.Options\n  parent: System.Windows.Forms.FileDialog\n  isExternal: false\n  name: Options\n  nameWithType: FileDialog.Options\n  fullName: FileDialog.Options\n- uid: System.Windows.Forms.FileDialog.RestoreDirectory\n  parent: System.Windows.Forms.FileDialog\n  isExternal: false\n  name: RestoreDirectory\n  nameWithType: FileDialog.RestoreDirectory\n  fullName: FileDialog.RestoreDirectory\n- uid: System.Windows.Forms.FileDialog.ShowHelp\n  parent: System.Windows.Forms.FileDialog\n  isExternal: false\n  name: ShowHelp\n  nameWithType: FileDialog.ShowHelp\n  fullName: FileDialog.ShowHelp\n- uid: System.Windows.Forms.FileDialog.SupportMultiDottedExtensions\n  parent: System.Windows.Forms.FileDialog\n  isExternal: false\n  name: SupportMultiDottedExtensions\n  nameWithType: FileDialog.SupportMultiDottedExtensions\n  fullName: FileDialog.SupportMultiDottedExtensions\n- uid: System.Windows.Forms.FileDialog.Title\n  parent: System.Windows.Forms.FileDialog\n  isExternal: false\n  name: Title\n  nameWithType: FileDialog.Title\n  fullName: FileDialog.Title\n- uid: System.Windows.Forms.FileDialog.ValidateNames\n  parent: System.Windows.Forms.FileDialog\n  isExternal: false\n  name: ValidateNames\n  nameWithType: FileDialog.ValidateNames\n  fullName: FileDialog.ValidateNames\n"}