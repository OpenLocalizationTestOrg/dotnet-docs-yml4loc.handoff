{"nodes":[{"content":"Represents a configuration element that specifies a service's credentials based on username and password. This class cannot be inherited.","nodes":[{"pos":[0,137],"content":"Represents a configuration element that specifies a service's credentials based on username and password. This class cannot be inherited.","nodes":[{"content":"Represents a configuration element that specifies a service's credentials based on username and password. This class cannot be inherited.","pos":[0,137],"nodes":[{"content":"Represents a configuration element that specifies a service's credentials based on username and password.","pos":[0,105]},{"content":"This class cannot be inherited.","pos":[106,137]}]}]}],"pos":[1346,1484],"yaml":true},{"content":"Initializes a new instance of the <xref href=\"System.ServiceModel.Configuration.UserNameServiceElement\"></xref> class.","nodes":[{"pos":[0,118],"content":"Initializes a new instance of the <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Configuration.UserNameServiceElement\"&gt;&lt;/xref&gt;</ph> class.","source":"Initializes a new instance of the <xref href=\"System.ServiceModel.Configuration.UserNameServiceElement\"></xref> class."}],"pos":[5686,5805],"yaml":true},{"content":"Gets or sets the maximum length of time a token is cached.","nodes":[{"pos":[0,58],"content":"Gets or sets the maximum length of time a token is cached.","nodes":[{"content":"Gets or sets the maximum length of time a token is cached.","pos":[0,58]}]}],"pos":[7100,7159],"yaml":true},{"content":"A <xref href=\"System.TimeSpan\"></xref> that represents the maximum length of time a token is cached.","nodes":[{"pos":[0,100],"content":"A <ph id=\"ph1\">&lt;xref href=\"System.TimeSpan\"&gt;&lt;/xref&gt;</ph> that represents the maximum length of time a token is cached.","source":"A <xref href=\"System.TimeSpan\"></xref> that represents the maximum length of time a token is cached."}],"pos":[7550,7651],"yaml":true},{"content":"Gets or sets a value that indicates whether logon tokens are cached.","nodes":[{"pos":[0,68],"content":"Gets or sets a value that indicates whether logon tokens are cached.","nodes":[{"content":"Gets or sets a value that indicates whether logon tokens are cached.","pos":[0,68]}]}],"pos":[8972,9041],"yaml":true},{"content":"`true` if logon tokens are cached; otherwise, `false`. The default is `false`.","nodes":[{"pos":[0,78],"content":"`true` if logon tokens are cached; otherwise, `false`. The default is `false`.","nodes":[{"content":"<ph id=\"ph1\">`true`</ph> if logon tokens are cached; otherwise, <ph id=\"ph2\">`false`</ph>.","pos":[0,54],"source":"`true` if logon tokens are cached; otherwise, `false`."},{"content":"The default is <ph id=\"ph1\">`false`</ph>.","pos":[55,78],"source":" The default is `false`."}]}],"pos":[9295,9376],"yaml":true},{"content":"Copies the content of the specified configuration element to this configuration element.","nodes":[{"pos":[0,88],"content":"Copies the content of the specified configuration element to this configuration element.","nodes":[{"content":"Copies the content of the specified configuration element to this configuration element.","pos":[0,88]}]}],"pos":[10806,10895],"yaml":true},{"content":"The configuration element to be copied.","nodes":[{"pos":[0,39],"content":"The configuration element to be copied.","nodes":[{"content":"The configuration element to be copied.","pos":[0,39]}]}],"pos":[11119,11159],"yaml":true},{"content":"<code>from</code> is `null`.","nodes":[{"pos":[0,28],"content":"<ph id=\"ph1\">&lt;code&gt;from&lt;/code&gt;</ph> is <ph id=\"ph2\">`null`</ph>.","source":"<code>from</code> is `null`."}],"pos":[11350,11379],"yaml":true},{"content":"The configuration file is read-only.","nodes":[{"pos":[0,36],"content":"The configuration file is read-only.","nodes":[{"content":"The configuration file is read-only.","pos":[0,36]}]}],"pos":[11523,11560],"yaml":true},{"content":"Gets or sets the type of custom username password validator used.","nodes":[{"pos":[0,65],"content":"Gets or sets the type of custom username password validator used.","nodes":[{"content":"Gets or sets the type of custom username password validator used.","pos":[0,65]}]}],"pos":[12752,12818],"yaml":true},{"content":"The type of custom username password validator used.","nodes":[{"pos":[0,52],"content":"The type of custom username password validator used.","nodes":[{"content":"The type of custom username password validator used.","pos":[0,52]}]}],"pos":[13170,13223],"yaml":true},{"content":"Gets or sets a value that indicates whether Windows groups are included in the security context.","nodes":[{"pos":[0,96],"content":"Gets or sets a value that indicates whether Windows groups are included in the security context.","nodes":[{"content":"Gets or sets a value that indicates whether Windows groups are included in the security context.","pos":[0,96]}]}],"pos":[14580,14677],"yaml":true},{"content":"Setting this property to `true` has a performance impact as it results in a full group expansion. Set this property to `false` if you do not need to establish the list of groups a user belongs to.","nodes":[{"pos":[0,196],"content":"Setting this property to `true` has a performance impact as it results in a full group expansion. Set this property to `false` if you do not need to establish the list of groups a user belongs to.","nodes":[{"content":"Setting this property to <ph id=\"ph1\">`true`</ph> has a performance impact as it results in a full group expansion.","pos":[0,97],"source":"Setting this property to `true` has a performance impact as it results in a full group expansion."},{"content":"Set this property to <ph id=\"ph1\">`false`</ph> if you do not need to establish the list of groups a user belongs to.","pos":[98,196],"source":" Set this property to `false` if you do not need to establish the list of groups a user belongs to."}]}],"pos":[14688,14885],"yaml":true,"extradata":"MT"},{"content":"`true` if Windows groups are included in the security context; otherwise, `false`. The default is `false`.","nodes":[{"pos":[0,106],"content":"`true` if Windows groups are included in the security context; otherwise, `false`. The default is `false`.","nodes":[{"content":"<ph id=\"ph1\">`true`</ph> if Windows groups are included in the security context; otherwise, <ph id=\"ph2\">`false`</ph>.","pos":[0,82],"source":"`true` if Windows groups are included in the security context; otherwise, `false`."},{"content":"The default is <ph id=\"ph1\">`false`</ph>.","pos":[83,106],"source":" The default is `false`."}]}],"pos":[15147,15256],"yaml":true},{"content":"Gets or sets the maximum number of logon tokens to cache.","nodes":[{"pos":[0,57],"content":"Gets or sets the maximum number of logon tokens to cache.","nodes":[{"content":"Gets or sets the maximum number of logon tokens to cache.","pos":[0,57]}]}],"pos":[16542,16600],"yaml":true},{"content":"The maximum number of logon tokens to cache.","nodes":[{"pos":[0,44],"content":"The maximum number of logon tokens to cache.","nodes":[{"content":"The maximum number of logon tokens to cache.","pos":[0,44]}]}],"pos":[16918,16963],"yaml":true},{"content":"Gets or sets a string that specifies the name of a member provider that provides password validation logic.","nodes":[{"pos":[0,107],"content":"Gets or sets a string that specifies the name of a member provider that provides password validation logic.","nodes":[{"content":"Gets or sets a string that specifies the name of a member provider that provides password validation logic.","pos":[0,107]}]}],"pos":[18318,18426],"yaml":true},{"content":"When using username `ClientCredentialType` on a binding, the usernames are mapped to Windows accounts by default. It is possible to override this behavior using this property, which provides the name of the <xref:System.Web.Security.MembershipProvider> that specifies the relevant password validation logic.","nodes":[{"pos":[0,307],"content":"When using username `ClientCredentialType` on a binding, the usernames are mapped to Windows accounts by default. It is possible to override this behavior using this property, which provides the name of the <xref:System.Web.Security.MembershipProvider> that specifies the relevant password validation logic.","nodes":[{"content":"When using username <ph id=\"ph1\">`ClientCredentialType`</ph> on a binding, the usernames are mapped to Windows accounts by default.","pos":[0,113],"source":"When using username `ClientCredentialType` on a binding, the usernames are mapped to Windows accounts by default."},{"content":"It is possible to override this behavior using this property, which provides the name of the <ph id=\"ph1\">&lt;xref:System.Web.Security.MembershipProvider&gt;</ph> that specifies the relevant password validation logic.","pos":[114,307],"source":" It is possible to override this behavior using this property, which provides the name of the <xref:System.Web.Security.MembershipProvider> that specifies the relevant password validation logic."}]}],"pos":[18437,18745],"yaml":true,"extradata":"MT"},{"content":"The name of a member provider that provides password validation logic.","nodes":[{"pos":[0,70],"content":"The name of a member provider that provides password validation logic.","nodes":[{"content":"The name of a member provider that provides password validation logic.","pos":[0,70]}]}],"pos":[19071,19142],"yaml":true},{"content":"Gets or sets the manner in which username password is validated.","nodes":[{"pos":[0,64],"content":"Gets or sets the manner in which username password is validated.","nodes":[{"content":"Gets or sets the manner in which username password is validated.","pos":[0,64]}]}],"pos":[21797,21862],"yaml":true},{"content":"A valid <xref href=\"System.ServiceModel.Security.UserNamePasswordValidationMode\"></xref> value.","nodes":[{"pos":[0,95],"content":"A valid <ph id=\"ph1\">&lt;xref href=\"System.ServiceModel.Security.UserNamePasswordValidationMode\"&gt;&lt;/xref&gt;</ph> value.","source":"A valid <xref href=\"System.ServiceModel.Security.UserNamePasswordValidationMode\"></xref> value."}],"pos":[22244,22340],"yaml":true}],"content":"### YamlMime:ManagedReference\nitems:\n- uid: System.ServiceModel.Configuration.UserNameServiceElement\n  commentId: T:System.ServiceModel.Configuration.UserNameServiceElement\n  id: UserNameServiceElement\n  children:\n  - System.ServiceModel.Configuration.UserNameServiceElement.#ctor\n  - System.ServiceModel.Configuration.UserNameServiceElement.CachedLogonTokenLifetime\n  - System.ServiceModel.Configuration.UserNameServiceElement.CacheLogonTokens\n  - System.ServiceModel.Configuration.UserNameServiceElement.Copy(System.ServiceModel.Configuration.UserNameServiceElement)\n  - System.ServiceModel.Configuration.UserNameServiceElement.CustomUserNamePasswordValidatorType\n  - System.ServiceModel.Configuration.UserNameServiceElement.IncludeWindowsGroups\n  - System.ServiceModel.Configuration.UserNameServiceElement.MaxCachedLogonTokens\n  - System.ServiceModel.Configuration.UserNameServiceElement.MembershipProviderName\n  - System.ServiceModel.Configuration.UserNameServiceElement.Properties\n  - System.ServiceModel.Configuration.UserNameServiceElement.UserNamePasswordValidationMode\n  langs:\n  - csharp\n  name: UserNameServiceElement\n  nameWithType: UserNameServiceElement\n  fullName: System.ServiceModel.Configuration.UserNameServiceElement\n  type: Class\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Configuration\n  summary: Represents a configuration element that specifies a service's credentials based on username and password. This class cannot be inherited.\n  syntax:\n    content: 'public sealed class UserNameServiceElement : System.Configuration.ConfigurationElement'\n  inheritance:\n  - System.Object\n  - System.Configuration.ConfigurationElement\n  implements: []\n  inheritedMembers:\n  - System.Configuration.ConfigurationElement.CurrentConfiguration\n  - System.Configuration.ConfigurationElement.DeserializeElement(System.Xml.XmlReader,System.Boolean)\n  - System.Configuration.ConfigurationElement.ElementInformation\n  - System.Configuration.ConfigurationElement.ElementProperty\n  - System.Configuration.ConfigurationElement.Equals(System.Object)\n  - System.Configuration.ConfigurationElement.EvaluationContext\n  - System.Configuration.ConfigurationElement.GetHashCode\n  - System.Configuration.ConfigurationElement.GetTransformedAssemblyString(System.String)\n  - System.Configuration.ConfigurationElement.GetTransformedTypeString(System.String)\n  - System.Configuration.ConfigurationElement.HasContext\n  - System.Configuration.ConfigurationElement.Init\n  - System.Configuration.ConfigurationElement.InitializeDefault\n  - System.Configuration.ConfigurationElement.IsModified\n  - System.Configuration.ConfigurationElement.IsReadOnly\n  - System.Configuration.ConfigurationElement.Item(System.Configuration.ConfigurationProperty)\n  - System.Configuration.ConfigurationElement.Item(System.String)\n  - System.Configuration.ConfigurationElement.ListErrors(System.Collections.IList)\n  - System.Configuration.ConfigurationElement.LockAllAttributesExcept\n  - System.Configuration.ConfigurationElement.LockAllElementsExcept\n  - System.Configuration.ConfigurationElement.LockAttributes\n  - System.Configuration.ConfigurationElement.LockElements\n  - System.Configuration.ConfigurationElement.LockItem\n  - System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedAttribute(System.String,System.String)\n  - System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)\n  - System.Configuration.ConfigurationElement.OnRequiredPropertyNotFound(System.String)\n  - System.Configuration.ConfigurationElement.PostDeserialize\n  - System.Configuration.ConfigurationElement.PreSerialize(System.Xml.XmlWriter)\n  - System.Configuration.ConfigurationElement.Reset(System.Configuration.ConfigurationElement)\n  - System.Configuration.ConfigurationElement.ResetModified\n  - System.Configuration.ConfigurationElement.SerializeElement(System.Xml.XmlWriter,System.Boolean)\n  - System.Configuration.ConfigurationElement.SerializeToXmlElement(System.Xml.XmlWriter,System.String)\n  - System.Configuration.ConfigurationElement.SetPropertyValue(System.Configuration.ConfigurationProperty,System.Object,System.Boolean)\n  - System.Configuration.ConfigurationElement.SetReadOnly\n  - System.Configuration.ConfigurationElement.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)\n  - System.Object.Equals(System.Object,System.Object)\n  - System.Object.GetType\n  - System.Object.MemberwiseClone\n  - System.Object.ReferenceEquals(System.Object,System.Object)\n  - System.Object.ToString\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Configuration/UserNameServiceElement.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Configuration.UserNameServiceElement.#ctor\n  commentId: M:System.ServiceModel.Configuration.UserNameServiceElement.#ctor\n  id: '#ctor'\n  parent: System.ServiceModel.Configuration.UserNameServiceElement\n  langs:\n  - csharp\n  name: UserNameServiceElement()\n  nameWithType: UserNameServiceElement.UserNameServiceElement()\n  fullName: UserNameServiceElement.UserNameServiceElement()\n  type: Constructor\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Configuration\n  summary: Initializes a new instance of the <xref href=\"System.ServiceModel.Configuration.UserNameServiceElement\"></xref> class.\n  syntax:\n    content: public UserNameServiceElement ();\n    parameters: []\n  overload: System.ServiceModel.Configuration.UserNameServiceElement.#ctor*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Configuration/UserNameServiceElement.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Configuration.UserNameServiceElement.CachedLogonTokenLifetime\n  commentId: P:System.ServiceModel.Configuration.UserNameServiceElement.CachedLogonTokenLifetime\n  id: CachedLogonTokenLifetime\n  parent: System.ServiceModel.Configuration.UserNameServiceElement\n  langs:\n  - csharp\n  name: CachedLogonTokenLifetime\n  nameWithType: UserNameServiceElement.CachedLogonTokenLifetime\n  fullName: UserNameServiceElement.CachedLogonTokenLifetime\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Configuration\n  summary: Gets or sets the maximum length of time a token is cached.\n  syntax:\n    content: >-\n      [System.ComponentModel.TypeConverter(typeof(System.ServiceModel.Configuration.TimeSpanOrInfiniteConverter))]\n\n      [System.Configuration.ConfigurationProperty(\"cachedLogonTokenLifetime\", DefaultValue=Mono.Cecil.CustomAttributeArgument)]\n\n      public TimeSpan CachedLogonTokenLifetime { get; set; }\n    return:\n      type: System.TimeSpan\n      description: A <xref href=\"System.TimeSpan\"></xref> that represents the maximum length of time a token is cached.\n  overload: System.ServiceModel.Configuration.UserNameServiceElement.CachedLogonTokenLifetime*\n  exceptions: []\n  attributes:\n  - type: System.ComponentModel.TypeConverterAttribute\n  - type: System.Configuration.ConfigurationPropertyAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Configuration/UserNameServiceElement.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Configuration.UserNameServiceElement.CacheLogonTokens\n  commentId: P:System.ServiceModel.Configuration.UserNameServiceElement.CacheLogonTokens\n  id: CacheLogonTokens\n  parent: System.ServiceModel.Configuration.UserNameServiceElement\n  langs:\n  - csharp\n  name: CacheLogonTokens\n  nameWithType: UserNameServiceElement.CacheLogonTokens\n  fullName: UserNameServiceElement.CacheLogonTokens\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Configuration\n  summary: Gets or sets a value that indicates whether logon tokens are cached.\n  syntax:\n    content: >-\n      [System.Configuration.ConfigurationProperty(\"cacheLogonTokens\", DefaultValue=Mono.Cecil.CustomAttributeArgument)]\n\n      public bool CacheLogonTokens { get; set; }\n    return:\n      type: System.Boolean\n      description: '`true` if logon tokens are cached; otherwise, `false`. The default is `false`.'\n  overload: System.ServiceModel.Configuration.UserNameServiceElement.CacheLogonTokens*\n  exceptions: []\n  attributes:\n  - type: System.Configuration.ConfigurationPropertyAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Configuration/UserNameServiceElement.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Configuration.UserNameServiceElement.Copy(System.ServiceModel.Configuration.UserNameServiceElement)\n  commentId: M:System.ServiceModel.Configuration.UserNameServiceElement.Copy(System.ServiceModel.Configuration.UserNameServiceElement)\n  id: Copy(System.ServiceModel.Configuration.UserNameServiceElement)\n  parent: System.ServiceModel.Configuration.UserNameServiceElement\n  langs:\n  - csharp\n  name: Copy(UserNameServiceElement)\n  nameWithType: UserNameServiceElement.Copy(UserNameServiceElement)\n  fullName: UserNameServiceElement.Copy(UserNameServiceElement)\n  type: Method\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Configuration\n  summary: Copies the content of the specified configuration element to this configuration element.\n  syntax:\n    content: public void Copy (System.ServiceModel.Configuration.UserNameServiceElement from);\n    parameters:\n    - id: from\n      type: System.ServiceModel.Configuration.UserNameServiceElement\n      description: The configuration element to be copied.\n  overload: System.ServiceModel.Configuration.UserNameServiceElement.Copy*\n  exceptions:\n  - type: System.ArgumentNullException\n    commentId: T:System.ArgumentNullException\n    description: <code>from</code> is `null`.\n  - type: System.Configuration.ConfigurationErrorsException\n    commentId: T:System.Configuration.ConfigurationErrorsException\n    description: The configuration file is read-only.\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Configuration/UserNameServiceElement.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Configuration.UserNameServiceElement.CustomUserNamePasswordValidatorType\n  commentId: P:System.ServiceModel.Configuration.UserNameServiceElement.CustomUserNamePasswordValidatorType\n  id: CustomUserNamePasswordValidatorType\n  parent: System.ServiceModel.Configuration.UserNameServiceElement\n  langs:\n  - csharp\n  name: CustomUserNamePasswordValidatorType\n  nameWithType: UserNameServiceElement.CustomUserNamePasswordValidatorType\n  fullName: UserNameServiceElement.CustomUserNamePasswordValidatorType\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Configuration\n  summary: Gets or sets the type of custom username password validator used.\n  syntax:\n    content: >-\n      [System.Configuration.ConfigurationProperty(\"customUserNamePasswordValidatorType\", DefaultValue=Mono.Cecil.CustomAttributeArgument)]\n\n      [System.Configuration.StringValidator(MinLength=0)]\n\n      public string CustomUserNamePasswordValidatorType { get; set; }\n    return:\n      type: System.String\n      description: The type of custom username password validator used.\n  overload: System.ServiceModel.Configuration.UserNameServiceElement.CustomUserNamePasswordValidatorType*\n  exceptions: []\n  attributes:\n  - type: System.Configuration.ConfigurationPropertyAttribute\n  - type: System.Configuration.StringValidatorAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Configuration/UserNameServiceElement.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Configuration.UserNameServiceElement.IncludeWindowsGroups\n  commentId: P:System.ServiceModel.Configuration.UserNameServiceElement.IncludeWindowsGroups\n  id: IncludeWindowsGroups\n  parent: System.ServiceModel.Configuration.UserNameServiceElement\n  langs:\n  - csharp\n  name: IncludeWindowsGroups\n  nameWithType: UserNameServiceElement.IncludeWindowsGroups\n  fullName: UserNameServiceElement.IncludeWindowsGroups\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Configuration\n  summary: Gets or sets a value that indicates whether Windows groups are included in the security context.\n  remarks: Setting this property to `true` has a performance impact as it results in a full group expansion. Set this property to `false` if you do not need to establish the list of groups a user belongs to.\n  syntax:\n    content: >-\n      [System.Configuration.ConfigurationProperty(\"includeWindowsGroups\", DefaultValue=Mono.Cecil.CustomAttributeArgument)]\n\n      public bool IncludeWindowsGroups { get; set; }\n    return:\n      type: System.Boolean\n      description: '`true` if Windows groups are included in the security context; otherwise, `false`. The default is `false`.'\n  overload: System.ServiceModel.Configuration.UserNameServiceElement.IncludeWindowsGroups*\n  exceptions: []\n  attributes:\n  - type: System.Configuration.ConfigurationPropertyAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Configuration/UserNameServiceElement.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Configuration.UserNameServiceElement.MaxCachedLogonTokens\n  commentId: P:System.ServiceModel.Configuration.UserNameServiceElement.MaxCachedLogonTokens\n  id: MaxCachedLogonTokens\n  parent: System.ServiceModel.Configuration.UserNameServiceElement\n  langs:\n  - csharp\n  name: MaxCachedLogonTokens\n  nameWithType: UserNameServiceElement.MaxCachedLogonTokens\n  fullName: UserNameServiceElement.MaxCachedLogonTokens\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Configuration\n  summary: Gets or sets the maximum number of logon tokens to cache.\n  syntax:\n    content: >-\n      [System.Configuration.ConfigurationProperty(\"maxCachedLogonTokens\", DefaultValue=Mono.Cecil.CustomAttributeArgument)]\n\n      [System.Configuration.IntegerValidator(MinValue=1)]\n\n      public int MaxCachedLogonTokens { get; set; }\n    return:\n      type: System.Int32\n      description: The maximum number of logon tokens to cache.\n  overload: System.ServiceModel.Configuration.UserNameServiceElement.MaxCachedLogonTokens*\n  exceptions: []\n  attributes:\n  - type: System.Configuration.ConfigurationPropertyAttribute\n  - type: System.Configuration.IntegerValidatorAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Configuration/UserNameServiceElement.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Configuration.UserNameServiceElement.MembershipProviderName\n  commentId: P:System.ServiceModel.Configuration.UserNameServiceElement.MembershipProviderName\n  id: MembershipProviderName\n  parent: System.ServiceModel.Configuration.UserNameServiceElement\n  langs:\n  - csharp\n  name: MembershipProviderName\n  nameWithType: UserNameServiceElement.MembershipProviderName\n  fullName: UserNameServiceElement.MembershipProviderName\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Configuration\n  summary: Gets or sets a string that specifies the name of a member provider that provides password validation logic.\n  remarks: When using username `ClientCredentialType` on a binding, the usernames are mapped to Windows accounts by default. It is possible to override this behavior using this property, which provides the name of the <xref:System.Web.Security.MembershipProvider> that specifies the relevant password validation logic.\n  syntax:\n    content: >-\n      [System.Configuration.ConfigurationProperty(\"membershipProviderName\", DefaultValue=Mono.Cecil.CustomAttributeArgument)]\n\n      [System.Configuration.StringValidator(MinLength=0)]\n\n      public string MembershipProviderName { get; set; }\n    return:\n      type: System.String\n      description: The name of a member provider that provides password validation logic.\n  overload: System.ServiceModel.Configuration.UserNameServiceElement.MembershipProviderName*\n  exceptions: []\n  attributes:\n  - type: System.Configuration.ConfigurationPropertyAttribute\n  - type: System.Configuration.StringValidatorAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Configuration/UserNameServiceElement.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\n- uid: System.ServiceModel.Configuration.UserNameServiceElement.Properties\n  commentId: P:System.ServiceModel.Configuration.UserNameServiceElement.Properties\n  id: Properties\n  parent: System.ServiceModel.Configuration.UserNameServiceElement\n  langs:\n  - csharp\n  name: Properties\n  nameWithType: UserNameServiceElement.Properties\n  fullName: UserNameServiceElement.Properties\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Configuration\n  syntax:\n    content: protected override System.Configuration.ConfigurationPropertyCollection Properties { get; }\n    return:\n      type: System.Configuration.ConfigurationPropertyCollection\n      description: ''\n  overload: System.ServiceModel.Configuration.UserNameServiceElement.Properties*\n  exceptions: []\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Configuration/UserNameServiceElement.xml\n- uid: System.ServiceModel.Configuration.UserNameServiceElement.UserNamePasswordValidationMode\n  commentId: P:System.ServiceModel.Configuration.UserNameServiceElement.UserNamePasswordValidationMode\n  id: UserNamePasswordValidationMode\n  parent: System.ServiceModel.Configuration.UserNameServiceElement\n  langs:\n  - csharp\n  name: UserNamePasswordValidationMode\n  nameWithType: UserNameServiceElement.UserNamePasswordValidationMode\n  fullName: UserNameServiceElement.UserNamePasswordValidationMode\n  type: Property\n  assemblies:\n  - System.ServiceModel\n  namespace: System.ServiceModel.Configuration\n  summary: Gets or sets the manner in which username password is validated.\n  syntax:\n    content: >-\n      [System.Configuration.ConfigurationProperty(\"userNamePasswordValidationMode\", DefaultValue=Mono.Cecil.CustomAttributeArgument)]\n\n      public System.ServiceModel.Security.UserNamePasswordValidationMode UserNamePasswordValidationMode { get; set; }\n    return:\n      type: System.ServiceModel.Security.UserNamePasswordValidationMode\n      description: A valid <xref href=\"System.ServiceModel.Security.UserNamePasswordValidationMode\"></xref> value.\n  overload: System.ServiceModel.Configuration.UserNameServiceElement.UserNamePasswordValidationMode*\n  exceptions: []\n  attributes:\n  - type: System.Configuration.ConfigurationPropertyAttribute\n  version:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Configuration/UserNameServiceElement.xml\n  ms.technology:\n  - dotnet-standard\n  author: Erikre\n  ms.author: erikre\n  manager: erikre\nreferences:\n- uid: System.Configuration.ConfigurationElement\n  parent: System.Configuration\n  isExternal: false\n  name: ConfigurationElement\n  nameWithType: ConfigurationElement\n  fullName: System.Configuration.ConfigurationElement\n- uid: System.ArgumentNullException\n  parent: System\n  isExternal: false\n  name: ArgumentNullException\n  nameWithType: ArgumentNullException\n  fullName: System.ArgumentNullException\n- uid: System.Configuration.ConfigurationErrorsException\n  parent: System.Configuration\n  isExternal: false\n  name: ConfigurationErrorsException\n  nameWithType: ConfigurationErrorsException\n  fullName: System.Configuration.ConfigurationErrorsException\n- uid: System.ServiceModel.Configuration.UserNameServiceElement.#ctor\n  parent: System.ServiceModel.Configuration.UserNameServiceElement\n  isExternal: false\n  name: UserNameServiceElement()\n  nameWithType: UserNameServiceElement.UserNameServiceElement()\n  fullName: UserNameServiceElement.UserNameServiceElement()\n- uid: System.ServiceModel.Configuration.UserNameServiceElement.CachedLogonTokenLifetime\n  parent: System.ServiceModel.Configuration.UserNameServiceElement\n  isExternal: false\n  name: CachedLogonTokenLifetime\n  nameWithType: UserNameServiceElement.CachedLogonTokenLifetime\n  fullName: UserNameServiceElement.CachedLogonTokenLifetime\n- uid: System.TimeSpan\n  parent: System\n  isExternal: false\n  name: TimeSpan\n  nameWithType: TimeSpan\n  fullName: System.TimeSpan\n- uid: System.ServiceModel.Configuration.UserNameServiceElement.CacheLogonTokens\n  parent: System.ServiceModel.Configuration.UserNameServiceElement\n  isExternal: false\n  name: CacheLogonTokens\n  nameWithType: UserNameServiceElement.CacheLogonTokens\n  fullName: UserNameServiceElement.CacheLogonTokens\n- uid: System.Boolean\n  parent: System\n  isExternal: false\n  name: Boolean\n  nameWithType: Boolean\n  fullName: System.Boolean\n- uid: System.ServiceModel.Configuration.UserNameServiceElement.Copy(System.ServiceModel.Configuration.UserNameServiceElement)\n  parent: System.ServiceModel.Configuration.UserNameServiceElement\n  isExternal: false\n  name: Copy(UserNameServiceElement)\n  nameWithType: UserNameServiceElement.Copy(UserNameServiceElement)\n  fullName: UserNameServiceElement.Copy(UserNameServiceElement)\n- uid: System.ServiceModel.Configuration.UserNameServiceElement\n  parent: System.ServiceModel.Configuration\n  isExternal: false\n  name: UserNameServiceElement\n  nameWithType: UserNameServiceElement\n  fullName: System.ServiceModel.Configuration.UserNameServiceElement\n- uid: System.ServiceModel.Configuration.UserNameServiceElement.CustomUserNamePasswordValidatorType\n  parent: System.ServiceModel.Configuration.UserNameServiceElement\n  isExternal: false\n  name: CustomUserNamePasswordValidatorType\n  nameWithType: UserNameServiceElement.CustomUserNamePasswordValidatorType\n  fullName: UserNameServiceElement.CustomUserNamePasswordValidatorType\n- uid: System.String\n  parent: System\n  isExternal: false\n  name: String\n  nameWithType: String\n  fullName: System.String\n- uid: System.ServiceModel.Configuration.UserNameServiceElement.IncludeWindowsGroups\n  parent: System.ServiceModel.Configuration.UserNameServiceElement\n  isExternal: false\n  name: IncludeWindowsGroups\n  nameWithType: UserNameServiceElement.IncludeWindowsGroups\n  fullName: UserNameServiceElement.IncludeWindowsGroups\n- uid: System.ServiceModel.Configuration.UserNameServiceElement.MaxCachedLogonTokens\n  parent: System.ServiceModel.Configuration.UserNameServiceElement\n  isExternal: false\n  name: MaxCachedLogonTokens\n  nameWithType: UserNameServiceElement.MaxCachedLogonTokens\n  fullName: UserNameServiceElement.MaxCachedLogonTokens\n- uid: System.Int32\n  parent: System\n  isExternal: false\n  name: Int32\n  nameWithType: Int32\n  fullName: System.Int32\n- uid: System.ServiceModel.Configuration.UserNameServiceElement.MembershipProviderName\n  parent: System.ServiceModel.Configuration.UserNameServiceElement\n  isExternal: false\n  name: MembershipProviderName\n  nameWithType: UserNameServiceElement.MembershipProviderName\n  fullName: UserNameServiceElement.MembershipProviderName\n- uid: System.ServiceModel.Configuration.UserNameServiceElement.Properties\n  parent: System.ServiceModel.Configuration.UserNameServiceElement\n  isExternal: false\n  name: Properties\n  nameWithType: UserNameServiceElement.Properties\n  fullName: UserNameServiceElement.Properties\n- uid: System.Configuration.ConfigurationPropertyCollection\n  parent: System.Configuration\n  isExternal: false\n  name: ConfigurationPropertyCollection\n  nameWithType: ConfigurationPropertyCollection\n  fullName: System.Configuration.ConfigurationPropertyCollection\n- uid: System.ServiceModel.Configuration.UserNameServiceElement.UserNamePasswordValidationMode\n  parent: System.ServiceModel.Configuration.UserNameServiceElement\n  isExternal: false\n  name: UserNamePasswordValidationMode\n  nameWithType: UserNameServiceElement.UserNamePasswordValidationMode\n  fullName: UserNameServiceElement.UserNamePasswordValidationMode\n- uid: System.ServiceModel.Security.UserNamePasswordValidationMode\n  parent: System.ServiceModel.Security\n  isExternal: false\n  name: UserNamePasswordValidationMode\n  nameWithType: UserNamePasswordValidationMode\n  fullName: System.ServiceModel.Security.UserNamePasswordValidationMode\n- uid: System.ServiceModel.Configuration.UserNameServiceElement.#ctor*\n  parent: System.ServiceModel.Configuration.UserNameServiceElement\n  isExternal: false\n  name: UserNameServiceElement\n  nameWithType: UserNameServiceElement.UserNameServiceElement\n  fullName: UserNameServiceElement.UserNameServiceElement\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Configuration/UserNameServiceElement.xml\n- uid: System.ServiceModel.Configuration.UserNameServiceElement.CachedLogonTokenLifetime*\n  parent: System.ServiceModel.Configuration.UserNameServiceElement\n  isExternal: false\n  name: CachedLogonTokenLifetime\n  nameWithType: UserNameServiceElement.CachedLogonTokenLifetime\n  fullName: UserNameServiceElement.CachedLogonTokenLifetime\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Configuration/UserNameServiceElement.xml\n- uid: System.ServiceModel.Configuration.UserNameServiceElement.CacheLogonTokens*\n  parent: System.ServiceModel.Configuration.UserNameServiceElement\n  isExternal: false\n  name: CacheLogonTokens\n  nameWithType: UserNameServiceElement.CacheLogonTokens\n  fullName: UserNameServiceElement.CacheLogonTokens\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Configuration/UserNameServiceElement.xml\n- uid: System.ServiceModel.Configuration.UserNameServiceElement.Copy*\n  parent: System.ServiceModel.Configuration.UserNameServiceElement\n  isExternal: false\n  name: Copy\n  nameWithType: UserNameServiceElement.Copy\n  fullName: UserNameServiceElement.Copy\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Configuration/UserNameServiceElement.xml\n- uid: System.ServiceModel.Configuration.UserNameServiceElement.CustomUserNamePasswordValidatorType*\n  parent: System.ServiceModel.Configuration.UserNameServiceElement\n  isExternal: false\n  name: CustomUserNamePasswordValidatorType\n  nameWithType: UserNameServiceElement.CustomUserNamePasswordValidatorType\n  fullName: UserNameServiceElement.CustomUserNamePasswordValidatorType\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Configuration/UserNameServiceElement.xml\n- uid: System.ServiceModel.Configuration.UserNameServiceElement.IncludeWindowsGroups*\n  parent: System.ServiceModel.Configuration.UserNameServiceElement\n  isExternal: false\n  name: IncludeWindowsGroups\n  nameWithType: UserNameServiceElement.IncludeWindowsGroups\n  fullName: UserNameServiceElement.IncludeWindowsGroups\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Configuration/UserNameServiceElement.xml\n- uid: System.ServiceModel.Configuration.UserNameServiceElement.MaxCachedLogonTokens*\n  parent: System.ServiceModel.Configuration.UserNameServiceElement\n  isExternal: false\n  name: MaxCachedLogonTokens\n  nameWithType: UserNameServiceElement.MaxCachedLogonTokens\n  fullName: UserNameServiceElement.MaxCachedLogonTokens\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Configuration/UserNameServiceElement.xml\n- uid: System.ServiceModel.Configuration.UserNameServiceElement.MembershipProviderName*\n  parent: System.ServiceModel.Configuration.UserNameServiceElement\n  isExternal: false\n  name: MembershipProviderName\n  nameWithType: UserNameServiceElement.MembershipProviderName\n  fullName: UserNameServiceElement.MembershipProviderName\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Configuration/UserNameServiceElement.xml\n- uid: System.ServiceModel.Configuration.UserNameServiceElement.Properties*\n  parent: System.ServiceModel.Configuration.UserNameServiceElement\n  isExternal: false\n  name: Properties\n  nameWithType: UserNameServiceElement.Properties\n  fullName: UserNameServiceElement.Properties\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Configuration/UserNameServiceElement.xml\n- uid: System.ServiceModel.Configuration.UserNameServiceElement.UserNamePasswordValidationMode*\n  parent: System.ServiceModel.Configuration.UserNameServiceElement\n  isExternal: false\n  name: UserNamePasswordValidationMode\n  nameWithType: UserNameServiceElement.UserNamePasswordValidationMode\n  fullName: UserNameServiceElement.UserNamePasswordValidationMode\n  monikers:\n  - netframework-4.5.1\n  - netframework-4.5.2\n  - netframework-4.5\n  - netframework-4.6.1\n  - netframework-4.6.2\n  - netframework-4.6\n  - netframework-4.7\n  content_git_url: https://github.com/dotnet/docs/blob/master/xml/System.ServiceModel.Configuration/UserNameServiceElement.xml\n- uid: System.Configuration.ConfigurationElement.Equals(System.Object)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: Equals(Object)\n  nameWithType: ConfigurationElement.Equals(Object)\n  fullName: ConfigurationElement.Equals(Object)\n- uid: System.Object.Equals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: Equals(Object, Object)\n  nameWithType: Object.Equals(Object, Object)\n  fullName: Object.Equals(Object, Object)\n- uid: System.Configuration.ConfigurationElement.GetHashCode\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: GetHashCode()\n  nameWithType: ConfigurationElement.GetHashCode()\n  fullName: ConfigurationElement.GetHashCode()\n- uid: System.Object.GetType\n  parent: System.Object\n  isExternal: false\n  name: GetType()\n  nameWithType: Object.GetType()\n  fullName: Object.GetType()\n- uid: System.Object.MemberwiseClone\n  parent: System.Object\n  isExternal: false\n  name: MemberwiseClone()\n  nameWithType: Object.MemberwiseClone()\n  fullName: Object.MemberwiseClone()\n- uid: System.Object.ReferenceEquals(System.Object,System.Object)\n  parent: System.Object\n  isExternal: false\n  name: ReferenceEquals(Object, Object)\n  nameWithType: Object.ReferenceEquals(Object, Object)\n  fullName: Object.ReferenceEquals(Object, Object)\n- uid: System.Object.ToString\n  parent: System.Object\n  isExternal: false\n  name: ToString()\n  nameWithType: Object.ToString()\n  fullName: Object.ToString()\n- uid: System.Configuration.ConfigurationElement.CurrentConfiguration\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: CurrentConfiguration\n  nameWithType: ConfigurationElement.CurrentConfiguration\n  fullName: ConfigurationElement.CurrentConfiguration\n- uid: System.Configuration.ConfigurationElement.DeserializeElement(System.Xml.XmlReader,System.Boolean)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: DeserializeElement(XmlReader, Boolean)\n  nameWithType: ConfigurationElement.DeserializeElement(XmlReader, Boolean)\n  fullName: ConfigurationElement.DeserializeElement(XmlReader, Boolean)\n- uid: System.Configuration.ConfigurationElement.ElementInformation\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: ElementInformation\n  nameWithType: ConfigurationElement.ElementInformation\n  fullName: ConfigurationElement.ElementInformation\n- uid: System.Configuration.ConfigurationElement.ElementProperty\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: ElementProperty\n  nameWithType: ConfigurationElement.ElementProperty\n  fullName: ConfigurationElement.ElementProperty\n- uid: System.Configuration.ConfigurationElement.EvaluationContext\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: EvaluationContext\n  nameWithType: ConfigurationElement.EvaluationContext\n  fullName: ConfigurationElement.EvaluationContext\n- uid: System.Configuration.ConfigurationElement.GetTransformedAssemblyString(System.String)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: GetTransformedAssemblyString(String)\n  nameWithType: ConfigurationElement.GetTransformedAssemblyString(String)\n  fullName: ConfigurationElement.GetTransformedAssemblyString(String)\n- uid: System.Configuration.ConfigurationElement.GetTransformedTypeString(System.String)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: GetTransformedTypeString(String)\n  nameWithType: ConfigurationElement.GetTransformedTypeString(String)\n  fullName: ConfigurationElement.GetTransformedTypeString(String)\n- uid: System.Configuration.ConfigurationElement.HasContext\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: HasContext\n  nameWithType: ConfigurationElement.HasContext\n  fullName: ConfigurationElement.HasContext\n- uid: System.Configuration.ConfigurationElement.Init\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: Init()\n  nameWithType: ConfigurationElement.Init()\n  fullName: ConfigurationElement.Init()\n- uid: System.Configuration.ConfigurationElement.InitializeDefault\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: InitializeDefault()\n  nameWithType: ConfigurationElement.InitializeDefault()\n  fullName: ConfigurationElement.InitializeDefault()\n- uid: System.Configuration.ConfigurationElement.IsModified\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: IsModified()\n  nameWithType: ConfigurationElement.IsModified()\n  fullName: ConfigurationElement.IsModified()\n- uid: System.Configuration.ConfigurationElement.IsReadOnly\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: IsReadOnly()\n  nameWithType: ConfigurationElement.IsReadOnly()\n  fullName: ConfigurationElement.IsReadOnly()\n- uid: System.Configuration.ConfigurationElement.Item(System.Configuration.ConfigurationProperty)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: Item(ConfigurationProperty)\n  nameWithType: ConfigurationElement.Item(ConfigurationProperty)\n  fullName: ConfigurationElement.Item(ConfigurationProperty)\n- uid: System.Configuration.ConfigurationElement.Item(System.String)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: Item(String)\n  nameWithType: ConfigurationElement.Item(String)\n  fullName: ConfigurationElement.Item(String)\n- uid: System.Configuration.ConfigurationElement.ListErrors(System.Collections.IList)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: ListErrors(IList)\n  nameWithType: ConfigurationElement.ListErrors(IList)\n  fullName: ConfigurationElement.ListErrors(IList)\n- uid: System.Configuration.ConfigurationElement.LockAllAttributesExcept\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: LockAllAttributesExcept\n  nameWithType: ConfigurationElement.LockAllAttributesExcept\n  fullName: ConfigurationElement.LockAllAttributesExcept\n- uid: System.Configuration.ConfigurationElement.LockAllElementsExcept\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: LockAllElementsExcept\n  nameWithType: ConfigurationElement.LockAllElementsExcept\n  fullName: ConfigurationElement.LockAllElementsExcept\n- uid: System.Configuration.ConfigurationElement.LockAttributes\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: LockAttributes\n  nameWithType: ConfigurationElement.LockAttributes\n  fullName: ConfigurationElement.LockAttributes\n- uid: System.Configuration.ConfigurationElement.LockElements\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: LockElements\n  nameWithType: ConfigurationElement.LockElements\n  fullName: ConfigurationElement.LockElements\n- uid: System.Configuration.ConfigurationElement.LockItem\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: LockItem\n  nameWithType: ConfigurationElement.LockItem\n  fullName: ConfigurationElement.LockItem\n- uid: System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedAttribute(System.String,System.String)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: OnDeserializeUnrecognizedAttribute(String, String)\n  nameWithType: ConfigurationElement.OnDeserializeUnrecognizedAttribute(String, String)\n  fullName: ConfigurationElement.OnDeserializeUnrecognizedAttribute(String, String)\n- uid: System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: OnDeserializeUnrecognizedElement(String, XmlReader)\n  nameWithType: ConfigurationElement.OnDeserializeUnrecognizedElement(String, XmlReader)\n  fullName: ConfigurationElement.OnDeserializeUnrecognizedElement(String, XmlReader)\n- uid: System.Configuration.ConfigurationElement.OnRequiredPropertyNotFound(System.String)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: OnRequiredPropertyNotFound(String)\n  nameWithType: ConfigurationElement.OnRequiredPropertyNotFound(String)\n  fullName: ConfigurationElement.OnRequiredPropertyNotFound(String)\n- uid: System.Configuration.ConfigurationElement.PostDeserialize\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: PostDeserialize()\n  nameWithType: ConfigurationElement.PostDeserialize()\n  fullName: ConfigurationElement.PostDeserialize()\n- uid: System.Configuration.ConfigurationElement.PreSerialize(System.Xml.XmlWriter)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: PreSerialize(XmlWriter)\n  nameWithType: ConfigurationElement.PreSerialize(XmlWriter)\n  fullName: ConfigurationElement.PreSerialize(XmlWriter)\n- uid: System.Configuration.ConfigurationElement.Reset(System.Configuration.ConfigurationElement)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: Reset(ConfigurationElement)\n  nameWithType: ConfigurationElement.Reset(ConfigurationElement)\n  fullName: ConfigurationElement.Reset(ConfigurationElement)\n- uid: System.Configuration.ConfigurationElement.ResetModified\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: ResetModified()\n  nameWithType: ConfigurationElement.ResetModified()\n  fullName: ConfigurationElement.ResetModified()\n- uid: System.Configuration.ConfigurationElement.SerializeElement(System.Xml.XmlWriter,System.Boolean)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: SerializeElement(XmlWriter, Boolean)\n  nameWithType: ConfigurationElement.SerializeElement(XmlWriter, Boolean)\n  fullName: ConfigurationElement.SerializeElement(XmlWriter, Boolean)\n- uid: System.Configuration.ConfigurationElement.SerializeToXmlElement(System.Xml.XmlWriter,System.String)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: SerializeToXmlElement(XmlWriter, String)\n  nameWithType: ConfigurationElement.SerializeToXmlElement(XmlWriter, String)\n  fullName: ConfigurationElement.SerializeToXmlElement(XmlWriter, String)\n- uid: System.Configuration.ConfigurationElement.SetPropertyValue(System.Configuration.ConfigurationProperty,System.Object,System.Boolean)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: SetPropertyValue(ConfigurationProperty, Object, Boolean)\n  nameWithType: ConfigurationElement.SetPropertyValue(ConfigurationProperty, Object, Boolean)\n  fullName: ConfigurationElement.SetPropertyValue(ConfigurationProperty, Object, Boolean)\n- uid: System.Configuration.ConfigurationElement.SetReadOnly\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: SetReadOnly()\n  nameWithType: ConfigurationElement.SetReadOnly()\n  fullName: ConfigurationElement.SetReadOnly()\n- uid: System.Configuration.ConfigurationElement.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)\n  parent: System.Configuration.ConfigurationElement\n  isExternal: false\n  name: Unmerge(ConfigurationElement, ConfigurationElement, ConfigurationSaveMode)\n  nameWithType: ConfigurationElement.Unmerge(ConfigurationElement, ConfigurationElement, ConfigurationSaveMode)\n  fullName: ConfigurationElement.Unmerge(ConfigurationElement, ConfigurationElement, ConfigurationSaveMode)\n"}